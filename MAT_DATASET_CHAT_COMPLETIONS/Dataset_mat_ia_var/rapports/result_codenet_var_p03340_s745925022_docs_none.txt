================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
result = 0
i = 0
x = 0
for j in range(n):
    while x < n and (i & a[x]) == 0:
        i += a[x]
        x += 1
    result += x - j
    i -= a[j]
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034722555428743362
    2. '[a' → logprob: -6.503472328186035
    3. 'a' → logprob: -7.628472328186035
    4. '[i' → logprob: -7.878472328186035
    5. '+' → logprob: -8.253472328186035
    6. '[n' → logprob: -8.378472328186035
    7. '[:]' → logprob: -9.378472328186035
    8. '.' → logprob: -9.503472328186035
    9. '\[' → logprob: -9.503472328186035
    10. '=' → logprob: -9.628472328186035

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.718782365322113
    2. ' []' → logprob: -0.843782365322113
    3. 'list' → logprob: -3.718782424926758
    4. ' [' → logprob: -3.718782424926758
    5. '[' → logprob: -4.593782424926758
    6. '[int' → logprob: -4.718782424926758
    7. ' list' → logprob: -4.843782424926758
    8. '[input' → logprob: -6.218782424926758
    9. 'a' → logprob: -6.718782424926758
    10. 'n' → logprob: -6.843782424926758

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023174879606813192
    2. '(a' → logprob: -6.377317428588867
    3. '()' → logprob: -8.252317428588867
    4. '(range' → logprob: -8.377317428588867
    5. '(input' → logprob: -9.627317428588867
    6. '(int' → logprob: -11.877317428588867
    7. '(
' → logprob: -12.252317428588867
    8. '(n' → logprob: -12.377317428588867
    9. 'a' → logprob: -12.377317428588867
    10. '(`' → logprob: -12.502317428588867

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1086728647351265
    2. '(' → logprob: -2.483672857284546
    3. '(str' → logprob: -4.483673095703125
    4. ')' → logprob: -5.858673095703125
    5. '(lambda' → logprob: -6.358673095703125
    6. '(input' → logprob: -6.483673095703125
    7. 'int' → logprob: -7.483673095703125
    8. '```' → logprob: -8.108673095703125
    9. '<int' → logprob: -8.358673095703125
    10. '(eval' → logprob: -8.483673095703125

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004734257236123085
    2. '(' → logprob: -5.879734039306641
    3. '))' → logprob: -7.129734039306641
    4. ',input' → logprob: -7.379734039306641
    5. 'input' → logprob: -8.62973403930664
    6. ')' → logprob: -8.75473403930664
    7. '=input' → logprob: -9.62973403930664
    8. '[input' → logprob: -11.37973403930664
    9. '(user' → logprob: -11.75473403930664
    10. ')))' → logprob: -12.00473403930664

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006735026836395264
    2. ' input' → logprob: -5.006734848022461
    3. '(input' → logprob: -10.881734848022461
    4. ',input' → logprob: -15.131734848022461
    5. ')' → logprob: -15.506734848022461
    6. '=input' → logprob: -15.631734848022461
    7. '	input' → logprob: -16.25673484802246
    8. '<input' → logprob: -17.25673484802246
    9. '_input' → logprob: -18.00673484802246
    10. '))' → logprob: -18.00673484802246

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.9928053617477417
    2. '())' → logprob: -1.1178053617477417
    3. '()' → logprob: -1.3678053617477417
    4. '().' → logprob: -3.1178054809570312
    5. '(' → logprob: -6.367805480957031
    6. '()));' → logprob: -7.367805480957031
    7. ')' → logprob: -7.742805480957031
    8. '())))' → logprob: -8.492805480957031
    9. '()>' → logprob: -9.242805480957031
    10. '());' → logprob: -9.242805480957031

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000573167169932276
    2. 'strip' → logprob: -7.50057315826416
    3. 'rstrip' → logprob: -10.87557315826416
    4. ' split' → logprob: -13.87557315826416
    5. '(split' → logprob: -15.75057315826416
    6. 'spl' → logprob: -16.500574111938477
    7. ')' → logprob: -18.375574111938477
    8. 's' → logprob: -18.500574111938477
    9. 'sp' → logprob: -19.250574111938477
    10. 'replace' → logprob: -19.875574111938477

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8037156462669373
    2. '()))' → logprob: -0.8037156462669373
    3. ')' → logprob: -2.928715705871582
    4. '())' → logprob: -3.178715705871582
    5. '(' → logprob: -5.178715705871582
    6. '()' → logprob: -6.053715705871582
    7. '('' → logprob: -7.303715705871582
    8. ')))' → logprob: -7.803715705871582
    9. ''))' → logprob: -8.553715705871582
    10. '())))' → logprob: -9.053715705871582

Token 15: 'result' (ID: 2521)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6970422863960266
    2. 's' → logprob: -0.9470422863960266
    3. 'c' → logprob: -3.322042226791382
    4. 'for' → logprob: -3.822042226791382
    5. 'sum' → logprob: -4.322042465209961
    6. 'count' → logprob: -4.697042465209961
    7. 'm' → logprob: -4.822042465209961
    8. 'b' → logprob: -4.822042465209961
    9. 'result' → logprob: -5.072042465209961
    10. 'd' → logprob: -6.572042465209961

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6772951483726501
    2. '.' → logprob: -1.052295207977295
    3. '(' → logprob: -2.427295207977295
    4. '_' → logprob: -3.802295207977295
    5. '=' → logprob: -4.677295207977295
    6. '.append' → logprob: -4.802295207977295
    7. '[:]' → logprob: -4.802295207977295
    8. '[]' → logprob: -6.802295207977295
    9. ' =' → logprob: -7.052295207977295
    10. ')' → logprob: -7.177295207977295

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3016056418418884
    2. ' ' → logprob: -2.301605701446533
    3. ' []' → logprob: -2.551605701446533
    4. 'a' → logprob: -3.801605701446533
    5. '[]' → logprob: -3.926605701446533
    6. '[' → logprob: -4.426605701446533
    7. ' max' → logprob: -4.801605701446533
    8. ' a' → logprob: -4.801605701446533
    9. 'max' → logprob: -5.426605701446533
    10. ' [' → logprob: -5.801605701446533

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9238126873970032
    2. '[]' → logprob: -1.0488126277923584
    3. 'max' → logprob: -2.2988126277923584
    4. 'sum' → logprob: -2.4238126277923584
    5. '[' → logprob: -3.1738126277923584
    6. 'a' → logprob: -4.2988128662109375
    7. '[max' → logprob: -5.0488128662109375
    8. '[a' → logprob: -7.2988128662109375
    9. 'min' → logprob: -7.4238128662109375
    10. '[min' → logprob: -8.673812866210938

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0041407374665141106
    2. ' for' → logprob: -5.754140853881836
    3. '\n' → logprob: -7.254140853881836
    4. '
' → logprob: -9.379140853881836
    5. '```' → logprob: -10.129140853881836
    6. '\' → logprob: -10.379140853881836
    7. 'i' → logprob: -10.379140853881836
    8. 'a' → logprob: -11.129140853881836
    9. ')' → logprob: -11.379140853881836
    10. 'n' → logprob: -11.504140853881836

Token 20: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0206720617134124e-05
    2. ' for' → logprob: -12.00001049041748
    3. '```' → logprob: -13.75001049041748
    4. '\n' → logprob: -13.87501049041748
    5. 'f' → logprob: -14.00001049041748
    6. '
' → logprob: -14.50001049041748
    7. 'i' → logprob: -15.87501049041748
    8. '\' → logprob: -16.000009536743164
    9. '`' → logprob: -16.250009536743164
    10. '' → logprob: -17.000009536743164

Token 21: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9642763137817383
    2. 'n' → logprob: -1.7142763137817383
    3. ' +=' → logprob: -1.7142763137817383
    4. ' ' → logprob: -2.4642763137817383
    5. '=' → logprob: -2.7142763137817383
    6. 'f' → logprob: -2.8392763137817383
    7. ' =' → logprob: -3.5892763137817383
    8. 's' → logprob: -5.214276313781738
    9. '+=' → logprob: -5.339276313781738
    10. ' n' → logprob: -5.339276313781738

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062168221920728683
    2. ' ' → logprob: -2.8121681213378906
    3. '1' → logprob: -8.56216812133789
    4. '2' → logprob: -12.68716812133789
    5. 'n' → logprob: -13.31216812133789
    6. ' n' → logprob: -14.06216812133789
    7. 'i' → logprob: -14.12466812133789
    8. ' i' → logprob: -14.43716812133789
    9. ')' → logprob: -14.62466812133789
    10. '+' → logprob: -15.37466812133789

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008999908342957497
    2. ' ' → logprob: -4.758999824523926
    3. '1' → logprob: -8.008999824523926
    4. 'n' → logprob: -10.383999824523926
    5. '2' → logprob: -11.383999824523926
    6. ' n' → logprob: -12.883999824523926
    7. 'len' → logprob: -13.133999824523926
    8. 'a' → logprob: -13.758999824523926
    9. 'i' → logprob: -14.383999824523926
    10. '-' → logprob: -14.446499824523926

Token 24: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2693837285041809
    2. ' while' → logprob: -1.5193836688995361
    3. ' ' → logprob: -4.894383907318115
    4. '<|end|>' → logprob: -5.269383907318115
    5. ':' → logprob: -6.769383907318115
    6. ',' → logprob: -7.394383907318115
    7. '
' → logprob: -7.769383907318115
    8. '```' → logprob: -7.894383907318115
    9. '\' → logprob: -8.269383430480957
    10. '\n' → logprob: -8.394383430480957

Token 25: 'x' (ID: 87)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7517040967941284
    2. ' ' → logprob: -1.0017040967941284
    3. ' while' → logprob: -2.126704216003418
    4. '<|end|>' → logprob: -3.626704216003418
    5. '
' → logprob: -5.376704216003418
    6. ' 
' → logprob: -6.001704216003418
    7. ',' → logprob: -6.251704216003418
    8. ' ,' → logprob: -6.751704216003418
    9. ')' → logprob: -7.126704216003418
    10. ''' → logprob: -7.376704216003418

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33820271492004395
    2. ' ' → logprob: -2.338202714920044
    3. ' =' → logprob: -2.588202714920044
    4. '[' → logprob: -3.088202714920044
    5. 'n' → logprob: -3.838202714920044
    6. '+' → logprob: -3.838202714920044
    7. ' +=' → logprob: -4.463202476501465
    8. 'f' → logprob: -5.338202476501465
    9. '+=' → logprob: -6.338202476501465
    10. 's' → logprob: -6.838202476501465

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4407958984375
    2. ' ' → logprob: -1.6907958984375
    3. 'a' → logprob: -2.0657958984375
    4. ' a' → logprob: -3.6907958984375
    5. '1' → logprob: -4.1907958984375
    6. ' n' → logprob: -6.6907958984375
    7. 'n' → logprob: -6.8157958984375
    8. 'i' → logprob: -7.3157958984375
    9. '100' → logprob: -7.6907958984375
    10. ' i' → logprob: -7.8157958984375

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3120580315589905
    2. 'a' → logprob: -1.4370579719543457
    3. '1' → logprob: -3.9370579719543457
    4. 'n' → logprob: -5.187057971954346
    5. 'i' → logprob: -6.062057971954346
    6. 'len' → logprob: -7.187057971954346
    7. ' ' → logprob: -7.687057971954346
    8. '100' → logprob: -7.937057971954346
    9. '-' → logprob: -8.062058448791504
    10. '10' → logprob: -8.437058448791504

Token 29: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7687734961509705
    2. '
' → logprob: -1.0187735557556152
    3. ' while' → logprob: -2.1437735557556152
    4. ' ' → logprob: -4.018773555755615
    5. '<|end|>' → logprob: -4.018773555755615
    6. ' 
' → logprob: -4.893773555755615
    7. '\n' → logprob: -6.143773555755615
    8. '' → logprob: -6.393773555755615
    9. ',' → logprob: -6.643773555755615
    10. 'x' → logprob: -6.768773555755615

Token 30: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3854181170463562
    2. 'w' → logprob: -2.010418176651001
    3. ' ' → logprob: -2.385418176651001
    4. ' while' → logprob: -2.760418176651001
    5. ':' → logprob: -4.385417938232422
    6. '
' → logprob: -5.385417938232422
    7. ',' → logprob: -5.510417938232422
    8. ' 
' → logprob: -6.260417938232422
    9. 'n' → logprob: -6.510417938232422
    10. '+' → logprob: -7.135417938232422

Token 31: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004659861326217651
    2. ' i' → logprob: -6.129659652709961
    3. '  ' → logprob: -6.379659652709961
    4. ' n' → logprob: -8.379659652709961
    5. ' x' → logprob: -8.754659652709961
    6. 'i' → logprob: -9.504659652709961
    7. '_' → logprob: -9.629659652709961
    8. ' a' → logprob: -10.004659652709961
    9. ' ‌' → logprob: -10.254659652709961
    10. 'n' → logprob: -10.379659652709961

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02985670231282711
    2. 'in' → logprob: -3.5298566818237305
    3. ' ' → logprob: -9.40485668182373
    4. '	in' → logprob: -12.27985668182373
    5. '  ' → logprob: -12.40485668182373
    6. ')' → logprob: -12.65485668182373
    7. 'range' → logprob: -12.65485668182373
    8. '<|end|>' → logprob: -13.65485668182373
    9. ',' → logprob: -13.90485668182373
    10. 'n' → logprob: -13.90485668182373

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25273463129997253
    2. ' range' → logprob: -1.502734661102295
    3. 'a' → logprob: -7.252734661102295
    4. ' a' → logprob: -9.627734184265137
    5. ')' → logprob: -12.002734184265137
    6. 'n' → logprob: -12.252734184265137
    7. '(range' → logprob: -12.252734184265137
    8. ' ' → logprob: -12.502734184265137
    9. '	range' → logprob: -12.627734184265137
    10. ' xrange' → logprob: -13.252734184265137

Token 34: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.584119975566864
    2. '(' → logprob: -0.834119975566864
    3. ' (' → logprob: -4.95911979675293
    4. '(len' → logprob: -7.08411979675293
    5. '(i' → logprob: -8.70911979675293
    6. '(range' → logprob: -9.83411979675293
    7. ' ' → logprob: -10.33411979675293
    8. ' n' → logprob: -11.70911979675293
    9. '(s' → logprob: -11.95911979675293
    10. 'n' → logprob: -12.45911979675293

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007454703561961651
    2. ')' → logprob: -5.257454872131348
    3. ' ):' → logprob: -6.382454872131348
    4. '):
' → logprob: -8.257454872131348
    5. ':' → logprob: -8.882454872131348
    6. ',' → logprob: -9.757454872131348
    7. '+' → logprob: -10.882454872131348
    8. ' )' → logprob: -11.382454872131348
    9. ' ' → logprob: -11.757454872131348
    10. '-' → logprob: -11.757454872131348

Token 36: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24921868741512299
    2. ':' → logprob: -1.9992187023162842
    3. '   ' → logprob: -3.374218702316284
    4. '+' → logprob: -3.874218702316284
    5. '<|end|>' → logprob: -4.874218463897705
    6. '    ' → logprob: -4.999218463897705
    7. ' :' → logprob: -5.999218463897705
    8. '  ' → logprob: -6.124218463897705
    9. ' if' → logprob: -6.124218463897705
    10. ' +' → logprob: -6.499218463897705

Token 37: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8746402263641357
    2. ' x' → logprob: -1.1246402263641357
    3. 'x' → logprob: -2.3746402263641357
    4. ' ' → logprob: -2.4996402263641357
    5. 'if' → logprob: -3.6246402263641357
    6. '   ' → logprob: -3.7496402263641357
    7. '    ' → logprob: -4.374640464782715
    8. '<|end|>' → logprob: -4.874640464782715
    9. '+' → logprob: -5.249640464782715
    10. ' while' → logprob: -6.374640464782715

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8524523973464966
    2. ' x' → logprob: -1.1024523973464966
    3. 'i' → logprob: -2.352452278137207
    4. ' i' → logprob: -2.477452278137207
    5. 'a' → logprob: -3.102452278137207
    6. ' a' → logprob: -4.102452278137207
    7. 'j' → logprob: -7.852452278137207
    8. ' ' → logprob: -8.227452278137207
    9. ' j' → logprob: -8.602452278137207
    10. '(i' → logprob: -10.227452278137207

Token 39: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1057574599981308
    2. '<n' → logprob: -3.355757474899292
    3. '<' → logprob: -3.855757474899292
    4. ' +' → logprob: -3.980757474899292
    5. '<a' → logprob: -4.605757236480713
    6. '+' → logprob: -4.730757236480713
    7. '<=' → logprob: -5.980757236480713
    8. ' <=' → logprob: -6.605757236480713
    9. '+a' → logprob: -6.855757236480713
    10. '<len' → logprob: -7.230757236480713

Token 40: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6783849596977234
    2. 'a' → logprob: -1.3033850193023682
    3. ' n' → logprob: -1.6783850193023682
    4. ' a' → logprob: -3.678385019302368
    5. 'j' → logprob: -5.803384780883789
    6. 'i' → logprob: -5.928384780883789
    7. ' ' → logprob: -7.178384780883789
    8. 'len' → logprob: -7.178384780883789
    9. ' j' → logprob: -7.553384780883789
    10. 'x' → logprob: -7.803384780883789

Token 41: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07936922460794449
    2. 'and' → logprob: -2.579369306564331
    3. ' ' → logprob: -8.45436954498291
    4. 'a' → logprob: -8.57936954498291
    5. '   ' → logprob: -9.95436954498291
    6. ':' → logprob: -11.82936954498291
    7. ' a' → logprob: -12.32936954498291
    8. '  ' → logprob: -12.45436954498291
    9. '[' → logprob: -12.70436954498291
    10. '	and' → logprob: -13.07936954498291

Token 42: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06213158369064331
    2. ' a' → logprob: -2.812131643295288
    3. 'result' → logprob: -9.812131881713867
    4. '   ' → logprob: -10.187131881713867
    5. '(a' → logprob: -11.062131881713867
    6. '	a' → logprob: -11.312131881713867
    7. ' ' → logprob: -11.437131881713867
    8. ' result' → logprob: -11.937131881713867
    9. 'i' → logprob: -12.187131881713867
    10. 'x' → logprob: -12.562131881713867

Token 43: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012096819467842579
    2. ' a' → logprob: -4.512096881866455
    3. 'result' → logprob: -7.512096881866455
    4. 'abs' → logprob: -9.137096405029297
    5. 'x' → logprob: -9.262096405029297
    6. 'i' → logprob: -9.512096405029297
    7. '   ' → logprob: -10.012096405029297
    8. ')' → logprob: -10.137096405029297
    9. '(a' → logprob: -10.512096405029297
    10. 'j' → logprob: -10.887096405029297

Token 44: ' &' (ID: 827)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5249163508415222
    2. ' ==' → logprob: -1.149916410446167
    3. ' <' → logprob: -3.399916410446167
    4. '<' → logprob: -3.899916410446167
    5. ' or' → logprob: -4.399916172027588
    6. '<=' → logprob: -5.024916172027588
    7. '+' → logprob: -5.149916172027588
    8. ' <=' → logprob: -5.649916172027588
    9. 'or' → logprob: -5.899916172027588
    10. ' +' → logprob: -6.774916172027588

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5839295983314514
    2. 'a' → logprob: -0.8339295983314514
    3. ' (' → logprob: -5.583929538726807
    4. '1' → logprob: -6.458929538726807
    5. '(a' → logprob: -6.958929538726807
    6. ' ' → logprob: -7.333929538726807
    7. '(' → logprob: -7.958929538726807
    8. '&' → logprob: -8.708930015563965
    9. 'nbsp' → logprob: -9.458930015563965
    10. '   ' → logprob: -9.583930015563965

Token 46: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.28503602743148804
    2. '[j' → logprob: -1.4100360870361328
    3. 'x' → logprob: -5.910036087036133
    4. 'j' → logprob: -7.285036087036133
    5. '[' → logprob: -8.410036087036133
    6. '[i' → logprob: -8.660036087036133
    7. ' x' → logprob: -10.660036087036133
    8. '```' → logprob: -11.160036087036133
    9. '][' → logprob: -11.660036087036133
    10. '<x' → logprob: -12.285036087036133

Token 47: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021794233471155167
    2. ')==' → logprob: -4.146794319152832
    3. ' )' → logprob: -5.396794319152832
    4. '[j' → logprob: -7.896794319152832
    5. '))' → logprob: -8.521794319152832
    6. '):' → logprob: -8.771794319152832
    7. '[x' → logprob: -8.896794319152832
    8. '[' → logprob: -9.646794319152832
    9. '==' → logprob: -9.646794319152832
    10. ' ==' → logprob: -10.021794319152832

Token 48: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16089215874671936
    2. ' ==' → logprob: -1.910892128944397
    3. '!=' → logprob: -7.910892009735107
    4. ' !=' → logprob: -9.035892486572266
    5. ')==' → logprob: -9.660892486572266
    6. ')' → logprob: -10.160892486572266
    7. ' ' → logprob: -10.285892486572266
    8. '=' → logprob: -11.035892486572266
    9. ':' → logprob: -12.035892486572266
    10. '[' → logprob: -12.160892486572266

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06638552993535995
    2. ' ' → logprob: -3.066385507583618
    3. 'i' → logprob: -4.316385746002197
    4. ' i' → logprob: -5.566385746002197
    5. 'a' → logprob: -8.941385269165039
    6. '(i' → logprob: -8.941385269165039
    7. '   ' → logprob: -9.816385269165039
    8. '(' → logprob: -10.316385269165039
    9. ' (' → logprob: -10.441385269165039
    10. ' a' → logprob: -10.691385269165039

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005427865777164698
    2. 'i' → logprob: -5.255427837371826
    3. ' ' → logprob: -9.005428314208984
    4. '(i' → logprob: -10.380428314208984
    5. 'a' → logprob: -11.380428314208984
    6. ' i' → logprob: -11.755428314208984
    7. 'x' → logprob: -12.255428314208984
    8. '(' → logprob: -12.255428314208984
    9. '```' → logprob: -12.505428314208984
    10. '   ' → logprob: -13.005428314208984

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001378210261464119
    2. ':
' → logprob: -7.126378059387207
    3. ' :' → logprob: -8.001378059387207
    4. '):' → logprob: -8.876378059387207
    5. '   ' → logprob: -9.751378059387207
    6. ' and' → logprob: -11.251378059387207
    7. '       ' → logprob: -12.376378059387207
    8. '>:' → logprob: -12.626378059387207
    9. '):
' → logprob: -12.751378059387207
    10. ':x' → logprob: -13.001378059387207

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16151411831378937
    2. ':' → logprob: -2.1615140438079834
    3. '   ' → logprob: -3.7865140438079834
    4. ':
' → logprob: -5.9115142822265625
    5. ' :' → logprob: -6.4115142822265625
    6. '<|end|>' → logprob: -6.5365142822265625
    7. '):' → logprob: -6.6615142822265625
    8. ' ' → logprob: -6.7865142822265625
    9. '):
' → logprob: -7.2865142822265625
    10. '+' → logprob: -7.7865142822265625

Token 53: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2594791650772095
    2. 'x' → logprob: -1.5094791650772095
    3. ' i' → logprob: -5.63447904586792
    4. 'i' (adapté à ' i') → logprob: -6.13447904586792
    5. ' ' → logprob: -7.25947904586792
    6. '           ' → logprob: -7.38447904586792
    7. '       ' → logprob: -8.134479522705078
    8. '   ' → logprob: -10.009479522705078
    9. '<|end|>' → logprob: -10.884479522705078
    10. '        ' → logprob: -11.009479522705078

Token 54: ' +=' (ID: 2757)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.1628398299217224
    2. ' |=' → logprob: -2.787839889526367
    3. '&' → logprob: -3.412839889526367
    4. ' ^=' → logprob: -3.912839889526367
    5. '+=' → logprob: -4.162839889526367
    6. '=' → logprob: -4.287839889526367
    7. '^' → logprob: -5.912839889526367
    8. ' +=' → logprob: -6.412839889526367
    9. ' &=' → logprob: -7.037839889526367
    10. ' &' → logprob: -7.662839889526367

Token 55: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005930693820118904
    2. 'a' → logprob: -5.3809309005737305
    3. ' ' → logprob: -6.7559309005737305
    4. ' a' → logprob: -9.13093090057373
    5. '0' → logprob: -11.13093090057373
    6. 'x' → logprob: -11.75593090057373
    7. '   ' → logprob: -12.50593090057373
    8. '(' → logprob: -13.50593090057373
    9. 'i' → logprob: -13.63093090057373
    10. '2' → logprob: -13.75593090057373

Token 56: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0004909569397568703
    2. 'x' → logprob: -7.875491142272949
    3. '[' → logprob: -9.12549114227295
    4. ' x' → logprob: -14.75049114227295
    5. '```' → logprob: -14.75049114227295
    6. ' ' → logprob: -14.87549114227295
    7. ' [' → logprob: -15.87549114227295
    8. '`' → logprob: -16.125490188598633
    9. '<x' → logprob: -16.500490188598633
    10. '	x' → logprob: -16.500490188598633

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.207517609000206
    2. '[x' → logprob: -2.207517623901367
    3. ']
' → logprob: -2.582517623901367
    4. ']
' → logprob: -7.332517623901367
    5. '])' → logprob: -7.582517623901367
    6. 'x' → logprob: -8.707517623901367
    7. '])
' → logprob: -9.082517623901367
    8. ')' → logprob: -9.207517623901367
    9. ')
' → logprob: -9.957517623901367
    10. '[' → logprob: -10.082517623901367

Token 58: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05533784255385399
    2. ' x' → logprob: -3.055337905883789
    3. '       ' → logprob: -5.680337905883789
    4. '   ' → logprob: -6.305337905883789
    5. '<|end|>' → logprob: -7.930337905883789
    6. '	x' → logprob: -8.055337905883789
    7. '
' → logprob: -8.305337905883789
    8. '```' → logprob: -9.430337905883789
    9. ' ' → logprob: -9.555337905883789
    10. '[x' → logprob: -9.805337905883789

Token 59: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.14276330173015594
    2. ' x' → logprob: -2.017763376235962
    3. '1' → logprob: -10.017763137817383
    4. '   ' → logprob: -11.517763137817383
    5. ' ' → logprob: -11.517763137817383
    6. '```' → logprob: -12.017763137817383
    7. '[x' → logprob: -12.142763137817383
    8. '	x' → logprob: -12.517763137817383
    9. '       ' → logprob: -13.642763137817383
    10. '    ' → logprob: -13.767763137817383

Token 60: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5803634524345398
    2. '+' → logprob: -0.8303634524345398
    3. '++' → logprob: -6.0803632736206055
    4. ' +=' → logprob: -6.9553632736206055
    5. '<|end|>' → logprob: -7.4553632736206055
    6. ')' → logprob: -8.455363273620605
    7. '+++' → logprob: -8.705363273620605
    8. '=' → logprob: -9.330363273620605
    9. '```' → logprob: -10.830363273620605
    10. ']+=' → logprob: -10.830363273620605

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '```' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. '+' → logprob: -20.500001907348633
    7. '１' → logprob: -20.750001907348633
    8. '       ' → logprob: -21.000001907348633
    9. '۱' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.500001907348633

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -19.125
    5. '<|end|>' → logprob: -19.75
    6. '１' → logprob: -20.0
    7. '0' → logprob: -20.5
    8. '۱' → logprob: -20.625
    9. '१' → logprob: -21.5
    10. '১' → logprob: -21.75

Token 63: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6358804106712341
    2. '   ' → logprob: -0.8858804106712341
    3. ' ' → logprob: -4.135880470275879
    4. ' result' → logprob: -4.635880470275879
    5. 'if' → logprob: -4.885880470275879
    6. '<|end|>' → logprob: -5.385880470275879
    7. '```' → logprob: -5.635880470275879
    8. ')' → logprob: -5.885880470275879
    9. ' if' → logprob: -6.010880470275879
    10. '       ' → logprob: -6.010880470275879

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23840881884098053
    2. 'result' → logprob: -2.3634088039398193
    3. '
' → logprob: -3.3634088039398193
    4. ' ' → logprob: -3.7384088039398193
    5. '<|end|>' → logprob: -4.113409042358398
    6. '       ' → logprob: -4.613409042358398
    7. '```' → logprob: -4.613409042358398
    8. '    
' → logprob: -5.488409042358398
    9. '  ' → logprob: -6.113409042358398
    10. '  
' → logprob: -6.113409042358398

Token 65: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00764223700389266
    2. '
' → logprob: -6.1326422691345215
    3. '<|end|>' → logprob: -6.1326422691345215
    4. '   ' → logprob: -6.8826422691345215
    5. 'if' → logprob: -7.5076422691345215
    6. ' ' → logprob: -7.6326422691345215
    7. ' result' → logprob: -7.8826422691345215
    8. 'while' → logprob: -8.757641792297363
    9. '```' → logprob: -8.757641792297363
    10. '<|end|>' → logprob: -9.632641792297363

Token 66: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008432189002633095
    2. ' =' → logprob: -5.258432388305664
    3. '+=' → logprob: -5.758432388305664
    4. '=' → logprob: -11.008432388305664
    5. '+' → logprob: -11.508432388305664
    6. 'max' → logprob: -13.008432388305664
    7. ' ^=' → logprob: -13.383432388305664
    8. ' -=' → logprob: -13.383432388305664
    9. ' +' → logprob: -13.883432388305664
    10. ' ' → logprob: -13.883432388305664

Token 67: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1136011928319931
    2. ' x' → logprob: -2.2386012077331543
    3. '(x' → logprob: -7.238601207733154
    4. ' (' → logprob: -10.113600730895996
    5. ' ' → logprob: -11.988600730895996
    6. '(' → logprob: -12.488600730895996
    7. '[x' → logprob: -12.738600730895996
    8. '   ' → logprob: -13.238600730895996
    9. 'n' → logprob: -13.363600730895996
    10. '	x' → logprob: -13.988600730895996

Token 68: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13055308163166046
    2. ' -' → logprob: -2.1305530071258545
    3. '<|end|>' → logprob: -6.005553245544434
    4. '-i' → logprob: -7.630553245544434
    5. '-j' → logprob: -8.130553245544434
    6. '<|end|>' → logprob: -9.630553245544434
    7. '```' → logprob: -9.755553245544434
    8. '`' → logprob: -10.380553245544434
    9. '  ' → logprob: -10.755553245544434
    10. '−' → logprob: -11.005553245544434

Token 69: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015038289711810648
    2. ' j' → logprob: -8.875150680541992
    3. '	j' → logprob: -12.250150680541992
    4. '1' → logprob: -13.125150680541992
    5. 'i' → logprob: -14.000150680541992
    6. ' ' → logprob: -14.000150680541992
    7. '   ' → logprob: -14.250150680541992
    8. '_j' → logprob: -14.625150680541992
    9. '$j' → logprob: -15.625150680541992
    10. '  ' → logprob: -15.750150680541992

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.053837697952985764
    2. '   ' → logprob: -3.178837776184082
    3. 'if' → logprob: -4.803837776184082
    4. '```' → logprob: -6.178837776184082
    5. ' i' → logprob: -9.303837776184082
    6. 'while' → logprob: -9.303837776184082
    7. '``' → logprob: -9.428837776184082
    8. 'result' → logprob: -10.178837776184082
    9. '\' → logprob: -10.303837776184082
    10. '  ' → logprob: -10.803837776184082

Token 72: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0021637058816850185
    2. 'if' → logprob: -6.377163887023926
    3. '   ' → logprob: -8.002163887023926
    4. '```' → logprob: -9.877163887023926
    5. 'n' → logprob: -10.627163887023926
    6. 'x' → logprob: -10.877163887023926
    7. ' i' → logprob: -12.127163887023926
    8. '    
' → logprob: -12.627163887023926
    9. '_i' → logprob: -12.752163887023926
    10. 'j' → logprob: -12.877163887023926

Token 73: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.12783247232437134
    2. '-' → logprob: -2.1278324127197266
    3. '&' → logprob: -7.127832412719727
    4. ' -=' → logprob: -10.002832412719727
    5. '^' → logprob: -10.502832412719727
    6. '=' → logprob: -10.627832412719727
    7. '+=' → logprob: -13.627832412719727
    8. '-&' → logprob: -14.127832412719727
    9. '&amp' → logprob: -14.752832412719727
    10. ' ^=' → logprob: -15.002832412719727

Token 74: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.584861744660884e-05
    2. ' a' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.250045776367188
    4. '	a' → logprob: -16.250045776367188
    5. '<|end|>' → logprob: -16.875045776367188
    6. '>a' → logprob: -17.750045776367188
    7. '[a' → logprob: -17.875045776367188
    8. '#a' → logprob: -17.875045776367188
    9. ''a' → logprob: -18.250045776367188
    10. '_a' → logprob: -18.500045776367188

Token 75: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.4060561776859686e-05
    2. 'j' → logprob: -10.125043869018555
    3. '[' → logprob: -12.500043869018555
    4. '```' → logprob: -16.625043869018555
    5. '[i' → logprob: -17.125043869018555
    6. '   ' → logprob: -17.750043869018555
    7. '	j' → logprob: -18.000043869018555
    8. '[js' → logprob: -18.250043869018555
    9. ' [' → logprob: -18.250043869018555
    10. '\[' → logprob: -19.125043869018555

Token 76: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052567314356565475
    2. ']' → logprob: -3.05256724357605
    3. '<|end|>' → logprob: -6.177567481994629
    4. ' )' → logprob: -7.302567481994629
    5. ')]' → logprob: -7.552567481994629
    6. '```' → logprob: -8.302567481994629
    7. ' ]' → logprob: -9.052567481994629
    8. '])' → logprob: -9.552567481994629
    9. '）' → logprob: -9.677567481994629
    10. ')
' → logprob: -10.302567481994629

Token 77: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03815234452486038
    2. '(result' → logprob: -3.2881524562835693
    3. '()' → logprob: -9.163152694702148
    4. '('' → logprob: -13.288152694702148
    5. 'result' → logprob: -13.288152694702148
    6. '(
' → logprob: -14.038152694702148
    7. '("("' → logprob: -14.663152694702148
    8. '(

' → logprob: -15.038152694702148
    9. ' (' → logprob: -15.288152694702148
    10. '((' → logprob: -16.28815269470215

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')`' → logprob: -16.5
    4. '))' → logprob: -17.0
    5. ')
' → logprob: -18.25
    6. '`)' → logprob: -18.75
    7. '')' → logprob: -19.625
    8. '）' → logprob: -20.0
    9. '),' → logprob: -20.5
    10. '()' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 24.68%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 79.22%
================================================================================
