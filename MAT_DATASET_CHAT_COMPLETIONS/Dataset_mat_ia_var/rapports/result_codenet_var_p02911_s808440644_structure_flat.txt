================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k, q = map(int, input().split())
pnt = [0] * n
i = 0
while i < q:
    j = int(input())
    pnt[j - 1] += 1
    i += 1
i = 0
while i < n:
    if pnt[i] + k - q > 0:
        print("Yes")
    else:
        print("No")
    i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025784850120544434
    2. ' =' → logprob: -3.775784969329834
    3. ',' → logprob: -6.025784969329834
    4. ' ' → logprob: -10.775784492492676
    5. '=
' → logprob: -10.775784492492676
    6. ')' → logprob: -11.150784492492676
    7. ''' → logprob: -11.525784492492676
    8. '=

' → logprob: -11.900784492492676
    9. '```' → logprob: -11.900784492492676
    10. ';' → logprob: -12.025784492492676

Token 4: ' q' (ID: 2335)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2819932997226715
    2. ' =' → logprob: -1.4069932699203491
    3. ',' → logprob: -7.281993389129639
    4. ')' → logprob: -9.28199291229248
    5. ' ' → logprob: -10.28199291229248
    6. '.' → logprob: -11.40699291229248
    7. ';' → logprob: -13.03199291229248
    8. '=input' → logprob: -13.15699291229248
    9. ' ,' → logprob: -13.53199291229248
    10. '=

' → logprob: -13.78199291229248

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01478117611259222
    2. ' =' → logprob: -4.2647809982299805
    3. ',' → logprob: -7.6397809982299805
    4. '```' → logprob: -10.26478099822998
    5. '[' → logprob: -10.38978099822998
    6. '.' → logprob: -10.88978099822998
    7. ' ' → logprob: -11.38978099822998
    8. ';' → logprob: -11.88978099822998
    9. ')' → logprob: -12.01478099822998
    10. '_' → logprob: -12.01478099822998

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4859042465686798
    2. 'map' → logprob: -0.9859042167663574
    3. 'input' → logprob: -4.985904216766357
    4. ' input' → logprob: -5.360904216766357
    5. ' list' → logprob: -9.360904693603516
    6. 'list' → logprob: -9.610904693603516
    7. '0' → logprob: -10.610904693603516
    8. ' ' → logprob: -11.235904693603516
    9. ' n' → logprob: -11.735904693603516
    10. '1' → logprob: -12.735904693603516

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05421312153339386
    2. '<|end|>' → logprob: -3.554213047027588
    3. '```' → logprob: -4.429213047027588
    4. '(lambda' → logprob: -5.054213047027588
    5. '(int' → logprob: -6.554213047027588
    6. '<|end|>' → logprob: -7.429213047027588
    7. ')' → logprob: -7.429213047027588
    8. '(token' → logprob: -7.679213047027588
    9. '(str' → logprob: -8.054213523864746
    10. '(user' → logprob: -8.304213523864746

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1605532169342041
    2. '(' → logprob: -2.160553216934204
    3. ')' → logprob: -3.785553216934204
    4. 'input' → logprob: -4.660552978515625
    5. '(int' → logprob: -8.035552978515625
    6. ' input' → logprob: -8.535552978515625
    7. '=input' → logprob: -9.410552978515625
    8. ',input' → logprob: -9.535552978515625
    9. '(str' → logprob: -10.035552978515625
    10. '<input' → logprob: -10.410552978515625

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003226671600714326
    2. ' input' → logprob: -5.7532267570495605
    3. ')' → logprob: -10.628226280212402
    4. '(input' → logprob: -10.628226280212402
    5. ',input' → logprob: -14.753226280212402
    6. '=input' → logprob: -16.75322723388672
    7. '<input' → logprob: -17.25322723388672
    8. '[input' → logprob: -17.50322723388672
    9. 'int' → logprob: -17.75322723388672
    10. '```' → logprob: -18.00322723388672

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.628741443157196
    2. ')' → logprob: -1.2537415027618408
    3. '())' → logprob: -2.003741502761841
    4. '('' → logprob: -3.628741502761841
    5. '().' → logprob: -4.503741264343262
    6. '(' → logprob: -5.253741264343262
    7. '("")' → logprob: -7.503741264343262
    8. '`()' → logprob: -7.753741264343262
    9. '`)' → logprob: -8.003741264343262
    10. '();)' → logprob: -8.378741264343262

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001126026691053994
    2. 'strip' → logprob: -9.250112533569336
    3. 'rstrip' → logprob: -11.125112533569336
    4. '(split' → logprob: -13.875112533569336
    5. ' split' → logprob: -14.625112533569336
    6. 'spl' → logprob: -15.125112533569336
    7. ')' → logprob: -17.125112533569336
    8. '```' → logprob: -18.000112533569336
    9. 'read' → logprob: -18.250112533569336
    10. 's' → logprob: -19.625112533569336

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012502237223088741
    2. '())' → logprob: -5.262502193450928
    3. '))' → logprob: -5.762502193450928
    4. '('' → logprob: -6.012502193450928
    5. '(' → logprob: -7.137502193450928
    6. '()' → logprob: -8.012502670288086
    7. '`)' → logprob: -8.137502670288086
    8. '')' → logprob: -9.262502670288086
    9. '()))' → logprob: -11.012502670288086
    10. '(','' → logprob: -11.137502670288086

Token 13: 'p' (ID: 79)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48810485005378723
    2. '\n' → logprob: -1.4881048202514648
    3. 'arr' → logprob: -2.988104820251465
    4. '
' → logprob: -3.613104820251465
    5. 'array' → logprob: -3.738104820251465
    6. 'for' → logprob: -3.988104820251465
    7. '\' → logprob: -4.363104820251465
    8. 's' → logprob: -4.988104820251465
    9. 'n' → logprob: -5.488104820251465
    10. '' → logprob: -5.863104820251465

Token 14: 'nt' (ID: 578)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11533191055059433
    2. '[' → logprob: -3.3653318881988525
    3. ' =' → logprob: -3.6153318881988525
    4. 'layers' → logprob: -4.865332126617432
    5. '=' → logprob: -4.990332126617432
    6. 'l' → logprob: -5.615332126617432
    7. '[i' → logprob: -5.615332126617432
    8. 'os' → logprob: -5.740332126617432
    9. 'e' → logprob: -6.240332126617432
    10. 'i' → logprob: -6.240332126617432

Token 15: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006066487403586507
    2. '[' → logprob: -8.625606536865234
    3. 'a' → logprob: -9.250606536865234
    4. 'e' → logprob: -9.250606536865234
    5. '.' → logprob: -9.625606536865234
    6. '=' → logprob: -10.000606536865234
    7. ')' → logprob: -10.125606536865234
    8. 'o' → logprob: -10.750606536865234
    9. '(' → logprob: -11.250606536865234
    10. '_' → logprob: -11.500606536865234

Token 16: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1801443248987198
    2. '[' → logprob: -2.8051443099975586
    3. '0' → logprob: -3.4301443099975586
    4. '[int' → logprob: -3.6801443099975586
    5. ' []' → logprob: -4.055144309997559
    6. '[p' → logprob: -5.055144309997559
    7. 'list' → logprob: -5.055144309997559
    8. '[n' → logprob: -5.180144309997559
    9. ' [' → logprob: -5.805144309997559
    10. '{}' → logprob: -6.555144309997559

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08872109651565552
    2. 'int' → logprob: -2.7137210369110107
    3. ']' → logprob: -4.08872127532959
    4. 'list' → logprob: -7.46372127532959
    5. '(int' → logprob: -7.96372127532959
    6. ']int' → logprob: -7.96372127532959
    7. '[]' → logprob: -8.71372127532959
    8. '[int' → logprob: -9.21372127532959
    9. '()]' → logprob: -9.46372127532959
    10. ' int' → logprob: -10.08872127532959

Token 18: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009466946125030518
    2. ',' → logprob: -4.884467124938965
    3. ']*' → logprob: -6.634467124938965
    4. ' ]' → logprob: -8.634467124938965
    5. ' for' → logprob: -8.759467124938965
    6. ')]' → logprob: -9.634467124938965
    7. ')' → logprob: -9.759467124938965
    8. ']*(' → logprob: -10.384467124938965
    9. ',
' → logprob: -11.259467124938965
    10. ',p' → logprob: -11.759467124938965

Token 19: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04280036687850952
    2. ' *' → logprob: -4.542800426483154
    3. '[' → logprob: -4.667800426483154
    4. '+' → logprob: -4.792800426483154
    5. ',' → logprob: -4.792800426483154
    6. ']' → logprob: -6.667800426483154
    7. ' ' → logprob: -7.292800426483154
    8. ' for' → logprob: -7.417800426483154
    9. '*(' → logprob: -7.417800426483154
    10. ')' → logprob: -8.042799949645996

Token 20: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16831174492835999
    2. '(k' → logprob: -2.043311834335327
    3. '(' → logprob: -3.793311834335327
    4. ' (' → logprob: -6.918311595916748
    5. '100' → logprob: -7.043311595916748
    6. 'n' → logprob: -7.293311595916748
    7. '(q' → logprob: -9.293312072753906
    8. '10' → logprob: -10.043312072753906
    9. '((' → logprob: -10.543312072753906
    10. '101' → logprob: -10.668312072753906

Token 21: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.082180455327034
    2. '
' → logprob: -3.0821805000305176
    3. ' for' → logprob: -3.8321805000305176
    4. 'p' → logprob: -5.332180500030518
    5. '<|end|>' → logprob: -6.832180500030518
    6. ' 
' → logprob: -7.082180500030518
    7. '\n' → logprob: -7.457180500030518
    8. '[' → logprob: -7.457180500030518
    9. '
' → logprob: -7.582180500030518
    10. 's' → logprob: -7.957180500030518

Token 22: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034352026879787445
    2. 'p' → logprob: -3.7843520641326904
    3. ' for' → logprob: -5.284351825714111
    4. '[' → logprob: -6.784351825714111
    5. '\n' → logprob: -7.409351825714111
    6. '+' → logprob: -7.534351825714111
    7. 'a' → logprob: -7.534351825714111
    8. 'q' → logprob: -7.784351825714111
    9. '=' → logprob: -8.03435230255127
    10. '```' → logprob: -8.03435230255127

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42119842767715454
    2. 'n' → logprob: -1.5461983680725098
    3. 'f' → logprob: -2.2961983680725098
    4. ' =' → logprob: -4.17119836807251
    5. '+' → logprob: -4.54619836807251
    6. ' +=' → logprob: -7.04619836807251
    7. '+=' → logprob: -7.54619836807251
    8. 'd' → logprob: -7.67119836807251
    9. ' ' → logprob: -7.79619836807251
    10. 'nt' → logprob: -7.79619836807251

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35738787055015564
    2. ' ' → logprob: -1.232387900352478
    3. '1' → logprob: -4.732388019561768
    4. ' n' → logprob: -9.73238754272461
    5. 'n' → logprob: -10.98238754272461
    6. '2' → logprob: -12.10738754272461
    7. ' k' → logprob: -12.23238754272461
    8. 'k' → logprob: -12.60738754272461
    9. ' q' → logprob: -13.85738754272461
    10. ' p' → logprob: -13.91988754272461

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00922483392059803
    2. '1' → logprob: -5.134224891662598
    3. ' ' → logprob: -5.759224891662598
    4. 'k' → logprob: -9.759224891662598
    5. 'n' → logprob: -9.759224891662598
    6. '2' → logprob: -11.259224891662598
    7. ' n' → logprob: -13.134224891662598
    8. '-' → logprob: -13.759224891662598
    9. ' k' → logprob: -13.759224891662598
    10. '3' → logprob: -14.134224891662598

Token 26: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6369718909263611
    2. ' while' → logprob: -1.2619719505310059
    3. '<|end|>' → logprob: -2.261971950531006
    4. '
' → logprob: -3.136971950531006
    5. ' ' → logprob: -4.636971950531006
    6. '+' → logprob: -5.011971950531006
    7. '\n' → logprob: -5.511971950531006
    8. 'n' → logprob: -5.511971950531006
    9. ' 
' → logprob: -6.011971950531006
    10. ',' → logprob: -6.136971950531006

Token 27: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1400555819272995
    2. ' while' → logprob: -2.1400556564331055
    3. ' ' → logprob: -5.3900556564331055
    4. 'w' → logprob: -6.3900556564331055
    5. '```' → logprob: -6.7650556564331055
    6. 'for' → logprob: -6.7650556564331055
    7. '\n' → logprob: -7.1400556564331055
    8. ')' → logprob: -7.8900556564331055
    9. 's' → logprob: -7.8900556564331055
    10. '' → logprob: -8.015055656433105

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018403349444270134
    2. 'i' → logprob: -4.01840353012085
    3. ' n' → logprob: -9.393403053283691
    4. ' ' → logprob: -9.518403053283691
    5. ' p' → logprob: -9.643403053283691
    6. '<' → logprob: -11.768403053283691
    7. ' k' → logprob: -12.393403053283691
    8. 'n' → logprob: -12.518403053283691
    9. '(i' → logprob: -12.518403053283691
    10. '	i' → logprob: -13.268403053283691

Token 29: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11347318440675735
    2. '<' → logprob: -2.2384731769561768
    3. '<n' → logprob: -8.113472938537598
    4. ' <=' → logprob: -8.613472938537598
    5. ' ' → logprob: -8.988472938537598
    6. '<=' → logprob: -10.863472938537598
    7. '<len' → logprob: -10.988472938537598
    8. '<size' → logprob: -13.363472938537598
    9. ' <
' → logprob: -13.863472938537598
    10. ' less' → logprob: -14.113472938537598

Token 30: ' q' (ID: 2335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7971049547195435
    2. ' n' → logprob: -1.1721049547195435
    3. 'k' → logprob: -1.5471049547195435
    4. ' k' → logprob: -3.672104835510254
    5. ' ' → logprob: -6.672104835510254
    6. 'q' → logprob: -9.672104835510254
    7. '  ' → logprob: -10.922104835510254
    8. '	n' → logprob: -11.797104835510254
    9. ' q' → logprob: -12.047104835510254
    10. ' ' → logprob: -13.547104835510254

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028364919126033783
    2. ' :' → logprob: -5.87783670425415
    3. ':
' → logprob: -10.752836227416992
    4. ':**' → logprob: -12.752836227416992
    5. '):' → logprob: -13.752836227416992
    6. ' :
' → logprob: -13.877836227416992
    7. '>' → logprob: -14.252836227416992
    8. '   ' → logprob: -14.377836227416992
    9. ',' → logprob: -14.627836227416992
    10. '.' → logprob: -14.752836227416992

Token 32: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8400943279266357
    2. ' ' → logprob: -1.3400943279266357
    3. 'p' → logprob: -2.0900943279266357
    4. '   ' → logprob: -2.7150943279266357
    5. 'n' → logprob: -3.3400943279266357
    6. ' 
' → logprob: -3.5900943279266357
    7. ' n' → logprob: -4.590094566345215
    8. '    ' → logprob: -4.840094566345215
    9. '   
' → logprob: -5.465094566345215
    10. 'input' → logprob: -5.715094566345215

Token 33: ' j' (ID: 441)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.4058454036712646
    2. ' arr' → logprob: -2.0308454036712646
    3. ' s' → logprob: -2.1558454036712646
    4. ' a' → logprob: -2.5308454036712646
    5. ' query' → logprob: -3.0308454036712646
    6. ' t' → logprob: -3.1558454036712646
    7. 's' → logprob: -3.2808454036712646
    8. 'arr' → logprob: -3.4058454036712646
    9. ' p' → logprob: -3.6558454036712646
    10. '   ' → logprob: -3.6558454036712646

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3062458038330078
    2. '=' → logprob: -1.4312458038330078
    3. ' <' → logprob: -4.431245803833008
    4. ' ' → logprob: -5.181245803833008
    5. ' +=' → logprob: -5.931245803833008
    6. ',' → logprob: -6.056245803833008
    7. '<' → logprob: -7.806245803833008
    8. ' <=' → logprob: -7.806245803833008
    9. '+=' → logprob: -7.931245803833008
    10. '+' → logprob: -8.056245803833008

Token 35: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8047904968261719
    2. 'int' → logprob: -1.3047904968261719
    3. ' i' → logprob: -2.304790496826172
    4. ' int' → logprob: -2.429790496826172
    5. 'i' → logprob: -2.679790496826172
    6. ' ' → logprob: -4.179790496826172
    7. 'k' → logprob: -5.804790496826172
    8. 'n' → logprob: -6.554790496826172
    9. ' n' → logprob: -6.679790496826172
    10. ' k' → logprob: -6.679790496826172

Token 36: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004086828324943781
    2. '(' → logprob: -5.504086971282959
    3. 'input' → logprob: -12.1290864944458
    4. '(
' → logprob: -13.1290864944458
    5. '(

' → logprob: -15.1290864944458
    6. '=input' → logprob: -15.7540864944458
    7. '(in' → logprob: -15.8790864944458
    8. ' (' → logprob: -16.004087448120117
    9. '()' → logprob: -16.129087448120117
    10. ',input' → logprob: -16.379087448120117

Token 37: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0008532279753126204
    2. '()' → logprob: -7.125853061676025
    3. ')' → logprob: -10.500853538513184
    4. '())
' → logprob: -11.125853538513184
    5. '().' → logprob: -13.000853538513184
    6. '())

' → logprob: -13.750853538513184
    7. ' ())' → logprob: -13.875853538513184
    8. '()))' → logprob: -14.500853538513184
    9. '();)' → logprob: -14.625853538513184
    10. '(' → logprob: -15.375853538513184

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37397605180740356
    2. '<|end|>' → logprob: -2.123975992202759
    3. ')' → logprob: -2.873975992202759
    4. 'p' → logprob: -3.123975992202759
    5. ' ' → logprob: -3.873975992202759
    6. '[' → logprob: -3.998975992202759
    7. '  ' → logprob: -4.373976230621338
    8. '    ' → logprob: -5.623976230621338
    9. ' 
' → logprob: -5.748976230621338
    10. '    
' → logprob: -5.748976230621338

Token 39: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -1.1061910390853882
    2. '   ' → logprob: -1.4811910390853882
    3. ' ' → logprob: -1.8561910390853882
    4. '<|end|>' → logprob: -2.4811911582946777
    5. '[' → logprob: -3.2311911582946777
    6. ' p' → logprob: -3.6061911582946777
    7. '  ' → logprob: -3.6061911582946777
    8. 'if' → logprob: -3.9811911582946777
    9. 'for' → logprob: -4.356191158294678
    10. 'i' → logprob: -4.606191158294678

Token 40: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.001210591522976756
    2. 'n' → logprob: -6.751210689544678
    3. 'int' → logprob: -10.87621021270752
    4. 'nts' → logprob: -11.50121021270752
    5. 'r' → logprob: -12.37621021270752
    6. 't' → logprob: -12.75121021270752
    7. '[' → logprob: -13.62621021270752
    8. 'n't' → logprob: -13.75121021270752
    9. 'ntil' → logprob: -14.00121021270752
    10. 'p' → logprob: -15.75121021270752

Token 41: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.030307946726679802
    2. '[' → logprob: -3.5303080081939697
    3. '[p' → logprob: -7.655307769775391
    4. '[i' → logprob: -10.03030776977539
    5. '[k' → logprob: -11.65530776977539
    6. '[q' → logprob: -12.03030776977539
    7. '[n' → logprob: -12.53030776977539
    8. '[m' → logprob: -13.03030776977539
    9. '```' → logprob: -13.03030776977539
    10. ']' → logprob: -13.40530776977539

Token 42: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08056621998548508
    2. '-' → logprob: -2.580566167831421
    3. ' -' → logprob: -7.33056640625
    4. ' ]' → logprob: -8.58056640625
    5. ']-' → logprob: -8.70556640625
    6. '[' → logprob: -8.83056640625
    7. ')' → logprob: -9.33056640625
    8. '']' → logprob: -9.33056640625
    9. '])' → logprob: -9.33056640625
    10. '1' → logprob: -9.45556640625

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006332091288641095
    2. ' ' → logprob: -7.375633239746094
    3. '>' → logprob: -13.563133239746094
    4. ']' → logprob: -13.750633239746094
    5. ')' → logprob: -14.188133239746094
    6. '<|end|>' → logprob: -14.250633239746094
    7. '=' → logprob: -14.688133239746094
    8. '-' → logprob: -14.688133239746094
    9. '   ' → logprob: -14.875633239746094
    10. '...' → logprob: -15.125633239746094

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -10.875020980834961
    3. ']' → logprob: -14.437520980834961
    4. '2' → logprob: -15.000020980834961
    5. '   ' → logprob: -15.562520980834961
    6. ')' → logprob: -15.562520980834961
    7. '<|end|>' → logprob: -16.06252098083496
    8. '=' → logprob: -16.31252098083496
    9. '```' → logprob: -16.56252098083496
    10. '  ' → logprob: -16.68752098083496

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027647381648421288
    2. ']+=' → logprob: -3.6526474952697754
    3. ')' → logprob: -6.902647495269775
    4. '+=' → logprob: -8.527647018432617
    5. ' ]' → logprob: -9.402647018432617
    6. ' +=' → logprob: -10.277647018432617
    7. '+' → logprob: -12.277647018432617
    8. ']=' → logprob: -12.277647018432617
    9. ')]' → logprob: -12.652647018432617
    10. ']+' → logprob: -12.902647018432617

Token 46: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.13080832362174988
    2. ' +=' → logprob: -2.1308083534240723
    3. '=' → logprob: -5.630808353424072
    4. ']+=' → logprob: -9.005807876586914
    5. '+' → logprob: -9.130807876586914
    6. ' =' → logprob: -10.255807876586914
    7. '-=' → logprob: -12.255807876586914
    8. ' ^=' → logprob: -12.630807876586914
    9. ' -=' → logprob: -13.130807876586914
    10. '+='' → logprob: -13.255807876586914

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16207373142242432
    2. 'k' → logprob: -1.9120737314224243
    3. ' ' → logprob: -6.787073612213135
    4. ' k' → logprob: -7.412073612213135
    5. 'p' → logprob: -10.412074089050293
    6. '100' → logprob: -10.537074089050293
    7. '10' → logprob: -10.912074089050293
    8. '   ' → logprob: -11.537074089050293
    9. '2' → logprob: -11.662074089050293
    10. '3' → logprob: -12.662074089050293

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3487032949924469
    2. 'k' → logprob: -1.2237032651901245
    3. ' ' → logprob: -9.973703384399414
    4. 'p' → logprob: -9.973703384399414
    5. ' k' → logprob: -10.223703384399414
    6. '100' → logprob: -10.348703384399414
    7. '10' → logprob: -10.473703384399414
    8. 'i' → logprob: -11.348703384399414
    9. '2' → logprob: -11.473703384399414
    10. '   ' → logprob: -12.098703384399414

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028573689982295036
    2. '   ' → logprob: -3.778573751449585
    3. '\n' → logprob: -5.528573513031006
    4. 'i' → logprob: -7.903573513031006
    5. '```' → logprob: -8.153573989868164
    6. '
' → logprob: -8.278573989868164
    7. '    
' → logprob: -9.028573989868164
    8. '  
' → logprob: -9.653573989868164
    9. '<|end|>' → logprob: -9.903573989868164
    10. ' 
' → logprob: -10.028573989868164

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3573175370693207
    2. '
' → logprob: -1.232317566871643
    3. '\n' → logprob: -5.8573174476623535
    4. 'i' → logprob: -6.1073174476623535
    5. '```' → logprob: -6.1073174476623535
    6. '    
' → logprob: -8.107317924499512
    7. ' i' → logprob: -8.232317924499512
    8. '  
' → logprob: -8.857317924499512
    9. '\' → logprob: -8.982317924499512
    10. '<|end|>' → logprob: -9.232317924499512

Token 51: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0007207724265754223
    2. '   ' → logprob: -7.250720977783203
    3. ' i' → logprob: -11.750720977783203
    4. '```' → logprob: -13.000720977783203
    5. '	i' → logprob: -15.375720977783203
    6. '``' → logprob: -16.500720977783203
    7. '  ' → logprob: -17.000720977783203
    8. 'n' → logprob: -17.000720977783203
    9. '    
' → logprob: -17.125720977783203
    10. '
' → logprob: -17.250720977783203

Token 52: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005226763430982828
    2. '+=' → logprob: -5.6302266120910645
    3. ' +=' → logprob: -6.5052266120910645
    4. ' +' → logprob: -9.505227088928223
    5. '++' → logprob: -10.380227088928223
    6. ' ' → logprob: -11.630227088928223
    7. '<|end|>' → logprob: -12.005227088928223
    8. '=' → logprob: -12.505227088928223
    9. '+++' → logprob: -12.630227088928223
    10. ')' → logprob: -14.755227088928223

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.000335693359375
    4. '   ' → logprob: -17.000335693359375
    5. '１' → logprob: -19.500335693359375
    6. '<|end|>' → logprob: -19.625335693359375
    7. '۱' → logprob: -20.375335693359375
    8. '+' → logprob: -21.000335693359375
    9. '0' → logprob: -21.500335693359375
    10. '    ' → logprob: -21.625335693359375

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.125003814697266
    5. '  ' → logprob: -20.375003814697266
    6. '+' → logprob: -20.562503814697266
    7. '<|end|>' → logprob: -21.000003814697266
    8. '`' → logprob: -21.187503814697266
    9. '１' → logprob: -21.437503814697266
    10. '۱' → logprob: -21.687503814697266

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08823392540216446
    2. '
' → logprob: -2.8382339477539062
    3. 'i' → logprob: -4.713233947753906
    4. 'if' → logprob: -5.338233947753906
    5. 'p' → logprob: -6.088233947753906
    6. 'result' → logprob: -6.213233947753906
    7. 's' → logprob: -6.713233947753906
    8. 'while' → logprob: -6.838233947753906
    9. 'count' → logprob: -6.838233947753906
    10. ' for' → logprob: -7.463233947753906

Token 57: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5931434631347656
    2. '<|end|>' → logprob: -0.8431434631347656
    3. ' ' → logprob: -4.718143463134766
    4. '<|end|>' → logprob: -5.843143463134766
    5. '
' → logprob: -6.218143463134766
    6. '0' → logprob: -6.843143463134766
    7. '```' → logprob: -6.968143463134766
    8. ')' → logprob: -8.343143463134766
    9. '#' → logprob: -8.468143463134766
    10. '>' → logprob: -8.843143463134766

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018638452515006065
    2. ' ' → logprob: -4.143638610839844
    3. 'k' → logprob: -6.768638610839844
    4. '1' → logprob: -6.893638610839844
    5. ' k' → logprob: -7.768638610839844
    6. 'n' → logprob: -12.018638610839844
    7. ' n' → logprob: -12.768638610839844
    8. ' ' → logprob: -14.518638610839844
    9. '2' → logprob: -14.643638610839844
    10. '```' → logprob: -14.706138610839844

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13419941067695618
    2. 'k' → logprob: -2.134199380874634
    3. '1' → logprob: -5.259199619293213
    4. ' k' → logprob: -7.259199619293213
    5. ' ' → logprob: -7.259199619293213
    6. 'q' → logprob: -7.759199619293213
    7. 'n' → logprob: -8.884199142456055
    8. '2' → logprob: -10.384199142456055
    9. 'p' → logprob: -11.384199142456055
    10. ' q' → logprob: -12.384199142456055

Token 60: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4300103485584259
    2. '
' → logprob: -1.6800103187561035
    3. ' while' → logprob: -2.0550103187561035
    4. '<|end|>' → logprob: -3.8050103187561035
    5. ' 
' → logprob: -5.0550103187561035
    6. '\n' → logprob: -5.9300103187561035
    7. 'w' → logprob: -6.5550103187561035
    8. 'n' → logprob: -7.5550103187561035
    9. '```' → logprob: -7.9300103187561035
    10. '' → logprob: -8.055010795593262

Token 61: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1527269184589386
    2. ' while' → logprob: -2.027726888656616
    3. '
' → logprob: -5.277727127075195
    4. 'w' → logprob: -6.152727127075195
    5. 'result' → logprob: -7.527727127075195
    6. 'wh' → logprob: -7.652727127075195
    7. 'count' → logprob: -8.027727127075195
    8. '<|end|>' → logprob: -8.027727127075195
    9. ' 
' → logprob: -8.402727127075195
    10. '\n' → logprob: -9.277727127075195

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25495806336402893
    2. 'i' → logprob: -2.004958152770996
    3. ' k' → logprob: -2.754958152770996
    4. 'k' → logprob: -4.254958152770996
    5. ' n' → logprob: -4.754958152770996
    6. ' p' → logprob: -6.379958152770996
    7. 'n' → logprob: -6.629958152770996
    8. ' ' → logprob: -7.504958152770996
    9. 'p' → logprob: -8.129958152770996
    10. '   ' → logprob: -10.754958152770996

Token 63: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.022740563377738
    2. '<' → logprob: -4.022740364074707
    3. '<n' → logprob: -5.397740364074707
    4. ' ' → logprob: -10.522740364074707
    5. ' n' → logprob: -10.897740364074707
    6. ' k' → logprob: -12.272740364074707
    7. 'k' → logprob: -14.522740364074707
    8. 'n' → logprob: -14.647740364074707
    9. '<len' → logprob: -14.647740364074707
    10. ' <=' → logprob: -15.397740364074707

Token 64: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4180518090724945
    2. 'n' → logprob: -1.168051838874817
    3. ' n' → logprob: -4.043051719665527
    4. ' k' → logprob: -4.543051719665527
    5. 'q' → logprob: -6.168051719665527
    6. ' ' → logprob: -8.293051719665527
    7. ' q' → logprob: -9.793051719665527
    8. '  ' → logprob: -10.793051719665527
    9. '   ' → logprob: -10.793051719665527
    10. 'len' → logprob: -10.793051719665527

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20913556218147278
    2. ':
' → logprob: -1.8341355323791504
    3. ' and' → logprob: -3.7091355323791504
    4. '   ' → logprob: -6.58413553237915
    5. 'and' → logprob: -6.70913553237915
    6. ' :
' → logprob: -6.95913553237915
    7. ' :' → logprob: -7.58413553237915
    8. ' ' → logprob: -8.834136009216309
    9. ':

' → logprob: -9.584136009216309
    10. '-' → logprob: -9.834136009216309

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3375603258609772
    2. ' if' → logprob: -1.4625602960586548
    3. ' print' → logprob: -3.5875604152679443
    4. 'if' → logprob: -3.8375604152679443
    5. 'print' → logprob: -5.462560176849365
    6. ' ' → logprob: -8.212560653686523
    7. '	if' → logprob: -8.462560653686523
    8. '    ' → logprob: -8.712560653686523
    9. '   ' → logprob: -8.712560653686523
    10. '```' → logprob: -9.212560653686523

Token 67: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3788253366947174
    2. 'if' (adapté à ' if') → logprob: -1.253825306892395
    3. '   ' → logprob: -4.3788251876831055
    4. ' print' → logprob: -4.3788251876831055
    5. 'print' → logprob: -5.3788251876831055
    6. ' ' → logprob: -9.378825187683105
    7. ' s' → logprob: -10.878825187683105
    8. 's' → logprob: -11.003825187683105
    9. '```' → logprob: -11.003825187683105
    10. '	if' → logprob: -11.378825187683105

Token 68: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3159548044204712
    2. 'p' → logprob: -1.3159548044204712
    3. ' k' → logprob: -6.815954685211182
    4. '   ' → logprob: -7.065954685211182
    5. 'k' → logprob: -7.565954685211182
    6. ' ' → logprob: -9.06595516204834
    7. '(p' → logprob: -10.44095516204834
    8. '	p' → logprob: -11.19095516204834
    9. '  ' → logprob: -11.37845516204834
    10. ' i' → logprob: -11.44095516204834

Token 69: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -1.1472419600977446e-06
    2. '[i' → logprob: -14.125000953674316
    3. 't' → logprob: -15.625000953674316
    4. 'int' → logprob: -16.375001907348633
    5. 'n' → logprob: -16.625001907348633
    6. 'nts' → logprob: -18.000001907348633
    7. 'ont' → logprob: -18.625001907348633
    8. 'nti' → logprob: -19.625001907348633
    9. 'n't' → logprob: -19.750001907348633
    10. 'nd' → logprob: -20.125001907348633

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.0590548703912646e-05
    2. '[' → logprob: -10.625030517578125
    3. '[n' → logprob: -12.250030517578125
    4. '[j' → logprob: -14.500030517578125
    5. 'i' → logprob: -15.625030517578125
    6. '[p' → logprob: -15.625030517578125
    7. ' [' → logprob: -16.000030517578125
    8. '%' → logprob: -16.375030517578125
    9. '[k' → logprob: -16.750030517578125
    10. ' ' → logprob: -17.000030517578125

Token 71: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3370494842529297
    2. '>=' → logprob: -1.8370494842529297
    3. ' >=' → logprob: -2.7120494842529297
    4. ' >' → logprob: -2.9620494842529297
    5. '%' → logprob: -5.96204948425293
    6. '+' → logprob: -6.21204948425293
    7. '<' → logprob: -6.83704948425293
    8. ' ' → logprob: -6.96204948425293
    9. ' <' → logprob: -7.21204948425293
    10. ' +' → logprob: -8.21204948425293

Token 72: ' +' (ID: 659)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1432722955942154
    2. ' >=' → logprob: -2.1432723999023438
    3. '>' → logprob: -4.893272399902344
    4. '+' → logprob: -5.018272399902344
    5. ' +' → logprob: -7.143272399902344
    6. '<' → logprob: -7.768272399902344
    7. ' ' → logprob: -7.893272399902344
    8. ' >' → logprob: -8.518272399902344
    9. '+k' → logprob: -9.393272399902344
    10. ' <' → logprob: -9.643272399902344

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05243384838104248
    2. ' k' → logprob: -3.052433967590332
    3. 'p' → logprob: -5.802433967590332
    4. ' p' → logprob: -7.927433967590332
    5. ' ' → logprob: -8.427433967590332
    6. '   ' → logprob: -10.052433967590332
    7. 'q' → logprob: -10.177433967590332
    8. '1' → logprob: -10.802433967590332
    9. '  ' → logprob: -11.114933967590332
    10. '=' → logprob: -11.239933967590332

Token 74: ' -' (ID: 533)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2427140772342682
    2. '>=' → logprob: -2.2427141666412354
    3. '<=' → logprob: -2.4927141666412354
    4. ' >' → logprob: -4.492713928222656
    5. ' <=' → logprob: -4.867713928222656
    6. '<' → logprob: -5.242713928222656
    7. ' >=' → logprob: -6.242713928222656
    8. ' ' → logprob: -8.367713928222656
    9. ' <' → logprob: -8.992713928222656
    10. '-' → logprob: -9.742713928222656

Token 75: ' q' (ID: 2335)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6795881986618042
    2. '0' → logprob: -0.8045881986618042
    3. '>' → logprob: -3.5545883178710938
    4. ' >' → logprob: -4.929588317871094
    5. '1' → logprob: -5.179588317871094
    6. ' p' → logprob: -6.929588317871094
    7. ' i' → logprob: -7.304588317871094
    8. '>=' → logprob: -7.304588317871094
    9. ' >=' → logprob: -7.804588317871094
    10. ' n' → logprob: -8.054588317871094

Token 76: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.30454421043395996
    2. '>' → logprob: -1.55454421043396
    3. ' >=' → logprob: -3.17954421043396
    4. ' >' → logprob: -4.679544448852539
    5. ' ' → logprob: -8.179544448852539
    6. '≥' → logprob: -10.679544448852539
    7. '<' → logprob: -11.054544448852539
    8. ')>=' → logprob: -11.554544448852539
    9. '">' → logprob: -11.929544448852539
    10. ']>=' → logprob: -12.554544448852539

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5306583642959595
    2. '=' → logprob: -0.9056583642959595
    3. ' ' → logprob: -4.90565824508667
    4. ' =' → logprob: -9.405658721923828
    5. '-' → logprob: -12.280658721923828
    6. ' -' → logprob: -12.405658721923828
    7. '>' → logprob: -13.030658721923828
    8. '  ' → logprob: -13.280658721923828
    9. ' ' → logprob: -13.530658721923828
    10. '   ' → logprob: -13.905658721923828

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017306724563241005
    2. ' ' → logprob: -4.642306804656982
    3. '=' → logprob: -4.892306804656982
    4. '-' → logprob: -11.392306327819824
    5. '  ' → logprob: -13.392306327819824
    6. '>' → logprob: -13.642306327819824
    7. ' =' → logprob: -13.767306327819824
    8. ' -' → logprob: -13.767306327819824
    9. '>=' → logprob: -14.642306327819824
    10. ' 
' → logprob: -15.267306327819824

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021557629224844277
    2. ' :' → logprob: -8.750215530395508
    3. ':
' → logprob: -10.000215530395508
    4. ' and' → logprob: -12.125215530395508
    5. '):' → logprob: -13.000215530395508
    6. 'print' → logprob: -14.000215530395508
    7. ')' → logprob: -14.375215530395508
    8. '   ' → logprob: -14.875215530395508
    9. 'and' → logprob: -15.250215530395508
    10. ' or' → logprob: -15.375215530395508

Token 80: '       ' (ID: 309)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.21004045009613037
    2. ' ' → logprob: -2.33504056930542
    3. 'print' → logprob: -2.96004056930542
    4. '   ' → logprob: -4.21004056930542
    5. ':' → logprob: -4.58504056930542
    6. ' a' → logprob: -5.21004056930542
    7. ' :' → logprob: -5.71004056930542
    8. '    ' → logprob: -6.33504056930542
    9. ' and' → logprob: -6.96004056930542
    10. '  ' → logprob: -7.83504056930542

Token 81: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.052170466631650925
    2. 'print' (adapté à ' print') → logprob: -3.177170515060425
    3. ' p' → logprob: -5.427170276641846
    4. ' ' → logprob: -5.552170276641846
    5. ' prin' → logprob: -8.802170753479004
    6. '   ' → logprob: -8.927170753479004
    7. 'p' → logprob: -8.927170753479004
    8. ' '' → logprob: -9.302170753479004
    9. ' ' → logprob: -9.427170753479004
    10. '    ' → logprob: -9.677170753479004

Token 82: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.25862446427345276
    2. '('' → logprob: -2.25862455368042
    3. '"' → logprob: -2.50862455368042
    4. '"A' → logprob: -4.50862455368042
    5. '(i' → logprob: -4.75862455368042
    6. ''' → logprob: -5.25862455368042
    7. '(' → logprob: -5.38362455368042
    8. ''A' → logprob: -5.50862455368042
    9. 'i' → logprob: -6.38362455368042
    10. '"K' → logprob: -6.75862455368042

Token 83: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.01283193938434124
    2. 'A' → logprob: -5.512832164764404
    3. '"' → logprob: -5.637832164764404
    4. 'YES' → logprob: -6.762832164764404
    5. 'N' → logprob: -7.137832164764404
    6. '1' → logprob: -7.262832164764404
    7. 'Y' → logprob: -7.762832164764404
    8. 'W' → logprob: -8.012831687927246
    9. ' Yes' → logprob: -8.012831687927246
    10. 'I' → logprob: -8.637831687927246

Token 84: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.20819315314292908
    2. '")' → logprob: -1.7081931829452515
    3. ')
' → logprob: -5.458193302154541
    4. ')' → logprob: -6.458193302154541
    5. 'else' → logprob: -7.458193302154541
    6. '")
' → logprob: -8.333192825317383
    7. '")

' → logprob: -10.333192825317383
    8. '"' → logprob: -10.708192825317383
    9. '')
' → logprob: -10.708192825317383
    10. '```' → logprob: -11.708192825317383

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06207849085330963
    2. 'else' → logprob: -2.9370784759521484
    3. ' else' → logprob: -5.062078475952148
    4. ' ' → logprob: -7.937078475952148
    5. '	else' → logprob: -8.937078475952148
    6. '<|end|>' → logprob: -9.312078475952148
    7. '```' → logprob: -9.687078475952148
    8. '  ' → logprob: -9.687078475952148
    9. '   ' → logprob: -10.187078475952148
    10. ' ' → logprob: -10.937078475952148

Token 86: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04940894618630409
    2. ' else' → logprob: -3.4244089126586914
    3. 'else' (adapté à ' else') → logprob: -4.174408912658691
    4. ' ' → logprob: -9.049408912658691
    5. '	else' → logprob: -9.174408912658691
    6. '   ' → logprob: -12.049408912658691
    7. '  ' → logprob: -12.424408912658691
    8. '\n' → logprob: -12.549408912658691
    9. '<|end|>' → logprob: -12.674408912658691
    10. '    
' → logprob: -12.924408912658691

Token 87: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17139263451099396
    2. ':' → logprob: -1.9213926792144775
    3. ':
' → logprob: -4.546392440795898
    4. '   ' → logprob: -7.796392440795898
    5. ' :' → logprob: -11.171392440795898
    6. '      ' → logprob: -11.671392440795898
    7. ' print' → logprob: -11.796392440795898
    8. '     ' → logprob: -11.796392440795898
    9. '    ' → logprob: -11.921392440795898
    10. ' :
' → logprob: -11.921392440795898

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018485551699995995
    2. 'print' → logprob: -6.3768486976623535
    3. ' print' → logprob: -9.251848220825195
    4. '   ' → logprob: -10.376848220825195
    5. '	print' → logprob: -12.251848220825195
    6. '	' → logprob: -12.501848220825195
    7. '	       ' → logprob: -13.126848220825195
    8. '    ' → logprob: -13.376848220825195
    9. '	   ' → logprob: -13.626848220825195
    10. '           ' → logprob: -14.001848220825195

Token 89: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4655073583126068
    2. '       ' → logprob: -1.2155073881149292
    3. ' print' → logprob: -2.5905072689056396
    4. '   ' → logprob: -7.590507507324219
    5. '	print' → logprob: -9.090507507324219
    6. ' ' → logprob: -11.465507507324219
    7. '    ' → logprob: -12.965507507324219
    8. '.print' → logprob: -13.090507507324219
    9. '  ' → logprob: -13.340507507324219
    10. '     ' → logprob: -13.465507507324219

Token 90: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.014196648262441158
    2. '(' → logprob: -4.264196872711182
    3. '("("' → logprob: -10.389196395874023
    4. '(
' → logprob: -14.014196395874023
    5. '('' → logprob: -14.389196395874023
    6. '("(' → logprob: -14.889196395874023
    7. '("")' → logprob: -15.389196395874023
    8. '"' → logprob: -16.014196395874023
    9. '(""' → logprob: -16.389196395874023
    10. '("""' → logprob: -16.514196395874023

Token 91: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0015079588629305363
    2. '"No' → logprob: -6.501507759094238
    3. ' No' → logprob: -12.501507759094238
    4. '"' → logprob: -13.501507759094238
    5. ' ' → logprob: -15.876507759094238
    6. '“No' → logprob: -16.251508712768555
    7. '_No' → logprob: -16.751508712768555
    8. '   ' → logprob: -16.751508712768555
    9. 'NO' → logprob: -17.126508712768555
    10. 'Na' → logprob: -17.626508712768555

Token 92: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.16664183139801025
    2. ')' → logprob: -1.9166418313980103
    3. '")
' → logprob: -5.916641712188721
    4. '   ' → logprob: -5.916641712188721
    5. ')
' → logprob: -7.416641712188721
    6. ')")' → logprob: -8.041642189025879
    7. ')")
' → logprob: -9.541642189025879
    8. '")
' → logprob: -12.166642189025879
    9. '`)' → logprob: -13.041642189025879
    10. '```' → logprob: -13.166642189025879

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046987622044980526
    2. 'i' → logprob: -7.75046968460083
    3. '    
' → logprob: -10.875470161437988
    4. ' i' → logprob: -11.625470161437988
    5. '	i' → logprob: -12.375470161437988
    6. '
' → logprob: -12.625470161437988
    7. '<|end|>' → logprob: -14.000470161437988
    8. '  
' → logprob: -14.500470161437988
    9. '   ' → logprob: -14.875470161437988
    10. '```' → logprob: -14.875470161437988

Token 94: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10068892687559128
    2. 'i' (adapté à ' i') → logprob: -2.350688934326172
    3. ' i' → logprob: -7.850688934326172
    4. '    
' → logprob: -10.350688934326172
    5. '
' → logprob: -10.475688934326172
    6. '	i' → logprob: -10.600688934326172
    7. '```' → logprob: -12.850688934326172
    8. ',i' → logprob: -13.225688934326172
    9. '<|end|>' → logprob: -14.725688934326172
    10. '  ' → logprob: -14.850688934326172

Token 95: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7465447187423706
    2. ' +=' → logprob: -1.1215447187423706
    3. '+' → logprob: -1.6215447187423706
    4. '++' → logprob: -6.24654483795166
    5. '<|end|>' → logprob: -8.12154483795166
    6. '=' → logprob: -9.24654483795166
    7. ' +' → logprob: -9.49654483795166
    8. '```' → logprob: -9.87154483795166
    9. '+++' → logprob: -9.99654483795166
    10. '+="' → logprob: -10.49654483795166

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47407740354537964
    2. ' ' → logprob: -0.9740774035453796
    3. ' ' → logprob: -15.224077224731445
    4. '```' → logprob: -15.974077224731445
    5. '   ' → logprob: -17.974077224731445
    6. '	' → logprob: -18.474077224731445
    7. '<|end|>' → logprob: -18.599077224731445
    8. '+' → logprob: -20.099077224731445
    9. '１' → logprob: -20.099077224731445
    10. '  ' → logprob: -20.224077224731445

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.375001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '１' → logprob: -19.625001907348633
    6. '`' → logprob: -19.812501907348633
    7. '' → logprob: -20.937501907348633
    8. '۱' → logprob: -21.125001907348633
    9. '``' → logprob: -21.375001907348633
    10. '  ' → logprob: -21.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 95
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 41.05%
Précision adaptée (1ère position): 44.21%
Précision (top 10): 84.21%
================================================================================
