================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input = input()

first_number_str, second_number_str = user_input.split(" ")

first_number_int = int(first_number_str)
second_number_int = int(second_number_str)

is_first_number_contains_zero = "0" in first_number_str
is_second_number_contains_zero = "0" in second_number_str
is_first_number_greater_than_nine = first_number_int > 9
is_second_number_greater_than_nine = second_number_int > 9

if (
    is_first_number_contains_zero or
    is_second_number_contains_zero or
    is_first_number_greater_than_nine or
    is_second_number_greater_than_nine
):
    print(-1)
else:
    print(first_number_int * second_number_int)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07332736998796463
    2. 'input' → logprob: -3.4483273029327393
    3. ' ' → logprob: -4.323327541351318
    4. ''' → logprob: -4.323327541351318
    5. '""' → logprob: -4.823327541351318
    6. ' input' → logprob: -6.198327541351318
    7. ' "' → logprob: -6.948327541351318
    8. '''' → logprob: -7.198327541351318
    9. ' ""' → logprob: -8.82332706451416
    10. '"user' → logprob: -8.82332706451416

Token 4: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004100485239177942
    2. '()' → logprob: -5.879100322723389
    3. '('' → logprob: -7.004100322723389
    4. '```' → logprob: -8.754100799560547
    5. ''' → logprob: -9.504100799560547
    6. '("("' → logprob: -9.879100799560547
    7. '(
' → logprob: -10.129100799560547
    8. '`' → logprob: -11.379100799560547
    9. '(`' → logprob: -11.504100799560547
    10. '"' → logprob: -12.004100799560547

Token 5: 'first' (ID: 7743)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0074027650989592075
    2. 'if' → logprob: -6.1324028968811035
    3. '_' → logprob: -6.6324028968811035
    4. '```' → logprob: -7.1324028968811035
    5. '+' → logprob: -7.3824028968811035
    6. '=' → logprob: -7.6324028968811035
    7. '.strip' → logprob: -7.7574028968811035
    8. ' if' → logprob: -8.257402420043945
    9. '.
' → logprob: -8.382402420043945
    10. '#' → logprob: -8.757402420043945

Token 6: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11607391387224197
    2. '.' → logprob: -2.7410738468170166
    3. '=' → logprob: -3.6160738468170166
    4. ' =' → logprob: -5.116074085235596
    5. ' ' → logprob: -5.616074085235596
    6. ')' → logprob: -6.241074085235596
    7. '(' → logprob: -6.366074085235596
    8. '[' → logprob: -6.741074085235596
    9. '\' → logprob: -7.116074085235596
    10. 'space' → logprob: -7.366074085235596

Token 7: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4702973961830139
    2. ' =' → logprob: -1.3452973365783691
    3. '=' → logprob: -2.470297336578369
    4. ' ' → logprob: -4.095297336578369
    5. '_space' → logprob: -5.345297336578369
    6. ')' → logprob: -5.595297336578369
    7. '.' → logprob: -6.845297336578369
    8. '[' → logprob: -6.970297336578369
    9. 'space' → logprob: -7.720297336578369
    10. '+' → logprob: -7.720297336578369

Token 8: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21482326090335846
    2. '=' → logprob: -1.8398232460021973
    3. '[' → logprob: -3.5898232460021973
    4. '[:]' → logprob: -5.964823246002197
    5. '.' → logprob: -6.339823246002197
    6. 's' → logprob: -6.964823246002197
    7. ' +=' → logprob: -8.589823722839355
    8. '.strip' → logprob: -8.839823722839355
    9. '[]' → logprob: -8.964823722839355
    10. ' ' → logprob: -8.964823722839355

Token 9: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.07517529278993607
    2. ' second' → logprob: -3.3251752853393555
    3. 'user' → logprob: -3.5751752853393555
    4. ' user' → logprob: -5.5751752853393555
    5. ' ' → logprob: -5.7001752853393555
    6. 'rest' → logprob: -8.075175285339355
    7. ' =' → logprob: -8.075175285339355
    8. '=' → logprob: -8.950175285339355
    9. 'space' → logprob: -8.950175285339355
    10. ' rest' → logprob: -8.950175285339355

Token 10: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10659211128950119
    2. '_number' → logprob: -3.4815921783447266
    3. '_user' → logprob: -3.6065921783447266
    4. '_token' → logprob: -3.7315921783447266
    5. '_name' → logprob: -5.106592178344727
    6. '_input' → logprob: -5.356592178344727
    7. '_space' → logprob: -6.231592178344727
    8. '_str' → logprob: -7.231592178344727
    9. '_s' → logprob: -7.606592178344727
    10. '_second' → logprob: -7.606592178344727

Token 11: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.19402305781841278
    2. '_' → logprob: -2.0690231323242188
    3. ' =' → logprob: -3.1940231323242188
    4. '=' → logprob: -5.944023132324219
    5. '_s' → logprob: -6.444023132324219
    6. '_token' → logprob: -6.569023132324219
    7. ' _' → logprob: -7.694023132324219
    8. '_split' → logprob: -7.694023132324219
    9. '_space' → logprob: -8.069023132324219
    10. '_input' → logprob: -8.194023132324219

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009081429801881313
    2. '=' → logprob: -4.7590813636779785
    3. ',' → logprob: -7.7590813636779785
    4. ' ' → logprob: -11.634081840515137
    5. ' =
' → logprob: -11.884081840515137
    6. '<|end|>' → logprob: -11.884081840515137
    7. ' ,' → logprob: -12.134081840515137
    8. ')' → logprob: -12.384081840515137
    9. '[' → logprob: -13.509081840515137
    10. ' =)' → logprob: -13.759081840515137

Token 13: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5759398937225342
    2. ' user' → logprob: -0.8259398937225342
    3. ' ' → logprob: -15.825940132141113
    4. 'first' → logprob: -16.450939178466797
    5. ' first' → logprob: -16.575939178466797
    6. '[user' → logprob: -16.950939178466797
    7. '(user' → logprob: -17.325939178466797
    8. '	user' → logprob: -17.950939178466797
    9. 'input' → logprob: -18.575939178466797
    10. '"user' → logprob: -18.825939178466797

Token 14: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.006309846881777048
    2. '_' → logprob: -5.131309986114502
    3. '_output' → logprob: -9.131309509277344
    4. ' _' → logprob: -9.631309509277344
    5. '_s' → logprob: -9.881309509277344
    6. '_first' → logprob: -10.256309509277344
    7. '_inputs' → logprob: -10.381309509277344
    8. '```' → logprob: -11.006309509277344
    9. '_f' → logprob: -11.506309509277344
    10. '_name' → logprob: -11.506309509277344

Token 15: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.005470667965710163
    2. '.' → logprob: -5.2554707527160645
    3. '.strip' → logprob: -8.380470275878906
    4. '[' → logprob: -13.005470275878906
    5. '.replace' → logprob: -13.255470275878906
    6. '.s' → logprob: -14.255470275878906
    7. '.readline' → logprob: -14.255470275878906
    8. '[:]' → logprob: -14.380470275878906
    9. 'split' → logprob: -14.755470275878906
    10. '.Split' → logprob: -15.005470275878906

Token 16: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.14448115229606628
    2. '(' → logprob: -2.3944811820983887
    3. '("("' → logprob: -3.1444811820983887
    4. ''' → logprob: -8.76948070526123
    5. '(`' → logprob: -11.51948070526123
    6. '`' → logprob: -11.76948070526123
    7. '('(' → logprob: -11.76948070526123
    8. '(('' → logprob: -12.01948070526123
    9. ''(' → logprob: -12.14448070526123
    10. '((' → logprob: -12.26948070526123

Token 17: ' ")

' (ID: 154069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27033594250679016
    2. '()' → logprob: -2.3953359127044678
    3. '(' → logprob: -2.5203359127044678
    4. ',' → logprob: -3.3953359127044678
    5. ' ' → logprob: -3.8953359127044678
    6. ' )' → logprob: -4.895336151123047
    7. '+' → logprob: -6.770336151123047
    8. '")' → logprob: -7.395336151123047
    9. ' ")' → logprob: -7.645336151123047
    10. ' ,' → logprob: -7.895336151123047

Token 18: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.00317783304490149
    2. '+' → logprob: -7.503177642822266
    3. ' first' → logprob: -7.503177642822266
    4. 'a' → logprob: -7.503177642822266
    5. 'result' → logprob: -7.878177642822266
    6. '#' → logprob: -8.503177642822266
    7. 'f' → logprob: -8.753177642822266
    8. '=' → logprob: -9.128177642822266
    9. 'third' → logprob: -9.253177642822266
    10. ',' → logprob: -9.378177642822266

Token 19: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.2019476741552353
    2. '_' → logprob: -1.7019476890563965
    3. '_num' → logprob: -8.326947212219238
    4. '_n' → logprob: -8.451947212219238
    5. '_numbers' → logprob: -9.701947212219238
    6. '_variable' → logprob: -12.701947212219238
    7. '_second' → logprob: -12.826947212219238
    8. '_user' → logprob: -12.951947212219238
    9. '_Number' → logprob: -13.201947212219238
    10. ' _' → logprob: -13.701947212219238

Token 20: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09022162854671478
    2. '_str' → logprob: -2.465221643447876
    3. '[' → logprob: -7.340221405029297
    4. '<|end|>' → logprob: -8.840221405029297
    5. ' _' → logprob: -9.090221405029297
    6. '_s' → logprob: -9.340221405029297
    7. '._' → logprob: -10.590221405029297
    8. '.' → logprob: -10.715221405029297
    9. '_strip' → logprob: -10.715221405029297
    10. '```' → logprob: -10.840221405029297

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0647250413894653
    2. ')' → logprob: -1.3147250413894653
    3. '<|end|>' → logprob: -1.3147250413894653
    4. '.' → logprob: -3.314724922180176
    5. '_' → logprob: -3.689724922180176
    6. '+' → logprob: -4.064724922180176
    7. '<|end|>' → logprob: -5.064724922180176
    8. ' +' → logprob: -5.189724922180176
    9. '```' → logprob: -5.189724922180176
    10. ' ' → logprob: -5.564724922180176

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858816787600517
    2. ' int' → logprob: -3.048588275909424
    3. '=int' → logprob: -15.798587799072266
    4. '(int' → logprob: -15.923587799072266
    5. ' ' → logprob: -16.048587799072266
    6. '[int' → logprob: -16.298587799072266
    7. '```' → logprob: -16.673587799072266
    8. '<int' → logprob: -16.923587799072266
    9. '	int' → logprob: -17.298587799072266
    10. 'first' → logprob: -18.048587799072266

Token 23: '(first' (ID: 31998)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.252357542514801
    2. '(first' → logprob: -1.5023574829101562
    3. '(user' → logprob: -8.002357482910156
    4. '(second' → logprob: -9.752357482910156
    5. '(f' → logprob: -11.877357482910156
    6. '("("' → logprob: -12.002357482910156
    7. 'first' → logprob: -12.127357482910156
    8. ' (' → logprob: -12.377357482910156
    9. '('' → logprob: -12.502357482910156
    10. '(

' → logprob: -13.127357482910156

Token 24: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0009348054882138968
    2. '_' → logprob: -7.000934600830078
    3. ')_' → logprob: -12.250934600830078
    4. '_num' → logprob: -12.250934600830078
    5. '_numbers' → logprob: -12.500934600830078
    6. '_n' → logprob: -12.875934600830078
    7. ')' → logprob: -13.625934600830078
    8. '_token' → logprob: -13.875934600830078
    9. '_)' → logprob: -13.875934600830078
    10. '_second' → logprob: -14.250934600830078

Token 25: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.8921695047756657e-05
    2. ')' → logprob: -11.125028610229492
    3. '_' → logprob: -12.500028610229492
    4. 'str' → logprob: -12.750028610229492
    5. '_)' → logprob: -12.875028610229492
    6. '_s' → logprob: -13.000028610229492
    7. ')_' → logprob: -13.375028610229492
    8. '_sn' → logprob: -15.000028610229492
    9. '_token' → logprob: -15.500028610229492
    10. '_st' → logprob: -16.000028610229492

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '+' → logprob: -12.875003814697266
    3. ' )' → logprob: -13.500003814697266
    4. ')
' → logprob: -17.125003814697266
    5. ')+' → logprob: -17.500003814697266
    6. '),' → logprob: -17.625003814697266
    7. '+)' → logprob: -17.875003814697266
    8. '*' → logprob: -18.000003814697266
    9. '')' → logprob: -18.125003814697266
    10. ']' → logprob: -18.375003814697266

Token 27: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.6137440204620361
    2. '+' → logprob: -0.8637440204620361
    3. ' second' → logprob: -4.363743782043457
    4. '+
' → logprob: -4.488743782043457
    5. ' 
' → logprob: -5.363743782043457
    6. ' +' → logprob: -5.488743782043457
    7. '  
' → logprob: -6.113743782043457
    8. '+

' → logprob: -7.738743782043457
    9. '*' → logprob: -8.363743782043457
    10. ' +
' → logprob: -8.863743782043457

Token 28: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0010799680603668094
    2. '_' → logprob: -7.00108003616333
    3. '_numbers' → logprob: -9.126079559326172
    4. '_num' → logprob: -10.876079559326172
    5. '_second' → logprob: -11.001079559326172
    6. ' _' → logprob: -12.001079559326172
    7. '_Number' → logprob: -12.626079559326172
    8. '_user' → logprob: -13.001079559326172
    9. '_n' → logprob: -13.126079559326172
    10. ')_' → logprob: -13.501079559326172

Token 29: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.04893149435520172
    2. '_str' → logprob: -3.04893159866333
    3. '_' → logprob: -8.798931121826172
    4. 'int' → logprob: -9.173931121826172
    5. ' _' → logprob: -11.298931121826172
    6. '_add' → logprob: -11.798931121826172
    7. '_string' → logprob: -12.173931121826172
    8. '_integer' → logprob: -12.173931121826172
    9. ''_' → logprob: -12.298931121826172
    10. '_s' → logprob: -12.423931121826172

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007946225814521313
    2. '=' → logprob: -5.007946014404297
    3. '_' → logprob: -7.257946014404297
    4. ' ' → logprob: -8.882946014404297
    5. ')' → logprob: -8.882946014404297
    6. ' +=' → logprob: -9.507946014404297
    7. ' _' → logprob: -10.007946014404297
    8. ' +' → logprob: -10.257946014404297
    9. '+' → logprob: -10.382946014404297
    10. '<|end|>' → logprob: -11.632946014404297

Token 31: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07889308780431747
    2. 'int' → logprob: -2.5788931846618652
    3. '<int' → logprob: -14.328892707824707
    4. '=int' → logprob: -14.328892707824707
    5. ' second' → logprob: -14.578892707824707
    6. 'second' → logprob: -14.578892707824707
    7. ' ' → logprob: -14.703892707824707
    8. '(int' → logprob: -15.078892707824707
    9. ' ' → logprob: -15.578892707824707
    10. '[int' → logprob: -16.078893661499023

Token 32: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.10200373083353043
    2. '(' → logprob: -2.352003812789917
    3. '(first' → logprob: -6.352003574371338
    4. '("("' → logprob: -10.602004051208496
    5. '(_' → logprob: -11.852004051208496
    6. '_second' → logprob: -12.227004051208496
    7. 'second' → logprob: -12.477004051208496
    8. '('' → logprob: -13.227004051208496
    9. ' (' → logprob: -13.352004051208496
    10. '(
' → logprob: -13.852004051208496

Token 33: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00010473522706888616
    2. '_' → logprob: -9.375104904174805
    3. 'umber' → logprob: -12.625104904174805
    4. '_user' → logprob: -12.875104904174805
    5. ')_' → logprob: -13.250104904174805
    6. 'number' → logprob: -13.375104904174805
    7. ')' → logprob: -13.500104904174805
    8. '_character' → logprob: -13.500104904174805
    9. '_token' → logprob: -13.750104904174805
    10. 'Number' → logprob: -13.750104904174805

Token 34: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.010107594542205334
    2. '_int' → logprob: -4.760107517242432
    3. '_' → logprob: -7.010107517242432
    4. ')_' → logprob: -8.01010799407959
    5. ')' → logprob: -8.88510799407959
    6. '_)' → logprob: -9.63510799407959
    7. '_i' → logprob: -10.76010799407959
    8. '_s' → logprob: -11.26010799407959
    9. '_sn' → logprob: -12.38510799407959
    10. ' _' → logprob: -13.01010799407959

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. ')
' → logprob: -16.5
    4. '))' → logprob: -19.0
    5. '`)' → logprob: -19.25
    6. '')' → logprob: -19.25
    7. ')`' → logprob: -19.375
    8. '```' → logprob: -19.375
    9. '+' → logprob: -19.5
    10. '),' → logprob: -19.5

Token 36: 'is' (ID: 276)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08317798376083374
    2. '+' → logprob: -3.5831780433654785
    3. '
' → logprob: -3.8331780433654785
    4. '+
' → logprob: -4.8331780433654785
    5. 'sum' → logprob: -4.9581780433654785
    6. 'print' → logprob: -5.7081780433654785
    7. 'if' → logprob: -5.8331780433654785
    8. '#' → logprob: -6.0831780433654785
    9. '\n' → logprob: -6.4581780433654785
    10. 'n' → logprob: -7.0831780433654785

Token 37: '_first' (ID: 29347)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08461571484804153
    2. ' first' → logprob: -3.584615707397461
    3. 'first' → logprob: -3.959615707397461
    4. ' ' → logprob: -4.209615707397461
    5. '_first' → logprob: -4.334615707397461
    6. '(first' → logprob: -5.959615707397461
    7. ' _' → logprob: -6.584615707397461
    8. '_second' → logprob: -7.709615707397461
    9. '[first' → logprob: -8.334615707397461
    10. '	first' → logprob: -8.959615707397461

Token 38: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005544055253267288
    2. '_equal' → logprob: -6.380544185638428
    3. '_number' → logprob: -6.630544185638428
    4. ' _' → logprob: -7.630544185638428
    5. '_first' → logprob: -8.00554370880127
    6. '_second' → logprob: -8.00554370880127
    7. '_g' → logprob: -8.00554370880127
    8. '_even' → logprob: -8.38054370880127
    9. '_less' → logprob: -9.13054370880127
    10. '_user' → logprob: -9.50554370880127

Token 39: '_contains' (ID: 159996)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10061745345592499
    2. '_g' → logprob: -2.7256174087524414
    3. '_even' → logprob: -3.7256174087524414
    4. '_equal' → logprob: -5.475617408752441
    5. '_less' → logprob: -7.600617408752441
    6. '_div' → logprob: -8.350617408752441
    7. ' _' → logprob: -8.475617408752441
    8. '_positive' → logprob: -8.475617408752441
    9. '_gt' → logprob: -9.350617408752441
    10. '_a' → logprob: -9.850617408752441

Token 40: '_zero' (ID: 53468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12212830036878586
    2. '(' → logprob: -2.2471282482147217
    3. '(second' → logprob: -5.872128486633301
    4. '_second' → logprob: -6.122128486633301
    5. '(first' → logprob: -6.497128486633301
    6. '_space' → logprob: -8.1221284866333
    7. '_first' → logprob: -8.2471284866333
    8. '("_' → logprob: -8.2471284866333
    9. '(_)' → logprob: -8.3721284866333
    10. '_digit' → logprob: -8.4971284866333

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9046396017074585
    2. '_' → logprob: -1.1546396017074585
    3. '=' → logprob: -1.2796396017074585
    4. 's' → logprob: -7.404639720916748
    5. '(' → logprob: -7.904639720916748
    6. '_space' → logprob: -8.40463924407959
    7. '_=' → logprob: -8.40463924407959
    8. ')' → logprob: -8.77963924407959
    9. ' ' → logprob: -9.40463924407959
    10. ' _' → logprob: -9.77963924407959

Token 42: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2668187618255615
    2. '"' → logprob: -1.8918187618255615
    3. ' '' → logprob: -2.8918187618255615
    4. ' "' → logprob: -3.6418187618255615
    5. '0' → logprob: -7.766819000244141
    6. 'first' → logprob: -7.891819000244141
    7. ' first' → logprob: -8.14181900024414
    8. ' ' → logprob: -8.14181900024414
    9. 'str' → logprob: -9.14181900024414
    10. '('' → logprob: -9.64181900024414

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001182052365038544
    2. '"' → logprob: -9.500118255615234
    3. 'str' → logprob: -10.875118255615234
    4. ''' → logprob: -11.375118255615234
    5. ' ' → logprob: -11.375118255615234
    6. '00' → logprob: -14.625118255615234
    7. ' "' → logprob: -14.875118255615234
    8. ' str' → logprob: -16.562618255615234
    9. ''"' → logprob: -16.625118255615234
    10. 'zero' → logprob: -17.125118255615234

Token 44: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002759226132184267
    2. '"in' → logprob: -6.5027594566345215
    3. 'in' → logprob: -7.1277594566345215
    4. '0' → logprob: -7.8777594566345215
    5. ' "' → logprob: -10.502758979797363
    6. ' in' → logprob: -11.252758979797363
    7. '1' → logprob: -11.752758979797363
    8. 'a' → logprob: -12.252758979797363
    9. 'i' → logprob: -12.377758979797363
    10. '2' → logprob: -12.377758979797363

Token 45: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5250890851020813
    2. ' in' → logprob: -0.9000890851020813
    3. ' not' → logprob: -6.525089263916016
    4. 'not' → logprob: -8.150089263916016
    5. ' ' → logprob: -8.650089263916016
    6. ')' → logprob: -12.025089263916016
    7. ' ' → logprob: -12.525089263916016
    8. 'n' → logprob: -12.775089263916016
    9. 'i' → logprob: -12.900089263916016
    10. '	in' → logprob: -12.900089263916016

Token 46: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.07890168577432632
    2. ' first' → logprob: -2.578901767730713
    3. 'second' → logprob: -11.453901290893555
    4. 'f' → logprob: -14.953901290893555
    5. ' ' → logprob: -15.203901290893555
    6. ' second' → logprob: -15.453901290893555
    7. '	first' → logprob: -15.578901290893555
    8. '(first' → logprob: -16.328901290893555
    9. '[first' → logprob: -16.328901290893555
    10. 'First' → logprob: -16.328901290893555

Token 47: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.500001907348633
    3. '_first' → logprob: -15.875001907348633
    4. '_num' → logprob: -16.125001907348633
    5. '_n' → logprob: -16.500001907348633
    6. ' _' → logprob: -16.625001907348633
    7. 'number' → logprob: -16.625001907348633
    8. '_numbers' → logprob: -18.250001907348633
    9. 'Number' → logprob: -19.000001907348633
    10. '_user' → logprob: -19.375001907348633

Token 48: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.001504982472397387
    2. '_int' → logprob: -6.501504898071289
    3. 'str' → logprob: -13.501504898071289
    4. '_' → logprob: -13.876504898071289
    5. 'int' → logprob: -15.626504898071289
    6. '_string' → logprob: -16.75150489807129
    7. ' _' → logprob: -17.62650489807129
    8. '_s' → logprob: -17.62650489807129
    9. '"_' → logprob: -17.87650489807129
    10. ''_' → logprob: -17.87650489807129

Token 49: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.2019410133361816
    2. ' and' → logprob: -1.3269410133361816
    3. '
' → logprob: -1.7019410133361816
    4. 'and' → logprob: -1.9519410133361816
    5. 'or' → logprob: -3.2019410133361816
    6. '\n' → logprob: -3.5769410133361816
    7. '<|end|>' → logprob: -4.451941013336182
    8. 'if' → logprob: -5.076941013336182
    9. 'newline' → logprob: -5.326941013336182
    10. ' is' → logprob: -5.826941013336182

Token 50: 'is' (ID: 276)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.3785678148269653
    2. ' and' → logprob: -1.6285678148269653
    3. 'and' → logprob: -1.6285678148269653
    4. 'is' → logprob: -2.003567695617676
    5. 'or' → logprob: -2.253567695617676
    6. ' is' → logprob: -3.253567695617676
    7. '<|end|>' → logprob: -3.503567695617676
    8. '
' → logprob: -4.003567695617676
    9. 'if' → logprob: -4.128567695617676
    10. ' ' → logprob: -5.628567695617676

Token 51: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.0009943449404090643
    2. ' second' → logprob: -7.8759942054748535
    3. 'second' → logprob: -8.000994682312012
    4. '_first' → logprob: -8.250994682312012
    5. '_' → logprob: -11.875994682312012
    6. ' _' → logprob: -12.000994682312012
    7. '	second' → logprob: -12.625994682312012
    8. 'Second' → logprob: -14.875994682312012
    9. '_SECOND' → logprob: -15.375994682312012
    10. ' ' → logprob: -15.750994682312012

Token 52: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00018196819291915745
    2. ' _' → logprob: -9.375182151794434
    3. '_numbers' → logprob: -10.625182151794434
    4. '_' → logprob: -10.625182151794434
    5. '_num' → logprob: -10.750182151794434
    6. '_second' → logprob: -11.125182151794434
    7. '_Number' → logprob: -12.750182151794434
    8. '_user' → logprob: -14.000182151794434
    9. '"_' → logprob: -14.125182151794434
    10. '_name' → logprob: -14.125182151794434

Token 53: '_contains' (ID: 159996)
  Prédit: '_contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_contains' → logprob: -0.001052338513545692
    2. '_cont' → logprob: -7.001052379608154
    3. '_' → logprob: -9.126051902770996
    4. '_str' → logprob: -11.751051902770996
    5. ' _' → logprob: -12.001051902770996
    6. 'contains' → logprob: -12.126051902770996
    7. '_con' → logprob: -12.251051902770996
    8. '_contents' → logprob: -12.501051902770996
    9. '__' → logprob: -14.251051902770996
    10. 'Contains' → logprob: -14.751051902770996

Token 54: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.00048298496403731406
    2. '_' → logprob: -8.375482559204102
    3. '"_' → logprob: -8.625482559204102
    4. '_second' → logprob: -9.750482559204102
    5. 'zero' → logprob: -12.375482559204102
    6. ' _' → logprob: -12.375482559204102
    7. '0' → logprob: -13.500482559204102
    8. '_ZERO' → logprob: -14.000482559204102
    9. ''_' → logprob: -14.125482559204102
    10. ' "_' → logprob: -14.750482559204102

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04339957609772682
    2. '_' → logprob: -4.418399810791016
    3. ' ' → logprob: -4.543399810791016
    4. ' _' → logprob: -4.793399810791016
    5. '=' → logprob: -4.918399810791016
    6. ' ==' → logprob: -5.543399810791016
    7. ')' → logprob: -9.543399810791016
    8. '<|end|>' → logprob: -9.918399810791016
    9. '[' → logprob: -11.043399810791016
    10. ' is' → logprob: -11.168399810791016

Token 56: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08009560406208038
    2. ' second' → logprob: -3.2050955295562744
    3. ' "' → logprob: -3.9550955295562744
    4. 'second' → logprob: -4.0800957679748535
    5. ' ' → logprob: -8.080095291137695
    6. ''' → logprob: -10.705095291137695
    7. ' ' → logprob: -12.330095291137695
    8. '(second' → logprob: -12.705095291137695
    9. '	second' → logprob: -12.830095291137695
    10. ' f' → logprob: -12.955095291137695

Token 57: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4744432866573334
    2. '0' → logprob: -0.9744433164596558
    3. ' ' → logprob: -8.349443435668945
    4. 'second' → logprob: -9.224443435668945
    5. ' "' → logprob: -10.849443435668945
    6. ''' → logprob: -11.974443435668945
    7. ' second' → logprob: -13.099443435668945
    8. '`' → logprob: -14.099443435668945
    9. '")' → logprob: -14.474443435668945
    10. '""' → logprob: -14.724443435668945

Token 58: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007225605077110231
    2. 'in' → logprob: -8.000722885131836
    3. ' in' → logprob: -8.250722885131836
    4. '"in' → logprob: -9.375722885131836
    5. '")' → logprob: -10.500722885131836
    6. ' "' → logprob: -12.000722885131836
    7. '```' → logprob: -12.375722885131836
    8. '"`' → logprob: -14.625722885131836
    9. ''' → logprob: -14.625722885131836
    10. ')' → logprob: -14.875722885131836

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03812938928604126
    2. 'in' → logprob: -3.2881293296813965
    3. ' ' → logprob: -9.413129806518555
    4. ' i' → logprob: -13.538129806518555
    5. ' ' → logprob: -13.538129806518555
    6. ')' → logprob: -13.788129806518555
    7. '<|end|>' → logprob: -14.413129806518555
    8. '_' → logprob: -15.288129806518555
    9. 'i' → logprob: -15.663129806518555
    10. '  ' → logprob: -15.663129806518555

Token 60: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.04858827963471413
    2. ' second' → logprob: -3.048588275909424
    3. 'first' → logprob: -14.798588752746582
    4. '	second' → logprob: -15.423588752746582
    5. ' ' → logprob: -15.548588752746582
    6. 'Second' → logprob: -16.923587799072266
    7. '(second' → logprob: -16.923587799072266
    8. 'se' → logprob: -17.048587799072266
    9. '`' → logprob: -17.298587799072266
    10. 'third' → logprob: -17.548587799072266

Token 61: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.292907877039397e-06
    2. '_second' → logprob: -13.12500286102295
    3. '_' → logprob: -14.37500286102295
    4. 'number' → logprob: -15.25000286102295
    5. 'Number' → logprob: -16.375003814697266
    6. '_user' → logprob: -16.500003814697266
    7. ' _' → logprob: -17.500003814697266
    8. '_numbers' → logprob: -17.625003814697266
    9. 'umber' → logprob: -17.750003814697266
    10. '_first' → logprob: -18.125003814697266

Token 62: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.4153549020411447e-05
    2. 'str' → logprob: -11.00002384185791
    3. '_int' → logprob: -11.87502384185791
    4. '_' → logprob: -15.25002384185791
    5. 'int' → logprob: -15.87502384185791
    6. '_s' → logprob: -16.875024795532227
    7. 'Str' → logprob: -18.250024795532227
    8. '```' → logprob: -18.250024795532227
    9. 's' → logprob: -18.500024795532227
    10. ''_' → logprob: -19.000024795532227

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5912174582481384
    2. 'if' → logprob: -1.0912175178527832
    3. '

' → logprob: -2.216217517852783
    4. ' if' → logprob: -6.966217517852783
    5. '<|end|>' → logprob: -8.716217041015625
    6. '```' → logprob: -8.966217041015625
    7. '
' → logprob: -9.466217041015625
    8. 'result' → logprob: -9.841217041015625
    9. '\n' → logprob: -9.966217041015625
    10. 'n' → logprob: -11.216217041015625

Token 64: 'is' (ID: 276)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3449574410915375
    2. '

' → logprob: -1.4699574708938599
    3. 'if' → logprob: -2.8449573516845703
    4. ' if' → logprob: -6.21995735168457
    5. '\n' → logprob: -7.21995735168457
    6. '<|end|>' → logprob: -8.21995735168457
    7. '```' → logprob: -8.59495735168457
    8. 'newline' → logprob: -8.96995735168457
    9. '
' → logprob: -9.21995735168457
    10. '#' → logprob: -9.84495735168457

Token 65: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.005421819631010294
    2. '_' → logprob: -5.5054216384887695
    3. 'first' → logprob: -7.2554216384887695
    4. ' _' → logprob: -8.13042163848877
    5. ' first' → logprob: -8.75542163848877
    6. '_second' → logprob: -9.25542163848877
    7. '_f' → logprob: -10.50542163848877
    8. '_number' → logprob: -10.75542163848877
    9. '_zero' → logprob: -11.38042163848877
    10. '_not' → logprob: -12.38042163848877

Token 66: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0001294030516874045
    2. '_' → logprob: -9.250129699707031
    3. '_numbers' → logprob: -11.625129699707031
    4. 'number' → logprob: -11.875129699707031
    5. ' _' → logprob: -11.875129699707031
    6. '_second' → logprob: -12.750129699707031
    7. '_num' → logprob: -13.375129699707031
    8. '_first' → logprob: -14.250129699707031
    9. '_n' → logprob: -14.625129699707031
    10. '_zero' → logprob: -14.750129699707031

Token 67: '_g' (ID: 5439)
  Prédit: '_contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_contains' → logprob: -0.5455411076545715
    2. '_int' → logprob: -1.2955410480499268
    3. '_cont' → logprob: -2.2955410480499268
    4. '_' → logprob: -3.1705410480499268
    5. '_str' → logprob: -6.795541286468506
    6. '_g' → logprob: -7.045541286468506
    7. '_less' → logprob: -7.295541286468506
    8. ' _' → logprob: -7.795541286468506
    9. '>' → logprob: -8.545540809631348
    10. '<int' → logprob: -9.545540809631348

Token 68: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -7.52919222577475e-05
    2. 're' → logprob: -10.875075340270996
    3. 'reat' → logprob: -11.000075340270996
    4. 'reter' → logprob: -11.125075340270996
    5. 't' → logprob: -11.500075340270996
    6. 'reate' → logprob: -12.000075340270996
    7. 'reated' → logprob: -13.125075340270996
    8. 'ret' → logprob: -13.750075340270996
    9. '>' → logprob: -13.875075340270996
    10. 'greater' → logprob: -14.000075340270996

Token 69: '_than' (ID: 134758)
  Prédit: '_than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.7331750988960266
    2. '_' → logprob: -0.9831750988960266
    3. '=' → logprob: -2.483175039291382
    4. ' =' → logprob: -2.858175039291382
    5. 'than' → logprob: -6.608175277709961
    6. ' _' → logprob: -6.733175277709961
    7. '>' → logprob: -7.733175277709961
    8. '_=' → logprob: -8.108175277709961
    9. '_equal' → logprob: -8.358175277709961
    10. ' ' → logprob: -8.358175277709961

Token 70: '_n' (ID: 2170)
  Prédit: '_second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.03421667963266373
    2. ' second' → logprob: -4.40921688079834
    3. 'second' → logprob: -4.40921688079834
    4. '_' → logprob: -4.78421688079834
    5. ' ' → logprob: -7.53421688079834
    6. ' =' → logprob: -8.78421688079834
    7. '=' → logprob: -9.40921688079834
    8. '	second' → logprob: -9.65921688079834
    9. ' _' → logprob: -10.53421688079834
    10. '_first' → logprob: -11.28421688079834

Token 71: 'ine' (ID: 514)
  Prédit: 'umber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umber' → logprob: -1.2520077228546143
    2. '_second' → logprob: -1.2520077228546143
    3. 'second' → logprob: -1.6270077228546143
    4. 'int' → logprob: -2.8770077228546143
    5. 'um' → logprob: -3.3770077228546143
    6. 'ine' → logprob: -3.5020077228546143
    7. '_int' → logprob: -3.6270077228546143
    8. '_than' → logprob: -4.252007484436035
    9. '_or' → logprob: -4.752007484436035
    10. '_first' → logprob: -5.002007484436035

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00615440821275115
    2. ' ' → logprob: -5.506154537200928
    3. '=' → logprob: -6.381154537200928
    4. ' _' → logprob: -8.88115406036377
    5. '_' → logprob: -9.00615406036377
    6. ' >' → logprob: -9.75615406036377
    7. '>' → logprob: -11.25615406036377
    8. ' ==' → logprob: -11.25615406036377
    9. ' ' → logprob: -12.13115406036377
    10. ' >=' → logprob: -12.38115406036377

Token 73: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.018217725679278374
    2. 'first' → logprob: -4.01821756362915
    3. ' int' → logprob: -10.018218040466309
    4. 'int' → logprob: -11.518218040466309
    5. ' ' → logprob: -12.018218040466309
    6. '"' → logprob: -13.518218040466309
    7. '	first' → logprob: -13.893218040466309
    8. 'f' → logprob: -14.143218040466309
    9. '(first' → logprob: -14.143218040466309
    10. ' any' → logprob: -14.268218040466309

Token 74: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.060365608893335e-05
    2. '_' → logprob: -10.500041007995605
    3. '_n' → logprob: -12.125041007995605
    4. '_num' → logprob: -12.500041007995605
    5. ' _' → logprob: -13.125041007995605
    6. '_numbers' → logprob: -14.500041007995605
    7. 'number' → logprob: -14.875041007995605
    8. '```' → logprob: -15.625041007995605
    9. 'umber' → logprob: -15.750041007995605
    10. '_name' → logprob: -16.50004005432129

Token 75: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.3319124011322856e-05
    2. '_str' → logprob: -11.625022888183594
    3. '_' → logprob: -11.875022888183594
    4. '>' → logprob: -12.375022888183594
    5. '_in' → logprob: -13.125022888183594
    6. 'int' → logprob: -14.750022888183594
    7. '_i' → logprob: -15.125022888183594
    8. '```' → logprob: -16.125022888183594
    9. ' _' → logprob: -16.625022888183594
    10. ' >' → logprob: -16.875022888183594

Token 76: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01622205413877964
    2. '>' → logprob: -4.14122200012207
    3. ' ' → logprob: -9.14122200012207
    4. ' >=' → logprob: -9.51622200012207
    5. ' ' → logprob: -13.14122200012207
    6. ' >
' → logprob: -14.14122200012207
    7. '>=' → logprob: -14.39122200012207
    8. ' >

' → logprob: -14.64122200012207
    9. ' <' → logprob: -14.76622200012207
    10. '_' → logprob: -14.89122200012207

Token 77: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07889155298471451
    2. ' ' → logprob: -2.5788915157318115
    3. '99' → logprob: -14.32889175415039
    4. '  ' → logprob: -15.20389175415039
    5. ' nine' → logprob: -15.32889175415039
    6. '   ' → logprob: -15.57889175415039
    7. '۹' → logprob: -15.82889175415039
    8. ' ' → logprob: -15.82889175415039
    9. '９' → logprob: -16.70389175415039
    10. '999' → logprob: -16.95389175415039

Token 78: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.885492621222511e-05
    2. ' ' → logprob: -9.625068664550781
    3. '99' → logprob: -13.125068664550781
    4. '999' → logprob: -15.250068664550781
    5. '۹' → logprob: -16.25006866455078
    6. '90' → logprob: -16.37506866455078
    7. 'nine' → logprob: -16.75006866455078
    8. '９' → logprob: -16.87506866455078
    9. '  ' → logprob: -17.75006866455078
    10. '९' → logprob: -17.87506866455078

Token 79: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.718568742275238
    2. 'and' → logprob: -1.3435688018798828
    3. '
' → logprob: -2.093568801879883
    4. ' or' → logprob: -2.343568801879883
    5. 'or' → logprob: -4.468568801879883
    6. ' ' → logprob: -4.968568801879883
    7. '<|end|>' → logprob: -5.593568801879883
    8. '' → logprob: -6.093568801879883
    9. ' is' → logprob: -6.218568801879883
    10. 'is' → logprob: -6.593568801879883

Token 80: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04609105363488197
    2. ' is' → logprob: -3.671091079711914
    3. '
' → logprob: -5.171091079711914
    4. ' 
' → logprob: -5.671091079711914
    5. '\n' → logprob: -5.921091079711914
    6. ' ' → logprob: -6.671091079711914
    7. '<|end|>' → logprob: -6.671091079711914
    8. 'and' → logprob: -6.921091079711914
    9. '```' → logprob: -7.296091079711914
    10. '' → logprob: -7.296091079711914

Token 81: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.0012916665291413665
    2. 'second' → logprob: -6.876291751861572
    3. ' second' → logprob: -8.876291275024414
    4. '_' → logprob: -9.126291275024414
    5. '_first' → logprob: -12.251291275024414
    6. '	second' → logprob: -12.501291275024414
    7. ' _' → logprob: -14.001291275024414
    8. 'Second' → logprob: -14.876291275024414
    9. '_SECOND' → logprob: -15.126291275024414
    10. '(second' → logprob: -15.751291275024414

Token 82: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.001479505910538137
    2. '_' → logprob: -6.626479625701904
    3. '_second' → logprob: -10.001479148864746
    4. '_numbers' → logprob: -10.376479148864746
    5. '_num' → logprob: -10.626479148864746
    6. ' _' → logprob: -10.626479148864746
    7. '_n' → logprob: -12.251479148864746
    8. '_user' → logprob: -13.001479148864746
    9. '_code' → logprob: -13.251479148864746
    10. '_name' → logprob: -13.501479148864746

Token 83: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.015005139634013176
    2. '_int' → logprob: -4.640005111694336
    3. '_' → logprob: -5.890005111694336
    4. '>' → logprob: -6.265005111694336
    5. ' >' → logprob: -8.890005111694336
    6. 'int' → logprob: -9.140005111694336
    7. '_gt' → logprob: -9.640005111694336
    8. ' _' → logprob: -9.765005111694336
    9. '_str' → logprob: -9.765005111694336
    10. 'greater' → logprob: -10.640005111694336

Token 84: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.0003818140830844641
    2. 'reat' → logprob: -8.125381469726562
    3. 'r' → logprob: -10.500381469726562
    4. 'reate' → logprob: -10.500381469726562
    5. 't' → logprob: -11.125381469726562
    6. 're' → logprob: -12.125381469726562
    7. 'reter' → logprob: -12.875381469726562
    8. 'greater' → logprob: -13.375381469726562
    9. '_' → logprob: -13.500381469726562
    10. '```' → logprob: -14.125381469726562

Token 85: '_than' (ID: 134758)
  Prédit: '_than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -4.1318875446449965e-05
    2. 'than' → logprob: -10.375041007995605
    3. '_that' → logprob: -12.750041007995605
    4. '_THAN' → logprob: -12.750041007995605
    5. ' than' → logprob: -13.500041007995605
    6. 'thane' → logprob: -13.625041007995605
    7. '_' → logprob: -14.750041007995605
    8. '>' → logprob: -14.875041007995605
    9. 'Than' → logprob: -15.375041007995605
    10. '_then' → logprob: -15.500041007995605

Token 86: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00893374439328909
    2. '9' → logprob: -5.2589335441589355
    3. '_' → logprob: -5.8839335441589355
    4. ' ' → logprob: -7.2589335441589355
    5. ' _' → logprob: -9.008934020996094
    6. 'nine' → logprob: -9.883934020996094
    7. ' nine' → logprob: -11.133934020996094
    8. 'n' → logprob: -11.633934020996094
    9. '   ' → logprob: -14.008934020996094
    10. '_int' → logprob: -14.258934020996094

Token 87: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.01983274146914482
    2. 'int' → logprob: -4.519832611083984
    3. 'nine' → logprob: -5.019832611083984
    4. '9' → logprob: -7.269832611083984
    5. '_int' → logprob: -7.644832611083984
    6. 'in' → logprob: -8.644832611083984
    7. '```' → logprob: -8.769832611083984
    8. '_' → logprob: -9.269832611083984
    9. 'inete' → logprob: -9.519832611083984
    10. 'ight' → logprob: -9.769832611083984

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005237075500190258
    2. '=' → logprob: -5.255237102508545
    3. ' ' → logprob: -13.130236625671387
    4. ' ==' → logprob: -14.380236625671387
    5. ' =
' → logprob: -15.380236625671387
    6. ' >' → logprob: -15.380236625671387
    7. ' =)' → logprob: -16.255237579345703
    8. '>' → logprob: -17.005237579345703
    9. ')' → logprob: -17.005237579345703
    10. ' =
' → logprob: -18.005237579345703

Token 89: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.006732068490236998
    2. 'second' → logprob: -5.006731986999512
    3. '	second' → logprob: -11.631731986999512
    4. ' ' → logprob: -11.881731986999512
    5. ' ' → logprob: -14.881731986999512
    6. '(second' → logprob: -15.506731986999512
    7. ' secon' → logprob: -15.506731986999512
    8. '  ' → logprob: -16.506732940673828
    9. 'Second' → logprob: -16.881732940673828
    10. '_second' → logprob: -17.631732940673828

Token 90: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.6656825866666622e-05
    2. 'number' → logprob: -11.00002670288086
    3. '_' → logprob: -12.00002670288086
    4. '_second' → logprob: -13.25002670288086
    5. 'Number' → logprob: -14.00002670288086
    6. ' _' → logprob: -15.12502670288086
    7. '_numbers' → logprob: -15.62502670288086
    8. '```' → logprob: -15.75002670288086
    9. 'umber' → logprob: -16.25002670288086
    10. '_first' → logprob: -16.75002670288086

Token 91: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -5.466968650580384e-05
    2. 'int' → logprob: -9.875054359436035
    3. '_str' → logprob: -13.125054359436035
    4. 'Int' → logprob: -14.500054359436035
    5. '_' → logprob: -14.750054359436035
    6. '>' → logprob: -16.25005531311035
    7. '<int' → logprob: -16.75005531311035
    8. '```' → logprob: -16.75005531311035
    9. '_integer' → logprob: -17.87505531311035
    10. '<|end|>' → logprob: -18.37505531311035

Token 92: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.003178901970386505
    2. '>' → logprob: -5.75317907333374
    3. ' ' → logprob: -14.003178596496582
    4. ' <' → logprob: -16.0031795501709
    5. ' ' → logprob: -16.0031795501709
    6. ' >=' → logprob: -17.0031795501709
    7. ' >
' → logprob: -17.1281795501709
    8. '<|end|>' → logprob: -17.2531795501709
    9. ' >

' → logprob: -17.8781795501709
    10. ' >
' → logprob: -18.2531795501709

Token 93: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5759426951408386
    2. ' ' → logprob: -0.8259426951408386
    3. 'second' → logprob: -13.950942993164062
    4. '  ' → logprob: -14.575942993164062
    5. '<|end|>' → logprob: -14.700942993164062
    6. ' second' → logprob: -15.325942993164062
    7. ' nine' → logprob: -15.575942993164062
    8. '8' → logprob: -15.825942993164062
    9. '_' → logprob: -16.200942993164062
    10. '   ' → logprob: -16.325942993164062

Token 94: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۹' → logprob: -17.625001907348633
    4. '９' → logprob: -17.875001907348633
    5. '९' → logprob: -18.375001907348633
    6. '99' → logprob: -19.000001907348633
    7. '٩' → logprob: -19.750001907348633
    8. 'nine' → logprob: -19.750001907348633
    9. '৯' → logprob: -19.875001907348633
    10. ' ninth' → logprob: -20.250001907348633

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3579040467739105
    2. 'if' → logprob: -1.357904076576233
    3. '

' → logprob: -3.3579039573669434
    4. '\n' → logprob: -5.482903957366943
    5. ' if' → logprob: -6.232903957366943
    6. '```' → logprob: -7.357903957366943
    7. '#' → logprob: -7.732903957366943
    8. 'n' → logprob: -8.232904434204102
    9. '
' → logprob: -8.357904434204102
    10. '\' → logprob: -8.732904434204102

Token 96: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026353495195508003
    2. 'result' → logprob: -6.627635478973389
    3. '
' → logprob: -6.877635478973389
    4. '

' → logprob: -9.00263500213623
    5. 'print' → logprob: -10.12763500213623
    6. ' if' → logprob: -10.12763500213623
    7. '\n' → logprob: -10.75263500213623
    8. '```' → logprob: -11.50263500213623
    9. 'answer' → logprob: -11.75263500213623
    10. 'sum' → logprob: -12.62763500213623

Token 97: ' (
' (ID: 4112)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5769508481025696
    2. ' (' → logprob: -0.8269508481025696
    3. ' ' → logprob: -7.826951026916504
    4. '(' → logprob: -8.326951026916504
    5. 'is' → logprob: -8.451951026916504
    6. '(is' → logprob: -9.451951026916504
    7. ' first' → logprob: -10.576951026916504
    8. ' ((' → logprob: -11.201951026916504
    9. ' (
' → logprob: -11.326951026916504
    10. ' not' → logprob: -11.326951026916504

Token 98: '   ' (ID: 271)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2673623859882355
    2. ' is' → logprob: -1.892362356185913
    3. ' (' → logprob: -3.642362356185913
    4. '   ' → logprob: -3.642362356185913
    5. '(is' → logprob: -3.767362356185913
    6. 'not' → logprob: -5.392362594604492
    7. ' not' → logprob: -6.017362594604492
    8. '(not' → logprob: -7.517362594604492
    9. ' ' → logprob: -8.142362594604492
    10. ' first' → logprob: -9.017362594604492

Token 99: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.43992704153060913
    2. '(is' → logprob: -1.689927101135254
    3. ' (' → logprob: -2.689927101135254
    4. ' is' → logprob: -2.814927101135254
    5. '   ' → logprob: -3.939927101135254
    6. 'not' → logprob: -4.564927101135254
    7. '(not' → logprob: -4.939927101135254
    8. ' not' → logprob: -5.939927101135254
    9. '(
' → logprob: -6.564927101135254
    10. '(' → logprob: -7.189927101135254

Token 100: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -6.265633419388905e-05
    2. 'first' → logprob: -10.375062942504883
    3. '_second' → logprob: -10.750062942504883
    4. '_' → logprob: -11.625062942504883
    5. '_f' → logprob: -14.625062942504883
    6. ' _' → logprob: -15.625062942504883
    7. ')_' → logprob: -16.625062942504883
    8. ' first' → logprob: -16.750062942504883
    9. 'First' → logprob: -16.875062942504883
    10. '_FIRST' → logprob: -16.875062942504883

Token 101: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.652451464906335e-05
    2. '_numbers' → logprob: -11.375016212463379
    3. '_' → logprob: -13.875016212463379
    4. '_contains' → logprob: -14.250016212463379
    5. ')_' → logprob: -14.500016212463379
    6. ' _' → logprob: -14.625016212463379
    7. '_first' → logprob: -14.750016212463379
    8. ')' → logprob: -14.875016212463379
    9. '_Number' → logprob: -15.375016212463379
    10. '_n' → logprob: -15.500016212463379

Token 102: '_contains' (ID: 159996)
  Prédit: '_contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_contains' → logprob: -0.004420266952365637
    2. '_g' → logprob: -5.504420280456543
    3. '_cont' → logprob: -8.629420280456543
    4. 'contains' → logprob: -9.004420280456543
    5. '_contents' → logprob: -11.379420280456543
    6. 'greater' → logprob: -11.629420280456543
    7. '_' → logprob: -12.504420280456543
    8. '>' → logprob: -12.504420280456543
    9. ')' → logprob: -13.129420280456543
    10. 'g' → logprob: -13.629420280456543

Token 103: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.00033784625702537596
    2. '_' → logprob: -8.000337600708008
    3. ' _' → logprob: -14.250337600708008
    4. '"_' → logprob: -14.250337600708008
    5. 'zero' → logprob: -15.500337600708008
    6. '_z' → logprob: -15.625337600708008
    7. '0' → logprob: -15.875337600708008
    8. '_false' → logprob: -16.000337600708008
    9. '_

' → logprob: -16.500337600708008
    10. '_ZERO' → logprob: -16.500337600708008

Token 104: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01885911449790001
    2. ' and' → logprob: -4.643858909606934
    3. 'or' → logprob: -4.768858909606934
    4. 'and' → logprob: -8.018858909606934
    5. ')' → logprob: -9.018858909606934
    6. '   ' → logprob: -9.268858909606934
    7. ' ' → logprob: -10.768858909606934
    8. ' )' → logprob: -12.643858909606934
    9. '    ' → logprob: -13.768858909606934
    10. '  ' → logprob: -15.018858909606934

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12280847877264023
    2. ' is' → logprob: -2.2478084564208984
    3. 'is' → logprob: -4.622808456420898
    4. '    ' → logprob: -10.247808456420898
    5. ' not' → logprob: -10.622808456420898
    6. ')' → logprob: -11.372808456420898
    7. '       ' → logprob: -11.872808456420898
    8. '  ' → logprob: -12.122808456420898
    9. ' ' → logprob: -12.122808456420898
    10. 'not' → logprob: -12.122808456420898

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026263119652867317
    2. ' is' → logprob: -6.127626419067383
    3. 'is' → logprob: -7.752626419067383
    4. '    ' → logprob: -12.627626419067383
    5. '       ' → logprob: -13.377626419067383
    6. ')' → logprob: -13.502626419067383
    7. ' not' → logprob: -13.627626419067383
    8. '   ' → logprob: -13.752626419067383
    9. '  ' → logprob: -14.002626419067383
    10. 'not' → logprob: -14.252626419067383

Token 107: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11872828006744385
    2. ' is' → logprob: -2.6187281608581543
    3. 'is' (adapté à ' is') → logprob: -3.2437281608581543
    4. '    ' → logprob: -11.368728637695312
    5. '       ' → logprob: -12.243728637695312
    6. '  ' → logprob: -12.243728637695312
    7. ' ' → logprob: -12.618728637695312
    8. ')' → logprob: -12.993728637695312
    9. '   ' → logprob: -12.993728637695312
    10. 'not' → logprob: -13.118728637695312

Token 108: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.00016337241686414927
    2. '_first' → logprob: -8.750163078308105
    3. 'second' → logprob: -12.375163078308105
    4. '_' → logprob: -14.500163078308105
    5. '	second' → logprob: -17.375164031982422
    6. ' second' → logprob: -17.625164031982422
    7. '_SECOND' → logprob: -18.000164031982422
    8. '_seconds' → logprob: -18.000164031982422
    9. '_secondary' → logprob: -18.125164031982422
    10. 'Second' → logprob: -18.625164031982422

Token 109: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.7252845029579476e-05
    2. '_contains' → logprob: -11.625027656555176
    3. 'number' → logprob: -12.000027656555176
    4. ')_' → logprob: -12.625027656555176
    5. '_numbers' → logprob: -12.750027656555176
    6. '_' → logprob: -13.500027656555176
    7. '```' → logprob: -13.625027656555176
    8. ')' → logprob: -14.000027656555176
    9. '_cont' → logprob: -15.250027656555176
    10. '"_' → logprob: -15.250027656555176

Token 110: '_contains' (ID: 159996)
  Prédit: '_contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_contains' → logprob: -5.478889215737581e-05
    2. 'contains' → logprob: -10.250054359436035
    3. '_cont' → logprob: -11.500054359436035
    4. '_contents' → logprob: -12.000054359436035
    5. '_' → logprob: -13.625054359436035
    6. '```' → logprob: -14.875054359436035
    7. ''_' → logprob: -14.875054359436035
    8. ' _' → logprob: -15.500054359436035
    9. '_str' → logprob: -15.500054359436035
    10. '"_' → logprob: -15.750054359436035

Token 111: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -1.9743012671824545e-05
    2. 'zero' → logprob: -11.000020027160645
    3. '_' → logprob: -13.000020027160645
    4. '0' → logprob: -15.125020027160645
    5. '"_' → logprob: -15.750020027160645
    6. '_ZERO' → logprob: -15.875020027160645
    7. ')_' → logprob: -16.125019073486328
    8. '_false' → logprob: -16.625019073486328
    9. ' zero' → logprob: -17.375019073486328
    10. 'Zero' → logprob: -17.875019073486328

Token 112: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04339798167347908
    2. 'or' → logprob: -3.543397903442383
    3. ')' → logprob: -4.418397903442383
    4. '   ' → logprob: -6.543397903442383
    5. '	or' → logprob: -10.168397903442383
    6. '):' → logprob: -11.043397903442383
    7. ' ' → logprob: -12.793397903442383
    8. ' )' → logprob: -13.418397903442383
    9. '  ' → logprob: -14.293397903442383
    10. '),' → logprob: -14.543397903442383

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006395269301719964
    2. ' is' → logprob: -7.62563943862915
    3. 'is' → logprob: -9.125639915466309
    4. ')' → logprob: -11.000639915466309
    5. 'not' → logprob: -11.875639915466309
    6. ' not' → logprob: -12.375639915466309
    7. '
' → logprob: -12.625639915466309
    8. '    ' → logprob: -13.125639915466309
    9. ' first' → logprob: -13.125639915466309
    10. 'first' → logprob: -13.500639915466309

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002319071936653927
    2. ')' → logprob: -9.000231742858887
    3. 'is' → logprob: -9.625231742858887
    4. ' is' → logprob: -10.250231742858887
    5. 'not' → logprob: -13.125231742858887
    6. '    ' → logprob: -13.250231742858887
    7. '   ' → logprob: -13.750231742858887
    8. '       ' → logprob: -14.375231742858887
    9. '  ' → logprob: -14.625231742858887
    10. ' not' → logprob: -15.250231742858887

Token 115: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.5919108390808105
    2. '   ' → logprob: -1.0919108390808105
    3. ' is' → logprob: -2.2169108390808105
    4. 'not' → logprob: -6.5919108390808105
    5. ' not' → logprob: -7.4669108390808105
    6. ')' → logprob: -9.341911315917969
    7. ' ' → logprob: -9.841911315917969
    8. '    ' → logprob: -10.591911315917969
    9. 'first' → logprob: -10.591911315917969
    10. '  ' → logprob: -10.716911315917969

Token 116: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -4.7755875129951164e-05
    2. '_second' → logprob: -10.00004768371582
    3. 'first' → logprob: -13.12504768371582
    4. '_' → logprob: -16.25004768371582
    5. '_f' → logprob: -16.37504768371582
    6. ')_' → logprob: -18.37504768371582
    7. 'First' → logprob: -18.62504768371582
    8. '_FIRST' → logprob: -18.87504768371582
    9. ' first' → logprob: -19.37504768371582
    10. '_four' → logprob: -19.50004768371582

Token 117: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.096126576769166e-05
    2. 'number' → logprob: -10.125041007995605
    3. 'Number' → logprob: -15.250041007995605
    4. '_numbers' → logprob: -15.625041007995605
    5. '
' → logprob: -16.50004005432129
    6. '_n' → logprob: -16.75004005432129
    7. '_' → logprob: -16.87504005432129
    8. ')_' → logprob: -17.00004005432129
    9. 'umber' → logprob: -17.12504005432129
    10. ' _' → logprob: -17.12504005432129

Token 118: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.2233183042553719e-05
    2. 'greater' → logprob: -11.750012397766113
    3. '_is' → logprob: -12.625012397766113
    4. ' _' → logprob: -15.625012397766113
    5. '_gr' → logprob: -15.875012397766113
    6. '>' → logprob: -16.000011444091797
    7. '_less' → logprob: -16.250011444091797
    8. '_' → logprob: -16.250011444091797
    9. 's' → logprob: -16.375011444091797
    10. 'is' → logprob: -16.875011444091797

Token 119: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -6.0391463193809614e-05
    2. 'reat' → logprob: -10.875060081481934
    3. 'reate' → logprob: -10.875060081481934
    4. 'greater' → logprob: -11.000060081481934
    5. 're' → logprob: -12.625060081481934
    6. 'r' → logprob: -14.125060081481934
    7. 'reter' → logprob: -14.500060081481934
    8. '>' → logprob: -15.500060081481934
    9. 'reated' → logprob: -15.500060081481934
    10. 'rea' → logprob: -15.750060081481934

Token 120: '_than' (ID: 134758)
  Prédit: '_than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -2.7848862373502925e-05
    2. 'than' → logprob: -10.625027656555176
    3. '_THAN' → logprob: -13.375027656555176
    4. '_then' → logprob: -14.500027656555176
    5. '_that' → logprob: -14.875027656555176
    6. ' than' → logprob: -15.250027656555176
    7. '_th' → logprob: -15.375027656555176
    8. 'thane' → logprob: -15.625027656555176
    9. '_or' → logprob: -15.750027656555176
    10. '-than' → logprob: -16.750028610229492

Token 121: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.7491250875755213e-05
    2. '_' → logprob: -11.000027656555176
    3. 'nine' → logprob: -12.000027656555176
    4. '9' → logprob: -12.625027656555176
    5. 'n' → logprob: -14.375027656555176
    6. '_t' → logprob: -15.250027656555176
    7. '_
' → logprob: -16.25002670288086
    8. ' ' → logprob: -16.87502670288086
    9. ' nine' → logprob: -17.25002670288086
    10. 'Nine' → logprob: -17.37502670288086

Token 122: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0007030184497125447
    2. 'nine' → logprob: -7.875702857971191
    3. 'in' → logprob: -8.250702857971191
    4. '```' → logprob: -11.000702857971191
    5. '   ' → logprob: -12.250702857971191
    6. '9' → logprob: -12.375702857971191
    7. '
' → logprob: -13.000702857971191
    8. 'ight' → logprob: -13.125702857971191
    9. 'ne' → logprob: -13.250702857971191
    10. 'ime' → logprob: -13.250702857971191

Token 123: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.25404202938079834
    2. 'or' → logprob: -1.5040420293807983
    3. '   ' → logprob: -6.879042148590088
    4. ')' → logprob: -6.879042148590088
    5. '	or' → logprob: -10.37904167175293
    6. ' ' → logprob: -10.87904167175293
    7. '  ' → logprob: -13.75404167175293
    8. ')
' → logprob: -15.50404167175293
    9. ' )' → logprob: -15.50404167175293
    10. '),' → logprob: -15.62904167175293

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000333320174831897
    2. 'is' → logprob: -8.375333786010742
    3. ' is' → logprob: -9.375333786010742
    4. '    ' → logprob: -11.750333786010742
    5. '  ' → logprob: -11.875333786010742
    6. '       ' → logprob: -13.250333786010742
    7. ' ' → logprob: -14.625333786010742
    8. '   ' → logprob: -15.625333786010742
    9. ')' → logprob: -15.875333786010742
    10. '
' → logprob: -16.125333786010742

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035624157171696424
    2. 'is' → logprob: -5.7535624504089355
    3. ' is' → logprob: -7.8785624504089355
    4. '    ' → logprob: -13.128561973571777
    5. '       ' → logprob: -13.503561973571777
    6. '  ' → logprob: -13.628561973571777
    7. ' ' → logprob: -14.753561973571777
    8. '   ' → logprob: -14.878561973571777
    9. '     ' → logprob: -15.878561973571777
    10. '```' → logprob: -16.128562927246094

Token 126: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.25511592626571655
    2. '   ' → logprob: -1.5051159858703613
    3. ' is' → logprob: -5.755115985870361
    4. ' ' → logprob: -12.255115509033203
    5. '  ' → logprob: -12.255115509033203
    6. '    ' → logprob: -13.255115509033203
    7. '       ' → logprob: -13.380115509033203
    8. '	is' → logprob: -13.880115509033203
    9. '```' → logprob: -15.255115509033203
    10. ')' → logprob: -15.380115509033203

Token 127: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -1.6166903151315637e-05
    2. 'second' → logprob: -11.125016212463379
    3. '_first' → logprob: -13.625016212463379
    4. '_seconds' → logprob: -16.500015258789062
    5. 'Second' → logprob: -17.500015258789062
    6. '_secondary' → logprob: -17.625015258789062
    7. 's' → logprob: -18.000015258789062
    8. '_two' → logprob: -18.125015258789062
    9. '	second' → logprob: -18.125015258789062
    10. '_SECOND' → logprob: -18.500015258789062

Token 128: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.008129963040119e-06
    2. 'number' → logprob: -13.375003814697266
    3. ')_' → logprob: -14.375003814697266
    4. '_second' → logprob: -14.625003814697266
    5. ' _' → logprob: -15.000003814697266
    6. '_numbers' → logprob: -15.500003814697266
    7. '
' → logprob: -15.875003814697266
    8. '_' → logprob: -15.875003814697266
    9. '```' → logprob: -15.875003814697266
    10. '_is' → logprob: -16.125003814697266

Token 129: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.4021237802808173e-05
    2. 'greater' → logprob: -11.250014305114746
    3. '_' → logprob: -15.500014305114746
    4. 'g' → logprob: -15.750014305114746
    5. '_is' → logprob: -15.875014305114746
    6. '>' → logprob: -16.00001335144043
    7. '
' → logprob: -16.62501335144043
    8. ')' → logprob: -16.87501335144043
    9. 'Greater' → logprob: -16.87501335144043
    10. 's' → logprob: -17.00001335144043

Token 130: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.0003556039300747216
    2. 'greater' → logprob: -8.00035572052002
    3. 'reat' → logprob: -11.62535572052002
    4. 'r' → logprob: -12.50035572052002
    5. 'reate' → logprob: -12.87535572052002
    6. 're' → logprob: -13.37535572052002
    7. '_than' → logprob: -14.25035572052002
    8. 't' → logprob: -14.62535572052002
    9. '_g' → logprob: -14.87535572052002
    10. 'reter' → logprob: -15.00035572052002

Token 131: '_than' (ID: 134758)
  Prédit: '_than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.00011558275582501665
    2. 'than' → logprob: -9.625115394592285
    3. '_number' → logprob: -10.000115394592285
    4. '_that' → logprob: -12.875115394592285
    5. ' than' → logprob: -14.750115394592285
    6. 'Than' → logprob: -14.875115394592285
    7. '_THAN' → logprob: -15.000115394592285
    8. '_then' → logprob: -16.2501163482666
    9. '-than' → logprob: -16.3751163482666
    10. 'number' → logprob: -16.7501163482666

Token 132: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.04558142274618149
    2. '9' → logprob: -3.170581340789795
    3. 'nine' → logprob: -6.045581340789795
    4. '_' → logprob: -9.420581817626953
    5. 'Nine' → logprob: -9.670581817626953
    6. 'n' → logprob: -9.920581817626953
    7. ' ' → logprob: -12.045581817626953
    8. 'nin' → logprob: -12.545581817626953
    9. 'int' → logprob: -13.670581817626953
    10. '   ' → logprob: -13.920581817626953

Token 133: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.001693388563580811
    2. 'in' → logprob: -6.501693248748779
    3. '9' → logprob: -10.126693725585938
    4. 'nine' → logprob: -10.501693725585938
    5. 'int' → logprob: -10.626693725585938
    6. '```' → logprob: -10.751693725585938
    7. 'i' → logprob: -11.251693725585938
    8. 'ne' → logprob: -11.376693725585938
    9. 'ime' → logprob: -11.626693725585938
    10. 'e' → logprob: -11.876693725585938

Token 134: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01314952690154314
    2. '):
' → logprob: -4.388149738311768
    3. ')' → logprob: -7.513149738311768
    4. ':' → logprob: -10.13814926147461
    5. '
' → logprob: -10.88814926147461
    6. '   ' → logprob: -11.26314926147461
    7. ':
' → logprob: -11.76314926147461
    8. ' ):' → logprob: -12.01314926147461
    9. ' or' → logprob: -12.38814926147461
    10. ' ' → logprob: -13.51314926147461

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016158826649188995
    2. ')' → logprob: -5.1411590576171875
    3. ':' → logprob: -5.2661590576171875
    4. '):
' → logprob: -5.3911590576171875
    5. ':
' → logprob: -7.8911590576171875
    6. ' or' → logprob: -9.891159057617188
    7. ' ):' → logprob: -11.141159057617188
    8. '   ' → logprob: -12.016159057617188
    9. '
' → logprob: -12.141159057617188
    10. ' ' → logprob: -13.516159057617188

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003482351079583168
    2. 'print' → logprob: -6.128482341766357
    3. '
' → logprob: -7.253482341766357
    4. ' print' → logprob: -8.003482818603516
    5. '    
' → logprob: -9.003482818603516
    6. '	print' → logprob: -10.003482818603516
    7. '   ' → logprob: -11.128482818603516
    8. ':' → logprob: -11.128482818603516
    9. ')' → logprob: -11.378482818603516
    10. '    ' → logprob: -12.003482818603516

Token 137: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002233044244349003
    2. '   ' → logprob: -6.502233028411865
    3. ' print' → logprob: -7.377233028411865
    4. 'pass' → logprob: -10.252233505249023
    5. 'result' → logprob: -10.377233505249023
    6. ' ' → logprob: -11.752233505249023
    7. 'raise' → logprob: -11.877233505249023
    8. '
' → logprob: -12.002233505249023
    9. 'exit' → logprob: -12.377233505249023
    10. '    
' → logprob: -13.127233505249023

Token 138: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.19212685525417328
    2. '(' → logprob: -1.8171268701553345
    3. '(-' → logprob: -5.442126750946045
    4. '(False' → logprob: -5.817126750946045
    5. '(True' → logprob: -6.067126750946045
    6. '(":' → logprob: -7.317126750946045
    7. '("")' → logprob: -7.442126750946045
    8. '("("' → logprob: -7.942126750946045
    9. '("-' → logprob: -8.192127227783203
    10. '()' → logprob: -8.192127227783203

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. '2' → logprob: -11.125027656555176
    3. ' ' → logprob: -12.250027656555176
    4. '0' → logprob: -12.625027656555176
    5. '10' → logprob: -13.750027656555176
    6. ')' → logprob: -14.500027656555176
    7. '3' → logprob: -15.000027656555176
    8. '9' → logprob: -15.062527656555176
    9. '100' → logprob: -15.500027656555176
    10. '
' → logprob: -15.625027656555176

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010199354437645525
    2. ')
' → logprob: -9.250102043151855
    3. 'else' → logprob: -12.250102043151855
    4. ' )' → logprob: -14.875102043151855
    5. '')' → logprob: -16.00010108947754
    6. '")' → logprob: -16.50010108947754
    7. ' else' → logprob: -16.50010108947754
    8. ')

' → logprob: -16.62510108947754
    9. '))' → logprob: -16.87510108947754
    10. '```' → logprob: -17.00010108947754

Token 141: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -6.408677290892228e-05
    2. 'elif' → logprob: -9.7500638961792
    3. ' else' → logprob: -12.2500638961792
    4. '
' → logprob: -14.7500638961792
    5. '```' → logprob: -16.000064849853516
    6. ')' → logprob: -16.125064849853516
    7. '_else' → logprob: -16.125064849853516
    8. '   ' → logprob: -16.500064849853516
    9. 'elses' → logprob: -17.125064849853516
    10. 'elser' → logprob: -17.250064849853516

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.93710636976175e-05
    2. ':
' → logprob: -9.250099182128906
    3. ' :' → logprob: -12.750099182128906
    4. '):' → logprob: -15.875099182128906
    5. '   ' → logprob: -16.375099182128906
    6. ':

' → logprob: -16.625099182128906
    7. '():' → logprob: -17.625099182128906
    8. ':
' → logprob: -17.625099182128906
    9. '<|end|>' → logprob: -18.250099182128906
    10. ',' → logprob: -18.750099182128906

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013326935470104218
    2. 'print' → logprob: -4.388327121734619
    3. ' print' → logprob: -7.138327121734619
    4. '```' → logprob: -12.013326644897461
    5. '    
' → logprob: -12.513326644897461
    6. '   ' → logprob: -12.638326644897461
    7. '	print' → logprob: -12.888326644897461
    8. '
' → logprob: -13.638326644897461
    9. ' ' → logprob: -14.013326644897461
    10. '+' → logprob: -14.263326644897461

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0013394085690379143
    2. '   ' → logprob: -6.876339435577393
    3. 'result' → logprob: -8.501338958740234
    4. 'sum' → logprob: -10.001338958740234
    5. ' print' → logprob: -10.126338958740234
    6. 'first' → logprob: -11.876338958740234
    7. 'product' → logprob: -12.626338958740234
    8. 'total' → logprob: -12.626338958740234
    9. ' ' → logprob: -14.251338958740234
    10. '  ' → logprob: -14.376338958740234

Token 145: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.01788921281695366
    2. '(' → logprob: -4.267889022827148
    3. 'first' → logprob: -5.642889022827148
    4. '(second' → logprob: -9.017889022827148
    5. '((' → logprob: -10.642889022827148
    6. '(
' → logprob: -11.517889022827148
    7. '(f' → logprob: -12.017889022827148
    8. '(int' → logprob: -12.517889022827148
    9. ' first' → logprob: -12.767889022827148
    10. '(fi' → logprob: -13.517889022827148

Token 146: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.6047699318733066e-05
    2. 'number' → logprob: -11.750016212463379
    3. '_' → logprob: -12.625016212463379
    4. '_second' → logprob: -13.250016212463379
    5. '+' → logprob: -14.250016212463379
    6. '_int' → logprob: -14.375016212463379
    7. '_num' → logprob: -15.250016212463379
    8. 'int' → logprob: -15.375016212463379
    9. '*_' → logprob: -15.500016212463379
    10. '_string' → logprob: -15.625016212463379

Token 147: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.4140441635390744e-05
    2. 'int' → logprob: -11.375014305114746
    3. '+' → logprob: -13.125014305114746
    4. '_plus' → logprob: -15.125014305114746
    5. ' +' → logprob: -15.875014305114746
    6. '_' → logprob: -16.62501335144043
    7. 'Int' → logprob: -17.37501335144043
    8. '_add' → logprob: -17.62501335144043
    9. '*' → logprob: -17.75001335144043
    10. '_second' → logprob: -17.87501335144043

Token 148: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.185845747590065
    2. ' +' → logprob: -1.9358457326889038
    3. '*' → logprob: -3.8108458518981934
    4. ' *' → logprob: -6.060845851898193
    5. ')' → logprob: -7.435845851898193
    6. '-' → logprob: -9.185845375061035
    7. ' ' → logprob: -10.310845375061035
    8. ',' → logprob: -10.310845375061035
    9. '+)' → logprob: -10.310845375061035
    10. ' -' → logprob: -10.810845375061035

Token 149: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0031796174589544535
    2. ' second' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.878179550170898
    4. '	second' → logprob: -14.878179550170898
    5. ' ' → logprob: -15.128179550170898
    6. '  ' → logprob: -16.3781795501709
    7. 'first' → logprob: -16.3781795501709
    8. '(second' → logprob: -16.6281795501709
    9. 'Second' → logprob: -18.0031795501709
    10. '_second' → logprob: -18.0031795501709

Token 150: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.771655115589965e-05
    2. 'number' → logprob: -11.125018119812012
    3. ')' → logprob: -13.375018119812012
    4. 'Number' → logprob: -15.000018119812012
    5. ')_' → logprob: -15.000018119812012
    6. '_second' → logprob: -15.500018119812012
    7. '_' → logprob: -16.125017166137695
    8. 'umber' → logprob: -16.250017166137695
    9. '_numbers' → logprob: -16.500017166137695
    10. 'int' → logprob: -16.875017166137695

Token 151: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0040835049003362656
    2. 'int' → logprob: -5.504083633422852
    3. ')' → logprob: -12.379083633422852
    4. 'Int' → logprob: -14.879083633422852
    5. ')_' → logprob: -15.129083633422852
    6. 'nt' → logprob: -16.50408363342285
    7. 't' → logprob: -16.62908363342285
    8. '_)' → logprob: -17.50408363342285
    9. '_str' → logprob: -17.62908363342285
    10. '_' → logprob: -18.12908363342285

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '))' → logprob: -17.0
    5. ')`' → logprob: -19.125
    6. '')' → logprob: -19.875
    7. '）' → logprob: -20.75
    8. '`)' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. '   ' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 150
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 134
Précision stricte (1ère position): 62.67%
Précision adaptée (1ère position): 66.00%
Précision (top 10): 89.33%
================================================================================
