================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())    # bon bah on récupère un entier, logique
l = []

for i in range(n):
    # va pour une saisie utilisateur
    truc = input()
    l.append(truc)

# extraction des éléments uniques (un coup de set et voilou)
l2 = list(set(l))
print(len(l2))  # on veut juste le nombre. C'est ce qu'ils veulent hein ?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043019242002628744
    2. ''' → logprob: -8.6254301071167
    3. '('' → logprob: -9.3754301071167
    4. '(n' → logprob: -9.8754301071167
    5. '```' → logprob: -10.3754301071167
    6. '`' → logprob: -10.7504301071167
    7. '(
' → logprob: -11.0004301071167
    8. '("("' → logprob: -11.1254301071167
    9. ')' → logprob: -11.7504301071167
    10. '()' → logprob: -12.2504301071167

Token 4: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4308362603187561
    2. '\' → logprob: -2.3058362007141113
    3. 'for' → logprob: -2.8058362007141113
    4. '*' → logprob: -3.3058362007141113
    5. '```' → logprob: -3.5558362007141113
    6. '#' → logprob: -4.055836200714111
    7. 'if' → logprob: -4.055836200714111
    8. '`' → logprob: -4.305836200714111
    9. '\r' → logprob: -4.555836200714111
    10. '+' → logprob: -4.930836200714111

Token 6: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8589791655540466
    2. '\n' → logprob: -1.4839792251586914
    3. '+' → logprob: -2.3589792251586914
    4. 'for' → logprob: -2.8589792251586914
    5. '*' → logprob: -3.2339792251586914
    6. '\' → logprob: -3.6089792251586914
    7. ')' → logprob: -3.6089792251586914
    8. 's' → logprob: -3.7339792251586914
    9. '#' (adapté à ' #') → logprob: -4.108979225158691
    10. 'i' → logprob: -4.358979225158691

Token 7: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3504257798194885
    2. '\' → logprob: -1.9754257202148438
    3. '\n' → logprob: -2.9754257202148438
    4. ' \' → logprob: -3.2254257202148438
    5. '#' → logprob: -4.475425720214844
    6. 'for' → logprob: -4.975425720214844
    7. '`' → logprob: -5.225425720214844
    8. ')' → logprob: -5.225425720214844
    9. 'n' → logprob: -5.225425720214844
    10. '```' → logprob: -5.475425720214844

Token 8: ' bah' (ID: 13530)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.3218044936656952
    2. 'jou' → logprob: -1.9468045234680176
    3. 'e' → logprob: -3.3218045234680176
    4. 'j' → logprob: -3.8218045234680176
    5. 'jours' → logprob: -4.071804523468018
    6. '```' → logprob: -4.446804523468018
    7. 'bon' → logprob: -4.696804523468018
    8. 'us' → logprob: -4.821804523468018
    9. '=' → logprob: -5.446804523468018
    10. 's' → logprob: -5.571804523468018

Token 9: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20374029874801636
    2. '+' → logprob: -3.328740358352661
    3. '\' → logprob: -3.578740358352661
    4. ')' → logprob: -3.953740358352661
    5. '\n' → logprob: -3.953740358352661
    6. 'n' → logprob: -4.328740119934082
    7. '<|end|>' → logprob: -4.453740119934082
    8. '
' → logprob: -4.703740119934082
    9. '=' → logprob: -4.703740119934082
    10. '#' → logprob: -4.953740119934082

Token 10: ' récup' (ID: 62856)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.087097406387329
    2. 'n' → logprob: -1.837097406387329
    3. 'p' → logprob: -1.962097406387329
    4. 'f' → logprob: -2.462097406387329
    5. 'a' → logprob: -3.087097406387329
    6. ' ' → logprob: -3.337097406387329
    7. 'r' → logprob: -3.337097406387329
    8. 'print' → logprob: -3.462097406387329
    9. '```' → logprob: -3.587097406387329
    10. 'for' → logprob: -4.21209716796875

Token 11: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.06756964325904846
    2. 'érer' → logprob: -2.8175697326660156
    3. 'è' → logprob: -5.817569732666016
    4. 'èr' → logprob: -6.567569732666016
    5. 'ére' → logprob: -7.442569732666016
    6. 'ération' → logprob: -8.567569732666016
    7. 'èrent' → logprob: -9.067569732666016
    8. 'er' → logprob: -9.817569732666016
    9. 'é' → logprob: -9.817569732666016
    10. 'érez' → logprob: -9.942569732666016

Token 12: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34094321727752686
    2. '\' → logprob: -2.7159433364868164
    3. ',' → logprob: -3.0909433364868164
    4. ')' → logprob: -3.2159433364868164
    5. 'n' → logprob: -3.2159433364868164
    6. '_' → logprob: -3.3409433364868164
    7. '\n' → logprob: -4.340943336486816
    8. 's' → logprob: -4.715943336486816
    9. '```' → logprob: -5.090943336486816
    10. '.' → logprob: -5.715943336486816

Token 13: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04915645718574524
    2. 'nombre' → logprob: -4.674156665802002
    3. ' nombre' → logprob: -5.174156665802002
    4. ' espace' → logprob: -5.299156665802002
    5. ' \' → logprob: -5.424156665802002
    6. '\' → logprob: -5.549156665802002
    7. '\n' → logprob: -5.799156665802002
    8. 'space' → logprob: -5.799156665802002
    9. ' )' → logprob: -6.549156665802002
    10. 'n' → logprob: -6.549156665802002

Token 14: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.12824393808841705
    2. '\' → logprob: -2.878243923187256
    3. 'n' → logprob: -3.753243923187256
    4. '
' → logprob: -4.878243923187256
    5. ')' → logprob: -4.878243923187256
    6. '#' → logprob: -5.003243923187256
    7. '*' → logprob: -5.378243923187256
    8. '```' → logprob: -6.003243923187256
    9. ' ' → logprob: -6.253243923187256
    10. 's' → logprob: -7.003243923187256

Token 15: ' logique' (ID: 115350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36540254950523376
    2. 'n' → logprob: -2.6154024600982666
    3. ' ' → logprob: -2.6154024600982666
    4. '\n' → logprob: -3.1154024600982666
    5. ',' → logprob: -3.4904024600982666
    6. '\' → logprob: -3.8654024600982666
    7. ' n' → logprob: -4.615402698516846
    8. ' )' → logprob: -4.865402698516846
    9. 's' → logprob: -5.115402698516846
    10. '
' → logprob: -5.115402698516846

Token 16: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.47613900899887085
    2. '\' → logprob: -2.1011390686035156
    3. '
' → logprob: -2.1011390686035156
    4. ')' → logprob: -3.2261390686035156
    5. '#' → logprob: -3.8511390686035156
    6. '```' → logprob: -4.476139068603516
    7. '' → logprob: -4.601139068603516
    8. ' ' → logprob: -4.976139068603516
    9. 'if' → logprob: -5.101139068603516
    10. ',' → logprob: -5.226139068603516

Token 17: 'l' (ID: 75)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4136143922805786
    2. '#' → logprob: -1.6636143922805786
    3. 'i' → logprob: -2.038614273071289
    4. ')' → logprob: -2.413614273071289
    5. 's' → logprob: -2.788614273071289
    6. '
' → logprob: -2.788614273071289
    7. 'n' → logprob: -3.038614273071289
    8. ' ' → logprob: -3.413614273071289
    9. '\' → logprob: -3.663614273071289
    10. 'for' → logprob: -4.038614273071289

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9883848428726196
    2. 'i' → logprob: -1.3633848428726196
    3. '=' → logprob: -1.6133848428726196
    4. 's' → logprob: -2.23838472366333
    5. 'e' → logprob: -3.98838472366333
    6. '_' → logprob: -4.36338472366333
    7. 'a' → logprob: -4.61338472366333
    8. 'ist' → logprob: -5.11338472366333
    9. ',' → logprob: -5.61338472366333
    10. '.' → logprob: -5.73838472366333

Token 19: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5293108224868774
    2. '[]' → logprob: -1.4043108224868774
    3. ' [' → logprob: -2.404310703277588
    4. 'list' → logprob: -3.279310703277588
    5. ' list' → logprob: -3.904310703277588
    6. '[' → logprob: -4.654310703277588
    7. '[input' → logprob: -5.529310703277588
    8. '[int' → logprob: -6.279310703277588
    9. 'input' → logprob: -7.279310703277588
    10. '[list' → logprob: -7.404310703277588

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004071971052326262
    2. 'f' → logprob: -7.8754072189331055
    3. ' for' → logprob: -11.125407218933105
    4. '```' → logprob: -11.875407218933105
    5. 'i' → logprob: -12.500407218933105
    6. '[' → logprob: -14.625407218933105
    7. '=' → logprob: -15.500407218933105
    8. 'r' → logprob: -15.625407218933105
    9. '_' → logprob: -16.12540626525879
    10. '`' → logprob: -16.25040626525879

Token 21: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007563795428723097
    2. ' i' → logprob: -5.507563591003418
    3. '  ' → logprob: -6.132563591003418
    4. '_' → logprob: -7.382563591003418
    5. ' _' → logprob: -7.757563591003418
    6. ' ‌' → logprob: -9.007563591003418
    7. 'i' → logprob: -9.632563591003418
    8. ' ' → logprob: -10.507563591003418
    9. ' n' → logprob: -12.257563591003418
    10. ' ​' → logprob: -12.257563591003418

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04430922120809555
    2. 'in' → logprob: -3.544309139251709
    3. ' ' → logprob: -4.294309139251709
    4. '  ' → logprob: -7.794309139251709
    5. 'n' → logprob: -8.419309616088867
    6. ' n' → logprob: -9.294309616088867
    7. ' i' → logprob: -10.544309616088867
    8. 'space' → logprob: -11.169309616088867
    9. '_' → logprob: -11.919309616088867
    10. 'range' → logprob: -12.419309616088867

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038092900067567825
    2. 'range' → logprob: -3.288092851638794
    3. ' ' → logprob: -9.913092613220215
    4. '	range' → logprob: -14.038092613220215
    5. '  ' → logprob: -15.038092613220215
    6. '```' → logprob: -15.913092613220215
    7. '   ' → logprob: -16.28809356689453
    8. ' ' → logprob: -16.28809356689453
    9. 'n' → logprob: -16.28809356689453
    10. ' xrange' → logprob: -16.41309356689453

Token 24: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008723655715584755
    2. '(n' → logprob: -4.758723735809326
    3. ' (' → logprob: -9.133723258972168
    4. '(i' → logprob: -14.508723258972168
    5. '(len' → logprob: -15.133723258972168
    6. '(
' → logprob: -16.133724212646484
    7. '(range' → logprob: -16.258724212646484
    8. 'n' → logprob: -17.008724212646484
    9. '(int' → logprob: -17.508724212646484
    10. '(`' → logprob: -17.633724212646484

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6334479451179504
    2. ')' → logprob: -0.7584479451179504
    3. '+' → logprob: -8.008447647094727
    4. ' ):' → logprob: -8.508447647094727
    5. ' )' → logprob: -8.883447647094727
    6. ':' → logprob: -9.008447647094727
    7. '):
' → logprob: -10.633447647094727
    8. ' ' → logprob: -11.633447647094727
    9. '   ' → logprob: -12.508447647094727
    10. ',' → logprob: -13.383447647094727

Token 26: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4089353382587433
    2. '   ' → logprob: -1.158935308456421
    3. ' ' → logprob: -4.908935546875
    4. '    ' → logprob: -5.158935546875
    5. 'l' → logprob: -5.283935546875
    6. '    
' → logprob: -6.783935546875
    7. ' 
' → logprob: -7.908935546875
    8. '     
' → logprob: -7.908935546875
    9. '```' → logprob: -8.033935546875
    10. ' input' → logprob: -8.033935546875

Token 27: ' #' (ID: 1069)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.18236179649829865
    2. 'l' → logprob: -2.0573618412017822
    3. '   ' → logprob: -4.307361602783203
    4. ' line' → logprob: -4.557361602783203
    5. 't' → logprob: -5.807361602783203
    6. 'x' → logprob: -6.307361602783203
    7. ' x' → logprob: -6.432361602783203
    8. ' t' → logprob: -6.682361602783203
    9. 'n' → logprob: -6.932361602783203
    10. 's' → logprob: -7.057361602783203

Token 28: ' va' (ID: 3423)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1711675375699997
    2. 'l' → logprob: -2.1711676120758057
    3. '   ' → logprob: -4.046167373657227
    4. ' line' → logprob: -4.421167373657227
    5. ' t' → logprob: -6.296167373657227
    6. ' val' → logprob: -6.421167373657227
    7. ' ' → logprob: -6.546167373657227
    8. ' data' → logprob: -7.046167373657227
    9. 'line' → logprob: -7.171167373657227
    10. 't' → logprob: -7.171167373657227

Token 29: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02944357506930828
    2. 'l' → logprob: -3.9044435024261475
    3. ' ' → logprob: -6.154443740844727
    4. 'r' → logprob: -6.279443740844727
    5. '  ' → logprob: -6.904443740844727
    6. '    ' → logprob: -7.154443740844727
    7. 'i' → logprob: -7.279443740844727
    8. 'y' → logprob: -7.779443740844727
    9. ' l' → logprob: -8.529443740844727
    10. 'ra' → logprob: -8.779443740844727

Token 30: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1442763805389404
    2. ' input' → logprob: -1.2692763805389404
    3. ' l' → logprob: -2.0192763805389404
    4. ' range' → logprob: -2.7692763805389404
    5. '   ' → logprob: -3.2692763805389404
    6. 'l' → logprob: -3.2692763805389404
    7. ' i' → logprob: -3.6442763805389404
    8. 'range' → logprob: -4.0192766189575195
    9. ' la' → logprob: -4.1442766189575195
    10. ' int' → logprob: -4.5192766189575195

Token 31: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7124271392822266
    2. '   ' → logprob: -1.9624271392822266
    3. ' l' → logprob: -2.4624271392822266
    4. 'l' → logprob: -2.8374271392822266
    5. ' line' → logprob: -3.7124271392822266
    6. ' ligne' → logprob: -3.7124271392822266
    7. ' input' → logprob: -3.8374271392822266
    8. ' t' → logprob: -4.587427139282227
    9. ' note' → logprob: -4.712427139282227
    10. ' int' → logprob: -4.962427139282227

Token 32: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03403683379292488
    2. 'ie' → logprob: -3.409036874771118
    3. 's' → logprob: -8.284036636352539
    4. 'i' → logprob: -9.409036636352539
    5. 't' → logprob: -10.659036636352539
    6. 'sie' → logprob: -11.284036636352539
    7. 'r' → logprob: -12.284036636352539
    8. 'es' → logprob: -13.034036636352539
    9. '```' → logprob: -13.159036636352539
    10. '#' → logprob: -13.409036636352539

Token 33: ' utilisateur' (ID: 115595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.798240602016449
    2. '   ' → logprob: -0.798240602016449
    3. '    ' → logprob: -3.7982406616210938
    4. 's' → logprob: -4.048240661621094
    5. ' l' → logprob: -4.048240661621094
    6. 'l' → logprob: -4.798240661621094
    7. '  ' → logprob: -5.298240661621094
    8. 'user' → logprob: -5.423240661621094
    9. ' )' → logprob: -5.548240661621094
    10. ' user' → logprob: -5.798240661621094

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024624725803732872
    2. ' ' → logprob: -4.399624824523926
    3. 'l' → logprob: -5.524624824523926
    4. 't' → logprob: -6.274624824523926
    5. ' l' → logprob: -6.524624824523926
    6. '    ' → logprob: -6.649624824523926
    7. 's' → logprob: -7.024624824523926
    8. '\t' → logprob: -7.649624824523926
    9. '  ' → logprob: -7.774624824523926
    10. 'n' → logprob: -8.024624824523926

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009422775357961655
    2. ' l' → logprob: -5.759422779083252
    3. 'l' → logprob: -6.259422779083252
    4. ' ' → logprob: -6.509422779083252
    5. '    ' → logprob: -7.259422779083252
    6. ' s' → logprob: -7.634422779083252
    7. 's' → logprob: -7.759422779083252
    8. 'n' → logprob: -8.384422302246094
    9. '\t' → logprob: -8.384422302246094
    10. '    
' → logprob: -9.009422302246094

Token 36: ' truc' (ID: 58342)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.755648136138916
    2. '   ' → logprob: -1.505648136138916
    3. 'l' → logprob: -2.005648136138916
    4. ' val' → logprob: -3.255648136138916
    5. ' line' → logprob: -3.505648136138916
    6. ' value' → logprob: -4.005648136138916
    7. 's' → logprob: -4.130648136138916
    8. 'val' → logprob: -4.380648136138916
    9. ' s' → logprob: -4.630648136138916
    10. 'value' → logprob: -5.005648136138916

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019827481359243393
    2. '=' → logprob: -4.019827365875244
    3. '   ' → logprob: -7.144827365875244
    4. '_' → logprob: -7.269827365875244
    5. ' ' → logprob: -9.644827842712402
    6. '	' → logprob: -10.019827842712402
    7. 's' → logprob: -10.769827842712402
    8. '=input' → logprob: -11.144827842712402
    9. '  ' → logprob: -11.394827842712402
    10. '    ' → logprob: -12.019827842712402

Token 38: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7345447540283203
    2. ' int' → logprob: -1.1095447540283203
    3. 'int' → logprob: -2.2345447540283203
    4. 'input' → logprob: -2.4845447540283203
    5. ' ' → logprob: -9.23454475402832
    6. '   ' → logprob: -11.23454475402832
    7. ' list' → logprob: -11.85954475402832
    8. ' str' → logprob: -12.48454475402832
    9. '	input' → logprob: -12.48454475402832
    10. ' ' → logprob: -12.54704475402832

Token 39: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07142526656389236
    2. '()' → logprob: -2.696425199508667
    3. '("("' → logprob: -7.196425437927246
    4. '('' → logprob: -7.696425437927246
    5. ' ' → logprob: -9.571425437927246
    6. '("")' → logprob: -9.821425437927246
    7. ')' → logprob: -9.946425437927246
    8. '("' → logprob: -10.821425437927246
    9. '(

' → logprob: -11.446425437927246
    10. '   ' → logprob: -11.446425437927246

Token 40: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014210639521479607
    2. 'l' (adapté à ' l') → logprob: -5.0142107009887695
    3. ')' → logprob: -6.1392107009887695
    4. '.split' → logprob: -6.2642107009887695
    5. '<|end|>' → logprob: -7.5142107009887695
    6. '    
' → logprob: -7.6392107009887695
    7. ' l' → logprob: -7.6392107009887695
    8. '.l' → logprob: -8.26421070098877
    9. ' ' → logprob: -8.38921070098877
    10. '    ' → logprob: -8.63921070098877

Token 42: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31331562995910645
    2. '.' → logprob: -1.3133156299591064
    3. ' .' → logprob: -10.938315391540527
    4. 'append' → logprob: -11.063315391540527
    5. '.Append' → logprob: -11.813315391540527
    6. '.app' → logprob: -12.188315391540527
    7. '.extend' → logprob: -12.813315391540527
    8. '.ap' → logprob: -13.438315391540527
    9. '_append' → logprob: -13.688315391540527
    10. ').' → logprob: -14.813315391540527

Token 43: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.12694185972213745
    2. '(' → logprob: -2.1269419193267822
    3. '(
' → logprob: -12.126941680908203
    4. '((' → logprob: -12.376941680908203
    5. '(

' → logprob: -14.001941680908203
    6. '('' → logprob: -14.751941680908203
    7. '()' → logprob: -14.751941680908203
    8. '(str' → logprob: -14.751941680908203
    9. '(`' → logprob: -14.876941680908203
    10. '(t' → logprob: -15.501941680908203

Token 44: 'uc' (ID: 1734)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0067941173911094666
    2. 'uc' → logprob: -5.006793975830078
    3. '(c' → logprob: -9.631793975830078
    4. 'ct' → logprob: -12.881793975830078
    5. '[c' → logprob: -13.381793975830078
    6. 'ç' → logprob: -13.381793975830078
    7. ')c' → logprob: -13.631793975830078
    8. '(' → logprob: -14.131793975830078
    9. 'с' → logprob: -14.131793975830078
    10. 'cuk' → logprob: -14.256793975830078

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -14.750000953674316
    4. ')
' → logprob: -16.875001907348633
    5. '')' → logprob: -17.750001907348633
    6. '()' → logprob: -18.125001907348633
    7. '`)' → logprob: -18.250001907348633
    8. '(' → logprob: -19.000001907348633
    9. ')`' → logprob: -19.125001907348633
    10. ')))' → logprob: -19.375001907348633

Token 46: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9047698974609375
    2. '#' → logprob: -1.5297698974609375
    3. 'print' → logprob: -1.9047698974609375
    4. 'l' → logprob: -2.4047698974609375
    5. 'm' → logprob: -3.1547698974609375
    6. 's' → logprob: -3.7797698974609375
    7. 'n' → logprob: -4.0297698974609375
    8. 'sum' → logprob: -4.7797698974609375
    9. 'max' → logprob: -5.0297698974609375
    10. 'f' → logprob: -5.2797698974609375

Token 47: ' extraction' (ID: 48166)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2593553066253662
    2. '#' → logprob: -1.3843553066253662
    3. 'l' → logprob: -1.6343553066253662
    4. 'for' → logprob: -1.7593553066253662
    5. 's' → logprob: -4.134355545043945
    6. 'm' → logprob: -4.509355545043945
    7. 'count' → logprob: -4.509355545043945
    8. 'max' → logprob: -4.759355545043945
    9. 'c' → logprob: -4.884355545043945
    10. 'p' → logprob: -5.009355545043945

Token 48: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3805038630962372
    2. '_' → logprob: -1.6305038928985596
    3. 'l' → logprob: -3.2555038928985596
    4. '[' → logprob: -4.2555036544799805
    5. 's' → logprob: -4.3805036544799805
    6. ' =' → logprob: -4.5055036544799805
    7. '(' → logprob: -4.7555036544799805
    8. 'result' → logprob: -5.1305036544799805
    9. 'for' → logprob: -5.1305036544799805
    10. 'data' → logprob: -5.5055036544799805

Token 49: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.2338767051696777
    2. 'm' → logprob: -1.3588767051696777
    3. 'd' → logprob: -2.2338767051696777
    4. 'l' → logprob: -2.9838767051696777
    5. '_' → logprob: -2.9838767051696777
    6. ' mots' → logprob: -3.3588767051696777
    7. 'v' → logprob: -4.108876705169678
    8. 's' → logprob: -4.108876705169678
    9. 'elements' → logprob: -4.108876705169678
    10. ' ' → logprob: -4.358876705169678

Token 50: ' uniques' (ID: 156848)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0550833940505981
    2. '[' → logprob: -1.6800833940505981
    3. 's' → logprob: -1.8050833940505981
    4. '_' → logprob: -2.1800832748413086
    5. 'result' → logprob: -3.6800832748413086
    6. '[]' → logprob: -3.9300832748413086
    7. '=' → logprob: -4.180083274841309
    8. '```' → logprob: -4.305083274841309
    9. 'n' → logprob: -4.430083274841309
    10. 'e' → logprob: -4.555083274841309

Token 51: ' (' (ID: 350)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.7672697901725769
    2. 's' → logprob: -0.8922697901725769
    3. 'u' → logprob: -3.3922698497772217
    4. ',' → logprob: -4.017269611358643
    5. 'elements' → logprob: -4.267269611358643
    6. '_unique' → logprob: -4.517269611358643
    7. 'uniq' → logprob: -4.892269611358643
    8. 'l' → logprob: -5.142269611358643
    9. '(unique' → logprob: -5.267269611358643
    10. ' unique' → logprob: -5.392269611358643

Token 52: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14561611413955688
    2. 'set' → logprob: -2.270616054534912
    3. ')set' → logprob: -4.270616054534912
    4. 'l' → logprob: -4.520616054534912
    5. ' )' → logprob: -6.020616054534912
    6. 's' → logprob: -6.645616054534912
    7. 'unique' → logprob: -7.145616054534912
    8. '(set' → logprob: -7.520616054534912
    9. ' set' → logprob: -7.645616054534912
    10. ')s' → logprob: -7.770616054534912

Token 53: ' coup' (ID: 25465)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.626017153263092
    2. 'iques' → logprob: -0.876017153263092
    3. 'i' → logprob: -3.7510170936584473
    4. 'iq' → logprob: -3.8760170936584473
    5. 'e' → logprob: -6.501017093658447
    6. 'ic' → logprob: -7.251017093658447
    7. ' i' → logprob: -7.501017093658447
    8. 's' → logprob: -8.126017570495605
    9. ')' → logprob: -8.126017570495605
    10. 'iqu' → logprob: -8.501017570495605

Token 54: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.49991753697395325
    2. ' de' → logprob: -0.9999175071716309
    3. ' =' → logprob: -5.749917507171631
    4. '=set' → logprob: -5.749917507171631
    5. 'set' → logprob: -5.874917507171631
    6. ' ' → logprob: -6.249917507171631
    7. ')' → logprob: -6.249917507171631
    8. ' set' → logprob: -6.374917507171631
    9. 'd' → logprob: -6.624917507171631
    10. 's' → logprob: -6.624917507171631

Token 55: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07933299988508224
    2. ' set' → logprob: -2.5793330669403076
    3. 's' → logprob: -9.204333305358887
    4. 'list' → logprob: -9.579333305358887
    5. ' ' → logprob: -9.704333305358887
    6. '```' → logprob: -10.204333305358887
    7. 'l' → logprob: -10.454333305358887
    8. ')set' → logprob: -10.829333305358887
    9. 'ensemble' → logprob: -10.829333305358887
    10. ')' → logprob: -11.204333305358887

Token 56: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014395838603377342
    2. '(l' → logprob: -4.764395713806152
    3. '()' → logprob: -5.389395713806152
    4. '(' → logprob: -7.264395713806152
    5. 'l' → logprob: -8.014395713806152
    6. '())' → logprob: -9.889395713806152
    7. ' )' → logprob: -10.389395713806152
    8. '(s' → logprob: -10.639395713806152
    9. ')
' → logprob: -11.639395713806152
    10. 's' → logprob: -11.764395713806152

Token 57: ' vo' (ID: 778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.334409236907959
    2. 'list' → logprob: -1.709409236907959
    3. ' )' → logprob: -2.084409236907959
    4. ' hop' → logprob: -2.334409236907959
    5. ' voilà' → logprob: -2.709409236907959
    6. ' ' → logprob: -3.084409236907959
    7. '()' → logprob: -3.209409236907959
    8. ' list' → logprob: -3.584409236907959
    9. ' la' → logprob: -4.209409236907959
    10. ' puis' → logprob: -4.209409236907959

Token 58: 'il' (ID: 311)
  Prédit: 'ilà'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilà' → logprob: -0.10330527275800705
    2. 'ila' → logprob: -2.3533053398132324
    3. '
' → logprob: -6.978305339813232
    4. 'il' → logprob: -7.353305339813232
    5. 'ici' → logprob: -7.978305339813232
    6. 'i' → logprob: -8.103304862976074
    7. 'l' → logprob: -8.478304862976074
    8. '```' → logprob: -8.603304862976074
    9. 'ilé' → logprob: -9.728304862976074
    10. '    
' → logprob: -10.103304862976074

Token 59: 'ou' (ID: 283)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018370235338807106
    2. 'à' → logprob: -4.018370151519775
    3. 'e' → logprob: -9.393370628356934
    4. ')' → logprob: -10.518370628356934
    5. ''a' → logprob: -10.768370628356934
    6. '```' → logprob: -10.768370628356934
    7. 'la' → logprob: -11.268370628356934
    8. '`' → logprob: -11.518370628356934
    9. 'á' → logprob: -11.643370628356934
    10. 'le' → logprob: -12.143370628356934

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025657136575318873
    2. ' )' → logprob: -9.125256538391113
    3. 'l' → logprob: -9.750256538391113
    4. ')
' → logprob: -11.250256538391113
    5. '`)' → logprob: -11.250256538391113
    6. '#' → logprob: -11.625256538391113
    7. 's' → logprob: -11.625256538391113
    8. '()' → logprob: -12.125256538391113
    9. ',' → logprob: -12.375256538391113
    10. '")' → logprob: -12.375256538391113

Token 61: 'l' (ID: 75)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.3230414390563965
    2. 's' → logprob: -2.1980414390563965
    3. 'u' → logprob: -2.5730414390563965
    4. ' unique' → logprob: -2.9480414390563965
    5. 'l' → logprob: -3.8230414390563965
    6. 'uniq' → logprob: -5.4480414390563965
    7. 'uni' → logprob: -5.5730414390563965
    8. '_unique' → logprob: -6.4480414390563965
    9. ' u' → logprob: -6.6980414390563965
    10. ' uniques' → logprob: -7.0730414390563965

Token 62: '2' (ID: 17)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.046124983578920364
    2. '<|end|>' → logprob: -3.7961249351501465
    3. ' =' → logprob: -5.0461249351501465
    4. '[:]' → logprob: -5.4211249351501465
    5. '=' → logprob: -6.2961249351501465
    6. ')' → logprob: -6.4211249351501465
    7. 's' → logprob: -6.5461249351501465
    8. ' ' → logprob: -6.6711249351501465
    9. '_unique' → logprob: -6.9211249351501465
    10. '_' → logprob: -7.4211249351501465

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10030501335859299
    2. '=' → logprob: -2.3503050804138184
    3. '_' → logprob: -9.47530460357666
    4. ' ' → logprob: -11.22530460357666
    5. ',' → logprob: -13.22530460357666
    6. 's' → logprob: -13.22530460357666
    7. '_=' → logprob: -14.47530460357666
    8. '.' → logprob: -14.85030460357666
    9. ' ' → logprob: -14.97530460357666
    10. '=[]' → logprob: -15.10030460357666

Token 64: ' list' (ID: 1562)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.7400251030921936
    2. 'set' → logprob: -0.7400251030921936
    3. ' list' → logprob: -3.365025043487549
    4. 'list' → logprob: -4.490025043487549
    5. '(set' → logprob: -12.365025520324707
    6. 's' → logprob: -13.490025520324707
    7. ' ' → logprob: -13.490025520324707
    8. 'sorted' → logprob: -13.490025520324707
    9. ' ' → logprob: -13.740025520324707
    10. '```' → logprob: -13.990025520324707

Token 65: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.3132985532283783
    2. '(' → logprob: -1.3132985830307007
    3. '(s' → logprob: -10.688298225402832
    4. '(dict' → logprob: -11.813298225402832
    5. '(filter' → logprob: -13.188298225402832
    6. '(
' → logprob: -13.313298225402832
    7. '(sorted' → logprob: -13.938298225402832
    8. 'set' → logprob: -14.938298225402832
    9. '(convert' → logprob: -15.063298225402832
    10. '(unique' → logprob: -15.188298225402832

Token 66: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0002671768015716225
    2. '(' → logprob: -8.250267028808594
    3. ' (' → logprob: -13.000267028808594
    4. '(s' → logprob: -13.375267028808594
    5. '(n' → logprob: -13.750267028808594
    6. ')' → logprob: -14.125267028808594
    7. '(
' → logprob: -16.125267028808594
    8. 'l' → logprob: -16.500267028808594
    9. '(ll' → logprob: -17.125267028808594
    10. '(L' → logprob: -17.375267028808594

Token 67: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.030455850064754486
    2. ')' → logprob: -3.5304558277130127
    3. '()))' → logprob: -7.405456066131592
    4. '())' → logprob: -9.655455589294434
    5. '()' → logprob: -11.030455589294434
    6. '(' → logprob: -11.905455589294434
    7. ')))' → logprob: -12.655455589294434
    8. ' ))' → logprob: -12.780455589294434
    9. '))
' → logprob: -12.905455589294434
    10. '])' → logprob: -15.155455589294434

Token 68: 'print' (ID: 1598)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14610137045383453
    2. 'print' → logprob: -3.146101474761963
    3. ')' → logprob: -3.271101474761963
    4. '.' → logprob: -4.021101474761963
    5. '#' → logprob: -4.146101474761963
    6. '<|end|>' → logprob: -4.271101474761963
    7. ' l' → logprob: -6.021101474761963
    8. 'for' → logprob: -7.021101474761963
    9. '```' → logprob: -7.021101474761963
    10. 'n' → logprob: -7.646101474761963

Token 69: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759913921356201
    2. '(l' → logprob: -0.8259913921356201
    3. '(len' → logprob: -10.3259916305542
    4. '('' → logprob: -12.0759916305542
    5. '("("' → logprob: -12.4509916305542
    6. '(ll' → logprob: -13.0759916305542
    7. '(n' → logprob: -13.2009916305542
    8. '()' → logprob: -13.2009916305542
    9. '((' → logprob: -13.9509916305542
    10. '(ls' → logprob: -14.4509916305542

Token 70: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.008615515194833279
    2. '(' → logprob: -4.758615493774414
    3. ')' → logprob: -14.508615493774414
    4. ' (' → logprob: -15.633615493774414
    5. '(ll' → logprob: -15.633615493774414
    6. '(s' → logprob: -16.883615493774414
    7. '(
' → logprob: -17.383615493774414
    8. '(n' → logprob: -17.758615493774414
    9. '(

' → logprob: -17.883615493774414
    10. '	l' → logprob: -18.008615493774414

Token 71: '2' (ID: 17)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005288661457598209
    2. ')' → logprob: -5.255288600921631
    3. '2' → logprob: -10.755289077758789
    4. ')))' → logprob: -11.505289077758789
    5. 'l' → logprob: -12.005289077758789
    6. '(' → logprob: -12.005289077758789
    7. '))
' → logprob: -12.630289077758789
    8. '(l' → logprob: -12.755289077758789
    9. '()))' → logprob: -13.630289077758789
    10. ' ))' → logprob: -14.255289077758789

Token 72: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023246407508850098
    2. '))' → logprob: -3.7732462882995605
    3. ')))' → logprob: -15.148246765136719
    4. ' )' → logprob: -15.398246765136719
    5. '())' → logprob: -15.523246765136719
    6. '()' → logprob: -16.64824676513672
    7. '])' → logprob: -17.02324676513672
    8. '(' → logprob: -17.27324676513672
    9. ')`' → logprob: -17.39824676513672
    10. '')' → logprob: -17.52324676513672

Token 73: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012873471714556217
    2. '<|end|>' → logprob: -4.637873649597168
    3. '#' → logprob: -6.512873649597168
    4. ' ' → logprob: -7.887873649597168
    5. '```' → logprob: -8.012873649597168
    6. '\' → logprob: -8.387873649597168
    7. '(' → logprob: -8.637873649597168
    8. '[' → logprob: -9.387873649597168
    9. '\n' → logprob: -9.387873649597168
    10. '
' → logprob: -9.512873649597168

Token 74: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013451026752591133
    2. '<|end|>' → logprob: -4.638451099395752
    3. '
' → logprob: -6.888451099395752
    4. '#' → logprob: -7.013451099395752
    5. '```' → logprob: -7.388451099395752
    6. ' ' → logprob: -7.638451099395752
    7. '\n' → logprob: -8.638450622558594
    8. ' )' → logprob: -8.888450622558594
    9. '\' → logprob: -9.763450622558594
    10. '<|end|>' → logprob: -9.888450622558594

Token 75: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03335611894726753
    2. ' ' → logprob: -5.033356189727783
    3. ' l' → logprob: -5.408356189727783
    4. '(' → logprob: -5.408356189727783
    5. ' )' → logprob: -5.408356189727783
    6. '<|end|>' → logprob: -5.533356189727783
    7. 'l' → logprob: -6.533356189727783
    8. '()' → logprob: -6.783356189727783
    9. ' unique' → logprob: -7.033356189727783
    10. '```' → logprob: -7.283356189727783

Token 76: ' veut' (ID: 41653)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4422492980957031
    2. ' a' → logprob: -2.192249298095703
    3. 's' → logprob: -3.067249298095703
    4. ' print' → logprob: -3.067249298095703
    5. ' continue' → logprob: -4.067249298095703
    6. 'a' → logprob: -4.317249298095703
    7. ''' → logprob: -5.192249298095703
    8. ' peux' → logprob: -5.192249298095703
    9. '<|end|>' → logprob: -5.317249298095703
    10. ' unique' → logprob: -5.317249298095703

Token 77: ' juste' (ID: 31553)
  Prédit: ' juste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' juste' → logprob: -0.7486186623573303
    2. ' ' → logprob: -1.7486186027526855
    3. ' simplement' → logprob: -1.8736186027526855
    4. 'l' → logprob: -2.9986186027526855
    5. ' just' → logprob: -3.6236186027526855
    6. ' seulement' → logprob: -3.7486186027526855
    7. ' la' → logprob: -4.1236186027526855
    8. ' uniquement' → logprob: -4.4986186027526855
    9. 'just' → logprob: -4.4986186027526855
    10. ' connaître' → logprob: -4.7486186027526855

Token 78: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6508819460868835
    2. ' afficher' → logprob: -2.1508820056915283
    3. 'le' → logprob: -2.4008820056915283
    4. ' la' → logprob: -2.7758820056915283
    5. ' compter' → logprob: -3.4008820056915283
    6. ' le' → logprob: -3.5258820056915283
    7. ' ' → logprob: -3.6508820056915283
    8. ' juste' → logprob: -3.9008820056915283
    9. ' connaître' → logprob: -4.025881767272949
    10. 'aff' → logprob: -4.150881767272949

Token 79: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.04129309207201004
    2. 'nombre' → logprob: -3.666293144226074
    3. ' nombres' → logprob: -4.791293144226074
    4. ' ' → logprob: -5.666293144226074
    5. ' code' → logprob: -6.666293144226074
    6. ' number' → logprob: -7.666293144226074
    7. ' total' → logprob: -7.916293144226074
    8. ' résultat' → logprob: -8.416293144226074
    9. '_nombre' → logprob: -8.666293144226074
    10. 's' → logprob: -8.791293144226074

Token 80: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02228015474975109
    2. '<|end|>' → logprob: -4.147280216217041
    3. '#' → logprob: -5.522280216217041
    4. '```' → logprob: -6.897280216217041
    5. ' ' → logprob: -8.022279739379883
    6. '\n' → logprob: -8.897279739379883
    7. '
' → logprob: -9.147279739379883
    8. '[' → logprob: -9.272279739379883
    9. ' )' → logprob: -9.272279739379883
    10. '<|end|>' → logprob: -9.397279739379883

Token 81: ' C' (ID: 363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055301863700151443
    2. '#' → logprob: -3.6803019046783447
    3. '<|end|>' → logprob: -4.305301666259766
    4. '
' → logprob: -5.430301666259766
    5. '\n' → logprob: -5.430301666259766
    6. ' ' → logprob: -6.055301666259766
    7. '```' → logprob: -6.680301666259766
    8. '\' → logprob: -7.430301666259766
    9. 'n' → logprob: -7.430301666259766
    10. '[' → logprob: -8.305301666259766

Token 82: ''est' (ID: 6616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' ce' (ID: 2357)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.04352603107690811
    2. ' tout' → logprob: -3.2935259342193604
    3. 'ça' → logprob: -6.7935261726379395
    4. 'pas' → logprob: -6.9185261726379395
    5. 'cela' → logprob: -7.6685261726379395
    6. 'f' → logprob: -7.7935261726379395
    7. 't' → logprob: -8.293525695800781
    8. ' ça' → logprob: -8.418525695800781
    9. 'l' → logprob: -8.418525695800781
    10. 'la' → logprob: -8.543525695800781

Token 84: ' qu' (ID: 474)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.6694353222846985
    2. ' que' → logprob: -1.5444352626800537
    3. 'qu' → logprob: -2.0444352626800537
    4. 'qui' → logprob: -2.6694352626800537
    5. ' qu' → logprob: -3.2944352626800537
    6. ' ' → logprob: -4.169435501098633
    7. 'tout' → logprob: -4.794435501098633
    8. ' qui' → logprob: -5.044435501098633
    9. 'all' → logprob: -6.294435501098633
    10. 't' → logprob: -6.419435501098633

Token 85: ''ils' (ID: 41108)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -1.0838536024093628
    2. 'qui' → logprob: -1.7088536024093628
    3. ' demandé' → logprob: -2.0838537216186523
    4. 'dem' → logprob: -2.8338537216186523
    5. 'que' → logprob: -2.9588537216186523
    6. 'f' → logprob: -3.0838537216186523
    7. ' qu' → logprob: -3.8338537216186523
    8. ''on' → logprob: -3.8338537216186523
    9. ' qui' → logprob: -3.8338537216186523
    10. 'on' → logprob: -4.458853721618652

Token 86: ' veulent' (ID: 84457)
  Prédit: 'dem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dem' → logprob: -0.610891580581665
    2. 'd' → logprob: -1.610891580581665
    3. ' demand' → logprob: -1.735891580581665
    4. 'f' → logprob: -4.735891342163086
    5. ' veulent' → logprob: -4.985891342163086
    6. 've' → logprob: -5.235891342163086
    7. 'avaient' → logprob: -5.235891342163086
    8. 'dis' → logprob: -5.360891342163086
    9. 'voud' → logprob: -5.485891342163086
    10. ' demanda' → logprob: -5.485891342163086

Token 87: ' hein' (ID: 115155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31504353880882263
    2. '<|end|>' → logprob: -1.565043568611145
    3. '#' → logprob: -3.3150434494018555
    4. '\n' → logprob: -4.6900434494018555
    5. '```' → logprob: -5.4400434494018555
    6. 'n' → logprob: -5.9400434494018555
    7. '
' → logprob: -6.3150434494018555
    8. '<|end|>' → logprob: -6.4400434494018555
    9. '}' → logprob: -6.9400434494018555
    10. '\' → logprob: -7.0650434494018555

Token 88: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 18.60%
Précision adaptée (1ère position): 18.60%
Précision (top 10): 48.84%
================================================================================
