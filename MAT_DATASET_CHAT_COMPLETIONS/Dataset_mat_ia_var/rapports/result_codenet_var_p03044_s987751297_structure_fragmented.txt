================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_n():
    return int(input())

def read_edge():
    u, v, w = map(int, input().split())
    return u, v, w

def ensure_key(d, k):
    from collections import deque
    if k not in d:
        d[k] = deque()

def add_edge(neighbor, u, v, w):
    ensure_key(neighbor, u)
    ensure_key(neighbor, v)
    neighbor[u].append((v, w))
    neighbor[v].append((u, w))

def build_neighbors(n):
    from collections import deque
    neighbor = {}
    for _ in range(n - 1):
        u, v, w = read_edge()
        add_edge(neighbor, u, v, w)
    return neighbor

def init_color():
    return {1: 0}

def init_visited():
    return set([1])

def init_queue():
    from collections import deque
    return deque([(1, 0)])

def visit_node(queue):
    return queue.pop()

def process_neighbors(v, wsum, neighbor, visited, color, queue):
    for u, w in neighbor[v]:
        if skip_visited(u, visited):
            continue
        mark_visited(u, visited)
        assign_color(u, wsum, w, color)
        add_to_queue(u, wsum, w, queue)

def skip_visited(u, visited):
    return u in visited

def mark_visited(u, visited):
    visited.add(u)

def assign_color(u, wsum, w, color):
    color[u] = (wsum + w) % 2

def add_to_queue(u, wsum, w, queue):
    queue.append((u, wsum + w))

def traverse(neighbor, color, visited, queue):
    while not queue_empty(queue):
        v, wsum = visit_node(queue)
        process_neighbors(v, wsum, neighbor, visited, color, queue)

def queue_empty(queue):
    return len(queue) == 0

def print_colors(n, color):
    for i in range(n):
        print(get_color(i + 1, color))

def get_color(i, color):
    return color[i]

def main():
    n = read_n()
    neighbor = build_neighbors(n)
    color = init_color()
    visited = init_visited()
    queue = init_queue()
    traverse(neighbor, color, visited, queue)
    print_colors(n, color)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_n' (ID: 2170)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.5992681384086609
    2. '_' → logprob: -0.9742681384086609
    3. '(_' → logprob: -3.5992681980133057
    4. '```' → logprob: -4.099267959594727
    5. '_ext' → logprob: -4.724267959594727
    6. 'umber' → logprob: -4.974267959594727
    7. '(' → logprob: -5.724267959594727
    8. 'ame' → logprob: -5.849267959594727
    9. '_chars' → logprob: -6.474267959594727
    10. '(a' → logprob: -6.724267959594727

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0262972116470337
    2. '\' → logprob: -1.7762972116470337
    3. '\n' → logprob: -2.026297092437744
    4. ''' → logprob: -2.151297092437744
    5. '   ' → logprob: -3.276297092437744
    6. '(' → logprob: -3.526297092437744
    7. ' ' → logprob: -3.776297092437744
    8. '(n' → logprob: -4.026297092437744
    9. ' 
' → logprob: -4.151297092437744
    10. ':' → logprob: -4.276297092437744

Token 5: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4546598494052887
    2. 'r' → logprob: -1.2046598196029663
    3. '   ' → logprob: -3.704659938812256
    4. ' ' → logprob: -4.204659938812256
    5. 'x' → logprob: -4.954659938812256
    6. 'return' (adapté à ' return') → logprob: -5.079659938812256
    7. '```' → logprob: -5.204659938812256
    8. '`' → logprob: -6.079659938812256
    9. 'a' → logprob: -6.704659938812256
    10. 'i' → logprob: -6.954659938812256

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2543371319770813
    2. '  ' → logprob: -2.8793370723724365
    3. ' []' → logprob: -2.8793370723724365
    4. '"' → logprob: -3.1293370723724365
    5. ' int' → logprob: -3.2543370723724365
    6. ''' → logprob: -5.004337310791016
    7. ' input' → logprob: -5.629337310791016
    8. 'int' → logprob: -5.754337310791016
    9. ' None' → logprob: -5.754337310791016
    10. 'input' → logprob: -5.754337310791016

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015317666111513972
    2. '('' → logprob: -6.626531600952148
    3. '("("' → logprob: -9.626531600952148
    4. ''' → logprob: -9.876531600952148
    5. '```' → logprob: -10.876531600952148
    6. ' (' → logprob: -11.626531600952148
    7. '`' → logprob: -11.751531600952148
    8. '(`' → logprob: -12.001531600952148
    9. '40' → logprob: -12.501531600952148
    10. '(
' → logprob: -12.501531600952148

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11230536550283432
    2. '()' → logprob: -3.1123054027557373
    3. '())' → logprob: -3.4873054027557373
    4. '('' → logprob: -4.362305164337158
    5. ')' → logprob: -4.362305164337158
    6. '(""))' → logprob: -6.612305164337158
    7. '(()' → logprob: -6.737305164337158
    8. '("("' → logprob: -7.237305164337158
    9. '```' → logprob: -7.487305164337158
    10. '))' → logprob: -7.862305164337158

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35074713826179504
    2. '\n' → logprob: -2.6007471084594727
    3. 'n' → logprob: -2.8507471084594727
    4. '(' → logprob: -3.6007471084594727
    5. 'd' → logprob: -3.8507471084594727
    6. 'x' → logprob: -4.100747108459473
    7. '#' → logprob: -4.225747108459473
    8. '```' → logprob: -4.225747108459473
    9. '<|end|>' → logprob: -4.850747108459473
    10. '\' → logprob: -4.850747108459473

Token 10: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0687013790011406
    2. ' write' → logprob: -2.8187012672424316
    3. ' calculate' → logprob: -5.693701267242432
    4. ' space' → logprob: -7.068701267242432
    5. ' main' → logprob: -7.568701267242432
    6. ' ' → logprob: -7.568701267242432
    7. 'read' → logprob: -7.943701267242432
    8. '_' → logprob: -8.31870174407959
    9. ' add' → logprob: -8.31870174407959
    10. ' process' → logprob: -8.69370174407959

Token 11: '_edge' (ID: 43226)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -8.375538163818419e-05
    2. '_n' → logprob: -9.750083923339844
    3. '(' → logprob: -11.375083923339844
    4. '_a' → logprob: -12.750083923339844
    5. ' _' → logprob: -12.875083923339844
    6. '_s' → logprob: -13.500083923339844
    7. '_(' → logprob: -13.500083923339844
    8. '_)' → logprob: -13.750083923339844
    9. '_

' → logprob: -14.125083923339844
    10. '_line' → logprob: -14.625083923339844

Token 12: '():
' (ID: 8595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1270916759967804
    2. '_s' → logprob: -2.752091646194458
    3. '(' → logprob: -3.252091646194458
    4. '(s' → logprob: -4.127091884613037
    5. '_' → logprob: -8.377091407775879
    6. ')s' → logprob: -9.377091407775879
    7. '`s' → logprob: -9.752091407775879
    8. ' s' → logprob: -9.752091407775879
    9. '```' → logprob: -10.002091407775879
    10. '('' → logprob: -10.127091407775879

Token 13: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1639164239168167
    2. '   ' → logprob: -2.0389163494110107
    3. '_' → logprob: -5.03891658782959
    4. ' (' → logprob: -5.53891658782959
    5. '()' → logprob: -5.53891658782959
    6. 'def' → logprob: -5.91391658782959
    7. '    ' → logprob: -6.91391658782959
    8. ')' → logprob: -7.41391658782959
    9. 'return' → logprob: -8.03891658782959
    10. ' return' → logprob: -8.03891658782959

Token 14: ' u' (ID: 337)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4250025749206543
    2. '   ' → logprob: -1.5500025749206543
    3. ' return' → logprob: -2.0500025749206543
    4. 'edge' → logprob: -6.425002574920654
    5. 'int' → logprob: -6.675002574920654
    6. ' edge' → logprob: -7.800002574920654
    7. 'u' (adapté à ' u') → logprob: -8.175003051757812
    8. ' ' → logprob: -8.675003051757812
    9. 'e' → logprob: -8.675003051757812
    10. ' u' → logprob: -8.800003051757812

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012213759124279022
    2. 's' → logprob: -4.887213706970215
    3. ' ,' → logprob: -5.512213706970215
    4. 'n' → logprob: -8.387213706970215
    5. '=' → logprob: -9.512213706970215
    6. ',s' → logprob: -9.887213706970215
    7. ',n' → logprob: -10.137213706970215
    8. 'ser' → logprob: -10.387213706970215
    9. ' =' → logprob: -10.762213706970215
    10. 'se' → logprob: -10.762213706970215

Token 16: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12711571156978607
    2. 'v' → logprob: -2.1271157264709473
    3. ' ' → logprob: -9.127115249633789
    4. ',v' → logprob: -10.627115249633789
    5. '  ' → logprob: -11.127115249633789
    6. 's' → logprob: -12.002115249633789
    7. '<|end|>' → logprob: -12.002115249633789
    8. '	v' → logprob: -12.252115249633789
    9. 'space' → logprob: -12.502115249633789
    10. '*v' → logprob: -13.002115249633789

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47491833567619324
    2. '=' → logprob: -0.9749183654785156
    3. ',' → logprob: -7.099918365478516
    4. ')' → logprob: -12.099918365478516
    5. ' ,' → logprob: -12.724918365478516
    6. ' ' → logprob: -13.099918365478516
    7. '   ' → logprob: -14.224918365478516
    8. '<|end|>' → logprob: -14.224918365478516
    9. ' =
' → logprob: -14.349918365478516
    10. ')=' → logprob: -14.349918365478516

Token 18: ' w' (ID: 286)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3377171754837036
    2. ' input' → logprob: -1.5877171754837036
    3. '=' → logprob: -2.087717056274414
    4. ' ' → logprob: -2.212717056274414
    5. ' map' → logprob: -2.462717056274414
    6. 'input' → logprob: -2.712717056274414
    7. ' w' → logprob: -2.837717056274414
    8. 'w' → logprob: -3.337717056274414
    9. 'map' → logprob: -3.337717056274414
    10. '=input' → logprob: -5.212717056274414

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023168474435806
    2. '=' → logprob: -2.350231647491455
    3. ',' → logprob: -10.725232124328613
    4. ')' → logprob: -14.100232124328613
    5. ' ' → logprob: -14.100232124328613
    6. '=input' → logprob: -14.350232124328613
    7. ' ,' → logprob: -15.475232124328613
    8. '  ' → logprob: -16.225231170654297
    9. ' =
' → logprob: -16.350231170654297
    10. '   ' → logprob: -16.475231170654297

Token 20: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018268872052431107
    2. 'map' → logprob: -4.018269062042236
    3. ' list' → logprob: -10.143268585205078
    4. ' input' → logprob: -10.518268585205078
    5. '   ' → logprob: -11.268268585205078
    6. '[' → logprob: -11.643268585205078
    7. ' [' → logprob: -12.018268585205078
    8. ' ' → logprob: -12.018268585205078
    9. 'input' → logprob: -12.018268585205078
    10. '	map' → logprob: -12.518268585205078

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03960869833827019
    2. '(' → logprob: -3.2896087169647217
    3. '(lambda' → logprob: -7.039608478546143
    4. '(input' → logprob: -8.0396089553833
    5. '<|end|>' → logprob: -9.0396089553833
    6. '(str' → logprob: -9.5396089553833
    7. 'int' → logprob: -9.7896089553833
    8. '<int' → logprob: -10.1646089553833
    9. '[int' → logprob: -11.0396089553833
    10. '(
' → logprob: -11.1646089553833

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007354593835771084
    2. ',input' → logprob: -5.132354736328125
    3. ',' → logprob: -7.382354736328125
    4. ')' → logprob: -7.632354736328125
    5. '=input' → logprob: -9.632354736328125
    6. '<|end|>' → logprob: -9.632354736328125
    7. '(' → logprob: -9.757354736328125
    8. 'input' → logprob: -9.882354736328125
    9. ' (' → logprob: -10.382354736328125
    10. ' input' → logprob: -11.132354736328125

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804849088191986
    2. ' input' → logprob: -3.288048505783081
    3. ')' → logprob: -12.53804874420166
    4. '(input' → logprob: -13.41304874420166
    5. '=input' → logprob: -13.91304874420166
    6. ',input' → logprob: -14.78804874420166
    7. '	input' → logprob: -15.03804874420166
    8. '[input' → logprob: -16.038047790527344
    9. '<input' → logprob: -16.288047790527344
    10. '_input' → logprob: -16.413047790527344

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000995295005850494
    2. '()' → logprob: -7.00099515914917
    3. ')' → logprob: -9.500995635986328
    4. '())' → logprob: -12.250995635986328
    5. '(' → logprob: -13.250995635986328
    6. ' ().' → logprob: -14.250995635986328
    7. '()))' → logprob: -14.875995635986328
    8. '))' → logprob: -15.375995635986328
    9. '()
' → logprob: -15.875995635986328
    10. '.' → logprob: -16.000995635986328

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005599428550340235
    2. 'strip' → logprob: -7.5005598068237305
    3. 'rstrip' → logprob: -12.12555980682373
    4. ' split' → logprob: -13.87555980682373
    5. '(split' → logprob: -14.62555980682373
    6. 'spl' → logprob: -17.625560760498047
    7. 's' → logprob: -18.125560760498047
    8. ')' → logprob: -18.500560760498047
    9. 'read' → logprob: -18.750560760498047
    10. ' ' → logprob: -19.125560760498047

Token 26: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39668112993240356
    2. ')' → logprob: -1.3966810703277588
    3. '))' → logprob: -3.021681070327759
    4. '()))' → logprob: -3.646681070327759
    5. '()' → logprob: -5.271681308746338
    6. '(' → logprob: -9.77168083190918
    7. '())
' → logprob: -11.52168083190918
    8. '('' → logprob: -12.14668083190918
    9. '()))
' → logprob: -12.52168083190918
    10. ')))' → logprob: -12.52168083190918

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09968188405036926
    2. '<|end|>' → logprob: -3.724681854248047
    3. 'return' → logprob: -3.974681854248047
    4. ')' → logprob: -3.974681854248047
    5. '	return' → logprob: -4.099681854248047
    6. ' return' → logprob: -5.224681854248047
    7. '    
' → logprob: -5.599681854248047
    8. ' 
' → logprob: -6.599681854248047
    9. ',' → logprob: -6.849681854248047
    10. '    ' → logprob: -7.224681854248047

Token 28: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.318614661693573
    2. 'return' (adapté à ' return') → logprob: -1.6936147212982178
    3. ' return' → logprob: -3.1936147212982178
    4. '<|end|>' → logprob: -3.4436147212982178
    5. ')' → logprob: -4.943614482879639
    6. '	return' → logprob: -5.693614482879639
    7. '    ' → logprob: -5.943614482879639
    8. '  ' → logprob: -7.568614482879639
    9. '<|end|>' → logprob: -7.568614482879639
    10. '    
' → logprob: -7.568614482879639

Token 29: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8361900448799133
    2. ' u' → logprob: -0.8361900448799133
    3. '(u' → logprob: -2.3361899852752686
    4. ' (' → logprob: -3.3361899852752686
    5. '(' → logprob: -7.086190223693848
    6. ' ' → logprob: -9.461190223693848
    7. '[u' → logprob: -10.086190223693848
    8. '   ' → logprob: -10.211190223693848
    9. '	u' → logprob: -11.461190223693848
    10. '  ' → logprob: -11.961190223693848

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0683932676911354
    2. ' ,' → logprob: -2.9433932304382324
    3. ',v' → logprob: -4.318393230438232
    4. ',w' → logprob: -9.81839370727539
    5. ',u' → logprob: -10.44339370727539
    6. ' v' → logprob: -12.56839370727539
    7. ' ' → logprob: -13.06839370727539
    8. ',n' → logprob: -13.69339370727539
    9. ',
' → logprob: -13.94339370727539
    10. ',b' → logprob: -14.31839370727539

Token 31: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.28116312623023987
    2. 'v' → logprob: -1.4061630964279175
    3. ' ' → logprob: -11.906163215637207
    4. ',v' → logprob: -13.156163215637207
    5. ' ' → logprob: -14.031163215637207
    6. ',' → logprob: -14.406163215637207
    7. '	v' → logprob: -14.656163215637207
    8. 'w' → logprob: -14.906163215637207
    9. '`' → logprob: -15.031163215637207
    10. '.v' → logprob: -15.031163215637207

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008095058728940785
    2. ' ,' → logprob: -7.875809669494629
    3. '<|end|>' → logprob: -8.250809669494629
    4. ',w' → logprob: -9.000809669494629
    5. 'w' → logprob: -10.875809669494629
    6. ',
' → logprob: -12.000809669494629
    7. ' ' → logprob: -12.625809669494629
    8. ' w' → logprob: -12.750809669494629
    9. '<|end|>' → logprob: -12.750809669494629
    10. ',v' → logprob: -13.000809669494629

Token 33: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5759498476982117
    2. ' w' → logprob: -0.8259498476982117
    3. ' ' → logprob: -12.325949668884277
    4. ' ' → logprob: -12.575949668884277
    5. '    ' → logprob: -15.075949668884277
    6. 'v' → logprob: -15.138449668884277
    7. '```' → logprob: -15.450949668884277
    8. '	w' → logprob: -15.825949668884277
    9. ' 
' → logprob: -16.138450622558594
    10. 's' → logprob: -16.263450622558594

Token 34: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6528809070587158
    2. '
' → logprob: -0.7778809070587158
    3. '\n' → logprob: -4.777880668640137
    4. '```' → logprob: -5.402880668640137
    5. '\' → logprob: -5.902880668640137
    6. '<|end|>' → logprob: -6.402880668640137
    7. '

' → logprob: -6.652880668640137
    8. '
' → logprob: -7.277880668640137
    9. '' → logprob: -8.902880668640137
    10. '    
' → logprob: -9.402880668640137

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002854328602552414
    2. '
' → logprob: -6.002854347229004
    3. 'n' → logprob: -8.127854347229004
    4. '```' → logprob: -10.127854347229004
    5. '

' → logprob: -11.377854347229004
    6. 'class' → logprob: -11.752854347229004
    7. 'ndef' → logprob: -12.127854347229004
    8. '\n' → logprob: -12.627854347229004
    9. '\' → logprob: -12.877854347229004
    10. 'edges' → logprob: -13.002854347229004

Token 36: ' ensure' (ID: 6757)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8116238117218018
    2. ' solve' → logprob: -1.3116238117218018
    3. ' read' → logprob: -2.0616238117218018
    4. ' dfs' → logprob: -2.8116238117218018
    5. ' bfs' → logprob: -3.1866238117218018
    6. ' find' → logprob: -3.6866238117218018
    7. ' build' → logprob: -4.311623573303223
    8. ' bell' → logprob: -5.811623573303223
    9. ' kr' → logprob: -6.436623573303223
    10. ' d' → logprob: -6.561623573303223

Token 37: '_key' (ID: 6724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33676156401634216
    2. '_connected' → logprob: -1.9617615938186646
    3. '_unique' → logprob: -3.461761474609375
    4. '_capacity' → logprob: -3.836761474609375
    5. '_space' → logprob: -4.086761474609375
    6. '_edge' → logprob: -4.336761474609375
    7. '_tr' → logprob: -4.711761474609375
    8. '_edges' → logprob: -4.711761474609375
    9. '_nodes' → logprob: -5.711761474609375
    10. '_connection' → logprob: -5.711761474609375

Token 38: '(d' (ID: 2572)
  Prédit: '(dictionary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dictionary' → logprob: -1.0870860815048218
    2. '(dict' → logprob: -1.2120860815048218
    3. '(d' → logprob: -1.4620860815048218
    4. '(' → logprob: -2.7120862007141113
    5. '(dic' → logprob: -3.0870862007141113
    6. ' (' → logprob: -4.587086200714111
    7. '(key' → logprob: -5.587086200714111
    8. '(data' → logprob: -5.712086200714111
    9. '(s' → logprob: -7.087086200714111
    10. '(keys' → logprob: -7.587086200714111

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005355905741453171
    2. ' ,' → logprob: -5.7553558349609375
    3. 'ef' → logprob: -7.5053558349609375
    4. ')' → logprob: -7.7553558349609375
    5. ',key' → logprob: -7.7553558349609375
    6. 'ictionary' → logprob: -8.005355834960938
    7. '   ' → logprob: -10.130355834960938
    8. ',)' → logprob: -10.255355834960938
    9. '),' → logprob: -10.380355834960938
    10. ',k' → logprob: -10.630355834960938

Token 40: ' k' (ID: 372)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6281017065048218
    2. ' key' → logprob: -1.0031017065048218
    3. 'k' → logprob: -2.3781018257141113
    4. ' k' → logprob: -5.003101825714111
    5. '   ' → logprob: -9.503101348876953
    6. 'keys' → logprob: -9.878101348876953
    7. ' keys' → logprob: -10.378101348876953
    8. ')' → logprob: -11.253101348876953
    9. '```' → logprob: -11.753101348876953
    10. ' ' → logprob: -12.253101348876953

Token 41: '):
' (ID: 1883)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.27293816208839417
    2. '):' → logprob: -1.5229381322860718
    3. '):
' → logprob: -4.022938251495361
    4. 'eys' → logprob: -5.897938251495361
    5. 'EY' → logprob: -9.647937774658203
    6. ')' → logprob: -10.397937774658203
    7. 'e' → logprob: -11.022937774658203
    8. 'y' → logprob: -11.647937774658203
    9. '):
' → logprob: -11.897937774658203
    10. ' ):' → logprob: -12.522937774658203

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09647861123085022
    2. ':
' → logprob: -2.8464787006378174
    3. '   ' → logprob: -3.5964787006378174
    4. '):' → logprob: -5.846478462219238
    5. '):
' → logprob: -6.471478462219238
    6. ' :' → logprob: -7.096478462219238
    7. '():' → logprob: -7.846478462219238
    8. ' :
' → logprob: -7.846478462219238
    9. '():
' → logprob: -8.596478462219238
    10. ' if' → logprob: -8.721478462219238

Token 43: ' from' (ID: 591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0036298849154263735
    2. '   ' → logprob: -6.253629684448242
    3. 'if' → logprob: -6.378629684448242
    4. ' d' → logprob: -14.253629684448242
    5. '	if' → logprob: -14.253629684448242
    6. '    ' → logprob: -14.628629684448242
    7. ' ' → logprob: -14.753629684448242
    8. 'd' → logprob: -15.753629684448242
    9. ' return' → logprob: -17.253629684448242
    10. '```' → logprob: -17.878629684448242

Token 44: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.004658792167901993
    2. 'collections' → logprob: -5.3796586990356445
    3. ' collection' → logprob: -11.004658699035645
    4. '_' → logprob: -11.754658699035645
    5. ' _' → logprob: -12.379658699035645
    6. '_collection' → logprob: -12.754658699035645
    7. ' ' → logprob: -13.504658699035645
    8. ' copy' → logprob: -13.629658699035645
    9. ' colle' → logprob: -14.004658699035645
    10. ' functools' → logprob: -14.004658699035645

Token 45: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6516324281692505
    2. 'abc' → logprob: -1.7766324281692505
    3. 'default' → logprob: -1.7766324281692505
    4. '.default' → logprob: -3.776632308959961
    5. '.' → logprob: -4.026632308959961
    6. '   ' → logprob: -4.151632308959961
    7. 'al' → logprob: -4.276632308959961
    8. 'a' → logprob: -4.401632308959961
    9. ' import' → logprob: -4.651632308959961
    10. 'd' → logprob: -5.151632308959961

Token 46: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5764596462249756
    2. 'default' → logprob: -0.8264596462249756
    3. 'import' → logprob: -8.826459884643555
    4. ' default' → logprob: -8.826459884643555
    5. 'deque' → logprob: -8.951459884643555
    6. 'def' → logprob: -10.451459884643555
    7. ' import' → logprob: -11.201459884643555
    8. 'abc' → logprob: -11.201459884643555
    9. 'collections' → logprob: -11.576459884643555
    10. '```' → logprob: -11.951459884643555

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0534832738339901
    2. ' if' → logprob: -3.803483247756958
    3. '
' → logprob: -3.928483247756958
    4. 'if' → logprob: -5.803483486175537
    5. '    
' → logprob: -6.178483486175537
    6. '  
' → logprob: -6.428483486175537
    7. '<|end|>' → logprob: -6.553483486175537
    8. ' 
' → logprob: -7.053483486175537
    9. ' ' → logprob: -8.178483009338379
    10. '<|end|>' → logprob: -8.678483009338379

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014423329383134842
    2. ' if' → logprob: -4.389423370361328
    3. 'if' → logprob: -6.889423370361328
    4. '<|end|>' → logprob: -7.639423370361328
    5. '    
' → logprob: -9.639423370361328
    6. ' ' → logprob: -10.014423370361328
    7. '
' → logprob: -10.014423370361328
    8. '  
' → logprob: -10.139423370361328
    9. '```' → logprob: -10.389423370361328
    10. 'def' → logprob: -10.514423370361328

Token 49: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36507147550582886
    2. '   ' → logprob: -1.2400715351104736
    3. 'if' (adapté à ' if') → logprob: -4.1150712966918945
    4. 'If' → logprob: -10.615071296691895
    5. 'd' → logprob: -10.740071296691895
    6. '    
' → logprob: -10.865071296691895
    7. ' ' → logprob: -10.865071296691895
    8. '```' → logprob: -11.490071296691895
    9. '<|end|>' → logprob: -11.615071296691895
    10. 'def' → logprob: -11.615071296691895

Token 50: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.014167623594403267
    2. 'k' → logprob: -4.264167785644531
    3. ' not' → logprob: -12.639167785644531
    4. ' ' → logprob: -14.889167785644531
    5. 'not' → logprob: -15.764167785644531
    6. ' d' → logprob: -16.13916778564453
    7. ' isinstance' → logprob: -16.26416778564453
    8. '	k' → logprob: -16.51416778564453
    9. ' к' → logprob: -17.13916778564453
    10. 'd' → logprob: -17.88916778564453

Token 51: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06204957887530327
    2. 'not' → logprob: -2.812049627304077
    3. ' in' → logprob: -9.687049865722656
    4. 'in' → logprob: -11.312049865722656
    5. ')' → logprob: -12.812049865722656
    6. ' ' → logprob: -13.812049865722656
    7. '	not' → logprob: -14.062049865722656
    8. ' no' → logprob: -14.249549865722656
    9. 'ot' → logprob: -14.874549865722656
    10. ':not' → logprob: -15.437049865722656

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03890377655625343
    2. 'in' → logprob: -3.6639037132263184
    3. ' d' → logprob: -4.913903713226318
    4. 'd' → logprob: -5.288903713226318
    5. '   ' → logprob: -10.413904190063477
    6. 's' → logprob: -11.038904190063477
    7. 'def' → logprob: -11.163904190063477
    8. ' not' → logprob: -11.413904190063477
    9. '(d' → logprob: -11.413904190063477
    10. '[d' → logprob: -11.913904190063477

Token 53: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011048289015889168
    2. 'd' → logprob: -4.511048316955566
    3. '<|end|>' → logprob: -15.261048316955566
    4. ')d' → logprob: -16.13604736328125
    5. '	d' → logprob: -17.01104736328125
    6. ' д' → logprob: -17.63604736328125
    7. '_d' → logprob: -17.63604736328125
    8. ' the' → logprob: -17.76104736328125
    9. '>d' → logprob: -18.01104736328125
    10. ' ' → logprob: -18.13604736328125

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03806249052286148
    2. ':
' → logprob: -3.288062572479248
    3. ' :' → logprob: -11.53806209564209
    4. '   ' → logprob: -11.91306209564209
    5. '):' → logprob: -13.28806209564209
    6. ':
' → logprob: -14.28806209564209
    7. '):
' → logprob: -14.53806209564209
    8. ':d' → logprob: -14.53806209564209
    9. ' :
' → logprob: -14.91306209564209
    10. ':

' → logprob: -15.16306209564209

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04167678579688072
    2. ' d' → logprob: -3.5416767597198486
    3. '   ' → logprob: -4.916676998138428
    4. 'd' → logprob: -5.666676998138428
    5. ':' → logprob: -7.166676998138428
    6. ':
' → logprob: -9.04167652130127
    7. '    ' → logprob: -10.16667652130127
    8. ',' → logprob: -11.16667652130127
    9. '	   ' → logprob: -11.41667652130127
    10. '	d' → logprob: -11.41667652130127

Token 56: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0010167333530262113
    2. 'd' (adapté à ' d') → logprob: -7.001016616821289
    3. '       ' → logprob: -9.376016616821289
    4. ' ' → logprob: -11.501016616821289
    5. '   ' → logprob: -12.251016616821289
    6. '           ' → logprob: -13.001016616821289
    7. '	d' → logprob: -13.376016616821289
    8. ' ' → logprob: -14.876016616821289
    9. ' deque' → logprob: -15.501016616821289
    10. '```' → logprob: -15.751016616821289

Token 57: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.125
    3. 'k' → logprob: -16.625
    4. '[key' → logprob: -16.75
    5. '=k' → logprob: -17.0
    6. '[d' → logprob: -17.375
    7. '=' → logprob: -18.5
    8. ' [' → logprob: -18.875
    9. '][' → logprob: -19.0
    10. ',k' → logprob: -19.75

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.064297824399546e-05
    2. ']=' → logprob: -9.875070571899414
    3. ' ]' → logprob: -11.000070571899414
    4. '']' → logprob: -13.375070571899414
    5. '=' → logprob: -15.625070571899414
    6. '"]' → logprob: -15.625070571899414
    7. '`]' → logprob: -15.750070571899414
    8. 'd' → logprob: -16.000070571899414
    9. '   ' → logprob: -16.125070571899414
    10. ')' → logprob: -17.437570571899414

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932042241096497
    2. ' =' → logprob: -0.6932042241096497
    3. ']' → logprob: -10.068203926086426
    4. ']=' → logprob: -11.193203926086426
    5. ' ' → logprob: -14.818203926086426
    6. '   ' → logprob: -16.193204879760742
    7. ')=' → logprob: -17.193204879760742
    8. ')' → logprob: -17.443204879760742
    9. '＝' → logprob: -17.693204879760742
    10. ',' → logprob: -17.818204879760742

Token 60: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.25194087624549866
    2. ' deque' → logprob: -1.5019408464431763
    3. 'de' → logprob: -11.876940727233887
    4. '[]' → logprob: -13.001940727233887
    5. ' []' → logprob: -13.876940727233887
    6. 'Deque' → logprob: -14.251940727233887
    7. '	de' → logprob: -14.876940727233887
    8. '   ' → logprob: -15.751940727233887
    9. ' de' → logprob: -15.876940727233887
    10. ' ' → logprob: -16.376941680908203

Token 61: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00036691725836135447
    2. '()]' → logprob: -8.500367164611816
    3. '())' → logprob: -9.125367164611816
    4. '([]' → logprob: -10.625367164611816
    5. '()
' → logprob: -11.250367164611816
    6. '()`' → logprob: -13.000367164611816
    7. '()>' → logprob: -13.250367164611816
    8. '(' → logprob: -13.250367164611816
    9. '()}' → logprob: -13.500367164611816
    10. '()</' → logprob: -13.625367164611816

Token 62: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.8272918462753296
    2. ' build' → logprob: -1.4522918462753296
    3. ' bfs' → logprob: -2.077291965484619
    4. ' read' → logprob: -2.327291965484619
    5. ' ensure' → logprob: -3.827291965484619
    6. ' append' → logprob: -4.077291965484619
    7. ' main' → logprob: -4.452291965484619
    8. ' dfs' → logprob: -4.702291965484619
    9. ' process' → logprob: -5.077291965484619
    10. ' solve' → logprob: -5.452291965484619

Token 64: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0008087906171567738
    2. '_' → logprob: -7.8758087158203125
    3. '(' → logprob: -9.250808715820312
    4. '_edges' → logprob: -9.625808715820312
    5. '_node' → logprob: -9.875808715820312
    6. '_to' → logprob: -10.625808715820312
    7. '(_' → logprob: -11.000808715820312
    8. '_item' → logprob: -11.000808715820312
    9. '_key' → logprob: -11.125808715820312
    10. '_entry' → logprob: -11.125808715820312

Token 65: '(ne' (ID: 79401)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.048942964524030685
    2. '(' → logprob: -3.048943042755127
    3. '(s' → logprob: -9.548942565917969
    4. ' (' → logprob: -9.673942565917969
    5. '(node' → logprob: -9.923942565917969
    6. '(data' → logprob: -10.548942565917969
    7. '(a' → logprob: -10.798942565917969
    8. '(de' → logprob: -11.173942565917969
    9. '(D' → logprob: -11.173942565917969
    10. '(nodes' → logprob: -11.423942565917969

Token 66: 'ighbor' (ID: 28225)
  Prédit: 'ighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -0.1273447573184967
    2. 't' → logprob: -3.127344846725464
    3. 'ighbours' → logprob: -3.377344846725464
    4. 'igh' → logprob: -3.502344846725464
    5. 'ighbor' → logprob: -4.752344608306885
    6. 'ighborhood' → logprob: -6.627344608306885
    7. 'ighbour' → logprob: -8.002345085144043
    8. 'ig' → logprob: -8.377345085144043
    9. 'i' → logprob: -8.752345085144043
    10. '```' → logprob: -9.127345085144043

Token 67: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000583653396461159
    2. 'hood' → logprob: -8.00058364868164
    3. ')' → logprob: -9.25058364868164
    4. ',' → logprob: -10.12558364868164
    5. 'd' → logprob: -10.75058364868164
    6. ')s' → logprob: -10.87558364868164
    7. '```' → logprob: -11.62558364868164
    8. '_list' → logprob: -11.62558364868164
    9. 'graph' → logprob: -12.00058364868164
    10. '_map' → logprob: -12.00058364868164

Token 68: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4156549870967865
    2. ' u' → logprob: -1.1656550168991089
    3. 'from' → logprob: -5.165655136108398
    4. 'a' → logprob: -5.290655136108398
    5. 'd' → logprob: -5.540655136108398
    6. ' d' → logprob: -6.415655136108398
    7. ' a' → logprob: -6.665655136108398
    8. 'v' → logprob: -6.790655136108398
    9. 'frm' → logprob: -6.790655136108398
    10. 'f' → logprob: -7.040655136108398

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012844942102674395
    2. ' ,' → logprob: -9.625128746032715
    3. ',v' → logprob: -9.750128746032715
    4. ',u' → logprob: -13.750128746032715
    5. 'v' → logprob: -14.250128746032715
    6. '):' → logprob: -14.375128746032715
    7. '),' → logprob: -15.375128746032715
    8. '   ' → logprob: -15.750128746032715
    9. 'u' → logprob: -15.750128746032715
    10. '):
' → logprob: -16.1251277923584

Token 70: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014189599081873894
    2. ' v' → logprob: -4.264189720153809
    3. 'w' → logprob: -11.139189720153809
    4. '   ' → logprob: -12.389189720153809
    5. ' w' → logprob: -13.764189720153809
    6. '	v' → logprob: -13.889189720153809
    7. ' ' → logprob: -13.889189720153809
    8. 'vq' → logprob: -14.014189720153809
    9. '```' → logprob: -14.014189720153809
    10. 'vv' → logprob: -14.639189720153809

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002602172316983342
    2. ' ,' → logprob: -6.6276021003723145
    3. '):' → logprob: -7.0026021003723145
    4. ')' → logprob: -8.252602577209473
    5. '):
' → logprob: -9.877602577209473
    6. ' ):' → logprob: -11.002602577209473
    7. ' )' → logprob: -11.252602577209473
    8. ',w' → logprob: -11.502602577209473
    9. '):

' → logprob: -12.627602577209473
    10. '   ' → logprob: -12.752602577209473

Token 72: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3873078227043152
    2. ' w' → logprob: -1.13730788230896
    3. ')' → logprob: -9.012308120727539
    4. 'weight' → logprob: -9.262308120727539
    5. ' weight' → logprob: -9.637308120727539
    6. ' )' → logprob: -10.262308120727539
    7. '   ' → logprob: -11.012308120727539
    8. ' ' → logprob: -11.262308120727539
    9. '    ' → logprob: -11.512308120727539
    10. ',' → logprob: -11.637308120727539

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020533124916255474
    2. ')' → logprob: -6.377053260803223
    3. '):
' → logprob: -8.752053260803223
    4. ' ):' → logprob: -9.252053260803223
    5. ',' → logprob: -9.377053260803223
    6. '   ' → logprob: -12.877053260803223
    7. '):
' → logprob: -13.002053260803223
    8. ':' → logprob: -13.252053260803223
    9. '=' → logprob: -13.627053260803223
    10. ' )' → logprob: -14.002053260803223

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000995890935882926
    2. ')' → logprob: -8.375995635986328
    3. ' neighbor' → logprob: -8.500995635986328
    4. '):' → logprob: -9.000995635986328
    5. ',' → logprob: -9.125995635986328
    6. 'neighbor' → logprob: -9.250995635986328
    7. '):
' → logprob: -9.375995635986328
    8. ':' → logprob: -10.250995635986328
    9. ' if' → logprob: -11.000995635986328
    10. '   ' → logprob: -11.125995635986328

Token 75: ' ensure' (ID: 6757)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0833425223827362
    2. ' neighbor' → logprob: -2.9583425521850586
    3. '   ' → logprob: -3.5833425521850586
    4. '_neighbor' → logprob: -9.958342552185059
    5. ' if' → logprob: -10.333342552185059
    6. '```' → logprob: -10.583342552185059
    7. 'def' → logprob: -10.833342552185059
    8. 'if' → logprob: -10.958342552185059
    9. 'neighbors' → logprob: -11.208342552185059
    10. 'ne' → logprob: -11.208342552185059

Token 76: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: 0.0
    2. 'key' → logprob: -17.25
    3. '_' → logprob: -17.5
    4. 'Key' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. '_KEY' → logprob: -19.25
    7. ' _' → logprob: -19.5
    8. '_Key' → logprob: -19.875
    9. '_k' → logprob: -20.125
    10. '_keys' → logprob: -20.25

Token 77: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.10023880749940872
    2. '(' → logprob: -2.350238800048828
    3. '(n' → logprob: -10.850238800048828
    4. '(
' → logprob: -11.850238800048828
    5. '(

' → logprob: -12.975238800048828
    6. ' (' → logprob: -13.225238800048828
    7. 'neighbor' → logprob: -14.600238800048828
    8. '```' → logprob: -16.225238800048828
    9. '(paren' → logprob: -16.600238800048828
    10. '(me' → logprob: -16.850238800048828

Token 78: 'ighbor' (ID: 28225)
  Prédit: 'gh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gh' → logprob: -0.283027321100235
    2. 'ighbor' → logprob: -1.4080272912979126
    3. 'bor' → logprob: -6.783027172088623
    4. '   ' → logprob: -8.408027648925781
    5. 'neighbor' → logprob: -9.283027648925781
    6. 'g' → logprob: -9.533027648925781
    7. 's' → logprob: -9.783027648925781
    8. 'or' → logprob: -10.158027648925781
    9. 'ght' → logprob: -10.283027648925781
    10. ' ' → logprob: -10.408027648925781

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017958412354346365
    2. ' ,' → logprob: -9.250179290771484
    3. ',u' → logprob: -10.125179290771484
    4. ')' → logprob: -10.625179290771484
    5. ',v' → logprob: -11.250179290771484
    6. '(' → logprob: -12.625179290771484
    7. '(u' → logprob: -14.625179290771484
    8. ',
' → logprob: -14.875179290771484
    9. '),' → logprob: -15.500179290771484
    10. ',

' → logprob: -15.500179290771484

Token 80: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.008622374385595322
    2. ' u' → logprob: -4.758622169494629
    3. '	u' → logprob: -12.508622169494629
    4. 'v' → logprob: -13.133622169494629
    5. ')' → logprob: -14.008622169494629
    6. '(u' → logprob: -14.383622169494629
    7. '   ' → logprob: -15.258622169494629
    8. '[u' → logprob: -15.758622169494629
    9. '-u' → logprob: -17.133623123168945
    10. '_u' → logprob: -17.258623123168945

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012379679828882217
    2. ')
' → logprob: -6.751237869262695
    3. ' )' → logprob: -9.751237869262695
    4. ')
' → logprob: -12.001237869262695
    5. ' )
' → logprob: -14.001237869262695
    6. '   ' → logprob: -14.126237869262695
    7. ')v' → logprob: -14.126237869262695
    8. ',' → logprob: -15.251237869262695
    9. ')

' → logprob: -15.376237869262695
    10. '),' → logprob: -16.001237869262695

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036655140575021505
    2. ')' → logprob: -6.253665447235107
    3. ' ' → logprob: -7.628665447235107
    4. '<|end|>' → logprob: -7.878665447235107
    5. '    
' → logprob: -8.378665924072266
    6. ' )' → logprob: -8.628665924072266
    7. '    ' → logprob: -9.128665924072266
    8. 'neighbor' → logprob: -9.128665924072266
    9. '  ' → logprob: -9.753665924072266
    10. '[' → logprob: -10.003665924072266

Token 83: ' ensure' (ID: 6757)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.002109932480379939
    2. '   ' → logprob: -6.627110004425049
    3. ' neighbor' → logprob: -7.752110004425049
    4. 'ensure' (adapté à ' ensure') → logprob: -8.50210952758789
    5. 'd' → logprob: -8.87710952758789
    6. 'neighbors' → logprob: -13.00210952758789
    7. ' ' → logprob: -13.50210952758789
    8. '```' → logprob: -13.62710952758789
    9. '`' → logprob: -13.87710952758789
    10. 'ne' → logprob: -14.00210952758789

Token 84: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -5.512236498361744e-07
    2. 'Key' → logprob: -15.250000953674316
    3. '```' → logprob: -16.5
    4. '_code' → logprob: -17.0
    5. 'key' → logprob: -17.5
    6. '_KEY' → logprob: -17.75
    7. ')_' → logprob: -17.875
    8. '(Key' → logprob: -18.0
    9. '(_' → logprob: -18.375
    10. '_Key' → logprob: -18.5

Token 85: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.002205451251938939
    2. '(' → logprob: -6.1272053718566895
    3. 'neighbor' → logprob: -11.377205848693848
    4. ' (' → logprob: -12.502205848693848
    5. '(n' → logprob: -12.877205848693848
    6. ' neighbor' → logprob: -13.252205848693848
    7. '(
' → logprob: -15.502205848693848
    8. '_neighbor' → logprob: -15.752205848693848
    9. '(friend' → logprob: -15.877205848693848
    10. '(peer' → logprob: -16.75220489501953

Token 86: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.0009868424385786057
    2. 'gh' → logprob: -7.6259870529174805
    3. 'neighbor' → logprob: -8.00098705291748
    4. 'bor' → logprob: -9.25098705291748
    5. 'or' → logprob: -10.00098705291748
    6. 'g' → logprob: -12.25098705291748
    7. 'igh' → logprob: -12.50098705291748
    8. 's' → logprob: -12.50098705291748
    9. 'v' → logprob: -12.87598705291748
    10. 'ighbors' → logprob: -13.75098705291748

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ',v' → logprob: -12.125009536743164
    3. ' ,' → logprob: -12.625009536743164
    4. '[v' → logprob: -15.750009536743164
    5. 'v' → logprob: -16.000009536743164
    6. ',
' → logprob: -16.375009536743164
    7. '[' → logprob: -16.500009536743164
    8. ',u' → logprob: -17.000009536743164
    9. 's' → logprob: -17.625009536743164
    10. '[u' → logprob: -18.000009536743164

Token 88: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0024768433067947626
    2. ' v' → logprob: -6.002476692199707
    3. ')v' → logprob: -14.752476692199707
    4. '(v' → logprob: -15.752476692199707
    5. 'u' → logprob: -16.002477645874023
    6. '	v' → logprob: -16.002477645874023
    7. '   ' → logprob: -16.127477645874023
    8. ')' → logprob: -16.377477645874023
    9. '<|end|>' → logprob: -17.252477645874023
    10. ' ' → logprob: -17.502477645874023

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004699853248894215
    2. ')
' → logprob: -5.37969970703125
    3. ' )' → logprob: -10.25469970703125
    4. '   ' → logprob: -10.50469970703125
    5. ')
' → logprob: -11.25469970703125
    6. ' )
' → logprob: -13.00469970703125
    7. ')

' → logprob: -14.00469970703125
    8. ' ' → logprob: -15.50469970703125
    9. ')`' → logprob: -15.75469970703125
    10. ')v' → logprob: -16.25469970703125

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010783569887280464
    2. ' neighbor' → logprob: -5.135783672332764
    3. 'neighbor' → logprob: -5.510783672332764
    4. '    
' → logprob: -7.760783672332764
    5. '<|end|>' → logprob: -9.385783195495605
    6. '
' → logprob: -9.635783195495605
    7. '```' → logprob: -9.760783195495605
    8. '    ' → logprob: -10.260783195495605
    9. ' 
' → logprob: -10.885783195495605
    10. '[' → logprob: -11.010783195495605

Token 91: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.8123573660850525
    2. 'neighbor' (adapté à ' neighbor') → logprob: -1.0623574256896973
    3. '   ' → logprob: -1.5623574256896973
    4. '    
' → logprob: -8.312356948852539
    5. ' 
' → logprob: -8.312356948852539
    6. '
' → logprob: -9.312356948852539
    7. '_neighbor' → logprob: -9.687356948852539
    8. '    ' → logprob: -10.437356948852539
    9. '```' → logprob: -10.812356948852539
    10. ' neighbour' → logprob: -10.937356948852539

Token 92: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. 'u' → logprob: -16.750003814697266
    4. '```' → logprob: -17.125003814697266
    5. '\[' → logprob: -17.500003814697266
    6. '[v' → logprob: -18.250003814697266
    7. ' ' → logprob: -19.000003814697266
    8. '(u' → logprob: -19.250003814697266
    9. '   ' → logprob: -19.375003814697266
    10. '[user' → logprob: -19.500003814697266

Token 93: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4407375156879425
    2. '].' → logprob: -1.5657374858856201
    3. ').' → logprob: -1.9407374858856201
    4. '}.' → logprob: -6.065737724304199
    5. '.' → logprob: -6.690737724304199
    6. 'append' → logprob: -8.1907377243042
    7. '>.' → logprob: -10.9407377243042
    8. '.add' → logprob: -11.5657377243042
    9. ')' → logprob: -11.8157377243042
    10. '.extend' → logprob: -12.3157377243042

Token 94: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -15.625000953674316
    4. 'app' → logprob: -17.25
    5. 'appen' → logprob: -18.75
    6. 'Append' → logprob: -19.5
    7. 'extend' → logprob: -19.625
    8. '	append' → logprob: -19.625
    9. '_append' → logprob: -20.125
    10. 'add' → logprob: -20.875

Token 95: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015056940028443933
    2. '(' → logprob: -6.5015058517456055
    3. '(v' → logprob: -12.626505851745605
    4. '([' → logprob: -17.25150489807129
    5. ' ((' → logprob: -19.75150489807129
    6. '(
' → logprob: -19.87650489807129
    7. '(('' → logprob: -20.25150489807129
    8. '(((' → logprob: -20.50150489807129
    9. ' (' → logprob: -21.50150489807129
    10. '()' → logprob: -21.75150489807129

Token 96: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0076203495264053345
    2. ' v' → logprob: -4.882620334625244
    3. '   ' → logprob: -11.507620811462402
    4. '(v' → logprob: -13.507620811462402
    5. ' ' → logprob: -13.757620811462402
    6. '	v' → logprob: -14.507620811462402
    7. '  ' → logprob: -15.007620811462402
    8. ')v' → logprob: -15.132620811462402
    9. ' (' → logprob: -15.757620811462402
    10. '    ' → logprob: -15.757620811462402

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012558852904476225
    2. ',w' → logprob: -9.625125885009766
    3. ' ,' → logprob: -9.750125885009766
    4. 'w' → logprob: -14.875125885009766
    5. '‌,' → logprob: -15.250125885009766
    6. ',
' → logprob: -15.625125885009766
    7. ')' → logprob: -15.750125885009766
    8. '<|end|>' → logprob: -15.875125885009766
    9. ' ' → logprob: -17.000125885009766
    10. ',)' → logprob: -17.625125885009766

Token 98: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.22581064701080322
    2. 'w' → logprob: -1.6008106470108032
    3. ' ' → logprob: -8.100811004638672
    4. ' ' → logprob: -9.850811004638672
    5. ')' → logprob: -10.975811004638672
    6. ' 
' → logprob: -11.975811004638672
    7. ' )' → logprob: -12.350811004638672
    8. ''' → logprob: -12.850811004638672
    9. '"' → logprob: -13.350811004638672
    10. '1' → logprob: -13.850811004638672

Token 99: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5760365128517151
    2. ')' → logprob: -0.8260365128517151
    3. '))
' → logprob: -9.82603645324707
    4. ' )' → logprob: -10.95103645324707
    5. ')
' → logprob: -11.20103645324707
    6. ' ))' → logprob: -11.95103645324707
    7. ')))' → logprob: -13.45103645324707
    8. '),' → logprob: -13.95103645324707
    9. ',' → logprob: -14.20103645324707
    10. '));' → logprob: -14.70103645324707

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5282571911811829
    2. 'neighbor' → logprob: -0.9032571911811829
    3. ' neighbor' → logprob: -5.278257369995117
    4. 'neighbors' → logprob: -12.403257369995117
    5. '<|end|>' → logprob: -12.778257369995117
    6. '  ' → logprob: -12.778257369995117
    7. ' ' → logprob: -13.278257369995117
    8. '_neighbor' → logprob: -13.278257369995117
    9. '\n' → logprob: -13.403257369995117
    10. '    
' → logprob: -14.028257369995117

Token 101: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' (adapté à ' neighbor') → logprob: -0.0009682760573923588
    2. ' neighbor' → logprob: -7.0009684562683105
    3. '   ' → logprob: -10.000967979431152
    4. '<|end|>' → logprob: -12.000967979431152
    5. ')' → logprob: -12.625967979431152
    6. 'neighbors' → logprob: -14.250967979431152
    7. '_neighbor' → logprob: -15.125967979431152
    8. '\n' → logprob: -16.00096893310547
    9. 'n' → logprob: -16.25096893310547
    10. 'ighbor' → logprob: -16.37596893310547

Token 102: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0015490218065679073
    2. '[u' → logprob: -6.501549243927002
    3. '[' → logprob: -10.001548767089844
    4. 'v' → logprob: -13.626548767089844
    5. '[s' → logprob: -16.751548767089844
    6. '[val' → logprob: -17.751548767089844
    7. '[V' → logprob: -18.001548767089844
    8. '[w' → logprob: -18.251548767089844
    9. '[z' → logprob: -18.251548767089844
    10. ' [' → logprob: -18.251548767089844

Token 103: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0007455448503606021
    2. '.append' → logprob: -7.37574577331543
    3. '].' → logprob: -9.62574577331543
    4. '.' → logprob: -10.37574577331543
    5. ')' → logprob: -11.00074577331543
    6. ' ).' → logprob: -13.12574577331543
    7. '   ' → logprob: -14.00074577331543
    8. ',' → logprob: -14.75074577331543
    9. '`).' → logprob: -15.00074577331543
    10. '}.' → logprob: -15.12574577331543

Token 104: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.127333340875339e-06
    2. '.append' → logprob: -13.250003814697266
    3. ' append' → logprob: -13.250003814697266
    4. 'appen' → logprob: -15.250003814697266
    5. '	append' → logprob: -15.375003814697266
    6. 'app' → logprob: -17.625003814697266
    7. 'add' → logprob: -18.250003814697266
    8. 'prepend' → logprob: -18.250003814697266
    9. 'Append' → logprob: -19.000003814697266
    10. ' ' → logprob: -19.125003814697266

Token 105: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.375006675720215
    3. ' ((' → logprob: -14.000006675720215
    4. '(u' → logprob: -14.000006675720215
    5. ' (' → logprob: -14.750006675720215
    6. '(
' → logprob: -16.5000057220459
    7. ' ' → logprob: -16.8750057220459
    8. '<|end|>' → logprob: -17.2500057220459
    9. '(v' → logprob: -18.6250057220459
    10. '__((' → logprob: -18.7500057220459

Token 106: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.16517379879951477
    2. 'u' → logprob: -1.9151737689971924
    3. ' (' → logprob: -5.4151740074157715
    4. ' u' → logprob: -7.9151740074157715
    5. '(' → logprob: -9.415173530578613
    6. ',' → logprob: -10.915173530578613
    7. ',u' → logprob: -12.040173530578613
    8. '   ' → logprob: -12.290173530578613
    9. ')' → logprob: -12.290173530578613
    10. ' ' → logprob: -12.790173530578613

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ' ,' → logprob: -10.500055313110352
    3. ',w' → logprob: -10.500055313110352
    4. 'w' → logprob: -15.750055313110352
    5. ',
' → logprob: -16.25005531311035
    6. ')' → logprob: -17.12505531311035
    7. '‌,' → logprob: -17.25005531311035
    8. '),' → logprob: -17.25005531311035
    9. ' ' → logprob: -17.37505531311035
    10. ',

' → logprob: -17.75005531311035

Token 108: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.061969030648469925
    2. ' w' → logprob: -2.811969041824341
    3. ' ' → logprob: -14.436968803405762
    4. ')' → logprob: -15.311968803405762
    5. ' ' → logprob: -15.311968803405762
    6. ',' → logprob: -15.561968803405762
    7. '0' → logprob: -16.811969757080078
    8. '   ' → logprob: -17.186969757080078
    9. ''w' → logprob: -17.436969757080078
    10. '1' → logprob: -17.811969757080078

Token 109: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0032548350282013416
    2. ')' → logprob: -5.7532548904418945
    3. '))
' → logprob: -9.503254890441895
    4. ')
' → logprob: -13.378254890441895
    5. ')))' → logprob: -14.503254890441895
    6. '   ' → logprob: -16.003253936767578
    7. '))

' → logprob: -16.128253936767578
    8. ' ))' → logprob: -16.503253936767578
    9. '),' → logprob: -17.128253936767578
    10. '))
' → logprob: -17.628253936767578

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.7385154428193346e-05
    2. 'n' → logprob: -11.12503719329834
    3. '<|end|>' → logprob: -11.50003719329834
    4. 'ndef' → logprob: -12.25003719329834
    5. 'from' → logprob: -13.37503719329834
    6. '
' → logprob: -13.62503719329834
    7. '```' → logprob: -13.87503719329834
    8. '#' → logprob: -14.00003719329834
    9. 'N' → logprob: -14.25003719329834
    10. '<|end|>' → logprob: -14.62503719329834

Token 111: ' build' (ID: 3024)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07545103132724762
    2. ' d' → logprob: -3.450451135635376
    3. ' solve' → logprob: -3.575451135635376
    4. ' bfs' → logprob: -5.825450897216797
    5. ' shortest' → logprob: -6.200450897216797
    6. ' dfs' → logprob: -6.325450897216797
    7. 'main' → logprob: -6.325450897216797
    8. ' find' → logprob: -6.825450897216797
    9. ' build' → logprob: -7.075450897216797
    10. 'd' → logprob: -7.575450897216797

Token 112: '_neighbors' (ID: 142549)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.1278592199087143
    2. '_neighbor' → logprob: -2.502859115600586
    3. '_neighbors' → logprob: -4.377859115600586
    4. '_' → logprob: -4.627859115600586
    5. '_tree' → logprob: -5.502859115600586
    6. '(' → logprob: -5.627859115600586
    7. '_ne' → logprob: -6.127859115600586
    8. '_(' → logprob: -6.127859115600586
    9. '(ne' → logprob: -6.127859115600586
    10. '(_' → logprob: -8.252859115600586

Token 113: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3318915069103241
    2. '(n' → logprob: -1.3318915367126465
    3. '(ne' → logprob: -4.4568915367126465
    4. '(' → logprob: -5.4568915367126465
    5. '():
' → logprob: -6.4568915367126465
    6. ' ():' → logprob: -7.9568915367126465
    7. '(edge' → logprob: -9.081891059875488
    8. ' (' → logprob: -9.331891059875488
    9. '(edges' → logprob: -9.456891059875488
    10. '()' → logprob: -9.456891059875488

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.526708722114563
    2. ',' → logprob: -0.901708722114563
    3. '):
' → logprob: -6.401708602905273
    4. ')' → logprob: -6.526708602905273
    5. ' ):' → logprob: -8.401708602905273
    6. ',n' → logprob: -9.276708602905273
    7. ' ,' → logprob: -10.026708602905273
    8. '  ' → logprob: -10.651708602905273
    9. '   ' → logprob: -10.776708602905273
    10. ' ' → logprob: -11.776708602905273

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020341570489108562
    2. 'neighbor' → logprob: -6.5020341873168945
    3. ' neighbor' → logprob: -7.8770341873168945
    4. '   ' → logprob: -9.002034187316895
    5. 'neighbors' → logprob: -11.127034187316895
    6. '```' → logprob: -12.627034187316895
    7. ' neighbors' → logprob: -13.002034187316895
    8. ' ' → logprob: -13.377034187316895
    9. '    
' → logprob: -13.502034187316895
    10. '  ' → logprob: -13.627034187316895

Token 116: ' from' (ID: 591)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.12285560369491577
    2. ' neighbor' → logprob: -2.7478556632995605
    3. 'from' (adapté à ' from') → logprob: -3.6228556632995605
    4. '   ' → logprob: -3.7478556632995605
    5. ' from' → logprob: -6.8728556632995605
    6. 'neighbors' → logprob: -9.497855186462402
    7. '
' → logprob: -10.372855186462402
    8. '```' → logprob: -10.372855186462402
    9. 'n' → logprob: -10.872855186462402
    10. ' ' → logprob: -11.247855186462402

Token 117: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.06196846812963486
    2. 'collections' → logprob: -2.8119685649871826
    3. '.collections' → logprob: -14.936968803405762
    4. ' collection' → logprob: -15.311968803405762
    5. ' ' → logprob: -16.186967849731445
    6. '_col' → logprob: -16.311967849731445
    7. '_collection' → logprob: -16.936967849731445
    8. '_' → logprob: -17.436967849731445
    9. 'collection' → logprob: -17.561967849731445
    10. 'collect' → logprob: -18.436967849731445

Token 118: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.13262806832790375
    2. 'collections' → logprob: -2.2576279640197754
    3. 'ctions' → logprob: -4.757627964019775
    4. 'ections' → logprob: -5.507627964019775
    5. ' import' → logprob: -6.132627964019775
    6. 'lections' → logprob: -6.632627964019775
    7. '.collections' → logprob: -7.007627964019775
    8. 'ptions' → logprob: -7.632627964019775
    9. 'from' → logprob: -8.132628440856934
    10. 'port' → logprob: -8.632628440856934

Token 119: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.3191535770893097
    2. ' defaultdict' → logprob: -1.6941535472869873
    3. 'deque' → logprob: -2.4441535472869873
    4. ' deque' → logprob: -6.069153785705566
    5. ' default' → logprob: -8.069153785705566
    6. 'de' → logprob: -10.819153785705566
    7. 'def' → logprob: -11.319153785705566
    8. '"default' → logprob: -11.819153785705566
    9. '.default' → logprob: -12.819153785705566
    10. ''default' → logprob: -12.819153785705566

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3745603859424591
    2. '   ' → logprob: -1.2495603561401367
    3. '    
' → logprob: -4.124560356140137
    4. 'neighbor' → logprob: -5.624560356140137
    5. ' neighbor' → logprob: -6.624560356140137
    6. 'neighbors' → logprob: -6.874560356140137
    7. ' neighbors' → logprob: -7.249560356140137
    8. ',' → logprob: -7.499560356140137
    9. '	
' → logprob: -7.624560356140137
    10. ' 
' → logprob: -7.624560356140137

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024983607232570648
    2. 'neighbor' → logprob: -4.3999834060668945
    3. ' neighbor' → logprob: -4.3999834060668945
    4. '
' → logprob: -10.024983406066895
    5. 'neighbors' → logprob: -10.774983406066895
    6. ' neighbors' → logprob: -10.899983406066895
    7. ' ' → logprob: -11.899983406066895
    8. '    
' → logprob: -12.274983406066895
    9. 'n' → logprob: -12.274983406066895
    10. 'def' → logprob: -12.649983406066895

Token 122: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' (adapté à ' neighbor') → logprob: -0.4485068917274475
    2. '   ' → logprob: -1.1985068321228027
    3. ' neighbor' → logprob: -2.8235068321228027
    4. 'neighbors' → logprob: -8.948507308959961
    5. '
' → logprob: -9.073507308959961
    6. ' ' → logprob: -10.573507308959961
    7. '    
' → logprob: -10.573507308959961
    8. 'return' → logprob: -11.073507308959961
    9. ' neighbors' → logprob: -11.448507308959961
    10. '  ' → logprob: -11.448507308959961

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17544150352478027
    2. '=' → logprob: -2.1754415035247803
    3. 's' → logprob: -3.0504415035247803
    4. ',' → logprob: -11.17544174194336
    5. ' ' → logprob: -14.05044174194336
    6. '   ' → logprob: -14.55044174194336
    7. '=[]' → logprob: -14.80044174194336
    8. ' s' → logprob: -15.17544174194336
    9. ':' → logprob: -15.42544174194336
    10. ')' → logprob: -16.05044174194336

Token 124: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.030010340735316277
    2. ' {}' → logprob: -3.530010223388672
    3. 'dict' → logprob: -8.655010223388672
    4. ' dict' → logprob: -9.405010223388672
    5. ' defaultdict' → logprob: -13.780010223388672
    6. '{' → logprob: -13.905010223388672
    7. 'default' → logprob: -13.905010223388672
    8. '{}
' → logprob: -15.780010223388672
    9. '={}' → logprob: -15.780010223388672
    10. '{})' → logprob: -16.905010223388672

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005295069422572851
    2. 'for' → logprob: -6.255295276641846
    3. ' for' → logprob: -6.380295276641846
    4. '
' → logprob: -7.005295276641846
    5. '<|end|>' → logprob: -7.505295276641846
    6. '    
' → logprob: -8.880294799804688
    7. '	for' → logprob: -10.630294799804688
    8. '<|end|>' → logprob: -11.130294799804688
    9. 'return' → logprob: -11.880294799804688
    10. 'n' → logprob: -12.380294799804688

Token 126: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.043078898685053e-05
    2. ' for' → logprob: -9.500090599060059
    3. '   ' → logprob: -11.125090599060059
    4. 'return' → logprob: -14.375090599060059
    5. '	for' → logprob: -16.250089645385742
    6. 'i' → logprob: -17.500089645385742
    7. '
' → logprob: -18.000089645385742
    8. '```' → logprob: -19.375089645385742
    9. '    
' → logprob: -19.875089645385742
    10. ' ' → logprob: -20.375089645385742

Token 127: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.26667463779449463
    2. ' i' → logprob: -1.7666746377944946
    3. '_' → logprob: -2.766674518585205
    4. 'i' → logprob: -8.766674995422363
    5. ' u' → logprob: -9.266674995422363
    6. '_i' → logprob: -10.016674995422363
    7. ' ' → logprob: -12.641674995422363
    8. ' node' → logprob: -12.766674995422363
    9. ' range' → logprob: -13.516674995422363
    10. 'u' → logprob: -14.016674995422363

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10041467100381851
    2. 'in' → logprob: -2.350414752960205
    3. 'range' → logprob: -8.975414276123047
    4. ' ' → logprob: -9.725414276123047
    5. 'n' → logprob: -11.350414276123047
    6. 'i' → logprob: -12.975414276123047
    7. 'import' → logprob: -13.100414276123047
    8. '```' → logprob: -13.600414276123047
    9. ' range' → logprob: -13.975414276123047
    10. '  ' → logprob: -13.975414276123047

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008222569595091045
    2. ' range' → logprob: -7.125822067260742
    3. 'ange' → logprob: -11.000822067260742
    4. '(range' → logprob: -14.125822067260742
    5. '	range' → logprob: -16.500822067260742
    6. 'n' → logprob: -16.750822067260742
    7. ' ' → logprob: -16.875822067260742
    8. '   ' → logprob: -17.250822067260742
    9. '```' → logprob: -17.250822067260742
    10. ')' → logprob: -17.250822067260742

Token 130: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.3915141355246305e-05
    2. '(' → logprob: -11.12502384185791
    3. ' (' → logprob: -12.12502384185791
    4. ' n' → logprob: -12.62502384185791
    5. 'n' → logprob: -14.75002384185791
    6. '(range' → logprob: -19.000024795532227
    7. ' ' → logprob: -19.750024795532227
    8. '_n' → logprob: -20.500024795532227
    9. '(_' → logprob: -21.000024795532227
    10. '(
' → logprob: -21.000024795532227

Token 131: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01700967736542225
    2. ' ):' → logprob: -4.517009735107422
    3. '):
' → logprob: -5.142009735107422
    4. ')' → logprob: -10.267009735107422
    5. ' ):
' → logprob: -10.767009735107422
    6. ':' → logprob: -11.017009735107422
    7. '():' → logprob: -11.392009735107422
    8. ' )' → logprob: -13.017009735107422
    9. '   ' → logprob: -13.267009735107422
    10. '):
' → logprob: -13.267009735107422

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28118517994880676
    2. ' ' → logprob: -1.4061851501464844
    3. '<|end|>' → logprob: -10.406185150146484
    4. '  ' → logprob: -13.656185150146484
    5. '   ' → logprob: -13.906185150146484
    6. 'def' → logprob: -14.593685150146484
    7. '<|end|>' → logprob: -14.781185150146484
    8. ')' → logprob: -15.031185150146484
    9. '+' → logprob: -15.281185150146484
    10. '0' → logprob: -15.656185150146484

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026205103495158255
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.750262260437012
    4. ')' → logprob: -15.625262260437012
    5. '  ' → logprob: -16.625261306762695
    6. '```' → logprob: -17.062761306762695
    7. '0' → logprob: -17.125261306762695
    8. 'def' → logprob: -17.562761306762695
    9. '    ' → logprob: -17.937761306762695
    10. '１' → logprob: -18.562761306762695

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.052267204970121384
    2. '):
' → logprob: -3.17726731300354
    3. ')' → logprob: -4.802267074584961
    4. ':' → logprob: -7.302267074584961
    5. ' ):' → logprob: -8.302267074584961
    6. '   ' → logprob: -10.552267074584961
    7. ' )' → logprob: -10.677267074584961
    8. ' ):
' → logprob: -11.302267074584961
    9. '):
' → logprob: -11.427267074584961
    10. ',' → logprob: -12.427267074584961

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03531081974506378
    2. ' u' → logprob: -3.535310745239258
    3. 'u' → logprob: -5.285310745239258
    4. '   ' → logprob: -8.410310745239258
    5. ',' → logprob: -9.535310745239258
    6. '<|end|>' → logprob: -10.160310745239258
    7. '	u' → logprob: -10.410310745239258
    8. ',u' → logprob: -10.410310745239258
    9. 'edge' → logprob: -11.535310745239258
    10. '(u' → logprob: -11.535310745239258

Token 136: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.038675565272569656
    2. ' u' → logprob: -3.288675546646118
    3. '   ' → logprob: -8.038675308227539
    4. '       ' → logprob: -8.163675308227539
    5. '	u' → logprob: -10.788675308227539
    6. 'e' → logprob: -13.288675308227539
    7. ' ' → logprob: -13.538675308227539
    8. '(u' → logprob: -14.538675308227539
    9. '  ' → logprob: -15.038675308227539
    10. '    ' → logprob: -15.163675308227539

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004497381451074034
    2. ',v' → logprob: -7.7504496574401855
    3. ' ,' → logprob: -11.125450134277344
    4. '=' → logprob: -13.250450134277344
    5. 'v' → logprob: -13.375450134277344
    6. ' v' → logprob: -14.500450134277344
    7. ',u' → logprob: -15.500450134277344
    8. 'u' → logprob: -15.875450134277344
    9. '<|end|>' → logprob: -16.500450134277344
    10. ' =' → logprob: -17.000450134277344

Token 138: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.06204196438193321
    2. 'v' → logprob: -2.812041997909546
    3. '<|end|>' → logprob: -10.062042236328125
    4. ',v' → logprob: -11.562042236328125
    5. ',' → logprob: -11.687042236328125
    6. ' ' → logprob: -11.937042236328125
    7. ' ' → logprob: -13.312042236328125
    8. 'w' → logprob: -13.812042236328125
    9. ' w' → logprob: -14.312042236328125
    10. ' ,' → logprob: -14.437042236328125

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.073596548754722e-05
    2. ',w' → logprob: -10.50005054473877
    3. ' ,' → logprob: -10.87505054473877
    4. 'w' → logprob: -12.50005054473877
    5. ' w' → logprob: -16.000051498413086
    6. '=' → logprob: -16.125051498413086
    7. '<|end|>' → logprob: -16.375051498413086
    8. '_,' → logprob: -17.000051498413086
    9. '‌,' → logprob: -17.250051498413086
    10. ',v' → logprob: -18.125051498413086

Token 140: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.4740793704986572
    2. 'w' → logprob: -0.9740793704986572
    3. '<|end|>' → logprob: -13.599079132080078
    4. ' ' → logprob: -14.349079132080078
    5. ' ' → logprob: -15.224079132080078
    6. '	w' → logprob: -17.099079132080078
    7. '_w' → logprob: -17.099079132080078
    8. '  ' → logprob: -17.474079132080078
    9. 'read' → logprob: -17.724079132080078
    10. '    ' → logprob: -17.724079132080078

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132626414299011
    2. '=' → logprob: -1.313262701034546
    3. ')' → logprob: -14.438262939453125
    4. ',' → logprob: -16.313262939453125
    5. '=input' → logprob: -16.813262939453125
    6. ' ' → logprob: -17.188262939453125
    7. '<|end|>' → logprob: -17.188262939453125
    8. ')=' → logprob: -17.313262939453125
    9. ' =)' → logprob: -17.313262939453125
    10. '   ' → logprob: -18.063262939453125

Token 142: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.004079708829522133
    2. 'read' → logprob: -5.504079818725586
    3. ' map' → logprob: -13.879079818725586
    4. '	read' → logprob: -15.129079818725586
    5. ' ' → logprob: -17.629079818725586
    6. 'map' → logprob: -18.254079818725586
    7. '_read' → logprob: -18.504079818725586
    8. '(read' → logprob: -19.004079818725586
    9. '.read' → logprob: -19.629079818725586
    10. '<|end|>' → logprob: -19.879079818725586

Token 143: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.12500286102295
    3. 'edge' → logprob: -14.87500286102295
    4. '_edges' → logprob: -15.12500286102295
    5. '_line' → logprob: -15.75000286102295
    6. '_ed' → logprob: -16.250003814697266
    7. '_EDGE' → logprob: -17.250003814697266
    8. '_code' → logprob: -17.875003814697266
    9. '"_' → logprob: -17.875003814697266
    10. '_e' → logprob: -17.875003814697266

Token 144: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4001515209674835
    2. '       ' → logprob: -1.1501514911651611
    3. '()' → logprob: -5.52515172958374
    4. ')add' → logprob: -5.52515172958374
    5. '<|end|>' → logprob: -6.15015172958374
    6. '   ' → logprob: -6.65015172958374
    7. ',' → logprob: -6.90015172958374
    8. ')
' → logprob: -8.650151252746582
    9. 'add' → logprob: -9.150151252746582
    10. '(add' → logprob: -9.150151252746582

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14567217230796814
    2. '   ' → logprob: -2.020672082901001
    3. ' add' → logprob: -6.39567232131958
    4. 'add' → logprob: -6.64567232131958
    5. '	add' → logprob: -12.145671844482422
    6. '        
' → logprob: -12.770671844482422
    7. '
' → logprob: -12.770671844482422
    8. '           ' → logprob: -12.895671844482422
    9. ')add' → logprob: -13.020671844482422
    10. '(add' → logprob: -13.645671844482422

Token 146: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.6736405491828918
    2. ' add' → logprob: -0.7986405491828918
    3. '       ' → logprob: -3.298640489578247
    4. '   ' → logprob: -5.798640727996826
    5. '
' → logprob: -9.048640251159668
    6. '	add' → logprob: -10.048640251159668
    7. '.add' → logprob: -10.173640251159668
    8. ' ' → logprob: -11.673640251159668
    9. '(add' → logprob: -11.673640251159668
    10. '_add' → logprob: -11.798640251159668

Token 147: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.664371848164592e-05
    2. '_' → logprob: -11.250016212463379
    3. '_neighbor' → logprob: -13.375016212463379
    4. '_edges' → logprob: -13.750016212463379
    5. '_ed' → logprob: -14.750016212463379
    6. '(_' → logprob: -15.625016212463379
    7. ' _' → logprob: -16.875017166137695
    8. '_e' → logprob: -17.250017166137695
    9. '(edge' → logprob: -17.500017166137695
    10. '```' → logprob: -17.500017166137695

Token 148: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.04859168455004692
    2. '(' → logprob: -3.0485916137695312
    3. '(
' → logprob: -12.798591613769531
    4. '(n' → logprob: -14.548591613769531
    5. 'neighbor' → logprob: -14.798591613769531
    6. '(

' → logprob: -15.298591613769531
    7. ' (' → logprob: -16.04859161376953
    8. '(paren' → logprob: -16.17359161376953
    9. ' neighbor' → logprob: -16.79859161376953
    10. '(news' → logprob: -16.92359161376953

Token 149: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.00011713240382960066
    2. 'gh' → logprob: -9.375117301940918
    3. 'ighbors' → logprob: -11.125117301940918
    4. 'igh' → logprob: -12.000117301940918
    5. 'bor' → logprob: -12.625117301940918
    6. 'ighborhood' → logprob: -12.750117301940918
    7. 'ibor' → logprob: -13.125117301940918
    8. 'ig' → logprob: -13.875117301940918
    9. 'ight' → logprob: -14.750117301940918
    10. 'neighbor' → logprob: -15.125117301940918

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017362393555231392
    2. ' ,' → logprob: -8.750173568725586
    3. '(ne' → logprob: -11.375173568725586
    4. '(' → logprob: -13.500173568725586
    5. ',
' → logprob: -14.000173568725586
    6. ')' → logprob: -14.625173568725586
    7. 'neighbor' → logprob: -14.875173568725586
    8. ',n' → logprob: -15.000173568725586
    9. ',

' → logprob: -15.875173568725586
    10. '(n' → logprob: -17.625173568725586

Token 151: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029753033071756363
    2. ' u' → logprob: -3.5297529697418213
    3. '	u' → logprob: -13.654752731323242
    4. '<|end|>' → logprob: -13.904752731323242
    5. ' ' → logprob: -16.529752731323242
    6. '
' → logprob: -16.904752731323242
    7. ''u' → logprob: -17.404752731323242
    8. ')' → logprob: -17.779752731323242
    9. '*u' → logprob: -17.904752731323242
    10. '   ' → logprob: -18.029752731323242

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006888442439958453
    2. ' ,' → logprob: -7.3756890296936035
    3. ',v' → logprob: -9.750688552856445
    4. 'v' → logprob: -13.125688552856445
    5. '<|end|>' → logprob: -14.500688552856445
    6. ')' → logprob: -15.125688552856445
    7. ' v' → logprob: -15.250688552856445
    8. '',' → logprob: -15.625688552856445
    9. '‌,' → logprob: -15.625688552856445
    10. ' ' → logprob: -15.875688552856445

Token 153: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.038047339767217636
    2. ' v' → logprob: -3.2880473136901855
    3. 'w' → logprob: -12.663047790527344
    4. '<|end|>' → logprob: -13.538047790527344
    5. ')v' → logprob: -14.913047790527344
    6. ' ' → logprob: -15.038047790527344
    7. ' w' → logprob: -15.413047790527344
    8. '	v' → logprob: -15.788047790527344
    9. '
' → logprob: -16.038047790527344
    10. ')' → logprob: -16.163047790527344

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -12.250007629394531
    3. ',w' → logprob: -13.250007629394531
    4. 'w' → logprob: -14.125007629394531
    5. ')' → logprob: -14.500007629394531
    6. '   ' → logprob: -16.62500762939453
    7. '',' → logprob: -16.75000762939453
    8. '),' → logprob: -17.12500762939453
    9. '```' → logprob: -17.50000762939453
    10. ',
' → logprob: -17.50000762939453

Token 155: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2520444393157959
    2. 'w' → logprob: -1.502044439315796
    3. ')' → logprob: -9.627044677734375
    4. ' )' → logprob: -10.877044677734375
    5. ' ' → logprob: -11.252044677734375
    6. ' ' → logprob: -11.377044677734375
    7. ' 
' → logprob: -13.002044677734375
    8. '    ' → logprob: -14.377044677734375
    9. ',' → logprob: -14.752044677734375
    10. '1' → logprob: -15.439544677734375

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.56102097814437e-05
    2. ')
' → logprob: -10.000045776367188
    3. ' )' → logprob: -16.000045776367188
    4. ')

' → logprob: -17.000045776367188
    5. ')return' → logprob: -17.125045776367188
    6. '   ' → logprob: -17.500045776367188
    7. ')
' → logprob: -18.500045776367188
    8. ')`' → logprob: -18.875045776367188
    9. '))' → logprob: -19.000045776367188
    10. '),' → logprob: -20.750045776367188

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001402621390298009
    2. 'return' → logprob: -7.126402854919434
    3. ' return' → logprob: -7.501402854919434
    4. '
' → logprob: -10.126402854919434
    5. '	return' → logprob: -13.251402854919434
    6. '    
' → logprob: -13.751402854919434
    7. '   ' → logprob: -14.126402854919434
    8. '       ' → logprob: -14.501402854919434
    9. ' ' → logprob: -15.126402854919434
    10. ':return' → logprob: -15.126402854919434

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11303749680519104
    2. '   ' → logprob: -2.363037586212158
    3. ' return' → logprob: -4.363037586212158
    4. ' ' → logprob: -12.363037109375
    5. '	return' → logprob: -13.738037109375
    6. '    
' → logprob: -14.238037109375
    7. ':return' → logprob: -14.363037109375
    8. '
' → logprob: -14.738037109375
    9. '       ' → logprob: -14.863037109375
    10. 'eturn' → logprob: -14.988037109375

Token 159: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.47408533096313477
    2. ' neighbor' → logprob: -0.9740853309631348
    3. 'ne' → logprob: -11.974084854125977
    4. ' neighbour' → logprob: -14.099084854125977
    5. 'neighbors' → logprob: -14.974084854125977
    6. 'Neighbor' → logprob: -15.599084854125977
    7. '_neighbor' → logprob: -15.724084854125977
    8. 'n' → logprob: -15.974084854125977
    9. ' ' → logprob: -16.099084854125977
    10. '   ' → logprob: -16.349084854125977

Token 160: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49071744084358215
    2. '<|end|>' → logprob: -1.6157174110412598
    3. 'def' → logprob: -1.7407174110412598
    4. '

' → logprob: -5.11571741104126
    5. '<|end|>' → logprob: -5.49071741104126
    6. '#' → logprob: -7.24071741104126
    7. '\n' → logprob: -7.36571741104126
    8. '```' → logprob: -7.36571741104126
    9. '[' → logprob: -7.99071741104126
    10. 'newline' → logprob: -8.490717887878418

Token 161: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002666999935172498
    2. 'n' → logprob: -9.125267028808594
    3. 'from' → logprob: -10.000267028808594
    4. 'neighbor' → logprob: -10.125267028808594
    5. 'if' → logprob: -10.500267028808594
    6. '#' → logprob: -11.000267028808594
    7. 'import' → logprob: -11.625267028808594
    8. 'neighbors' → logprob: -12.250267028808594
    9. 'ndef' → logprob: -12.625267028808594
    10. 'class' → logprob: -13.375267028808594

Token 162: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0080312490463257
    2. 'd' → logprob: -1.8830312490463257
    3. ' d' → logprob: -1.8830312490463257
    4. 'main' → logprob: -1.8830312490463257
    5. ' dfs' → logprob: -3.0080313682556152
    6. ' solve' → logprob: -3.2580313682556152
    7. 'dfs' → logprob: -3.7580313682556152
    8. ' bfs' → logprob: -3.7580313682556152
    9. 'solve' → logprob: -4.383031368255615
    10. 'diam' → logprob: -4.883031368255615

Token 163: '_color' (ID: 15576)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5976951122283936
    2. '_distance' → logprob: -1.0976951122283936
    3. '_' → logprob: -2.5976951122283936
    4. '_tree' → logprob: -4.472695350646973
    5. '_d' → logprob: -5.347695350646973
    6. '_state' → logprob: -5.847695350646973
    7. 'ialize' → logprob: -5.847695350646973
    8. '_queue' → logprob: -6.097695350646973
    9. '_nodes' → logprob: -6.222695350646973
    10. '_parent' → logprob: -6.597695350646973

Token 164: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.010685206390917301
    2. '()' → logprob: -5.010685443878174
    3. 's' → logprob: -5.635685443878174
    4. '():
' → logprob: -8.635684967041016
    5. ' ():' → logprob: -9.385684967041016
    6. '(' → logprob: -9.635684967041016
    7. '(n' → logprob: -10.885684967041016
    8. '_' → logprob: -11.510684967041016
    9. '():

' → logprob: -11.760684967041016
    10. '_map' → logprob: -12.135684967041016

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04338131099939346
    2. 'return' → logprob: -3.4183812141418457
    3. ' return' → logprob: -4.668381214141846
    4. 'def' → logprob: -9.793381690979004
    5. 'from' → logprob: -9.918381690979004
    6. '()' → logprob: -10.418381690979004
    7. ' ' → logprob: -10.668381690979004
    8. 'n' → logprob: -10.793381690979004
    9. 'color' → logprob: -10.918381690979004
    10. 'import' → logprob: -11.043381690979004

Token 166: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31307849287986755
    2. ' return' → logprob: -1.56307852268219
    3. '   ' → logprob: -3.0630784034729004
    4. 'from' → logprob: -4.8130784034729
    5. '{}' → logprob: -6.5630784034729
    6. ' from' → logprob: -7.0630784034729
    7. 'color' → logprob: -7.1880784034729
    8. 'import' → logprob: -7.5630784034729
    9. ' ' → logprob: -8.813078880310059
    10. '{' → logprob: -9.063078880310059

Token 167: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.015971258282661438
    2. '[]' → logprob: -4.3909711837768555
    3. '0' → logprob: -6.6409711837768555
    4. '[' → logprob: -7.1409711837768555
    5. 'default' → logprob: -7.7659711837768555
    6. 'dict' → logprob: -8.140971183776855
    7. '{' → logprob: -8.265971183776855
    8. ' {}' → logprob: -8.265971183776855
    9. '[-' → logprob: -10.640971183776855
    10. ' []' → logprob: -10.640971183776855

Token 168: '1' (ID: 16)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.021830273792147636
    2. '1' → logprob: -4.646830081939697
    3. '0' → logprob: -5.271830081939697
    4. 'k' → logprob: -5.771830081939697
    5. 'i' → logprob: -6.771830081939697
    6. '}
' → logprob: -6.896830081939697
    7. '}}' → logprob: -8.021830558776855
    8. '}

' → logprob: -8.271830558776855
    9. '}_' → logprob: -8.771830558776855
    10. 'u' → logprob: -8.896830558776855

Token 169: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9743012671824545e-05
    2. ' :' → logprob: -11.250020027160645
    3. ':-' → logprob: -13.000020027160645
    4. '0' → logprob: -13.625020027160645
    5. '   ' → logprob: -14.000020027160645
    6. '}' → logprob: -14.500020027160645
    7. '1' → logprob: -15.375020027160645
    8. ':'#' → logprob: -15.750020027160645
    9. '  ' → logprob: -16.000019073486328
    10. '2' → logprob: -16.250019073486328

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.049861107021570206
    2. '1' → logprob: -3.549861192703247
    3. ''' → logprob: -4.924860954284668
    4. '"' → logprob: -5.549860954284668
    5. '-' → logprob: -5.549860954284668
    6. ' ' → logprob: -5.674860954284668
    7. 'True' → logprob: -7.549860954284668
    8. 'False' → logprob: -7.924860954284668
    9. '(' → logprob: -8.799860954284668
    10. ' '' → logprob: -9.299860954284668

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10728561133146286
    2. '1' → logprob: -2.857285499572754
    3. '-' → logprob: -4.232285499572754
    4. ''' → logprob: -4.482285499572754
    5. 'True' → logprob: -4.982285499572754
    6. '"' → logprob: -5.232285499572754
    7. 'False' → logprob: -5.857285499572754
    8. ' ' → logprob: -5.982285499572754
    9. '(' → logprob: -8.857285499572754
    10. '[' → logprob: -9.232285499572754

Token 172: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.018240666016936302
    2. ',' → logprob: -4.018240451812744
    3. ' }' → logprob: -9.393240928649902
    4. '}
' → logprob: -12.643240928649902
    5. ',
' → logprob: -13.268240928649902
    6. '}

' → logprob: -14.643240928649902
    7. '
' → logprob: -15.018240928649902
    8. ')' → logprob: -15.018240928649902
    9. '   ' → logprob: -15.018240928649902
    10. ' ,' → logprob: -15.143240928649902

Token 173: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11406663060188293
    2. '<|end|>' → logprob: -2.2390666007995605
    3. '<|end|>' → logprob: -6.8640666007995605
    4. '
' → logprob: -9.614067077636719
    5. '```' → logprob: -10.614067077636719
    6. '#' → logprob: -11.114067077636719
    7. ')' → logprob: -11.239067077636719
    8. ' def' → logprob: -11.364067077636719
    9. '\' → logprob: -11.614067077636719
    10. 'de' → logprob: -11.864067077636719

Token 174: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.416719913482666
    2. 'read' → logprob: -2.041719913482666
    3. 'def' → logprob: -2.291719913482666
    4. ' bfs' → logprob: -2.541719913482666
    5. ' init' → logprob: -2.666719913482666
    6. 'b' → logprob: -2.791719913482666
    7. 'dfs' → logprob: -2.791719913482666
    8. 'color' → logprob: -2.916719913482666
    9. 'main' → logprob: -3.291719913482666
    10. ' dfs' → logprob: -3.291719913482666

Token 175: '_' (ID: 62)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.388290524482727
    2. '_dist' → logprob: -1.513290524482727
    3. '_distance' → logprob: -1.638290524482727
    4. '_' → logprob: -2.3882904052734375
    5. '_parent' → logprob: -2.6382904052734375
    6. '_color' → logprob: -2.6382904052734375
    7. '_stack' → logprob: -2.8882904052734375
    8. '_par' → logprob: -5.0132904052734375
    9. '_depth' → logprob: -5.3882904052734375
    10. '_d' → logprob: -5.5132904052734375

Token 176: 'visited' (ID: 52453)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -1.4002246856689453
    2. 'queue' → logprob: -1.6502246856689453
    3. 'color' → logprob: -1.9002246856689453
    4. 'stack' → logprob: -2.0252246856689453
    5. 'dist' → logprob: -2.1502246856689453
    6. 'visited' → logprob: -2.9002246856689453
    7. 'distance' → logprob: -3.4002246856689453
    8. 'neighbors' → logprob: -4.150224685668945
    9. 'colors' → logprob: -4.275224685668945
    10. 'parent' → logprob: -4.650224685668945

Token 177: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.398067828034982e-05
    2. '():
' → logprob: -9.75007438659668
    3. ' ():' → logprob: -11.25007438659668
    4. '()' → logprob: -13.00007438659668
    5. '():

' → logprob: -16.00007438659668
    6. '():
' → logprob: -16.12507438659668
    7. 'def' → logprob: -16.50007438659668
    8. ':' → logprob: -17.62507438659668
    9. '(' → logprob: -17.62507438659668
    10. ' ()' → logprob: -18.25007438659668

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25175198912620544
    2. '{}' → logprob: -2.1267518997192383
    3. '()' → logprob: -3.0017518997192383
    4. 'return' → logprob: -3.3767518997192383
    5. ' return' → logprob: -5.501751899719238
    6. 'set' → logprob: -5.751751899719238
    7. '[]' → logprob: -5.751751899719238
    8. '()
' → logprob: -6.001751899719238
    9. '{return' → logprob: -6.001751899719238
    10. '{}
' → logprob: -7.001751899719238

Token 179: ' return' (ID: 622)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.13718575239181519
    2. 'set' → logprob: -2.13718581199646
    3. '{' → logprob: -5.137185573577881
    4. 'return' (adapté à ' return') → logprob: -5.762185573577881
    5. ' set' → logprob: -7.262185573577881
    6. '{return' → logprob: -8.637186050415039
    7. '   ' → logprob: -8.762186050415039
    8. ' {}' → logprob: -9.512186050415039
    9. '[]' → logprob: -10.137186050415039
    10. ' return' → logprob: -10.887186050415039

Token 180: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.20726600289344788
    2. '{}' → logprob: -1.7072659730911255
    3. '{' → logprob: -5.207265853881836
    4. ' set' → logprob: -7.957265853881836
    5. '[]' → logprob: -12.332265853881836
    6. ' {}' → logprob: -12.957265853881836
    7. 'dict' → logprob: -14.332265853881836
    8. '(set' → logprob: -14.707265853881836
    9. '{})' → logprob: -15.332265853881836
    10. '=set' → logprob: -15.332265853881836

Token 181: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1517960956552997e-05
    2. '(' → logprob: -11.875011444091797
    3. '()

' → logprob: -13.875011444091797
    4. '()]' → logprob: -14.125011444091797
    5. ' ()' → logprob: -14.625011444091797
    6. '()}' → logprob: -14.875011444091797
    7. '()
' → logprob: -14.875011444091797
    8. '()<' → logprob: -15.000011444091797
    9. '()`' → logprob: -15.500011444091797
    10. '().' → logprob: -15.625011444091797

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.464347173576243e-05
    2. ' ' → logprob: -10.37503433227539
    3. ')' → logprob: -13.87503433227539
    4. '   ' → logprob: -14.00003433227539
    5. '0' → logprob: -14.62503433227539
    6. '(' → logprob: -14.62503433227539
    7. '  ' → logprob: -15.87503433227539
    8. ']' → logprob: -15.87503433227539
    9. '
' → logprob: -16.00003433227539
    10. '])' → logprob: -16.25003433227539

Token 183: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -3.6550729419104755e-05
    2. ')' → logprob: -10.500036239624023
    3. ')])' → logprob: -12.250036239624023
    4. ' ])' → logprob: -13.000036239624023
    5. '])
' → logprob: -14.750036239624023
    6. ']))' → logprob: -14.875036239624023
    7. '()' → logprob: -15.375036239624023
    8. '])]' → logprob: -15.500036239624023
    9. ']])' → logprob: -15.625036239624023
    10. '))' → logprob: -15.625036239624023

Token 184: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000586991140153259
    2. '<|end|>' → logprob: -7.500586986541748
    3. '<|end|>' → logprob: -11.000587463378906
    4. '
' → logprob: -12.000587463378906
    5. ')' → logprob: -12.375587463378906
    6. '```' → logprob: -13.250587463378906
    7. 'ndef' → logprob: -13.375587463378906
    8. ' def' → logprob: -14.375587463378906
    9. 'deque' → logprob: -14.500587463378906
    10. 'from' → logprob: -14.625587463378906

Token 185: ' init' (ID: 6327)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.6485466361045837
    2. ' dfs' → logprob: -1.2735466957092285
    3. 'dfs' → logprob: -2.5235466957092285
    4. 'def' → logprob: -3.2735466957092285
    5. 'b' → logprob: -3.3985466957092285
    6. ' def' → logprob: -4.3985466957092285
    7. ' main' → logprob: -4.5235466957092285
    8. ' init' → logprob: -5.5235466957092285
    9. ' color' → logprob: -5.5235466957092285
    10. 'color' → logprob: -5.8985466957092285

Token 186: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.34868142008781433
    2. '_stack' → logprob: -1.4736814498901367
    3. '_color' → logprob: -3.7236814498901367
    4. '_parent' → logprob: -4.348681449890137
    5. '_distance' → logprob: -4.723681449890137
    6. '_' → logprob: -5.723681449890137
    7. '()' → logprob: -5.723681449890137
    8. '_depth' → logprob: -6.098681449890137
    9. 'def' → logprob: -6.473681449890137
    10. '_dist' → logprob: -6.598681449890137

Token 187: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07293691486120224
    2. '():
' → logprob: -2.69793701171875
    3. ' ():' → logprob: -5.94793701171875
    4. '()' → logprob: -8.32293701171875
    5. ' ()' → logprob: -9.19793701171875
    6. '():
' → logprob: -10.57293701171875
    7. '():

' → logprob: -11.32293701171875
    8. '   ' → logprob: -13.44793701171875
    9. ' (' → logprob: -14.32293701171875
    10. '(' → logprob: -15.07293701171875

Token 188: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.029058167710900307
    2. '   ' → logprob: -3.9040582180023193
    3. ' from' → logprob: -5.40405797958374
    4. 'import' → logprob: -6.40405797958374
    5. 'return' → logprob: -6.90405797958374
    6. '[]' → logprob: -7.15405797958374
    7. '[' → logprob: -8.279058456420898
    8. 'deque' → logprob: -8.779058456420898
    9. ' return' → logprob: -9.779058456420898
    10. '[from' → logprob: -10.904058456420898

Token 189: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.23635369539260864
    2. '[' → logprob: -2.111353635787964
    3. ' from' → logprob: -3.236353635787964
    4. ' [' → logprob: -3.236353635787964
    5. 'import' → logprob: -4.736353874206543
    6. '   ' → logprob: -7.486353874206543
    7. 'deque' → logprob: -7.486353874206543
    8. '[]' → logprob: -8.111353874206543
    9. '[from' → logprob: -8.236353874206543
    10. ' import' → logprob: -9.236353874206543

Token 190: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.47407814860343933
    2. 'collections' → logprob: -0.9740781784057617
    3. 'queue' → logprob: -14.474078178405762
    4. ' queue' → logprob: -15.099078178405762
    5. '```' → logprob: -16.349077224731445
    6. '.collections' → logprob: -16.474077224731445
    7. 'collection' → logprob: -16.474077224731445
    8. ' ' → logprob: -16.724077224731445
    9. '_' → logprob: -17.099077224731445
    10. 'collect' → logprob: -17.349077224731445

Token 191: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011711018159985542
    2. ' import' → logprob: -4.636711120605469
    3. 'collections' → logprob: -7.386711120605469
    4. '   ' → logprob: -8.011711120605469
    5. '.collections' → logprob: -8.386711120605469
    6. '	import' → logprob: -8.511711120605469
    7. '_import' → logprob: -8.761711120605469
    8. '.import' → logprob: -8.886711120605469
    9. ' ' → logprob: -9.761711120605469
    10. 'imports' → logprob: -9.761711120605469

Token 192: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.003179259831085801
    2. ' deque' → logprob: -5.75317907333374
    3. 'de' → logprob: -13.378179550170898
    4. 'Deque' → logprob: -18.6281795501709
    5. 'queue' → logprob: -19.5031795501709
    6. 'collections' → logprob: -19.8781795501709
    7. '	de' → logprob: -20.2531795501709
    8. ' ' → logprob: -20.5031795501709
    9. '   ' → logprob: -20.6281795501709
    10. '```' → logprob: -20.6281795501709

Token 193: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6834278106689453
    2. '
' → logprob: -1.1834278106689453
    3. '()' → logprob: -2.3084278106689453
    4. 'return' → logprob: -3.1834278106689453
    5. '   ' → logprob: -3.3084278106689453
    6. ' return' → logprob: -4.683427810668945
    7. '	return' → logprob: -6.808427810668945
    8. '    
' → logprob: -7.683427810668945
    9. '(' → logprob: -8.683427810668945
    10. '()\' → logprob: -9.183427810668945

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16635370254516602
    2. '
' → logprob: -2.041353702545166
    3. 'return' → logprob: -4.166353702545166
    4. ' return' → logprob: -5.291353702545166
    5. '	return' → logprob: -6.416353702545166
    6. '    
' → logprob: -6.916353702545166
    7. '	
' → logprob: -9.416353225708008
    8. '
' → logprob: -10.041353225708008
    9. ' 
' → logprob: -10.416353225708008
    10. '()
' → logprob: -10.791353225708008

Token 195: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2750590443611145
    2. '   ' → logprob: -1.9000589847564697
    3. 'return' (adapté à ' return') → logprob: -2.4000589847564697
    4. '	return' → logprob: -8.77505874633789
    5. ' deque' → logprob: -10.90005874633789
    6. 'deque' → logprob: -11.52505874633789
    7. '
' → logprob: -12.52505874633789
    8. '   ' → logprob: -13.02505874633789
    9. '    
' → logprob: -13.15005874633789
    10. ' queue' → logprob: -13.27505874633789

Token 196: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5759477615356445
    2. 'deque' → logprob: -0.8259477615356445
    3. 'de' → logprob: -12.075947761535645
    4. 'Deque' → logprob: -13.825947761535645
    5. ' collections' → logprob: -14.700947761535645
    6. '	de' → logprob: -14.950947761535645
    7. 'collections' → logprob: -15.200947761535645
    8. '(de' → logprob: -15.325947761535645
    9. ' de' → logprob: -15.575947761535645
    10. ' dequeue' → logprob: -15.825947761535645

Token 197: '([(' (ID: 156282)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001562715508043766
    2. '(' → logprob: -6.626562595367432
    3. '([' → logprob: -9.12656307220459
    4. '([]' → logprob: -9.12656307220459
    5. '()(' → logprob: -12.50156307220459
    6. '([(' → logprob: -12.50156307220459
    7. ' ()' → logprob: -13.12656307220459
    8. '()]' → logprob: -13.25156307220459
    9. '()`' → logprob: -13.37656307220459
    10. '()
' → logprob: -13.87656307220459

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.625024795532227
    3. '(' → logprob: -14.625024795532227
    4. '   ' → logprob: -15.000024795532227
    5. ')' → logprob: -18.125024795532227
    6. '  ' → logprob: -18.250024795532227
    7. '```' → logprob: -18.375024795532227
    8. ',' → logprob: -18.750024795532227
    9. ' (' → logprob: -18.875024795532227
    10. '0' → logprob: -19.312524795532227

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014418430509977043
    2. ')])' → logprob: -9.125144004821777
    3. ' ,' → logprob: -10.750144004821777
    4. ')' → logprob: -11.500144004821777
    5. ')]' → logprob: -13.125144004821777
    6. '0' → logprob: -15.000144004821777
    7. ' )' → logprob: -15.250144004821777
    8. ' ' → logprob: -15.375144004821777
    9. '```' → logprob: -15.875144004821777
    10. ',)' → logprob: -15.875144004821777

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014183958061039448
    2. ' ' → logprob: -4.26418399810791
    3. ' -' → logprob: -12.51418399810791
    4. '-' → logprob: -12.63918399810791
    5. '   ' → logprob: -12.76418399810791
    6. ',' → logprob: -13.01418399810791
    7. 'None' → logprob: -13.13918399810791
    8. '  ' → logprob: -13.63918399810791
    9. ')' → logprob: -13.70168399810791
    10. '1' → logprob: -13.88918399810791

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005191935342736542
    2. ' ' → logprob: -8.125518798828125
    3. '-' → logprob: -8.500518798828125
    4. 'None' → logprob: -11.750518798828125
    5. ' -' → logprob: -12.500518798828125
    6. '1' → logprob: -12.625518798828125
    7. ')' → logprob: -13.500518798828125
    8. '(' → logprob: -14.500518798828125
    9. 'False' → logprob: -14.500518798828125
    10. ',' → logprob: -14.813018798828125

Token 202: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.00026300468016415834
    2. ')' → logprob: -8.625263214111328
    3. ')]' → logprob: -10.375263214111328
    4. ')])
' → logprob: -10.375263214111328
    5. ')])

' → logprob: -11.375263214111328
    6. ',' → logprob: -12.250263214111328
    7. ' )' → logprob: -12.625263214111328
    8. '),' → logprob: -14.500263214111328
    9. ')],' → logprob: -15.125263214111328
    10. '))' → logprob: -15.750263214111328

Token 203: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008753741858527064
    2. '<|end|>' → logprob: -7.125875473022461
    3. ')' → logprob: -10.125875473022461
    4. '<|end|>' → logprob: -11.625875473022461
    5. '
' → logprob: -12.500875473022461
    6. '#' → logprob: -12.625875473022461
    7. '```' → logprob: -12.875875473022461
    8. 'ndef' → logprob: -13.000875473022461
    9. ' def' → logprob: -13.250875473022461
    10. '\' → logprob: -13.625875473022461

Token 204: ' visit' (ID: 4030)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2122143805027008
    2. ' bfs' → logprob: -1.9622143507003784
    3. 'dfs' → logprob: -4.462214469909668
    4. 'solve' → logprob: -4.587214469909668
    5. 'main' → logprob: -4.962214469909668
    6. 'color' → logprob: -5.212214469909668
    7. 'def' → logprob: -5.337214469909668
    8. 'process' → logprob: -5.712214469909668
    9. 'd' → logprob: -6.087214469909668
    10. ' solve' → logprob: -7.212214469909668

Token 205: '_node' (ID: 11390)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.1251508742570877
    2. '(' → logprob: -2.6251509189605713
    3. '(queue' → logprob: -4.125150680541992
    4. '_' → logprob: -4.750150680541992
    5. '_node' → logprob: -4.875150680541992
    6. '(_' → logprob: -5.875150680541992
    7. '_queue' → logprob: -6.250150680541992
    8. '_(' → logprob: -6.250150680541992
    9. '_nodes' → logprob: -6.875150680541992
    10. '(u' → logprob: -7.375150680541992

Token 206: '(queue' (ID: 72316)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.5451869964599609
    2. '(' → logprob: -1.295186996459961
    3. '(ne' → logprob: -2.170186996459961
    4. '(queue' → logprob: -3.670186996459961
    5. '(parent' → logprob: -5.420186996459961
    6. ' (' → logprob: -6.545186996459961
    7. '(n' → logprob: -8.420186996459961
    8. '(u' → logprob: -8.670186996459961
    9. '(current' → logprob: -8.795186996459961
    10. '(graph' → logprob: -9.795186996459961

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.042620234191417694
    2. ')' → logprob: -3.4176201820373535
    3. ',' → logprob: -5.1676201820373535
    4. '):
' → logprob: -5.7926201820373535
    5. ' ):' → logprob: -8.917620658874512
    6. '):

' → logprob: -11.167620658874512
    7. '):
' → logprob: -11.417620658874512
    8. ' )' → logprob: -12.042620658874512
    9. ')):' → logprob: -12.292620658874512
    10. '[' → logprob: -12.917620658874512

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001421664608642459
    2. ' node' → logprob: -7.2514214515686035
    3. ' from' → logprob: -7.8764214515686035
    4. 'from' → logprob: -9.626421928405762
    5. ' queue' → logprob: -9.751421928405762
    6. ' if' → logprob: -9.876421928405762
    7. 'node' → logprob: -10.251421928405762
    8. ',' → logprob: -10.376421928405762
    9. '   ' → logprob: -11.501421928405762
    10. '```' → logprob: -11.501421928405762

Token 209: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8831279873847961
    2. ' return' → logprob: -1.6331279277801514
    3. ' node' → logprob: -1.6331279277801514
    4. ' queue' → logprob: -2.0081279277801514
    5. ' from' → logprob: -3.5081279277801514
    6. 'node' → logprob: -4.3831281661987305
    7. 'from' → logprob: -5.0081281661987305
    8. 'queue' → logprob: -5.3831281661987305
    9. 'return' (adapté à ' return') → logprob: -5.5081281661987305
    10. ' if' → logprob: -6.1331281661987305

Token 210: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5759469270706177
    2. ' queue' → logprob: -0.8259469270706177
    3. '(queue' → logprob: -12.825946807861328
    4. '.queue' → logprob: -12.950946807861328
    5. '	queue' → logprob: -13.575946807861328
    6. ' None' → logprob: -15.450946807861328
    7. '_queue' → logprob: -15.450946807861328
    8. 'None' → logprob: -15.825946807861328
    9. 'space' → logprob: -15.825946807861328
    10. ' ' → logprob: -15.825946807861328

Token 211: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0007954508764669299
    2. '.' → logprob: -7.375795364379883
    3. '.pop' → logprob: -8.750795364379883
    4. '.get' → logprob: -12.875795364379883
    5. '[' → logprob: -13.000795364379883
    6. '.dequeue' → logprob: -13.500795364379883
    7. ' .' → logprob: -13.875795364379883
    8. '.append' → logprob: -13.875795364379883
    9. '.poll' → logprob: -14.500795364379883
    10. 'p' → logprob: -14.750795364379883

Token 212: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009380202973261476
    2. 'left' → logprob: -7.0009379386901855
    3. '(' → logprob: -11.375938415527344
    4. '_left' → logprob: -12.375938415527344
    5. 'Left' → logprob: -12.625938415527344
    6. 'lef' → logprob: -13.125938415527344
    7. 'le' → logprob: -13.625938415527344
    8. '()
' → logprob: -14.125938415527344
    9. 'opleft' → logprob: -14.125938415527344
    10. '()(' → logprob: -14.250938415527344

Token 213: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5010756850242615
    2. 'process' → logprob: -2.2510757446289062
    3. 'enqueue' → logprob: -2.5010757446289062
    4. 'add' → logprob: -2.8760757446289062
    5. 'init' → logprob: -3.5010757446289062
    6. 'b' → logprob: -4.001075744628906
    7. 'main' → logprob: -4.001075744628906
    8. 'push' → logprob: -4.126075744628906
    9. 'visit' → logprob: -4.376075744628906
    10. 'pop' → logprob: -5.126075744628906

Token 215: '_neighbors' (ID: 142549)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.5572888851165771
    2. '_queue' → logprob: -0.9322888851165771
    3. '_' → logprob: -4.307289123535156
    4. '(queue' → logprob: -5.432289123535156
    5. '_nodes' → logprob: -5.432289123535156
    6. '_neighbors' → logprob: -5.432289123535156
    7. '_color' → logprob: -5.682289123535156
    8. '(' → logprob: -7.057289123535156
    9. '_neighbor' → logprob: -8.057289123535156
    10. '_edge' → logprob: -8.182289123535156

Token 216: '(v' (ID: 6932)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.26703184843063354
    2. '(' → logprob: -1.7670319080352783
    3. '(ne' → logprob: -2.7670319080352783
    4. '(node' → logprob: -7.767031669616699
    5. ' (' → logprob: -9.2670316696167
    6. '(parent' → logprob: -9.8920316696167
    7. '(line' → logprob: -11.2670316696167
    8. '(
' → logprob: -11.5170316696167
    9. '(q' → logprob: -11.5170316696167
    10. '(n' → logprob: -11.8920316696167

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001445353147573769
    2. '):' → logprob: -7.376445293426514
    3. '):
' → logprob: -7.376445293426514
    4. ')' → logprob: -9.501445770263672
    5. ',
' → logprob: -10.876445770263672
    6. ' ,' → logprob: -11.126445770263672
    7. 'e' → logprob: -11.251445770263672
    8. 'ector' → logprob: -11.626445770263672
    9. 'u' → logprob: -11.751445770263672
    10. 'er' → logprob: -12.251445770263672

Token 218: ' w' (ID: 286)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.14491736888885498
    2. ' neighbor' → logprob: -2.0199174880981445
    3. 'neighbors' → logprob: -7.0199174880981445
    4. ' neighbors' → logprob: -8.144917488098145
    5. 'weight' → logprob: -8.644917488098145
    6. 'queue' → logprob: -8.644917488098145
    7. 'w' → logprob: -8.644917488098145
    8. 'color' → logprob: -9.144917488098145
    9. ' w' → logprob: -9.894917488098145
    10. ' weight' → logprob: -10.144917488098145

Token 219: 'sum' (ID: 12298)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003519086167216301
    2. '):
' → logprob: -8.375351905822754
    3. ' ,' → logprob: -10.000351905822754
    4. '):' → logprob: -10.625351905822754
    5. ',
' → logprob: -11.500351905822754
    6. 'neighbor' → logprob: -11.625351905822754
    7. 't' → logprob: -12.000351905822754
    8. '   ' → logprob: -13.000351905822754
    9. 'neighbors' → logprob: -13.125351905822754
    10. '_,' → logprob: -13.125351905822754

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003967071825172752
    2. '):
' → logprob: -8.125396728515625
    3. '):' → logprob: -10.000396728515625
    4. ' ,' → logprob: -10.750396728515625
    5. 't' → logprob: -11.875396728515625
    6. ',
' → logprob: -12.375396728515625
    7. 's' → logprob: -12.500396728515625
    8. 'neighbor' → logprob: -12.625396728515625
    9. '_,' → logprob: -12.875396728515625
    10. 'r' → logprob: -13.625396728515625

Token 221: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.03493928536772728
    2. ' neighbor' → logprob: -3.4099392890930176
    3. 'neighbors' → logprob: -6.909939289093018
    4. 'queue' → logprob: -9.03493881225586
    5. ' neighbors' → logprob: -9.90993881225586
    6. 'color' → logprob: -10.28493881225586
    7. '   ' → logprob: -10.78493881225586
    8. 'visited' → logprob: -11.40993881225586
    9. 'ne' → logprob: -11.65993881225586
    10. ',' → logprob: -12.03493881225586

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052660178393125534
    2. '):' → logprob: -3.0526602268218994
    3. '):
' → logprob: -5.55265998840332
    4. ')' → logprob: -9.30265998840332
    5. ' ,' → logprob: -10.42765998840332
    6. '):

' → logprob: -11.05265998840332
    7. 's' → logprob: -11.30265998840332
    8. ' ):' → logprob: -11.55265998840332
    9. '):
' → logprob: -12.05265998840332
    10. ',
' → logprob: -12.55265998840332

Token 223: ' visited' (ID: 18416)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.740711510181427
    2. 'visited' → logprob: -0.740711510181427
    3. 'queue' → logprob: -3.8657114505767822
    4. ' color' → logprob: -4.240711688995361
    5. ' visited' → logprob: -4.615711688995361
    6. 'colors' → logprob: -8.115711212158203
    7. ' queue' → logprob: -8.240711212158203
    8. 'visit' → logprob: -8.990711212158203
    9. 'colored' → logprob: -9.740711212158203
    10. 'v' → logprob: -9.865711212158203

Token 224: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08333735913038254
    2. '):
' → logprob: -2.9583373069763184
    3. ',' → logprob: -3.5833373069763184
    4. ')' → logprob: -8.708337783813477
    5. '):
' → logprob: -9.708337783813477
    6. '):

' → logprob: -10.833337783813477
    7. ' ):' → logprob: -11.208337783813477
    8. '   ' → logprob: -12.458337783813477
    9. ':' → logprob: -13.833337783813477
    10. ' ' → logprob: -14.083337783813477

Token 225: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.08304424583911896
    2. ' color' → logprob: -2.5830442905426025
    3. 'colors' → logprob: -6.083044052124023
    4. 'queue' → logprob: -6.958044052124023
    5. ' colors' → logprob: -7.833044052124023
    6. 'colored' → logprob: -9.833044052124023
    7. 'neighbor' → logprob: -9.833044052124023
    8. 'distance' → logprob: -9.958044052124023
    9. ' queue' → logprob: -10.520544052124023
    10. 'col' → logprob: -10.645544052124023

Token 226: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5254877209663391
    2. '):' → logprob: -0.9004877209663391
    3. ',' → logprob: -7.025487899780273
    4. 's' → logprob: -7.025487899780273
    5. '):

' → logprob: -8.150487899780273
    6. ')' → logprob: -8.900487899780273
    7. '):
' → logprob: -9.025487899780273
    8. 'ed' → logprob: -11.525487899780273
    9. ' ):' → logprob: -11.650487899780273
    10. 'd' → logprob: -12.650487899780273

Token 227: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.029915714636445045
    2. ' queue' → logprob: -3.5299158096313477
    3. ')' → logprob: -9.154915809631348
    4. 'que' → logprob: -11.279915809631348
    5. '   ' → logprob: -12.154915809631348
    6. '
' → logprob: -12.279915809631348
    7. '):
' → logprob: -12.404915809631348
    8. '	queue' → logprob: -12.404915809631348
    9. ' )' → logprob: -12.529915809631348
    10. ' ' → logprob: -13.029915809631348

Token 228: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16038314998149872
    2. '):
' → logprob: -1.9103831052780151
    3. ',' → logprob: -9.535383224487305
    4. '   ' → logprob: -10.035383224487305
    5. '):
' → logprob: -10.410383224487305
    6. ')' → logprob: -11.785383224487305
    7. ':' → logprob: -12.910383224487305
    8. ' ):' → logprob: -13.660383224487305
    9. '):

' → logprob: -14.535383224487305
    10. ' ' → logprob: -14.910383224487305

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001120572560466826
    2. 'for' → logprob: -7.376120567321777
    3. ' for' → logprob: -7.626120567321777
    4. '    
' → logprob: -13.001120567321777
    5. '	for' → logprob: -13.251120567321777
    6. '   ' → logprob: -13.626120567321777
    7. 'def' → logprob: -15.126120567321777
    8. ',' → logprob: -15.376120567321777
    9. '
' → logprob: -15.501120567321777
    10. '```' → logprob: -16.376121520996094

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00846647284924984
    2. '   ' → logprob: -5.6334662437438965
    3. 'if' → logprob: -6.2584662437438965
    4. 'from' → logprob: -6.5084662437438965
    5. ' for' → logprob: -6.6334662437438965
    6. 'import' → logprob: -10.883466720581055
    7. 'color' → logprob: -11.133466720581055
    8. 'new' → logprob: -11.258466720581055
    9. 'changed' → logprob: -11.258466720581055
    10. 'while' → logprob: -11.508466720581055

Token 231: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5344899296760559
    2. 'nv' → logprob: -2.159489870071411
    3. '(u' → logprob: -2.409489870071411
    4. 'to' → logprob: -2.909489870071411
    5. ' nxt' → logprob: -3.784489870071411
    6. '(v' → logprob: -4.15949010848999
    7. 'n' → logprob: -4.28449010848999
    8. 'x' → logprob: -4.40949010848999
    9. ' u' → logprob: -4.40949010848999
    10. '(n' → logprob: -4.40949010848999

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037132782745175064
    2. ' ,' → logprob: -8.875370979309082
    3. ' in' → logprob: -9.250370979309082
    4. ',w' → logprob: -9.375370979309082
    5. ',v' → logprob: -10.375370979309082
    6. 'in' → logprob: -12.500370979309082
    7. ',u' → logprob: -12.625370979309082
    8. ',n' → logprob: -13.500370979309082
    9. '<|end|>' → logprob: -13.750370979309082
    10. '‌,' → logprob: -13.875370979309082

Token 233: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3289417326450348
    2. ' w' → logprob: -1.3289417028427124
    3. 'neighbor' → logprob: -5.203941822052002
    4. 'weight' → logprob: -5.578941822052002
    5. ' weight' → logprob: -6.328941822052002
    6. ' neighbor' → logprob: -6.703941822052002
    7. 'neighbors' → logprob: -7.328941822052002
    8. '_w' → logprob: -8.203941345214844
    9. 'ws' → logprob: -8.203941345214844
    10. ' neighbors' → logprob: -8.328941345214844

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020594676956534386
    2. 'in' → logprob: -3.895594596862793
    3. ' ' → logprob: -10.520594596862793
    4. 's' → logprob: -11.895594596862793
    5. '   ' → logprob: -12.145594596862793
    6. 'w' → logprob: -13.020594596862793
    7. '
' → logprob: -13.020594596862793
    8. ',' → logprob: -13.145594596862793
    9. '  ' → logprob: -13.270594596862793
    10. '	in' → logprob: -13.520594596862793

Token 235: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.08896248042583466
    2. ' neighbor' → logprob: -2.4639625549316406
    3. ' ' → logprob: -11.83896255493164
    4. '   ' → logprob: -12.33896255493164
    5. '
' → logprob: -12.96396255493164
    6. 'ne' → logprob: -13.08896255493164
    7. '  ' → logprob: -13.33896255493164
    8. '    ' → logprob: -13.71396255493164
    9. 'neighbors' → logprob: -14.08896255493164
    10. '_neighbor' → logprob: -14.46396255493164

Token 236: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002502535644453019
    2. '.get' → logprob: -8.500249862670898
    3. '[' → logprob: -10.000249862670898
    4. '[get' → logprob: -15.250249862670898
    5. '[u' → logprob: -15.500249862670898
    6. '[w' → logprob: -15.500249862670898
    7. ' [' → logprob: -15.625249862670898
    8. 'v' → logprob: -15.750249862670898
    9. '.setdefault' → logprob: -16.1252498626709
    10. '.' → logprob: -16.8752498626709

Token 237: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00614848081022501
    2. ']:
' → logprob: -5.131148338317871
    3. ']' → logprob: -8.631148338317871
    4. ']:

' → logprob: -10.881148338317871
    5. ']:
' → logprob: -11.381148338317871
    6. ':' → logprob: -13.006148338317871
    7. ' ]' → logprob: -13.256148338317871
    8. '):' → logprob: -13.756148338317871
    9. '}:' → logprob: -13.756148338317871
    10. '']:' → logprob: -13.881148338317871

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006004538154229522
    2. '<|end|>' → logprob: -8.500600814819336
    3. ' if' → logprob: -8.875600814819336
    4. '   ' → logprob: -8.875600814819336
    5. ',' → logprob: -10.500600814819336
    6. '        
' → logprob: -10.750600814819336
    7. '
' → logprob: -11.500600814819336
    8. 'if' → logprob: -11.500600814819336
    9. '<|end|>' → logprob: -11.875600814819336
    10. ' ' → logprob: -12.125600814819336

Token 239: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23335058987140656
    2. ' if' → logprob: -1.6083506345748901
    3. 'if' (adapté à ' if') → logprob: -4.85835075378418
    4. '   ' → logprob: -9.98335075378418
    5. '<|end|>' → logprob: -10.35835075378418
    6. '           ' → logprob: -11.10835075378418
    7. ' ' → logprob: -11.35835075378418
    8. '	if' → logprob: -12.10835075378418
    9. ' ' → logprob: -12.23335075378418
    10. ',' → logprob: -12.60835075378418

Token 240: ' skip' (ID: 16677)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.05526069179177284
    2. 'u' → logprob: -2.93026065826416
    3. '(u' → logprob: -9.30526065826416
    4. ' not' → logprob: -9.68026065826416
    5. ' ' → logprob: -9.80526065826416
    6. ' w' → logprob: -10.30526065826416
    7. '	u' → logprob: -10.43026065826416
    8. ' (' → logprob: -10.55526065826416
    9. 'not' → logprob: -10.55526065826416
    10. '   ' → logprob: -11.43026065826416

Token 241: '_' (ID: 62)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.45695629715919495
    2. 'u' → logprob: -1.3319562673568726
    3. '(u' → logprob: -2.331956386566162
    4. '[u' → logprob: -6.081956386566162
    5. ' (' → logprob: -6.456956386566162
    6. 'ing' → logprob: -8.206955909729004
    7. 'not' → logprob: -8.331955909729004
    8. 'ed' → logprob: -8.706955909729004
    9. '_u' → logprob: -8.831955909729004
    10. 'w' → logprob: -8.831955909729004

Token 242: 'visited' (ID: 52453)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6957247853279114
    2. '(u' → logprob: -1.1957247257232666
    3. ' u' → logprob: -2.4457247257232666
    4. '[u' → logprob: -2.5707247257232666
    5. 'visited' → logprob: -3.5707247257232666
    6. 'ing' → logprob: -6.570724964141846
    7. 'ping' → logprob: -6.945724964141846
    8. 'if' → logprob: -7.070724964141846
    9. 'ed' → logprob: -7.195724964141846
    10. ' if' → logprob: -7.570724964141846

Token 243: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.004882670007646084
    2. '[u' → logprob: -5.8798828125
    3. '(' → logprob: -7.2548828125
    4. ' (' → logprob: -7.5048828125
    5. 'u' → logprob: -8.2548828125
    6. '((' → logprob: -8.6298828125
    7. ' u' → logprob: -8.7548828125
    8. 'ed' → logprob: -9.1298828125
    9. '(v' → logprob: -10.6298828125
    10. ',' → logprob: -11.5048828125

Token 244: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09082292765378952
    2. ')' → logprob: -3.21582293510437
    3. ',' → logprob: -3.59082293510437
    4. '):
' → logprob: -4.090822696685791
    5. ' ):' → logprob: -7.090822696685791
    6. 'and' → logprob: -7.215822696685791
    7. '):

' → logprob: -8.71582317352295
    8. ' in' → logprob: -9.34082317352295
    9. 'in' → logprob: -9.34082317352295
    10. ' and' → logprob: -9.34082317352295

Token 245: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.006928493268787861
    2. ' visited' → logprob: -5.006928443908691
    3. '   ' → logprob: -9.131928443908691
    4. '
' → logprob: -9.881928443908691
    5. ' ' → logprob: -11.506928443908691
    6. ')' → logprob: -11.506928443908691
    7. '  ' → logprob: -11.756928443908691
    8. '       ' → logprob: -12.131928443908691
    9. '    ' → logprob: -12.881928443908691
    10. 'w' → logprob: -13.006928443908691

Token 246: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07171767950057983
    2. '):
' → logprob: -2.6967177391052246
    3. ')' → logprob: -6.571717739105225
    4. ' ):' → logprob: -8.571717262268066
    5. ',' → logprob: -9.071717262268066
    6. '):

' → logprob: -10.321717262268066
    7. '   ' → logprob: -10.946717262268066
    8. ' ):
' → logprob: -11.821717262268066
    9. '):
' → logprob: -12.071717262268066
    10. ':' → logprob: -12.821717262268066

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0760241448879242
    2. ':
' → logprob: -3.451024055480957
    3. ':' → logprob: -3.576024055480957
    4. ' continue' → logprob: -5.326024055480957
    5. ' and' → logprob: -6.201024055480957
    6. '():
' → logprob: -6.451024055480957
    7. '       ' → logprob: -6.576024055480957
    8. '               ' → logprob: -6.701024055480957
    9. ',' → logprob: -7.576024055480957
    10. ' :' → logprob: -7.826024055480957

Token 248: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.10168030858039856
    2. '           ' → logprob: -3.101680278778076
    3. 'continue' (adapté à ' continue') → logprob: -3.726680278778076
    4. '               ' → logprob: -3.976680278778076
    5. '       ' → logprob: -4.851680278778076
    6. '   ' → logprob: -7.226680278778076
    7. ' color' → logprob: -8.851680755615234
    8. '	continue' → logprob: -9.351680755615234
    9. ' ' → logprob: -10.976680755615234
    10. ' visited' → logprob: -10.976680755615234

Token 249: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.323384165763855
    2. '
' → logprob: -1.323384165763855
    3. 'def' → logprob: -5.1983842849731445
    4. '<|end|>' → logprob: -5.5733842849731445
    5. '        
' → logprob: -8.573384284973145
    6. ',' → logprob: -8.823384284973145
    7. ',
' → logprob: -9.948384284973145
    8. '
' → logprob: -10.323384284973145
    9. ' def' → logprob: -10.323384284973145
    10. 'color' → logprob: -10.698384284973145

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004968916531652212
    2. 'def' → logprob: -6.004969120025635
    3. '
' → logprob: -6.254969120025635
    4. '<|end|>' → logprob: -8.004968643188477
    5. 'visited' → logprob: -10.004968643188477
    6. 'color' → logprob: -10.004968643188477
    7. '        
' → logprob: -10.504968643188477
    8. '   ' → logprob: -10.754968643188477
    9. ' color' → logprob: -11.379968643188477
    10. '```' → logprob: -11.504968643188477

Token 251: ' mark' (ID: 1983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7776504158973694
    2. 'visited' → logprob: -1.4026503562927246
    3. 'color' → logprob: -1.5276503562927246
    4. ' color' → logprob: -3.1526503562927246
    5. ' visited' → logprob: -3.6526503562927246
    6. '       ' → logprob: -5.527650356292725
    7. 'if' → logprob: -6.527650356292725
    8. ' if' → logprob: -7.402650356292725
    9. '           ' → logprob: -7.777650356292725
    10. 'queue' → logprob: -7.902650356292725

Token 252: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0022292369976639748
    2. '_as' → logprob: -7.1272292137146
    3. '(' → logprob: -7.6272292137146
    4. '(u' → logprob: -8.002229690551758
    5. 'ed' → logprob: -8.127229690551758
    6. '_color' → logprob: -9.127229690551758
    7. '_node' → logprob: -9.752229690551758
    8. 'visited' → logprob: -10.377229690551758
    9. '_visit' → logprob: -10.877229690551758
    10. '=' → logprob: -11.627229690551758

Token 253: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.500006675720215
    3. ' visited' → logprob: -13.125006675720215
    4. 'color' → logprob: -16.0000057220459
    5. 'node' → logprob: -16.1250057220459
    6. '```' → logprob: -16.3750057220459
    7. 'as' → logprob: -16.6250057220459
    8. 'Visited' → logprob: -16.7500057220459
    9. 'vis' → logprob: -16.8750057220459
    10. 'u' → logprob: -17.5000057220459

Token 254: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0086202472448349
    2. '(' → logprob: -4.758620262145996
    3. '(user' → logprob: -12.758620262145996
    4. ' (' → logprob: -13.758620262145996
    5. '(v' → logprob: -13.883620262145996
    6. 'visited' → logprob: -15.508620262145996
    7. '(visitor' → logprob: -15.758620262145996
    8. '(vis' → logprob: -15.883620262145996
    9. 'u' → logprob: -16.50861930847168
    10. '(U' → logprob: -16.75861930847168

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.984787902794778e-05
    2. ' ,' → logprob: -9.250100135803223
    3. 'visited' → logprob: -13.375100135803223
    4. ',
' → logprob: -13.875100135803223
    5. ')' → logprob: -14.625100135803223
    6. '(' → logprob: -15.625100135803223
    7. '(),' → logprob: -16.000099182128906
    8. '```' → logprob: -16.000099182128906
    9. '),' → logprob: -16.125099182128906
    10. ' visited' → logprob: -16.875099182128906

Token 256: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00975927896797657
    2. ' visited' → logprob: -4.634759426116943
    3. '   ' → logprob: -13.884758949279785
    4. '
' → logprob: -14.884758949279785
    5. 'v' → logprob: -15.134758949279785
    6. 'vis' → logprob: -15.384758949279785
    7. 'Visited' → logprob: -15.384758949279785
    8. 'visitor' → logprob: -15.634758949279785
    9. '```' → logprob: -15.634758949279785
    10. 'visit' → logprob: -15.759758949279785

Token 257: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25246238708496094
    2. ')' → logprob: -1.502462387084961
    3. ',' → logprob: -7.752462387084961
    4. ')

' → logprob: -9.377462387084961
    5. ' )
' → logprob: -11.502462387084961
    6. ')
' → logprob: -12.252462387084961
    7. ' )' → logprob: -13.627462387084961
    8. '   ' → logprob: -14.752462387084961
    9. ',)
' → logprob: -14.752462387084961
    10. '),' → logprob: -15.127462387084961

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07304142415523529
    2. 'color' → logprob: -3.1980414390563965
    3. ' color' → logprob: -4.4480414390563965
    4. '
' → logprob: -4.5730414390563965
    5. '<|end|>' → logprob: -5.9480414390563965
    6. '        
' → logprob: -6.8230414390563965
    7. ' mark' → logprob: -7.0730414390563965
    8. '```' → logprob: -7.3230414390563965
    9. '   ' → logprob: -8.198040962219238
    10. '           ' → logprob: -8.323040962219238

Token 259: ' assign' (ID: 14975)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.11690213531255722
    2. 'new' → logprob: -3.6169021129608154
    3. 'assign' (adapté à ' assign') → logprob: -3.9919021129608154
    4. 'if' → logprob: -4.2419023513793945
    5. 'c' → logprob: -4.4919023513793945
    6. 'set' → logprob: -4.7419023513793945
    7. 'col' → logprob: -4.9919023513793945
    8. ' color' → logprob: -5.6169023513793945
    9. 'update' → logprob: -6.1169023513793945
    10. '   ' → logprob: -6.2419023513793945

Token 260: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.011427268385887146
    2. 'color' → logprob: -4.511427402496338
    3. '(u' → logprob: -8.38642692565918
    4. '(color' → logprob: -9.26142692565918
    5. '_colors' → logprob: -11.38642692565918
    6. ' color' → logprob: -12.26142692565918
    7. '```' → logprob: -12.26142692565918
    8. '_' → logprob: -12.51142692565918
    9. '(' → logprob: -12.63642692565918
    10. 'u' → logprob: -12.76142692565918

Token 261: '(u' (ID: 17057)
  Prédit: '(color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.31367671489715576
    2. '(u' → logprob: -1.3136767148971558
    3. '(' → logprob: -8.438676834106445
    4. 'color' → logprob: -9.063676834106445
    5. '=color' → logprob: -9.938676834106445
    6. '[color' → logprob: -11.938676834106445
    7. ' color' → logprob: -12.313676834106445
    8. '(
' → logprob: -12.563676834106445
    9. '<|end|>' → logprob: -12.563676834106445
    10. '[u' → logprob: -13.063676834106445

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002402528189122677
    2. ' ,' → logprob: -7.252402305603027
    3. 'color' → logprob: -7.627402305603027
    4. '(color' → logprob: -7.627402305603027
    5. ',color' → logprob: -7.877402305603027
    6. ' color' → logprob: -8.252402305603027
    7. ')' → logprob: -10.627402305603027
    8. '   ' → logprob: -11.002402305603027
    9. ',
' → logprob: -11.752402305603027
    10. '(' → logprob: -11.752402305603027

Token 263: ' w' (ID: 286)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.009147809818387032
    2. ' color' → logprob: -4.884147644042969
    3. 'w' → logprob: -7.384147644042969
    4. '(color' → logprob: -7.509147644042969
    5. '1' → logprob: -8.509147644042969
    6. '   ' → logprob: -10.009147644042969
    7. '(' → logprob: -10.134147644042969
    8. ' w' → logprob: -10.509147644042969
    9. ' ' → logprob: -11.384147644042969
    10. '0' → logprob: -12.134147644042969

Token 264: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06982015073299408
    2. ',' → logprob: -3.1948201656341553
    3. '+' → logprob: -4.569819927215576
    4. ' +' → logprob: -4.819819927215576
    5. ')' → logprob: -5.069819927215576
    6. '   ' → logprob: -7.569819927215576
    7. ' ^' → logprob: -8.569820404052734
    8. ' sum' → logprob: -8.819820404052734
    9. '_sum' → logprob: -9.069820404052734
    10. ' ' → logprob: -9.319820404052734

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7768585681915283
    2. '+' → logprob: -1.4018585681915283
    3. ' +' → logprob: -1.4018585681915283
    4. ' ^' → logprob: -3.1518585681915283
    5. '^' → logprob: -5.651858329772949
    6. '+w' → logprob: -7.151858329772949
    7. ' ,' → logprob: -8.02685832977295
    8. ',w' → logprob: -8.27685832977295
    9. ')' → logprob: -9.27685832977295
    10. '   ' → logprob: -10.27685832977295

Token 266: ' w' (ID: 286)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.4149022698402405
    2. 'w' → logprob: -1.1649022102355957
    3. ' color' → logprob: -3.9149022102355957
    4. ' w' → logprob: -5.039902210235596
    5. '   ' → logprob: -7.664902210235596
    6. '(color' → logprob: -8.789902687072754
    7. 'neighbor' → logprob: -9.039902687072754
    8. ' ' → logprob: -9.789902687072754
    9. 'u' → logprob: -9.914902687072754
    10. '
' → logprob: -10.039902687072754

Token 267: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015121731848921627
    2. ',' → logprob: -9.750151634216309
    3. ' )' → logprob: -10.250151634216309
    4. ')
' → logprob: -10.375151634216309
    5. '))' → logprob: -11.500151634216309
    6. ')

' → logprob: -11.750151634216309
    7. '+' → logprob: -13.125151634216309
    8. '   ' → logprob: -13.875151634216309
    9. ')))' → logprob: -14.250151634216309
    10. '),' → logprob: -14.375151634216309

Token 268: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.04322892054915428
    2. ' color' → logprob: -3.1682288646698
    3. 'neighbor' → logprob: -8.918229103088379
    4. 'v' → logprob: -10.168229103088379
    5. '   ' → logprob: -11.043229103088379
    6. ' ' → logprob: -11.168229103088379
    7. '	color' → logprob: -12.168229103088379
    8. ' neighbor' → logprob: -12.418229103088379
    9. ' v' → logprob: -12.668229103088379
    10. '  ' → logprob: -12.668229103088379

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03928505629301071
    2. ')
' → logprob: -3.2892849445343018
    3. ',' → logprob: -6.789285182952881
    4. ')

' → logprob: -9.414284706115723
    5. '   ' → logprob: -10.539284706115723
    6. 'def' → logprob: -12.789284706115723
    7. ' )' → logprob: -13.039284706115723
    8. ')
' → logprob: -14.164284706115723
    9. '       ' → logprob: -14.414284706115723
    10. ' )
' → logprob: -14.914284706115723

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036419179290533066
    2. 'queue' → logprob: -3.536419153213501
    3. '<|end|>' → logprob: -6.28641939163208
    4. '
' → logprob: -6.41141939163208
    5. '        
' → logprob: -7.16141939163208
    6. ' queue' → logprob: -7.28641939163208
    7. '```' → logprob: -7.91141939163208
    8. '   ' → logprob: -8.286418914794922
    9. ',' → logprob: -8.911418914794922
    10. '(queue' → logprob: -8.911418914794922

Token 271: ' add' (ID: 1147)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.08287703990936279
    2. 'enqueue' → logprob: -2.7078771591186523
    3. 'append' → logprob: -5.082877159118652
    4. 'add' (adapté à ' add') → logprob: -5.207877159118652
    5. 'push' → logprob: -7.832877159118652
    6. '   ' → logprob: -7.957877159118652
    7. ' queue' → logprob: -8.957877159118652
    8. 'if' → logprob: -9.457877159118652
    9. 'update' → logprob: -9.707877159118652
    10. 'mark' → logprob: -10.082877159118652

Token 272: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.025807376950979233
    2. '(queue' → logprob: -4.5258073806762695
    3. '_node' → logprob: -5.1508073806762695
    4. '_queue' → logprob: -5.2758073806762695
    5. 'to' → logprob: -5.9008073806762695
    6. '_edge' → logprob: -7.5258073806762695
    7. 'queue' → logprob: -8.90080738067627
    8. '_neighbor' → logprob: -9.52580738067627
    9. '_' → logprob: -10.02580738067627
    10. '_in' → logprob: -10.52580738067627

Token 273: '_queue' (ID: 25622)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0033593897242099047
    2. '(queue' → logprob: -6.128359317779541
    3. '_queue' → logprob: -7.003359317779541
    4. ' queue' → logprob: -8.2533597946167
    5. '	queue' → logprob: -12.5033597946167
    6. 'Queue' → logprob: -15.6283597946167
    7. 'deque' → logprob: -15.7533597946167
    8. '.queue' → logprob: -16.003358840942383
    9. 'que' → logprob: -16.253358840942383
    10. '```' → logprob: -16.628358840942383

Token 274: '(u' (ID: 17057)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -1.4498052223643754e-05
    2. '(u' → logprob: -11.500014305114746
    3. ' (' → logprob: -13.000014305114746
    4. '(' → logprob: -13.125014305114746
    5. 'queue' → logprob: -16.750015258789062
    6. '(q' → logprob: -18.000015258789062
    7. '```' → logprob: -18.875015258789062
    8. ' queue' → logprob: -19.500015258789062
    9. '(query' → logprob: -19.750015258789062
    10. '(user' → logprob: -19.875015258789062

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.372916686814278e-05
    2. ' ,' → logprob: -9.7500638961792
    3. 'queue' → logprob: -12.7500638961792
    4. ',w' → logprob: -13.8750638961792
    5. '(queue' → logprob: -14.6250638961792
    6. ' queue' → logprob: -15.1250638961792
    7. ',
' → logprob: -15.2500638961792
    8. ')' → logprob: -15.6250638961792
    9. '```' → logprob: -15.7500638961792
    10. 'w' → logprob: -16.250062942504883

Token 276: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20782510936260223
    2. ' w' → logprob: -2.207825183868408
    3. 'queue' → logprob: -2.832825183868408
    4. ' queue' → logprob: -4.832825183868408
    5. 'color' → logprob: -5.457825183868408
    6. '0' → logprob: -5.957825183868408
    7. 'ws' → logprob: -6.332825183868408
    8. ' color' → logprob: -6.707825183868408
    9. ' ' → logprob: -8.45782470703125
    10. '   ' → logprob: -8.70782470703125

Token 277: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.34986382722854614
    2. ',' → logprob: -1.2248637676239014
    3. 's' → logprob: -7.5998640060424805
    4. '   ' → logprob: -8.34986400604248
    5. ',sum' → logprob: -8.47486400604248
    6. 'queue' → logprob: -8.84986400604248
    7. ' ,' → logprob: -9.47486400604248
    8. '```' → logprob: -10.09986400604248
    9. ' sum' → logprob: -10.34986400604248
    10. '_sum' → logprob: -10.97486400604248

Token 278: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8685902953147888
    2. ',' → logprob: -0.9935902953147888
    3. '+w' → logprob: -1.9935903549194336
    4. ' +' → logprob: -2.6185903549194336
    5. ',w' → logprob: -7.368590354919434
    6. ' ,' → logprob: -8.493590354919434
    7. '+,' → logprob: -9.243590354919434
    8. 'w' → logprob: -9.493590354919434
    9. '```' → logprob: -10.493590354919434
    10. ')' → logprob: -11.368590354919434

Token 279: ' w' (ID: 286)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.561680018901825
    2. 'w' → logprob: -1.1866800785064697
    3. ' queue' → logprob: -2.8116800785064697
    4. 'neighbor' → logprob: -3.3116800785064697
    5. ' w' → logprob: -3.8116800785064697
    6. ' neighbor' → logprob: -5.936679840087891
    7. 'color' → logprob: -6.061679840087891
    8. ' color' → logprob: -8.06167984008789
    9. 'weight' → logprob: -8.81167984008789
    10. '   ' → logprob: -9.18667984008789

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019305046589579433
    2. ' ,' → logprob: -8.625192642211914
    3. 'queue' → logprob: -12.125192642211914
    4. ')' → logprob: -12.625192642211914
    5. ' queue' → logprob: -12.750192642211914
    6. '(queue' → logprob: -14.000192642211914
    7. '),' → logprob: -14.875192642211914
    8. ',
' → logprob: -15.250192642211914
    9. '   ' → logprob: -16.000192642211914
    10. 's' → logprob: -17.250192642211914

Token 281: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5760586857795715
    2. 'queue' → logprob: -0.8260586857795715
    3. ' color' → logprob: -9.701058387756348
    4. 'color' → logprob: -9.951058387756348
    5. '	queue' → logprob: -12.576058387756348
    6. '(queue' → logprob: -13.201058387756348
    7. '   ' → logprob: -13.326058387756348
    8. 'que' → logprob: -14.576058387756348
    9. ' ' → logprob: -14.701058387756348
    10. 'w' → logprob: -14.701058387756348

Token 282: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.9424725148128346e-05
    2. ')

' → logprob: -10.250049591064453
    3. ')
' → logprob: -11.250049591064453
    4. ' )' → logprob: -14.000049591064453
    5. '   ' → logprob: -16.625049591064453
    6. 'def' → logprob: -17.000049591064453
    7. ',' → logprob: -17.500049591064453
    8. ')


' → logprob: -18.250049591064453
    9. ')add' → logprob: -18.250049591064453
    10. ')return' → logprob: -18.375049591064453

Token 283: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6393608450889587
    2. 'def' → logprob: -0.7643608450889587
    3. '<|end|>' → logprob: -6.1393609046936035
    4. '    
' → logprob: -6.2643609046936035
    5. '  
' → logprob: -7.0143609046936035
    6. ' 
' → logprob: -8.014360427856445
    7. ' def' → logprob: -8.514360427856445
    8. '
' → logprob: -8.514360427856445
    9. '        
' → logprob: -8.639360427856445
    10. '

' → logprob: -8.764360427856445

Token 284: ' skip' (ID: 16677)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.08338747173547745
    2. ' skip' → logprob: -2.5833873748779297
    3. 'def' → logprob: -5.45838737487793
    4. 'process' → logprob: -9.83338737487793
    5. ' def' → logprob: -10.08338737487793
    6. 'mark' → logprob: -10.95838737487793
    7. 'define' → logprob: -10.95838737487793
    8. 'add' → logprob: -11.33338737487793
    9. ' process' → logprob: -11.45838737487793
    10. 'visit' → logprob: -11.58338737487793

Token 285: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.5577775128767826e-06
    2. '_vis' → logprob: -14.000005722045898
    3. '##_' → logprob: -14.250005722045898
    4. 'visited' → logprob: -14.250005722045898
    5. '_completed' → logprob: -14.875005722045898
    6. '('_' → logprob: -15.250005722045898
    7. '_processed' → logprob: -15.750005722045898
    8. '_taken' → logprob: -15.750005722045898
    9. '```' → logprob: -15.875005722045898
    10. '_used' → logprob: -16.0000057220459

Token 286: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0005575587856583297
    2. '_' → logprob: -7.5005574226379395
    3. ' visited' → logprob: -12.625557899475098
    4. 'Visited' → logprob: -14.000557899475098
    5. '(u' → logprob: -15.375557899475098
    6. 'u' → logprob: -16.62555694580078
    7. 'v' → logprob: -17.00055694580078
    8. 'vist' → logprob: -17.37555694580078
    9. '(' → logprob: -17.75055694580078
    10. '_vis' → logprob: -18.00055694580078

Token 287: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0011878492077812552
    2. '(' → logprob: -7.001187801361084
    3. '(user' → logprob: -8.251188278198242
    4. '(token' → logprob: -11.751188278198242
    5. '(node' → logprob: -12.626188278198242
    6. ' (' → logprob: -13.501188278198242
    7. '(a' → logprob: -14.126188278198242
    8. '(uid' → logprob: -14.751188278198242
    9. '(i' → logprob: -14.876188278198242
    10. 'u' → logprob: -15.501188278198242

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012296605564188212
    2. ' ,' → logprob: -9.250123023986816
    3. '):' → logprob: -11.125123023986816
    4. ')' → logprob: -12.000123023986816
    5. ',
' → logprob: -13.625123023986816
    6. ',u' → logprob: -13.625123023986816
    7. '):
' → logprob: -13.875123023986816
    8. '(' → logprob: -14.750123023986816
    9. 'visited' → logprob: -14.875123023986816
    10. '```' → logprob: -15.250123023986816

Token 289: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.04300617426633835
    2. ' visited' → logprob: -3.168006181716919
    3. 'u' → logprob: -12.79300594329834
    4. ' u' → logprob: -13.41800594329834
    5. '   ' → logprob: -14.54300594329834
    6. '
' → logprob: -14.54300594329834
    7. '[u' → logprob: -14.66800594329834
    8. 'return' → logprob: -14.66800594329834
    9. ')' → logprob: -15.04300594329834
    10. 'v' → logprob: -16.043006896972656

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01740245334804058
    2. '):
' → logprob: -4.267402648925781
    3. ')' → logprob: -5.767402648925781
    4. '):

' → logprob: -9.392402648925781
    5. ' ):' → logprob: -11.017402648925781
    6. '):
' → logprob: -12.517402648925781
    7. ':' → logprob: -14.142402648925781
    8. ' )' → logprob: -15.017402648925781
    9. ' ):
' → logprob: -15.142402648925781
    10. '   ' → logprob: -15.392402648925781

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3206118047237396
    2. ' return' → logprob: -1.320611834526062
    3. 'return' → logprob: -5.445611953735352
    4. ' u' → logprob: -6.070611953735352
    5. '    ' → logprob: -7.320611953735352
    6. 'u' → logprob: -10.695611953735352
    7. '	return' → logprob: -11.570611953735352
    8. '  ' → logprob: -13.070611953735352
    9. ' if' → logprob: -13.945611953735352
    10. '	u' → logprob: -14.820611953735352

Token 292: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13532255589962006
    2. 'return' (adapté à ' return') → logprob: -2.1353225708007812
    3. ' u' → logprob: -5.010322570800781
    4. '   ' → logprob: -6.635322570800781
    5. 'u' → logprob: -7.885322570800781
    6. '	return' → logprob: -14.635322570800781
    7. ' ' → logprob: -15.385322570800781
    8. '    ' → logprob: -16.13532257080078
    9. ' if' → logprob: -16.13532257080078
    10. '(u' → logprob: -16.26032257080078

Token 293: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5759440064430237
    2. 'u' → logprob: -0.8259440064430237
    3. '(u' → logprob: -12.950943946838379
    4. '   ' → logprob: -14.075943946838379
    5. '	u' → logprob: -14.700943946838379
    6. ' ' → logprob: -14.700943946838379
    7. ' ' → logprob: -15.825943946838379
    8. 'False' → logprob: -16.075944900512695
    9. 'True' → logprob: -16.200944900512695
    10. '
' → logprob: -16.325944900512695

Token 294: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4290461242198944
    2. ' in' → logprob: -1.0540461540222168
    3. ' not' → logprob: -8.554045677185059
    4. 'not' → logprob: -9.179045677185059
    5. ' ' → logprob: -10.179045677185059
    6. 'u' → logprob: -13.054045677185059
    7. 'n' → logprob: -13.304045677185059
    8. '   ' → logprob: -13.304045677185059
    9. '[' → logprob: -13.929045677185059
    10. ' u' → logprob: -14.429045677185059

Token 295: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.0485873706638813
    2. 'visited' → logprob: -3.0485873222351074
    3. ' ' → logprob: -17.673587799072266
    4. ' ' → logprob: -18.423587799072266
    5. 'Visited' → logprob: -20.048587799072266
    6. ' 
' → logprob: -20.923587799072266
    7. '```' → logprob: -21.548587799072266
    8. ' seen' → logprob: -21.673587799072266
    9. ' visible' → logprob: -22.048587799072266
    10. '{' → logprob: -22.298587799072266

Token 296: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05656629800796509
    2. '<|end|>' → logprob: -2.9315662384033203
    3. '<|end|>' → logprob: -7.93156623840332
    4. '

' → logprob: -8.05656623840332
    5. '```' → logprob: -8.05656623840332
    6. '
' → logprob: -8.30656623840332
    7. ' def' → logprob: -8.43156623840332
    8. '    
' → logprob: -9.43156623840332
    9. '  
' → logprob: -10.05656623840332
    10. '   ' → logprob: -10.43156623840332

Token 297: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004043137189000845
    2. '<|end|>' → logprob: -6.254043102264404
    3. '
' → logprob: -6.879043102264404
    4. '```' → logprob: -7.629043102264404
    5. 'mark' → logprob: -8.504043579101562
    6. '    
' → logprob: -9.129043579101562
    7. '  
' → logprob: -9.129043579101562
    8. '<|end|>' → logprob: -10.629043579101562
    9. ' 
' → logprob: -10.879043579101562
    10. '   ' → logprob: -11.004043579101562

Token 298: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.0028147439006716013
    2. ' mark' → logprob: -5.877814769744873
    3. 'def' → logprob: -12.252814292907715
    4. 'add' → logprob: -13.627814292907715
    5. 'assign' → logprob: -14.377814292907715
    6. ' ' → logprob: -14.877814292907715
    7. 'visit' → logprob: -15.127814292907715
    8. '(mark' → logprob: -15.252814292907715
    9. 'Mark' → logprob: -15.377814292907715
    10. '_mark' → logprob: -15.377814292907715

Token 299: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. 'visited' → logprob: -15.75
    3. '_mark' → logprob: -16.125
    4. '_to' → logprob: -17.375
    5. '_visible' → logprob: -17.625
    6. '_completed' → logprob: -18.375
    7. 'def' → logprob: -18.5
    8. '_used' → logprob: -18.75
    9. '(u' → logprob: -19.0
    10. '_vis' → logprob: -19.25

Token 300: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0015024791937321424
    2. '_' → logprob: -6.501502513885498
    3. ' visited' → logprob: -15.75150203704834
    4. 'Visited' → logprob: -18.126502990722656
    5. 'vist' → logprob: -18.251502990722656
    6. 'visit' → logprob: -18.876502990722656
    7. 'visible' → logprob: -19.376502990722656
    8. 'marked' → logprob: -19.751502990722656
    9. 'visi' → logprob: -19.751502990722656
    10. 'u' → logprob: -19.876502990722656

Token 301: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.375005722045898
    4. 'u' → logprob: -16.2500057220459
    5. '(user' → logprob: -16.6250057220459
    6. '(a' → logprob: -17.6250057220459
    7. '(U' → logprob: -17.7500057220459
    8. 'def' → logprob: -18.8750057220459
    9. '(ui' → logprob: -19.6250057220459
    10. '(v' → logprob: -19.8750057220459

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',
' → logprob: -14.625012397766113
    4. 'visited' → logprob: -18.500011444091797
    5. '‌,' → logprob: -18.500011444091797
    6. '<|end|>' → logprob: -18.500011444091797
    7. ',u' → logprob: -18.875011444091797
    8. ',

' → logprob: -19.000011444091797
    9. '   ' → logprob: -19.625011444091797
    10. ')' → logprob: -20.125011444091797

Token 303: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.061967797577381134
    2. ' visited' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.561967849731445
    4. '   ' → logprob: -17.436967849731445
    5. 'Visited' → logprob: -18.311967849731445
    6. '
' → logprob: -18.436967849731445
    7. 'set' → logprob: -18.436967849731445
    8. 'visible' → logprob: -19.686967849731445
    9. ')' → logprob: -19.811967849731445
    10. 'seen' → logprob: -19.936967849731445

Token 304: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20795391499996185
    2. '):' → logprob: -1.707953929901123
    3. ')' → logprob: -5.082953929901123
    4. ',' → logprob: -8.582953453063965
    5. '):

' → logprob: -10.207953453063965
    6. '):
' → logprob: -10.582953453063965
    7. '   ' → logprob: -10.832953453063965
    8. '.add' → logprob: -11.332953453063965
    9. 'add' → logprob: -11.457953453063965
    10. ')
' → logprob: -11.707953453063965

Token 305: '   ' (ID: 271)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.827037513256073
    2. 'visited' → logprob: -0.827037513256073
    3. '   ' → logprob: -2.0770375728607178
    4. '
' → logprob: -12.077037811279297
    5. '    
' → logprob: -13.077037811279297
    6. ' ' → logprob: -13.827037811279297
    7. '   ' → logprob: -14.077037811279297
    8. ' 
' → logprob: -14.452037811279297
    9. ' ' → logprob: -14.577037811279297
    10. '```' → logprob: -14.577037811279297

Token 306: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.10035062581300735
    2. ' visited' → logprob: -2.3503506183624268
    3. '   ' → logprob: -8.850350379943848
    4. '
' → logprob: -15.225350379943848
    5. '```' → logprob: -15.600350379943848
    6. 'Visited' → logprob: -17.350351333618164
    7. '    
' → logprob: -17.350351333618164
    8. '	' → logprob: -17.475351333618164
    9. ' 
' → logprob: -17.725351333618164
    10. ' ' → logprob: -18.225351333618164

Token 307: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00043102685594931245
    2. '.' → logprob: -7.750431060791016
    3. ' .' → logprob: -15.375431060791016
    4. 'add' → logprob: -16.625431060791016
    5. '.update' → logprob: -18.250431060791016
    6. '.append' → logprob: -18.500431060791016
    7. '.Add' → logprob: -18.625431060791016
    8. '.remove' → logprob: -19.125431060791016
    9. ')add' → logprob: -19.500431060791016
    10. ' add' → logprob: -19.625431060791016

Token 308: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. 'u' → logprob: -16.375158309936523
    4. ' (' → logprob: -17.375158309936523
    5. '(user' → logprob: -18.500158309936523
    6. '((' → logprob: -18.500158309936523
    7. '(U' → logprob: -20.250158309936523
    8. '(ui' → logprob: -20.250158309936523
    9. '(
' → logprob: -20.750158309936523
    10. ' u' → logprob: -20.875158309936523

Token 309: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.375001907348633
    3. ')

' → logprob: -16.000001907348633
    4. ' )' → logprob: -16.250001907348633
    5. '())' → logprob: -18.250001907348633
    6. ')return' → logprob: -19.000001907348633
    7. '<|end|>' → logprob: -19.000001907348633
    8. '),' → logprob: -19.625001907348633
    9. '}' → logprob: -20.250001907348633
    10. '))' → logprob: -20.375001907348633

Token 310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.061054359131958e-06
    2. '```' → logprob: -12.375007629394531
    3. ' def' → logprob: -13.375007629394531
    4. 'color' → logprob: -13.500007629394531
    5. '   ' → logprob: -15.000007629394531
    6. '<|end|>' → logprob: -15.375007629394531
    7. ')' → logprob: -16.25000762939453
    8. 'add' → logprob: -17.25000762939453
    9. '
' → logprob: -17.25000762939453
    10. '<|end|>' → logprob: -17.62500762939453

Token 311: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.0005535095697268844
    2. 'add' → logprob: -7.750553607940674
    3. 'def' → logprob: -9.375553131103516
    4. ' assign' → logprob: -10.500553131103516
    5. 'enqueue' → logprob: -12.125553131103516
    6. 'append' → logprob: -14.375553131103516
    7. 'init' → logprob: -14.750553131103516
    8. 'get' → logprob: -14.875553131103516
    9. '	assign' → logprob: -15.000553131103516
    10. 'initialize' → logprob: -15.125553131103516

Token 312: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.816093228830141e-06
    2. 'color' → logprob: -12.87500286102295
    3. '_' → logprob: -16.750001907348633
    4. '(u' → logprob: -17.125001907348633
    5. '_colors' → logprob: -17.750001907348633
    6. '_code' → logprob: -18.000001907348633
    7. '_COLOR' → logprob: -18.750001907348633
    8. '_colour' → logprob: -18.750001907348633
    9. 'Color' → logprob: -19.125001907348633
    10. '_to' → logprob: -19.375001907348633

Token 313: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.50001049041748
    3. '(user' → logprob: -15.00001049041748
    4. 'u' → logprob: -16.250011444091797
    5. ' (' → logprob: -16.875011444091797
    6. '[u' → logprob: -17.500011444091797
    7. '(a' → logprob: -18.000011444091797
    8. '(
' → logprob: -18.125011444091797
    9. '(v' → logprob: -18.500011444091797
    10. '(x' → logprob: -18.750011444091797

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004960790392942727
    2. ' ,' → logprob: -7.750495910644531
    3. ',color' → logprob: -9.875495910644531
    4. ',
' → logprob: -12.125495910644531
    5. 'color' → logprob: -13.250495910644531
    6. ')' → logprob: -13.250495910644531
    7. ',u' → logprob: -13.500495910644531
    8. ',

' → logprob: -13.875495910644531
    9. ' color' → logprob: -14.500495910644531
    10. 'u' → logprob: -15.125495910644531

Token 315: ' w' (ID: 286)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.1821146160364151
    2. ' color' → logprob: -1.807114601135254
    3. 'w' → logprob: -6.432114601135254
    4. ' w' → logprob: -7.557114601135254
    5. ' ' → logprob: -9.807114601135254
    6. '0' → logprob: -9.932114601135254
    7. '	color' → logprob: -10.807114601135254
    8. '   ' → logprob: -11.182114601135254
    9. 'visited' → logprob: -11.307114601135254
    10. '(color' → logprob: -11.432114601135254

Token 316: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.60414821645827e-06
    2. ',' → logprob: -13.000004768371582
    3. ' sum' → logprob: -13.625004768371582
    4. 'um' → logprob: -14.875004768371582
    5. '   ' → logprob: -15.125004768371582
    6. ',sum' → logprob: -15.250004768371582
    7. 's' → logprob: -16.625003814697266
    8. '(sum' → logprob: -16.625003814697266
    9. '_sum' → logprob: -17.000003814697266
    10. ' ' → logprob: -17.375003814697266

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002457238151691854
    2. ' ,' → logprob: -8.875246047973633
    3. ',u' → logprob: -10.125246047973633
    4. ',
' → logprob: -10.875246047973633
    5. '[u' → logprob: -11.375246047973633
    6. ',w' → logprob: -11.625246047973633
    7. '   ' → logprob: -12.125246047973633
    8. ')' → logprob: -12.625246047973633
    9. ',color' → logprob: -12.750246047973633
    10. 'u' → logprob: -12.875246047973633

Token 318: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3132866322994232
    2. ' w' → logprob: -1.3132866621017456
    3. 'u' → logprob: -11.563286781311035
    4. '<|end|>' → logprob: -12.438286781311035
    5. ' ' → logprob: -12.688286781311035
    6. ' u' → logprob: -13.563286781311035
    7. ')' → logprob: -13.813286781311035
    8. 's' → logprob: -13.938286781311035
    9. '   ' → logprob: -14.313286781311035
    10. '0' → logprob: -14.313286781311035

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004293857607990503
    2. '):' → logprob: -5.629293918609619
    3. ',u' → logprob: -8.879293441772461
    4. '   ' → logprob: -9.129293441772461
    5. ' ,' → logprob: -9.129293441772461
    6. '):
' → logprob: -9.379293441772461
    7. ',
' → logprob: -9.379293441772461
    8. ')' → logprob: -10.004293441772461
    9. '[u' → logprob: -10.379293441772461
    10. '+' → logprob: -10.879293441772461

Token 320: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.47407785058021545
    2. ' color' → logprob: -0.9740778207778931
    3. '	color' → logprob: -15.224078178405762
    4. '[color' → logprob: -16.099077224731445
    5. '=color' → logprob: -16.349077224731445
    6. ' ' → logprob: -16.474077224731445
    7. '   ' → logprob: -16.474077224731445
    8. ')' → logprob: -16.849077224731445
    9. '(color' → logprob: -16.974077224731445
    10. '_color' → logprob: -16.974077224731445

Token 321: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20352916419506073
    2. '):' → logprob: -1.7035291194915771
    3. ',' → logprob: -6.328529357910156
    4. '   ' → logprob: -8.328529357910156
    5. '):
' → logprob: -9.828529357910156
    6. '):

' → logprob: -10.703529357910156
    7. ')' → logprob: -12.328529357910156
    8. '[u' → logprob: -13.203529357910156
    9. ',u' → logprob: -13.328529357910156
    10. ' ):
' → logprob: -14.203529357910156

Token 322: '   ' (ID: 271)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.8831104636192322
    2. '   ' → logprob: -1.008110523223877
    3. 'color' → logprob: -1.508110523223877
    4. '[color' → logprob: -8.633110046386719
    5. '	color' → logprob: -9.633110046386719
    6. '```' → logprob: -12.508110046386719
    7. '_color' → logprob: -12.633110046386719
    8. '       ' → logprob: -12.758110046386719
    9. '(color' → logprob: -12.883110046386719
    10. ' ' → logprob: -13.133110046386719

Token 323: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.14544987678527832
    2. ' color' → logprob: -2.0204498767852783
    3. '   ' → logprob: -5.895449638366699
    4. '	color' → logprob: -11.7704496383667
    5. 'if' → logprob: -13.0204496383667
    6. ' ' → logprob: -13.5204496383667
    7. ' if' → logprob: -13.5204496383667
    8. 'current' → logprob: -14.0204496383667
    9. 'parent' → logprob: -14.1454496383667
    10. 'colors' → logprob: -14.3954496383667

Token 324: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. 'u' → logprob: -15.375000953674316
    4. '```' → logprob: -18.0
    5. '[user' → logprob: -18.125
    6. '\[' → logprob: -19.25
    7. '.setdefault' → logprob: -19.5
    8. '(u' → logprob: -19.625
    9. '[int' → logprob: -19.75
    10. ' [' → logprob: -19.875

Token 325: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.069664333248511e-05
    2. ']=' → logprob: -11.000020980834961
    3. ' ]' → logprob: -12.625020980834961
    4. ')' → logprob: -14.625020980834961
    5. '])' → logprob: -16.37502098083496
    6. ')]' → logprob: -17.87502098083496
    7. '   ' → logprob: -18.00002098083496
    8. '']' → logprob: -18.12502098083496
    9. '[' → logprob: -18.37502098083496
    10. ']
' → logprob: -18.50002098083496

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012511413544416428
    2. ' =' → logprob: -4.387511253356934
    3. ' ' → logprob: -14.387511253356934
    4. '[' → logprob: -15.012511253356934
    5. ']' → logprob: -15.387511253356934
    6. '   ' → logprob: -15.512511253356934
    7. ']=' → logprob: -16.01251220703125
    8. ')' → logprob: -16.01251220703125
    9. '=
' → logprob: -16.76251220703125
    10. '＝' → logprob: -17.13751220703125

Token 327: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.777816653251648
    2. 'ws' → logprob: -1.027816653251648
    3. 'color' → logprob: -2.2778167724609375
    4. 'w' → logprob: -3.4028167724609375
    5. ' w' → logprob: -4.1528167724609375
    6. '1' → logprob: -4.4028167724609375
    7. '(color' → logprob: -5.1528167724609375
    8. ' (' → logprob: -5.2778167724609375
    9. '(' → logprob: -5.4028167724609375
    10. '(ws' → logprob: -6.6528167724609375

Token 328: 'ws' (ID: 8811)
  Prédit: 'ws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ws' → logprob: -0.008482309058308601
    2. 'w' → logprob: -5.508482456207275
    3. 'color' → logprob: -5.508482456207275
    4. ' w' → logprob: -8.258481979370117
    5. '   ' → logprob: -10.508481979370117
    6. ' ws' → logprob: -11.758481979370117
    7. ' ' → logprob: -12.008481979370117
    8. ' color' → logprob: -12.133481979370117
    9. '1' → logprob: -12.383481979370117
    10. '(w' → logprob: -12.383481979370117

Token 329: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00015264409012161195
    2. 'sum' → logprob: -8.875152587890625
    3. 'u' → logprob: -12.375152587890625
    4. 'm' → logprob: -13.250152587890625
    5. 'un' → logprob: -13.500152587890625
    6. '   ' → logprob: -13.875152587890625
    7. 'ум' → logprob: -14.000152587890625
    8. ' um' → logprob: -14.500152587890625
    9. 'color' → logprob: -14.625152587890625
    10. ' ' → logprob: -14.875152587890625

Token 330: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3146892189979553
    2. ' +' → logprob: -1.3146891593933105
    3. ' ^' → logprob: -7.4396891593933105
    4. '   ' → logprob: -7.6896891593933105
    5. ' ' → logprob: -8.939689636230469
    6. '+w' → logprob: -8.939689636230469
    7. '^' → logprob: -9.439689636230469
    8. '%' → logprob: -11.439689636230469
    9. '  ' → logprob: -11.814689636230469
    10. ')' → logprob: -11.814689636230469

Token 331: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.523212730884552
    2. ' w' → logprob: -0.898212730884552
    3. '1' → logprob: -10.023212432861328
    4. ' ' → logprob: -10.773212432861328
    5. '   ' → logprob: -11.273212432861328
    6. ')' → logprob: -12.523212432861328
    7. ' (' → logprob: -13.648212432861328
    8. ' 
' → logprob: -13.773212432861328
    9. '  ' → logprob: -13.898212432861328
    10. ' ' → logprob: -13.898212432861328

Token 332: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0868278524139896e-05
    2. ' )' → logprob: -10.25006103515625
    3. ')%' → logprob: -11.50006103515625
    4. ' +' → logprob: -11.75006103515625
    5. '+' → logprob: -12.50006103515625
    6. '%' → logprob: -14.12506103515625
    7. '[' → logprob: -14.25006103515625
    8. ')
' → logprob: -14.62506103515625
    9. ')

' → logprob: -14.75006103515625
    10. ' ' → logprob: -15.00006103515625

Token 333: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.18068785965442657
    2. ' %' → logprob: -1.8056879043579102
    3. ')' → logprob: -7.55568790435791
    4. '1' → logprob: -8.93068790435791
    5. ' ' → logprob: -9.18068790435791
    6. '[' → logprob: -9.93068790435791
    7. ' ' → logprob: -10.18068790435791
    8. '0' → logprob: -10.43068790435791
    9. '   ' → logprob: -10.80568790435791
    10. '```' → logprob: -12.05568790435791

Token 334: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.166338137816638e-05
    2. '3' → logprob: -10.500031471252441
    3. ' ' → logprob: -12.750031471252441
    4. '   ' → logprob: -15.000031471252441
    5. '10' → logprob: -15.750031471252441
    6. '```' → logprob: -16.125032424926758
    7. '4' → logprob: -16.500032424926758
    8. '  ' → logprob: -16.625032424926758
    9. '201' → logprob: -16.750032424926758
    10. '1' → logprob: -16.750032424926758

Token 335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. '3' → logprob: -12.250005722045898
    3. '(' → logprob: -14.625005722045898
    4. ' ' → logprob: -15.750005722045898
    5. '10' → logprob: -16.7500057220459
    6. '

' → logprob: -17.2500057220459
    7. '4' → logprob: -17.2500057220459
    8. '{' → logprob: -17.3750057220459
    9. '100' → logprob: -17.5000057220459
    10. 'int' → logprob: -17.5000057220459

Token 336: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003374480875208974
    2. '<|end|>' → logprob: -5.8783745765686035
    3. '
' → logprob: -7.7533745765686035
    4. '

' → logprob: -10.253374099731445
    5. '  
' → logprob: -10.378374099731445
    6. '    
' → logprob: -10.753374099731445
    7. '<|end|>' → logprob: -10.753374099731445
    8. ' def' → logprob: -11.378374099731445
    9. ')' → logprob: -11.753374099731445
    10. '```' → logprob: -12.003374099731445

Token 337: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011976087465882301
    2. 'add' → logprob: -4.51197624206543
    3. '(add' → logprob: -8.13697624206543
    4. 'a' → logprob: -8.76197624206543
    5. '```' → logprob: -9.38697624206543
    6. '<|end|>' → logprob: -9.63697624206543
    7. '    
' → logprob: -9.76197624206543
    8. ')add' → logprob: -10.13697624206543
    9. '(' → logprob: -10.26197624206543
    10. '
' → logprob: -10.38697624206543

Token 338: ' add' (ID: 1147)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3513783812522888
    2. 'add' → logprob: -2.1013784408569336
    3. 'b' → logprob: -2.7263784408569336
    4. 'process' → logprob: -2.8513784408569336
    5. ' bfs' → logprob: -4.351378440856934
    6. ' add' → logprob: -5.226378440856934
    7. 'run' → logprob: -5.351378440856934
    8. 'dfs' → logprob: -5.476378440856934
    9. 'main' → logprob: -5.601378440856934
    10. 'color' → logprob: -5.851378440856934

Token 339: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.0280383548888494e-06
    2. 'to' → logprob: -14.500000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_t' → logprob: -16.500001907348633
    5. '##_' → logprob: -17.375001907348633
    6. '_from' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. ')_' → logprob: -18.250001907348633
    9. ' to' → logprob: -18.625001907348633
    10. 'To' → logprob: -18.875001907348633

Token 340: '_queue' (ID: 25622)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2519598603248596
    2. '_queue' → logprob: -1.5019598007202148
    3. ' queue' → logprob: -10.501959800720215
    4. '(queue' → logprob: -13.126959800720215
    5. 'que' → logprob: -14.251959800720215
    6. '	queue' → logprob: -15.876959800720215
    7. 'Queue' → logprob: -16.25196075439453
    8. '_to' → logprob: -16.75196075439453
    9. 'deque' → logprob: -16.75196075439453
    10. '_' → logprob: -17.12696075439453

Token 341: '(u' (ID: 17057)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.00017040544480551034
    2. '(' → logprob: -8.875170707702637
    3. ' (' → logprob: -10.500170707702637
    4. '(u' → logprob: -12.875170707702637
    5. ' queue' → logprob: -16.00016975402832
    6. '(q' → logprob: -16.25016975402832
    7. 'queue' → logprob: -16.37516975402832
    8. '(query' → logprob: -16.87516975402832
    9. '```' → logprob: -16.87516975402832
    10. '   ' → logprob: -17.37516975402832

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005000127712264657
    2. ' ,' → logprob: -7.625500202178955
    3. ',w' → logprob: -12.500499725341797
    4. ',
' → logprob: -12.625499725341797
    5. ')' → logprob: -13.750499725341797
    6. ',

' → logprob: -13.875499725341797
    7. '```' → logprob: -14.750499725341797
    8. ',u' → logprob: -15.000499725341797
    9. ' ' → logprob: -15.250499725341797
    10. 'w' → logprob: -15.375499725341797

Token 343: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.544674277305603
    2. 'queue' → logprob: -1.419674277305603
    3. ' queue' → logprob: -2.5446743965148926
    4. 'w' → logprob: -2.7946743965148926
    5. 'ws' → logprob: -3.4196743965148926
    6. '(queue' → logprob: -5.919674396514893
    7. ' u' → logprob: -6.919674396514893
    8. 'color' → logprob: -7.294674396514893
    9. ' ws' → logprob: -7.669674396514893
    10. ' color' → logprob: -7.919674396514893

Token 344: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.034876324236392975
    2. ',' → logprob: -3.4098763465881348
    3. ',sum' → logprob: -7.034876346588135
    4. ' ,' → logprob: -9.284875869750977
    5. ' sum' → logprob: -9.659875869750977
    6. '(sum' → logprob: -10.284875869750977
    7. 'summ' → logprob: -10.409875869750977
    8. '_sum' → logprob: -10.659875869750977
    9. '   ' → logprob: -11.159875869750977
    10. '```' → logprob: -11.159875869750977

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0868278524139896e-05
    2. ' ,' → logprob: -10.12506103515625
    3. ',
' → logprob: -11.12506103515625
    4. ')' → logprob: -13.62506103515625
    5. ',u' → logprob: -13.62506103515625
    6. ',
' → logprob: -13.75006103515625
    7. ',

' → logprob: -14.00006103515625
    8. '   ' → logprob: -14.00006103515625
    9. ',w' → logprob: -15.00006103515625
    10. ' ' → logprob: -16.62506103515625

Token 346: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.11283944547176361
    2. ' w' → logprob: -2.237839460372925
    3. '   ' → logprob: -11.987839698791504
    4. ' ' → logprob: -12.487839698791504
    5. '(w' → logprob: -13.487839698791504
    6. '+w' → logprob: -13.987839698791504
    7. '  ' → logprob: -14.237839698791504
    8. '+' → logprob: -14.362839698791504
    9. 'add' → logprob: -14.362839698791504
    10. '    ' → logprob: -14.487839698791504

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.68022444692906e-05
    2. ' ,' → logprob: -10.375046730041504
    3. ',
' → logprob: -12.000046730041504
    4. 'queue' → logprob: -12.125046730041504
    5. ' queue' → logprob: -13.125046730041504
    6. '(queue' → logprob: -13.875046730041504
    7. '   ' → logprob: -14.250046730041504
    8. ')' → logprob: -16.12504768371582
    9. '	queue' → logprob: -16.62504768371582
    10. '.queue' → logprob: -17.00004768371582

Token 348: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.12692926824092865
    2. ' queue' → logprob: -2.12692928314209
    3. '(queue' → logprob: -13.75192928314209
    4. '	queue' → logprob: -15.87692928314209
    5. '.queue' → logprob: -16.751928329467773
    6. ' ' → logprob: -18.251928329467773
    7. ')' → logprob: -18.626928329467773
    8. 'que' → logprob: -19.251928329467773
    9. 'deque' → logprob: -19.251928329467773
    10. '_queue' → logprob: -19.251928329467773

Token 349: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013104787794873118
    2. '   ' → logprob: -6.876310348510742
    3. '):
' → logprob: -9.001310348510742
    4. '):' → logprob: -9.251310348510742
    5. ' ,' → logprob: -10.251310348510742
    6. ',(' → logprob: -12.251310348510742
    7. ',u' → logprob: -12.251310348510742
    8. ')' → logprob: -12.376310348510742
    9. ',
' → logprob: -12.751310348510742
    10. '):

' → logprob: -13.751310348510742

Token 350: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03642171621322632
    2. ' queue' → logprob: -3.536421775817871
    3. '   ' → logprob: -5.036421775817871
    4. '	queue' → logprob: -8.911421775817871
    5. '(queue' → logprob: -11.036421775817871
    6. '  ' → logprob: -14.786421775817871
    7. ' ' → logprob: -15.036421775817871
    8. '.queue' → logprob: -15.536421775817871
    9. '       ' → logprob: -16.286420822143555
    10. 'append' → logprob: -16.536420822143555

Token 351: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0005893715424463153
    2. ' queue' → logprob: -7.500589370727539
    3. '   ' → logprob: -10.250589370727539
    4. '	queue' → logprob: -14.250589370727539
    5. '(queue' → logprob: -15.750589370727539
    6. '  ' → logprob: -16.25058937072754
    7. '    
' → logprob: -16.37558937072754
    8. '
' → logprob: -17.12558937072754
    9. ' ' → logprob: -17.25058937072754
    10. '.queue' → logprob: -18.37558937072754

Token 352: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0021105282939970493
    2. 'append' → logprob: -6.252110481262207
    3. '.' → logprob: -8.627110481262207
    4. '   ' → logprob: -14.252110481262207
    5. '_append' → logprob: -14.502110481262207
    6. ' append' → logprob: -14.752110481262207
    7. ' .' → logprob: -15.127110481262207
    8. 'Append' → logprob: -15.377110481262207
    9. '.extend' → logprob: -15.627110481262207
    10. '.push' → logprob: -16.002111434936523

Token 353: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00011653638648567721
    2. '(' → logprob: -9.500116348266602
    3. 'left' → logprob: -10.125116348266602
    4. '(u' → logprob: -13.750116348266602
    5. ' ((' → logprob: -14.875116348266602
    6. '(((' → logprob: -17.0001163482666
    7. '(
' → logprob: -17.6251163482666
    8. '   ' → logprob: -18.3751163482666
    9. '[(' → logprob: -18.7501163482666
    10. ' (' → logprob: -19.1251163482666

Token 354: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.4868770196917467e-05
    2. ' u' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.250024795532227
    4. '(u' → logprob: -15.750024795532227
    5. '	u' → logprob: -16.250024795532227
    6. '[u' → logprob: -18.500024795532227
    7. '```' → logprob: -19.875024795532227
    8. ')' → logprob: -20.000024795532227
    9. '*u' → logprob: -21.000024795532227
    10. '<u' → logprob: -21.000024795532227

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020461321400944144
    2. ' ,' → logprob: -8.500205039978027
    3. ',
' → logprob: -15.000205039978027
    4. 'w' → logprob: -15.500205039978027
    5. ',w' → logprob: -15.500205039978027
    6. ' ' → logprob: -16.37520408630371
    7. '   ' → logprob: -16.37520408630371
    8. '),' → logprob: -16.62520408630371
    9. 's' → logprob: -17.75020408630371
    10. '',' → logprob: -18.12520408630371

Token 356: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.16889074444770813
    2. 'ws' → logprob: -2.4188907146453857
    3. 'w' → logprob: -3.4188907146453857
    4. '(w' → logprob: -3.5438907146453857
    5. ' (' → logprob: -5.418890953063965
    6. ' ws' → logprob: -9.168890953063965
    7. '   ' → logprob: -9.918890953063965
    8. '(ws' → logprob: -10.168890953063965
    9. '(' → logprob: -10.793890953063965
    10. '((' → logprob: -10.793890953063965

Token 357: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003373694489710033
    2. ',' → logprob: -8.250337600708008
    3. '   ' → logprob: -10.375337600708008
    4. ')' → logprob: -11.000337600708008
    5. ' sum' → logprob: -11.750337600708008
    6. ',sum' → logprob: -12.125337600708008
    7. ' ' → logprob: -12.375337600708008
    8. '_sum' → logprob: -12.625337600708008
    9. 's' → logprob: -13.250337600708008
    10. '  ' → logprob: -13.375337600708008

Token 358: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740874767303467
    2. ' +' → logprob: -0.9740874767303467
    3. '+w' → logprob: -12.349087715148926
    4. ',' → logprob: -12.599087715148926
    5. ' plus' → logprob: -14.099087715148926
    6. ' ' → logprob: -14.099087715148926
    7. '   ' → logprob: -14.974087715148926
    8. ')' → logprob: -15.724087715148926
    9. ' ' → logprob: -15.849087715148926
    10. '＋' → logprob: -15.974087715148926

Token 359: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12693126499652863
    2. ' w' → logprob: -2.1269311904907227
    3. '   ' → logprob: -13.376931190490723
    4. ' ' → logprob: -14.001931190490723
    5. '	w' → logprob: -15.126931190490723
    6. '  ' → logprob: -15.501931190490723
    7. '    ' → logprob: -16.00193214416504
    8. '_w' → logprob: -16.62693214416504
    9. ')' → logprob: -16.75193214416504
    10. ''w' → logprob: -17.37693214416504

Token 360: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.927930654550437e-05
    2. ')' → logprob: -10.625029563903809
    3. '))
' → logprob: -12.375029563903809
    4. '))

' → logprob: -14.750029563903809
    5. ' ))' → logprob: -15.625029563903809
    6. ')))' → logprob: -15.875029563903809
    7. '()))' → logprob: -18.625028610229492
    8. '));' → logprob: -18.625028610229492
    9. '),' → logprob: -19.000028610229492
    10. '+' → logprob: -19.250028610229492

Token 361: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.685467764735222e-05
    2. '```' → logprob: -10.000086784362793
    3. '<|end|>' → logprob: -11.000086784362793
    4. '
' → logprob: -11.625086784362793
    5. 'if' → logprob: -12.375086784362793
    6. 'for' → logprob: -12.875086784362793
    7. 'ndef' → logprob: -13.375086784362793
    8. '#' → logprob: -13.375086784362793
    9. '\' → logprob: -13.750086784362793
    10. 'while' → logprob: -14.000086784362793

Token 362: ' traverse' (ID: 66957)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0835953876376152
    2. 'def' → logprob: -3.2085952758789062
    3. ' main' → logprob: -3.7085952758789062
    4. 'b' → logprob: -4.583595275878906
    5. ' bfs' → logprob: -6.458595275878906
    6. 'solve' → logprob: -6.583595275878906
    7. 'read' → logprob: -7.083595275878906
    8. 'dfs' → logprob: -8.083595275878906
    9. 'process' → logprob: -8.333595275878906
    10. 'run' → logprob: -8.333595275878906

Token 363: '(ne' (ID: 79401)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.11537770181894302
    2. '(' → logprob: -2.36537766456604
    3. '_' → logprob: -4.490377902984619
    4. '_(' → logprob: -6.615377902984619
    5. '_queue' → logprob: -7.490377902984619
    6. '(node' → logprob: -7.740377902984619
    7. '_b' → logprob: -8.115377426147461
    8. '(graph' → logprob: -8.615377426147461
    9. '_d' → logprob: -8.990377426147461
    10. '(_' → logprob: -8.990377426147461

Token 364: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -8.697387966094539e-05
    2. 'ight' → logprob: -10.125086784362793
    3. 'igh' → logprob: -10.500086784362793
    4. 'ighbors' → logprob: -11.125086784362793
    5. 'ighborhood' → logprob: -13.000086784362793
    6. 'ig' → logprob: -14.000086784362793
    7. 'i' → logprob: -14.375086784362793
    8. 'ighbour' → logprob: -15.250086784362793
    9. 'neighbor' → logprob: -15.625086784362793
    10. 't' → logprob: -16.37508773803711

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.816591434879228e-05
    2. ' ,' → logprob: -10.12508773803711
    3. ')' → logprob: -10.87508773803711
    4. '   ' → logprob: -11.62508773803711
    5. '):' → logprob: -11.62508773803711
    6. ',
' → logprob: -12.12508773803711
    7. '):
' → logprob: -12.75008773803711
    8. '[' → logprob: -15.12508773803711
    9. ',)' → logprob: -15.12508773803711
    10. 'def' → logprob: -15.25008773803711

Token 366: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6577288508415222
    2. 'visited' → logprob: -0.9077288508415222
    3. ' color' → logprob: -2.782728910446167
    4. ' visited' → logprob: -4.157728672027588
    5. 'queue' → logprob: -7.282728672027588
    6. 'start' → logprob: -9.282729148864746
    7. '   ' → logprob: -9.907729148864746
    8. ' ' → logprob: -10.407729148864746
    9. 'init' → logprob: -10.407729148864746
    10. ' queue' → logprob: -11.032729148864746

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037383107701316476
    2. '):
' → logprob: -8.375373840332031
    3. '):' → logprob: -9.000373840332031
    4. ' ,' → logprob: -11.750373840332031
    5. ',
' → logprob: -12.125373840332031
    6. ')' → logprob: -12.875373840332031
    7. '   ' → logprob: -13.625373840332031
    8. 's' → logprob: -14.125373840332031
    9. '):

' → logprob: -14.500373840332031
    10. '):
' → logprob: -14.750373840332031

Token 368: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0021980751771479845
    2. ' visited' → logprob: -6.127198219299316
    3. 'queue' → logprob: -11.377198219299316
    4. '   ' → logprob: -14.877198219299316
    5. 'visit' → logprob: -15.502198219299316
    6. 'Visited' → logprob: -15.502198219299316
    7. 'visitor' → logprob: -16.002197265625
    8. ' ' → logprob: -16.252197265625
    9. '```' → logprob: -16.627197265625
    10. 'neighbor' → logprob: -16.752197265625

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043138445471413434
    2. '):
' → logprob: -7.875431537628174
    3. '):' → logprob: -10.375431060791016
    4. ',
' → logprob: -11.625431060791016
    5. ' ,' → logprob: -12.375431060791016
    6. '   ' → logprob: -12.500431060791016
    7. '):

' → logprob: -13.375431060791016
    8. ')' → logprob: -14.500431060791016
    9. 'queue' → logprob: -15.250431060791016
    10. 'def' → logprob: -16.125431060791016

Token 370: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.023262716829776764
    2. ' queue' → logprob: -3.7732627391815186
    3. '   ' → logprob: -11.523262977600098
    4. '	queue' → logprob: -13.023262977600098
    5. ' ' → logprob: -13.523262977600098
    6. '
' → logprob: -13.773262977600098
    7. '```' → logprob: -14.398262977600098
    8. '(queue' → logprob: -14.898262977600098
    9. '  ' → logprob: -15.023262977600098
    10. 'que' → logprob: -15.023262977600098

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013313100207597017
    2. '):
' → logprob: -6.626331329345703
    3. ')' → logprob: -12.876331329345703
    4. '):
' → logprob: -13.751331329345703
    5. '   ' → logprob: -14.126331329345703
    6. ' ):' → logprob: -14.876331329345703
    7. ':' → logprob: -15.376331329345703
    8. ',' → logprob: -15.376331329345703
    9. '):

' → logprob: -15.376331329345703
    10. '():' → logprob: -16.876331329345703

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008446142077445984
    2. ' while' → logprob: -5.008446216583252
    3. 'while' → logprob: -6.383446216583252
    4. ' if' → logprob: -10.508445739746094
    5. '	while' → logprob: -11.508445739746094
    6. 'if' → logprob: -13.383445739746094
    7. '```' → logprob: -14.883445739746094
    8. '    ' → logprob: -15.758445739746094
    9. '   ' → logprob: -16.008445739746094
    10. 'While' → logprob: -16.133445739746094

Token 373: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.11717063188552856
    2. '   ' → logprob: -2.617170572280884
    3. ' while' → logprob: -3.617170572280884
    4. 'if' → logprob: -4.617170810699463
    5. ' if' → logprob: -7.117170810699463
    6. '	while' → logprob: -12.367170333862305
    7. '```' → logprob: -13.242170333862305
    8. ' ' → logprob: -15.117170333862305
    9. '  ' → logprob: -15.367170333862305
    10. 'While' → logprob: -15.742170333862305

Token 374: ' not' (ID: 625)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.080582395195961
    2. ' queue' → logprob: -2.5805823802948
    3. 'len' → logprob: -6.455582618713379
    4. ' len' → logprob: -9.330582618713379
    5. '   ' → logprob: -10.955582618713379
    6. '(queue' → logprob: -12.205582618713379
    7. '	queue' → logprob: -12.830582618713379
    8. 'True' → logprob: -12.830582618713379
    9. '       ' → logprob: -13.955582618713379
    10. ' ' → logprob: -14.330582618713379

Token 375: ' queue' (ID: 13661)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6549107432365417
    2. 'not' → logprob: -1.4049108028411865
    3. 'len' → logprob: -1.6549108028411865
    4. 'queue' → logprob: -3.4049108028411865
    5. ' len' → logprob: -5.654910564422607
    6. ' queue' → logprob: -6.279910564422607
    7. 'visited' → logprob: -6.404910564422607
    8. ' ' → logprob: -7.154910564422607
    9. 'color' → logprob: -8.154911041259766
    10. 'empty' → logprob: -8.154911041259766

Token 376: '_empty' (ID: 35051)
  Prédit: '.empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.empty' → logprob: -0.03585715591907501
    2. '.' → logprob: -3.7858572006225586
    3. '.is' → logprob: -4.660857200622559
    4. 'empty' → logprob: -6.785857200622559
    5. '_empty' → logprob: -7.535857200622559
    6. ':' → logprob: -8.035857200622559
    7. 'isempty' → logprob: -8.035857200622559
    8. '.__' → logprob: -8.785857200622559
    9. '.clear' → logprob: -8.910857200622559
    10. '.Empty' → logprob: -9.035857200622559

Token 377: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -1.3306015716807451e-05
    2. ' (' → logprob: -12.37501335144043
    3. 'queue' → logprob: -12.37501335144043
    4. '(' → logprob: -12.62501335144043
    5. '```' → logprob: -13.62501335144043
    6. '(stack' → logprob: -16.50001335144043
    7. '   ' → logprob: -17.00001335144043
    8. ' ' → logprob: -17.00001335144043
    9. '  ' → logprob: -17.50001335144043
    10. '()(' → logprob: -17.62501335144043

Token 378: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01000609528273344
    2. '):
' → logprob: -4.760005950927734
    3. ')' → logprob: -6.635005950927734
    4. '():' → logprob: -10.260005950927734
    5. ':' → logprob: -10.760005950927734
    6. '()' → logprob: -11.635005950927734
    7. '):

' → logprob: -12.635005950927734
    8. '   ' → logprob: -12.760005950927734
    9. '()):
' → logprob: -13.385005950927734
    10. '():
' → logprob: -13.635005950927734

Token 379: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45684483647346497
    2. '       ' → logprob: -1.2068448066711426
    3. '
' → logprob: -3.5818448066711426
    4. ':' → logprob: -3.9568448066711426
    5. ':
' → logprob: -4.956844806671143
    6. '(queue' → logprob: -5.706844806671143
    7. '    
' → logprob: -5.956844806671143
    8. '):
' → logprob: -6.206844806671143
    9. '```' → logprob: -6.956844806671143
    10. ',' → logprob: -7.206844806671143

Token 380: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.04019894450902939
    2. ' v' → logprob: -3.290199041366577
    3. '   ' → logprob: -7.040198802947998
    4. 'u' → logprob: -7.415198802947998
    5. '       ' → logprob: -8.165199279785156
    6. '(v' → logprob: -8.915199279785156
    7. ' u' → logprob: -9.415199279785156
    8. 'node' → logprob: -9.915199279785156
    9. '	v' → logprob: -10.540199279785156
    10. '
' → logprob: -10.790199279785156

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009064606274478137
    2. '=' → logprob: -7.125906467437744
    3. ' =' → logprob: -9.500905990600586
    4. ' ,' → logprob: -10.750905990600586
    5. ',v' → logprob: -13.000905990600586
    6. ')' → logprob: -13.750905990600586
    7. '   ' → logprob: -14.250905990600586
    8. '_,' → logprob: -15.625905990600586
    9. ',color' → logprob: -15.750905990600586
    10. '```' → logprob: -15.813405990600586

Token 382: ' w' (ID: 286)
  Prédit: 'ws'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ws' → logprob: -0.044273193925619125
    2. ' w' → logprob: -3.1692731380462646
    3. 'w' → logprob: -6.794273376464844
    4. '	ws' → logprob: -10.419273376464844
    5. 'wsz' → logprob: -10.669273376464844
    6. '```' → logprob: -10.919273376464844
    7. ' ws' → logprob: -11.169273376464844
    8. '0' → logprob: -11.669273376464844
    9. 'current' → logprob: -11.919273376464844
    10. '_ws' → logprob: -12.294273376464844

Token 383: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.2961512513575144e-05
    2. '_sum' → logprob: -11.125022888183594
    3. '   ' → logprob: -12.500022888183594
    4. '=' → logprob: -13.500022888183594
    5. ' =' → logprob: -14.000022888183594
    6. '```' → logprob: -14.500022888183594
    7. 'summ' → logprob: -15.000022888183594
    8. ' sum' → logprob: -15.375022888183594
    9. ',' → logprob: -15.625022888183594
    10. '=sum' → logprob: -15.875022888183594

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018154975026845932
    2. ' =' → logprob: -4.018155097961426
    3. ')' → logprob: -12.393155097961426
    4. '   ' → logprob: -14.518155097961426
    5. ')=' → logprob: -14.893155097961426
    6. ',' → logprob: -16.64315414428711
    7. ' ' → logprob: -16.76815414428711
    8. '    ' → logprob: -18.01815414428711
    9. '=

' → logprob: -18.14315414428711
    10. '=
' → logprob: -18.39315414428711

Token 385: ' visit' (ID: 4030)
  Prédit: ' visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visit' → logprob: -0.3484848141670227
    2. 'visit' → logprob: -1.223484754562378
    3. '_visit' → logprob: -11.098484992980957
    4. 'queue' → logprob: -11.973484992980957
    5. '    ' → logprob: -12.473484992980957
    6. '.visit' → logprob: -12.723484992980957
    7. ' queue' → logprob: -12.723484992980957
    8. ' vist' → logprob: -13.223484992980957
    9. '
' → logprob: -13.348484992980957
    10. '   ' → logprob: -14.098484992980957

Token 386: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.2747398912906647
    2. '_queue' → logprob: -1.5247398614883423
    3. '(queue' → logprob: -4.149739742279053
    4. '_' → logprob: -5.024739742279053
    5. 'queue' → logprob: -9.024740219116211
    6. '```' → logprob: -10.649740219116211
    7. '_(' → logprob: -10.899740219116211
    8. '_nodes' → logprob: -11.774740219116211
    9. '(node' → logprob: -11.774740219116211
    10. '_stack' → logprob: -12.274740219116211

Token 387: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -14.875000953674316
    3. '(' → logprob: -15.750000953674316
    4. ' queue' → logprob: -16.75
    5. 'queue' → logprob: -18.375
    6. '(query' → logprob: -19.0
    7. '	queue' → logprob: -19.625
    8. '(
' → logprob: -20.25
    9. '```' → logprob: -20.25
    10. '(stack' → logprob: -21.0

Token 388: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048600658774375916
    2. ')
' → logprob: -3.048600673675537
    3. ')
' → logprob: -12.298600196838379
    4. '       ' → logprob: -12.548600196838379
    5. '   ' → logprob: -12.923600196838379
    6. ')

' → logprob: -13.798600196838379
    7. '):
' → logprob: -14.298600196838379
    8. ')`' → logprob: -15.673600196838379
    9. '):' → logprob: -15.923600196838379
    10. ')\
' → logprob: -16.048601150512695

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020211325958371162
    2. '        
' → logprob: -4.895211219787598
    3. '
' → logprob: -5.020211219787598
    4. '   ' → logprob: -6.020211219787598
    5. '<|end|>' → logprob: -6.145211219787598
    6. '  
' → logprob: -7.645211219787598
    7. '    
' → logprob: -7.770211219787598
    8. '```' → logprob: -8.770211219787598
    9. ')' → logprob: -9.770211219787598
    10. ' 
' → logprob: -10.395211219787598

Token 390: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.003031548112630844
    2. ' process' → logprob: -5.8780317306518555
    3. '       ' → logprob: -9.128031730651855
    4. '   ' → logprob: -9.253031730651855
    5. 'if' → logprob: -11.878031730651855
    6. 'for' → logprob: -11.878031730651855
    7. '	process' → logprob: -12.003031730651855
    8. '
' → logprob: -13.878031730651855
    9. ' if' → logprob: -15.003031730651855
    10. ' for' → logprob: -15.503031730651855

Token 391: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.00010342398309148848
    2. '_' → logprob: -9.375102996826172
    3. '_node' → logprob: -11.750102996826172
    4. '_ne' → logprob: -12.875102996826172
    5. '```' → logprob: -12.875102996826172
    6. '_neighbor' → logprob: -13.125102996826172
    7. '_nodes' → logprob: -13.625102996826172
    8. 'neighbors' → logprob: -13.750102996826172
    9. '_n' → logprob: -15.625102996826172
    10. ' _' → logprob: -15.625102996826172

Token 392: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.3596853831550106e-05
    2. '(' → logprob: -9.875053405761719
    3. ' (' → logprob: -13.125053405761719
    4. '(
' → logprob: -16.25005340576172
    5. 'v' → logprob: -19.12505340576172
    6. '   ' → logprob: -20.00005340576172
    7. ' ' → logprob: -20.37505340576172
    8. '(

' → logprob: -20.87505340576172
    9. '(V' → logprob: -21.37505340576172
    10. '(u' → logprob: -21.62505340576172

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014823723176959902
    2. ' ,' → logprob: -8.875147819519043
    3. ',
' → logprob: -12.000147819519043
    4. '```' → logprob: -13.750147819519043
    5. '   ' → logprob: -14.250147819519043
    6. ')' → logprob: -15.250147819519043
    7. ',
' → logprob: -16.62514877319336
    8. ',

' → logprob: -17.12514877319336
    9. '`,' → logprob: -17.12514877319336
    10. '),' → logprob: -17.50014877319336

Token 394: ' w' (ID: 286)
  Prédit: 'ws'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ws' → logprob: -0.029881002381443977
    2. ' w' → logprob: -3.529881000518799
    3. 'w' → logprob: -9.404881477355957
    4. ' ws' → logprob: -10.029881477355957
    5. '   ' → logprob: -13.404881477355957
    6. '```' → logprob: -13.904881477355957
    7. '	ws' → logprob: -14.529881477355957
    8. 'wsz' → logprob: -15.029881477355957
    9. ' ' → logprob: -15.154881477355957
    10. 'WS' → logprob: -16.27988052368164

Token 395: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003098927205428481
    2. ',' → logprob: -5.878098964691162
    3. 'um' → logprob: -8.503098487854004
    4. ',sum' → logprob: -9.503098487854004
    5. ' ,' → logprob: -12.378098487854004
    6. ' sum' → logprob: -12.878098487854004
    7. 'summ' → logprob: -13.003098487854004
    8. '   ' → logprob: -13.753098487854004
    9. 'psum' → logprob: -13.753098487854004
    10. ',s' → logprob: -14.003098487854004

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. ' ,' → logprob: -11.250018119812012
    3. ',
' → logprob: -13.000018119812012
    4. ')' → logprob: -13.625018119812012
    5. '```' → logprob: -14.500018119812012
    6. '`,' → logprob: -14.750018119812012
    7. '   ' → logprob: -14.875018119812012
    8. '(ne' → logprob: -16.000019073486328
    9. 'neighbor' → logprob: -16.375019073486328
    10. '(' → logprob: -16.500019073486328

Token 397: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.47408103942871094
    2. 'neighbor' → logprob: -0.9740810394287109
    3. '_neighbor' → logprob: -13.974081039428711
    4. '```' → logprob: -14.099081039428711
    5. '   ' → logprob: -14.474081039428711
    6. '    ' → logprob: -14.599081039428711
    7. ' neighbour' → logprob: -14.849081039428711
    8. 'ne' → logprob: -15.349081039428711
    9. ' neighboring' → logprob: -15.974081039428711
    10. '        ' → logprob: -16.22408103942871

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ',
' → logprob: -13.875029563903809
    4. '   ' → logprob: -14.875029563903809
    5. 'visited' → logprob: -15.625029563903809
    6. '```' → logprob: -16.250030517578125
    7. ',color' → logprob: -16.500030517578125
    8. ')' → logprob: -16.750030517578125
    9. 'color' → logprob: -17.125030517578125
    10. '‌,' → logprob: -17.500030517578125

Token 399: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.002637249417603016
    2. ' visited' → logprob: -6.0026373863220215
    3. 'color' → logprob: -8.752636909484863
    4. ' color' → logprob: -12.752636909484863
    5. '   ' → logprob: -15.377636909484863
    6. 'visit' → logprob: -16.12763786315918
    7. 'neighbor' → logprob: -16.37763786315918
    8. '
' → logprob: -16.62763786315918
    9. 'v' → logprob: -16.87763786315918
    10. ' ' → logprob: -17.37763786315918

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004861684050410986
    2. ',color' → logprob: -5.754861831665039
    3. ' ,' → logprob: -6.879861831665039
    4. ' color' → logprob: -7.879861831665039
    5. 'color' → logprob: -8.379861831665039
    6. '   ' → logprob: -10.504861831665039
    7. '       ' → logprob: -11.754861831665039
    8. ')' → logprob: -12.504861831665039
    9. ',
' → logprob: -12.754861831665039
    10. '```' → logprob: -14.129861831665039

Token 401: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.09650371968746185
    2. 'queue' → logprob: -2.596503734588623
    3. ' color' → logprob: -4.096503734588623
    4. ' queue' → logprob: -7.096503734588623
    5. '   ' → logprob: -14.846503257751465
    6. ' ' → logprob: -15.346503257751465
    7. '       ' → logprob: -16.09650421142578
    8. '```' → logprob: -16.09650421142578
    9. '
' → logprob: -16.97150421142578
    10. 'que' → logprob: -17.09650421142578

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005718595930375159
    2. ')' → logprob: -7.6255717277526855
    3. ' ,' → logprob: -10.250572204589844
    4. '       ' → logprob: -10.625572204589844
    5. '   ' → logprob: -11.000572204589844
    6. ',
' → logprob: -12.875572204589844
    7. ')
' → logprob: -13.500572204589844
    8. '(queue' → logprob: -13.750572204589844
    9. 'queue' → logprob: -13.875572204589844
    10. ' queue' → logprob: -14.250572204589844

Token 403: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.01817382499575615
    2. ' queue' → logprob: -4.018173694610596
    3. 'neighbor' → logprob: -10.768174171447754
    4. ' neighbor' → logprob: -13.643174171447754
    5. ')' → logprob: -14.518174171447754
    6. '	queue' → logprob: -14.893174171447754
    7. '(queue' → logprob: -15.393174171447754
    8. '
' → logprob: -16.018173217773438
    9. 'que' → logprob: -16.018173217773438
    10. ' ' → logprob: -16.268173217773438

Token 404: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001307142956648022
    2. ')
' → logprob: -9.000130653381348
    3. ')

' → logprob: -13.125130653381348
    4. '<|end|>' → logprob: -13.250130653381348
    5. '       ' → logprob: -13.750130653381348
    6. '   ' → logprob: -13.875130653381348
    7. ')return' → logprob: -14.750130653381348
    8. ' )' → logprob: -14.875130653381348
    9. ')#' → logprob: -16.125131607055664
    10. 'def' → logprob: -16.125131607055664

Token 405: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006507210782729089
    2. '<|end|>' → logprob: -8.250650405883789
    3. '```' → logprob: -9.250650405883789
    4. '
' → logprob: -9.375650405883789
    5. '\' → logprob: -9.750650405883789
    6. ' def' → logprob: -10.375650405883789
    7. ' ' → logprob: -10.375650405883789
    8. 'ndef' → logprob: -11.250650405883789
    9. '   ' → logprob: -11.375650405883789
    10. '    
' → logprob: -11.500650405883789

Token 406: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.04955415800213814
    2. ' queue' → logprob: -3.0495541095733643
    3. 'def' → logprob: -7.049554347991943
    4. '(queue' → logprob: -10.049553871154785
    5. '```' → logprob: -11.049553871154785
    6. '	queue' → logprob: -11.424553871154785
    7. 'que' → logprob: -11.924553871154785
    8. 'code' → logprob: -12.174553871154785
    9. '
' → logprob: -12.674553871154785
    10. ' def' → logprob: -13.174553871154785

Token 407: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -2.451116051815916e-05
    2. '_' → logprob: -10.875024795532227
    3. '_EMPTY' → logprob: -13.375024795532227
    4. '_full' → logprob: -14.875024795532227
    5. '_is' → logprob: -15.125024795532227
    6. '_end' → logprob: -15.500024795532227
    7. 'Empty' → logprob: -15.625024795532227
    8. '_emp' → logprob: -15.625024795532227
    9. ')_' → logprob: -15.750024795532227
    10. '_free' → logprob: -15.875024795532227

Token 408: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -14.875021934509277
    4. '(q' → logprob: -16.625022888183594
    5. '(
' → logprob: -17.125022888183594
    6. '(stack' → logprob: -17.250022888183594
    7. '(query' → logprob: -17.375022888183594
    8. 'queue' → logprob: -18.625022888183594
    9. '	queue' → logprob: -19.000022888183594
    10. '```' → logprob: -19.125022888183594

Token 409: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026119841262698174
    2. '):
' → logprob: -4.026119709014893
    3. ')' → logprob: -5.026119709014893
    4. '():' → logprob: -7.151119709014893
    5. '()' → logprob: -7.526119709014893
    6. '():
' → logprob: -10.40112018585205
    7. '()):
' → logprob: -11.52612018585205
    8. '):

' → logprob: -12.02612018585205
    9. ' ):' → logprob: -13.27612018585205
    10. '())' → logprob: -13.77612018585205

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30663153529167175
    2. 'return' → logprob: -1.8066315650939941
    3. ' return' → logprob: -2.306631565093994
    4. '	return' → logprob: -9.056631088256836
    5. 'len' → logprob: -9.681631088256836
    6. ' not' → logprob: -10.431631088256836
    7. 'not' → logprob: -10.681631088256836
    8. ' ' → logprob: -11.431631088256836
    9. '  ' → logprob: -11.556631088256836
    10. '    ' → logprob: -11.931631088256836

Token 411: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06407606601715088
    2. ' return' → logprob: -2.8140759468078613
    3. '   ' → logprob: -6.314075946807861
    4. 'len' → logprob: -8.31407642364502
    5. 'not' → logprob: -10.31407642364502
    6. ' not' → logprob: -12.18907642364502
    7. '	return' → logprob: -12.68907642364502
    8. '{return' → logprob: -12.68907642364502
    9. ' len' → logprob: -13.18907642364502
    10. 'def' → logprob: -13.31407642364502

Token 412: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031881670001894236
    2. 'not' → logprob: -5.753188133239746
    3. ' len' → logprob: -12.003188133239746
    4. ' not' → logprob: -12.503188133239746
    5. '(len' → logprob: -14.253188133239746
    6. '   ' → logprob: -17.003189086914062
    7. '[len' → logprob: -18.253189086914062
    8. '  ' → logprob: -19.628189086914062
    9. '	len' → logprob: -19.628189086914062
    10. '!' → logprob: -19.878189086914062

Token 413: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -4.36574100604048e-06
    2. 'queue' → logprob: -12.500004768371582
    3. '(' → logprob: -14.750004768371582
    4. ' queue' → logprob: -16.625003814697266
    5. '	queue' → logprob: -18.625003814697266
    6. ' (' → logprob: -18.875003814697266
    7. '(query' → logprob: -20.375003814697266
    8. '_queue' → logprob: -20.750003814697266
    9. 'Queue' → logprob: -20.875003814697266
    10. '(stack' → logprob: -21.125003814697266

Token 414: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000915039679966867
    2. ')==' → logprob: -7.000915050506592
    3. '(queue' → logprob: -13.375914573669434
    4. '==' → logprob: -13.875914573669434
    5. ' )' → logprob: -14.500914573669434
    6. 'queue' → logprob: -16.00091552734375
    7. ' ==' → logprob: -16.37591552734375
    8. '.queue' → logprob: -16.87591552734375
    9. ')<=' → logprob: -17.12591552734375
    10. '[' → logprob: -17.50091552734375

Token 415: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029872432351112366
    2. ' ==' → logprob: -3.654872417449951
    3. '()' → logprob: -6.404872417449951
    4. '()==' → logprob: -6.529872417449951
    5. ')' → logprob: -8.15487289428711
    6. '=' → logprob: -9.52987289428711
    7. ')==' → logprob: -9.77987289428711
    8. '[]' → logprob: -11.15487289428711
    9. '===' → logprob: -11.77987289428711
    10. '```' → logprob: -12.15487289428711

Token 416: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.000019073486328
    4. ' ' → logprob: -18.000019073486328
    5. '```' → logprob: -18.125019073486328
    6. '	' → logprob: -18.875019073486328
    7. '۰' → logprob: -19.125019073486328
    8. '  ' → logprob: -19.625019073486328
    9. '    ' → logprob: -20.625019073486328
    10. '`' → logprob: -20.750019073486328

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'queue' → logprob: -19.250001907348633
    4. '۰' → logprob: -19.625001907348633
    5. '```' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.125001907348633
    7. 'zero' → logprob: -20.375001907348633
    8. '０' → logprob: -20.500001907348633
    9. '[]' → logprob: -21.250001907348633
    10. '00' → logprob: -21.500001907348633

Token 418: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050833817571401596
    2. 'if' → logprob: -3.0508337020874023
    3. 'n' → logprob: -6.175833702087402
    4. '```' → logprob: -9.175833702087402
    5. 'print' → logprob: -10.175833702087402
    6. '#' → logprob: -11.175833702087402
    7. ' if' → logprob: -13.175833702087402
    8. 'for' → logprob: -13.175833702087402
    9. 'ndef' → logprob: -13.675833702087402
    10. '(n' → logprob: -13.925833702087402

Token 420: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000916935910936445
    2. ' main' → logprob: -7.000916957855225
    3. 'def' → logprob: -12.250916481018066
    4. 'read' → logprob: -14.750916481018066
    5. 'solve' → logprob: -16.000917434692383
    6. 'run' → logprob: -17.250917434692383
    7. 'dfs' → logprob: -18.500917434692383
    8. 'input' → logprob: -18.500917434692383
    9. '_main' → logprob: -18.625917434692383
    10. 'if' → logprob: -18.625917434692383

Token 421: '_colors' (ID: 79137)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.2641964554786682
    2. '_colors' → logprob: -1.8891963958740234
    3. '_' → logprob: -2.8891963958740234
    4. '(' → logprob: -4.139196395874023
    5. '()' → logprob: -5.889196395874023
    6. '("_' → logprob: -6.389196395874023
    7. '(_' → logprob: -6.389196395874023
    8. '_(' → logprob: -6.389196395874023
    9. 'color' → logprob: -8.264196395874023
    10. '('_' → logprob: -8.639196395874023

Token 422: '(n' (ID: 2406)
  Prédit: '(color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.012496931478381157
    2. '():' → logprob: -4.6374969482421875
    3. '():
' → logprob: -6.0124969482421875
    4. '(' → logprob: -9.137496948242188
    5. ' (' → logprob: -9.387496948242188
    6. '()' → logprob: -9.387496948242188
    7. ' ():' → logprob: -12.262496948242188
    8. '(colors' → logprob: -12.887496948242188
    9. ' ()' → logprob: -13.512496948242188
    10. '(Color' → logprob: -14.012496948242188

Token 423: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3140091001987457
    2. '):
' → logprob: -1.3140090703964233
    3. ',' → logprob: -7.689009189605713
    4. ')' → logprob: -8.314008712768555
    5. '):
' → logprob: -10.439008712768555
    6. '   ' → logprob: -11.814008712768555
    7. '):

' → logprob: -12.939008712768555
    8. ' ):' → logprob: -13.689008712768555
    9. ' ' → logprob: -14.439008712768555
    10. ':' → logprob: -14.439008712768555

Token 424: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.06198001280426979
    2. ' color' → logprob: -2.8119800090789795
    3. 'neighbor' → logprob: -11.561980247497559
    4. ')' → logprob: -14.186980247497559
    5. 'colors' → logprob: -14.186980247497559
    6. ' neighbor' → logprob: -14.436980247497559
    7. ' ' → logprob: -14.811980247497559
    8. '   ' → logprob: -15.811980247497559
    9. '	color' → logprob: -16.561979293823242
    10. '(color' → logprob: -16.686979293823242

Token 425: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014195947907865047
    2. '):' → logprob: -4.264195919036865
    3. '):
' → logprob: -10.514196395874023
    4. ')' → logprob: -12.639196395874023
    5. '   ' → logprob: -14.139196395874023
    6. '():
' → logprob: -14.764196395874023
    7. '):

' → logprob: -14.889196395874023
    8. 'def' → logprob: -15.514196395874023
    9. ' ):
' → logprob: -16.139196395874023
    10. ')
' → logprob: -16.264196395874023

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012190054985694587
    2. ' for' → logprob: -9.2501220703125
    3. 'for' → logprob: -10.8751220703125
    4. '
' → logprob: -12.7501220703125
    5. '```' → logprob: -13.3751220703125
    6. '	for' → logprob: -13.8751220703125
    7. 'def' → logprob: -15.0001220703125
    8. '   ' → logprob: -15.1251220703125
    9. '\' → logprob: -15.6251220703125
    10. '<|end|>' → logprob: -15.6251220703125

Token 427: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005999424960464239
    2. ' for' → logprob: -5.505999565124512
    3. '   ' → logprob: -6.255999565124512
    4. '```' → logprob: -16.130998611450195
    5. 'def' → logprob: -16.255998611450195
    6. '	for' → logprob: -18.380998611450195
    7. ' ' → logprob: -18.880998611450195
    8. 'color' → logprob: -19.505998611450195
    9. 'colors' → logprob: -19.505998611450195
    10. '``' → logprob: -20.005998611450195

Token 428: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02137260138988495
    2. ' i' → logprob: -3.8963725566864014
    3. 'v' → logprob: -7.7713727951049805
    4. 'u' → logprob: -8.39637279510498
    5. 'node' → logprob: -9.14637279510498
    6. ' node' → logprob: -10.52137279510498
    7. ' v' → logprob: -10.52137279510498
    8. ' u' → logprob: -11.64637279510498
    9. 'c' → logprob: -12.14637279510498
    10. 'x' → logprob: -12.27137279510498

Token 429: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03392103314399719
    2. 'in' → logprob: -3.408921003341675
    3. 'n' → logprob: -9.408921241760254
    4. ' ' → logprob: -9.783921241760254
    5. '(' → logprob: -10.408921241760254
    6. ',' → logprob: -10.658921241760254
    7. '1' → logprob: -10.783921241760254
    8. '   ' → logprob: -11.283921241760254
    9. 's' → logprob: -11.658921241760254
    10. 'range' → logprob: -12.033921241760254

Token 430: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011050059460103512
    2. ' range' → logprob: -4.511050224304199
    3. '1' → logprob: -13.6360502243042
    4. ' ' → logprob: -14.8860502243042
    5. 'in' → logprob: -15.1360502243042
    6. '   ' → logprob: -15.7610502243042
    7. '(range' → logprob: -16.011049270629883
    8. '  ' → logprob: -16.636049270629883
    9. ' in' → logprob: -16.636049270629883
    10. '	range' → logprob: -17.511049270629883

Token 431: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.0484450437361374e-05
    2. '1' → logprob: -10.125040054321289
    3. ' (' → logprob: -15.625040054321289
    4. ' ' → logprob: -16.37504005432129
    5. '(n' → logprob: -16.87504005432129
    6. '   ' → logprob: -17.12504005432129
    7. ',' → logprob: -18.12504005432129
    8. '(
' → logprob: -19.12504005432129
    9. 'n' → logprob: -19.87504005432129
    10. 'in' → logprob: -20.25004005432129

Token 432: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026436151936650276
    2. '):
' → logprob: -3.6514360904693604
    3. '   ' → logprob: -9.401435852050781
    4. '+' → logprob: -10.526435852050781
    5. ' ):' → logprob: -11.401435852050781
    6. ',' → logprob: -12.151435852050781
    7. ')' → logprob: -12.401435852050781
    8. '1' → logprob: -13.151435852050781
    9. '):
' → logprob: -14.151435852050781
    10. ':' → logprob: -14.526435852050781

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01977653242647648
    2. ' print' → logprob: -4.269776344299316
    3. '   ' → logprob: -5.394776344299316
    4. 'print' → logprob: -7.769776344299316
    5. ' ' → logprob: -9.144776344299316
    6. '    ' → logprob: -9.144776344299316
    7. ',' → logprob: -9.644776344299316
    8. '```' → logprob: -9.894776344299316
    9. '+' → logprob: -10.394776344299316
    10. '1' → logprob: -10.394776344299316

Token 434: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4434230327606201
    2. '   ' → logprob: -1.6934230327606201
    3. 'print' (adapté à ' print') → logprob: -1.8184230327606201
    4. '       ' → logprob: -4.568423271179199
    5. '```' → logprob: -6.818423271179199
    6. '    ' → logprob: -8.5684232711792
    7. ' if' → logprob: -9.8184232711792
    8. ' i' → logprob: -10.1934232711792
    9. ' ' → logprob: -10.1934232711792
    10. '           ' → logprob: -10.6934232711792

Token 435: '(get' (ID: 7119)
  Prédit: '(color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.23045113682746887
    2. 'color' → logprob: -1.7304511070251465
    3. '(' → logprob: -4.1054511070251465
    4. '('' → logprob: -4.8554511070251465
    5. ' color' → logprob: -5.6054511070251465
    6. '("' → logprob: -7.8554511070251465
    7. ' (' → logprob: -9.105451583862305
    8. ''' → logprob: -9.480451583862305
    9. '"' → logprob: -10.355451583862305
    10. '(
' → logprob: -10.855451583862305

Token 436: '_color' (ID: 15576)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6836657524108887
    2. '(' → logprob: -1.1836657524108887
    3. 'color' → logprob: -2.1836657524108887
    4. ' (' → logprob: -2.9336657524108887
    5. '(color' → logprob: -5.183665752410889
    6. '('' → logprob: -5.308665752410889
    7. ''' → logprob: -5.683665752410889
    8. ' color' → logprob: -5.933665752410889
    9. ' ' → logprob: -6.308665752410889
    10. 'i' → logprob: -6.308665752410889

Token 437: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0011777279432862997
    2. '(' → logprob: -7.251177787780762
    3. ' (' → logprob: -7.751177787780762
    4. '(color' → logprob: -10.751177787780762
    5. '((' → logprob: -11.251177787780762
    6. ')' → logprob: -14.001177787780762
    7. '   ' → logprob: -14.751177787780762
    8. '(
' → logprob: -14.751177787780762
    9. ')(' → logprob: -14.876177787780762
    10. ' ' → logprob: -15.001177787780762

Token 438: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2520657479763031
    2. ' +' → logprob: -1.5020657777786255
    3. ')' → logprob: -9.377065658569336
    4. '1' → logprob: -10.252065658569336
    5. '   ' → logprob: -11.877065658569336
    6. '))' → logprob: -13.002065658569336
    7. ' ' → logprob: -13.627065658569336
    8. '+
' → logprob: -13.877065658569336
    9. ',' → logprob: -14.002065658569336
    10. ')+' → logprob: -14.127065658569336

Token 439: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032889400608837605
    2. ' ' → logprob: -5.878288745880127
    3. ')' → logprob: -8.628289222717285
    4. ',' → logprob: -8.878289222717285
    5. '+' → logprob: -9.378289222717285
    6. 'color' → logprob: -10.878289222717285
    7. 'i' → logprob: -11.128289222717285
    8. ' ,' → logprob: -11.503289222717285
    9. '   ' → logprob: -11.753289222717285
    10. ' color' → logprob: -11.878289222717285

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8351892473874614e-05
    2. ')' → logprob: -10.375048637390137
    3. ',' → logprob: -11.875048637390137
    4. ' ' → logprob: -11.875048637390137
    5. '))' → logprob: -14.000048637390137
    6. '),' → logprob: -14.000048637390137
    7. '```' → logprob: -15.000048637390137
    8. 'i' → logprob: -15.375048637390137
    9. 'color' → logprob: -15.500048637390137
    10. '   ' → logprob: -15.875048637390137

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22454522550106049
    2. '))' → logprob: -1.7245452404022217
    3. ')' → logprob: -4.349545001983643
    4. ',color' → logprob: -4.724545001983643
    5. '),' → logprob: -7.724545001983643
    6. 'color' → logprob: -8.2245454788208
    7. '(color' → logprob: -8.9745454788208
    8. ' ,' → logprob: -9.2245454788208
    9. '   ' → logprob: -9.7245454788208
    10. ' color' → logprob: -10.5995454788208

Token 442: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.04858827963471413
    2. ' color' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.798588752746582
    4. '   ' → logprob: -15.423588752746582
    5. '(color' → logprob: -16.298587799072266
    6. '	color' → logprob: -16.423587799072266
    7. 'n' → logprob: -17.173587799072266
    8. '`' → logprob: -17.548587799072266
    9. '=color' → logprob: -17.673587799072266
    10. ')' → logprob: -17.798587799072266

Token 443: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06224047392606735
    2. ')' → logprob: -2.8122403621673584
    3. '),' → logprob: -8.312240600585938
    4. '))
' → logprob: -11.562240600585938
    5. ',' → logprob: -11.687240600585938
    6. ')))' → logprob: -12.687240600585938
    7. '   ' → logprob: -13.062240600585938
    8. ' ))' → logprob: -13.687240600585938
    9. '()))' → logprob: -14.312240600585938
    10. ')
' → logprob: -14.437240600585938

Token 444: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009151240810751915
    2. '
' → logprob: -5.009151458740234
    3. ')' → logprob: -6.384151458740234
    4. '```' → logprob: -8.009151458740234
    5. '<|end|>' → logprob: -8.509151458740234
    6. ' def' → logprob: -9.884151458740234
    7. ' 
' → logprob: -10.509151458740234
    8. '

' → logprob: -10.634151458740234
    9. '  
' → logprob: -10.884151458740234
    10. '(' → logprob: -10.884151458740234

Token 445: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.005510026589035988
    2. ' get' → logprob: -5.255509853363037
    3. 'def' → logprob: -8.505510330200195
    4. 'main' → logprob: -10.255510330200195
    5. 'read' → logprob: -10.505510330200195
    6. ' main' → logprob: -12.630510330200195
    7. 'run' → logprob: -13.880510330200195
    8. ' ' → logprob: -14.130510330200195
    9. '_get' → logprob: -14.380510330200195
    10. 'print' → logprob: -14.505510330200195

Token 446: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -4.842555426876061e-06
    2. 'color' → logprob: -12.375004768371582
    3. '_colors' → logprob: -14.875004768371582
    4. '_code' → logprob: -16.7500057220459
    5. '_' → logprob: -17.0000057220459
    6. 'def' → logprob: -17.2500057220459
    7. '_user' → logprob: -17.5000057220459
    8. '_col' → logprob: -17.5000057220459
    9. '_COLOR' → logprob: -18.0000057220459
    10. '_c' → logprob: -18.1250057220459

Token 447: '(i' (ID: 3649)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.15540845692157745
    2. '(' → logprob: -2.6554083824157715
    3. '(i' → logprob: -2.6554083824157715
    4. '(k' → logprob: -6.1554083824157715
    5. '(user' → logprob: -7.0304083824157715
    6. '(n' → logprob: -8.90540885925293
    7. '(key' → logprob: -9.78040885925293
    8. '(token' → logprob: -10.03040885925293
    9. 'def' → logprob: -11.03040885925293
    10. '(index' → logprob: -11.28040885925293

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -12.000008583068848
    3. ',color' → logprob: -13.500008583068848
    4. ',
' → logprob: -14.875008583068848
    5. ',i' → logprob: -14.875008583068848
    6. '```' → logprob: -16.75000762939453
    7. '   ' → logprob: -17.00000762939453
    8. ',n' → logprob: -17.12500762939453
    9. ',k' → logprob: -17.25000762939453
    10. ')' → logprob: -17.87500762939453

Token 449: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.06196768581867218
    2. ' color' → logprob: -2.811967611312866
    3. '(color' → logprob: -17.686967849731445
    4. '	color' → logprob: -17.936967849731445
    5. 'd' → logprob: -18.436967849731445
    6. ' ' → logprob: -18.561967849731445
    7. 'c' → logprob: -18.811967849731445
    8. '[color' → logprob: -19.186967849731445
    9. '=color' → logprob: -19.436967849731445
    10. '   ' → logprob: -20.311967849731445

Token 450: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3872247040271759
    2. '):' → logprob: -1.1372246742248535
    3. ')' → logprob: -8.262225151062012
    4. '):

' → logprob: -9.762225151062012
    5. ',' → logprob: -11.137225151062012
    6. '(i' → logprob: -11.887225151062012
    7. '):
' → logprob: -12.137225151062012
    8. '   ' → logprob: -13.262225151062012
    9. '(k' → logprob: -13.262225151062012
    10. '(' → logprob: -13.387225151062012

Token 451: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5629727244377136
    2. ' return' → logprob: -0.9379727244377136
    3. ''' → logprob: -3.8129727840423584
    4. '   ' → logprob: -4.687972545623779
    5. '"' → logprob: -5.937972545623779
    6. ' '' → logprob: -6.187972545623779
    7. ' str' → logprob: -6.437972545623779
    8. 'str' → logprob: -7.562972545623779
    9. ' "' → logprob: -8.437973022460938
    10. 'if' → logprob: -8.437973022460938

Token 452: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18278290331363678
    2. 'str' → logprob: -1.8077828884124756
    3. ''' → logprob: -6.807783126831055
    4. 'color' → logprob: -6.807783126831055
    5. ' return' → logprob: -7.682783126831055
    6. ' str' → logprob: -8.432783126831055
    7. '   ' → logprob: -9.682783126831055
    8. 'def' → logprob: -10.307783126831055
    9. 'if' → logprob: -11.182783126831055
    10. '`' → logprob: -11.307783126831055

Token 453: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0733109712600708
    2. 'str' → logprob: -2.6983108520507812
    3. ''' → logprob: -6.198310852050781
    4. '"' → logprob: -7.698310852050781
    5. '1' → logprob: -7.698310852050781
    6. '0' → logprob: -8.323310852050781
    7. ' color' → logprob: -9.323310852050781
    8. '(color' → logprob: -9.698310852050781
    9. '(str' → logprob: -11.323310852050781
    10. ' str' → logprob: -11.823310852050781

Token 454: '[i' (ID: 1768)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0011760591296479106
    2. '[i' → logprob: -6.751175880432129
    3. 'get' → logprob: -12.126175880432129
    4. '.' → logprob: -15.876175880432129
    5. '.setdefault' → logprob: -15.876175880432129
    6. '[u' → logprob: -16.126176834106445
    7. '[get' → logprob: -17.251176834106445
    8. 'i' → logprob: -18.376176834106445
    9. '{}.' → logprob: -19.126176834106445
    10. '[int' → logprob: -19.126176834106445

Token 455: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.6060808522743173e-05
    2. '])' → logprob: -11.625025749206543
    3. ')]' → logprob: -12.125025749206543
    4. ')' → logprob: -12.500025749206543
    5. ']%' → logprob: -12.875025749206543
    6. ' ]' → logprob: -13.000025749206543
    7. ']
' → logprob: -14.000025749206543
    8. ' if' → logprob: -14.500025749206543
    9. 'if' → logprob: -14.750025749206543
    10. ']()' → logprob: -15.375025749206543

Token 456: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002039987128227949
    2. 'n' → logprob: -6.502039909362793
    3. 'if' → logprob: -8.502039909362793
    4. '<|end|>' → logprob: -8.752039909362793
    5. '```' → logprob: -9.252039909362793
    6. '
' → logprob: -9.877039909362793
    7. 'ndef' → logprob: -11.377039909362793
    8. '#' → logprob: -11.627039909362793
    9. '  
' → logprob: -13.127039909362793
    10. '(n' → logprob: -14.002039909362793

Token 457: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2855963110923767
    2. '__' → logprob: -1.7855963706970215
    3. 'def' → logprob: -2.7855963706970215
    4. 'if' → logprob: -4.1605963706970215
    5. ' main' → logprob: -6.2855963706970215
    6. 'read' → logprob: -6.6605963706970215
    7. ' __' → logprob: -8.660595893859863
    8. 'run' → logprob: -9.785595893859863
    9. '___' → logprob: -11.160595893859863
    10. '_main' → logprob: -11.285595893859863

Token 458: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003054301778320223
    2. '():
' → logprob: -8.12530517578125
    3. '()' → logprob: -12.25030517578125
    4. ' ():' → logprob: -12.75030517578125
    5. '(' → logprob: -14.37530517578125
    6. 'def' → logprob: -15.25030517578125
    7. '():
' → logprob: -15.50030517578125
    8. '()>' → logprob: -15.75030517578125
    9. ':' → logprob: -16.12530517578125
    10. '_' → logprob: -16.25030517578125

Token 459: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9052228927612305
    2. ' n' → logprob: -0.9052228927612305
    3. '   ' → logprob: -1.6552228927612305
    4. '```' → logprob: -10.53022289276123
    5. '	n' → logprob: -11.53022289276123
    6. '
' → logprob: -11.65522289276123
    7. '    
' → logprob: -14.90522289276123
    8. ' ' → logprob: -14.90522289276123
    9. '_n' → logprob: -15.53022289276123
    10. '  ' → logprob: -15.65522289276123

Token 460: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002500152215361595
    2. ' n' → logprob: -6.002500057220459
    3. '   ' → logprob: -10.627500534057617
    4. '
' → logprob: -16.002500534057617
    5. '	n' → logprob: -16.877500534057617
    6. '```' → logprob: -17.002500534057617
    7. ' ' → logprob: -18.252500534057617
    8. '_n' → logprob: -19.252500534057617
    9. ' ' → logprob: -20.002500534057617
    10. '    
' → logprob: -20.627500534057617

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02327040582895279
    2. '=' → logprob: -3.77327036857605
    3. '   ' → logprob: -10.648270606994629
    4. '()' → logprob: -15.023270606994629
    5. '    ' → logprob: -15.398270606994629
    6. ')' → logprob: -16.148269653320312
    7. ' ' → logprob: -16.273269653320312
    8. ' =
' → logprob: -16.523269653320312
    9. '=int' → logprob: -16.648269653320312
    10. '	' → logprob: -16.898269653320312

Token 462: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12692968547344208
    2. ' read' → logprob: -2.126929759979248
    3. 'int' → logprob: -13.62692928314209
    4. ' int' → logprob: -15.00192928314209
    5. '	read' → logprob: -16.876930236816406
    6. '   ' → logprob: -17.126930236816406
    7. '(read' → logprob: -18.001930236816406
    8. '  ' → logprob: -19.251930236816406
    9. ' ' → logprob: -19.626930236816406
    10. '_read' → logprob: -20.001930236816406

Token 463: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0018752054311335087
    2. '_' → logprob: -6.376875400543213
    3. 'n' → logprob: -9.376874923706055
    4. '()' → logprob: -9.501874923706055
    5. '(' → logprob: -11.876874923706055
    6. ')' → logprob: -13.251874923706055
    7. ')_' → logprob: -13.626874923706055
    8. '```' → logprob: -14.251874923706055
    9. ' _' → logprob: -14.501874923706055
    10. '(n' → logprob: -14.626874923706055

Token 464: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4210987389087677
    2. '<|end|>' → logprob: -1.7960987091064453
    3. '()' → logprob: -2.6710987091064453
    4. '   ' → logprob: -2.9210987091064453
    5. '()
' → logprob: -3.9210987091064453
    6. ')' → logprob: -4.421098709106445
    7. '<|end|>' → logprob: -4.546098709106445
    8. '(n' → logprob: -5.921098709106445
    9. '```' → logprob: -5.921098709106445
    10. 'def' → logprob: -6.046098709106445

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014148113317787647
    2. 'neighbor' → logprob: -4.389148235321045
    3. '
' → logprob: -7.514148235321045
    4. ' neighbor' → logprob: -7.639148235321045
    5. '```' → logprob: -8.514147758483887
    6. '    
' → logprob: -8.639147758483887
    7. '<|end|>' → logprob: -8.764147758483887
    8. '  ' → logprob: -10.764147758483887
    9. 'neighbors' → logprob: -11.514147758483887
    10. 'n' → logprob: -12.014147758483887

Token 466: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' (adapté à ' neighbor') → logprob: -0.00043555660522542894
    2. ' neighbor' → logprob: -7.7504353523254395
    3. 'neighbors' → logprob: -12.625435829162598
    4. '   ' → logprob: -13.500435829162598
    5. '```' → logprob: -17.00043487548828
    6. 'n' → logprob: -17.62543487548828
    7. '
' → logprob: -18.00043487548828
    8. 'Neighbor' → logprob: -18.50043487548828
    9. ' neighbors' → logprob: -18.50043487548828
    10. '    
' → logprob: -18.75043487548828

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3870121240615845
    2. ' =' → logprob: -1.1370121240615845
    3. ',' → logprob: -8.887012481689453
    4. ')' → logprob: -13.387012481689453
    5. '   ' → logprob: -14.012012481689453
    6. 's' → logprob: -15.512012481689453
    7. ' ' → logprob: -16.887012481689453
    8. '=
' → logprob: -17.012012481689453
    9. ' =
' → logprob: -17.012012481689453
    10. ')=' → logprob: -17.262012481689453

Token 468: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.061969365924596786
    2. ' build' → logprob: -2.81196928024292
    3. '(build' → logprob: -13.811969757080078
    4. '   ' → logprob: -14.436969757080078
    5. '	build' → logprob: -16.061969757080078
    6. '_build' → logprob: -17.186969757080078
    7. '.build' → logprob: -17.686969757080078
    8. ' ' → logprob: -18.311969757080078
    9. 'Build' → logprob: -18.436969757080078
    10. 'building' → logprob: -18.436969757080078

Token 469: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -6.813969957875088e-05
    2. 'neighbors' → logprob: -9.750067710876465
    3. '(ne' → logprob: -11.750067710876465
    4. '_neighbor' → logprob: -14.000067710876465
    5. '_ne' → logprob: -14.375067710876465
    6. 'neighbor' → logprob: -15.750067710876465
    7. '(n' → logprob: -16.00006866455078
    8. 's' → logprob: -16.62506866455078
    9. '```' → logprob: -16.75006866455078
    10. '_n' → logprob: -17.00006866455078

Token 470: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.743758760625497e-05
    2. '(' → logprob: -9.500077247619629
    3. ' (' → logprob: -13.250077247619629
    4. '   ' → logprob: -15.000077247619629
    5. 'n' → logprob: -15.500077247619629
    6. '```' → logprob: -16.000078201293945
    7. ',' → logprob: -16.125078201293945
    8. 'def' → logprob: -17.375078201293945
    9. '
' → logprob: -17.875078201293945
    10. ')' → logprob: -18.000078201293945

Token 471: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001995131839066744
    2. ')
' → logprob: -6.251995086669922
    3. '   ' → logprob: -9.626995086669922
    4. ')
' → logprob: -15.501995086669922
    5. ' )' → logprob: -16.376995086669922
    6. '()' → logprob: -16.376995086669922
    7. '())' → logprob: -16.501995086669922
    8. '),' → logprob: -16.751995086669922
    9. ')n' → logprob: -17.001995086669922
    10. ')

' → logprob: -17.126995086669922

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01553697045892477
    2. '
' → logprob: -4.890536785125732
    3. ' color' → logprob: -5.515536785125732
    4. 'color' → logprob: -5.640536785125732
    5. '    
' → logprob: -8.14053726196289
    6. '```' → logprob: -11.14053726196289
    7. '	color' → logprob: -12.26553726196289
    8. '<|end|>' → logprob: -12.64053726196289
    9. '   ' → logprob: -12.89053726196289
    10. ' 
' → logprob: -13.39053726196289

Token 473: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -2.4987974029500037e-05
    2. '   ' → logprob: -11.250024795532227
    3. ' color' → logprob: -11.500024795532227
    4. 'visited' → logprob: -13.500024795532227
    5. '
' → logprob: -14.625024795532227
    6. '```' → logprob: -18.000024795532227
    7. 'queue' → logprob: -18.250024795532227
    8. ' ' → logprob: -18.375024795532227
    9. 'colors' → logprob: -18.750024795532227
    10. '    
' → logprob: -19.125024795532227

Token 474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023537199944257736
    2. '=' → logprob: -3.7735371589660645
    3. ',' → logprob: -8.148537635803223
    4. '   ' → logprob: -13.023537635803223
    5. '  ' → logprob: -15.898537635803223
    6. ' ' → logprob: -16.023536682128906
    7. ' ,' → logprob: -16.773536682128906
    8. '    ' → logprob: -17.648536682128906
    9. '```' → logprob: -17.898536682128906
    10. ' =
' → logprob: -18.148536682128906

Token 475: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.615255839889869e-05
    2. ' init' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.00009536743164
    4. '(init' → logprob: -18.75009536743164
    5. '	init' → logprob: -20.37509536743164
    6. 'initialize' → logprob: -21.12509536743164
    7. ' ' → logprob: -21.62509536743164
    8. '  ' → logprob: -21.75009536743164
    9. '    ' → logprob: -21.87509536743164
    10. '{' → logprob: -22.00009536743164

Token 476: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.625001907348633
    3. '_colors' → logprob: -14.375001907348633
    4. 'color' → logprob: -15.750001907348633
    5. '_code' → logprob: -17.250001907348633
    6. '_col' → logprob: -17.750001907348633
    7. '\' → logprob: -18.625001907348633
    8. ' _' → logprob: -18.750001907348633
    9. '```' → logprob: -19.125001907348633
    10. '_COLOR' → logprob: -19.500001907348633

Token 477: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005544631858356297
    2. '
' → logprob: -7.62555456161499
    3. 'visited' → logprob: -10.375554084777832
    4. '    
' → logprob: -10.750554084777832
    5. '<|end|>' → logprob: -11.625554084777832
    6. ',' → logprob: -13.125554084777832
    7. ' visited' → logprob: -14.125554084777832
    8. '```' → logprob: -14.625554084777832
    9. '(' → logprob: -14.750554084777832
    10. '       ' → logprob: -15.500554084777832

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006092322990298271
    2. 'visited' → logprob: -5.131092548370361
    3. ' visited' → logprob: -8.756092071533203
    4. '```' → logprob: -12.131092071533203
    5. '       ' → logprob: -15.131092071533203
    6. '   ' → logprob: -15.756092071533203
    7. '
' → logprob: -16.131092071533203
    8. '  ' → logprob: -16.256092071533203
    9. 'Visited' → logprob: -16.256092071533203
    10. '    ' → logprob: -17.256092071533203

Token 479: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0012349952012300491
    2. '   ' → logprob: -7.126235008239746
    3. ' visited' → logprob: -7.751235008239746
    4. ' ' → logprob: -16.00123405456543
    5. '  ' → logprob: -16.37623405456543
    6. '```' → logprob: -16.75123405456543
    7. '
' → logprob: -17.37623405456543
    8. 'visit' → logprob: -17.87623405456543
    9. '       ' → logprob: -18.12623405456543
    10. '    ' → logprob: -18.62623405456543

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4069880545139313
    2. '=' → logprob: -1.1569880247116089
    3. '.add' → logprob: -4.281988143920898
    4. '<|end|>' → logprob: -5.656988143920898
    5. ',' → logprob: -6.656988143920898
    6. '.' → logprob: -6.906988143920898
    7. '.setdefault' → logprob: -10.156988143920898
    8. ')' → logprob: -10.156988143920898
    9. '=set' → logprob: -10.281988143920898
    10. '<|end|>' → logprob: -10.406988143920898

Token 481: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.4768819808959961
    2. 'set' → logprob: -0.9768819808959961
    3. '{' → logprob: -5.976881980895996
    4. ' set' → logprob: -8.476881980895996
    5. ' init' → logprob: -9.851881980895996
    6. ' {' → logprob: -12.976881980895996
    7. '   ' → logprob: -14.226881980895996
    8. 'mark' → logprob: -16.476882934570312
    9. ' ' → logprob: -16.601882934570312
    10. '  ' → logprob: -16.851882934570312

Token 482: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016674461076036096
    2. 'visited' → logprob: -6.626667499542236
    3. 'set' → logprob: -8.626667022705078
    4. 'Visited' → logprob: -8.876667022705078
    5. '(set' → logprob: -11.626667022705078
    6. '(' → logprob: -12.376667022705078
    7. '{' → logprob: -13.126667022705078
    8. '([' → logprob: -13.876667022705078
    9. '```' → logprob: -14.001667022705078
    10. '_set' → logprob: -14.376667022705078

Token 483: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00026169343618676066
    2. 'set' → logprob: -8.250261306762695
    3. 'read' → logprob: -16.000261306762695
    4. ' visited' → logprob: -16.250261306762695
    5. 'init' → logprob: -16.875261306762695
    6. '(' → logprob: -17.125261306762695
    7. '{' → logprob: -17.250261306762695
    8. 'used' → logprob: -18.625261306762695
    9. 'Visited' → logprob: -18.625261306762695
    10. 'seen' → logprob: -18.750261306762695

Token 484: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004601841792464256
    2. '
' → logprob: -5.504601955413818
    3. '	queue' → logprob: -7.879601955413818
    4. '    
' → logprob: -9.37960147857666
    5. '	
' → logprob: -10.87960147857666
    6. '```' → logprob: -10.87960147857666
    7. 'queue' → logprob: -11.25460147857666
    8. '(queue' → logprob: -12.25460147857666
    9. '
' → logprob: -14.25460147857666
    10. '<|end|>' → logprob: -14.50460147857666

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026479519437998533
    2. 'queue' → logprob: -6.502647876739502
    3. '	queue' → logprob: -7.002647876739502
    4. ' queue' → logprob: -8.75264835357666
    5. '
' → logprob: -9.87764835357666
    6. '```' → logprob: -10.75264835357666
    7. '(queue' → logprob: -13.00264835357666
    8. '       ' → logprob: -14.25264835357666
    9. '   ' → logprob: -14.50264835357666
    10. '``' → logprob: -15.50264835357666

Token 486: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.050059325993061066
    2. '   ' → logprob: -3.0500593185424805
    3. ' queue' → logprob: -6.5500593185424805
    4. '	queue' → logprob: -10.30005931854248
    5. '```' → logprob: -12.80005931854248
    6. '
' → logprob: -13.17505931854248
    7. ' ' → logprob: -13.67505931854248
    8. '  ' → logprob: -14.17505931854248
    9. '       ' → logprob: -15.42505931854248
    10. '(queue' → logprob: -15.42505931854248

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763847827911377
    2. '=' → logprob: -0.8263847827911377
    3. '()' → logprob: -7.826384544372559
    4. '(' → logprob: -10.826384544372559
    5. '   ' → logprob: -11.201384544372559
    6. '	' → logprob: -12.951384544372559
    7. '.append' → logprob: -13.451384544372559
    8. ')' → logprob: -13.576384544372559
    9. ' ()' → logprob: -14.076384544372559
    10. ',' → logprob: -14.201384544372559

Token 488: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.023251768201589584
    2. ' init' → logprob: -3.77325177192688
    3. '(init' → logprob: -12.1482515335083
    4. '   ' → logprob: -14.8982515335083
    5. '_init' → logprob: -15.1482515335083
    6. '	init' → logprob: -15.3982515335083
    7. '.init' → logprob: -16.523252487182617
    8. ')init' → logprob: -17.648252487182617
    9. '```' → logprob: -18.023252487182617
    10. ' ' → logprob: -18.148252487182617

Token 489: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -12.75000286102295
    3. '_QUEUE' → logprob: -17.375003814697266
    4. '_enqueue' → logprob: -18.750003814697266
    5. '```' → logprob: -19.000003814697266
    6. 'queue' → logprob: -20.375003814697266
    7. '_stack' → logprob: -20.375003814697266
    8. '(queue' → logprob: -20.500003814697266
    9. 'Queue' → logprob: -20.625003814697266
    10. '_code' → logprob: -21.750003814697266

Token 490: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05620957538485527
    2. '
' → logprob: -2.9312095642089844
    3. '    
' → logprob: -6.681209564208984
    4. '<|end|>' → logprob: -10.056209564208984
    5. '  
' → logprob: -11.681209564208984
    6. '```' → logprob: -12.806209564208984
    7. 'def' → logprob: -13.056209564208984
    8. '<|end|>' → logprob: -13.306209564208984
    9. '()
' → logprob: -13.431209564208984
    10. ' 
' → logprob: -13.556209564208984

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033453749492764473
    2. '
' → logprob: -5.753345489501953
    3. '    
' → logprob: -9.253345489501953
    4. '```' → logprob: -10.253345489501953
    5. 'tr' → logprob: -10.503345489501953
    6. '	tr' → logprob: -13.128345489501953
    7. '<|end|>' → logprob: -13.128345489501953
    8. '   ' → logprob: -14.003345489501953
    9. '
' → logprob: -14.378345489501953
    10. '       ' → logprob: -14.753345489501953

Token 492: ' traverse' (ID: 66957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5793522596359253
    2. 'tr' → logprob: -0.8293522596359253
    3. ' traverse' → logprob: -5.704352378845215
    4. '	tr' → logprob: -10.704352378845215
    5. '```' → logprob: -10.829352378845215
    6. '
' → logprob: -11.329352378845215
    7. ' travers' → logprob: -11.829352378845215
    8. ' tr' → logprob: -11.954352378845215
    9. '   ' → logprob: -13.454352378845215
    10. '(tr' → logprob: -13.954352378845215

Token 493: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.0015053401002660394
    2. '(' → logprob: -6.501505374908447
    3. ' (' → logprob: -13.626504898071289
    4. 'neighbor' → logprob: -14.001504898071289
    5. '(
' → logprob: -14.251504898071289
    6. '```' → logprob: -15.751504898071289
    7. '(n' → logprob: -16.37650489807129
    8. '(friend' → logprob: -17.37650489807129
    9. '(enemy' → logprob: -18.00150489807129
    10. 'ne' → logprob: -18.25150489807129

Token 494: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -3.531315314830863e-06
    2. 'ighbors' → logprob: -13.125003814697266
    3. 'ighborhood' → logprob: -14.000003814697266
    4. 'avior' → logprob: -15.625003814697266
    5. 'ight' → logprob: -16.125003814697266
    6. 'e' → logprob: -16.250003814697266
    7. 'igh' → logprob: -16.250003814697266
    8. 'bor' → logprob: -17.625003814697266
    9. ',' → logprob: -17.750003814697266
    10. 'gh' → logprob: -17.875003814697266

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ',color' → logprob: -13.62503719329834
    4. ',
' → logprob: -14.00003719329834
    5. '   ' → logprob: -17.250038146972656
    6. ' color' → logprob: -17.375038146972656
    7. 'color' → logprob: -18.125038146972656
    8. '‌,' → logprob: -18.375038146972656
    9. '```' → logprob: -19.125038146972656
    10. ')' → logprob: -19.250038146972656

Token 496: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.01416350994259119
    2. ' color' → logprob: -4.264163494110107
    3. '	color' → logprob: -18.889163970947266
    4. '   ' → logprob: -19.639163970947266
    5. '_color' → logprob: -20.639163970947266
    6. '=color' → logprob: -20.764163970947266
    7. ')' → logprob: -20.764163970947266
    8. '[color' → logprob: -21.264163970947266
    9. '(color' → logprob: -21.389163970947266
    10. ' ' → logprob: -21.389163970947266

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.250004768371582
    3. ',
' → logprob: -15.500004768371582
    4. ',

' → logprob: -20.3750057220459
    5. '‌,' → logprob: -20.3750057220459
    6. 'visited' → logprob: -20.5000057220459
    7. '   ' → logprob: -20.7500057220459
    8. '```' → logprob: -21.2500057220459
    9. ')' → logprob: -21.7500057220459
    10. '
' → logprob: -21.8750057220459

Token 498: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0040785204619169235
    2. ' visited' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.754077911376953
    4. ' ' → logprob: -18.754077911376953
    5. 'Visited' → logprob: -18.879077911376953
    6. '
' → logprob: -19.879077911376953
    7. 'visit' → logprob: -19.879077911376953
    8. 'visible' → logprob: -20.004077911376953
    9. '  ' → logprob: -20.129077911376953
    10. 'vis' → logprob: -20.629077911376953

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -12.250005722045898
    3. ',
' → logprob: -15.750005722045898
    4. '   ' → logprob: -16.0000057220459
    5. 'queue' → logprob: -16.2500057220459
    6. '```' → logprob: -16.6250057220459
    7. '(queue' → logprob: -17.6250057220459
    8. '‌,' → logprob: -18.1250057220459
    9. ' queue' → logprob: -19.1250057220459
    10. '‍,' → logprob: -19.3750057220459

Token 500: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.02975245751440525
    2. ' queue' → logprob: -3.529752492904663
    3. '	queue' → logprob: -13.779752731323242
    4. '(queue' → logprob: -14.529752731323242
    5. ' ' → logprob: -15.779752731323242
    6. '   ' → logprob: -16.154752731323242
    7. 'que' → logprob: -16.404752731323242
    8. ')' → logprob: -16.654752731323242
    9. '.queue' → logprob: -17.029752731323242
    10. '       ' → logprob: -18.279752731323242

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.875000953674316
    4. ' )' → logprob: -16.75
    5. '())' → logprob: -19.375
    6. ')

' → logprob: -19.875
    7. '()' → logprob: -19.875
    8. '))' → logprob: -20.25
    9. '),' → logprob: -20.5
    10. ')`' → logprob: -20.875

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030436101951636374
    2. '
' → logprob: -8.875304222106934
    3. 'print' → logprob: -8.875304222106934
    4. '```' → logprob: -10.750304222106934
    5. '    
' → logprob: -13.375304222106934
    6. ' print' → logprob: -14.000304222106934
    7. '``' → logprob: -15.125304222106934
    8. '	print' → logprob: -15.500304222106934
    9. '   ' → logprob: -16.25030517578125
    10. '<|end|>' → logprob: -16.25030517578125

Token 503: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '```' → logprob: -17.75
    5. '(print' → logprob: -23.125
    6. '
' → logprob: -23.375
    7. '	print' → logprob: -23.5
    8. ' ' → logprob: -23.625
    9. '#print' → logprob: -23.75
    10. '  ' → logprob: -23.875

Token 504: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -7.822646693966817e-06
    2. '_color' → logprob: -12.500007629394531
    3. '_' → logprob: -12.750007629394531
    4. '```' → logprob: -15.875007629394531
    5. '_chars' → logprob: -16.00000762939453
    6. '_(' → logprob: -16.25000762939453
    7. '(_' → logprob: -16.25000762939453
    8. '('_' → logprob: -16.37500762939453
    9. '_codes' → logprob: -16.50000762939453
    10. '__' → logprob: -16.50000762939453

Token 505: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00038443657103925943
    2. '(' → logprob: -7.875384330749512
    3. ' (' → logprob: -12.750384330749512
    4. 'n' → logprob: -14.000384330749512
    5. '(
' → logprob: -14.500384330749512
    6. '```' → logprob: -16.750385284423828
    7. ' n' → logprob: -18.000385284423828
    8. '   ' → logprob: -18.500385284423828
    9. ' ' → logprob: -19.125385284423828
    10. '(ne' → logprob: -19.500385284423828

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ',color' → logprob: -12.750003814697266
    3. ' ,' → logprob: -14.500003814697266
    4. ')' → logprob: -17.125003814697266
    5. '   ' → logprob: -18.875003814697266
    6. 'color' → logprob: -19.000003814697266
    7. ',
' → logprob: -19.250003814697266
    8. '(' → logprob: -19.250003814697266
    9. '(color' → logprob: -19.375003814697266
    10. '```' → logprob: -19.625003814697266

Token 507: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.07888978719711304
    2. ' color' → logprob: -2.578889846801758
    3. '	color' → logprob: -17.953889846801758
    4. '(color' → logprob: -18.328889846801758
    5. '=color' → logprob: -18.828889846801758
    6. ')' → logprob: -18.953889846801758
    7. '   ' → logprob: -19.828889846801758
    8. ' ' → logprob: -20.078889846801758
    9. ',color' → logprob: -20.203889846801758
    10. '_color' → logprob: -20.453889846801758

Token 508: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. '())' → logprob: -11.625014305114746
    3. ')
' → logprob: -12.375014305114746
    4. '()' → logprob: -14.375014305114746
    5. ' )' → logprob: -15.250014305114746
    6. ')

' → logprob: -17.00001335144043
    7. '))' → logprob: -17.62501335144043
    8. ')`' → logprob: -18.00001335144043
    9. ')#' → logprob: -18.12501335144043
    10. '   ' → logprob: -18.75001335144043

Token 509: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001505578518845141
    2. 'main' → logprob: -6.501505374908447
    3. ' if' → logprob: -12.751505851745605
    4. 'print' → logprob: -15.626505851745605
    5. '```' → logprob: -16.00150489807129
    6. '#' → logprob: -17.37650489807129
    7. ' main' → logprob: -17.37650489807129
    8. '
' → logprob: -17.62650489807129
    9. '(main' → logprob: -18.62650489807129
    10. '#if' → logprob: -20.00150489807129

Token 510: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 508
Tokens correctement prédits (1ère position, stricte): 237
Tokens correctement prédits (1ère position, avec adaptation): 261
Tokens correctement prédits (top 10): 465
Précision stricte (1ère position): 46.65%
Précision adaptée (1ère position): 51.38%
Précision (top 10): 91.54%
================================================================================
