================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k, s = map(int, input().split())
res = []
for i in range(n):
    if i < k:
        res.append(s)
    elif s != 10 ** 9:
        def f(): return 10 ** 9
        res += [f()]
    else:
        x = (lambda: 1)()
        res.append(x)
print(*res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029124746099114418
    2. ' =' → logprob: -3.7791247367858887
    3. ',' → logprob: -5.154124736785889
    4. ' ' → logprob: -10.779125213623047
    5. ')' → logprob: -11.154125213623047
    6. ';' → logprob: -11.904125213623047
    7. '.' → logprob: -11.904125213623047
    8. '=
' → logprob: -11.904125213623047
    9. '[' → logprob: -12.404125213623047
    10. ',
' → logprob: -12.654125213623047

Token 4: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6953867077827454
    2. ' =' → logprob: -0.6953867077827454
    3. ',' → logprob: -6.19538688659668
    4. ' ' → logprob: -8.94538688659668
    5. ')' → logprob: -10.57038688659668
    6. '.' → logprob: -11.57038688659668
    7. ' ,' → logprob: -11.82038688659668
    8. '_' → logprob: -11.94538688659668
    9. ';' → logprob: -12.19538688659668
    10. '=input' → logprob: -13.32038688659668

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02475789189338684
    2. ' =' → logprob: -3.7747578620910645
    3. ',' → logprob: -6.5247578620910645
    4. '.' → logprob: -11.649758338928223
    5. ')' → logprob: -11.774758338928223
    6. ';' → logprob: -11.899758338928223
    7. ' ' → logprob: -12.024758338928223
    8. '_' → logprob: -12.899758338928223
    9. '```' → logprob: -13.024758338928223
    10. ''' → logprob: -13.274758338928223

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5870870351791382
    2. 'map' → logprob: -0.9620870351791382
    3. 'input' → logprob: -3.3370871543884277
    4. ' input' → logprob: -3.8370871543884277
    5. '0' → logprob: -5.962087154388428
    6. ' n' → logprob: -6.962087154388428
    7. ' ' → logprob: -7.337087154388428
    8. ' list' → logprob: -8.46208667755127
    9. 'list' → logprob: -8.83708667755127
    10. 'n' → logprob: -8.96208667755127

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22072520852088928
    2. '<|end|>' → logprob: -1.720725178718567
    3. '(int' → logprob: -5.095725059509277
    4. '(lambda' → logprob: -5.220725059509277
    5. '<|end|>' → logprob: -5.720725059509277
    6. '```' → logprob: -6.970725059509277
    7. '(str' → logprob: -6.970725059509277
    8. ')' → logprob: -7.595725059509277
    9. '(user' → logprob: -8.595725059509277
    10. '(token' → logprob: -9.158225059509277

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38276687264442444
    2. ')' → logprob: -1.382766842842102
    3. '(' → logprob: -2.8827669620513916
    4. '```' → logprob: -6.0077667236328125
    5. '(int' → logprob: -6.1327667236328125
    6. '`)' → logprob: -6.2577667236328125
    7. '(str' → logprob: -6.3827667236328125
    8. 'input' → logprob: -6.8827667236328125
    9. '(n' → logprob: -8.007766723632812
    10. '(user' → logprob: -8.257766723632812

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4741210341453552
    2. 'input' → logprob: -0.9741210341453552
    3. '(input' → logprob: -10.09912109375
    4. ')' → logprob: -13.47412109375
    5. ',input' → logprob: -13.97412109375
    6. '=input' → logprob: -15.72412109375
    7. ' ' → logprob: -16.09912109375
    8. '```' → logprob: -16.34912109375
    9. '	input' → logprob: -16.47412109375
    10. '<input' → logprob: -16.47412109375

Token 10: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3146573007106781
    2. '(' → logprob: -2.189657211303711
    3. '())' → logprob: -2.814657211303711
    4. '()' → logprob: -3.064657211303711
    5. '(()' → logprob: -4.439657211303711
    6. '('' → logprob: -4.814657211303711
    7. '(""))' → logprob: -5.314657211303711
    8. '(token' → logprob: -5.564657211303711
    9. '<|end|>' → logprob: -5.564657211303711
    10. '().' → logprob: -5.939657211303711

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009172935388050973
    2. 'strip' → logprob: -7.000917434692383
    3. 'rstrip' → logprob: -12.500917434692383
    4. ' split' → logprob: -13.500917434692383
    5. '(split' → logprob: -14.375917434692383
    6. ')' → logprob: -16.875917434692383
    7. 'spl' → logprob: -17.000917434692383
    8. 'read' → logprob: -17.375917434692383
    9. 'startswith' → logprob: -17.500917434692383
    10. 'replace' → logprob: -18.625917434692383

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016465619206428528
    2. '())' → logprob: -4.391465663909912
    3. '))' → logprob: -5.766465663909912
    4. '(' → logprob: -8.266465187072754
    5. '()' → logprob: -8.391465187072754
    6. '`)' → logprob: -8.641465187072754
    7. '```' → logprob: -10.391465187072754
    8. '()))' → logprob: -10.641465187072754
    9. ')`' → logprob: -10.641465187072754
    10. '`' → logprob: -11.641465187072754

Token 13: 'res' (ID: 430)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5940688848495483
    2. '
' → logprob: -1.9690688848495483
    3. '\n' → logprob: -1.9690688848495483
    4. 'for' → logprob: -2.469069004058838
    5. ',' → logprob: -2.969069004058838
    6. ' ' → logprob: -3.094069004058838
    7. '#' → logprob: -3.344069004058838
    8. ' 
' → logprob: -3.344069004058838
    9. ''' → logprob: -3.719069004058838
    10. 'x' → logprob: -3.844069004058838

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2554146945476532
    2. '=' → logprob: -1.8804147243499756
    3. '[' → logprob: -3.3804147243499756
    4. ' +=' → logprob: -4.6304144859313965
    5. '_' → logprob: -4.8804144859313965
    6. '[:]' → logprob: -4.8804144859313965
    7. ' ' → logprob: -5.3804144859313965
    8. '.' → logprob: -5.6304144859313965
    9. '[]' → logprob: -6.5054144859313965
    10. '+' → logprob: -6.7554144859313965

Token 15: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.879696786403656
    2. ' []' → logprob: -1.3796968460083008
    3. ' ' → logprob: -1.7546968460083008
    4. '[]' → logprob: -2.754696846008301
    5. '"' → logprob: -3.754696846008301
    6. ' [' → logprob: -4.504696846008301
    7. 's' → logprob: -4.504696846008301
    8. ''s' → logprob: -4.754696846008301
    9. ' n' → logprob: -4.879696846008301
    10. ''' → logprob: -5.129696846008301

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03651998192071915
    2. ' for' → logprob: -3.411520004272461
    3. '\n' → logprob: -6.286520004272461
    4. '```' → logprob: -7.661520004272461
    5. '\' → logprob: -8.161520004272461
    6. ' 
' → logprob: -9.911520004272461
    7. '[' → logprob: -10.036520004272461
    8. '<|end|>' → logprob: -10.161520004272461
    9. ''' → logprob: -10.786520004272461
    10. '
' → logprob: -11.036520004272461

Token 17: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.287960946559906
    2. ' i' → logprob: -1.4129610061645508
    3. '  ' → logprob: -5.412961006164551
    4. 'i' → logprob: -6.912961006164551
    5. ' _' → logprob: -7.412961006164551
    6. '_' → logprob: -7.412961006164551
    7. ' ‌' → logprob: -9.53796100616455
    8. ' ▁' → logprob: -10.91296100616455
    9. ' I' → logprob: -12.53796100616455
    10. ' ' → logprob: -12.66296100616455

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08914764970541
    2. 'in' → logprob: -2.5891475677490234
    3. 'n' → logprob: -4.714147567749023
    4. ' ' → logprob: -7.464147567749023
    5. ' n' → logprob: -7.964147567749023
    6. 'range' → logprob: -9.214147567749023
    7. '  ' → logprob: -9.839147567749023
    8. 'space' → logprob: -9.839147567749023
    9. '_' → logprob: -10.714147567749023
    10. ' range' → logprob: -11.589147567749023

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889342308044434
    2. 'range' → logprob: -2.5788934230804443
    3. ' ' → logprob: -12.828893661499023
    4. '	range' → logprob: -14.703893661499023
    5. '(range' → logprob: -15.328893661499023
    6. ' xrange' → logprob: -16.203893661499023
    7. ' ran' → logprob: -16.828893661499023
    8. ')' → logprob: -17.328893661499023
    9. ' in' → logprob: -17.453893661499023
    10. '_range' → logprob: -17.453893661499023

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08080309629440308
    2. '(n' → logprob: -2.580803155899048
    3. '(k' → logprob: -6.330802917480469
    4. '(s' → logprob: -9.955802917480469
    5. '(i' → logprob: -9.955802917480469
    6. ' (' → logprob: -11.080802917480469
    7. '(
' → logprob: -11.955802917480469
    8. '(range' → logprob: -12.330802917480469
    9. '(len' → logprob: -12.955802917480469
    10. '((' → logprob: -13.580802917480469

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026332074776291847
    2. ')' → logprob: -6.877633094787598
    3. '):
' → logprob: -7.127633094787598
    4. ' ):' → logprob: -7.377633094787598
    5. '+' → logprob: -9.377633094787598
    6. ':' → logprob: -10.752633094787598
    7. ',' → logprob: -11.002633094787598
    8. '**' → logprob: -11.002633094787598
    9. ' ' → logprob: -11.252633094787598
    10. '-' → logprob: -12.502633094787598

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3613497316837311
    2. '    ' → logprob: -1.6113497018814087
    3. '   ' → logprob: -3.1113498210906982
    4. ' res' → logprob: -3.3613498210906982
    5. ' s' → logprob: -5.611349582672119
    6. 'res' → logprob: -5.736349582672119
    7. '     
' → logprob: -5.736349582672119
    8. ' input' → logprob: -5.861349582672119
    9. ' []' → logprob: -6.111349582672119
    10. ' i' → logprob: -6.611349582672119

Token 23: ' if' (ID: 538)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.27004551887512207
    2. 'res' → logprob: -2.145045518875122
    3. ' ' → logprob: -2.770045518875122
    4. ' if' → logprob: -3.645045518875122
    5. ' for' → logprob: -4.895045280456543
    6. 'if' (adapté à ' if') → logprob: -5.395045280456543
    7. ' s' → logprob: -6.020045280456543
    8. 'for' → logprob: -6.020045280456543
    9. '0' → logprob: -6.395045280456543
    10. ' input' → logprob: -6.520045280456543

Token 24: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7730178236961365
    2. ' i' → logprob: -0.7730178236961365
    3. ' k' → logprob: -3.0230178833007812
    4. 'i' → logprob: -4.648017883300781
    5. 's' → logprob: -4.898017883300781
    6. ' n' → logprob: -5.398017883300781
    7. ' ' → logprob: -5.648017883300781
    8. 'k' → logprob: -6.648017883300781
    9. ' (' → logprob: -6.648017883300781
    10. 'n' → logprob: -9.273017883300781

Token 25: ' <' (ID: 464)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10388537496328354
    2. '%' → logprob: -2.8538854122161865
    3. ' <' → logprob: -3.6038854122161865
    4. ' ' → logprob: -4.728885173797607
    5. ' >=' → logprob: -6.353885173797607
    6. ' ==' → logprob: -6.478885173797607
    7. '<' → logprob: -7.228885173797607
    8. ' <=' → logprob: -7.478885173797607
    9. ' >' → logprob: -9.103885650634766
    10. '==' → logprob: -9.728885650634766

Token 26: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2815873324871063
    2. ' k' → logprob: -1.4065873622894287
    3. 's' → logprob: -8.531587600708008
    4. ' s' → logprob: -8.781587600708008
    5. ' ' → logprob: -10.156587600708008
    6. ' n' → logprob: -10.906587600708008
    7. 'n' → logprob: -11.281587600708008
    8. '10' → logprob: -12.906587600708008
    9. '	k' → logprob: -13.156587600708008
    10. '5' → logprob: -13.406587600708008

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017011672258377075
    2. '+' → logprob: -4.767011642456055
    3. ' and' → logprob: -6.517011642456055
    4. ':
' → logprob: -6.642011642456055
    5. '-' → logprob: -6.767011642456055
    6. ' :' → logprob: -6.892011642456055
    7. ' +' → logprob: -7.267011642456055
    8. '   ' → logprob: -7.517011642456055
    9. ' ' → logprob: -7.517011642456055
    10. '):' → logprob: -7.517011642456055

Token 28: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0967406034469604
    2. ' res' → logprob: -1.0967406034469604
    3. 'res' → logprob: -2.09674072265625
    4. '   ' → logprob: -2.59674072265625
    5. ' ' → logprob: -2.97174072265625
    6. '       ' → logprob: -3.47174072265625
    7. '    ' → logprob: -3.72174072265625
    8. ' :' → logprob: -4.09674072265625
    9. ' and' → logprob: -5.72174072265625
    10. ':
' → logprob: -6.97174072265625

Token 29: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.09475014358758926
    2. 'res' (adapté à ' res') → logprob: -2.844750165939331
    3. ' s' → logprob: -4.094749927520752
    4. ' ' → logprob: -4.469749927520752
    5. 's' → logprob: -6.594749927520752
    6. '   ' → logprob: -7.094749927520752
    7. '    ' → logprob: -7.344749927520752
    8. 'r' → logprob: -8.59475040435791
    9. '       ' → logprob: -9.21975040435791
    10. ' (' → logprob: -9.34475040435791

Token 30: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04868955910205841
    2. '.' → logprob: -3.048689603805542
    3. '.extend' → logprob: -9.548689842224121
    4. ' .' → logprob: -11.173689842224121
    5. '.app' → logprob: -12.298689842224121
    6. '.ap' → logprob: -12.548689842224121
    7. '.add' → logprob: -13.048689842224121
    8. '.push' → logprob: -13.048689842224121
    9. 'append' → logprob: -13.423689842224121
    10. ' +=' → logprob: -13.923689842224121

Token 31: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5445458292961121
    2. '(i' → logprob: -1.4195458889007568
    3. '(s' → logprob: -2.294545888900757
    4. '('' → logprob: -3.044545888900757
    5. '((' → logprob: -4.294545650482178
    6. '(True' → logprob: -4.794545650482178
    7. '("' → logprob: -5.794545650482178
    8. '("("' → logprob: -6.544545650482178
    9. '(False' → logprob: -6.919545650482178
    10. '(k' → logprob: -7.669545650482178

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6580585837364197
    2. '-' → logprob: -1.5330586433410645
    3. ' -' → logprob: -2.5330586433410645
    4. '//' → logprob: -2.7830586433410645
    5. '[i' → logprob: -3.1580586433410645
    6. '-i' → logprob: -3.6580586433410645
    7. ' //' → logprob: -3.9080586433410645
    8. ' )' → logprob: -4.6580586433410645
    9. '+' → logprob: -4.7830586433410645
    10. '))' → logprob: -5.2830586433410645

Token 33: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.34778374433517456
    2. ' else' → logprob: -1.3477838039398193
    3. 'elif' → logprob: -4.47278356552124
    4. '\n' → logprob: -5.09778356552124
    5. '   ' → logprob: -5.59778356552124
    6. '<|end|>' → logprob: -5.72278356552124
    7. ' elif' → logprob: -6.47278356552124
    8. '    
' → logprob: -6.72278356552124
    9. '	else' → logprob: -6.84778356552124
    10. ' ' → logprob: -6.84778356552124

Token 34: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12893398106098175
    2. ' else' → logprob: -2.128933906555176
    3. 'elif' (adapté à ' elif') → logprob: -6.753933906555176
    4. '<|end|>' → logprob: -8.128933906555176
    5. ' ' → logprob: -8.628933906555176
    6. '   ' → logprob: -9.128933906555176
    7. ' elif' → logprob: -9.753933906555176
    8. '	else' → logprob: -10.003933906555176
    9. 's' → logprob: -10.253933906555176
    10. '\n' → logprob: -10.878933906555176

Token 35: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04708721116185188
    2. ' s' → logprob: -3.6720871925354004
    3. 'i' → logprob: -4.2970871925354
    4. ' ' → logprob: -5.6720871925354
    5. 's' → logprob: -6.4220871925354
    6. ' n' → logprob: -7.1720871925354
    7. ' k' → logprob: -7.2970871925354
    8. ' res' → logprob: -9.047087669372559
    9. ' (' → logprob: -9.922087669372559
    10. '   ' → logprob: -10.547087669372559

Token 36: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.223404660820961
    2. ' <' → logprob: -2.9734046459198
    3. '>' → logprob: -3.2234046459198
    4. ' ==' → logprob: -3.7234046459198
    5. '+' → logprob: -3.9734046459198
    6. ' +' → logprob: -4.348404884338379
    7. ' >=' → logprob: -4.598404884338379
    8. '-' → logprob: -4.973404884338379
    9. ' <=' → logprob: -5.098404884338379
    10. '==' → logprob: -5.098404884338379

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03456416726112366
    2. '1' → logprob: -4.159564018249512
    3. '-' → logprob: -5.409564018249512
    4. ' ' → logprob: -5.409564018249512
    5. 'k' → logprob: -5.784564018249512
    6. 'res' → logprob: -6.284564018249512
    7. 'n' → logprob: -6.409564018249512
    8. 'i' → logprob: -7.409564018249512
    9. '10' → logprob: -7.909564018249512
    10. 's' → logprob: -8.409564018249512

Token 38: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04001010209321976
    2. '1' → logprob: -4.04000997543335
    3. '-' → logprob: -4.41500997543335
    4. 'k' → logprob: -6.41500997543335
    5. ' ' → logprob: -6.54000997543335
    6. 'n' → logprob: -6.54000997543335
    7. 'res' → logprob: -6.54000997543335
    8. 'i' → logprob: -7.54000997543335
    9. '10' → logprob: -7.66500997543335
    10. '2' → logprob: -7.79000997543335

Token 39: ' **' (ID: 6240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11861149966716766
    2. ' and' → logprob: -2.6186115741729736
    3. '0' → logprob: -4.1186113357543945
    4. 'and' → logprob: -4.8686113357543945
    5. ' :' → logprob: -5.1186113357543945
    6. ' ' → logprob: -6.1186113357543945
    7. '-' → logprob: -6.8686113357543945
    8. '+' → logprob: -6.8686113357543945
    9. '4' → logprob: -7.3686113357543945
    10. ':
' → logprob: -7.4936113357543945

Token 40: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002944536507129669
    2. '6' → logprob: -6.377944469451904
    3. '7' → logprob: -7.252944469451904
    4. '8' → logprob: -8.502944946289062
    5. '10' → logprob: -9.002944946289062
    6. '5' → logprob: -9.377944946289062
    7. '18' → logprob: -9.627944946289062
    8. '4' → logprob: -11.002944946289062
    9. '```' → logprob: -11.502944946289062
    10. '12' → logprob: -11.752944946289062

Token 41: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0063211009837687016
    2. '6' → logprob: -5.506320953369141
    3. '18' → logprob: -7.256320953369141
    4. '7' → logprob: -7.381320953369141
    5. '8' → logprob: -8.00632095336914
    6. '10' → logprob: -8.25632095336914
    7. '5' → logprob: -8.88132095336914
    8. '12' → logprob: -9.75632095336914
    9. 'k' → logprob: -10.75632095336914
    10. '```' → logprob: -11.00632095336914

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09159138053655624
    2. ' and' → logprob: -2.5915913581848145
    3. 'and' → logprob: -4.9665913581848145
    4. '-' → logprob: -6.0915913581848145
    5. ' :' → logprob: -6.9665913581848145
    6. ' -' → logprob: -7.3415913581848145
    7. ' ' → logprob: -7.5915913581848145
    8. ':
' → logprob: -7.7165913581848145
    9. '   ' → logprob: -7.8415913581848145
    10. '):' → logprob: -9.341591835021973

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7538132667541504
    2. ':' → logprob: -1.0038132667541504
    3. ' and' → logprob: -2.6288132667541504
    4. ':
' → logprob: -2.6288132667541504
    5. 'and' → logprob: -5.00381326675415
    6. '   ' → logprob: -5.25381326675415
    7. '-' → logprob: -6.37881326675415
    8. ',' → logprob: -7.50381326675415
    9. ' :' → logprob: -7.50381326675415
    10. '<|end|>' → logprob: -7.50381326675415

Token 44: ' def' (ID: 1056)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1668166071176529
    2. '       ' → logprob: -3.1668167114257812
    3. 'res' → logprob: -3.6668167114257812
    4. ' s' → logprob: -3.7918167114257812
    5. '           ' → logprob: -4.041816711425781
    6. ':
' → logprob: -4.166816711425781
    7. '   ' → logprob: -4.791816711425781
    8. 'else' → logprob: -5.041816711425781
    9. ':' → logprob: -5.166816711425781
    10. ' +=' → logprob: -6.416816711425781

Token 45: ' f' (ID: 285)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.03038785606622696
    2. 'res' → logprob: -4.405387878417969
    3. ' f' → logprob: -4.530387878417969
    4. ' s' → logprob: -5.530387878417969
    5. 'f' → logprob: -6.905387878417969
    6. '_res' → logprob: -7.905387878417969
    7. ' a' → logprob: -8.280387878417969
    8. '   ' → logprob: -8.905387878417969
    9. 's' → logprob: -8.905387878417969
    10. ' ' → logprob: -9.030387878417969

Token 46: '():' (ID: 9442)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3263270854949951
    2. ':' → logprob: -1.5763270854949951
    3. '():' → logprob: -1.7013270854949951
    4. ' =' → logprob: -2.076327085494995
    5. '():
' → logprob: -3.576327085494995
    6. 'unction' → logprob: -3.701327085494995
    7. '(res' → logprob: -4.201327323913574
    8. ' res' → logprob: -4.326327323913574
    9. '()' → logprob: -4.326327323913574
    10. 'i' → logprob: -4.451327323913574

Token 47: ' return' (ID: 622)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.909234344959259
    2. '<|end|>' → logprob: -1.9092342853546143
    3. ' ' → logprob: -2.4092342853546143
    4. 'res' → logprob: -2.5342342853546143
    5. '
' → logprob: -2.5342342853546143
    6. ' s' → logprob: -3.0342342853546143
    7. '\n' → logprob: -3.5342342853546143
    8. '           ' → logprob: -3.9092342853546143
    9. ' 
' → logprob: -4.159234523773193
    10. '       ' → logprob: -4.534234523773193

Token 48: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6474106907844543
    2. 's' → logprob: -1.3974106311798096
    3. ' ' → logprob: -2.1474106311798096
    4. ' s' → logprob: -2.3974106311798096
    5. '1' → logprob: -4.397410869598389
    6. '0' → logprob: -5.272410869598389
    7. '100' → logprob: -6.772410869598389
    8. 'int' → logprob: -7.272410869598389
    9. 'i' → logprob: -7.772410869598389
    10. 'res' → logprob: -8.14741039276123

Token 49: '10' (ID: 702)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5435640215873718
    2. '10' → logprob: -1.0435640811920166
    3. '1' → logprob: -4.0435638427734375
    4. '0' → logprob: -4.1685638427734375
    5. '(' → logprob: -5.4185638427734375
    6. 'i' → logprob: -5.5435638427734375
    7. 'res' → logprob: -5.5435638427734375
    8. 'max' → logprob: -5.7935638427734375
    9. 'min' → logprob: -5.9185638427734375
    10. ' s' → logprob: -5.9185638427734375

Token 50: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.4399225115776062
    2. '**' → logprob: -1.064922571182251
    3. '9' → logprob: -4.564922332763672
    4. ' ' → logprob: -7.314922332763672
    5. ' ' → logprob: -10.439922332763672
    6. '^' → logprob: -11.689922332763672
    7. '*' → logprob: -12.189922332763672
    8. '```' → logprob: -12.252422332763672
    9. '8' → logprob: -12.377422332763672
    10. ' **)' → logprob: -12.439922332763672

Token 51: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0008514398941770196
    2. '8' → logprob: -7.500851631164551
    3. '6' → logprob: -8.87585163116455
    4. '7' → logprob: -9.62585163116455
    5. '5' → logprob: -10.50085163116455
    6. '10' → logprob: -10.50085163116455
    7. '4' → logprob: -11.37585163116455
    8. '```' → logprob: -12.12585163116455
    9. ' ' → logprob: -12.31335163116455
    10. '3' → logprob: -12.93835163116455

Token 52: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001877947011962533
    2. '8' → logprob: -6.501877784729004
    3. '6' → logprob: -8.376877784729004
    4. '7' → logprob: -9.626877784729004
    5. '5' → logprob: -10.626877784729004
    6. '10' → logprob: -10.751877784729004
    7. '4' → logprob: -11.501877784729004
    8. '18' → logprob: -12.439377784729004
    9. '```' → logprob: -12.626877784729004
    10. '3' → logprob: -12.689377784729004

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08784793317317963
    2. '<|end|>' → logprob: -3.337847948074341
    3. 'else' → logprob: -3.837847948074341
    4. ' else' → logprob: -4.712847709655762
    5. ')' → logprob: -5.462847709655762
    6. '    
' → logprob: -5.962847709655762
    7. '       ' → logprob: -5.962847709655762
    8. ' ' → logprob: -6.212847709655762
    9. '<|end|>' → logprob: -6.462847709655762
    10. '
' → logprob: -6.587847709655762

Token 55: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19548524916172028
    2. 'res' (adapté à ' res') → logprob: -2.5704853534698486
    3. 'else' → logprob: -3.5704853534698486
    4. '
' → logprob: -3.8204853534698486
    5. ' else' → logprob: -4.0704851150512695
    6. '       ' → logprob: -4.8204851150512695
    7. ' res' → logprob: -5.1954851150512695
    8. ')' → logprob: -5.4454851150512695
    9. ' ' → logprob: -5.4454851150512695
    10. '<|end|>' → logprob: -5.9454851150512695

Token 56: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009890546090900898
    2. '.' → logprob: -4.634890556335449
    3. '.extend' → logprob: -9.75989055633545
    4. '.app' → logprob: -10.25989055633545
    5. ' .' → logprob: -11.50989055633545
    6. '[' → logprob: -12.13489055633545
    7. '[-' → logprob: -12.25989055633545
    8. 'append' → logprob: -12.25989055633545
    9. '.add' → logprob: -12.38489055633545
    10. '.Append' → logprob: -12.75989055633545

Token 57: ' [' (ID: 723)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.9168436527252197
    2. '[' → logprob: -1.0418436527252197
    3. ' [' → logprob: -1.4168436527252197
    4. '[i' → logprob: -5.916843414306641
    5. '[s' → logprob: -7.166843414306641
    6. ' f' → logprob: -8.04184341430664
    7. '[int' → logprob: -8.16684341430664
    8. '[n' → logprob: -8.66684341430664
    9. '[k' → logprob: -9.29184341430664
    10. '[p' → logprob: -9.41684341430664

Token 58: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08374746888875961
    2. ' f' → logprob: -2.583747386932373
    3. '10' → logprob: -5.833747386932373
    4. 's' → logprob: -7.708747386932373
    5. ' ' → logprob: -8.458747863769531
    6. ' s' → logprob: -8.583747863769531
    7. 'def' → logprob: -8.833747863769531
    8. '(f' → logprob: -8.958747863769531
    9. 'int' → logprob: -9.208747863769531
    10. '(' → logprob: -9.458747863769531

Token 59: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0011945136357098818
    2. '()' → logprob: -6.751194477081299
    3. ']()' → logprob: -11.751194953918457
    4. '())' → logprob: -12.251194953918457
    5. '()]
' → logprob: -12.501194953918457
    6. '()],' → logprob: -12.501194953918457
    7. '(),' → logprob: -13.251194953918457
    8. ']' → logprob: -14.501194953918457
    9. '()
' → logprob: -14.751194953918457
    10. '()+' → logprob: -14.876194953918457

Token 60: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5560775995254517
    2. 'else' → logprob: -1.1810775995254517
    3. '   ' → logprob: -2.306077480316162
    4. '\n' → logprob: -5.431077480316162
    5. ' ' → logprob: -5.806077480316162
    6. '
' → logprob: -5.806077480316162
    7. '[' → logprob: -5.931077480316162
    8. '<|end|>' → logprob: -6.056077480316162
    9. ' 
' → logprob: -6.931077480316162
    10. 'elif' → logprob: -7.556077480316162

Token 61: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6333990693092346
    2. 'else' (adapté à ' else') → logprob: -0.7583990693092346
    3. ' ' → logprob: -8.13339900970459
    4. '   ' → logprob: -8.13339900970459
    5. '	else' → logprob: -9.88339900970459
    6. 's' → logprob: -10.25839900970459
    7. 'elif' → logprob: -10.75839900970459
    8. '0' → logprob: -10.88339900970459
    9. 'e' → logprob: -10.88339900970459
    10. '[' → logprob: -11.50839900970459

Token 62: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6437131762504578
    2. ':' → logprob: -1.0187132358551025
    3. ':
' → logprob: -2.3937132358551025
    4. '   ' → logprob: -3.8937132358551025
    5. '    ' → logprob: -7.393712997436523
    6. '        ' → logprob: -7.768712997436523
    7. '      ' → logprob: -8.893712997436523
    8. '     ' → logprob: -8.893712997436523
    9. ' ' → logprob: -9.268712997436523
    10. '           ' → logprob: -9.393712997436523

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00861197616904974
    2. 'res' → logprob: -5.258612155914307
    3. ' res' → logprob: -5.883612155914307
    4. ' break' → logprob: -8.508611679077148
    5. '   ' → logprob: -9.133611679077148
    6. '0' → logprob: -9.633611679077148
    7. 'break' → logprob: -9.633611679077148
    8. '           ' → logprob: -10.383611679077148
    9. 'def' → logprob: -10.633611679077148
    10. ' ' → logprob: -10.633611679077148

Token 64: ' x' (ID: 1215)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08013489097356796
    2. ' res' → logprob: -2.830134868621826
    3. '0' → logprob: -4.830134868621826
    4. 'break' → logprob: -5.330134868621826
    5. '       ' → logprob: -6.330134868621826
    6. 'def' → logprob: -6.955134868621826
    7. ' break' → logprob: -6.955134868621826
    8. '           ' → logprob: -7.330134868621826
    9. '10' → logprob: -8.705135345458984
    10. '   ' → logprob: -8.830135345458984

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023845139890909195
    2. '=' → logprob: -4.023845195770264
    3. ' +=' → logprob: -5.398845195770264
    4. ' ' → logprob: -8.398844718933105
    5. '+=' → logprob: -8.648844718933105
    6. ',' → logprob: -9.148844718933105
    7. ' -=' → logprob: -9.398844718933105
    8. '   ' → logprob: -9.398844718933105
    9. '.append' → logprob: -9.523844718933105
    10. '=int' → logprob: -9.523844718933105

Token 66: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2954412698745728
    2. '0' → logprob: -1.5454412698745728
    3. ' s' → logprob: -1.5454412698745728
    4. 's' → logprob: -2.920441150665283
    5. ' k' → logprob: -3.045441150665283
    6. ' res' → logprob: -3.420441150665283
    7. ' i' → logprob: -3.420441150665283
    8. '10' → logprob: -3.545441150665283
    9. 'k' → logprob: -3.670441150665283
    10. '1' → logprob: -3.795441150665283

Token 67: 'lambda' (ID: 35280)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2843145728111267
    2. '10' → logprob: -2.2843146324157715
    3. ' s' → logprob: -2.6593146324157715
    4. 'k' → logprob: -3.5343146324157715
    5. 'i' → logprob: -4.9093146324157715
    6. 'res' → logprob: -5.0343146324157715
    7. 'n' → logprob: -5.0343146324157715
    8. ' ' → logprob: -5.0343146324157715
    9. '1' → logprob: -5.5343146324157715
    10. '0' → logprob: -5.6593146324157715

Token 68: ':' (ID: 25)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.2879937887191772
    2. ' i' → logprob: -1.7879937887191772
    3. ' a' → logprob: -2.037993907928467
    4. 'a' → logprob: -2.537993907928467
    5. ' j' → logprob: -2.662993907928467
    6. ' s' → logprob: -2.787993907928467
    7. ' x' → logprob: -3.037993907928467
    8. 'i' → logprob: -3.412993907928467
    9. 'y' → logprob: -3.412993907928467
    10. 'j' → logprob: -4.162993907928467

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3899365663528442
    2. 's' → logprob: -1.5149365663528442
    3. '10' → logprob: -1.6399365663528442
    4. ' ' → logprob: -2.5149364471435547
    5. 'k' → logprob: -2.8899364471435547
    6. ' s' → logprob: -3.0149364471435547
    7. '9' → logprob: -3.1399364471435547
    8. '999' → logprob: -4.014936447143555
    9. '1' → logprob: -4.264936447143555
    10. ' k' → logprob: -4.639936447143555

Token 70: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2624263763427734
    2. '10' → logprob: -1.5124263763427734
    3. '0' → logprob: -1.6374263763427734
    4. 'k' → logprob: -2.5124263763427734
    5. '9' → logprob: -2.7624263763427734
    6. '(' → logprob: -3.3874263763427734
    7. 'i' → logprob: -3.6374263763427734
    8. '999' → logprob: -3.8874263763427734
    9. '1' → logprob: -4.137426376342773
    10. 'n' → logprob: -4.262426376342773

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06696789711713791
    2. '+' → logprob: -3.4419679641723633
    3. ' +' → logprob: -3.8169679641723633
    4. ' )' → logprob: -5.191967964172363
    5. '0' → logprob: -6.191967964172363
    6. '+)' → logprob: -6.816967964172363
    7. ')
' → logprob: -8.191967964172363
    8. ')n' → logprob: -8.316967964172363
    9. ')+' → logprob: -8.691967964172363
    10. '+i' → logprob: -8.941967964172363

Token 72: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38742244243621826
    2. '()' → logprob: -1.5124224424362183
    3. '()
' → logprob: -3.012422561645508
    4. '
' → logprob: -3.262422561645508
    5. '   ' → logprob: -5.512422561645508
    6. '        
' → logprob: -6.137422561645508
    7. '<|end|>' → logprob: -6.637422561645508
    8. '        ' → logprob: -7.262422561645508
    9. ' ' → logprob: -7.387422561645508
    10. 'res' → logprob: -7.512422561645508

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009339710813947022
    2. '   ' → logprob: -7.50093412399292
    3. '<|end|>' → logprob: -8.500933647155762
    4. '
' → logprob: -9.250933647155762
    5. ' ' → logprob: -10.375933647155762
    6. '        
' → logprob: -11.625933647155762
    7. 'res' → logprob: -11.750933647155762
    8. '           ' → logprob: -12.125933647155762
    9. '      ' → logprob: -12.500933647155762
    10. '```' → logprob: -13.000933647155762

Token 74: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11964630335569382
    2. 'res' (adapté à ' res') → logprob: -2.2446463108062744
    3. ' res' → logprob: -5.119646072387695
    4. '   ' → logprob: -8.119646072387695
    5. '
' → logprob: -8.494646072387695
    6. ' ' → logprob: -9.619646072387695
    7. '           ' → logprob: -10.244646072387695
    8. '        
' → logprob: -10.369646072387695
    9. '	res' → logprob: -10.744646072387695
    10. '<|end|>' → logprob: -10.994646072387695

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02809394709765911
    2. '.' → logprob: -3.6530940532684326
    3. '.extend' → logprob: -7.0280938148498535
    4. '+' → logprob: -7.7780938148498535
    5. ' .' → logprob: -8.403094291687012
    6. ' +=' → logprob: -8.653094291687012
    7. '+.' → logprob: -10.903094291687012
    8. ' +' → logprob: -11.028094291687012
    9. '+=' → logprob: -11.278094291687012
    10. '.app' → logprob: -11.403094291687012

Token 76: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.048769380897283554
    2. '(' → logprob: -3.048769474029541
    3. '(s' → logprob: -8.798768997192383
    4. ' (' → logprob: -11.173768997192383
    5. '(
' → logprob: -11.548768997192383
    6. '((' → logprob: -12.298768997192383
    7. 'x' → logprob: -13.923768997192383
    8. '()' → logprob: -14.798768997192383
    9. '(

' → logprob: -15.048768997192383
    10. '(int' → logprob: -15.423768997192383

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.518582762917504e-05
    2. ')
' → logprob: -10.00008487701416
    3. ' )' → logprob: -10.25008487701416
    4. '   ' → logprob: -13.62508487701416
    5. '))' → logprob: -14.62508487701416
    6. ')#' → logprob: -14.87508487701416
    7. '<|end|>' → logprob: -15.00008487701416
    8. '+' → logprob: -15.25008487701416
    9. ')return' → logprob: -15.25008487701416
    10. ')`' → logprob: -15.50008487701416

Token 78: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02003035508096218
    2. '(*' → logprob: -4.395030498504639
    3. '(res' → logprob: -6.020030498504639
    4. '(len' → logprob: -6.395030498504639
    5. '()' → logprob: -6.520030498504639
    6. '(sum' → logprob: -7.145030498504639
    7. '('' → logprob: -7.270030498504639
    8. '("("' → logprob: -8.27003002166748
    9. '(*)' → logprob: -9.14503002166748
    10. '("' → logprob: -10.89503002166748

Token 80: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00020413640595506877
    2. ' res' → logprob: -8.500204086303711
    3. '(res' → logprob: -14.375204086303711
    4. '$res' → logprob: -19.37520408630371
    5. '	res' → logprob: -19.62520408630371
    6. 'r' → logprob: -19.87520408630371
    7. ' ' → logprob: -19.87520408630371
    8. ')' → logprob: -20.12520408630371
    9. 're' → logprob: -20.37520408630371
    10. 'resi' → logprob: -20.62520408630371

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '))' → logprob: -13.875003814697266
    3. ')`' → logprob: -14.250003814697266
    4. ' )' → logprob: -14.500003814697266
    5. ')
' → logprob: -14.750003814697266
    6. '[' → logprob: -15.250003814697266
    7. ',' → logprob: -15.500003814697266
    8. '(' → logprob: -16.250003814697266
    9. '`)' → logprob: -16.500003814697266
    10. ']' → logprob: -16.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 29.11%
Précision adaptée (1ère position): 29.11%
Précision (top 10): 77.22%
================================================================================
