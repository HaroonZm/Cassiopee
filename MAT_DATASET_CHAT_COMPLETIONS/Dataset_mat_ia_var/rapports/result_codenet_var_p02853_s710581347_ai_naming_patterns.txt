================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_x, input_y = map(int, input().split())
total_score = 0
if 1 <= input_x <= 3:
    total_score += (4 - input_x) * 10**5
if 1 <= input_y <= 3:
    total_score += (4 - input_y) * 10**5
if input_x == 1 and input_y == 1:
    total_score += 4 * 10**5
print(total_score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_x' (ID: 7054)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2186175286769867
    2. '_' → logprob: -3.0936174392700195
    3. '.' → logprob: -3.2186174392700195
    4. '[' → logprob: -3.8436174392700195
    5. 'output' → logprob: -3.8436174392700195
    6. '```' → logprob: -4.0936174392700195
    7. ',' → logprob: -4.4686174392700195
    8. ' ' → logprob: -4.4686174392700195
    9. '_input' → logprob: -5.4686174392700195
    10. ' input' → logprob: -5.5936174392700195

Token 4: '_y' (ID: 9410)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8132110238075256
    2. '[' → logprob: -1.1882109642028809
    3. '.' → logprob: -1.4382109642028809
    4. ')' → logprob: -5.438210964202881
    5. '=' → logprob: -6.063210964202881
    6. ',' → logprob: -6.063210964202881
    7. '._' → logprob: -6.313210964202881
    8. '```' → logprob: -6.563210964202881
    9. '_x' → logprob: -7.313210964202881
    10. '[]' → logprob: -8.688211441040039

Token 5: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0885305404663086
    2. '.' → logprob: -1.4635305404663086
    3. '[' → logprob: -1.5885305404663086
    4. '=' → logprob: -1.8385305404663086
    5. '_' → logprob: -3.5885305404663086
    6. '```' → logprob: -3.9635305404663086
    7. ')' → logprob: -4.463530540466309
    8. ' =' → logprob: -5.338530540466309
    9. ':' → logprob: -6.588530540466309
    10. '(' → logprob: -6.963530540466309

Token 6: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.549375593662262
    2. ' input' → logprob: -1.4243755340576172
    3. 'data' → logprob: -3.424375534057617
    4. ' x' → logprob: -4.049375534057617
    5. ' torch' → logprob: -4.174375534057617
    6. ' data' → logprob: -4.299375534057617
    7. 'x' → logprob: -4.299375534057617
    8. ' ' → logprob: -4.424375534057617
    9. ' []' → logprob: -4.424375534057617
    10. '[]' → logprob: -4.799375534057617

Token 7: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6469946503639221
    2. '(lambda' → logprob: -1.2719945907592773
    3. '(' → logprob: -1.7719945907592773
    4. '(str' → logprob: -4.146994590759277
    5. '(input' → logprob: -5.771994590759277
    6. '<|end|>' → logprob: -6.021994590759277
    7. 'int' → logprob: -6.896994590759277
    8. '```' → logprob: -7.146994590759277
    9. '[int' → logprob: -7.896994590759277
    10. '()' → logprob: -8.271994590759277

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5956887006759644
    2. ')' → logprob: -0.8456887006759644
    3. 'input' → logprob: -4.095688819885254
    4. '(' → logprob: -6.220688819885254
    5. ')(' → logprob: -8.345688819885254
    6. ',input' → logprob: -8.845688819885254
    7. '[input' → logprob: -9.345688819885254
    8. ' input' → logprob: -9.345688819885254
    9. '(raw' → logprob: -9.845688819885254
    10. '<|end|>' → logprob: -10.345688819885254

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3871104121208191
    2. ' input' → logprob: -1.1371104717254639
    3. ')' → logprob: -8.387110710144043
    4. '(input' → logprob: -11.887110710144043
    5. ',input' → logprob: -12.887110710144043
    6. ' )' → logprob: -13.887110710144043
    7. '=input' → logprob: -15.137110710144043
    8. '	input' → logprob: -15.512110710144043
    9. '```' → logprob: -16.012109756469727
    10. '[input' → logprob: -16.137109756469727

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7372807264328003
    2. '())' → logprob: -0.7372807264328003
    3. '().' → logprob: -3.23728084564209
    4. ')' → logprob: -6.48728084564209
    5. '());' → logprob: -7.11228084564209
    6. '(' → logprob: -7.36228084564209
    7. '(()' → logprob: -8.98728084564209
    8. '`()' → logprob: -9.23728084564209
    9. '();)' → logprob: -9.23728084564209
    10. '()`' → logprob: -9.48728084564209

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.157039049663581e-05
    2. 'strip' → logprob: -10.000051498413086
    3. ' split' → logprob: -12.750051498413086
    4. 'rstrip' → logprob: -13.000051498413086
    5. 'spl' → logprob: -14.250051498413086
    6. '(split' → logprob: -15.375051498413086
    7. '```' → logprob: -18.125051498413086
    8. ')' → logprob: -18.375051498413086
    9. 'startswith' → logprob: -18.375051498413086
    10. 'replace' → logprob: -19.500051498413086

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.21485202014446259
    2. ')' → logprob: -1.839851975440979
    3. '))' → logprob: -3.8398520946502686
    4. '()))' → logprob: -4.5898518562316895
    5. '()' → logprob: -5.9648518562316895
    6. '(' → logprob: -9.214852333068848
    7. '`)' → logprob: -9.839852333068848
    8. ' ())' → logprob: -10.464852333068848
    9. '('' → logprob: -10.589852333068848
    10. '```' → logprob: -11.589852333068848

Token 13: 'total' (ID: 9577)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0728105753660202
    2. '*' → logprob: -3.447810649871826
    3. '#' → logprob: -4.072810649871826
    4. '+
' → logprob: -5.447810649871826
    5. ',' → logprob: -5.572810649871826
    6. ')' → logprob: -5.947810649871826
    7. '<|end|>' → logprob: -5.947810649871826
    8. '\n' → logprob: -6.572810649871826
    9. 'if' → logprob: -7.197810649871826
    10. ':' → logprob: -7.197810649871826

Token 14: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004643961321562529
    2. '_sum' → logprob: -6.12964391708374
    3. '_space' → logprob: -7.37964391708374
    4. '_count' → logprob: -8.629644393920898
    5. '+' → logprob: -8.754644393920898
    6. '=' → logprob: -8.879644393920898
    7. ')' → logprob: -9.254644393920898
    8. '_score' → logprob: -9.379644393920898
    9. '_input' → logprob: -9.504644393920898
    10. '_s' → logprob: -9.629644393920898

Token 15: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4416937530040741
    2. '=' → logprob: -2.3166937828063965
    3. ' =' → logprob: -2.3166937828063965
    4. '+' → logprob: -2.4416937828063965
    5. '(' → logprob: -3.5666937828063965
    6. '+=' → logprob: -3.8166937828063965
    7. ' ' → logprob: -4.6916937828063965
    8. ' +' → logprob: -5.0666937828063965
    9. ')' → logprob: -5.8166937828063965
    10. '_' → logprob: -5.9416937828063965

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5601226091384888
    2. '0' → logprob: -1.0601226091384888
    3. ' input' → logprob: -2.560122489929199
    4. 'input' → logprob: -5.435122489929199
    5. ' int' → logprob: -7.435122489929199
    6. ' sum' → logprob: -9.0601224899292
    7. 'int' → logprob: -10.3101224899292
    8. 'sum' → logprob: -11.5601224899292
    9. ' ' → logprob: -12.4351224899292
    10. '100' → logprob: -12.5601224899292

Token 17: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011963368393480778
    2. ' input' → logprob: -5.011963367462158
    3. '0' → logprob: -5.261963367462158
    4. ' ' → logprob: -10.886963844299316
    5. 'int' → logprob: -11.011963844299316
    6. '(input' → logprob: -12.386963844299316
    7. 'x' → logprob: -12.386963844299316
    8. 'max' → logprob: -14.011963844299316
    9. '100' → logprob: -14.386963844299316
    10. 'total' → logprob: -14.761963844299316

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1632843017578125
    2. '<|end|>' → logprob: -3.1632843017578125
    3. 'if' → logprob: -3.2882843017578125
    4. ' if' → logprob: -3.7882843017578125
    5. 'for' → logprob: -3.7882843017578125
    6. ' for' → logprob: -4.6632843017578125
    7. ' 
' → logprob: -5.6632843017578125
    8. '\n' → logprob: -5.6632843017578125
    9. '' → logprob: -6.4132843017578125
    10. '+' → logprob: -6.4132843017578125

Token 19: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36187902092933655
    2. 'for' → logprob: -2.2368791103363037
    3. '\n' → logprob: -2.9868791103363037
    4. 'if' → logprob: -2.9868791103363037
    5. ' for' → logprob: -3.4868791103363037
    6. ' if' → logprob: -4.236878871917725
    7. '```' → logprob: -4.486878871917725
    8. '<|end|>' → logprob: -4.611878871917725
    9. ' ' → logprob: -4.986878871917725
    10. ' 
' → logprob: -5.236878871917725

Token 20: ' ' (ID: 220)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.013217770494520664
    2. 'input' → logprob: -4.388217926025391
    3. ' ' → logprob: -7.388217926025391
    4. ' total' → logprob: -9.76321792602539
    5. ' (' → logprob: -11.88821792602539
    6. ' x' → logprob: -12.13821792602539
    7. '(input' → logprob: -12.26321792602539
    8. ' ' → logprob: -12.38821792602539
    9. 'x' → logprob: -13.13821792602539
    10. '(' → logprob: -13.26321792602539

Token 21: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023301847279071808
    2. ' input' → logprob: -3.773301839828491
    3. 'x' → logprob: -10.77330207824707
    4. '(input' → logprob: -10.77330207824707
    5. 'total' → logprob: -11.77330207824707
    6. '(' → logprob: -13.14830207824707
    7. ' x' → logprob: -13.77330207824707
    8. ' ' → logprob: -14.39830207824707
    9. ' (' → logprob: -14.39830207824707
    10. ' total' → logprob: -14.64830207824707

Token 22: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.045062728226184845
    2. ' ' → logprob: -3.920062780380249
    3. ' ==' → logprob: -4.79506254196167
    4. ' <' → logprob: -4.92006254196167
    5. '0' → logprob: -5.29506254196167
    6. '<=' → logprob: -6.54506254196167
    7. ' >=' → logprob: -7.29506254196167
    8. ' >' → logprob: -7.92006254196167
    9. '+' → logprob: -8.045063018798828
    10. '<' → logprob: -9.045063018798828

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141665637493134
    2. ' input' → logprob: -1.7014166116714478
    3. 'x' → logprob: -13.326416969299316
    4. 'int' → logprob: -14.826416969299316
    5. ' ' → logprob: -14.826416969299316
    6. ' x' → logprob: -15.451416969299316
    7. '=input' → logprob: -15.701416969299316
    8. '(input' → logprob: -15.951416969299316
    9. '<input' → logprob: -16.326416015625
    10. 'Input' → logprob: -16.326416015625

Token 24: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.007717720698565245
    2. '_y' → logprob: -4.882717609405518
    3. '_' → logprob: -9.257718086242676
    4. ' _' → logprob: -11.882718086242676
    5. '_s' → logprob: -12.882718086242676
    6. 'x' → logprob: -13.132718086242676
    7. '_a' → logprob: -13.382718086242676
    8. '_w' → logprob: -14.257718086242676
    9. '_t' → logprob: -15.132718086242676
    10. ')_' → logprob: -15.132718086242676

Token 25: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3291343152523041
    2. '<=' → logprob: -1.5791343450546265
    3. ' and' → logprob: -2.954134225845337
    4. 'and' → logprob: -3.829134225845337
    5. ' ' → logprob: -8.204133987426758
    6. ' <' → logprob: -9.704133987426758
    7. '<' → logprob: -10.204133987426758
    8. '+' → logprob: -10.829133987426758
    9. '```' → logprob: -11.329133987426758
    10. '[' → logprob: -11.829133987426758

Token 26: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.293451189994812
    2. '10' → logprob: -2.5434513092041016
    3. '5' → logprob: -2.7934513092041016
    4. '6' → logprob: -3.4184513092041016
    5. '9' → logprob: -3.5434513092041016
    6. '100' → logprob: -4.418451309204102
    7. '4' → logprob: -4.543451309204102
    8. ' ' → logprob: -5.293451309204102
    9. '7' → logprob: -5.293451309204102
    10. '2' → logprob: -5.543451309204102

Token 27: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.09666109085083
    2. '10' → logprob: -1.34666109085083
    3. '5' → logprob: -2.22166109085083
    4. '6' → logprob: -2.34666109085083
    5. '9' → logprob: -2.34666109085083
    6. '4' → logprob: -3.59666109085083
    7. '100' → logprob: -3.84666109085083
    8. '8' → logprob: -4.34666109085083
    9. '20' → logprob: -4.72166109085083
    10. '7' → logprob: -4.84666109085083

Token 28: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04123075306415558
    2. ':' → logprob: -3.2912306785583496
    3. 'and' → logprob: -5.91623067855835
    4. ' :' → logprob: -7.91623067855835
    5. ' ' → logprob: -9.791231155395508
    6. ':
' → logprob: -10.541231155395508
    7. '   ' → logprob: -10.916231155395508
    8. ' or' → logprob: -11.791231155395508
    9. '    ' → logprob: -11.916231155395508
    10. '	and' → logprob: -13.666231155395508

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02738039940595627
    2. ' ' → logprob: -5.277380466461182
    3. '<|end|>' → logprob: -5.402380466461182
    4. ':' → logprob: -5.652380466461182
    5. '    ' → logprob: -5.652380466461182
    6. '    
' → logprob: -5.777380466461182
    7. '
' → logprob: -6.152380466461182
    8. ':
' → logprob: -6.652380466461182
    9. ' 
' → logprob: -6.902380466461182
    10. '\n' → logprob: -7.402380466461182

Token 30: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.32230743765830994
    2. 'total' (adapté à ' total') → logprob: -1.3223074674606323
    3. ' if' → logprob: -5.447307586669922
    4. ' ' → logprob: -6.197307586669922
    5. 'if' → logprob: -6.697307586669922
    6. ' 
' → logprob: -7.947307586669922
    7. '    ' → logprob: -8.197307586669922
    8. '   ' → logprob: -8.572307586669922
    9. '
' → logprob: -8.697307586669922
    10. ' for' → logprob: -9.697307586669922

Token 31: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00017433916218578815
    2. '_' → logprob: -9.750174522399902
    3. '_scores' → logprob: -9.750174522399902
    4. '_s' → logprob: -10.000174522399902
    5. '_sc' → logprob: -13.000174522399902
    6. ' _' → logprob: -13.250174522399902
    7. '```' → logprob: -13.500174522399902
    8. 'score' → logprob: -13.625174522399902
    9. '_points' → logprob: -14.375174522399902
    10. '_value' → logprob: -14.625174522399902

Token 32: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0019669353496283293
    2. '+=' → logprob: -6.376966953277588
    3. ' =' → logprob: -8.37696647644043
    4. ' ' → logprob: -11.00196647644043
    5. '+' → logprob: -12.00196647644043
    6. ' +' → logprob: -12.12696647644043
    7. '=' → logprob: -13.12696647644043
    8. ' -=' → logprob: -13.25196647644043
    9. '    ' → logprob: -14.25196647644043
    10. '```' → logprob: -14.50196647644043

Token 33: ' (' (ID: 350)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9623395800590515
    2. 'input' → logprob: -1.5873396396636963
    3. '10' → logprob: -2.0873396396636963
    4. '1' → logprob: -2.5873396396636963
    5. '3' → logprob: -2.9623396396636963
    6. '5' → logprob: -3.5873396396636963
    7. '6' → logprob: -3.9623396396636963
    8. '4' → logprob: -3.9623396396636963
    9. '2' → logprob: -4.462339401245117
    10. '300' → logprob: -4.587339401245117

Token 34: '4' (ID: 19)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4393395483493805
    2. '10' → logprob: -2.0643396377563477
    3. '100' → logprob: -2.8143396377563477
    4. '3' → logprob: -3.1893396377563477
    5. '5' → logprob: -3.8143396377563477
    6. '6' → logprob: -4.189339637756348
    7. '4' → logprob: -4.189339637756348
    8. '1' → logprob: -4.314339637756348
    9. '2' → logprob: -4.939339637756348
    10. '50' → logprob: -5.314339637756348

Token 35: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1676640659570694
    2. '-' → logprob: -1.9176640510559082
    3. '-input' → logprob: -4.917664051055908
    4. '*' → logprob: -10.292664527893066
    5. ' ' → logprob: -11.042664527893066
    6. '**' → logprob: -11.917664527893066
    7. '0' → logprob: -11.917664527893066
    8. '   ' → logprob: -12.417664527893066
    9. '-score' → logprob: -12.417664527893066
    10. '+' → logprob: -12.667664527893066

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.428828626871109
    2. ' input' → logprob: -1.0538285970687866
    3. ')' → logprob: -9.178828239440918
    4. ' ' → logprob: -11.678828239440918
    5. '	input' → logprob: -12.553828239440918
    6. '_input' → logprob: -12.678828239440918
    7. '=input' → logprob: -12.678828239440918
    8. ' )' → logprob: -14.053828239440918
    9. 'x' → logprob: -14.178828239440918
    10. '*' → logprob: -14.553828239440918

Token 37: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.107425062713446e-06
    2. '_y' → logprob: -12.000006675720215
    3. '_' → logprob: -14.875006675720215
    4. 'x' → logprob: -15.250006675720215
    5. '_input' → logprob: -16.25000762939453
    6. ')_' → logprob: -16.25000762939453
    7. ' _' → logprob: -16.50000762939453
    8. ')' → logprob: -17.37500762939453
    9. '_score' → logprob: -17.87500762939453
    10. '_)' → logprob: -18.12500762939453

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019281631102785468
    2. ' )' → logprob: -6.876928329467773
    3. ')*' → logprob: -7.126928329467773
    4. '*' → logprob: -10.251928329467773
    5. ')**' → logprob: -10.751928329467773
    6. '   ' → logprob: -12.251928329467773
    7. ' -' → logprob: -12.251928329467773
    8. ' ' → logprob: -12.376928329467773
    9. ' *' → logprob: -12.751928329467773
    10. ' +' → logprob: -12.876928329467773

Token 39: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6554673314094543
    2. '*' → logprob: -0.7804673314094543
    3. ' ' → logprob: -4.780467510223389
    4. 'if' → logprob: -5.280467510223389
    5. ' if' → logprob: -5.280467510223389
    6. 'else' → logprob: -7.155467510223389
    7. 'elif' → logprob: -7.155467510223389
    8. '0' → logprob: -7.655467510223389
    9. '**' → logprob: -8.03046703338623
    10. ' **' → logprob: -8.15546703338623

Token 40: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8739491105079651
    2. '100' → logprob: -1.2489490509033203
    3. '3' → logprob: -2.1239490509033203
    4. 'input' → logprob: -3.6239490509033203
    5. '2' → logprob: -3.7489490509033203
    6. '5' → logprob: -3.7489490509033203
    7. '50' → logprob: -4.37394905090332
    8. '20' → logprob: -4.49894905090332
    9. '7' → logprob: -4.62394905090332
    10. ' ' → logprob: -4.62394905090332

Token 41: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.599053144454956
    2. '100' → logprob: -1.474053144454956
    3. 'input' → logprob: -2.599053144454956
    4. '3' → logprob: -3.349053144454956
    5. '5' → logprob: -4.224053382873535
    6. '2' → logprob: -4.349053382873535
    7. '50' → logprob: -4.474053382873535
    8. '20' → logprob: -4.599053382873535
    9. '6' → logprob: -4.724053382873535
    10. '60' → logprob: -4.849053382873535

Token 42: '**' (ID: 410)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6119177341461182
    2. '<|end|>' → logprob: -1.7369177341461182
    3. 'if' → logprob: -2.361917734146118
    4. ' if' → logprob: -2.611917734146118
    5. 'elif' → logprob: -3.236917734146118
    6. '+' → logprob: -4.236917495727539
    7. '*' → logprob: -4.486917495727539
    8. '
' → logprob: -4.736917495727539
    9. ' 
' → logprob: -4.736917495727539
    10. ' elif' → logprob: -4.861917495727539

Token 43: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1077154874801636
    2. '7' → logprob: -1.6077154874801636
    3. '2' → logprob: -1.9827154874801636
    4. '5' → logprob: -2.357715606689453
    5. '3' → logprob: -2.357715606689453
    6. '1' → logprob: -2.982715606689453
    7. '8' → logprob: -3.107715606689453
    8. '4' → logprob: -3.732715606689453
    9. '9' → logprob: -3.857715606689453
    10. '0' → logprob: -6.357715606689453

Token 44: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5264310240745544
    2. '<|end|>' → logprob: -1.5264310836791992
    3. ' ' → logprob: -2.776431083679199
    4. ' elif' → logprob: -2.901431083679199
    5. '+' → logprob: -3.276431083679199
    6. 'else' → logprob: -5.276431083679199
    7. ')' → logprob: -5.651431083679199
    8. '   ' → logprob: -5.651431083679199
    9. 'if' → logprob: -5.776431083679199
    10. '    ' → logprob: -6.151431083679199

Token 45: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20642364025115967
    2. '1' → logprob: -1.7064236402511597
    3. ' input' → logprob: -5.706423759460449
    4. 'input' → logprob: -7.081423759460449
    5. ' (' → logprob: -8.45642375946045
    6. '0' → logprob: -8.70642375946045
    7. '3' → logprob: -9.45642375946045
    8. '  ' → logprob: -9.45642375946045
    9. '2' → logprob: -9.95642375946045
    10. '4' → logprob: -9.95642375946045

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31741058826446533
    2. ' ' → logprob: -1.3174105882644653
    3. 'input' → logprob: -6.067410469055176
    4. ' input' → logprob: -6.817410469055176
    5. '2' → logprob: -8.317410469055176
    6. '3' → logprob: -8.317410469055176
    7. '4' → logprob: -9.067410469055176
    8. '0' → logprob: -10.442410469055176
    9. ' (' → logprob: -10.817410469055176
    10. '(' → logprob: -10.942410469055176

Token 48: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.004649184178560972
    2. '<=' → logprob: -5.3796491622924805
    3. ' ' → logprob: -11.12964916229248
    4. ' ≤' → logprob: -12.50464916229248
    5. ' <' → logprob: -13.12964916229248
    6. ' >=' → logprob: -13.50464916229248
    7. '<|end|>' → logprob: -13.50464916229248
    8. ' ' → logprob: -13.75464916229248
    9. '0' → logprob: -14.00464916229248
    10. ',' → logprob: -14.62964916229248

Token 49: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132753074169159
    2. ' input' → logprob: -1.3132753372192383
    3. ' ' → logprob: -11.813275337219238
    4. '(input' → logprob: -13.688275337219238
    5. 'int' → logprob: -13.813275337219238
    6. '	input' → logprob: -14.438275337219238
    7. '<input' → logprob: -14.938275337219238
    8. 'output' → logprob: -14.938275337219238
    9. '[input' → logprob: -15.000775337219238
    10. ' ' → logprob: -15.125775337219238

Token 50: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -8.697387966094539e-05
    2. '_x' → logprob: -9.375086784362793
    3. '_' → logprob: -13.625086784362793
    4. 'y' → logprob: -14.000086784362793
    5. '_a' → logprob: -17.87508773803711
    6. ' _' → logprob: -18.00008773803711
    7. '_input' → logprob: -18.37508773803711
    8. 'input' → logprob: -19.37508773803711
    9. '_z' → logprob: -19.50008773803711
    10. '_you' → logprob: -19.62508773803711

Token 51: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1426914781332016
    2. '<=' → logprob: -2.0176913738250732
    3. ' ' → logprob: -11.392691612243652
    4. ' and' → logprob: -13.892691612243652
    5. ' <' → logprob: -13.892691612243652
    6. '<' → logprob: -14.142691612243652
    7. ' ' → logprob: -14.392691612243652
    8. '   ' → logprob: -14.892691612243652
    9. ')<=' → logprob: -15.017691612243652
    10. 'and' → logprob: -15.142691612243652

Token 52: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.019055383279919624
    2. ' ' → logprob: -4.019055366516113
    3. '4' → logprob: -7.394055366516113
    4. '2' → logprob: -9.144055366516113
    5. '5' → logprob: -9.144055366516113
    6. '6' → logprob: -10.269055366516113
    7. '1' → logprob: -11.519055366516113
    8. '7' → logprob: -11.644055366516113
    9. '9' → logprob: -12.019055366516113
    10. '   ' → logprob: -12.144055366516113

Token 53: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002005961025133729
    2. ' ' → logprob: -7.2520060539245605
    3. '2' → logprob: -7.5020060539245605
    4. '4' → logprob: -7.7520060539245605
    5. '5' → logprob: -8.877005577087402
    6. '6' → logprob: -10.002005577087402
    7. '7' → logprob: -10.127005577087402
    8. '1' → logprob: -10.377005577087402
    9. '9' → logprob: -10.627005577087402
    10. '   ' → logprob: -11.752005577087402

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002840418368577957
    2. ':
' → logprob: -5.877840518951416
    3. ' :' → logprob: -10.502840042114258
    4. '   ' → logprob: -12.502840042114258
    5. ' :
' → logprob: -12.877840042114258
    6. ':

' → logprob: -14.002840042114258
    7. '):' → logprob: -14.877840042114258
    8. ' and' → logprob: -15.877840042114258
    9. ':**' → logprob: -16.002840042114258
    10. ':
' → logprob: -16.127840042114258

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01853337325155735
    2. ' total' → logprob: -4.643533229827881
    3. ':' → logprob: -5.393533229827881
    4. 'total' → logprob: -5.768533229827881
    5. '(total' → logprob: -7.893533229827881
    6. '       ' → logprob: -8.518533706665039
    7. ' ' → logprob: -8.893533706665039
    8. '    ' → logprob: -9.143533706665039
    9. ' (' → logprob: -9.768533706665039
    10. '(' → logprob: -9.893533706665039

Token 56: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6744206547737122
    2. 'total' (adapté à ' total') → logprob: -1.4244205951690674
    3. '   ' → logprob: -2.5494205951690674
    4. ' (' → logprob: -2.5494205951690674
    5. '(' → logprob: -2.6744205951690674
    6. '(total' → logprob: -3.9244205951690674
    7. '+' → logprob: -5.7994208335876465
    8. ' ' → logprob: -6.9244208335876465
    9. '    ' → logprob: -7.9244208335876465
    10. ' +' → logprob: -8.299420356750488

Token 57: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -9.984787902794778e-05
    2. '_code' → logprob: -10.500100135803223
    3. '_s' → logprob: -10.625100135803223
    4. '_' → logprob: -11.000100135803223
    5. '_scores' → logprob: -11.125100135803223
    6. '_y' → logprob: -12.625100135803223
    7. ' _' → logprob: -13.125100135803223
    8. ''_' → logprob: -13.250100135803223
    9. '```' → logprob: -13.500100135803223
    10. '_SCORE' → logprob: -14.000100135803223

Token 58: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07121703028678894
    2. '+=' → logprob: -2.6962170600891113
    3. '+' → logprob: -7.196217060089111
    4. ' +' → logprob: -7.571217060089111
    5. ' ' → logprob: -12.571216583251953
    6. ']+=' → logprob: -12.571216583251953
    7. '+='' → logprob: -12.821216583251953
    8. '+="' → logprob: -13.696216583251953
    9. '+=(' → logprob: -14.321216583251953
    10. ' -=' → logprob: -14.446216583251953

Token 59: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2520918846130371
    2. '(' → logprob: -1.502091884613037
    3. ' ' → logprob: -9.127092361450195
    4. '10' → logprob: -11.127092361450195
    5. '4' → logprob: -12.002092361450195
    6. '3' → logprob: -12.252092361450195
    7. '5' → logprob: -12.814592361450195
    8. '100' → logprob: -13.127092361450195
    9. '`' → logprob: -13.189592361450195
    10. '6' → logprob: -13.314592361450195

Token 60: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.48283517360687256
    2. '(' → logprob: -0.9828351736068726
    3. ' (' → logprob: -5.357835292816162
    4. ' ' → logprob: -5.732835292816162
    5. '5' → logprob: -8.107834815979004
    6. '10' → logprob: -8.357834815979004
    7. '3' → logprob: -8.982834815979004
    8. ')' → logprob: -10.482834815979004
    9. '6' → logprob: -10.857834815979004
    10. '7' → logprob: -10.982834815979004

Token 61: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25198104977607727
    2. '-' → logprob: -1.5019810199737549
    3. '-input' → logprob: -10.501980781555176
    4. ' ' → logprob: -10.751980781555176
    5. ' input' → logprob: -14.001980781555176
    6. 'input' → logprob: -14.876980781555176
    7. '    ' → logprob: -15.126980781555176
    8. ')' → logprob: -15.126980781555176
    9. '   ' → logprob: -15.376980781555176
    10. '-y' → logprob: -15.751980781555176

Token 62: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11284945160150528
    2. 'input' → logprob: -2.237849473953247
    3. ' ' → logprob: -11.612849235534668
    4. '<|end|>' → logprob: -12.362849235534668
    5. ')' → logprob: -12.487849235534668
    6. '_input' → logprob: -12.862849235534668
    7. ' y' → logprob: -12.987849235534668
    8. '=input' → logprob: -13.487849235534668
    9. '(input' → logprob: -13.987849235534668
    10. 'y' → logprob: -14.612849235534668

Token 63: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.000122608442325145
    2. '_x' → logprob: -9.250123023986816
    3. '_' → logprob: -10.625123023986816
    4. ')_' → logprob: -14.000123023986816
    5. 'y' → logprob: -14.250123023986816
    6. ' _' → logprob: -15.250123023986816
    7. '_ylabel' → logprob: -17.1251220703125
    8. '_j' → logprob: -17.1251220703125
    9. '_f' → logprob: -17.3751220703125
    10. ')' → logprob: -17.3751220703125

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001895935565698892
    2. ' )' → logprob: -8.750189781188965
    3. ')*' → logprob: -11.000189781188965
    4. '`)' → logprob: -12.125189781188965
    5. '   ' → logprob: -12.375189781188965
    6. '')' → logprob: -13.500189781188965
    7. '*' → logprob: -14.250189781188965
    8. ')`' → logprob: -14.250189781188965
    9. '）' → logprob: -14.750189781188965
    10. '")' → logprob: -15.125189781188965

Token 65: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.44721490144729614
    2. ' *' → logprob: -1.1972148418426514
    3. '0' → logprob: -3.4472148418426514
    4. '"' → logprob: -5.1972150802612305
    5. '10' → logprob: -5.4472150802612305
    6. '`' → logprob: -5.6972150802612305
    7. '000' → logprob: -5.9472150802612305
    8. '**' → logprob: -6.3222150802612305
    9. ')' → logprob: -6.5722150802612305
    10. ''' → logprob: -6.6972150802612305

Token 66: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12818394601345062
    2. ' ' → logprob: -2.1281838417053223
    3. '100' → logprob: -6.753183841705322
    4. '1' → logprob: -10.50318431854248
    5. '3' → logprob: -11.75318431854248
    6. '(' → logprob: -11.87818431854248
    7. '2' → logprob: -12.00318431854248
    8. '5' → logprob: -12.25318431854248
    9. '4' → logprob: -12.25318431854248
    10. '7' → logprob: -12.37818431854248

Token 67: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00038872790173627436
    2. '100' → logprob: -8.875389099121094
    3. '105' → logprob: -9.000389099121094
    4. ' ' → logprob: -9.500389099121094
    5. '4' → logprob: -10.875389099121094
    6. '5' → logprob: -11.000389099121094
    7. '1' → logprob: -12.500389099121094
    8. '(' → logprob: -13.000389099121094
    9. '104' → logprob: -13.000389099121094
    10. '3' → logprob: -13.125389099121094

Token 68: '**' (ID: 410)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.230977863073349
    2. '**' → logprob: -2.230977773666382
    3. '4' → logprob: -2.355977773666382
    4. '3' → logprob: -5.855978012084961
    5. '6' → logprob: -7.730978012084961
    6. '2' → logprob: -8.105978012084961
    7. '```' → logprob: -9.230978012084961
    8. '^' → logprob: -9.480978012084961
    9. '+' → logprob: -9.730978012084961
    10. '1' → logprob: -10.230978012084961

Token 69: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0027874077204614878
    2. '4' → logprob: -6.2527875900268555
    3. '3' → logprob: -7.3777875900268555
    4. '6' → logprob: -8.877787590026855
    5. '2' → logprob: -9.502787590026855
    6. '1' → logprob: -11.502787590026855
    7. '7' → logprob: -12.502787590026855
    8. '0' → logprob: -13.502787590026855
    9. '```' → logprob: -13.877787590026855
    10. ' ' → logprob: -14.127787590026855

Token 70: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.582133412361145
    2. '\n' → logprob: -1.832133412361145
    3. '<|end|>' → logprob: -2.4571332931518555
    4. ' if' → logprob: -3.0821332931518555
    5. '```' → logprob: -3.3321332931518555
    6. ' ' → logprob: -3.4571332931518555
    7. '\' → logprob: -3.7071332931518555
    8. '*' → logprob: -4.4571332931518555
    9. '   ' → logprob: -4.8321332931518555
    10. '+' → logprob: -5.0821332931518555

Token 71: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5247913599014282
    2. '
' → logprob: -2.2747912406921387
    3. '\n' → logprob: -2.3997912406921387
    4. '<|end|>' → logprob: -2.3997912406921387
    5. 'print' → logprob: -3.1497912406921387
    6. '#' → logprob: -3.7747912406921387
    7. ' if' → logprob: -4.274791240692139
    8. ' ' → logprob: -4.399791240692139
    9. 'elif' → logprob: -5.524791240692139
    10. '```' → logprob: -5.649791240692139

Token 72: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1468566209077835
    2. 'input' → logprob: -2.7718565464019775
    3. ' ' → logprob: -3.3968565464019775
    4. ' (' → logprob: -3.6468565464019775
    5. ' total' → logprob: -4.771856784820557
    6. 'total' → logprob: -6.146856784820557
    7. ' not' → logprob: -6.771856784820557
    8. '(' → logprob: -7.271856784820557
    9. '1' → logprob: -7.521856784820557
    10. '0' → logprob: -7.771856784820557

Token 73: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.16159068048000336
    2. '_' → logprob: -1.9115906953811646
    3. '_y' → logprob: -7.286590576171875
    4. '_z' → logprob: -8.536590576171875
    5. ' _' → logprob: -8.786590576171875
    6. '```' → logprob: -9.411590576171875
    7. '_

' → logprob: -9.536590576171875
    8. '_
' → logprob: -9.661590576171875
    9. 'x' → logprob: -10.786590576171875
    10. '_s' → logprob: -11.411590576171875

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0716865062713623
    2. '==' → logprob: -2.6966865062713623
    3. ' >' → logprob: -7.821686744689941
    4. ' !=' → logprob: -7.946686744689941
    5. ' <=' → logprob: -8.321686744689941
    6. ' >=' → logprob: -8.571686744689941
    7. ' ' → logprob: -8.696686744689941
    8. '=' → logprob: -9.321686744689941
    9. ' %' → logprob: -9.946686744689941
    10. '>' → logprob: -10.071686744689941

Token 75: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.742099404335022
    2. ' input' → logprob: -0.867099404335022
    3. ' ' → logprob: -2.9920992851257324
    4. '1' → logprob: -3.1170992851257324
    5. '3' → logprob: -4.992099285125732
    6. '2' → logprob: -6.867099285125732
    7. '4' → logprob: -7.117099285125732
    8. '0' → logprob: -8.24209976196289
    9. '5' → logprob: -9.11709976196289
    10. '<input' → logprob: -10.17959976196289

Token 76: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05392739549279213
    2. '1' → logprob: -3.053927421569824
    3. ' input' → logprob: -5.428927421569824
    4. '3' → logprob: -8.303927421569824
    5. '2' → logprob: -8.303927421569824
    6. ' ' → logprob: -8.428927421569824
    7. '0' → logprob: -9.428927421569824
    8. '4' → logprob: -9.803927421569824
    9. '5' → logprob: -11.303927421569824
    10. '<input' → logprob: -11.616427421569824

Token 77: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1858595311641693
    2. ':' → logprob: -1.8108595609664917
    3. 'and' → logprob: -5.685859680175781
    4. ' :' → logprob: -6.435859680175781
    5. ' or' → logprob: -7.685859680175781
    6. ' ' → logprob: -8.060859680175781
    7. '   ' → logprob: -9.185859680175781
    8. '    ' → logprob: -10.060859680175781
    9. ':
' → logprob: -10.060859680175781
    10. '*' → logprob: -10.310859680175781

Token 78: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07002902776002884
    2. 'input' → logprob: -2.6950290203094482
    3. ' ' → logprob: -9.445029258728027
    4. '1' → logprob: -12.195029258728027
    5. ' ' → logprob: -13.695029258728027
    6. '0' → logprob: -13.820029258728027
    7. '<input' → logprob: -13.945029258728027
    8. '(input' → logprob: -14.195029258728027
    9. '3' → logprob: -14.695029258728027
    10. '<|end|>' → logprob: -14.757529258728027

Token 79: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.3663626305060461e-05
    2. '_x' → logprob: -11.37501335144043
    3. '_' → logprob: -14.00001335144043
    4. ' _' → logprob: -14.12501335144043
    5. 'y' → logprob: -15.62501335144043
    6. '```' → logprob: -16.00001335144043
    7. '_w' → logprob: -17.75001335144043
    8. '_z' → logprob: -17.75001335144043
    9. '_j' → logprob: -17.87501335144043
    10. '_you' → logprob: -18.12501335144043

Token 80: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5234644412994385
    2. ' ==' → logprob: -0.8984644412994385
    3. '<|end|>' → logprob: -8.27346420288086
    4. ' ' → logprob: -10.14846420288086
    5. '=' → logprob: -10.77346420288086
    6. ' ' → logprob: -11.77346420288086
    7. '<|end|>' → logprob: -12.14846420288086
    8. ' in' → logprob: -12.27346420288086
    9. ')' → logprob: -13.14846420288086
    10. '===' → logprob: -14.02346420288086

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.428731232881546
    2. '1' → logprob: -1.0537312030792236
    3. '3' → logprob: -11.428730964660645
    4. '  ' → logprob: -11.553730964660645
    5. '<|end|>' → logprob: -12.053730964660645
    6. '2' → logprob: -13.553730964660645
    7. '   ' → logprob: -13.928730964660645
    8. '4' → logprob: -14.303730964660645
    9. ' ' → logprob: -15.491230964660645
    10. '<|end|>' → logprob: -15.553730964660645

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018189162015914917
    2. ' ' → logprob: -4.018188953399658
    3. '3' → logprob: -10.518189430236816
    4. '2' → logprob: -11.768189430236816
    5. '   ' → logprob: -13.768189430236816
    6. '  ' → logprob: -13.768189430236816
    7. '4' → logprob: -14.268189430236816
    8. '<|end|>' → logprob: -15.018189430236816
    9. '5' → logprob: -15.080689430236816
    10. '```' → logprob: -15.893189430236816

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00416126474738121
    2. ':
' → logprob: -5.504161357879639
    3. ' :' → logprob: -10.00416088104248
    4. '   ' → logprob: -10.50416088104248
    5. ' :
' → logprob: -12.75416088104248
    6. '):' → logprob: -13.00416088104248
    7. ':

' → logprob: -13.62916088104248
    8. ' and' → logprob: -13.87916088104248
    9. '**' → logprob: -14.50416088104248
    10. ':**' → logprob: -14.75416088104248

Token 84: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31800058484077454
    2. '   ' → logprob: -1.3180005550384521
    3. '       ' → logprob: -5.943000793457031
    4. ':
' → logprob: -6.443000793457031
    5. '.' → logprob: -9.693000793457031
    6. ' total' → logprob: -9.818000793457031
    7. 'total' → logprob: -10.068000793457031
    8. ' ' → logprob: -10.068000793457031
    9. ' :' → logprob: -10.193000793457031
    10. '    ' → logprob: -10.193000793457031

Token 85: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.3500739336013794
    2. ' total' → logprob: -1.2250739336013794
    3. '   ' → logprob: -6.60007381439209
    4. ' ' → logprob: -9.35007381439209
    5. '    ' → logprob: -9.97507381439209
    6. '	total' → logprob: -10.10007381439209
    7. '10' → logprob: -10.85007381439209
    8. '(total' → logprob: -11.85007381439209
    9. '+' → logprob: -12.10007381439209
    10. '```' → logprob: -12.28757381439209

Token 86: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.36574100604048e-06
    2. '_s' → logprob: -13.250004768371582
    3. '_scores' → logprob: -14.125004768371582
    4. '_code' → logprob: -14.125004768371582
    5. 'score' → logprob: -14.625004768371582
    6. '_' → logprob: -14.750004768371582
    7. '_sc' → logprob: -16.875003814697266
    8. '_answer' → logprob: -17.500003814697266
    9. '_output' → logprob: -17.625003814697266
    10. 'Score' → logprob: -17.750003814697266

Token 87: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.42971718311309814
    2. '+=' → logprob: -1.0547171831130981
    3. '+' → logprob: -7.054717063903809
    4. '=' → logprob: -9.304717063903809
    5. ' ' → logprob: -10.929717063903809
    6. ' =' → logprob: -11.054717063903809
    7. ' +' → logprob: -11.179717063903809
    8. '+='' → logprob: -13.054717063903809
    9. ' -=' → logprob: -13.429717063903809
    10. ']+=' → logprob: -13.554717063903809

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.123039722442627
    2. '10' → logprob: -1.498039722442627
    3. '5' → logprob: -1.873039722442627
    4. '500' → logprob: -2.123039722442627
    5. '100' → logprob: -2.623039722442627
    6. '400' → logprob: -3.498039722442627
    7. '1' → logprob: -3.623039722442627
    8. '4' → logprob: -4.123039722442627
    9. '2' → logprob: -4.873039722442627
    10. '3' → logprob: -4.873039722442627

Token 89: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7386713027954102
    2. '5' → logprob: -1.4886713027954102
    3. '100' → logprob: -2.36367130279541
    4. '500' → logprob: -2.61367130279541
    5. '1' → logprob: -3.23867130279541
    6. '4' → logprob: -3.36367130279541
    7. '400' → logprob: -3.61367130279541
    8. '3' → logprob: -5.23867130279541
    9. '7' → logprob: -5.23867130279541
    10. '700' → logprob: -5.48867130279541

Token 90: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15040643513202667
    2. '0' → logprob: -3.2754063606262207
    3. ')' → logprob: -3.9004063606262207
    4. '.' → logprob: -4.275406360626221
    5. '#' → logprob: -4.275406360626221
    6. ' ' → logprob: -4.775406360626221
    7. '<|end|>' → logprob: -5.025406360626221
    8. ' print' → logprob: -5.150406360626221
    9. '
' → logprob: -5.400406360626221
    10. '*' → logprob: -5.775406360626221

Token 91: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011802274966612458
    2. ' ' → logprob: -7.501180171966553
    3. '1' → logprob: -8.251180648803711
    4. '100' → logprob: -8.376180648803711
    5. '(' → logprob: -9.001180648803711
    6. '2' → logprob: -13.126180648803711
    7. '0' → logprob: -13.126180648803711
    8. '5' → logprob: -13.501180648803711
    9. ' (' → logprob: -13.626180648803711
    10. '7' → logprob: -13.751180648803711

Token 92: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023154958034865558
    2. '100' → logprob: -9.250231742858887
    3. '1' → logprob: -9.750231742858887
    4. '(' → logprob: -10.000231742858887
    5. ' ' → logprob: -10.500231742858887
    6. '105' → logprob: -14.375231742858887
    7. '5' → logprob: -14.500231742858887
    8. '7' → logprob: -14.625231742858887
    9. '4' → logprob: -14.750231742858887
    10. '9' → logprob: -14.875231742858887

Token 93: '**' (ID: 410)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05055483430624008
    2. '6' → logprob: -3.6755547523498535
    3. '**' → logprob: -3.9255547523498535
    4. '4' → logprob: -5.5505547523498535
    5. '7' → logprob: -8.675555229187012
    6. '3' → logprob: -9.675555229187012
    7. '0' → logprob: -10.800555229187012
    8. '```' → logprob: -11.050555229187012
    9. ' ' → logprob: -11.300555229187012
    10. '*' → logprob: -11.425555229187012

Token 94: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.4330315589904785
    2. '5' → logprob: -1.0580315589904785
    3. '4' → logprob: -6.0580315589904785
    4. '7' → logprob: -6.3080315589904785
    5. '3' → logprob: -9.18303108215332
    6. '8' → logprob: -10.18303108215332
    7. '9' → logprob: -12.05803108215332
    8. '2' → logprob: -12.18303108215332
    9. '```' → logprob: -12.93303108215332
    10. '1' → logprob: -13.62053108215332

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8192110061645508
    2. '\n' → logprob: -1.0692110061645508
    3. '<|end|>' → logprob: -2.569211006164551
    4. ':' → logprob: -3.819211006164551
    5. ')' → logprob: -4.069211006164551
    6. '#' → logprob: -4.194211006164551
    7. '\' → logprob: -4.319211006164551
    8. 'else' → logprob: -4.319211006164551
    9. '```' → logprob: -4.444211006164551
    10. 'print' → logprob: -4.444211006164551

Token 96: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4678138494491577
    2. '
' → logprob: -1.5928138494491577
    3. ')' → logprob: -1.9678138494491577
    4. '\n' → logprob: -2.0928139686584473
    5. '<|end|>' → logprob: -2.0928139686584473
    6. '#' → logprob: -2.4678139686584473
    7. ':' → logprob: -3.7178139686584473
    8. 'else' → logprob: -4.217813968658447
    9. ' ' → logprob: -4.717813968658447
    10. '\' → logprob: -4.967813968658447

Token 97: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062077928334474564
    2. '(total' → logprob: -2.8120779991149902
    3. '('' → logprob: -10.062077522277832
    4. '(input' → logprob: -10.437077522277832
    5. '("("' → logprob: -10.687077522277832
    6. 'total' → logprob: -12.062077522277832
    7. '(`' → logprob: -12.562077522277832
    8. ' (' → logprob: -13.187077522277832
    9. '(output' → logprob: -14.562077522277832
    10. '()' → logprob: -14.562077522277832

Token 98: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.8921695047756657e-05
    2. '_' → logprob: -11.125028610229492
    3. ')_' → logprob: -12.375028610229492
    4. '_scores' → logprob: -12.750028610229492
    5. ')' → logprob: -13.000028610229492
    6. '_s' → logprob: -13.250028610229492
    7. '_)' → logprob: -13.875028610229492
    8. 'score' → logprob: -14.000028610229492
    9. '_code' → logprob: -14.875028610229492
    10. '_sc' → logprob: -15.000028610229492

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.25
    3. ')`' → logprob: -17.5
    4. '))' → logprob: -18.25
    5. ')
' → logprob: -18.75
    6. '`)' → logprob: -20.5
    7. '')' → logprob: -20.875
    8. '）' → logprob: -21.375
    9. '),' → logprob: -21.5
    10. ')}' → logprob: -22.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 53.61%
Précision adaptée (1ère position): 54.64%
Précision (top 10): 87.63%
================================================================================
