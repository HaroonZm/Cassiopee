================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, raw_input().split())
if a + b == 15:
    print "+"
elif a * b == 15:
    print "*"
else:
    print "x"
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13601942360401154
    2. '0' → logprob: -2.761019468307495
    3. '1' → logprob: -2.886019468307495
    4. '10' → logprob: -4.886019229888916
    5. '5' → logprob: -8.761019706726074
    6. '42' → logprob: -9.511019706726074
    7. 'input' → logprob: -10.011019706726074
    8. '[' → logprob: -10.011019706726074
    9. 'a' → logprob: -10.386019706726074
    10. ' [' → logprob: -10.386019706726074

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19934040307998657
    2. '(lambda' → logprob: -2.324340343475342
    3. '```' → logprob: -2.699340343475342
    4. '<|end|>' → logprob: -4.699340343475342
    5. ')' → logprob: -7.074340343475342
    6. '(int' → logprob: -7.324340343475342
    7. '[' → logprob: -7.574340343475342
    8. '`' → logprob: -7.824340343475342
    9. '[int' → logprob: -8.1993408203125
    10. '<|end|>' → logprob: -8.3243408203125

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5411503314971924
    2. '(input' → logprob: -1.0411503314971924
    3. '(' → logprob: -2.9161503314971924
    4. 'input' → logprob: -5.666150093078613
    5. '```' → logprob: -6.291150093078613
    6. '(user' → logprob: -6.916150093078613
    7. '`)' → logprob: -7.666150093078613
    8. ',' → logprob: -7.791150093078613
    9. '(data' → logprob: -7.916150093078613
    10. '))' → logprob: -8.291150093078613

Token 7: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.23583000898361206
    2. ' input' → logprob: -1.6108300685882568
    3. '(input' → logprob: -4.610829830169678
    4. ')' → logprob: -7.860829830169678
    5. '=input' → logprob: -11.860830307006836
    6. ',input' → logprob: -11.860830307006836
    7. ' )' → logprob: -12.110830307006836
    8. '<input' → logprob: -13.110830307006836
    9. 'user' → logprob: -13.110830307006836
    10. '[input' → logprob: -13.360830307006836

Token 8: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.03379334136843681
    2. '_' → logprob: -3.7837934494018555
    3. '(' → logprob: -4.9087934494018555
    4. 'input' → logprob: -6.4087934494018555
    5. ')' → logprob: -7.5337934494018555
    6. '(_' → logprob: -8.158793449401855
    7. '```' → logprob: -8.658793449401855
    8. '(input' → logprob: -8.783793449401855
    9. ' input' → logprob: -9.783793449401855
    10. ')_' → logprob: -10.033793449401855

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46288296580314636
    2. ')' → logprob: -1.7128829956054688
    3. '())' → logprob: -2.0878829956054688
    4. '('' → logprob: -3.2128829956054688
    5. '()' → logprob: -4.212882995605469
    6. '(()' → logprob: -6.337882995605469
    7. '("("' → logprob: -6.587882995605469
    8. '(
' → logprob: -6.837882995605469
    9. '<|end|>' → logprob: -6.837882995605469
    10. '(""))' → logprob: -7.337882995605469

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01387128233909607
    2. ')' → logprob: -5.013871192932129
    3. 'strip' → logprob: -5.013871192932129
    4. 'rstrip' → logprob: -8.013871192932129
    5. ' split' → logprob: -9.263871192932129
    6. 'read' → logprob: -10.513871192932129
    7. 'decode' → logprob: -11.763871192932129
    8. '(split' → logprob: -11.763871192932129
    9. 'parse' → logprob: -12.763871192932129
    10. 'startswith' → logprob: -13.013871192932129

Token 11: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6423394680023193
    2. '())' → logprob: -0.7673394680023193
    3. '))' → logprob: -5.017339706420898
    4. '()' → logprob: -6.267339706420898
    5. '()))' → logprob: -7.142339706420898
    6. '`)' → logprob: -8.517339706420898
    7. '(' → logprob: -9.517339706420898
    8. '')' → logprob: -10.767339706420898
    9. ' ())' → logprob: -11.142339706420898
    10. ')`' → logprob: -11.767339706420898

Token 12: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1984766721725464
    2. ')' → logprob: -1.1984766721725464
    3. '<|end|>' → logprob: -1.3234766721725464
    4. '.' → logprob: -3.198476791381836
    5. '+' → logprob: -3.573476791381836
    6. '\n' → logprob: -4.198476791381836
    7. '(' → logprob: -4.948476791381836
    8. ',' → logprob: -4.948476791381836
    9. '
' → logprob: -5.073476791381836
    10. '()' → logprob: -5.448476791381836

Token 13: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09839262068271637
    2. 'a' → logprob: -2.7233927249908447
    3. ' ' → logprob: -3.5983927249908447
    4. ' b' → logprob: -7.848392486572266
    5. ' ' → logprob: -8.973392486572266
    6. 'b' → logprob: -10.223392486572266
    7. ' not' → logprob: -10.348392486572266
    8. ' (' → logprob: -10.598392486572266
    9. '(a' → logprob: -10.848392486572266
    10. '  ' → logprob: -11.098392486572266

Token 14: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.057962991297245026
    2. ' <' → logprob: -3.6829628944396973
    3. '>' → logprob: -3.9329628944396973
    4. ' ==' → logprob: -5.432962894439697
    5. ' ' → logprob: -5.682962894439697
    6. '<' → logprob: -6.182962894439697
    7. '==' → logprob: -7.932962894439697
    8. ' >=' → logprob: -7.932962894439697
    9. ' <=' → logprob: -8.307963371276855
    10. '<|end|>' → logprob: -9.057963371276855

Token 15: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07895874977111816
    2. ' b' → logprob: -2.578958749771118
    3. ' ' → logprob: -10.078958511352539
    4. '1' → logprob: -11.203958511352539
    5. '<|end|>' → logprob: -11.703958511352539
    6. '>b' → logprob: -12.953958511352539
    7. '0' → logprob: -14.078958511352539
    8. '	b' → logprob: -15.203958511352539
    9. '_b' → logprob: -15.203958511352539
    10. '  ' → logprob: -15.328958511352539

Token 16: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11983995884656906
    2. '>' → logprob: -2.869839906692505
    3. ' ==' → logprob: -3.119839906692505
    4. '==' → logprob: -5.494840145111084
    5. ' <' → logprob: -5.994840145111084
    6. ' <=' → logprob: -6.494840145111084
    7. ' ' → logprob: -6.494840145111084
    8. ' !=' → logprob: -6.994840145111084
    9. ' >=' → logprob: -7.994840145111084
    10. '<' → logprob: -8.244839668273926

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04805510491132736
    2. '10' → logprob: -3.2980551719665527
    3. '0' → logprob: -5.298055171966553
    4. '100' → logprob: -5.923055171966553
    5. '42' → logprob: -6.798055171966553
    6. '1' → logprob: -8.298054695129395
    7. '20' → logprob: -8.423054695129395
    8. '3' → logprob: -8.798054695129395
    9. '7' → logprob: -9.048054695129395
    10. '  ' → logprob: -9.798054695129395

Token 18: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6498758792877197
    2. '3' → logprob: -1.6498758792877197
    3. '0' → logprob: -1.8998758792877197
    4. '100' → logprob: -2.6498758792877197
    5. ' ' → logprob: -3.1498758792877197
    6. '42' → logprob: -4.524875640869141
    7. '1' → logprob: -5.774875640869141
    8. '7' → logprob: -6.149875640869141
    9. 'a' → logprob: -6.774875640869141
    10. '15' → logprob: -6.774875640869141

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.967624019831419e-05
    2. ' :' → logprob: -9.750060081481934
    3. ':
' → logprob: -14.500060081481934
    4. ':**' → logprob: -15.000060081481934
    5. ' and' → logprob: -15.750060081481934
    6. '):' → logprob: -15.875060081481934
    7. ':return' → logprob: -16.750059127807617
    8. '>:' → logprob: -17.250059127807617
    9. '：' → logprob: -17.375059127807617
    10. ' or' → logprob: -17.750059127807617

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05124853551387787
    2. ' print' → logprob: -3.426248550415039
    3. 'print' → logprob: -4.426248550415039
    4. '\n' → logprob: -6.301248550415039
    5. '	print' → logprob: -6.801248550415039
    6. ':' → logprob: -7.301248550415039
    7. '<|end|>' → logprob: -7.926248550415039
    8. '    ' → logprob: -8.176248550415039
    9. '\' → logprob: -8.176248550415039
    10. ' ' → logprob: -8.426248550415039

Token 21: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.09546554833650589
    2. 'print' (adapté à ' print') → logprob: -2.470465660095215
    3. '   ' → logprob: -5.095465660095215
    4. '    ' → logprob: -8.095465660095215
    5. '	print' → logprob: -10.970465660095215
    6. ' ' → logprob: -11.345465660095215
    7. '       ' → logprob: -11.595465660095215
    8. ' pass' → logprob: -11.970465660095215
    9. '```' → logprob: -11.970465660095215
    10. '\n' → logprob: -12.095465660095215

Token 22: ' "+"
' (ID: 165471)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09044544398784637
    2. '("' → logprob: -2.5904455184936523
    3. '('' → logprob: -5.215445518493652
    4. '"' → logprob: -5.465445518493652
    5. '(a' → logprob: -7.215445518493652
    6. '()' → logprob: -8.465445518493652
    7. ' ' → logprob: -8.465445518493652
    8. '15' → logprob: -8.840445518493652
    9. ''' → logprob: -8.965445518493652
    10. '(True' → logprob: -9.340445518493652

Token 23: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2140282392501831
    2. 'elif' → logprob: -1.714028239250183
    3. '<|end|>' → logprob: -4.839028358459473
    4. ' else' → logprob: -6.339028358459473
    5. ')' → logprob: -7.339028358459473
    6. ':' → logprob: -7.839028358459473
    7. 'es' → logprob: -7.839028358459473
    8. '```' → logprob: -8.214028358459473
    9. ' elif' → logprob: -8.339028358459473
    10. '()' → logprob: -8.714028358459473

Token 24: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.22364318370819092
    2. ' ' → logprob: -1.723643183708191
    3. 'a' → logprob: -3.9736433029174805
    4. ' b' → logprob: -6.5986433029174805
    5. '"' → logprob: -7.0986433029174805
    6. '  ' → logprob: -7.9736433029174805
    7. ' (' → logprob: -9.09864330291748
    8. 'b' → logprob: -9.09864330291748
    9. ''' → logprob: -9.22364330291748
    10. ' ' → logprob: -9.34864330291748

Token 25: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10201051831245422
    2. '+' → logprob: -2.352010488510132
    3. ' ' → logprob: -6.602010726928711
    4. '-' → logprob: -9.227010726928711
    5. ' ==' → logprob: -9.477010726928711
    6. ' -' → logprob: -9.477010726928711
    7. '<' → logprob: -10.602010726928711
    8. ' >' → logprob: -10.602010726928711
    9. '*' → logprob: -10.852010726928711
    10. ' <' → logprob: -11.102010726928711

Token 26: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2520560324192047
    2. ' b' → logprob: -1.5020560026168823
    3. ' ' → logprob: -9.252056121826172
    4. '<|end|>' → logprob: -10.877056121826172
    5. '10' → logprob: -13.252056121826172
    6. '+' → logprob: -13.752056121826172
    7. '7' → logprob: -14.002056121826172
    8. '  ' → logprob: -14.127056121826172
    9. '>b' → logprob: -14.127056121826172
    10. '5' → logprob: -14.502056121826172

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.021346576511859894
    2. '==' → logprob: -3.8963465690612793
    3. ' ' → logprob: -7.896346569061279
    4. ' <' → logprob: -9.271347045898438
    5. ' <=' → logprob: -9.271347045898438
    6. ' >' → logprob: -9.521347045898438
    7. ' >=' → logprob: -9.521347045898438
    8. '>' → logprob: -10.771347045898438
    9. '=' → logprob: -10.771347045898438
    10. ' =' → logprob: -11.271347045898438

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15378226339817047
    2. '15' → logprob: -2.028782367706299
    3. '30' → logprob: -4.903782367706299
    4. '0' → logprob: -6.153782367706299
    5. '25' → logprob: -7.403782367706299
    6. '10' → logprob: -8.15378189086914
    7. '20' → logprob: -8.40378189086914
    8. '1' → logprob: -8.65378189086914
    9. '5' → logprob: -10.40378189086914
    10. '24' → logprob: -10.65378189086914

Token 29: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.008899126201868057
    2. ' ' → logprob: -4.883899211883545
    3. '0' → logprob: -7.508899211883545
    4. '30' → logprob: -8.508898735046387
    5. '100' → logprob: -8.633898735046387
    6. '25' → logprob: -9.758898735046387
    7. '60' → logprob: -10.008898735046387
    8. '225' → logprob: -10.133898735046387
    9. '150' → logprob: -10.258898735046387
    10. '10' → logprob: -10.383898735046387

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003086486831307411
    2. ' :' → logprob: -8.250308990478516
    3. ':
' → logprob: -10.125308990478516
    4. '):' → logprob: -12.625308990478516
    5. '>:' → logprob: -13.875308990478516
    6. ':**' → logprob: -14.000308990478516
    7. '   ' → logprob: -14.250308990478516
    8. '+:' → logprob: -14.750308990478516
    9. ' and' → logprob: -15.500308990478516
    10. ' :
' → logprob: -15.750308990478516

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3274993598461151
    2. ':' → logprob: -1.4524993896484375
    3. '"' → logprob: -4.2024993896484375
    4. '    ' → logprob: -4.9524993896484375
    5. ' ' → logprob: -5.7024993896484375
    6. '<|end|>' → logprob: -5.7024993896484375
    7. ':
' → logprob: -5.8274993896484375
    8. '":' → logprob: -5.9524993896484375
    9. '       ' → logprob: -5.9524993896484375
    10. ' :' → logprob: -6.0774993896484375

Token 32: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.304667204618454
    2. ' print' → logprob: -1.9296672344207764
    3. 'print' (adapté à ' print') → logprob: -2.3046672344207764
    4. '       ' → logprob: -4.554666996002197
    5. '    ' → logprob: -5.304666996002197
    6. '"' → logprob: -7.304666996002197
    7. ' ' → logprob: -7.304666996002197
    8. '```' → logprob: -8.429667472839355
    9. '     ' → logprob: -8.804667472839355
    10. '	print' → logprob: -8.929667472839355

Token 33: ' "*' (ID: 32458)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07793530821800232
    2. ' "' → logprob: -2.827935218811035
    3. ' "-"' → logprob: -5.202935218811035
    4. '"+"' → logprob: -5.327935218811035
    5. ' "+"' → logprob: -5.827935218811035
    6. '("' → logprob: -7.077935218811035
    7. ' ' → logprob: -8.077935218811035
    8. '(' → logprob: -8.202935218811035
    9. ''' → logprob: -8.327935218811035
    10. '"-' → logprob: -8.452935218811035

Token 34: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004931025905534625
    2. '```' → logprob: -9.000493049621582
    3. '")' → logprob: -9.375493049621582
    4. '"
' → logprob: -9.500493049621582
    5. '+"' → logprob: -10.125493049621582
    6. '+' → logprob: -10.125493049621582
    7. ':' → logprob: -10.500493049621582
    8. '":' → logprob: -11.000493049621582
    9. '"+' → logprob: -11.250493049621582
    10. '<|end|>' → logprob: -11.250493049621582

Token 35: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.019492480903863907
    2. 'elif' → logprob: -4.1444926261901855
    3. '<|end|>' → logprob: -6.2694926261901855
    4. ' else' → logprob: -6.6444926261901855
    5. '```' → logprob: -8.644492149353027
    6. '<|end|>' → logprob: -11.644492149353027
    7. '#else' → logprob: -11.769492149353027
    8. ')' → logprob: -11.894492149353027
    9. '\' → logprob: -12.019492149353027
    10. '...' → logprob: -12.144492149353027

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005000127712264657
    2. ' :' → logprob: -8.500499725341797
    3. ':
' → logprob: -8.875499725341797
    4. '   ' → logprob: -9.125499725341797
    5. '":' → logprob: -10.750499725341797
    6. '):' → logprob: -11.375499725341797
    7. '":"' → logprob: -12.875499725341797
    8. '    ' → logprob: -13.500499725341797
    9. ' ":"' → logprob: -13.500499725341797
    10. '(":' → logprob: -13.625499725341797

Token 37: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.030250471085309982
    2. '   ' → logprob: -3.9052505493164062
    3. 'print' → logprob: -5.780250549316406
    4. ' ' → logprob: -5.780250549316406
    5. ' "' → logprob: -6.655250549316406
    6. ' print' → logprob: -6.905250549316406
    7. '  ' → logprob: -8.405250549316406
    8. ''' → logprob: -8.405250549316406
    9. '    ' → logprob: -8.655250549316406
    10. '""' → logprob: -9.155250549316406

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11580237746238708
    2. '"' → logprob: -2.36580228805542
    3. ' print' → logprob: -4.49080228805542
    4. '   ' → logprob: -6.11580228805542
    5. '-' → logprob: -7.11580228805542
    6. ' ' → logprob: -7.61580228805542
    7. '    ' → logprob: -8.615802764892578
    8. ' "' → logprob: -8.865802764892578
    9. '"-' → logprob: -8.990802764892578
    10. '  ' → logprob: -9.990802764892578

Token 39: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04426383599638939
    2. ' "' → logprob: -3.5442638397216797
    3. '("' → logprob: -4.91926383972168
    4. ' ' → logprob: -5.54426383972168
    5. '("")' → logprob: -6.41926383972168
    6. '""' → logprob: -7.91926383972168
    7. '()' → logprob: -8.04426383972168
    8. '(' → logprob: -8.66926383972168
    9. ' ""' → logprob: -9.04426383972168
    10. ' "-"' → logprob: -9.16926383972168

Token 40: 'x' (ID: 87)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015890071168541908
    2. '?' → logprob: -4.640890121459961
    3. '-"' → logprob: -5.515890121459961
    4. '"' → logprob: -7.265890121459961
    5. '15' → logprob: -7.890890121459961
    6. '?"' → logprob: -8.140890121459961
    7. '"-' → logprob: -8.140890121459961
    8. ' ' → logprob: -9.390890121459961
    9. '0' → logprob: -9.515890121459961
    10. 'None' → logprob: -9.765890121459961

Token 41: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.751746746478602e-05
    2. '+"' → logprob: -11.00004768371582
    3. 'x' → logprob: -11.37504768371582
    4. '"x' → logprob: -11.75004768371582
    5. '*"' → logprob: -13.00004768371582
    6. '"
' → logprob: -13.25004768371582
    7. ' "' → logprob: -13.37504768371582
    8. '```' → logprob: -13.50004768371582
    9. '?"' → logprob: -14.25004768371582
    10. '+' → logprob: -14.37504768371582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 35.90%
Précision (top 10): 74.36%
================================================================================
