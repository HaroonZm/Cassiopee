================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from fractions import gcd  # Importe la fonction gcd (Greatest Common Divisor) du module fractions (note: deprecated en Python 3.5+)

def main():
    # Lit une ligne de l'entrée standard et la convertit en entier
    N = int(input())  # N représente le nombre d'éléments dans la liste

    # Lit la ligne suivante, la découpe en sous-chaînes selon les espaces,
    # convertit chaque sous-chaîne en entier et rassemble le tout dans une liste
    A = list(map(int, input().split()))  # A contiendra la liste d'entiers

    mod = 10 ** 9 + 7  # Définit la valeur du modulo, qui est un grand nombre premier utilisé pour éviter les débordements

    b = 0  # Initialise la variable b à 0, elle sera utilisée pour stocker le résultat de la somme finale
    c = 1  # Initialise la variable c à 1, elle sera utilisée pour calculer le PPCM (Produit Plus Petit Commun Multiple)

    # Cette boucle parcourt chaque élément 'a' dans la liste A pour calculer le PPCM de tous les éléments de la liste
    for a in A:
        # Le PPCM de deux nombres x et y est (x * y) // gcd(x, y)
        # Ici, on met à jour 'c' à chaque itération pour qu'il contienne le PPCM courant
        c = c * a // gcd(c, a)  # 'c * a' multiplie c par a, 'gcd(c, a)' donne leur PGCD

    # On ramène la valeur de 'c' dans la plage [0, mod), c'est-à-dire qu'on fait le modulo mod
    c %= mod

    # Cette boucle parcourt à nouveau chaque élément 'a' pour calculer et ajouter à 'b' la quantité demandée
    for a in A:
        # pow(a, mod-2, mod) calcule l'inverse multiplicatif de a modulo mod, c'est-à-dire un nombre tel que (a * x) % mod == 1
        # En arithmétique modulaire, cela équivaut à a^(mod-2) % mod quand mod est premier, par le petit théorème de Fermat
        inv_a = pow(a, mod-2, mod) # Calcule l'inverse modulaire de a modulo mod

        # c * inv_a donne une valeur qui équivaut à c // a modulo mod
        # On ajoute cette valeur à b, ainsi b accumule les valeurs pour tous les éléments de A
        b += c * inv_a  # On ajoute la quantité pour cet a à la somme totale b

    # Enfin, on affiche la somme totale b modulo mod pour garantir que le résultat tient dans des bornes raisonnables
    print(b % mod)

# Ce bloc conditionnel permet de n'exécuter la fonction main() que si le script est exécuté comme programme principal
if __name__ == "__main__":
    main()  # On appelle la fonction main pour lancer le programme
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' fractions' (ID: 110523)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.38701415061950684
    2. ' Fraction' → logprob: -1.1370141506195068
    3. 'Fra' → logprob: -9.137014389038086
    4. ' fractions' → logprob: -10.637014389038086
    5. 'F' → logprob: -12.762014389038086
    6. 'fra' → logprob: -12.887014389038086
    7. ' Fra' → logprob: -13.137014389038086
    8. '`' → logprob: -13.887014389038086
    9. 'fraction' → logprob: -14.262014389038086
    10. '_fraction' → logprob: -14.387014389038086

Token 4: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2846316397190094
    2. 'as' → logprob: -2.4096317291259766
    3. ' as' → logprob: -2.4096317291259766
    4. '#' → logprob: -4.284631729125977
    5. '(
' → logprob: -4.659631729125977
    6. ')' → logprob: -4.909631729125977
    7. ' is' → logprob: -4.909631729125977
    8. '(as' → logprob: -5.409631729125977
    9. 'As' → logprob: -5.409631729125977
    10. ' #' → logprob: -5.784631729125977

Token 5: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.040890950709581375
    2. '(
' → logprob: -3.79089093208313
    3. ')' → logprob: -5.415891170501709
    4. ' (' → logprob: -6.040891170501709
    5. ',' → logprob: -6.665891170501709
    6. ' ' → logprob: -7.165891170501709
    7. ' as' → logprob: -7.165891170501709
    8. '#' → logprob: -7.165891170501709
    9. '<|end|>' → logprob: -7.165891170501709
    10. 'as' → logprob: -7.290891170501709

Token 6: ' Im' (ID: 3133)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25624316930770874
    2. ')' → logprob: -2.6312432289123535
    3. '.' → logprob: -2.7562432289123535
    4. ' (' → logprob: -3.7562432289123535
    5. ' is' → logprob: -3.7562432289123535
    6. 'Deprecated' → logprob: -5.2562432289123535
    7. '(
' → logprob: -5.5062432289123535
    8. ',' → logprob: -5.6312432289123535
    9. '<|end|>' → logprob: -5.6312432289123535
    10. ' Deprecated' → logprob: -5.7562432289123535

Token 7: 'porte' (ID: 17761)
  Prédit: 'ported'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ported' → logprob: -0.3136216700077057
    2. 'port' → logprob: -1.3136216402053833
    3. 'proper' → logprob: -9.063621520996094
    4. 'portable' → logprob: -9.563621520996094
    5. 'porter' → logprob: -10.563621520996094
    6. 'proved' → logprob: -10.813621520996094
    7. 'por' → logprob: -10.813621520996094
    8. 'ports' → logprob: -10.813621520996094
    9. 'p' → logprob: -11.188621520996094
    10. 'possible' → logprob: -11.313621520996094

Token 8: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2259540557861328
    2. '(' → logprob: -1.9759540557861328
    3. 'deprecated' → logprob: -1.9759540557861328
    4. 'r' → logprob: -2.100954055786133
    5. 'de' → logprob: -2.850954055786133
    6. ' ' → logprob: -2.850954055786133
    7. 'd' → logprob: -3.100954055786133
    8. ')' → logprob: -3.600954055786133
    9. ' is' → logprob: -3.850954055786133
    10. ' (' → logprob: -3.850954055786133

Token 9: ' fonction' (ID: 17610)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.677832305431366
    2. ' deprecated' → logprob: -1.9278323650360107
    3. 'deprecated' → logprob: -2.1778323650360107
    4. ' de' → logprob: -2.4278323650360107
    5. ' module' → logprob: -2.8028323650360107
    6. 'math' → logprob: -3.8028323650360107
    7. '_' → logprob: -4.927832126617432
    8. 'module' → logprob: -5.052832126617432
    9. ' Deprecated' → logprob: -5.177832126617432
    10. 'de' → logprob: -5.302832126617432

Token 10: ' gcd' (ID: 106918)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7210356593132019
    2. 's' → logprob: -2.0960357189178467
    3. 'deprecated' → logprob: -2.2210357189178467
    4. ')' → logprob: -2.7210357189178467
    5. '_' → logprob: -2.9710357189178467
    6. ' deprecated' → logprob: -3.0960357189178467
    7. '(
' → logprob: -3.2210357189178467
    8. ',' → logprob: -3.7210357189178467
    9. ' (' → logprob: -4.971035480499268
    10. ' as' → logprob: -5.346035480499268

Token 11: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10525939613580704
    2. 'Dep' → logprob: -3.855259418487549
    3. ')' → logprob: -4.105259418487549
    4. '_' → logprob: -4.480259418487549
    5. ',' → logprob: -4.855259418487549
    6. 'Deprecated' → logprob: -4.980259418487549
    7. '(
' → logprob: -5.605259418487549
    8. 'deprecated' → logprob: -5.730259418487549
    9. ' ' → logprob: -5.855259418487549
    10. ' (' → logprob: -5.980259418487549

Token 12: 'Great' (ID: 19936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015174453146755695
    2. 'deprecated' → logprob: -4.765174388885498
    3. ' )' → logprob: -6.015174388885498
    4. ',' → logprob: -7.015174388885498
    5. ' deprecated' → logprob: -7.140174388885498
    6. '()' → logprob: -7.765174388885498
    7. 'from' → logprob: -7.890174388885498
    8. '`)' → logprob: -8.640174865722656
    9. ' from' → logprob: -8.765174865722656
    10. '),' → logprob: -9.265174865722656

Token 13: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0070536257699131966
    2. 'r' → logprob: -6.132053852081299
    3. 'common' → logprob: -6.257053852081299
    4. 'er' → logprob: -7.132053852081299
    5. 'st' → logprob: -7.382053852081299
    6. ' common' → logprob: -8.00705337524414
    7. 'test' → logprob: -8.25705337524414
    8. 'es' → logprob: -8.50705337524414
    9. '```' → logprob: -9.00705337524414
    10. 't' → logprob: -9.25705337524414

Token 14: ' Common' (ID: 14782)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27592045068740845
    2. '_common' → logprob: -2.2759203910827637
    3. 'Common' → logprob: -3.0259203910827637
    4. ')_' → logprob: -3.1509203910827637
    5. '_' → logprob: -4.900920391082764
    6. ')(' → logprob: -5.275920391082764
    7. ')(_' → logprob: -5.275920391082764
    8. '```' → logprob: -6.025920391082764
    9. '_div' → logprob: -6.650920391082764
    10. '_from' → logprob: -6.650920391082764

Token 15: ' Div' (ID: 12302)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.16755256056785583
    2. 'Div' → logprob: -2.2925524711608887
    3. '_de' → logprob: -4.292552471160889
    4. ')' → logprob: -4.667552471160889
    5. '_d' → logprob: -5.042552471160889
    6. '_den' → logprob: -5.542552471160889
    7. ' Div' → logprob: -5.667552471160889
    8. '_' → logprob: -6.042552471160889
    9. '_D' → logprob: -6.042552471160889
    10. 'div' → logprob: -6.042552471160889

Token 16: 'isor' (ID: 65473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0542534589767456
    2. 'ision' → logprob: -1.5542534589767456
    3. 'isible' → logprob: -2.054253578186035
    4. 'isor' → logprob: -2.554253578186035
    5. '`)' → logprob: -2.804253578186035
    6. 'ide' → logprob: -3.179253578186035
    7. '()' → logprob: -3.429253578186035
    8. 'ise' → logprob: -4.054253578186035
    9. '')' → logprob: -4.179253578186035
    10. 'ider' → logprob: -4.429253578186035

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022699201945215464
    2. '(' → logprob: -7.377269744873047
    3. 'def' → logprob: -8.127269744873047
    4. '#' → logprob: -8.627269744873047
    5. 's' → logprob: -8.752269744873047
    6. ',' → logprob: -9.127269744873047
    7. '_' → logprob: -9.127269744873047
    8. '<|end|>' → logprob: -9.127269744873047
    9. '()' → logprob: -9.252269744873047
    10. 'from' → logprob: -9.502269744873047

Token 18: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9649108648300171
    2. '
' → logprob: -1.714910864830017
    3. '<|end|>' → logprob: -1.964910864830017
    4. '(' → logprob: -2.4649109840393066
    5. '_' → logprob: -3.4649109840393066
    6. ' ' → logprob: -3.8399109840393066
    7. '

' → logprob: -3.8399109840393066
    8. ',' → logprob: -3.9649109840393066
    9. '\n' → logprob: -4.214910984039307
    10. '(
' → logprob: -4.589910984039307

Token 19: ' module' (ID: 8827)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.20703867077827454
    2. ' math' → logprob: -1.7070386409759521
    3. 'fra' → logprob: -5.207038879394531
    4. ' fractions' → logprob: -10.332038879394531
    5. '.math' → logprob: -10.457038879394531
    6. 'module' → logprob: -11.332038879394531
    7. 'from' → logprob: -11.582038879394531
    8. ' ' → logprob: -11.707038879394531
    9. '_math' → logprob: -11.832038879394531
    10. 'Math' → logprob: -12.457038879394531

Token 20: ' fractions' (ID: 110523)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -1.089097499847412
    2. '.math' → logprob: -1.464097499847412
    3. '_math' → logprob: -1.839097499847412
    4. 'from' → logprob: -2.464097499847412
    5. '<|end|>' → logprob: -3.464097499847412
    6. ' math' → logprob: -3.589097499847412
    7. '_f' → logprob: -3.589097499847412
    8. '.' → logprob: -4.089097499847412
    9. '_' → logprob: -4.339097499847412
    10. ',' → logprob: -4.339097499847412

Token 21: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4844743013381958
    2. '.' → logprob: -1.8594743013381958
    3. '_' → logprob: -1.8594743013381958
    4. ')' → logprob: -1.9844743013381958
    5. '#' → logprob: -2.3594741821289062
    6. 'Deprecated' → logprob: -3.4844741821289062
    7. ' ' → logprob: -4.109474182128906
    8. 'Dep' → logprob: -4.359474182128906
    9. 'deprecated' → logprob: -4.359474182128906
    10. '<|end|>' → logprob: -4.484474182128906

Token 22: 'note' (ID: 19320)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02174302190542221
    2. 'import' → logprob: -5.896742820739746
    3. ',' → logprob: -6.146742820739746
    4. '.' → logprob: -6.271742820739746
    5. 'from' → logprob: -6.271742820739746
    6. '_' → logprob: -6.521742820739746
    7. 'a' → logprob: -6.771742820739746
    8. ' ' → logprob: -6.771742820739746
    9. '#' → logprob: -6.896742820739746
    10. ' )' → logprob: -7.021742820739746

Token 23: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142659544944763
    2. '.' → logprob: -2.0764265060424805
    3. '_' → logprob: -4.3264265060424805
    4. 'import' → logprob: -4.3264265060424805
    5. 'from' → logprob: -4.8264265060424805
    6. ',' → logprob: -5.2014265060424805
    7. '<|end|>' → logprob: -5.3264265060424805
    8. 's' → logprob: -6.4514265060424805
    9. 'a' → logprob: -7.3264265060424805
    10. 'deprecated' → logprob: -7.3264265060424805

Token 24: ' deprecated' (ID: 66913)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4274202883243561
    2. ' math' → logprob: -1.3024202585220337
    3. 'math' → logprob: -3.1774203777313232
    4. ' )' → logprob: -4.052420139312744
    5. 'deprecated' → logprob: -5.052420139312744
    6. ' deprecated' → logprob: -6.177420139312744
    7. 'fra' → logprob: -6.677420139312744
    8. ' from' → logprob: -6.802420139312744
    9. 'from' → logprob: -7.552420139312744
    10. '.math' → logprob: -7.552420139312744

Token 25: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011537346988916397
    2. 'from' → logprob: -5.761537551879883
    3. '.' → logprob: -6.136537551879883
    4. ',' → logprob: -6.386537551879883
    5. '#' → logprob: -6.761537551879883
    6. '<|end|>' → logprob: -7.386537551879883
    7. '_' → logprob: -8.136537551879883
    8. 'a' → logprob: -8.136537551879883
    9. 'f' → logprob: -8.136537551879883
    10. 'g' → logprob: -8.261537551879883

Token 26: ' Python' (ID: 26534)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04936276748776436
    2. ' Python' → logprob: -3.1743626594543457
    3. 'math' → logprob: -5.299362659454346
    4. 'Python' → logprob: -7.174362659454346
    5. ' python' → logprob: -8.299363136291504
    6. 'python' → logprob: -9.049363136291504
    7. ' functools' → logprob: -9.799363136291504
    8. ' fractions' → logprob: -10.424363136291504
    9. ' mathematics' → logprob: -11.174363136291504
    10. '>' → logprob: -11.549363136291504

Token 27: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06248317286372185
    2. 'from' → logprob: -3.812483072280884
    3. '.' → logprob: -3.937483072280884
    4. ',' → logprob: -5.062483310699463
    5. '<|end|>' → logprob: -5.937483310699463
    6. 'import' → logprob: -6.312483310699463
    7. 'as' → logprob: -7.187483310699463
    8. 's' → logprob: -7.437483310699463
    9. 'math' → logprob: -7.562483310699463
    10. '.math' → logprob: -7.687483310699463

Token 28: '3' (ID: 18)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1505182981491089
    2. '.math' → logprob: -1.4005182981491089
    3. 'math' → logprob: -1.7755182981491089
    4. ')' → logprob: -2.0255184173583984
    5. '3' → logprob: -2.1505184173583984
    6. 'module' → logprob: -6.025518417358398
    7. '.utils' → logprob: -6.275518417358398
    8. '_math' → logprob: -6.525518417358398
    9. '.compat' → logprob: -6.650518417358398
    10. 'utils' → logprob: -6.775518417358398

Token 29: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012095758691430092
    2. 'from' → logprob: -5.137095928192139
    3. '.' → logprob: -6.387095928192139
    4. '<|end|>' → logprob: -7.137095928192139
    5. ',' → logprob: -7.387095928192139
    6. 'g' → logprob: -7.637095928192139
    7. '_' → logprob: -8.26209545135498
    8. '#' → logprob: -8.26209545135498
    9. 'import' → logprob: -8.26209545135498
    10. 'f' → logprob: -8.38709545135498

Token 30: '5' (ID: 20)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00703800143674016
    2. 'from' → logprob: -5.632038116455078
    3. ')
' → logprob: -6.882038116455078
    4. 'import' → logprob: -7.757038116455078
    5. '.' → logprob: -8.007038116455078
    6. 's' → logprob: -8.132038116455078
    7. ',' → logprob: -9.132038116455078
    8. 'g' → logprob: -9.257038116455078
    9. ' from' → logprob: -9.257038116455078
    10. '```' → logprob: -9.257038116455078

Token 31: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06269335746765137
    2. 'from' → logprob: -3.4376933574676514
    3. '#' → logprob: -4.6876935958862305
    4. '_' → logprob: -5.0626935958862305
    5. '.' → logprob: -5.6876935958862305
    6. ',' → logprob: -5.9376935958862305
    7. 'import' → logprob: -5.9376935958862305
    8. ' from' → logprob: -7.3126935958862305
    9. ')
' → logprob: -7.4376935958862305
    10. 'g' → logprob: -7.9376935958862305

Token 32: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06643462181091309
    2. 'from' → logprob: -3.691434621810913
    3. '#' → logprob: -4.441434860229492
    4. '<|end|>' → logprob: -4.816434860229492
    5. ',' → logprob: -5.566434860229492
    6. 'import' → logprob: -5.941434860229492
    7. '.' → logprob: -5.941434860229492
    8. '
' → logprob: -6.066434860229492
    9. ').' → logprob: -6.941434860229492
    10. ' ' → logprob: -7.441434860229492

Token 33: 'def' (ID: 1314)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5147186517715454
    2. ',' → logprob: -2.264718532562256
    3. '#' → logprob: -2.389718532562256
    4. 'import' → logprob: -2.639718532562256
    5. ')' → logprob: -3.514718532562256
    6. ' from' → logprob: -3.764718532562256
    7. '.' → logprob: -4.389718532562256
    8. '

' → logprob: -4.514718532562256
    9. ' as' → logprob: -4.889718532562256
    10. '
' → logprob: -5.264718532562256

Token 34: ' main' (ID: 2758)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.4230616092681885
    2. ' pg' → logprob: -1.7980616092681885
    3. ' ' → logprob: -2.1730616092681885
    4. ' compute' → logprob: -3.7980616092681885
    5. ' calculate' → logprob: -4.173061370849609
    6. ' rational' → logprob: -5.173061370849609
    7. ' simplify' → logprob: -5.298061370849609
    8. 'g' → logprob: -5.548061370849609
    9. ' add' → logprob: -5.798061370849609
    10. ' calcul' → logprob: -6.548061370849609

Token 35: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14349785447120667
    2. '():' → logprob: -2.018497943878174
    3. '(:' → logprob: -8.393497467041016
    4. '_' → logprob: -8.518497467041016
    5. ':' → logprob: -9.018497467041016
    6. ' (' → logprob: -9.518497467041016
    7. '(
' → logprob: -9.643497467041016
    8. '()' → logprob: -10.143497467041016
    9. '(**' → logprob: -11.143497467041016
    10. '(":' → logprob: -11.268497467041016

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030070269480347633
    2. ' ' → logprob: -4.0300703048706055
    3. 'n' → logprob: -5.5300703048706055
    4. '    ' → logprob: -6.4050703048706055
    5. 'a' → logprob: -6.9050703048706055
    6. ':' → logprob: -7.0300703048706055
    7. ',' → logprob: -7.5300703048706055
    8. '(n' → logprob: -7.6550703048706055
    9. '  ' → logprob: -7.7800703048706055
    10. '(' → logprob: -7.9050703048706055

Token 37: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8443326354026794
    2. '   ' → logprob: -1.5943326950073242
    3. ' a' → logprob: -1.9693326950073242
    4. 'n' → logprob: -2.094332695007324
    5. ' n' → logprob: -3.219332695007324
    6. 'x' → logprob: -4.219332695007324
    7. 'num' → logprob: -4.469332695007324
    8. ' num' → logprob: -4.594332695007324
    9. ' x' → logprob: -5.094332695007324
    10. ' ' → logprob: -5.219332695007324

Token 38: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12346025556325912
    2. ' a' → logprob: -3.248460292816162
    3. ' #' → logprob: -3.998460292816162
    4. '#' → logprob: -4.373460292816162
    5. ' ' → logprob: -4.498460292816162
    6. ' n' → logprob: -4.623460292816162
    7. 'a' → logprob: -4.873460292816162
    8. '  ' → logprob: -6.123460292816162
    9. ' calcul' → logprob: -6.373460292816162
    10. ' while' → logprob: -6.748460292816162

Token 39: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1520191431045532
    2. ' les' → logprob: -1.6520191431045532
    3. ' ' → logprob: -1.9020191431045532
    4. 'e' → logprob: -2.6520190238952637
    5. '   ' → logprob: -2.6520190238952637
    6. ' la' → logprob: -2.9020190238952637
    7. ' le' → logprob: -3.2770190238952637
    8. ' une' → logprob: -3.4020190238952637
    9. ' des' → logprob: -3.9020190238952637
    10. ' l' → logprob: -4.277019023895264

Token 40: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.1370599269866943
    2. ' fraction' → logprob: -1.8870599269866943
    3. 'fraction' → logprob: -1.8870599269866943
    4. ' ' → logprob: -2.0120599269866943
    5. 'nombre' → logprob: -3.0120599269866943
    6. 'entrée' → logprob: -3.1370599269866943
    7. '   ' → logprob: -3.3870599269866943
    8. 'chaine' → logprob: -4.012060165405273
    9. ' expression' → logprob: -4.262060165405273
    10. ' chaine' → logprob: -4.512060165405273

Token 41: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3987489938735962
    2. '()' → logprob: -1.6487489938735962
    3. 'input' → logprob: -3.7737488746643066
    4. ' input' → logprob: -3.7737488746643066
    5. ' de' → logprob: -4.023748874664307
    6. ' ' → logprob: -4.023748874664307
    7. ' =' → logprob: -4.398748874664307
    8. '(input' → logprob: -4.898748874664307
    9. '=input' → logprob: -4.898748874664307
    10. ',' → logprob: -5.398748874664307

Token 42: ' l' (ID: 305)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8380195498466492
    2. 'code' → logprob: -1.338019609451294
    3. ' input' → logprob: -1.338019609451294
    4. 'input' → logprob: -3.838019609451294
    5. 'entrée' → logprob: -4.338019371032715
    6. 'texte' → logprob: -5.838019371032715
    7. 's' → logprob: -6.463019371032715
    8. 'l' → logprob: -7.088019371032715
    9. ' texte' → logprob: -7.713019371032715
    10. '_code' → logprob: -7.713019371032715

Token 43: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.23367640376091003
    2. 'input' → logprob: -1.9836764335632324
    3. 'entrée' → logprob: -2.9836764335632324
    4. ''' → logprob: -4.983676433563232
    5. ' input' → logprob: -5.233676433563232
    6. ''utilisateur' → logprob: -5.483676433563232
    7. 'e' → logprob: -6.983676433563232
    8. ''ent' → logprob: -7.608676433563232
    9. 'stdin' → logprob: -7.608676433563232
    10. 'a' → logprob: -7.983676433563232

Token 44: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16293656826019287
    2. ' =' → logprob: -3.1629366874694824
    3. 'input' → logprob: -3.2879366874694824
    4. ' ' → logprob: -4.162936687469482
    5. ' input' → logprob: -4.412936687469482
    6. ',' → logprob: -4.537936687469482
    7. 's' → logprob: -4.787936687469482
    8. '=input' → logprob: -5.037936687469482
    9. ')' → logprob: -6.412936687469482
    10. '=' → logprob: -6.537936687469482

Token 45: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009548653848469257
    2. ' ' → logprob: -5.759548664093018
    3. '    ' → logprob: -6.884548664093018
    4. 's' → logprob: -6.884548664093018
    5. '  ' → logprob: -7.009548664093018
    6. 'input' → logprob: -7.509548664093018
    7. '   ' → logprob: -7.884548664093018
    8. 'n' → logprob: -8.00954818725586
    9. '    
' → logprob: -8.38454818725586
    10. ' input' → logprob: -8.50954818725586

Token 46: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6842321753501892
    2. ' split' → logprob: -1.559232234954834
    3. 'spl' → logprob: -2.309232234954834
    4. 'split' → logprob: -2.434232234954834
    5. ' récup' → logprob: -3.684232234954834
    6. ' l' → logprob: -4.434232234954834
    7. 'la' → logprob: -4.434232234954834
    8. 'strip' → logprob: -5.309232234954834
    9. ' convert' → logprob: -5.309232234954834
    10. ' tokenize' → logprob: -5.559232234954834

Token 47: ' convert' (ID: 8452)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.21340642869472504
    2. 'strip' → logprob: -3.0884063243865967
    3. '=' → logprob: -3.2134063243865967
    4. '.strip' → logprob: -3.4634063243865967
    5. 'rstrip' → logprob: -3.8384063243865967
    6. ' split' → logprob: -4.088406562805176
    7. ' =' → logprob: -4.213406562805176
    8. '.split' → logprob: -4.463406562805176
    9. 'spl' → logprob: -6.088406562805176
    10. 'replace' → logprob: -6.463406562805176

Token 48: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0015652115689590573
    2. 'i' → logprob: -6.876564979553223
    3. ' it' → logprob: -8.626564979553223
    4. '   ' → logprob: -8.876564979553223
    5. 'ie' → logprob: -9.626564979553223
    6. 't' → logprob: -9.876564979553223
    7. '```' → logprob: -10.376564979553223
    8. '_' → logprob: -11.751564979553223
    9. '  ' → logprob: -12.251564979553223
    10. '_it' → logprob: -12.501564979553223

Token 49: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.005013040266931057
    2. '   ' → logprob: -5.6300129890441895
    3. ' ' → logprob: -7.6300129890441895
    4. 'en' → logprob: -7.6300129890441895
    5. '    ' → logprob: -9.005013465881348
    6. ' in' → logprob: -10.005013465881348
    7. 'e' → logprob: -10.380013465881348
    8. '(' → logprob: -10.630013465881348
    9. ' into' → logprob: -10.755013465881348
    10. ',' → logprob: -10.880013465881348

Token 50: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7709168195724487
    2. ' un' → logprob: -1.2709168195724487
    3. ' ent' → logprob: -2.6459169387817383
    4. ' une' → logprob: -3.5209169387817383
    5. ' integers' → logprob: -3.5209169387817383
    6. ' ' → logprob: -4.020916938781738
    7. ' a' → logprob: -4.395916938781738
    8. 'a' → logprob: -4.395916938781738
    9. ' nombres' → logprob: -4.395916938781738
    10. ' entier' → logprob: -4.645916938781738

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7408266067504883
    2. 's' → logprob: -0.9908266067504883
    3. ',' → logprob: -3.2408266067504883
    4. ':' → logprob: -3.3658266067504883
    5. 'n' → logprob: -3.8658266067504883
    6. ' ' → logprob: -4.740826606750488
    7. '(' → logprob: -4.740826606750488
    8. ' :' → logprob: -4.865826606750488
    9. 'a' → logprob: -5.490826606750488
    10. '    ' → logprob: -5.615826606750488

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050576936453580856
    2. ' ' → logprob: -4.050577163696289
    3. 's' → logprob: -4.925577163696289
    4. ',' → logprob: -5.175577163696289
    5. 'n' → logprob: -5.175577163696289
    6. 'a' → logprob: -5.300577163696289
    7. '  ' → logprob: -6.550577163696289
    8. ':' → logprob: -6.550577163696289
    9. '    ' → logprob: -6.675577163696289
    10. ' ,' → logprob: -7.550577163696289

Token 53: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0907147154211998
    2. ' n' → logprob: -2.715714693069458
    3. 'x' → logprob: -4.590714931488037
    4. 'a' → logprob: -5.465714931488037
    5. '   ' → logprob: -6.465714931488037
    6. 'number' → logprob: -6.840714931488037
    7. 'num' → logprob: -6.965714931488037
    8. ' x' → logprob: -7.215714931488037
    9. ' number' → logprob: -7.465714931488037
    10. ' a' → logprob: -8.465714454650879

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021861758083105087
    2. '=' → logprob: -3.8968617916107178
    3. ' ' → logprob: -7.271861553192139
    4. '_' → logprob: -7.896861553192139
    5. '=int' → logprob: -9.021862030029297
    6. ')' → logprob: -10.271862030029297
    7. ',' → logprob: -10.521862030029297
    8. '_input' → logprob: -10.896862030029297
    9. '=input' → logprob: -11.396862030029297
    10. '  ' → logprob: -11.896862030029297

Token 55: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.043020881712436676
    2. 'int' → logprob: -3.1680209636688232
    3. ' ' → logprob: -11.543021202087402
    4. ' ' → logprob: -12.043021202087402
    5. '=int' → logprob: -13.418021202087402
    6. '[int' → logprob: -13.668021202087402
    7. '	int' → logprob: -13.918021202087402
    8. ' in' → logprob: -14.168021202087402
    9. '(int' → logprob: -14.418021202087402
    10. '<int' → logprob: -14.668021202087402

Token 56: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10022781789302826
    2. '(' → logprob: -2.3502278327941895
    3. 'input' → logprob: -10.850227355957031
    4. ' (' → logprob: -14.725227355957031
    5. '(
' → logprob: -14.725227355957031
    6. '()' → logprob: -14.850227355957031
    7. '('' → logprob: -15.475227355957031
    8. ' input' → logprob: -16.60022735595703
    9. '(s' → logprob: -16.72522735595703
    10. '(

' → logprob: -16.85022735595703

Token 57: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31392702460289
    2. '()' → logprob: -1.3139270544052124
    3. '(' → logprob: -8.438926696777344
    4. ')' → logprob: -8.563926696777344
    5. '()))' → logprob: -9.438926696777344
    6. '('' → logprob: -9.938926696777344
    7. ' ())' → logprob: -10.063926696777344
    8. '()>' → logprob: -11.188926696777344
    9. '();)' → logprob: -11.188926696777344
    10. '()`' → logprob: -11.813926696777344

Token 58: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21778832376003265
    2. '   ' → logprob: -2.2177882194519043
    3. '<|end|>' → logprob: -3.9677882194519043
    4. ' 
' → logprob: -4.217788219451904
    5. '    
' → logprob: -4.467788219451904
    6. ')' → logprob: -4.467788219451904
    7. ' ' → logprob: -4.592788219451904
    8. '  
' → logprob: -5.592788219451904
    9. '   
' → logprob: -5.842788219451904
    10. '  ' → logprob: -6.217788219451904

Token 59: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7631731629371643
    2. '   ' → logprob: -2.0131731033325195
    3. ' 
' → logprob: -2.3881731033325195
    4. ')' → logprob: -2.3881731033325195
    5. ' ' → logprob: -2.5131731033325195
    6. 'for' → logprob: -3.7631731033325195
    7. '    
' → logprob: -4.0131731033325195
    8. ' for' → logprob: -4.2631731033325195
    9. '   
' → logprob: -4.2631731033325195
    10. '  
' → logprob: -4.5131731033325195

Token 60: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31719541549682617
    2. ')' → logprob: -2.192195415496826
    3. ' )' → logprob: -2.817195415496826
    4. ' N' → logprob: -3.692195415496826
    5. '#' → logprob: -3.817195415496826
    6. ' #' → logprob: -4.317195415496826
    7. '  ' → logprob: -5.442195415496826
    8. 'input' → logprob: -5.942195415496826
    9. ' n' → logprob: -6.067195415496826
    10. ',' → logprob: -6.067195415496826

Token 61: ' représente' (ID: 88912)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04019610211253166
    2. 'le' → logprob: -3.790196180343628
    3. ' la' → logprob: -4.665195941925049
    4. ' l' → logprob: -5.790195941925049
    5. ' the' → logprob: -6.415195941925049
    6. ' ' → logprob: -6.540195941925049
    7. 'l' → logprob: -7.290195941925049
    8. 'the' → logprob: -8.665196418762207
    9. ' nombre' → logprob: -8.665196418762207
    10. 'la' → logprob: -9.540196418762207

Token 63: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5773230195045471
    2. 'nombre' → logprob: -0.8273230195045471
    3. ' ' → logprob: -8.327322959899902
    4. ' nombres' → logprob: -8.452322959899902
    5. 'Nombre' → logprob: -8.827322959899902
    6. 's' → logprob: -9.639822959899902
    7. 'plus' → logprob: -9.639822959899902
    8. 'n' → logprob: -9.764822959899902
    9. 'num' → logprob: -9.827322959899902
    10. '_nombre' → logprob: -9.952322959899902

Token 64: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06158149987459183
    2. ' de' → logprob: -3.686581611633301
    3. '<|end|>' → logprob: -4.186581611633301
    4. ' d' → logprob: -4.311581611633301
    5. ' des' → logprob: -6.936581611633301
    6. ' total' → logprob: -6.936581611633301
    7. 's' → logprob: -7.186581611633301
    8. '<|end|>' → logprob: -7.311581611633301
    9. ' )' → logprob: -7.436581611633301
    10. '  ' → logprob: -7.436581611633301

Token 65: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004659861326217651
    2. '_' → logprob: -6.254659652709961
    3. '  ' → logprob: -7.129659652709961
    4. 's' → logprob: -7.629659652709961
    5. ' s' → logprob: -7.879659652709961
    6. ' espaces' → logprob: -9.317159652709961
    7. ' éléments' → logprob: -9.379659652709961
    8. 'élé' → logprob: -9.504659652709961
    9. '-' → logprob: -9.692159652709961
    10. 'éros' → logprob: -9.879659652709961

Token 66: 'élé' (ID: 15228)
  Prédit: 'ombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ombres' → logprob: -0.6174700260162354
    2. 'ent' → logprob: -1.8674700260162354
    3. 'n' → logprob: -2.6174700260162354
    4. 'élé' → logprob: -2.9924700260162354
    5. 'éros' → logprob: -3.1174700260162354
    6. 'é' → logprob: -3.7424700260162354
    7. 'fants' → logprob: -4.742469787597656
    8. ' ent' → logprob: -4.992469787597656
    9. 'um' → logprob: -4.992469787597656
    10. '_ent' → logprob: -4.992469787597656

Token 67: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0001777960715116933
    2. 'ment' → logprob: -8.875177383422852
    3. 'm' → logprob: -10.625177383422852
    4. 'v' → logprob: -12.500177383422852
    5. 'éments' → logprob: -12.625177383422852
    6. 'phants' → logprob: -13.000177383422852
    7. '```' → logprob: -13.625177383422852
    8. 'MENTS' → logprob: -14.250177383422852
    9. 'ves' → logprob: -14.500177383422852
    10. 'ements' → logprob: -14.500177383422852

Token 68: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.034775469452142715
    2. 'la' → logprob: -3.659775495529175
    3. ' le' → logprob: -5.909775257110596
    4. ' l' → logprob: -6.034775257110596
    5. 'l' → logprob: -6.284775257110596
    6. 'le' → logprob: -7.284775257110596
    7. ' the' → logprob: -8.909775733947754
    8. ' ' → logprob: -8.909775733947754
    9. 'a' → logprob: -9.534775733947754
    10. 'list' → logprob: -9.659775733947754

Token 70: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.30872049927711487
    2. 'liste' → logprob: -2.308720588684082
    3. ' tableau' → logprob: -2.433720588684082
    4. ' sequence' → logprob: -3.183720588684082
    5. ' list' → logprob: -4.433720588684082
    6. 'list' → logprob: -5.183720588684082
    7. 's' → logprob: -5.308720588684082
    8. ' array' → logprob: -6.058720588684082
    9. 'sequence' → logprob: -6.308720588684082
    10. 'lst' → logprob: -6.683720588684082

Token 71: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27837708592414856
    2. '
' → logprob: -1.7783770561218262
    3. '    
' → logprob: -3.528377056121826
    4. 's' → logprob: -4.403377056121826
    5. 'elements' → logprob: -5.278377056121826
    6. '<|end|>' → logprob: -5.778377056121826
    7. 'n' → logprob: -5.903377056121826
    8. ' ' → logprob: -6.028377056121826
    9. ' 
' → logprob: -6.153377056121826
    10. '  ' → logprob: -6.403377056121826

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3608829975128174
    2. 'numbers' → logprob: -2.1108829975128174
    3. '
' → logprob: -2.4858829975128174
    4. 'list' → logprob: -3.7358829975128174
    5. 'elements' → logprob: -3.8608829975128174
    6. '    
' → logprob: -4.360882759094238
    7. 'lst' → logprob: -4.985882759094238
    8. ' numbers' → logprob: -4.985882759094238
    9. 'a' → logprob: -5.110882759094238
    10. 's' → logprob: -6.235882759094238

Token 73: ' #' (ID: 1069)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.1701267957687378
    2. 'lst' → logprob: -2.4201269149780273
    3. 'elements' → logprob: -3.5451269149780273
    4. 'arr' → logprob: -4.045126914978027
    5. 'values' → logprob: -4.920126914978027
    6. 'nums' → logprob: -5.045126914978027
    7. ' numbers' → logprob: -5.795126914978027
    8. 'L' → logprob: -6.545126914978027
    9. 'l' → logprob: -7.545126914978027
    10. 'A' → logprob: -7.920126914978027

Token 74: ' Lit' (ID: 45595)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.90242999792099
    2. 'lst' → logprob: -1.0274300575256348
    3. 'elements' → logprob: -2.4024300575256348
    4. 'arr' → logprob: -3.1524300575256348
    5. ' numbers' → logprob: -3.1524300575256348
    6. ' lst' → logprob: -4.027430057525635
    7. 'values' → logprob: -4.402430057525635
    8. ' elements' → logprob: -4.777430057525635
    9. 'nums' → logprob: -5.402430057525635
    10. 'A' → logprob: -5.902430057525635

Token 75: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.669693112373352
    2. ' une' → logprob: -0.919693112373352
    3. ' ' → logprob: -3.0446929931640625
    4. 'une' → logprob: -4.0446929931640625
    5. '()' → logprob: -4.1696929931640625
    6. 'a' → logprob: -5.7946929931640625
    7. 's' → logprob: -6.9196929931640625
    8. ' les' → logprob: -7.2946929931640625
    9. ' a' → logprob: -7.2946929931640625
    10. '(' → logprob: -7.5446929931640625

Token 76: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.25864046812057495
    2. ' suivante' → logprob: -2.7586405277252197
    3. 'liste' → logprob: -2.8836405277252197
    4. 's' → logprob: -3.1336405277252197
    5. ' ' → logprob: -3.8836405277252197
    6. ' prochaine' → logprob: -4.508640289306641
    7. ' ligne' → logprob: -4.508640289306641
    8. ' deuxième' → logprob: -5.258640289306641
    9. 'Liste' → logprob: -5.883640289306641
    10. 'suite' → logprob: -6.133640289306641

Token 77: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.005057756323367357
    2. ' suivant' → logprob: -6.2550578117370605
    3. '   ' → logprob: -6.6300578117370605
    4. ' suivantes' → logprob: -7.2550578117370605
    5. ' des' → logprob: -8.255057334899902
    6. ' siguiente' → logprob: -8.380057334899902
    7. ' suivants' → logprob: -8.630057334899902
    8. 's' → logprob: -9.005057334899902
    9. ' de' → logprob: -9.255057334899902
    10. 'su' → logprob: -9.755057334899902

Token 78: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060892149806022644
    2. '    
' → logprob: -4.185892105102539
    3. 's' → logprob: -4.685892105102539
    4. 'tokens' → logprob: -4.810892105102539
    5. 'numbers' → logprob: -5.185892105102539
    6. 'elements' → logprob: -5.935892105102539
    7. 'input' → logprob: -5.935892105102539
    8. ' numbers' → logprob: -6.060892105102539
    9. ' ' → logprob: -6.310892105102539
    10. '  ' → logprob: -6.560892105102539

Token 79: ' la' (ID: 557)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.0409389734268188
    2. ' lst' → logprob: -1.4159389734268188
    3. 'numbers' → logprob: -2.0409388542175293
    4. ' elements' → logprob: -2.4159388542175293
    5. ' elems' → logprob: -3.1659388542175293
    6. 'elements' → logprob: -3.5409388542175293
    7. ' arr' → logprob: -3.6659388542175293
    8. ' la' → logprob: -4.040938854217529
    9. 'values' → logprob: -4.415938854217529
    10. ' values' → logprob: -4.540938854217529

Token 80: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.33750492334365845
    2. ' split' → logprob: -1.4625048637390137
    3. ' list' → logprob: -3.7125048637390137
    4. ' liste' → logprob: -4.212504863739014
    5. ' map' → logprob: -5.337504863739014
    6. 'spl' → logprob: -5.962504863739014
    7. 's' → logprob: -6.212504863739014
    8. 'map' → logprob: -7.212504863739014
    9. ' input' → logprob: -7.212504863739014
    10. 'input' → logprob: -7.212504863739014

Token 81: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.09712344408035278
    2. 'p' → logprob: -3.597123384475708
    3. 'per' → logprob: -3.597123384475708
    4. 'page' → logprob: -3.597123384475708
    5. 'pé' → logprob: -4.847123622894287
    6. 'pte' → logprob: -7.597123622894287
    7. '```' → logprob: -8.472123146057129
    8. 'pa' → logprob: -8.722123146057129
    9. 'пе' → logprob: -9.034623146057129
    10. '    ' → logprob: -9.347123146057129

Token 82: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5730413794517517
    2. '()' → logprob: -1.8230414390563965
    3. 'input' → logprob: -2.4480414390563965
    4. 'en' → logprob: -2.4480414390563965
    5. '   ' → logprob: -3.5730414390563965
    6. ' input' → logprob: -4.4480414390563965
    7. ' into' → logprob: -4.5730414390563965
    8. ' ' → logprob: -4.5730414390563965
    9. 's' → logprob: -4.9480414390563965
    10. '=input' → logprob: -5.0730414390563965

Token 83: ' sous' (ID: 14487)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.6860979795455933
    2. 'tokens' → logprob: -2.311098098754883
    3. ' une' → logprob: -2.561098098754883
    4. ' éléments' → logprob: -2.811098098754883
    5. ' a' → logprob: -3.061098098754883
    6. ' nombres' → logprob: -3.186098098754883
    7. ' morceaux' → logprob: -3.686098098754883
    8. ' ent' → logprob: -3.936098098754883
    9. ' chaînes' → logprob: -3.936098098754883
    10. 'ent' → logprob: -4.311098098754883

Token 84: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.07269474118947983
    2. 'chain' → logprob: -3.697694778442383
    3. 'cha' → logprob: -3.822694778442383
    4. ' chain' → logprob: -4.447694778442383
    5. 'chaine' → logprob: -5.822694778442383
    6. 'strings' → logprob: -6.197694778442383
    7. '   ' → logprob: -6.572694778442383
    8. '_' → logprob: -7.072694778442383
    9. '_chain' → logprob: -7.072694778442383
    10. ' chaîne' → logprob: -7.322694778442383

Token 85: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.004637910984456539
    2. 'ines' → logprob: -5.879637718200684
    3. 'î' → logprob: -6.754637718200684
    4. 'nes' → logprob: -8.754637718200684
    5. '```' → logprob: -9.129637718200684
    6. '   ' → logprob: -9.254637718200684
    7. 'ï' → logprob: -10.129637718200684
    8. '	' → logprob: -10.129637718200684
    9. 'r' → logprob: -10.379637718200684
    10. 'îne' → logprob: -10.379637718200684

Token 86: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10593310743570328
    2. 's' → logprob: -2.85593318939209
    3. ',' → logprob: -3.73093318939209
    4. ' ,' → logprob: -5.85593318939209
    5. 'input' → logprob: -5.98093318939209
    6. 'tokens' → logprob: -5.98093318939209
    7. ')' → logprob: -6.10593318939209
    8. 'split' → logprob: -6.23093318939209
    9. '    ' → logprob: -6.60593318939209
    10. ' )' → logprob: -6.98093318939209

Token 87: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8927878737449646
    2. 'les' → logprob: -1.6427879333496094
    3. ' les' → logprob: -1.8927879333496094
    4. 'l' → logprob: -2.1427879333496094
    5. ' des' → logprob: -3.2677879333496094
    6. ' espaces' → logprob: -4.267787933349609
    7. 'des' → logprob: -4.392787933349609
    8. ''esp' → logprob: -4.392787933349609
    9. 'un' → logprob: -4.517787933349609
    10. 'esp' → logprob: -4.642787933349609

Token 88: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5777264833450317
    2. 'esp' → logprob: -0.8277264833450317
    3. ''esp' → logprob: -6.827726364135742
    4. 'es' → logprob: -8.077726364135742
    5. 'spaces' → logprob: -8.452726364135742
    6. ' espace' → logprob: -9.952726364135742
    7. ' espac' → logprob: -10.827726364135742
    8. ' espacios' → logprob: -10.952726364135742
    9. ' ' → logprob: -11.077726364135742
    10. ' spaces' → logprob: -11.077726364135742

Token 89: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15191780030727386
    2. 's' → logprob: -2.7769176959991455
    3. '    ' → logprob: -3.4019176959991455
    4. ',' → logprob: -3.5269176959991455
    5. 'tokens' → logprob: -5.151917934417725
    6. ' ,' → logprob: -6.026917934417725
    7. ' )' → logprob: -6.776917934417725
    8. ' ' → logprob: -6.901917934417725
    9. 'a' → logprob: -7.151917934417725
    10. '  ' → logprob: -7.526917934417725

Token 90: '   ' (ID: 271)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7228974103927612
    2. '   ' → logprob: -1.3478974103927612
    3. 'et' → logprob: -2.722897529602051
    4. ' et' → logprob: -2.972897529602051
    5. ' les' → logprob: -3.097897529602051
    6. 'p' → logprob: -3.472897529602051
    7. '    ' → logprob: -4.222897529602051
    8. ' ' → logprob: -4.472897529602051
    9. ' and' → logprob: -4.972897529602051
    10. 'split' → logprob: -5.722897529602051

Token 91: ' #' (ID: 1069)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.5332780480384827
    2. ' les' → logprob: -2.408277988433838
    3. 'p' → logprob: -2.658277988433838
    4. ' map' → logprob: -3.033277988433838
    5. 'et' → logprob: -3.158277988433838
    6. '   ' → logprob: -3.408277988433838
    7. 'split' → logprob: -3.783277988433838
    8. 'map' → logprob: -4.033277988433838
    9. ' convert' → logprob: -4.283277988433838
    10. ' et' → logprob: -4.408277988433838

Token 92: ' convert' (ID: 8452)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.9131162166595459
    2. '   ' → logprob: -1.163116216659546
    3. ' les' → logprob: -1.913116216659546
    4. 'et' → logprob: -3.038116216659546
    5. 'p' → logprob: -3.038116216659546
    6. ' et' → logprob: -4.413116455078125
    7. 'les' → logprob: -4.663116455078125
    8. ' map' → logprob: -5.913116455078125
    9. ' ' → logprob: -6.038116455078125
    10. '    ' → logprob: -6.163116455078125

Token 93: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.001154270488768816
    2. ' it' → logprob: -7.00115442276001
    3. 'i' → logprob: -8.876153945922852
    4. 't' → logprob: -9.751153945922852
    5. ' ' → logprob: -11.251153945922852
    6. 'et' → logprob: -11.876153945922852
    7. 'ie' → logprob: -12.751153945922852
    8. '```' → logprob: -12.876153945922852
    9. '	it' → logprob: -12.876153945922852
    10. '_it' → logprob: -12.876153945922852

Token 94: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.10739021748304367
    2. ' chacune' → logprob: -3.1073901653289795
    3. ' les' → logprob: -3.6073901653289795
    4. ' each' → logprob: -4.482390403747559
    5. ' ' → logprob: -5.357390403747559
    6. 'each' → logprob: -5.482390403747559
    7. ' en' → logprob: -6.232390403747559
    8. 's' → logprob: -6.482390403747559
    9. ' ces' → logprob: -6.482390403747559
    10. 'ces' → logprob: -6.732390403747559

Token 95: ' sous' (ID: 14487)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.9552268981933594
    2. 'élé' → logprob: -2.0802268981933594
    3. ' morceau' → logprob: -2.0802268981933594
    4. ' ' → logprob: -2.7052268981933594
    5. ' chaîne' → logprob: -2.7052268981933594
    6. 's' → logprob: -3.2052268981933594
    7. ' mot' → logprob: -3.3302268981933594
    8. ' token' → logprob: -3.5802268981933594
    9. ' partie' → logprob: -4.080226898193359
    10. 'token' → logprob: -4.205226898193359

Token 96: '-cha' (ID: 163177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3207592964172363
    2. '   ' → logprob: -1.3207592964172363
    3. 'chaine' → logprob: -2.5707592964172363
    4. '_str' → logprob: -2.9457592964172363
    5. '-' → logprob: -3.0707592964172363
    6. 'élé' → logprob: -3.5707592964172363
    7. ' chaîne' → logprob: -3.6957592964172363
    8. '_token' → logprob: -3.8207592964172363
    9. 'str' → logprob: -3.9457592964172363
    10. ' en' → logprob: -3.9457592964172363

Token 97: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.3926636576652527
    2. 'î' → logprob: -1.1426637172698975
    3. 'i' → logprob: -6.392663478851318
    4. 'ïne' → logprob: -6.642663478851318
    5. 'în' → logprob: -7.017663478851318
    6. 'ine' → logprob: -7.892663478851318
    7. ' î' → logprob: -8.017663955688477
    8. 'înes' → logprob: -8.392663955688477
    9. '   ' → logprob: -8.767663955688477
    10. 'îner' → logprob: -9.017663955688477

Token 98: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1337236613035202
    2. 'en' → logprob: -2.258723735809326
    3. ')' → logprob: -4.508723735809326
    4. ',' → logprob: -5.758723735809326
    5. '   ' → logprob: -6.008723735809326
    6. ' ' → logprob: -6.883723735809326
    7. '```' → logprob: -7.008723735809326
    8. ' )' → logprob: -7.633723735809326
    9. ' into' → logprob: -8.008723258972168
    10. ' ,' → logprob: -9.008723258972168

Token 99: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4849295914173126
    2. ' des' → logprob: -1.1099295616149902
    3. 'int' → logprob: -3.4849295616149902
    4. ' un' → logprob: -4.23492956161499
    5. ' integers' → logprob: -4.98492956161499
    6. ' ent' → logprob: -7.23492956161499
    7. 'des' → logprob: -7.60992956161499
    8. 'ent' → logprob: -7.85992956161499
    9. ' entier' → logprob: -8.109930038452148
    10. ' integer' → logprob: -8.234930038452148

Token 100: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7142457962036133
    2. '   ' → logprob: -0.9642457962036133
    3. ' ,' → logprob: -2.3392457962036133
    4. 's' → logprob: -4.089245796203613
    5. 'tokens' → logprob: -5.714245796203613
    6. ' ' → logprob: -6.214245796203613
    7. ' tokens' → logprob: -6.214245796203613
    8. '    ' → logprob: -6.589245796203613
    9. ' )' → logprob: -6.589245796203613
    10. ' et' → logprob: -6.714245796203613

Token 101: ' rassemble' (ID: 158483)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7010006308555603
    2. ' crée' → logprob: -0.9510006308555603
    3. ' stock' → logprob: -2.326000690460205
    4. ' transforme' → logprob: -5.076000690460205
    5. ' ' → logprob: -6.451000690460205
    6. ' construit' → logprob: -6.576000690460205
    7. ' liste' → logprob: -6.701000690460205
    8. '   ' → logprob: -6.951000690460205
    9. ' range' → logprob: -7.076000690460205
    10. ' retourne' → logprob: -7.326000690460205

Token 102: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9303122758865356
    2. ' la' → logprob: -1.5553122758865356
    3. ' en' → logprob: -1.6803122758865356
    4. '   ' → logprob: -2.180312156677246
    5. ' ' → logprob: -3.680312156677246
    6. ' les' → logprob: -3.680312156677246
    7. ' into' → logprob: -4.305312156677246
    8. 'es' → logprob: -5.305312156677246
    9. ' une' → logprob: -5.805312156677246
    10. 'a' → logprob: -6.305312156677246

Token 103: ' tout' (ID: 5501)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14117759466171265
    2. ' résultat' → logprob: -3.5161776542663574
    3. ' en' → logprob: -3.6411776542663574
    4. ' code' → logprob: -4.641177654266357
    5. 'es' → logprob: -5.141177654266357
    6. 'ur' → logprob: -5.266177654266357
    7. ' into' → logprob: -5.391177654266357
    8. 'result' → logprob: -5.391177654266357
    9. ' in' → logprob: -5.641177654266357
    10. ' liste' → logprob: -5.641177654266357

Token 104: ' dans' (ID: 2671)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3648530840873718
    2. '   ' → logprob: -1.4898531436920166
    3. ' dans' → logprob: -3.6148531436920166
    4. ' into' → logprob: -4.1148529052734375
    5. ' in' → logprob: -4.7398529052734375
    6. 's' → logprob: -5.1148529052734375
    7. 'tokens' → logprob: -5.4898529052734375
    8. ' tokens' → logprob: -5.6148529052734375
    9. ' lst' → logprob: -6.1148529052734375
    10. ' list' → logprob: -6.1148529052734375

Token 105: ' une' (ID: 2463)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20364314317703247
    2. ' une' → logprob: -2.5786430835723877
    3. 'a' → logprob: -2.8286430835723877
    4. 'list' → logprob: -3.9536430835723877
    5. ' la' → logprob: -4.203643321990967
    6. ' list' → logprob: -4.828643321990967
    7. 'une' → logprob: -5.328643321990967
    8. '[' → logprob: -7.078643321990967
    9. ' un' → logprob: -7.828643321990967
    10. 'la' → logprob: -8.828642845153809

Token 106: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3354830741882324
    2. ' list' → logprob: -1.5854830741882324
    3. 'liste' → logprob: -2.9604830741882324
    4. ' liste' → logprob: -3.5854830741882324
    5. '```' → logprob: -8.71048355102539
    6. '[' → logprob: -8.83548355102539
    7. 'lst' → logprob: -8.83548355102539
    8. '[]' → logprob: -10.33548355102539
    9. 'lista' → logprob: -10.58548355102539
    10. ' listes' → logprob: -10.96048355102539

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7597891688346863
    2. ' numbers' → logprob: -1.134789228439331
    3. 'numbers' → logprob: -2.759789228439331
    4. ' lst' → logprob: -3.634789228439331
    5. ' A' → logprob: -3.634789228439331
    6. ' elements' → logprob: -4.009788990020752
    7. ' nums' → logprob: -4.634788990020752
    8. ' L' → logprob: -4.884788990020752
    9. ' elems' → logprob: -4.884788990020752
    10. 'elements' → logprob: -5.009788990020752

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5310533046722412
    2. ' numbers' → logprob: -1.9060533046722412
    3. 'numbers' → logprob: -2.156053304672241
    4. 'elements' → logprob: -3.406053304672241
    5. ' elements' → logprob: -4.15605354309082
    6. 'tokens' → logprob: -4.28105354309082
    7. ' integers' → logprob: -4.40605354309082
    8. 'a' → logprob: -4.65605354309082
    9. ' A' → logprob: -4.90605354309082
    10. 's' → logprob: -4.90605354309082

Token 109: ' A' (ID: 355)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.2731431722640991
    2. 'numbers' → logprob: -1.5231431722640991
    3. ' A' → logprob: -1.6481431722640991
    4. 'A' (adapté à ' A') → logprob: -2.5231432914733887
    5. ' lst' → logprob: -2.6481432914733887
    6. 'lst' → logprob: -3.3981432914733887
    7. 'a' → logprob: -3.6481432914733887
    8. ' L' → logprob: -4.023143291473389
    9. ' a' → logprob: -4.148143291473389
    10. 'arr' → logprob: -4.648143291473389

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012515068985521793
    2. '=' → logprob: -4.387515068054199
    3. ' =[' → logprob: -12.7625150680542
    4. ' ' → logprob: -13.8875150680542
    5. 's' → logprob: -14.8875150680542
    6. '=[' → logprob: -15.1375150680542
    7. ' ' → logprob: -15.5125150680542
    8. '   ' → logprob: -15.6375150680542
    9. '=[]' → logprob: -15.7625150680542
    10. '_' → logprob: -15.7625150680542

Token 111: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3133273422718048
    2. ' list' → logprob: -1.3133273124694824
    3. '[list' → logprob: -9.68832778930664
    4. '[' → logprob: -13.06332778930664
    5. ' [' → logprob: -13.93832778930664
    6. '	list' → logprob: -15.68832778930664
    7. 'map' → logprob: -15.93832778930664
    8. ' ' → logprob: -16.06332778930664
    9. '=list' → logprob: -16.18832778930664
    10. '(list' → logprob: -17.31332778930664

Token 112: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2014412134885788
    2. '(' → logprob: -1.7014411687850952
    3. '(int' → logprob: -10.701440811157227
    4. '(
' → logprob: -13.451440811157227
    5. 'map' → logprob: -13.576440811157227
    6. '(

' → logprob: -13.701440811157227
    7. '(input' → logprob: -13.951440811157227
    8. ' (' → logprob: -15.326440811157227
    9. '(m' → logprob: -15.951440811157227
    10. '()' → logprob: -16.201440811157227

Token 113: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017231308156624436
    2. '(' → logprob: -6.376723289489746
    3. 'int' → logprob: -11.501723289489746
    4. ' (' → logprob: -12.501723289489746
    5. ')' → logprob: -13.001723289489746
    6. ' int' → logprob: -13.376723289489746
    7. ',int' → logprob: -14.001723289489746
    8. '(
' → logprob: -14.001723289489746
    9. '<int' → logprob: -14.376723289489746
    10. '=int' → logprob: -15.251723289489746

Token 114: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.37272611260414124
    2. ',' → logprob: -1.7477260828018188
    3. '(input' → logprob: -1.9977260828018188
    4. '(' → logprob: -6.997725963592529
    5. 'input' → logprob: -8.372726440429688
    6. ' ,' → logprob: -8.997726440429688
    7. ' input' → logprob: -10.497726440429688
    8. '(),' → logprob: -11.872726440429688
    9. ',(' → logprob: -11.872726440429688
    10. ' (' → logprob: -11.872726440429688

Token 115: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3870956003665924
    2. ' input' → logprob: -1.13709557056427
    3. '(input' → logprob: -8.76209545135498
    4. ',input' → logprob: -10.01209545135498
    5. '   ' → logprob: -12.13709545135498
    6. ' ' → logprob: -12.38709545135498
    7. ')' → logprob: -12.38709545135498
    8. '	input' → logprob: -12.76209545135498
    9. '=input' → logprob: -13.13709545135498
    10. '))' → logprob: -13.76209545135498

Token 116: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.240481914370321e-05
    2. '()' → logprob: -9.875052452087402
    3. ' ().' → logprob: -14.125052452087402
    4. '()
' → logprob: -17.125051498413086
    5. ')' → logprob: -17.500051498413086
    6. '()))' → logprob: -17.750051498413086
    7. '(' → logprob: -18.375051498413086
    8. '())))' → logprob: -18.625051498413086
    9. '())' → logprob: -18.750051498413086
    10. '()));' → logprob: -19.250051498413086

Token 117: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001929228543303907
    2. 'strip' → logprob: -6.25192928314209
    3. 'rstrip' → logprob: -14.87692928314209
    4. ' split' → logprob: -15.25192928314209
    5. '(split' → logprob: -17.501928329467773
    6. 'spl' → logprob: -17.876928329467773
    7. '.split' → logprob: -20.501928329467773
    8. ')' → logprob: -21.001928329467773
    9. ' strip' → logprob: -21.001928329467773
    10. 's' → logprob: -21.751928329467773

Token 118: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4413032531738281
    2. '()' → logprob: -1.6913032531738281
    3. '())' → logprob: -1.8163032531738281
    4. '())))' → logprob: -4.941303253173828
    5. '(' → logprob: -6.441303253173828
    6. '))' → logprob: -7.566303253173828
    7. ')' → logprob: -7.691303253173828
    8. ')))' → logprob: -9.441303253173828
    9. '()));' → logprob: -9.941303253173828
    10. '()))
' → logprob: -11.066303253173828

Token 119: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007708362303674221
    2. '<|end|>' → logprob: -5.882708549499512
    3. '   ' → logprob: -6.382708549499512
    4. '  
' → logprob: -6.757708549499512
    5. '    
' → logprob: -7.382708549499512
    6. '

' → logprob: -7.757708549499512
    7. ' 
' → logprob: -7.757708549499512
    8. ' ' → logprob: -9.132708549499512
    9. '<|end|>' → logprob: -9.382708549499512
    10. '
' → logprob: -9.382708549499512

Token 120: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010321175679564476
    2. '   ' → logprob: -4.885321140289307
    3. '    
' → logprob: -7.260321140289307
    4. '
' → logprob: -7.385321140289307
    5. '  
' → logprob: -7.760321140289307
    6. '

' → logprob: -8.010321617126465
    7. ' ' → logprob: -9.010321617126465
    8. ')' → logprob: -9.135321617126465
    9. ' 
' → logprob: -9.135321617126465
    10. ')
' → logprob: -9.885321617126465

Token 121: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7893357276916504
    2. ')' → logprob: -1.0393357276916504
    3. ' A' → logprob: -3.0393357276916504
    4. 'A' → logprob: -3.2893357276916504
    5. ' )' → logprob: -3.4143357276916504
    6. '#' → logprob: -3.7893357276916504
    7. 'assert' → logprob: -4.28933572769165
    8. ' #' → logprob: -4.53933572769165
    9. ' assert' → logprob: -5.03933572769165
    10. '   ' → logprob: -6.03933572769165

Token 122: ' cont' (ID: 836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28350406885147095
    2. '<|end|>' → logprob: -1.9085040092468262
    3. ' =' → logprob: -3.283504009246826
    4. '[' → logprob: -3.658504009246826
    5. '[:]' → logprob: -4.158504009246826
    6. '=' → logprob: -5.533504009246826
    7. ' )' → logprob: -5.658504009246826
    8. '<|end|>' → logprob: -5.658504009246826
    9. '   ' → logprob: -6.908504009246826
    10. '[:' → logprob: -7.033504009246826

Token 123: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.2872747778892517
    2. 'inue' → logprob: -1.5372748374938965
    3. 'in' → logprob: -3.9122748374938965
    4. 'i' → logprob: -4.5372748374938965
    5. 'e' → logprob: -6.4122748374938965
    6. 'ients' → logprob: -7.1622748374938965
    7. 'ent' → logprob: -7.5372748374938965
    8. 'iennent' → logprob: -8.412274360656738
    9. 'iend' → logprob: -8.412274360656738
    10. 'iens' → logprob: -8.912274360656738

Token 124: 'endra' (ID: 32364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41592341661453247
    2. 'ent' → logprob: -1.2909233570098877
    3. 'nent' → logprob: -2.9159233570098877
    4. 'nu' → logprob: -4.915923595428467
    5. 'nt' → logprob: -6.415923595428467
    6. 'ne' → logprob: -7.665923595428467
    7. 'nte' → logprob: -8.165923118591309
    8. 'e' → logprob: -8.290923118591309
    9. 'en' → logprob: -8.415923118591309
    10. 'net' → logprob: -8.915923118591309

Token 125: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1347014904022217
    2. 'A' → logprob: -1.7597014904022217
    3. ')' → logprob: -2.2597014904022217
    4. '(N' → logprob: -2.7597014904022217
    5. 'the' → logprob: -2.8847014904022217
    6. '()' → logprob: -3.1347014904022217
    7. '(A' → logprob: -3.3847014904022217
    8. ' la' → logprob: -3.3847014904022217
    9. ' les' → logprob: -3.5097014904022217
    10. '(len' → logprob: -3.5097014904022217

Token 126: ' liste' (ID: 31719)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -1.8275967836380005
    2. ' elements' → logprob: -2.202596664428711
    3. 'A' → logprob: -2.327596664428711
    4. 'élé' → logprob: -2.702596664428711
    5. 'ent' → logprob: -2.702596664428711
    6. ' ' → logprob: -2.827596664428711
    7. 's' → logprob: -2.827596664428711
    8. ' N' → logprob: -2.952596664428711
    9. 'liste' → logprob: -3.202596664428711
    10. ' A' → logprob: -3.452596664428711

Token 127: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4106447696685791
    2. '<|end|>' → logprob: -1.285644769668579
    3. ' of' → logprob: -3.410644769668579
    4. 'des' → logprob: -5.28564453125
    5. 's' → logprob: -5.41064453125
    6. ' ' → logprob: -5.41064453125
    7. ' de' → logprob: -5.78564453125
    8. ' d' → logprob: -5.91064453125
    9. '<|end|>' → logprob: -6.28564453125
    10. ')' → logprob: -6.41064453125

Token 128: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -1.4471361637115479
    2. 'es' → logprob: -1.5721361637115479
    3. ''' → logprob: -1.8221361637115479
    4. 'élé' → logprob: -2.447136163711548
    5. 's' → logprob: -2.697136163711548
    6. ' ' → logprob: -3.197136163711548
    7. 'A' → logprob: -3.197136163711548
    8. 'e' → logprob: -3.572136163711548
    9. 'a' → logprob: -4.322135925292969
    10. '()' → logprob: -4.447135925292969

Token 129: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0006800267728976905
    2. 'i' → logprob: -8.000679969787598
    3. 'ières' → logprob: -8.000679969787598
    4. 'ier' → logprob: -12.875679969787598
    5. '```' → logprob: -13.500679969787598
    6. 'ié' → logprob: -13.625679969787598
    7. 'ires' → logprob: -14.125679969787598
    8. 'ière' → logprob: -14.250679969787598
    9. 'I' → logprob: -14.375679969787598
    10. 't' → logprob: -14.750679969787598

Token 130: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08125744014978409
    2. '   ' → logprob: -2.7062573432922363
    3. '    
' → logprob: -5.831257343292236
    4. '  
' → logprob: -6.456257343292236
    5. '<|end|>' → logprob: -6.581257343292236
    6. ' ' → logprob: -6.581257343292236
    7. '
' → logprob: -6.831257343292236
    8. ' 
' → logprob: -7.331257343292236
    9. '

' → logprob: -7.456257343292236
    10. '  ' → logprob: -8.206257820129395

Token 131: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06336235255002975
    2. '   ' → logprob: -3.0633623600006104
    3. '    
' → logprob: -4.313362121582031
    4. '
' → logprob: -7.688362121582031
    5. 'n' → logprob: -8.563362121582031
    6. '  
' → logprob: -8.813362121582031
    7. ' 
' → logprob: -8.938362121582031
    8. '   
' → logprob: -9.313362121582031
    9. '\n' → logprob: -9.813362121582031
    10. '

' → logprob: -9.813362121582031

Token 132: ' mod' (ID: 1812)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6627895832061768
    2. 'from' → logprob: -1.2877895832061768
    3. 'g' → logprob: -2.0377895832061768
    4. 'l' → logprob: -3.5377895832061768
    5. '   ' → logprob: -4.412789344787598
    6. 'def' → logprob: -4.787789344787598
    7. 'for' → logprob: -5.287789344787598
    8. 'res' → logprob: -5.537789344787598
    9. 'answer' → logprob: -5.537789344787598
    10. 'd' → logprob: -5.662789344787598

Token 133: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.7828433513641357
    2. '_' → logprob: -1.7828433513641357
    3. ' =' → logprob: -1.7828433513641357
    4. '_value' → logprob: -2.7828433513641357
    5. 'ulo' → logprob: -2.9078433513641357
    6. 'ulus' → logprob: -3.1578433513641357
    7. '=' → logprob: -3.5328433513641357
    8. '_base' → logprob: -6.407843589782715
    9. '_factor' → logprob: -6.532843589782715
    10. 's' → logprob: -6.657843589782715

Token 134: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06557253748178482
    2. '100' → logprob: -2.815572500228882
    3. ' ' → logprob: -6.065572738647461
    4. '998' → logprob: -6.940572738647461
    5. '1' → logprob: -8.690572738647461
    6. '0' → logprob: -9.315572738647461
    7. '999' → logprob: -11.190572738647461
    8. '2' → logprob: -11.565572738647461
    9. '(' → logprob: -12.065572738647461
    10. 'int' → logprob: -12.190572738647461

Token 135: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04132683575153351
    2. '100' → logprob: -3.2913267612457275
    3. '998' → logprob: -5.791326999664307
    4. '1' → logprob: -8.791326522827148
    5. ' ' → logprob: -10.916326522827148
    6. '0' → logprob: -11.291326522827148
    7. '999' → logprob: -11.541326522827148
    8. '2' → logprob: -11.666326522827148
    9. 'int' → logprob: -11.791326522827148
    10. '(' → logprob: -12.166326522827148

Token 136: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0017878713551908731
    2. '**' → logprob: -6.3767876625061035
    3. '09' → logprob: -9.501788139343262
    4. ' ' → logprob: -12.876788139343262
    5. '_' → logprob: -13.126788139343262
    6. '```' → logprob: -13.126788139343262
    7. '009' → logprob: -13.251788139343262
    8. '+' → logprob: -13.626788139343262
    9. '^' → logprob: -14.376788139343262
    10. ' **' → logprob: -15.876788139343262

Token 137: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.531315314830863e-06
    2. '09' → logprob: -13.750003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '10' → logprob: -15.000003814697266
    5. '```' → logprob: -15.187503814697266
    6. '18' → logprob: -15.312503814697266
    7. '+' → logprob: -16.000003814697266
    8. '   ' → logprob: -16.187503814697266
    9. '
' → logprob: -16.250003814697266
    10. '

' → logprob: -16.312503814697266

Token 138: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.941850526549388e-06
    2. '10' → logprob: -13.125007629394531
    3. '18' → logprob: -13.125007629394531
    4. '15' → logprob: -14.625007629394531
    5. '8' → logprob: -14.750007629394531
    6. '09' → logprob: -14.812507629394531
    7. ' ' → logprob: -14.937507629394531
    8. '

' → logprob: -15.187507629394531
    9. '
' → logprob: -15.250007629394531
    10. '12' → logprob: -15.562507629394531

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024808887392282486
    2. ' +' → logprob: -6.002480983734131
    3. '7' → logprob: -12.252480506896973
    4. '+
' → logprob: -16.00248146057129
    5. ' plus' → logprob: -16.00248146057129
    6. ' ' → logprob: -16.50248146057129
    7. '＋' → logprob: -16.75248146057129
    8. ' ' → logprob: -17.25248146057129
    9. 'plus' → logprob: -18.12748146057129
    10. ' +
' → logprob: -18.12748146057129

Token 140: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -17.625
    4. '+' → logprob: -18.0
    5. '07' → logprob: -18.8125
    6. '9' → logprob: -18.8125
    7. '   ' → logprob: -18.875
    8. '

' → logprob: -18.9375
    9. '
' → logprob: -19.6875
    10. '  ' → logprob: -19.75

Token 141: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -17.75
    4. '07' → logprob: -18.25
    5. '+' → logprob: -19.0
    6. '
' → logprob: -19.375
    7. '

' → logprob: -19.5
    8. '７' → logprob: -19.75
    9. '٧' → logprob: -19.875
    10. '   ' → logprob: -19.9375

Token 142: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04370281845331192
    2. '   ' → logprob: -3.6687028408050537
    3. '    
' → logprob: -4.418702602386475
    4. '  
' → logprob: -6.418702602386475
    5. ' 
' → logprob: -6.543702602386475
    6. '   
' → logprob: -7.293702602386475
    7. '
' → logprob: -7.543702602386475
    8. '<|end|>' → logprob: -8.418703079223633
    9. ' ' → logprob: -8.543703079223633
    10. '' → logprob: -9.418703079223633

Token 143: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0024260752834379673
    2. '    
' → logprob: -7.2524261474609375
    3. '   ' → logprob: -7.6274261474609375
    4. '<|end|>' → logprob: -7.6274261474609375
    5. '
' → logprob: -8.627426147460938
    6. '  
' → logprob: -8.752426147460938
    7. ' 
' → logprob: -9.252426147460938
    8. ' ' → logprob: -10.002426147460938
    9. '' → logprob: -10.252426147460938
    10. ')' → logprob: -10.252426147460938

Token 144: ' Déf' (ID: 180635)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2640037536621094
    2. 'result' → logprob: -2.8890037536621094
    3. 'mod' → logprob: -3.1390037536621094
    4. ' result' → logprob: -3.3890037536621094
    5. '#' → logprob: -4.264003753662109
    6. 'factor' → logprob: -4.889003753662109
    7. ' for' → logprob: -4.889003753662109
    8. ' #' → logprob: -4.889003753662109
    9. ' mod' → logprob: -4.889003753662109
    10. 'sum' → logprob: -5.014003753662109

Token 145: 'init' (ID: 3287)
  Prédit: 'ini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -1.0562242269515991
    2. 'inition' → logprob: -2.0562243461608887
    3. 'init' → logprob: -2.3062243461608887
    4. 'ining' → logprob: -2.5562243461608887
    5. 'mod' → logprob: -2.6812243461608887
    6. '=' → logprob: -2.6812243461608887
    7. 'f' → logprob: -3.0562243461608887
    8. 'ault' → logprob: -3.1812243461608887
    9. 'inie' → logprob: -3.3062243461608887
    10. 'inite' → logprob: -3.6812243461608887

Token 146: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' valeur' (ID: 41664)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7703893780708313
    2. ' modulus' → logprob: -0.7703893780708313
    3. ' mod' → logprob: -2.7703893184661865
    4. ' modulo' → logprob: -4.645389556884766
    5. 'm' → logprob: -7.895389556884766
    6. ' MOD' → logprob: -7.895389556884766
    7. 'MOD' → logprob: -8.145389556884766
    8. ' ' → logprob: -8.395389556884766
    9. ' constant' → logprob: -9.395389556884766
    10. ' divisor' → logprob: -9.520389556884766

Token 148: ' du' (ID: 1462)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5634153485298157
    2. '<|end|>' → logprob: -1.313415288925171
    3. ' mod' → logprob: -2.188415288925171
    4. ' ' → logprob: -3.313415288925171
    5. '_mod' → logprob: -5.06341552734375
    6. ' de' → logprob: -6.56341552734375
    7. '<|end|>' → logprob: -6.56341552734375
    8. ' modulus' → logprob: -7.18841552734375
    9. ' modulo' → logprob: -7.31341552734375
    10. ' =' → logprob: -7.68841552734375

Token 149: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.034623242914676666
    2. ' mod' → logprob: -3.534623146057129
    3. ' modulus' → logprob: -5.659623146057129
    4. ' modulo' → logprob: -7.409623146057129
    5. '100' → logprob: -8.159623146057129
    6. ' ' → logprob: -9.034623146057129
    7. ' MOD' → logprob: -9.034623146057129
    8. 'MOD' → logprob: -9.159623146057129
    9. '10' → logprob: -10.034623146057129
    10. 'm' → logprob: -10.159623146057129

Token 150: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11374537646770477
    2. '   ' → logprob: -2.7387454509735107
    3. '    
' → logprob: -3.7387454509735107
    4. '<|end|>' → logprob: -4.363745212554932
    5. '
' → logprob: -6.363745212554932
    6. ' 
' → logprob: -6.988745212554932
    7. '<|end|>' → logprob: -6.988745212554932
    8. '

' → logprob: -7.113745212554932
    9. '  
' → logprob: -7.363745212554932
    10. '   
' → logprob: -8.36374568939209

Token 151: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1517462581396103
    2. 'result' → logprob: -3.5267462730407715
    3. '   ' → logprob: -3.9017462730407715
    4. ' result' → logprob: -3.9017462730407715
    5. 'g' → logprob: -4.0267462730407715
    6. ' gcd' → logprob: -4.1517462730407715
    7. ' g' → logprob: -4.7767462730407715
    8. '  ' → logprob: -5.4017462730407715
    9. 'res' → logprob: -5.6517462730407715
    10. '    ' → logprob: -6.0267462730407715

Token 152: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8835586905479431
    2. '<|end|>' → logprob: -1.508558750152588
    3. ' ' → logprob: -2.133558750152588
    4. ' is' → logprob: -2.383558750152588
    5. ')' → logprob: -3.008558750152588
    6. '=' → logprob: -3.258558750152588
    7. ' n' → logprob: -4.258558750152588
    8. 'n' → logprob: -4.633558750152588
    9. ' est' → logprob: -5.008558750152588
    10. ' #' → logprob: -5.008558750152588

Token 153: ' un' (ID: 537)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5650286078453064
    2. ' ' → logprob: -1.1900286674499512
    3. '10' → logprob: -2.065028667449951
    4. '```' → logprob: -8.315028190612793
    5. '1' → logprob: -9.065028190612793
    6. 'int' → logprob: -9.440028190612793
    7. ' ' → logprob: -9.565028190612793
    8. ' (' → logprob: -10.440028190612793
    9. ' un' → logprob: -11.315028190612793
    10. '(' → logprob: -11.440028190612793

Token 154: ' grand' (ID: 6363)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6817854642868042
    2. 'prime' → logprob: -1.4317854642868042
    3. 'nombre' → logprob: -1.9317854642868042
    4. ' nombre' → logprob: -3.5567855834960938
    5. ' prime' → logprob: -4.056785583496094
    6. 'ent' → logprob: -4.306785583496094
    7. ' mod' → logprob: -4.431785583496094
    8. ' modulo' → logprob: -4.431785583496094
    9. ' entier' → logprob: -5.431785583496094
    10. 'int' → logprob: -5.431785583496094

Token 155: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.061688199639320374
    2. '<|end|>' → logprob: -3.811688184738159
    3. 'mod' → logprob: -4.686688423156738
    4. 'space' → logprob: -4.811688423156738
    5. '```' → logprob: -5.561688423156738
    6. ' )' → logprob: -5.936688423156738
    7. ')' → logprob: -6.061688423156738
    8. ',' → logprob: -7.061688423156738
    9. ' ```' → logprob: -7.311688423156738
    10. '_' → logprob: -7.436688423156738

Token 156: ' premier' (ID: 15506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3661399483680725
    2. '<|end|>' → logprob: -1.8661398887634277
    3. '    
' → logprob: -2.8661398887634277
    4. ' ' → logprob: -3.4911398887634277
    5. '
' → logprob: -4.116139888763428
    6. ')' → logprob: -4.741139888763428
    7. '<|end|>' → logprob: -4.991139888763428
    8. '  ' → logprob: -5.116139888763428
    9. ',' → logprob: -5.116139888763428
    10. '  
' → logprob: -5.616139888763428

Token 157: ' utilisé' (ID: 53138)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33498451113700867
    2. '
' → logprob: -1.459984540939331
    3. '    
' → logprob: -3.209984540939331
    4. '<|end|>' → logprob: -5.084984302520752
    5. ')' → logprob: -6.959984302520752
    6. '  
' → logprob: -7.084984302520752
    7. '<|end|>' → logprob: -7.459984302520752
    8. '   
' → logprob: -7.584984302520752
    9. 'n' → logprob: -7.834984302520752
    10. ' 
' → logprob: -7.959984302520752

Token 158: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' éviter' (ID: 64013)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.904217004776001
    2. ' éviter' → logprob: -1.404217004776001
    3. ' les' → logprob: -2.904217004776001
    4. ' assurer' → logprob: -2.904217004776001
    5. ' garantir' → logprob: -3.154217004776001
    6. 'év' → logprob: -3.279217004776001
    7. ' le' → logprob: -3.904217004776001
    8. ' limiter' → logprob: -4.279216766357422
    9. ' gérer' → logprob: -4.404216766357422
    10. ' faire' → logprob: -4.404216766357422

Token 160: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1975039392709732
    2. ' des' → logprob: -2.3225040435791016
    3. ' l' → logprob: -3.8225040435791016
    4. '<|end|>' → logprob: -3.8225040435791016
    5. ' ' → logprob: -4.822504043579102
    6. 's' → logprob: -4.822504043579102
    7. ' overflow' → logprob: -4.822504043579102
    8. 'les' → logprob: -5.072504043579102
    9. ' la' → logprob: -6.072504043579102
    10. 'des' → logprob: -6.822504043579102

Token 161: ' déb' (ID: 37874)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.2399056851863861
    2. ' overflow' → logprob: -1.6149057149887085
    3. ' déb' → logprob: -5.114905834197998
    4. ' dépasse' → logprob: -6.239905834197998
    5. 'd' → logprob: -6.489905834197998
    6. 'ent' → logprob: -6.739905834197998
    7. 'dé' → logprob: -6.739905834197998
    8. 's' → logprob: -6.864905834197998
    9. 'integer' → logprob: -7.489905834197998
    10. 'over' → logprob: -8.23990535736084

Token 162: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0013017841847613454
    2. 'ords' → logprob: -7.0013017654418945
    3. 'ors' → logprob: -9.001301765441895
    4. 'or' → logprob: -9.126301765441895
    5. 'bord' → logprob: -10.126301765441895
    6. 'orm' → logprob: -11.126301765441895
    7. 'orph' → logprob: -11.251301765441895
    8. 'орд' → logprob: -11.501301765441895
    9. 'overflow' → logprob: -11.751301765441895
    10. 'ormais' → logprob: -12.251301765441895

Token 163: 'ements' (ID: 4507)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.005561955273151398
    2. 'ords' → logprob: -5.505561828613281
    3. 'or' → logprob: -7.380561828613281
    4. '```' → logprob: -8.130561828613281
    5. '``' → logprob: -9.505561828613281
    6. 'r' → logprob: -9.755561828613281
    7. 'ors' → logprob: -10.005561828613281
    8. 'орд' → logprob: -10.255561828613281
    9. 'orde' → logprob: -10.880561828613281
    10. 'orm' → logprob: -10.880561828613281

Token 164: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.575567901134491
    2. '
' → logprob: -1.2005679607391357
    3. '<|end|>' → logprob: -2.4505679607391357
    4. '    
' → logprob: -3.3255679607391357
    5. '<|end|>' → logprob: -5.075567722320557
    6. 'def' → logprob: -6.450567722320557
    7. ')' → logprob: -6.700567722320557
    8. '

' → logprob: -6.825567722320557
    9. '  
' → logprob: -6.950567722320557
    10. ' ' → logprob: -7.575567722320557

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2358996868133545
    2. 'result' → logprob: -1.9858996868133545
    3. '    
' → logprob: -3.8608996868133545
    4. ' result' → logprob: -4.235899925231934
    5. 'from' → logprob: -4.860899925231934
    6. 'res' → logprob: -4.985899925231934
    7. 'g' → logprob: -5.360899925231934
    8. '
' → logprob: -5.485899925231934
    9. 'answer' → logprob: -5.735899925231934
    10. ' from' → logprob: -6.360899925231934

Token 166: ' b' (ID: 287)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.2460209131240845
    2. 'l' → logprob: -1.4960209131240845
    3. 'result' → logprob: -1.4960209131240845
    4. 'def' → logprob: -2.871020793914795
    5. 'ans' → logprob: -2.871020793914795
    6. 'answer' → logprob: -2.996020793914795
    7. 'from' → logprob: -3.121020793914795
    8. '   ' → logprob: -3.746020793914795
    9. 'res' → logprob: -4.246020793914795
    10. 'for' → logprob: -5.246020793914795

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7248016595840454
    2. '=' → logprob: -1.7248016595840454
    3. 'est' → logprob: -2.099801540374756
    4. 'ase' → logprob: -2.224801540374756
    5. 'ack' → logprob: -3.474801540374756
    6. 'ig' → logprob: -4.724801540374756
    7. 'r' → logprob: -4.974801540374756
    8. 'g' → logprob: -5.099801540374756
    9. '_' → logprob: -5.099801540374756
    10. 'from' → logprob: -5.599801540374756

Token 168: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7745228409767151
    2. '1' → logprob: -1.5245227813720703
    3. '0' → logprob: -1.7745227813720703
    4. ' ' → logprob: -2.7745227813720703
    5. ' A' → logprob: -3.0245227813720703
    6. ' [' → logprob: -4.27452278137207
    7. '[' → logprob: -4.27452278137207
    8. '[A' → logprob: -5.52452278137207
    9. 'max' → logprob: -6.27452278137207
    10. '[]' → logprob: -6.52452278137207

Token 169: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5015469789505005
    2. 'A' → logprob: -1.1265469789505005
    3. '0' → logprob: -3.376546859741211
    4. '[' → logprob: -3.501546859741211
    5. '[A' → logprob: -5.501546859741211
    6. 'max' → logprob: -7.751546859741211
    7. 'a' → logprob: -8.251546859741211
    8. '[]' → logprob: -8.626546859741211
    9. '[a' → logprob: -8.751546859741211
    10. '[max' → logprob: -9.126546859741211

Token 170: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5189676880836487
    2. '
' → logprob: -1.143967628479004
    3. '<|end|>' → logprob: -3.393967628479004
    4. ' ' → logprob: -4.018967628479004
    5. '#' → logprob: -5.018967628479004
    6. ' for' → logprob: -5.143967628479004
    7. '  ' → logprob: -5.643967628479004
    8. '   ' → logprob: -5.643967628479004
    9. ')' → logprob: -5.768967628479004
    10. '*' → logprob: -6.518967628479004

Token 172: ' Initialise' (ID: 179601)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6283316016197205
    2. ' A' → logprob: -1.2533316612243652
    3. 'for' → logprob: -2.6283316612243652
    4. ' for' → logprob: -3.2533316612243652
    5. ' ' → logprob: -3.2533316612243652
    6. '1' → logprob: -4.128331661224365
    7. '0' → logprob: -5.253331661224365
    8. 'b' → logprob: -5.378331661224365
    9. 'a' → logprob: -6.503331661224365
    10. ' b' → logprob: -6.628331661224365

Token 173: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8615520596504211
    2. 'b' → logprob: -1.3615520000457764
    3. '<|end|>' → logprob: -2.1115520000457764
    4. 'A' → logprob: -2.8615520000457764
    5. '1' → logprob: -2.8615520000457764
    6. 'g' → logprob: -3.8615520000457764
    7. ' b' → logprob: -4.1115522384643555
    8. '0' → logprob: -4.1115522384643555
    9. ' A' → logprob: -4.7365522384643555
    10. 'a' → logprob: -4.8615522384643555

Token 174: ' variable' (ID: 11076)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7415103316307068
    2. 'len' → logprob: -2.1165103912353516
    3. 'max' → logprob: -2.1165103912353516
    4. 'g' → logprob: -2.3665103912353516
    5. 'A' → logprob: -2.6165103912353516
    6. '1' → logprob: -3.2415103912353516
    7. 'a' → logprob: -3.9915103912353516
    8. 'for' → logprob: -4.741510391235352
    9. '0' → logprob: -4.866510391235352
    10. 'sum' → logprob: -5.116510391235352

Token 175: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3263394832611084
    2. '<|end|>' → logprob: -1.9513394832611084
    3. 'b' → logprob: -2.0763394832611084
    4. ' b' → logprob: -5.3263397216796875
    5. '<|end|>' → logprob: -6.5763397216796875
    6. 'x' → logprob: -6.7013397216796875
    7. ' for' → logprob: -7.2013397216796875
    8. 'A' → logprob: -7.8263397216796875
    9. 'a' → logprob: -7.9513397216796875
    10. ',' → logprob: -8.451339721679688

Token 176: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5828745365142822
    2. ' ' → logprob: -1.3328745365142822
    3. '1' → logprob: -1.9578745365142822
    4. 'A' → logprob: -3.7078745365142822
    5. ' A' → logprob: -4.457874298095703
    6. 'a' → logprob: -8.207874298095703
    7. ' None' → logprob: -9.082874298095703
    8. 'N' → logprob: -9.582874298095703
    9. 'None' → logprob: -9.582874298095703
    10. 'g' → logprob: -10.082874298095703

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1445496529340744
    2. '1' → logprob: -2.019549608230591
    3. 'A' → logprob: -6.89454984664917
    4. 'None' → logprob: -7.89454984664917
    5. '-' → logprob: -8.394549369812012
    6. 'a' → logprob: -9.269549369812012
    7. ' ' → logprob: -9.394549369812012
    8. 'b' → logprob: -9.769549369812012
    9. 'N' → logprob: -11.644549369812012
    10. 'g' → logprob: -13.144549369812012

Token 179: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10742983222007751
    2. '<|end|>' → logprob: -2.7324297428131104
    3. ' ' → logprob: -4.4824299812316895
    4. ' 
' → logprob: -5.1074299812316895
    5. '  
' → logprob: -5.6074299812316895
    6. '    
' → logprob: -5.6074299812316895
    7. '   ' → logprob: -6.2324299812316895
    8. 'for' → logprob: -6.2324299812316895
    9. '<|end|>' → logprob: -6.4824299812316895
    10. ')' → logprob: -6.6074299812316895

Token 180: ' elle' (ID: 11451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' sera' (ID: 15511)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4369618892669678
    2. ' ' → logprob: -2.0619618892669678
    3. ' sera' → logprob: -2.3119618892669678
    4. ' #' → logprob: -2.4369618892669678
    5. 'for' → logprob: -2.4369618892669678
    6. ' =' → logprob: -3.1869618892669678
    7. ' for' → logprob: -3.1869618892669678
    8. '=' → logprob: -3.3119618892669678
    9. ' est' → logprob: -3.5619618892669678
    10. 'a' → logprob: -3.5619618892669678

Token 182: ' utilisée' (ID: 106548)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5001546144485474
    2. 'A' → logprob: -1.6251546144485474
    3. ' ' → logprob: -2.875154495239258
    4. 'l' → logprob: -3.375154495239258
    5. ' used' → logprob: -3.500154495239258
    6. ' A' → logprob: -4.000154495239258
    7. '0' → logprob: -4.000154495239258
    8. ' utilisée' → logprob: -4.125154495239258
    9. 'used' → logprob: -4.750154495239258
    10. 'g' → logprob: -5.500154495239258

Token 183: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6103900074958801
    2. 'for' → logprob: -1.1103899478912354
    3. ' ' → logprob: -2.3603899478912354
    4. ' to' → logprob: -4.1103901863098145
    5. '<|end|>' → logprob: -5.7353901863098145
    6. ')' → logprob: -5.9853901863098145
    7. 'range' → logprob: -6.1103901863098145
    8. ' pour' → logprob: -6.1103901863098145
    9. '=' → logprob: -6.6103901863098145
    10. ',' → logprob: -6.8603901863098145

Token 184: ' stock' (ID: 6546)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24505139887332916
    2. '1' → logprob: -2.370051383972168
    3. ' ' → logprob: -2.995051383972168
    4. ' A' → logprob: -3.495051383972168
    5. '<|end|>' → logprob: -3.995051383972168
    6. '0' → logprob: -4.245051383972168
    7. 'g' → logprob: -5.620051383972168
    8. 'a' → logprob: -6.620051383972168
    9. 'l' → logprob: -6.870051383972168
    10. 'sum' → logprob: -7.245051383972168

Token 185: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.22048838436603546
    2. '=' → logprob: -1.845488429069519
    3. '   ' → logprob: -4.220488548278809
    4. 'a' → logprob: -4.470488548278809
    5. 'e' → logprob: -5.595488548278809
    6. ' ' → logprob: -6.345488548278809
    7. ' the' → logprob: -6.845488548278809
    8. ' =' → logprob: -6.970488548278809
    9. '  ' → logprob: -7.220488548278809
    10. 'uler' → logprob: -7.470488548278809

Token 186: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4930666387081146
    2. '1' → logprob: -1.743066668510437
    3. 'A' → logprob: -1.743066668510437
    4. ' A' → logprob: -3.6180665493011475
    5. '0' → logprob: -5.368066787719727
    6. 'l' → logprob: -5.493066787719727
    7. 'a' → logprob: -6.618066787719727
    8. ' l' → logprob: -7.618066787719727
    9. ' the' → logprob: -7.618066787719727
    10. '   ' → logprob: -8.118066787719727

Token 187: ' résultat' (ID: 62556)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09993249922990799
    2. ' A' → logprob: -2.8499324321746826
    3. '1' → logprob: -4.224932670593262
    4. ' ' → logprob: -4.599932670593262
    5. 'a' → logprob: -4.849932670593262
    6. 'g' → logprob: -6.224932670593262
    7. '0' → logprob: -6.974932670593262
    8. ' a' → logprob: -7.349932670593262
    9. 'max' → logprob: -8.724932670593262
    10. ' gcd' → logprob: -9.099932670593262

Token 188: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34216415882110596
    2. ' 
' → logprob: -2.5921640396118164
    3. '   ' → logprob: -2.8421640396118164
    4. 'for' → logprob: -3.3421640396118164
    5. ' ' → logprob: -3.4671640396118164
    6. '    
' → logprob: -3.4671640396118164
    7. ' for' → logprob: -3.7171640396118164
    8. '  
' → logprob: -4.717164039611816
    9. ',' → logprob: -5.092164039611816
    10. '   
' → logprob: -5.342164039611816

Token 189: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10062413662672043
    2. '1' → logprob: -2.9756240844726562
    3. ' A' → logprob: -3.6006240844726562
    4. 'g' → logprob: -5.350624084472656
    5. ' ' → logprob: -5.350624084472656
    6. '0' → logprob: -5.350624084472656
    7. 'a' → logprob: -6.475624084472656
    8. 'l' → logprob: -6.725624084472656
    9. ' gcd' → logprob: -10.100624084472656
    10. ' the' → logprob: -10.350624084472656

Token 190: ' somme' (ID: 64484)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.909795343875885
    2. 'A' → logprob: -1.6597952842712402
    3. 'a' → logprob: -2.2847952842712402
    4. 'g' → logprob: -2.6597952842712402
    5. ' A' → logprob: -2.9097952842712402
    6. 'pg' → logprob: -3.0347952842712402
    7. ' ' → logprob: -3.5347952842712402
    8. 'PG' → logprob: -3.9097952842712402
    9. 'p' → logprob: -4.40979528427124
    10. 'len' → logprob: -4.65979528427124

Token 191: ' finale' (ID: 37759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8521782159805298
    2. '<|end|>' → logprob: -1.4771782159805298
    3. '
' → logprob: -1.7271782159805298
    4. ' 
' → logprob: -3.2271780967712402
    5. ' ' → logprob: -3.4771780967712402
    6. '    
' → logprob: -3.7271780967712402
    7. 'for' → logprob: -4.22717809677124
    8. ' for' → logprob: -4.35217809677124
    9. '  
' → logprob: -4.35217809677124
    10. '<|end|>' → logprob: -4.60217809677124

Token 192: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39915791153907776
    2. ' 
' → logprob: -2.274158000946045
    3. '<|end|>' → logprob: -2.774158000946045
    4. ' ' → logprob: -3.149158000946045
    5. '  
' → logprob: -3.274158000946045
    6. '    
' → logprob: -3.774158000946045
    7. '   ' → logprob: -4.024158000946045
    8. 'for' → logprob: -4.774158000946045
    9. '   
' → logprob: -5.024158000946045
    10. ',' → logprob: -5.149158000946045

Token 193: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9428755044937134
    2. '   ' → logprob: -1.4428755044937134
    3. '
' → logprob: -1.5678755044937134
    4. '    
' → logprob: -3.067875385284424
    5. 'for' → logprob: -3.317875385284424
    6. ' ' → logprob: -3.817875385284424
    7. ' for' → logprob: -3.817875385284424
    8. '  
' → logprob: -3.817875385284424
    9. '   
' → logprob: -4.942875385284424
    10. '\n' → logprob: -6.817875385284424

Token 194: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6794344186782837
    2. ' for' → logprob: -2.054434299468994
    3. '   ' → logprob: -2.304434299468994
    4. ' 
' → logprob: -2.429434299468994
    5. '
' → logprob: -2.554434299468994
    6. '    
' → logprob: -2.804434299468994
    7. ' ' → logprob: -3.929434299468994
    8. '  
' → logprob: -5.429434299468994
    9. '   
' → logprob: -5.429434299468994
    10. ',' → logprob: -6.054434299468994

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07924138009548187
    2. '=' → logprob: -2.5792412757873535
    3. ' ' → logprob: -9.329241752624512
    4. '_' → logprob: -10.079241752624512
    5. 'om' → logprob: -10.579241752624512
    6. 'urrent' → logprob: -10.954241752624512
    7. 'ont' → logprob: -11.329241752624512
    8. 'c' → logprob: -11.329241752624512
    9. 'ount' → logprob: -11.329241752624512
    10. 'on' → logprob: -11.454241752624512

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3549167811870575
    2. 'A' → logprob: -1.6049168109893799
    3. ' ' → logprob: -2.60491681098938
    4. ' A' → logprob: -4.229916572570801
    5. '0' → logprob: -4.729916572570801
    6. 'a' → logprob: -8.7299165725708
    7. 'max' → logprob: -9.2299165725708
    8. 'l' → logprob: -9.9799165725708
    9. '   ' → logprob: -10.1049165725708
    10. '  ' → logprob: -10.4799165725708

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45738187432289124
    2. '0' → logprob: -1.5823818445205688
    3. 'A' → logprob: -1.8323818445205688
    4. '[' → logprob: -7.582381725311279
    5. ' ' → logprob: -8.207382202148438
    6. 'a' → logprob: -8.582382202148438
    7. 'max' → logprob: -9.332382202148438
    8. '[A' → logprob: -9.332382202148438
    9. ' A' → logprob: -9.707382202148438
    10. 'sum' → logprob: -9.957382202148438

Token 198: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' Initialise' (ID: 179601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42816162109375
    2. '#' → logprob: -2.30316162109375
    3. 'for' → logprob: -2.55316162109375
    4. '1' → logprob: -3.42816162109375
    5. ' for' → logprob: -3.55316162109375
    6. '   ' → logprob: -3.67816162109375
    7. 'b' → logprob: -4.05316162109375
    8. '  ' → logprob: -4.05316162109375
    9. 'c' → logprob: -4.17816162109375
    10. '0' → logprob: -4.92816162109375

Token 201: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1372760683298111
    2. 'c' → logprob: -2.6372761726379395
    3. '<|end|>' → logprob: -3.1372761726379395
    4. '    ' → logprob: -6.3872761726379395
    5. '_' → logprob: -6.5122761726379395
    6. 'a' → logprob: -6.6372761726379395
    7. ',' → logprob: -6.7622761726379395
    8. 'b' → logprob: -6.8872761726379395
    9. '  ' → logprob: -7.2622761726379395
    10. '   ' → logprob: -7.2622761726379395

Token 202: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10150207579135895
    2. '*' → logprob: -2.9765021800994873
    3. '_' → logprob: -4.351501941680908
    4. ')' → logprob: -5.101501941680908
    5. ' *' → logprob: -5.726501941680908
    6. ',' → logprob: -5.726501941680908
    7. 'b' → logprob: -5.976501941680908
    8. '=' → logprob: -6.101501941680908
    9. 'space' → logprob: -6.101501941680908
    10. 'c' → logprob: -6.476501941680908

Token 203: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3921893239021301
    2. ' ' → logprob: -1.6421892642974854
    3. ',' → logprob: -3.5171892642974854
    4. '_c' → logprob: -3.6421892642974854
    5. '_' → logprob: -3.8921892642974854
    6. 'b' → logprob: -4.0171895027160645
    7. ' c' → logprob: -4.1421895027160645
    8. '   ' → logprob: -5.0171895027160645
    9. ' ,' → logprob: -5.6421895027160645
    10. '  ' → logprob: -6.2671895027160645

Token 204: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5960227847099304
    2. '<|end|>' → logprob: -1.4710228443145752
    3. ' =' → logprob: -2.096022844314575
    4. '=' → logprob: -2.971022844314575
    5. '<|end|>' → logprob: -4.596022605895996
    6. '  ' → logprob: -4.971022605895996
    7. '_' → logprob: -5.221022605895996
    8. '   ' → logprob: -5.471022605895996
    9. 'c' → logprob: -5.721022605895996
    10. ',' → logprob: -5.971022605895996

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010544841643422842
    2. 'A' → logprob: -7.126054286956787
    3. '0' → logprob: -8.626054763793945
    4. ' ' → logprob: -9.751054763793945
    5. 'a' → logprob: -12.501054763793945
    6. ' A' → logprob: -12.501054763793945
    7. 'g' → logprob: -13.751054763793945
    8. 'l' → logprob: -14.001054763793945
    9. ')' → logprob: -14.501054763793945
    10. '```' → logprob: -14.751054763793945

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032348709646612406
    2. 'A' → logprob: -5.87823486328125
    3. '0' → logprob: -7.87823486328125
    4. ' ' → logprob: -11.12823486328125
    5. 'a' → logprob: -11.12823486328125
    6. '2' → logprob: -12.37823486328125
    7. 'mod' → logprob: -12.87823486328125
    8. 'l' → logprob: -13.00323486328125
    9. 'b' → logprob: -13.25323486328125
    10. '...' → logprob: -13.37823486328125

Token 207: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' elle' (ID: 11451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3517898619174957
    2. ' ' → logprob: -2.101789951324463
    3. '<|end|>' → logprob: -2.101789951324463
    4. ')' → logprob: -3.351789951324463
    5. '<|end|>' → logprob: -5.351789951324463
    6. '  ' → logprob: -5.726789951324463
    7. '#' → logprob: -5.976789951324463
    8. ' )' → logprob: -5.976789951324463
    9. 'def' → logprob: -6.601789951324463
    10. '    ' → logprob: -7.226789951324463

Token 209: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4268803000450134
    2. ' ' → logprob: -2.301880359649658
    3. ' =' → logprob: -2.301880359649658
    4. '#' → logprob: -3.426880359649658
    5. '*' → logprob: -3.551880359649658
    6. ')' → logprob: -4.426880359649658
    7. ' *' → logprob: -4.426880359649658
    8. 'for' → logprob: -4.926880359649658
    9. 'import' → logprob: -5.051880359649658
    10. 'def' → logprob: -5.176880359649658

Token 210: ' utilisée' (ID: 106548)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037683742120862007
    2. ' ' → logprob: -6.253768444061279
    3. '*' → logprob: -7.128768444061279
    4. 'A' → logprob: -7.878768444061279
    5. 'N' → logprob: -8.753767967224121
    6. '0' → logprob: -8.878767967224121
    7. 'import' → logprob: -9.753767967224121
    8. '#' → logprob: -9.878767967224121
    9. 'b' → logprob: -10.378767967224121
    10. 'g' → logprob: -10.503767967224121

Token 211: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3862661123275757
    2. 'for' → logprob: -1.6362661123275757
    3. ' ' → logprob: -2.5112662315368652
    4. '   ' → logprob: -3.7612662315368652
    5. '<|end|>' → logprob: -4.636266231536865
    6. ' pour' → logprob: -5.761266231536865
    7. ')' → logprob: -6.011266231536865
    8. ' to' → logprob: -6.261266231536865
    9. '  ' → logprob: -6.886266231536865
    10. ' )' → logprob: -7.261266231536865

Token 212: ' calcul' (ID: 7559)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3268736600875854
    2. ' ' → logprob: -1.7018736600875854
    3. ' gcd' → logprob: -1.8268736600875854
    4. '1' → logprob: -2.076873779296875
    5. 'A' → logprob: -3.201873779296875
    6. ' A' → logprob: -3.326873779296875
    7. 'import' → logprob: -3.451873779296875
    8. ' range' → logprob: -3.451873779296875
    9. 'range' → logprob: -3.576873779296875
    10. '*' → logprob: -4.201873779296875

Token 213: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0017965621082112193
    2. 'ating' → logprob: -6.751796722412109
    3. 'ater' → logprob: -8.87679672241211
    4. '#' → logprob: -8.87679672241211
    5. '   ' → logprob: -9.37679672241211
    6. 'ate' → logprob: -9.50179672241211
    7. 'ated' → logprob: -10.37679672241211
    8. 'e' → logprob: -10.50179672241211
    9. '```' → logprob: -10.62679672241211
    10. 'uler' → logprob: -10.75179672241211

Token 214: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0068998336791992
    2. ' ' → logprob: -1.5068998336791992
    3. ' A' → logprob: -1.7568998336791992
    4. '(' → logprob: -2.506899833679199
    5. '*' → logprob: -3.256899833679199
    6. ')' → logprob: -3.381899833679199
    7. 'l' → logprob: -4.006899833679199
    8. '(A' → logprob: -4.131899833679199
    9. 'a' → logprob: -4.631899833679199
    10. '1' → logprob: -4.881899833679199

Token 215: ' PPC' (ID: 94738)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.31077808141708374
    2. ' gcd' → logprob: -1.9357781410217285
    3. 'A' → logprob: -3.4357781410217285
    4. 'a' → logprob: -3.9357781410217285
    5. 'c' → logprob: -4.4357781410217285
    6. ' A' → logprob: -4.6857781410217285
    7. 'import' → logprob: -4.8107781410217285
    8. ' ' → logprob: -4.9357781410217285
    9. ' g' → logprob: -5.1857781410217285
    10. 'b' → logprob: -5.4357781410217285

Token 216: 'M' (ID: 44)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2641409635543823
    2. '**' → logprob: -1.6391409635543823
    3. 'o' → logprob: -2.014141082763672
    4. 'I' → logprob: -2.639141082763672
    5. 'r' → logprob: -3.014141082763672
    6. 'i' → logprob: -3.014141082763672
    7. 'u' → logprob: -3.389141082763672
    8. ' ' → logprob: -4.139141082763672
    9. ',' → logprob: -4.264141082763672
    10. 'n' → logprob: -4.389141082763672

Token 217: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3861215114593506
    2. '   ' → logprob: -1.5111215114593506
    3. ' ' → logprob: -3.5111215114593506
    4. '  
' → logprob: -3.7611215114593506
    5. ' 
' → logprob: -3.8861215114593506
    6. '    
' → logprob: -4.26112174987793
    7. '<|end|>' → logprob: -5.76112174987793
    8. '   
' → logprob: -6.26112174987793
    9. '  ' → logprob: -6.51112174987793
    10. ')' → logprob: -6.88612174987793

Token 218: 'Produit' (ID: 130203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16494345664978027
    2. '=' → logprob: -3.0399434566497803
    3. ' =' → logprob: -3.1649434566497803
    4. '<|end|>' → logprob: -4.664943695068359
    5. ' )' → logprob: -5.039943695068359
    6. '(' → logprob: -5.164943695068359
    7. '(a' → logprob: -5.164943695068359
    8. '   ' → logprob: -5.164943695068359
    9. 'a' → logprob: -5.289943695068359
    10. ' ' → logprob: -5.414943695068359

Token 219: ' Plus' (ID: 11899)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7318111062049866
    2. '*=' → logprob: -1.4818110466003418
    3. ' *=' → logprob: -2.356811046600342
    4. ' =' → logprob: -2.856811046600342
    5. '   ' → logprob: -3.356811046600342
    6. '_' → logprob: -3.481811046600342
    7. 'de' → logprob: -3.981811046600342
    8. 'des' → logprob: -4.106811046600342
    9. '*' → logprob: -5.106811046600342
    10. '_=' → logprob: -5.481811046600342

Token 220: ' Petit' (ID: 83690)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0867780447006226
    2. '   ' → logprob: -1.9617780447006226
    3. ' =' → logprob: -1.9617780447006226
    4. 'ieurs' → logprob: -2.086778163909912
    5. '_' → logprob: -2.961778163909912
    6. ')' → logprob: -3.461778163909912
    7. '```' → logprob: -3.836778163909912
    8. 'ieur' → logprob: -4.211778163909912
    9. '_p' → logprob: -4.461778163909912
    10. 'u' → logprob: -4.586778163909912

Token 221: ' Commun' (ID: 8550)
  Prédit: 'commun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'commun' → logprob: -0.34035828709602356
    2. ')' → logprob: -2.340358257293701
    3. '```' → logprob: -2.965358257293701
    4. 'Commun' → logprob: -3.090358257293701
    5. 'multiple' → logprob: -3.590358257293701
    6. ' commun' → logprob: -4.090358257293701
    7. ' multiple' → logprob: -4.715358257293701
    8. 'comm' → logprob: -5.090358257293701
    9. 'Multiple' → logprob: -5.215358257293701
    10. 'l' → logprob: -5.465358257293701

Token 222: ' Multiple' (ID: 39109)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.3702605962753296
    2. 'multiple' → logprob: -1.8702605962753296
    3. 'Multiple' → logprob: -1.9952605962753296
    4. ' multiple' → logprob: -5.620260715484619
    5. 'multip' → logprob: -5.745260715484619
    6. '```' → logprob: -6.620260715484619
    7. ' Multiple' → logprob: -6.745260715484619
    8. 'ultiple' → logprob: -6.745260715484619
    9. '_multiple' → logprob: -6.995260715484619
    10. '(div' → logprob: -7.120260715484619

Token 223: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013691633008420467
    2. '   ' → logprob: -4.888691425323486
    3. ' )' → logprob: -5.388691425323486
    4. ')
' → logprob: -7.763691425323486
    5. '())' → logprob: -8.013691902160645
    6. ' ' → logprob: -8.763691902160645
    7. 'def' → logprob: -9.013691902160645
    8. '  ' → logprob: -9.638691902160645
    9. '))' → logprob: -10.138691902160645
    10. '(
' → logprob: -10.388691902160645

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10416125506162643
    2. ' for' → logprob: -3.229161262512207
    3. 'for' → logprob: -3.604161262512207
    4. '
' → logprob: -3.979161262512207
    5. ')' → logprob: -5.604161262512207
    6. '    
' → logprob: -6.229161262512207
    7. ' ' → logprob: -6.229161262512207
    8. '<|end|>' → logprob: -6.354161262512207
    9. '  ' → logprob: -6.604161262512207
    10. '  
' → logprob: -7.229161262512207

Token 225: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29128164052963257
    2. ' for' → logprob: -1.9162817001342773
    3. '   ' → logprob: -2.2912817001342773
    4. ':' → logprob: -5.666281700134277
    5. '_' → logprob: -8.791281700134277
    6. ')' → logprob: -8.791281700134277
    7. 'i' → logprob: -9.166281700134277
    8. '    ' → logprob: -9.291281700134277
    9. ' ' → logprob: -9.416281700134277
    10. '  ' → logprob: -9.916281700134277

Token 226: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03944792225956917
    2. ' for' → logprob: -3.2894480228424072
    3. 'from' → logprob: -6.914447784423828
    4. '   ' → logprob: -8.414447784423828
    5. 'import' → logprob: -8.789447784423828
    6. ' from' → logprob: -11.289447784423828
    7. 'def' → logprob: -11.914447784423828
    8. 'For' → logprob: -12.664447784423828
    9. '```' → logprob: -13.039447784423828
    10. 'range' → logprob: -13.101947784423828

Token 227: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5208143591880798
    2. ' for' → logprob: -1.8958144187927246
    3. ' boucle' → logprob: -2.6458144187927246
    4. 'def' → logprob: -3.3958144187927246
    5. ' ligne' → logprob: -3.5208144187927246
    6. ' code' → logprob: -3.6458144187927246
    7. 'suite' → logprob: -3.8958144187927246
    8. 'ligne' → logprob: -4.645814418792725
    9. ' suite' → logprob: -4.770814418792725
    10. 'import' → logprob: -5.270814418792725

Token 228: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11287789791822433
    2. ' for' → logprob: -2.23787784576416
    3. ':' → logprob: -10.23787784576416
    4. ' in' → logprob: -11.86287784576416
    5. 'in' → logprob: -12.11287784576416
    6. 'pour' → logprob: -12.73787784576416
    7. ' pour' → logprob: -13.86287784576416
    8. '   ' → logprob: -13.86287784576416
    9. 'range' → logprob: -14.48787784576416
    10. ' ' → logprob: -14.48787784576416

Token 229: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.06005923077464104
    2. 'ours' → logprob: -2.9350593090057373
    3. 'oure' → logprob: -5.310059070587158
    4. 'our' → logprob: -8.935059547424316
    5. 'ourse' → logprob: -9.810059547424316
    6. '_' → logprob: -11.935059547424316
    7. '#' → logprob: -12.435059547424316
    8. 'ourses' → logprob: -12.685059547424316
    9. '
' → logprob: -12.810059547424316
    10. 'o' → logprob: -12.810059547424316

Token 230: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7021146416664124
    2. ' A' → logprob: -1.7021145820617676
    3. 'A' → logprob: -1.8271145820617676
    4. 'range' → logprob: -1.8271145820617676
    5. '   ' → logprob: -8.827115058898926
    6. ' ' → logprob: -9.077115058898926
    7. '(range' → logprob: -9.702115058898926
    8. '(A' → logprob: -10.827115058898926
    9. '  ' → logprob: -11.827115058898926
    10. ')' → logprob: -12.202115058898926

Token 231: ' élément' (ID: 99627)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7164578437805176
    2. 'a' → logprob: -0.8414578437805176
    3. ' i' → logprob: -3.4664578437805176
    4. 'i' → logprob: -3.5914578437805176
    5. 'A' → logprob: -4.841457843780518
    6. ' element' → logprob: -5.591457843780518
    7. 'element' → logprob: -5.716457843780518
    8. 'x' → logprob: -6.341457843780518
    9. ' A' → logprob: -6.466457843780518
    10. ' x' → logprob: -6.841457843780518

Token 232: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9344164133071899
    2. ' in' → logprob: -1.18441641330719
    3. ' de' → logprob: -1.93441641330719
    4. 'A' → logprob: -3.0594162940979004
    5. ' A' → logprob: -3.3094162940979004
    6. ':' → logprob: -4.1844162940979
    7. ' ' → logprob: -4.3094162940979
    8. '    ' → logprob: -4.4344162940979
    9. 'in' → logprob: -4.5594162940979
    10. ' of' → logprob: -4.8094162940979

Token 233: 'a' (ID: 64)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7179068326950073
    2. 'a' → logprob: -1.4679068326950073
    3. ' A' → logprob: -1.7179068326950073
    4. ' a' → logprob: -2.717906951904297
    5. ' in' → logprob: -3.467906951904297
    6. 'x' → logprob: -6.842906951904297
    7. 'range' → logprob: -6.967906951904297
    8. 'in' → logprob: -7.092906951904297
    9. ' range' → logprob: -7.342906951904297
    10. 'i' → logprob: -7.592906951904297

Token 234: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5638735890388489
    2. ' in' → logprob: -1.438873529434204
    3. 'in' → logprob: -2.563873529434204
    4. ' '' → logprob: -3.063873529434204
    5. ')' → logprob: -3.563873529434204
    6. ' de' → logprob: -3.688873529434204
    7. ',' → logprob: -5.438873767852783
    8. ' ' → logprob: -5.563873767852783
    9. ' )' → logprob: -6.438873767852783
    10. ''in' → logprob: -6.563873767852783

Token 235: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21442215144634247
    2. ' de' → logprob: -2.4644222259521484
    3. 'in' → logprob: -2.5894222259521484
    4. ',' → logprob: -4.839422225952148
    5. '   ' → logprob: -4.839422225952148
    6. ' dans' → logprob: -5.089422225952148
    7. ' ,' → logprob: -5.714422225952148
    8. ' ' → logprob: -6.589422225952148
    9. 'de' → logprob: -7.089422225952148
    10. ' en' → logprob: -7.214422225952148

Token 236: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.575948178768158
    2. 'A' → logprob: -0.825948178768158
    3. '	A' → logprob: -12.700947761535645
    4. ' ' → logprob: -12.700947761535645
    5. ' ' → logprob: -13.450947761535645
    6. '   ' → logprob: -15.200947761535645
    7. '  ' → logprob: -15.450947761535645
    8. ')' → logprob: -15.950947761535645
    9. ' the' → logprob: -16.07594871520996
    10. '    ' → logprob: -16.20094871520996

Token 237: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05488375201821327
    2. ' A' → logprob: -2.9298837184906006
    3. ' ' → logprob: -14.80488395690918
    4. '	A' → logprob: -15.80488395690918
    5. ' code' → logprob: -16.42988395690918
    6. ' ' → logprob: -16.42988395690918
    7. '`' → logprob: -16.55488395690918
    8. ' range' → logprob: -16.55488395690918
    9. '   ' → logprob: -16.67988395690918
    10. 'a' → logprob: -16.67988395690918

Token 238: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6935589909553528
    2. ' A' → logprob: -0.8185589909553528
    3. '   ' → logprob: -2.943558931350708
    4. ' for' → logprob: -5.693559169769287
    5. 'for' → logprob: -6.568559169769287
    6. ' ' → logprob: -7.318559169769287
    7. ':' → logprob: -7.443559169769287
    8. '  ' → logprob: -9.693558692932129
    9. 'a' → logprob: -9.943558692932129
    10. '    ' → logprob: -10.193558692932129

Token 239: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041336219757795334
    2. ':' → logprob: -3.2913362979888916
    3. '    
' → logprob: -6.9163360595703125
    4. ':
' → logprob: -7.2913360595703125
    5. ' for' → logprob: -7.5413360595703125
    6. ',' → logprob: -7.6663360595703125
    7. 'for' → logprob: -9.166336059570312
    8. ' :' → logprob: -9.166336059570312
    9. '  
' → logprob: -9.541336059570312
    10. '
' → logprob: -9.666336059570312

Token 240: ' calcul' (ID: 7559)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3707085847854614
    2. '   ' → logprob: -1.8707085847854614
    3. 'a' → logprob: -2.745708465576172
    4. ' c' → logprob: -3.620708465576172
    5. ':' → logprob: -4.245708465576172
    6. ' ' → logprob: -4.370708465576172
    7. ' A' → logprob: -4.745708465576172
    8. 'A' → logprob: -4.995708465576172
    9. ' compute' → logprob: -5.620708465576172
    10. '    ' → logprob: -5.620708465576172

Token 241: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0016931501450017095
    2. 'ate' → logprob: -6.501693248748779
    3. 'r' → logprob: -9.501692771911621
    4. '#' → logprob: -9.876692771911621
    5. 'e' → logprob: -10.876692771911621
    6. 'ater' → logprob: -11.376692771911621
    7. 'ter' → logprob: -11.501692771911621
    8. '```' → logprob: -11.751692771911621
    9. 'a' → logprob: -12.376692771911621
    10. 'te' → logprob: -13.251692771911621

Token 242: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2132725566625595
    2. 'a' → logprob: -2.8382725715637207
    3. 'c' → logprob: -3.0882725715637207
    4. ' c' → logprob: -3.3382725715637207
    5. ' a' → logprob: -3.8382725715637207
    6. 'A' → logprob: -4.588272571563721
    7. ' ' → logprob: -5.338272571563721
    8. ' A' → logprob: -5.588272571563721
    9. '  ' → logprob: -6.213272571563721
    10. 'b' → logprob: -6.338272571563721

Token 243: ' PPC' (ID: 94738)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35473477840423584
    2. ' a' → logprob: -2.3547348976135254
    3. 'c' → logprob: -2.7297348976135254
    4. 'g' → logprob: -2.8547348976135254
    5. ' gcd' → logprob: -3.3547348976135254
    6. ' c' → logprob: -3.7297348976135254
    7. 'b' → logprob: -5.604734897613525
    8. 'A' → logprob: -5.854734897613525
    9. 'import' → logprob: -6.104734897613525
    10. ' ' → logprob: -6.229734897613525

Token 244: 'M' (ID: 44)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31711772084236145
    2. 'M' → logprob: -1.442117691040039
    3. ' for' → logprob: -4.067117691040039
    4. 'cm' → logprob: -5.192117691040039
    5. 'CM' → logprob: -5.692117691040039
    6. 'm' → logprob: -5.817117691040039
    7. ' ' → logprob: -6.067117691040039
    8. 'for' → logprob: -6.817117691040039
    9. 'a' → logprob: -7.442117691040039
    10. '       ' → logprob: -7.692117691040039

Token 245: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12329230457544327
    2. ':' → logprob: -2.7482922077178955
    3. ' for' → logprob: -3.3732922077178955
    4. 'for' → logprob: -4.748292446136475
    5. ',' → logprob: -5.748292446136475
    6. '    
' → logprob: -6.623292446136475
    7. '.' → logprob: -6.998292446136475
    8. ' ' → logprob: -7.248292446136475
    9. ':
' → logprob: -7.623292446136475
    10. '<|end|>' → logprob: -7.748292446136475

Token 246: ' tous' (ID: 10688)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21332833170890808
    2. ' A' → logprob: -1.7133283615112305
    3. 'a' → logprob: -4.5883283615112305
    4. ' a' → logprob: -7.3383283615112305
    5. 'c' → logprob: -7.4633283615112305
    6. '   ' → logprob: -9.08832836151123
    7. ' c' → logprob: -9.08832836151123
    8. ' ' → logprob: -9.21332836151123
    9. ' la' → logprob: -9.71332836151123
    10. ')' → logprob: -11.08832836151123

Token 247: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24880793690681458
    2. ' a' → logprob: -1.6238079071044922
    3. '   ' → logprob: -4.373807907104492
    4. ' ' → logprob: -5.248807907104492
    5. '_a' → logprob: -6.623807907104492
    6. 'A' → logprob: -6.748807907104492
    7. ' A' → logprob: -7.248807907104492
    8. '(a' → logprob: -7.748807907104492
    9. '	a' → logprob: -7.748807907104492
    10. '  ' → logprob: -7.998807907104492

Token 248: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3136615455150604
    2. ' a' → logprob: -1.3136615753173828
    3. 'A' → logprob: -9.563661575317383
    4. ' elements' → logprob: -9.563661575317383
    5. ' A' → logprob: -9.688661575317383
    6. ' ' → logprob: -9.938661575317383
    7. 'elements' → logprob: -9.938661575317383
    8. '	a' → logprob: -10.063661575317383
    9. '   ' → logprob: -10.313661575317383
    10. '_a' → logprob: -11.938661575317383

Token 249: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13517408072948456
    2. ' for' → logprob: -2.760174036026001
    3. 'for' → logprob: -3.135174036026001
    4. ':' → logprob: -4.38517427444458
    5. 'a' → logprob: -6.26017427444458
    6. '    
' → logprob: -7.01017427444458
    7. '.' → logprob: -7.38517427444458
    8. ' a' → logprob: -7.38517427444458
    9. ' ' → logprob: -7.51017427444458
    10. ',' → logprob: -7.76017427444458

Token 250: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05499241501092911
    2. ' A' → logprob: -2.929992437362671
    3. 'a' → logprob: -9.42999267578125
    4. ' ' → logprob: -11.17999267578125
    5. ')' → logprob: -12.55499267578125
    6. ' a' → logprob: -12.92999267578125
    7. '   ' → logprob: -13.05499267578125
    8. ' la' → logprob: -13.55499267578125
    9. '	A' → logprob: -13.55499267578125
    10. ']' → logprob: -14.30499267578125

Token 251: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004637434147298336
    2. ' A' → logprob: -5.379637241363525
    3. '   ' → logprob: -12.254637718200684
    4. ' ' → logprob: -12.504637718200684
    5. 'range' → logprob: -13.379637718200684
    6. 'list' → logprob: -13.504637718200684
    7. ')' → logprob: -13.754637718200684
    8. ' range' → logprob: -14.004637718200684
    9. 'for' → logprob: -14.004637718200684
    10. ' list' → logprob: -14.754637718200684

Token 252: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9057838916778564
    2. '   ' → logprob: -1.1557838916778564
    3. ' for' → logprob: -1.2807838916778564
    4. ':' → logprob: -6.530783653259277
    5. 'a' → logprob: -7.655783653259277
    6. '    
' → logprob: -8.280783653259277
    7. ':
' → logprob: -8.780783653259277
    8. 'def' → logprob: -8.780783653259277
    9. '	for' → logprob: -9.155783653259277
    10. ' ' → logprob: -9.280783653259277

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06786443293094635
    2. ' for' → logprob: -3.317864418029785
    3. ':' → logprob: -4.067864418029785
    4. 'for' → logprob: -4.817864418029785
    5. ' a' → logprob: -7.067864418029785
    6. 'a' → logprob: -7.067864418029785
    7. ':
' → logprob: -7.192864418029785
    8. ' ' → logprob: -8.067864418029785
    9. ',' → logprob: -8.067864418029785
    10. '    
' → logprob: -8.192864418029785

Token 254: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.245259627699852
    2. ' for' → logprob: -1.6202596426010132
    3. 'for' (adapté à ' for') → logprob: -3.9952595233917236
    4. ' a' → logprob: -7.370259761810303
    5. 'a' → logprob: -7.995259761810303
    6. '	for' → logprob: -9.245259284973145
    7. ' ' → logprob: -10.120259284973145
    8. '    
' → logprob: -10.620259284973145
    9. '```' → logprob: -10.870259284973145
    10. '    ' → logprob: -10.995259284973145

Token 255: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6326088905334473
    2. ' a' → logprob: -0.7576088905334473
    3. '	a' → logprob: -12.257608413696289
    4. '_a' → logprob: -12.757608413696289
    5. 'A' → logprob: -14.132608413696289
    6. ' ' → logprob: -15.382608413696289
    7. ' ' → logprob: -15.507608413696289
    8. 'i' → logprob: -15.820108413696289
    9. '   ' → logprob: -15.820108413696289
    10. '#a' → logprob: -16.44510841369629

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07896028459072113
    2. 'in' → logprob: -2.5789601802825928
    3. ' ' → logprob: -10.328960418701172
    4. ':' → logprob: -11.078960418701172
    5. ' :' → logprob: -12.203960418701172
    6. '	in' → logprob: -12.328960418701172
    7. 's' → logprob: -12.578960418701172
    8. '  ' → logprob: -12.828960418701172
    9. ' ' → logprob: -12.953960418701172
    10. 'In' → logprob: -13.578960418701172

Token 257: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04858771339058876
    2. ' A' → logprob: -3.0485877990722656
    3. '	A' → logprob: -15.673587799072266
    4. '   ' → logprob: -16.173587799072266
    5. ' ' → logprob: -16.923587799072266
    6. ',A' → logprob: -19.298587799072266
    7. '_A' → logprob: -19.298587799072266
    8. '
' → logprob: -19.548587799072266
    9. '(A' → logprob: -19.548587799072266
    10. '  ' → logprob: -19.673587799072266

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.160328209400177
    2. ':
' → logprob: -1.9103281497955322
    3. '   ' → logprob: -10.035327911376953
    4. ' :
' → logprob: -10.535327911376953
    5. ' :' → logprob: -10.660327911376953
    6. ':
' → logprob: -12.035327911376953
    7. '):
' → logprob: -13.660327911376953
    8. '       ' → logprob: -14.035327911376953
    9. ':

' → logprob: -14.035327911376953
    10. ',' → logprob: -14.285327911376953

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014011415652930737
    2. ' c' → logprob: -5.264011383056641
    3. 'c' → logprob: -5.889011383056641
    4. '   ' → logprob: -6.139011383056641
    5. '
' → logprob: -7.139011383056641
    6. ' 
' → logprob: -7.514011383056641
    7. ',' → logprob: -8.13901138305664
    8. '        
' → logprob: -8.13901138305664
    9. '    ' → logprob: -8.51401138305664
    10. ' b' → logprob: -8.76401138305664

Token 260: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7594811916351318
    2. 'c' → logprob: -0.8844811916351318
    3. ' c' → logprob: -2.509481191635132
    4. '       ' → logprob: -4.009481430053711
    5. 'g' → logprob: -4.384481430053711
    6. ' gcd' → logprob: -5.384481430053711
    7. ' g' → logprob: -7.384481430053711
    8. '    ' → logprob: -7.759481430053711
    9. '	c' → logprob: -7.884481430053711
    10. 'import' → logprob: -8.259481430053711

Token 261: ' Le' (ID: 2018)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06051275134086609
    2. ' c' → logprob: -3.0605127811431885
    3. 'from' → logprob: -5.310512542724609
    4. '   ' → logprob: -6.060512542724609
    5. 'import' → logprob: -6.310512542724609
    6. '       ' → logprob: -6.685512542724609
    7. 'g' → logprob: -7.435512542724609
    8. ' from' → logprob: -7.560512542724609
    9. ' gcd' → logprob: -9.43551254272461
    10. '           ' → logprob: -9.56051254272461

Token 262: ' PPC' (ID: 94738)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.33519425988197327
    2. 'c' → logprob: -1.7101942300796509
    3. 'g' → logprob: -3.7101943492889404
    4. ' gcd' → logprob: -3.7101943492889404
    5. 'import' → logprob: -3.8351943492889404
    6. ' from' → logprob: -4.835194110870361
    7. ':' → logprob: -5.210194110870361
    8. '   ' → logprob: -5.210194110870361
    9. 'from' → logprob: -5.335194110870361
    10. 'b' → logprob: -6.210194110870361

Token 263: 'M' (ID: 44)
  Prédit: 'CM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.1721605658531189
    2. 'M' → logprob: -2.9221606254577637
    3. '   ' → logprob: -2.9221606254577637
    4. 'cm' → logprob: -3.5471606254577637
    5. 'm' → logprob: -5.047160625457764
    6. 'c' → logprob: -5.297160625457764
    7. 'C' → logprob: -5.297160625457764
    8. 'a' → logprob: -6.297160625457764
    9. '       ' → logprob: -7.547160625457764
    10. ' CM' → logprob: -7.797160625457764

Token 264: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08902889490127563
    2. '=' → logprob: -2.464028835296631
    3. ' *=' → logprob: -10.714029312133789
    4. 'c' → logprob: -10.964029312133789
    5. '*=' → logprob: -11.089029312133789
    6. ' ' → logprob: -11.589029312133789
    7. '   ' → logprob: -11.714029312133789
    8. 's' → logprob: -12.214029312133789
    9. '=c' → logprob: -12.964029312133789
    10. 'a' → logprob: -13.589029312133789

Token 265: ' deux' (ID: 10301)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04737977683544159
    2. ' c' → logprob: -3.172379732131958
    3. '(c' → logprob: -5.672379970550537
    4. 'b' → logprob: -8.172379493713379
    5. ' (' → logprob: -8.172379493713379
    6. 'a' → logprob: -8.922379493713379
    7. '   ' → logprob: -9.172379493713379
    8. '(a' → logprob: -9.547379493713379
    9. ' b' → logprob: -10.797379493713379
    10. ' a' → logprob: -11.172379493713379

Token 266: ' nombres' (ID: 76205)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5088373422622681
    2. 'a' → logprob: -1.758837342262268
    3. 'numbers' → logprob: -2.3838372230529785
    4. 'c' → logprob: -2.7588372230529785
    5. ' a' → logprob: -3.5088372230529785
    6. ' b' → logprob: -4.0088372230529785
    7. ' numbers' → logprob: -4.2588372230529785
    8. ' c' → logprob: -6.0088372230529785
    9. '_numbers' → logprob: -6.7588372230529785
    10. ' nombres' → logprob: -6.8838372230529785

Token 267: ' x' (ID: 1215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06353083997964859
    2. '=' → logprob: -2.813530921936035
    3. '       ' → logprob: -6.938530921936035
    4. '   ' → logprob: -7.938530921936035
    5. ' ' → logprob: -9.438530921936035
    6. 'c' → logprob: -9.938530921936035
    7. ' c' → logprob: -10.438530921936035
    8. '        ' → logprob: -11.063530921936035
    9. ',' → logprob: -11.438530921936035
    10. '=c' → logprob: -11.438530921936035

Token 268: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019314881414175034
    2. '=' → logprob: -4.519314765930176
    3. '       ' → logprob: -5.644314765930176
    4. '   ' → logprob: -6.269314765930176
    5. ' *' → logprob: -7.144314765930176
    6. ',' → logprob: -7.269314765930176
    7. ' ' → logprob: -8.019314765930176
    8. ')' → logprob: -8.269314765930176
    9. ' and' → logprob: -9.144314765930176
    10. '    ' → logprob: -9.394314765930176

Token 269: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07893616706132889
    2. ' y' → logprob: -2.5789361000061035
    3. ' ' → logprob: -11.203936576843262
    4. 'a' → logprob: -11.203936576843262
    5. '   ' → logprob: -11.453936576843262
    6. ' a' → logprob: -12.703936576843262
    7. 'x' → logprob: -13.453936576843262
    8. '	y' → logprob: -13.578936576843262
    9. '    ' → logprob: -14.328936576843262
    10. '  ' → logprob: -14.578936576843262

Token 270: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014540582895279
    2. '=' → logprob: -1.7014540433883667
    3. '   ' → logprob: -11.576454162597656
    4. '       ' → logprob: -11.576454162597656
    5. ' ' → logprob: -11.826454162597656
    6. ' =
' → logprob: -12.451454162597656
    7. '        ' → logprob: -13.451454162597656
    8. ',' → logprob: -13.576454162597656
    9. '    ' → logprob: -13.701454162597656
    10. ' is' → logprob: -13.826454162597656

Token 271: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8923126459121704
    2. ' c' → logprob: -1.2673126459121704
    3. ' x' → logprob: -2.142312526702881
    4. 'c' → logprob: -2.767312526702881
    5. '(x' → logprob: -2.767312526702881
    6. 'x' → logprob: -3.392312526702881
    7. '       ' → logprob: -4.142312526702881
    8. '(c' → logprob: -5.017312526702881
    9. '        ' → logprob: -5.142312526702881
    10. '(' → logprob: -6.892312526702881

Token 272: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18989187479019165
    2. ' x' → logprob: -1.8148918151855469
    3. '(x' → logprob: -5.564891815185547
    4. 'c' → logprob: -5.689891815185547
    5. '   ' → logprob: -6.439891815185547
    6. ' c' → logprob: -7.064891815185547
    7. ' (' → logprob: -8.064891815185547
    8. ' ' → logprob: -10.314891815185547
    9. '       ' → logprob: -10.939891815185547
    10. '(c' → logprob: -10.939891815185547

Token 273: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1002589762210846
    2. '*' → logprob: -2.3502590656280518
    3. '*y' → logprob: -10.850258827209473
    4. ' ' → logprob: -11.475258827209473
    5. ' ' → logprob: -11.475258827209473
    6. '*b' → logprob: -12.100258827209473
    7. '**' → logprob: -13.600258827209473
    8. '*c' → logprob: -13.725258827209473
    9. '*l' → logprob: -13.850258827209473
    10. '*a' → logprob: -14.100258827209473

Token 274: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12695373594760895
    2. ' y' → logprob: -2.1269538402557373
    3. ' ' → logprob: -11.001954078674316
    4. 'a' → logprob: -13.376954078674316
    5. '    ' → logprob: -13.626954078674316
    6. '	y' → logprob: -13.751954078674316
    7. '  ' → logprob: -13.876954078674316
    8. '   ' → logprob: -14.001954078674316
    9. '```' → logprob: -14.376954078674316
    10. '(y' → logprob: -14.626954078674316

Token 275: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013375049456954002
    2. ' )' → logprob: -7.25133752822876
    3. ')//' → logprob: -7.75133752822876
    4. ' //' → logprob: -8.751337051391602
    5. '//' → logprob: -10.251337051391602
    6. '   ' → logprob: -13.001337051391602
    7. ' ' → logprob: -15.126337051391602
    8. ' ' → logprob: -15.126337051391602
    9. '#' → logprob: -15.876337051391602
    10. '       ' → logprob: -16.0013370513916

Token 276: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0801611915230751
    2. '//' → logprob: -3.2051610946655273
    3. ')' → logprob: -3.3301610946655273
    4. ' )' → logprob: -8.080161094665527
    5. ' ' → logprob: -8.830161094665527
    6. '   ' → logprob: -9.080161094665527
    7. ' ' → logprob: -10.580161094665527
    8. ')//' → logprob: -10.830161094665527
    9. '#' → logprob: -10.955161094665527
    10. ']' → logprob: -11.330161094665527

Token 277: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.027073794975876808
    2. ' gcd' → logprob: -3.652073860168457
    3. '   ' → logprob: -8.277073860168457
    4. 'a' → logprob: -8.777073860168457
    5. ' g' → logprob: -9.277073860168457
    6. ' ' → logprob: -9.402073860168457
    7. 'math' → logprob: -10.027073860168457
    8. '  ' → logprob: -10.652073860168457
    9. '	g' → logprob: -11.027073860168457
    10. 'b' → logprob: -11.402073860168457

Token 278: '(x' (ID: 4061)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2947542071342468
    2. '(' → logprob: -1.4197542667388916
    3. '(x' → logprob: -4.5447540283203125
    4. '(a' → logprob: -6.4197540283203125
    5. 'c' → logprob: -7.5447540283203125
    6. ' (' → logprob: -8.169754028320312
    7. ')' → logprob: -8.669754028320312
    8. '(
' → logprob: -9.044754028320312
    9. '       ' → logprob: -10.044754028320312
    10. 'a' → logprob: -10.794754028320312

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38518354296684265
    2. '(a' → logprob: -2.135183572769165
    3. '(' → logprob: -2.635183572769165
    4. ')' → logprob: -2.885183572769165
    5. '(y' → logprob: -3.135183572769165
    6. '(x' → logprob: -4.885183334350586
    7. ',y' → logprob: -5.010183334350586
    8. '),' → logprob: -5.135183334350586
    9. ' ,' → logprob: -5.760183334350586
    10. '(c' → logprob: -5.885183334350586

Token 280: ' y' (ID: 342)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7809029221534729
    2. 'y' → logprob: -0.9059029221534729
    3. 'c' → logprob: -2.280902862548828
    4. ' y' → logprob: -3.530902862548828
    5. ' c' → logprob: -6.280902862548828
    6. ' a' → logprob: -6.280902862548828
    7. '(a' → logprob: -7.030902862548828
    8. '(y' → logprob: -7.155902862548828
    9. 'x' → logprob: -8.530902862548828
    10. ')' → logprob: -9.280902862548828

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011656583286821842
    2. '       ' → logprob: -4.761656761169434
    3. ' )' → logprob: -5.886656761169434
    4. ')
' → logprob: -9.261656761169434
    5. '   ' → logprob: -10.011656761169434
    6. '),' → logprob: -10.886656761169434
    7. '))' → logprob: -10.886656761169434
    8. ').' → logprob: -10.886656761169434
    9. ')*' → logprob: -11.511656761169434
    10. '        ' → logprob: -11.636656761169434

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006485754274763167
    2. '   ' → logprob: -8.750648498535156
    3. ',' → logprob: -9.000648498535156
    4. '        
' → logprob: -9.000648498535156
    5. ')' → logprob: -10.375648498535156
    6. ' c' → logprob: -10.500648498535156
    7. '        ' → logprob: -10.625648498535156
    8. '      ' → logprob: -10.875648498535156
    9. '<|end|>' → logprob: -10.875648498535156
    10. '           ' → logprob: -11.000648498535156

Token 283: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.591326117515564
    2. 'c' → logprob: -1.216326117515564
    3. ' c' → logprob: -1.966326117515564
    4. '   ' → logprob: -4.7163262367248535
    5. '
' → logprob: -8.466325759887695
    6. '	c' → logprob: -8.466325759887695
    7. '        ' → logprob: -8.591325759887695
    8. 'import' → logprob: -9.216325759887695
    9. '        
' → logprob: -9.466325759887695
    10. 'from' → logprob: -9.966325759887695

Token 284: ' Ici' (ID: 145754)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28978464007377625
    2. ' c' → logprob: -1.6647846698760986
    3. '       ' → logprob: -2.7897846698760986
    4. '   ' → logprob: -7.2897844314575195
    5. '        ' → logprob: -9.78978443145752
    6. '	c' → logprob: -10.28978443145752
    7. '           ' → logprob: -10.28978443145752
    8. '
' → logprob: -10.53978443145752
    9. ' ' → logprob: -11.28978443145752
    10. 'import' → logprob: -11.53978443145752

Token 285: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002245058072730899
    2. ' c' → logprob: -7.00224494934082
    3. ':' → logprob: -7.75224494934082
    4. 'c' → logprob: -8.50224494934082
    5. '   ' → logprob: -8.62724494934082
    6. '        ' → logprob: -8.62724494934082
    7. ',' → logprob: -9.12724494934082
    8. '        
' → logprob: -10.00224494934082
    9. '    ' → logprob: -10.75224494934082
    10. '      ' → logprob: -11.12724494934082

Token 286: ' on' (ID: 402)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31922972202301025
    2. 'c' → logprob: -1.3192297220230103
    3. 'from' → logprob: -5.819229602813721
    4. 'import' → logprob: -6.694229602813721
    5. ' from' → logprob: -6.819229602813721
    6. '       ' → logprob: -8.194230079650879
    7. ' import' → logprob: -9.069230079650879
    8. '   ' → logprob: -9.319230079650879
    9. ' gcd' → logprob: -9.569230079650879
    10. 'b' → logprob: -10.944230079650879

Token 287: ' met' (ID: 1421)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44899168610572815
    2. ' c' → logprob: -1.4489916563034058
    3. 'c' → logprob: -2.4489917755126953
    4. '   ' → logprob: -3.4489917755126953
    5. '    ' → logprob: -5.948991775512695
    6. '        ' → logprob: -6.573991775512695
    7. 'b' → logprob: -6.948991775512695
    8. ' calculates' → logprob: -7.823991775512695
    9. ' b' → logprob: -8.198991775512695
    10. ' *' → logprob: -8.198991775512695

Token 288: ' à' (ID: 1221)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7900179624557495
    2. 'c' → logprob: -0.9150179624557495
    3. ' à' → logprob: -2.290018081665039
    4. '   ' → logprob: -3.540018081665039
    5. '    ' → logprob: -5.415018081665039
    6. 'à' → logprob: -6.040018081665039
    7. 'b' → logprob: -6.165018081665039
    8. ' b' → logprob: -6.665018081665039
    9. '       ' → logprob: -6.915018081665039
    10. '	c' → logprob: -6.915018081665039

Token 289: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.10079875588417053
    2. ' jour' → logprob: -2.3507988452911377
    3. 'c' → logprob: -7.725798606872559
    4. 'day' → logprob: -9.350798606872559
    5. 'Jour' → logprob: -10.600798606872559
    6. 'jours' → logprob: -11.100798606872559
    7. ' jours' → logprob: -11.350798606872559
    8. '```' → logprob: -12.100798606872559
    9. 'j' → logprob: -12.850798606872559
    10. 'b' → logprob: -13.725798606872559

Token 290: ' '' (ID: 461)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4295055568218231
    2. 'c' → logprob: -1.0545055866241455
    3. '   ' → logprob: -7.304505348205566
    4. '       ' → logprob: -9.804505348205566
    5. '    ' → logprob: -10.054505348205566
    6. '	c' → logprob: -11.179505348205566
    7. ' ' → logprob: -12.179505348205566
    8. '        ' → logprob: -12.804505348205566
    9. '           ' → logprob: -12.929505348205566
    10. '  ' → logprob: -13.304505348205566

Token 291: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026539700105786324
    2. ' c' → logprob: -3.6515398025512695
    3. '   ' → logprob: -8.65153980255127
    4. '	c' → logprob: -10.65153980255127
    5. 'b' → logprob: -11.52653980255127
    6. '       ' → logprob: -11.90153980255127
    7. ')c' → logprob: -12.02653980255127
    8. '    ' → logprob: -12.52653980255127
    9. ' ' → logprob: -12.77653980255127
    10. '
' → logprob: -12.90153980255127

Token 292: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03379898890852928
    2. '=' → logprob: -3.408798933029175
    3. ' *=' → logprob: -9.408799171447754
    4. ' ' → logprob: -10.158799171447754
    5. '   ' → logprob: -11.033799171447754
    6. ')' → logprob: -11.908799171447754
    7. ' ' → logprob: -13.033799171447754
    8. '*=' → logprob: -13.408799171447754
    9. '    ' → logprob: -13.783799171447754
    10. ' *' → logprob: -13.908799171447754

Token 293: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03813421353697777
    2. '=' → logprob: -3.2881340980529785
    3. ' *=' → logprob: -9.663134574890137
    4. '   ' → logprob: -11.288134574890137
    5. ' ' → logprob: -11.788134574890137
    6. ' ' → logprob: -12.913134574890137
    7. '    ' → logprob: -13.288134574890137
    8. '	' → logprob: -13.913134574890137
    9. '*=' → logprob: -14.163134574890137
    10. ' =
' → logprob: -14.288134574890137

Token 294: ' chaque' (ID: 21194)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3959053158760071
    2. '(c' → logprob: -2.0209052562713623
    3. ' (' → logprob: -2.1459052562713623
    4. ' c' → logprob: -2.6459052562713623
    5. '(a' → logprob: -5.770905494689941
    6. 'a' → logprob: -6.395905494689941
    7. '(' → logprob: -6.895905494689941
    8. '   ' → logprob: -8.145905494689941
    9. ' a' → logprob: -8.770905494689941
    10. ' ' → logprob: -9.020905494689941

Token 295: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8281357288360596
    2. ' a' → logprob: -1.4531357288360596
    3. '=' → logprob: -2.3281357288360596
    4. ' _' → logprob: -2.7031357288360596
    5. ' ' → logprob: -3.4531357288360596
    6. ' =' → logprob: -3.4531357288360596
    7. ' *' → logprob: -3.8281357288360596
    8. 'a' → logprob: -3.8281357288360596
    9. ' c' → logprob: -3.9531357288360596
    10. '*' → logprob: -4.3281354904174805

Token 296: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.033938776701688766
    2. 'er' → logprob: -3.5339388847351074
    3. 'ér' → logprob: -6.158938884735107
    4. 'é' → logprob: -6.908938884735107
    5. 'érateur' → logprob: -7.658938884735107
    6. 'érations' → logprob: -8.78393840789795
    7. 'éra' → logprob: -9.40893840789795
    8. 'érer' → logprob: -9.40893840789795
    9. 'éré' → logprob: -9.78393840789795
    10. 'érant' → logprob: -10.53393840789795

Token 297: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19268271327018738
    2. '=' → logprob: -1.8176827430725098
    3. ' c' → logprob: -5.81768274307251
    4. '       ' → logprob: -5.81768274307251
    5. '   ' → logprob: -5.94268274307251
    6. 'c' → logprob: -6.56768274307251
    7. ' *=' → logprob: -6.69268274307251
    8. '=c' → logprob: -7.44268274307251
    9. ' ' → logprob: -8.317682266235352
    10. ' =
' → logprob: -8.692682266235352

Token 298: ' qu' (ID: 474)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3405054211616516
    2. 'c' → logprob: -1.5905053615570068
    3. ' (' → logprob: -2.590505361557007
    4. ' calcul' → logprob: -5.965505599975586
    5. '   ' → logprob: -6.090505599975586
    6. '(c' → logprob: -6.465505599975586
    7. ' l' → logprob: -6.590505599975586
    8. 'l' → logprob: -7.340505599975586
    9. '(' → logprob: -7.590505599975586
    10. '    ' → logprob: -9.215505599975586

Token 299: ''il' (ID: 14683)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.1905255317687988
    2. '       ' → logprob: -1.3155255317687988
    3. '   ' → logprob: -1.5655255317687988
    4. 'c' → logprob: -1.6905255317687988
    5. ' ce' → logprob: -3.940525531768799
    6. '    ' → logprob: -5.815525531768799
    7. '=' → logprob: -5.940525531768799
    8. ' =' → logprob: -6.940525531768799
    9. ' qu' → logprob: -6.940525531768799
    10. ' que' → logprob: -7.065525531768799

Token 300: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22759567201137543
    2. ' =' → logprob: -1.6025956869125366
    3. '*=' → logprob: -6.352595806121826
    4. ' *=' → logprob: -8.602595329284668
    5. ' soit' → logprob: -8.727595329284668
    6. '%=' → logprob: -10.602595329284668
    7. '=
' → logprob: -11.727595329284668
    8. ' ' → logprob: -11.977595329284668
    9. '   ' → logprob: -12.102595329284668
    10. 's' → logprob: -12.227595329284668

Token 301: 'ienne' (ID: 18387)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.1277237832546234
    2. 'in' → logprob: -2.1277236938476562
    3. 'inu' → logprob: -8.377723693847656
    4. 'i' → logprob: -8.627723693847656
    5. 'INUE' → logprob: -9.252723693847656
    6. 'enue' → logprob: -10.127723693847656
    7. 'inye' → logprob: -10.252723693847656
    8. 'n' → logprob: -10.377723693847656
    9. 'inie' → logprob: -10.752723693847656
    10. 'ine' → logprob: -11.252723693847656

Token 302: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9982960820198059
    2. '(c' → logprob: -1.3732960224151611
    3. 'c' → logprob: -1.6232960224151611
    4. ' c' → logprob: -1.7482960224151611
    5. '(' → logprob: -5.24829626083374
    6. '   ' → logprob: -6.74829626083374
    7. ' ' → logprob: -8.123295783996582
    8. 'l' → logprob: -10.248295783996582
    9. '  ' → logprob: -10.623295783996582
    10. '	c' → logprob: -10.748295783996582

Token 303: ' PPC' (ID: 94738)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2443759441375732
    2. 'l' → logprob: -1.7443759441375732
    3. ' p' → logprob: -1.9943759441375732
    4. ' c' → logprob: -2.2443759441375732
    5. ' l' → logprob: -2.6193759441375732
    6. 'pp' → logprob: -2.6193759441375732
    7. 'p' → logprob: -3.1193759441375732
    8. ' (' → logprob: -3.2443759441375732
    9. '(' → logprob: -4.744376182556152
    10. 'P' → logprob: -4.869376182556152

Token 304: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.24096842110157013
    2. 'CM' → logprob: -2.3659684658050537
    3. 'cm' → logprob: -2.9909684658050537
    4. 'm' → logprob: -3.1159684658050537
    5. '   ' → logprob: -3.7409684658050537
    6. 'c' → logprob: -7.615968227386475
    7. ' M' → logprob: -7.990968227386475
    8. ' ' → logprob: -8.240968704223633
    9. '       ' → logprob: -8.365968704223633
    10. 'l' → logprob: -9.240968704223633

Token 305: ' courant' (ID: 74694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01797444559633732
    2. '=' → logprob: -4.267974376678467
    3. '   ' → logprob: -6.142974376678467
    4. ' *' → logprob: -7.142974376678467
    5. ' ' → logprob: -7.642974376678467
    6. ' =
' → logprob: -9.642974853515625
    7. ' c' → logprob: -9.642974853515625
    8. '       ' → logprob: -9.642974853515625
    9. ' *=' → logprob: -9.642974853515625
    10. 'c' → logprob: -10.767974853515625

Token 306: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3680800795555115
    2. '       ' → logprob: -1.6180801391601562
    3. '   ' → logprob: -3.1180801391601562
    4. '=' → logprob: -3.4930801391601562
    5. ' c' → logprob: -3.7430801391601562
    6. '
' → logprob: -5.743080139160156
    7. 'c' → logprob: -6.118080139160156
    8. '	c' → logprob: -6.868080139160156
    9. '    
' → logprob: -7.118080139160156
    10. '=c' → logprob: -7.368080139160156

Token 307: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.128808856010437
    2. '       ' → logprob: -2.2538089752197266
    3. '	c' → logprob: -4.878808975219727
    4. ' c' → logprob: -5.378808975219727
    5. 'c' → logprob: -5.878808975219727
    6. '    
' → logprob: -7.878808975219727
    7. '
' → logprob: -9.128808975219727
    8. '    ' → logprob: -9.378808975219727
    9. ' 
' → logprob: -10.003808975219727
    10. '        
' → logprob: -10.003808975219727

Token 308: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.7657286524772644
    2. '   ' → logprob: -0.7657286524772644
    3. ' c' → logprob: -2.765728712081909
    4. '       ' → logprob: -5.01572847366333
    5. '	c' → logprob: -9.265728950500488
    6. 'import' → logprob: -9.515728950500488
    7. '    ' → logprob: -9.765728950500488
    8. 'from' → logprob: -10.265728950500488
    9. ' ' → logprob: -10.390728950500488
    10. '    
' → logprob: -10.515728950500488

Token 309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6953755617141724
    2. ' =' → logprob: -0.6953755617141724
    3. ' *=' → logprob: -6.695375442504883
    4. '*=' → logprob: -6.945375442504883
    5. ' ' → logprob: -11.445375442504883
    6. ' ' → logprob: -12.070375442504883
    7. '*' → logprob: -12.570375442504883
    8. '	' → logprob: -13.195375442504883
    9. ',' → logprob: -13.320375442504883
    10. '＝' → logprob: -14.320375442504883

Token 310: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6877627372741699
    2. 'c' → logprob: -0.9377627372741699
    3. '(c' → logprob: -2.56276273727417
    4. ' (' → logprob: -3.56276273727417
    5. '   ' → logprob: -8.687763214111328
    6. ' ' → logprob: -9.562763214111328
    7. '(' → logprob: -9.687763214111328
    8. '  ' → logprob: -10.687763214111328
    9. '	c' → logprob: -11.437763214111328
    10. ' ' → logprob: -13.062763214111328

Token 311: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01553121954202652
    2. '*' → logprob: -4.265531063079834
    3. '*c' → logprob: -7.515531063079834
    4. '*a' → logprob: -7.640531063079834
    5. '*l' → logprob: -8.140531539916992
    6. ' ' → logprob: -10.515531539916992
    7. '*b' → logprob: -11.765531539916992
    8. ' ' → logprob: -12.015531539916992
    9. '*k' → logprob: -13.390531539916992
    10. '*i' → logprob: -14.015531539916992

Token 312: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028062984347343445
    2. ' a' → logprob: -5.877806186676025
    3. '(a' → logprob: -14.377806663513184
    4. ' (' → logprob: -14.502806663513184
    5. ' ' → logprob: -15.502806663513184
    6. '   ' → logprob: -16.377805709838867
    7. '  ' → logprob: -16.752805709838867
    8. '	a' → logprob: -17.127805709838867
    9. '(' → logprob: -17.752805709838867
    10. '_a' → logprob: -18.252805709838867

Token 313: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.00023917861108202487
    2. '//' → logprob: -8.375239372253418
    3. ' ' → logprob: -12.375239372253418
    4. ' ' → logprob: -13.000239372253418
    5. '   ' → logprob: -14.000239372253418
    6. ')' → logprob: -14.875239372253418
    7. ' //
' → logprob: -15.500239372253418
    8. ')//' → logprob: -16.0002384185791
    9. '  ' → logprob: -16.3752384185791
    10. ' /' → logprob: -16.8752384185791

Token 314: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0206720617134124e-05
    2. ' gcd' → logprob: -11.75001049041748
    3. '   ' → logprob: -14.25001049041748
    4. 'c' → logprob: -14.25001049041748
    5. 'max' → logprob: -14.87501049041748
    6. '(g' → logprob: -15.00001049041748
    7. 'abs' → logprob: -16.500009536743164
    8. 'math' → logprob: -16.625009536743164
    9. '#g' → logprob: -17.125009536743164
    10. '	g' → logprob: -17.250009536743164

Token 315: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0002953015500679612
    2. '(' → logprob: -8.250295639038086
    3. 'c' → logprob: -10.375295639038086
    4. '(
' → logprob: -13.000295639038086
    5. ' (' → logprob: -15.500295639038086
    6. ')c' → logprob: -15.625295639038086
    7. '(a' → logprob: -16.875295639038086
    8. ',c' → logprob: -17.750295639038086
    9. '(

' → logprob: -17.750295639038086
    10. '	c' → logprob: -17.750295639038086

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004280565306544304
    2. ',a' → logprob: -5.5042805671691895
    3. ',c' → logprob: -9.004280090332031
    4. 'a' → logprob: -9.629280090332031
    5. ' ,' → logprob: -11.629280090332031
    6. ',
' → logprob: -13.004280090332031
    7. 'c' → logprob: -13.379280090332031
    8. ',b' → logprob: -15.379280090332031
    9. ' a' → logprob: -15.879280090332031
    10. ')' → logprob: -16.50428009033203

Token 317: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00017970333283301443
    2. ' a' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.250179290771484
    4. ' ' → logprob: -18.375179290771484
    5. '	a' → logprob: -18.750179290771484
    6. '    ' → logprob: -19.625179290771484
    7. ')' → logprob: -20.125179290771484
    8. ')a' → logprob: -20.625179290771484
    9. '  ' → logprob: -20.750179290771484
    10. '```' → logprob: -21.625179290771484

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4617256056226324e-05
    2. ')
' → logprob: -11.875014305114746
    3. ' )' → logprob: -12.000014305114746
    4. '   ' → logprob: -14.250014305114746
    5. ')c' → logprob: -15.625014305114746
    6. ')#' → logprob: -16.125015258789062
    7. '}' → logprob: -16.625015258789062
    8. ')}' → logprob: -16.875015258789062
    9. '),' → logprob: -17.000015258789062
    10. '))' → logprob: -17.125015258789062

Token 319: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5568742156028748
    2. '<|end|>' → logprob: -1.1818742752075195
    3. '   ' → logprob: -2.5568742752075195
    4. ' )' → logprob: -4.3068742752075195
    5. ' ' → logprob: -4.6818742752075195
    6. '<|end|>' → logprob: -5.5568742752075195
    7. '...' → logprob: -6.1818742752075195
    8. 'import' → logprob: -6.3068742752075195
    9. '.' → logprob: -6.6818742752075195
    10. 'c' → logprob: -6.8068742752075195

Token 322: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13988779485225677
    2. 'c' → logprob: -2.514887809753418
    3. 'a' → logprob: -3.389887809753418
    4. 'import' → logprob: -5.639887809753418
    5. ' )' → logprob: -5.764887809753418
    6. '   ' → logprob: -6.514887809753418
    7. '')' → logprob: -6.639887809753418
    8. ')c' → logprob: -7.014887809753418
    9. '.' → logprob: -7.139887809753418
    10. ',' → logprob: -8.014887809753418

Token 323: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1194722130894661
    2. ' )' → logprob: -2.3694722652435303
    3. '<|end|>' → logprob: -4.119472026824951
    4. ' ' → logprob: -6.619472026824951
    5. '<|end|>' → logprob: -6.869472026824951
    6. ' ' → logprob: -9.99447250366211
    7. ',' → logprob: -10.24447250366211
    8. '#' → logprob: -10.36947250366211
    9. '=' → logprob: -10.36947250366211
    10. ')c' → logprob: -10.61947250366211

Token 324: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22765567898750305
    2. ' a' → logprob: -1.6026556491851807
    3. '<|end|>' → logprob: -6.85265588760376
    4. ' ' → logprob: -7.10265588760376
    5. '<|end|>' → logprob: -10.165155410766602
    6. ')' → logprob: -10.290155410766602
    7. ''a' → logprob: -10.477655410766602
    8. '  ' → logprob: -10.852655410766602
    9. '```' → logprob: -10.852655410766602
    10. ' (' → logprob: -10.977655410766602

Token 325: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18461067974567413
    2. '<|end|>' → logprob: -1.8096107244491577
    3. ' )' → logprob: -5.559610843658447
    4. '<|end|>' → logprob: -7.559610843658447
    5. '}' → logprob: -8.934610366821289
    6. '%' → logprob: -9.059610366821289
    7. ' ' → logprob: -9.684610366821289
    8. ')}' → logprob: -10.684610366821289
    9. '')' → logprob: -10.934610366821289
    10. ' %' → logprob: -11.059610366821289

Token 326: ' multipl' (ID: 44269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029393449425697327
    2. '<|end|>' → logprob: -3.654393434524536
    3. ' )' → logprob: -6.029393672943115
    4. '<|end|>' → logprob: -8.529393196105957
    5. ' ' → logprob: -8.904393196105957
    6. '%' → logprob: -9.154393196105957
    7. '   ' → logprob: -10.154393196105957
    8. '...' → logprob: -11.029393196105957
    9. '}' → logprob: -11.029393196105957
    10. '  ' → logprob: -11.279393196105957

Token 327: 'ie' (ID: 396)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.5211514234542847
    2. 'iqué' → logprob: -1.7711514234542847
    3. 'ique' → logprob: -1.7711514234542847
    4. ')' → logprob: -4.146151542663574
    5. 'ie' → logprob: -4.271151542663574
    6. 'iqu' → logprob: -4.646151542663574
    7. 'icate' → logprob: -4.771151542663574
    8. 'iquer' → logprob: -5.271151542663574
    9. 'icated' → logprob: -6.146151542663574
    10. 'iques' → logprob: -7.021151542663574

Token 328: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6533867120742798
    2. '<|end|>' → logprob: -0.7783867120742798
    3. '<|end|>' → logprob: -4.77838659286499
    4. ',' → logprob: -5.02838659286499
    5. ' )' → logprob: -6.65338659286499
    6. ' ' → logprob: -6.90338659286499
    7. '),' → logprob: -7.90338659286499
    8. '   ' → logprob: -7.90338659286499
    9. ' //' → logprob: -8.028387069702148
    10. '//' → logprob: -8.278387069702148

Token 330: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35025596618652344
    2. ' a' → logprob: -1.2252559661865234
    3. ' ' → logprob: -6.975255966186523
    4. '<|end|>' → logprob: -7.350255966186523
    5. ' the' → logprob: -9.975255966186523
    6. ')' → logprob: -10.350255966186523
    7. ' ' → logprob: -10.600255966186523
    8. ''a' → logprob: -10.975255966186523
    9. ' )' → logprob: -11.225255966186523
    10. 'the' → logprob: -11.475255966186523

Token 331: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3073333501815796
    2. '<|end|>' → logprob: -1.6823333501815796
    3. '   ' → logprob: -3.557333469390869
    4. ' ' → logprob: -4.432333469390869
    5. ',' → logprob: -4.682333469390869
    6. '(c' → logprob: -5.432333469390869
    7. '<|end|>' → logprob: -5.432333469390869
    8. ' )' → logprob: -5.807333469390869
    9. '(' → logprob: -6.057333469390869
    10. '       ' → logprob: -6.307333469390869

Token 332: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07633532583713531
    2. 'c' → logprob: -3.4513354301452637
    3. ' )' → logprob: -4.076335430145264
    4. ' ' → logprob: -5.451335430145264
    5. 'a' → logprob: -6.076335430145264
    6. '<|end|>' → logprob: -6.076335430145264
    7. '  ' → logprob: -6.326335430145264
    8. '))' → logprob: -6.451335430145264
    9. ')c' → logprob: -6.826335430145264
    10. '    ' → logprob: -6.951335430145264

Token 333: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02561567723751068
    2. ' gcd' → logprob: -4.275615692138672
    3. ')' → logprob: -5.150615692138672
    4. 'c' → logprob: -6.525615692138672
    5. '<|end|>' → logprob: -7.400615692138672
    6. ' ' → logprob: -7.650615692138672
    7. '/' → logprob: -7.900615692138672
    8. ''g' → logprob: -8.025615692138672
    9. '/g' → logprob: -8.525615692138672
    10. 'div' → logprob: -8.650615692138672

Token 334: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00021224225929472595
    2. 'c' → logprob: -9.250212669372559
    3. 'dc' → logprob: -10.250212669372559
    4. 'd' → logprob: -10.250212669372559
    5. ')' → logprob: -11.000212669372559
    6. '   ' → logprob: -12.750212669372559
    7. 'def' → logprob: -13.250212669372559
    8. 'cf' → logprob: -13.375212669372559
    9. '#' → logprob: -13.750212669372559
    10. 'div' → logprob: -13.750212669372559

Token 335: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.11447273194789886
    2. '(' → logprob: -2.3644726276397705
    3. ')' → logprob: -4.36447286605835
    4. '<|end|>' → logprob: -6.98947286605835
    5. ')c' → logprob: -8.364472389221191
    6. ')(' → logprob: -8.739472389221191
    7. '(
' → logprob: -9.739472389221191
    8. ' (' → logprob: -11.239472389221191
    9. '<|end|>' → logprob: -11.364472389221191
    10. ',' → logprob: -11.614472389221191

Token 336: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.16481396555900574
    2. '(' → logprob: -2.664813995361328
    3. ')' → logprob: -3.164813995361328
    4. ',' → logprob: -3.289813995361328
    5. ',c' → logprob: -7.164813995361328
    6. '<|end|>' → logprob: -7.414813995361328
    7. ')c' → logprob: -7.539813995361328
    8. '),' → logprob: -7.789813995361328
    9. '(
' → logprob: -8.539813995361328
    10. ')(' → logprob: -8.914813995361328

Token 337: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014342728070914745
    2. 'a' → logprob: -5.264342784881592
    3. ')c' → logprob: -5.514342784881592
    4. ')' → logprob: -5.764342784881592
    5. ' c' → logprob: -7.014342784881592
    6. '(c' → logprob: -7.389342784881592
    7. ',c' → logprob: -8.764342308044434
    8. ',' → logprob: -9.639342308044434
    9. '<|end|>' → logprob: -10.639342308044434
    10. '```' → logprob: -10.764342308044434

Token 338: ')'' (ID: 45517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11545863002538681
    2. '))' → logprob: -2.2404587268829346
    3. ')))' → logprob: -6.4904584884643555
    4. '(c' → logprob: -7.7404584884643555
    5. ')}' → logprob: -8.990458488464355
    6. ' )' → logprob: -9.240458488464355
    7. '),' → logprob: -9.365458488464355
    8. ')c' → logprob: -9.740458488464355
    9. '())' → logprob: -9.990458488464355
    10. '()' → logprob: -10.115458488464355

Token 339: ' donne' (ID: 30004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005025967489928007
    2. '()' → logprob: -6.505025863647461
    3. ' )' → logprob: -6.630025863647461
    4. '())' → logprob: -6.755025863647461
    5. '<|end|>' → logprob: -7.630025863647461
    6. '(' → logprob: -8.880025863647461
    7. ')
' → logprob: -9.755025863647461
    8. '   ' → logprob: -10.005025863647461
    9. ',' → logprob: -10.005025863647461
    10. '),' → logprob: -10.130025863647461

Token 340: ' leur' (ID: 9853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03898059204220772
    2. 'g' → logprob: -3.538980484008789
    3. 'the' → logprob: -5.413980484008789
    4. 'c' → logprob: -6.663980484008789
    5. ')c' → logprob: -6.913980484008789
    6. ' the' → logprob: -7.038980484008789
    7. ' gcd' → logprob: -7.038980484008789
    8. 'their' → logprob: -9.163980484008789
    9. ' their' → logprob: -9.163980484008789
    10. ' )' → logprob: -9.413980484008789

Token 341: ' PG' (ID: 44249)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07943011820316315
    2. 'g' → logprob: -2.829430103302002
    3. '),' → logprob: -5.329430103302002
    4. ' )' → logprob: -5.329430103302002
    5. ' gcd' → logprob: -5.829430103302002
    6. '<|end|>' → logprob: -7.329430103302002
    7. '_g' → logprob: -7.454430103302002
    8. ''' → logprob: -7.704430103302002
    9. ' ' → logprob: -7.829430103302002
    10. 'space' → logprob: -8.07943058013916

Token 342: 'CD' (ID: 8257)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.009691988117992878
    2. 'c' → logprob: -4.759692192077637
    3. ')' → logprob: -7.884692192077637
    4. 'd' → logprob: -8.134692192077637
    5. '```' → logprob: -8.759692192077637
    6. '_cd' → logprob: -10.384692192077637
    7. '<|end|>' → logprob: -10.384692192077637
    8. 'dc' → logprob: -10.759692192077637
    9. '_c' → logprob: -10.759692192077637
    10. '),' → logprob: -11.259692192077637

Token 343: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3159199655056
    2. '   ' → logprob: -1.3159199953079224
    3. ' for' → logprob: -5.940919876098633
    4. '    
' → logprob: -11.440919876098633
    5. '	for' → logprob: -12.065919876098633
    6. 'b' → logprob: -12.815919876098633
    7. ' ' → logprob: -13.815919876098633
    8. '```' → logprob: -13.940919876098633
    9. '       ' → logprob: -14.190919876098633
    10. '
' → logprob: -14.690919876098633

Token 346: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012843352742493153
    2. '   ' → logprob: -4.387843132019043
    3. ' for' → logprob: -8.012843132019043
    4. '	for' → logprob: -14.262843132019043
    5. '    
' → logprob: -14.387843132019043
    6. ' ' → logprob: -14.762843132019043
    7. '#' → logprob: -15.387843132019043
    8. '       ' → logprob: -15.887843132019043
    9. '  ' → logprob: -16.26284408569336
    10. '```' → logprob: -16.51284408569336

Token 347: ' ram' (ID: 20920)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0399465411901474
    2. ' for' → logprob: -3.2899465560913086
    3. '   ' → logprob: -6.289946556091309
    4. '#' → logprob: -11.539946556091309
    5. '=' → logprob: -11.664946556091309
    6. ':' → logprob: -12.789946556091309
    7. 'in' → logprob: -12.789946556091309
    8. ' =' → logprob: -12.789946556091309
    9. 'def' → logprob: -13.039946556091309
    10. 'A' → logprob: -13.602446556091309

Token 348: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.010968825779855251
    2. 'pl' → logprob: -5.8859686851501465
    3. 'p' → logprob: -6.1359686851501465
    4. 'm' → logprob: -6.3859686851501465
    5. 'è' → logprob: -6.7609686851501465
    6. 'b' → logprob: -6.7609686851501465
    7. 'ene' → logprob: -7.1359686851501465
    8. 'place' → logprob: -7.6359686851501465
    9. 'plit' → logprob: -8.635969161987305
    10. 'ple' → logprob: -8.760969161987305

Token 349: ' la' (ID: 557)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47804906964302063
    2. 'c' → logprob: -0.9780490398406982
    3. ' ' → logprob: -7.353049278259277
    4. 'b' → logprob: -7.978049278259277
    5. ' la' → logprob: -8.103049278259277
    6. ' le' → logprob: -8.103049278259277
    7. 'mod' → logprob: -8.103049278259277
    8. '   ' → logprob: -8.353049278259277
    9. 'le' → logprob: -8.603049278259277
    10. ' (' → logprob: -8.603049278259277

Token 350: ' valeur' (ID: 41664)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.055444419384002686
    2. 'c' → logprob: -2.9304444789886475
    3. ' for' → logprob: -7.805444240570068
    4. 'b' → logprob: -9.680444717407227
    5. '   ' → logprob: -10.305444717407227
    6. 'mod' → logprob: -11.305444717407227
    7. 'def' → logprob: -11.930444717407227
    8. '#' → logprob: -12.180444717407227
    9. '```' → logprob: -12.555444717407227
    10. ' c' → logprob: -12.805444717407227

Token 351: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43889495730400085
    2. ' c' → logprob: -1.1888949871063232
    3. '(' → logprob: -3.9388949871063232
    4. '(c' → logprob: -4.563894748687744
    5. ' (' → logprob: -5.313894748687744
    6. ' of' → logprob: -5.438894748687744
    7. '   ' → logprob: -6.063894748687744
    8. 'mod' → logprob: -6.188894748687744
    9. ' =' → logprob: -6.688894748687744
    10. '%' → logprob: -6.813894748687744

Token 352: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0026254775002598763
    2. 'b' → logprob: -6.377625465393066
    3. ' c' → logprob: -7.002625465393066
    4. ' b' → logprob: -12.627625465393066
    5. 'mod' → logprob: -12.752625465393066
    6. 'a' → logprob: -13.252625465393066
    7. '`' → logprob: -13.502625465393066
    8. '```' → logprob: -13.627625465393066
    9. '   ' → logprob: -14.877625465393066
    10. 'la' → logprob: -15.002625465393066

Token 353: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004037402104586363
    2. ' c' → logprob: -7.875403881072998
    3. 'b' → logprob: -11.25040340423584
    4. '   ' → logprob: -11.62540340423584
    5. ' ' → logprob: -15.00040340423584
    6. '	c' → logprob: -15.00040340423584
    7. '(c' → logprob: -15.87540340423584
    8. '```' → logprob: -15.87540340423584
    9. '`' → logprob: -16.125404357910156
    10. 'mod' → logprob: -16.375404357910156

Token 354: ''' (ID: 6)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.06322359293699265
    2. '%=' → logprob: -3.4382236003875732
    3. ' =' → logprob: -3.9382236003875732
    4. '=' → logprob: -4.813223361968994
    5. ' ' → logprob: -7.063223361968994
    6. '%' → logprob: -8.313223838806152
    7. ' %' → logprob: -9.063223838806152
    8. 'c' → logprob: -9.438223838806152
    9. 'mod' → logprob: -9.938223838806152
    10. ' ' → logprob: -10.313223838806152

Token 355: ' dans' (ID: 2671)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.6371726393699646
    2. ' %=' → logprob: -0.8871726393699646
    3. '=' → logprob: -2.8871726989746094
    4. ' =' → logprob: -5.637172698974609
    5. '%' → logprob: -10.01217269897461
    6. '=c' → logprob: -10.26217269897461
    7. '%c' → logprob: -11.26217269897461
    8. 'c' → logprob: -13.01217269897461
    9. ' ' → logprob: -13.88717269897461
    10. ' ' → logprob: -14.13717269897461

Token 356: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6106054782867432
    2. ' c' → logprob: -0.9856054782867432
    3. '%' → logprob: -3.360605478286743
    4. '%c' → logprob: -3.485605478286743
    5. 'mod' → logprob: -5.235605239868164
    6. ' %' → logprob: -5.985605239868164
    7. ' modulo' → logprob: -6.110605239868164
    8. ' range' → logprob: -6.485605239868164
    9. ' mod' → logprob: -6.735605239868164
    10. 'range' → logprob: -6.735605239868164

Token 357: ' plage' (ID: 78241)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1584024429321289
    2. 'c' → logprob: -2.158402442932129
    3. '%' → logprob: -4.033402442932129
    4. ' modulo' → logprob: -5.408402442932129
    5. 'range' → logprob: -6.408402442932129
    6. '```' → logprob: -6.533402442932129
    7. 'code' → logprob: -6.783402442932129
    8. 'b' → logprob: -6.908402442932129
    9. '%c' → logprob: -7.033402442932129
    10. ' code' → logprob: -7.408402442932129

Token 358: ' [' (ID: 723)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.4751720428466797
    2. ' des' → logprob: -1.7251720428466797
    3. '[' → logprob: -1.8501720428466797
    4. 'mod' → logprob: -2.1001720428466797
    5. ' de' → logprob: -2.8501720428466797
    6. '(' → logprob: -3.1001720428466797
    7. 'c' → logprob: -3.2251720428466797
    8. '   ' → logprob: -3.3501720428466797
    9. ' du' → logprob: -3.4751720428466797
    10. ' modulo' → logprob: -3.8501720428466797

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045177821069955826
    2. 'mod' → logprob: -3.170177936553955
    3. ' ' → logprob: -7.045177936553955
    4. ' mod' → logprob: -7.795177936553955
    5. '(' → logprob: -8.295177459716797
    6. '1' → logprob: -8.545177459716797
    7. ')' → logprob: -9.045177459716797
    8. ']' → logprob: -9.420177459716797
    9. '(mod' → logprob: -9.420177459716797
    10. '```' → logprob: -9.795177459716797

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002354832977289334
    2. ',
' → logprob: -9.125235557556152
    3. ' ,' → logprob: -9.500235557556152
    4. 'mod' → logprob: -10.875235557556152
    5. ')' → logprob: -11.250235557556152
    6. ']' → logprob: -12.125235557556152
    7. '%' → logprob: -12.250235557556152
    8. '```' → logprob: -12.875235557556152
    9. ' mod' → logprob: -13.375235557556152
    10. ' ' → logprob: -14.000235557556152

Token 361: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16022585332393646
    2. ' mod' → logprob: -1.9102258682250977
    3. ' ' → logprob: -14.410225868225098
    4. ' modulo' → logprob: -14.410225868225098
    5. '(mod' → logprob: -15.285225868225098
    6. '	mod' → logprob: -16.16022491455078
    7. '```' → logprob: -17.03522491455078
    8. '10' → logprob: -17.16022491455078
    9. '   ' → logprob: -17.16022491455078
    10. ' modulus' → logprob: -17.16022491455078

Token 362: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05490553379058838
    2. ']' → logprob: -3.179905414581299
    3. ' )' → logprob: -4.554905414581299
    4. ' ]' → logprob: -7.054905414581299
    5. '])' → logprob: -8.804905891418457
    6. ')]' → logprob: -9.179905891418457
    7. ' ' → logprob: -9.804905891418457
    8. '%' → logprob: -10.304905891418457
    9. ')%' → logprob: -10.554905891418457
    10. '-' → logprob: -11.179905891418457

Token 363: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06306400150060654
    2. 'c' → logprob: -2.8130640983581543
    3. ' 
' → logprob: -7.813064098358154
    4. ' mod' → logprob: -8.188063621520996
    5. 'mod' → logprob: -8.813063621520996
    6. '	c' → logprob: -9.438063621520996
    7. '   ' → logprob: -9.938063621520996
    8. '%c' → logprob: -10.063063621520996
    9. '    
' → logprob: -10.688063621520996
    10. ' ' → logprob: -11.313063621520996

Token 364: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0390099436044693
    2. '%=' → logprob: -3.6640100479125977
    3. ' =' → logprob: -4.664010047912598
    4. '%' → logprob: -6.539010047912598
    5. ' %=' → logprob: -6.789010047912598
    6. '=c' → logprob: -7.414010047912598
    7. '   ' → logprob: -11.539010047912598
    8. 'c' → logprob: -11.664010047912598
    9. '=%' → logprob: -13.539010047912598
    10. '  ' → logprob: -14.164010047912598

Token 365: '-à' (ID: 56297)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.18219301104545593
    2. 'c' → logprob: -2.4321930408477783
    3. ' mod' → logprob: -3.0571930408477783
    4. ' modulo' → logprob: -4.182192802429199
    5. '   ' → logprob: -5.682192802429199
    6. '%' → logprob: -5.682192802429199
    7. 'mod' → logprob: -5.807192802429199
    8. ' not' → logprob: -6.557192802429199
    9. '%c' → logprob: -6.682192802429199
    10. '```' → logprob: -6.932192802429199

Token 366: '-dire' (ID: 76064)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.024054868146777153
    2. ' c' → logprob: -4.399055004119873
    3. 'mod' → logprob: -5.649055004119873
    4. '-à' → logprob: -6.274055004119873
    5. '   ' → logprob: -6.399055004119873
    6. '0' → logprob: -6.649055004119873
    7. 'b' → logprob: -6.774055004119873
    8. 'a' → logprob: -7.399055004119873
    9. 'à' → logprob: -7.774055004119873
    10. 'abs' → logprob: -9.274054527282715

Token 367: ' qu' (ID: 474)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4905438721179962
    2. 'c' → logprob: -0.9905438423156738
    3. '%c' → logprob: -4.240543842315674
    4. '   ' → logprob: -6.490543842315674
    5. '%' → logprob: -8.740544319152832
    6. ' %' → logprob: -9.115544319152832
    7. '
' → logprob: -10.615544319152832
    8. 'mod' → logprob: -10.865544319152832
    9. '	c' → logprob: -10.990544319152832
    10. ' modulo' → logprob: -11.115544319152832

Token 368: ''on' (ID: 25812)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3747454583644867
    2. 'c' → logprob: -1.374745488166809
    3. '   ' → logprob: -3.6247453689575195
    4. ' =' → logprob: -4.7497453689575195
    5. ')' → logprob: -5.6247453689575195
    6. 'e' → logprob: -5.7497453689575195
    7. ',' → logprob: -5.9997453689575195
    8. '%' → logprob: -6.1247453689575195
    9. ' modulo' → logprob: -6.1247453689575195
    10. ' ' → logprob: -6.3747453689575195

Token 369: ' fait' (ID: 7473)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.2891809046268463
    2. ' %=' → logprob: -1.539180874824524
    3. 'c' → logprob: -3.9141809940338135
    4. '=' → logprob: -4.539180755615234
    5. '%' → logprob: -5.539180755615234
    6. '%c' → logprob: -7.289180755615234
    7. ' =' → logprob: -7.539180755615234
    8. ' c' → logprob: -7.664180755615234
    9. ')' → logprob: -9.164180755615234
    10. '=c' → logprob: -9.539180755615234

Token 370: ' le' (ID: 505)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0431838184595108
    2. 'c' → logprob: -3.1681838035583496
    3. '%c' → logprob: -8.918184280395508
    4. '   ' → logprob: -10.918184280395508
    5. '	c' → logprob: -11.668184280395508
    6. ' ' → logprob: -11.918184280395508
    7. ' modulo' → logprob: -12.168184280395508
    8. 'mod' → logprob: -12.418184280395508
    9. ' ' → logprob: -13.043184280395508
    10. '%' → logprob: -13.418184280395508

Token 371: ' modulo' (ID: 112372)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15834271907806396
    2. '%c' → logprob: -2.1583428382873535
    3. '%' → logprob: -4.2833428382873535
    4. ' c' → logprob: -4.7833428382873535
    5. 'mod' → logprob: -5.2833428382873535
    6. '%=' → logprob: -6.1583428382873535
    7. ' modulo' → logprob: -7.0333428382873535
    8. ' %=' → logprob: -7.9083428382873535
    9. ' %' → logprob: -8.533342361450195
    10. ' modulus' → logprob: -10.408342361450195

Token 372: ' mod' (ID: 1812)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20149382948875427
    2. '%c' → logprob: -2.701493740081787
    3. ' c' → logprob: -2.826493740081787
    4. ' %' → logprob: -3.826493740081787
    5. '%' → logprob: -3.951493740081787
    6. ' %=' → logprob: -4.576493740081787
    7. '(c' → logprob: -6.201493740081787
    8. '_c' → logprob: -7.201493740081787
    9. '(' → logprob: -7.701493740081787
    10. ' (%)' → logprob: -8.201494216918945

Token 373: '
' (ID: 198)
  Prédit: '%c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%c' → logprob: -1.0263340473175049
    2. '%' → logprob: -1.2763340473175049
    3. 'c' → logprob: -1.5263340473175049
    4. ' %=' → logprob: -2.401334047317505
    5. '%=' → logprob: -3.901334047317505
    6. ' %' → logprob: -4.026333808898926
    7. '=' → logprob: -5.151333808898926
    8. ' =' → logprob: -5.526333808898926
    9. '   ' → logprob: -5.651333808898926
    10. ' c' → logprob: -6.526333808898926

Token 374: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05182427167892456
    2. '   ' → logprob: -3.4268243312835693
    3. ' c' → logprob: -4.92682409286499
    4. ' =' → logprob: -5.05182409286499
    5. '%c' → logprob: -6.17682409286499
    6. ' %=' → logprob: -6.67682409286499
    7. '	c' → logprob: -7.55182409286499
    8. '=' → logprob: -8.176824569702148
    9. '%' → logprob: -9.801824569702148
    10. '=c' → logprob: -10.176824569702148

Token 375: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.027842748910188675
    2. '   ' → logprob: -4.0278425216674805
    3. ' c' → logprob: -4.6528425216674805
    4. '	c' → logprob: -9.65284252166748
    5. '    
' → logprob: -10.77784252166748
    6. '
' → logprob: -11.27784252166748
    7. ' 
' → logprob: -12.02784252166748
    8. '```' → logprob: -12.90284252166748
    9. '`' → logprob: -13.65284252166748
    10. '  
' → logprob: -14.15284252166748

Token 376: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.3145615756511688
    2. '=' → logprob: -1.8145616054534912
    3. ' %=' → logprob: -2.314561605453491
    4. '%' → logprob: -4.939561367034912
    5. ' =' → logprob: -6.939561367034912
    6. '%c' → logprob: -10.81456184387207
    7. '=c' → logprob: -11.43956184387207
    8. ' %' → logprob: -11.93956184387207
    9. ' ' → logprob: -12.68956184387207
    10. '=%' → logprob: -13.93956184387207

Token 377: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0067161982879042625
    2. ' mod' → logprob: -5.006716251373291
    3. '(mod' → logprob: -14.256715774536133
    4. '10' → logprob: -16.506715774536133
    5. '	mod' → logprob: -18.756715774536133
    6. ' ' → logprob: -20.506715774536133
    7. ' мод' → logprob: -20.631715774536133
    8. '_mod' → logprob: -21.506715774536133
    9. 'MOD' → logprob: -22.131715774536133
    10. '100' → logprob: -22.881715774536133

Token 378: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20322109758853912
    2. '<|end|>' → logprob: -2.328221082687378
    3. '   ' → logprob: -3.203221082687378
    4. '  
' → logprob: -4.078221321105957
    5. ' 
' → logprob: -4.453221321105957
    6. '    
' → logprob: -5.453221321105957
    7. '\n' → logprob: -5.703221321105957
    8. 'for' → logprob: -5.953221321105957
    9. '<|end|>' → logprob: -5.953221321105957
    10. ' for' → logprob: -6.453221321105957

Token 379: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038368381559848785
    2. '   ' → logprob: -3.2883684635162354
    3. ' for' → logprob: -8.038368225097656
    4. '	for' → logprob: -13.288368225097656
    5. '    
' → logprob: -13.413368225097656
    6. '
' → logprob: -15.163368225097656
    7. '```' → logprob: -15.288368225097656
    8. '<|end|>' → logprob: -16.163368225097656
    9. 'b' → logprob: -16.413368225097656
    10. 'For' → logprob: -17.413368225097656

Token 380: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025314295198768377
    2. '   ' → logprob: -6.1275315284729
    3. ' for' → logprob: -8.002531051635742
    4. '    
' → logprob: -12.377531051635742
    5. 'b' → logprob: -13.127531051635742
    6. '	for' → logprob: -13.252531051635742
    7. ' ' → logprob: -13.877531051635742
    8. '```' → logprob: -14.502531051635742
    9. '.' → logprob: -14.752531051635742
    10. '+' → logprob: -15.127531051635742

Token 381: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.153795766294934e-06
    2. ' for' → logprob: -12.125005722045898
    3. '   ' → logprob: -14.500005722045898
    4. 'b' → logprob: -16.1250057220459
    5. '    
' → logprob: -18.7500057220459
    6. 'c' → logprob: -18.8750057220459
    7. '
' → logprob: -19.1250057220459
    8. '#' → logprob: -19.3750057220459
    9. '	for' → logprob: -19.8750057220459
    10. '```' → logprob: -19.8750057220459

Token 382: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03383495286107063
    2. ' for' → logprob: -3.408834934234619
    3. ' boucle' → logprob: -9.533835411071777
    4. 'space' → logprob: -10.533835411071777
    5. ' ' → logprob: -10.908835411071777
    6. '#' → logprob: -11.033835411071777
    7. ':' → logprob: -11.783835411071777
    8. 's' → logprob: -11.783835411071777
    9. ' #' → logprob: -12.033835411071777
    10. ' loop' → logprob: -12.158835411071777

Token 383: ' parc' (ID: 22138)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31330248713493347
    2. 'for' → logprob: -1.3133025169372559
    3. '   ' → logprob: -10.563302040100098
    4. ':' → logprob: -11.438302040100098
    5. '	for' → logprob: -13.688302040100098
    6. ' ' → logprob: -14.313302040100098
    7. '<|end|>' → logprob: -14.563302040100098
    8. ' ' → logprob: -14.938302040100098
    9. '_for' → logprob: -15.063302040100098
    10. ',' → logprob: -15.313302040100098

Token 384: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.0018997211009263992
    2. 'ours' → logprob: -6.501899719238281
    3. 'oure' → logprob: -8.376899719238281
    4. 'our' → logprob: -9.376899719238281
    5. 'ourse' → logprob: -10.376899719238281
    6. 'orre' → logprob: -10.376899719238281
    7. 'or' → logprob: -11.751899719238281
    8. 'c' → logprob: -12.876899719238281
    9. '#' → logprob: -13.126899719238281
    10. '   ' → logprob: -13.501899719238281

Token 385: ' à' (ID: 1221)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.46593430638313293
    2. 'A' → logprob: -1.5909342765808105
    3. ' a' → logprob: -2.2159342765808105
    4. 'a' → logprob: -3.2159342765808105
    5. ' for' → logprob: -4.7159342765808105
    6. 'for' → logprob: -5.8409342765808105
    7. ' ' → logprob: -6.0909342765808105
    8. ' b' → logprob: -6.8409342765808105
    9. ' each' → logprob: -6.9659342765808105
    10. '(A' → logprob: -7.0909342765808105

Token 386: ' nouveau' (ID: 23184)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06974723190069199
    2. 'range' → logprob: -3.06974720954895
    3. ' range' → logprob: -4.319747447967529
    4. ' A' → logprob: -5.194747447967529
    5. 'la' → logprob: -7.444747447967529
    6. ' la' → logprob: -7.944747447967529
    7. ' nouveau' → logprob: -7.944747447967529
    8. ' chaque' → logprob: -8.694746971130371
    9. 'for' → logprob: -8.944746971130371
    10. 'c' → logprob: -9.194746971130371

Token 387: ' chaque' (ID: 21194)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.39926445484161377
    2. 'A' → logprob: -1.1492644548416138
    3. ' for' → logprob: -5.149264335632324
    4. 'for' → logprob: -6.149264335632324
    5. 'a' → logprob: -6.274264335632324
    6. ' a' → logprob: -6.399264335632324
    7. ' ' → logprob: -8.024264335632324
    8. '   ' → logprob: -8.149264335632324
    9. '(A' → logprob: -9.649264335632324
    10. 's' → logprob: -10.649264335632324

Token 388: ' élément' (ID: 99627)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5233539938926697
    2. 'a' → logprob: -0.8983539938926697
    3. ' element' → logprob: -9.398353576660156
    4. ' ' → logprob: -9.898353576660156
    5. 'element' → logprob: -10.398353576660156
    6. ' élément' → logprob: -11.023353576660156
    7. '   ' → logprob: -11.148353576660156
    8. 'A' → logprob: -11.523353576660156
    9. ' A' → logprob: -12.148353576660156
    10. '_a' → logprob: -12.773353576660156

Token 389: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2242943048477173
    2. 'a' → logprob: -1.4742943048477173
    3. '   ' → logprob: -1.9742943048477173
    4. ' de' → logprob: -2.3492941856384277
    5. 's' → logprob: -3.4742941856384277
    6. 'A' → logprob: -3.4742941856384277
    7. ' in' → logprob: -3.7242941856384277
    8. ' ' → logprob: -3.8492941856384277
    9. ' A' → logprob: -3.8492941856384277
    10. '_' → logprob: -3.9742941856384277

Token 390: 'a' (ID: 64)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06997489184141159
    2. ' A' → logprob: -2.694974899291992
    3. 'a' → logprob: -10.694974899291992
    4. '   ' → logprob: -11.819974899291992
    5. ' ' → logprob: -12.569974899291992
    6. ' a' → logprob: -13.194974899291992
    7. 'b' → logprob: -14.569974899291992
    8. ')' → logprob: -15.069974899291992
    9. '  ' → logprob: -15.194974899291992
    10. ' in' → logprob: -15.319974899291992

Token 391: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03847357630729675
    2. 'in' → logprob: -3.413473606109619
    3. '<|end|>' → logprob: -6.288473606109619
    4. '   ' → logprob: -7.288473606109619
    5. ':' → logprob: -7.788473606109619
    6. ')' → logprob: -7.788473606109619
    7. ' dans' → logprob: -8.663473129272461
    8. 'a' → logprob: -8.788473129272461
    9. ' ' → logprob: -8.788473129272461
    10. 's' → logprob: -9.038473129272461

Token 392: ' pour' (ID: 1930)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19958598911762238
    2. 'in' → logprob: -1.824586033821106
    3. ':' → logprob: -4.199585914611816
    4. '   ' → logprob: -6.074585914611816
    5. ' dans' → logprob: -7.824585914611816
    6. ' :' → logprob: -8.449585914611816
    7. ' de' → logprob: -8.449585914611816
    8. ' en' → logprob: -8.574585914611816
    9. '<|end|>' → logprob: -8.574585914611816
    10. 'A' → logprob: -8.699585914611816

Token 393: ' calcul' (ID: 7559)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17570273578166962
    2. ' b' → logprob: -1.925702691078186
    3. 'a' → logprob: -5.3007025718688965
    4. ':' → logprob: -5.3007025718688965
    5. '   ' → logprob: -5.5507025718688965
    6. ' a' → logprob: -7.4257025718688965
    7. 'c' → logprob: -8.300703048706055
    8. 'for' → logprob: -8.675703048706055
    9. ':
' → logprob: -9.175703048706055
    10. ' ' → logprob: -9.175703048706055

Token 394: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004113542847335339
    2. 'ate' → logprob: -5.504113674163818
    3. 'ater' → logprob: -10.37911319732666
    4. '#' → logprob: -13.75411319732666
    5. 'ter' → logprob: -13.75411319732666
    6. 'e' → logprob: -13.87911319732666
    7. 'r' → logprob: -15.37911319732666
    8. 'rer' → logprob: -16.004114151000977
    9. 'ateur' → logprob: -16.379114151000977
    10. '   ' → logprob: -16.504114151000977

Token 395: ' et' (ID: 859)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6146485209465027
    2. ' b' → logprob: -1.1146485805511475
    3. ' (' → logprob: -2.3646485805511475
    4. '   ' → logprob: -3.8646485805511475
    5. '(' → logprob: -5.114648342132568
    6. '(b' → logprob: -5.364648342132568
    7. 'c' → logprob: -6.489648342132568
    8. ' c' → logprob: -6.864648342132568
    9. '(
' → logprob: -7.239648342132568
    10. 'a' → logprob: -7.364648342132568

Token 396: ' ajouter' (ID: 78457)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.680279016494751
    2. 'b' → logprob: -0.805279016494751
    3. '(' → logprob: -3.680279016494751
    4. ' (' → logprob: -5.055278778076172
    5. 'a' → logprob: -5.680278778076172
    6. 's' → logprob: -5.930278778076172
    7. '   ' → logprob: -6.305278778076172
    8. 'c' → logprob: -6.430278778076172
    9. '(
' → logprob: -6.805278778076172
    10. ' c' → logprob: -6.930278778076172

Token 397: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07801777869462967
    2. '(a' → logprob: -3.5780177116394043
    3. '(b' → logprob: -3.8280177116394043
    4. '(c' → logprob: -4.578017711639404
    5. 'b' → logprob: -5.078017711639404
    6. ' b' → logprob: -5.078017711639404
    7. '(' → logprob: -6.953017711639404
    8. ' c' → logprob: -7.578017711639404
    9. '   ' → logprob: -7.828017711639404
    10. 'c' → logprob: -8.078018188476562

Token 398: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47501668334007263
    2. ' b' → logprob: -0.975016713142395
    3. ' (' → logprob: -7.7250165939331055
    4. '(b' → logprob: -7.7250165939331055
    5. '(' → logprob: -10.350016593933105
    6. 'c' → logprob: -11.725016593933105
    7. '(
' → logprob: -12.100016593933105
    8. '   ' → logprob: -12.350016593933105
    9. ' c' → logprob: -12.850016593933105
    10. ' ' → logprob: -14.225016593933105

Token 399: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06222143396735191
    2. ' b' → logprob: -2.8122215270996094
    3. 'c' → logprob: -8.81222152709961
    4. 'a' → logprob: -9.81222152709961
    5. ' c' → logprob: -10.93722152709961
    6. '   ' → logprob: -11.18722152709961
    7. ' ' → logprob: -11.56222152709961
    8. '```' → logprob: -13.18722152709961
    9. '(b' → logprob: -13.56222152709961
    10. '	b' → logprob: -13.68722152709961

Token 400: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19021502137184143
    2. ' =' → logprob: -2.9402151107788086
    3. ')' → logprob: -4.065215110778809
    4. ' la' → logprob: -4.690215110778809
    5. ' le' → logprob: -4.690215110778809
    6. ' (' → logprob: -4.690215110778809
    7. ' the' → logprob: -4.815215110778809
    8. '=' → logprob: -4.815215110778809
    9. 'a' → logprob: -4.940215110778809
    10. ' c' → logprob: -4.940215110778809

Token 401: ' la' (ID: 557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013220702297985554
    2. '   ' → logprob: -4.88822078704834
    3. ' :' → logprob: -6.38822078704834
    4. 'b' → logprob: -6.51322078704834
    5. ' b' → logprob: -6.88822078704834
    6. ':
' → logprob: -7.13822078704834
    7. 'a' → logprob: -8.26322078704834
    8. ' a' → logprob: -8.88822078704834
    9. 'for' → logprob: -10.01322078704834
    10. ':b' → logprob: -10.13822078704834

Token 402: ' quantité' (ID: 89219)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1126967668533325
    2. '(a' → logprob: -1.2376967668533325
    3. '(' → logprob: -1.9876967668533325
    4. 'a' → logprob: -2.112696647644043
    5. 'b' → logprob: -2.987696647644043
    6. 'for' → logprob: -3.487696647644043
    7. ' for' → logprob: -4.612696647644043
    8. '(b' → logprob: -4.862696647644043
    9. ' b' → logprob: -5.237696647644043
    10. ' a' → logprob: -5.487696647644043

Token 403: ' demand' (ID: 8492)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.44580647349357605
    2. '(' → logprob: -1.5708065032958984
    3. '   ' → logprob: -2.5708065032958984
    4. '(c' → logprob: -3.8208065032958984
    5. ' +=' → logprob: -4.570806503295898
    6. '((' → logprob: -4.945806503295898
    7. ' c' → logprob: -5.070806503295898
    8. ' ((' → logprob: -5.320806503295898
    9. '(a' → logprob: -5.570806503295898
    10. '    ' → logprob: -5.695806503295898

Token 404: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.370204359292984
    2. 'a' → logprob: -2.370204448699951
    3. 'e' → logprob: -2.370204448699951
    4. '       ' → logprob: -3.120204448699951
    5. ' a' → logprob: -3.245204448699951
    6. ' for' → logprob: -3.995204448699951
    7. 'for' → logprob: -5.245204448699951
    8. '=' → logprob: -5.370204448699951
    9. ' ' → logprob: -6.120204448699951
    10. '  ' → logprob: -6.620204448699951

Token 405: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35122695565223694
    2. ':' → logprob: -2.101227045059204
    3. 'for' → logprob: -2.476227045059204
    4. ' for' → logprob: -2.476227045059204
    5. ':
' → logprob: -5.476226806640625
    6. '    
' → logprob: -7.851226806640625
    7. '
' → logprob: -8.226226806640625
    8. 'b' → logprob: -9.226226806640625
    9. '  
' → logprob: -9.226226806640625
    10. '	for' → logprob: -9.351226806640625

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07984371483325958
    2. 'for' → logprob: -3.079843759536743
    3. ' for' → logprob: -3.579843759536743
    4. ':' → logprob: -6.079843521118164
    5. '```' → logprob: -8.329843521118164
    6. '    
' → logprob: -9.204843521118164
    7. 'b' → logprob: -9.454843521118164
    8. 'a' → logprob: -10.329843521118164
    9. '<|end|>' → logprob: -10.454843521118164
    10. '       ' → logprob: -10.579843521118164

Token 407: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001548545085825026
    2. ' for' → logprob: -6.501548767089844
    3. '   ' → logprob: -10.001548767089844
    4. 'b' → logprob: -14.126548767089844
    5. '	for' → logprob: -16.251548767089844
    6. '```' → logprob: -16.626548767089844
    7. ' ' → logprob: -18.751548767089844
    8. '    
' → logprob: -19.626548767089844
    9. ' b' → logprob: -20.876548767089844
    10. '       ' → logprob: -21.001548767089844

Token 408: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31326964497566223
    2. 'a' → logprob: -1.3132696151733398
    3. '_a' → logprob: -12.56326961517334
    4. '	a' → logprob: -13.18826961517334
    5. ' ' → logprob: -13.81326961517334
    6. ' ' → logprob: -14.56326961517334
    7. '   ' → logprob: -14.68826961517334
    8. '_' → logprob: -16.313270568847656
    9. ''a' → logprob: -16.563270568847656
    10. 'A' → logprob: -16.875770568847656

Token 409: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06283710896968842
    2. 'in' → logprob: -2.8128371238708496
    3. ':' → logprob: -7.56283712387085
    4. ' :' → logprob: -8.812836647033691
    5. ' ' → logprob: -9.187836647033691
    6. 's' → logprob: -10.312836647033691
    7. '  ' → logprob: -10.687836647033691
    8. ',' → logprob: -12.187836647033691
    9. '   ' → logprob: -12.312836647033691
    10. ' ' → logprob: -12.312836647033691

Token 410: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017025562701746821
    2. ' A' → logprob: -6.376702785491943
    3. '   ' → logprob: -16.0017032623291
    4. ' ' → logprob: -16.1267032623291
    5. '	A' → logprob: -16.8767032623291
    6. '[A' → logprob: -17.6267032623291
    7. '=A' → logprob: -17.7517032623291
    8. '(A' → logprob: -18.2517032623291
    9. '>A' → logprob: -18.3767032623291
    10. '[' → logprob: -18.3767032623291

Token 411: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03564896434545517
    2. ':
' → logprob: -3.410649061203003
    3. '       ' → logprob: -6.410648822784424
    4. '   ' → logprob: -8.035649299621582
    5. '[' → logprob: -11.035649299621582
    6. ' :' → logprob: -12.285649299621582
    7. '=' → logprob: -13.035649299621582
    8. ',' → logprob: -13.160649299621582
    9. ' :
' → logprob: -13.410649299621582
    10. '):
' → logprob: -13.535649299621582

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002060436672763899
    2. '   ' → logprob: -9.000205993652344
    3. 'b' → logprob: -10.125205993652344
    4. ' b' → logprob: -10.250205993652344
    5. '<|end|>' → logprob: -13.250205993652344
    6. '```' → logprob: -13.375205993652344
    7. ',' → logprob: -14.000205993652344
    8. '      ' → logprob: -14.750205993652344
    9. '           ' → logprob: -14.750205993652344
    10. '[' → logprob: -14.875205993652344

Token 413: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31560033559799194
    2. '   ' → logprob: -1.8156003952026367
    3. ' b' → logprob: -2.3156003952026367
    4. '       ' → logprob: -4.690600395202637
    5. '    ' → logprob: -11.565600395202637
    6. '	b' → logprob: -11.940600395202637
    7. '           ' → logprob: -13.690600395202637
    8. '  ' → logprob: -14.065600395202637
    9. '     ' → logprob: -14.315600395202637
    10. '      ' → logprob: -14.440600395202637

Token 414: ' pow' (ID: 9779)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00023917861108202487
    2. '   ' → logprob: -8.625239372253418
    3. ' b' → logprob: -9.875239372253418
    4. '       ' → logprob: -12.500239372253418
    5. 'diff' → logprob: -13.750239372253418
    6. '	b' → logprob: -13.875239372253418
    7. 'temp' → logprob: -14.000239372253418
    8. 'increment' → logprob: -15.250239372253418
    9. ' ' → logprob: -16.0002384185791
    10. '    ' → logprob: -16.2502384185791

Token 415: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.701832115650177
    2. '(c' → logprob: -0.701832115650177
    3. '(pow' → logprob: -5.076832294464111
    4. '(b' → logprob: -6.951832294464111
    5. '(
' → logprob: -7.201832294464111
    6. ' (' → logprob: -8.576831817626953
    7. 'c' → logprob: -8.701831817626953
    8. '(a' → logprob: -9.451831817626953
    9. '(power' → logprob: -9.826831817626953
    10. 'pow' → logprob: -9.951831817626953

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07981112599372864
    2. '(-' → logprob: -3.3298110961914062
    3. '(' → logprob: -4.204811096191406
    4. '(c' → logprob: -4.454811096191406
    5. ',c' → logprob: -5.329811096191406
    6. ')' → logprob: -5.579811096191406
    7. '),' → logprob: -5.829811096191406
    8. ' ,' → logprob: -6.579811096191406
    9. ',-' → logprob: -7.954811096191406
    10. 'c' → logprob: -8.954811096191406

Token 417: ' mod' (ID: 1812)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7026368379592896
    2. 'mod' → logprob: -0.8276368379592896
    3. 'c' → logprob: -2.82763671875
    4. ' mod' → logprob: -5.82763671875
    5. ' -' → logprob: -6.07763671875
    6. '-mod' → logprob: -6.45263671875
    7. ' ' → logprob: -7.32763671875
    8. ' c' → logprob: -7.70263671875
    9. '-c' → logprob: -8.70263671875
    10. 'MOD' → logprob: -9.20263671875

Token 418: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002894274890422821
    2. ' -' → logprob: -5.877894401550293
    3. ',' → logprob: -9.377894401550293
    4. ')' → logprob: -13.502894401550293
    5. '–' → logprob: -14.002894401550293
    6. '−' → logprob: -14.127894401550293
    7. 'c' → logprob: -14.377894401550293
    8. 'a' → logprob: -14.752894401550293
    9. 'b' → logprob: -15.502894401550293
    10. ')-' → logprob: -15.877894401550293

Token 419: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8325677703833207e-05
    2. '-' → logprob: -11.875028610229492
    3. '1' → logprob: -12.125028610229492
    4. '

' → logprob: -12.250028610229492
    5. '```' → logprob: -12.375028610229492
    6. '
' → logprob: -12.750028610229492
    7. ' -' → logprob: -13.000028610229492
    8. ' ' → logprob: -14.812528610229492
    9. '   ' → logprob: -14.875028610229492
    10. '
' → logprob: -14.937528610229492

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016630393220111728
    2. ' ,' → logprob: -6.5016632080078125
    3. ')' → logprob: -8.876663208007812
    4. '   ' → logprob: -11.376663208007812
    5. ',c' → logprob: -12.876663208007812
    6. ' ' → logprob: -13.251663208007812
    7. '    ' → logprob: -13.876663208007812
    8. '  ' → logprob: -14.126663208007812
    9. '```' → logprob: -14.251663208007812
    10. ',
' → logprob: -14.251663208007812

Token 421: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019218488596379757
    2. 'c' → logprob: -7.001921653747559
    3. ' mod' → logprob: -7.251921653747559
    4. ')' → logprob: -8.126921653747559
    5. ' c' → logprob: -13.251921653747559
    6. '	mod' → logprob: -13.376921653747559
    7. '   ' → logprob: -14.751921653747559
    8. 'a' → logprob: -14.751921653747559
    9. 'MOD' → logprob: -15.126921653747559
    10. 'm' → logprob: -15.126921653747559

Token 422: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.802049756515771e-05
    2. ' )' → logprob: -9.750067710876465
    3. ')
' → logprob: -12.875067710876465
    4. '   ' → logprob: -13.500067710876465
    5. ')}' → logprob: -13.875067710876465
    6. '))' → logprob: -14.000067710876465
    7. '),' → logprob: -14.250067710876465
    8. ')}}' → logprob: -14.250067710876465
    9. ')`' → logprob: -15.000067710876465
    10. ')))' → logprob: -15.000067710876465

Token 423: ' calc' (ID: 25691)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1731795370578766
    2. '<|end|>' → logprob: -2.2981796264648438
    3. ',' → logprob: -3.5481796264648438
    4. '       ' → logprob: -5.173179626464844
    5. '   ' → logprob: -5.673179626464844
    6. '),' → logprob: -5.673179626464844
    7. ' )' → logprob: -6.048179626464844
    8. ' ' → logprob: -6.048179626464844
    9. '<|end|>' → logprob: -6.298179626464844
    10. '%' → logprob: -6.673179626464844

Token 424: 'ule' (ID: 1601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4619756042957306
    2. 'ule' → logprob: -1.3369755744934082
    3. '(' → logprob: -3.711975574493408
    4. '(pow' → logprob: -4.336975574493408
    5. 'ulate' → logprob: -4.461975574493408
    6. '(a' → logprob: -4.711975574493408
    7. '_mod' → logprob: -4.836975574493408
    8. '=' → logprob: -4.961975574493408
    9. 'pow' → logprob: -5.211975574493408
    10. 'ulates' → logprob: -5.336975574493408

Token 425: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.892966091632843
    2. 'l' → logprob: -1.3929660320281982
    3. 'a' → logprob: -1.6429660320281982
    4. 'c' → logprob: -2.7679660320281982
    5. 'the' → logprob: -3.7679660320281982
    6. ' the' → logprob: -4.017966270446777
    7. ' pow' → logprob: -4.142966270446777
    8. ' l' → logprob: -5.142966270446777
    9. '(pow' → logprob: -5.392966270446777
    10. ' a' → logprob: -5.517966270446777

Token 426: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8534911870956421
    2. ' inverse' → logprob: -1.353491187095642
    3. ' modular' → logprob: -2.2284913063049316
    4. ' pow' → logprob: -2.4784913063049316
    5. ' a' → logprob: -3.6034913063049316
    6. ' modulo' → logprob: -3.7284913063049316
    7. ' mod' → logprob: -3.9784913063049316
    8. ')' → logprob: -4.603491306304932
    9. '_inverse' → logprob: -4.728491306304932
    10. 'inverse' → logprob: -4.853491306304932

Token 427: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -4.7994282795116305e-05
    2. 'v' → logprob: -10.00004768371582
    3. '```' → logprob: -14.50004768371582
    4. 'VERSE' → logprob: -14.75004768371582
    5. '[' → logprob: -15.37504768371582
    6. 'vers' → logprob: -15.87504768371582
    7. 't' → logprob: -16.00004768371582
    8. 'versed' → logprob: -16.12504768371582
    9. 'versible' → logprob: -16.25004768371582
    10. 'Verse' → logprob: -16.25004768371582

Token 428: ' multiplic' (ID: 67929)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5099346041679382
    2. '(' → logprob: -1.259934663772583
    3. 'mod' → logprob: -3.259934663772583
    4. 'a' → logprob: -3.384934663772583
    5. '_mod' → logprob: -4.384934425354004
    6. 'pow' → logprob: -4.509934425354004
    7. ' (' → logprob: -5.009934425354004
    8. ')' → logprob: -5.134934425354004
    9. '(
' → logprob: -5.384934425354004
    10. '(pow' → logprob: -6.884934425354004

Token 429: 'atif' (ID: 23984)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.032586097717285156
    2. 'a' → logprob: -5.032586097717285
    3. 've' → logprob: -5.407586097717285
    4. 'el' → logprob: -5.907586097717285
    5. 'é' → logprob: -5.907586097717285
    6. 'atif' → logprob: -5.907586097717285
    7. 'aire' → logprob: -6.032586097717285
    8. 'mod' → logprob: -6.282586097717285
    9. 'ique' → logprob: -6.657586097717285
    10. 'te' → logprob: -6.907586097717285

Token 430: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.092907428741455
    2. '(' → logprob: -1.467907428741455
    3. '(a' → logprob: -1.717907428741455
    4. ')' → logprob: -2.092907428741455
    5. 'mod' → logprob: -3.092907428741455
    6. ' de' → logprob: -3.842907428741455
    7. 'de' → logprob: -3.967907428741455
    8. ' (' → logprob: -4.342907428741455
    9. ' a' → logprob: -4.842907428741455
    10. '_mod' → logprob: -5.467907428741455

Token 431: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. '(a' → logprob: -17.875036239624023
    4. '```' → logprob: -18.250036239624023
    5. '	a' → logprob: -18.750036239624023
    6. ''a' → logprob: -18.875036239624023
    7. ')a' → logprob: -19.375036239624023
    8. 'pow' → logprob: -19.500036239624023
    9. '`' → logprob: -19.875036239624023
    10. '<a' → logprob: -20.250036239624023

Token 432: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06288938969373703
    2. ',' → logprob: -3.562889337539673
    3. ' )' → logprob: -4.562889575958252
    4. ' ' → logprob: -4.812889575958252
    5. '(' → logprob: -5.687889575958252
    6. ' modulo' → logprob: -6.062889575958252
    7. ' ,' → logprob: -6.187889575958252
    8. '   ' → logprob: -6.562889575958252
    9. '*' → logprob: -7.312889575958252
    10. '),' → logprob: -7.562889575958252

Token 433: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01325281336903572
    2. 'c' → logprob: -5.3882527351379395
    3. ' mod' → logprob: -5.5132527351379395
    4. 'a' → logprob: -5.6382527351379395
    5. '(mod' → logprob: -7.7632527351379395
    6. ')' → logprob: -8.138253211975098
    7. ' a' → logprob: -9.263253211975098
    8. ' c' → logprob: -9.763253211975098
    9. 'b' → logprob: -10.138253211975098
    10. '(' → logprob: -10.888253211975098

Token 434: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5880321860313416
    2. '   ' → logprob: -1.2130322456359863
    3. ')' → logprob: -2.3380322456359863
    4. '(' → logprob: -3.9630322456359863
    5. ',' → logprob: -4.338032245635986
    6. ' (' → logprob: -5.213032245635986
    7. ' )' → logprob: -6.088032245635986
    8. 'b' → logprob: -6.463032245635986
    9. ' ' → logprob: -6.463032245635986
    10. ' b' → logprob: -6.838032245635986

Token 435: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1342998892068863
    2. 'c' → logprob: -3.2592999935150146
    3. ')' → logprob: -3.3842999935150146
    4. ' c' → logprob: -4.2592997550964355
    5. 'b' → logprob: -4.3842997550964355
    6. '   ' → logprob: -4.6342997550964355
    7. ' )' → logprob: -5.3842997550964355
    8. ' b' → logprob: -6.0092997550964355
    9. '      ' → logprob: -6.6342997550964355
    10. 'a' → logprob: -6.7592997550964355

Token 436: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0431466102600098
    2. ')' → logprob: -1.2931466102600098
    3. '   ' → logprob: -1.5431466102600098
    4. ' =' → logprob: -3.5431466102600098
    5. ',' → logprob: -4.04314661026001
    6. ''est' → logprob: -4.29314661026001
    7. '**' → logprob: -4.41814661026001
    8. ' ' → logprob: -4.66814661026001
    9. '       ' → logprob: -4.66814661026001
    10. '#' → logprob: -5.04314661026001

Token 437: '-à' (ID: 56297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46959376335144043
    2. ''' → logprob: -1.7195937633514404
    3. '-à' → logprob: -2.3445937633514404
    4. 'à' → logprob: -2.9695937633514404
    5. 'a' → logprob: -4.4695940017700195
    6. '   ' → logprob: -5.3445940017700195
    7. '')' → logprob: -5.7195940017700195
    8. ''à' → logprob: -5.8445940017700195
    9. ''a' → logprob: -5.9695940017700195
    10. 'l' → logprob: -6.3445940017700195

Token 438: '-dire' (ID: 76064)
  Prédit: '-à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.5835516452789307
    2. ''a' → logprob: -2.2085516452789307
    3. ''à' → logprob: -2.2085516452789307
    4. ''' → logprob: -2.7085516452789307
    5. ''ex' → logprob: -3.4585516452789307
    6. ''l' → logprob: -4.208551406860352
    7. ''s' → logprob: -4.208551406860352
    8. '-a' → logprob: -4.583551406860352
    9. 'pow' → logprob: -4.833551406860352
    10. ')' → logprob: -4.833551406860352

Token 439: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3162182867527008
    2. ' pow' → logprob: -2.816218376159668
    3. '       ' → logprob: -3.191218376159668
    4. ' c' → logprob: -3.316218376159668
    5. 'pow' → logprob: -3.691218376159668
    6. ')' → logprob: -3.816218376159668
    7. '(' → logprob: -4.066218376159668
    8. ''' → logprob: -4.316218376159668
    9. '(pow' → logprob: -4.566218376159668
    10. 'c' → logprob: -4.941218376159668

Token 440: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7591229677200317
    2. 'élé' → logprob: -2.134122848510742
    3. ')' → logprob: -2.259122848510742
    4. 'b' → logprob: -2.634122848510742
    5. 'pow' → logprob: -2.634122848510742
    6. ' a' → logprob: -3.384122848510742
    7. '*' → logprob: -3.509122848510742
    8. 'multip' → logprob: -4.259122848510742
    9. 'c' → logprob: -4.384122848510742
    10. 'inverse' → logprob: -4.509122848510742

Token 441: ' tel' (ID: 10716)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.098058819770813
    2. '   ' → logprob: -1.598058819770813
    3. '*' → logprob: -1.973058819770813
    4. 'pow' → logprob: -2.0980587005615234
    5. ' *' → logprob: -3.0980587005615234
    6. 'a' → logprob: -3.3480587005615234
    7. '(pow' → logprob: -4.098058700561523
    8. ' )' → logprob: -4.098058700561523
    9. ' pow' → logprob: -4.223058700561523
    10. '(' → logprob: -4.348058700561523

Token 442: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.23343999683856964
    2. ')' → logprob: -1.6084400415420532
    3. ' )' → logprob: -5.483439922332764
    4. ',' → logprob: -6.233439922332764
    5. ' that' → logprob: -7.858439922332764
    6. '   ' → logprob: -7.983439922332764
    7. 'que' → logprob: -8.233440399169922
    8. ' qu' → logprob: -8.358440399169922
    9. ' a' → logprob: -8.858440399169922
    10. '=' → logprob: -9.233440399169922

Token 443: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5483709573745728
    2. ' (' → logprob: -2.173370838165283
    3. '(a' → logprob: -2.298370838165283
    4. 'pow' → logprob: -2.298370838165283
    5. ' a' → logprob: -3.048370838165283
    6. 'c' → logprob: -3.923370838165283
    7. '(pow' → logprob: -4.173370838165283
    8. '(' → logprob: -4.423370838165283
    9. ' pow' → logprob: -5.298370838165283
    10. ' c' → logprob: -5.798370838165283

Token 444: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06326846778392792
    2. ' a' → logprob: -2.8132684230804443
    3. 'c' → logprob: -7.563268661499023
    4. 'pow' → logprob: -8.063268661499023
    5. ')' → logprob: -8.563268661499023
    6. '(a' → logprob: -9.563268661499023
    7. ' c' → logprob: -9.688268661499023
    8. ')a' → logprob: -9.938268661499023
    9. ' (' → logprob: -10.813268661499023
    10. ' pow' → logprob: -11.063268661499023

Token 445: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.13308897614479065
    2. '*' → logprob: -2.258089065551758
    3. ')' → logprob: -4.508089065551758
    4. '**' → logprob: -5.508089065551758
    5. 'pow' → logprob: -6.633089065551758
    6. ' **' → logprob: -6.883089065551758
    7. '_inverse' → logprob: -7.258089065551758
    8. ' inverse' → logprob: -8.133089065551758
    9. '   ' → logprob: -8.383089065551758
    10. '^{-' → logprob: -8.508089065551758

Token 446: ' x' (ID: 1215)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0012514196569100022
    2. ' pow' → logprob: -6.751251220703125
    3. '(pow' → logprob: -9.501251220703125
    4. 'a' → logprob: -12.251251220703125
    5. '_pow' → logprob: -14.626251220703125
    6. ')' → logprob: -14.626251220703125
    7. '.pow' → logprob: -14.751251220703125
    8. '<|end|>' → logprob: -15.626251220703125
    9. '```' → logprob: -16.251251220703125
    10. 'Pow' → logprob: -17.251251220703125

Token 447: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005152635276317596
    2. ')%' → logprob: -8.00051498413086
    3. ' )' → logprob: -9.37551498413086
    4. '%' → logprob: -9.75051498413086
    5. '}' → logprob: -12.12551498413086
    6. '   ' → logprob: -12.25051498413086
    7. ')
' → logprob: -12.25051498413086
    8. '**' → logprob: -12.87551498413086
    9. 'a' → logprob: -13.00051498413086
    10. 'pow' → logprob: -13.12551498413086

Token 448: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046279095113277435
    2. ')%' → logprob: -3.296279191970825
    3. '%' → logprob: -5.546278953552246
    4. '<|end|>' → logprob: -6.171278953552246
    5. ' )' → logprob: -6.921278953552246
    6. ' %' → logprob: -7.421278953552246
    7. '<|end|>' → logprob: -8.796278953552246
    8. '%x' → logprob: -8.796278953552246
    9. '```' → logprob: -9.546278953552246
    10. '   ' → logprob: -10.296278953552246

Token 449: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.05924537405371666
    2. ' mod' → logprob: -3.1842453479766846
    3. 'a' → logprob: -4.559245586395264
    4. 'x' → logprob: -5.434245586395264
    5. ' x' → logprob: -7.559245586395264
    6. ' a' → logprob: -7.934245586395264
    7. 'c' → logprob: -8.559245109558105
    8. 'pow' → logprob: -8.809245109558105
    9. ' c' → logprob: -11.309245109558105
    10. 'b' → logprob: -11.434245109558105

Token 450: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012280059978365898
    2. ')==' → logprob: -5.637279987335205
    3. ')%' → logprob: -5.887279987335205
    4. '==' → logprob: -6.137279987335205
    5. ' ==' → logprob: -6.262279987335205
    6. ' )' → logprob: -6.637279987335205
    7. '=' → logprob: -8.137280464172363
    8. '   ' → logprob: -9.512280464172363
    9. '%' → logprob: -10.012280464172363
    10. ')=' → logprob: -10.762280464172363

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'c' → logprob: -21.625001907348633
    4. '۱' → logprob: -22.125001907348633
    5. 'b' → logprob: -22.500001907348633
    6. '```' → logprob: -22.875001907348633
    7. '   ' → logprob: -23.000001907348633
    8. 'a' → logprob: -23.250001907348633
    9. '0' → logprob: -23.625001907348633
    10. '
' → logprob: -23.875001907348633

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -19.0
    4. '```' → logprob: -20.25
    5. '

' → logprob: -21.0
    6. '۱' → logprob: -21.25
    7. '   ' → logprob: -21.5
    8. '`' → logprob: -22.125
    9. '' → logprob: -22.1875
    10. 'b' → logprob: -22.5

Token 453: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011231913231313229
    2. '   ' → logprob: -7.751123428344727
    3. ':' → logprob: -8.501123428344727
    4. ',' → logprob: -8.876123428344727
    5. 'b' → logprob: -9.251123428344727
    6. '<|end|>' → logprob: -9.251123428344727
    7. ')' → logprob: -10.001123428344727
    8. '        
' → logprob: -11.126123428344727
    9. '      ' → logprob: -11.626123428344727
    10. '           ' → logprob: -11.626123428344727

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03356340155005455
    2. '   ' → logprob: -4.033563613891602
    3. 'b' → logprob: -4.283563613891602
    4. ' b' → logprob: -7.408563613891602
    5. ')' → logprob: -8.408563613891602
    6. '           ' → logprob: -8.658563613891602
    7. ' +' → logprob: -9.408563613891602
    8. '      ' → logprob: -9.908563613891602
    9. '        
' → logprob: -10.033563613891602
    10. '<|end|>' → logprob: -10.158563613891602

Token 455: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21434837579727173
    2. '   ' → logprob: -2.589348316192627
    3. '       ' → logprob: -2.714348316192627
    4. ' b' → logprob: -2.964348316192627
    5. ' ' → logprob: -12.214348793029785
    6. '    ' → logprob: -12.214348793029785
    7. '  ' → logprob: -12.589348793029785
    8. '           ' → logprob: -13.089348793029785
    9. '	b' → logprob: -13.214348793029785
    10. '      ' → logprob: -13.714348793029785

Token 456: ' En' (ID: 2130)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012152756564319134
    2. ' b' → logprob: -4.637152671813965
    3. '   ' → logprob: -6.137152671813965
    4. '       ' → logprob: -8.387152671813965
    5. '	b' → logprob: -13.012152671813965
    6. ' ' → logprob: -14.012152671813965
    7. '    ' → logprob: -14.512152671813965
    8. '```' → logprob: -14.637152671813965
    9. '  ' → logprob: -14.762152671813965
    10. '   ' → logprob: -15.637152671813965

Token 457: ' ar' (ID: 646)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11454086750745773
    2. ' b' → logprob: -2.3645408153533936
    3. '   ' → logprob: -4.614541053771973
    4. '       ' → logprob: -6.364541053771973
    5. 'python' → logprob: -6.489541053771973
    6. ' python' → logprob: -8.739541053771973
    7. 'pow' → logprob: -8.989541053771973
    8. 'for' → logprob: -9.114541053771973
    9. '    ' → logprob: -9.614541053771973
    10. '#' → logprob: -9.989541053771973

Token 458: 'ith' (ID: 437)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23429319262504578
    2. 'ith' → logprob: -3.234293222427368
    3. 'é' → logprob: -3.484293222427368
    4. 'g' → logprob: -3.859293222427368
    5. 't' → logprob: -4.734292984008789
    6. 'és' → logprob: -4.734292984008789
    7. 'gent' → logprob: -4.984292984008789
    8. 'e' → logprob: -4.984292984008789
    9. ' ajout' → logprob: -5.359292984008789
    10. 'rière' → logprob: -5.359292984008789

Token 459: 'm' (ID: 76)
  Prédit: 'ith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.3388284146785736
    2. 'r' → logprob: -2.3388283252716064
    3. 'ithmetic' → logprob: -2.7138283252716064
    4. 'e' → logprob: -3.3388283252716064
    5. '#' → logprob: -4.5888285636901855
    6. ')' → logprob: -4.8388285636901855
    7. 'pow' → logprob: -4.8388285636901855
    8. 'm' → logprob: -5.0888285636901855
    9. '```' → logprob: -5.0888285636901855
    10. 'é' → logprob: -5.2138285636901855

Token 460: 'étique' (ID: 41132)
  Prédit: 'étique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étique' → logprob: -0.002549146767705679
    2. 'm' → logprob: -6.502549171447754
    3. 'étiques' → logprob: -8.127549171447754
    4. 't' → logprob: -8.627549171447754
    5. 'é' → logprob: -8.877549171447754
    6. '   ' → logprob: -9.252549171447754
    7. 'thique' → logprob: -9.502549171447754
    8. 'hétique' → logprob: -10.252549171447754
    9. 'th' → logprob: -10.377549171447754
    10. 'ét' → logprob: -10.627549171447754

Token 461: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6300355195999146
    2. ' modulo' → logprob: -1.2550355195999146
    3. ')' → logprob: -2.505035400390625
    4. ' modular' → logprob: -3.130035400390625
    5. ' mod' → logprob: -3.630035400390625
    6. '),' → logprob: -4.880035400390625
    7. '   ' → logprob: -5.380035400390625
    8. '_mod' → logprob: -5.380035400390625
    9. 'python' → logprob: -5.880035400390625
    10. 'pow' → logprob: -6.255035400390625

Token 462: 'ulaire' (ID: 48584)
  Prédit: 'étique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étique' → logprob: -0.648264467716217
    2. 'ique' → logprob: -2.2732644081115723
    3. '   ' → logprob: -2.5232644081115723
    4. '       ' → logprob: -2.7732644081115723
    5. '%' → logprob: -3.0232644081115723
    6. 'ulo' → logprob: -3.3982644081115723
    7. 'ulaire' → logprob: -3.3982644081115723
    8. 'érique' → logprob: -3.7732644081115723
    9. ')' → logprob: -3.8982644081115723
    10. 'é' → logprob: -4.773264408111572

Token 463: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12370099127292633
    2. '   ' → logprob: -2.3737010955810547
    3. ':' → logprob: -4.623701095581055
    4. 'b' → logprob: -4.748701095581055
    5. ' b' → logprob: -6.248701095581055
    6. '):' → logprob: -7.373701095581055
    7. '):
' → logprob: -7.748701095581055
    8. ':
' → logprob: -7.748701095581055
    9. ',' → logprob: -7.873701095581055
    10. '           ' → logprob: -7.998701095581055

Token 464: ' cela' (ID: 17542)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01117007341235876
    2. ' b' → logprob: -4.886169910430908
    3. '   ' → logprob: -5.761169910430908
    4. '       ' → logprob: -7.886169910430908
    5. 'c' → logprob: -11.386170387268066
    6. '    ' → logprob: -12.011170387268066
    7. '	b' → logprob: -12.761170387268066
    8. ')' → logprob: -12.886170387268066
    9. ')b' → logprob: -12.886170387268066
    10. '(' → logprob: -13.011170387268066

Token 465: ' équ' (ID: 18899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13190221786499023
    2. '*' → logprob: -3.5069022178649902
    3. ' *' → logprob: -3.8819022178649902
    4. ' )' → logprob: -4.25690221786499
    5. '**' → logprob: -4.25690221786499
    6. ' permet' → logprob: -4.25690221786499
    7. ' **' → logprob: -4.38190221786499
    8. ' est' → logprob: -5.25690221786499
    9. ')**' → logprob: -6.13190221786499
    10. ' a' → logprob: -6.50690221786499

Token 466: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -7.107425062713446e-06
    2. '==' → logprob: -12.500006675720215
    3. 'v' → logprob: -13.500006675720215
    4. 'iva' → logprob: -14.375006675720215
    5. '=' → logprob: -15.000006675720215
    6. 'a' → logprob: -15.500006675720215
    7. '```' → logprob: -15.750006675720215
    8. 'ivalent' → logprob: -16.25000762939453
    9. 'i' → logprob: -16.37500762939453
    10. ' ==' → logprob: -16.87500762939453

Token 467: 'aut' (ID: 1828)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.004892400465905666
    2. 'v' → logprob: -6.129892349243164
    3. 'aut' → logprob: -6.379892349243164
    4. 'ivalent' → logprob: -8.129892349243164
    5. 'ivre' → logprob: -8.754892349243164
    6. 'vale' → logprob: -9.004892349243164
    7. 'aux' → logprob: -9.004892349243164
    8. 'a' → logprob: -9.379892349243164
    9. 'ival' → logprob: -10.129892349243164
    10. 'ale' → logprob: -10.129892349243164

Token 468: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12133238464593887
    2. 'à' → logprob: -2.7463324069976807
    3. ' a' → logprob: -3.6213324069976807
    4. ')' → logprob: -4.621332168579102
    5. '       ' → logprob: -4.621332168579102
    6. '   ' → logprob: -6.996332168579102
    7. '           ' → logprob: -7.371332168579102
    8. 'a' → logprob: -7.371332168579102
    9. ' au' → logprob: -8.246332168579102
    10. ''à' → logprob: -8.496332168579102

Token 469: ' a' (ID: 261)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2893047332763672
    2. 'c' → logprob: -1.9143047332763672
    3. 'b' → logprob: -3.164304733276367
    4. '(pow' → logprob: -3.664304733276367
    5. '(' → logprob: -4.789304733276367
    6. '   ' → logprob: -5.289304733276367
    7. '(c' → logprob: -5.914304733276367
    8. ' pow' → logprob: -5.914304733276367
    9. 'calcul' → logprob: -5.914304733276367
    10. 'a' → logprob: -6.039304733276367

Token 470: '^(' (ID: 32612)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.736870288848877
    2. ' -' → logprob: -1.111870288848877
    3. 'pow' → logprob: -2.986870288848877
    4. '   ' → logprob: -3.236870288848877
    5. ')' → logprob: -3.486870288848877
    6. '^{-' → logprob: -3.736870288848877
    7. ' *' → logprob: -4.736870288848877
    8. ' pow' → logprob: -4.861870288848877
    9. '*' → logprob: -5.361870288848877
    10. 'inv' → logprob: -5.861870288848877

Token 471: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0016700613778084517
    2. '-' → logprob: -7.126669883728027
    3. ' mod' → logprob: -7.126669883728027
    4. '(mod' → logprob: -10.126669883728027
    5. '-mod' → logprob: -11.376669883728027
    6. '<|end|>' → logprob: -12.001669883728027
    7. '.mod' → logprob: -13.876669883728027
    8. '	mod' → logprob: -14.126669883728027
    9. '_mod' → logprob: -14.376669883728027
    10. ' -' → logprob: -14.501669883728027

Token 472: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000553151941858232
    2. ' -' → logprob: -7.500553131103516
    3. '```' → logprob: -16.875553131103516
    4. '2' → logprob: -17.500553131103516
    5. ')' → logprob: -17.500553131103516
    6. ')-' → logprob: -17.750553131103516
    7. '−' → logprob: -18.000553131103516
    8. '–' → logprob: -18.875553131103516
    9. '()-' → logprob: -19.000553131103516
    10. '1' → logprob: -19.750553131103516

Token 473: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.47626737493556e-05
    2. '-' → logprob: -11.12503433227539
    3. ' ' → logprob: -11.87503433227539
    4. '```' → logprob: -12.00003433227539
    5. '
' → logprob: -12.37503433227539
    6. ' -' → logprob: -14.75003433227539
    7. '

' → logprob: -15.37503433227539
    8. '   ' → logprob: -15.37503433227539
    9. '۲' → logprob: -15.87503433227539
    10. '1' → logprob: -15.93753433227539

Token 474: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11693352460861206
    2. ',' → logprob: -2.241933584213257
    3. ' ,' → logprob: -6.366933345794678
    4. ' )' → logprob: -6.491933345794678
    5. '-' → logprob: -8.116933822631836
    6. '),' → logprob: -9.241933822631836
    7. '   ' → logprob: -9.241933822631836
    8. ')
' → logprob: -9.741933822631836
    9. '}' → logprob: -9.866933822631836
    10. '))' → logprob: -9.866933822631836

Token 475: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7524064779281616
    2. '       ' → logprob: -0.8774064779281616
    3. ')' → logprob: -2.502406597137451
    4. ',' → logprob: -4.502406597137451
    5. '```' → logprob: -5.002406597137451
    6. ' %' → logprob: -5.502406597137451
    7. ' )' → logprob: -6.627406597137451
    8. '**' → logprob: -6.877406597137451
    9. '
' → logprob: -7.127406597137451
    10. ' ' → logprob: -7.627406597137451

Token 476: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07889407873153687
    2. ' mod' → logprob: -2.5788941383361816
    3. '(mod' → logprob: -12.828893661499023
    4. '	mod' → logprob: -14.203893661499023
    5. ' ' → logprob: -14.953893661499023
    6. ' ' → logprob: -15.203893661499023
    7. ')' → logprob: -15.578893661499023
    8. '```' → logprob: -16.828893661499023
    9. '_mod' → logprob: -17.078893661499023
    10. ' modulo' → logprob: -17.828893661499023

Token 477: ' quand' (ID: 18026)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014126161113381386
    2. ',' → logprob: -7.626412391662598
    3. '   ' → logprob: -7.876412391662598
    4. '<|end|>' → logprob: -8.751412391662598
    5. 'b' → logprob: -9.001412391662598
    6. '        
' → logprob: -9.876412391662598
    7. ')' → logprob: -10.501412391662598
    8. ':' → logprob: -10.751412391662598
    9. '=' → logprob: -11.001412391662598
    10. '      ' → logprob: -11.251412391662598

Token 478: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0014484523562714458
    2. 'a' → logprob: -6.626448631286621
    3. ' mod' → logprob: -9.376448631286621
    4. 'pow' → logprob: -10.501448631286621
    5. ' ' → logprob: -12.626448631286621
    6. 'python' → logprob: -13.126448631286621
    7. 'Python' → logprob: -13.626448631286621
    8. '(mod' → logprob: -14.251448631286621
    9. '	mod' → logprob: -14.251448631286621
    10. 'MOD' → logprob: -14.876448631286621

Token 479: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003335990710183978
    2. '   ' → logprob: -6.753335952758789
    3. ' )' → logprob: -7.128335952758789
    4. '-' → logprob: -7.753335952758789
    5. '),' → logprob: -7.753335952758789
    6. ' -' → logprob: -8.878335952758789
    7. ')==' → logprob: -9.503335952758789
    8. ')-' → logprob: -10.128335952758789
    9. ')
' → logprob: -10.378335952758789
    10. ',' → logprob: -10.503335952758789

Token 480: ' premier' (ID: 15506)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.6966734528541565
    2. 'a' → logprob: -0.8216734528541565
    3. ' a' → logprob: -3.0716733932495117
    4. ' prime' → logprob: -4.321673393249512
    5. ' ' → logprob: -7.071673393249512
    6. 'prima' → logprob: -8.196673393249512
    7. 'prem' → logprob: -8.446673393249512
    8. 'un' → logprob: -8.821673393249512
    9. '_prime' → logprob: -8.821673393249512
    10. '7' → logprob: -8.821673393249512

Token 481: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07020817697048187
    2. 'b' → logprob: -3.3202080726623535
    3. '   ' → logprob: -3.5702080726623535
    4. ' b' → logprob: -6.6952080726623535
    5. ':' → logprob: -7.3202080726623535
    6. '<|end|>' → logprob: -7.4452080726623535
    7. ',' → logprob: -8.695208549499512
    8. '+' → logprob: -9.320208549499512
    9. ' +' → logprob: -9.320208549499512
    10. ':
' → logprob: -9.445208549499512

Token 482: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029211703687906265
    2. 'b' → logprob: -4.279211521148682
    3. ')' → logprob: -5.029211521148682
    4. ' b' → logprob: -5.154211521148682
    5. '<|end|>' → logprob: -7.404211521148682
    6. '   ' → logprob: -7.779211521148682
    7. ' ' → logprob: -8.27921199798584
    8. ' )' → logprob: -8.40421199798584
    9. '      ' → logprob: -8.90421199798584
    10. 'a' → logprob: -8.90421199798584

Token 483: ' le' (ID: 505)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.021963121369481087
    2. ')' → logprob: -4.521963119506836
    3. '3' → logprob: -5.646963119506836
    4. '1' → logprob: -6.146963119506836
    5. 'ex' → logprob: -6.646963119506836
    6. '```' → logprob: -7.396963119506836
    7. '(pow' → logprob: -7.521963119506836
    8. '2' → logprob: -8.021963119506836
    9. ' pow' → logprob: -8.146963119506836
    10. '(' → logprob: -8.146963119506836

Token 484: ' petit' (ID: 20577)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.013318224810063839
    2. ' pow' → logprob: -5.388318061828613
    3. ' Ferm' → logprob: -6.013318061828613
    4. 'ferm' → logprob: -6.638318061828613
    5. 'Pow' → logprob: -6.763318061828613
    6. 'F' → logprob: -7.263318061828613
    7. 'ex' → logprob: -7.388318061828613
    8. 'fer' → logprob: -8.013318061828613
    9. 'py' → logprob: -8.138318061828613
    10. 'Euler' → logprob: -8.388318061828613

Token 485: ' thé' (ID: 34740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036350660026073456
    2. '<|end|>' → logprob: -4.786350727081299
    3. ')' → logprob: -5.161350727081299
    4. '_' → logprob: -5.286350727081299
    5. ' )' → logprob: -6.161350727081299
    6. ' prince' → logprob: -6.161350727081299
    7. '_p' → logprob: -6.411350727081299
    8. ' _' → logprob: -6.911350727081299
    9. '  ' → logprob: -7.036350727081299
    10. '```' → logprob: -7.411350727081299

Token 486: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00820354837924242
    2. 'ore' → logprob: -5.508203506469727
    3. 'orem' → logprob: -5.633203506469727
    4. '```' → logprob: -9.508203506469727
    5. 'ор' → logprob: -9.633203506469727
    6. 'rem' → logprob: -9.758203506469727
    7. 'orme' → logprob: -10.008203506469727
    8. 'm' → logprob: -10.133203506469727
    9. 'me' → logprob: -10.383203506469727
    10. 'orique' → logprob: -10.883203506469727

Token 487: 'ème' (ID: 9767)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5970309376716614
    2. 'ore' → logprob: -1.7220308780670166
    3. 'me' → logprob: -2.0970308780670166
    4. 'ème' → logprob: -2.2220308780670166
    5. 'orem' → logprob: -3.9720308780670166
    6. '```' → logprob: -5.097031116485596
    7. '#' → logprob: -5.347031116485596
    8. 'orme' → logprob: -6.222031116485596
    9. '`' → logprob: -6.722031116485596
    10. 'reme' → logprob: -6.722031116485596

Token 488: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07636038959026337
    2. 'pow' → logprob: -3.7013604640960693
    3. '   ' → logprob: -4.20136022567749
    4. '(pow' → logprob: -4.70136022567749
    5. ',' → logprob: -5.45136022567749
    6. '<|end|>' → logprob: -5.70136022567749
    7. ' )' → logprob: -6.20136022567749
    8. '[' → logprob: -6.70136022567749
    9. '```' → logprob: -6.70136022567749
    10. '_' → logprob: -6.82636022567749

Token 489: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0017496729269623756
    2. ' Ferm' → logprob: -7.376749515533447
    3. 'ferm' → logprob: -7.501749515533447
    4. 'fer' → logprob: -8.501749992370605
    5. 'Euler' → logprob: -9.001749992370605
    6. 'f' → logprob: -9.626749992370605
    7. 'Fer' → logprob: -10.001749992370605
    8. 'Little' → logprob: -10.751749992370605
    9. '(F' → logprob: -11.626749992370605
    10. ' ferm' → logprob: -11.876749992370605

Token 490: 'at' (ID: 266)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38207539916038513
    2. 'mod' → logprob: -2.257075309753418
    3. 'ra' → logprob: -3.507075309753418
    4. '   ' → logprob: -3.507075309753418
    5. '       ' → logprob: -4.132075309753418
    6. '```' → logprob: -4.132075309753418
    7. 'or' → logprob: -4.257075309753418
    8. 'a' → logprob: -4.632075309753418
    9. 'm' → logprob: -4.632075309753418
    10. '#' → logprob: -4.882075309753418

Token 491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010370489209890366
    2. '   ' → logprob: -4.885370254516602
    3. 'b' → logprob: -7.010370254516602
    4. ')' → logprob: -7.635370254516602
    5. ',' → logprob: -7.760370254516602
    6. '<|end|>' → logprob: -8.010370254516602
    7. ':' → logprob: -8.635370254516602
    8. '        
' → logprob: -9.760370254516602
    9. 'a' → logprob: -10.385370254516602
    10. '           ' → logprob: -10.385370254516602

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09731217473745346
    2. '   ' → logprob: -2.9723122119903564
    3. 'b' → logprob: -3.2223122119903564
    4. ' b' → logprob: -6.972311973571777
    5. '<|end|>' → logprob: -8.597311973571777
    6. ' ' → logprob: -9.222311973571777
    7. '[' → logprob: -9.597311973571777
    8. '```' → logprob: -9.972311973571777
    9. '      ' → logprob: -10.097311973571777
    10. '           ' → logprob: -10.097311973571777

Token 493: ' inv' (ID: 1827)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07224681973457336
    2. '       ' → logprob: -3.197246789932251
    3. 'b' → logprob: -3.572246789932251
    4. ' b' → logprob: -7.32224702835083
    5. '```' → logprob: -11.447246551513672
    6. '    ' → logprob: -11.697246551513672
    7. '   ' → logprob: -11.697246551513672
    8. 'c' → logprob: -12.322246551513672
    9. 'a' → logprob: -12.447246551513672
    10. '  ' → logprob: -12.447246551513672

Token 494: '_a' (ID: 10852)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8628243207931519
    2. '_' → logprob: -1.7378243207931519
    3. '=' → logprob: -1.8628243207931519
    4. '(a' → logprob: -2.1128244400024414
    5. 'a' → logprob: -2.6128244400024414
    6. '_a' → logprob: -3.3628244400024414
    7. ' =' → logprob: -4.362824440002441
    8. ')' → logprob: -5.487824440002441
    9. ' (' → logprob: -7.737824440002441
    10. 's' → logprob: -8.862824440002441

Token 495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048605531454086304
    2. '=' → logprob: -3.048605442047119
    3. ')' → logprob: -11.548605918884277
    4. '(' → logprob: -12.798605918884277
    5. 'a' → logprob: -13.548605918884277
    6. ' ' → logprob: -13.548605918884277
    7. ',' → logprob: -14.173605918884277
    8. '(a' → logprob: -14.423605918884277
    9. ' =
' → logprob: -14.673605918884277
    10. ')=' → logprob: -15.298605918884277

Token 496: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00012356207298580557
    2. ' pow' → logprob: -9.000123977661133
    3. '(pow' → logprob: -16.625123977661133
    4. 'power' → logprob: -18.375123977661133
    5. '_pow' → logprob: -19.250123977661133
    6. 'Pow' → logprob: -20.250123977661133
    7. '   ' → logprob: -20.500123977661133
    8. 'p' → logprob: -20.750123977661133
    9. '.pow' → logprob: -20.875123977661133
    10. ' ' → logprob: -22.625123977661133

Token 497: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2548336088657379
    2. '(' → logprob: -1.5048335790634155
    3. 'a' → logprob: -5.879833698272705
    4. '(
' → logprob: -9.254833221435547
    5. ' (' → logprob: -12.379833221435547
    6. '<|end|>' → logprob: -12.754833221435547
    7. '(

' → logprob: -15.254833221435547
    8. ')a' → logprob: -15.504833221435547
    9. '(ai' → logprob: -15.504833221435547
    10. ')' → logprob: -15.629833221435547

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013440960901789367
    2. ' ,' → logprob: -9.000134468078613
    3. '   ' → logprob: -12.625134468078613
    4. ',
' → logprob: -12.750134468078613
    5. 'a' → logprob: -13.125134468078613
    6. ')' → logprob: -14.000134468078613
    7. 'c' → logprob: -14.500134468078613
    8. '),' → logprob: -15.125134468078613
    9. 'mod' → logprob: -15.500134468078613
    10. ' ' → logprob: -15.625134468078613

Token 499: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000158842682139948
    2. ' mod' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.62515926361084
    4. '(mod' → logprob: -16.375158309936523
    5. '	mod' → logprob: -16.625158309936523
    6. ' ' → logprob: -19.000158309936523
    7. 'MOD' → logprob: -20.000158309936523
    8. '.mod' → logprob: -20.375158309936523
    9. '_mod' → logprob: -21.250158309936523
    10. '
' → logprob: -21.375158309936523

Token 500: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.62509536743164
    4. ' ' → logprob: -20.00009536743164
    5. ')' → logprob: -20.62509536743164
    6. ')-' → logprob: -21.25009536743164
    7. '```' → logprob: -21.50009536743164
    8. '−' → logprob: -22.00009536743164
    9. ''-' → logprob: -22.50009536743164
    10. '()-' → logprob: -22.50009536743164

Token 501: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '```' → logprob: -15.312536239624023
    4. '   ' → logprob: -15.687536239624023
    5. '-' → logprob: -15.750036239624023
    6. '۲' → logprob: -15.937536239624023
    7. '  ' → logprob: -16.812536239624023
    8. '
' → logprob: -17.437536239624023
    9. '２' → logprob: -17.687536239624023
    10. '২' → logprob: -17.937536239624023

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043805985478684306
    2. ' ,' → logprob: -7.750438213348389
    3. ')' → logprob: -12.62543773651123
    4. '   ' → logprob: -13.00043773651123
    5. '),' → logprob: -14.25043773651123
    6. ',
' → logprob: -14.50043773651123
    7. 'mod' → logprob: -15.62543773651123
    8. ' mod' → logprob: -16.250438690185547
    9. ' ' → logprob: -16.625438690185547
    10. '       ' → logprob: -16.875438690185547

Token 503: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1269419640302658
    2. ' mod' → logprob: -2.1269419193267822
    3. ')' → logprob: -11.251941680908203
    4. '	mod' → logprob: -14.251941680908203
    5. '(mod' → logprob: -16.376941680908203
    6. ' )' → logprob: -16.876941680908203
    7. '_mod' → logprob: -16.876941680908203
    8. '```' → logprob: -17.501941680908203
    9. '   ' → logprob: -17.751941680908203
    10. ' ' → logprob: -17.876941680908203

Token 504: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9027791495318525e-05
    2. ')
' → logprob: -11.125019073486328
    3. ' )' → logprob: -12.750019073486328
    4. '   ' → logprob: -13.875019073486328
    5. ')

' → logprob: -15.125019073486328
    6. ')
' → logprob: -16.125019073486328
    7. '       ' → logprob: -16.375019073486328
    8. ' ' → logprob: -17.250019073486328
    9. ' ' → logprob: -18.750019073486328
    10. '),' → logprob: -18.750019073486328

Token 505: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2129177749156952
    2. '<|end|>' → logprob: -1.7129178047180176
    3. '
' → logprob: -5.337917804718018
    4. 'b' → logprob: -5.712917804718018
    5. '   ' → logprob: -7.087917804718018
    6. '<|end|>' → logprob: -7.212917804718018
    7. ')' → logprob: -7.337917804718018
    8. '        
' → logprob: -7.962917804718018
    9. ' b' → logprob: -8.71291732788086
    10. ',' → logprob: -9.21291732788086

Token 506: ' Cal' (ID: 4453)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5492103099822998
    2. '       ' → logprob: -1.4242103099822998
    3. ')' → logprob: -2.9242103099823
    4. '<|end|>' → logprob: -3.0492103099823
    5. '   ' → logprob: -3.1742103099823
    6. 'c' → logprob: -3.5492103099823
    7. ' b' → logprob: -5.424210548400879
    8. ' (' → logprob: -6.424210548400879
    9. ' c' → logprob: -6.674210548400879
    10. '<|end|>' → logprob: -7.799210548400879

Token 507: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.2890915274620056
    2. 'cul' → logprob: -1.6640915870666504
    3. 'c' → logprob: -3.4140915870666504
    4. 'culate' → logprob: -4.16409158706665
    5. 'cula' → logprob: -4.53909158706665
    6. 'cules' → logprob: -6.41409158706665
    7. 'culated' → logprob: -8.539091110229492
    8. 'culo' → logprob: -9.289091110229492
    9. 'culaire' → logprob: -9.289091110229492
    10. 'cular' → logprob: -9.414091110229492

Token 508: ' l' (ID: 305)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: ''in' (ID: 17942)
  Prédit: ' inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.37199729681015015
    2. 'inverse' → logprob: -1.746997356414795
    3. ''in' → logprob: -2.246997356414795
    4. ' ' → logprob: -4.246997356414795
    5. '_inverse' → logprob: -4.996997356414795
    6. ''' → logprob: -5.996997356414795
    7. 'a' → logprob: -6.746997356414795
    8. 'e' → logprob: -6.996997356414795
    9. 'in' → logprob: -7.121997356414795
    10. ' multiplic' → logprob: -7.746997356414795

Token 510: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.04871806129813194
    2. 'v' → logprob: -3.173717975616455
    3. 'vers' → logprob: -5.798717975616455
    4. '   ' → logprob: -7.298717975616455
    5. 'inverse' → logprob: -7.423717975616455
    6. ' inverse' → logprob: -8.298718452453613
    7. ' ' → logprob: -8.548718452453613
    8. 't' → logprob: -9.048718452453613
    9. 'ver' → logprob: -9.173718452453613
    10. 'div' → logprob: -9.673718452453613

Token 511: ' mod' (ID: 1812)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: 'ulaire' (ID: 48584)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016407931223511696
    2. '   ' → logprob: -4.6414079666137695
    3. ' )' → logprob: -5.7664079666137695
    4. '<|end|>' → logprob: -6.5164079666137695
    5. '       ' → logprob: -6.7664079666137695
    6. '_a' → logprob: -9.14140796661377
    7. ',' → logprob: -9.26640796661377
    8. ' ' → logprob: -9.39140796661377
    9. '<|end|>' → logprob: -9.39140796661377
    10. ' ' → logprob: -9.51640796661377

Token 513: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4181305170059204
    2. '<|end|>' → logprob: -1.1681305170059204
    3. ')' → logprob: -4.293130397796631
    4. 'b' → logprob: -4.543130397796631
    5. '<|end|>' → logprob: -5.793130397796631
    6. '   ' → logprob: -7.043130397796631
    7. '        
' → logprob: -7.043130397796631
    8. ' b' → logprob: -7.293130397796631
    9. ',' → logprob: -8.293130874633789
    10. ' )' → logprob: -9.293130874633789

Token 514: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016599490481894463
    2. ' a' → logprob: -8.750165939331055
    3. 'inv' → logprob: -12.000165939331055
    4. '<|end|>' → logprob: -14.750165939331055
    5. 'c' → logprob: -14.875165939331055
    6. '   ' → logprob: -16.000165939331055
    7. '```' → logprob: -16.125165939331055
    8. '	a' → logprob: -16.375165939331055
    9. ' ' → logprob: -16.625165939331055
    10. '_a' → logprob: -17.125165939331055

Token 515: ' modulo' (ID: 112372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1549786478281021
    2. '<|end|>' → logprob: -2.1549787521362305
    3. ')' → logprob: -3.9049787521362305
    4. '   ' → logprob: -5.9049787521362305
    5. '
' → logprob: -6.4049787521362305
    6. 'b' → logprob: -6.6549787521362305
    7. '<|end|>' → logprob: -7.0299787521362305
    8. '        
' → logprob: -8.27997875213623
    9. ',' → logprob: -8.52997875213623
    10. ')
' → logprob: -9.15497875213623

Token 516: ' mod' (ID: 1812)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21761561930179596
    2. '<|end|>' → logprob: -2.3426156044006348
    3. ')' → logprob: -3.0926156044006348
    4. '   ' → logprob: -3.5926156044006348
    5. 'b' → logprob: -3.8426156044006348
    6. ' b' → logprob: -6.092615604400635
    7. '        
' → logprob: -7.717615604400635
    8. ' ' → logprob: -7.842615604400635
    9. ' )' → logprob: -8.092616081237793
    10. '<|end|>' → logprob: -8.217616081237793

Token 517: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4434829354286194
    2. 'b' → logprob: -1.5684828758239746
    3. '   ' → logprob: -2.0684828758239746
    4. '<|end|>' → logprob: -4.443482875823975
    5. ' b' → logprob: -4.693482875823975
    6. ')' → logprob: -7.818482875823975
    7. '        
' → logprob: -7.818482875823975
    8. ' +' → logprob: -7.943482875823975
    9. '  
' → logprob: -8.443483352661133
    10. '    
' → logprob: -8.443483352661133

Token 519: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02779220975935459
    2. '       ' → logprob: -3.77779221534729
    3. ' b' → logprob: -5.652791976928711
    4. '   ' → logprob: -6.902791976928711
    5. '```' → logprob: -11.652791976928711
    6. '<|end|>' → logprob: -12.402791976928711
    7. '           ' → logprob: -13.027791976928711
    8. '        
' → logprob: -13.277791976928711
    9. 'token' → logprob: -13.902791976928711
    10. '	b' → logprob: -13.902791976928711

Token 520: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017054134514182806
    2. '   ' → logprob: -7.251705646514893
    3. '       ' → logprob: -7.376705646514893
    4. 'term' → logprob: -8.251705169677734
    5. ' b' → logprob: -10.001705169677734
    6. 'temp' → logprob: -10.626705169677734
    7. 'add' → logprob: -11.126705169677734
    8. 'val' → logprob: -12.501705169677734
    9. 'addition' → logprob: -12.501705169677734
    10. 'tmp' → logprob: -12.876705169677734

Token 521: ' *' (ID: 425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0678200721740723
    2. ' *' → logprob: -1.9428200721740723
    3. ' %=' → logprob: -1.9428200721740723
    4. '*' → logprob: -2.4428200721740723
    5. '%' → logprob: -2.6928200721740723
    6. '%=' → logprob: -3.0678200721740723
    7. ')' → logprob: -3.4428200721740723
    8. ' =' → logprob: -3.9428200721740723
    9. '<|end|>' → logprob: -4.317820072174072
    10. 'c' → logprob: -4.567820072174072

Token 522: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.009906954132020473
    2. ' inv' → logprob: -4.634906768798828
    3. 'pow' → logprob: -9.384906768798828
    4. '(inv' → logprob: -10.134906768798828
    5. 'a' → logprob: -12.134906768798828
    6. '   ' → logprob: -12.509906768798828
    7. 'b' → logprob: -12.884906768798828
    8. ' ' → logprob: -13.009906768798828
    9. '=' → logprob: -13.009906768798828
    10. 'in' → logprob: -13.259906768798828

Token 523: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.375000953674316
    3. 'a' → logprob: -15.250000953674316
    4. ' _' → logprob: -19.125
    5. '_c' → logprob: -19.125
    6. '*_' → logprob: -19.5
    7. '```' → logprob: -20.0
    8. '_*' → logprob: -20.0
    9. '`' → logprob: -20.375
    10. '_b' → logprob: -20.5

Token 524: ' donne' (ID: 30004)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.15367728471755981
    2. ')' → logprob: -2.653677225112915
    3. '%' → logprob: -3.028677225112915
    4. ' %=' → logprob: -4.278677463531494
    5. ')%' → logprob: -5.028677463531494
    6. '<|end|>' → logprob: -6.028677463531494
    7. ' )' → logprob: -7.903677463531494
    8. '<|end|>' → logprob: -8.778676986694336
    9. '%c' → logprob: -9.653676986694336
    10. ' %)' → logprob: -9.778676986694336

Token 525: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2342895120382309
    2. '(c' → logprob: -1.609289526939392
    3. ' c' → logprob: -5.234289646148682
    4. 'c' → logprob: -5.734289646148682
    5. '(' → logprob: -8.359289169311523
    6. '(b' → logprob: -11.609289169311523
    7. ')' → logprob: -11.734289169311523
    8. 'b' → logprob: -11.859289169311523
    9. ' the' → logprob: -12.234289169311523
    10. ' ' → logprob: -12.984289169311523

Token 526: ' valeur' (ID: 41664)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45469406247138977
    2. ' %' → logprob: -1.4546940326690674
    3. '%' → logprob: -2.4546940326690674
    4. ')%' → logprob: -3.7046940326690674
    5. ' %=' → logprob: -5.0796942710876465
    6. ' *' → logprob: -5.2046942710876465
    7. '<|end|>' → logprob: -5.3296942710876465
    8. ' )' → logprob: -6.4546942710876465
    9. '%c' → logprob: -6.9546942710876465
    10. '*' → logprob: -7.0796942710876465

Token 528: ' équ' (ID: 18899)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.23750489950180054
    2. ' %' → logprob: -1.7375049591064453
    3. ')' → logprob: -4.362504959106445
    4. '<|end|>' → logprob: -4.362504959106445
    5. ' %=' → logprob: -5.112504959106445
    6. ')%' → logprob: -6.112504959106445
    7. '%c' → logprob: -7.987504959106445
    8. ' *' → logprob: -8.237504959106445
    9. ' mod' → logprob: -9.112504959106445
    10. '```' → logprob: -9.237504959106445

Token 529: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0001097417771234177
    2. 'ival' → logprob: -9.250109672546387
    3. 'v' → logprob: -13.000109672546387
    4. 'ivalent' → logprob: -13.000109672546387
    5. 'i' → logprob: -13.375109672546387
    6. 'ivo' → logprob: -13.750109672546387
    7. 'iva' → logprob: -13.875109672546387
    8. 'a' → logprob: -14.000109672546387
    9. '   ' → logprob: -14.125109672546387
    10. 'val' → logprob: -14.250109672546387

Token 530: 'aut' (ID: 1828)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.07105138897895813
    2. 'e' → logprob: -3.1960513591766357
    3. 'ale' → logprob: -4.446051597595215
    4. 'aut' → logprob: -5.446051597595215
    5. 'c' → logprob: -5.696051597595215
    6. 'v' → logprob: -6.571051597595215
    7. 'al' → logprob: -6.696051597595215
    8. 'aux' → logprob: -6.696051597595215
    9. 'le' → logprob: -6.946051597595215
    10. 'a' → logprob: -7.071051597595215

Token 531: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.1134650707244873
    2. ' c' → logprob: -1.6134650707244873
    3. ' to' → logprob: -2.1134650707244873
    4. ')' → logprob: -2.2384650707244873
    5. '*' → logprob: -3.3634650707244873
    6. ' %' → logprob: -3.3634650707244873
    7. '   ' → logprob: -3.8634650707244873
    8. ' ' → logprob: -3.9884650707244873
    9. '<|end|>' → logprob: -3.9884650707244873
    10. ' à' → logprob: -4.113465309143066

Token 532: ' c' (ID: 274)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5858089327812195
    2. ' c' → logprob: -1.0858089923858643
    3. 'c' → logprob: -2.8358089923858643
    4. '(c' → logprob: -3.0858089923858643
    5. '(' → logprob: -6.710808753967285
    6. '```' → logprob: -10.960808753967285
    7. ' ' → logprob: -11.085808753967285
    8. '0' → logprob: -11.210808753967285
    9. '((' → logprob: -11.210808753967285
    10. '1' → logprob: -11.585808753967285

Token 533: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02636498026549816
    2. '*' → logprob: -4.401364803314209
    3. ' %' → logprob: -5.151364803314209
    4. '   ' → logprob: -5.651364803314209
    5. '%' → logprob: -5.776364803314209
    6. '       ' → logprob: -7.901364803314209
    7. ' ' → logprob: -8.026365280151367
    8. '<|end|>' → logprob: -8.401365280151367
    9. ')' → logprob: -9.401365280151367
    10. ' ' → logprob: -9.526365280151367

Token 534: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004622018430382013
    2. ' a' → logprob: -5.379621982574463
    3. '   ' → logprob: -13.754622459411621
    4. ' ' → logprob: -14.754622459411621
    5. '```' → logprob: -15.879622459411621
    6. '	a' → logprob: -16.504621505737305
    7. '    ' → logprob: -16.754621505737305
    8. '  ' → logprob: -17.129621505737305
    9. '       ' → logprob: -17.629621505737305
    10. '*a' → logprob: -17.879621505737305

Token 535: ' modulo' (ID: 112372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.923234224319458
    2. ' %' → logprob: -1.173234224319458
    3. ' *' → logprob: -1.673234224319458
    4. ')' → logprob: -2.923234224319458
    5. '<|end|>' → logprob: -3.673234224319458
    6. '   ' → logprob: -4.923233985900879
    7. ' ' → logprob: -5.048233985900879
    8. '%' → logprob: -5.048233985900879
    9. ' )' → logprob: -7.048233985900879
    10. '*' → logprob: -7.048233985900879

Token 536: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2818983495235443
    2. ' mod' → logprob: -1.4068983793258667
    3. '(mod' → logprob: -7.281898498535156
    4. '```' → logprob: -10.531898498535156
    5. ' ' → logprob: -11.906898498535156
    6. 'c' → logprob: -12.531898498535156
    7. ' (' → logprob: -12.531898498535156
    8. ')' → logprob: -12.656898498535156
    9. '	mod' → logprob: -12.781898498535156
    10. '_mod' → logprob: -13.031898498535156

Token 537: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.027543067932129
    2. ')' → logprob: -1.402543067932129
    3. '<|end|>' → logprob: -2.027543067932129
    4. ' *' → logprob: -2.152543067932129
    5. '   ' → logprob: -2.902543067932129
    6. ' %' → logprob: -3.027543067932129
    7. '
' → logprob: -4.027543067932129
    8. '        
' → logprob: -5.402543067932129
    9. '%' → logprob: -5.402543067932129
    10. '*' → logprob: -6.027543067932129

Token 538: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5602220296859741
    2. '<|end|>' → logprob: -1.5602220296859741
    3. ' %' → logprob: -1.9352220296859741
    4. ' *' → logprob: -2.0602221488952637
    5. '       ' → logprob: -2.9352221488952637
    6. '%' → logprob: -2.9352221488952637
    7. 'b' → logprob: -3.0602221488952637
    8. '*' → logprob: -3.4352221488952637
    9. ' b' → logprob: -3.6852221488952637
    10. '   ' → logprob: -3.6852221488952637

Token 539: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08024194091558456
    2. ' b' → logprob: -2.9552419185638428
    3. '       ' → logprob: -4.330242156982422
    4. '   ' → logprob: -4.455242156982422
    5. ')' → logprob: -9.705242156982422
    6. '```' → logprob: -10.205242156982422
    7. '	b' → logprob: -10.580242156982422
    8. 'c' → logprob: -10.705242156982422
    9. ' =' → logprob: -10.830242156982422
    10. '+' → logprob: -11.580242156982422

Token 540: ' On' (ID: 2160)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1802920550107956
    2. ' b' → logprob: -1.930292010307312
    3. '   ' → logprob: -3.9302921295166016
    4. '       ' → logprob: -8.430292129516602
    5. '	b' → logprob: -12.805292129516602
    6. '```' → logprob: -13.305292129516602
    7. ' ' → logprob: -13.430292129516602
    8. '    ' → logprob: -13.930292129516602
    9. '  ' → logprob: -14.305292129516602
    10. '+' → logprob: -14.555292129516602

Token 541: ' ajoute' (ID: 91611)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.079480528831482
    2. '+=' → logprob: -1.329480528831482
    3. ' +=' → logprob: -1.329480528831482
    4. '   ' → logprob: -3.3294806480407715
    5. '=' → logprob: -3.4544806480407715
    6. ')' → logprob: -4.5794806480407715
    7. ' b' → logprob: -4.7044806480407715
    8. ' =' → logprob: -5.0794806480407715
    9. 'mod' → logprob: -5.2044806480407715
    10. ' mod' → logprob: -5.3294806480407715

Token 542: ' cette' (ID: 7696)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07024561613798141
    2. '(c' → logprob: -2.9452455043792725
    3. ' c' → logprob: -4.945245742797852
    4. ' b' → logprob: -6.070245742797852
    5. '(b' → logprob: -6.445245742797852
    6. 'b' → logprob: -6.445245742797852
    7. 'c' → logprob: -6.445245742797852
    8. '(' → logprob: -7.070245742797852
    9. '       ' → logprob: -9.195245742797852
    10. '=' → logprob: -10.820245742797852

Token 543: ' valeur' (ID: 41664)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7800085544586182
    2. 'b' → logprob: -1.7800085544586182
    3. ' +' → logprob: -2.030008554458618
    4. '+' → logprob: -3.030008554458618
    5. ' )' → logprob: -3.030008554458618
    6. ')' → logprob: -3.155008554458618
    7. ' +=' → logprob: -3.155008554458618
    8. ' *' → logprob: -4.030008316040039
    9. ' value' → logprob: -4.530008316040039
    10. ' (' → logprob: -5.155008316040039

Token 544: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0365803241729736
    2. ' *' → logprob: -1.1615803241729736
    3. '       ' → logprob: -1.9115803241729736
    4. 'b' → logprob: -2.6615803241729736
    5. '   ' → logprob: -3.1615803241729736
    6. ' b' → logprob: -3.4115803241729736
    7. ' )' → logprob: -5.1615800857543945
    8. ' %' → logprob: -5.4115800857543945
    9. '*' → logprob: -5.6615800857543945
    10. ' to' → logprob: -5.7865800857543945

Token 545: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.313265860080719
    2. 'b' → logprob: -1.3132658004760742
    3. '(b' → logprob: -13.438265800476074
    4. '	b' → logprob: -13.813265800476074
    5. ' (' → logprob: -14.563265800476074
    6. ')b' → logprob: -15.188265800476074
    7. '```' → logprob: -15.563265800476074
    8. ' б' → logprob: -15.813265800476074
    9. '   ' → logprob: -16.18826675415039
    10. ' ' → logprob: -16.31326675415039

Token 546: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.27351561188697815
    2. 'b' → logprob: -1.8985155820846558
    3. ' b' → logprob: -3.3985157012939453
    4. ' +' → logprob: -3.7735157012939453
    5. '   ' → logprob: -4.773515701293945
    6. '+=' → logprob: -4.773515701293945
    7. ' =' → logprob: -5.648515701293945
    8. '+' → logprob: -5.773515701293945
    9. ' 
' → logprob: -5.898515701293945
    10. '       ' → logprob: -6.148515701293945

Token 547: ' ainsi' (ID: 16371)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1734175980091095
    2. 'b' → logprob: -1.923417568206787
    3. '       ' → logprob: -5.298417568206787
    4. '    ' → logprob: -5.923417568206787
    5. '   ' → logprob: -6.548417568206787
    6. ' ' → logprob: -7.048417568206787
    7. ' )' → logprob: -7.298417568206787
    8. ')' → logprob: -7.423417568206787
    9. ' 
' → logprob: -7.923417568206787
    10. '<|end|>' → logprob: -8.173418045043945

Token 548: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.02846512757241726
    2. 'b' → logprob: -3.6534650325775146
    3. ' (' → logprob: -7.153465270996094
    4. '=' → logprob: -7.528465270996094
    5. ' =' → logprob: -7.653465270996094
    6. ' +=' → logprob: -9.278465270996094
    7. '   ' → logprob: -9.528465270996094
    8. '       ' → logprob: -9.528465270996094
    9. '    ' → logprob: -10.403465270996094
    10. '1' → logprob: -10.778465270996094

Token 549: ' accum' (ID: 23148)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19555458426475525
    2. '+=' → logprob: -2.195554494857788
    3. ' =' → logprob: -2.945554494857788
    4. '=' → logprob: -4.320554733276367
    5. ' %=' → logprob: -8.070554733276367
    6. '%=' → logprob: -9.070554733276367
    7. '   ' → logprob: -10.945554733276367
    8. ' ' → logprob: -12.070554733276367
    9. ']+=' → logprob: -13.070554733276367
    10. '+=(' → logprob: -13.695554733276367

Token 550: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.013650818727910519
    2. 'uler' → logprob: -5.638650894165039
    3. 'ul' → logprob: -6.138650894165039
    4. 'ulé' → logprob: -6.138650894165039
    5. '       ' → logprob: -6.263650894165039
    6. '   ' → logprob: -6.638650894165039
    7. 'ue' → logprob: -7.388650894165039
    8. 'u' → logprob: -7.513650894165039
    9. 'ulate' → logprob: -7.763650894165039
    10. ' +=' → logprob: -8.263650894165039

Token 551: ' les' (ID: 1341)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07327963411808014
    2. '(c' → logprob: -2.698279619216919
    3. '(b' → logprob: -6.073279857635498
    4. '(' → logprob: -7.823279857635498
    5. ' c' → logprob: -8.57327938079834
    6. ' b' → logprob: -8.69827938079834
    7. 'b' → logprob: -8.82327938079834
    8. 'c' → logprob: -9.07327938079834
    9. '   ' → logprob: -11.69827938079834
    10. '       ' → logprob: -13.57327938079834

Token 552: ' valeurs' (ID: 73668)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6355903744697571
    2. ' c' → logprob: -1.1355903148651123
    3. '(c' → logprob: -2.2605903148651123
    4. '(' → logprob: -4.135590553283691
    5. 'c' → logprob: -4.135590553283691
    6. ' result' → logprob: -5.510590553283691
    7. ' b' → logprob: -6.135590553283691
    8. ')' → logprob: -6.635590553283691
    9. ' )' → logprob: -6.885590553283691
    10. '+' → logprob: -7.010590553283691

Token 553: ' pour' (ID: 1930)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04894137382507324
    2. '+=' → logprob: -3.2989413738250732
    3. ' +' → logprob: -5.673941612243652
    4. 'b' → logprob: -6.048941612243652
    5. ' b' → logprob: -6.673941612243652
    6. ' =' → logprob: -7.048941612243652
    7. '+' → logprob: -7.173941612243652
    8. '   ' → logprob: -7.298941612243652
    9. '=' → logprob: -7.423941612243652
    10. '<|end|>' → logprob: -8.548941612243652

Token 554: ' tous' (ID: 10688)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.0041139125823975
    2. ' ' → logprob: -1.2541139125823975
    3. 'a' → logprob: -2.2541139125823975
    4. 'b' → logprob: -2.6291139125823975
    5. ' a' → logprob: -2.7541139125823975
    6. ' chaque' → logprob: -3.7541139125823975
    7. ' _' → logprob: -4.129114151000977
    8. '_' → logprob: -4.129114151000977
    9. ' each' → logprob: -4.129114151000977
    10. ' c' → logprob: -4.504114151000977

Token 555: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4786970615386963
    2. 'a' → logprob: -0.9786970615386963
    3. '=' → logprob: -5.853696823120117
    4. ' =' → logprob: -7.603696823120117
    5. ' ' → logprob: -7.978696823120117
    6. '_a' → logprob: -8.353696823120117
    7. ' b' → logprob: -8.853696823120117
    8. '   ' → logprob: -9.228696823120117
    9. '=a' → logprob: -9.228696823120117
    10. ' +=' → logprob: -9.353696823120117

Token 556: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026338033378124237
    2. ' a' → logprob: -3.6513381004333496
    3. ' ' → logprob: -11.651337623596191
    4. '```' → logprob: -11.651337623596191
    5. '_a' → logprob: -11.901337623596191
    6. '_' → logprob: -12.901337623596191
    7. 'elements' → logprob: -13.151337623596191
    8. ' elements' → logprob: -13.151337623596191
    9. '`' → logprob: -13.526337623596191
    10. '  ' → logprob: -13.901337623596191

Token 557: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0093051195144653
    2. 'b' → logprob: -1.5093051195144653
    3. ' =' → logprob: -2.009305000305176
    4. ' b' → logprob: -2.259305000305176
    5. '=' → logprob: -2.384305000305176
    6. '   ' → logprob: -3.259305000305176
    7. '       ' → logprob: -3.759305000305176
    8. '+=' → logprob: -4.259305000305176
    9. ' %=' → logprob: -5.634305000305176
    10. '
' → logprob: -6.759305000305176

Token 558: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.670811653137207
    2. ' A' → logprob: -0.920811653137207
    3. ' b' → logprob: -3.170811653137207
    4. 'b' → logprob: -3.170811653137207
    5. 'a' → logprob: -5.420811653137207
    6. ' a' → logprob: -6.420811653137207
    7. ' ' → logprob: -8.545811653137207
    8. 'c' → logprob: -9.920811653137207
    9. '   ' → logprob: -10.045811653137207
    10. ')' → logprob: -10.420811653137207

Token 559: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7902701497077942
    2. ' +=' → logprob: -0.9152701497077942
    3. ' b' → logprob: -3.0402700901031494
    4. ' +' → logprob: -4.0402703285217285
    5. ' =' → logprob: -4.1652703285217285
    6. '   ' → logprob: -4.4152703285217285
    7. '+=' → logprob: -4.4152703285217285
    8. ' 
' → logprob: -4.7902703285217285
    9. '
' → logprob: -4.9152703285217285
    10. '=' → logprob: -4.9152703285217285

Token 560: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.975912868976593
    2. '   ' → logprob: -1.1009128093719482
    3. ' b' → logprob: -1.4759128093719482
    4. '       ' → logprob: -3.7259128093719482
    5. ' +=' → logprob: -4.475913047790527
    6. ' =' → logprob: -4.475913047790527
    7. '```' → logprob: -5.225913047790527
    8. ' +' → logprob: -6.225913047790527
    9. '<|end|>' → logprob: -6.225913047790527
    10. '=' → logprob: -6.725913047790527

Token 561: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.04908234253525734
    2. ' b' → logprob: -3.0490822792053223
    3. '   ' → logprob: -7.799082279205322
    4. '       ' → logprob: -9.42408275604248
    5. '```' → logprob: -13.54908275604248
    6. '	b' → logprob: -13.79908275604248
    7. ' ' → logprob: -14.92408275604248
    8. '(b' → logprob: -15.17408275604248
    9. '(' → logprob: -15.29908275604248
    10. ' (' → logprob: -15.42408275604248

Token 562: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25693267583847046
    2. ' +=' → logprob: -1.5069327354431152
    3. '=' → logprob: -5.381932735443115
    4. ' =' → logprob: -8.131932258605957
    5. '+' → logprob: -9.756932258605957
    6. '+=(' → logprob: -10.506932258605957
    7. '   ' → logprob: -11.506932258605957
    8. '```' → logprob: -14.006932258605957
    9. ']+=' → logprob: -14.131932258605957
    10. '+='' → logprob: -15.506932258605957

Token 563: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4149952530860901
    2. '(c' → logprob: -1.1649951934814453
    3. ' (' → logprob: -4.164995193481445
    4. ' c' → logprob: -4.414995193481445
    5. '   ' → logprob: -9.664995193481445
    6. '(' → logprob: -10.289995193481445
    7. '	c' → logprob: -12.289995193481445
    8. ' ' → logprob: -13.539995193481445
    9. '((' → logprob: -14.539995193481445
    10. ')c' → logprob: -14.789995193481445

Token 564: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0005034659989178181
    2. '*' → logprob: -7.7505035400390625
    3. ' ' → logprob: -10.250503540039062
    4. '<|end|>' → logprob: -10.375503540039062
    5. ' ' → logprob: -12.500503540039062
    6. ' *
' → logprob: -14.500503540039062
    7. '   ' → logprob: -15.125503540039062
    8. '*b' → logprob: -15.250503540039062
    9. '<|end|>' → logprob: -15.250503540039062
    10. ')' → logprob: -15.375503540039062

Token 565: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0011761783389374614
    2. ' inv' → logprob: -6.751176357269287
    3. '(inv' → logprob: -12.251175880432129
    4. '_inv' → logprob: -15.001175880432129
    5. 'a' → logprob: -15.126175880432129
    6. ' ' → logprob: -15.626175880432129
    7. '.inv' → logprob: -16.376176834106445
    8. '<|end|>' → logprob: -16.376176834106445
    9. '   ' → logprob: -16.876176834106445
    10. 'pow' → logprob: -17.251176834106445

Token 566: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.749814019713085e-06
    2. 'a' → logprob: -12.125006675720215
    3. '_' → logprob: -13.875006675720215
    4. ' _' → logprob: -15.750006675720215
    5. '_i' → logprob: -17.00000762939453
    6. '_b' → logprob: -17.00000762939453
    7. '_ai' → logprob: -17.75000762939453
    8. '_c' → logprob: -18.00000762939453
    9. 'aul' → logprob: -19.00000762939453
    10. '*_' → logprob: -19.00000762939453

Token 567: ' ' (ID: 220)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.26530447602272034
    2. '<|end|>' → logprob: -1.890304446220398
    3. ' ' → logprob: -3.6403045654296875
    4. ' %=' → logprob: -4.1403045654296875
    5. ')' → logprob: -4.3903045654296875
    6. '%' → logprob: -4.5153045654296875
    7. ' )' → logprob: -5.0153045654296875
    8. '<|end|>' → logprob: -5.7653045654296875
    9. 'b' → logprob: -6.2653045654296875
    10. ')%' → logprob: -7.0153045654296875

Token 568: ' #' (ID: 1069)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2247825264930725
    2. '<|end|>' → logprob: -1.8497824668884277
    3. '%' → logprob: -3.9747824668884277
    4. ')' → logprob: -4.724782466888428
    5. ' ' → logprob: -5.474782466888428
    6. ' %=' → logprob: -5.724782466888428
    7. 'b' → logprob: -5.974782466888428
    8. ' b' → logprob: -6.099782466888428
    9. '<|end|>' → logprob: -6.974782466888428
    10. ' )' → logprob: -7.224782466888428

Token 569: ' On' (ID: 2160)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5577030181884766
    2. '<|end|>' → logprob: -1.3077030181884766
    3. ' ' → logprob: -2.8077030181884766
    4. '%' → logprob: -3.0577030181884766
    5. ')' → logprob: -3.5577030181884766
    6. ' )' → logprob: -4.432703018188477
    7. ' %=' → logprob: -5.682703018188477
    8. ')%' → logprob: -7.182703018188477
    9. '1' → logprob: -7.182703018188477
    10. ' (' → logprob: -7.307703018188477

Token 570: ' ajoute' (ID: 91611)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.671701967716217
    2. '%' → logprob: -1.2967019081115723
    3. ' %' → logprob: -2.9217019081115723
    4. '<|end|>' → logprob: -2.9217019081115723
    5. ' b' → logprob: -3.2967019081115723
    6. 'b' → logprob: -3.2967019081115723
    7. ')' → logprob: -3.6717019081115723
    8. '%=' → logprob: -5.171701908111572
    9. '=' → logprob: -6.796701908111572
    10. '%b' → logprob: -7.421701908111572

Token 571: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: ' quantité' (ID: 89219)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19286535680294037
    2. ' b' → logprob: -2.8178653717041016
    3. 'b' → logprob: -3.1928653717041016
    4. ')' → logprob: -3.5678653717041016
    5. ' )' → logprob: -3.9428653717041016
    6. '1' → logprob: -4.317865371704102
    7. '<|end|>' → logprob: -4.567865371704102
    8. '0' → logprob: -7.442865371704102
    9. ' %' → logprob: -7.567865371704102
    10. 'mod' → logprob: -7.692865371704102

Token 573: ' pour' (ID: 1930)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08592721819877625
    2. '<|end|>' → logprob: -2.9609272480010986
    3. '%' → logprob: -4.0859270095825195
    4. ' ' → logprob: -4.7109270095825195
    5. ' %=' → logprob: -6.3359270095825195
    6. '<|end|>' → logprob: -7.0859270095825195
    7. ')' → logprob: -7.5859270095825195
    8. '   ' → logprob: -8.08592700958252
    9. 'b' → logprob: -8.46092700958252
    10. ' 
' → logprob: -8.83592700958252

Token 574: ' cet' (ID: 19505)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9953052997589111
    2. 'b' → logprob: -1.4953052997589111
    3. 'a' → logprob: -2.245305299758911
    4. ' a' → logprob: -2.370305299758911
    5. '<|end|>' → logprob: -2.370305299758911
    6. ')' → logprob: -2.745305299758911
    7. ' ' → logprob: -3.745305299758911
    8. '1' → logprob: -4.745305061340332
    9. 'mod' → logprob: -5.745305061340332
    10. ' mod' → logprob: -6.495305061340332

Token 575: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4103289544582367
    2. ' ' → logprob: -1.660328984260559
    3. 'a' → logprob: -2.0353288650512695
    4. ')' → logprob: -5.2853288650512695
    5. ' )' → logprob: -5.6603288650512695
    6. '  ' → logprob: -6.5353288650512695
    7. '<|end|>' → logprob: -6.6603288650512695
    8. ' '' → logprob: -7.4103288650512695
    9. ' %' → logprob: -7.6603288650512695
    10. '   ' → logprob: -7.6603288650512695

Token 576: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31341254711151123
    2. ' b' → logprob: -1.3134125471115112
    3. ')' → logprob: -9.3134126663208
    4. '```' → logprob: -11.0634126663208
    5. ' ' → logprob: -11.3134126663208
    6. ' )' → logprob: -11.5634126663208
    7. '<|end|>' → logprob: -11.8134126663208
    8. ')b' → logprob: -12.5634126663208
    9. ' (' → logprob: -12.9384126663208
    10. '%b' → logprob: -13.6884126663208

Token 578: ' somme' (ID: 64484)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1764933466911316
    2. 'mod' → logprob: -2.3014934062957764
    3. ' b' → logprob: -2.9264934062957764
    4. ' mod' → logprob: -5.426493167877197
    5. '%' → logprob: -6.051493167877197
    6. ')' → logprob: -7.426493167877197
    7. ' %' → logprob: -8.176493644714355
    8. '%b' → logprob: -9.176493644714355
    9. '1' → logprob: -9.301493644714355
    10. ' modulo' → logprob: -9.551493644714355

Token 579: ' totale' (ID: 52898)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0497667789459229
    2. ' %' → logprob: -1.1747667789459229
    3. ' %=' → logprob: -1.6747667789459229
    4. '<|end|>' → logprob: -2.549766778945923
    5. '   ' → logprob: -3.799766778945923
    6. ' ' → logprob: -4.549766540527344
    7. ')' → logprob: -4.674766540527344
    8. 'b' → logprob: -4.924766540527344
    9. ' b' → logprob: -5.299766540527344
    10. ' 
' → logprob: -5.674766540527344

Token 580: ' b' (ID: 287)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6412832736968994
    2. '%' → logprob: -1.6412832736968994
    3. '   ' → logprob: -2.1412832736968994
    4. '<|end|>' → logprob: -2.5162832736968994
    5. ' b' → logprob: -3.6412832736968994
    6. ' ' → logprob: -4.76628303527832
    7. ' 
' → logprob: -5.01628303527832
    8. ' %=' → logprob: -5.01628303527832
    9. 'b' → logprob: -5.14128303527832
    10. '       ' → logprob: -5.39128303527832

Token 581: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5527550578117371
    2. '%' → logprob: -1.0527551174163818
    3. '%b' → logprob: -3.927755117416382
    4. '   ' → logprob: -4.052754878997803
    5. ' %=' → logprob: -4.177754878997803
    6. ' b' → logprob: -4.802754878997803
    7. 'b' → logprob: -5.052754878997803
    8. '<|end|>' → logprob: -5.927754878997803
    9. ')' → logprob: -6.052754878997803
    10. '
' → logprob: -6.927754878997803

Token 583: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0829564779996872
    2. ' b' → logprob: -3.207956552505493
    3. '```' → logprob: -4.707956314086914
    4. '%' → logprob: -4.832956314086914
    5. ' %' → logprob: -4.832956314086914
    6. '   ' → logprob: -5.332956314086914
    7. ' %=' → logprob: -5.332956314086914
    8. '
' → logprob: -6.082956314086914
    9. '%b' → logprob: -7.457956314086914
    10. ' 
' → logprob: -7.832956314086914

Token 584: ' Enfin' (ID: 85274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00021033499797340482
    2. 'print' → logprob: -9.250210762023926
    3. '   ' → logprob: -9.500210762023926
    4. ' b' → logprob: -10.250210762023926
    5. '```' → logprob: -12.500210762023926
    6. ' print' → logprob: -16.37520980834961
    7. '	b' → logprob: -17.00020980834961
    8. 'return' → logprob: -17.12520980834961
    9. '``' → logprob: -17.25020980834961
    10. '       ' → logprob: -18.50020980834961

Token 585: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16524818539619446
    2. '   ' → logprob: -1.915248155593872
    3. ' b' → logprob: -5.415248394012451
    4. 'print' → logprob: -7.540248394012451
    5. ' print' → logprob: -11.290247917175293
    6. '```' → logprob: -12.040247917175293
    7. '
' → logprob: -12.290247917175293
    8. '	b' → logprob: -12.665247917175293
    9. ' =' → logprob: -13.790247917175293
    10. '=' → logprob: -14.040247917175293

Token 586: ' on' (ID: 402)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02048933319747448
    2. ' b' → logprob: -4.02048921585083
    3. '   ' → logprob: -6.27048921585083
    4. 'print' → logprob: -7.77048921585083
    5. ' print' → logprob: -10.770489692687988
    6. '```' → logprob: -13.020489692687988
    7. '	b' → logprob: -16.520488739013672
    8. ' ' → logprob: -17.270488739013672
    9. '``' → logprob: -19.020488739013672
    10. '  ' → logprob: -19.020488739013672

Token 587: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4840851128101349
    2. 'b' → logprob: -0.9840850830078125
    3. ' print' → logprob: -4.7340850830078125
    4. ' b' → logprob: -7.1090850830078125
    5. '   ' → logprob: -8.484085083007812
    6. '```' → logprob: -9.359085083007812
    7. 'c' → logprob: -10.109085083007812
    8. 'return' → logprob: -12.734085083007812
    9. 'mod' → logprob: -13.109085083007812
    10. '
' → logprob: -13.609085083007812

Token 588: ' la' (ID: 557)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.018366964533925056
    2. 'b' → logprob: -4.018366813659668
    3. '(' → logprob: -8.518366813659668
    4. ' b' → logprob: -11.268366813659668
    5. ' (' → logprob: -13.393366813659668
    6. '   ' → logprob: -13.518366813659668
    7. 'print' → logprob: -14.518366813659668
    8. '(
' → logprob: -15.143366813659668
    9. '	b' → logprob: -15.143366813659668
    10. '```' → logprob: -15.768366813659668

Token 589: ' somme' (ID: 64484)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0016707765171304345
    2. 'print' → logprob: -7.001670837402344
    3. '(b' → logprob: -7.626670837402344
    4. ' b' → logprob: -8.251670837402344
    5. '(' → logprob: -11.751670837402344
    6. 'result' → logprob: -13.501670837402344
    7. ' print' → logprob: -14.001670837402344
    8. '(print' → logprob: -14.876670837402344
    9. ' (' → logprob: -15.751670837402344
    10. '%b' → logprob: -16.376670837402344

Token 590: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02873922698199749
    2. ' %' → logprob: -4.6537394523620605
    3. ' %=' → logprob: -4.9037394523620605
    4. '%' → logprob: -5.1537394523620605
    5. 'print' → logprob: -6.4037394523620605
    6. 'b' → logprob: -6.4037394523620605
    7. '%b' → logprob: -6.7787394523620605
    8. '(' → logprob: -7.7787394523620605
    9. '%=' → logprob: -8.778738975524902
    10. '```' → logprob: -8.778738975524902

Token 591: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7070329189300537
    2. 'print' → logprob: -0.7070329189300537
    3. ' print' → logprob: -4.332033157348633
    4. 'b' → logprob: -7.457033157348633
    5. '```' → logprob: -10.457033157348633
    6. '%' → logprob: -11.332033157348633
    7. ' b' → logprob: -11.457033157348633
    8. '	print' → logprob: -12.082033157348633
    9. '
' → logprob: -12.332033157348633
    10. 'mod' → logprob: -12.707033157348633

Token 592: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7462285161018372
    2. '%' → logprob: -1.2462284564971924
    3. '   ' → logprob: -1.4962284564971924
    4. '%b' → logprob: -5.3712286949157715
    5. '
' → logprob: -5.4962286949157715
    6. ' %=' → logprob: -6.1212286949157715
    7. 'b' → logprob: -6.4962286949157715
    8. '```' → logprob: -6.9962286949157715
    9. 'print' → logprob: -8.121228218078613
    10. '%
' → logprob: -8.246228218078613

Token 593: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.013511823490262032
    2. '(mod' → logprob: -4.888511657714844
    3. ' mod' → logprob: -5.138511657714844
    4. ' (' → logprob: -11.638511657714844
    5. '```' → logprob: -12.388511657714844
    6. '(' → logprob: -12.638511657714844
    7. '	mod' → logprob: -13.138511657714844
    8. '`' → logprob: -13.638511657714844
    9. '_mod' → logprob: -14.638511657714844
    10. '   ' → logprob: -15.263511657714844

Token 594: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5849862098693848
    2. '   ' → logprob: -0.8349862098693848
    3. ' print' → logprob: -5.459986209869385
    4. 'b' → logprob: -5.834986209869385
    5. '```' → logprob: -6.834986209869385
    6. '
' → logprob: -7.584986209869385
    7. '	print' → logprob: -8.834985733032227
    8. '    
' → logprob: -11.084985733032227
    9. '\' → logprob: -11.209985733032227
    10. ' b' → logprob: -11.709985733032227

Token 595: ' garantir' (ID: 48328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015554927289485931
    2. 'b' → logprob: -4.390554904937744
    3. ' print' → logprob: -6.140554904937744
    4. 'maint' → logprob: -8.640555381774902
    5. '   ' → logprob: -8.765555381774902
    6. ' garantir' → logprob: -8.765555381774902
    7. ' assurer' → logprob: -9.390555381774902
    8. ' b' → logprob: -9.890555381774902
    9. ' éviter' → logprob: -10.390555381774902
    10. 's' → logprob: -10.390555381774902

Token 596: ' que' (ID: 661)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4271906912326813
    2. '   ' → logprob: -1.1771906614303589
    3. ' b' → logprob: -3.4271907806396484
    4. '```' → logprob: -5.427190780639648
    5. '(b' → logprob: -6.802190780639648
    6. 'print' → logprob: -7.427190780639648
    7. ' (' → logprob: -8.552190780639648
    8. '
' → logprob: -9.052190780639648
    9. '(' → logprob: -9.302190780639648
    10. 'le' → logprob: -9.677190780639648

Token 597: ' le' (ID: 505)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05513309687376022
    2. ' b' → logprob: -2.930133104324341
    3. '   ' → logprob: -9.555132865905762
    4. '```' → logprob: -10.055132865905762
    5. ' la' → logprob: -10.430132865905762
    6. ' the' → logprob: -10.555132865905762
    7. 'print' → logprob: -10.680132865905762
    8. ' ' → logprob: -11.305132865905762
    9. 'la' → logprob: -11.555132865905762
    10. 'le' → logprob: -11.930132865905762

Token 598: ' résultat' (ID: 62556)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06899793446063995
    2. ' b' → logprob: -3.318997859954834
    3. 'mod' → logprob: -4.568997859954834
    4. '```' → logprob: -4.568997859954834
    5. 'print' → logprob: -6.193997859954834
    6. 'result' → logprob: -6.443997859954834
    7. ' result' → logprob: -6.443997859954834
    8. ' output' → logprob: -6.818997859954834
    9. 'output' → logprob: -7.068997859954834
    10. ' mod' → logprob: -7.318997859954834

Token 599: ' tient' (ID: 69541)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.38124752044677734
    2. '%=' → logprob: -1.3812475204467773
    3. '%' → logprob: -2.7562475204467773
    4. '=' → logprob: -6.506247520446777
    5. ' %' → logprob: -8.131247520446777
    6. 'print' → logprob: -8.881247520446777
    7. '   ' → logprob: -9.256247520446777
    8. ' =' → logprob: -9.881247520446777
    9. '```' → logprob: -9.881247520446777
    10. '%b' → logprob: -10.506247520446777

Token 600: ' dans' (ID: 2671)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7545952796936035
    2. '   ' → logprob: -1.5045952796936035
    3. 'b' → logprob: -1.5045952796936035
    4. '%b' → logprob: -3.1295952796936035
    5. '%=' → logprob: -4.3795952796936035
    6. ' %=' → logprob: -4.6295952796936035
    7. '```' → logprob: -5.3795952796936035
    8. '=' → logprob: -5.5045952796936035
    9. 'print' → logprob: -6.0045952796936035
    10. ' %' → logprob: -6.1295952796936035

Token 601: ' des' (ID: 731)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.28011807799339294
    2. 'b' → logprob: -1.9051181077957153
    3. '```' → logprob: -3.405117988586426
    4. ' mod' → logprob: -3.780117988586426
    5. '(mod' → logprob: -4.155117988586426
    6. ' b' → logprob: -4.530117988586426
    7. ')' → logprob: -5.905117988586426
    8. ' ' → logprob: -6.655117988586426
    9. '10' → logprob: -6.905117988586426
    10. 'print' → logprob: -7.030117988586426

Token 602: ' born' (ID: 12275)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12522125244140625
    2. 'b' → logprob: -2.6252212524414062
    3. 'mod' → logprob: -4.500221252441406
    4. 'range' → logprob: -4.500221252441406
    5. ' range' → logprob: -5.125221252441406
    6. 'int' → logprob: -5.750221252441406
    7. ' limites' → logprob: -5.875221252441406
    8. ' b' → logprob: -6.125221252441406
    9. 'limits' → logprob: -6.375221252441406
    10. '10' → logprob: -6.750221252441406

Token 603: 'es' (ID: 268)
  Prédit: 'aries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -0.6297607421875
    2. 'es' → logprob: -0.8797607421875
    3. 'aires' → logprob: -3.7547607421875
    4. 'ières' → logprob: -4.5047607421875
    5. 'e' → logprob: -4.7547607421875
    6. 'iers' → logprob: -5.8797607421875
    7. 'ées' → logprob: -6.5047607421875
    8. '```' → logprob: -6.7547607421875
    9. 'ries' → logprob: -6.8797607421875
    10. 'ieres' → logprob: -7.5047607421875

Token 604: ' raisonn' (ID: 144705)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3049575090408325
    2. '(' → logprob: -2.179957389831543
    3. '   ' → logprob: -3.179957389831543
    4. '(mod' → logprob: -3.304957389831543
    5. '(b' → logprob: -3.304957389831543
    6. ' (' → logprob: -4.429957389831543
    7. '()%' → logprob: -4.804957389831543
    8. '()
' → logprob: -5.304957389831543
    9. '(c' → logprob: -6.304957389831543
    10. 'b' → logprob: -6.429957389831543

Token 605: 'ables' (ID: 3232)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.23838159441947937
    2. 'e' → logprob: -2.4883816242218018
    3. 'b' → logprob: -2.9883816242218018
    4. ')' → logprob: -3.4883816242218018
    5. '\n' → logprob: -4.738381385803223
    6. 'ère' → logprob: -4.988381385803223
    7. 'mod' → logprob: -5.363381385803223
    8. '=' → logprob: -5.488381385803223
    9. 'es' → logprob: -5.613381385803223
    10. '   ' → logprob: -5.613381385803223

Token 606: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8494599461555481
    2. '()' → logprob: -2.0994598865509033
    3. '```' → logprob: -2.2244598865509033
    4. '(' → logprob: -2.3494598865509033
    5. '(b' → logprob: -2.3494598865509033
    6. 'b' → logprob: -3.3494598865509033
    7. '%b' → logprob: -3.3494598865509033
    8. 'print' → logprob: -3.8494598865509033
    9. '%' → logprob: -3.9744598865509033
    10. '()%' → logprob: -4.099460124969482

Token 607: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.057935651391744614
    2. '   ' → logprob: -3.3079357147216797
    3. '```' → logprob: -4.43293571472168
    4. 'b' → logprob: -4.93293571472168
    5. ' print' → logprob: -7.68293571472168
    6. '``' → logprob: -9.93293571472168
    7. '
' → logprob: -10.68293571472168
    8. '    
' → logprob: -10.93293571472168
    9. '\' → logprob: -11.05793571472168
    10. '  
' → logprob: -11.05793571472168

Token 608: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.709308167453855e-05
    2. ' print' → logprob: -10.250086784362793
    3. '   ' → logprob: -10.500086784362793
    4. '```' → logprob: -10.750086784362793
    5. 'b' → logprob: -12.875086784362793
    6. '
' → logprob: -15.875086784362793
    7. '``' → logprob: -16.87508773803711
    8. '	print' → logprob: -17.25008773803711
    9. '`' → logprob: -19.12508773803711
    10. '\' → logprob: -19.25008773803711

Token 609: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.029807770624756813
    2. '(' → logprob: -3.5298078060150146
    3. ' (' → logprob: -10.779808044433594
    4. '()' → logprob: -10.904808044433594
    5. '((' → logprob: -11.029808044433594
    6. 'b' → logprob: -14.154808044433594
    7. '(
' → logprob: -14.904808044433594
    8. '(B' → logprob: -15.279808044433594
    9. '(c' → logprob: -16.279808044433594
    10. ' b' → logprob: -16.654808044433594

Token 610: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.061972279101610184
    2. '%' → logprob: -2.8119723796844482
    3. ')' → logprob: -12.811972618103027
    4. '%c' → logprob: -14.311972618103027
    5. ' ' → logprob: -14.811972618103027
    6. '%b' → logprob: -15.061972618103027
    7. ' %=' → logprob: -15.186972618103027
    8. ')%' → logprob: -15.936972618103027
    9. '%m' → logprob: -16.43697166442871
    10. ' %)' → logprob: -16.81197166442871

Token 611: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.5776860184123507e-06
    2. ' mod' → logprob: -13.00000286102295
    3. '(mod' → logprob: -15.25000286102295
    4. 'MOD' → logprob: -20.750001907348633
    5. '	mod' → logprob: -21.500001907348633
    6. ' мод' → logprob: -23.375001907348633
    7. '_mod' → logprob: -23.750001907348633
    8. '```' → logprob: -24.500001907348633
    9. 'mods' → logprob: -25.000001907348633
    10. '100' → logprob: -25.500001907348633

Token 612: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006999758537858725
    2. '())' → logprob: -5.006999969482422
    3. '()' → logprob: -8.256999969482422
    4. ' )' → logprob: -11.131999969482422
    5. ')
' → logprob: -12.131999969482422
    6. '))' → logprob: -13.756999969482422
    7. ' ())' → logprob: -14.381999969482422
    8. '')' → logprob: -14.631999969482422
    9. ')#' → logprob: -14.756999969482422
    10. '`)' → logprob: -14.881999969482422

Token 613: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2266203910112381
    2. '<|end|>' → logprob: -1.6016204357147217
    3. '<|end|>' → logprob: -7.976620197296143
    4. '```' → logprob: -8.2266206741333
    5. '#' → logprob: -9.1016206741333
    6. '(' → logprob: -9.4766206741333
    7. '()' → logprob: -9.4766206741333
    8. '[' → logprob: -9.6016206741333
    9. '
' → logprob: -9.7266206741333
    10. ':' → logprob: -10.7266206741333

Token 614: ' Ce' (ID: 14228)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007678175461478531
    2. 'main' → logprob: -7.250767707824707
    3. ' if' → logprob: -10.750767707824707
    4. '```' → logprob: -10.750767707824707
    5. '#' → logprob: -12.125767707824707
    6. '(main' → logprob: -12.625767707824707
    7. '__' → logprob: -13.125767707824707
    8. ')' → logprob: -13.750767707824707
    9. '()' → logprob: -14.000767707824707
    10. '\' → logprob: -14.250767707824707

Token 615: ' bloc' (ID: 51218)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018523624166846275
    2. ' if' → logprob: -6.376852512359619
    3. 'main' → logprob: -10.126852035522461
    4. ' main' → logprob: -10.376852035522461
    5. '()' → logprob: -10.376852035522461
    6. '#' → logprob: -11.126852035522461
    7. '```' → logprob: -11.376852035522461
    8. '_' → logprob: -11.501852035522461
    9. '_main' → logprob: -13.501852035522461
    10. '\' → logprob: -13.751852035522461

Token 616: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003186147892847657
    2. ' if' → logprob: -5.753186225891113
    3. '```' → logprob: -12.253186225891113
    4. ':' → logprob: -13.253186225891113
    5. '_if' → logprob: -14.753186225891113
    6. ':
' → logprob: -14.878186225891113
    7. '
' → logprob: -15.378186225891113
    8. '``' → logprob: -15.753186225891113
    9. '=' → logprob: -16.003185272216797
    10. ' =' → logprob: -16.253185272216797

Token 617: 'nel' (ID: 10085)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00224577309563756
    2. ' if' → logprob: -6.127245903015137
    3. ':' → logprob: -10.877245903015137
    4. '```' → logprob: -11.127245903015137
    5. '_if' → logprob: -11.252245903015137
    6. '__' → logprob: -11.877245903015137
    7. '
' → logprob: -12.877245903015137
    8. ':
' → logprob: -12.877245903015137
    9. '_' → logprob: -14.127245903015137
    10. '_name' → logprob: -14.627245903015137

Token 618: ' permet' (ID: 11798)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001429047784768045
    2. ':' → logprob: -7.751429080963135
    3. ' if' → logprob: -7.876429080963135
    4. '```' → logprob: -8.126428604125977
    5. ':
' → logprob: -8.501428604125977
    6. '
' → logprob: -9.251428604125977
    7. ':

' → logprob: -11.751428604125977
    8. '[' → logprob: -12.626428604125977
    9. '``' → logprob: -12.751428604125977
    10. '<|end|>' → logprob: -13.001428604125977

Token 619: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019502983195707202
    2. ' if' → logprob: -7.376950263977051
    3. 'd' → logprob: -7.501950263977051
    4. '```' → logprob: -7.876950263977051
    5. ' d' → logprob: -8.25195026397705
    6. '__' → logprob: -10.25195026397705
    7. ' de' → logprob: -10.50195026397705
    8. 'de' → logprob: -10.75195026397705
    9. ':' → logprob: -11.12695026397705
    10. '_' → logprob: -11.37695026397705

Token 620: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01868654042482376
    2. '__' → logprob: -4.268686771392822
    3. '```' → logprob: -5.518686771392822
    4. ' if' → logprob: -8.518686294555664
    5. ' __' → logprob: -9.393686294555664
    6. '``' → logprob: -10.018686294555664
    7. 'run' → logprob: -10.518686294555664
    8. 'mettre' → logprob: -10.643686294555664
    9. 'python' → logprob: -10.768686294555664
    10. 's' → logprob: -11.393686294555664

Token 621: ''ex' (ID: 23472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7791702151298523
    2. 'ame' → logprob: -1.404170274734497
    3. '```' → logprob: -2.154170274734497
    4. '__' → logprob: -2.654170274734497
    5. 'omme' → logprob: -3.404170274734497
    6. '``' → logprob: -3.779170274734497
    7. 'ombre' → logprob: -4.529170036315918
    8. 'om' → logprob: -4.529170036315918
    9. 'amed' → logprob: -4.779170036315918
    10. 'ames' → logprob: -5.404170036315918

Token 622: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.07648883014917374
    2. 'ecut' → logprob: -2.701488733291626
    3. 'ec' → logprob: -5.576488971710205
    4. 'é' → logprob: -7.076488971710205
    5. 'écut' → logprob: -7.451488971710205
    6. 'ecute' → logprob: -7.701488971710205
    7. 'e' → logprob: -7.951488971710205
    8. '```' → logprob: -8.826488494873047
    9. 'ecu' → logprob: -9.076488494873047
    10. 'if' → logprob: -9.201488494873047

Token 623: 'uter' (ID: 23469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023796821013092995
    2. 'ecut' → logprob: -4.398797035217285
    3. '__' → logprob: -4.773797035217285
    4. 'écut' → logprob: -7.398797035217285
    5. 'éc' → logprob: -7.523797035217285
    6. 'ecute' → logprob: -8.523797035217285
    7. '```' → logprob: -8.648797035217285
    8. 'ecution' → logprob: -8.898797035217285
    9. 'cut' → logprob: -9.148797035217285
    10. ' if' → logprob: -9.648797035217285

Token 624: ' la' (ID: 557)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04514021426439285
    2. 'if' → logprob: -3.545140266418457
    3. 'le' → logprob: -4.920140266418457
    4. ' le' → logprob: -5.920140266418457
    5. '```' → logprob: -5.920140266418457
    6. 'main' → logprob: -7.170140266418457
    7. ' __' → logprob: -7.295140266418457
    8. '(__' → logprob: -8.545140266418457
    9. '_le' → logprob: -8.670140266418457
    10. 'la' → logprob: -8.795140266418457

Token 625: ' fonction' (ID: 17610)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3470248579978943
    2. ' script' → logprob: -2.097024917602539
    3. 'script' → logprob: -2.472024917602539
    4. 'main' → logprob: -2.722024917602539
    5. 'module' → logprob: -5.472024917602539
    6. ' main' → logprob: -5.472024917602539
    7. 'programme' → logprob: -5.847024917602539
    8. '```' → logprob: -5.972024917602539
    9. ' __' → logprob: -6.222024917602539
    10. 'code' → logprob: -6.597024917602539

Token 626: ' main' (ID: 2758)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05058520659804344
    2. '__' → logprob: -3.1755852699279785
    3. '```' → logprob: -4.9255852699279785
    4. ' if' → logprob: -8.17558479309082
    5. '``' → logprob: -12.17558479309082
    6. '
' → logprob: -12.80058479309082
    7. '**' → logprob: -12.80058479309082
    8. '_if' → logprob: -13.30058479309082
    9. ' __' → logprob: -13.80058479309082
    10. '`' → logprob: -14.17558479309082

Token 627: '()' (ID: 416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020358281210064888
    2. ' if' → logprob: -4.770358085632324
    3. '
' → logprob: -5.270358085632324
    4. ':
' → logprob: -5.895358085632324
    5. '```' → logprob: -6.145358085632324
    6. ':' → logprob: -6.520358085632324
    7. '():
' → logprob: -9.270358085632324
    8. '``' → logprob: -11.020358085632324
    9. '_if' → logprob: -11.645358085632324
    10. ':

' → logprob: -12.020358085632324

Token 628: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00025406808708794415
    2. '
' → logprob: -8.750253677368164
    3. ' if' → logprob: -9.375253677368164
    4. ':
' → logprob: -12.125253677368164
    5. '```' → logprob: -12.250253677368164
    6. ':' → logprob: -15.000253677368164
    7. '``' → logprob: -16.500253677368164
    8. '\
' → logprob: -17.375253677368164
    9. '#if' → logprob: -17.375253677368164
    10. '\' → logprob: -17.875253677368164

Token 629: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007013487163931131
    2. ' if' → logprob: -5.382013320922852
    3. ' si' → logprob: -6.632013320922852
    4. 'si' → logprob: -7.632013320922852
    5. '```' → logprob: -7.757013320922852
    6. ' lorsque' → logprob: -9.507013320922852
    7. 'when' → logprob: -10.507013320922852
    8. ' lorsqu' → logprob: -10.757013320922852
    9. ' when' → logprob: -11.007013320922852
    10. 'dans' → logprob: -11.632013320922852

Token 630: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009114635176956654
    2. ' __' → logprob: -7.000911235809326
    3. '(__' → logprob: -18.875911712646484
    4. '/__' → logprob: -18.875911712646484
    5. 'name' → logprob: -19.500911712646484
    6. '___' → logprob: -20.250911712646484
    7. '```' → logprob: -20.250911712646484
    8. 'if' → logprob: -20.375911712646484
    9. '.__' → logprob: -20.500911712646484
    10. ' ' → logprob: -20.625911712646484

Token 631: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003896815178450197
    2. ' __' → logprob: -8.00039005279541
    3. '```' → logprob: -10.00039005279541
    4. 'name' → logprob: -12.62539005279541
    5. 'if' → logprob: -12.87539005279541
    6. '_name' → logprob: -14.25039005279541
    7. '___' → logprob: -14.37539005279541
    8. '.__' → logprob: -15.00039005279541
    9. '`' → logprob: -15.12539005279541
    10. '.py' → logprob: -15.50039005279541

Token 632: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05528448894619942
    2. 'if' → logprob: -3.0552845001220703
    3. ' __' → logprob: -5.80528450012207
    4. '==' → logprob: -6.18028450012207
    5. ' ==' → logprob: -7.43028450012207
    6. '```' → logprob: -7.93028450012207
    7. 'name' → logprob: -8.68028450012207
    8. ' is' → logprob: -8.93028450012207
    9. '.__' → logprob: -8.93028450012207
    10. 'is' → logprob: -9.18028450012207

Token 633: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -1.6286106983898208e-05
    2. ' __' → logprob: -11.125016212463379
    3. '___' → logprob: -14.000016212463379
    4. 'name' → logprob: -15.000016212463379
    5. '_name' → logprob: -15.500016212463379
    6. '____' → logprob: -17.375017166137695
    7. '```' → logprob: -17.500017166137695
    8. ' "__' → logprob: -17.500017166137695
    9. ''' → logprob: -17.875017166137695
    10. '/__' → logprob: -17.875017166137695

Token 634: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3193562924861908
    2. 'if' → logprob: -1.3193563222885132
    3. ' __' → logprob: -6.194356441497803
    4. ' if' → logprob: -6.319356441497803
    5. '```' → logprob: -7.444356441497803
    6. 'e' → logprob: -7.444356441497803
    7. '_name' → logprob: -8.569355964660645
    8. ' en' → logprob: -8.944355964660645
    9. '_' → logprob: -9.069355964660645
    10. '   ' → logprob: -9.194355964660645

Token 635: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0567811019718647
    2. ' as' → logprob: -3.806781053543091
    3. ' if' → logprob: -4.68178129196167
    4. '__' → logprob: -4.68178129196167
    5. 'as' → logprob: -5.18178129196167
    6. '```' → logprob: -5.30678129196167
    7. ' ==' → logprob: -6.93178129196167
    8. ' directly' → logprob: -7.43178129196167
    9. '==' → logprob: -7.80678129196167
    10. '
' → logprob: -8.056780815124512

Token 636: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0011591468937695026
    2. ' __' → logprob: -6.876159191131592
    3. ' le' → logprob: -9.876158714294434
    4. '_le' → logprob: -10.501158714294434
    5. '```' → logprob: -10.626158714294434
    6. 'le' → logprob: -11.126158714294434
    7. 'un' → logprob: -13.001158714294434
    8. ' un' → logprob: -13.126158714294434
    9. ' "__' → logprob: -14.001158714294434
    10. 'principal' → logprob: -14.001158714294434

Token 637: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002730098320171237
    2. '```' → logprob: -6.377729892730713
    3. '
' → logprob: -7.127729892730713
    4. ' if' → logprob: -8.877730369567871
    5. ':
' → logprob: -9.752730369567871
    6. ':' → logprob: -10.877730369567871
    7. '``' → logprob: -11.877730369567871
    8. '#if' → logprob: -15.377730369567871
    9. '__' → logprob: -15.377730369567871
    10. '

' → logprob: -15.877730369567871

Token 638: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20153437554836273
    2. '
' → logprob: -1.701534390449524
    3. '

' → logprob: -9.576534271240234
    4. ' if' → logprob: -10.326534271240234
    5. '```' → logprob: -11.826534271240234
    6. ':
' → logprob: -12.701534271240234
    7. '\n' → logprob: -12.826534271240234
    8. '  
' → logprob: -13.076534271240234
    9. '
' → logprob: -13.326534271240234
    10. ':' → logprob: -14.451534271240234

Token 639: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00031746976310387254
    2. '
' → logprob: -8.500317573547363
    3. '```' → logprob: -9.125317573547363
    4. ' if' → logprob: -12.250317573547363
    5. '``' → logprob: -15.500317573547363
    6. '

' → logprob: -17.375316619873047
    7. '  
' → logprob: -18.375316619873047
    8. '    
' → logprob: -18.500316619873047
    9. '\' → logprob: -19.375316619873047
    10. '\
' → logprob: -19.625316619873047

Token 640: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4741237461566925
    2. '__' → logprob: -0.9741237163543701
    3. ' ' → logprob: -10.22412395477295
    4. ' ' → logprob: -12.47412395477295
    5. '_name' → logprob: -12.72412395477295
    6. 'name' → logprob: -13.34912395477295
    7. ' ' → logprob: -14.34912395477295
    8. '_' → logprob: -14.47412395477295
    9. '﻿' → logprob: -15.22412395477295
    10. '___' → logprob: -15.34912395477295

Token 641: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2898285388946533
    2. ' ==' → logprob: -2.0398285388946533
    3. 'name' → logprob: -2.5398285388946533
    4. '==' → logprob: -3.1648285388946533
    5. '=="' → logprob: -8.664828300476074
    6. '_' → logprob: -9.039828300476074
    7. ' __' → logprob: -9.289828300476074
    8. '=='' → logprob: -10.914828300476074
    9. 'main' → logprob: -11.164828300476074
    10. '```' → logprob: -11.664828300476074

Token 642: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1756367712223437e-05
    2. '==' → logprob: -11.375011444091797
    3. '__.__' → logprob: -15.875011444091797
    4. ' ==' → logprob: -16.750011444091797
    5. '=="' → logprob: -17.500011444091797
    6. '___' → logprob: -17.625011444091797
    7. '__('' → logprob: -17.875011444091797
    8. '____' → logprob: -18.500011444091797
    9. '__
' → logprob: -19.125011444091797
    10. '__,' → logprob: -19.500011444091797

Token 643: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004923839122056961
    2. '==' → logprob: -5.3799238204956055
    3. ' ==' → logprob: -8.254923820495605
    4. '=="' → logprob: -10.379923820495605
    5. '=='' → logprob: -12.504923820495605
    6. '_' → logprob: -12.879923820495605
    7. '__.__' → logprob: -13.379923820495605
    8. '```' → logprob: -14.129923820495605
    9. '=' → logprob: -14.379923820495605
    10. '__,' → logprob: -14.379923820495605

Token 644: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04865458607673645
    2. ''' → logprob: -3.048654556274414
    3. ' "__' → logprob: -9.673654556274414
    4. ' '__' → logprob: -13.048654556274414
    5. '__' → logprob: -13.298654556274414
    6. '"user' → logprob: -16.548654556274414
    7. '"name' → logprob: -16.673654556274414
    8. '("__' → logprob: -17.298654556274414
    9. ''"' → logprob: -17.548654556274414
    10. '"'' → logprob: -17.673654556274414

Token 645: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -19.125
    3. ' main' → logprob: -20.25
    4. 'ma' → logprob: -20.625
    5. '__' → logprob: -21.0
    6. '_main' → logprob: -22.0
    7. '	main' → logprob: -23.0
    8. 'mai' → logprob: -23.5
    9. 'm' → logprob: -24.0
    10. 'mp' → logprob: -24.375

Token 646: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04859713837504387
    2. '__' → logprob: -3.0485970973968506
    3. '__':
' → logprob: -11.54859733581543
    4. '__["' → logprob: -17.29859733581543
    5. '__("' → logprob: -17.79859733581543
    6. '_' → logprob: -18.29859733581543
    7. '```' → logprob: -18.42359733581543
    8. '__:' → logprob: -18.54859733581543
    9. '__",' → logprob: -19.04859733581543
    10. '___' → logprob: -19.54859733581543

Token 647: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.33225002884864807
    2. ' main' → logprob: -1.3322499990463257
    3. '	main' → logprob: -4.582250118255615
    4. '   ' → logprob: -4.832250118255615
    5. '_main' → logprob: -8.332249641418457
    6. ' ' → logprob: -9.082249641418457
    7. '__' → logprob: -9.207249641418457
    8. '(main' → logprob: -10.582249641418457
    9. '    
' → logprob: -10.832249641418457
    10. '_MAIN' → logprob: -11.082249641418457

Token 648: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -23.625
    4. '.main' → logprob: -25.25
    5. '   ' → logprob: -26.0
    6. '(main' → logprob: -26.0
    7. '_main' → logprob: -26.125
    8. 'Main' → logprob: -26.625
    9. 'mainwindow' → logprob: -28.375
    10. '/main' → logprob: -29.25

Token 649: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 650: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2084272801876068
    2. '<|end|>' → logprob: -1.9584273099899292
    3. 'from' → logprob: -3.3334271907806396
    4. 'import' → logprob: -5.708427429199219
    5. '#' → logprob: -5.958427429199219
    6. ',' → logprob: -6.833427429199219
    7. '.' → logprob: -7.208427429199219
    8. ' ' → logprob: -8.208427429199219
    9. '<|end|>' → logprob: -8.333427429199219
    10. '```' → logprob: -8.458427429199219

Token 651: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 652: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: ' appelle' (ID: 111796)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00028052396373823285
    2. '(' → logprob: -9.250280380249023
    3. ')' → logprob: -9.750280380249023
    4. ' ()' → logprob: -9.875280380249023
    5. '()
' → logprob: -10.625280380249023
    6. '())' → logprob: -10.750280380249023
    7. '()">' → logprob: -12.125280380249023
    8. '();' → logprob: -12.375280380249023
    9. '()

' → logprob: -12.750280380249023
    10. '()"' → logprob: -13.375280380249023

Token 654: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001860174525063485
    2. 'main' → logprob: -8.7501859664917
    3. '()
' → logprob: -10.7501859664917
    4. '(' → logprob: -13.0001859664917
    5. '()`' → logprob: -13.8751859664917
    6. '())' → logprob: -13.8751859664917
    7. '(main' → logprob: -14.1251859664917
    8. '()

' → logprob: -15.6251859664917
    9. '```' → logprob: -15.6251859664917
    10. ')' → logprob: -15.7501859664917

Token 655: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.021063322201371193
    2. ' main' → logprob: -3.8960633277893066
    3. 'function' → logprob: -8.146062850952148
    4. 'fonction' → logprob: -9.271062850952148
    5. 'def' → logprob: -10.271062850952148
    6. ' function' → logprob: -10.896062850952148
    7. '```' → logprob: -11.021062850952148
    8. '(main' → logprob: -11.146062850952148
    9. '	main' → logprob: -11.146062850952148
    10. 'principal' → logprob: -11.771062850952148

Token 656: ' main' (ID: 2758)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 657: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.014300193637609482
    2. 'import' → logprob: -4.764300346374512
    3. '<|end|>' → logprob: -5.639300346374512
    4. ' from' → logprob: -6.639300346374512
    5. ')' → logprob: -7.514300346374512
    6. '#' → logprob: -9.389300346374512
    7. ',' → logprob: -9.514300346374512
    8. '<|end|>' → logprob: -10.639300346374512
    9. '(' → logprob: -10.764300346374512
    10. '.' → logprob: -11.889300346374512

Token 658: ' lancer' (ID: 82697)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.12754572927951813
    2. 'execut' → logprob: -2.5025458335876465
    3. 'l' → logprob: -4.0025458335876465
    4. 'execute' → logprob: -4.7525458335876465
    5. ' ex' → logprob: -5.8775458335876465
    6. 'exec' → logprob: -6.0025458335876465
    7. ' execut' → logprob: -6.3775458335876465
    8. 'calcul' → logprob: -6.7525458335876465
    9. 'execution' → logprob: -7.1275458335876465
    10. 'run' → logprob: -7.5025458335876465

Token 659: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.868328920158092e-05
    2. 'main' → logprob: -10.625028610229492
    3. '()
' → logprob: -12.875028610229492
    4. 'the' → logprob: -14.875028610229492
    5. ')' → logprob: -15.000028610229492
    6. '())' → logprob: -15.375028610229492
    7. '(main' → logprob: -15.500028610229492
    8. '(' → logprob: -15.625028610229492
    9. '()`' → logprob: -16.000028610229492
    10. ' ()' → logprob: -16.625028610229492

Token 660: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.006076687481254339
    2. 'program' → logprob: -5.256076812744141
    3. ' programme' → logprob: -7.506076812744141
    4. 'script' → logprob: -8.50607681274414
    5. 'calcul' → logprob: -9.63107681274414
    6. 'programm' → logprob: -11.13107681274414
    7. 'code' → logprob: -12.13107681274414
    8. 'programma' → logprob: -13.13107681274414
    9. 'main' → logprob: -13.75607681274414
    10. 'Programme' → logprob: -14.38107681274414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 658
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 142
Tokens correctement prédits (top 10): 321
Précision stricte (1ère position): 20.67%
Précision adaptée (1ère position): 21.58%
Précision (top 10): 48.78%
================================================================================
