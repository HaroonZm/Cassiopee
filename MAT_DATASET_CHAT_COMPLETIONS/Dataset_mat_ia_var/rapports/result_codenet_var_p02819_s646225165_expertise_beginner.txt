================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_prime(number):
    if number < 2:
        return False
    i = 2
    while i * i <= number:
        if number % i == 0:
            return False
        i = i + 1
    return True

x = int(input())
while True:
    if is_prime(x):
        print(x)
        break
    x = x + 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_prime' (ID: 98616)
  → Token d'amorce (pas de prédiction)

Token 3: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0622151643037796
    2. '_' → logprob: -2.9372150897979736
    3. '(_' → logprob: -5.812215328216553
    4. '(_:' → logprob: -6.062215328216553
    5. '```' → logprob: -7.187215328216553
    6. '_(' → logprob: -7.312215328216553
    7. '_:' → logprob: -9.312214851379395
    8. '(_)' → logprob: -9.562214851379395
    9. ' (' → logprob: -10.062214851379395
    10. '("("' → logprob: -10.062214851379395

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015949439257383347
    2. ')' → logprob: -4.390949249267578
    3. ':' → logprob: -5.890949249267578
    4. '```' → logprob: -8.140949249267578
    5. '):
' → logprob: -8.890949249267578
    6. '():' → logprob: -9.890949249267578
    7. '(' → logprob: -10.390949249267578
    8. ':)' → logprob: -10.765949249267578
    9. '**' → logprob: -11.265949249267578
    10. '>):' → logprob: -11.390949249267578

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03064940869808197
    2. '   ' → logprob: -4.155649185180664
    3. '```' → logprob: -4.530649185180664
    4. ':
' → logprob: -6.155649185180664
    5. '    
' → logprob: -8.530649185180664
    6. '':' → logprob: -8.530649185180664
    7. '():' → logprob: -8.655649185180664
    8. '":' → logprob: -8.905649185180664
    9. '  
' → logprob: -9.280649185180664
    10. '``' → logprob: -9.280649185180664

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37047162652015686
    2. '```' → logprob: -1.7454715967178345
    3. ' 
' → logprob: -3.370471715927124
    4. ' if' → logprob: -3.495471715927124
    5. '    
' → logprob: -4.245471477508545
    6. '\' → logprob: -4.245471477508545
    7. ':' → logprob: -4.370471477508545
    8. '\n' → logprob: -5.120471477508545
    9. ' ' → logprob: -5.495471477508545
    10. '    ' → logprob: -5.620471477508545

Token 7: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0025774401146918535
    2. 'number' → logprob: -6.252577304840088
    3. ' ' → logprob: -7.627577304840088
    4. ' not' → logprob: -8.752577781677246
    5. '	number' → logprob: -13.502577781677246
    6. '(number' → logprob: -14.252577781677246
    7. ' ' → logprob: -14.502577781677246
    8. '[number' → logprob: -14.877577781677246
    9. 'not' → logprob: -15.502577781677246
    10. '  ' → logprob: -16.00257682800293

Token 8: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6477419137954712
    2. ' <' → logprob: -1.5227419137954712
    3. ' ' → logprob: -1.6477419137954712
    4. ' %' → logprob: -3.5227417945861816
    5. ' ==' → logprob: -4.272741794586182
    6. ' >' → logprob: -4.272741794586182
    7. '<' → logprob: -6.022741794586182
    8. '  ' → logprob: -7.022741794586182
    9. '   ' → logprob: -7.147741794586182
    10. ' >=' → logprob: -7.147741794586182

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740884304046631
    2. '2' → logprob: -0.9740884304046631
    3. '```' → logprob: -11.724088668823242
    4. ' ' → logprob: -13.974088668823242
    5. '=' → logprob: -14.724088668823242
    6. '    ' → logprob: -14.849088668823242
    7. '`' → logprob: -15.099088668823242
    8. '   ' → logprob: -15.099088668823242
    9. '_' → logprob: -15.349088668823242
    10. ''' → logprob: -15.474088668823242

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.266944157890975e-05
    2. ' ' → logprob: -9.625072479248047
    3. '```' → logprob: -12.000072479248047
    4. '   ' → logprob: -15.500072479248047
    5. '``' → logprob: -16.250072479248047
    6. '3' → logprob: -16.625072479248047
    7. '`' → logprob: -16.875072479248047
    8. '(' → logprob: -17.625072479248047
    9. '=' → logprob: -17.625072479248047
    10. '۲' → logprob: -18.000072479248047

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010232082568109035
    2. ':
' → logprob: -4.635231971740723
    3. ':return' → logprob: -8.010231971740723
    4. '   ' → logprob: -9.635231971740723
    5. ' :' → logprob: -10.635231971740723
    6. '       ' → logprob: -10.635231971740723
    7. ':\' → logprob: -11.760231971740723
    8. ' :
' → logprob: -12.135231971740723
    9. '```' → logprob: -12.135231971740723
    10. '):' → logprob: -12.635231971740723

Token 12: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8077139258384705
    2. ':
' → logprob: -1.4327139854431152
    3. '       ' → logprob: -1.8077139854431152
    4. '   ' → logprob: -2.4327139854431152
    5. ' return' → logprob: -3.6827139854431152
    6. ':return' → logprob: -3.6827139854431152
    7. 'return' → logprob: -5.057713985443115
    8. '    ' → logprob: -5.557713985443115
    9. ':\' → logprob: -7.057713985443115
    10. '\n' → logprob: -7.182713985443115

Token 13: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7881362438201904
    2. ' return' → logprob: -1.2881362438201904
    3. '   ' → logprob: -1.4131362438201904
    4. '       ' → logprob: -3.6631362438201904
    5. '    ' → logprob: -8.03813648223877
    6. '```' → logprob: -9.78813648223877
    7. '
' → logprob: -10.28813648223877
    8. ' 
' → logprob: -10.53813648223877
    9. '     ' → logprob: -11.28813648223877
    10. ' ' → logprob: -11.53813648223877

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.00863123033195734
    2. 'False' → logprob: -4.758631229400635
    3. ' True' → logprob: -11.008631706237793
    4. ' ' → logprob: -17.008630752563477
    5. 'True' → logprob: -17.258630752563477
    6. ' false' → logprob: -18.008630752563477
    7. ' None' → logprob: -18.133630752563477
    8. '(False' → logprob: -18.883630752563477
    9. ' ' → logprob: -19.508630752563477
    10. '_false' → logprob: -20.383630752563477

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.613876461982727
    2. '\n' → logprob: -1.113876461982727
    3. '
' → logprob: -2.6138763427734375
    4. '    
' → logprob: -3.3638763427734375
    5. '  
' → logprob: -5.2388763427734375
    6. '```' → logprob: -5.6138763427734375
    7. ':
' → logprob: -6.1138763427734375
    8. '<|end|>' → logprob: -6.2388763427734375
    9. ' 
' → logprob: -6.7388763427734375
    10. '\' → logprob: -6.8638763427734375

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08882374316453934
    2. '
' → logprob: -3.0888237953186035
    3. '    
' → logprob: -3.3388237953186035
    4. '\n' → logprob: -6.4638237953186035
    5. '  
' → logprob: -6.8388237953186035
    6. '```' → logprob: -7.2138237953186035
    7. '   
' → logprob: -8.213823318481445
    8. ' 
' → logprob: -9.713823318481445
    9. ':
' → logprob: -10.463823318481445
    10. '
' → logprob: -10.588823318481445

Token 17: ' i' (ID: 575)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0791690349578857
    2. ':' → logprob: -1.7041690349578857
    3. ':
' → logprob: -1.9541690349578857
    4. '```' → logprob: -2.4541690349578857
    5. '
' → logprob: -2.8291690349578857
    6. '   ' → logprob: -2.8291690349578857
    7. '    
' → logprob: -3.5791690349578857
    8. ' 
' → logprob: -3.7041690349578857
    9. 'for' → logprob: -3.8291690349578857
    10. '\' → logprob: -3.8291690349578857

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16390934586524963
    2. ' ' → logprob: -2.038909435272217
    3. '=' → logprob: -4.288909435272217
    4. ' ==' → logprob: -5.538909435272217
    5. ' in' → logprob: -6.413909435272217
    6. '   ' → logprob: -7.538909435272217
    7. ' +=' → logprob: -8.038908958435059
    8. '  ' → logprob: -8.788908958435059
    9. ' i' → logprob: -8.913908958435059
    10. ' for' → logprob: -9.413908958435059

Token 19: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22542575001716614
    2. ' ' → logprob: -1.6004257202148438
    3. '   ' → logprob: -11.725425720214844
    4. '    ' → logprob: -12.850425720214844
    5. '```' → logprob: -13.975425720214844
    6. '  ' → logprob: -14.350425720214844
    7. ' ' → logprob: -14.725425720214844
    8. '1' → logprob: -16.787925720214844
    9. '     ' → logprob: -16.912925720214844
    10. '       ' → logprob: -16.912925720214844

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.375041007995605
    4. '```' → logprob: -15.875041007995605
    5. '    ' → logprob: -16.37504005432129
    6. '  ' → logprob: -16.50004005432129
    7. '     ' → logprob: -18.06254005432129
    8. '۲' → logprob: -18.06254005432129
    9. '3' → logprob: -18.18754005432129
    10. '２' → logprob: -18.25004005432129

Token 21: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.530663788318634
    2. '<|end|>' → logprob: -1.2806637287139893
    3. '   ' → logprob: -2.5306637287139893
    4. '    ' → logprob: -4.030663967132568
    5. ' ' → logprob: -4.405663967132568
    6. '<|end|>' → logprob: -5.280663967132568
    7. '  ' → logprob: -5.405663967132568
    8. ' :' → logprob: -5.530663967132568
    9. '.' → logprob: -6.155663967132568
    10. ' while' → logprob: -6.530663967132568

Token 23: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.39679184556007385
    2. 'while' (adapté à ' while') → logprob: -1.1467918157577515
    3. '   ' → logprob: -4.896791934967041
    4. ':' → logprob: -7.396791934967041
    5. '    ' → logprob: -7.396791934967041
    6. '```' → logprob: -8.021791458129883
    7. '	while' → logprob: -8.396791458129883
    8. '<|end|>' → logprob: -8.771791458129883
    9. '  ' → logprob: -9.271791458129883
    10. ' ' → logprob: -9.396791458129883

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00471207220107317
    2. ' ' → logprob: -6.004712104797363
    3. 'i' → logprob: -6.129712104797363
    4. '(i' → logprob: -10.504712104797363
    5. ' number' → logprob: -11.754712104797363
    6. ' ' → logprob: -11.879712104797363
    7. '	i' → logprob: -12.129712104797363
    8. ' (' → logprob: -12.379712104797363
    9. 'number' → logprob: -13.504712104797363
    10. '    ' → logprob: -13.754712104797363

Token 25: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.48721620440483093
    2. ' <=' → logprob: -0.9872162342071533
    3. '*i' → logprob: -4.487215995788574
    4. ' **' → logprob: -6.862215995788574
    5. '*' → logprob: -7.987215995788574
    6. ' ' → logprob: -8.737215995788574
    7. '<=' → logprob: -8.862215995788574
    8. '**' → logprob: -9.237215995788574
    9. ' i' → logprob: -11.987215995788574
    10. ' ≤' → logprob: -13.362215995788574

Token 26: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000297685619443655
    2. ' i' → logprob: -8.125297546386719
    3. ' ' → logprob: -14.250297546386719
    4. '	i' → logprob: -14.875297546386719
    5. '*i' → logprob: -15.875297546386719
    6. '2' → logprob: -16.25029754638672
    7. '<|end|>' → logprob: -16.50029754638672
    8. '  ' → logprob: -16.75029754638672
    9. '```' → logprob: -17.75029754638672
    10. '<|end|>' → logprob: -17.75029754638672

Token 27: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.003753051860257983
    2. '<=' → logprob: -5.878753185272217
    3. '<|end|>' → logprob: -7.003753185272217
    4. ' <' → logprob: -11.503752708435059
    5. ' ' → logprob: -11.628752708435059
    6. '<' → logprob: -12.378752708435059
    7. '<|end|>' → logprob: -12.628752708435059
    8. ' <=",' → logprob: -12.753752708435059
    9. ']<=' → logprob: -13.128752708435059
    10. ' ' → logprob: -13.253752708435059

Token 28: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5759417414665222
    2. 'number' → logprob: -0.8259417414665222
    3. '	number' → logprob: -13.575942039489746
    4. ' ' → logprob: -14.575942039489746
    5. '   ' → logprob: -15.825942039489746
    6. ' ' → logprob: -16.20094108581543
    7. '(number' → logprob: -16.32594108581543
    8. '```' → logprob: -16.70094108581543
    9. 'n' → logprob: -17.20094108581543
    10. '[number' → logprob: -17.32594108581543

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.93579563125968e-05
    2. ':
' → logprob: -9.500089645385742
    3. ' :' → logprob: -12.000089645385742
    4. ':**' → logprob: -12.875089645385742
    5. '):' → logprob: -13.125089645385742
    6. '   ' → logprob: -14.375089645385742
    7. '       ' → logprob: -14.375089645385742
    8. ':return' → logprob: -14.375089645385742
    9. ':i' → logprob: -14.750089645385742
    10. '+:' → logprob: -15.250089645385742

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07573951780796051
    2. ':' → logprob: -3.075739622116089
    3. '   ' → logprob: -4.70073938369751
    4. ':
' → logprob: -5.32573938369751
    5. ' :' → logprob: -5.57573938369751
    6. '\' → logprob: -6.45073938369751
    7. '    ' → logprob: -6.45073938369751
    8. '<|end|>' → logprob: -6.57573938369751
    9. ' :
' → logprob: -6.95073938369751
    10. ' ' → logprob: -6.95073938369751

Token 31: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9763321280479431
    2. '   ' → logprob: -1.726332187652588
    3. 'if' (adapté à ' if') → logprob: -1.851332187652588
    4. ' if' → logprob: -2.101332187652588
    5. ' ' → logprob: -3.226332187652588
    6. '<|end|>' → logprob: -3.351332187652588
    7. ':' → logprob: -3.601332187652588
    8. '    ' → logprob: -3.851332187652588
    9. ':
' → logprob: -4.226332187652588
    10. ' :' → logprob: -5.226332187652588

Token 32: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.002525722375139594
    2. 'number' → logprob: -6.002525806427002
    3. ' ' → logprob: -10.002525329589844
    4. '	number' → logprob: -12.752525329589844
    5. '(number' → logprob: -14.002525329589844
    6. ' ' → logprob: -14.502525329589844
    7. '<|end|>' → logprob: -15.877525329589844
    8. ' (' → logprob: -16.127525329589844
    9. '[number' → logprob: -16.252525329589844
    10. 'n' → logprob: -17.252525329589844

Token 33: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.001712901284918189
    2. '%' → logprob: -6.376712799072266
    3. ' ' → logprob: -11.501712799072266
    4. ' ' → logprob: -14.626712799072266
    5. '%i' → logprob: -15.626712799072266
    6. '   ' → logprob: -17.376712799072266
    7. '%s' → logprob: -18.626712799072266
    8. ' %
' → logprob: -19.251712799072266
    9. '```' → logprob: -19.376712799072266
    10. '  ' → logprob: -19.376712799072266

Token 34: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10022132843732834
    2. 'i' → logprob: -2.3502213954925537
    3. '	i' → logprob: -11.850221633911133
    4. ' ' → logprob: -12.100221633911133
    5. ' ' → logprob: -13.975221633911133
    6. '<|end|>' → logprob: -14.225221633911133
    7. '   ' → logprob: -15.725221633911133
    8. '  ' → logprob: -15.975221633911133
    9. '<|end|>' → logprob: -16.475221633911133
    10. '2' → logprob: -17.350221633911133

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006751255132257938
    2. '==' → logprob: -5.00675106048584
    3. ' ' → logprob: -10.38175106048584
    4. '=' → logprob: -13.00675106048584
    5. ' =' → logprob: -14.00675106048584
    6. ' ' → logprob: -14.75675106048584
    7. ' ===' → logprob: -14.88175106048584
    8. ' !=' → logprob: -15.13175106048584
    9. ')==' → logprob: -15.63175106048584
    10. '0' → logprob: -15.88175106048584

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25192955136299133
    2. '0' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.00192928314209
    4. '<|end|>' → logprob: -16.626930236816406
    5. '```' → logprob: -16.626930236816406
    6. '  ' → logprob: -17.376930236816406
    7. ' 
' → logprob: -17.751930236816406
    8. '   ' → logprob: -17.751930236816406
    9. ' ' → logprob: -19.001930236816406
    10. '۰' → logprob: -19.251930236816406

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -18.125335693359375
    4. ' ' → logprob: -19.250335693359375
    5. '۰' → logprob: -19.375335693359375
    6. ' ' → logprob: -20.500335693359375
    7. '   ' → logprob: -20.750335693359375
    8. '٠' → logprob: -20.875335693359375
    9. '０' → logprob: -21.000335693359375
    10. '  ' → logprob: -21.062835693359375

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.3464544432936236e-05
    2. ':
' → logprob: -11.250043869018555
    3. ':return' → logprob: -11.250043869018555
    4. '):' → logprob: -11.750043869018555
    5. ' :' → logprob: -12.000043869018555
    6. '       ' → logprob: -13.000043869018555
    7. ':**' → logprob: -14.250043869018555
    8. '           ' → logprob: -15.875043869018555
    9. '():' → logprob: -16.500043869018555
    10. '<|end|>' → logprob: -16.500043869018555

Token 39: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0077223218977451324
    2. ' return' → logprob: -5.7577223777771
    3. ' 
' → logprob: -6.3827223777771
    4. '       ' → logprob: -6.5077223777771
    5. ' ' → logprob: -8.257721900939941
    6. 'return' → logprob: -8.507721900939941
    7. '            
' → logprob: -8.507721900939941
    8. '   ' → logprob: -9.257721900939941
    9. '```' → logprob: -9.632721900939941
    10. '\' → logprob: -9.632721900939941

Token 40: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1358969360589981
    2. 'return' (adapté à ' return') → logprob: -2.385896921157837
    3. '               ' → logprob: -3.385896921157837
    4. '           ' → logprob: -7.010897159576416
    5. ' 
' → logprob: -8.260896682739258
    6. '            ' → logprob: -11.010896682739258
    7. ' ' → logprob: -11.135896682739258
    8. '   ' → logprob: -12.260896682739258
    9. ' ' → logprob: -12.510896682739258
    10. '                ' → logprob: -12.510896682739258

Token 41: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16022412478923798
    2. 'False' → logprob: -1.9102240800857544
    3. ' True' → logprob: -17.66022491455078
    4. '(False' → logprob: -19.78522491455078
    5. ' ' → logprob: -19.91022491455078
    6. 'True' → logprob: -20.16022491455078
    7. ' false' → logprob: -20.53522491455078
    8. ' ' → logprob: -21.53522491455078
    9. '_false' → logprob: -22.16022491455078
    10. 'F' → logprob: -22.66022491455078

Token 42: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07796771824359894
    2. '
' → logprob: -2.952967643737793
    3. '\n' → logprob: -3.952967643737793
    4. '        
' → logprob: -6.077967643737793
    5. ' 
' → logprob: -7.702967643737793
    6. '    
' → logprob: -8.577967643737793
    7. '\' → logprob: -8.827967643737793
    8. '   ' → logprob: -9.077967643737793
    9. '  
' → logprob: -9.327967643737793
    10. '	' → logprob: -9.827967643737793

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011662358418107033
    2. '\n' → logprob: -5.511662483215332
    3. '        
' → logprob: -6.136662483215332
    4. '
' → logprob: -6.261662483215332
    5. '   ' → logprob: -6.636662483215332
    6. '    
' → logprob: -7.511662483215332
    7. ' 
' → logprob: -7.636662483215332
    8. '	' → logprob: -7.636662483215332
    9. '\' → logprob: -9.011662483215332
    10. '  
' → logprob: -9.011662483215332

Token 44: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01822216808795929
    2. '\n' → logprob: -5.268222332000732
    3. '   ' → logprob: -5.768222332000732
    4. 'i' (adapté à ' i') → logprob: -6.268222332000732
    5. '	' → logprob: -6.393222332000732
    6. ' 
' → logprob: -6.393222332000732
    7. '
' → logprob: -6.518222332000732
    8. ' i' → logprob: -6.518222332000732
    9. '        
' → logprob: -7.268222332000732
    10. '    
' → logprob: -8.393221855163574

Token 45: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.15037310123443604
    2. '+=' → logprob: -2.1503729820251465
    3. '+' → logprob: -3.7753729820251465
    4. ' +' → logprob: -9.400373458862305
    5. ' ' → logprob: -9.650373458862305
    6. '=' → logprob: -10.275373458862305
    7. '<|end|>' → logprob: -10.525373458862305
    8. '++' → logprob: -11.775373458862305
    9. '+='' → logprob: -12.025373458862305
    10. '+="' → logprob: -12.275373458862305

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00280784466303885
    2. 'i' → logprob: -5.8778076171875
    3. ' ' → logprob: -13.1278076171875
    4. '	i' → logprob: -13.8778076171875
    5. '<|end|>' → logprob: -17.6278076171875
    6. '1' → logprob: -17.7528076171875
    7. ' ' → logprob: -18.0028076171875
    8. '+' → logprob: -18.1278076171875
    9. '```' → logprob: -18.5028076171875
    10. '    ' → logprob: -19.3778076171875

Token 47: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16024291515350342
    2. ' +' → logprob: -1.9102429151535034
    3. ' ' → logprob: -11.160243034362793
    4. '1' → logprob: -13.285243034362793
    5. ' plus' → logprob: -13.660243034362793
    6. ' +
' → logprob: -14.160243034362793
    7. '++' → logprob: -14.535243034362793
    8. '+
' → logprob: -15.410243034362793
    9. '＋' → logprob: -16.410242080688477
    10. '+i' → logprob: -16.535242080688477

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.87523078918457
    4. '```' → logprob: -18.87523078918457
    5. ' ' → logprob: -20.37523078918457
    6. '  ' → logprob: -20.37523078918457
    7. '<|end|>' → logprob: -20.50023078918457
    8. '۱' → logprob: -21.50023078918457
    9. '１' → logprob: -21.62523078918457
    10. '    ' → logprob: -21.87523078918457

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.375001907348633
    4. '```' → logprob: -20.500001907348633
    5. '  ' → logprob: -20.625001907348633
    6. '۱' → logprob: -22.000001907348633
    7. '１' → logprob: -22.750001907348633
    8. '१' → logprob: -22.875001907348633
    9. '<|end|>' → logprob: -22.875001907348633
    10. ' ' → logprob: -23.125001907348633

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5945894122123718
    2. '
' → logprob: -0.8445894122123718
    3. '    
' → logprob: -4.8445892333984375
    4. 'return' → logprob: -5.7195892333984375
    5. ' 
' → logprob: -5.8445892333984375
    6. '  
' → logprob: -5.8445892333984375
    7. '\n' → logprob: -7.4695892333984375
    8. ' return' → logprob: -7.9695892333984375
    9. '```' → logprob: -8.594589233398438
    10. ':return' → logprob: -9.344589233398438

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032774105202406645
    2. 'return' → logprob: -5.87827730178833
    3. '
' → logprob: -8.128277778625488
    4. ' return' → logprob: -9.253277778625488
    5. '    
' → logprob: -10.003277778625488
    6. '```' → logprob: -10.753277778625488
    7. '  
' → logprob: -12.128277778625488
    8. ' 
' → logprob: -12.628277778625488
    9. ':return' → logprob: -13.003277778625488
    10. ' ' → logprob: -13.753277778625488

Token 52: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033677080646157265
    2. '   ' → logprob: -5.753367900848389
    3. ' return' → logprob: -8.62836742401123
    4. 'r' → logprob: -12.12836742401123
    5. '```' → logprob: -13.12836742401123
    6. '    
' → logprob: -13.87836742401123
    7. ':return' → logprob: -14.00336742401123
    8. '	return' → logprob: -14.37836742401123
    9. '  ' → logprob: -15.00336742401123
    10. ' ' → logprob: -15.12836742401123

Token 53: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132617771625519
    2. ' True' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.438261032104492
    4. '(True' → logprob: -17.938261032104492
    5. '=True' → logprob: -20.313261032104492
    6. ' Tru' → logprob: -20.313261032104492
    7. ' ' → logprob: -20.938261032104492
    8. 'Tr' → logprob: -21.188261032104492
    9. ' ' → logprob: -21.188261032104492
    10. 'False' → logprob: -21.813261032104492

Token 54: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.449728786945343
    2. '\n' → logprob: -1.6997287273406982
    3. '```' → logprob: -2.8247287273406982
    4. '<|end|>' → logprob: -2.8247287273406982
    5. '#' → logprob: -3.5747287273406982
    6. 'n' → logprob: -4.574728965759277
    7. '\' → logprob: -4.824728965759277
    8. 'newline' → logprob: -5.449728965759277
    9. '

' → logprob: -5.949728965759277
    10. '' → logprob: -6.074728965759277

Token 55: 'x' (ID: 87)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4798413813114166
    2. '\n' → logprob: -1.6048413515090942
    3. '```' → logprob: -3.229841470718384
    4. ' ' → logprob: -3.604841470718384
    5. '
' → logprob: -3.729841470718384
    6. 'n' → logprob: -3.854841470718384
    7. '\' → logprob: -4.104841232299805
    8. '' → logprob: -4.104841232299805
    9. '<|end|>' → logprob: -4.229841232299805
    10. 'd' → logprob: -5.104841232299805

Token 56: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08485393226146698
    2. ' =' → logprob: -3.0848538875579834
    3. '=' → logprob: -3.5848538875579834
    4. ' ==' → logprob: -5.9598541259765625
    5. ' >' → logprob: -6.2098541259765625
    6. '<|end|>' → logprob: -7.0848541259765625
    7. '  ' → logprob: -7.7098541259765625
    8. ')' → logprob: -7.8348541259765625
    9. '.' → logprob: -8.209854125976562
    10. '>' → logprob: -8.459854125976562

Token 57: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16584159433841705
    2. ' int' → logprob: -2.040841579437256
    3. '10' → logprob: -4.040841579437256
    4. 'int' → logprob: -5.415841579437256
    5. '1' → logprob: -8.540842056274414
    6. '20' → logprob: -8.790842056274414
    7. '2' → logprob: -8.790842056274414
    8. '5' → logprob: -8.790842056274414
    9. ' input' → logprob: -9.415842056274414
    10. ' is' → logprob: -10.790842056274414

Token 58: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.635164754698053e-05
    2. '(x' → logprob: -10.750066757202148
    3. ' (' → logprob: -11.250066757202148
    4. '('' → logprob: -11.875066757202148
    5. '()' → logprob: -12.125066757202148
    6. '<|end|>' → logprob: -12.125066757202148
    7. '(input' → logprob: -12.250066757202148
    8. '(
' → logprob: -13.000066757202148
    9. '(user' → logprob: -13.375066757202148
    10. ' ' → logprob: -13.625066757202148

Token 59: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1501196324825287
    2. '()' → logprob: -2.0251195430755615
    3. '("("' → logprob: -6.150119781494141
    4. '('' → logprob: -6.275119781494141
    5. '())' → logprob: -6.525119781494141
    6. ')' → logprob: -7.150119781494141
    7. '("")' → logprob: -7.900119781494141
    8. '(()' → logprob: -8.90011978149414
    9. '(
' → logprob: -9.02511978149414
    10. '(""))' → logprob: -9.27511978149414

Token 60: 'while' (ID: 7032)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44844871759414673
    2. 'print' → logprob: -1.073448657989502
    3. '
' → logprob: -4.698448657989502
    4. '\n' → logprob: -5.448448657989502
    5. ' if' → logprob: -6.198448657989502
    6. ' 
' → logprob: -6.823448657989502
    7. '\' → logprob: -7.073448657989502
    8. '  
' → logprob: -7.448448657989502
    9. 'for' → logprob: -8.07344913482666
    10. '```' → logprob: -8.69844913482666

Token 61: ' True' (ID: 6432)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04574473574757576
    2. ' ' → logprob: -3.1707446575164795
    3. 'x' → logprob: -5.920744895935059
    4. '  ' → logprob: -10.670744895935059
    5. ' True' → logprob: -11.670744895935059
    6. ' is' → logprob: -11.795744895935059
    7. ' not' → logprob: -12.045744895935059
    8. '<|end|>' → logprob: -12.545744895935059
    9. ' (' → logprob: -12.795744895935059
    10. ' ' → logprob: -13.295744895935059

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011105302110081539
    2. ' :' → logprob: -9.750110626220703
    3. ':
' → logprob: -10.000110626220703
    4. '():' → logprob: -13.000110626220703
    5. '):' → logprob: -13.500110626220703
    6. ':**' → logprob: -14.000110626220703
    7. '   ' → logprob: -14.375110626220703
    8. ',' → logprob: -14.375110626220703
    9. '<|end|>' → logprob: -15.375110626220703
    10. ':

' → logprob: -15.625110626220703

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013115170411765575
    2. '    
' → logprob: -4.638115406036377
    3. ' 
' → logprob: -6.513115406036377
    4. '    ' → logprob: -7.138115406036377
    5. ' if' → logprob: -8.263114929199219
    6. ' x' → logprob: -8.888114929199219
    7. 'x' → logprob: -9.013114929199219
    8. '   
' → logprob: -9.013114929199219
    9. '     
' → logprob: -9.513114929199219
    10. ':' → logprob: -9.513114929199219

Token 64: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08505814522504807
    2. '   ' → logprob: -3.4600582122802734
    3. 'if' (adapté à ' if') → logprob: -3.8350582122802734
    4. ' x' → logprob: -3.9600582122802734
    5. 'x' → logprob: -4.960058212280273
    6. '    ' → logprob: -6.460058212280273
    7. '    
' → logprob: -7.835058212280273
    8. ' ' → logprob: -8.710058212280273
    9. ' 
' → logprob: -9.335058212280273
    10. '  ' → logprob: -10.210058212280273

Token 65: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002715714741498232
    2. 'is' → logprob: -6.627715587615967
    3. ' not' → logprob: -6.627715587615967
    4. ' x' → logprob: -10.502716064453125
    5. 'not' → logprob: -10.627716064453125
    6. 'x' → logprob: -11.752716064453125
    7. ' ' → logprob: -12.252716064453125
    8. ' ' → logprob: -15.002716064453125
    9. '	is' → logprob: -15.377716064453125
    10. '<|end|>' → logprob: -15.627716064453125

Token 66: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.3915141355246305e-05
    2. '_' → logprob: -11.00002384185791
    3. '_pr' → logprob: -12.12502384185791
    4. ' _' → logprob: -13.62502384185791
    5. 'prime' → logprob: -15.50002384185791
    6. '_p' → logprob: -16.250024795532227
    7. '_Pr' → logprob: -16.500024795532227
    8. '_pal' → logprob: -16.875024795532227
    9. '_pi' → logprob: -17.625024795532227
    10. '```' → logprob: -17.875024795532227

Token 67: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2014305740594864
    2. '(' → logprob: -1.7014305591583252
    3. ' (' → logprob: -11.326430320739746
    4. 'x' → logprob: -13.326430320739746
    5. '(
' → logprob: -13.826430320739746
    6. '(s' → logprob: -14.576430320739746
    7. '(n' → logprob: -14.576430320739746
    8. '(i' → logprob: -15.076430320739746
    9. '(number' → logprob: -15.451430320739746
    10. '(

' → logprob: -15.576430320739746

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006597769097425044
    2. ' ):' → logprob: -7.750659942626953
    3. '):
' → logprob: -9.125659942626953
    4. ':' → logprob: -9.375659942626953
    5. ')' → logprob: -11.000659942626953
    6. '+' → logprob: -11.250659942626953
    7. '():' → logprob: -12.625659942626953
    8. '+:' → logprob: -14.250659942626953
    9. '):

' → logprob: -15.250659942626953
    10. '==' → logprob: -15.625659942626953

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029993221163749695
    2. '   ' → logprob: -4.154993057250977
    3. ':' → logprob: -4.529993057250977
    4. ':
' → logprob: -6.404993057250977
    5. '```' → logprob: -7.779993057250977
    6. '    
' → logprob: -7.904993057250977
    7. '        
' → logprob: -9.154993057250977
    8. '\n' → logprob: -9.279993057250977
    9. '\' → logprob: -9.279993057250977
    10. '    ' → logprob: -9.404993057250977

Token 70: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016209736466407776
    2. '   ' → logprob: -5.016209602355957
    3. 'print' (adapté à ' print') → logprob: -5.016209602355957
    4. 'break' → logprob: -6.391209602355957
    5. ' break' → logprob: -7.266209602355957
    6. ' print' → logprob: -7.891209602355957
    7. '```' → logprob: -10.641209602355957
    8. '
' → logprob: -11.391209602355957
    9. '	break' → logprob: -11.766209602355957
    10. '           ' → logprob: -12.016209602355957

Token 71: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.251930832862854
    2. '(' → logprob: -1.501930832862854
    3. '(
' → logprob: -13.751931190490723
    4. '()' → logprob: -16.001930236816406
    5. '((' → logprob: -16.126930236816406
    6. '("("' → logprob: -16.126930236816406
    7. '('' → logprob: -16.376930236816406
    8. '(i' → logprob: -16.626930236816406
    9. '(

' → logprob: -16.751930236816406
    10. 'x' → logprob: -16.876930236816406

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519923746585846
    2. ')
' → logprob: -1.5019923448562622
    3. '       ' → logprob: -10.501992225646973
    4. ')
' → logprob: -11.126992225646973
    5. '   ' → logprob: -11.876992225646973
    6. ' )
' → logprob: -12.001992225646973
    7. ' )' → logprob: -12.626992225646973
    8. ')`
' → logprob: -13.501992225646973
    9. ',' → logprob: -14.501992225646973
    10. ')\
' → logprob: -14.626992225646973

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05190112441778183
    2. '   ' → logprob: -3.05190110206604
    3. '    
' → logprob: -6.426901340484619
    4. 'break' → logprob: -7.801901340484619
    5. '
' → logprob: -8.051900863647461
    6. '        
' → logprob: -8.426900863647461
    7. ' break' → logprob: -8.801900863647461
    8. '```' → logprob: -9.176900863647461
    9. '<|end|>' → logprob: -9.301900863647461
    10. '           ' → logprob: -9.551900863647461

Token 74: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3944185674190521
    2. '       ' → logprob: -1.1444185972213745
    3. ' break' → logprob: -4.894418716430664
    4. '   ' → logprob: -11.269418716430664
    5. '	break' → logprob: -11.769418716430664
    6. '```' → logprob: -11.894418716430664
    7. '        
' → logprob: -13.894418716430664
    8. ' ' → logprob: -14.394418716430664
    9. '           ' → logprob: -14.894418716430664
    10. 'br' → logprob: -14.894418716430664

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002432620618492365
    2. 'x' → logprob: -6.877432823181152
    3. '    
' → logprob: -6.877432823181152
    4. '
' → logprob: -8.377432823181152
    5. '```' → logprob: -10.252432823181152
    6. '  
' → logprob: -10.502432823181152
    7. '<|end|>' → logprob: -10.752432823181152
    8. ' 
' → logprob: -11.127432823181152
    9. '   
' → logprob: -11.502432823181152
    10. ' ' → logprob: -11.877432823181152

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.113290095934644e-05
    2. 'x' → logprob: -9.625081062316895
    3. '    
' → logprob: -11.625081062316895
    4. '
' → logprob: -12.250081062316895
    5. '<|end|>' → logprob: -14.500081062316895
    6. '```' → logprob: -14.750081062316895
    7. '  
' → logprob: -16.62508201599121
    8. '#' → logprob: -16.62508201599121
    9. ' ' → logprob: -17.00008201599121
    10. '<|end|>' → logprob: -17.12508201599121

Token 77: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -7.004696090007201e-05
    2. '   ' → logprob: -9.750069618225098
    3. ' x' → logprob: -11.375069618225098
    4. '1' → logprob: -16.375070571899414
    5. '    
' → logprob: -16.375070571899414
    6. ' 
' → logprob: -18.000070571899414
    7. '```' → logprob: -18.250070571899414
    8. '
' → logprob: -18.625070571899414
    9. ' ' → logprob: -19.125070571899414
    10. '	x' → logprob: -19.875070571899414

Token 78: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3688725531101227
    2. ' +=' → logprob: -1.3688725233078003
    3. '+' → logprob: -3.61887264251709
    4. '=' → logprob: -3.61887264251709
    5. ' =' → logprob: -7.74387264251709
    6. '   ' → logprob: -11.74387264251709
    7. ' ' → logprob: -11.74387264251709
    8. ' +' → logprob: -11.74387264251709
    9. '```' → logprob: -12.61887264251709
    10. '1' → logprob: -13.11887264251709

Token 79: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02975083328783512
    2. 'x' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.77975082397461
    4. '	x' → logprob: -16.27975082397461
    5. '+' → logprob: -16.52975082397461
    6. '1' → logprob: -18.90475082397461
    7. ' +' → logprob: -19.90475082397461
    8. '>x' → logprob: -20.52975082397461
    9. '(x' → logprob: -20.65475082397461
    10. '<|end|>' → logprob: -20.77975082397461

Token 80: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024758970830589533
    2. ' +' → logprob: -6.002475738525391
    3. '1' → logprob: -15.75247573852539
    4. ' plus' → logprob: -17.87747573852539
    5. '+x' → logprob: -17.87747573852539
    6. '++' → logprob: -18.87747573852539
    7. '<|end|>' → logprob: -19.12747573852539
    8. '+
' → logprob: -19.12747573852539
    9. ' ' → logprob: -19.25247573852539
    10. '+i' → logprob: -19.25247573852539

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -16.375139236450195
    4. '```' → logprob: -16.875139236450195
    5. '   ' → logprob: -17.250139236450195
    6. '2' → logprob: -18.000139236450195
    7. '  ' → logprob: -18.125139236450195
    8. ' ' → logprob: -19.062639236450195
    9. '<|end|>' → logprob: -19.437639236450195
    10. '１' → logprob: -19.500139236450195

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -17.6250057220459
    4. '```' → logprob: -18.3125057220459
    5. '2' → logprob: -19.1875057220459
    6. '１' → logprob: -19.1875057220459
    7. '  ' → logprob: -19.6875057220459
    8. '   ' → logprob: -19.6875057220459
    9. '१' → logprob: -19.8125057220459
    10. '<|end|>' → logprob: -20.1250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 46.25%
Précision adaptée (1ère position): 51.25%
Précision (top 10): 91.25%
================================================================================
