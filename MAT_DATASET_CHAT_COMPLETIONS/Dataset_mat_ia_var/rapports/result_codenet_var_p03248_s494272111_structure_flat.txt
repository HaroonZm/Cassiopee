================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = '0'
s += input()
N = len(s) - 1
ok = True
if s[N] == '1' or s[1] == '0':
    print(-1)
    ok = False
if ok:
    l = 1
    r = N - 1
    while l <= r:
        if s[l] != s[r]:
            print(-1)
            ok = False
            break
        l += 1
        r -= 1
if ok:
    root = 1
    i = 2
    while i <= N:
        print(str(root) + ' ' + str(i))
        if s[i - 1] == '1':
            root = i
        i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' '' (ID: 461)
  → Token d'amorce (pas de prédiction)

Token 3: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10937892645597458
    2. '"' → logprob: -2.9843788146972656
    3. ''''' → logprob: -3.2343788146972656
    4. 'a' → logprob: -5.609378814697266
    5. '\'' → logprob: -6.484378814697266
    6. '"""' → logprob: -6.609378814697266
    7. '''' → logprob: -6.859378814697266
    8. 'H' → logprob: -7.609378814697266
    9. 'Hello' → logprob: -7.734378814697266
    10. '#' → logprob: -7.859378814697266

Token 4: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10246434062719345
    2. '1' → logprob: -3.477464437484741
    3. '0' → logprob: -3.602464437484741
    4. ''''' → logprob: -3.727464437484741
    5. '.' → logprob: -5.102464199066162
    6. '2' → logprob: -6.602464199066162
    7. 'x' → logprob: -6.727464199066162
    8. '+' → logprob: -6.727464199066162
    9. '=' → logprob: -6.852464199066162
    10. '3' → logprob: -7.352464199066162

Token 5: 's' (ID: 82)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024635253939777613
    2. '[' → logprob: -6.502463340759277
    3. '=' → logprob: -7.877463340759277
    4. '.' → logprob: -8.502463340759277
    5. '0' → logprob: -9.127463340759277
    6. ' +' → logprob: -9.502463340759277
    7. '*' → logprob: -9.627463340759277
    8. '+=' → logprob: -10.627463340759277
    9. 's' → logprob: -10.752463340759277
    10. '1' → logprob: -11.127463340759277

Token 6: ' +=' (ID: 2757)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49426957964897156
    2. '+' → logprob: -1.369269609451294
    3. ''' → logprob: -2.494269609451294
    4. ' ' → logprob: -4.244269371032715
    5. '.' → logprob: -4.494269371032715
    6. '1' → logprob: -4.869269371032715
    7. '#' → logprob: -5.369269371032715
    8. '```' → logprob: -6.119269371032715
    9. '2' → logprob: -6.494269371032715
    10. '\n' → logprob: -6.619269371032715

Token 7: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012369905598461628
    2. ' '' → logprob: -4.6373701095581055
    3. '"' → logprob: -6.0123701095581055
    4. ''s' → logprob: -10.012370109558105
    5. ''.' → logprob: -11.137370109558105
    6. '"'' → logprob: -11.262370109558105
    7. ''"' → logprob: -11.762370109558105
    8. ' ' → logprob: -11.887370109558105
    9. ''''' → logprob: -12.012370109558105
    10. ' "' → logprob: -12.012370109558105

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16844482719898224
    2. ''' → logprob: -2.043444871902466
    3. '('' → logprob: -4.418444633483887
    4. '[' → logprob: -5.543444633483887
    5. '()' → logprob: -6.043444633483887
    6. '"' → logprob: -6.168444633483887
    7. '`' → logprob: -6.543444633483887
    8. '```' → logprob: -6.543444633483887
    9. '(
' → logprob: -7.793444633483887
    10. '("("' → logprob: -7.918444633483887

Token 9: 'N' (ID: 45)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5693753957748413
    2. '.' → logprob: -1.8193753957748413
    3. '[' → logprob: -2.069375514984131
    4. '<|end|>' → logprob: -2.819375514984131
    5. ')' → logprob: -3.444375514984131
    6. '.strip' → logprob: -4.319375514984131
    7. '*' → logprob: -4.819375514984131
    8. ''' → logprob: -4.944375514984131
    9. '#' → logprob: -5.069375514984131
    10. ' ' → logprob: -5.444375514984131

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22207297384738922
    2. '=' → logprob: -2.3470730781555176
    3. '.' → logprob: -3.0970730781555176
    4. '[' → logprob: -3.9720730781555176
    5. '_' → logprob: -5.097073078155518
    6. '(' → logprob: -5.597073078155518
    7. '+' → logprob: -5.847073078155518
    8. '-' → logprob: -5.847073078155518
    9. '=int' → logprob: -5.972073078155518
    10. ''' → logprob: -6.097073078155518

Token 11: ' len' (ID: 4631)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05938861891627312
    2. ' len' → logprob: -3.3093886375427246
    3. 'int' → logprob: -3.9343886375427246
    4. 'len' → logprob: -7.434388637542725
    5. ' ' → logprob: -7.559388637542725
    6. ' s' → logprob: -7.934388637542725
    7. 's' → logprob: -10.184388160705566
    8. '10' → logprob: -11.059388160705566
    9. '1' → logprob: -11.559388160705566
    10. '0' → logprob: -11.684388160705566

Token 12: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00408053956925869
    2. '(' → logprob: -5.504080772399902
    3. 's' → logprob: -13.379080772399902
    4. '(
' → logprob: -15.129080772399902
    5. ' (' → logprob: -15.379080772399902
    6. '(n' → logprob: -17.879079818725586
    7. '(input' → logprob: -18.504079818725586
    8. '('' → logprob: -18.629079818725586
    9. '(

' → logprob: -18.879079818725586
    10. '(S' → logprob: -19.129079818725586

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. ' )' → logprob: -11.375022888183594
    3. '')' → logprob: -12.500022888183594
    4. '))' → logprob: -13.125022888183594
    5. '`)' → logprob: -13.250022888183594
    6. ')s' → logprob: -13.875022888183594
    7. ')
' → logprob: -14.125022888183594
    8. '[' → logprob: -14.375022888183594
    9. 's' → logprob: -14.750022888183594
    10. ')`' → logprob: -15.125022888183594

Token 14: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5803540349006653
    2. '[' → logprob: -1.7053539752960205
    3. '+' → logprob: -2.7053539752960205
    4. '-' → logprob: -2.8303539752960205
    5. ' ' → logprob: -3.7053539752960205
    6. 'if' → logprob: -4.0803542137146
    7. ')' → logprob: -4.5803542137146
    8. ' if' → logprob: -4.7053542137146
    9. '*' → logprob: -4.8303542137146
    10. '>' → logprob: -4.8303542137146

Token 15: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007638567127287388
    2. ' ' → logprob: -4.882638454437256
    3. '2' → logprob: -10.382638931274414
    4. 's' → logprob: -14.632638931274414
    5. '0' → logprob: -14.882638931274414
    6. ' s' → logprob: -16.320138931274414
    7. '3' → logprob: -16.445138931274414
    8. ' ' → logprob: -16.820138931274414
    9. '10' → logprob: -17.007638931274414
    10. 'len' → logprob: -17.070138931274414

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.978233846486546e-05
    2. ' ' → logprob: -10.000049591064453
    3. '2' → logprob: -12.375049591064453
    4. 'len' → logprob: -16.875049591064453
    5. '0' → logprob: -17.250049591064453
    6. '```' → logprob: -17.312549591064453
    7. 's' → logprob: -17.750049591064453
    8. '`' → logprob: -18.562549591064453
    9. '   ' → logprob: -18.625049591064453
    10. '3' → logprob: -18.812549591064453

Token 17: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.537246823310852
    2. '\n' → logprob: -1.787246823310852
    3. '%' → logprob: -1.912246823310852
    4. '
' → logprob: -2.1622467041015625
    5. '*' → logprob: -2.2872467041015625
    6. '<|end|>' → logprob: -2.4122467041015625
    7. ')' → logprob: -3.2872467041015625
    8. '0' → logprob: -3.6622467041015625
    9. ' ' → logprob: -4.0372467041015625
    10. ' if' → logprob: -4.7872467041015625

Token 18: 'ok' (ID: 525)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9436109066009521
    2. '*' → logprob: -2.068610906600952
    3. 'for' → logprob: -2.068610906600952
    4. '\n' → logprob: -2.193610906600952
    5. '+' → logprob: -2.443610906600952
    6. '0' → logprob: -2.818610906600952
    7. 'x' → logprob: -2.818610906600952
    8. '#' → logprob: -3.318610906600952
    9. 'i' → logprob: -3.568610906600952
    10. 's' → logprob: -3.568610906600952

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3220269978046417
    2. '=' → logprob: -1.3220269680023193
    3. ':' → logprob: -5.197027206420898
    4. ' ' → logprob: -7.072027206420898
    5. ',' → logprob: -7.322027206420898
    6. '[' → logprob: -7.947027206420898
    7. '=True' → logprob: -8.197027206420898
    8. 's' → logprob: -8.697027206420898
    9. '.' → logprob: -8.697027206420898
    10. ')' → logprob: -9.322027206420898

Token 20: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6093527674674988
    2. ' True' → logprob: -0.8593527674674988
    3. 'False' → logprob: -3.7343528270721436
    4. ' False' → logprob: -5.6093525886535645
    5. '[' → logprob: -6.2343525886535645
    6. '[]' → logprob: -6.7343525886535645
    7. '0' → logprob: -7.4843525886535645
    8. ' [' → logprob: -7.8593525886535645
    9. ' ' → logprob: -7.8593525886535645
    10. ' []' → logprob: -8.109353065490723

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8126820921897888
    2. 'for' → logprob: -1.3126821517944336
    3. '\n' → logprob: -1.9376821517944336
    4. ' for' → logprob: -2.0626821517944336
    5. ' 
' → logprob: -5.062682151794434
    6. 'if' → logprob: -6.312682151794434
    7. '<|end|>' → logprob: -6.312682151794434
    8. 'n' → logprob: -6.812682151794434
    9. '  
' → logprob: -6.812682151794434
    10. 'i' → logprob: -7.312682151794434

Token 22: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010347125120460987
    2. '
' → logprob: -5.26034688949585
    3. ' for' → logprob: -5.76034688949585
    4. '```' → logprob: -7.13534688949585
    5. '\n' → logprob: -7.26034688949585
    6. 'if' → logprob: -8.510347366333008
    7. 'i' → logprob: -9.635347366333008
    8. '' → logprob: -10.135347366333008
    9. '\' → logprob: -10.385347366333008
    10. 'n' → logprob: -10.635347366333008

Token 23: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3584868013858795
    2. 's' → logprob: -2.1084868907928467
    3. ' ' → logprob: -2.4834868907928467
    4. ' N' → logprob: -2.4834868907928467
    5. 'N' → logprob: -5.233486652374268
    6. ' not' → logprob: -5.483486652374268
    7. ''' → logprob: -6.483486652374268
    8. ' '' → logprob: -7.608486652374268
    9. ' len' → logprob: -7.608486652374268
    10. ' ' → logprob: -8.233487129211426

Token 24: '[N' (ID: 49776)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027353955432772636
    2. '[N' → logprob: -3.6523540019989014
    3. '[-' → logprob: -7.527353763580322
    4. ' [' → logprob: -7.902353763580322
    5. '==' → logprob: -9.77735424041748
    6. ' ==' → logprob: -10.52735424041748
    7. '[:' → logprob: -10.90235424041748
    8. '.startswith' → logprob: -12.02735424041748
    9. '.count' → logprob: -12.40235424041748
    10. ' !=' → logprob: -12.52735424041748

Token 25: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8661957383155823
    2. ' ==' → logprob: -1.7411956787109375
    3. '!=' → logprob: -1.8661956787109375
    4. ' !=' → logprob: -1.9911956787109375
    5. '=' → logprob: -3.4911956787109375
    6. ')' → logprob: -3.7411956787109375
    7. '>' → logprob: -4.1161956787109375
    8. ']' → logprob: -4.7411956787109375
    9. ''' → logprob: -5.2411956787109375
    10. '<' → logprob: -5.8661956787109375

Token 26: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5405198335647583
    2. ' ==' → logprob: -1.6655198335647583
    3. '!=' → logprob: -2.7905197143554688
    4. ' in' → logprob: -2.9155197143554688
    5. ' !=' → logprob: -3.7905197143554688
    6. ''' → logprob: -3.9155197143554688
    7. '=' → logprob: -4.415519714355469
    8. '>' → logprob: -4.665519714355469
    9. '<' → logprob: -4.790519714355469
    10. 'isdigit' → logprob: -4.790519714355469

Token 27: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.028953256085515022
    2. ' '' → logprob: -4.0289530754089355
    3. ''s' → logprob: -6.1539530754089355
    4. '"' → logprob: -6.4039530754089355
    5. ''a' → logprob: -6.6539530754089355
    6. ''o' → logprob: -6.7789530754089355
    7. '')' → logprob: -7.1539530754089355
    8. ''A' → logprob: -7.5289530754089355
    9. ''O' → logprob: -7.9039530754089355
    10. ''-' → logprob: -8.028953552246094

Token 28: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8324077129364014
    2. ''' → logprob: -1.3324077129364014
    3. ')' → logprob: -2.4574077129364014
    4. ')'' → logprob: -2.9574077129364014
    5. '1' → logprob: -3.3324077129364014
    6. ')':' → logprob: -3.4574077129364014
    7. '')' → logprob: -3.8324077129364014
    8. '?' → logprob: -4.9574079513549805
    9. '9' → logprob: -5.3324079513549805
    10. '('' → logprob: -5.3324079513549805

Token 29: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5493687987327576
    2. '':' → logprob: -1.6743688583374023
    3. ' ':' → logprob: -2.4243688583374023
    4. ''' → logprob: -2.4243688583374023
    5. '0' → logprob: -3.2993688583374023
    6. ' '' → logprob: -4.924368858337402
    7. ' :' → logprob: -5.299368858337402
    8. ':'' → logprob: -6.049368858337402
    9. '1' → logprob: -6.674368858337402
    10. ')' → logprob: -6.674368858337402

Token 30: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06361003965139389
    2. ' :' → logprob: -2.813610076904297
    3. ' and' → logprob: -6.563610076904297
    4. 'and' → logprob: -9.688610076904297
    5. ' or' → logprob: -9.938610076904297
    6. ' ' → logprob: -9.938610076904297
    7. ':
' → logprob: -10.438610076904297
    8. ' ==' → logprob: -11.813610076904297
    9. ' :
' → logprob: -11.938610076904297
    10. '=' → logprob: -12.438610076904297

Token 31: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.023747120052576065
    2. 's' → logprob: -3.773747205734253
    3. ' ' → logprob: -8.523747444152832
    4. ' not' → logprob: -8.898747444152832
    5. ''' → logprob: -9.398747444152832
    6. ' (' → logprob: -10.648747444152832
    7. ' ' → logprob: -10.648747444152832
    8. ' '' → logprob: -11.398747444152832
    9. '(s' → logprob: -12.398747444152832
    10. ''s' → logprob: -12.523747444152832

Token 32: '[' (ID: 58)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0647987648844719
    2. '[' → logprob: -2.8147988319396973
    3. ' [' → logprob: -6.439798831939697
    4. ''' → logprob: -7.564798831939697
    5. ''[' → logprob: -8.439798355102539
    6. ' '['' → logprob: -9.314798355102539
    7. ' s' → logprob: -9.439798355102539
    8. '[s' → logprob: -10.314798355102539
    9. '[:' → logprob: -10.314798355102539
    10. '[-' → logprob: -10.689798355102539

Token 33: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5741186738014221
    2. '0' → logprob: -1.3241186141967773
    3. ' N' → logprob: -2.4491186141967773
    4. ' ' → logprob: -3.0741186141967773
    5. '1' → logprob: -4.074118614196777
    6. '[N' → logprob: -4.199118614196777
    7. '[' → logprob: -6.074118614196777
    8. '-' → logprob: -6.699118614196777
    9. ']' → logprob: -7.574118614196777
    10. '2' → logprob: -7.949118614196777

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10732072591781616
    2. ']==' → logprob: -2.732320785522461
    3. '0' → logprob: -4.232320785522461
    4. ']=='' → logprob: -4.732320785522461
    5. 'N' → logprob: -6.107320785522461
    6. '1' → logprob: -6.482320785522461
    7. ']!=' → logprob: -6.482320785522461
    8. ' ' → logprob: -7.107320785522461
    9. ':]' → logprob: -7.232320785522461
    10. '']' → logprob: -7.232320785522461

Token 35: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32212814688682556
    2. ' ==' → logprob: -1.697128176689148
    3. '=='' → logprob: -2.5721280574798584
    4. '!=' → logprob: -4.8221282958984375
    5. ' !=' → logprob: -5.9471282958984375
    6. ' =='' → logprob: -6.5721282958984375
    7. ''' → logprob: -6.8221282958984375
    8. '!='' → logprob: -6.9471282958984375
    9. ' ' → logprob: -7.6971282958984375
    10. '=' → logprob: -7.9471282958984375

Token 36: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03873635083436966
    2. ' '' → logprob: -3.288736343383789
    3. ''s' → logprob: -7.538736343383789
    4. ' ' → logprob: -9.413736343383789
    5. ' s' → logprob: -10.538736343383789
    6. 's' → logprob: -11.038736343383789
    7. '"' → logprob: -11.663736343383789
    8. ''o' → logprob: -12.663736343383789
    9. '0' → logprob: -12.913736343383789
    10. ''-' → logprob: -13.351236343383789

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.267887145280838
    2. '1' → logprob: -1.5178871154785156
    3. ''' → logprob: -4.392887115478516
    4. 's' → logprob: -6.892887115478516
    5. ''s' → logprob: -7.767887115478516
    6. '2' → logprob: -7.892887115478516
    7. ' '' → logprob: -8.017887115478516
    8. '9' → logprob: -8.455387115478516
    9. ' ' → logprob: -8.892887115478516
    10. 'N' → logprob: -9.080387115478516

Token 38: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5278545022010803
    2. ':' → logprob: -1.0278544425964355
    3. ''' → logprob: -3.0278544425964355
    4. '):' → logprob: -6.0278544425964355
    5. ':'' → logprob: -8.027854919433594
    6. ')' → logprob: -8.152854919433594
    7. ''):' → logprob: -8.527854919433594
    8. '0' → logprob: -8.777854919433594
    9. ' ':' → logprob: -9.152854919433594
    10. ''s' → logprob: -9.277854919433594

Token 39: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.263267993927002
    2. '   ' → logprob: -1.263267993927002
    3. ' ' → logprob: -1.763267993927002
    4. '<|end|>' → logprob: -2.388267993927002
    5. '\n' → logprob: -3.138267993927002
    6. '
' → logprob: -3.513267993927002
    7. ' ok' → logprob: -3.513267993927002
    8. ':
' → logprob: -4.013267993927002
    9. '  ' → logprob: -4.638267993927002
    10. ' :' → logprob: -4.888267993927002

Token 40: ' print' (ID: 2123)
  Prédit: ' ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.0870879516005516
    2. 'ok' → logprob: -2.587087869644165
    3. '   ' → logprob: -5.087088108062744
    4. '	ok' → logprob: -6.712088108062744
    5. ' ' → logprob: -8.462087631225586
    6. ' okay' → logprob: -9.087087631225586
    7. ' OK' → logprob: -9.587087631225586
    8. '
' → logprob: -9.712087631225586
    9. ' pass' → logprob: -10.087087631225586
    10. '\n' → logprob: -10.212087631225586

Token 41: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037443287670612335
    2. '('' → logprob: -3.7874433994293213
    3. '(False' → logprob: -5.037443161010742
    4. '("' → logprob: -5.162443161010742
    5. '(True' → logprob: -6.912443161010742
    6. '()' → logprob: -8.287443161010742
    7. ''' → logprob: -8.662443161010742
    8. '("("' → logprob: -9.412443161010742
    9. '(ok' → logprob: -9.537443161010742
    10. '"' → logprob: -9.537443161010742

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018971276585943997
    2. ' ' → logprob: -8.750189781188965
    3. '2' → logprob: -10.625189781188965
    4. '-' → logprob: -13.250189781188965
    5. '+' → logprob: -13.875189781188965
    6. 's' → logprob: -14.375189781188965
    7. '0' → logprob: -14.500189781188965
    8. '  ' → logprob: -14.750189781188965
    9. '   ' → logprob: -15.250189781188965
    10. '```' → logprob: -15.562689781188965

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004983438993804157
    2. ')
' → logprob: -7.625498294830322
    3. ' )' → logprob: -12.12549877166748
    4. '')' → logprob: -13.37549877166748
    5. '`)' → logprob: -13.50049877166748
    6. ')
' → logprob: -14.00049877166748
    7. ')return' → logprob: -15.00049877166748
    8. ')`' → logprob: -15.25049877166748
    9. '```' → logprob: -15.87549877166748
    10. ')

' → logprob: -16.000497817993164

Token 44: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5954350829124451
    2. '```' → logprob: -2.09543514251709
    3. ')' → logprob: -2.47043514251709
    4. '   ' → logprob: -2.72043514251709
    5. '<|end|>' → logprob: -2.97043514251709
    6. '\n' → logprob: -3.09543514251709
    7. 'elif' → logprob: -3.34543514251709
    8. '
' → logprob: -3.84543514251709
    9. ' else' → logprob: -4.97043514251709
    10. ':' → logprob: -5.84543514251709

Token 45: ' ok' (ID: 4763)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11772817373275757
    2. '
' → logprob: -2.4927282333374023
    3. 'elif' → logprob: -4.617728233337402
    4. '\n' → logprob: -4.742728233337402
    5. ' else' → logprob: -5.742728233337402
    6. '   ' → logprob: -6.117728233337402
    7. '<|end|>' → logprob: -6.617728233337402
    8. '```' → logprob: -6.992728233337402
    9. '    
' → logprob: -7.242728233337402
    10. 'exit' → logprob: -7.867728233337402

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08943229913711548
    2. '=' → logprob: -2.4644322395324707
    3. '=False' → logprob: -7.714432239532471
    4. ' ' → logprob: -10.964432716369629
    5. '=True' → logprob: -10.964432716369629
    6. ')' → logprob: -12.589432716369629
    7. ' False' → logprob: -13.839432716369629
    8. '!' → logprob: -13.839432716369629
    9. 'False' → logprob: -13.839432716369629
    10. '   ' → logprob: -14.089432716369629

Token 47: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.002477200934663415
    2. 'False' → logprob: -6.002477169036865
    3. ' True' → logprob: -13.377477645874023
    4. ' ' → logprob: -16.752477645874023
    5. '=False' → logprob: -19.877477645874023
    6. ' false' → logprob: -20.002477645874023
    7. 'True' → logprob: -20.752477645874023
    8. '(False' → logprob: -20.752477645874023
    9. ' F' → logprob: -21.877477645874023
    10. ' ' → logprob: -22.627477645874023

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: 'if' (ID: 366)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4111444354057312
    2. 'else' → logprob: -1.786144495010376
    3. '
' → logprob: -2.411144495010376
    4. '<|end|>' → logprob: -3.161144495010376
    5. '```' → logprob: -4.286144256591797
    6. '\n' → logprob: -4.661144256591797
    7. ' 
' → logprob: -5.911144256591797
    8. '    
' → logprob: -6.286144256591797
    9. '   ' → logprob: -6.411144256591797
    10. 'if' → logprob: -6.536144256591797

Token 50: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.015472755767405033
    2. ' s' → logprob: -5.140472888946533
    3. ' not' → logprob: -5.640472888946533
    4. ' ' → logprob: -5.765472888946533
    5. 'ok' → logprob: -6.390472888946533
    6. 's' → logprob: -7.265472888946533
    7. ' N' → logprob: -8.515472412109375
    8. ' len' → logprob: -9.890472412109375
    9. ' okay' → logprob: -9.890472412109375
    10. ' space' → logprob: -10.015472412109375

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007663871510885656
    2. ' :' → logprob: -7.375766277313232
    3. ' and' → logprob: -9.12576675415039
    4. ':
' → logprob: -11.00076675415039
    5. ' ==' → logprob: -12.12576675415039
    6. 'and' → logprob: -12.75076675415039
    7. '==' → logprob: -12.87576675415039
    8. '=' → logprob: -13.87576675415039
    9. ':**' → logprob: -15.00076675415039
    10. '>' → logprob: -15.12576675415039

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5131591558456421
    2. ' for' → logprob: -1.013159155845642
    3. ' s' → logprob: -4.513159275054932
    4. ' ' → logprob: -4.888159275054932
    5. 'for' → logprob: -5.388159275054932
    6. ' i' → logprob: -5.388159275054932
    7. '    ' → logprob: -6.263159275054932
    8. ':' → logprob: -6.263159275054932
    9. '0' → logprob: -6.388159275054932
    10. ' if' → logprob: -7.138159275054932

Token 53: ' l' (ID: 305)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4409857392311096
    2. 'for' → logprob: -1.5659856796264648
    3. ' i' → logprob: -3.565985679626465
    4. 'i' → logprob: -3.940985679626465
    5. ' s' → logprob: -3.940985679626465
    6. 's' → logprob: -4.815985679626465
    7. '   ' → logprob: -5.065985679626465
    8. ' count' → logprob: -5.190985679626465
    9. ' ans' → logprob: -5.190985679626465
    10. 'count' → logprob: -5.190985679626465

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47265759110450745
    2. '=' → logprob: -1.722657561302185
    3. 'en' → logprob: -2.4726576805114746
    4. 'e' → logprob: -2.4726576805114746
    5. 'eft' → logprob: -5.097657680511475
    6. 'et' → logprob: -5.847657680511475
    7. 'for' → logprob: -5.847657680511475
    8. 'i' → logprob: -6.097657680511475
    9. 'f' → logprob: -6.347657680511475
    10. 'r' → logprob: -6.472657680511475

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6509102582931519
    2. '[' → logprob: -1.6509102582931519
    3. '[]' → logprob: -2.4009103775024414
    4. '1' → logprob: -2.9009103775024414
    5. 'N' → logprob: -3.0259103775024414
    6. '[N' → logprob: -3.1509103775024414
    7. 'len' → logprob: -4.275910377502441
    8. '[len' → logprob: -4.650910377502441
    9. '2' → logprob: -5.025910377502441
    10. '[int' → logprob: -5.650910377502441

Token 56: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7817022800445557
    2. '[' → logprob: -1.5317022800445557
    3. '[N' → logprob: -2.0317022800445557
    4. 'N' → logprob: -2.6567022800445557
    5. '[]' → logprob: -3.0317022800445557
    6. '1' → logprob: -3.1567022800445557
    7. 'len' → logprob: -4.531702041625977
    8. '[len' → logprob: -4.906702041625977
    9. '2' → logprob: -5.156702041625977
    10. '[s' → logprob: -5.906702041625977

Token 57: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2867244482040405
    2. '<|end|>' → logprob: -2.03672456741333
    3. '0' → logprob: -3.41172456741333
    4. 'while' → logprob: -3.53672456741333
    5. '
' → logprob: -4.78672456741333
    6. '1' → logprob: -4.91172456741333
    7. ',' → logprob: -5.03672456741333
    8. ' while' → logprob: -5.03672456741333
    9. '```' → logprob: -5.41172456741333
    10. '2' → logprob: -5.66172456741333

Token 58: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6220765113830566
    2. '<|end|>' → logprob: -1.4970765113830566
    3. 'while' → logprob: -2.6220765113830566
    4. ',' → logprob: -3.3720765113830566
    5. ' while' → logprob: -3.4970765113830566
    6. '0' → logprob: -4.497076511383057
    7. 'for' → logprob: -4.622076511383057
    8. ';' → logprob: -4.747076511383057
    9. '
' → logprob: -4.997076511383057
    10. ' ' → logprob: -4.997076511383057

Token 59: ' r' (ID: 428)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13177695870399475
    2. 'r' (adapté à ' r') → logprob: -2.756777048110962
    3. ' while' → logprob: -3.006777048110962
    4. 'for' → logprob: -5.256776809692383
    5. '+' → logprob: -6.381776809692383
    6. 's' → logprob: -7.006776809692383
    7. 'N' → logprob: -7.506776809692383
    8. 'i' → logprob: -7.506776809692383
    9. '0' → logprob: -8.006776809692383
    10. '1' → logprob: -8.881776809692383

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06202728673815727
    2. '=' → logprob: -2.8120272159576416
    3. ' ' → logprob: -9.937026977539062
    4. '=N' → logprob: -12.312026977539062
    5. '=len' → logprob: -12.437026977539062
    6. ',' → logprob: -13.187026977539062
    7. '=n' → logprob: -15.562026977539062
    8. ' N' → logprob: -15.687026977539062
    9. 'N' → logprob: -16.312026977539062
    10. ' ,' → logprob: -16.312026977539062

Token 61: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16436205804347992
    2. ' N' → logprob: -1.9143620729446411
    3. 'len' → logprob: -6.414361953735352
    4. ' ' → logprob: -7.164361953735352
    5. '1' → logprob: -7.539361953735352
    6. ' len' → logprob: -7.914361953735352
    7. '0' → logprob: -8.039361953735352
    8. '2' → logprob: -9.039361953735352
    9. 's' → logprob: -9.289361953735352
    10. 'n' → logprob: -9.539361953735352

Token 62: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24895226955413818
    2. '<|end|>' → logprob: -1.8739522695541382
    3. '-' → logprob: -3.6239523887634277
    4. '
' → logprob: -4.248952388763428
    5. ' ' → logprob: -4.873952388763428
    6. ' +' → logprob: -4.998952388763428
    7. '<|end|>' → logprob: -5.373952388763428
    8. '```' → logprob: -6.623952388763428
    9. ' -' → logprob: -6.748952388763428
    10. '+
' → logprob: -7.123952388763428

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014666282571852207
    2. ' ' → logprob: -4.2646660804748535
    3. '2' → logprob: -7.8896660804748535
    4. '0' → logprob: -9.764666557312012
    5. '-' → logprob: -10.639666557312012
    6. '3' → logprob: -11.264666557312012
    7. '4' → logprob: -12.139666557312012
    8. '5' → logprob: -12.827166557312012
    9. 'l' → logprob: -12.889666557312012
    10. '+' → logprob: -13.077166557312012

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000686817744281143
    2. '2' → logprob: -7.6256866455078125
    3. '0' → logprob: -9.000686645507812
    4. '3' → logprob: -10.375686645507812
    5. ' ' → logprob: -10.500686645507812
    6. '4' → logprob: -12.000686645507812
    7. '5' → logprob: -13.000686645507812
    8. '6' → logprob: -13.688186645507812
    9. '-' → logprob: -14.063186645507812
    10. '7' → logprob: -14.125686645507812

Token 65: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8154085874557495
    2. '<|end|>' → logprob: -0.8154085874557495
    3. '+' → logprob: -3.065408706665039
    4. ' ' → logprob: -3.815408706665039
    5. '   ' → logprob: -4.440408706665039
    6. ':
' → logprob: -4.940408706665039
    7. ')' → logprob: -5.065408706665039
    8. '
' → logprob: -5.690408706665039
    9. '<|end|>' → logprob: -5.690408706665039
    10. ';' → logprob: -6.565408706665039

Token 66: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.44114795327186584
    2. ' while' → logprob: -1.0661479234695435
    3. '   ' → logprob: -5.816147804260254
    4. 'w' → logprob: -5.941147804260254
    5. 's' → logprob: -6.441147804260254
    6. ' ' → logprob: -6.691147804260254
    7. 'if' → logprob: -7.066147804260254
    8. ':' → logprob: -7.691147804260254
    9. ' if' → logprob: -8.441147804260254
    10. ')' → logprob: -8.441147804260254

Token 68: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.13708649575710297
    2. 'l' → logprob: -2.1370863914489746
    3. ' s' → logprob: -5.137086391448975
    4. 's' → logprob: -6.262086391448975
    5. ' r' → logprob: -6.637086391448975
    6. 'r' → logprob: -7.387086391448975
    7. ' ' → logprob: -8.762086868286133
    8. ' True' → logprob: -9.637086868286133
    9. 'True' → logprob: -10.262086868286133
    10. ' not' → logprob: -10.262086868286133

Token 69: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7003301978111267
    2. '<=' → logprob: -0.7003301978111267
    3. ' <' → logprob: -5.5753302574157715
    4. '<' → logprob: -5.7003302574157715
    5. ' ' → logprob: -11.950329780578613
    6. '+' → logprob: -12.825329780578613
    7. '<len' → logprob: -12.950329780578613
    8. '=' → logprob: -13.575329780578613
    9. 'r' → logprob: -13.700329780578613
    10. 's' → logprob: -13.700329780578613

Token 70: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0031784253660589457
    2. ' r' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.378178596496582
    4. '<|end|>' → logprob: -17.378177642822266
    5. '_r' → logprob: -18.628177642822266
    6. '  ' → logprob: -18.753177642822266
    7. '   ' → logprob: -18.878177642822266
    8. '	r' → logprob: -19.253177642822266
    9. 'N' → logprob: -19.628177642822266
    10. 's' → logprob: -19.753177642822266

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005512165371328592
    2. ' and' → logprob: -5.630512237548828
    3. ' :' → logprob: -7.255512237548828
    4. ':
' → logprob: -7.380512237548828
    5. '       ' → logprob: -8.255512237548828
    6. '   ' → logprob: -8.755512237548828
    7. 'and' → logprob: -9.755512237548828
    8. '):' → logprob: -10.380512237548828
    9. '<|end|>' → logprob: -11.380512237548828
    10. ',' → logprob: -11.630512237548828

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14199253916740417
    2. '<|end|>' → logprob: -2.8919925689697266
    3. ' ' → logprob: -3.2669925689697266
    4. ' if' → logprob: -4.266992568969727
    5. '    ' → logprob: -4.641992568969727
    6. '   ' → logprob: -4.891992568969727
    7. 'if' → logprob: -6.641992568969727
    8. '<|end|>' → logprob: -6.766992568969727
    9. '        ' → logprob: -7.141992568969727
    10. '        
' → logprob: -7.391992568969727

Token 73: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8618993759155273
    2. ' if' → logprob: -0.9868993759155273
    3. ' ' → logprob: -2.1118993759155273
    4. 'if' (adapté à ' if') → logprob: -3.6118993759155273
    5. '   ' → logprob: -3.9868993759155273
    6. '<|end|>' → logprob: -4.111899375915527
    7. '    ' → logprob: -4.861899375915527
    8. ' s' → logprob: -5.486899375915527
    9. 's' → logprob: -5.736899375915527
    10. '        ' → logprob: -5.861899375915527

Token 74: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.004089443478733301
    2. 's' → logprob: -5.50408935546875
    3. ' ' → logprob: -12.00408935546875
    4. '(s' → logprob: -13.12908935546875
    5. ' (' → logprob: -14.37908935546875
    6. '   ' → logprob: -14.75408935546875
    7. '<|end|>' → logprob: -14.87908935546875
    8. '	s' → logprob: -15.00408935546875
    9. ' ' → logprob: -15.12908935546875
    10. '(' → logprob: -15.37908935546875

Token 75: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -4.4060561776859686e-05
    2. '[' → logprob: -10.125043869018555
    3. '[r' → logprob: -13.250043869018555
    4. '[s' → logprob: -13.875043869018555
    5. '[i' → logprob: -14.500043869018555
    6. '```' → logprob: -15.625043869018555
    7. 'l' → logprob: -16.625043869018555
    8. '[q' → logprob: -16.875043869018555
    9. '[left' → logprob: -17.125043869018555
    10. '	l' → logprob: -17.125043869018555

Token 76: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06650009006261826
    2. ' !=' → logprob: -3.066500186920166
    3. ']!=' → logprob: -4.816500186920166
    4. ']' → logprob: -5.316500186920166
    5. '==' → logprob: -5.441500186920166
    6. ' ' → logprob: -9.441499710083008
    7. ']==' → logprob: -9.691499710083008
    8. ' ]' → logprob: -10.066499710083008
    9. ' ==' → logprob: -10.191499710083008
    10. '!==' → logprob: -10.316499710083008

Token 77: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03080747090280056
    2. ' !=' → logprob: -3.7808074951171875
    3. '==' → logprob: -4.9058074951171875
    4. ' ==' → logprob: -9.530807495117188
    5. '=' → logprob: -11.280807495117188
    6. ' ' → logprob: -11.780807495117188
    7. '^' → logprob: -12.030807495117188
    8. '!='' → logprob: -12.155807495117188
    9. '!==' → logprob: -12.405807495117188
    10. ']!=' → logprob: -12.780807495117188

Token 78: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14523208141326904
    2. ' s' → logprob: -2.0202322006225586
    3. ''' → logprob: -6.645232200622559
    4. ''s' → logprob: -7.145232200622559
    5. ' '' → logprob: -8.520232200622559
    6. ' ' → logprob: -9.145232200622559
    7. '   ' → logprob: -9.520232200622559
    8. '0' → logprob: -10.020232200622559
    9. '  ' → logprob: -11.770232200622559
    10. '       ' → logprob: -12.270232200622559

Token 79: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0006590616540051997
    2. '[' → logprob: -8.250658988952637
    3. 'r' → logprob: -8.750658988952637
    4. '[N' → logprob: -8.750658988952637
    5. '[l' → logprob: -10.500658988952637
    6. ']' → logprob: -10.875658988952637
    7. '][' → logprob: -11.875658988952637
    8. '[s' → logprob: -12.125658988952637
    9. '   ' → logprob: -12.375658988952637
    10. '	r' → logprob: -12.625658988952637

Token 80: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.13780352473258972
    2. ']:
' → logprob: -2.262803554534912
    3. ']' → logprob: -3.762803554534912
    4. ']:
' → logprob: -7.137803554534912
    5. ':' → logprob: -8.137803077697754
    6. '']:' → logprob: -9.137803077697754
    7. '']:
' → logprob: -9.387803077697754
    8. ']:

' → logprob: -9.887803077697754
    9. ' ]' → logprob: -10.637803077697754
    10. '       ' → logprob: -10.887803077697754

Token 81: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6509394645690918
    2. '           ' → logprob: -1.4009394645690918
    3. '       ' → logprob: -1.6509394645690918
    4. ':
' → logprob: -3.525939464569092
    5. '<|end|>' → logprob: -5.775939464569092
    6. '   ' → logprob: -6.525939464569092
    7. ' or' → logprob: -6.900939464569092
    8. '<|end|>' → logprob: -7.275939464569092
    9. ' and' → logprob: -7.400939464569092
    10. '               ' → logprob: -7.525939464569092

Token 82: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.030846118927002
    2. '   ' → logprob: -1.655846118927002
    3. ' print' → logprob: -1.655846118927002
    4. ' ok' → logprob: -1.905846118927002
    5. '           ' → logprob: -2.780846118927002
    6. 'print' (adapté à ' print') → logprob: -3.530846118927002
    7. 'ok' → logprob: -4.905846118927002
    8. ' ' → logprob: -5.030846118927002
    9. '    ' → logprob: -5.905846118927002
    10. '               ' → logprob: -7.030846118927002

Token 83: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.011223594658076763
    2. '(' → logprob: -4.511223793029785
    3. '-' → logprob: -8.761223793029785
    4. '('' → logprob: -12.511223793029785
    5. '("-' → logprob: -12.761223793029785
    6. '(N' → logprob: -13.011223793029785
    7. '('-' → logprob: -13.261223793029785
    8. '(
' → logprob: -13.636223793029785
    9. ' (-' → logprob: -13.761223793029785
    10. '(+' → logprob: -14.011223793029785

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022189407900441438
    2. '2' → logprob: -9.125222206115723
    3. ' ' → logprob: -9.375222206115723
    4. '-' → logprob: -11.250222206115723
    5. ')' → logprob: -12.687722206115723
    6. ' -' → logprob: -13.312722206115723
    7. '11' → logprob: -13.687722206115723
    8. '3' → logprob: -13.812722206115723
    9. '```' → logprob: -13.812722206115723
    10. '  ' → logprob: -14.187722206115723

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016696017235517502
    2. ')
' → logprob: -4.391695976257324
    3. '           ' → logprob: -5.891695976257324
    4. '       ' → logprob: -6.766695976257324
    5. '               ' → logprob: -8.766695976257324
    6. ')return' → logprob: -10.141695976257324
    7. '<|end|>' → logprob: -11.141695976257324
    8. '')' → logprob: -11.516695976257324
    9. '   ' → logprob: -11.516695976257324
    10. ')
' → logprob: -11.766695976257324

Token 86: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005180035717785358
    2. '               ' → logprob: -5.7551798820495605
    3. '       ' → logprob: -6.6301798820495605
    4. '<|end|>' → logprob: -7.6301798820495605
    5. ')' → logprob: -9.630180358886719
    6. '   ' → logprob: -10.755180358886719
    7. '<|end|>' → logprob: -10.880180358886719
    8. '```' → logprob: -11.130180358886719
    9. '            
' → logprob: -11.380180358886719
    10. '\n' → logprob: -11.505180358886719

Token 87: ' ok' (ID: 4763)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.477039635181427
    2. '           ' → logprob: -1.2270395755767822
    3. '    
' → logprob: -4.227039813995361
    4. '            
' → logprob: -4.352039813995361
    5. '       ' → logprob: -4.477039813995361
    6. ' break' → logprob: -4.602039813995361
    7. 'break' → logprob: -4.727039813995361
    8. ' 
' → logprob: -4.977039813995361
    9. '```' → logprob: -5.352039813995361
    10. '               ' → logprob: -5.352039813995361

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009920296259224415
    2. '=' → logprob: -4.634920120239258
    3. '=False' → logprob: -8.884920120239258
    4. ' ' → logprob: -11.384920120239258
    5. '<|end|>' → logprob: -11.759920120239258
    6. '=True' → logprob: -12.759920120239258
    7. ' =
' → logprob: -13.759920120239258
    8. ' &=' → logprob: -13.884920120239258
    9. ')' → logprob: -15.134920120239258
    10. '	' → logprob: -15.509920120239258

Token 89: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.20141343772411346
    2. 'False' → logprob: -1.7014133930206299
    3. '=False' → logprob: -16.576414108276367
    4. '(False' → logprob: -17.826414108276367
    5. ' ' → logprob: -18.201414108276367
    6. ' True' → logprob: -18.701414108276367
    7. '.False' → logprob: -18.826414108276367
    8. '_false' → logprob: -19.826414108276367
    9. ' false' → logprob: -20.201414108276367
    10. 'True' → logprob: -21.076414108276367

Token 90: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010516269830986857
    2. '<|end|>' → logprob: -8.126051902770996
    3. '               ' → logprob: -8.376051902770996
    4. '       ' → logprob: -8.626051902770996
    5. '\n' → logprob: -9.251051902770996
    6. '
' → logprob: -9.626051902770996
    7. '            
' → logprob: -9.876051902770996
    8. '		' → logprob: -10.501051902770996
    9. '```' → logprob: -11.001051902770996
    10. '<|end|>' → logprob: -11.001051902770996

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009573166607879102
    2. '<|end|>' → logprob: -8.625957489013672
    3. '            
' → logprob: -8.750957489013672
    4. '               ' → logprob: -8.750957489013672
    5. ' 
' → logprob: -9.125957489013672
    6. '       ' → logprob: -9.125957489013672
    7. '		' → logprob: -9.250957489013672
    8. '\n' → logprob: -10.625957489013672
    9. ' ' → logprob: -10.875957489013672
    10. '   ' → logprob: -11.000957489013672

Token 92: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6679728031158447
    2. ' break' → logprob: -1.4179728031158447
    3. 'break' (adapté à ' break') → logprob: -1.4179728031158447
    4. '       ' → logprob: -6.542972564697266
    5. '	break' → logprob: -6.917972564697266
    6. '   ' → logprob: -8.417972564697266
    7. '               ' → logprob: -9.792972564697266
    8. '```' → logprob: -10.042972564697266
    9. 'b' → logprob: -10.167972564697266
    10. '		' → logprob: -11.417972564697266

Token 93: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015424746088683605
    2. '<|end|>' → logprob: -4.515424728393555
    3. '        
' → logprob: -6.765424728393555
    4. '   ' → logprob: -7.265424728393555
    5. '```' → logprob: -7.765424728393555
    6. '    ' → logprob: -8.390424728393555
    7. '        ' → logprob: -8.515424728393555
    8. 's' → logprob: -8.515424728393555
    9. ' ' → logprob: -8.515424728393555
    10. ' else' → logprob: -8.640424728393555

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003902195952832699
    2. '   ' → logprob: -6.628901958465576
    3. '<|end|>' → logprob: -7.003901958465576
    4. '	' → logprob: -7.253901958465576
    5. ' ' → logprob: -8.253902435302734
    6. '        
' → logprob: -9.253902435302734
    7. 's' → logprob: -9.253902435302734
    8. '    ' → logprob: -9.503902435302734
    9. ' else' → logprob: -10.128902435302734
    10. '      ' → logprob: -10.128902435302734

Token 95: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025266794487833977
    2. '   ' → logprob: -4.150266647338867
    3. 'l' (adapté à ' l') → logprob: -5.525266647338867
    4. ' ' → logprob: -6.275266647338867
    5. '    ' → logprob: -6.650266647338867
    6. '  ' → logprob: -7.650266647338867
    7. '      ' → logprob: -8.150266647338867
    8. ' l' → logprob: -8.150266647338867
    9. 's' → logprob: -8.275266647338867
    10. '	' → logprob: -8.650266647338867

Token 96: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04933734983205795
    2. ' +=' → logprob: -3.674337387084961
    3. '+' → logprob: -3.799337387084961
    4. '=' → logprob: -7.924337387084961
    5. '++' → logprob: -11.799337387084961
    6. ')' → logprob: -12.049337387084961
    7. ']+=' → logprob: -12.174337387084961
    8. '+='' → logprob: -12.674337387084961
    9. '+="' → logprob: -13.299337387084961
    10. '<|end|>' → logprob: -13.799337387084961

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.25007438659668
    4. '```' → logprob: -18.25007438659668
    5. '2' → logprob: -19.62507438659668
    6. '１' → logprob: -19.75007438659668
    7. '+' → logprob: -19.81257438659668
    8. '۱' → logprob: -20.18757438659668
    9. '  ' → logprob: -20.43757438659668
    10. '<|end|>' → logprob: -20.81257438659668

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '+' → logprob: -16.812501907348633
    4. '2' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '```' → logprob: -18.187501907348633
    7. '۱' → logprob: -18.250001907348633
    8. '１' → logprob: -18.250001907348633
    9. '11' → logprob: -19.062501907348633
    10. '१' → logprob: -19.375001907348633

Token 99: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11282239854335785
    2. '<|end|>' → logprob: -2.3628222942352295
    3. '<|end|>' → logprob: -5.487822532653809
    4. '   ' → logprob: -5.737822532653809
    5. '
' → logprob: -5.987822532653809
    6. 'r' → logprob: -7.237822532653809
    7. ' ' → logprob: -7.487822532653809
    8. '        
' → logprob: -8.487822532653809
    9. '	' → logprob: -8.612822532653809
    10. '	r' → logprob: -8.612822532653809

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07517395913600922
    2. '   ' → logprob: -2.950173854827881
    3. '<|end|>' → logprob: -4.075173854827881
    4. '        
' → logprob: -7.450173854827881
    5. 'r' → logprob: -7.575173854827881
    6. ' ' → logprob: -7.700173854827881
    7. '<|end|>' → logprob: -8.075174331665039
    8. '    ' → logprob: -8.700174331665039
    9. '	r' → logprob: -8.700174331665039
    10. '```' → logprob: -8.825174331665039

Token 101: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.9504606825648807e-05
    2. ' r' → logprob: -11.000019073486328
    3. '1' → logprob: -12.875019073486328
    4. '   ' → logprob: -16.000019073486328
    5. '```' → logprob: -16.500019073486328
    6. '	r' → logprob: -16.750019073486328
    7. '       ' → logprob: -17.875019073486328
    8. ' ' → logprob: -18.000019073486328
    9. '<|end|>' → logprob: -18.750019073486328
    10. '
' → logprob: -19.500019073486328

Token 102: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3921543061733246
    2. ' -=' → logprob: -1.142154335975647
    3. '-' → logprob: -5.267154216766357
    4. ' -' → logprob: -9.142154693603516
    5. '=' → logprob: -13.017154693603516
    6. '+=' → logprob: -13.767154693603516
    7. '```' → logprob: -15.642154693603516
    8. ' +=' → logprob: -16.142154693603516
    9. ')' → logprob: -16.142154693603516
    10. '   ' → logprob: -16.392154693603516

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.00004005432129
    4. '<|end|>' → logprob: -17.50004005432129
    5. '```' → logprob: -18.50004005432129
    6. '       ' → logprob: -19.50004005432129
    7. '１' → logprob: -19.75004005432129
    8. '۱' → logprob: -19.75004005432129
    9. '  ' → logprob: -19.75004005432129
    10. '<|end|>' → logprob: -20.25004005432129

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -16.250001907348633
    4. '```' → logprob: -17.437501907348633
    5. '۱' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.187501907348633
    7. '१' → logprob: -19.812501907348633
    8. '１' → logprob: -19.875001907348633
    9. '<|end|>' → logprob: -20.000001907348633
    10. ')' → logprob: -20.062501907348633

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: 'if' (ID: 366)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6279668211936951
    2. 'if' → logprob: -0.8779668211936951
    3. '```' → logprob: -3.50296688079834
    4. '
' → logprob: -4.87796688079834
    5. '<|end|>' → logprob: -5.37796688079834
    6. ' if' → logprob: -6.50296688079834
    7. ' else' → logprob: -6.75296688079834
    8. 'print' → logprob: -6.87796688079834
    9. 'elif' → logprob: -7.00296688079834
    10. '  
' → logprob: -7.50296688079834

Token 107: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.0024806505534797907
    2. 'ok' → logprob: -6.002480506896973
    3. ' okay' → logprob: -13.002480506896973
    4. ' not' → logprob: -13.377480506896973
    5. ' ' → logprob: -15.002480506896973
    6. ' ' → logprob: -15.127480506896973
    7. 's' → logprob: -15.502480506896973
    8. '	ok' → logprob: -15.502480506896973
    9. '(ok' → logprob: -16.25248146057129
    10. 'Ok' → logprob: -17.75248146057129

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025261954870074987
    2. ':
' → logprob: -6.00252628326416
    3. '   ' → logprob: -10.00252628326416
    4. 'print' → logprob: -13.25252628326416
    5. '[' → logprob: -13.75252628326416
    6. ' :' → logprob: -14.12752628326416
    7. ' print' → logprob: -14.87752628326416
    8. ' and' → logprob: -15.12752628326416
    9. '=' → logprob: -15.62752628326416
    10. ':

' → logprob: -15.62752628326416

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023643479216843843
    2. 'print' → logprob: -6.627364158630371
    3. ' print' → logprob: -6.877364158630371
    4. '       ' → logprob: -12.377364158630371
    5. '	print' → logprob: -13.877364158630371
    6. ' for' → logprob: -14.252364158630371
    7. '   ' → logprob: -14.502364158630371
    8. '```' → logprob: -15.127364158630371
    9. '    ' → logprob: -16.502365112304688
    10. '  ' → logprob: -16.627365112304688

Token 110: ' root' (ID: 6577)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5977275371551514
    2. ' print' → logprob: -0.8477275371551514
    3. '   ' → logprob: -4.3477277755737305
    4. ' for' → logprob: -5.3477277755737305
    5. ' if' → logprob: -6.9727277755737305
    6. 'for' → logprob: -7.2227277755737305
    7. ' ans' → logprob: -8.47272777557373
    8. 'if' → logprob: -8.59772777557373
    9. ' k' → logprob: -8.84772777557373
    10. ' s' → logprob: -8.97272777557373

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05676375702023506
    2. 's' → logprob: -4.056763648986816
    3. '=' → logprob: -4.306763648986816
    4. '_' → logprob: -4.431763648986816
    5. '(' → logprob: -4.931763648986816
    6. '()' → logprob: -5.806763648986816
    7. '(s' → logprob: -8.056763648986816
    8. ')' → logprob: -8.431763648986816
    9. ',' → logprob: -8.931763648986816
    10. '_s' → logprob: -8.931763648986816

Token 112: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0043201446533203
    2. '0' → logprob: -2.2543201446533203
    3. 'int' → logprob: -2.3793201446533203
    4. '2' → logprob: -2.5043201446533203
    5. '(N' → logprob: -2.6293201446533203
    6. '1' → logprob: -2.7543201446533203
    7. '(' → logprob: -3.1293201446533203
    8. '(int' → logprob: -3.1293201446533203
    9. '(s' → logprob: -3.3793201446533203
    10. ' (' → logprob: -3.5043201446533203

Token 113: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6082940101623535
    2. '(' → logprob: -2.1082940101623535
    3. '0' → logprob: -2.1082940101623535
    4. '(N' → logprob: -2.4832940101623535
    5. 'int' → logprob: -3.3582940101623535
    6. '1' → logprob: -3.6082940101623535
    7. '(int' → logprob: -3.7332940101623535
    8. '(s' → logprob: -3.8582940101623535
    9. '2' → logprob: -4.7332940101623535
    10. 's' → logprob: -5.1082940101623535

Token 114: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4733840227127075
    2. 'while' → logprob: -1.7233840227127075
    3. '0' → logprob: -2.848383903503418
    4. '*' → logprob: -3.473383903503418
    5. '
' → logprob: -3.973383903503418
    6. 'for' → logprob: -4.098383903503418
    7. 'import' → logprob: -4.473383903503418
    8. '<|end|>' → logprob: -4.973383903503418
    9. '   ' → logprob: -5.098383903503418
    10. ' while' → logprob: -5.223383903503418

Token 115: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.583058774471283
    2. '+' → logprob: -1.3330588340759277
    3. 'for' → logprob: -2.8330588340759277
    4. '*' → logprob: -3.4580588340759277
    5. '0' → logprob: -4.333058834075928
    6. 'root' → logprob: -4.458058834075928
    7. 'i' → logprob: -4.583058834075928
    8. ' while' → logprob: -4.833058834075928
    9. '2' → logprob: -5.333058834075928
    10. 'import' → logprob: -5.333058834075928

Token 116: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2335939109325409
    2. 'for' → logprob: -2.1085939407348633
    3. 'ans' → logprob: -3.4835939407348633
    4. 'res' → logprob: -4.608593940734863
    5. 'root' → logprob: -4.608593940734863
    6. 'i' (adapté à ' i') → logprob: -4.733593940734863
    7. 'result' → logprob: -5.358593940734863
    8. 'answer' → logprob: -5.483593940734863
    9. 'print' → logprob: -5.983593940734863
    10. 'pow' → logprob: -6.108593940734863

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4297757148742676
    2. '=' → logprob: -1.0547757148742676
    3. ' +=' → logprob: -7.304775714874268
    4. '+=' → logprob: -8.05477523803711
    5. ' ' → logprob: -10.05477523803711
    6. '+' → logprob: -10.42977523803711
    7. 'n' → logprob: -12.30477523803711
    8. '<|end|>' → logprob: -13.42977523803711
    9. ',' → logprob: -13.55477523803711
    10. ' =
' → logprob: -14.92977523803711

Token 118: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7268641591072083
    2. ' ' → logprob: -0.7268641591072083
    3. '1' → logprob: -3.4768640995025635
    4. ' N' → logprob: -6.601864337921143
    5. '0' → logprob: -7.726864337921143
    6. 'N' → logprob: -7.976864337921143
    7. 'root' → logprob: -10.851863861083984
    8. ' root' → logprob: -10.851863861083984
    9. ' s' → logprob: -11.601863861083984
    10. ' l' → logprob: -11.601863861083984

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17998123168945312
    2. '1' → logprob: -2.054981231689453
    3. '0' → logprob: -3.679981231689453
    4. 'N' → logprob: -4.804981231689453
    5. ' ' → logprob: -5.929981231689453
    6. 'root' → logprob: -9.179981231689453
    7. ' N' → logprob: -9.304981231689453
    8. 'l' → logprob: -9.429981231689453
    9. '3' → logprob: -9.554981231689453
    10. 'len' → logprob: -9.929981231689453

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.39945903420448303
    2. '<|end|>' → logprob: -1.8994590044021606
    3. ' while' → logprob: -2.77445912361145
    4. '+' → logprob: -2.89945912361145
    5. '**' → logprob: -4.024458885192871
    6. '
' → logprob: -4.024458885192871
    7. '*' → logprob: -5.149458885192871
    8. '*i' → logprob: -5.399458885192871
    9. 'i' → logprob: -5.649458885192871
    10. '[i' → logprob: -6.149458885192871

Token 122: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.23074761033058167
    2. ' while' → logprob: -1.9807475805282593
    3. 'N' → logprob: -2.730747699737549
    4. 'i' → logprob: -6.230747699737549
    5. ' N' → logprob: -7.855747699737549
    6. 's' → logprob: -8.98074722290039
    7. 'True' → logprob: -9.35574722290039
    8. 'import' → logprob: -9.48074722290039
    9. ' i' → logprob: -9.73074722290039
    10. '1' → logprob: -10.48074722290039

Token 123: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16040842235088348
    2. ' i' → logprob: -1.9104083776474
    3. 'N' → logprob: -10.035408020019531
    4. 's' → logprob: -10.285408020019531
    5. ' ' → logprob: -10.285408020019531
    6. ' s' → logprob: -10.910408020019531
    7. 'True' → logprob: -11.035408020019531
    8. ' True' → logprob: -11.160408020019531
    9. ' N' → logprob: -11.785408020019531
    10. 'root' → logprob: -12.410408020019531

Token 124: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3870490789413452
    2. '<=' → logprob: -1.1370490789413452
    3. ' <' → logprob: -9.387048721313477
    4. '<' → logprob: -9.637048721313477
    5. ' ' → logprob: -11.637048721313477
    6. ' *' → logprob: -12.012048721313477
    7. '*' → logprob: -12.387048721313477
    8. '<len' → logprob: -12.637048721313477
    9. '<N' → logprob: -13.512048721313477
    10. 's' → logprob: -14.012048721313477

Token 125: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011129142512800172
    2. ' N' → logprob: -9.12511157989502
    3. ' ' → logprob: -13.37511157989502
    4. '   ' → logprob: -14.37511157989502
    5. '  ' → logprob: -16.875110626220703
    6. '	N' → logprob: -17.125110626220703
    7. 'n' → logprob: -17.250110626220703
    8. '(' → logprob: -17.250110626220703
    9. '(N' → logprob: -17.500110626220703
    10. '
' → logprob: -17.625110626220703

Token 126: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16372859477996826
    2. ':' → logprob: -2.288728713989258
    3. ':
' → logprob: -3.288728713989258
    4. 'and' → logprob: -4.413728713989258
    5. '   ' → logprob: -9.288728713989258
    6. '*' → logprob: -9.788728713989258
    7. ' ' → logprob: -11.163728713989258
    8. '+' → logprob: -11.663728713989258
    9. ' :
' → logprob: -11.913728713989258
    10. ' *' → logprob: -12.038728713989258

Token 127: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.052705518901348114
    2. '   ' → logprob: -4.30270528793335
    3. '       ' → logprob: -4.42770528793335
    4. 'and' → logprob: -4.80270528793335
    5. ' if' → logprob: -5.30270528793335
    6. ':' → logprob: -5.42770528793335
    7. ' s' → logprob: -6.05270528793335
    8. 's' → logprob: -6.42770528793335
    9. '<|end|>' → logprob: -6.80270528793335
    10. ' ' → logprob: -6.92770528793335

Token 128: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2401943802833557
    2. 'if' → logprob: -1.865194320678711
    3. ' i' → logprob: -3.865194320678711
    4. ' s' → logprob: -4.240194320678711
    5. 's' → logprob: -5.115194320678711
    6. '       ' → logprob: -5.240194320678711
    7. 'i' → logprob: -5.615194320678711
    8. '   ' → logprob: -5.865194320678711
    9. ' and' → logprob: -5.990194320678711
    10. ' ' → logprob: -7.240194320678711

Token 129: '(str' (ID: 7946)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5339506268501282
    2. '(' → logprob: -1.7839505672454834
    3. '(i' → logprob: -2.0339505672454834
    4. '(s' → logprob: -2.4089505672454834
    5. '("' → logprob: -4.7839508056640625
    6. '()' → logprob: -4.7839508056640625
    7. '(root' → logprob: -5.1589508056640625
    8. 's' → logprob: -6.6589508056640625
    9. 'root' → logprob: -8.158950805664062
    10. ''' → logprob: -8.908950805664062

Token 130: '(root' (ID: 17410)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3142061233520508
    2. '(root' → logprob: -1.4392061233520508
    3. '(s' → logprob: -3.564206123352051
    4. '(' → logprob: -6.439206123352051
    5. '((' → logprob: -6.939206123352051
    6. 'root' → logprob: -7.189206123352051
    7. 'i' → logprob: -8.81420612335205
    8. '(int' → logprob: -9.06420612335205
    9. '('' → logprob: -9.43920612335205
    10. ' (' → logprob: -9.93920612335205

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4836377203464508
    2. ',' → logprob: -1.9836376905441284
    3. '+' → logprob: -2.233637809753418
    4. ',end' → logprob: -2.858637809753418
    5. ')+' → logprob: -3.858637809753418
    6. '*' → logprob: -3.858637809753418
    7. '),' → logprob: -4.108637809753418
    8. ' +' → logprob: -5.233637809753418
    9. ' )' → logprob: -5.608637809753418
    10. ' ,' → logprob: -5.858637809753418

Token 132: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17329370975494385
    2. ',end' → logprob: -1.9232937097549438
    3. '+' → logprob: -5.298293590545654
    4. ' ,' → logprob: -5.673293590545654
    5. ')' → logprob: -6.048293590545654
    6. ',i' → logprob: -6.548293590545654
    7. ' +' → logprob: -7.923293590545654
    8. 'end' → logprob: -9.173294067382812
    9. ' end' → logprob: -9.423294067382812
    10. ')
' → logprob: -9.923294067382812

Token 133: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006039950530976057
    2. '"' → logprob: -5.256040096282959
    3. ' '' → logprob: -7.256040096282959
    4. ' ' → logprob: -10.1310396194458
    5. ''s' → logprob: -11.0060396194458
    6. ')' → logprob: -11.2560396194458
    7. ''i' → logprob: -11.7560396194458
    8. '')' → logprob: -12.6310396194458
    9. ' "' → logprob: -12.7560396194458
    10. '  ' → logprob: -13.0060396194458

Token 134: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2567076086997986
    2. ' ' → logprob: -1.6317076683044434
    3. ' i' → logprob: -3.7567076683044434
    4. ' )' → logprob: -6.256707668304443
    5. ' '' → logprob: -6.256707668304443
    6. ')' → logprob: -6.506707668304443
    7. '"' → logprob: -6.756707668304443
    8. '')' → logprob: -8.506707191467285
    9. ' s' → logprob: -9.006707191467285
    10. '  ' → logprob: -9.506707191467285

Token 135: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0017731155967339873
    2. 's' → logprob: -7.251772880554199
    3. '+' → logprob: -7.376772880554199
    4. 'i' → logprob: -8.2517728805542
    5. '[str' → logprob: -10.1267728805542
    6. '(str' → logprob: -10.1267728805542
    7. ')' → logprob: -10.2517728805542
    8. ' str' → logprob: -10.3767728805542
    9. ',str' → logprob: -11.3767728805542
    10. ' +' → logprob: -12.3767728805542

Token 136: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00015014449309092015
    2. 's' → logprob: -9.500149726867676
    3. ' str' → logprob: -9.500149726867676
    4. '(str' → logprob: -15.125149726867676
    5. ' ' → logprob: -17.625150680541992
    6. 'st' → logprob: -17.750150680541992
    7. ' s' → logprob: -18.125150680541992
    8. '[str' → logprob: -18.375150680541992
    9. '=str' → logprob: -18.500150680541992
    10. '	str' → logprob: -18.625150680541992

Token 137: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007423110771924257
    2. '(i' → logprob: -5.007422924041748
    3. ' i' → logprob: -7.882422924041748
    4. 's' → logprob: -8.257423400878906
    5. 'str' → logprob: -10.132423400878906
    6. '(s' → logprob: -11.757423400878906
    7. 'root' → logprob: -11.757423400878906
    8. '(str' → logprob: -12.257423400878906
    9. '   ' → logprob: -13.132423400878906
    10. 'parent' → logprob: -13.507423400878906

Token 138: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0708809345960617
    2. ')' → logprob: -2.695880889892578
    3. '))
' → logprob: -7.570880889892578
    4. ')
' → logprob: -8.695880889892578
    5. '))' → logprob: -8.945880889892578
    6. ')`
' → logprob: -9.945880889892578
    7. '')
' → logprob: -10.570880889892578
    8. '')' → logprob: -10.945880889892578
    9. ' )
' → logprob: -11.695880889892578
    10. ')'
' → logprob: -11.820880889892578

Token 139: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47453880310058594
    2. '       ' → logprob: -2.724538803100586
    3. 'if' → logprob: -2.849538803100586
    4. '
' → logprob: -2.974538803100586
    5. ' i' → logprob: -2.974538803100586
    6. ' 
' → logprob: -3.224538803100586
    7. 'root' → logprob: -3.849538803100586
    8. '   ' → logprob: -3.974538803100586
    9. '<|end|>' → logprob: -4.099538803100586
    10. 'i' → logprob: -4.349538803100586

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4766945540904999
    2. 'root' → logprob: -1.1016945838928223
    3. ' if' → logprob: -3.4766945838928223
    4. 'i' → logprob: -4.351694583892822
    5. ' root' → logprob: -6.226694583892822
    6. ' i' → logprob: -7.601694583892822
    7. '   ' → logprob: -8.976694107055664
    8. '       ' → logprob: -9.351694107055664
    9. '
' → logprob: -9.351694107055664
    10. ' 
' → logprob: -9.851694107055664

Token 141: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005693563143722713
    2. ' s' → logprob: -7.7505693435668945
    3. 'i' → logprob: -10.125569343566895
    4. '   ' → logprob: -10.250569343566895
    5. 'int' → logprob: -10.625569343566895
    6. 'root' → logprob: -10.750569343566895
    7. '(s' → logprob: -11.625569343566895
    8. ' ' → logprob: -13.000569343566895
    9. 'str' → logprob: -13.750569343566895
    10. '  ' → logprob: -14.000569343566895

Token 142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.182190554682165e-05
    2. '[root' → logprob: -9.750061988830566
    3. '[' → logprob: -12.875061988830566
    4. '[s' → logprob: -14.750061988830566
    5. 'i' → logprob: -15.500061988830566
    6. '[str' → logprob: -16.00006103515625
    7. 's' → logprob: -16.37506103515625
    8. 'root' → logprob: -16.87506103515625
    9. '[I' → logprob: -17.12506103515625
    10. '[parent' → logprob: -17.87506103515625

Token 143: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.44743943214416504
    2. ']' → logprob: -1.572439432144165
    3. ']==' → logprob: -2.697439432144165
    4. ' ==' → logprob: -3.572439432144165
    5. '=='' → logprob: -3.822439432144165
    6. ''' → logprob: -4.197439193725586
    7. ']=='' → logprob: -4.572439193725586
    8. ''i' → logprob: -6.447439193725586
    9. '']' → logprob: -6.572439193725586
    10. ')' → logprob: -6.697439193725586

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030686063109897077
    2. ' ' → logprob: -9.250307083129883
    3. ''' → logprob: -9.750307083129883
    4. 'root' → logprob: -9.875307083129883
    5. 's' → logprob: -10.250307083129883
    6. ''s' → logprob: -10.375307083129883
    7. '2' → logprob: -11.375307083129883
    8. 'i' → logprob: -12.375307083129883
    9. ' root' → logprob: -12.875307083129883
    10. ')' → logprob: -13.000307083129883

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09101514518260956
    2. ''' → logprob: -3.091015100479126
    3. 'i' → logprob: -3.841015100479126
    4. ''i' → logprob: -4.966015338897705
    5. '')' → logprob: -5.716015338897705
    6. 's' → logprob: -5.841015338897705
    7. 'root' → logprob: -5.966015338897705
    8. '0' → logprob: -6.591015338897705
    9. ')' → logprob: -6.591015338897705
    10. ''s' → logprob: -7.466015338897705

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03311004117131233
    2. ']==' → logprob: -3.5331101417541504
    3. ']=='' → logprob: -6.15811014175415
    4. '==' → logprob: -7.03311014175415
    5. '']' → logprob: -9.033109664916992
    6. ' ==' → logprob: -9.658109664916992
    7. ' ]' → logprob: -9.783109664916992
    8. ''' → logprob: -9.908109664916992
    9. '=='' → logprob: -10.658109664916992
    10. ':' → logprob: -12.158109664916992

Token 147: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12237969040870667
    2. ' ==' → logprob: -2.247379779815674
    3. '=='' → logprob: -4.872379779815674
    4. '=' → logprob: -6.872379779815674
    5. ''' → logprob: -7.247379779815674
    6. '==
' → logprob: -10.622379302978516
    7. ']==' → logprob: -11.247379302978516
    8. ' =='' → logprob: -11.622379302978516
    9. ')' → logprob: -11.747379302978516
    10. ' =' → logprob: -11.997379302978516

Token 148: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004082674626260996
    2. ' '' → logprob: -5.629082679748535
    3. '0' → logprob: -8.629082679748535
    4. '')' → logprob: -9.504082679748535
    5. ' ' → logprob: -9.504082679748535
    6. '1' → logprob: -9.879082679748535
    7. 's' → logprob: -10.379082679748535
    8. '"' → logprob: -10.754082679748535
    9. ''s' → logprob: -11.254082679748535
    10. ')' → logprob: -11.754082679748535

Token 149: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4134001135826111
    2. '1' → logprob: -1.1634001731872559
    3. ''' → logprob: -3.663400173187256
    4. '')' → logprob: -8.038399696350098
    5. ')' → logprob: -9.538399696350098
    6. '('' → logprob: -10.913399696350098
    7. ' '' → logprob: -10.975899696350098
    8. ' ' → logprob: -11.038399696350098
    9. ''s' → logprob: -11.350899696350098
    10. '"' → logprob: -11.475899696350098

Token 150: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3378645181655884
    2. ':
' → logprob: -2.337864398956299
    3. '):' → logprob: -2.587864398956299
    4. '':' → logprob: -2.712864398956299
    5. '):
' → logprob: -3.462864398956299
    6. ''):
' → logprob: -5.087864398956299
    7. ')' → logprob: -5.212864398956299
    8. ''):' → logprob: -6.462864398956299
    9. '':
' → logprob: -6.587864398956299
    10. '')' → logprob: -6.712864398956299

Token 151: '           ' (ID: 352)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.05622861534357071
    2. ':' → logprob: -4.0562286376953125
    3. ' root' → logprob: -4.5562286376953125
    4. ':
' → logprob: -4.6812286376953125
    5. '=' → logprob: -4.8062286376953125
    6. '       ' → logprob: -5.6812286376953125
    7. '           ' → logprob: -6.1812286376953125
    8. ' =' → logprob: -6.6812286376953125
    9. '=root' → logprob: -7.1812286376953125
    10. '   ' → logprob: -7.6812286376953125

Token 152: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.0060111526399850845
    2. ' root' → logprob: -5.881011009216309
    3. 'i' → logprob: -6.131011009216309
    4. '
' → logprob: -7.381011009216309
    5. '	root' → logprob: -9.006011009216309
    6. '   ' → logprob: -9.131011009216309
    7. '           ' → logprob: -10.131011009216309
    8. ' i' → logprob: -10.256011009216309
    9. '       ' → logprob: -10.506011009216309
    10. '```' → logprob: -11.506011009216309

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270207166671753
    2. ' =' → logprob: -2.127020835876465
    3. '=i' → logprob: -9.377020835876465
    4. '+=' → logprob: -11.877020835876465
    5. '*=' → logprob: -14.627020835876465
    6. ' +=' → logprob: -15.252020835876465
    7. '=

' → logprob: -16.37701988220215
    8. ',' → logprob: -16.50201988220215
    9. '＝' → logprob: -16.62701988220215
    10. '=int' → logprob: -16.87701988220215

Token 154: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006271334132179618
    2. ' i' → logprob: -7.375627040863037
    3. '<|end|>' → logprob: -14.500627517700195
    4. '	i' → logprob: -17.125627517700195
    5. ' ' → logprob: -17.375627517700195
    6. '<|end|>' → logprob: -18.000627517700195
    7. '   ' → logprob: -18.250627517700195
    8. '2' → logprob: -18.625627517700195
    9. '
' → logprob: -18.625627517700195
    10. '*i' → logprob: -19.000627517700195

Token 155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06142491102218628
    2. 'i' → logprob: -3.561424970626831
    3. '   ' → logprob: -4.311424732208252
    4. '
' → logprob: -4.311424732208252
    5. ' i' → logprob: -5.936424732208252
    6. '<|end|>' → logprob: -6.936424732208252
    7. '<|end|>' → logprob: -8.43642520904541
    8. '[i' → logprob: -9.43642520904541
    9. '	i' → logprob: -9.68642520904541
    10. ',i' → logprob: -9.68642520904541

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12414995580911636
    2. '   ' → logprob: -2.749150037765503
    3. 'i' → logprob: -3.124150037765503
    4. ' i' → logprob: -4.749149799346924
    5. ',i' → logprob: -10.749150276184082
    6. '    ' → logprob: -10.874150276184082
    7. '
' → logprob: -10.874150276184082
    8. '	i' → logprob: -11.124150276184082
    9. '```' → logprob: -11.124150276184082
    10. ' ' → logprob: -11.874150276184082

Token 157: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0032430703286081553
    2. ' i' → logprob: -5.7532429695129395
    3. '
' → logprob: -10.128243446350098
    4. '   ' → logprob: -11.253243446350098
    5. '[i' → logprob: -12.503243446350098
    6. '	i' → logprob: -12.503243446350098
    7. '       ' → logprob: -13.878243446350098
    8. '```' → logprob: -13.878243446350098
    9. '+
' → logprob: -14.753243446350098
    10. ',i' → logprob: -15.003243446350098

Token 158: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25443384051322937
    2. '+=' → logprob: -1.5044338703155518
    3. ' +=' → logprob: -6.004433631896973
    4. '++' → logprob: -11.129433631896973
    5. '=' → logprob: -11.629433631896973
    6. '<|end|>' → logprob: -12.754433631896973
    7. '+='' → logprob: -13.129433631896973
    8. '+="' → logprob: -13.254433631896973
    9. ' +' → logprob: -13.629433631896973
    10. '1' → logprob: -14.504433631896973

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.625011444091797
    4. '```' → logprob: -20.500011444091797
    5. '１' → logprob: -21.875011444091797
    6. '+' → logprob: -22.250011444091797
    7. '  ' → logprob: -22.375011444091797
    8. '2' → logprob: -22.500011444091797
    9. '<|end|>' → logprob: -22.500011444091797
    10. '۱' → logprob: -22.875011444091797

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '`' → logprob: -20.000001907348633
    6. '１' → logprob: -20.312501907348633
    7. '2' → logprob: -20.687501907348633
    8. '  ' → logprob: -20.750001907348633
    9. '+' → logprob: -21.000001907348633
    10. '۱' → logprob: -21.437501907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 158
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 29.11%
Précision adaptée (1ère position): 32.91%
Précision (top 10): 82.28%
================================================================================
