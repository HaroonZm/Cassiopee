================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lire trois entiers N, A et B à partir de l'entrée standard (saisie utilisateur).
# La fonction input() lit une ligne saisie sur le terminal.
# La méthode split() découpe la chaîne en utilisant l'espace comme séparateur, créant une liste de chaînes.
# La fonction map() applique int à chaque élément de la liste pour les convertir de chaînes en entiers.
N, A, B = map(int, input().split())

# Définir une constante M égale à 998244353.
# Ici, M est un nombre premier qui est souvent utilisé comme mod pour les calculs modulo dans la programmation compétitive.
M = 998244353

# P représente N+1. Cela sert pour dimensionner les tableaux plus loin.
P = N + 1

# Initialiser une variable f à 1.
# Elle servira à stocker les valeurs intermédiaires lors du calcul des factorielles.
f = 1

# Créer une liste F de taille P, avec chaque élément initialisé à 1.
# F sera utilisée pour stocker les valeurs des factorielles modulo M, tel que F[n] == n! % M.
F = [1] * P

# Créer une liste I de taille P, initialisée à 1.
# I sera utilisée pour stocker les inverses multiplicatifs des factorielles modulo M.
I = [1] * P

# Initialiser une variable z à 0.
# Cette variable accumulera le résultat final du calcul de la somme.
z = 0

# Définir R comme un alias local pour la fonction range().
# Cela permet d'écrire R(...) au lieu de range(...), ce qui aide à raccourcir le code.
R = range

# Vérifier si B est égal à 0.
if B == 0:
    # Si B == 0, alors on affiche 1 directement et on quitte le programme.
    # (Cela correspond à un cas particulier de l'énoncé.)
    print(1)
    exit()

# Boucle pour calculer les factorielles de 1 à N.
# Pour chaque entier n de 1 à N inclus (range(1, P) va de 1 à N inclus car P = N+1),
# nous actualisons f = f * n modulo M, et nous stockons la valeur courante dans F[n].
for n in R(1, P):
    # Calcul de la factorielle n! modulo M.
    f = f * n % M
    # Stockage du résultat dans la liste F à la position n.
    F[n] = f

# Calcul de l'inverse modulaire de N! modulo M à l'aide de la fonction pow().
# pow(f, M-2, M) utilise le petit théorème de Fermat pour obtenir l'inverse modulo d'un nombre premier.
I[N] = i = pow(f, M - 2, M)

# Boucle pour calculer l'inverse modulaire de toutes les autres factorielles, de N-1 à 0.
# Commencer de N à 1 exclus (donc on couvre N à 1 inclusivement).
for n in R(N, 1, -1):
    # i est multiplié par n puis réduit modulo M.
    i = i * n % M
    # On stocke la valeur d'inverse dans I[n-1].
    I[n - 1] = i

# Cette boucle principale calcule la somme désirée selon la formule donnée.
# Le nombre d'itérations dépend d'une condition basée sur les valeurs de N, B, et A.
if N - B - A:
    # Si N - B - A est non nul, alors range s'arrête à min(A+1, N-B).
    loop_range = min(A + 1, N - B)
else:
    # Sinon, la boucle va jusqu'à A + 1 (exclu).
    loop_range = A + 1

# Boucle sur l'ensemble des valeurs de k allant de 0 à loop_range-1 inclus.
for k in R(loop_range):
    # Q est défini comme N - B - k - 1.
    Q = N - B - k - 1
    # Calcul du terme de la somme qui sera ajouté à z, appliqué modulo M.
    # La formule comporte plusieurs arrangements de combinaisons binomiales,
    # réalisés à l'aide des factorielles et des inverses calculés précédemment.
    # Pour chaque valeur de k dans la plage définie :
    # - (B-k) est multiplié par la combinaison d'autres termes (voir la formule originale).
    # - Toutes les multiplications et divisions sont effectuées sous modulo M.
    # - Les divisions sont remplacées par des multiplications par des inverses modulo M.
    term = (B - k) * F[B + k - 1] * I[B] * I[k] * F[Q + A - k] * I[Q] * I[A - k]
    # Ajouter le terme à z et le réduire modulo M pour éviter le dépassement.
    z = (z + term) % M

# Afficher le résultat final de la somme calculée.
print(z)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lire' (ID: 57624)
  → Token d'amorce (pas de prédiction)

Token 2: ' trois' (ID: 25564)
  → Token d'amorce (pas de prédiction)

Token 3: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5542473793029785
    2. ' espaces' → logprob: -1.5542473793029785
    3. ' lignes' → logprob: -2.3042473793029785
    4. ' mots' → logprob: -3.3042473793029785
    5. ' ' → logprob: -3.4292473793029785
    6. 'l' → logprob: -3.8042473793029785
    7. ' ent' → logprob: -4.9292473793029785
    8. ' variables' → logprob: -6.1792473793029785
    9. ' nombres' → logprob: -6.1792473793029785
    10. ' espace' → logprob: -6.6792473793029785

Token 4: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0301202442497015
    2. 'ières' → logprob: -3.7801201343536377
    3. 'i' → logprob: -5.405120372772217
    4. 'r' → logprob: -6.780120372772217
    5. 'ier' → logprob: -7.280120372772217
    6. 'ié' → logprob: -8.780119895935059
    7. 'ri' → logprob: -9.030119895935059
    8. '```' → logprob: -9.155119895935059
    9. 'ière' → logprob: -10.530119895935059
    10. 'êtes' → logprob: -10.780119895935059

Token 5: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11819068342447281
    2. 'n' → logprob: -2.2431907653808594
    3. 'x' → logprob: -5.618190765380859
    4. '```' → logprob: -8.24319076538086
    5. 'i' → logprob: -8.36819076538086
    6. '_' → logprob: -8.36819076538086
    7. ',' → logprob: -8.74319076538086
    8. 'v' → logprob: -9.11819076538086
    9. 'ent' → logprob: -9.11819076538086
    10. '3' → logprob: -9.11819076538086

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027323106303811073
    2. '=' → logprob: -4.652323246002197
    3. 'n' → logprob: -4.902323246002197
    4. 's' → logprob: -5.402323246002197
    5. ' ,' → logprob: -6.402323246002197
    6. ' =' → logprob: -6.527323246002197
    7. '_' → logprob: -7.402323246002197
    8. 'a' → logprob: -8.277322769165039
    9. '```' → logprob: -8.402322769165039
    10. 'N' → logprob: -8.527322769165039

Token 7: ' A' (ID: 355)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.24812322854995728
    2. 'M' → logprob: -2.1231231689453125
    3. ' ' → logprob: -2.8731231689453125
    4. ',' → logprob: -3.6231231689453125
    5. ' ,' → logprob: -4.8731231689453125
    6. '  ' → logprob: -5.9981231689453125
    7. '```' → logprob: -6.9981231689453125
    8. ' K' → logprob: -7.2481231689453125
    9. 'a' → logprob: -7.3731231689453125
    10. '_' → logprob: -7.4981231689453125

Token 8: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008429800509475172
    2. ' ,' → logprob: -7.625843048095703
    3. ',b' → logprob: -9.125843048095703
    4. ',B' → logprob: -9.250843048095703
    5. 's' → logprob: -9.875843048095703
    6. ' =' → logprob: -10.375843048095703
    7. 'et' → logprob: -10.875843048095703
    8. '=' → logprob: -11.125843048095703
    9. ',N' → logprob: -12.625843048095703
    10. '1' → logprob: -13.250843048095703

Token 9: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.18749932944774628
    2. ' B' → logprob: -1.9374992847442627
    3. ' ' → logprob: -3.6874992847442627
    4. 'space' → logprob: -7.937499523162842
    5. '  ' → logprob: -8.062499046325684
    6. ' ' → logprob: -8.437499046325684
    7. 'M' → logprob: -8.562499046325684
    8. ''' → logprob: -8.687499046325684
    9. '`' → logprob: -9.062499046325684
    10. '_' → logprob: -9.812499046325684

Token 10: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2609553933143616
    2. 'N' → logprob: -1.8859553337097168
    3. ',' → logprob: -3.010955333709717
    4. '```' → logprob: -4.135955333709717
    5. '=' → logprob: -5.135955333709717
    6. ' =' → logprob: -6.135955333709717
    7. 'x' → logprob: -6.635955333709717
    8. '`' → logprob: -7.385955333709717
    9. ':' → logprob: -7.510955333709717
    10. 'a' → logprob: -7.635955333709717

Token 11: ' partir' (ID: 12100)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.36427003145217896
    2. 'l' → logprob: -2.114269971847534
    3. 'part' → logprob: -2.239269971847534
    4. 'la' → logprob: -4.364270210266113
    5. 'contin' → logprob: -4.489270210266113
    6. 'ent' → logprob: -4.739270210266113
    7. ' partir' → logprob: -5.364270210266113
    8. 'suite' → logprob: -5.489270210266113
    9. 'entrée' → logprob: -5.489270210266113
    10. 'entr' → logprob: -5.614270210266113

Token 12: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.11564628034830093
    2. ' de' → logprob: -2.8656463623046875
    3. 'd' → logprob: -3.3656463623046875
    4. ' du' → logprob: -5.7406463623046875
    5. ' des' → logprob: -5.9906463623046875
    6. '`' → logprob: -5.9906463623046875
    7. ''' → logprob: -6.1156463623046875
    8. 's' → logprob: -6.4906463623046875
    9. ' ' → logprob: -6.7406463623046875
    10. 'de' → logprob: -6.9906463623046875

Token 13: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6296559572219849
    2. 'input' → logprob: -1.3796559572219849
    3. 'l' → logprob: -2.5046558380126953
    4. 'stdin' → logprob: -2.8796558380126953
    5. 'f' → logprob: -4.004655838012695
    6. ' l' → logprob: -4.504655838012695
    7. ' stdin' → logprob: -4.754655838012695
    8. 'entrée' → logprob: -4.879655838012695
    9. ' la' → logprob: -5.504655838012695
    10. ' ' → logprob: -5.754655838012695

Token 14: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12333329021930695
    2. ''entrée' → logprob: -3.248333215713501
    3. 'e' → logprob: -3.748333215713501
    4. 'input' → logprob: -4.62333345413208
    5. '`' → logprob: -5.12333345413208
    6. 'a' → logprob: -5.12333345413208
    7. 'u' → logprob: -5.37333345413208
    8. '_' → logprob: -5.37333345413208
    9. ''espace' → logprob: -5.99833345413208
    10. ' input' → logprob: -6.37333345413208

Token 15: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2086006999015808
    2. 'N' → logprob: -1.7086007595062256
    3. ',' → logprob: -5.5836005210876465
    4. '```' → logprob: -5.9586005210876465
    5. 'x' → logprob: -8.708600997924805
    6. '`' → logprob: -8.833600997924805
    7. ':' → logprob: -9.208600997924805
    8. ',n' → logprob: -9.583600997924805
    9. ' N' → logprob: -9.833600997924805
    10. 'a' → logprob: -9.833600997924805

Token 16: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08157535642385483
    2. 'n' → logprob: -2.581575393676758
    3. '```' → logprob: -5.956575393676758
    4. '\n' → logprob: -10.456575393676758
    5. '``' → logprob: -10.956575393676758
    6. '`' → logprob: -11.331575393676758
    7. ',' → logprob: -11.456575393676758
    8. ' N' → logprob: -11.456575393676758
    9. 'x' → logprob: -12.081575393676758
    10. '#' → logprob: -12.956575393676758

Token 17: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013749362900853157
    2. 'n' → logprob: -4.638749599456787
    3. ',' → logprob: -6.763749599456787
    4. '):' → logprob: -7.263749599456787
    5. '```' → logprob: -7.388749599456787
    6. '`)' → logprob: -8.138749122619629
    7. '')' → logprob: -8.513749122619629
    8. ' )' → logprob: -8.638749122619629
    9. ':' → logprob: -8.638749122619629
    10. '#' → logprob: -8.888749122619629

Token 18: 'aisie' (ID: 168958)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5872635841369629
    2. 'p' → logprob: -1.837263584136963
    3. 'u' → logprob: -2.212263584136963
    4. '=' → logprob: -3.337263584136963
    5. 'a' → logprob: -3.712263584136963
    6. ')' → logprob: -3.837263584136963
    7. ' =' → logprob: -3.962263584136963
    8. 'ur' → logprob: -4.212263584136963
    9. 'td' → logprob: -4.587263584136963
    10. ',' → logprob: -4.712263584136963

Token 19: ' utilisateur' (ID: 115595)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09298904985189438
    2. '):' → logprob: -2.717988967895508
    3. ' )' → logprob: -4.092988967895508
    4. 's' → logprob: -6.342988967895508
    5. ',' → logprob: -6.842988967895508
    6. '`)' → logprob: -6.842988967895508
    7. ' ):' → logprob: -7.717988967895508
    8. '):
' → logprob: -8.217988967895508
    9. ':' → logprob: -8.592988967895508
    10. ' ' → logprob: -9.217988967895508

Token 20: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03469429165124893
    2. 'n' → logprob: -4.284694194793701
    3. '```' → logprob: -5.159694194793701
    4. ':' → logprob: -5.659694194793701
    5. ',' → logprob: -5.659694194793701
    6. '):' → logprob: -6.159694194793701
    7. '\n' → logprob: -6.909694194793701
    8. ' )' → logprob: -7.159694194793701
    9. '#' → logprob: -7.284694194793701
    10. ')
' → logprob: -7.659694194793701

Token 21: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014753920957446098
    2. 'n' → logprob: -4.264753818511963
    3. '```' → logprob: -7.514753818511963
    4. '\n' → logprob: -10.764754295349121
    5. '#' → logprob: -11.139754295349121
    6. ',' → logprob: -12.639754295349121
    7. '``' → logprob: -13.389754295349121
    8. '`' → logprob: -13.764754295349121
    9. ' N' → logprob: -13.764754295349121
    10. '\' → logprob: -14.389754295349121

Token 22: ' La' (ID: 3038)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20278526842594147
    2. 'n' → logprob: -1.8277852535247803
    3. ' N' → logprob: -3.8277852535247803
    4. ' n' → logprob: -7.452785491943359
    5. '```' → logprob: -8.57778549194336
    6. '#' → logprob: -9.20278549194336
    7. ' ```' → logprob: -10.95278549194336
    8. ' #' → logprob: -10.95278549194336
    9. ' ' → logprob: -11.32778549194336
    10. 'x' → logprob: -11.45278549194336

Token 23: ' fonction' (ID: 17610)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.664200484752655
    2. 'n' → logprob: -2.0392005443573
    3. 's' → logprob: -2.2892005443573
    4. 'N' → logprob: -2.4142005443573
    5. ' n' → logprob: -2.5392005443573
    6. ' ' → logprob: -3.9142005443573
    7. '#' → logprob: -3.9142005443573
    8. ' #' → logprob: -4.164200305938721
    9. ' code' → logprob: -5.164200305938721
    10. ' suite' → logprob: -6.039200305938721

Token 24: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19863854348659515
    2. 'input' → logprob: -2.323638439178467
    3. ' input' → logprob: -2.573638439178467
    4. ' def' → logprob: -5.323638439178467
    5. 'int' → logprob: -7.948638439178467
    6. '=input' → logprob: -8.323638916015625
    7. 'print' → logprob: -8.698638916015625
    8. ' int' → logprob: -9.198638916015625
    9. ' `' → logprob: -10.198638916015625
    10. '```' → logprob: -10.448638916015625

Token 25: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20182785391807556
    2. '(' → logprob: -1.701827883720398
    3. '(
' → logprob: -8.951828002929688
    4. '('' → logprob: -10.076828002929688
    5. 's' → logprob: -10.451828002929688
    6. '()`' → logprob: -10.451828002929688
    7. ')' → logprob: -10.701828002929688
    8. '("' → logprob: -10.951828002929688
    9. '().' → logprob: -11.076828002929688
    10. '()

' → logprob: -11.451828002929688

Token 26: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22134162485599518
    2. '()' → logprob: -1.721341609954834
    3. ')' → logprob: -4.846341609954834
    4. ' (' → logprob: -5.971341609954834
    5. ' ' → logprob: -6.596341609954834
    6. ' )' → logprob: -6.596341609954834
    7. '.' → logprob: -6.846341609954834
    8. '(
' → logprob: -6.971341609954834
    9. ',' → logprob: -7.221341609954834
    10. 's' → logprob: -7.471341609954834

Token 27: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8523426055908203
    2. ' ' → logprob: -1.2273426055908203
    3. ' une' → logprob: -2.1023426055908203
    4. '(' → logprob: -2.9773426055908203
    5. ' un' → logprob: -3.3523426055908203
    6. ''' → logprob: -4.10234260559082
    7. ' la' → logprob: -4.60234260559082
    8. ' l' → logprob: -4.85234260559082
    9. '  ' → logprob: -4.85234260559082
    10. ' ()' → logprob: -5.47734260559082

Token 28: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.19061540067195892
    2. ' ' → logprob: -1.9406154155731201
    3. ' chaîne' → logprob: -4.815615177154541
    4. 'ligne' → logprob: -5.065615177154541
    5. ' line' → logprob: -5.815615177154541
    6. '()' → logprob: -5.940615177154541
    7. ' )' → logprob: -6.315615177154541
    8. 'chaine' → logprob: -6.565615177154541
    9. '  ' → logprob: -6.940615177154541
    10. ')' → logprob: -7.315615177154541

Token 29: ' sais' (ID: 30010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11699863523244858
    2. 'N' → logprob: -2.8669986724853516
    3. ',' → logprob: -3.9919986724853516
    4. '```' → logprob: -4.241998672485352
    5. ')' → logprob: -5.616998672485352
    6. '(' → logprob: -6.241998672485352
    7. ' N' → logprob: -6.241998672485352
    8. '#' → logprob: -6.241998672485352
    9. 'a' → logprob: -6.491998672485352
    10. 'x' → logprob: -6.866998672485352

Token 30: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6082175970077515
    2. 'rie' → logprob: -0.9832175970077515
    3. 'ie' → logprob: -2.858217716217041
    4. 'sie' → logprob: -3.858217716217041
    5. '#' → logprob: -7.358217716217041
    6. 'es' → logprob: -7.483217716217041
    7. 'r' → logprob: -7.733217716217041
    8. 's' → logprob: -7.983217716217041
    9. '```' → logprob: -8.358217239379883
    10. '
' → logprob: -8.858217239379883

Token 31: ' sur' (ID: 1512)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16554108262062073
    2. 'N' → logprob: -2.165541172027588
    3. '```' → logprob: -4.290541172027588
    4. ',' → logprob: -4.665541172027588
    5. ':' → logprob: -5.415541172027588
    6. '#' → logprob: -6.040541172027588
    7. ' N' → logprob: -6.415541172027588
    8. ')' → logprob: -7.165541172027588
    9. '\n' → logprob: -7.165541172027588
    10. 'a' → logprob: -7.290541172027588

Token 32: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03757660463452339
    2. ' l' → logprob: -4.412576675415039
    3. 'la' → logprob: -5.162576675415039
    4. 'standard' → logprob: -5.162576675415039
    5. 'stdin' → logprob: -5.287576675415039
    6. 'une' → logprob: -5.912576675415039
    7. ' standard' → logprob: -6.662576675415039
    8. 'input' → logprob: -6.912576675415039
    9. ' la' → logprob: -7.537576675415039
    10. ' stdin' → logprob: -7.787576675415039

Token 33: ' terminal' (ID: 21801)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.9972346425056458
    2. ' clavier' → logprob: -0.9972346425056458
    3. 'standard' → logprob: -1.747234582901001
    4. 'entrée' → logprob: -4.12223482131958
    5. 'cl' → logprob: -4.37223482131958
    6. 'terminal' → logprob: -4.37223482131958
    7. ' standard' → logprob: -4.49723482131958
    8. ' stdin' → logprob: -4.99723482131958
    9. 's' → logprob: -5.49723482131958
    10. 'ent' → logprob: -5.74723482131958

Token 34: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6433678865432739
    2. 'N' → logprob: -0.7683678865432739
    3. '```' → logprob: -5.018367767333984
    4. '\n' → logprob: -6.393367767333984
    5. ',' → logprob: -7.643367767333984
    6. 'a' → logprob: -7.768367767333984
    7. ' N' → logprob: -8.393367767333984
    8. '
' → logprob: -8.518367767333984
    9. '`' → logprob: -8.518367767333984
    10. '``' → logprob: -9.018367767333984

Token 35: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03057956136763096
    2. 'n' → logprob: -3.5305795669555664
    3. '```' → logprob: -7.280579566955566
    4. '#' → logprob: -9.905579566955566
    5. '``' → logprob: -10.655579566955566
    6. '`' → logprob: -11.280579566955566
    7. ',' → logprob: -11.655579566955566
    8. '
' → logprob: -11.655579566955566
    9. ' N' → logprob: -12.030579566955566
    10. '\n' → logprob: -12.405579566955566

Token 36: ' La' (ID: 3038)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06305896490812302
    2. 'n' → logprob: -2.813058853149414
    3. '```' → logprob: -7.063058853149414
    4. '`' → logprob: -10.063058853149414
    5. '#' → logprob: -10.188058853149414
    6. 'A' → logprob: -10.813058853149414
    7. 'a' → logprob: -10.813058853149414
    8. '\n' → logprob: -11.063058853149414
    9. 'x' → logprob: -11.188058853149414
    10. ' N' → logprob: -11.188058853149414

Token 37: ' méthode' (ID: 71490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1370559930801392
    2. 'val' → logprob: -1.1370559930801392
    3. ' #' → logprob: -2.3870558738708496
    4. 'n' → logprob: -2.8870558738708496
    5. ' ' → logprob: -3.2620558738708496
    6. ' N' → logprob: -3.2620558738708496
    7. ' val' → logprob: -3.8870558738708496
    8. 's' → logprob: -3.8870558738708496
    9. 'l' → logprob: -4.13705587387085
    10. 'ent' → logprob: -4.26205587387085

Token 38: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4766976237297058
    2. ' split' → logprob: -0.9766976237297058
    3. 'strip' → logprob: -6.1016974449157715
    4. ' strip' → logprob: -7.9766974449157715
    5. '.split' → logprob: -10.85169792175293
    6. ' .' → logprob: -12.35169792175293
    7. '.strip' → logprob: -13.10169792175293
    8. 'rstrip' → logprob: -13.10169792175293
    9. 'spl' → logprob: -13.22669792175293
    10. ' input' → logprob: -13.35169792175293

Token 39: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.132555291056633
    2. '(' → logprob: -2.1325552463531494
    3. '('' → logprob: -5.3825554847717285
    4. '().' → logprob: -7.7575554847717285
    5. '("("' → logprob: -7.8825554847717285
    6. '("' → logprob: -10.13255500793457
    7. '(
' → logprob: -10.75755500793457
    8. '<|end|>' → logprob: -10.88255500793457
    9. '('.')' → logprob: -11.25755500793457
    10. ' ()' → logprob: -11.38255500793457

Token 40: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07187356799840927
    2. '().' → logprob: -2.946873664855957
    3. '(' → logprob: -4.321873664855957
    4. 'split' → logprob: -6.946873664855957
    5. '.' → logprob: -7.821873664855957
    6. ' ()' → logprob: -8.071873664855957
    7. '.split' → logprob: -8.196873664855957
    8. ')' → logprob: -8.571873664855957
    9. 's' → logprob: -8.696873664855957
    10. '('' → logprob: -8.696873664855957

Token 41: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0388849675655365
    2. 'p' → logprob: -3.2888848781585693
    3. 'per' → logprob: -8.538885116577148
    4. 'page' → logprob: -8.913885116577148
    5. 'pé' → logprob: -9.038885116577148
    6. 'pera' → logprob: -9.413885116577148
    7. '#' → logprob: -9.538885116577148
    8. 'пе' → logprob: -9.663885116577148
    9. 'ppe' → logprob: -10.288885116577148
    10. ' pe' → logprob: -10.663885116577148

Token 42: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.045302119106054306
    2. ' la' → logprob: -4.295301914215088
    3. '<|end|>' → logprob: -5.170301914215088
    4. 'l' → logprob: -5.420301914215088
    5. ' l' → logprob: -5.795301914215088
    6. '(' → logprob: -5.795301914215088
    7. ' ' → logprob: -5.920301914215088
    8. 'la' → logprob: -5.920301914215088
    9. '('' → logprob: -5.920301914215088
    10. 'the' → logprob: -6.920301914215088

Token 43: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2200547456741333
    2. 'chaine' → logprob: -2.0950546264648438
    3. 'cha' → logprob: -3.8450546264648438
    4. ' ligne' → logprob: -3.8450546264648438
    5. ' chaine' → logprob: -3.9700546264648438
    6. 'ligne' → logprob: -4.595054626464844
    7. ' ' → logprob: -7.345054626464844
    8. ' cha' → logprob: -7.595054626464844
    9. 'entrée' → logprob: -7.845054626464844
    10. ' string' → logprob: -7.845054626464844

Token 44: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08910512179136276
    2. ')' → logprob: -3.0891051292419434
    3. 'input' → logprob: -4.464105129241943
    4. ' =' → logprob: -5.089105129241943
    5. '=' → logprob: -5.464105129241943
    6. '=input' → logprob: -6.214105129241943
    7. ' input' → logprob: -6.714105129241943
    8. 's' → logprob: -6.839105129241943
    9. 'en' → logprob: -6.839105129241943
    10. 'de' → logprob: -7.089105129241943

Token 45: ' utilisant' (ID: 92474)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.649497389793396
    2. ' tokens' → logprob: -1.649497389793396
    3. ' une' → logprob: -2.5244975090026855
    4. ' des' → logprob: -2.5244975090026855
    5. 'une' → logprob: -3.6494975090026855
    6. ' morceaux' → logprob: -3.8994975090026855
    7. 'des' → logprob: -4.3994975090026855
    8. ' mots' → logprob: -4.6494975090026855
    9. '```' → logprob: -4.7744975090026855
    10. 'liste' → logprob: -4.8994975090026855

Token 46: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7306739091873169
    2. ' ' → logprob: -1.480673909187317
    3. 'l' → logprob: -1.605673909187317
    4. ''' → logprob: -3.2306737899780273
    5. ' ' → logprob: -4.605673789978027
    6. ' un' → logprob: -4.855673789978027
    7. 'space' → logprob: -5.480673789978027
    8. ' '' → logprob: -5.605673789978027
    9. 'un' → logprob: -5.730673789978027
    10. ' des' → logprob: -5.730673789978027

Token 47: ''espace' (ID: 118124)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2808242738246918
    2. ''espace' → logprob: -2.1558241844177246
    3. 'es' → logprob: -2.5308241844177246
    4. ''a' → logprob: -4.030824184417725
    5. 'a' → logprob: -4.655824184417725
    6. ''esp' → logprob: -4.905824184417725
    7. 'e' → logprob: -5.280824184417725
    8. ''un' → logprob: -5.905824184417725
    9. ''u' → logprob: -6.405824184417725
    10. ''é' → logprob: -6.905824184417725

Token 48: ' comme' (ID: 7971)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2302289009094238
    2. 's' → logprob: -1.6052289009094238
    3. ',' → logprob: -2.105228900909424
    4. '[' → logprob: -2.355228900909424
    5. ')' → logprob: -2.730228900909424
    6. 'N' → logprob: -2.980228900909424
    7. '```' → logprob: -3.230228900909424
    8. '#' → logprob: -3.980228900909424
    9. '\n' → logprob: -3.980228900909424
    10. '.' → logprob: -4.230228900909424

Token 49: ' sépar' (ID: 97160)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2354014813899994
    2. ' ' → logprob: -3.4854013919830322
    3. 's' → logprob: -3.4854013919830322
    4. '<|end|>' → logprob: -3.4854013919830322
    5. 'u' → logprob: -3.9854013919830322
    6. 'a' → logprob: -4.110401630401611
    7. 'delimiter' → logprob: -4.360401630401611
    8. 'n' → logprob: -4.985401630401611
    9. 'separator' → logprob: -5.235401630401611
    10. '"' → logprob: -5.360401630401611

Token 50: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.10108281672000885
    2. 'a' → logprob: -2.9760828018188477
    3. 'ate' → logprob: -3.9760828018188477
    4. 'atrice' → logprob: -4.976082801818848
    5. 'e' → logprob: -5.476082801818848
    6. '```' → logprob: -5.976082801818848
    7. 'ation' → logprob: -5.976082801818848
    8. 'r' → logprob: -6.101082801818848
    9. 'at' → logprob: -6.601082801818848
    10. ' at' → logprob: -6.976082801818848

Token 51: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20918911695480347
    2. 'n' → logprob: -1.7091891765594482
    3. '\n' → logprob: -6.459188938140869
    4. '```' → logprob: -6.459188938140869
    5. '[' → logprob: -6.584188938140869
    6. '#' → logprob: -6.584188938140869
    7. ',' → logprob: -6.959188938140869
    8. '\' → logprob: -8.709189414978027
    9. '' → logprob: -8.709189414978027
    10. '
' → logprob: -8.959189414978027

Token 52: ' cré' (ID: 12201)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04733997955918312
    2. 'N' → logprob: -4.297339916229248
    3. '[' → logprob: -4.422339916229248
    4. 'i' → logprob: -5.672339916229248
    5. 'e' → logprob: -5.797339916229248
    6. '#' → logprob: -5.922339916229248
    7. 't' → logprob: -6.547339916229248
    8. '=' → logprob: -6.547339916229248
    9. 'a' → logprob: -6.922339916229248
    10. ',' → logprob: -7.047339916229248

Token 53: 'ant' (ID: 493)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7352250814437866
    2. 'er' → logprob: -1.2352250814437866
    3. 'a' → logprob: -2.610225200653076
    4. 'v' → logprob: -2.735225200653076
    5. 'e' → logprob: -3.610225200653076
    6. 'é' → logprob: -4.235225200653076
    7. 'm' → logprob: -4.485225200653076
    8. '```' → logprob: -4.610225200653076
    9. 'pa' → logprob: -5.360225200653076
    10. 'à' → logprob: -5.860225200653076

Token 54: ' une' (ID: 2463)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21095772087574005
    2. ' un' → logprob: -2.2109577655792236
    3. ' une' → logprob: -3.5859577655792236
    4. ' ' → logprob: -4.2109575271606445
    5. ''' → logprob: -4.8359575271606445
    6. '[' → logprob: -4.8359575271606445
    7. 'un' → logprob: -5.2109575271606445
    8. '[]' → logprob: -5.7109575271606445
    9. ' a' → logprob: -6.4609575271606445
    10. 'a' → logprob: -6.8359575271606445

Token 55: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -1.371827244758606
    2. 's' → logprob: -1.621827244758606
    3. 'list' → logprob: -2.1218271255493164
    4. 'liste' → logprob: -2.3718271255493164
    5. '[' → logprob: -2.6218271255493164
    6. ' ' → logprob: -2.7468271255493164
    7. '[]' → logprob: -2.7468271255493164
    8. ' list' → logprob: -3.2468271255493164
    9. '['' → logprob: -3.7468271255493164
    10. ' []' → logprob: -3.7468271255493164

Token 56: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4388575851917267
    2. 'n' → logprob: -2.0638575553894043
    3. 's' → logprob: -2.6888575553894043
    4. ',' → logprob: -2.8138575553894043
    5. '_' → logprob: -3.5638575553894043
    6. '=' → logprob: -3.5638575553894043
    7. '.' → logprob: -3.9388575553894043
    8. ' =' → logprob: -4.938857555389404
    9. '[n' → logprob: -6.188857555389404
    10. '[
' → logprob: -6.188857555389404

Token 57: ' chaînes' (ID: 179904)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0498480796813965
    2. ' chaînes' → logprob: -1.7998480796813965
    3. 'tokens' → logprob: -2.0498480796813965
    4. 'str' → logprob: -2.1748480796813965
    5. 'cha' → logprob: -2.6748480796813965
    6. 'chain' → logprob: -3.2998480796813965
    7. ' tokens' → logprob: -3.4248480796813965
    8. 'chaine' → logprob: -3.9248480796813965
    9. 'strings' → logprob: -4.0498480796813965
    10. 'élé' → logprob: -4.2998480796813965

Token 58: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14160294830799103
    2. '[' → logprob: -2.8916029930114746
    3. 'N' → logprob: -3.1416029930114746
    4. '=' → logprob: -4.016602993011475
    5. ',' → logprob: -5.016602993011475
    6. ' =' → logprob: -6.016602993011475
    7. 's' → logprob: -7.141602993011475
    8. '_' → logprob: -7.141602993011475
    9. 'x' → logprob: -7.391602993011475
    10. 'a' → logprob: -7.516602993011475

Token 59: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5284201502799988
    2. 'n' → logprob: -0.9034201502799988
    3. '[' → logprob: -6.1534199714660645
    4. ',' → logprob: -6.7784199714660645
    5. '=' → logprob: -7.0284199714660645
    6. '```' → logprob: -7.6534199714660645
    7. '#' → logprob: -8.528420448303223
    8. '`' → logprob: -9.278420448303223
    9. 'a' → logprob: -9.653420448303223
    10. '(' → logprob: -10.278420448303223

Token 60: ' La' (ID: 3038)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.048774491995573044
    2. 'n' → logprob: -3.048774480819702
    3. '#' → logprob: -9.423774719238281
    4. '```' → logprob: -10.423774719238281
    5. '[' → logprob: -11.298774719238281
    6. 'x' → logprob: -11.548774719238281
    7. 'v' → logprob: -11.548774719238281
    8. 'a' → logprob: -11.923774719238281
    9. 'i' → logprob: -12.048774719238281
    10. '`' → logprob: -12.673774719238281

Token 61: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0260288715362549
    2. ' N' → logprob: -1.7760288715362549
    3. '#' → logprob: -2.151028871536255
    4. ' ' → logprob: -2.401028871536255
    5. 's' → logprob: -2.776028871536255
    6. ' #' → logprob: -3.276028871536255
    7. 'l' → logprob: -3.526028871536255
    8. 'N' → logprob: -4.026028633117676
    9. ' n' → logprob: -4.151028633117676
    10. 'a' → logprob: -4.526028633117676

Token 62: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1950283795595169
    2. ' int' → logprob: -2.320028305053711
    3. 'map' → logprob: -3.195028305053711
    4. 'int' → logprob: -4.695028305053711
    5. ' input' → logprob: -4.695028305053711
    6. ' list' → logprob: -4.820028305053711
    7. ' n' → logprob: -5.570028305053711
    8. ' N' → logprob: -5.695028305053711
    9. 'n' → logprob: -6.945028305053711
    10. ' i' → logprob: -7.195028305053711

Token 63: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16603951156139374
    2. '(int' → logprob: -2.16603946685791
    3. '(lambda' → logprob: -3.29103946685791
    4. '(str' → logprob: -7.16603946685791
    5. '()' → logprob: -10.04103946685791
    6. '<int' → logprob: -10.16603946685791
    7. '(
' → logprob: -10.16603946685791
    8. '<|end|>' → logprob: -10.54103946685791
    9. '(list' → logprob: -10.91603946685791
    10. 'int' → logprob: -11.04103946685791

Token 64: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030032580252736807
    2. '(int' → logprob: -6.753003120422363
    3. '(lambda' → logprob: -7.253003120422363
    4. '(
' → logprob: -7.753003120422363
    5. ' (' → logprob: -9.378003120422363
    6. '<|end|>' → logprob: -9.378003120422363
    7. '()' → logprob: -9.753003120422363
    8. ' applies' → logprob: -9.878003120422363
    9. 's' → logprob: -9.878003120422363
    10. ' ' → logprob: -10.003003120422363

Token 65: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07713419198989868
    2. '(int' → logprob: -2.702134132385254
    3. ' int' → logprob: -5.452134132385254
    4. '(' → logprob: -6.452134132385254
    5. '(str' → logprob: -7.577134132385254
    6. 'str' → logprob: -8.077134132385254
    7. '(lambda' → logprob: -8.827134132385254
    8. '```' → logprob: -8.952134132385254
    9. 'lambda' → logprob: -10.077134132385254
    10. '<int' → logprob: -10.077134132385254

Token 66: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13213101029396057
    2. '(lambda' → logprob: -2.7571310997009277
    3. '(int' → logprob: -2.8821310997009277
    4. '()' → logprob: -6.632131099700928
    5. '(str' → logprob: -6.757131099700928
    6. '(
' → logprob: -7.257131099700928
    7. '(input' → logprob: -8.25713062286377
    8. 's' → logprob: -8.38213062286377
    9. '<|end|>' → logprob: -9.38213062286377
    10. '(convert' → logprob: -9.88213062286377

Token 67: ' chaque' (ID: 21194)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6104544997215271
    2. 'input' → logprob: -0.8604544997215271
    3. 'l' → logprob: -4.110454559326172
    4. ' l' → logprob: -5.235454559326172
    5. 'la' → logprob: -5.735454559326172
    6. ' la' → logprob: -5.860454559326172
    7. ' chaque' → logprob: -6.235454559326172
    8. 's' → logprob: -7.360454559326172
    9. 'int' → logprob: -7.485454559326172
    10. 'part' → logprob: -7.610454559326172

Token 68: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0013830940006300807
    2. 'element' → logprob: -7.501383304595947
    3. ' élément' → logprob: -8.001382827758789
    4. 'm' → logprob: -9.376382827758789
    5. 'elem' → logprob: -9.626382827758789
    6. 'part' → logprob: -10.001382827758789
    7. '(' → logprob: -10.001382827758789
    8. 'é' → logprob: -10.251382827758789
    9. 'entrée' → logprob: -10.626382827758789
    10. ')' → logprob: -10.626382827758789

Token 69: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003580945311114192
    2. '(
' → logprob: -6.7535810470581055
    3. '(input' → logprob: -7.1285810470581055
    4. '(int' → logprob: -7.2535810470581055
    5. '(lambda' → logprob: -7.6285810470581055
    6. '(n' → logprob: -8.753581047058105
    7. '()' → logprob: -10.128581047058105
    8. '(`' → logprob: -10.378581047058105
    9. '(map' → logprob: -10.628581047058105
    10. ')' → logprob: -10.628581047058105

Token 70: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8126140236854553
    2. 'la' → logprob: -1.4376139640808105
    3. ' la' → logprob: -2.0626139640808105
    4. ' l' → logprob: -2.5626139640808105
    5. 'input' → logprob: -2.8126139640808105
    6. ' input' → logprob: -2.9376139640808105
    7. 'split' → logprob: -7.8126139640808105
    8. 's' → logprob: -8.062614440917969
    9. 'entrée' → logprob: -8.312614440917969
    10. 'spl' → logprob: -8.437614440917969

Token 71: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3839520215988159
    2. ' liste' → logprob: -1.258952021598816
    3. 'input' → logprob: -3.8839521408081055
    4. 'list' → logprob: -5.2589521408081055
    5. ' input' → logprob: -6.0089521408081055
    6. 'entrée' → logprob: -6.3839521408081055
    7. 'ligne' → logprob: -6.5089521408081055
    8. 'split' → logprob: -6.7589521408081055
    9. 'map' → logprob: -7.3839521408081055
    10. ' ligne' → logprob: -7.7589521408081055

Token 72: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10731568932533264
    2. 'n' → logprob: -2.7323157787323
    3. '(
' → logprob: -4.357315540313721
    4. 'N' → logprob: -5.107315540313721
    5. 's' → logprob: -5.607315540313721
    6. ')' → logprob: -6.107315540313721
    7. 'i' → logprob: -6.232315540313721
    8. '()' → logprob: -6.357315540313721
    9. ',' → logprob: -6.357315540313721
    10. 'a' → logprob: -7.107315540313721

Token 73: ' les' (ID: 1341)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.02898857742547989
    2. 'convert' → logprob: -4.028988361358643
    3. ' transformer' → logprob: -5.153988361358643
    4. 'transform' → logprob: -5.903988361358643
    5. ' convert' → logprob: -6.153988361358643
    6. 'con' → logprob: -10.4039888381958
    7. ' lire' → logprob: -11.0289888381958
    8. 'converter' → logprob: -11.0289888381958
    9. ' ' → logprob: -11.1539888381958
    10. ' transform' → logprob: -11.6539888381958

Token 74: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.027643896639347076
    2. 'convert' → logprob: -4.27764368057251
    3. ' transformer' → logprob: -4.77764368057251
    4. 'transform' → logprob: -5.40264368057251
    5. ' convert' → logprob: -7.90264368057251
    6. 'con' → logprob: -9.902644157409668
    7. 'converter' → logprob: -11.027644157409668
    8. ' transforme' → logprob: -12.402644157409668
    9. ' transform' → logprob: -12.652644157409668
    10. ' Transformer' → logprob: -12.902644157409668

Token 75: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028319843113422394
    2. '(
' → logprob: -6.752831935882568
    3. '(int' → logprob: -7.002831935882568
    4. ',' → logprob: -8.377832412719727
    5. 's' → logprob: -9.252832412719727
    6. ' (' → logprob: -9.377832412719727
    7. ')' → logprob: -9.877832412719727
    8. 'int' → logprob: -10.002832412719727
    9. '.' → logprob: -10.252832412719727
    10. '()' → logprob: -10.627832412719727

Token 76: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.6424947381019592
    2. ' chaîne' → logprob: -2.1424946784973145
    3. 's' → logprob: -2.2674946784973145
    4. ' ' → logprob: -3.0174946784973145
    5. ' strings' → logprob: -3.0174946784973145
    6. 'chaine' → logprob: -3.2674946784973145
    7. ' string' → logprob: -3.5174946784973145
    8. ' s' → logprob: -3.5174946784973145
    9. ' str' → logprob: -3.7674946784973145
    10. ' chaine' → logprob: -4.6424946784973145

Token 77: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04466986656188965
    2. 's' → logprob: -4.419670104980469
    3. ',' → logprob: -4.794670104980469
    4. ')' → logprob: -4.919670104980469
    5. '_' → logprob: -5.294670104980469
    6. 'map' → logprob: -6.544670104980469
    7. '[' → logprob: -7.169670104980469
    8. '```' → logprob: -7.169670104980469
    9. '(
' → logprob: -7.294670104980469
    10. 'int' → logprob: -7.294670104980469

Token 78: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.4140488803386688
    2. 'ent' → logprob: -1.5390489101409912
    3. ' int' → logprob: -2.914048910140991
    4. ' nombres' → logprob: -3.414048910140991
    5. 'int' → logprob: -3.789048910140991
    6. ' integers' → logprob: -4.789048671722412
    7. ' entier' → logprob: -5.539048671722412
    8. ' ' → logprob: -7.289048671722412
    9. 'ints' → logprob: -7.664048671722412
    10. ' nombre' → logprob: -8.16404914855957

Token 79: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2522532641887665
    2. 'iers' → logprob: -1.5022532939910889
    3. 'ier' → logprob: -8.627253532409668
    4. 'ières' → logprob: -10.002253532409668
    5. '```' → logprob: -10.252253532409668
    6. 'ié' → logprob: -11.002253532409668
    7. 'e' → logprob: -11.377253532409668
    8. ' i' → logprob: -11.752253532409668
    9. 'ière' → logprob: -12.127253532409668
    10. '	i' → logprob: -12.502253532409668

Token 80: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2329803854227066
    2. 'n' → logprob: -1.6079803705215454
    3. ',' → logprob: -5.482980251312256
    4. ':' → logprob: -6.607980251312256
    5. '```' → logprob: -7.482980251312256
    6. '[' → logprob: -7.982980251312256
    7. '#' → logprob: -8.357980728149414
    8. '' → logprob: -9.107980728149414
    9. '

' → logprob: -9.232980728149414
    10. '
' → logprob: -9.607980728149414

Token 81: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00614634994417429
    2. 'n' → logprob: -5.131146430969238
    3. '```' → logprob: -8.631146430969238
    4. 'x' → logprob: -11.756146430969238
    5. '[' → logprob: -12.256146430969238
    6. '`' → logprob: -12.256146430969238
    7. '#' → logprob: -12.756146430969238
    8. '\' → logprob: -13.006146430969238
    9. 'a' → logprob: -13.006146430969238
    10. '\n' → logprob: -13.381146430969238

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.265633419388905e-05
    2. ' ,' → logprob: -9.875062942504883
    3. ',
' → logprob: -12.750062942504883
    4. '=' → logprob: -13.375062942504883
    5. ',N' → logprob: -13.375062942504883
    6. 's' → logprob: -13.875062942504883
    7. ' =' → logprob: -14.500062942504883
    8. 'a' → logprob: -14.625062942504883
    9. ',a' → logprob: -15.000062942504883
    10. ',n' → logprob: -15.250062942504883

Token 83: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06114291772246361
    2. ' ' → logprob: -3.186142921447754
    3. 'A' → logprob: -4.061142921447754
    4. ' ' → logprob: -7.936142921447754
    5. '  ' → logprob: -8.061142921447754
    6. '<|end|>' → logprob: -9.811142921447754
    7. ')' → logprob: -12.061142921447754
    8. ' ,' → logprob: -12.061142921447754
    9. ' )' → logprob: -13.311142921447754
    10. ' ' → logprob: -13.311142921447754

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002854447579011321
    2. ' ,' → logprob: -5.877854347229004
    3. '<|end|>' → logprob: -10.252854347229004
    4. ' ' → logprob: -12.002854347229004
    5. ',B' → logprob: -12.127854347229004
    6. ' =' → logprob: -13.627854347229004
    7. ')' → logprob: -14.877854347229004
    8. '  ' → logprob: -15.627854347229004
    9. ' B' → logprob: -15.752854347229004
    10. ',
' → logprob: -15.752854347229004

Token 85: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.03028378076851368
    2. 'B' → logprob: -3.6552836894989014
    3. ' ' → logprob: -5.5302839279174805
    4. '  ' → logprob: -12.03028392791748
    5. '<|end|>' → logprob: -13.40528392791748
    6. ' ' → logprob: -13.90528392791748
    7. ' and' → logprob: -14.15528392791748
    8. ' ,' → logprob: -14.53028392791748
    9. '    ' → logprob: -15.15528392791748
    10. '	B' → logprob: -15.40528392791748

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01847228966653347
    2. '=' → logprob: -4.018472194671631
    3. ',' → logprob: -8.143472671508789
    4. ' =
' → logprob: -10.643472671508789
    5. '<|end|>' → logprob: -12.893472671508789
    6. ')' → logprob: -13.518472671508789
    7. ' ' → logprob: -13.893472671508789
    8. ' ,' → logprob: -13.893472671508789
    9. '=input' → logprob: -14.393472671508789
    10. '=
' → logprob: -15.268472671508789

Token 87: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07889407873153687
    2. 'map' → logprob: -2.5788941383361816
    3. ' list' → logprob: -13.953893661499023
    4. 'm' → logprob: -14.203893661499023
    5. '	map' → logprob: -14.203893661499023
    6. ' input' → logprob: -14.453893661499023
    7. ' ' → logprob: -14.578893661499023
    8. ' ' → logprob: -15.078893661499023
    9. ' ma' → logprob: -15.578893661499023
    10. 'input' → logprob: -15.828893661499023

Token 88: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3186516761779785
    2. '(' → logprob: -1.3186516761779785
    3. '(input' → logprob: -5.3186516761779785
    4. '(str' → logprob: -8.44365119934082
    5. '(lambda' → logprob: -8.44365119934082
    6. '(
' → logprob: -10.69365119934082
    7. ' (' → logprob: -11.56865119934082
    8. '<int' → logprob: -12.56865119934082
    9. '(

' → logprob: -13.44365119934082
    10. '(eval' → logprob: -13.44365119934082

Token 89: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.019763553515076637
    2. 'input' → logprob: -5.019763469696045
    3. '(' → logprob: -5.144763469696045
    4. ')' → logprob: -5.519763469696045
    5. ' (' → logprob: -5.894763469696045
    6. ' input' → logprob: -8.644763946533203
    7. ',input' → logprob: -8.894763946533203
    8. '=input' → logprob: -11.144763946533203
    9. ')(' → logprob: -11.269763946533203
    10. ' )' → logprob: -11.644763946533203

Token 90: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006730645429342985
    2. ' input' → logprob: -5.006730556488037
    3. '(input' → logprob: -11.756731033325195
    4. ')' → logprob: -11.881731033325195
    5. '<input' → logprob: -15.881731033325195
    6. '=input' → logprob: -16.006731033325195
    7. ' ' → logprob: -16.256731033325195
    8. '	input' → logprob: -16.381731033325195
    9. '[input' → logprob: -16.506731033325195
    10. ',input' → logprob: -16.631731033325195

Token 91: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6047075986862183
    2. '())' → logprob: -0.9797075986862183
    3. '().' → logprob: -2.604707717895508
    4. ')' → logprob: -5.604707717895508
    5. '()).' → logprob: -8.104707717895508
    6. ' ())' → logprob: -9.354707717895508
    7. '()))' → logprob: -9.604707717895508
    8. ' ()' → logprob: -10.354707717895508
    9. '());' → logprob: -10.354707717895508
    10. '()`' → logprob: -10.604707717895508

Token 92: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015502138994634151
    2. 'strip' → logprob: -6.501550197601318
    3. ' split' → logprob: -10.001550674438477
    4. 'rstrip' → logprob: -13.126550674438477
    5. '(split' → logprob: -15.626550674438477
    6. ')' → logprob: -15.626550674438477
    7. 'spl' → logprob: -15.876550674438477
    8. ' strip' → logprob: -17.001550674438477
    9. 's' → logprob: -17.876550674438477
    10. ' ' → logprob: -18.876550674438477

Token 93: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018819093704223633
    2. '()' → logprob: -4.5188188552856445
    3. '()))' → logprob: -5.3938188552856445
    4. ')' → logprob: -6.0188188552856445
    5. '(' → logprob: -7.7688188552856445
    6. '))' → logprob: -8.768818855285645
    7. '('' → logprob: -8.893818855285645
    8. ' ())' → logprob: -10.393818855285645
    9. '())
' → logprob: -12.143818855285645
    10. '("' → logprob: -13.268818855285645

Token 94: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5130351185798645
    2. ' ' → logprob: -2.2630350589752197
    3. ':' → logprob: -2.7630350589752197
    4. '<|end|>' → logprob: -2.8880350589752197
    5. '#' → logprob: -3.1380350589752197
    6. '' → logprob: -3.5130350589752197
    7. ' 
' → logprob: -3.7630350589752197
    8. ')' → logprob: -4.388035297393799
    9. '\n' → logprob: -4.513035297393799
    10. 'if' → logprob: -4.513035297393799

Token 95: ' Dé' (ID: 27247)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6104836463928223
    2. 'for' → logprob: -1.7354836463928223
    3. '#' → logprob: -1.9854836463928223
    4. 'if' → logprob: -2.9854836463928223
    5. 'result' → logprob: -3.1104836463928223
    6. ' for' → logprob: -4.985483646392822
    7. 'sum' → logprob: -4.985483646392822
    8. 'i' → logprob: -5.235483646392822
    9. 's' → logprob: -5.235483646392822
    10. 'p' → logprob: -5.485483646392822

Token 96: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.4202287197113037
    2. 'f' → logprob: -1.2952287197113037
    3. 'fi' → logprob: -3.2952287197113037
    4. '#' → logprob: -3.6702287197113037
    5. 'termin' → logprob: -5.420228958129883
    6. 'clar' → logprob: -7.295228958129883
    7. 'crire' → logprob: -8.295228958129883
    8. 'term' → logprob: -8.670228958129883
    9. 'fine' → logprob: -8.795228958129883
    10. ' finir' → logprob: -8.920228958129883

Token 97: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.2612316608428955
    2. 'i' → logprob: -1.5112316608428955
    3. 'e' → logprob: -5.386231422424316
    4. 'a' → logprob: -5.761231422424316
    5. '#' → logprob: -7.761231422424316
    6. 'r' → logprob: -8.136231422424316
    7. ' ' → logprob: -8.636231422424316
    8. 'inir' → logprob: -8.636231422424316
    9. 'er' → logprob: -9.386231422424316
    10. '<|end|>' → logprob: -9.886231422424316

Token 98: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5069122314453125
    2. 's' → logprob: -2.8819122314453125
    3. 'def' → logprob: -2.8819122314453125
    4. ' ' → logprob: -3.0069122314453125
    5. 'range' → logprob: -3.1319122314453125
    6. ' la' → logprob: -3.5069122314453125
    7. '<|end|>' → logprob: -3.5069122314453125
    8. ' une' → logprob: -4.0069122314453125
    9. 'u' → logprob: -4.3819122314453125
    10. 'le' → logprob: -4.5069122314453125

Token 99: ' constante' (ID: 49652)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8953632712364197
    2. ' liste' → logprob: -1.3953633308410645
    3. '_' → logprob: -1.7703633308410645
    4. ' somme' → logprob: -3.2703633308410645
    5. 'fonction' → logprob: -3.5203633308410645
    6. 's' → logprob: -3.5203633308410645
    7. 'liste' → logprob: -3.7703633308410645
    8. ' fonction' → logprob: -4.5203633308410645
    9. 'def' → logprob: -4.5203633308410645
    10. 'f' → logprob: -5.5203633308410645

Token 100: ' M' (ID: 391)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11265179514884949
    2. ' ' → logprob: -2.487651824951172
    3. 'SPACE' → logprob: -4.612651824951172
    4. 'E' → logprob: -6.112651824951172
    5. ' _' → logprob: -6.112651824951172
    6. '_SPACE' → logprob: -6.362651824951172
    7. 'S' → logprob: -6.612651824951172
    8. 'ES' → logprob: -7.112651824951172
    9. 'C' → logprob: -7.237651824951172
    10. 'MAX' → logprob: -7.237651824951172

Token 101: ' ég' (ID: 33150)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21923746168613434
    2. 'M' → logprob: -2.4692375659942627
    3. ' ' → logprob: -3.0942375659942627
    4. ' M' → logprob: -3.2192375659942627
    5. '=' → logprob: -3.8442375659942627
    6. '_' → logprob: -5.719237327575684
    7. ',' → logprob: -8.219237327575684
    8. 'SPACE' → logprob: -8.219237327575684
    9. ' 
' → logprob: -8.844237327575684
    10. 'S' → logprob: -8.844237327575684

Token 102: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.011414660140872002
    2. 'al' → logprob: -4.636414527893066
    3. 'a' → logprob: -6.511414527893066
    4. '```' → logprob: -8.886414527893066
    5. '   ' → logprob: -11.886414527893066
    6. '_' → logprob: -11.886414527893066
    7. 'ales' → logprob: -13.011414527893066
    8. '_a' → logprob: -13.261414527893066
    9. 'à' → logprob: -13.386414527893066
    10. '#' → logprob: -13.636414527893066

Token 103: ' à' (ID: 1221)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.47999513149261475
    2. '10' → logprob: -1.8549951314926147
    3. ' ' → logprob: -2.1049952507019043
    4. '20' → logprob: -3.6049952507019043
    5. ' à' → logprob: -4.104995250701904
    6. '32' → logprob: -4.229995250701904
    7. '50' → logprob: -4.979995250701904
    8. '30' → logprob: -5.104995250701904
    9. '300' → logprob: -5.854995250701904
    10. '40' → logprob: -6.104995250701904

Token 104: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18271537125110626
    2. '100' → logprob: -2.43271541595459
    3. '10' → logprob: -2.55771541595459
    4. '1' → logprob: -6.43271541595459
    5. '26' → logprob: -11.18271541595459
    6. '2' → logprob: -11.43271541595459
    7. '20' → logprob: -11.68271541595459
    8. ' A' → logprob: -11.68271541595459
    9. '  ' → logprob: -11.80771541595459
    10. '50' → logprob: -12.18271541595459

Token 105: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6657612323760986
    2. '100' → logprob: -0.7907612323760986
    3. ' ' → logprob: -3.5407612323760986
    4. '1' → logprob: -5.9157609939575195
    5. '998' → logprob: -7.9157609939575195
    6. '2' → logprob: -9.16576099395752
    7. 'A' → logprob: -9.66576099395752
    8. '50' → logprob: -10.29076099395752
    9. '200' → logprob: -10.29076099395752
    10. '500' → logprob: -10.41576099395752

Token 106: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.00012642296496778727
    2. '247' → logprob: -9.250126838684082
    3. ',' → logprob: -11.000126838684082
    4. '447' → logprob: -12.500126838684082
    5. '344' → logprob: -13.125126838684082
    6. '444' → logprob: -13.250126838684082
    7. ' ' → logprob: -13.625126838684082
    8. '243' → logprob: -14.000126838684082
    9. '4' → logprob: -14.125126838684082
    10. '```' → logprob: -14.125126838684082

Token 107: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -1.9981420336989686e-05
    2. '853' → logprob: -11.375020027160645
    3. '3' → logprob: -11.875020027160645
    4. '53' → logprob: -14.125020027160645
    5. '```' → logprob: -15.375020027160645
    6. '333' → logprob: -16.125019073486328
    7. '35' → logprob: -16.250019073486328
    8. '33' → logprob: -16.625019073486328
    9. '453' → logprob: -16.750019073486328
    10. '253' → logprob: -16.750019073486328

Token 108: '.
' (ID: 558)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00340228620916605
    2. ' M' → logprob: -5.878402233123779
    3. '
' → logprob: -7.503402233123779
    4. ' 
' → logprob: -11.253402709960938
    5. ' ' → logprob: -11.503402709960938
    6. '

' → logprob: -11.628402709960938
    7. '  
' → logprob: -12.628402709960938
    8. '
' → logprob: -13.128402709960938
    9. '' → logprob: -13.253402709960938
    10. '   
' → logprob: -13.503402709960938

Token 109: '#' (ID: 2)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005129269324243069
    2. '
' → logprob: -6.005129337310791
    3. ' M' → logprob: -6.005129337310791
    4. ' 
' → logprob: -9.255128860473633
    5. '

' → logprob: -9.630128860473633
    6. '
' → logprob: -11.630128860473633
    7. '' → logprob: -12.630128860473633
    8. '  
' → logprob: -12.630128860473633
    9. ' 

' → logprob: -12.880128860473633
    10. ' ' → logprob: -14.255128860473633

Token 110: ' Ici' (ID: 145754)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0031822288874536753
    2. ' M' → logprob: -5.753182411193848
    3. ' ' → logprob: -12.628182411193848
    4. '
' → logprob: -13.878182411193848
    5. ' 
' → logprob: -15.878182411193848
    6. '

' → logprob: -16.62818145751953
    7. '  
' → logprob: -17.75318145751953
    8. ' 

' → logprob: -18.37818145751953
    9. ' =' → logprob: -18.62818145751953
    10. ',' → logprob: -18.87818145751953

Token 111: ',' (ID: 11)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2915915846824646
    2. 'M' → logprob: -1.6665916442871094
    3. ' ' → logprob: -2.9165916442871094
    4. ' =' → logprob: -4.791591644287109
    5. ' 
' → logprob: -7.416591644287109
    6. '
' → logprob: -8.04159164428711
    7. ' ,' → logprob: -8.91659164428711
    8. '

' → logprob: -9.04159164428711
    9. '  
' → logprob: -9.29159164428711
    10. ',' → logprob: -9.41659164428711

Token 112: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.20145153999328613
    2. ' M' → logprob: -1.7014515399932861
    3. ' ' → logprob: -10.451451301574707
    4. ' ' → logprob: -11.826451301574707
    5. 'space' → logprob: -14.451451301574707
    6. ')' → logprob: -15.201451301574707
    7. '  ' → logprob: -15.451451301574707
    8. ' space' → logprob: -16.076452255249023
    9. ' )' → logprob: -16.701452255249023
    10. '	M' → logprob: -16.826452255249023

Token 113: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10368243604898453
    2. ' ' → logprob: -2.478682518005371
    3. '=' → logprob: -4.228682518005371
    4. '<|end|>' → logprob: -10.603682518005371
    5. ')' → logprob: -11.728682518005371
    6. ' is' → logprob: -11.978682518005371
    7. ' )' → logprob: -12.103682518005371
    8. ' ,' → logprob: -12.728682518005371
    9. ' =
' → logprob: -12.978682518005371
    10. ',' → logprob: -12.978682518005371

Token 114: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16251695156097412
    2. ' =' → logprob: -1.9125169515609741
    3. '<|end|>' → logprob: -7.037517070770264
    4. '=' → logprob: -7.162517070770264
    5. ' M' → logprob: -9.287516593933105
    6. ' )' → logprob: -9.662516593933105
    7. ' a' → logprob: -9.912516593933105
    8. ' ,' → logprob: -9.912516593933105
    9. ' ```' → logprob: -9.912516593933105
    10. '  ' → logprob: -10.037516593933105

Token 115: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18056964874267578
    2. ' espace' → logprob: -2.305569648742676
    3. ' entier' → logprob: -3.180569648742676
    4. 'e' → logprob: -5.930569648742676
    5. ' nombre' → logprob: -6.055569648742676
    6. 'es' → logprob: -6.055569648742676
    7. ' =' → logprob: -6.180569648742676
    8. ' constant' → logprob: -6.430569648742676
    9. ' e' → logprob: -6.555569648742676
    10. ' modulo' → logprob: -6.680569648742676

Token 116: ' premier' (ID: 15506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.509088397026062
    2. '=' → logprob: -1.634088397026062
    3. ' =' → logprob: -1.759088397026062
    4. '_' → logprob: -4.259088516235352
    5. '<|end|>' → logprob: -4.509088516235352
    6. ',' → logprob: -6.384088516235352
    7. 'space' → logprob: -6.759088516235352
    8. '  ' → logprob: -7.259088516235352
    9. ' space' → logprob: -7.384088516235352
    10. ')' → logprob: -7.634088516235352

Token 117: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6421961188316345
    2. 'M' → logprob: -1.0171961784362793
    3. ' M' → logprob: -2.3921961784362793
    4. ' )' → logprob: -5.767196178436279
    5. ' 
' → logprob: -5.892196178436279
    6. '
' → logprob: -6.017196178436279
    7. ',' → logprob: -6.142196178436279
    8. ' =' → logprob: -6.142196178436279
    9. ' ,' → logprob: -6.392196178436279
    10. ')' → logprob: -6.392196178436279

Token 118: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5718285441398621
    2. ' sert' → logprob: -1.8218286037445068
    3. ' permet' → logprob: -2.321828603744507
    4. ' sera' → logprob: -3.196828603744507
    5. ' serv' → logprob: -3.571828603744507
    6. ' permettra' → logprob: -3.696828603744507
    7. 'est' → logprob: -4.571828365325928
    8. ' peut' → logprob: -4.821828365325928
    9. ' ' → logprob: -5.071828365325928
    10. ' mod' → logprob: -5.196828365325928

Token 119: ' souvent' (ID: 28137)
  Prédit: ' souvent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' souvent' → logprob: -0.14404721558094025
    2. ' utilisé' → logprob: -2.394047260284424
    3. ' ' → logprob: -4.019047260284424
    4. ' fré' → logprob: -4.269047260284424
    5. ' cour' → logprob: -5.769047260284424
    6. ' largement' → logprob: -6.894047260284424
    7. ' often' → logprob: -7.269047260284424
    8. ' très' → logprob: -7.394047260284424
    9. ' fréquent' → logprob: -7.394047260284424
    10. ' ' → logprob: -7.644047260284424

Token 120: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.6215259432792664
    2. ' ' → logprob: -0.9965259432792664
    3. ' used' → logprob: -2.871526002883911
    4. ' )' → logprob: -4.996525764465332
    5. '<|end|>' → logprob: -4.996525764465332
    6. ' utilisée' → logprob: -5.121525764465332
    7. '_' → logprob: -5.371525764465332
    8. ',' → logprob: -6.121525764465332
    9. ' ,' → logprob: -6.371525764465332
    10. ' """' → logprob: -6.746525764465332

Token 121: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4041564166545868
    2. '<|end|>' → logprob: -1.9041564464569092
    3. ' dans' → logprob: -2.029156446456909
    4. ' )' → logprob: -4.65415620803833
    5. ' in' → logprob: -4.90415620803833
    6. ',' → logprob: -4.90415620803833
    7. ')' → logprob: -5.52915620803833
    8. ' ,' → logprob: -5.77915620803833
    9. '<|end|>' → logprob: -6.02915620803833
    10. ' en' → logprob: -6.15415620803833

Token 122: ' mod' (ID: 1812)
  Prédit: ' modulus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.148279070854187
    2. 'mod' → logprob: -2.6482791900634766
    3. ' modulo' → logprob: -3.0232791900634766
    4. ' mod' → logprob: -4.273279190063477
    5. ' module' → logprob: -6.273279190063477
    6. 'module' → logprob: -7.148279190063477
    7. ' un' → logprob: -7.773279190063477
    8. 'm' → logprob: -8.148279190063477
    9. ' ' → logprob: -8.148279190063477
    10. ' le' → logprob: -8.898279190063477

Token 123: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5612241625785828
    2. ' des' → logprob: -1.8112242221832275
    3. '998' → logprob: -2.6862242221832275
    4. ' ' → logprob: -3.0612242221832275
    5. ' le' → logprob: -3.0612242221832275
    6. ' la' → logprob: -3.6862242221832275
    7. '<|end|>' → logprob: -3.6862242221832275
    8. ' l' → logprob: -3.9362242221832275
    9. 'les' → logprob: -4.436223983764648
    10. ' effectuer' → logprob: -5.061223983764648

Token 125: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.17969372868537903
    2. 'calcul' → logprob: -2.9296936988830566
    3. ' opérations' → logprob: -3.9296936988830566
    4. ' calculations' → logprob: -4.054693698883057
    5. ' mod' → logprob: -4.054693698883057
    6. 'mod' → logprob: -4.179693698883057
    7. ' nombres' → logprob: -4.429693698883057
    8. ' ' → logprob: -4.804693698883057
    9. ' résultats' → logprob: -5.554693698883057
    10. ' modulo' → logprob: -5.554693698883057

Token 126: 's' (ID: 82)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.23599591851234436
    2. ' modulo' → logprob: -2.9859960079193115
    3. ' ' → logprob: -3.3609960079193115
    4. '%' → logprob: -4.110995769500732
    5. 'ateur' → logprob: -4.235995769500732
    6. ' =' → logprob: -4.360995769500732
    7. 'ulus' → logprob: -4.360995769500732
    8. '  ' → logprob: -5.110995769500732
    9. '=' → logprob: -5.110995769500732
    10. ' modulus' → logprob: -5.110995769500732

Token 127: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7663917541503906
    2. ' M' → logprob: -1.0163917541503906
    3. 'M' → logprob: -2.5163917541503906
    4. ' =' → logprob: -3.5163917541503906
    5. '_' → logprob: -4.141391754150391
    6. ')' → logprob: -4.766391754150391
    7. '=' → logprob: -4.766391754150391
    8. ' )' → logprob: -4.891391754150391
    9. ',' → logprob: -5.266391754150391
    10. '  ' → logprob: -5.516391754150391

Token 128: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5953571200370789
    2. 'M' → logprob: -1.8453571796417236
    3. ')' → logprob: -2.3453571796417236
    4. ' )' → logprob: -2.3453571796417236
    5. ' M' → logprob: -2.5953571796417236
    6. '_' → logprob: -5.2203569412231445
    7. ' =' → logprob: -5.3453569412231445
    8. ' ,' → logprob: -5.4703569412231445
    9. ',' → logprob: -5.9703569412231445
    10. '=' → logprob: -6.4703569412231445

Token 129: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2583114802837372
    2. ' des' → logprob: -2.2583115100860596
    3. ' l' → logprob: -2.7583115100860596
    4. ' ' → logprob: -3.6333115100860596
    5. ' la' → logprob: -4.2583112716674805
    6. 'les' → logprob: -4.3833112716674805
    7. ' le' → logprob: -5.8833112716674805
    8. 'l' → logprob: -6.5083112716674805
    9. '_' → logprob: -7.2583112716674805
    10. ' de' → logprob: -8.13331127166748

Token 130: ' programmation' (ID: 166376)
  Prédit: ' programmation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.19709624350070953
    2. ' compét' → logprob: -2.197096347808838
    3. ' compétition' → logprob: -4.572096347808838
    4. 'comp' → logprob: -4.572096347808838
    5. 'con' → logprob: -4.822096347808838
    6. 'programm' → logprob: -4.947096347808838
    7. ' code' → logprob: -5.072096347808838
    8. 'compet' → logprob: -5.197096347808838
    9. ' competitive' → logprob: -5.322096347808838
    10. ' concours' → logprob: -6.072096347808838

Token 131: ' compét' (ID: 34024)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.7659710049629211
    2. ' ' → logprob: -1.0159709453582764
    3. '_' → logprob: -2.8909709453582764
    4. 'M' → logprob: -3.1409709453582764
    5. ')' → logprob: -3.8909709453582764
    6. ' )' → logprob: -4.0159711837768555
    7. '  ' → logprob: -4.6409711837768555
    8. 'mod' → logprob: -6.0159711837768555
    9. ' (' → logprob: -6.3909711837768555
    10. ' _' → logprob: -6.3909711837768555

Token 132: 'itive' (ID: 4171)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ét' → logprob: -1.0976595878601074
    2. 'etit' → logprob: -1.4726595878601074
    3. 'et' → logprob: -1.5976595878601074
    4. 'ut' → logprob: -2.3476595878601074
    5. 'it' → logprob: -2.9726595878601074
    6. 'itif' → logprob: -4.097659587860107
    7. ' ' → logprob: -4.222659587860107
    8. 'é' → logprob: -4.347659587860107
    9. 'ro' → logprob: -4.972659587860107
    10. '```' → logprob: -5.097659587860107

Token 133: '.
' (ID: 558)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05989307910203934
    2. ')' → logprob: -3.5598931312561035
    3. ' M' → logprob: -3.9348931312561035
    4. ' ' → logprob: -6.0598931312561035
    5. ' )' → logprob: -6.3098931312561035
    6. ',' → logprob: -6.5598931312561035
    7. ')
' → logprob: -6.8098931312561035
    8. ' 
' → logprob: -7.0598931312561035
    9. '
' → logprob: -7.1848931312561035
    10. ' ,' → logprob: -8.184892654418945

Token 134: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.360996485454962e-05
    2. '
' → logprob: -10.0000638961792
    3. ' M' → logprob: -11.0000638961792
    4. '```' → logprob: -14.8750638961792
    5. ' 
' → logprob: -15.2500638961792
    6. '  
' → logprob: -15.3750638961792
    7. '`
' → logprob: -15.6250638961792
    8. '

' → logprob: -16.000062942504883
    9. '
' → logprob: -16.000062942504883
    10. '' → logprob: -16.875062942504883

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02330569177865982
    2. '=' → logprob: -3.773305654525757
    3. ' ' → logprob: -9.898305892944336
    4. ' =
' → logprob: -11.773305892944336
    5. ',' → logprob: -14.648305892944336
    6. ' ' → logprob: -14.898305892944336
    7. ')' → logprob: -15.023305892944336
    8. ' =
' → logprob: -15.148305892944336
    9. ' =)' → logprob: -15.523305892944336
    10. '  ' → logprob: -15.648305892944336

Token 136: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484513461589813
    2. '998' → logprob: -1.2234513759613037
    3. ' ' → logprob: -12.598451614379883
    4. '999' → logprob: -13.098451614379883
    5. '988' → logprob: -14.723451614379883
    6. '9' → logprob: -15.785951614379883
    7. '978' → logprob: -16.035951614379883
    8. '997' → logprob: -16.098451614379883
    9. '```' → logprob: -16.223451614379883
    10. ' 
' → logprob: -16.285951614379883

Token 137: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -2.4272752852994017e-05
    2. ' ' → logprob: -10.87502384185791
    3. '9' → logprob: -12.25002384185791
    4. '999' → logprob: -15.00002384185791
    5. '99' → logprob: -17.375024795532227
    6. '988' → logprob: -17.500024795532227
    7. '```' → logprob: -17.875024795532227
    8. '997' → logprob: -18.125024795532227
    9. '`' → logprob: -19.125024795532227
    10. '  ' → logprob: -19.125024795532227

Token 138: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -6.034592388459714e-06
    2. '2' → logprob: -12.625005722045898
    3. ' ' → logprob: -13.250005722045898
    4. '24' → logprob: -14.375005722045898
    5. '344' → logprob: -16.0000057220459
    6. '```' → logprob: -17.0000057220459
    7. '
' → logprob: -17.1250057220459
    8. '245' → logprob: -17.3750057220459
    9. ',' → logprob: -17.3750057220459
    10. '   ' → logprob: -18.3125057220459

Token 139: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -7.896309739408025e-07
    2. '3' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.125
    4. '35' → logprob: -16.875
    5. '354' → logprob: -18.375
    6. '```' → logprob: -19.125
    7. '753' → logprob: -20.125
    8. '  ' → logprob: -20.375
    9. '355' → logprob: -20.4375
    10. '351' → logprob: -20.6875

Token 140: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06830497831106186
    2. '

' → logprob: -2.818305015563965
    3. '
' → logprob: -5.818305015563965
    4. ' 
' → logprob: -6.443305015563965
    5. '' → logprob: -6.818305015563965
    6. '\n' → logprob: -9.068305015563965
    7. '<|end|>' → logprob: -9.318305015563965
    8. ' 

' → logprob: -9.443305015563965
    9. '  
' → logprob: -9.568305015563965
    10. '


' → logprob: -9.568305015563965

Token 141: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24813523888587952
    2. ' 
' → logprob: -2.1231353282928467
    3. 'result' → logprob: -3.1231353282928467
    4. 'for' → logprob: -3.8731353282928467
    5. 's' → logprob: -5.123135089874268
    6. '#' → logprob: -5.248135089874268
    7. 'print' → logprob: -5.623135089874268
    8. '' → logprob: -5.873135089874268
    9. 'i' → logprob: -5.998135089874268
    10. 'r' → logprob: -6.248135089874268

Token 142: ' P' (ID: 398)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.051209576427936554
    2. 'res' → logprob: -3.8012096881866455
    3. 'total' → logprob: -4.926209449768066
    4. 's' → logprob: -5.176209449768066
    5. 'count' → logprob: -5.301209449768066
    6. 'rés' → logprob: -6.801209449768066
    7. 'def' → logprob: -6.926209449768066
    8. 'answer' → logprob: -6.926209449768066
    9. 'if' → logprob: -6.926209449768066
    10. 'sum' → logprob: -7.176209449768066

Token 143: ' représente' (ID: 88912)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5774920582771301
    2. '=' → logprob: -1.3274919986724854
    3. ' =' → logprob: -2.0774919986724854
    4. 'ow' → logprob: -4.0774922370910645
    5. 'ro' → logprob: -5.7024922370910645
    6. 'w' → logprob: -5.7024922370910645
    7. 'ower' → logprob: -5.8274922370910645
    8. '#' → logprob: -5.8274922370910645
    9. '1' → logprob: -6.4524922370910645
    10. 'result' → logprob: -6.7024922370910645

Token 144: ' N' (ID: 478)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4762505292892456
    2. ' le' → logprob: -1.6012505292892456
    3. '(' → logprob: -2.226250648498535
    4. 'le' → logprob: -2.726250648498535
    5. 'pow' → logprob: -2.726250648498535
    6. ' (' → logprob: -2.851250648498535
    7. 'A' → logprob: -2.976250648498535
    8. ' une' → logprob: -3.476250648498535
    9. ' un' → logprob: -3.726250648498535
    10. ' ' → logprob: -3.726250648498535

Token 145: '+' (ID: 10)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.6431286334991455
    2. '**' → logprob: -1.0181286334991455
    3. ' *' → logprob: -3.1431286334991455
    4. '-' → logprob: -3.7681286334991455
    5. ' -' → logprob: -4.518128395080566
    6. '%' → logprob: -4.643128395080566
    7. '*' → logprob: -4.893128395080566
    8. ' %' → logprob: -5.268128395080566
    9. '+' → logprob: -5.643128395080566
    10. ' +' → logprob: -5.893128395080566

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19858618080615997
    2. ' ' → logprob: -1.8235862255096436
    3. 'A' → logprob: -4.6985859870910645
    4. ' A' → logprob: -4.8235859870910645
    5. '+' → logprob: -7.3235859870910645
    6. '2' → logprob: -8.198586463928223
    7. ' +' → logprob: -9.073586463928223
    8. 'B' → logprob: -9.448586463928223
    9. '(' → logprob: -9.573586463928223
    10. ' B' → logprob: -9.823586463928223

Token 147: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' Cela' (ID: 44403)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.517682671546936
    2. 'P' → logprob: -1.017682671546936
    3. ' 
' → logprob: -3.5176825523376465
    4. ' P' → logprob: -4.8926825523376465
    5. '  
' → logprob: -5.8926825523376465
    6. '

' → logprob: -7.3926825523376465
    7. 'N' → logprob: -7.8926825523376465
    8. '
' → logprob: -8.017683029174805
    9. ' =' → logprob: -8.517683029174805
    10. '```' → logprob: -8.517683029174805

Token 149: ' sert' (ID: 52405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48464035987854004
    2. '=' → logprob: -2.48464035987854
    3. 's' → logprob: -3.23464035987854
    4. ' ' → logprob: -3.35964035987854
    5. '```' → logprob: -3.73464035987854
    6. '+' → logprob: -3.98464035987854
    7. ' vaut' → logprob: -3.98464035987854
    8. '.' → logprob: -4.359640121459961
    9. ',' → logprob: -4.359640121459961
    10. ' peut' → logprob: -4.609640121459961

Token 150: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.092860646545887
    2. ' à' → logprob: -2.717860698699951
    3. ' a' → logprob: -4.717860698699951
    4. ' to' → logprob: -4.717860698699951
    5. '<|end|>' → logprob: -6.967860698699951
    6. ')' → logprob: -7.467860698699951
    7. '  ' → logprob: -7.717860698699951
    8. ' space' → logprob: -7.842860698699951
    9. ' =' → logprob: -7.842860698699951
    10. ' for' → logprob: -7.967860698699951

Token 151: ' dimension' (ID: 21959)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5412299036979675
    2. 'range' → logprob: -1.0412299633026123
    3. ' l' → logprob: -3.4162299633026123
    4. ' la' → logprob: -4.291229724884033
    5. ' ' → logprob: -4.666229724884033
    6. ' le' → logprob: -6.666229724884033
    7. 'r' → logprob: -6.916229724884033
    8. ' les' → logprob: -7.041229724884033
    9. ' '' → logprob: -7.041229724884033
    10. 'l' → logprob: -7.416229724884033

Token 152: 'ner' (ID: 1247)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1251020431518555
    2. '=' → logprob: -1.6251020431518555
    3. 's' → logprob: -1.6251020431518555
    4. 'nement' → logprob: -1.6251020431518555
    5. 'ner' → logprob: -4.0001020431518555
    6. 'er' → logprob: -4.2501020431518555
    7. '[' → logprob: -4.5001020431518555
    8. 'al' → logprob: -5.3751020431518555
    9. ']' → logprob: -5.3751020431518555
    10. 'nements' → logprob: -5.3751020431518555

Token 153: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.31736910343170166
    2. ' une' → logprob: -2.692368984222412
    3. ' le' → logprob: -2.817368984222412
    4. ' ' → logprob: -2.942368984222412
    5. ' les' → logprob: -3.442368984222412
    6. ' l' → logprob: -3.567368984222412
    7. ' un' → logprob: -5.067368984222412
    8. ' N' → logprob: -5.192368984222412
    9. 'la' → logprob: -5.442368984222412
    10. 'le' → logprob: -5.817368984222412

Token 154: ' tableaux' (ID: 176599)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.21982082724571228
    2. ' tableaux' → logprob: -2.719820737838745
    3. ' range' → logprob: -3.344820737838745
    4. ' liste' → logprob: -3.594820737838745
    5. ' listes' → logprob: -4.219820976257324
    6. 'range' → logprob: -4.844820976257324
    7. 's' → logprob: -5.344820976257324
    8. 'a' → logprob: -5.469820976257324
    9. ' list' → logprob: -5.719820976257324
    10. '[]' → logprob: -5.719820976257324

Token 155: ' plus' (ID: 2932)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3139056861400604
    2. 'P' → logprob: -1.8139057159423828
    3. ' +' → logprob: -3.063905715942383
    4. ' =' → logprob: -4.188905715942383
    5. 'N' → logprob: -4.438905715942383
    6. '
' → logprob: -4.688905715942383
    7. '=' → logprob: -5.688905715942383
    8. '.' → logprob: -5.813905715942383
    9. ')' → logprob: -5.938905715942383
    10. '#' → logprob: -6.063905715942383

Token 156: ' loin' (ID: 40875)
  Prédit: ' large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' large' → logprob: -1.0117539167404175
    2. ' ' → logprob: -1.7617539167404175
    3. 'ieurs' → logprob: -2.011754035949707
    4. ' =' → logprob: -2.386754035949707
    5. 'large' → logprob: -2.761754035949707
    6. '1' → logprob: -3.136754035949707
    7. ' grandes' → logprob: -3.761754035949707
    8. ')' → logprob: -3.886754035949707
    9. '```' → logprob: -4.136754035949707
    10. '=' → logprob: -5.136754035949707

Token 157: '.
' (ID: 558)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.1596909910440445
    2. '
' → logprob: -2.034691095352173
    3. 'p' → logprob: -5.159690856933594
    4. ' P' → logprob: -5.534690856933594
    5. 'N' → logprob: -6.284690856933594
    6. ' 
' → logprob: -6.534690856933594
    7. '+' → logprob: -6.909690856933594
    8. '#' → logprob: -7.534690856933594
    9. ')' → logprob: -8.159690856933594
    10. '.' → logprob: -8.284690856933594

Token 158: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.001954087056219578
    2. '
' → logprob: -6.251954078674316
    3. ' P' → logprob: -11.251954078674316
    4. '```' → logprob: -12.376954078674316
    5. ' 
' → logprob: -12.751954078674316
    6. '
' → logprob: -13.251954078674316
    7. '  
' → logprob: -14.001954078674316
    8. '`' → logprob: -14.376954078674316
    9. '' → logprob: -14.626954078674316
    10. '`
' → logprob: -14.751954078674316

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759458541870117
    2. '=' → logprob: -0.8259458541870117
    3. ' ' → logprob: -12.575945854187012
    4. ',' → logprob: -14.700945854187012
    5. ' =
' → logprob: -14.700945854187012
    6. ')' → logprob: -14.825945854187012
    7. ' ' → logprob: -15.075945854187012
    8. '=int' → logprob: -15.200945854187012
    9. '=

' → logprob: -15.450945854187012
    10. '=P' → logprob: -15.575945854187012

Token 160: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.04302819073200226
    2. 'N' → logprob: -3.1680281162261963
    3. ' ' → logprob: -10.543027877807617
    4. ' ' → logprob: -13.168027877807617
    5. ' (' → logprob: -15.293027877807617
    6. '	N' → logprob: -15.418027877807617
    7. ' `' → logprob: -16.793027877807617
    8. ' 
' → logprob: -17.293027877807617
    9. '(N' → logprob: -17.418027877807617
    10. ' A' → logprob: -17.418027877807617

Token 161: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033651113510131836
    2. ' +' → logprob: -3.408651113510132
    3. '+
' → logprob: -12.533651351928711
    4. ' +
' → logprob: -14.283651351928711
    5. ' ' → logprob: -15.283651351928711
    6. '＋' → logprob: -15.783651351928711
    7. '1' → logprob: -16.28365135192871
    8. ' plus' → logprob: -16.28365135192871
    9. '()+' → logprob: -16.28365135192871
    10. '```' → logprob: -16.65865135192871

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. ' ' → logprob: -19.251502990722656
    4. '   ' → logprob: -20.126502990722656
    5. '  ' → logprob: -20.126502990722656
    6. '	' → logprob: -20.501502990722656
    7. '```' → logprob: -20.501502990722656
    8. '<|end|>' → logprob: -21.001502990722656
    9. '۱' → logprob: -21.126502990722656
    10. '
' → logprob: -21.376502990722656

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.375
    4. '
' → logprob: -20.125
    5. '１' → logprob: -21.125
    6. '   ' → logprob: -21.25
    7. '`' → logprob: -21.5
    8. '

' → logprob: -21.625
    9. '۱' → logprob: -21.625
    10. '  ' → logprob: -21.625

Token 164: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006811291445046663
    2. '
' → logprob: -5.381811141967773
    3. '

' → logprob: -6.756811141967773
    4. ' 
' → logprob: -7.631811141967773
    5. '' → logprob: -8.131811141967773
    6. '  
' → logprob: -9.381811141967773
    7. '\n' → logprob: -9.506811141967773
    8. 'newline' → logprob: -10.381811141967773
    9. '#' → logprob: -11.006811141967773
    10. '<|end|>' → logprob: -11.131811141967773

Token 165: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015474623069167137
    2. '
' → logprob: -4.515474796295166
    3. '

' → logprob: -5.765474796295166
    4. '' → logprob: -7.390474796295166
    5. ' 
' → logprob: -8.390474319458008
    6. 'dp' → logprob: -9.015474319458008
    7. 'n' → logprob: -9.390474319458008
    8. 'd' → logprob: -10.140474319458008
    9. '#' → logprob: -10.515474319458008
    10. '\n' → logprob: -10.640474319458008

Token 166: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04388069361448288
    2. 'f' → logprob: -3.9188807010650635
    3. '#' → logprob: -4.793880462646484
    4. 'fact' → logprob: -5.043880462646484
    5. 'from' → logprob: -6.543880462646484
    6. 'd' → logprob: -6.668880462646484
    7. 'import' → logprob: -7.293880462646484
    8. 'count' → logprob: -7.793880462646484
    9. 'F' → logprob: -7.793880462646484
    10. 'factor' → logprob: -7.918880462646484

Token 167: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0121732447296381
    2. 'is' → logprob: -4.512173175811768
    3. 'isation' → logprob: -7.512173175811768
    4. '#' → logprob: -8.762173652648926
    5. 'ise' → logprob: -8.762173652648926
    6. 'i' → logprob: -9.262173652648926
    7. 'ize' → logprob: -10.637173652648926
    8. '```' → logprob: -10.637173652648926
    9. 'isez' → logprob: -10.887173652648926
    10. 'er' → logprob: -10.887173652648926

Token 168: ' une' (ID: 2463)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.06822558492422104
    2. 'dp' → logprob: -3.193225622177124
    3. ' un' → logprob: -4.443225383758545
    4. ' f' → logprob: -5.193225383758545
    5. ' une' → logprob: -5.943225383758545
    6. ' ' → logprob: -7.318225383758545
    7. ' l' → logprob: -7.318225383758545
    8. ' a' → logprob: -7.568225383758545
    9. ' la' → logprob: -7.818225383758545
    10. 'f' → logprob: -7.943225383758545

Token 169: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5552382469177246
    2. 'liste' → logprob: -1.5552382469177246
    3. ' liste' → logprob: -2.6802382469177246
    4. 'l' → logprob: -3.4302382469177246
    5. 'list' → logprob: -4.430238246917725
    6. '[' → logprob: -4.430238246917725
    7. 's' → logprob: -4.680238246917725
    8. ' =' → logprob: -4.680238246917725
    9. 'lst' → logprob: -5.055238246917725
    10. '[]' → logprob: -5.055238246917725

Token 170: ' f' (ID: 285)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.36058565974235535
    2. 'dp' → logprob: -1.9855856895446777
    3. ' result' → logprob: -2.6105856895446777
    4. ' ans' → logprob: -3.8605856895446777
    5. ' s' → logprob: -4.110585689544678
    6. 'res' → logprob: -4.735585689544678
    7. ' answer' → logprob: -4.985585689544678
    8. 'result' → logprob: -4.985585689544678
    9. ' res' → logprob: -5.360585689544678
    10. ' S' → logprob: -5.860585689544678

Token 171: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034225430339574814
    2. ' ' → logprob: -4.9092254638671875
    3. '[]' → logprob: -5.0342254638671875
    4. '=' → logprob: -5.2842254638671875
    5. 'requencies' → logprob: -5.5342254638671875
    6. '[' → logprob: -5.6592254638671875
    7. '_' → logprob: -5.9092254638671875
    8. 'a' → logprob: -6.9092254638671875
    9. 'acteur' → logprob: -7.9092254638671875
    10. 'f' → logprob: -8.034225463867188

Token 172: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3226314783096313
    2. '0' → logprob: -1.5726314783096313
    3. ' [' → logprob: -1.5726314783096313
    4. '1' → logprob: -1.6976314783096313
    5. ' ' → logprob: -2.072631359100342
    6. '[M' → logprob: -4.947631359100342
    7. '[P' → logprob: -6.447631359100342
    8. '[N' → logprob: -8.1976318359375
    9. ' M' → logprob: -8.8226318359375
    10. '[int' → logprob: -9.3226318359375

Token 173: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4655163288116455
    2. '1' → logprob: -1.2155163288116455
    3. '[M' → logprob: -3.0905163288116455
    4. '0' → logprob: -4.465516090393066
    5. '[P' → logprob: -4.590516090393066
    6. ' [' → logprob: -5.715516090393066
    7. '[N' → logprob: -5.715516090393066
    8. '[A' → logprob: -6.715516090393066
    9. '{' → logprob: -8.840516090393066
    10. '[int' → logprob: -8.965516090393066

Token 174: '.
' (ID: 558)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.23992472887039185
    2. ' ' → logprob: -1.739924669265747
    3. ' f' → logprob: -3.739924669265747
    4. '<|end|>' → logprob: -4.489924907684326
    5. '
' → logprob: -7.489924907684326
    6. '#' → logprob: -7.739924907684326
    7. ' 
' → logprob: -8.239924430847168
    8. '1' → logprob: -8.239924430847168
    9. '=' → logprob: -8.489924430847168
    10. '0' → logprob: -8.614924430847168

Token 175: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003087993711233139
    2. ' f' → logprob: -6.003087997436523
    3. '
' → logprob: -8.003087997436523
    4. ' 
' → logprob: -8.628087997436523
    5. ' ' → logprob: -9.628087997436523
    6. '

' → logprob: -11.753087997436523
    7. '  
' → logprob: -12.003087997436523
    8. '1' → logprob: -12.753087997436523
    9. ' 

' → logprob: -13.128087997436523
    10. '\f' → logprob: -13.378087997436523

Token 176: ' Elle' (ID: 21300)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0025275067891925573
    2. ' f' → logprob: -6.002527713775635
    3. ' 
' → logprob: -10.377527236938477
    4. ' ' → logprob: -11.377527236938477
    5. '
' → logprob: -12.002527236938477
    6. ' ' → logprob: -14.002527236938477
    7. '  
' → logprob: -15.127527236938477
    8. '

' → logprob: -15.252527236938477
    9. ' 

' → logprob: -15.377527236938477
    10. '	f' → logprob: -15.627527236938477

Token 177: ' serv' (ID: 2096)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4546390473842621
    2. ' =' → logprob: -1.3296390771865845
    3. '=' → logprob: -2.704638957977295
    4. '_' → logprob: -3.829638957977295
    5. ',' → logprob: -5.704638957977295
    6. ' *=' → logprob: -6.204638957977295
    7. 'f' → logprob: -6.329638957977295
    8. '#' → logprob: -6.954638957977295
    9. '*' → logprob: -7.079638957977295
    10. '0' → logprob: -8.079639434814453

Token 178: 'ira' (ID: 2633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0488816574215889
    2. 'e' → logprob: -3.298881769180298
    3. ' a' → logprob: -5.923881530761719
    4. ' =' → logprob: -6.048881530761719
    5. 'ra' → logprob: -6.548881530761719
    6. '=' → logprob: -6.923881530761719
    7. ' ' → logprob: -7.673881530761719
    8. 'er' → logprob: -7.923881530761719
    9. '   ' → logprob: -7.923881530761719
    10. 't' → logprob: -8.048881530761719

Token 179: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024185549467802048
    2. ' à' → logprob: -4.649185657501221
    3. ' a' → logprob: -4.774185657501221
    4. ' to' → logprob: -6.524185657501221
    5. '  ' → logprob: -6.774185657501221
    6. ' for' → logprob: -6.774185657501221
    7. ' as' → logprob: -7.149185657501221
    8. ' ' → logprob: -8.524185180664062
    9. 'a' → logprob: -8.899185180664062
    10. ' f' → logprob: -9.024185180664062

Token 180: ' stock' (ID: 6546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04746231436729431
    2. ' ' → logprob: -3.172462224960327
    3. ' f' → logprob: -6.172462463378906
    4. 'f' → logprob: -6.172462463378906
    5. ' calcul' → logprob: -9.172462463378906
    6. 'calcul' → logprob: -9.672462463378906
    7. 'factor' → logprob: -10.672462463378906
    8. '<|end|>' → logprob: -10.672462463378906
    9. ' calcular' → logprob: -11.047462463378906
    10. ' multiplier' → logprob: -11.672462463378906

Token 181: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.336129367351532
    2. 'e' → logprob: -1.5861294269561768
    3. 'a' → logprob: -3.2111294269561768
    4. ' ' → logprob: -4.336129188537598
    5. '=' → logprob: -4.711129188537598
    6. ' =' → logprob: -4.961129188537598
    7. ' a' → logprob: -5.086129188537598
    8. 'i' → logprob: -6.461129188537598
    9. ' e' → logprob: -6.836129188537598
    10. 'u' → logprob: -7.211129188537598

Token 182: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009470687946304679
    2. 'f' → logprob: -8.375946998596191
    3. ' f' → logprob: -8.625946998596191
    4. '  ' → logprob: -8.750946998596191
    5. '*' → logprob: -9.000946998596191
    6. '<|end|>' → logprob: -10.125946998596191
    7. 'a' → logprob: -10.500946998596191
    8. 'i' → logprob: -10.750946998596191
    9. ',' → logprob: -10.875946998596191
    10. '_' → logprob: -11.000946998596191

Token 183: ' valeurs' (ID: 73668)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.6613948941230774
    2. 'fact' → logprob: -1.2863948345184326
    3. 'f' → logprob: -3.1613948345184326
    4. ' facteur' → logprob: -3.4113948345184326
    5. ' factorial' → logprob: -3.7863948345184326
    6. ' fact' → logprob: -4.036395072937012
    7. ' f' → logprob: -4.161395072937012
    8. ' facteurs' → logprob: -4.161395072937012
    9. ' résultats' → logprob: -4.411395072937012
    10. ' factor' → logprob: -4.536395072937012

Token 184: ' interm' (ID: 120489)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.792724609375
    2. ' des' → logprob: -1.917724609375
    3. ' de' → logprob: -2.417724609375
    4. 'f' → logprob: -2.417724609375
    5. '_' → logprob: -2.542724609375
    6. '_f' → logprob: -3.042724609375
    7. ' f' → logprob: -3.292724609375
    8. ' interm' → logprob: -4.292724609375
    9. ' factorial' → logprob: -4.792724609375
    10. '  ' → logprob: -5.042724609375

Token 185: 'édia' (ID: 49296)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6812340021133423
    2. 'ais' → logprob: -1.5562340021133423
    3. '   ' → logprob: -3.8062338829040527
    4. 'ent' → logprob: -3.8062338829040527
    5. 'u' → logprob: -3.9312338829040527
    6. 'ateur' → logprob: -3.9312338829040527
    7. 'f' → logprob: -4.306233882904053
    8. 'entes' → logprob: -4.431233882904053
    9. ' =' → logprob: -4.431233882904053
    10. 'ateurs' → logprob: -4.681233882904053

Token 186: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.01870807260274887
    2. 'res' → logprob: -4.268708229064941
    3. 'ire' → logprob: -6.393708229064941
    4. 'r' → logprob: -6.768708229064941
    5. 't' → logprob: -7.393708229064941
    6. 'f' → logprob: -8.518708229064941
    7. 'ries' → logprob: -8.643708229064941
    8. 're' → logprob: -8.893708229064941
    9. 'i' → logprob: -9.268708229064941
    10. 'n' → logprob: -9.393708229064941

Token 187: ' lors' (ID: 15456)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7053670287132263
    2. 'f' → logprob: -0.9553670287132263
    3. ',' → logprob: -2.830367088317871
    4. ' f' → logprob: -3.330367088317871
    5. ' ,' → logprob: -4.830367088317871
    6. '_' → logprob: -5.205367088317871
    7. ' 
' → logprob: -5.830367088317871
    8. ' de' → logprob: -6.580367088317871
    9. '_f' → logprob: -6.830367088317871
    10. '*' → logprob: -7.205367088317871

Token 188: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.34810876846313477
    2. ' d' → logprob: -1.8481087684631348
    3. ' de' → logprob: -2.4731087684631348
    4. ' ' → logprob: -3.8481087684631348
    5. ' du' → logprob: -4.473108768463135
    6. 'f' → logprob: -5.348108768463135
    7. '_' → logprob: -6.098108768463135
    8. 'd' → logprob: -6.598108768463135
    9. ' f' → logprob: -6.598108768463135
    10. 'des' → logprob: -6.723108768463135

Token 189: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.47580963373184204
    2. ' calcul' → logprob: -0.975809633731842
    3. 'cal' → logprob: -7.350809574127197
    4. 'c' → logprob: -8.350810050964355
    5. 'factor' → logprob: -8.350810050964355
    6. '#' → logprob: -8.975810050964355
    7. 'for' → logprob: -9.225810050964355
    8. 'calc' → logprob: -10.100810050964355
    9. 'fact' → logprob: -10.350810050964355
    10. ' calculations' → logprob: -10.350810050964355

Token 190: ' des' (ID: 731)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2769848108291626
    2. '_' → logprob: -1.4019848108291626
    3. ' ' → logprob: -1.5269848108291626
    4. ' de' → logprob: -1.7769848108291626
    5. ' f' → logprob: -3.151984691619873
    6. ',' → logprob: -3.901984691619873
    7. '_f' → logprob: -4.651984691619873
    8. 'de' → logprob: -6.026984691619873
    9. ' des' → logprob: -6.276984691619873
    10. '  ' → logprob: -6.651984691619873

Token 191: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.0274860858917236
    2. 'factor' → logprob: -1.0274860858917236
    3. ' fact' → logprob: -1.4024860858917236
    4. ' factorial' → logprob: -4.2774858474731445
    5. ' factor' → logprob: -5.1524858474731445
    6. ' facteurs' → logprob: -6.0274858474731445
    7. 'multip' → logprob: -6.0274858474731445
    8. ' ' → logprob: -6.4024858474731445
    9. 'f' → logprob: -6.5274858474731445
    10. ' produits' → logprob: -6.9024858474731445

Token 192: 'ori' (ID: 6510)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.4018941819667816
    2. 'ori' → logprob: -1.276894211769104
    3. 'or' → logprob: -3.4018940925598145
    4. 'oires' → logprob: -4.9018940925598145
    5. 'orial' → logprob: -5.0268940925598145
    6. 'ores' → logprob: -6.7768940925598145
    7. 'ories' → logprob: -7.1518940925598145
    8. 'oir' → logprob: -7.5268940925598145
    9. 'eurs' → logprob: -7.7768940925598145
    10. '```' → logprob: -8.026894569396973

Token 193: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.11660715937614441
    2. 'els' → logprob: -2.241607189178467
    3. 'el' → logprob: -5.991607189178467
    4. '```' → logprob: -7.741607189178467
    5. '``' → logprob: -8.991606712341309
    6. 'e' → logprob: -8.991606712341309
    7. 'ales' → logprob: -9.116606712341309
    8. 'eles' → logprob: -9.241606712341309
    9. 'es' → logprob: -9.366606712341309
    10. 'elle' → logprob: -9.741606712341309

Token 194: '.
' (ID: 558)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007942082360386848
    2. '
' → logprob: -5.882942199707031
    3. ' ' → logprob: -6.007942199707031
    4. ',' → logprob: -6.757942199707031
    5. ' f' → logprob: -7.132942199707031
    6. ' 
' → logprob: -8.382942199707031
    7. '.' → logprob: -8.507942199707031
    8. '#' → logprob: -10.257942199707031
    9. '1' → logprob: -10.632942199707031
    10. ' ,' → logprob: -10.632942199707031

Token 195: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0017678854055702686
    2. ' f' → logprob: -6.376768112182617
    3. '
' → logprob: -10.126768112182617
    4. ' 
' → logprob: -10.751768112182617
    5. '  
' → logprob: -13.876768112182617
    6. ' ' → logprob: -14.126768112182617
    7. '```' → logprob: -14.376768112182617
    8. '

' → logprob: -15.001768112182617
    9. '	f' → logprob: -15.251768112182617
    10. ' ' → logprob: -15.376768112182617

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269908845424652
    2. '=' → logprob: -2.126990795135498
    3. ' ' → logprob: -9.751991271972656
    4. ',' → logprob: -13.626991271972656
    5. 'f' → logprob: -14.126991271972656
    6. '_' → logprob: -14.251991271972656
    7. ' =
' → logprob: -14.501991271972656
    8. ' ' → logprob: -14.751991271972656
    9. 's' → logprob: -15.001991271972656
    10. '1' → logprob: -15.376991271972656

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.375553131103516
    4. '  ' → logprob: -17.875553131103516
    5. ' ' → logprob: -19.000553131103516
    6. '
' → logprob: -19.563053131103516
    7. '```' → logprob: -20.000553131103516
    8. '[' → logprob: -20.063053131103516
    9. '`' → logprob: -20.125553131103516
    10. '１' → logprob: -20.375553131103516

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.00000762939453
    4. '  ' → logprob: -18.00000762939453
    5. 'f' → logprob: -18.50000762939453
    6. '```' → logprob: -19.25000762939453
    7. '１' → logprob: -19.31250762939453
    8. '`' → logprob: -19.87500762939453
    9. '[' → logprob: -20.00000762939453
    10. '
' → logprob: -20.43750762939453

Token 199: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14166802167892456
    2. 'for' → logprob: -2.5166680812835693
    3. '<|end|>' → logprob: -3.2666680812835693
    4. ' for' → logprob: -5.01666784286499
    5. 'f' → logprob: -5.39166784286499
    6. '\n' → logprob: -7.89166784286499
    7. '
' → logprob: -8.266668319702148
    8. '

' → logprob: -8.266668319702148
    9. '#' → logprob: -8.391668319702148
    10. ' 
' → logprob: -8.641668319702148

Token 200: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.5601284503936768
    2. 'f' → logprob: -1.6851284503936768
    3. 'result' → logprob: -1.6851284503936768
    4. 'for' → logprob: -1.8101284503936768
    5. '#' → logprob: -2.0601284503936768
    6. 'factor' → logprob: -2.5601284503936768
    7. 'res' → logprob: -3.8101284503936768
    8. 'dp' → logprob: -4.685128211975098
    9. 'r' → logprob: -5.310128211975098
    10. 'results' → logprob: -5.935128211975098

Token 201: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38443511724472046
    2. 'result' → logprob: -1.7594351768493652
    3. 'fact' → logprob: -2.8844351768493652
    4. 'res' → logprob: -3.5094351768493652
    5. 'factor' → logprob: -3.6344351768493652
    6. 'dp' → logprob: -5.009435176849365
    7. 'total' → logprob: -5.009435176849365
    8. 'f' → logprob: -5.009435176849365
    9. 's' → logprob: -5.259435176849365
    10. 'r' → logprob: -6.259435176849365

Token 202: 'éer' (ID: 83012)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6230648159980774
    2. 'éer' → logprob: -0.8730648159980774
    3. 'e' → logprob: -4.373064994812012
    4. 'o' → logprob: -4.498064994812012
    5. 'ée' → logprob: -4.748064994812012
    6. '#' → logprob: -4.998064994812012
    7. 'a' → logprob: -5.748064994812012
    8. 'éf' → logprob: -5.998064994812012
    9. 'for' → logprob: -8.248064994812012
    10. 'ép' → logprob: -8.373064994812012

Token 203: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08160150796175003
    2. ' un' → logprob: -2.831601619720459
    3. ' une' → logprob: -4.581601619720459
    4. '[' → logprob: -5.831601619720459
    5. ' a' → logprob: -6.581601619720459
    6. '[]' → logprob: -6.581601619720459
    7. '_' → logprob: -7.206601619720459
    8. 'a' → logprob: -7.331601619720459
    9. ' la' → logprob: -8.2066011428833
    10. ' deux' → logprob: -8.3316011428833

Token 204: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0247201919555664
    2. 'for' → logprob: -2.0247201919555664
    3. 'l' → logprob: -2.0247201919555664
    4. 'f' → logprob: -2.7747201919555664
    5. '[' → logprob: -2.8997201919555664
    6. 'range' → logprob: -2.8997201919555664
    7. '_' → logprob: -3.2747201919555664
    8. 'liste' → logprob: -3.3997201919555664
    9. ' for' → logprob: -3.8997201919555664
    10. 'list' → logprob: -4.024720191955566

Token 205: ' F' (ID: 454)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.723712682723999
    2. 'f' → logprob: -1.098712682723999
    3. ' f' → logprob: -2.473712682723999
    4. 'factor' → logprob: -2.598712682723999
    5. ' factorial' → logprob: -4.473712921142578
    6. ' fact' → logprob: -5.848712921142578
    7. '_fact' → logprob: -6.348712921142578
    8. '_factor' → logprob: -6.598712921142578
    9. ' des' → logprob: -7.098712921142578
    10. 'fac' → logprob: -7.223712921142578

Token 206: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006626201327890158
    2. '=' → logprob: -5.256626129150391
    3. '[' → logprob: -7.881626129150391
    4. '=[' → logprob: -7.881626129150391
    5. 'F' → logprob: -8.38162612915039
    6. ' =[' → logprob: -8.50662612915039
    7. 'f' → logprob: -9.50662612915039
    8. '[]' → logprob: -10.25662612915039
    9. ' ' → logprob: -10.25662612915039
    10. '=[]' → logprob: -10.88162612915039

Token 207: ' taille' (ID: 41644)
  Prédit: '[P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.06869792938232422
    2. ' [' → logprob: -3.068697929382324
    3. 'P' → logprob: -4.693697929382324
    4. '[' → logprob: -5.568697929382324
    5. ' P' → logprob: -5.818697929382324
    6. '1' → logprob: -6.068697929382324
    7. '[M' → logprob: -7.443697929382324
    8. '0' → logprob: -7.693697929382324
    9. ' ' → logprob: -8.693697929382324
    10. ' taille' → logprob: -9.193697929382324

Token 208: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.02467217855155468
    2. ' P' → logprob: -3.774672269821167
    3. '(P' → logprob: -6.899672031402588
    4. '[P' → logprob: -7.899672031402588
    5. ' (' → logprob: -10.274672508239746
    6. ' ' → logprob: -12.899672508239746
    7. ' [' → logprob: -13.149672508239746
    8. '(' → logprob: -13.274672508239746
    9. ' ' → logprob: -13.524672508239746
    10. '[' → logprob: -14.149672508239746

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.073948860168457
    2. ' =' → logprob: -1.323948860168457
    3. '[' → logprob: -1.448948860168457
    4. '=' → logprob: -2.198948860168457
    5. '=[' → logprob: -4.323948860168457
    6. 'F' → logprob: -4.448948860168457
    7. ']' → logprob: -4.573948860168457
    8. '[P' → logprob: -6.073948860168457
    9. ' [' → logprob: -6.198948860168457
    10. 'f' → logprob: -6.323948860168457

Token 210: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1928405910730362
    2. ' [' → logprob: -1.817840576171875
    3. '[P' → logprob: -4.817840576171875
    4. 'F' → logprob: -6.192840576171875
    5. '[F' → logprob: -6.817840576171875
    6. ' F' → logprob: -7.692840576171875
    7. ' f' → logprob: -8.067840576171875
    8. ' P' → logprob: -8.317840576171875
    9. '[f' → logprob: -8.567840576171875
    10. 'f' → logprob: -8.817840576171875

Token 211: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2648804783821106
    2. '0' → logprob: -2.139880418777466
    3. '1' → logprob: -2.514880418777466
    4. ' [' → logprob: -3.889880418777466
    5. ' ' → logprob: -5.264880657196045
    6. '[P' → logprob: -5.389880657196045
    7. 'f' → logprob: -6.014880657196045
    8. ' f' → logprob: -7.764880657196045
    9. ' P' → logprob: -8.389880180358887
    10. 'F' → logprob: -8.389880180358887

Token 212: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9524182677268982
    2. '0' → logprob: -1.202418327331543
    3. 'élé' → logprob: -1.452418327331543
    4. ' élément' → logprob: -2.702418327331543
    5. '_' → logprob: -5.702418327331543
    6. ' element' → logprob: -5.827418327331543
    7. 'element' → logprob: -6.827418327331543
    8. ' éléments' → logprob: -6.952418327331543
    9. ' i' → logprob: -7.077418327331543
    10. '=' → logprob: -7.452418327331543

Token 213: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8209755420684814
    2. ' =' → logprob: -1.4459755420684814
    3. '0' → logprob: -1.5709755420684814
    4. ' ' → logprob: -3.4459755420684814
    5. ' ég' → logprob: -3.5709755420684814
    6. ' égal' → logprob: -3.8209755420684814
    7. ' initialized' → logprob: -4.820975303649902
    8. ' à' → logprob: -4.945975303649902
    9. 'égal' → logprob: -5.070975303649902
    10. 'initial' → logprob: -5.320975303649902

Token 214: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.0018389179604128003
    2. 'alis' → logprob: -7.376838684082031
    3. 'is' → logprob: -7.876838684082031
    4. 'isés' → logprob: -8.001838684082031
    5. 'al' → logprob: -9.126838684082031
    6. 'é' → logprob: -9.251838684082031
    7. 'iz' → logprob: -9.501838684082031
    8. 'isée' → logprob: -9.626838684082031
    9. '=' → logprob: -10.376838684082031
    10. '0' → logprob: -10.751838684082031

Token 215: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03992626070976257
    2. 'à' → logprob: -3.289926290512085
    3. '=' → logprob: -7.789926052093506
    4. '0' → logprob: -8.164926528930664
    5. ' =' → logprob: -8.289926528930664
    6. ' ' → logprob: -8.664926528930664
    7. ''à' → logprob: -8.914926528930664
    8. ' a' → logprob: -9.039926528930664
    9. 's' → logprob: -9.164926528930664
    10. '_' → logprob: -9.664926528930664

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0729021206498146
    2. '0' → logprob: -2.697902202606201
    3. ' ' → logprob: -5.822902202606201
    4. 'f' → logprob: -13.572901725769043
    5. ' ' → logprob: -14.322901725769043
    6. '-' → logprob: -16.44790267944336
    7. '```' → logprob: -16.57290267944336
    8. '   ' → logprob: -16.76040267944336
    9. '=' → logprob: -16.82290267944336
    10. '  ' → logprob: -17.07290267944336

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20154324173927307
    2. '0' → logprob: -1.7015432119369507
    3. ' ' → logprob: -8.951542854309082
    4. 'f' → logprob: -15.451542854309082
    5. '-' → logprob: -16.2015438079834
    6. 'None' → logprob: -17.3265438079834
    7. ' ' → logprob: -17.7015438079834
    8. '```' → logprob: -18.3890438079834
    9. '   ' → logprob: -18.6390438079834
    10. '`' → logprob: -19.2015438079834

Token 218: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3498882055282593
    2. '=' → logprob: -2.349888324737549
    3. 'F' → logprob: -2.599888324737549
    4. '[' → logprob: -2.599888324737549
    5. ',' → logprob: -3.724888324737549
    6. ']' → logprob: -4.224888324737549
    7. '=[' → logprob: -4.974888324737549
    8. 'f' → logprob: -6.349888324737549
    9. '[F' → logprob: -6.724888324737549
    10. ' [' → logprob: -7.474888324737549

Token 219: '#' (ID: 2)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -5.200166469876422e-06
    2. ' F' → logprob: -12.250004768371582
    3. '
' → logprob: -15.000004768371582
    4. '[' → logprob: -16.7500057220459
    5. '```' → logprob: -17.7500057220459
    6. 'f' → logprob: -18.2500057220459
    7. '[F' → logprob: -19.1250057220459
    8. '

' → logprob: -19.7500057220459
    9. '#' → logprob: -19.8750057220459
    10. ' 
' → logprob: -19.8750057220459

Token 220: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00020425561524461955
    2. ' F' → logprob: -8.500204086303711
    3. '
' → logprob: -14.250204086303711
    4. 'f' → logprob: -16.75020408630371
    5. ' ' → logprob: -16.87520408630371
    6. '[' → logprob: -17.12520408630371
    7. '#' → logprob: -17.62520408630371
    8. '

' → logprob: -17.75020408630371
    9. '```' → logprob: -17.87520408630371
    10. ' ' → logprob: -18.37520408630371

Token 221: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0234895758330822
    2. '=' → logprob: -3.773489475250244
    3. ' =[' → logprob: -9.523489952087402
    4. 'F' → logprob: -9.773489952087402
    5. '=[' → logprob: -10.023489952087402
    6. '[' → logprob: -10.398489952087402
    7. ' ' → logprob: -10.523489952087402
    8. 'f' → logprob: -12.773489952087402
    9. ' [' → logprob: -13.273489952087402
    10. ',' → logprob: -13.273489952087402

Token 222: ' utilisée' (ID: 106548)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023287402465939522
    2. ' [' → logprob: -3.773287296295166
    3. '[F' → logprob: -10.273287773132324
    4. '[f' → logprob: -13.523287773132324
    5. ' ' → logprob: -13.648287773132324
    6. '[P' → logprob: -13.898287773132324
    7. 'f' → logprob: -14.148287773132324
    8. 'F' → logprob: -14.148287773132324
    9. '1' → logprob: -14.398287773132324
    10. '[i' → logprob: -14.773287773132324

Token 223: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.584190309047699
    2. ' =' → logprob: -1.8341903686523438
    3. '=' → logprob: -2.0841903686523438
    4. ' pour' → logprob: -2.9591903686523438
    5. '[]' → logprob: -3.3341903686523438
    6. ' [' → logprob: -3.9591903686523438
    7. 'for' → logprob: -4.584190368652344
    8. '[:]' → logprob: -4.834190368652344
    9. ']' → logprob: -5.084190368652344
    10. ' for' → logprob: -5.459190368652344

Token 224: ' stock' (ID: 6546)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25375896692276
    2. 'i' → logprob: -2.5037589073181152
    3. ' range' → logprob: -2.8787589073181152
    4. ' stock' → logprob: -3.7537589073181152
    5. 'range' → logprob: -4.378758907318115
    6. ' _' → logprob: -4.503758907318115
    7. ' calcul' → logprob: -4.628758907318115
    8. '_' → logprob: -4.753758907318115
    9. 'calcul' → logprob: -5.503758907318115
    10. ' ' → logprob: -6.253758907318115

Token 225: 'er' (ID: 259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.603950560092926
    2. 'er' → logprob: -1.1039505004882812
    3. ' =' → logprob: -2.9789505004882812
    4. '=' → logprob: -3.1039505004882812
    5. ' [' → logprob: -5.228950500488281
    6. '=[' → logprob: -5.228950500488281
    7. '   ' → logprob: -6.228950500488281
    8. ' ' → logprob: -6.353950500488281
    9. ' à' → logprob: -6.478950500488281
    10. 'F' → logprob: -6.728950500488281

Token 226: ' les' (ID: 1341)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0756313800811768
    2. ' ' → logprob: -1.0756313800811768
    3. '<|end|>' → logprob: -1.3256313800811768
    4. 'f' → logprob: -3.3256313800811768
    5. ' f' → logprob: -4.825631141662598
    6. '0' → logprob: -6.575631141662598
    7. ' les' → logprob: -6.575631141662598
    8. ' des' → logprob: -6.700631141662598
    9. '[' → logprob: -6.825631141662598
    10. 'F' → logprob: -7.700631141662598

Token 227: ' valeurs' (ID: 73668)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9608540534973145
    2. 'factor' → logprob: -1.0858540534973145
    3. 'fact' → logprob: -1.3358540534973145
    4. ' fact' → logprob: -4.8358540534973145
    5. 'f' → logprob: -5.8358540534973145
    6. '0' → logprob: -6.0858540534973145
    7. ' ' → logprob: -6.3358540534973145
    8. ' factorial' → logprob: -6.7108540534973145
    9. ' facto' → logprob: -8.085853576660156
    10. ' factor' → logprob: -8.585853576660156

Token 228: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31249290704727173
    2. 'f' → logprob: -2.062492847442627
    3. ' =' → logprob: -3.687492847442627
    4. '_f' → logprob: -3.687492847442627
    5. ' [' → logprob: -3.937492847442627
    6. ' des' → logprob: -4.312492847442627
    7. ' de' → logprob: -4.312492847442627
    8. '=' → logprob: -4.562492847442627
    9. ' ' → logprob: -4.687492847442627
    10. ' f' → logprob: -4.937492847442627

Token 229: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7267526984214783
    2. 'factor' → logprob: -0.8517526984214783
    3. ' fact' → logprob: -2.476752758026123
    4. '1' → logprob: -5.851752758026123
    5. ' factorial' → logprob: -6.976752758026123
    6. ' ' → logprob: -7.351752758026123
    7. ' factor' → logprob: -7.351752758026123
    8. ' facto' → logprob: -8.101752281188965
    9. 'f' → logprob: -8.601752281188965
    10. '0' → logprob: -8.976752281188965

Token 230: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.011090856045484543
    2. '1' → logprob: -5.6360907554626465
    3. 'or' → logprob: -5.7610907554626465
    4. 'orial' → logprob: -6.3860907554626465
    5. '(' → logprob: -6.7610907554626465
    6. 'o' → logprob: -7.3860907554626465
    7. '```' → logprob: -8.011091232299805
    8. '[' → logprob: -9.511091232299805
    9. 'i' → logprob: -9.761091232299805
    10. 'orie' → logprob: -9.886091232299805

Token 231: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0004757135466206819
    2. 'alles' → logprob: -8.875475883483887
    3. 'lles' → logprob: -9.000475883483887
    4. 'elle' → logprob: -9.500475883483887
    5. '#' → logprob: -10.125475883483887
    6. 'es' → logprob: -10.750475883483887
    7. 'a' → logprob: -11.625475883483887
    8. 'nelles' → logprob: -11.750475883483887
    9. '1' → logprob: -11.875475883483887
    10. 'e' → logprob: -12.000475883483887

Token 232: ' modulo' (ID: 112372)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.4303138852119446
    2. '[' → logprob: -1.3053138256072998
    3. 'f' → logprob: -4.055314064025879
    4. ',' → logprob: -4.180314064025879
    5. ' [' → logprob: -4.180314064025879
    6. ' F' → logprob: -4.305314064025879
    7. ' =' → logprob: -4.430314064025879
    8. '[F' → logprob: -6.180314064025879
    9. ' ' → logprob: -7.055314064025879
    10. '=' → logprob: -7.180314064025879

Token 233: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.04388844594359398
    2. ' M' → logprob: -3.1688883304595947
    3. '1' → logprob: -7.293888568878174
    4. ' ' → logprob: -9.043888092041016
    5. '(M' → logprob: -9.918888092041016
    6. ' ' → logprob: -11.543888092041016
    7. ',' → logprob: -12.043888092041016
    8. ' (' → logprob: -12.043888092041016
    9. '(' → logprob: -12.418888092041016
    10. '[M' → logprob: -12.793888092041016

Token 234: ',' (ID: 11)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.040966011583805084
    2. ' =' → logprob: -3.290966033935547
    3. '
' → logprob: -6.665966033935547
    4. '=' → logprob: -7.040966033935547
    5. '[' → logprob: -8.290966033935547
    6. ',' → logprob: -8.415966033935547
    7. ' F' → logprob: -8.790966033935547
    8. '=[' → logprob: -10.290966033935547
    9. 'f' → logprob: -10.665966033935547
    10. '[F' → logprob: -10.790966033935547

Token 235: ' tel' (ID: 10716)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.339599609375
    2. 'F' → logprob: -1.589599609375
    3. ' [' → logprob: -3.214599609375
    4. ' F' → logprob: -3.714599609375
    5. ' 
' → logprob: -5.089599609375
    6. '
' → logprob: -5.714599609375
    7. '#' → logprob: -6.339599609375
    8. '[:]' → logprob: -6.464599609375
    9. 'f' → logprob: -6.714599609375
    10. '0' → logprob: -7.089599609375

Token 236: ' que' (ID: 661)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4495013356208801
    2. ' que' → logprob: -1.5745012760162354
    3. ' ' → logprob: -3.4495012760162354
    4. '#' → logprob: -3.8245012760162354
    5. 'que' → logprob: -3.9495012760162354
    6. '=' → logprob: -4.0745015144348145
    7. ']' → logprob: -4.3245015144348145
    8. '[]' → logprob: -4.6995015144348145
    9. '   ' → logprob: -4.8245015144348145
    10. ' =' → logprob: -5.0745015144348145

Token 237: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.22378835082054138
    2. ' F' → logprob: -1.7237883806228638
    3. '0' → logprob: -4.723788261413574
    4. 'f' → logprob: -5.348788261413574
    5. '[' → logprob: -5.473788261413574
    6. '1' → logprob: -6.473788261413574
    7. ' f' → logprob: -6.973788261413574
    8. ' ' → logprob: -7.223788261413574
    9. ' [' → logprob: -7.473788261413574
    10. '   ' → logprob: -9.223788261413574

Token 238: '[n' (ID: 15433)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09250523149967194
    2. '=' → logprob: -2.7175052165985107
    3. '[' → logprob: -3.8425052165985107
    4. '=[' → logprob: -7.71750545501709
    5. ' =[' → logprob: -8.46750545501709
    6. '[i' → logprob: -8.84250545501709
    7. '[:]' → logprob: -10.71750545501709
    8. ' ' → logprob: -10.84250545501709
    9. 'F' → logprob: -11.59250545501709
    10. ' [' → logprob: -12.46750545501709

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003054950386285782
    2. ']=' → logprob: -6.003055095672607
    3. ' ]' → logprob: -8.37805461883545
    4. '=' → logprob: -8.75305461883545
    5. ' =' → logprob: -10.62805461883545
    6. 's' → logprob: -10.75305461883545
    7. '[' → logprob: -10.87805461883545
    8. 'n' → logprob: -11.00305461883545
    9. 'f' → logprob: -11.00305461883545
    10. 'for' → logprob: -11.12805461883545

Token 240: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31495949625968933
    2. ' =' → logprob: -1.3149595260620117
    3. '=[' → logprob: -7.439959526062012
    4. '[' → logprob: -7.439959526062012
    5. ']' → logprob: -8.189959526062012
    6. ' =[' → logprob: -9.314959526062012
    7. 's' → logprob: -9.814959526062012
    8. '=[]' → logprob: -10.439959526062012
    9. ']=' → logprob: -10.939959526062012
    10. ',' → logprob: -11.064959526062012

Token 241: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020634382963180542
    2. ' ' → logprob: -3.895634412765503
    3. 'f' → logprob: -9.895634651184082
    4. ' f' → logprob: -10.395634651184082
    5. ' ' → logprob: -12.395634651184082
    6. ' (' → logprob: -13.145634651184082
    7. '(' → logprob: -13.270634651184082
    8. '  ' → logprob: -14.270634651184082
    9. '0' → logprob: -14.645634651184082
    10. '   ' → logprob: -14.708134651184082

Token 242: '!' (ID: 0)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7665534615516663
    2. ']' → logprob: -1.6415534019470215
    3. 'for' → logprob: -2.1415534019470215
    4. ' for' → logprob: -2.6415534019470215
    5. '!' → logprob: -2.6415534019470215
    6. 'F' → logprob: -3.7665534019470215
    7. ' %' → logprob: -4.3915534019470215
    8. '+' → logprob: -4.5165534019470215
    9. '*' → logprob: -4.6415534019470215
    10. ',' → logprob: -5.1415534019470215

Token 243: ' %' (ID: 1851)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.8596887588500977
    2. ' =' → logprob: -1.2346887588500977
    3. '=' → logprob: -1.4846887588500977
    4. '[' → logprob: -3.4846887588500977
    5. ']' → logprob: -4.609688758850098
    6. '=[' → logprob: -4.734688758850098
    7. ',' → logprob: -5.734688758850098
    8. 'f' → logprob: -6.484688758850098
    9. '.' → logprob: -6.609688758850098
    10. ' [' → logprob: -7.484688758850098

Token 244: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.38692033290863037
    2. ' M' → logprob: -1.1369203329086304
    3. ' ' → logprob: -10.136919975280762
    4. ' ' → logprob: -11.761919975280762
    5. '998' → logprob: -14.011919975280762
    6. '	M' → logprob: -15.386919975280762
    7. '```' → logprob: -15.761919975280762
    8. '1' → logprob: -15.886919975280762
    9. '999' → logprob: -15.886919975280762
    10. ')' → logprob: -16.136920928955078

Token 245: '.
' (ID: 558)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.008803648874163628
    2. '[' → logprob: -5.508803844451904
    3. '
' → logprob: -5.633803844451904
    4. ',' → logprob: -8.258803367614746
    5. ' =' → logprob: -8.258803367614746
    6. 'f' → logprob: -8.758803367614746
    7. '=' → logprob: -9.383803367614746
    8. ']' → logprob: -9.633803367614746
    9. ' F' → logprob: -9.758803367614746
    10. ',
' → logprob: -9.883803367614746

Token 246: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.2664456789934775e-06
    2. ' F' → logprob: -14.125000953674316
    3. '
' → logprob: -14.750000953674316
    4. '[' → logprob: -15.875000953674316
    5. 'f' → logprob: -17.250001907348633
    6. '[
' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. '[F' → logprob: -19.000001907348633
    9. '

' → logprob: -19.125001907348633
    10. ' 
' → logprob: -20.000001907348633

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142406225204468
    2. ' =' → logprob: -1.7014241218566895
    3. '=[' → logprob: -12.326423645019531
    4. '[' → logprob: -12.576423645019531
    5. ' =[' → logprob: -12.951423645019531
    6. '＝' → logprob: -16.20142364501953
    7. '[:]' → logprob: -16.45142364501953
    8. '=[]' → logprob: -16.45142364501953
    9. ' ' → logprob: -16.82642364501953
    10. ',' → logprob: -16.95142364501953

Token 248: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012356207298580557
    2. ' [' → logprob: -9.000123977661133
    3. '[P' → logprob: -16.125123977661133
    4. ' ' → logprob: -18.250123977661133
    5. '[p' → logprob: -19.750123977661133
    6. '1' → logprob: -20.375123977661133
    7. '   ' → logprob: -20.500123977661133
    8. '[f' → logprob: -20.750123977661133
    9. '[F' → logprob: -20.750123977661133
    10. '([' → logprob: -21.125123977661133

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '```' → logprob: -19.625001907348633
    5. '

' → logprob: -19.750001907348633
    6. '  ' → logprob: -20.250001907348633
    7. ']' → logprob: -20.250001907348633
    8. '0' → logprob: -20.625001907348633
    9. '۱' → logprob: -20.625001907348633
    10. '
' → logprob: -20.875001907348633

Token 250: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014015058986842632
    2. ']*' → logprob: -4.389015197753906
    3. ' for' → logprob: -6.639015197753906
    4. ' ]' → logprob: -8.764015197753906
    5. 'for' → logprob: -10.389015197753906
    6. ']*(' → logprob: -12.389015197753906
    7. ')' → logprob: -13.139015197753906
    8. ']+' → logprob: -13.514015197753906
    9. '*' → logprob: -14.514015197753906
    10. ' ' → logprob: -15.014015197753906

Token 251: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02693537250161171
    2. ' *' → logprob: -4.276935577392578
    3. ' for' → logprob: -4.901935577392578
    4. ']' → logprob: -5.776935577392578
    5. 'for' → logprob: -6.776935577392578
    6. ']*' → logprob: -7.776935577392578
    7. ')' → logprob: -8.276935577392578
    8. '+' → logprob: -9.276935577392578
    9. '[' → logprob: -9.651935577392578
    10. '*(' → logprob: -10.026935577392578

Token 252: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -6.704273118884885e-07
    2. '(P' → logprob: -14.375000953674316
    3. ' P' → logprob: -17.0
    4. '(' → logprob: -19.625
    5. '	P' → logprob: -21.125
    6. '\P' → logprob: -21.375
    7. 'p' → logprob: -21.75
    8. '```' → logprob: -22.125
    9. '_P' → logprob: -22.875
    10. '[P' → logprob: -23.0

Token 253: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4787304401397705
    2. '<|end|>' → logprob: -1.2287304401397705
    3. '\n' → logprob: -3.2287304401397705
    4. 'for' → logprob: -3.6037304401397705
    5. ' for' → logprob: -4.728730201721191
    6. ')' → logprob: -6.228730201721191
    7. '<|end|>' → logprob: -6.353730201721191
    8. '#' → logprob: -6.603730201721191
    9. 'f' → logprob: -6.728730201721191
    10. ' 
' → logprob: -6.853730201721191

Token 254: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04779784008860588
    2. ' for' → logprob: -3.422797918319702
    3. '
' → logprob: -5.047797679901123
    4. '#' → logprob: -5.922797679901123
    5. '<|end|>' → logprob: -6.172797679901123
    6. 'i' → logprob: -7.047797679901123
    7. 'f' → logprob: -7.172797679901123
    8. ')' → logprob: -8.047798156738281
    9. 'n' → logprob: -8.297798156738281
    10. ' ' → logprob: -8.922798156738281

Token 255: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.988221684878226e-06
    2. 'i' → logprob: -12.125006675720215
    3. ' for' → logprob: -13.875006675720215
    4. '
' → logprob: -15.500006675720215
    5. 'range' → logprob: -15.875006675720215
    6. '#' → logprob: -16.12500762939453
    7. 'f' → logprob: -16.50000762939453
    8. '```' → logprob: -17.00000762939453
    9. 'fo' → logprob: -17.87500762939453
    10. '

' → logprob: -18.62500762939453

Token 256: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.10693260282278061
    2. 'é' → logprob: -3.7319326400756836
    3. 'éf' → logprob: -4.231932640075684
    4. 'o' → logprob: -4.231932640075684
    5. '#' → logprob: -4.856932640075684
    6. 'a' → logprob: -4.981932640075684
    7. 'iter' → logprob: -5.356932640075684
    8. 'ac' → logprob: -5.356932640075684
    9. 'e' → logprob: -5.731932640075684
    10. 'for' → logprob: -5.731932640075684

Token 257: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.30793970823287964
    2. 'une' → logprob: -1.9329397678375244
    3. 'a' → logprob: -3.1829397678375244
    4. ' a' → logprob: -4.057939529418945
    5. '[' → logprob: -4.557939529418945
    6. 'i' → logprob: -4.807939529418945
    7. ' ' → logprob: -4.807939529418945
    8. ' i' → logprob: -5.432939529418945
    9. ' la' → logprob: -5.682939529418945
    10. 'f' → logprob: -5.932939529418945

Token 258: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05907301977276802
    2. 'list' → logprob: -3.809072971343994
    3. 'liste' → logprob: -3.934072971343994
    4. 'range' → logprob: -5.309072971343994
    5. '#' → logprob: -5.809072971343994
    6. 'bou' → logprob: -6.059072971343994
    7. ' for' → logprob: -6.309072971343994
    8. 'variable' → logprob: -7.934072971343994
    9. '
' → logprob: -8.059073448181152
    10. 'b' → logprob: -8.059073448181152

Token 259: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.7756229043006897
    2. 'G' → logprob: -1.775622844696045
    3. 'inv' → logprob: -2.025622844696045
    4. 'R' → logprob: -3.025622844696045
    5. 'pow' → logprob: -3.775622844696045
    6. 'dp' → logprob: -3.775622844696045
    7. 'F' → logprob: -4.150622844696045
    8. 'C' → logprob: -4.150622844696045
    9. ' I' → logprob: -4.150622844696045
    10. 'fact' → logprob: -4.400622844696045

Token 260: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021270371973514557
    2. '=' → logprob: -4.146270275115967
    3. '[' → logprob: -6.271270275115967
    4. 'n' → logprob: -6.521270275115967
    5. 'I' → logprob: -7.521270275115967
    6. 'F' → logprob: -8.021270751953125
    7. '[]' → logprob: -8.396270751953125
    8. '=[]' → logprob: -9.021270751953125
    9. ' ' → logprob: -9.396270751953125
    10. 'N' → logprob: -9.396270751953125

Token 261: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6966342329978943
    2. '[P' → logprob: -0.9466342329978943
    3. 'P' → logprob: -2.571634292602539
    4. '1' → logprob: -3.821634292602539
    5. ' [' → logprob: -4.446634292602539
    6. ' P' → logprob: -5.696634292602539
    7. '(P' → logprob: -8.821634292602539
    8. ' ' → logprob: -9.071634292602539
    9. 'tail' → logprob: -11.821634292602539
    10. 'size' → logprob: -11.821634292602539

Token 262: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.016038941219449043
    2. ' P' → logprob: -4.14103889465332
    3. '[P' → logprob: -13.39103889465332
    4. '[' → logprob: -13.89103889465332
    5. '(P' → logprob: -14.39103889465332
    6. '1' → logprob: -15.14103889465332
    7. ' ' → logprob: -15.14103889465332
    8. ' ' → logprob: -15.89103889465332
    9. 'N' → logprob: -16.14103889465332
    10. ' (' → logprob: -16.26603889465332

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037822623271495104
    2. '[' → logprob: -5.753782272338867
    3. ' ,' → logprob: -8.003782272338867
    4. ' =' → logprob: -9.003782272338867
    5. '=' → logprob: -9.378782272338867
    6. ' [' → logprob: -10.253782272338867
    7. 'I' → logprob: -12.253782272338867
    8. 'F' → logprob: -12.253782272338867
    9. ',
' → logprob: -12.628782272338867
    10. '#' → logprob: -12.753782272338867

Token 264: ' initial' (ID: 4871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0485982745885849
    2. ' [' → logprob: -3.048598289489746
    3. ' ' → logprob: -12.548598289489746
    4. '1' → logprob: -13.798598289489746
    5. '#' → logprob: -13.923598289489746
    6. 'I' → logprob: -14.173598289489746
    7. 'F' → logprob: -14.423598289489746
    8. '[I' → logprob: -14.423598289489746
    9. '[i' → logprob: -15.048598289489746
    10. ' =' → logprob: -15.173598289489746

Token 265: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.5881226062774658
    2. '[' → logprob: -0.8381226062774658
    3. 'isé' → logprob: -4.588122367858887
    4. 'iz' → logprob: -7.463122367858887
    5. 'is' → logprob: -7.713122367858887
    6. '=' → logprob: -8.338122367858887
    7. 'isées' → logprob: -9.213122367858887
    8. '=[' → logprob: -9.213122367858887
    9. ' [' → logprob: -9.338122367858887
    10. 'ized' → logprob: -9.588122367858887

Token 266: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1490987241268158
    2. ' à' → logprob: -2.6490986347198486
    3. ' [' → logprob: -3.1490986347198486
    4. ' =' → logprob: -4.149098873138428
    5. 'à' → logprob: -5.399098873138428
    6. '=' → logprob: -5.774098873138428
    7. 'a' → logprob: -7.774098873138428
    8. '=[' → logprob: -7.899098873138428
    9. '```' → logprob: -8.64909839630127
    10. ' a' → logprob: -8.77409839630127

Token 267: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10447409749031067
    2. '1' → logprob: -2.4794740676879883
    3. ' [' → logprob: -4.229474067687988
    4. ' ' → logprob: -7.104474067687988
    5. '[P' → logprob: -11.729474067687988
    6. 'P' → logprob: -12.729474067687988
    7. 'F' → logprob: -12.729474067687988
    8. '0' → logprob: -12.729474067687988
    9. 'f' → logprob: -12.979474067687988
    10. '[F' → logprob: -13.229474067687988

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.430337131023407
    2. '[' → logprob: -1.0553371906280518
    3. '0' → logprob: -7.430336952209473
    4. 'P' → logprob: -7.930336952209473
    5. '[P' → logprob: -7.930336952209473
    6. ' [' → logprob: -8.805336952209473
    7. ' ' → logprob: -10.555336952209473
    8. 'f' → logprob: -10.680336952209473
    9. '[M' → logprob: -10.680336952209473
    10. 'F' → logprob: -10.805336952209473

Token 269: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8030811548233032
    2. 'I' → logprob: -0.9280811548233032
    3. '*' → logprob: -3.0530810356140137
    4. '[I' → logprob: -3.4280810356140137
    5. ' I' → logprob: -3.6780810356140137
    6. ' *' → logprob: -3.8030810356140137
    7. ']' → logprob: -4.803081035614014
    8. 'F' → logprob: -5.178081035614014
    9. ' [' → logprob: -5.303081035614014
    10. '#' → logprob: -5.803081035614014

Token 270: '#' (ID: 2)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -7.226628895296017e-06
    2. ' I' → logprob: -11.875007629394531
    3. '[' → logprob: -17.00000762939453
    4. '
' → logprob: -17.12500762939453
    5. '#' → logprob: -17.62500762939453
    6. '```' → logprob: -17.87500762939453
    7. '[I' → logprob: -18.87500762939453
    8. '	I' → logprob: -19.37500762939453
    9. '

' → logprob: -19.87500762939453
    10. ' ' → logprob: -20.25000762939453

Token 271: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0007112398743629456
    2. ' I' → logprob: -7.250711441040039
    3. '#' → logprob: -14.250711441040039
    4. ' ' → logprob: -15.500711441040039
    5. '
' → logprob: -15.625711441040039
    6. '	I' → logprob: -16.50071144104004
    7. '

' → logprob: -17.37571144104004
    8. ' 
' → logprob: -17.87571144104004
    9. ' ' → logprob: -18.00071144104004
    10. '  
' → logprob: -18.62571144104004

Token 272: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28140807151794434
    2. '=' → logprob: -1.4064080715179443
    3. '[' → logprob: -8.656408309936523
    4. ' ' → logprob: -10.156408309936523
    5. '_' → logprob: -11.906408309936523
    6. 'n' → logprob: -12.281408309936523
    7. 's' → logprob: -12.281408309936523
    8. '=[' → logprob: -12.406408309936523
    9. ' =[' → logprob: -12.531408309936523
    10. '
' → logprob: -12.781408309936523

Token 273: ' utilisée' (ID: 106548)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012511059641838074
    2. ' [' → logprob: -4.387511253356934
    3. ' ' → logprob: -14.262511253356934
    4. '1' → logprob: -15.137511253356934
    5. '=[' → logprob: -16.012510299682617
    6. '=' → logprob: -16.262510299682617
    7. ' =' → logprob: -16.762510299682617
    8. '[i' → logprob: -16.762510299682617
    9. '[I' → logprob: -16.887510299682617
    10. 'I' → logprob: -17.637510299682617

Token 274: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19271790981292725
    2. ' [' → logprob: -1.9427179098129272
    3. ' pour' → logprob: -3.567718029022217
    4. '=' → logprob: -6.817718029022217
    5. 'pour' → logprob: -6.942718029022217
    6. ' =' → logprob: -7.192718029022217
    7. '=[' → logprob: -8.192717552185059
    8. 'for' → logprob: -8.692717552185059
    9. ' for' → logprob: -8.942717552185059
    10. '#' → logprob: -9.192717552185059

Token 275: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02055041678249836
    2. ' [' → logprob: -3.895550489425659
    3. '1' → logprob: -12.770550727844238
    4. '[i' → logprob: -12.895550727844238
    5. '[I' → logprob: -13.645550727844238
    6. ' ' → logprob: -13.895550727844238
    7. 'I' → logprob: -14.520550727844238
    8. ' ' → logprob: -16.520549774169922
    9. 'f' → logprob: -16.770549774169922
    10. ' =' → logprob: -16.895549774169922

Token 276: 'er' (ID: 259)
  Prédit: 'uer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.26830530166625977
    2. 'ocker' → logprob: -2.5183053016662598
    3. '[' → logprob: -3.0183053016662598
    4. 'orer' → logprob: -3.3933053016662598
    5. 'iser' → logprob: -4.01830530166626
    6. 'urer' → logprob: -4.14330530166626
    7. 'er' → logprob: -4.26830530166626
    8. 'irer' → logprob: -5.14330530166626
    9. 'érer' → logprob: -5.76830530166626
    10. 'uler' → logprob: -6.01830530166626

Token 277: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004891923628747463
    2. '1' → logprob: -5.504891872406006
    3. ' [' → logprob: -7.129891872406006
    4. ' ' → logprob: -11.379892349243164
    5. '(' → logprob: -14.504892349243164
    6. '[i' → logprob: -16.129892349243164
    7. 'I' → logprob: -16.879892349243164
    8. '#' → logprob: -16.879892349243164
    9. 'f' → logprob: -17.004892349243164
    10. '```' → logprob: -17.129892349243164

Token 278: ' invers' (ID: 38721)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5783025026321411
    2. '1' → logprob: -0.8283025026321411
    3. ' [' → logprob: -6.453302383422852
    4. 'inverse' → logprob: -8.203302383422852
    5. ' ' → logprob: -8.453302383422852
    6. '[in' → logprob: -9.203302383422852
    7. '[i' → logprob: -9.453302383422852
    8. 'factor' → logprob: -9.703302383422852
    9. 'inv' → logprob: -11.578302383422852
    10. '(' → logprob: -11.578302383422852

Token 279: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.08081673085689545
    2. 'és' → logprob: -3.3308167457580566
    3. '[' → logprob: -3.9558167457580566
    4. 'al' → logprob: -4.705816745758057
    5. 'ers' → logprob: -5.830816745758057
    6. 'érés' → logprob: -5.830816745758057
    7. 'ités' → logprob: -6.455816745758057
    8. '1' → logprob: -6.955816745758057
    9. '```' → logprob: -7.455816745758057
    10. ']' → logprob: -7.455816745758057

Token 280: ' multiplic' (ID: 67929)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: 'atifs' (ID: 66205)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.08295263350009918
    2. 'és' → logprob: -2.8329527378082275
    3. 'e' → logprob: -4.707952499389648
    4. 'aux' → logprob: -6.457952499389648
    5. 'atifs' → logprob: -6.457952499389648
    6. 'ifs' → logprob: -6.707952499389648
    7. 'def' → logprob: -7.082952499389648
    8. 'des' → logprob: -7.332952499389648
    9. 'os' → logprob: -7.707952499389648
    10. 'ateurs' → logprob: -7.832952499389648

Token 282: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: ' fact' (ID: 2840)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10510896146297455
    2. 'P' → logprob: -3.1051089763641357
    3. '[' → logprob: -3.9801089763641357
    4. ' ' → logprob: -4.105108737945557
    5. 'F' → logprob: -4.355108737945557
    6. 'fact' → logprob: -6.230108737945557
    7. 'factor' → logprob: -6.605108737945557
    8. ' P' → logprob: -6.980108737945557
    9. 'f' → logprob: -7.355108737945557
    10. 'élé' → logprob: -7.480108737945557

Token 284: 'ori' (ID: 6510)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9466793537139893
    2. 'ic' → logprob: -1.0716793537139893
    3. 'i' → logprob: -2.5716793537139893
    4. 'I' → logprob: -3.1966793537139893
    5. '1' → logprob: -3.9466793537139893
    6. '[i' → logprob: -4.07167911529541
    7. 'aux' → logprob: -4.69667911529541
    8. '=' → logprob: -4.82167911529541
    9. 'él' → logprob: -4.82167911529541
    10. '(' → logprob: -4.82167911529541

Token 285: 'elles' (ID: 8500)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.013971793465316296
    2. 'ques' → logprob: -4.38897180557251
    3. 'aux' → logprob: -6.76397180557251
    4. 'elles' → logprob: -8.888971328735352
    5. 'que' → logprob: -10.013971328735352
    6. '[' → logprob: -10.513971328735352
    7. 'eux' → logprob: -11.263971328735352
    8. 'q' → logprob: -11.513971328735352
    9. '1' → logprob: -11.638971328735352
    10. 'ls' → logprob: -11.763971328735352

Token 286: ' modulo' (ID: 112372)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04527033120393753
    2. '*' → logprob: -4.1702704429626465
    3. ']' → logprob: -4.1702704429626465
    4. '[' → logprob: -5.5452704429626465
    5. '<|end|>' → logprob: -6.1702704429626465
    6. ' ' → logprob: -7.0452704429626465
    7. ',' → logprob: -7.0452704429626465
    8. ' ]' → logprob: -7.2952704429626465
    9. ' [' → logprob: -7.5452704429626465
    10. ')' → logprob: -7.6702704429626465

Token 287: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.08909226208925247
    2. ' M' → logprob: -2.464092254638672
    3. '1' → logprob: -9.464092254638672
    4. ' ' → logprob: -10.089092254638672
    5. 'P' → logprob: -10.714092254638672
    6. '998' → logprob: -12.589092254638672
    7. ' ' → logprob: -13.214092254638672
    8. 'm' → logprob: -13.714092254638672
    9. '[' → logprob: -13.714092254638672
    10. ' P' → logprob: -13.964092254638672

Token 288: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.040687084197998
    2. 'I' → logprob: -1.165687084197998
    3. '.' → logprob: -1.415687084197998
    4. ',' → logprob: -3.165687084197998
    5. 'F' → logprob: -3.915687084197998
    6. '*' → logprob: -5.290687084197998
    7. ' I' → logprob: -5.290687084197998
    8. ']' → logprob: -5.540687084197998
    9. '<|end|>' → logprob: -5.665687084197998
    10. '[I' → logprob: -6.165687084197998

Token 289: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -3.15441757265944e-05
    2. ' I' → logprob: -10.375031471252441
    3. '
' → logprob: -15.500031471252441
    4. '#' → logprob: -18.000032424926758
    5. '

' → logprob: -18.500032424926758
    6. ' ' → logprob: -19.375032424926758
    7. '	I' → logprob: -19.500032424926758
    8. '```' → logprob: -19.500032424926758
    9. '[' → logprob: -20.000032424926758
    10. '  
' → logprob: -20.500032424926758

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021670162677765
    2. '=' → logprob: -2.3502166271209717
    3. '[' → logprob: -11.85021686553955
    4. ' ' → logprob: -13.22521686553955
    5. ' =[' → logprob: -15.22521686553955
    6. ']' → logprob: -15.47521686553955
    7. '=[' → logprob: -15.47521686553955
    8. ')' → logprob: -16.100215911865234
    9. ',' → logprob: -16.600215911865234
    10. '_' → logprob: -16.975215911865234

Token 291: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1602257490158081
    2. ' [' → logprob: -1.910225749015808
    3. ' ' → logprob: -13.910225868225098
    4. '1' → logprob: -15.160225868225098
    5. '([' → logprob: -16.53522491455078
    6. '[P' → logprob: -16.78522491455078
    7. ' ' → logprob: -17.03522491455078
    8. '   ' → logprob: -17.16022491455078
    9. '=[' → logprob: -17.28522491455078
    10. '```' → logprob: -17.78522491455078

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ']' → logprob: -16.625001907348633
    4. '```' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '[' → logprob: -19.000001907348633
    7. '
' → logprob: -19.562501907348633
    8. '  ' → logprob: -20.125001907348633
    9. '' → logprob: -20.250001907348633
    10. '"' → logprob: -20.375001907348633

Token 293: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.315936429426074e-05
    2. '*' → logprob: -10.125082969665527
    3. ']*' → logprob: -10.250082969665527
    4. ' ]' → logprob: -12.000082969665527
    5. ')' → logprob: -14.000082969665527
    6. ']

' → logprob: -15.750082969665527
    7. '}' → logprob: -16.125083923339844
    8. ' *' → logprob: -16.125083923339844
    9. ']
' → logprob: -16.250083923339844
    10. '#' → logprob: -16.375083923339844

Token 294: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07038073986768723
    2. ' *' → logprob: -2.695380687713623
    3. ')' → logprob: -8.695381164550781
    4. ' ' → logprob: -9.195381164550781
    5. '[' → logprob: -9.820381164550781
    6. ']' → logprob: -10.445381164550781
    7. '
' → logprob: -10.820381164550781
    8. ' ' → logprob: -10.945381164550781
    9. '*
' → logprob: -11.820381164550781
    10. ',' → logprob: -11.945381164550781

Token 295: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0001234428636962548
    2. ' P' → logprob: -9.000123023986816
    3. '(P' → logprob: -18.750123977661133
    4. '   ' → logprob: -19.000123977661133
    5. '	P' → logprob: -19.375123977661133
    6. ' ' → logprob: -20.000123977661133
    7. 'p' → logprob: -20.375123977661133
    8. '\P' → logprob: -20.500123977661133
    9. '[P' → logprob: -20.625123977661133
    10. '```' → logprob: -21.000123977661133

Token 296: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7561708092689514
    2. '<|end|>' → logprob: -0.8811708092689514
    3. 'for' → logprob: -3.1311707496643066
    4. '\n' → logprob: -4.006170749664307
    5. 'f' → logprob: -4.131170749664307
    6. '#' → logprob: -4.256170749664307
    7. ' for' → logprob: -4.631170749664307
    8. ' 
' → logprob: -5.881170749664307
    9. '[' → logprob: -6.506170749664307
    10. ' ' → logprob: -6.631170749664307

Token 297: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.097325325012207
    2. 'for' → logprob: -1.347325325012207
    3. '#' → logprob: -1.847325325012207
    4. ' for' → logprob: -2.347325325012207
    5. '
' → logprob: -3.097325325012207
    6. ' ' → logprob: -3.722325325012207
    7. '<|end|>' → logprob: -4.097325325012207
    8. ' 
' → logprob: -4.472325325012207
    9. '\n' → logprob: -4.472325325012207
    10. ' f' → logprob: -4.722325325012207

Token 298: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009106946177780628
    2. 'f' → logprob: -4.7591071128845215
    3. ' for' → logprob: -7.8841071128845215
    4. 'i' → logprob: -9.509106636047363
    5. '#' → logprob: -11.259106636047363
    6. 'fo' → logprob: -11.509106636047363
    7. '
' → logprob: -12.759106636047363
    8. 'range' → logprob: -13.009106636047363
    9. '_' → logprob: -13.384106636047363
    10. 'r' → logprob: -13.509106636047363

Token 299: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0005701907211914659
    2. '#' → logprob: -8.250570297241211
    3. 'izer' → logprob: -9.125570297241211
    4. 'ser' → logprob: -9.500570297241211
    5. 'is' → logprob: -9.500570297241211
    6. 'er' → logprob: -11.500570297241211
    7. '```' → logprob: -11.625570297241211
    8. 'for' → logprob: -11.750570297241211
    9. 'i' → logprob: -12.375570297241211
    10. 'user' → logprob: -12.750570297241211

Token 300: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03046879917383194
    2. ' i' → logprob: -3.530468702316284
    3. '_' → logprob: -8.155468940734863
    4. 'f' → logprob: -8.655468940734863
    5. '_i' → logprob: -9.780468940734863
    6. 'n' → logprob: -10.155468940734863
    7. 'k' → logprob: -10.530468940734863
    8. 't' → logprob: -10.655468940734863
    9. '1' → logprob: -10.905468940734863
    10. ' f' → logprob: -11.405468940734863

Token 301: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23758170008659363
    2. 'variable' → logprob: -2.237581729888916
    3. '
' → logprob: -3.487581729888916
    4. 'bou' → logprob: -3.737581729888916
    5. 'i' → logprob: -4.237581729888916
    6. 'range' → logprob: -4.487581729888916
    7. 'l' → logprob: -4.987581729888916
    8. ' for' → logprob: -5.237581729888916
    9. 'b' → logprob: -6.112581729888916
    10. 'ligne' → logprob: -6.237581729888916

Token 302: ' z' (ID: 579)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22557570040225983
    2. ' i' → logprob: -1.6005756855010986
    3. 'k' → logprob: -9.72557544708252
    4. '	i' → logprob: -10.97557544708252
    5. 's' → logprob: -11.35057544708252
    6. 'x' → logprob: -11.72557544708252
    7. '_i' → logprob: -11.85057544708252
    8. ' ' → logprob: -12.10057544708252
    9. ' k' → logprob: -12.35057544708252
    10. ' ' → logprob: -12.35057544708252

Token 303: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3496299684047699
    2. '=' → logprob: -1.2246299982070923
    3. ' ' → logprob: -6.849629878997803
    4. ',' → logprob: -10.599630355834961
    5. '   ' → logprob: -10.724630355834961
    6. 'f' → logprob: -10.849630355834961
    7. '  ' → logprob: -10.974630355834961
    8. '	' → logprob: -11.224630355834961
    9. ' ' → logprob: -12.224630355834961
    10. 'z' → logprob: -12.349630355834961

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26570266485214233
    2. '0' → logprob: -1.515702724456787
    3. ' ' → logprob: -4.515702724456787
    4. 'A' → logprob: -6.390702724456787
    5. 'N' → logprob: -8.015702247619629
    6. 'f' → logprob: -8.265702247619629
    7. 'B' → logprob: -9.140702247619629
    8. ' A' → logprob: -9.265702247619629
    9. 'P' → logprob: -9.390702247619629
    10. '2' → logprob: -9.640702247619629

Token 305: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11753148585557938
    2. '0' → logprob: -2.2425315380096436
    3. 'N' → logprob: -6.2425312995910645
    4. 'A' → logprob: -6.8675312995910645
    5. 'f' → logprob: -7.1175312995910645
    6. 'B' → logprob: -7.6175312995910645
    7. 'P' → logprob: -8.617531776428223
    8. 'M' → logprob: -9.117531776428223
    9. '2' → logprob: -10.242531776428223
    10. '(N' → logprob: -11.367531776428223

Token 306: '.
' (ID: 558)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004242395516484976
    2. '
' → logprob: -7.875424385070801
    3. ' z' → logprob: -10.2504243850708
    4. '.' → logprob: -13.6254243850708
    5. '=z' → logprob: -13.6254243850708
    6. '0' → logprob: -13.7504243850708
    7. ' =' → logprob: -14.0004243850708
    8. '=' → logprob: -14.0004243850708
    9. ',z' → logprob: -14.0004243850708
    10. '.z' → logprob: -14.1254243850708

Token 307: '#' (ID: 2)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -3.4121114822482923e-06
    2. '
' → logprob: -12.875003814697266
    3. ' z' → logprob: -14.125003814697266
    4. '0' → logprob: -17.375003814697266
    5. '#' → logprob: -18.250003814697266
    6. ' 
' → logprob: -18.750003814697266
    7. '	z' → logprob: -19.500003814697266
    8. '```' → logprob: -19.500003814697266
    9. '
' → logprob: -19.875003814697266
    10. '

' → logprob: -20.125003814697266

Token 308: ' Cette' (ID: 27383)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0003519086167216301
    2. ' z' → logprob: -8.000351905822754
    3. '
' → logprob: -11.125351905822754
    4. '#' → logprob: -14.250351905822754
    5. ' 
' → logprob: -14.500351905822754
    6. '

' → logprob: -16.12535285949707
    7. 'for' → logprob: -16.12535285949707
    8. '	z' → logprob: -16.50035285949707
    9. ' ' → logprob: -16.50035285949707
    10. 'f' → logprob: -16.62535285949707

Token 309: ' variable' (ID: 11076)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.22152084112167358
    2. ' ' → logprob: -1.9715209007263184
    3. ' z' → logprob: -3.5965209007263184
    4. '
' → logprob: -4.721520900726318
    5. 'n' → logprob: -4.846520900726318
    6. ' 
' → logprob: -4.846520900726318
    7. '#' → logprob: -6.346520900726318
    8. '=' → logprob: -6.596520900726318
    9. '\n' → logprob: -7.471520900726318
    10. '_' → logprob: -7.596520900726318

Token 310: ' accum' (ID: 23148)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8170191645622253
    2. ' =' → logprob: -1.1920192241668701
    3. '<|end|>' → logprob: -1.6920192241668701
    4. '=' → logprob: -3.69201922416687
    5. 'z' → logprob: -3.69201922416687
    6. ' z' → logprob: -5.567018985748291
    7. '<|end|>' → logprob: -5.692018985748291
    8. 'n' → logprob: -5.817018985748291
    9. '
' → logprob: -5.942018985748291
    10. ' 
' → logprob: -6.442018985748291

Token 311: 'ul' (ID: 361)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.163747638463974
    2. 'um' → logprob: -2.788747549057007
    3. '=' → logprob: -3.288747549057007
    4. ' =' → logprob: -3.788747549057007
    5. 'umul' → logprob: -4.038747787475586
    6. 'umulate' → logprob: -5.288747787475586
    7. 'ule' → logprob: -6.038747787475586
    8. 'uler' → logprob: -7.288747787475586
    9. 'ul' → logprob: -7.288747787475586
    10. ' u' → logprob: -7.413747787475586

Token 312: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.40208709239959717
    2. 'ate' → logprob: -1.7770870923995972
    3. 'er' → logprob: -2.7770872116088867
    4. 'a' → logprob: -3.4020872116088867
    5. 'é' → logprob: -3.6520872116088867
    6. 'ateur' → logprob: -4.527087211608887
    7. 'es' → logprob: -4.777087211608887
    8. 'ated' → logprob: -5.027087211608887
    9. '=' → logprob: -5.902087211608887
    10. 'z' → logprob: -5.902087211608887

Token 313: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45141804218292236
    2. ' ' → logprob: -1.4514180421829224
    3. 'z' → logprob: -2.951417922973633
    4. ' z' → logprob: -3.326417922973633
    5. '0' → logprob: -4.326417922973633
    6. 'f' → logprob: -4.576417922973633
    7. ' f' → logprob: -5.451417922973633
    8. '
' → logprob: -6.701417922973633
    9. ' une' → logprob: -6.701417922973633
    10. ')' → logprob: -6.701417922973633

Token 314: ' résultat' (ID: 62556)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6766070127487183
    2. 'z' → logprob: -1.1766070127487183
    3. ' ' → logprob: -3.176607131958008
    4. '0' → logprob: -3.176607131958008
    5. 's' → logprob: -3.551607131958008
    6. 'f' → logprob: -4.176607131958008
    7. '+' → logprob: -4.551607131958008
    8. ' z' → logprob: -4.801607131958008
    9. 'i' → logprob: -5.426607131958008
    10. '#' → logprob: -5.801607131958008

Token 315: ' final' (ID: 1721)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08023104816675186
    2. '<|end|>' → logprob: -3.205230951309204
    3. ' 
' → logprob: -4.705231189727783
    4. '=' → logprob: -4.955231189727783
    5. '
' → logprob: -5.080231189727783
    6. ' =' → logprob: -5.705231189727783
    7. ',' → logprob: -6.205231189727783
    8. '#' → logprob: -6.205231189727783
    9. 'z' → logprob: -6.705231189727783
    10. '+' → logprob: -6.705231189727783

Token 316: ' du' (ID: 1462)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44403761625289917
    2. 'z' → logprob: -1.069037675857544
    3. '.' → logprob: -5.319037437438965
    4. ' ' → logprob: -6.069037437438965
    5. ' z' → logprob: -6.569037437438965
    6. '<|end|>' → logprob: -6.569037437438965
    7. ',' → logprob: -6.819037437438965
    8. ' 
' → logprob: -6.819037437438965
    9. '=' → logprob: -7.319037437438965
    10. ',
' → logprob: -7.569037437438965

Token 317: ' calcul' (ID: 7559)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.22373896837234497
    2. 's' → logprob: -2.4737389087677
    3. 'calcul' → logprob: -3.7237389087677
    4. 'nombre' → logprob: -3.9737389087677
    5. 'som' → logprob: -4.348739147186279
    6. 'B' → logprob: -5.223739147186279
    7. '#' → logprob: -5.348739147186279
    8. 'comp' → logprob: -5.348739147186279
    9. 'comb' → logprob: -5.473739147186279
    10. 'rés' → logprob: -5.598739147186279

Token 318: ' de' (ID: 334)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.07065258920192719
    2. '
' → logprob: -2.820652484893799
    3. ' z' → logprob: -5.445652484893799
    4. ' ' → logprob: -6.570652484893799
    5. '=' → logprob: -6.820652484893799
    6. ' =' → logprob: -7.570652484893799
    7. ' 
' → logprob: -7.820652484893799
    8. '<|end|>' → logprob: -8.070652961730957
    9. ',' → logprob: -9.320652961730957
    10. '.' → logprob: -9.445652961730957

Token 319: ' la' (ID: 557)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.18892450630664825
    2. ' z' → logprob: -3.563924551010132
    3. 'B' → logprob: -3.938924551010132
    4. '(s' → logprob: -4.188924312591553
    5. '(A' → logprob: -4.438924312591553
    6. 's' → logprob: -4.563924312591553
    7. '(B' → logprob: -4.563924312591553
    8. 'la' → logprob: -4.688924312591553
    9. 'A' → logprob: -4.688924312591553
    10. ' (' → logprob: -4.938924312591553

Token 320: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2953113615512848
    2. 'b' → logprob: -2.920311450958252
    3. ' somme' → logprob: -2.920311450958252
    4. 'som' → logprob: -3.545311450958252
    5. 'comb' → logprob: -3.545311450958252
    6. 'sum' → logprob: -3.795311450958252
    7. 'z' → logprob: -4.170311450958252
    8. 'result' → logprob: -5.170311450958252
    9. 'answer' → logprob: -5.420311450958252
    10. 'for' → logprob: -5.420311450958252

Token 321: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1930602788925171
    2. 'z' → logprob: -2.1930603981018066
    3. '.' → logprob: -4.443060398101807
    4. '=' → logprob: -4.443060398101807
    5. ' =' → logprob: -4.693060398101807
    6. ' 
' → logprob: -4.693060398101807
    7. ' z' → logprob: -5.318060398101807
    8. ',' → logprob: -5.568060398101807
    9. '<|end|>' → logprob: -5.568060398101807
    10. '_' → logprob: -6.068060398101807

Token 322: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.125001907348633
    3. '```' → logprob: -16.000001907348633
    4. ' z' → logprob: -16.375001907348633
    5. '0' → logprob: -16.625001907348633
    6. '  
' → logprob: -18.125001907348633
    7. ' 
' → logprob: -18.250001907348633
    8. '
' → logprob: -19.000001907348633
    9. '

' → logprob: -19.000001907348633
    10. '	z' → logprob: -19.500001907348633

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759840607643127
    2. '=' → logprob: -0.8259840607643127
    3. ' ' → logprob: -10.075984001159668
    4. ' =
' → logprob: -14.075984001159668
    5. ' +=' → logprob: -14.700984001159668
    6. ' ' → logprob: -14.950984001159668
    7. ',' → logprob: -14.950984001159668
    8. ')' → logprob: -15.950984001159668
    9. '=

' → logprob: -16.325984954833984
    10. '=
' → logprob: -16.450984954833984

Token 324: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.375553131103516
    4. ' ' → logprob: -18.000553131103516
    5. '۰' → logprob: -18.188053131103516
    6. '  ' → logprob: -19.188053131103516
    7. '```' → logprob: -19.250553131103516
    8. '
' → logprob: -19.500553131103516
    9. '00' → logprob: -20.000553131103516
    10. '０' → logprob: -20.188053131103516

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -18.7500057220459
    4. '   ' → logprob: -19.6250057220459
    5. '۰' → logprob: -20.3750057220459
    6. '00' → logprob: -20.5000057220459
    7. ' ' → logprob: -20.7500057220459
    8. '000' → logprob: -21.0625057220459
    9. '```' → logprob: -21.6875057220459
    10. '０' → logprob: -21.6875057220459

Token 326: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4033309519290924
    2. '
' → logprob: -1.15333092212677
    3. ' for' → logprob: -4.2783308029174805
    4. ' 
' → logprob: -7.2783308029174805
    5. '
' → logprob: -7.6533308029174805
    6. '\n' → logprob: -7.9033308029174805
    7. 'f' → logprob: -8.27833080291748
    8. '

' → logprob: -8.40333080291748
    9. '#' → logprob: -8.77833080291748
    10. '' → logprob: -8.90333080291748

Token 327: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28987252712249756
    2. '
' → logprob: -1.4148725271224976
    3. 'f' → logprob: -5.414872646331787
    4. ' for' → logprob: -6.039872646331787
    5. ' 
' → logprob: -6.914872646331787
    6. '
' → logprob: -8.539872169494629
    7. '' → logprob: -8.664872169494629
    8. 'i' → logprob: -8.914872169494629
    9. '#' → logprob: -8.914872169494629
    10. '\n' → logprob: -9.539872169494629

Token 328: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.961759259458631e-06
    2. '#' → logprob: -13.000004768371582
    3. ' for' → logprob: -13.875004768371582
    4. 'f' → logprob: -13.875004768371582
    5. 'i' → logprob: -14.750004768371582
    6. 'fo' → logprob: -15.875004768371582
    7. '```' → logprob: -16.1250057220459
    8. 'pour' → logprob: -17.2500057220459
    9. '
' → logprob: -17.3750057220459
    10. 'from' → logprob: -17.8750057220459

Token 329: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.23898158967494965
    2. 'for' → logprob: -1.7389816045761108
    3. 'fin' → logprob: -3.4889814853668213
    4. '#' → logprob: -5.1139817237854
    5. 'fi' → logprob: -8.988981246948242
    6. 'forcer' → logprob: -9.363981246948242
    7. ' for' → logprob: -10.363981246948242
    8. 'fn' → logprob: -11.113981246948242
    9. 'but' → logprob: -11.488981246948242
    10. 'fen' → logprob: -11.863981246948242

Token 330: 'ir' (ID: 380)
  Prédit: 'inir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inir' → logprob: -0.17635664343833923
    2. 'f' → logprob: -1.9263566732406616
    3. 'ir' → logprob: -4.676356792449951
    4. 'nir' → logprob: -5.676356792449951
    5. 'for' → logprob: -6.676356792449951
    6. '#' → logprob: -7.301356792449951
    7. 'fin' → logprob: -7.676356792449951
    8. 'r' → logprob: -9.051356315612793
    9. ' f' → logprob: -9.426356315612793
    10. 'fir' → logprob: -9.426356315612793

Token 331: ' R' (ID: 460)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06750078499317169
    2. ' une' → logprob: -3.8175008296966553
    3. ' i' → logprob: -4.567500591278076
    4. 'for' → logprob: -4.817500591278076
    5. ' for' → logprob: -5.317500591278076
    6. 'i' → logprob: -5.442500591278076
    7. ' def' → logprob: -5.442500591278076
    8. ' un' → logprob: -5.817500591278076
    9. 'une' → logprob: -6.192500591278076
    10. ' a' → logprob: -6.192500591278076

Token 332: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11509129405021667
    2. '=' → logprob: -2.240091323852539
    3. ' ' → logprob: -6.740091323852539
    4. ',' → logprob: -7.490091323852539
    5. '_' → logprob: -8.490091323852539
    6. 'ange' → logprob: -8.990091323852539
    7. ' ' → logprob: -10.365091323852539
    8. 'e' → logprob: -10.865091323852539
    9. ' ,' → logprob: -11.115091323852539
    10. ' =
' → logprob: -11.115091323852539

Token 333: ' un' (ID: 537)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.5127214193344116
    2. 'A' → logprob: -1.7627214193344116
    3. 'range' → logprob: -1.7627214193344116
    4. 'B' → logprob: -1.8877214193344116
    5. '1' → logprob: -2.012721538543701
    6. 'P' → logprob: -3.137721538543701
    7. '0' → logprob: -3.637721538543701
    8. '[N' → logprob: -4.387721538543701
    9. '[' → logprob: -4.762721538543701
    10. '[]' → logprob: -5.137721538543701

Token 334: ' alias' (ID: 26026)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8319132924079895
    2. ' range' → logprob: -1.4569132328033447
    3. '=' → logprob: -1.9569132328033447
    4. 'for' → logprob: -2.7069132328033447
    5. ' for' → logprob: -2.9569132328033447
    6. 'e' → logprob: -4.206913471221924
    7. 'r' → logprob: -4.581913471221924
    8. ' =' → logprob: -4.706913471221924
    9. 'int' → logprob: -5.331913471221924
    10. 'rang' → logprob: -5.894413471221924

Token 335: ' local' (ID: 2698)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4373044967651367
    2. ' =' → logprob: -1.0623044967651367
    3. ' de' → logprob: -5.937304496765137
    4. ' pour' → logprob: -6.562304496765137
    5. 'R' → logprob: -6.687304496765137
    6. ' R' → logprob: -7.187304496765137
    7. 'de' → logprob: -7.312304496765137
    8. 'pour' → logprob: -7.312304496765137
    9. 'for' → logprob: -7.687304496765137
    10. ' for' → logprob: -8.437304496765137

Token 336: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.565696358680725
    2. ' =' → logprob: -1.565696358680725
    3. '_' → logprob: -2.1906962394714355
    4. 'R' → logprob: -2.3156962394714355
    5. ' de' → logprob: -2.4406962394714355
    6. '=' → logprob: -2.8156962394714355
    7. ' for' → logprob: -3.1906962394714355
    8. 'r' → logprob: -3.3156962394714355
    9. ' R' → logprob: -3.3156962394714355
    10. 'for' → logprob: -3.3156962394714355

Token 337: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004116076452191919
    2. ' range' → logprob: -8.250411987304688
    3. 'min' → logprob: -9.750411987304688
    4. 'pow' → logprob: -10.250411987304688
    5. 'F' → logprob: -10.375411987304688
    6. '```' → logprob: -12.000411987304688
    7. 'rang' → logprob: -12.625411987304688
    8. '(range' → logprob: -12.875411987304688
    9. 'f' → logprob: -13.125411987304688
    10. 'max' → logprob: -13.500411987304688

Token 338: ' fonction' (ID: 17610)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.9504606825648807e-05
    2. ' range' → logprob: -12.000019073486328
    3. 'rang' → logprob: -12.750019073486328
    4. 'ange' → logprob: -12.875019073486328
    5. 'min' → logprob: -13.000019073486328
    6. 'pow' → logprob: -13.875019073486328
    7. '
' → logprob: -14.125019073486328
    8. 'x' → logprob: -14.625019073486328
    9. '```' → logprob: -14.625019073486328
    10. 'r' → logprob: -14.625019073486328

Token 339: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03808509185910225
    2. 'pow' → logprob: -3.2880849838256836
    3. ' range' → logprob: -10.413084983825684
    4. 'min' → logprob: -13.038084983825684
    5. '```' → logprob: -13.288084983825684
    6. 'r' → logprob: -13.538084983825684
    7. ' ' → logprob: -13.663084983825684
    8. 'print' → logprob: -13.663084983825684
    9. '
' → logprob: -13.788084983825684
    10. ' pow' → logprob: -14.038084983825684

Token 340: '().
' (ID: 58434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5684472322463989
    2. '=' → logprob: -0.9434472322463989
    3. '(' → logprob: -3.9434471130371094
    4. '(range' → logprob: -4.068447113037109
    5. 'range' → logprob: -5.068447113037109
    6. '(
' → logprob: -7.443447113037109
    7. '_range' → logprob: -8.56844711303711
    8. ' ' → logprob: -9.06844711303711
    9. ' =
' → logprob: -9.44344711303711
    10. ' range' → logprob: -9.44344711303711

Token 341: '#' (ID: 2)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0012618985492736101
    2. ' R' → logprob: -6.7512617111206055
    3. 'r' → logprob: -9.626261711120605
    4. 'range' → logprob: -11.251261711120605
    5. ' =' → logprob: -11.501261711120605
    6. ' 
' → logprob: -14.126261711120605
    7. '=' → logprob: -14.376261711120605
    8. ' range' → logprob: -14.501261711120605
    9. '
' → logprob: -15.126261711120605
    10. '(
' → logprob: -15.876261711120605

Token 342: ' Cela' (ID: 44403)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.081584716506768e-05
    2. ' R' → logprob: -11.000020980834961
    3. 'r' → logprob: -12.625020980834961
    4. 'range' → logprob: -14.375020980834961
    5. '
' → logprob: -16.87502098083496
    6. '#' → logprob: -17.37502098083496
    7. 'Range' → logprob: -18.87502098083496
    8. ' range' → logprob: -20.00002098083496
    9. ' 
' → logprob: -20.62502098083496
    10. '  
' → logprob: -21.00002098083496

Token 343: ' permet' (ID: 11798)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49429765343666077
    2. ' permet' → logprob: -1.6192976236343384
    3. ' permettra' → logprob: -2.244297742843628
    4. '=' → logprob: -2.744297742843628
    5. ' facilite' → logprob: -5.244297504425049
    6. ' facilit' → logprob: -5.369297504425049
    7. ' range' → logprob: -6.119297504425049
    8. ' va' → logprob: -6.369297504425049
    9. ' ' → logprob: -6.869297504425049
    10. ' rend' → logprob: -6.994297504425049

Token 344: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7910764813423157
    2. ' de' → logprob: -1.416076421737671
    3. ' range' → logprob: -2.541076421737671
    4. 'range' → logprob: -2.541076421737671
    5. ' R' → logprob: -2.666076421737671
    6. 'R' → logprob: -3.666076421737671
    7. 'd' → logprob: -3.666076421737671
    8. 'r' → logprob: -4.41607666015625
    9. 'de' → logprob: -5.29107666015625
    10. ' ' → logprob: -5.91607666015625

Token 345: ''é' (ID: 12728)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.126669779419899
    2. 'range' → logprob: -2.8766698837280273
    3. ' range' → logprob: -3.6266698837280273
    4. 'ang' → logprob: -4.376669883728027
    5. 'r' → logprob: -4.626669883728027
    6. 'anger' → logprob: -6.376669883728027
    7. 'é' → logprob: -6.751669883728027
    8. 'e' → logprob: -6.751669883728027
    9. ' éviter' → logprob: -6.751669883728027
    10. 'avoir' → logprob: -7.251669883728027

Token 346: 'crire' (ID: 62436)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10983766615390778
    2. 'conom' → logprob: -2.484837770462036
    3. 'crire' → logprob: -5.109837532043457
    4. 'm' → logprob: -5.484837532043457
    5. 'valuer' → logprob: -5.484837532043457
    6. '#' → logprob: -6.609837532043457
    7. 'nable' → logprob: -7.359837532043457
    8. 'num' → logprob: -7.484837532043457
    9. '```' → logprob: -7.484837532043457
    10. 'x' → logprob: -7.609837532043457

Token 347: ' R' (ID: 460)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3617377281188965
    2. ' range' → logprob: -1.2367377281188965
    3. 'R' → logprob: -4.4867377281188965
    4. ' R' → logprob: -6.4867377281188965
    5. 'r' → logprob: -8.111738204956055
    6. '(range' → logprob: -10.111738204956055
    7. '	range' → logprob: -10.361738204956055
    8. 'rang' → logprob: -11.111738204956055
    9. ' xrange' → logprob: -11.861738204956055
    10. 'x' → logprob: -11.861738204956055

Token 348: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05924998223781586
    2. ' =' → logprob: -3.3092498779296875
    3. '(range' → logprob: -4.9342498779296875
    4. '=' → logprob: -5.0592498779296875
    5. '(
' → logprob: -5.8092498779296875
    6. '<|end|>' → logprob: -6.3092498779296875
    7. 'range' → logprob: -7.0592498779296875
    8. ' (' → logprob: -7.4342498779296875
    9. ' ' → logprob: -7.5592498779296875
    10. ')' → logprob: -9.434249877929688

Token 349: ' au' (ID: 2791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9025412201881409
    2. ' =' → logprob: -1.027541160583496
    3. '=' → logprob: -1.527541160583496
    4. '(
' → logprob: -4.402541160583496
    5. '<|end|>' → logprob: -5.402541160583496
    6. ')' → logprob: -7.027541160583496
    7. ',' → logprob: -8.027541160583496
    8. '(range' → logprob: -8.277541160583496
    9. ' ' → logprob: -8.527541160583496
    10. ' (' → logprob: -8.777541160583496

Token 350: ' lieu' (ID: 23979)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.44460755586624146
    2. 'place' → logprob: -1.0696074962615967
    3. ' place' → logprob: -5.069607734680176
    4. ' la' → logprob: -5.444607734680176
    5. ' lieu' → logprob: -6.194607734680176
    6. '```' → logprob: -6.694607734680176
    7. 'lie' → logprob: -6.819607734680176
    8. 'l' → logprob: -8.569607734680176
    9. 'plac' → logprob: -8.819607734680176
    10. 'places' → logprob: -9.194607734680176

Token 351: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8002532720565796
    2. ' range' → logprob: -0.9252532720565796
    3. 'range' → logprob: -1.9252532720565796
    4. 'de' → logprob: -5.050253391265869
    5. '(range' → logprob: -6.675253391265869
    6. ' d' → logprob: -7.550253391265869
    7. 'd' → logprob: -9.175252914428711
    8. '	range' → logprob: -10.050252914428711
    9. '_range' → logprob: -10.175252914428711
    10. '#' → logprob: -10.800252914428711

Token 352: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196891888976097
    2. ' range' → logprob: -2.8119688034057617
    3. '	range' → logprob: -14.186968803405762
    4. '(range' → logprob: -15.811968803405762
    5. 'rang' → logprob: -16.061969757080078
    6. ' ' → logprob: -16.311969757080078
    7. 'r' → logprob: -16.561969757080078
    8. '`' → logprob: -16.561969757080078
    9. ' ' → logprob: -16.936969757080078
    10. '```' → logprob: -17.436969757080078

Token 353: '(...' (ID: 45935)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06797468662261963
    2. ' (' → logprob: -3.19297456741333
    3. '(
' → logprob: -4.81797456741333
    4. '<|end|>' → logprob: -4.81797456741333
    5. ')' → logprob: -5.56797456741333
    6. '()' → logprob: -6.31797456741333
    7. ' ' → logprob: -7.06797456741333
    8. ' (
' → logprob: -7.31797456741333
    9. ' )' → logprob: -8.192975044250488
    10. ',' → logprob: -8.817975044250488

Token 354: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033403540146537125
    2. ' )' → logprob: -9.125333786010742
    3. '()' → logprob: -9.375333786010742
    4. '())' → logprob: -9.875333786010742
    5. ').' → logprob: -9.875333786010742
    6. ')
' → logprob: -11.125333786010742
    7. '(' → logprob: -11.750333786010742
    8. ')`' → logprob: -13.000333786010742
    9. '),' → logprob: -13.125333786010742
    10. '))' → logprob: -13.125333786010742

Token 355: ' ce' (ID: 2357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3272988200187683
    2. ' 
' → logprob: -2.327298879623413
    3. ' )' → logprob: -3.327298879623413
    4. ' which' → logprob: -3.452298879623413
    5. '  
' → logprob: -3.702298879623413
    6. '<|end|>' → logprob: -3.702298879623413
    7. '
' → logprob: -4.202298641204834
    8. ' ' → logprob: -4.327298641204834
    9. 'space' → logprob: -5.577298641204834
    10. ' R' → logprob: -6.202298641204834

Token 356: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.466372013092041
    2. 'st' → logprob: -1.466372013092041
    3. ' =' → logprob: -1.841372013092041
    4. '#' → logprob: -2.591372013092041
    5. 'est' → logprob: -2.841372013092041
    6. ' ' → logprob: -3.466372013092041
    7. ' sera' → logprob: -3.966372013092041
    8. 'n' → logprob: -4.216372013092041
    9. ' permet' → logprob: -4.216372013092041
    10. ' qui' → logprob: -4.216372013092041

Token 357: ' aide' (ID: 49018)
  Prédit: ' facilite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' facilite' → logprob: -0.296362042427063
    2. ' rend' → logprob: -1.921362042427063
    3. ' est' → logprob: -2.7963619232177734
    4. ' permet' → logprob: -4.046361923217773
    5. 'r' → logprob: -4.796361923217773
    6. 'rend' → logprob: -5.421361923217773
    7. 'est' → logprob: -5.546361923217773
    8. 'fac' → logprob: -6.046361923217773
    9. 'simpl' → logprob: -6.171361923217773
    10. ' améli' → logprob: -6.421361923217773

Token 358: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5301130414009094
    2. 'à' → logprob: -0.9051130414009094
    3. 'a' → logprob: -5.655113220214844
    4. ' ' → logprob: -7.030113220214844
    5. ' a' → logprob: -7.155113220214844
    6. ' R' → logprob: -7.530113220214844
    7. 'au' → logprob: -8.155113220214844
    8. 'R' → logprob: -8.530113220214844
    9. ''à' → logprob: -9.280113220214844
    10. ' ' → logprob: -9.405113220214844

Token 359: ' racc' (ID: 146476)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.678783118724823
    2. 'g' → logprob: -1.3037831783294678
    3. ' gagner' → logprob: -2.8037831783294678
    4. ' rendre' → logprob: -2.9287831783294678
    5. 'optim' → logprob: -3.1787831783294678
    6. ' économ' → logprob: -4.428782939910889
    7. ' réduire' → logprob: -4.553782939910889
    8. ' racc' → logprob: -4.553782939910889
    9. 'é' → logprob: -4.803782939910889
    10. 'ré' → logprob: -4.803782939910889

Token 360: 'our' (ID: 401)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5430161952972412
    2. 'ange' → logprob: -2.418016195297241
    3. 'é' → logprob: -2.543016195297241
    4. 'a' → logprob: -2.668016195297241
    5. 'acc' → logprob: -3.293016195297241
    6. 'ap' → logprob: -3.793016195297241
    7. 'ang' → logprob: -3.918016195297241
    8. 'court' → logprob: -4.29301643371582
    9. 'cour' → logprob: -4.54301643371582
    10. 'anger' → logprob: -4.54301643371582

Token 361: 'cir' (ID: 31224)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2829115390777588
    2. 'up' → logprob: -1.7829115390777588
    3. 'f' → logprob: -2.157911539077759
    4. 'rt' → logprob: -2.407911539077759
    5. 'r' → logprob: -2.657911539077759
    6. 'd' → logprob: -3.407911539077759
    7. 'pt' → logprob: -3.407911539077759
    8. 'c' → logprob: -3.407911539077759
    9. 'u' → logprob: -3.532911539077759
    10. 'ff' → logprob: -4.15791130065918

Token 362: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.402791291475296
    2. 'range' → logprob: -2.1527912616729736
    3. '(range' → logprob: -2.9027912616729736
    4. 'R' → logprob: -3.2777912616729736
    5. '(R' → logprob: -3.2777912616729736
    6. '(
' → logprob: -3.6527912616729736
    7. ' R' → logprob: -3.7777912616729736
    8. '<|end|>' → logprob: -4.277791500091553
    9. ' (' → logprob: -4.902791500091553
    10. ' range' → logprob: -5.277791500091553

Token 363: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.09788016229867935
    2. 'code' → logprob: -2.8478801250457764
    3. ' R' → logprob: -4.0978803634643555
    4. ' range' → logprob: -5.3478803634643555
    5. 'range' → logprob: -5.7228803634643555
    6. 'R' → logprob: -5.9728803634643555
    7. ' 
' → logprob: -6.3478803634643555
    8. ')' → logprob: -6.5978803634643555
    9. ' ' → logprob: -6.7228803634643555
    10. ' )' → logprob: -6.9728803634643555

Token 364: '.
' (ID: 558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.20848555862903595
    2. '
' → logprob: -1.9584856033325195
    3. '(
' → logprob: -4.0834856033325195
    4. '(R' → logprob: -5.0834856033325195
    5. ' =' → logprob: -5.2084856033325195
    6. 'r' → logprob: -5.3334856033325195
    7. '=' → logprob: -5.7084856033325195
    8. '(range' → logprob: -5.9584856033325195
    9. 'range' → logprob: -5.9584856033325195
    10. ')' → logprob: -6.4584856033325195

Token 365: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -3.128163257315464e-07
    2. ' R' → logprob: -15.125
    3. '
' → logprob: -20.875
    4. '```' → logprob: -21.375
    5. '#' → logprob: -22.125
    6. '	R' → logprob: -22.375
    7. '_R' → logprob: -22.875
    8. 'r' → logprob: -23.0
    9. '  
' → logprob: -23.25
    10. '(R' → logprob: -23.875

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132631778717041
    2. ' =' → logprob: -1.313263177871704
    3. '=

' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.313262939453125
    5. '=
' → logprob: -15.438262939453125
    6. ',' → logprob: -15.688262939453125
    7. ' =
' → logprob: -15.938262939453125
    8. '＝' → logprob: -16.063262939453125
    9. '=r' → logprob: -16.813262939453125
    10. '=}' → logprob: -17.563262939453125

Token 367: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '	range' → logprob: -17.125335693359375
    4. '(range' → logprob: -19.000335693359375
    5. 'rang' → logprob: -19.875335693359375
    6. 'r' → logprob: -21.000335693359375
    7. '   ' → logprob: -21.375335693359375
    8. ' ' → logprob: -21.500335693359375
    9. 'rage' → logprob: -21.750335693359375
    10. 'rank' → logprob: -22.000335693359375

Token 368: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15015625953674316
    2. '(P' → logprob: -2.025156259536743
    3. '(
' → logprob: -5.025156021118164
    4. '<|end|>' → logprob: -7.900156021118164
    5. '(

' → logprob: -8.900156021118164
    6. ')' → logprob: -9.150156021118164
    7. '(N' → logprob: -9.150156021118164
    8. '()' → logprob: -9.400156021118164
    9. '#' → logprob: -11.525156021118164
    10. '(R' → logprob: -11.650156021118164

Token 369: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034512223210185766
    2. ' for' → logprob: -6.378451347351074
    3. '#' → logprob: -7.253451347351074
    4. '(' → logprob: -7.878451347351074
    5. 'i' → logprob: -8.128451347351074
    6. '0' → logprob: -9.128451347351074
    7. 'f' → logprob: -9.628451347351074
    8. 'R' → logprob: -10.128451347351074
    9. '(
' → logprob: -10.128451347351074
    10. ')' → logprob: -10.253451347351074

Token 370: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015192650025710464
    2. 'f' → logprob: -7.626519203186035
    3. ' for' → logprob: -7.751519203186035
    4. 'R' → logprob: -8.501519203186035
    5. '_' → logprob: -8.626519203186035
    6. 'i' → logprob: -8.876519203186035
    7. '
' → logprob: -10.376519203186035
    8. 'F' → logprob: -11.626519203186035
    9. 'r' → logprob: -11.876519203186035
    10. '_
' → logprob: -12.251519203186035

Token 371: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.14304634928703308
    2. '#' → logprob: -2.2680463790893555
    3. 'if' → logprob: -4.5180463790893555
    4. 'er' → logprob: -5.0180463790893555
    5. 'batim' → logprob: -5.7680463790893555
    6. 'ifiez' → logprob: -6.0180463790893555
    7. 'ification' → logprob: -6.8930463790893555
    8. 'f' → logprob: -6.8930463790893555
    9. 'ifi' → logprob: -7.3930463790893555
    10. 'ified' → logprob: -7.8930463790893555

Token 372: ' si' (ID: 1784)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.816071093082428
    2. ' N' → logprob: -1.5660710334777832
    3. ' (' → logprob: -1.8160710334777832
    4. '(N' → logprob: -2.816071033477783
    5. ' ' → logprob: -3.441071033477783
    6. 'N' → logprob: -3.816071033477783
    7. '(
' → logprob: -3.941071033477783
    8. ' P' → logprob: -4.566071033477783
    9. '(P' → logprob: -4.941071033477783
    10. ' A' → logprob: -4.941071033477783

Token 373: ' B' (ID: 418)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.49871328473091125
    2. 'N' → logprob: -1.1237132549285889
    3. ' A' → logprob: -2.998713254928589
    4. 'A' → logprob: -4.248713493347168
    5. ' ' → logprob: -6.748713493347168
    6. ' B' → logprob: -6.748713493347168
    7. 'B' → logprob: -7.373713493347168
    8. ' P' → logprob: -8.623713493347168
    9. ' ' → logprob: -8.873713493347168
    10. 'P' → logprob: -9.248713493347168

Token 374: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5250293016433716
    2. '<=' → logprob: -1.7750293016433716
    3. ' >' → logprob: -2.525029182434082
    4. ' <' → logprob: -3.025029182434082
    5. ' >=' → logprob: -3.150029182434082
    6. '<' → logprob: -3.650029182434082
    7. '>' → logprob: -3.775029182434082
    8. '>=' → logprob: -4.275029182434082
    9. ' ' → logprob: -5.525029182434082
    10. '[' → logprob: -8.775029182434082

Token 375: ' égal' (ID: 15059)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6038411855697632
    2. ' <' → logprob: -1.7288411855697632
    3. ' <=' → logprob: -2.1038413047790527
    4. '<' → logprob: -3.1038413047790527
    5. ' >' → logprob: -3.2288413047790527
    6. '>=' → logprob: -3.2288413047790527
    7. '<=' → logprob: -4.228841304779053
    8. '>' → logprob: -4.853841304779053
    9. ' ' → logprob: -4.978841304779053
    10. ' B' → logprob: -9.603840827941895

Token 376: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2143673300743103
    2. '0' → logprob: -2.839367389678955
    3. ' B' → logprob: -3.089367389678955
    4. 'B' → logprob: -3.339367389678955
    5. '=' → logprob: -3.839367389678955
    6. 'A' → logprob: -4.714367389678955
    7. ' A' → logprob: -5.089367389678955
    8. '(' → logprob: -5.839367389678955
    9. ' =' → logprob: -5.839367389678955
    10. '  ' → logprob: -6.214367389678955

Token 377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04314648360013962
    2. 'A' → logprob: -3.6681463718414307
    3. ' ' → logprob: -4.16814661026001
    4. ' A' → logprob: -7.54314661026001
    5. '1' → logprob: -7.66814661026001
    6. 'B' → logprob: -8.793146133422852
    7. '100' → logprob: -11.793146133422852
    8. '-' → logprob: -12.043146133422852
    9. 'N' → logprob: -12.043146133422852
    10. '2' → logprob: -12.168146133422852

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00277979695238173
    2. 'A' → logprob: -6.627779960632324
    3. ' ' → logprob: -6.627779960632324
    4. '1' → logprob: -9.752779960632324
    5. 'B' → logprob: -10.252779960632324
    6. 'N' → logprob: -10.877779960632324
    7. ' A' → logprob: -11.502779960632324
    8. '-' → logprob: -13.877779960632324
    9. ''A' → logprob: -13.877779960632324
    10. '2' → logprob: -14.002779960632324

Token 379: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46770182251930237
    2. ':' → logprob: -1.21770179271698
    3. ' if' → logprob: -3.0927019119262695
    4. ':
' → logprob: -3.8427019119262695
    5. '
' → logprob: -4.8427019119262695
    6. '.' → logprob: -7.4677019119262695
    7. ';if' → logprob: -8.09270191192627
    8. ' 
' → logprob: -8.46770191192627
    9. ' :
' → logprob: -8.59270191192627
    10. '```' → logprob: -8.59270191192627

Token 380: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019548481330275536
    2. ':' → logprob: -4.644548416137695
    3. ' if' → logprob: -4.894548416137695
    4. '
' → logprob: -6.769548416137695
    5. ':
' → logprob: -7.144548416137695
    6. '```' → logprob: -9.394548416137695
    7. 'i' → logprob: -9.894548416137695
    8. '\n' → logprob: -10.144548416137695
    9. ' 
' → logprob: -10.269548416137695
    10. 'If' → logprob: -10.394548416137695

Token 381: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07890862971544266
    2. 'B' → logprob: -2.578908681869507
    3. ' ' → logprob: -11.078908920288086
    4. ' A' → logprob: -13.578908920288086
    5. ' ' → logprob: -14.578908920288086
    6. '	B' → logprob: -14.703908920288086
    7. '(B' → logprob: -14.828908920288086
    8. 'A' → logprob: -14.953908920288086
    9. ' (' → logprob: -15.328908920288086
    10. '_B' → logprob: -16.578908920288086

Token 382: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08917948603630066
    2. '==' → logprob: -2.464179515838623
    3. ':' → logprob: -9.089179039001465
    4. '>' → logprob: -10.339179039001465
    5. ' !=' → logprob: -10.589179039001465
    6. '=' → logprob: -10.839179039001465
    7. ' >' → logprob: -11.339179039001465
    8. ' ' → logprob: -11.464179039001465
    9. ' =' → logprob: -11.839179039001465
    10. ' :' → logprob: -11.964179039001465

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002068892121315
    2. ' ' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.975207328796387
    4. '1' → logprob: -16.60020637512207
    5. '=' → logprob: -17.35020637512207
    6. '  ' → logprob: -17.60020637512207
    7. '   ' → logprob: -18.85020637512207
    8. '
' → logprob: -18.97520637512207
    9. ' 
' → logprob: -19.16270637512207
    10. '۰' → logprob: -19.35020637512207

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. ':' → logprob: -19.25037956237793
    4. ' ' → logprob: -19.50037956237793
    5. '=' → logprob: -19.87537956237793
    6. '  ' → logprob: -19.87537956237793
    7. '1' → logprob: -20.12537956237793
    8. '   ' → logprob: -20.25037956237793
    9. '۰' → logprob: -20.75037956237793
    10. ' ' → logprob: -21.12537956237793

Token 385: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007226797170005739
    2. ':
' → logprob: -7.625722885131836
    3. ' :' → logprob: -8.375722885131836
    4. ' or' → logprob: -13.125722885131836
    5. ':
' → logprob: -14.875722885131836
    6. ' :
' → logprob: -15.000722885131836
    7. ' and' → logprob: -15.125722885131836
    8. ':return' → logprob: -15.125722885131836
    9. ':

' → logprob: -15.250722885131836
    10. '.' → logprob: -15.875722885131836

Token 386: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10194463282823563
    2. ':
' → logprob: -2.8519446849823
    3. '   ' → logprob: -3.3519446849823
    4. ' :' → logprob: -6.226944446563721
    5. 'print' → logprob: -7.101944446563721
    6. ' print' → logprob: -7.601944446563721
    7. ' :
' → logprob: -7.726944446563721
    8. ' ' → logprob: -9.226944923400879
    9. '
' → logprob: -9.601944923400879
    10. '.' → logprob: -9.851944923400879

Token 387: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8688174486160278
    2. 'print' → logprob: -1.1188174486160278
    3. ' z' → logprob: -1.8688174486160278
    4. 'z' → logprob: -2.6188173294067383
    5. '   ' → logprob: -3.7438173294067383
    6. ' for' → logprob: -6.993817329406738
    7. 'for' → logprob: -7.618817329406738
    8. '    ' → logprob: -7.743817329406738
    9. ' pass' → logprob: -7.993817329406738
    10. '```' → logprob: -8.493817329406738

Token 388: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011931207031011581
    2. ' print' → logprob: -4.886931419372559
    3. 'z' → logprob: -5.511931419372559
    4. '   ' → logprob: -9.011931419372559
    5. ' z' → logprob: -9.386931419372559
    6. 'for' → logprob: -10.261931419372559
    7. '
' → logprob: -10.886931419372559
    8. 'if' → logprob: -12.511931419372559
    9. '#' → logprob: -12.636931419372559
    10. 'pass' → logprob: -13.261931419372559

Token 389: ' B' (ID: 418)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.396806001663208
    2. 'print' → logprob: -2.021806001663208
    3. '   ' → logprob: -2.146806001663208
    4. ' z' → logprob: -2.771806001663208
    5. '    ' → logprob: -5.646805763244629
    6. 'z' → logprob: -5.646805763244629
    7. '
' → logprob: -6.396805763244629
    8. ' 
' → logprob: -6.521805763244629
    9. ' B' → logprob: -6.771805763244629
    10. ' ' → logprob: -6.771805763244629

Token 390: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08624035865068436
    2. '==' → logprob: -2.711240291595459
    3. ':' → logprob: -4.461240291595459
    4. ' >' → logprob: -6.336240291595459
    5. '   ' → logprob: -6.961240291595459
    6. ' !=' → logprob: -7.336240291595459
    7. ' <=' → logprob: -7.961240291595459
    8. '>' → logprob: -8.336240768432617
    9. ' :' → logprob: -8.961240768432617
    10. ' ' → logprob: -8.961240768432617

Token 391: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07775697112083435
    2. ' ' → logprob: -3.327756881713867
    3. 'A' → logprob: -3.952756881713867
    4. '1' → logprob: -4.452756881713867
    5. ' A' → logprob: -5.452756881713867
    6. 'N' → logprob: -5.952756881713867
    7. '   ' → logprob: -7.202756881713867
    8. ' N' → logprob: -7.827756881713867
    9. ':' → logprob: -10.827756881713867
    10. 'B' → logprob: -11.827756881713867

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011620529927313328
    2. ' ' → logprob: -4.63662052154541
    3. '1' → logprob: -6.38662052154541
    4. '   ' → logprob: -8.76162052154541
    5. 'N' → logprob: -11.63662052154541
    6. 'A' → logprob: -12.38662052154541
    7. 'B' → logprob: -12.76162052154541
    8. '  ' → logprob: -13.13662052154541
    9. ':' → logprob: -14.01162052154541
    10. ' N' → logprob: -14.13662052154541

Token 393: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6953137516975403
    2. ':
' → logprob: -0.6953137516975403
    3. '   ' → logprob: -6.445313930511475
    4. ' :
' → logprob: -8.695313453674316
    5. ',' → logprob: -8.820313453674316
    6. 'print' → logprob: -9.445313453674316
    7. ' :' → logprob: -9.445313453674316
    8. ':
' → logprob: -10.695313453674316
    9. ',
' → logprob: -11.070313453674316
    10. ' and' → logprob: -11.320313453674316

Token 394: ' alors' (ID: 17971)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5262682437896729
    2. '   ' → logprob: -1.0262682437896729
    3. 'print' → logprob: -3.151268243789673
    4. '    ' → logprob: -5.651268005371094
    5. ' z' → logprob: -6.026268005371094
    6. '
' → logprob: -7.276268005371094
    7. '    
' → logprob: -7.401268005371094
    8. ' 
' → logprob: -8.276268005371094
    9. 'z' → logprob: -9.151268005371094
    10. '	print' → logprob: -9.151268005371094

Token 395: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8100728988647461
    2. 'print' → logprob: -0.9350728988647461
    3. '   ' → logprob: -2.060072898864746
    4. ' z' → logprob: -3.935072898864746
    5. 'z' → logprob: -4.310072898864746
    6. '
' → logprob: -7.685072898864746
    7. '    ' → logprob: -8.060072898864746
    8. ' for' → logprob: -8.060072898864746
    9. ' ' → logprob: -8.435072898864746
    10. 'for' → logprob: -8.560072898864746

Token 396: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5431373715400696
    2. ' print' → logprob: -0.9181373715400696
    3. '   ' → logprob: -5.543137550354004
    4. 'aff' → logprob: -5.543137550354004
    5. ' imprime' → logprob: -6.293137550354004
    6. ' doit' → logprob: -6.793137550354004
    7. 'do' → logprob: -6.918137550354004
    8. ' affiche' → logprob: -6.918137550354004
    9. ':' → logprob: -7.043137550354004
    10. '    ' → logprob: -7.418137550354004

Token 397: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7140078544616699
    2. '1' → logprob: -0.9640078544616699
    3. '(' → logprob: -2.83900785446167
    4. 'N' → logprob: -3.08900785446167
    5. 'A' → logprob: -4.08900785446167
    6. '(N' → logprob: -5.71400785446167
    7. '(A' → logprob: -6.08900785446167
    8. '   ' → logprob: -7.21400785446167
    9. ' ' → logprob: -7.46400785446167
    10. ' A' → logprob: -7.96400785446167

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10618055611848831
    2. '0' → logprob: -2.3561806678771973
    3. 'A' → logprob: -5.981180667877197
    4. 'N' → logprob: -6.231180667877197
    5. '(' → logprob: -7.106180667877197
    6. '   ' → logprob: -8.731180191040039
    7. '(A' → logprob: -8.731180191040039
    8. ' ' → logprob: -9.106180191040039
    9. '(N' → logprob: -9.981180191040039
    10. 'print' → logprob: -10.231180191040039

Token 399: ' directement' (ID: 52317)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08854567259550095
    2. '
' → logprob: -2.963545560836792
    3. '    
' → logprob: -4.088545799255371
    4. 'print' → logprob: -4.213545799255371
    5. '\n' → logprob: -7.213545799255371
    6. '.' → logprob: -8.588545799255371
    7. ' print' → logprob: -8.963545799255371
    8. ')' → logprob: -9.338545799255371
    9. '(' → logprob: -9.838545799255371
    10. ',' → logprob: -10.088545799255371

Token 400: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044384490698575974
    2. '
' → logprob: -3.294384479522705
    3. 'print' → logprob: -5.419384479522705
    4. '    
' → logprob: -6.544384479522705
    5. ':' → logprob: -9.544384956359863
    6. ',' → logprob: -9.669384956359863
    7. '.' → logprob: -9.669384956359863
    8. '\n' → logprob: -9.794384956359863
    9. ' print' → logprob: -9.919384956359863
    10. ',
' → logprob: -10.419384956359863

Token 401: ' on' (ID: 402)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.3413987457752228
    2. 'exit' → logprob: -1.3413987159729004
    3. ' quit' → logprob: -3.8413987159729004
    4. '   ' → logprob: -5.8413987159729
    5. '	exit' → logprob: -7.2163987159729
    6. 'quit' → logprob: -7.4663987159729
    7. ' return' → logprob: -7.5913987159729
    8. ' ' → logprob: -8.091399192810059
    9. '    ' → logprob: -8.091399192810059
    10. 'return' → logprob: -8.466399192810059

Token 402: ' quitte' (ID: 167254)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.5677126049995422
    2. ' exit' → logprob: -1.1927125453948975
    3. 'return' → logprob: -2.6927125453948975
    4. ' return' → logprob: -2.9427125453948975
    5. 'ret' → logprob: -5.942712783813477
    6. ' quit' → logprob: -6.067712783813477
    7. '   ' → logprob: -6.192712783813477
    8. '
' → logprob: -7.567712783813477
    9. 'quit' → logprob: -7.567712783813477
    10. '	exit' → logprob: -8.442712783813477

Token 403: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4711521565914154
    2. '()
' → logprob: -1.7211521863937378
    3. '.' → logprob: -2.5961520671844482
    4. '
' → logprob: -2.7211520671844482
    5. '(' → logprob: -4.346152305603027
    6. '.
' → logprob: -4.471152305603027
    7. '(
' → logprob: -4.471152305603027
    8. '   ' → logprob: -4.971152305603027
    9. 'print' → logprob: -4.971152305603027
    10. '    
' → logprob: -6.221152305603027

Token 404: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.16527464985847473
    2. 'program' → logprob: -2.4152746200561523
    3. ' programme' → logprob: -2.7902746200561523
    4. ' program' → logprob: -7.415274620056152
    5. 'code' → logprob: -7.915274620056152
    6. '```' → logprob: -8.040274620056152
    7. '
' → logprob: -9.665274620056152
    8. 'programma' → logprob: -10.165274620056152
    9. 'prog' → logprob: -10.415274620056152
    10. 'programm' → logprob: -10.415274620056152

Token 405: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010653373785316944
    2. '
' → logprob: -4.885653495788574
    3. '    
' → logprob: -5.885653495788574
    4. 'print' → logprob: -9.385653495788574
    5. ':' → logprob: -10.010653495788574
    6. '.' → logprob: -10.135653495788574
    7. ',' → logprob: -10.760653495788574
    8. ',
' → logprob: -11.385653495788574
    9. '       ' → logprob: -11.385653495788574
    10. ':
' → logprob: -12.010653495788574

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004204359371215105
    2. '
' → logprob: -6.004204273223877
    3. ' print' → logprob: -7.004204273223877
    4. 'print' → logprob: -7.254204273223877
    5. '    
' → logprob: -9.879204750061035
    6. '```' → logprob: -10.004204750061035
    7. '   ' → logprob: -12.504204750061035
    8. '       ' → logprob: -12.754204750061035
    9. '\n' → logprob: -12.879204750061035
    10. '	print' → logprob: -13.629204750061035

Token 407: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009318724274635315
    2. ' print' → logprob: -4.759318828582764
    3. '   ' → logprob: -7.259318828582764
    4. '
' → logprob: -15.634318351745605
    5. ' ' → logprob: -16.759319305419922
    6. '	print' → logprob: -17.009319305419922
    7. 'import' → logprob: -17.134319305419922
    8. '```' → logprob: -18.009319305419922
    9. '    ' → logprob: -18.259319305419922
    10. '    
' → logprob: -19.009319305419922

Token 408: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014193473383784294
    2. ' print' → logprob: -4.514193534851074
    3. '   ' → logprob: -5.764193534851074
    4. ' ' → logprob: -13.389193534851074
    5. '```' → logprob: -14.639193534851074
    6. '
' → logprob: -15.639193534851074
    7. '	print' → logprob: -15.639193534851074
    8. 'return' → logprob: -15.889193534851074
    9. 'exit' → logprob: -15.889193534851074
    10. 'import' → logprob: -16.139192581176758

Token 409: 'Cela' (ID: 122117)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07933972030878067
    2. ' print' → logprob: -2.9543397426605225
    3. 'exit' → logprob: -4.079339504241943
    4. '   ' → logprob: -5.704339504241943
    5. ' exit' → logprob: -6.079339504241943
    6. 'return' → logprob: -6.829339504241943
    7. ' return' → logprob: -9.204339981079102
    8. ' ' → logprob: -9.204339981079102
    9. 'import' → logprob: -9.579339981079102
    10. ')' → logprob: -9.579339981079102

Token 410: ' correspond' (ID: 11095)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4529954195022583
    2. '
' → logprob: -1.4529954195022583
    3. 'print' → logprob: -1.8279954195022583
    4. 'return' → logprob: -2.2029953002929688
    5. ' return' → logprob: -2.5779953002929688
    6. ' )' → logprob: -2.9529953002929688
    7. ')
' → logprob: -3.3279953002929688
    8. ' print' → logprob: -3.4529953002929688
    9. '   ' → logprob: -3.7029953002929688
    10. ' )
' → logprob: -4.327995300292969

Token 411: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.33998677134513855
    2. ')' → logprob: -2.089986801147461
    3. ' )' → logprob: -2.714986801147461
    4. ' to' → logprob: -3.214986801147461
    5. '   ' → logprob: -4.214986801147461
    6. 'to' → logprob: -4.714986801147461
    7. '    ' → logprob: -4.964986801147461
    8. ' a' → logprob: -4.964986801147461
    9. ' au' → logprob: -4.964986801147461
    10. 'à' → logprob: -5.214986801147461

Token 412: ' un' (ID: 537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40868932008743286
    2. ' print' → logprob: -1.158689260482788
    3. '   ' → logprob: -4.158689498901367
    4. 'return' → logprob: -6.283689498901367
    5. '
' → logprob: -6.783689498901367
    6. ' return' → logprob: -6.908689498901367
    7. '    ' → logprob: -6.908689498901367
    8. '```' → logprob: -8.283689498901367
    9. '1' → logprob: -8.408689498901367
    10. ' ' → logprob: -8.908689498901367

Token 413: ' cas' (ID: 2108)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0151287317276
    2. 'print' → logprob: -1.3901287317276
    3. ' print' → logprob: -1.5151287317276
    4. 'return' → logprob: -1.8901287317276
    5. ' cas' → logprob: -5.1401286125183105
    6. '```' → logprob: -5.5151286125183105
    7. ' retour' → logprob: -6.2651286125183105
    8. '   ' → logprob: -7.5151286125183105
    9. 'import' → logprob: -7.5151286125183105
    10. ' nombre' → logprob: -7.7651286125183105

Token 414: ' particulier' (ID: 47842)
  Prédit: ' particulier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' particulier' → logprob: -0.55506831407547
    2. ' spécial' → logprob: -1.8050682544708252
    3. 'sp' → logprob: -2.430068254470825
    4. ' où' → logprob: -3.430068254470825
    5. 'part' → logprob: -3.555068254470825
    6. ' where' → logprob: -3.680068254470825
    7. 'où' → logprob: -4.055068492889404
    8. ' trivial' → logprob: -4.305068492889404
    9. ' de' → logprob: -4.430068492889404
    10. ' d' → logprob: -4.680068492889404

Token 415: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6072304248809814
    2. '   ' → logprob: -0.8572304248809814
    3. ' )' → logprob: -4.107230186462402
    4. ')
' → logprob: -5.357230186462402
    5. ':' → logprob: -5.732230186462402
    6. '    ' → logprob: -6.982230186462402
    7. 'print' → logprob: -7.107230186462402
    8. ' )
' → logprob: -7.107230186462402
    9. '  ' → logprob: -7.732230186462402
    10. '```' → logprob: -7.857230186462402

Token 416: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09519527107477188
    2. ' print' → logprob: -2.5951952934265137
    3. 'comb' → logprob: -4.845195293426514
    4. ' la' → logprob: -5.845195293426514
    5. 'la' → logprob: -6.220195293426514
    6. ' combinaison' → logprob: -6.720195293426514
    7. 'l' → logprob: -8.095194816589355
    8. ' comb' → logprob: -8.220194816589355
    9. 'f' → logprob: -8.595194816589355
    10. '
' → logprob: -8.595194816589355

Token 417: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2155877649784088
    2. 'e' → logprob: -1.8405877351760864
    3. ''ex' → logprob: -3.965587854385376
    4. 'print' → logprob: -4.965587615966797
    5. ''ensemble' → logprob: -5.840587615966797
    6. ''é' → logprob: -6.715587615966797
    7. ''application' → logprob: -6.840587615966797
    8. '')' → logprob: -7.215587615966797
    9. ''arrêt' → logprob: -7.965587615966797
    10. '```' → logprob: -8.215587615966797

Token 418: 'én' (ID: 3289)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1471225470304489
    2. 'code' → logprob: -3.147122621536255
    3. 'programme' → logprob: -3.147122621536255
    4. 'comb' → logprob: -3.772122621536255
    5. 'com' → logprob: -4.397122383117676
    6. 'program' → logprob: -5.897122383117676
    7. 'exit' → logprob: -6.022122383117676
    8. 'import' → logprob: -6.022122383117676
    9. 'if' → logprob: -6.147122383117676
    10. '```' → logprob: -6.397122383117676

Token 419: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.10858999192714691
    2. 'onc' → logprob: -2.8585898876190186
    3. 'um' → logprob: -4.358590126037598
    4. '```' → logprob: -4.608590126037598
    5. 'once' → logprob: -4.733590126037598
    6. 'tr' → logprob: -5.858590126037598
    7. 'nonce' → logprob: -6.233590126037598
    8. 'on' → logprob: -6.983590126037598
    9. 'n' → logprob: -7.108590126037598
    10. 't' → logprob: -7.233590126037598

Token 420: '.)
' (ID: 32616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10306992381811142
    2. ')
' → logprob: -2.478070020675659
    3. '   ' → logprob: -4.35306978225708
    4. ' )' → logprob: -7.10306978225708
    5. ' )
' → logprob: -8.603070259094238
    6. ')
' → logprob: -10.603070259094238
    7. ').' → logprob: -10.728070259094238
    8. 'print' → logprob: -10.853070259094238
    9. '```' → logprob: -10.853070259094238
    10. ' ' → logprob: -11.478070259094238

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005791801027953625
    2. 'print' → logprob: -5.880791664123535
    3. ' print' → logprob: -6.505791664123535
    4. '
' → logprob: -6.755791664123535
    5. '    
' → logprob: -8.755791664123535
    6. '```' → logprob: -8.880791664123535
    7. '   ' → logprob: -11.380791664123535
    8. ' 
' → logprob: -12.380791664123535
    9. '       ' → logprob: -12.755791664123535
    10. '	print' → logprob: -13.005791664123535

Token 422: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004145356826484203
    2. ' print' → logprob: -5.50414514541626
    3. '   ' → logprob: -9.629145622253418
    4. '
' → logprob: -14.004145622253418
    5. '```' → logprob: -15.504145622253418
    6. '	print' → logprob: -17.2541446685791
    7. 'import' → logprob: -17.7541446685791
    8. 'return' → logprob: -17.8791446685791
    9. ' ' → logprob: -18.1291446685791
    10. '    
' → logprob: -18.2541446685791

Token 423: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4418171455617994e-05
    2. '1' → logprob: -10.125044822692871
    3. ' (' → logprob: -13.000044822692871
    4. '(
' → logprob: -13.125044822692871
    5. ' ' → logprob: -17.000043869018555
    6. '('' → logprob: -17.250043869018555
    7. '(

' → logprob: -17.750043869018555
    8. '()' → logprob: -18.375043869018555
    9. '("' → logprob: -18.625043869018555
    10. '0' → logprob: -18.875043869018555

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.375
    4. '(' → logprob: -20.75
    5. ')' → logprob: -21.0
    6. '0' → logprob: -21.25
    7. '```' → logprob: -21.75
    8. '`' → logprob: -22.125
    9. '"' → logprob: -22.5
    10. '
' → logprob: -23.0

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12707161903381348
    2. ')
' → logprob: -2.1270716190338135
    3. ')
' → logprob: -8.877071380615234
    4. ' )' → logprob: -12.877071380615234
    5. ')return' → logprob: -14.752071380615234
    6. ' )
' → logprob: -15.002071380615234
    7. '   ' → logprob: -15.252071380615234
    8. ')

' → logprob: -15.752071380615234
    9. ')`
' → logprob: -15.752071380615234
    10. ')#' → logprob: -16.877071380615234

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015239100903272629
    2. 'else' → logprob: -6.501523971557617
    3. 'elif' → logprob: -11.376523971557617
    4. 'exit' → logprob: -12.376523971557617
    5. '    
' → logprob: -13.126523971557617
    6. ')' → logprob: -14.001523971557617
    7. ' else' → logprob: -14.001523971557617
    8. '```' → logprob: -14.376523971557617
    9. '   ' → logprob: -14.376523971557617
    10. '	exit' → logprob: -15.126523971557617

Token 427: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.12199124693870544
    2. '   ' → logprob: -2.6219911575317383
    3. 'else' → logprob: -3.3719911575317383
    4. ' exit' → logprob: -5.496991157531738
    5. '	exit' → logprob: -6.496991157531738
    6. 'elif' → logprob: -6.746991157531738
    7. 'return' → logprob: -8.246991157531738
    8. '    
' → logprob: -8.996991157531738
    9. '```' → logprob: -8.996991157531738
    10. '
' → logprob: -9.121991157531738

Token 428: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.600714161526412e-05
    2. '()
' → logprob: -9.625076293945312
    3. '(' → logprob: -11.750076293945312
    4. '()

' → logprob: -14.375076293945312
    5. '()`' → logprob: -14.750076293945312
    6. '()\' → logprob: -14.750076293945312
    7. '())' → logprob: -15.500076293945312
    8. ' ()' → logprob: -15.750076293945312
    9. '()]' → logprob: -16.375076293945312
    10. '()"' → logprob: -16.750076293945312

Token 429: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00751339178532362
    2. '#' → logprob: -5.007513523101807
    3. 'f' → logprob: -7.507513523101807
    4. ' for' → logprob: -9.132513046264648
    5. '
' → logprob: -9.507513046264648
    6. 'F' → logprob: -10.507513046264648
    7. ')' → logprob: -11.632513046264648
    8. 'i' → logprob: -12.007513046264648
    9. '```' → logprob: -12.257513046264648
    10. 'n' → logprob: -12.507513046264648

Token 430: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.5941604690160602e-05
    2. '#' → logprob: -10.625025749206543
    3. 'f' → logprob: -14.625025749206543
    4. ' for' → logprob: -15.125025749206543
    5. '
' → logprob: -15.375025749206543
    6. 'i' → logprob: -15.875025749206543
    7. '```' → logprob: -16.00002670288086
    8. 'F' → logprob: -16.25002670288086
    9. 'def' → logprob: -16.75002670288086
    10. 'fo' → logprob: -17.00002670288086

Token 431: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.9421738982200623
    2. 'r' → logprob: -1.317173957824707
    3. 'for' → logprob: -1.567173957824707
    4. 'cles' → logprob: -3.067173957824707
    5. 'cl' → logprob: -3.317173957824707
    6. 'cler' → logprob: -3.942173957824707
    7. 'c' → logprob: -4.317173957824707
    8. 't' → logprob: -4.567173957824707
    9. '   ' → logprob: -6.192173957824707
    10. 'f' → logprob: -6.567173957824707

Token 432: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6360298991203308
    2. 'for' → logprob: -0.7610298991203308
    3. ' i' → logprob: -5.8860297203063965
    4. 'i' → logprob: -8.261030197143555
    5. '   ' → logprob: -8.636030197143555
    6. ' ' → logprob: -9.136030197143555
    7. ' f' → logprob: -10.511030197143555
    8. ' ' → logprob: -10.636030197143555
    9. 'f' → logprob: -11.511030197143555
    10. '	for' → logprob: -12.261030197143555

Token 433: ' calcul' (ID: 7559)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12733741104602814
    2. ' i' → logprob: -2.1273374557495117
    3. 'n' → logprob: -8.377337455749512
    4. 'k' → logprob: -9.877337455749512
    5. ' n' → logprob: -10.252337455749512
    6. 'r' → logprob: -10.377337455749512
    7. 'x' → logprob: -11.627337455749512
    8. '_' → logprob: -12.002337455749512
    9. '(i' → logprob: -12.252337455749512
    10. '	i' → logprob: -12.377337455749512

Token 434: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5886414051055908
    2. ' i' → logprob: -1.2136414051055908
    3. 'R' → logprob: -3.213641405105591
    4. 'i' → logprob: -3.338641405105591
    5. 'r' → logprob: -3.338641405105591
    6. 'ateur' → logprob: -4.713641166687012
    7. ' R' → logprob: -4.838641166687012
    8. 'ation' → logprob: -5.088641166687012
    9. 'e' → logprob: -5.963641166687012
    10. ' r' → logprob: -6.088641166687012

Token 435: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2528437077999115
    2. ' i' → logprob: -1.5028437376022339
    3. 'n' → logprob: -7.752843856811523
    4. ' n' → logprob: -8.877843856811523
    5. '_' → logprob: -9.502843856811523
    6. ' R' → logprob: -10.252843856811523
    7. 'R' → logprob: -10.377843856811523
    8. 'k' → logprob: -10.502843856811523
    9. ' ' → logprob: -10.502843856811523
    10. '(i' → logprob: -10.627843856811523

Token 436: ' fact' (ID: 2840)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05540359392762184
    2. ' i' → logprob: -3.555403709411621
    3. 'n' → logprob: -4.055403709411621
    4. 'f' → logprob: -5.680403709411621
    5. 'fact' → logprob: -5.805403709411621
    6. ' n' → logprob: -7.180403709411621
    7. 'factor' → logprob: -7.680403709411621
    8. ' f' → logprob: -8.930403709411621
    9. ' factorial' → logprob: -9.055403709411621
    10. 'k' → logprob: -10.305403709411621

Token 437: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.24697823822498322
    2. 'i' → logprob: -1.7469782829284668
    3. 'orial' → logprob: -3.621978282928467
    4. 'o' → logprob: -4.246978282928467
    5. '(i' → logprob: -6.996978282928467
    6. '*i' → logprob: -7.746978282928467
    7. 'actor' → logprob: -7.871978282928467
    8. 'ori' → logprob: -8.871977806091309
    9. '```' → logprob: -8.871977806091309
    10. 'orie' → logprob: -9.121977806091309

Token 438: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0024372583720833063
    2. 'alles' → logprob: -7.252437114715576
    3. 'lles' → logprob: -7.377437114715576
    4. '#' → logprob: -8.002437591552734
    5. 'els' → logprob: -8.627437591552734
    6. 'ales' → logprob: -8.877437591552734
    7. 'elle' → logprob: -9.627437591552734
    8. 'a' → logprob: -9.752437591552734
    9. 'es' → logprob: -9.752437591552734
    10. '[' → logprob: -10.502437591552734

Token 439: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19690869748592377
    2. 'in' → logprob: -2.571908712387085
    3. 'i' → logprob: -2.821908712387085
    4. ' in' → logprob: -3.946908712387085
    5. ' for' → logprob: -3.946908712387085
    6. ' i' → logprob: -5.571908473968506
    7. 'n' → logprob: -8.696908950805664
    8. 'f' → logprob: -9.821908950805664
    9. ' ' → logprob: -10.321908950805664
    10. '_' → logprob: -10.446908950805664

Token 440: ' ' (ID: 220)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6117726564407349
    2. 'i' → logprob: -1.1117726564407349
    3. ' R' → logprob: -2.6117725372314453
    4. ' i' → logprob: -3.6117725372314453
    5. '1' → logprob: -4.736772537231445
    6. 'range' → logprob: -5.111772537231445
    7. 'n' → logprob: -5.236772537231445
    8. 'r' → logprob: -5.861772537231445
    9. ' range' → logprob: -5.986772537231445
    10. ' ' → logprob: -6.861772537231445

Token 441: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8754297494888306
    2. 'range' → logprob: -1.0004297494888306
    3. 'R' → logprob: -1.6254297494888306
    4. 'n' → logprob: -5.250429630279541
    5. 'r' → logprob: -5.250429630279541
    6. '1' → logprob: -5.625429630279541
    7. ' range' → logprob: -5.875429630279541
    8. ' R' → logprob: -7.500429630279541
    9. ' i' → logprob: -7.750429630279541
    10. '_' → logprob: -9.1254301071167

Token 442: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5460605025291443
    2. 'in' → logprob: -0.9210605025291443
    3. '(' → logprob: -5.296060562133789
    4. 'for' → logprob: -5.546060562133789
    5. ' ,' → logprob: -5.671060562133789
    6. '(P' → logprob: -6.296060562133789
    7. '   ' → logprob: -6.296060562133789
    8. ' in' → logprob: -6.796060562133789
    9. 'to' → logprob: -6.921060562133789
    10. '1' → logprob: -7.046060562133789

Token 443: ' N' (ID: 478)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.3573463261127472
    2. 'N' → logprob: -1.2323462963104248
    3. ' P' → logprob: -4.982346534729004
    4. ' N' → logprob: -6.357346534729004
    5. '1' → logprob: -8.357346534729004
    6. ' ' → logprob: -10.857346534729004
    7. 'n' → logprob: -12.232346534729004
    8. '
' → logprob: -13.107346534729004
    9. 'R' → logprob: -13.607346534729004
    10. '2' → logprob: -14.107346534729004

Token 444: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018302464857697487
    2. ' for' → logprob: -4.0183024406433105
    3. 'i' → logprob: -9.643302917480469
    4. 'f' → logprob: -10.143302917480469
    5. ' in' → logprob: -11.268302917480469
    6. 'in' → logprob: -11.393302917480469
    7. '
' → logprob: -12.018302917480469
    8. ':' → logprob: -12.143302917480469
    9. ' i' → logprob: -13.393302917480469
    10. 'r' → logprob: -13.643302917480469

Token 445: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013370281085371971
    2. ' for' → logprob: -6.626337051391602
    3. 'f' → logprob: -12.001337051391602
    4. 'i' → logprob: -13.126337051391602
    5. 'R' → logprob: -14.001337051391602
    6. '```' → logprob: -14.376337051391602
    7. 'in' → logprob: -15.126337051391602
    8. '
' → logprob: -15.251337051391602
    9. '_' → logprob: -15.251337051391602
    10. 'r' → logprob: -15.501337051391602

Token 446: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009480224689468741
    2. ' for' → logprob: -7.125947952270508
    3. 'f' → logprob: -9.250947952270508
    4. 'i' → logprob: -10.375947952270508
    5. '_' → logprob: -11.375947952270508
    6. '
' → logprob: -14.000947952270508
    7. '_for' → logprob: -14.000947952270508
    8. 'R' → logprob: -14.125947952270508
    9. 'fo' → logprob: -14.375947952270508
    10. '```' → logprob: -14.875947952270508

Token 447: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011313177645206451
    2. ' i' → logprob: -4.511312961578369
    3. 'n' → logprob: -8.761313438415527
    4. 'x' → logprob: -10.261313438415527
    5. 'r' → logprob: -11.136313438415527
    6. 'k' → logprob: -11.136313438415527
    7. '_' → logprob: -11.136313438415527
    8. '_i' → logprob: -12.011313438415527
    9. 'd' → logprob: -12.261313438415527
    10. 't' → logprob: -12.886313438415527

Token 448: ' entier' (ID: 80473)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1604464054107666
    2. ' i' → logprob: -1.9104464054107666
    3. 'n' → logprob: -8.910446166992188
    4. ' n' → logprob: -9.660446166992188
    5. 'x' → logprob: -11.535446166992188
    6. '	i' → logprob: -12.660446166992188
    7. 'k' → logprob: -12.785446166992188
    8. ' x' → logprob: -13.660446166992188
    9. '_' → logprob: -13.785446166992188
    10. ' ' → logprob: -13.910446166992188

Token 449: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4300408661365509
    2. ' i' → logprob: -1.0550408363342285
    3. 'n' → logprob: -7.6800408363342285
    4. ' in' → logprob: -7.9300408363342285
    5. ' n' → logprob: -8.180041313171387
    6. 'in' → logprob: -9.555041313171387
    7. 'x' → logprob: -10.180041313171387
    8. ' ' → logprob: -10.430041313171387
    9. ' x' → logprob: -11.055041313171387
    10. '_' → logprob: -11.055041313171387

Token 450: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09280936419963837
    2. 'in' → logprob: -2.4678094387054443
    3. 'n' → logprob: -5.967809200286865
    4. ' ' → logprob: -7.592809200286865
    5. ',' → logprob: -7.967809200286865
    6. ' i' → logprob: -8.717809677124023
    7. ' n' → logprob: -9.842809677124023
    8. 'i' → logprob: -10.467809677124023
    9. 's' → logprob: -10.592809677124023
    10. '_' → logprob: -10.592809677124023

Token 451: ' ' (ID: 220)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.18021869659423828
    2. ' R' → logprob: -2.1802186965942383
    3. '1' → logprob: -3.9302186965942383
    4. ' range' → logprob: -4.055218696594238
    5. 'range' → logprob: -4.305218696594238
    6. ' ' → logprob: -7.055218696594238
    7. '(' → logprob: -8.555218696594238
    8. 'r' → logprob: -9.430218696594238
    9. '_' → logprob: -9.930218696594238
    10. '(R' → logprob: -10.180218696594238

Token 452: '1' (ID: 16)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00244450056925416
    2. ' R' → logprob: -6.502444267272949
    3. 'range' → logprob: -7.627444267272949
    4. '1' → logprob: -8.00244426727295
    5. ' range' → logprob: -9.37744426727295
    6. '(R' → logprob: -11.12744426727295
    7. '(' → logprob: -12.00244426727295
    8. ' ' → logprob: -12.12744426727295
    9. 'r' → logprob: -13.50244426727295
    10. 'F' → logprob: -13.50244426727295

Token 453: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04028460383415222
    2. ' in' → logprob: -3.9152846336364746
    3. 'in' → logprob: -4.165284633636475
    4. ' ,' → logprob: -5.790284633636475
    5. ' ' → logprob: -8.540284156799316
    6. ',N' → logprob: -8.540284156799316
    7. ',P' → logprob: -9.040284156799316
    8. ',n' → logprob: -9.165284156799316
    9. ',R' → logprob: -9.790284156799316
    10. '(P' → logprob: -9.915284156799316

Token 454: ' N' (ID: 478)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5350480079650879
    2. 'N' → logprob: -0.9100480079650879
    3. ' P' → logprob: -4.785048007965088
    4. ' N' → logprob: -5.660048007965088
    5. ' ' → logprob: -11.91004753112793
    6. ',' → logprob: -12.78504753112793
    7. '
' → logprob: -13.53504753112793
    8. '   ' → logprob: -13.91004753112793
    9. '(P' → logprob: -14.41004753112793
    10. ' ' → logprob: -14.41004753112793

Token 455: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10642290860414505
    2. 'in' → logprob: -3.2314229011535645
    3. ' in' → logprob: -3.3564229011535645
    4. ':
' → logprob: -4.7314229011535645
    5. '(' → logprob: -5.4814229011535645
    6. '(P' → logprob: -5.9814229011535645
    7. '(R' → logprob: -6.2314229011535645
    8. ' :' → logprob: -6.3564229011535645
    9. ',' → logprob: -6.3564229011535645
    10. '(n' → logprob: -6.7314229011535645

Token 456: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10566853731870651
    2. ':
' → logprob: -3.230668544769287
    3. ' in' → logprob: -3.605668544769287
    4. 'in' → logprob: -3.980668544769287
    5. '(n' → logprob: -5.605668544769287
    6. '(' → logprob: -5.980668544769287
    7. 'n' → logprob: -6.355668544769287
    8. ' :' → logprob: -6.480668544769287
    9. '(R' → logprob: -6.605668544769287
    10. 'for' → logprob: -6.980668544769287

Token 457: 'range' (ID: 20967)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.417648434638977
    2. 'n' → logprob: -1.792648434638977
    3. ' n' → logprob: -1.917648434638977
    4. ' R' → logprob: -1.917648434638977
    5. ' in' → logprob: -2.2926483154296875
    6. ')' → logprob: -2.4176483154296875
    7. '):' → logprob: -3.1676483154296875
    8. '):
' → logprob: -4.0426483154296875
    9. 'in' → logprob: -5.0426483154296875
    10. ' for' → logprob: -5.1676483154296875

Token 458: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9146995327901095e-05
    2. '1' → logprob: -12.000019073486328
    3. ')(' → logprob: -12.625019073486328
    4. ')' → logprob: -13.000019073486328
    5. '(
' → logprob: -13.500019073486328
    6. '(N' → logprob: -13.500019073486328
    7. '(R' → logprob: -13.625019073486328
    8. '(P' → logprob: -13.750019073486328
    9. ',' → logprob: -14.000019073486328
    10. ' (' → logprob: -14.250019073486328

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2524500787258148
    2. '(' → logprob: -1.5024501085281372
    3. ',' → logprob: -8.002449989318848
    4. ')' → logprob: -9.627449989318848
    5. ' ' → logprob: -9.877449989318848
    6. '
' → logprob: -10.752449989318848
    7. 'f' → logprob: -11.252449989318848
    8. ' (' → logprob: -11.752449989318848
    9. '

' → logprob: -12.002449989318848
    10. '   ' → logprob: -12.127449989318848

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047785576432943344
    2. '(' → logprob: -3.297785520553589
    3. '(N' → logprob: -4.922785758972168
    4. ',N' → logprob: -6.672785758972168
    5. '(P' → logprob: -7.422785758972168
    6. ' ,' → logprob: -8.047785758972168
    7. ',P' → logprob: -8.922785758972168
    8. ',
' → logprob: -9.797785758972168
    9. '```' → logprob: -11.672785758972168
    10. '1' → logprob: -11.797785758972168

Token 461: ' P' (ID: 398)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004796307533979416
    2. 'P' → logprob: -5.629796504974365
    3. ' N' → logprob: -6.754796504974365
    4. ' P' → logprob: -11.379796028137207
    5. 'M' → logprob: -11.879796028137207
    6. ')' → logprob: -12.004796028137207
    7. '   ' → logprob: -13.254796028137207
    8. '
' → logprob: -13.754796028137207
    9. ' ' → logprob: -14.254796028137207
    10. ',' → logprob: -14.504796028137207

Token 462: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4418317377567291
    2. ')):' → logprob: -1.0668317079544067
    3. ')):
' → logprob: -5.691831588745117
    4. '))' → logprob: -5.691831588745117
    5. '):
' → logprob: -5.941831588745117
    6. ')' → logprob: -6.191831588745117
    7. ':' → logprob: -6.566831588745117
    8. ' ):' → logprob: -9.941831588745117
    9. ')),' → logprob: -9.941831588745117
    10. '),' → logprob: -10.566831588745117

Token 463: ' va' (ID: 3423)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029568802565336227
    2. ':' → logprob: -4.279568672180176
    3. '):
' → logprob: -4.279568672180176
    4. ')' → logprob: -6.654568672180176
    5. ':
' → logprob: -9.029568672180176
    6. 'for' → logprob: -11.654568672180176
    7. ',' → logprob: -12.279568672180176
    8. 'n' → logprob: -12.654568672180176
    9. ' ):' → logprob: -12.904568672180176
    10. ']:' → logprob: -13.154568672180176

Token 464: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24145986139774323
    2. '):' → logprob: -2.116459846496582
    3. ',' → logprob: -3.741459846496582
    4. ':' → logprob: -3.866459846496582
    5. 'n' → logprob: -4.241459846496582
    6. '),' → logprob: -4.616459846496582
    7. '1' → logprob: -4.991459846496582
    8. 'range' → logprob: -5.241459846496582
    9. '):
' → logprob: -5.741459846496582
    10. '
' → logprob: -5.991459846496582

Token 465: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001805377542041242
    2. ' ' → logprob: -8.6251802444458
    3. ')' → logprob: -14.2501802444458
    4. '   ' → logprob: -15.7501802444458
    5. ',' → logprob: -16.250181198120117
    6. '```' → logprob: -17.000181198120117
    7. '(' → logprob: -17.125181198120117
    8. '
' → logprob: -17.250181198120117
    9. ' )' → logprob: -18.500181198120117
    10. '),' → logprob: -19.125181198120117

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.755678961984813e-05
    2. ' ' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.125077247619629
    4. ')' → logprob: -14.125077247619629
    5. '```' → logprob: -15.125077247619629
    6. ',' → logprob: -15.250077247619629
    7. '(' → logprob: -15.250077247619629
    8. '
' → logprob: -15.500077247619629
    9. 'P' → logprob: -16.250078201293945
    10. '  ' → logprob: -17.812578201293945

Token 467: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003507653484120965
    2. ',P' → logprob: -5.753507614135742
    3. ' ,' → logprob: -9.003507614135742
    4. ',
' → logprob: -9.128507614135742
    5. ',N' → logprob: -10.253507614135742
    6. ')' → logprob: -10.628507614135742
    7. '):' → logprob: -11.503507614135742
    8. ',B' → logprob: -11.878507614135742
    9. ',n' → logprob: -12.003507614135742
    10. '1' → logprob: -12.753507614135742

Token 468: ' N' (ID: 478)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00012403888104017824
    2. ' P' → logprob: -9.125123977661133
    3. 'N' → logprob: -11.500123977661133
    4. ')' → logprob: -12.500123977661133
    5. '   ' → logprob: -14.875123977661133
    6. ',' → logprob: -15.125123977661133
    7. '	P' → logprob: -16.000123977661133
    8. '
' → logprob: -16.625123977661133
    9. '```' → logprob: -16.875123977661133
    10. ',P' → logprob: -16.875123977661133

Token 469: ' inclus' (ID: 11891)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03769703209400177
    2. ')' → logprob: -3.4126970767974854
    3. ':' → logprob: -6.287696838378906
    4. '):
' → logprob: -6.412696838378906
    5. ',' → logprob: -7.662696838378906
    6. ')):' → logprob: -10.912696838378906
    7. ' ):' → logprob: -11.162696838378906
    8. '),' → logprob: -11.162696838378906
    9. '):

' → logprob: -12.912696838378906
    10. '1' → logprob: -12.912696838378906

Token 470: ' car' (ID: 1669)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010952902026474476
    2. '):
' → logprob: -5.135952949523926
    3. ')' → logprob: -5.385952949523926
    4. ':' → logprob: -8.135952949523926
    5. ',' → logprob: -9.260952949523926
    6. ' ):' → logprob: -11.260952949523926
    7. '),' → logprob: -11.885952949523926
    8. '):
' → logprob: -12.385952949523926
    9. '```' → logprob: -12.635952949523926
    10. 'n' → logprob: -12.760952949523926

Token 471: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.06105456128716469
    2. ' P' → logprob: -3.0610544681549072
    3. 'N' → logprob: -4.561054706573486
    4. '   ' → logprob: -7.061054706573486
    5. ' N' → logprob: -7.311054706573486
    6. ')' → logprob: -8.186054229736328
    7. 'n' → logprob: -10.186054229736328
    8. ' ' → logprob: -10.936054229736328
    9. '    ' → logprob: -11.436054229736328
    10. ',' → logprob: -11.686054229736328

Token 472: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01759900525212288
    2. '=' → logprob: -4.767599105834961
    3. ':' → logprob: -5.267599105834961
    4. '):' → logprob: -6.017599105834961
    5. ')=' → logprob: -8.017599105834961
    6. ')>' → logprob: -8.767599105834961
    7. ')==' → logprob: -9.267599105834961
    8. ',' → logprob: -9.267599105834961
    9. '```' → logprob: -9.392599105834961
    10. ' =' → logprob: -9.517599105834961

Token 473: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003555885050445795
    2. ' N' → logprob: -5.878555774688721
    3. 'P' → logprob: -7.253555774688721
    4. ' ' → logprob: -11.128556251525879
    5. ')' → logprob: -11.628556251525879
    6. '   ' → logprob: -12.003556251525879
    7. ' P' → logprob: -12.628556251525879
    8. '(N' → logprob: -12.878556251525879
    9. '	N' → logprob: -13.003556251525879
    10. '`' → logprob: -13.753556251525879

Token 474: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21213224530220032
    2. '):' → logprob: -1.712132215499878
    3. '))' → logprob: -5.837132453918457
    4. ')):' → logprob: -5.837132453918457
    5. '+' → logprob: -6.587132453918457
    6. ':' → logprob: -7.337132453918457
    7. '):
' → logprob: -7.337132453918457
    8. '),' → logprob: -7.837132453918457
    9. ')))' → logprob: -8.087132453918457
    10. ')),' → logprob: -8.462132453918457

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023202638840302825
    2. ' ' → logprob: -8.375231742858887
    3. ')' → logprob: -13.875231742858887
    4. '   ' → logprob: -15.500231742858887
    5. '```' → logprob: -16.250232696533203
    6. '
' → logprob: -16.500232696533203
    7. '  ' → logprob: -17.875232696533203
    8. '),' → logprob: -17.875232696533203
    9. '`' → logprob: -18.375232696533203
    10. '2' → logprob: -18.875232696533203

Token 476: '),
' (ID: 2313)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.061441611498594284
    2. '):
' → logprob: -2.936441659927368
    3. ')' → logprob: -5.061441421508789
    4. ':' → logprob: -8.686441421508789
    5. '):
' → logprob: -11.686441421508789
    6. ' ):' → logprob: -11.686441421508789
    7. 'for' → logprob: -12.311441421508789
    8. ',' → logprob: -12.936441421508789
    9. '   ' → logprob: -13.186441421508789
    10. 'n' → logprob: -13.436441421508789

Token 477: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4702951908111572
    2. ' for' → logprob: -1.3452951908111572
    3. 'n' → logprob: -3.0952951908111572
    4. '   ' → logprob: -3.2202951908111572
    5. ' n' → logprob: -3.5952951908111572
    6. ':' → logprob: -6.970294952392578
    7. ' in' → logprob: -7.595294952392578
    8. 'f' → logprob: -9.095294952392578
    9. ' ' → logprob: -9.220294952392578
    10. 'in' → logprob: -9.845294952392578

Token 478: ' nous' (ID: 6176)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33985084295272827
    2. 'n' → logprob: -1.964850902557373
    3. ' for' → logprob: -2.214850902557373
    4. '   ' → logprob: -3.839850902557373
    5. ' n' → logprob: -4.089850902557373
    6. '
' → logprob: -8.839850425720215
    7. ':' → logprob: -8.839850425720215
    8. 'f' → logprob: -9.964850425720215
    9. ' ' → logprob: -10.214850425720215
    10. '    
' → logprob: -10.589850425720215

Token 479: ' actual' (ID: 6290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42017874121665955
    2. ' for' → logprob: -1.920178771018982
    3. ':' → logprob: -2.0451786518096924
    4. ' in' → logprob: -3.7951786518096924
    5. '=' → logprob: -3.9201786518096924
    6. 'in' → logprob: -4.4201788902282715
    7. ' =' → logprob: -5.6701788902282715
    8. '   ' → logprob: -5.9201788902282715
    9. ' ' → logprob: -6.5451788902282715
    10. 'f' → logprob: -6.7951788902282715

Token 480: 'isons' (ID: 47841)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -1.0398435592651367
    2. 'ize' → logprob: -1.1648435592651367
    3. 'iser' → logprob: -1.2898435592651367
    4. 'is' → logprob: -3.0398435592651367
    5. 'isez' → logprob: -5.039843559265137
    6. 'for' → logprob: -5.914843559265137
    7. 'isent' → logprob: -6.914843559265137
    8. '=' → logprob: -8.039843559265137
    9. 'i' → logprob: -8.914843559265137
    10. 'isons' → logprob: -9.289843559265137

Token 481: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.45012038946151733
    2. 'n' → logprob: -1.700120449066162
    3. ' f' → logprob: -2.075120449066162
    4. ' n' → logprob: -3.200120449066162
    5. '   ' → logprob: -4.825120449066162
    6. 'F' → logprob: -5.450120449066162
    7. ' F' → logprob: -7.700120449066162
    8. ' ' → logprob: -8.325119972229004
    9. 'range' → logprob: -9.075119972229004
    10. ' range' → logprob: -9.450119972229004

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1140186786651611
    2. ' *=' → logprob: -1.1140186786651611
    3. ' =' → logprob: -1.3640186786651611
    4. '*=' → logprob: -2.739018678665161
    5. '*' → logprob: -4.489018440246582
    6. ' *' → logprob: -4.864018440246582
    7. ' ' → logprob: -5.739018440246582
    8. ',' → logprob: -8.239018440246582
    9. '   ' → logprob: -8.739018440246582
    10. '
' → logprob: -8.864018440246582

Token 483: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5901868939399719
    2. '(f' → logprob: -1.5901868343353271
    3. ' f' → logprob: -1.8401868343353271
    4. ' (' → logprob: -2.590186834335327
    5. '(' → logprob: -4.840187072753906
    6. ' ' → logprob: -9.590187072753906
    7. '(n' → logprob: -10.465187072753906
    8. '	f' → logprob: -10.590187072753906
    9. ' ' → logprob: -11.215187072753906
    10. '   ' → logprob: -11.590187072753906

Token 484: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10023611038923264
    2. ' *' → logprob: -2.350236177444458
    3. '*f' → logprob: -10.850235939025879
    4. '*n' → logprob: -12.725235939025879
    5. ' ' → logprob: -12.975235939025879
    6. ' ' → logprob: -13.600235939025879
    7. '**' → logprob: -13.975235939025879
    8. '*
' → logprob: -14.100235939025879
    9. ' f' → logprob: -14.350235939025879
    10. '	' → logprob: -15.725235939025879

Token 485: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029753033071756363
    2. ' n' → logprob: -3.5297529697418213
    3. ' ' → logprob: -14.279752731323242
    4. '   ' → logprob: -14.404752731323242
    5. '
' → logprob: -14.904752731323242
    6. '	n' → logprob: -14.904752731323242
    7. ' ' → logprob: -14.904752731323242
    8. '(n' → logprob: -16.154752731323242
    9. '```' → logprob: -16.404752731323242
    10. '_n' → logprob: -16.529752731323242

Token 486: ' modulo' (ID: 112372)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.164523959159851
    2. '*' → logprob: -1.414523959159851
    3. ' ' → logprob: -1.414523959159851
    4. '
' → logprob: -2.7895240783691406
    5. '   ' → logprob: -3.0395240783691406
    6. ' 
' → logprob: -3.5395240783691406
    7. ',' → logprob: -4.539524078369141
    8. ')' → logprob: -4.664524078369141
    9. ' f' → logprob: -5.039524078369141
    10. '    
' → logprob: -5.164524078369141

Token 487: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3133748173713684
    2. 'M' → logprob: -1.3133747577667236
    3. ' ' → logprob: -9.188374519348145
    4. ' ' → logprob: -12.563374519348145
    5. '10' → logprob: -14.063374519348145
    6. ' 
' → logprob: -14.188374519348145
    7. ')' → logprob: -14.313374519348145
    8. '`' → logprob: -14.313374519348145
    9. '(M' → logprob: -14.688374519348145
    10. ' (' → logprob: -14.813374519348145

Token 488: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.390807569026947
    2. 'for' → logprob: -1.3908076286315918
    3. ':
' → logprob: -3.515807628631592
    4. ' for' → logprob: -3.765807628631592
    5. '   ' → logprob: -4.140807628631592
    6. '
' → logprob: -6.140807628631592
    7. ' :' → logprob: -7.390807628631592
    8. ' ' → logprob: -7.765807628631592
    9. 'n' → logprob: -7.765807628631592
    10. ',' → logprob: -8.140807151794434

Token 489: ' et' (ID: 859)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5781313180923462
    2. ' f' → logprob: -2.3281311988830566
    3. '   ' → logprob: -2.7031311988830566
    4. 'for' → logprob: -2.8281311988830566
    5. ' for' → logprob: -3.3281311988830566
    6. 'f' → logprob: -3.7031311988830566
    7. ' 
' → logprob: -3.7031311988830566
    8. ' n' → logprob: -4.078131198883057
    9. '    
' → logprob: -4.203131198883057
    10. '\' → logprob: -4.453131198883057

Token 490: ' nous' (ID: 6176)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.18769142031669617
    2. ' F' → logprob: -2.3126914501190186
    3. '   ' → logprob: -2.6876914501190186
    4. '    
' → logprob: -6.1876912117004395
    5. ' 
' → logprob: -7.5626912117004395
    6. ' f' → logprob: -7.8126912117004395
    7. 'f' → logprob: -8.312691688537598
    8. '
' → logprob: -8.812691688537598
    9. ' ' → logprob: -9.187691688537598
    10. '   
' → logprob: -9.187691688537598

Token 491: ' stock' (ID: 6546)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.028966225683689117
    2. ' F' → logprob: -4.028966426849365
    3. 'f' → logprob: -5.778966426849365
    4. '   ' → logprob: -6.028966426849365
    5. ' continue' → logprob: -6.278966426849365
    6. ' f' → logprob: -7.778966426849365
    7. ' ' → logprob: -8.028965950012207
    8. 'continue' → logprob: -8.153965950012207
    9. '=' → logprob: -8.278965950012207
    10. '    
' → logprob: -8.278965950012207

Token 492: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.021526968106627464
    2. 'er' → logprob: -4.64652681350708
    3. 'érons' → logprob: -5.02152681350708
    4. '   ' → logprob: -6.52152681350708
    5. 'e' → logprob: -6.64652681350708
    6. 'urons' → logprob: -8.021527290344238
    7. '       ' → logprob: -8.146527290344238
    8. '[' → logprob: -8.146527290344238
    9. 'ions' → logprob: -8.646527290344238
    10. '[]' → logprob: -8.646527290344238

Token 493: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3886154294013977
    2. ' f' → logprob: -1.138615369796753
    3. 'F' → logprob: -7.013615608215332
    4. '(f' → logprob: -8.138615608215332
    5. ' (' → logprob: -8.763615608215332
    6. ' F' → logprob: -9.263615608215332
    7. '   ' → logprob: -9.513615608215332
    8. '	f' → logprob: -9.763615608215332
    9. '(' → logprob: -10.138615608215332
    10. ' 
' → logprob: -10.763615608215332

Token 494: ' valeur' (ID: 41664)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.7477535009384155
    2. 'f' → logprob: -0.7477535009384155
    3. ' f' → logprob: -3.372753620147705
    4. ' F' → logprob: -4.872753620147705
    5. 'n' → logprob: -5.872753620147705
    6. '[' → logprob: -5.997753620147705
    7. ']' → logprob: -7.247753620147705
    8. '```' → logprob: -7.247753620147705
    9. '[f' → logprob: -7.747753620147705
    10. '%' → logprob: -7.747753620147705

Token 495: ' cour' (ID: 2871)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6320353150367737
    2. '[n' → logprob: -2.007035255432129
    3. ' f' → logprob: -2.257035255432129
    4. '[' → logprob: -2.632035255432129
    5. 'F' → logprob: -2.632035255432129
    6. '[f' → logprob: -2.882035255432129
    7. ' [' → logprob: -5.007035255432129
    8. '   ' → logprob: -5.382035255432129
    9. ' F' → logprob: -5.507035255432129
    10. '[F' → logprob: -5.757035255432129

Token 496: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.02966821938753128
    2. 'ant' → logprob: -3.9046683311462402
    3. 'r' → logprob: -4.90466833114624
    4. 'f' → logprob: -7.52966833114624
    5. '[i' → logprob: -8.029667854309082
    6. '[' → logprob: -8.404667854309082
    7. '[f' → logprob: -8.779667854309082
    8. ' f' → logprob: -9.654667854309082
    9. ' ' → logprob: -9.904667854309082
    10. 'n' → logprob: -10.029667854309082

Token 497: ' dans' (ID: 2671)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0264880657196045
    2. '=' → logprob: -1.6514880657196045
    3. ' f' → logprob: -1.9014880657196045
    4. '[n' → logprob: -2.1514880657196045
    5. '[' → logprob: -2.9014880657196045
    6. ' in' → logprob: -3.0264880657196045
    7. ' ' → logprob: -3.1514880657196045
    8. ' =' → logprob: -4.526488304138184
    9. '[f' → logprob: -5.151488304138184
    10. 'in' → logprob: -5.151488304138184

Token 498: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0004317420825827867
    2. ' F' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.250432014465332
    4. ' ' → logprob: -16.000431060791016
    5. 'f' → logprob: -16.125431060791016
    6. '`' → logprob: -16.250431060791016
    7. '
' → logprob: -16.750431060791016
    8. '```' → logprob: -17.250431060791016
    9. '	F' → logprob: -17.625431060791016
    10. ')' → logprob: -18.125431060791016

Token 499: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03339208662509918
    2. '[' → logprob: -3.5333921909332275
    3. '(n' → logprob: -5.908391952514648
    4. 'n' → logprob: -7.783391952514648
    5. '(' → logprob: -8.283391952514648
    6. '[f' → logprob: -8.908391952514648
    7. 'f' → logprob: -10.283391952514648
    8. '[i' → logprob: -10.783391952514648
    9. ' [' → logprob: -11.158391952514648
    10. ']' → logprob: -11.533391952514648

Token 500: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01174306683242321
    2. '])' → logprob: -5.011743068695068
    3. '[n' → logprob: -5.386743068695068
    4. ' ]' → logprob: -8.76174259185791
    5. ')' → logprob: -9.26174259185791
    6. ']
' → logprob: -9.88674259185791
    7. '[' → logprob: -10.26174259185791
    8. '],' → logprob: -10.38674259185791
    9. 'n' → logprob: -10.88674259185791
    10. '   ' → logprob: -11.88674259185791

Token 501: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0412171371281147
    2. ':
' → logprob: -4.16621732711792
    3. ':' → logprob: -4.29121732711792
    4. ' for' → logprob: -4.79121732711792
    5. 'n' → logprob: -6.04121732711792
    6. '
' → logprob: -8.416216850280762
    7. 'in' → logprob: -9.416216850280762
    8. '\n' → logprob: -10.166216850280762
    9. '   ' → logprob: -10.291216850280762
    10. '```' → logprob: -10.416216850280762

Token 502: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4741464853286743
    2. 'n' → logprob: -0.9741464853286743
    3. 'i' → logprob: -10.724146842956543
    4. ' i' → logprob: -11.099146842956543
    5. ' ' → logprob: -11.224146842956543
    6. '	n' → logprob: -11.349146842956543
    7. '_n' → logprob: -13.099146842956543
    8. '_' → logprob: -13.474146842956543
    9. ' f' → logprob: -13.724146842956543
    10. 'f' → logprob: -13.724146842956543

Token 503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05497965216636658
    2. 'in' → logprob: -2.9299795627593994
    3. ' ' → logprob: -10.42997932434082
    4. 'n' → logprob: -11.30497932434082
    5. '=' → logprob: -11.42997932434082
    6. '(' → logprob: -11.67997932434082
    7. '	in' → logprob: -11.67997932434082
    8. '1' → logprob: -12.55497932434082
    9. ' i' → logprob: -12.55497932434082
    10. ')' → logprob: -12.80497932434082

Token 504: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7627735137939453
    2. '1' → logprob: -1.7627735137939453
    3. ' range' → logprob: -1.7627735137939453
    4. 'range' → logprob: -2.2627735137939453
    5. ' R' → logprob: -2.5127735137939453
    6. ' ' → logprob: -5.262773513793945
    7. '(' → logprob: -9.387773513793945
    8. '(R' → logprob: -10.637773513793945
    9. '(range' → logprob: -10.637773513793945
    10. '   ' → logprob: -11.012773513793945

Token 505: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '(
' → logprob: -14.500000953674316
    3. ' (' → logprob: -14.500000953674316
    4. '1' → logprob: -16.625001907348633
    5. ',' → logprob: -18.875001907348633
    6. '
' → logprob: -21.125001907348633
    7. '((' → logprob: -21.250001907348633
    8. ')' → logprob: -21.375001907348633
    9. '(
' → logprob: -21.750001907348633
    10. '(

' → logprob: -22.125001907348633

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.900034299585968e-05
    2. '(' → logprob: -9.750088691711426
    3. ' ' → logprob: -10.625088691711426
    4. '   ' → logprob: -12.875088691711426
    5. ')' → logprob: -13.000088691711426
    6. ',' → logprob: -13.500088691711426
    7. '
' → logprob: -17.625089645385742
    8. '	' → logprob: -18.000089645385742
    9. ' (' → logprob: -18.000089645385742
    10. '),' → logprob: -18.000089645385742

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002745554083958268
    2. ',P' → logprob: -6.002745628356934
    3. ' ,' → logprob: -8.252745628356934
    4. ',N' → logprob: -12.377745628356934
    5. ',n' → logprob: -13.627745628356934
    6. ',p' → logprob: -13.752745628356934
    7. ',
' → logprob: -14.127745628356934
    8. ',F' → logprob: -14.377745628356934
    9. 'P' → logprob: -15.377745628356934
    10. ',B' → logprob: -15.502745628356934

Token 508: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0015023599844425917
    2. ' P' → logprob: -6.501502513885498
    3. ')' → logprob: -18.251502990722656
    4. '	P' → logprob: -18.501502990722656
    5. '(P' → logprob: -19.001502990722656
    6. '   ' → logprob: -19.001502990722656
    7. ',P' → logprob: -19.251502990722656
    8. ' ' → logprob: -19.751502990722656
    9. '_P' → logprob: -20.376502990722656
    10. ':P' → logprob: -20.626502990722656

Token 509: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013891622656956315
    2. '):
' → logprob: -6.626389026641846
    3. ')' → logprob: -10.001389503479004
    4. ':' → logprob: -11.751389503479004
    5. ' ):' → logprob: -11.751389503479004
    6. '):
' → logprob: -13.376389503479004
    7. '):

' → logprob: -15.376389503479004
    8. ',' → logprob: -15.501389503479004
    9. ']:' → logprob: -16.626388549804688
    10. '   ' → logprob: -17.126388549804688

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36739078164100647
    2. 'f' → logprob: -1.617390751838684
    3. ' f' → logprob: -2.2423908710479736
    4. '    
' → logprob: -6.6173906326293945
    5. '
' → logprob: -7.2423906326293945
    6. ' 
' → logprob: -7.9923906326293945
    7. '	f' → logprob: -8.492390632629395
    8. '```' → logprob: -9.492390632629395
    9. '       ' → logprob: -10.117390632629395
    10. ' ' → logprob: -10.617390632629395

Token 511: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004979863297194242
    2. ' f' → logprob: -8.000497817993164
    3. '   ' → logprob: -8.750497817993164
    4. '
' → logprob: -13.125497817993164
    5. '	f' → logprob: -14.000497817993164
    6. '    
' → logprob: -14.125497817993164
    7. '```' → logprob: -15.125497817993164
    8. ' 
' → logprob: -15.500497817993164
    9. ' ' → logprob: -17.500497817993164
    10. '_f' → logprob: -17.625497817993164

Token 512: ' Calcul' (ID: 57243)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.5107177862082608e-05
    2. '   ' → logprob: -11.000024795532227
    3. ' f' → logprob: -11.750024795532227
    4. '
' → logprob: -14.875024795532227
    5. '```' → logprob: -17.750024795532227
    6. '    
' → logprob: -18.000024795532227
    7. '	f' → logprob: -18.250024795532227
    8. '
' → logprob: -19.125024795532227
    9. ' ' → logprob: -19.875024795532227
    10. '       ' → logprob: -20.125024795532227

Token 513: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8203079700469971
    2. 'f' → logprob: -0.8203079700469971
    3. ' f' → logprob: -3.195307970046997
    4. ' =' → logprob: -3.195307970046997
    5. '   ' → logprob: -3.320307970046997
    6. '=f' → logprob: -8.195307731628418
    7. ' ' → logprob: -8.695307731628418
    8. '=
' → logprob: -8.945307731628418
    9. 'F' → logprob: -9.195307731628418
    10. ',' → logprob: -9.320307731628418

Token 514: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2570311427116394
    2. '(f' → logprob: -1.8820312023162842
    3. ' f' → logprob: -3.007031202316284
    4. ' (' → logprob: -3.882031202316284
    5. '(' → logprob: -5.632030963897705
    6. '(n' → logprob: -7.882030963897705
    7. '   ' → logprob: -8.382031440734863
    8. '(
' → logprob: -9.632031440734863
    9. 'n' → logprob: -10.882031440734863
    10. '	f' → logprob: -11.132031440734863

Token 515: ' factor' (ID: 12332)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06014903634786606
    2. '(f' → logprob: -3.1851489543914795
    3. ' f' → logprob: -4.685149192810059
    4. '(' → logprob: -5.935149192810059
    5. ' (' → logprob: -6.060149192810059
    6. '(n' → logprob: -6.060149192810059
    7. 'n' → logprob: -8.560149192810059
    8. '*f' → logprob: -9.560149192810059
    9. 'F' → logprob: -9.935149192810059
    10. '*' → logprob: -10.060149192810059

Token 516: 'ielle' (ID: 22380)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3619578182697296
    2. '*' → logprob: -2.1119577884674072
    3. 'ielle' → logprob: -2.3619577884674072
    4. 'iel' → logprob: -3.4869577884674072
    5. ' f' → logprob: -4.361958026885986
    6. '   ' → logprob: -4.361958026885986
    7. 'ial' → logprob: -5.111958026885986
    8. '=' → logprob: -5.236958026885986
    9. 'i' → logprob: -5.736958026885986
    10. ' ' → logprob: -5.736958026885986

Token 517: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3579714894294739
    2. ' =' → logprob: -1.607971429824829
    3. 'f' → logprob: -2.982971429824829
    4. '   ' → logprob: -3.607971429824829
    5. ' f' → logprob: -4.357971668243408
    6. ' *=' → logprob: -5.232971668243408
    7. '*=' → logprob: -6.732971668243408
    8. '
' → logprob: -7.107971668243408
    9. ' ' → logprob: -7.482971668243408
    10. ',' → logprob: -7.607971668243408

Token 518: '!' (ID: 0)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8776959180831909
    2. '=' → logprob: -1.502695918083191
    3. ' *' → logprob: -1.752695918083191
    4. '   ' → logprob: -2.6276960372924805
    5. ' =' → logprob: -2.8776960372924805
    6. ' ' → logprob: -3.8776960372924805
    7. ',' → logprob: -4.6276960372924805
    8. 'f' → logprob: -5.0026960372924805
    9. ' *=' → logprob: -5.0026960372924805
    10. ' f' → logprob: -5.2526960372924805

Token 519: ' modulo' (ID: 112372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.428426057100296
    2. ' =' → logprob: -1.4284260272979736
    3. 'f' → logprob: -2.6784260272979736
    4. '   ' → logprob: -3.5534260272979736
    5. ' f' → logprob: -4.803426265716553
    6. ',' → logprob: -7.303426265716553
    7. '=f' → logprob: -7.428426265716553
    8. ':' → logprob: -7.803426265716553
    9. ' *=' → logprob: -7.928426265716553
    10. '	f' → logprob: -8.303425788879395

Token 520: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.11313469707965851
    2. ' M' → logprob: -2.6131346225738525
    3. 'f' → logprob: -4.238134860992432
    4. 'n' → logprob: -4.488134860992432
    5. '   ' → logprob: -6.363134860992432
    6. ' n' → logprob: -6.488134860992432
    7. '(M' → logprob: -6.738134860992432
    8. ' f' → logprob: -6.863134860992432
    9. ' (' → logprob: -7.238134860992432
    10. '(n' → logprob: -7.488134860992432

Token 521: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23571032285690308
    2. 'f' → logprob: -1.7357103824615479
    3. ' =' → logprob: -3.610710382461548
    4. ' f' → logprob: -5.735710144042969
    5. '   ' → logprob: -5.860710144042969
    6. '=f' → logprob: -8.360710144042969
    7. '=
' → logprob: -9.860710144042969
    8. '*' → logprob: -10.110710144042969
    9. ' ' → logprob: -10.110710144042969
    10. ',' → logprob: -10.235710144042969

Token 522: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.15333496034145355
    2. ' f' → logprob: -2.153334856033325
    3. '   ' → logprob: -3.653334856033325
    4. ' 
' → logprob: -9.653334617614746
    5. '    
' → logprob: -9.903334617614746
    6. '	f' → logprob: -10.528334617614746
    7. '```' → logprob: -12.653334617614746
    8. ' ' → logprob: -13.028334617614746
    9. '    ' → logprob: -13.278334617614746
    10. '
' → logprob: -13.653334617614746

Token 523: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.000972921319771558
    2. '   ' → logprob: -7.250972747802734
    3. ' f' → logprob: -8.250972747802734
    4. '	f' → logprob: -13.500972747802734
    5. '
' → logprob: -14.750972747802734
    6. '    
' → logprob: -16.375972747802734
    7. '```' → logprob: -16.750972747802734
    8. ' ' → logprob: -18.125972747802734
    9. '   ' → logprob: -18.375972747802734
    10. ' 
' → logprob: -18.500972747802734

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0488799586892128
    2. ' =' → logprob: -3.048879861831665
    3. '*=' → logprob: -8.423879623413086
    4. ' *=' → logprob: -9.798879623413086
    5. '*' → logprob: -11.173879623413086
    6. ' ' → logprob: -14.173879623413086
    7. '=f' → logprob: -14.173879623413086
    8. '   ' → logprob: -14.298879623413086
    9. '	' → logprob: -14.923879623413086
    10. ',' → logprob: -15.423879623413086

Token 525: ' f' (ID: 285)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0049383086152374744
    2. 'f' → logprob: -5.629938125610352
    3. ' (' → logprob: -6.754938125610352
    4. '(' → logprob: -9.254938125610352
    5. ' f' → logprob: -9.504938125610352
    6. '	f' → logprob: -14.254938125610352
    7. '   ' → logprob: -14.254938125610352
    8. ' ' → logprob: -15.004938125610352
    9. '(
' → logprob: -16.62993812561035
    10. ' ' → logprob: -16.87993812561035

Token 526: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10032269358634949
    2. ' *' → logprob: -2.350322723388672
    3. '*f' → logprob: -9.100322723388672
    4. ' ' → logprob: -12.725322723388672
    5. '*n' → logprob: -14.225322723388672
    6. ' ' → logprob: -15.475322723388672
    7. '**' → logprob: -15.975322723388672
    8. ' f' → logprob: -16.725322723388672
    9. '
' → logprob: -17.600322723388672
    10. '#' → logprob: -17.600322723388672

Token 527: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033546582562848926
    2. ' n' → logprob: -8.000335693359375
    3. '	n' → logprob: -18.375335693359375
    4. '   ' → logprob: -19.375335693359375
    5. ' ' → logprob: -21.500335693359375
    6. '(n' → logprob: -21.875335693359375
    7. '```' → logprob: -22.000335693359375
    8. '%n' → logprob: -22.125335693359375
    9. '
' → logprob: -22.250335693359375
    10. '_n' → logprob: -22.625335693359375

Token 528: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.033655036240816116
    2. '%' → logprob: -3.4086549282073975
    3. ')' → logprob: -11.783655166625977
    4. '
' → logprob: -14.908655166625977
    5. ' ' → logprob: -15.033655166625977
    6. '%n' → logprob: -15.158655166625977
    7. ' ' → logprob: -15.783655166625977
    8. '%B' → logprob: -16.033655166625977
    9. ' %=' → logprob: -16.283655166625977
    10. '%c' → logprob: -16.408655166625977

Token 529: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0019286326132714748
    2. ' M' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.376928329467773
    4. '(M' → logprob: -19.251928329467773
    5. '	M' → logprob: -19.251928329467773
    6. '```' → logprob: -20.751928329467773
    7. '`' → logprob: -20.876928329467773
    8. '998' → logprob: -21.126928329467773
    9. '\M' → logprob: -21.126928329467773
    10. '<M' → logprob: -21.251928329467773

Token 530: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002022974193096161
    2. '
' → logprob: -6.377022743225098
    3. 'F' → logprob: -8.502022743225098
    4. '    
' → logprob: -9.502022743225098
    5. '<|end|>' → logprob: -10.877022743225098
    6. ' F' → logprob: -11.627022743225098
    7. ')' → logprob: -12.377022743225098
    8. '  
' → logprob: -13.002022743225098
    9. ',' → logprob: -13.002022743225098
    10. '  ' → logprob: -14.127022743225098

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02656315080821514
    2. 'F' → logprob: -3.6515631675720215
    3. ' F' → logprob: -8.776562690734863
    4. '    
' → logprob: -9.901562690734863
    5. '
' → logprob: -10.526562690734863
    6. '<|end|>' → logprob: -11.776562690734863
    7. '```' → logprob: -11.776562690734863
    8. '	F' → logprob: -11.901562690734863
    9. ')' → logprob: -12.901562690734863
    10. '   ' → logprob: -13.776562690734863

Token 532: ' #' (ID: 1069)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0002394170151092112
    2. '   ' → logprob: -8.500239372253418
    3. ' F' → logprob: -10.250239372253418
    4. '	F' → logprob: -14.875239372253418
    5. '    
' → logprob: -15.875239372253418
    6. '```' → logprob: -16.750240325927734
    7. '  ' → logprob: -17.250240325927734
    8. ' ' → logprob: -17.250240325927734
    9. 'f' → logprob: -17.625240325927734
    10. '
' → logprob: -17.875240325927734

Token 533: ' Stock' (ID: 16382)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -8.537868779967539e-06
    2. ' F' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.375008583068848
    4. ' ' → logprob: -19.50000762939453
    5. 'f' → logprob: -19.62500762939453
    6. '#' → logprob: -20.87500762939453
    7. '```' → logprob: -21.12500762939453
    8. '  ' → logprob: -21.62500762939453
    9. '(F' → logprob: -21.75000762939453
    10. '
' → logprob: -21.75000762939453

Token 534: 'age' (ID: 477)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.1072927862405777
    2. 'er' → logprob: -2.357292890548706
    3. '   ' → logprob: -5.857292652130127
    4. 'age' → logprob: -6.232292652130127
    5. '[' → logprob: -6.607292652130127
    6. '[F' → logprob: -7.982292652130127
    7. 'e' → logprob: -8.857293128967285
    8. ' F' → logprob: -8.982293128967285
    9. '       ' → logprob: -9.107293128967285
    10. '#' → logprob: -10.482293128967285

Token 535: ' du' (ID: 1462)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.006372744217514992
    2. ' F' → logprob: -5.131372928619385
    3. '   ' → logprob: -8.131372451782227
    4. 'f' → logprob: -9.756372451782227
    5. '
' → logprob: -10.756372451782227
    6. '<|end|>' → logprob: -11.256372451782227
    7. '[' → logprob: -11.881372451782227
    8. ' ' → logprob: -12.381372451782227
    9. 's' → logprob: -12.631372451782227
    10. ',' → logprob: -12.631372451782227

Token 536: ' résultat' (ID: 62556)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00477934954687953
    2. 'F' → logprob: -5.37977933883667
    3. 'n' → logprob: -9.004779815673828
    4. ' f' → logprob: -10.254779815673828
    5. ' F' → logprob: -15.504779815673828
    6. '_f' → logprob: -15.879779815673828
    7. ' n' → logprob: -16.004779815673828
    8. '```' → logprob: -16.379779815673828
    9. '	f' → logprob: -16.504779815673828
    10. '`' → logprob: -16.754779815673828

Token 537: ' dans' (ID: 2671)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.012618420645594597
    2. ' F' → logprob: -4.387618541717529
    3. '   ' → logprob: -9.637618064880371
    4. 'f' → logprob: -11.262618064880371
    5. ' in' → logprob: -11.387618064880371
    6. ' dans' → logprob: -12.262618064880371
    7. '
' → logprob: -12.387618064880371
    8. '    
' → logprob: -13.262618064880371
    9. '[' → logprob: -13.262618064880371
    10. '[n' → logprob: -13.637618064880371

Token 538: ' la' (ID: 557)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00020354038861114532
    2. ' F' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.37520408630371
    4. '	F' → logprob: -20.75020408630371
    5. '(F' → logprob: -20.87520408630371
    6. ' ' → logprob: -20.87520408630371
    7. 'f' → logprob: -20.87520408630371
    8. '
' → logprob: -21.00020408630371
    9. '```' → logprob: -21.00020408630371
    10. '`' → logprob: -21.12520408630371

Token 539: ' liste' (ID: 31719)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -5.512236498361744e-07
    2. ' F' → logprob: -14.625000953674316
    3. '[F' → logprob: -21.0
    4. '   ' → logprob: -22.0
    5. 'f' → logprob: -22.25
    6. '[' → logprob: -22.25
    7. '#' → logprob: -22.375
    8. '`' → logprob: -23.125
    9. '```' → logprob: -23.5
    10. '
' → logprob: -24.125

Token 540: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -4.961759259458631e-06
    2. ' F' → logprob: -12.250004768371582
    3. '```' → logprob: -16.7500057220459
    4. '`' → logprob: -17.2500057220459
    5. '[F' → logprob: -17.6250057220459
    6. '(F' → logprob: -17.6250057220459
    7. '[' → logprob: -17.6250057220459
    8. '   ' → logprob: -18.1250057220459
    9. 'f' → logprob: -18.6250057220459
    10. '[n' → logprob: -19.0000057220459

Token 541: ' à' (ID: 1221)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.375003814697266
    3. 'F' → logprob: -13.500003814697266
    4. '[f' → logprob: -14.375003814697266
    5. '[F' → logprob: -15.500003814697266
    6. 'n' → logprob: -16.000003814697266
    7. ' [' → logprob: -16.625003814697266
    8. '[N' → logprob: -18.125003814697266
    9. '   ' → logprob: -18.125003814697266
    10. '\[' → logprob: -18.500003814697266

Token 542: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003433296224102378
    2. '[n' → logprob: -8.000343322753906
    3. ' n' → logprob: -11.750343322753906
    4. '[' → logprob: -18.125343322753906
    5. 'f' → logprob: -18.875343322753906
    6. '```' → logprob: -18.875343322753906
    7. '	n' → logprob: -19.000343322753906
    8. '   ' → logprob: -19.750343322753906
    9. '_n' → logprob: -21.375343322753906
    10. ' ' → logprob: -21.375343322753906

Token 543: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. '[n' → logprob: -14.000001907348633
    3. ' n' → logprob: -14.375001907348633
    4. 'f' → logprob: -18.000001907348633
    5. 'indice' → logprob: -18.125001907348633
    6. '```' → logprob: -18.750001907348633
    7. 'niveau' → logprob: -19.250001907348633
    8. 'nt' → logprob: -19.750001907348633
    9. '
' → logprob: -19.875001907348633
    10. 'nth' → logprob: -20.125001907348633

Token 544: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007117166533134878
    2. '[n' → logprob: -7.250711917877197
    3. ' n' → logprob: -13.250711441040039
    4. '[' → logprob: -19.12571144104004
    5. '	n' → logprob: -20.50071144104004
    6. '```' → logprob: -20.50071144104004
    7. '   ' → logprob: -20.75071144104004
    8. ' [' → logprob: -22.62571144104004
    9. '_n' → logprob: -23.12571144104004
    10. '[
' → logprob: -23.37571144104004

Token 545: '.
' (ID: 558)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0007581694517284632
    2. 'F' → logprob: -7.500758171081543
    3. '   ' → logprob: -9.250758171081543
    4. '[' → logprob: -9.500758171081543
    5. '[F' → logprob: -11.375758171081543
    6. 'n' → logprob: -11.875758171081543
    7. ' F' → logprob: -12.500758171081543
    8. '
' → logprob: -13.000758171081543
    9. '[f' → logprob: -13.125758171081543
    10. ']' → logprob: -13.250758171081543

Token 546: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00019293125660624355
    2. ' F' → logprob: -8.625192642211914
    3. '   ' → logprob: -11.625192642211914
    4. '```' → logprob: -12.750192642211914
    5. '[' → logprob: -13.750192642211914
    6. '
' → logprob: -15.875192642211914
    7. '    
' → logprob: -16.375192642211914
    8. '[F' → logprob: -16.750192642211914
    9. '  
' → logprob: -17.125192642211914
    10. '`' → logprob: -17.375192642211914

Token 547: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -3.128163257315464e-07
    2. ' F' → logprob: -15.5
    3. '   ' → logprob: -19.125
    4. '```' → logprob: -20.625
    5. 'f' → logprob: -21.0
    6. '`' → logprob: -21.75
    7. '[' → logprob: -23.0
    8. '[F' → logprob: -24.625
    9. '#' → logprob: -24.75
    10. '``' → logprob: -24.75

Token 548: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.25000286102295
    3. '[f' → logprob: -13.62500286102295
    4. 'n' → logprob: -16.125003814697266
    5. ' [' → logprob: -16.875003814697266
    6. '[N' → logprob: -17.750003814697266
    7. '```' → logprob: -17.875003814697266
    8. '\[' → logprob: -18.000003814697266
    9. '[F' → logprob: -18.375003814697266
    10. '   ' → logprob: -20.125003814697266

Token 549: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011714138090610504
    2. ']=' → logprob: -6.876171588897705
    3. ' ]' → logprob: -9.126171112060547
    4. '=' → logprob: -10.501171112060547
    5. ' =' → logprob: -13.876171112060547
    6. '[n' → logprob: -14.501171112060547
    7. '[' → logprob: -15.001171112060547
    8. ')' → logprob: -15.751171112060547
    9. ']
' → logprob: -16.376171112060547
    10. 'n' → logprob: -17.126171112060547

Token 550: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00026765360962599516
    2. ' =' → logprob: -8.25026798248291
    3. '=f' → logprob: -12.00026798248291
    4. '.=' → logprob: -16.625267028808594
    5. '=n' → logprob: -16.625267028808594
    6. '=}' → logprob: -17.750267028808594
    7. '=

' → logprob: -18.000267028808594
    8. '==' → logprob: -18.125267028808594
    9. '=int' → logprob: -18.625267028808594
    10. '＝' → logprob: -18.625267028808594

Token 551: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0001234428636962548
    2. ' f' → logprob: -9.000123023986816
    3. '	f' → logprob: -18.125123977661133
    4. '   ' → logprob: -22.875123977661133
    5. '_f' → logprob: -23.125123977661133
    6. 'ф' → logprob: -23.375123977661133
    7. '```' → logprob: -23.625123977661133
    8. '(f' → logprob: -23.875123977661133
    9. ' ' → logprob: -24.000123977661133
    10. '$f' → logprob: -24.625123977661133

Token 552: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5376716256141663
    2. 'I' → logprob: -0.9126716256141663
    3. 'for' → logprob: -4.4126715660095215
    4. '<|end|>' → logprob: -6.5376715660095215
    5. 'f' → logprob: -8.41267204284668
    6. '```' → logprob: -8.53767204284668
    7. '
' → logprob: -9.28767204284668
    8. '<|end|>' → logprob: -9.41267204284668
    9. '

' → logprob: -10.03767204284668
    10. '  
' → logprob: -10.53767204284668

Token 553: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7554532885551453
    2. 'for' → logprob: -0.8804532885551453
    3. 'I' → logprob: -2.25545334815979
    4. 'i' → logprob: -5.255453109741211
    5. '```' → logprob: -6.005453109741211
    6. 'f' → logprob: -6.130453109741211
    7. '<|end|>' → logprob: -8.005453109741211
    8. 'n' → logprob: -8.130453109741211
    9. ' for' → logprob: -9.130453109741211
    10. '
' → logprob: -10.005453109741211

Token 554: ' Calcul' (ID: 57243)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.009129855781793594
    2. '#' → logprob: -4.759130001068115
    3. 'f' → logprob: -7.759130001068115
    4. 'for' → logprob: -9.384129524230957
    5. 'i' → logprob: -13.009129524230957
    6. 'def' → logprob: -14.009129524230957
    7. '```' → logprob: -14.759129524230957
    8. ' I' → logprob: -15.259129524230957
    9. 'g' → logprob: -15.634129524230957
    10. '[I' → logprob: -16.509130477905273

Token 555: ' de' (ID: 334)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.24228081107139587
    2. '#' → logprob: -2.2422807216644287
    3. 'de' → logprob: -2.4922807216644287
    4. 'd' → logprob: -4.617280960083008
    5. 'inverse' → logprob: -5.367280960083008
    6. ' de' → logprob: -5.867280960083008
    7. '=' → logprob: -6.117280960083008
    8. 'F' → logprob: -6.117280960083008
    9. ' =' → logprob: -6.617280960083008
    10. 'inv' → logprob: -7.242280960083008

Token 556: ' l' (ID: 305)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.03881444036960602
    2. 'pow' → logprob: -3.2888145446777344
    3. 'f' → logprob: -7.663814544677734
    4. 'F' → logprob: -8.913814544677734
    5. ' I' → logprob: -9.663814544677734
    6. 'i' → logprob: -10.163814544677734
    7. '(I' → logprob: -10.413814544677734
    8. ' pow' → logprob: -10.913814544677734
    9. '(pow' → logprob: -12.288814544677734
    10. '#' → logprob: -13.163814544677734

Token 557: ''in' (ID: 17942)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.021770669147372246
    2. '#' → logprob: -4.521770477294922
    3. 'a' → logprob: -4.896770477294922
    4. 'F' → logprob: -6.646770477294922
    5. 'f' → logprob: -7.771770477294922
    6. 'n' → logprob: -7.771770477294922
    7. 'inverse' → logprob: -7.771770477294922
    8. '`' → logprob: -9.271770477294922
    9. '```' → logprob: -9.646770477294922
    10. 'i' → logprob: -9.646770477294922

Token 558: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.3421788811683655
    2. 'I' → logprob: -1.9671788215637207
    3. 'v' → logprob: -1.9671788215637207
    4. '#' → logprob: -5.967178821563721
    5. 'vers' → logprob: -5.967178821563721
    6. '[I' → logprob: -6.467178821563721
    7. 'F' → logprob: -6.842178821563721
    8. '```' → logprob: -7.592178821563721
    9. 'i' → logprob: -7.717178821563721
    10. '[' → logprob: -7.967178821563721

Token 559: ' mod' (ID: 1812)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10118883103132248
    2. 'F' → logprob: -2.726188898086548
    3. 'I' → logprob: -3.851188898086548
    4. '=' → logprob: -5.726188659667969
    5. ' =' → logprob: -6.101188659667969
    6. 'de' → logprob: -6.601188659667969
    7. 'inverse' → logprob: -7.101188659667969
    8. '#' → logprob: -7.851188659667969
    9. 'of' → logprob: -7.851188659667969
    10. '_f' → logprob: -8.351188659667969

Token 560: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.5790770649909973
    2. 'u' → logprob: -1.7040770053863525
    3. 'F' → logprob: -2.2040770053863525
    4. 'f' → logprob: -2.7040770053863525
    5. 'ulo' → logprob: -2.7040770053863525
    6. 'I' → logprob: -5.954077243804932
    7. 'ular' → logprob: -6.579077243804932
    8. 'inv' → logprob: -6.829077243804932
    9. 'ual' → logprob: -6.954077243804932
    10. ' =' → logprob: -7.329077243804932

Token 561: ' de' (ID: 334)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.5624719858169556
    2. '=' → logprob: -1.6874719858169556
    3. ' =' → logprob: -1.8124719858169556
    4. 'F' → logprob: -3.062471866607666
    5. 'f' → logprob: -3.437471866607666
    6. '#' → logprob: -6.312471866607666
    7. '[' → logprob: -8.437472343444824
    8. '[I' → logprob: -8.437472343444824
    9. 'def' → logprob: -8.687472343444824
    10. '=f' → logprob: -9.187472343444824

Token 562: ' N' (ID: 478)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.3132935166358948
    2. 'f' → logprob: -1.31329345703125
    3. '(F' → logprob: -10.81329345703125
    4. '(f' → logprob: -12.18829345703125
    5. ' f' → logprob: -13.31329345703125
    6. ' F' → logprob: -13.31329345703125
    7. '```' → logprob: -14.43829345703125
    8. 'def' → logprob: -14.56329345703125
    9. '#' → logprob: -14.81329345703125
    10. '[F' → logprob: -15.06329345703125

Token 563: '!' (ID: 0)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.063675045967102
    2. 'F' → logprob: -1.188675045967102
    3. '=' → logprob: -1.563675045967102
    4. ' =' → logprob: -2.1886749267578125
    5. 'I' → logprob: -4.6886749267578125
    6. '[' → logprob: -5.3136749267578125
    7. 'pow' → logprob: -5.8136749267578125
    8. '#' → logprob: -6.0636749267578125
    9. 'inv' → logprob: -6.3136749267578125
    10. 'n' → logprob: -7.3136749267578125

Token 564: ' modulo' (ID: 112372)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0011234297417104244
    2. 'F' → logprob: -7.251123428344727
    3. '=' → logprob: -8.251123428344727
    4. 'f' → logprob: -9.501123428344727
    5. 'pow' → logprob: -9.876123428344727
    6. ' =' → logprob: -10.876123428344727
    7. ' I' → logprob: -13.001123428344727
    8. '```' → logprob: -13.376123428344727
    9. '#' → logprob: -13.501123428344727
    10. '`' → logprob: -14.751123428344727

Token 565: ' M' (ID: 391)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.08518470823764801
    2. 'M' → logprob: -2.8351848125457764
    3. 'f' → logprob: -4.085184574127197
    4. 'N' → logprob: -5.210184574127197
    5. 'pow' → logprob: -8.085185050964355
    6. 'P' → logprob: -8.960185050964355
    7. '(F' → logprob: -9.585185050964355
    8. '(M' → logprob: -10.085185050964355
    9. '(f' → logprob: -10.710185050964355
    10. '998' → logprob: -10.710185050964355

Token 566: ' à' (ID: 1221)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0002756366156972945
    2. ' =' → logprob: -9.000275611877441
    3. 'f' → logprob: -9.375275611877441
    4. ' I' → logprob: -10.375275611877441
    5. '=' → logprob: -10.750275611877441
    6. '[I' → logprob: -12.000275611877441
    7. '```' → logprob: -13.375275611877441
    8. 'F' → logprob: -13.500275611877441
    9. ',' → logprob: -13.875275611877441
    10. 'i' → logprob: -14.125275611877441

Token 567: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.003935564309358597
    2. 'F' → logprob: -5.87893533706665
    3. 'f' → logprob: -6.87893533706665
    4. 'p' → logprob: -10.503935813903809
    5. ' pow' → logprob: -10.628935813903809
    6. '(pow' → logprob: -11.128935813903809
    7. '1' → logprob: -11.253935813903809
    8. 'Pow' → logprob: -12.003935813903809
    9. 'u' → logprob: -13.003935813903809
    10. 'M' → logprob: -13.128935813903809

Token 568: ''aide' (ID: 75684)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.07793375849723816
    2. 'pow' → logprob: -3.0779337882995605
    3. 'M' → logprob: -4.5779337882995605
    4. 'f' → logprob: -5.5779337882995605
    5. '=' → logprob: -5.7029337882995605
    6. '(F' → logprob: -6.0779337882995605
    7. '(M' → logprob: -6.2029337882995605
    8. '#' → logprob: -6.3279337882995605
    9. '```' → logprob: -7.2029337882995605
    10. ')' → logprob: -7.3279337882995605

Token 569: ' de' (ID: 334)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0036100437864661217
    2. '(pow' → logprob: -5.753610134124756
    3. ' pow' → logprob: -8.003609657287598
    4. 'def' → logprob: -10.003609657287598
    5. 'de' → logprob: -10.878609657287598
    6. 'p' → logprob: -11.628609657287598
    7. 'd' → logprob: -12.378609657287598
    8. ' de' → logprob: -12.503609657287598
    9. '#' → logprob: -12.503609657287598
    10. '=' → logprob: -13.003609657287598

Token 570: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -3.8889261304575484e-06
    2. ' pow' → logprob: -13.000003814697266
    3. '(pow' → logprob: -13.625003814697266
    4. '```' → logprob: -15.250003814697266
    5. 'Pow' → logprob: -17.125003814697266
    6. 'M' → logprob: -17.250003814697266
    7. 'power' → logprob: -18.250003814697266
    8. 'F' → logprob: -18.375003814697266
    9. '_pow' → logprob: -18.500003814697266
    10. 'p' → logprob: -19.250003814697266

Token 571: ' fonction' (ID: 17610)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0280383548888494e-06
    2. ' pow' → logprob: -14.875000953674316
    3. '```' → logprob: -15.500000953674316
    4. '(pow' → logprob: -15.500000953674316
    5. 'p' → logprob: -17.625001907348633
    6. 'power' → logprob: -17.625001907348633
    7. 'def' → logprob: -18.125001907348633
    8. 'M' → logprob: -18.125001907348633
    9. 'f' → logprob: -18.500001907348633
    10. 'Pow' → logprob: -18.500001907348633

Token 572: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.9361264946837764e-07
    2. ' pow' → logprob: -16.125
    3. '(pow' → logprob: -18.25
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -19.5
    6. '
' → logprob: -19.875
    7. 'Pow' → logprob: -20.0
    8. 'power' → logprob: -20.375
    9. '_pow' → logprob: -21.125
    10. 'print' → logprob: -21.125

Token 573: '().
' (ID: 58434)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0717405378818512
    2. 'pow' → logprob: -3.6967406272888184
    3. '(' → logprob: -4.196740627288818
    4. 'f' → logprob: -4.571740627288818
    5. '(pow' → logprob: -4.571740627288818
    6. '(F' → logprob: -4.946740627288818
    7. '(
' → logprob: -7.821740627288818
    8. 'F' → logprob: -8.32174015045166
    9. '```' → logprob: -8.44674015045166
    10. ',' → logprob: -8.69674015045166

Token 574: '#' (ID: 2)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.002698474330827594
    2. 'f' → logprob: -6.1276984214782715
    3. 'inv' → logprob: -7.8776984214782715
    4. 'i' → logprob: -10.00269889831543
    5. 'g' → logprob: -10.75269889831543
    6. '```' → logprob: -10.87769889831543
    7. 'fi' → logprob: -11.25269889831543
    8. 'F' → logprob: -11.50269889831543
    9. 'x' → logprob: -12.87769889831543
    10. '`' → logprob: -12.87769889831543

Token 575: ' pow' (ID: 9779)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00024037064576987177
    2. 'f' → logprob: -8.875240325927734
    3. 'inv' → logprob: -10.250240325927734
    4. 'i' → logprob: -10.625240325927734
    5. ' I' → logprob: -10.875240325927734
    6. 'F' → logprob: -12.250240325927734
    7. 'g' → logprob: -12.500240325927734
    8. 'fi' → logprob: -12.750240325927734
    9. '```' → logprob: -13.250240325927734
    10. 'fin' → logprob: -13.375240325927734

Token 576: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6470152735710144
    2. '(F' → logprob: -0.7720152735710144
    3. '(' → logprob: -4.27201509475708
    4. 'f' → logprob: -8.272015571594238
    5. 'F' → logprob: -10.147015571594238
    6. '(
' → logprob: -10.772015571594238
    7. '(N' → logprob: -10.772015571594238
    8. 'def' → logprob: -13.147015571594238
    9. '(

' → logprob: -13.147015571594238
    10. '```' → logprob: -13.147015571594238

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14842171967029572
    2. ',f' → logprob: -2.2734217643737793
    3. '(f' → logprob: -3.3984217643737793
    4. '(' → logprob: -6.898421764373779
    5. 'f' → logprob: -9.023421287536621
    6. ')' → logprob: -9.023421287536621
    7. ' ,' → logprob: -9.398421287536621
    8. ',M' → logprob: -9.648421287536621
    9. ',F' → logprob: -9.773421287536621
    10. '(F' → logprob: -11.148421287536621

Token 578: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0001858982432167977
    2. '-' → logprob: -8.8751859664917
    3. ' M' → logprob: -10.2501859664917
    4. '-M' → logprob: -11.8751859664917
    5. '	M' → logprob: -14.1251859664917
    6. '(M' → logprob: -14.2501859664917
    7. '<|end|>' → logprob: -14.8751859664917
    8. '<M' → logprob: -15.0001859664917
    9. '\M' → logprob: -15.1251859664917
    10. ',M' → logprob: -15.5001859664917

Token 579: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.506661833962426e-05
    2. ' -' → logprob: -9.37508487701416
    3. '```' → logprob: -15.75008487701416
    4. '−' → logprob: -17.125085830688477
    5. '–' → logprob: -17.875085830688477
    6. ')' → logprob: -18.000085830688477
    7. '#' → logprob: -19.500085830688477
    8. '-M' → logprob: -19.625085830688477
    9. ' ' → logprob: -20.000085830688477
    10. '<|end|>' → logprob: -20.250085830688477

Token 580: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '-' → logprob: -14.000001907348633
    3. '```' → logprob: -14.750001907348633
    4. '

' → logprob: -15.375001907348633
    5. ' ' → logprob: -16.187501907348633
    6. '۲' → logprob: -17.062501907348633
    7. '
' → logprob: -17.500001907348633
    8. '' → logprob: -18.187501907348633
    9. '٢' → logprob: -18.187501907348633
    10. '২' → logprob: -18.312501907348633

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038088537752628326
    2. ')' → logprob: -3.28808856010437
    3. ' ,' → logprob: -10.28808879852295
    4. '}' → logprob: -13.03808879852295
    5. ' )' → logprob: -13.03808879852295
    6. ',f' → logprob: -13.28808879852295
    7. ',
' → logprob: -13.28808879852295
    8. '```' → logprob: -14.16308879852295
    9. ',)' → logprob: -14.28808879852295
    10. '(' → logprob: -14.41308879852295

Token 582: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0011703446507453918
    2. ' M' → logprob: -6.7511701583862305
    3. ')' → logprob: -15.75117015838623
    4. ' ' → logprob: -16.751171112060547
    5. ' ' → logprob: -17.501171112060547
    6. '   ' → logprob: -17.876171112060547
    7. '	M' → logprob: -18.251171112060547
    8. '```' → logprob: -18.876171112060547
    9. '998' → logprob: -19.001171112060547
    10. '[M' → logprob: -19.626171112060547

Token 583: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ' )' → logprob: -13.125004768371582
    3. ',' → logprob: -13.875004768371582
    4. '),' → logprob: -14.000004768371582
    5. ')
' → logprob: -14.250004768371582
    6. ')

' → logprob: -16.1250057220459
    7. ')`' → logprob: -16.2500057220459
    8. '))' → logprob: -16.5000057220459
    9. ')}' → logprob: -16.6250057220459
    10. ').' → logprob: -17.2500057220459

Token 584: ' utilise' (ID: 70283)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.524715006351471
    2. ' =' → logprob: -1.5247149467468262
    3. 'I' → logprob: -1.7747149467468262
    4. ')' → logprob: -4.649714946746826
    5. 'f' → logprob: -5.274714946746826
    6. 'F' → logprob: -6.274714946746826
    7. 'inverse' → logprob: -6.649714946746826
    8. 'inv' → logprob: -6.774714946746826
    9. '_inv' → logprob: -7.649714946746826
    10. ',' → logprob: -8.399715423583984

Token 585: ' le' (ID: 505)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3573650121688843
    2. 'pow' → logprob: -1.4823650121688843
    3. '<|end|>' → logprob: -3.232365131378174
    4. '(pow' → logprob: -3.732365131378174
    5. '(f' → logprob: -5.107365131378174
    6. 'mod' → logprob: -6.857365131378174
    7. '(' → logprob: -7.107365131378174
    8. '3' → logprob: -7.982365131378174
    9. 'F' → logprob: -8.107364654541016
    10. 'M' → logprob: -8.982364654541016

Token 586: ' petit' (ID: 20577)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.008336314000189304
    2. 'M' → logprob: -4.883336544036865
    3. 'mod' → logprob: -7.633336544036865
    4. '3' → logprob: -9.383336067199707
    5. 'builtin' → logprob: -9.508336067199707
    6. 'ex' → logprob: -11.133336067199707
    7. 'f' → logprob: -11.383336067199707
    8. 'inverse' → logprob: -11.508336067199707
    9. ' pow' → logprob: -12.133336067199707
    10. 'F' → logprob: -12.133336067199707

Token 587: ' thé' (ID: 34740)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9127019047737122
    2. 'pr' → logprob: -1.4127018451690674
    3. '```' → logprob: -2.0377018451690674
    4. 'p' → logprob: -2.7877018451690674
    5. 'prime' → logprob: -2.9127018451690674
    6. 'mod' → logprob: -3.6627018451690674
    7. 'f' → logprob: -4.4127020835876465
    8. ' ' → logprob: -4.5377020835876465
    9. 'pox' → logprob: -5.0377020835876465
    10. 'print' → logprob: -5.4127020835876465

Token 588: 'or' (ID: 267)
  Prédit: 'orem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orem' → logprob: -0.8181629180908203
    2. 'm' → logprob: -1.6931629180908203
    3. 'or' → logprob: -1.8181629180908203
    4. 'me' → logprob: -2.3181629180908203
    5. '```' → logprob: -3.3181629180908203
    6. 'ore' → logprob: -3.5681629180908203
    7. 're' → logprob: -4.44316291809082
    8. 'p' → logprob: -4.69316291809082
    9. '1' → logprob: -5.69316291809082
    10. 'rem' → logprob: -6.06816291809082

Token 589: 'ème' (ID: 9767)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.19824911653995514
    2. 'ème' → logprob: -1.823249101638794
    3. 'me' → logprob: -4.698249340057373
    4. 'orem' → logprob: -5.823249340057373
    5. 'ore' → logprob: -5.948249340057373
    6. '```' → logprob: -6.948249340057373
    7. '#' → logprob: -7.198249340057373
    8. 'ор' → logprob: -7.323249340057373
    9. '`' → logprob: -7.573249340057373
    10. 'ême' → logprob: -9.323248863220215

Token 590: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.013468896970152855
    2. ' de' → logprob: -4.6384687423706055
    3. 'f' → logprob: -5.7634687423706055
    4. 'fer' → logprob: -8.138468742370605
    5. 'fde' → logprob: -10.013468742370605
    6. 'b' → logprob: -10.763468742370605
    7. 'pow' → logprob: -10.763468742370605
    8. 'ferm' → logprob: -11.138468742370605
    9. 'F' → logprob: -11.513468742370605
    10. '_de' → logprob: -11.763468742370605

Token 591: ' Ferm' (ID: 156422)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.21330086886882782
    2. 'f' → logprob: -2.588300943374634
    3. 'mod' → logprob: -3.213300943374634
    4. 'pow' → logprob: -4.338300704956055
    5. 'F' → logprob: -4.463300704956055
    6. ' M' → logprob: -5.088300704956055
    7. 'prime' → logprob: -5.088300704956055
    8. '<|end|>' → logprob: -5.463300704956055
    9. '-' → logprob: -5.963300704956055
    10. 'ph' → logprob: -6.088300704956055

Token 592: 'at' (ID: 266)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.0668742656707764
    2. 'pow' → logprob: -1.0668742656707764
    3. 'mod' → logprob: -1.5668742656707764
    4. 'er' → logprob: -3.6918742656707764
    5. '#' → logprob: -4.0668745040893555
    6. ')' → logprob: -4.3168745040893555
    7. '```' → logprob: -4.5668745040893555
    8. '-' → logprob: -4.8168745040893555
    9. 'm' → logprob: -5.3168745040893555
    10. '1' → logprob: -6.0668745040893555

Token 593: ' pour' (ID: 1930)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.49460461735725403
    2. '(' → logprob: -0.9946045875549316
    3. ',' → logprob: -4.369604587554932
    4. ')' → logprob: -5.244604587554932
    5. 'f' → logprob: -6.744604587554932
    6. '(
' → logprob: -6.869604587554932
    7. ',f' → logprob: -9.61960506439209
    8. '(

' → logprob: -11.24460506439209
    9. 'F' → logprob: -11.49460506439209
    10. '(pow' → logprob: -11.49460506439209

Token 594: ' obtenir' (ID: 54423)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.11290706694126129
    2. ' calcul' → logprob: -2.3629071712493896
    3. 'ob' → logprob: -5.1129069328308105
    4. 'cal' → logprob: -6.2379069328308105
    5. 'f' → logprob: -6.6129069328308105
    6. ' obtenir' → logprob: -6.8629069328308105
    7. 'compute' → logprob: -6.8629069328308105
    8. 'calculate' → logprob: -8.112907409667969
    9. 'calc' → logprob: -8.362907409667969
    10. 'com' → logprob: -9.112907409667969

Token 595: ' l' (ID: 305)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0676363855600357
    2. 'l' → logprob: -2.942636489868164
    3. ' f' → logprob: -4.942636489868164
    4. ' l' → logprob: -6.192636489868164
    5. 'pow' → logprob: -6.442636489868164
    6. 'inverse' → logprob: -7.192636489868164
    7. 'F' → logprob: -8.317636489868164
    8. ')' → logprob: -8.317636489868164
    9. '(f' → logprob: -8.567636489868164
    10. '(pow' → logprob: -9.692636489868164

Token 596: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.6153035163879395
    2. 'inverse' → logprob: -1.2403035163879395
    3. ' inverse' → logprob: -1.9903035163879395
    4. '')' → logprob: -4.4903035163879395
    5. ''' → logprob: -4.6153035163879395
    6. '_inverse' → logprob: -4.8653035163879395
    7. ')' → logprob: -6.6153035163879395
    8. ''ex' → logprob: -6.8653035163879395
    9. ''aide' → logprob: -8.115303039550781
    10. ''op' → logprob: -8.615303039550781

Token 597: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -1.3306015716807451e-05
    2. 'v' → logprob: -11.62501335144043
    3. 'vers' → logprob: -13.75001335144043
    4. '
' → logprob: -13.75001335144043
    5. 'VERSE' → logprob: -14.87501335144043
    6. '```' → logprob: -14.87501335144043
    7. '[' → logprob: -15.12501335144043
    8. 'versible' → logprob: -15.62501335144043
    9. 'ver' → logprob: -16.00001335144043
    10. 'inverse' → logprob: -16.12501335144043

Token 598: ' modulo' (ID: 112372)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2029997557401657
    2. '(' → logprob: -1.8279997110366821
    3. '(
' → logprob: -4.327999591827393
    4. ')' → logprob: -5.327999591827393
    5. 'f' → logprob: -5.452999591827393
    6. 'mod' → logprob: -8.95300006866455
    7. '(F' → logprob: -9.45300006866455
    8. '_mod' → logprob: -9.57800006866455
    9. '(pow' → logprob: -9.95300006866455
    10. '```' → logprob: -10.07800006866455

Token 599: ' d' (ID: 272)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.10317958891391754
    2. 'f' → logprob: -2.478179693222046
    3. '(' → logprob: -4.728179454803467
    4. ')' → logprob: -5.728179454803467
    5. ',' → logprob: -7.228179454803467
    6. 'M' → logprob: -7.353179454803467
    7. 'F' → logprob: -8.603179931640625
    8. '(
' → logprob: -9.228179931640625
    9. '_f' → logprob: -9.853179931640625
    10. '.' → logprob: -9.853179931640625

Token 600: ''un' (ID: 9788)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029794352129101753
    2. 'M' → logprob: -4.154794216156006
    3. 'F' → logprob: -5.529794216156006
    4. 'e' → logprob: -6.029794216156006
    5. ' f' → logprob: -6.154794216156006
    6. '(f' → logprob: -6.779794216156006
    7. ' modulo' → logprob: -7.154794216156006
    8. 'u' → logprob: -7.654794216156006
    9. 'l' → logprob: -7.904794216156006
    10. 'a' → logprob: -7.904794216156006

Token 601: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17573754489421844
    2. 'f' → logprob: -1.9257375001907349
    3. 'M' → logprob: -6.175737380981445
    4. '*' → logprob: -6.300737380981445
    5. '`' → logprob: -6.300737380981445
    6. '```' → logprob: -6.550737380981445
    7. 'mod' → logprob: -6.800737380981445
    8. ',' → logprob: -7.050737380981445
    9. '(' → logprob: -7.175737380981445
    10. 'n' → logprob: -7.300737380981445

Token 602: ' premier' (ID: 15506)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6771829128265381
    2. '(' → logprob: -1.052182912826538
    3. ')' → logprob: -2.427182912826538
    4. ',' → logprob: -3.552182912826538
    5. 'f' → logprob: -4.177183151245117
    6. '(
' → logprob: -4.677183151245117
    7. ' (' → logprob: -7.677183151245117
    8. '   ' → logprob: -8.802183151245117
    9. '),' → logprob: -9.552183151245117
    10. ',f' → logprob: -10.052183151245117

Token 603: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0970133543014526
    2. '(f' → logprob: -1.3470133543014526
    3. 'f' → logprob: -1.7220133543014526
    4. ',' → logprob: -1.9720133543014526
    5. ')' → logprob: -2.597013473510742
    6. '(
' → logprob: -4.722013473510742
    7. '   ' → logprob: -6.222013473510742
    8. ' (' → logprob: -7.472013473510742
    9. '.' → logprob: -7.847013473510742
    10. 'F' → logprob: -7.972013473510742

Token 604: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0007802037871442735
    2. 'f' → logprob: -7.25078010559082
    3. 'i' → logprob: -10.37578010559082
    4. 'F' → logprob: -10.62578010559082
    5. '```' → logprob: -12.25078010559082
    6. '=' → logprob: -12.87578010559082
    7. '`' → logprob: -13.37578010559082
    8. ' I' → logprob: -13.75078010559082
    9. 'inv' → logprob: -13.75078010559082
    10. 'pow' → logprob: -14.37578010559082

Token 605: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.016264034435153008
    2. '=' → logprob: -5.141263961791992
    3. '[P' → logprob: -5.266263961791992
    4. '[' → logprob: -5.516263961791992
    5. '[-' → logprob: -7.266263961791992
    6. '=N' → logprob: -9.391263961791992
    7. ' =' → logprob: -9.391263961791992
    8. '[n' → logprob: -9.391263961791992
    9. '[:]' → logprob: -9.891263961791992
    10. 'N' → logprob: -10.266263961791992

Token 606: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.632542913896032e-05
    2. ']=' → logprob: -10.625046730041504
    3. ' ]' → logprob: -11.250046730041504
    4. ']
' → logprob: -12.125046730041504
    5. '])' → logprob: -13.375046730041504
    6. ')' → logprob: -13.875046730041504
    7. ')]' → logprob: -15.375046730041504
    8. ']

' → logprob: -15.375046730041504
    9. '],' → logprob: -15.625046730041504
    10. '-' → logprob: -16.125045776367188

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.639096970204264e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=

' → logprob: -16.625097274780273
    4. '=}' → logprob: -17.500097274780273
    5. '＝' → logprob: -18.625097274780273
    6. '.=' → logprob: -19.375097274780273
    7. '=int' → logprob: -20.125097274780273
    8. '=
' → logprob: -20.250097274780273
    9. '=`' → logprob: -20.375097274780273
    10. ',' → logprob: -20.500097274780273

Token 608: ' i' (ID: 575)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.836499985889532e-05
    2. ' pow' → logprob: -9.7500581741333
    3. '(pow' → logprob: -18.625059127807617
    4. '_pow' → logprob: -19.750059127807617
    5. 'Pow' → logprob: -20.625059127807617
    6. '.pow' → logprob: -20.875059127807617
    7. 'power' → logprob: -21.875059127807617
    8. 'po' → logprob: -23.250059127807617
    9. '   ' → logprob: -23.875059127807617
    10. 'pot' → logprob: -24.125059127807617

Token 609: ' =' (ID: 314)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.06811868399381638
    2. 'n' → logprob: -3.3181185722351074
    3. 'nt' → logprob: -4.318118572235107
    4. 'f' → logprob: -4.943118572235107
    5. '=' → logprob: -5.943118572235107
    6. 'nf' → logprob: -6.068118572235107
    7. 'nv' → logprob: -6.318118572235107
    8. 'Pow' → logprob: -8.193119049072266
    9. 'w' → logprob: -8.318119049072266
    10. ' pow' → logprob: -8.568119049072266

Token 610: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -3.547789674485102e-05
    2. ' pow' → logprob: -10.250035285949707
    3. '(pow' → logprob: -18.000036239624023
    4. '_pow' → logprob: -19.500036239624023
    5. '   ' → logprob: -19.875036239624023
    6. 'power' → logprob: -20.000036239624023
    7. 'Pow' → logprob: -20.000036239624023
    8. '.pow' → logprob: -20.250036239624023
    9. '```' → logprob: -22.000036239624023
    10. 'po' → logprob: -22.500036239624023

Token 611: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00012356207298580557
    2. '(' → logprob: -9.000123977661133
    3. 'f' → logprob: -16.375123977661133
    4. '(F' → logprob: -17.250123977661133
    5. '(
' → logprob: -18.000123977661133
    6. '(fi' → logprob: -20.250123977661133
    7. ' (' → logprob: -20.750123977661133
    8. '((' → logprob: -20.875123977661133
    9. ',f' → logprob: -22.000123977661133
    10. '	f' → logprob: -22.125123977661133

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012117430567741394
    2. '(' → logprob: -5.137117385864258
    3. '(M' → logprob: -5.387117385864258
    4. ',M' → logprob: -6.512117385864258
    5. ' ,' → logprob: -10.387117385864258
    6. 'M' → logprob: -10.512117385864258
    7. ',f' → logprob: -10.762117385864258
    8. 'f' → logprob: -11.262117385864258
    9. '(f' → logprob: -11.762117385864258
    10. ',
' → logprob: -13.887117385864258

Token 613: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.5213274309644476e-05
    2. ' M' → logprob: -11.125015258789062
    3. '998' → logprob: -14.750015258789062
    4. '	M' → logprob: -17.250015258789062
    5. '(M' → logprob: -17.750015258789062
    6. ' ' → logprob: -17.875015258789062
    7. '<M' → logprob: -18.375015258789062
    8. '[M' → logprob: -20.000015258789062
    9. '\M' → logprob: -20.875015258789062
    10. '   ' → logprob: -21.375015258789062

Token 614: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4855663721391466e-05
    2. ' -' → logprob: -11.125015258789062
    3. '-M' → logprob: -18.875015258789062
    4. '#' → logprob: -19.125015258789062
    5. '−' → logprob: -19.125015258789062
    6. '```' → logprob: -19.750015258789062
    7. ')' → logprob: -20.250015258789062
    8. '–' → logprob: -20.625015258789062
    9. ')-' → logprob: -20.875015258789062
    10. ''-' → logprob: -21.125015258789062

Token 615: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '۲' → logprob: -16.3750057220459
    4. '-' → logprob: -16.8750057220459
    5. '

' → logprob: -16.9375057220459
    6. '２' → logprob: -17.1875057220459
    7. '```' → logprob: -17.3125057220459
    8. '২' → logprob: -17.5625057220459
    9. '٢' → logprob: -17.5625057220459
    10. '२' → logprob: -17.7500057220459

Token 616: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '۲' → logprob: -16.437501907348633
    4. '```' → logprob: -16.437501907348633
    5. '

' → logprob: -17.187501907348633
    6. '２' → logprob: -17.375001907348633
    7. '٢' → logprob: -17.375001907348633
    8. '২' → logprob: -17.500001907348633
    9. '
' → logprob: -17.500001907348633
    10. '
' → logprob: -17.500001907348633

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6312321753939614e-05
    2. ')' → logprob: -10.750036239624023
    3. ' ,' → logprob: -11.375036239624023
    4. ',M' → logprob: -13.000036239624023
    5. ',
' → logprob: -14.250036239624023
    6. '```' → logprob: -16.000036239624023
    7. 'M' → logprob: -16.375036239624023
    8. '   ' → logprob: -16.625036239624023
    9. '<|end|>' → logprob: -17.375036239624023
    10. '),' → logprob: -17.500036239624023

Token 618: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018150413408875465
    2. ' M' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.143150329589844
    4. ')' → logprob: -15.518150329589844
    5. '	M' → logprob: -17.393150329589844
    6. ' ' → logprob: -18.518150329589844
    7. '```' → logprob: -19.768150329589844
    8. '998' → logprob: -19.893150329589844
    9. '(M' → logprob: -20.018150329589844
    10. '   ' → logprob: -20.143150329589844

Token 619: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')

' → logprob: -16.500001907348633
    5. ')#' → logprob: -16.625001907348633
    6. ')`' → logprob: -17.125001907348633
    7. '#' → logprob: -17.625001907348633
    8. '))' → logprob: -17.625001907348633
    9. '),' → logprob: -17.750001907348633
    10. '}' → logprob: -17.875001907348633

Token 620: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011177852749824524
    2. ' for' → logprob: -5.011178016662598
    3. '<|end|>' → logprob: -6.636178016662598
    4. '```' → logprob: -6.761178016662598
    5. 'n' → logprob: -7.011178016662598
    6. '
' → logprob: -7.386178016662598
    7. '#' → logprob: -8.261178016662598
    8. ')' → logprob: -9.636178016662598
    9. '\n' → logprob: -11.261178016662598
    10. '``' → logprob: -11.261178016662598

Token 621: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. '#' → logprob: -14.500000953674316
    3. ' for' → logprob: -15.750000953674316
    4. 'n' → logprob: -16.625
    5. '```' → logprob: -18.125
    6. 'i' → logprob: -19.75
    7. '	for' → logprob: -20.5
    8. 'from' → logprob: -20.75
    9. '
' → logprob: -20.75
    10. 'For' → logprob: -21.125

Token 622: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.18178218603134155
    2. 'for' → logprob: -2.0567822456359863
    3. 'c' → logprob: -4.181782245635986
    4. 't' → logprob: -5.181782245635986
    5. 'cl' → logprob: -5.306782245635986
    6. 'cles' → logprob: -5.431782245635986
    7. 'r' → logprob: -5.556782245635986
    8. '#' → logprob: -6.181782245635986
    9. 'f' → logprob: -7.681782245635986
    10. 'n' → logprob: -7.806782245635986

Token 623: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01917841099202633
    2. ' for' → logprob: -4.01917839050293
    3. 'n' → logprob: -6.89417839050293
    4. ' n' → logprob: -11.39417839050293
    5. '#' → logprob: -13.39417839050293
    6. '	for' → logprob: -14.51917839050293
    7. '(n' → logprob: -14.51917839050293
    8. '   ' → logprob: -15.51917839050293
    9. '
' → logprob: -16.39417839050293
    10. 'from' → logprob: -16.39417839050293

Token 624: ' calcul' (ID: 7559)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018296144902706146
    2. ' n' → logprob: -4.018296241760254
    3. 'i' → logprob: -9.143296241760254
    4. 'r' → logprob: -11.143296241760254
    5. 'for' → logprob: -11.268296241760254
    6. 'R' → logprob: -12.768296241760254
    7. ' i' → logprob: -12.893296241760254
    8. ' for' → logprob: -13.893296241760254
    9. '	n' → logprob: -13.893296241760254
    10. 'k' → logprob: -14.018296241760254

Token 625: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.16255778074264526
    2. 'R' → logprob: -1.91255784034729
    3. 'ler' → logprob: -6.912557601928711
    4. 'r' → logprob: -7.787557601928711
    5. ' R' → logprob: -8.162557601928711
    6. 'ner' → logprob: -8.537557601928711
    7. 'n' → logprob: -8.912557601928711
    8. 'rer' → logprob: -9.412557601928711
    9. 'e' → logprob: -9.912557601928711
    10. 'range' → logprob: -10.037557601928711

Token 626: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015240442007780075
    2. ' n' → logprob: -4.640240669250488
    3. 'for' → logprob: -5.640240669250488
    4. 'R' → logprob: -7.015240669250488
    5. 'range' → logprob: -7.890240669250488
    6. 'i' → logprob: -8.640240669250488
    7. ' for' → logprob: -9.265240669250488
    8. 'N' → logprob: -9.765240669250488
    9. 'r' → logprob: -9.890240669250488
    10. ' R' → logprob: -10.390240669250488

Token 627: ''in' (ID: 17942)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1901569664478302
    2. 'for' → logprob: -2.190156936645508
    3. 'R' → logprob: -3.065156936645508
    4. 'i' → logprob: -5.190156936645508
    5. 'range' → logprob: -6.065156936645508
    6. 'in' → logprob: -6.565156936645508
    7. ' for' → logprob: -7.315156936645508
    8. 'e' → logprob: -7.565156936645508
    9. '`' → logprob: -7.940156936645508
    10. ' n' → logprob: -8.065156936645508

Token 628: 'verse' (ID: 7093)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.23470693826675415
    2. 'range' → logprob: -1.6097068786621094
    3. ' range' → logprob: -5.609706878662109
    4. 'for' → logprob: -5.984706878662109
    5. 'reverse' → logprob: -6.859706878662109
    6. 'verse' → logprob: -6.984706878662109
    7. ' R' → logprob: -7.984706878662109
    8. ' reversed' → logprob: -8.10970687866211
    9. 'versed' → logprob: -9.10970687866211
    10. 'dex' → logprob: -9.48470687866211

Token 629: ' mod' (ID: 1812)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17695307731628418
    2. 'n' → logprob: -2.176953077316284
    3. ' for' → logprob: -4.051953315734863
    4. 's' → logprob: -4.676953315734863
    5. '(n' → logprob: -5.301953315734863
    6. '#' → logprob: -5.926953315734863
    7. 'N' → logprob: -6.176953315734863
    8. 'de' → logprob: -6.551953315734863
    9. ' de' → logprob: -6.551953315734863
    10. 'en' → logprob: -6.676953315734863

Token 630: 'ulaire' (ID: 48584)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12308477610349655
    2. 'n' → logprob: -3.498084783554077
    3. 'ulaire' → logprob: -3.998084783554077
    4. 'range' → logprob: -4.373084545135498
    5. 's' → logprob: -4.748084545135498
    6. 'I' → logprob: -4.873084545135498
    7. 'or' → logprob: -5.123084545135498
    8. 'ar' → logprob: -5.123084545135498
    9. ' for' → logprob: -5.373084545135498
    10. 'def' → logprob: -5.748084545135498

Token 631: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031039228197187185
    2. ' for' → logprob: -6.253103733062744
    3. 'n' → logprob: -7.128103733062744
    4. '(n' → logprob: -8.253104209899902
    5. 's' → logprob: -10.628104209899902
    6. '#' → logprob: -10.878104209899902
    7. ')' → logprob: -11.753104209899902
    8. '(' → logprob: -11.878104209899902
    9. '
' → logprob: -11.878104209899902
    10. '```' → logprob: -11.878104209899902

Token 632: ' toutes' (ID: 17502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.59126216173172
    2. 'R' → logprob: -0.84126216173172
    3. 'range' → logprob: -4.966262340545654
    4. 'for' → logprob: -5.466262340545654
    5. 'N' → logprob: -6.466262340545654
    6. ' R' → logprob: -6.966262340545654
    7. ' n' → logprob: -7.966262340545654
    8. 'P' → logprob: -8.341261863708496
    9. 'r' → logprob: -8.466261863708496
    10. '(n' → logprob: -8.966261863708496

Token 633: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06304474920034409
    2. 'range' → logprob: -3.188044786453247
    3. ' range' → logprob: -4.688044548034668
    4. ' n' → logprob: -4.938044548034668
    5. 'for' → logprob: -6.688044548034668
    6. '(n' → logprob: -7.313044548034668
    7. ' for' → logprob: -7.688044548034668
    8. 'R' → logprob: -8.563044548034668
    9. 'r' → logprob: -8.563044548034668
    10. '(range' → logprob: -8.688044548034668

Token 634: ' autres' (ID: 18701)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4553062319755554
    2. 'range' → logprob: -1.4553062915802002
    3. 'for' → logprob: -2.2053062915802
    4. 'R' → logprob: -4.955306053161621
    5. ' range' → logprob: -5.455306053161621
    6. 'r' → logprob: -6.080306053161621
    7. '(n' → logprob: -6.455306053161621
    8. ' for' → logprob: -6.580306053161621
    9. '[n' → logprob: -6.830306053161621
    10. 'reverse' → logprob: -7.455306053161621

Token 635: ' fact' (ID: 2840)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08767158538103104
    2. 'for' → logprob: -2.9626715183258057
    3. 'range' → logprob: -3.7126715183258057
    4. '(n' → logprob: -5.337671756744385
    5. 'R' → logprob: -6.962671756744385
    6. 'r' → logprob: -7.962671756744385
    7. '(range' → logprob: -8.087671279907227
    8. 'f' → logprob: -8.462671279907227
    9. '[n' → logprob: -8.712671279907227
    10. ' range' → logprob: -9.087671279907227

Token 636: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.011056429706513882
    2. 'o' → logprob: -4.761056423187256
    3. '```' → logprob: -7.261056423187256
    4. 'range' → logprob: -7.511056423187256
    5. 'for' → logprob: -8.011056900024414
    6. 'n' → logprob: -8.886056900024414
    7. 'orial' → logprob: -9.136056900024414
    8. '(range' → logprob: -9.261056900024414
    9. '#' → logprob: -9.636056900024414
    10. 'oir' → logprob: -10.011056900024414

Token 637: 'elles' (ID: 8500)
  Prédit: 'ères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ères' → logprob: -0.6557403802871704
    2. 'n' → logprob: -2.155740261077881
    3. 'ère' → logprob: -2.530740261077881
    4. 'x' → logprob: -3.155740261077881
    5. 'cles' → logprob: -3.280740261077881
    6. 'nal' → logprob: -3.655740261077881
    7. 'le' → logprob: -3.780740261077881
    8. 'R' → logprob: -3.780740261077881
    9. 'bles' → logprob: -4.030740261077881
    10. 'ables' → logprob: -4.155740261077881

Token 638: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09088485687971115
    2. 'n' → logprob: -2.5908849239349365
    3. ' for' → logprob: -5.465884685516357
    4. '(n' → logprob: -5.840884685516357
    5. 'in' → logprob: -6.340884685516357
    6. ',' → logprob: -7.090884685516357
    7. 'N' → logprob: -7.965884685516357
    8. ')' → logprob: -8.340885162353516
    9. '(' → logprob: -8.465885162353516
    10. 'R' → logprob: -8.715885162353516

Token 639: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23412898182868958
    2. 'n' → logprob: -1.6091289520263672
    3. ' for' → logprob: -4.984128952026367
    4. ' n' → logprob: -7.609128952026367
    5. 'N' → logprob: -7.734128952026367
    6. '#' → logprob: -8.609128952026367
    7. 'from' → logprob: -9.234128952026367
    8. '   ' → logprob: -9.484128952026367
    9. '
' → logprob: -9.484128952026367
    10. 'R' → logprob: -9.734128952026367

Token 640: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012752347392961383
    2. 'n' → logprob: -7.126275062561035
    3. 'R' → logprob: -8.626275062561035
    4. 'range' → logprob: -8.751275062561035
    5. '(N' → logprob: -10.001275062561035
    6. ' N' → logprob: -10.376275062561035
    7. 'P' → logprob: -10.376275062561035
    8. 'i' → logprob: -12.251275062561035
    9. '```' → logprob: -12.376275062561035
    10. ' range' → logprob: -13.001275062561035

Token 641: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002075313590466976
    2. '(N' → logprob: -6.7520751953125
    3. ' -' → logprob: -7.5020751953125
    4. 'N' → logprob: -8.8770751953125
    5. ',' → logprob: -9.5020751953125
    6. '(' → logprob: -10.0020751953125
    7. '()-' → logprob: -10.2520751953125
    8. '(n' → logprob: -11.2520751953125
    9. 'down' → logprob: -11.5020751953125
    10. '()' → logprob: -11.7520751953125

Token 642: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10348070412874222
    2. '1' → logprob: -3.103480815887451
    3. ',' → logprob: -3.478480815887451
    4. ' N' → logprob: -5.228480815887451
    5. 'range' → logprob: -5.228480815887451
    6. 'P' → logprob: -5.728480815887451
    7. '(N' → logprob: -6.103480815887451
    8. '-' → logprob: -6.603480815887451
    9. 'n' → logprob: -6.853480815887451
    10. '```' → logprob: -6.853480815887451

Token 643: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023953264579176903
    2. '
' → logprob: -5.773953437805176
    3. ',N' → logprob: -5.898953437805176
    4. '(N' → logprob: -6.023953437805176
    5. 'in' → logprob: -6.148953437805176
    6. ',n' → logprob: -6.148953437805176
    7. ' ,' → logprob: -6.398953437805176
    8. '(P' → logprob: -6.648953437805176
    9. '-' → logprob: -6.648953437805176
    10. '(n' → logprob: -6.898953437805176

Token 644: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020985817536711693
    2. '1' → logprob: -8.87520980834961
    3. ' ' → logprob: -10.25020980834961
    4. 'N' → logprob: -10.62520980834961
    5. 'R' → logprob: -12.62520980834961
    6. '-' → logprob: -13.37520980834961
    7. 'P' → logprob: -13.50020980834961
    8. '   ' → logprob: -13.62520980834961
    9. 'range' → logprob: -14.62520980834961
    10. '```' → logprob: -14.87520980834961

Token 645: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.492120155598968e-05
    2. '1' → logprob: -10.375064849853516
    3. 'N' → logprob: -10.750064849853516
    4. ' ' → logprob: -11.500064849853516
    5. '```' → logprob: -13.875064849853516
    6. 'P' → logprob: -14.875064849853516
    7. '-' → logprob: -15.375064849853516
    8. 'R' → logprob: -16.000064849853516
    9. '   ' → logprob: -16.625064849853516
    10. 'range' → logprob: -16.750064849853516

Token 646: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09357436001300812
    2. 'in' → logprob: -3.468574285507202
    3. ' for' → logprob: -3.843574285507202
    4. ' in' → logprob: -4.593574523925781
    5. ',' → logprob: -4.843574523925781
    6. 'P' → logprob: -5.843574523925781
    7. 'R' → logprob: -6.093574523925781
    8. '(P' → logprob: -6.093574523925781
    9. '[::-' → logprob: -6.218574523925781
    10. ':' → logprob: -6.468574523925781

Token 647: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004351790528744459
    2. ' for' → logprob: -5.504351615905762
    3. 'R' → logprob: -8.879351615905762
    4. 'n' → logprob: -10.504351615905762
    5. '
' → logprob: -10.754351615905762
    6. 'N' → logprob: -10.754351615905762
    7. ')' → logprob: -10.879351615905762
    8. '#' → logprob: -11.254351615905762
    9. '```' → logprob: -12.004351615905762
    10. '0' → logprob: -12.504351615905762

Token 648: ' Comm' (ID: 57464)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.643152740551159e-05
    2. ' for' → logprob: -10.375036239624023
    3. 'n' → logprob: -12.625036239624023
    4. 'R' → logprob: -13.875036239624023
    5. '
' → logprob: -15.625036239624023
    6. '#' → logprob: -16.000036239624023
    7. '	for' → logprob: -16.375036239624023
    8. 'from' → logprob: -16.500036239624023
    9. '```' → logprob: -16.625036239624023
    10. 'f' → logprob: -16.625036239624023

Token 649: 'encer' (ID: 19726)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.044912535697221756
    2. 'ent' → logprob: -3.169912576675415
    3. 'ence' → logprob: -7.044912338256836
    4. 'for' → logprob: -8.294912338256836
    5. 'er' → logprob: -8.544912338256836
    6. 'en' → logprob: -8.794912338256836
    7. 'range' → logprob: -8.919912338256836
    8. 'u' → logprob: -9.294912338256836
    9. 'ents' → logprob: -9.919912338256836
    10. 'i' → logprob: -10.294912338256836

Token 650: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19154343008995056
    2. 'from' → logprob: -2.0665433406829834
    3. 'R' → logprob: -3.4415433406829834
    4. ' for' → logprob: -4.6915435791015625
    5. ' R' → logprob: -5.8165435791015625
    6. 'n' → logprob: -5.9415435791015625
    7. ' from' → logprob: -8.441543579101562
    8. 'in' → logprob: -9.191543579101562
    9. 'N' → logprob: -9.441543579101562
    10. 'i' → logprob: -9.441543579101562

Token 651: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02561555802822113
    2. 'R' → logprob: -4.025615692138672
    3. 'n' → logprob: -5.150615692138672
    4. 'P' → logprob: -7.400615692138672
    5. 'range' → logprob: -7.525615692138672
    6. ' N' → logprob: -8.400615692138672
    7. 'i' → logprob: -9.025615692138672
    8. ' range' → logprob: -10.025615692138672
    9. ' R' → logprob: -10.650615692138672
    10. '(N' → logprob: -11.400615692138672

Token 652: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013621894642710686
    2. ' -' → logprob: -5.138621807098389
    3. '(N' → logprob: -5.638621807098389
    4. 'N' → logprob: -6.013621807098389
    5. ',' → logprob: -7.263621807098389
    6. 'in' → logprob: -7.638621807098389
    7. 'for' → logprob: -9.388622283935547
    8. ' in' → logprob: -9.638622283935547
    9. 'down' → logprob: -9.763622283935547
    10. '
' → logprob: -10.388622283935547

Token 653: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006809803890064359
    2. ' N' → logprob: -7.375680923461914
    3. 'P' → logprob: -10.750680923461914
    4. 'R' → logprob: -11.750680923461914
    5. '0' → logprob: -12.000680923461914
    6. '(N' → logprob: -12.500680923461914
    7. 'B' → logprob: -12.625680923461914
    8. '-' → logprob: -13.125680923461914
    9. ' ' → logprob: -13.375680923461914
    10. '	N' → logprob: -13.500680923461914

Token 654: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001773192489054054
    2. '0' → logprob: -8.875177383422852
    3. 'P' → logprob: -11.375177383422852
    4. ' N' → logprob: -11.625177383422852
    5. 'R' → logprob: -12.125177383422852
    6. '-' → logprob: -12.625177383422852
    7. '1' → logprob: -12.875177383422852
    8. '(N' → logprob: -13.000177383422852
    9. '	N' → logprob: -13.750177383422852
    10. ' ' → logprob: -14.750177383422852

Token 655: ' exclus' (ID: 9398)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02456994354724884
    2. ' for' → logprob: -3.7745699882507324
    3. 'in' → logprob: -8.024569511413574
    4. ' in' → logprob: -8.274569511413574
    5. ',' → logprob: -8.524569511413574
    6. ':' → logprob: -8.899569511413574
    7. '
' → logprob: -9.524569511413574
    8. 'n' → logprob: -9.899569511413574
    9. '[::-' → logprob: -9.899569511413574
    10. '   ' → logprob: -10.149569511413574

Token 656: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04484529420733452
    2. ' for' → logprob: -3.4198453426361084
    3. ' in' → logprob: -5.794845104217529
    4. 'in' → logprob: -5.919845104217529
    5. ',' → logprob: -6.169845104217529
    6. 'n' → logprob: -6.919845104217529
    7. 'f' → logprob: -7.294845104217529
    8. ':' → logprob: -7.919845104217529
    9. 'R' → logprob: -8.169845581054688
    10. 'N' → logprob: -9.294845581054688

Token 657: 'don' (ID: 22130)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13676059246063232
    2. '0' → logprob: -2.636760711669922
    3. 'for' → logprob: -3.761760711669922
    4. 'R' → logprob: -4.511760711669922
    5. ' N' → logprob: -5.011760711669922
    6. 'i' → logprob: -5.511760711669922
    7. 'n' → logprob: -6.011760711669922
    8. 'from' → logprob: -6.636760711669922
    9. '
' → logprob: -6.949260711669922
    10. ' for' → logprob: -7.136760711669922

Token 658: 'c' (ID: 66)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0323774553835392
    2. 'e' → logprob: -4.157377243041992
    3. 'wn' → logprob: -4.782377243041992
    4. 'range' → logprob: -5.532377243041992
    5. 'ws' → logprob: -6.657377243041992
    6. 'c' → logprob: -7.032377243041992
    7. 't' → logprob: -7.657377243041992
    8. 'g' → logprob: -8.407377243041992
    9. '```' → logprob: -8.907377243041992
    10. '1' → logprob: -9.032377243041992

Token 659: ' on' (ID: 402)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.157970130443573
    2. 'R' → logprob: -3.1579701900482178
    3. ' N' → logprob: -3.2829701900482178
    4. 'n' → logprob: -4.407969951629639
    5. '
' → logprob: -4.782969951629639
    6. 'for' → logprob: -4.907969951629639
    7. 'reverse' → logprob: -5.282969951629639
    8. '0' → logprob: -5.532969951629639
    9. 'i' → logprob: -5.532969951629639
    10. ' reverse' → logprob: -5.532969951629639

Token 660: ' couvre' (ID: 137218)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7529048919677734
    2. ' in' → logprob: -1.5029048919677734
    3. '=' → logprob: -1.7529048919677734
    4. 'n' → logprob: -2.7529048919677734
    5. ' =' → logprob: -3.6279048919677734
    6. ' n' → logprob: -4.502904891967773
    7. ')' → logprob: -4.752904891967773
    8. 'for' → logprob: -5.502904891967773
    9. ' for' → logprob: -5.877904891967773
    10. '>' → logprob: -6.252904891967773

Token 661: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.26555687189102173
    2. 'R' → logprob: -2.265556812286377
    3. 'n' → logprob: -2.890556812286377
    4. ' N' → logprob: -4.140556812286377
    5. 'range' → logprob: -4.140556812286377
    6. ' range' → logprob: -5.015556812286377
    7. 'i' → logprob: -5.515556812286377
    8. 'for' → logprob: -5.515556812286377
    9. 'reverse' → logprob: -5.515556812286377
    10. ' reversed' → logprob: -5.640556812286377

Token 662: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.028653044253587723
    2. ' -' → logprob: -3.903653144836426
    3. '(N' → logprob: -5.903653144836426
    4. '
' → logprob: -6.028653144836426
    5. 'N' → logprob: -6.778653144836426
    6. ',' → logprob: -7.528653144836426
    7. '(n' → logprob: -8.528653144836426
    8. 'n' → logprob: -8.903653144836426
    9. '=' → logprob: -8.903653144836426
    10. '0' → logprob: -9.528653144836426

Token 663: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.595411479473114
    2. 'N' → logprob: -0.845411479473114
    3. ' ' → logprob: -4.72041130065918
    4. ' N' → logprob: -5.34541130065918
    5. '-' → logprob: -5.84541130065918
    6. ' -' → logprob: -6.72041130065918
    7. 'R' → logprob: -8.09541130065918
    8. '1' → logprob: -8.34541130065918
    9. '
' → logprob: -8.97041130065918
    10. 'B' → logprob: -8.97041130065918

Token 664: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032422006130218506
    2. 'N' → logprob: -3.6574220657348633
    3. '-' → logprob: -5.157422065734863
    4. 'B' → logprob: -9.032422065734863
    5. 'R' → logprob: -10.157422065734863
    6. ' ' → logprob: -10.157422065734863
    7. '
' → logprob: -10.282422065734863
    8. ' -' → logprob: -10.532422065734863
    9. '1' → logprob: -10.657422065734863
    10. '-N' → logprob: -11.532422065734863

Token 665: ' inclus' (ID: 11891)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31715288758277893
    2. '-' → logprob: -1.5671528577804565
    3. ',-' → logprob: -3.942152976989746
    4. ' -' → logprob: -4.442152976989746
    5. '0' → logprob: -4.692152976989746
    6. 'n' → logprob: -5.692152976989746
    7. '   ' → logprob: -5.817152976989746
    8. '
' → logprob: -6.067152976989746
    9. 'in' → logprob: -6.317152976989746
    10. ',n' → logprob: -6.567152976989746

Token 666: 'ivement' (ID: 37978)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044182516634464264
    2. ',-' → logprob: -4.794182300567627
    3. ':' → logprob: -4.919182300567627
    4. '0' → logprob: -5.419182300567627
    5. '-' → logprob: -5.544182300567627
    6. 'n' → logprob: -5.794182300567627
    7. 'for' → logprob: -5.919182300567627
    8. ',
' → logprob: -6.669182300567627
    9. '(n' → logprob: -6.794182300567627
    10. '   ' → logprob: -6.794182300567627

Token 667: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.323895663022995
    2. 'for' → logprob: -1.6988956928253174
    3. 'in' → logprob: -3.3238956928253174
    4. ' in' → logprob: -3.3238956928253174
    5. ' for' → logprob: -4.698895454406738
    6. '0' → logprob: -6.448895454406738
    7. ')' → logprob: -6.698895454406738
    8. 'f' → logprob: -6.823895454406738
    9. '-' → logprob: -6.948895454406738
    10. 'n' → logprob: -7.073895454406738

Token 668: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.981667537620524e-06
    2. ' for' → logprob: -14.000001907348633
    3. 'n' → logprob: -15.000001907348633
    4. '
' → logprob: -15.750001907348633
    5. 'R' → logprob: -15.875001907348633
    6. 'from' → logprob: -16.000001907348633
    7. 'N' → logprob: -16.125001907348633
    8. 'f' → logprob: -16.250001907348633
    9. '```' → logprob: -16.375001907348633
    10. '   ' → logprob: -17.750001907348633

Token 669: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013711734674870968
    2. 'i' → logprob: -5.138711929321289
    3. ' n' → logprob: -5.763711929321289
    4. 'k' → logprob: -5.888711929321289
    5. 'x' → logprob: -6.763711929321289
    6. 'j' → logprob: -7.763711929321289
    7. 'm' → logprob: -9.638711929321289
    8. 'p' → logprob: -9.763711929321289
    9. 'u' → logprob: -10.263711929321289
    10. ' i' → logprob: -10.763711929321289

Token 670: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869057893753052
    2. 'in' → logprob: -1.1369057893753052
    3. 'n' → logprob: -10.886905670166016
    4. ' ' → logprob: -11.886905670166016
    5. '	in' → logprob: -12.511905670166016
    6. 'In' → logprob: -13.761905670166016
    7. 'N' → logprob: -13.886905670166016
    8. ' n' → logprob: -14.011905670166016
    9. 'I' → logprob: -14.761905670166016
    10. '   ' → logprob: -15.011905670166016

Token 671: ' R' (ID: 460)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2559449374675751
    2. 'range' → logprob: -2.1309449672698975
    3. 'R' → logprob: -2.2559449672698975
    4. ' range' → logprob: -6.380944728851318
    5. 're' → logprob: -8.380945205688477
    6. ' ' → logprob: -9.380945205688477
    7. ' N' → logprob: -9.630945205688477
    8. ' reversed' → logprob: -10.130945205688477
    9. ' R' → logprob: -10.255945205688477
    10. '   ' → logprob: -10.380945205688477

Token 672: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.251091377227567e-05
    2. '(' → logprob: -10.125042915344238
    3. 'N' → logprob: -13.500042915344238
    4. '(n' → logprob: -13.875042915344238
    5. '(
' → logprob: -16.375041961669922
    6. ' (' → logprob: -16.750041961669922
    7. '((' → logprob: -18.500041961669922
    8. '	N' → logprob: -18.500041961669922
    9. '(M' → logprob: -19.125041961669922
    10. '(B' → logprob: -20.250041961669922

Token 673: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007576696574687958
    2. ',' → logprob: -5.2575764656066895
    3. '(N' → logprob: -6.7575764656066895
    4. ' -' → logprob: -6.8825764656066895
    5. '(' → logprob: -9.757576942443848
    6. '(n' → logprob: -10.507576942443848
    7. 'N' → logprob: -10.507576942443848
    8. ',N' → logprob: -10.882576942443848
    9. ' ,' → logprob: -12.007576942443848
    10. '-,' → logprob: -12.632576942443848

Token 674: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009132515988312662
    2. ' ' → logprob: -7.000913143157959
    3. '1' → logprob: -13.625913619995117
    4. '-' → logprob: -15.500913619995117
    5. '   ' → logprob: -16.250913619995117
    6. ' -' → logprob: -16.375913619995117
    7. 'N' → logprob: -17.500913619995117
    8. '
' → logprob: -17.875913619995117
    9. '  ' → logprob: -17.875913619995117
    10. 'B' → logprob: -18.125913619995117

Token 675: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.0020742492051795e-05
    2. '-' → logprob: -10.000049591064453
    3. ' ' → logprob: -12.500049591064453
    4. '1' → logprob: -14.625049591064453
    5. ' -' → logprob: -15.500049591064453
    6. '
' → logprob: -16.125049591064453
    7. '   ' → logprob: -17.125049591064453
    8. 'B' → logprob: -18.000049591064453
    9. '(' → logprob: -18.375049591064453
    10. 'A' → logprob: -18.500049591064453

Token 676: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08124469220638275
    2. ',' → logprob: -2.581244707107544
    3. ',-' → logprob: -6.081244468688965
    4. ' -' → logprob: -9.706244468688965
    5. '-,' → logprob: -12.581244468688965
    6. '   ' → logprob: -13.706244468688965
    7. ',
' → logprob: -14.581244468688965
    8. ' ,' → logprob: -14.581244468688965
    9. ' ,-' → logprob: -15.956244468688965
    10. '```' → logprob: -16.08124542236328

Token 677: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.6312321753939614e-05
    2. ' -' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.250036239624023
    4. '  ' → logprob: -15.375036239624023
    5. ' ' → logprob: -18.000036239624023
    6. '	' → logprob: -20.250036239624023
    7. '-step' → logprob: -20.625036239624023
    8. '    ' → logprob: -21.500036239624023
    9. 'n' → logprob: -21.625036239624023
    10. ',-' → logprob: -21.750036239624023

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.875
    3. ' ' → logprob: -17.25
    4. ' -' → logprob: -17.625
    5. ')' → logprob: -18.875
    6. '   ' → logprob: -19.25
    7. '１' → logprob: -19.75
    8. '۱' → logprob: -19.75
    9. '```' → logprob: -20.0
    10. '১' → logprob: -20.25

Token 679: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0392526350915432
    2. '-' → logprob: -3.789252519607544
    3. '):
' → logprob: -4.289252758026123
    4. ',' → logprob: -7.039252758026123
    5. ' -' → logprob: -7.789252758026123
    6. '):-' → logprob: -8.164252281188965
    7. ',-' → logprob: -8.414252281188965
    8. ':' → logprob: -9.289252281188965
    9. ')' → logprob: -9.289252281188965
    10. '):
' → logprob: -9.539252281188965

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20297864079475403
    2. 'I' → logprob: -1.7029786109924316
    3. '	I' → logprob: -6.952978610992432
    4. ' I' → logprob: -7.452978610992432
    5. 'i' → logprob: -11.45297908782959
    6. '[I' → logprob: -12.70297908782959
    7. '   ' → logprob: -12.82797908782959
    8. '    
' → logprob: -12.95297908782959
    9. '```' → logprob: -13.32797908782959
    10. '	i' → logprob: -13.45297908782959

Token 681: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.12797628343105316
    2. '   ' → logprob: -2.127976179122925
    3. ' I' → logprob: -7.377976417541504
    4. 'i' → logprob: -8.127976417541504
    5. '	I' → logprob: -9.252976417541504
    6. '    
' → logprob: -11.377976417541504
    7. '```' → logprob: -12.252976417541504
    8. '  ' → logprob: -12.252976417541504
    9. ' ' → logprob: -12.502976417541504
    10. '	i' → logprob: -13.502976417541504

Token 682: ' i' (ID: 575)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -7.226628895296017e-06
    2. '   ' → logprob: -12.000007629394531
    3. 'i' → logprob: -14.125007629394531
    4. ' I' → logprob: -15.250007629394531
    5. '	I' → logprob: -16.87500762939453
    6. '```' → logprob: -19.00000762939453
    7. '#' → logprob: -19.50000762939453
    8. '    
' → logprob: -20.00000762939453
    9. '>I' → logprob: -20.37500762939453
    10. '
' → logprob: -20.50000762939453

Token 683: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007194612408056855
    2. ' =' → logprob: -7.8757195472717285
    3. '*=' → logprob: -8.00071907043457
    4. '=i' → logprob: -12.75071907043457
    5. ' *=' → logprob: -14.00071907043457
    6. '*' → logprob: -15.87571907043457
    7. '=
' → logprob: -16.50071907043457
    8. '	' → logprob: -16.87571907043457
    9. '.=' → logprob: -17.00071907043457
    10. '＝' → logprob: -17.25071907043457

Token 684: ' multip' (ID: 17524)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5519118309020996
    2. 'I' → logprob: -1.5519118309020996
    3. '(i' → logprob: -2.3019118309020996
    4. ' i' → logprob: -3.5519118309020996
    5. ' (' → logprob: -3.6769118309020996
    6. '*' → logprob: -3.6769118309020996
    7. '(I' → logprob: -4.0519118309021
    8. '*i' → logprob: -5.3019118309021
    9. '(' → logprob: -5.6769118309021
    10. ' I' → logprob: -5.6769118309021

Token 685: 'lié' (ID: 102412)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024470489472150803
    2. '*=' → logprob: -3.774470567703247
    3. ' =' → logprob: -7.899470329284668
    4. '=i' → logprob: -8.774470329284668
    5. ' *=' → logprob: -9.024470329284668
    6. '   ' → logprob: -9.149470329284668
    7. 'lication' → logprob: -9.274470329284668
    8. 'ultip' → logprob: -10.024470329284668
    9. 'i' → logprob: -10.149470329284668
    10. 'lications' → logprob: -10.274470329284668

Token 686: ' par' (ID: 686)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.8041601777076721
    2. '=' → logprob: -1.3041601181030273
    3. '*' → logprob: -2.1791601181030273
    4. 'i' → logprob: -3.3041601181030273
    5. ' by' → logprob: -3.4291601181030273
    6. 'by' → logprob: -3.8041601181030273
    7. '*i' → logprob: -3.8041601181030273
    8. '*=' → logprob: -4.304160118103027
    9. ' =' → logprob: -4.554160118103027
    10. ' I' → logprob: -4.679160118103027

Token 687: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00016587569552939385
    2. ' n' → logprob: -8.750165939331055
    3. 'F' → logprob: -12.125165939331055
    4. '   ' → logprob: -14.250165939331055
    5. '	n' → logprob: -14.250165939331055
    6. '(n' → logprob: -14.625165939331055
    7. '
' → logprob: -17.000165939331055
    8. ' ' → logprob: -17.000165939331055
    9. ' ' → logprob: -17.000165939331055
    10. '_n' → logprob: -17.375165939331055

Token 688: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4773210287094116
    2. ' *' → logprob: -2.352321147918701
    3. '*' → logprob: -2.477321147918701
    4. ' ' → logprob: -2.602321147918701
    5. '%' → logprob: -3.352321147918701
    6. '-' → logprob: -3.727321147918701
    7. '*i' → logprob: -4.102321147918701
    8. '=' → logprob: -4.477321147918701
    9. '    ' → logprob: -4.727321147918701
    10. ',' → logprob: -4.977321147918701

Token 689: ' réduit' (ID: 120775)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2636730372905731
    2. 'n' → logprob: -2.5136730670928955
    3. ' %' → logprob: -2.5136730670928955
    4. '%n' → logprob: -3.8886730670928955
    5. ' n' → logprob: -4.513672828674316
    6. 'i' → logprob: -5.263672828674316
    7. ' %=' → logprob: -5.263672828674316
    8. '(n' → logprob: -5.638672828674316
    9. ' i' → logprob: -5.888672828674316
    10. ' (' → logprob: -5.888672828674316

Token 690: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -1.383827567100525
    2. '%n' → logprob: -2.0088276863098145
    3. '   ' → logprob: -2.1338276863098145
    4. 'n' → logprob: -2.2588276863098145
    5. ' i' → logprob: -2.2588276863098145
    6. 'mod' → logprob: -2.5088276863098145
    7. 'i' → logprob: -2.8838276863098145
    8. '%' → logprob: -3.2588276863098145
    9. '(i' → logprob: -3.3838276863098145
    10. '(n' → logprob: -4.2588276863098145

Token 691: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0024876687675714493
    2. ' M' → logprob: -6.002487659454346
    3. '```' → logprob: -12.752488136291504
    4. '   ' → logprob: -13.127488136291504
    5. '`' → logprob: -13.252488136291504
    6. ' ' → logprob: -13.502488136291504
    7. '(M' → logprob: -13.752488136291504
    8. ' ' → logprob: -13.877488136291504
    9. '	M' → logprob: -14.252488136291504
    10. ',' → logprob: -14.627488136291504

Token 692: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04853660613298416
    2. '=' → logprob: -4.548536777496338
    3. '*i' → logprob: -4.673536777496338
    4. ' i' → logprob: -5.048536777496338
    5. ' ' → logprob: -5.298536777496338
    6. ':' → logprob: -5.298536777496338
    7. ' =' → logprob: -5.423536777496338
    8. ',' → logprob: -6.173536777496338
    9. '=i' → logprob: -7.048536777496338
    10. 'i' → logprob: -7.298536777496338

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45247095823287964
    2. 'i' → logprob: -1.0774710178375244
    3. ' i' → logprob: -4.077470779418945
    4. '```' → logprob: -6.077470779418945
    5. '    
' → logprob: -6.327470779418945
    6. ' 
' → logprob: -7.577470779418945
    7. '	i' → logprob: -7.827470779418945
    8. '`' → logprob: -8.202470779418945
    9. '  
' → logprob: -8.327470779418945
    10. ' =' → logprob: -8.577470779418945

Token 694: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0007175540085881948
    2. '   ' → logprob: -7.375717639923096
    3. ' i' → logprob: -9.875717163085938
    4. '(i' → logprob: -10.500717163085938
    5. 'I' → logprob: -12.625717163085938
    6. '    
' → logprob: -12.875717163085938
    7. '```' → logprob: -13.250717163085938
    8. '	i' → logprob: -13.500717163085938
    9. 'n' → logprob: -13.625717163085938
    10. '(' → logprob: -14.750717163085938

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019079314079135656
    2. '*=' → logprob: -6.751907825469971
    3. ' =' → logprob: -7.251907825469971
    4. '=i' → logprob: -10.751908302307129
    5. ' *=' → logprob: -12.376908302307129
    6. '*' → logprob: -14.376908302307129
    7. '//=' → logprob: -14.376908302307129
    8. '   ' → logprob: -15.001908302307129
    9. '-=' → logprob: -15.001908302307129
    10. '	' → logprob: -15.251908302307129

Token 696: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008103981614112854
    2. ' i' → logprob: -4.883103847503662
    3. '(i' → logprob: -7.633103847503662
    4. ' (' → logprob: -11.50810432434082
    5. '   ' → logprob: -13.50810432434082
    6. ' ' → logprob: -13.75810432434082
    7. '(' → logprob: -14.50810432434082
    8. '	i' → logprob: -15.13310432434082
    9. ' ' → logprob: -15.63310432434082
    10. 'I' → logprob: -16.38310432434082

Token 697: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3133096396923065
    2. '*' → logprob: -1.313309669494629
    3. '*i' → logprob: -10.313309669494629
    4. '*n' → logprob: -11.813309669494629
    5. ' ' → logprob: -12.438309669494629
    6. ' ' → logprob: -13.313309669494629
    7. '*object' → logprob: -15.313309669494629
    8. '	' → logprob: -15.938309669494629
    9. '
' → logprob: -16.063308715820312
    10. '   ' → logprob: -16.063308715820312

Token 698: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.3458322731312364e-06
    2. ' n' → logprob: -11.875007629394531
    3. '(n' → logprob: -15.125007629394531
    4. '	n' → logprob: -16.75000762939453
    5. '   ' → logprob: -19.25000762939453
    6. '%n' → logprob: -19.50000762939453
    7. '(' → logprob: -20.00000762939453
    8. '
' → logprob: -20.62500762939453
    9. '[n' → logprob: -20.75000762939453
    10. ' ' → logprob: -21.37500762939453

Token 699: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20159441232681274
    2. ' %' → logprob: -1.701594352722168
    3. '%i' → logprob: -9.576594352722168
    4. '%n' → logprob: -10.201594352722168
    5. ')' → logprob: -10.451594352722168
    6. '%c' → logprob: -11.701594352722168
    7. '%B' → logprob: -12.201594352722168
    8. '
' → logprob: -12.326594352722168
    9. '%m' → logprob: -12.576594352722168
    10. '%A' → logprob: -12.701594352722168

Token 700: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.896309739408025e-07
    2. ' M' → logprob: -14.125000953674316
    3. '998' → logprob: -18.875
    4. '	M' → logprob: -20.75
    5. '   ' → logprob: -20.875
    6. '(M' → logprob: -21.375
    7. '<M' → logprob: -21.5
    8. ' ' → logprob: -21.5
    9. '  ' → logprob: -22.125
    10. '
' → logprob: -22.25

Token 701: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5260466933250427
    2. 'I' → logprob: -0.9010466933250427
    3. ' I' → logprob: -6.1510467529296875
    4. '
' → logprob: -8.276046752929688
    5. '<|end|>' → logprob: -8.651046752929688
    6. ' ' → logprob: -9.526046752929688
    7. '  ' → logprob: -9.651046752929688
    8. '    
' → logprob: -9.651046752929688
    9. '	I' → logprob: -9.651046752929688
    10. '#' → logprob: -11.401046752929688

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24186773598194122
    2. 'I' → logprob: -1.9918677806854248
    3. '    
' → logprob: -3.866867780685425
    4. '<|end|>' → logprob: -3.866867780685425
    5. 'for' → logprob: -4.366867542266846
    6. '
' → logprob: -5.241867542266846
    7. '  
' → logprob: -5.241867542266846
    8. '\n' → logprob: -5.991867542266846
    9. ' for' → logprob: -6.116867542266846
    10. ' I' → logprob: -6.491867542266846

Token 703: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0009498104336671531
    2. '   ' → logprob: -7.000949859619141
    3. ' I' → logprob: -10.25094985961914
    4. '#' (adapté à ' #') → logprob: -13.50094985961914
    5. ' ' → logprob: -14.37594985961914
    6. '	I' → logprob: -14.62594985961914
    7. '    
' → logprob: -15.75094985961914
    8. '```' → logprob: -16.12594985961914
    9. '  ' → logprob: -16.25094985961914
    10. '[I' → logprob: -16.50094985961914

Token 704: ' On' (ID: 2160)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.1054253011243418e-05
    2. '   ' → logprob: -11.250020980834961
    3. ' I' → logprob: -11.750020980834961
    4. '	I' → logprob: -15.875020980834961
    5. ' ' → logprob: -17.12502098083496
    6. '#' → logprob: -17.50002098083496
    7. '    
' → logprob: -19.87502098083496
    8. '[I' → logprob: -20.37502098083496
    9. '  ' → logprob: -20.50002098083496
    10. '
' → logprob: -20.62502098083496

Token 705: ' stock' (ID: 6546)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.000797119690105319
    2. ' I' → logprob: -8.375797271728516
    3. '#' → logprob: -8.500797271728516
    4. '   ' → logprob: -8.625797271728516
    5. 'n' → logprob: -9.250797271728516
    6. '[I' → logprob: -10.750797271728516
    7. '=' → logprob: -11.250797271728516
    8. 'i' → logprob: -11.375797271728516
    9. '...' → logprob: -11.500797271728516
    10. '
' → logprob: -12.250797271728516

Token 706: 'e' (ID: 68)
  Prédit: '[I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -0.7485971450805664
    2. 'I' → logprob: -1.4985971450805664
    3. 'e' → logprob: -1.7485971450805664
    4. '[i' → logprob: -2.4985971450805664
    5. '[n' → logprob: -4.123597145080566
    6. '   ' → logprob: -4.748597145080566
    7. 'er' → logprob: -4.748597145080566
    8. 'F' → logprob: -5.373597145080566
    9. '[' → logprob: -5.498597145080566
    10. 'i' → logprob: -6.373597145080566

Token 707: ' la' (ID: 557)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.004225016571581364
    2. 'i' → logprob: -6.379225254058838
    3. ' I' → logprob: -6.629225254058838
    4. '   ' → logprob: -6.754225254058838
    5. ' i' → logprob: -11.12922477722168
    6. 'n' → logprob: -11.75422477722168
    7. ' ' → logprob: -12.00422477722168
    8. '  ' → logprob: -14.50422477722168
    9. '	I' → logprob: -14.50422477722168
    10. '(I' → logprob: -14.87922477722168

Token 708: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3876069188117981
    2. 'I' → logprob: -1.1376068592071533
    3. 'n' → logprob: -7.512607097625732
    4. ' i' → logprob: -9.012606620788574
    5. ' I' → logprob: -10.262606620788574
    6. '   ' → logprob: -11.512606620788574
    7. '[i' → logprob: -11.762606620788574
    8. '`' → logprob: -12.762606620788574
    9. 'for' → logprob: -13.262606620788574
    10. '(i' → logprob: -13.637606620788574

Token 709: ' d' (ID: 272)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.002511808415874839
    2. 'i' → logprob: -6.502511978149414
    3. '   ' → logprob: -7.002511978149414
    4. ' I' → logprob: -9.877511978149414
    5. 'n' → logprob: -11.127511978149414
    6. '[i' → logprob: -11.502511978149414
    7. '[I' → logprob: -11.752511978149414
    8. '[n' → logprob: -12.127511978149414
    9. '#' → logprob: -13.252511978149414
    10. '`' → logprob: -13.627511978149414

Token 710: ''in' (ID: 17942)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.010589320212602615
    2. ' I' → logprob: -4.760589122772217
    3. '   ' → logprob: -7.135589122772217
    4. 'i' → logprob: -7.260589122772217
    5. ' ' → logprob: -8.385589599609375
    6. '[' → logprob: -9.635589599609375
    7. '[I' → logprob: -9.885589599609375
    8. ' i' → logprob: -10.135589599609375
    9. '[i' → logprob: -10.385589599609375
    10. '  ' → logprob: -11.260589599609375

Token 711: 'verse' (ID: 7093)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.020799370482563972
    2. '[I' → logprob: -4.520799160003662
    3. 'i' → logprob: -5.645799160003662
    4. '[i' → logprob: -5.770799160003662
    5. '[' → logprob: -6.395799160003662
    6. ' I' → logprob: -7.645799160003662
    7. '[n' → logprob: -8.39579963684082
    8. '   ' → logprob: -8.89579963684082
    9. 't' → logprob: -9.27079963684082
    10. 'verse' → logprob: -9.27079963684082

Token 712: ' dans' (ID: 2671)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.6325453519821167
    2. '[n' → logprob: -0.8825453519821167
    3. 's' → logprob: -3.5075454711914062
    4. '[i' → logprob: -5.132545471191406
    5. '[' → logprob: -5.257545471191406
    6. 'i' → logprob: -5.382545471191406
    7. '[I' → logprob: -5.382545471191406
    8. '[s' → logprob: -6.382545471191406
    9. '```' → logprob: -7.132545471191406
    10. 'n' → logprob: -7.257545471191406

Token 713: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.000712074339389801
    2. ' I' → logprob: -7.250711917877197
    3. '   ' → logprob: -13.375712394714355
    4. '[I' → logprob: -15.125712394714355
    5. '	I' → logprob: -16.12571144104004
    6. '(I' → logprob: -16.25071144104004
    7. ' ' → logprob: -17.25071144104004
    8. '```' → logprob: -17.50071144104004
    9. '#' → logprob: -17.62571144104004
    10. '`' → logprob: -18.25071144104004

Token 714: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00015121731848921627
    2. '[' → logprob: -9.250151634216309
    3. '[i' → logprob: -10.375151634216309
    4. 'n' → logprob: -11.750151634216309
    5. 'I' → logprob: -12.375151634216309
    6. '```' → logprob: -12.375151634216309
    7. '   ' → logprob: -12.500151634216309
    8. '\[' → logprob: -13.625151634216309
    9. '[I' → logprob: -14.000151634216309
    10. '[N' → logprob: -14.750151634216309

Token 715: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08326968550682068
    2. ']' → logprob: -2.9582695960998535
    3. ' -' → logprob: -3.5832695960998535
    4. ' ]' → logprob: -8.708270072937012
    5. '   ' → logprob: -10.833270072937012
    6. ' ' → logprob: -12.708270072937012
    7. '```' → logprob: -12.958270072937012
    8. '	' → logprob: -13.333270072937012
    9. '-n' → logprob: -13.458270072937012
    10. 'n' → logprob: -13.458270072937012

Token 716: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007012071553617716
    2. '1' → logprob: -5.257011890411377
    3. 'n' → logprob: -6.757011890411377
    4. ' ]' → logprob: -8.507012367248535
    5. 'i' → logprob: -8.632012367248535
    6. 'I' → logprob: -8.757012367248535
    7. ' ' → logprob: -10.757012367248535
    8. '   ' → logprob: -10.757012367248535
    9. '```' → logprob: -11.257012367248535
    10. '  ' → logprob: -12.632012367248535

Token 717: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3544423381972592e-05
    2. ' ]' → logprob: -11.87501335144043
    3. ']=' → logprob: -12.25001335144043
    4. ']
' → logprob: -13.75001335144043
    5. '   ' → logprob: -14.37501335144043
    6. ']

' → logprob: -17.75001335144043
    7. '[n' → logprob: -17.75001335144043
    8. ')' → logprob: -18.25001335144043
    9. ']
' → logprob: -18.25001335144043
    10. 'n' → logprob: -18.50001335144043

Token 718: '   ' (ID: 271)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00963390152901411
    2. '   ' → logprob: -5.259634017944336
    3. '=' → logprob: -5.634634017944336
    4. ' I' → logprob: -7.634634017944336
    5. ' =' → logprob: -8.259634017944336
    6. '[' → logprob: -10.384634017944336
    7. '[I' → logprob: -10.509634017944336
    8. '	I' → logprob: -11.759634017944336
    9. '```' → logprob: -12.634634017944336
    10. '    
' → logprob: -13.134634017944336

Token 719: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' (adapté à ' I') → logprob: -6.153795766294934e-06
    2. ' I' → logprob: -12.250005722045898
    3. '   ' → logprob: -13.625005722045898
    4. '```' → logprob: -17.5000057220459
    5. '	I' → logprob: -20.3750057220459
    6. ' ' → logprob: -20.8750057220459
    7. '[I' → logprob: -21.0000057220459
    8. '[' → logprob: -21.1250057220459
    9. '``' → logprob: -21.6250057220459
    10. '`' → logprob: -21.6250057220459

Token 720: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0006403613369911909
    2. '[' → logprob: -7.375640392303467
    3. '[N' → logprob: -12.125639915466309
    4. ' [' → logprob: -12.500639915466309
    5. '[I' → logprob: -12.875639915466309
    6. '[i' → logprob: -14.375639915466309
    7. 'n' → logprob: -15.000639915466309
    8. '[
' → logprob: -15.125639915466309
    9. '   ' → logprob: -15.375639915466309
    10. '```' → logprob: -15.750639915466309

Token 721: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013409581733867526
    2. ' -' → logprob: -6.626340866088867
    3. '[' → logprob: -11.751340866088867
    4. ']' → logprob: -12.501340866088867
    5. '[n' → logprob: -12.876340866088867
    6. '   ' → logprob: -15.126340866088867
    7. '[-' → logprob: -15.251340866088867
    8. '-
' → logprob: -15.876340866088867
    9. '1' → logprob: -16.126340866088867
    10. '```' → logprob: -16.501340866088867

Token 722: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -18.375
    5. ']' → logprob: -18.875
    6. '１' → logprob: -19.875
    7. '۱' → logprob: -20.1875
    8. '১' → logprob: -20.6875
    9. '१' → logprob: -20.75
    10. '  ' → logprob: -21.25

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.000001907348633
    4. '```' → logprob: -17.875001907348633
    5. ']' → logprob: -19.625001907348633
    6. '<|end|>' → logprob: -19.750001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '１' → logprob: -19.937501907348633
    9. '۱' → logprob: -20.062501907348633
    10. '১' → logprob: -20.562501907348633

Token 724: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.523948907968588e-05
    2. ']=' → logprob: -10.375035285949707
    3. ' ]' → logprob: -12.750035285949707
    4. '=' → logprob: -13.750035285949707
    5. ')' → logprob: -17.00003433227539
    6. ']
' → logprob: -17.37503433227539
    7. ']

' → logprob: -18.62503433227539
    8. ' =' → logprob: -19.12503433227539
    9. '']' → logprob: -19.25003433227539
    10. ']=(' → logprob: -19.25003433227539

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020828247070312
    2. ' =' → logprob: -2.350208282470703
    3. ']' → logprob: -14.600208282470703
    4. ')' → logprob: -15.225208282470703
    5. '=

' → logprob: -15.600208282470703
    6. ',' → logprob: -15.725208282470703
    7. '＝' → logprob: -16.100208282470703
    8. ' =
' → logprob: -16.350208282470703
    9. ']=' → logprob: -16.350208282470703
    10. '=
' → logprob: -16.475208282470703

Token 726: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.676981345459353e-06
    2. ' i' → logprob: -12.125005722045898
    3. '	i' → logprob: -16.5000057220459
    4. ' ' → logprob: -18.5000057220459
    5. 'I' → logprob: -18.7500057220459
    6. '   ' → logprob: -18.8750057220459
    7. '<|end|>' → logprob: -19.6250057220459
    8. '(i' → logprob: -20.0000057220459
    9. '```' → logprob: -20.0000057220459
    10. '[i' → logprob: -20.6250057220459

Token 727: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030382541939616203
    2. '#' → logprob: -3.5303826332092285
    3. 'n' → logprob: -8.40538215637207
    4. '
' → logprob: -9.03038215637207
    5. 'R' → logprob: -9.15538215637207
    6. ' for' → logprob: -9.53038215637207
    7. '```' → logprob: -9.90538215637207
    8. 'def' → logprob: -10.28038215637207
    9. 'i' → logprob: -12.90538215637207
    10. 'B' → logprob: -12.90538215637207

Token 729: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024548539659008384
    2. 'def' → logprob: -8.500245094299316
    3. '#' → logprob: -10.875245094299316
    4. 'n' → logprob: -12.000245094299316
    5. ' for' → logprob: -12.125245094299316
    6. 'z' → logprob: -12.250245094299316
    7. 'R' → logprob: -13.000245094299316
    8. '```' → logprob: -14.000245094299316
    9. 'print' → logprob: -14.125245094299316
    10. 'i' → logprob: -14.125245094299316

Token 730: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41137808561325073
    2. '#' → logprob: -1.1613781452178955
    3. ' for' → logprob: -4.411377906799316
    4. 'def' → logprob: -5.411377906799316
    5. 'n' → logprob: -6.536377906799316
    6. ' #' → logprob: -6.536377906799316
    7. '
' → logprob: -6.911377906799316
    8. 's' → logprob: -7.036377906799316
    9. '```' → logprob: -7.036377906799316
    10. ':' → logprob: -7.536377906799316

Token 731: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00029041420202702284
    2. ' for' → logprob: -8.625290870666504
    3. 'n' → logprob: -9.375290870666504
    4. '#' → logprob: -11.375290870666504
    5. '
' → logprob: -12.250290870666504
    6. '```' → logprob: -12.250290870666504
    7. 'B' → logprob: -14.000290870666504
    8. 'f' → logprob: -14.375290870666504
    9. 'R' → logprob: -14.750290870666504
    10. '=' → logprob: -14.875290870666504

Token 732: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00048477304517291486
    2. ' for' → logprob: -7.750484943389893
    3. 'n' → logprob: -10.250484466552734
    4. '#' → logprob: -11.625484466552734
    5. '
' → logprob: -12.125484466552734
    6. '```' → logprob: -13.375484466552734
    7. ':' → logprob: -13.625484466552734
    8. '=' → logprob: -15.375484466552734
    9. 'in' → logprob: -15.875484466552734
    10. 'def' → logprob: -15.875484466552734

Token 733: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.045261677354574203
    2. 'ul' → logprob: -3.6702616214752197
    3. 'for' → logprob: -4.545261859893799
    4. ' for' → logprob: -6.170261859893799
    5. 'ules' → logprob: -6.170261859893799
    6. 'ulates' → logprob: -6.420261859893799
    7. 'u' → logprob: -7.170261859893799
    8. 'ulate' → logprob: -7.420261859893799
    9. '#' → logprob: -7.795261859893799
    10. 'ulte' → logprob: -8.92026138305664

Token 734: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1691834032535553
    2. 'R' → logprob: -2.7941834926605225
    3. 'n' → logprob: -2.7941834926605225
    4. 'range' → logprob: -4.669183254241943
    5. ' for' → logprob: -5.044183254241943
    6. 'N' → logprob: -5.294183254241943
    7. 'z' → logprob: -5.794183254241943
    8. 'A' → logprob: -6.544183254241943
    9. '#' → logprob: -6.669183254241943
    10. '...' → logprob: -6.794183254241943

Token 735: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010799680603668094
    2. 'R' → logprob: -7.25108003616333
    3. 'def' → logprob: -9.376079559326172
    4. ' for' → logprob: -10.001079559326172
    5. '#' → logprob: -10.376079559326172
    6. '```' → logprob: -10.376079559326172
    7. 'n' → logprob: -10.501079559326172
    8. 'z' → logprob: -10.501079559326172
    9. '
' → logprob: -10.501079559326172
    10. 'range' → logprob: -11.251079559326172

Token 736: ' désir' (ID: 92342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.963691804325208e-05
    2. ' for' → logprob: -10.625029563903809
    3. '#' → logprob: -13.625029563903809
    4. 'n' → logprob: -13.625029563903809
    5. '
' → logprob: -14.375029563903809
    6. '```' → logprob: -14.625029563903809
    7. '(
' → logprob: -14.875029563903809
    8. '(n' → logprob: -15.000029563903809
    9. '(' → logprob: -15.000029563903809
    10. 'A' → logprob: -15.750029563903809

Token 737: 'ée' (ID: 2894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007444178685545921
    2. 'ur' → logprob: -6.007444381713867
    3. ' for' → logprob: -6.257444381713867
    4. '#' → logprob: -6.382444381713867
    5. '(' → logprob: -8.882444381713867
    6. 'range' → logprob: -9.132444381713867
    7. 'urée' → logprob: -9.382444381713867
    8. 'or' → logprob: -9.507444381713867
    9. 'e' → logprob: -9.507444381713867
    10. '=' → logprob: -9.632444381713867

Token 738: ' selon' (ID: 27571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.5954712075181305e-05
    2. ' for' → logprob: -10.750036239624023
    3. 'n' → logprob: -11.500036239624023
    4. '```' → logprob: -13.250036239624023
    5. '
' → logprob: -13.625036239624023
    6. '(' → logprob: -14.625036239624023
    7. '(n' → logprob: -15.375036239624023
    8. 'R' → logprob: -16.250036239624023
    9. '#' → logprob: -16.250036239624023
    10. ')' → logprob: -16.375036239624023

Token 739: ' la' (ID: 557)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.16566574573516846
    2. 'n' → logprob: -2.165665626525879
    3. 'range' → logprob: -4.165665626525879
    4. 'A' → logprob: -4.415665626525879
    5. 'r' → logprob: -5.790665626525879
    6. 'a' → logprob: -6.540665626525879
    7. 'k' → logprob: -6.540665626525879
    8. 'N' → logprob: -7.040665626525879
    9. 'for' → logprob: -7.290665626525879
    10. 'i' → logprob: -7.415665626525879

Token 740: ' formule' (ID: 84316)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.30214792490005493
    2. 'range' → logprob: -1.8021478652954102
    3. 'for' → logprob: -2.55214786529541
    4. ' range' → logprob: -4.80214786529541
    5. 'n' → logprob: -5.42714786529541
    6. ' R' → logprob: -6.55214786529541
    7. '```' → logprob: -6.55214786529541
    8. ' for' → logprob: -6.92714786529541
    9. 'r' → logprob: -8.05214786529541
    10. 'N' → logprob: -8.55214786529541

Token 741: ' donnée' (ID: 130126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002670575922820717
    2. 'n' → logprob: -8.750267028808594
    3. ' for' → logprob: -9.625267028808594
    4. '
' → logprob: -11.625267028808594
    5. '```' → logprob: -11.625267028808594
    6. 'R' → logprob: -12.125267028808594
    7. 'A' → logprob: -12.500267028808594
    8. '(n' → logprob: -12.625267028808594
    9. 'range' → logprob: -12.875267028808594
    10. 'in' → logprob: -13.375267028808594

Token 742: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.281485836254433e-05
    2. ' for' → logprob: -9.875092506408691
    3. 'n' → logprob: -10.375092506408691
    4. '```' → logprob: -12.625092506408691
    5. '
' → logprob: -13.375092506408691
    6. '(n' → logprob: -13.750092506408691
    7. ')' → logprob: -13.875092506408691
    8. 'range' → logprob: -14.625092506408691
    9. '(
' → logprob: -14.750092506408691
    10. '(' → logprob: -14.750092506408691

Token 743: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. 'R' → logprob: -18.625
    4. ' for' → logprob: -19.0
    5. 'n' → logprob: -21.375
    6. 'A' → logprob: -21.625
    7. 'from' → logprob: -21.875
    8. '	for' → logprob: -23.0
    9. 'r' → logprob: -24.0
    10. '﻿' → logprob: -24.0

Token 744: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. 'n' → logprob: -15.0
    3. ' for' → logprob: -18.5
    4. '```' → logprob: -18.875
    5. '	for' → logprob: -23.0
    6. 'R' → logprob: -23.0
    7. 'from' → logprob: -23.125
    8. 'r' → logprob: -23.25
    9. 'A' → logprob: -23.5
    10. 'k' → logprob: -24.25

Token 745: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14241692423820496
    2. 'n' → logprob: -2.1424169540405273
    3. ' for' → logprob: -5.017416954040527
    4. '_' → logprob: -5.017416954040527
    5. '```' → logprob: -7.267416954040527
    6. ' n' → logprob: -7.767416954040527
    7. 'i' → logprob: -8.267416954040527
    8. 'R' → logprob: -9.392416954040527
    9. 'range' → logprob: -9.642416954040527
    10. '_=' → logprob: -9.642416954040527

Token 746: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.427696168422699
    2. ' =' → logprob: -2.0526962280273438
    3. 'for' → logprob: -2.0526962280273438
    4. 'n' → logprob: -3.4276962280273438
    5. ' n' → logprob: -4.052696228027344
    6. ' for' → logprob: -4.177696228027344
    7. '_' → logprob: -4.427696228027344
    8. 's' → logprob: -5.802696228027344
    9. '=n' → logprob: -6.677696228027344
    10. 'i' → logprob: -6.677696228027344

Token 747: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7382261753082275
    2. ' n' → logprob: -0.7382261753082275
    3. ' in' → logprob: -4.738225936889648
    4. 'for' → logprob: -5.113225936889648
    5. ' ' → logprob: -5.363225936889648
    6. ')' → logprob: -5.488225936889648
    7. ' for' → logprob: -5.738225936889648
    8. 'i' → logprob: -5.863225936889648
    9. '=' → logprob: -6.238225936889648
    10. ' i' → logprob: -6.363225936889648

Token 748: 'it' (ID: 278)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005890633910894394
    2. 'R' → logprob: -6.505890846252441
    3. ' n' → logprob: -6.755890846252441
    4. 'i' → logprob: -7.005890846252441
    5. 'for' → logprob: -7.505890846252441
    6. 'r' → logprob: -7.630890846252441
    7. 'k' → logprob: -8.005890846252441
    8. 'a' → logprob: -8.630890846252441
    9. '_' → logprob: -8.755890846252441
    10. 'range' → logprob: -9.005890846252441

Token 749: 'érations' (ID: 152860)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.10942037403583527
    2. 'for' → logprob: -3.1094202995300293
    3. 'e' → logprob: -3.8594202995300293
    4. 'range' → logprob: -4.984420299530029
    5. 'n' → logprob: -5.609420299530029
    6. 'ege' → logprob: -5.609420299530029
    7. 'égr' → logprob: -5.859420299530029
    8. '=' → logprob: -5.984420299530029
    9. 'érieur' → logprob: -6.359420299530029
    10. 'ée' → logprob: -6.484420299530029

Token 750: ' dépend' (ID: 68660)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07865675538778305
    2. ' for' → logprob: -2.9536566734313965
    3. '=' → logprob: -4.2036566734313965
    4. 'n' → logprob: -5.3286566734313965
    5. ' =' → logprob: -5.7036566734313965
    6. ' n' → logprob: -8.703657150268555
    7. '#' → logprob: -10.453657150268555
    8. '
' → logprob: -10.453657150268555
    9. '(' → logprob: -10.953657150268555
    10. ' in' → logprob: -11.078657150268555

Token 751: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7377151250839233
    2. ' de' → logprob: -1.3627151250839233
    3. '()' → logprob: -3.362715244293213
    4. 'A' → logprob: -3.487715244293213
    5. '(N' → logprob: -3.487715244293213
    6. '(A' → logprob: -3.612715244293213
    7. 'de' → logprob: -3.737715244293213
    8. '#' → logprob: -3.737715244293213
    9. '(B' → logprob: -4.237715244293213
    10. 'range' → logprob: -4.862715244293213

Token 752: ''une' (ID: 13337)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7924891710281372
    2. ' A' → logprob: -1.0424891710281372
    3. ' range' → logprob: -2.5424890518188477
    4. '(A' → logprob: -3.7924890518188477
    5. 'R' → logprob: -3.9174890518188477
    6. ' R' → logprob: -4.042489051818848
    7. ' B' → logprob: -4.667489051818848
    8. 'range' → logprob: -4.792489051818848
    9. 'B' → logprob: -4.917489051818848
    10. 'ef' → logprob: -4.917489051818848

Token 753: ' condition' (ID: 7060)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.8783460855484009
    2. 'range' → logprob: -1.3783460855484009
    3. 'for' → logprob: -1.8783460855484009
    4. ' for' → logprob: -3.0033459663391113
    5. ' range' → logprob: -3.1283459663391113
    6. 'B' → logprob: -3.6283459663391113
    7. 'A' → logprob: -3.6283459663391113
    8. ' R' → logprob: -4.378345966339111
    9. '=' → logprob: -5.128345966339111
    10. ' =' → logprob: -6.628345966339111

Token 754: ' basée' (ID: 153941)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2133547067642212
    2. '(A' → logprob: -1.9633547067642212
    3. ' for' → logprob: -3.7133545875549316
    4. 'A' → logprob: -4.463354587554932
    5. '(' → logprob: -5.088354587554932
    6. '(B' → logprob: -5.713354587554932
    7. '=' → logprob: -6.963354587554932
    8. 'B' → logprob: -6.963354587554932
    9. '(
' → logprob: -7.463354587554932
    10. '(R' → logprob: -7.588354587554932

Token 755: ' sur' (ID: 1512)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5290820002555847
    2. '(B' → logprob: -1.4040820598602295
    3. '(' → logprob: -2.4040820598602295
    4. '(R' → logprob: -4.40408182144165
    5. 'on' → logprob: -4.52908182144165
    6. 'range' → logprob: -4.77908182144165
    7. '()' → logprob: -5.02908182144165
    8. 'A' → logprob: -5.40408182144165
    9. '#' → logprob: -5.52908182144165
    10. 'R' → logprob: -5.65408182144165

Token 756: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5503299236297607
    2. 'R' → logprob: -1.0503299236297607
    3. 'B' → logprob: -3.0503299236297607
    4. 'min' → logprob: -4.80033016204834
    5. 'N' → logprob: -5.05033016204834
    6. 'range' → logprob: -5.67533016204834
    7. 'n' → logprob: -6.30033016204834
    8. 'i' → logprob: -6.30033016204834
    9. 'max' → logprob: -6.55033016204834
    10. ' R' → logprob: -7.30033016204834

Token 757: ' valeurs' (ID: 73668)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2848658561706543
    2. 'B' → logprob: -1.4098658561706543
    3. 'R' → logprob: -1.5348658561706543
    4. 'n' → logprob: -1.6598658561706543
    5. 'i' → logprob: -3.9098658561706543
    6. 'min' → logprob: -4.034865856170654
    7. 'range' → logprob: -4.659865856170654
    8. 'N' → logprob: -4.659865856170654
    9. 'max' → logprob: -5.159865856170654
    10. 'a' → logprob: -5.534865856170654

Token 758: ' de' (ID: 334)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.23148208856582642
    2. '(B' → logprob: -2.1064820289611816
    3. 'for' → logprob: -3.2314820289611816
    4. 'A' → logprob: -3.4814820289611816
    5. 'B' → logprob: -5.481482028961182
    6. '(' → logprob: -5.981482028961182
    7. 'R' → logprob: -6.481482028961182
    8. 'of' → logprob: -6.606482028961182
    9. 'range' → logprob: -6.856482028961182
    10. '(R' → logprob: -6.981482028961182

Token 759: ' N' (ID: 478)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8743367791175842
    2. 'R' → logprob: -1.3743367195129395
    3. 'B' → logprob: -2.1243367195129395
    4. 'n' → logprob: -2.2493367195129395
    5. 'N' → logprob: -2.8743367195129395
    6. 'min' → logprob: -3.9993367195129395
    7. 'i' → logprob: -4.2493367195129395
    8. 'max' → logprob: -4.8743367195129395
    9. 'range' → logprob: -5.7493367195129395
    10. 'a' → logprob: -6.2493367195129395

Token 760: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10595251619815826
    2. 'if' → logprob: -3.730952501296997
    3. 'A' → logprob: -3.980952501296997
    4. 'and' → logprob: -4.480952739715576
    5. 'in' → logprob: -5.105952739715576
    6. ' for' → logprob: -5.105952739715576
    7. 'R' → logprob: -5.480952739715576
    8. ',' → logprob: -5.605952739715576
    9. 'def' → logprob: -5.605952739715576
    10. '=' → logprob: -5.730952739715576

Token 761: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38501766324043274
    2. 'A' → logprob: -1.2600176334381104
    3. 'R' → logprob: -4.3850178718566895
    4. 'N' → logprob: -5.1350178718566895
    5. ' B' → logprob: -5.1350178718566895
    6. 'min' → logprob: -5.2600178718566895
    7. ' A' → logprob: -6.2600178718566895
    8. 'n' → logprob: -6.3850178718566895
    9. 'i' → logprob: -7.0100178718566895
    10. 'P' → logprob: -8.135017395019531

Token 762: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04118487611413002
    2. 'A' → logprob: -4.916184902191162
    3. '(N' → logprob: -5.041184902191162
    4. '(' → logprob: -5.166184902191162
    5. ' for' → logprob: -6.291184902191162
    6. ')' → logprob: -6.291184902191162
    7. '1' → logprob: -6.291184902191162
    8. 'N' → logprob: -6.416184902191162
    9. '
' → logprob: -6.666184902191162
    10. 'B' → logprob: -6.666184902191162

Token 763: ' et' (ID: 859)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21492008864879608
    2. 'min' → logprob: -2.3399200439453125
    3. 'N' → logprob: -3.0899200439453125
    4. 'B' → logprob: -3.7149200439453125
    5. 'P' → logprob: -4.9649200439453125
    6. 'R' → logprob: -4.9649200439453125
    7. ' min' → logprob: -5.5899200439453125
    8. ' A' → logprob: -6.2149200439453125
    9. 'and' → logprob: -6.7149200439453125
    10. ',' → logprob: -6.7149200439453125

Token 764: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001441780710592866
    2. ' A' → logprob: -7.751441955566406
    3. 'min' → logprob: -8.126441955566406
    4. 'N' → logprob: -8.251441955566406
    5. 'R' → logprob: -9.001441955566406
    6. 'B' → logprob: -9.126441955566406
    7. 'n' → logprob: -10.126441955566406
    8. 'P' → logprob: -10.376441955566406
    9. 'max' → logprob: -10.751441955566406
    10. '(A' → logprob: -10.751441955566406

Token 765: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014545208541676402
    2. ' for' → logprob: -7.7514543533325195
    3. 'if' → logprob: -7.7514543533325195
    4. 'n' → logprob: -8.50145435333252
    5. 'R' → logprob: -9.12645435333252
    6. '```' → logprob: -9.75145435333252
    7. 'N' → logprob: -10.37645435333252
    8. '
' → logprob: -10.62645435333252
    9. 'range' → logprob: -10.62645435333252
    10. 'A' → logprob: -10.62645435333252

Token 766: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007507824921049178
    2. 'R' → logprob: -7.62575101852417
    3. 'n' → logprob: -8.875750541687012
    4. 'i' → logprob: -10.125750541687012
    5. ' for' → logprob: -11.000750541687012
    6. 'N' → logprob: -11.125750541687012
    7. 'A' → logprob: -11.500750541687012
    8. 'range' → logprob: -11.625750541687012
    9. 'B' → logprob: -11.750750541687012
    10. 'if' → logprob: -12.125750541687012

Token 767: ' N' (ID: 478)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7029319405555725
    2. 'N' → logprob: -1.8279318809509277
    3. ' B' → logprob: -1.8279318809509277
    4. 'A' → logprob: -2.2029318809509277
    5. ' A' → logprob: -3.3279318809509277
    6. ' N' → logprob: -3.3279318809509277
    7. ' ' → logprob: -7.452931880950928
    8. 'P' → logprob: -8.702932357788086
    9. '(B' → logprob: -9.577932357788086
    10. ' (' → logprob: -10.202932357788086

Token 768: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7640397548675537
    2. ' >' → logprob: -1.6390397548675537
    3. '>' → logprob: -1.8890397548675537
    4. '>=' → logprob: -2.2640397548675537
    5. ' <=' → logprob: -3.1390397548675537
    6. ' <' → logprob: -3.8890397548675537
    7. '<=' → logprob: -4.514039993286133
    8. '+' → logprob: -5.764039993286133
    9. '<' → logprob: -5.764039993286133
    10. '[' → logprob: -6.764039993286133

Token 769: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.013262116350233555
    2. 'A' → logprob: -4.6382622718811035
    3. ' B' → logprob: -5.8882622718811035
    4. '(B' → logprob: -7.5132622718811035
    5. ' (' → logprob: -9.638261795043945
    6. ' A' → logprob: -10.013261795043945
    7. '(A' → logprob: -10.638261795043945
    8. '(' → logprob: -11.013261795043945
    9. 'max' → logprob: -11.263261795043945
    10. 'min' → logprob: -12.138261795043945

Token 770: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.512051522731781
    2. '+' → logprob: -1.2620515823364258
    3. ' >=' → logprob: -2.262051582336426
    4. ' +' → logprob: -5.137051582336426
    5. '<' → logprob: -5.762051582336426
    6. '-' → logprob: -6.012051582336426
    7. ' <' → logprob: -6.762051582336426
    8. '>' → logprob: -7.637051582336426
    9. ' -' → logprob: -9.262051582336426
    10. ' ' → logprob: -9.262051582336426

Token 771: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006663294625468552
    2. '1' → logprob: -7.50066614151001
    3. ' A' → logprob: -9.500666618347168
    4. '0' → logprob: -10.750666618347168
    5. '(A' → logprob: -12.250666618347168
    6. 'B' → logprob: -12.875666618347168
    7. 'max' → logprob: -13.250666618347168
    8. '2' → logprob: -13.375666618347168
    9. '   ' → logprob: -13.500666618347168
    10. ' ' → logprob: -13.875666618347168

Token 772: ':
' (ID: 734)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.15711168944835663
    2. ' >=' → logprob: -2.157111644744873
    3. '+' → logprob: -3.657111644744873
    4. ' +' → logprob: -6.657111644744873
    5. '>' → logprob: -6.907111644744873
    6. '<' → logprob: -7.157111644744873
    7. ' ' → logprob: -8.282112121582031
    8. ' <' → logprob: -8.407112121582031
    9. '-' → logprob: -8.657112121582031
    10. '   ' → logprob: -10.407112121582031

Token 773: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06979914009571075
    2. '   ' → logprob: -3.9447991847991943
    3. ' >' → logprob: -4.069798946380615
    4. '>' → logprob: -4.194798946380615
    5. ' :' → logprob: -5.069798946380615
    6. ' ==' → logprob: -5.694798946380615
    7. ' !=' → logprob: -6.194798946380615
    8. ':
' → logprob: -6.569798946380615
    9. ' >=' → logprob: -7.069798946380615
    10. '==' → logprob: -7.319798946380615

Token 774: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04311862960457802
    2. '   ' → logprob: -3.793118715286255
    3. 'for' → logprob: -4.668118476867676
    4. ' for' → logprob: -5.168118476867676
    5. ':
' → logprob: -5.918118476867676
    6. ' :' → logprob: -7.293118476867676
    7. '=' → logprob: -8.043118476867676
    8. '[' → logprob: -8.793118476867676
    9. '>' → logprob: -9.043118476867676
    10. ' =' → logprob: -9.543118476867676

Token 775: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14531825482845306
    2. ' for' → logprob: -2.0203182697296143
    3. 'z' → logprob: -6.270318031311035
    4. '   ' → logprob: -7.770318031311035
    5. ' z' → logprob: -9.270318031311035
    6. 'R' → logprob: -9.520318031311035
    7. 'range' → logprob: -10.395318031311035
    8. 'if' → logprob: -10.895318031311035
    9. 'i' → logprob: -10.895318031311035
    10. ' R' → logprob: -11.270318031311035

Token 776: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5083870887756348
    2. ' N' → logprob: -2.1333870887756348
    3. 'True' → logprob: -2.5083870887756348
    4. 'B' → logprob: -2.6333870887756348
    5. ' not' → logprob: -3.6333870887756348
    6. ' True' → logprob: -3.6333870887756348
    7. 'A' → logprob: -4.008387088775635
    8. ' B' → logprob: -4.133387088775635
    9. 'not' → logprob: -4.133387088775635
    10. ' A' → logprob: -5.133387088775635

Token 777: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22890809178352356
    2. '-' → logprob: -1.7289080619812012
    3. '-B' → logprob: -4.228908061981201
    4. ' >' → logprob: -5.478908061981201
    5. ' >=' → logprob: -5.853908061981201
    6. '+' → logprob: -6.353908061981201
    7. '>' → logprob: -6.728908061981201
    8. '>=' → logprob: -7.228908061981201
    9. '   ' → logprob: -7.728908061981201
    10. '-A' → logprob: -7.978908061981201

Token 778: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04313255473971367
    2. ' B' → logprob: -3.1681325435638428
    3. 'A' → logprob: -9.043132781982422
    4. ' A' → logprob: -11.918132781982422
    5. ' ' → logprob: -13.043132781982422
    6. ' (' → logprob: -13.293132781982422
    7. '(B' → logprob: -13.793132781982422
    8. '(' → logprob: -14.418132781982422
    9. '>B' → logprob: -14.543132781982422
    10. '	B' → logprob: -14.668132781982422

Token 779: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31214457750320435
    2. ' -' → logprob: -1.4371445178985596
    3. ' !=' → logprob: -4.187144756317139
    4. ' >' → logprob: -5.187144756317139
    5. ':' → logprob: -5.687144756317139
    6. '!=' → logprob: -5.812144756317139
    7. '>' → logprob: -6.062144756317139
    8. '+' → logprob: -7.812144756317139
    9. '-B' → logprob: -8.43714427947998
    10. '   ' → logprob: -9.31214427947998

Token 780: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0028221122920513153
    2. ' A' → logprob: -5.877821922302246
    3. ' ' → logprob: -11.752821922302246
    4. '1' → logprob: -12.127821922302246
    5. '0' → logprob: -13.377821922302246
    6. 'B' → logprob: -14.877821922302246
    7. '   ' → logprob: -15.127821922302246
    8. '	A' → logprob: -15.127821922302246
    9. '(A' → logprob: -15.377821922302246
    10. 'a' → logprob: -15.502821922302246

Token 781: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17057327926158905
    2. ' !=' → logprob: -3.0455732345581055
    3. ' >' → logprob: -3.0455732345581055
    4. '>' → logprob: -3.2955732345581055
    5. '!=' → logprob: -4.0455732345581055
    6. ' >=' → logprob: -6.4205732345581055
    7. ' ==' → logprob: -6.7955732345581055
    8. '==' → logprob: -6.7955732345581055
    9. '>=' → logprob: -6.7955732345581055
    10. '   ' → logprob: -7.6705732345581055

Token 782: ' non' (ID: 2893)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7952507138252258
    2. 'not' → logprob: -0.7952507138252258
    3. ':' → logprob: -3.295250654220581
    4. '0' → logprob: -3.420250654220581
    5. '1' → logprob: -4.79525089263916
    6. '!=' → logprob: -4.79525089263916
    7. 'True' → logprob: -5.92025089263916
    8. ' True' → logprob: -6.04525089263916
    9. '   ' → logprob: -6.17025089263916
    10. ' ' → logprob: -7.04525089263916

Token 783: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04469836875796318
    2. '=' → logprob: -3.169698476791382
    3. 'zero' → logprob: -6.919698238372803
    4. '==' → logprob: -7.794698238372803
    5. ' ' → logprob: -9.419698715209961
    6. ' zero' → logprob: -9.919698715209961
    7. ' =' → logprob: -10.294698715209961
    8. ')' → logprob: -10.919698715209961
    9. 'z' → logprob: -11.044698715209961
    10. ' ==' → logprob: -11.169698715209961

Token 784: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016481608618050814
    2. ':
' → logprob: -7.00164794921875
    3. '>' → logprob: -8.62664794921875
    4. '==' → logprob: -8.87664794921875
    5. ' ==' → logprob: -9.00164794921875
    6. ' !=' → logprob: -9.62664794921875
    7. ' :' → logprob: -9.62664794921875
    8. '!=' → logprob: -10.25164794921875
    9. ' >' → logprob: -10.37664794921875
    10. '   ' → logprob: -10.37664794921875

Token 785: ' alors' (ID: 17971)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39958658814430237
    2. 'for' → logprob: -1.77458655834198
    3. '   ' → logprob: -1.89958655834198
    4. ' range' → logprob: -5.2745866775512695
    5. ':' → logprob: -6.1495866775512695
    6. ' z' → logprob: -7.5245866775512695
    7. 'range' → logprob: -7.7745866775512695
    8. ' R' → logprob: -8.27458667755127
    9. ':
' → logprob: -8.27458667755127
    10. 'z' → logprob: -8.52458667755127

Token 786: ' range' (ID: 3352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21799704432487488
    2. ' for' → logprob: -1.7179970741271973
    3. '   ' → logprob: -4.717997074127197
    4. 'z' → logprob: -6.592997074127197
    5. ' range' → logprob: -6.592997074127197
    6. 'range' → logprob: -6.592997074127197
    7. 'R' → logprob: -6.967997074127197
    8. ' R' → logprob: -6.967997074127197
    9. 'n' → logprob: -7.967997074127197
    10. ' z' → logprob: -8.467996597290039

Token 787: ' s' (ID: 265)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.269265353679657
    2. '(' → logprob: -1.5192654132843018
    3. '(B' → logprob: -4.269265174865723
    4. '(min' → logprob: -7.019265174865723
    5. '(A' → logprob: -7.144265174865723
    6. '((' → logprob: -7.644265174865723
    7. ' =' → logprob: -8.519265174865723
    8. '(R' → logprob: -8.644265174865723
    9. '(
' → logprob: -8.769265174865723
    10. ' (' → logprob: -9.019265174865723

Token 788: ''arr' (ID: 49695)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.9857326745986938
    2. ' =' → logprob: -1.4857326745986938
    3. '=' → logprob: -1.7357326745986938
    4. '(' → logprob: -1.8607326745986938
    5. 't' → logprob: -3.6107325553894043
    6. 'top' → logprob: -3.7357325553894043
    7. '(B' → logprob: -5.235732555389404
    8. '1' → logprob: -6.485732555389404
    9. '(P' → logprob: -6.610732555389404
    10. '=N' → logprob: -6.985732555389404

Token 789: 'ête' (ID: 16808)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.433601051568985
    2. '(N' → logprob: -1.5586010217666626
    3. 'art' → logprob: -3.183601140975952
    4. 'top' → logprob: -3.433601140975952
    5. 'op' → logprob: -3.933601140975952
    6. '=' → logprob: -3.933601140975952
    7. 't' → logprob: -5.433600902557373
    8. 'arts' → logprob: -5.683600902557373
    9. '(B' → logprob: -5.808600902557373
    10. '(P' → logprob: -6.058600902557373

Token 790: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3124608099460602
    2. '(N' → logprob: -1.4374607801437378
    3. '(B' → logprob: -3.5624608993530273
    4. '(
' → logprob: -6.937460899353027
    5. '(A' → logprob: -7.437460899353027
    6. '((' → logprob: -8.187460899353027
    7. '(L' → logprob: -8.562460899353027
    8. '(min' → logprob: -9.312460899353027
    9. '(I' → logprob: -9.937460899353027
    10. '   ' → logprob: -10.062460899353027

Token 791: ' min' (ID: 1349)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.35239773988723755
    2. 'B' → logprob: -2.2273976802825928
    3. 'min' → logprob: -2.2273976802825928
    4. ' N' → logprob: -3.7273976802825928
    5. '(N' → logprob: -4.102397918701172
    6. ' min' → logprob: -4.352397918701172
    7. '(B' → logprob: -4.977397918701172
    8. ' B' → logprob: -4.977397918701172
    9. '1' → logprob: -5.852397918701172
    10. '(min' → logprob: -6.102397918701172

Token 792: '(A' (ID: 10706)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.763487696647644
    2. '(N' → logprob: -0.763487696647644
    3. '(' → logprob: -3.1384878158569336
    4. '(A' → logprob: -3.8884878158569336
    5. '(min' → logprob: -6.013487815856934
    6. '((' → logprob: -7.263487815856934
    7. '(P' → logprob: -8.263487815856934
    8. '(R' → logprob: -8.638487815856934
    9. '(
' → logprob: -9.013487815856934
    10. '(n' → logprob: -9.638487815856934

Token 793: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2359200417995453
    2. '(' → logprob: -2.610919952392578
    3. '(B' → logprob: -3.110919952392578
    4. '(A' → logprob: -3.360919952392578
    5. '+' → logprob: -3.610919952392578
    6. '(N' → logprob: -3.985919952392578
    7. ' ,' → logprob: -5.735919952392578
    8. ',B' → logprob: -5.860919952392578
    9. ' +' → logprob: -6.610919952392578
    10. ',A' → logprob: -7.235919952392578

Token 794: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.007250337861478329
    2. ' B' → logprob: -5.6322503089904785
    3. ',' → logprob: -6.1322503089904785
    4. '(B' → logprob: -7.6322503089904785
    5. 'N' → logprob: -8.007250785827637
    6. ',B' → logprob: -8.257250785827637
    7. '1' → logprob: -8.882250785827637
    8. ')' → logprob: -9.382250785827637
    9. '(N' → logprob: -10.382250785827637
    10. '(' → logprob: -10.382250785827637

Token 795: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04364027827978134
    2. '(A' → logprob: -3.543640375137329
    3. ',A' → logprob: -5.16864013671875
    4. '(' → logprob: -5.66864013671875
    5. ' ,' → logprob: -6.54364013671875
    6. ')' → logprob: -6.91864013671875
    7. '(B' → logprob: -7.41864013671875
    8. ',B' → logprob: -7.79364013671875
    9. ',min' → logprob: -8.16864013671875
    10. '(min' → logprob: -8.79364013671875

Token 796: ' N' (ID: 478)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1771640032529831
    2. 'N' → logprob: -2.177164077758789
    3. ' B' → logprob: -3.177164077758789
    4. ' N' → logprob: -5.427164077758789
    5. 'A' → logprob: -6.302164077758789
    6. 'min' → logprob: -8.177164077758789
    7. ' A' → logprob: -8.677164077758789
    8. ' ' → logprob: -8.802164077758789
    9. 'P' → logprob: -9.552164077758789
    10. ' min' → logprob: -9.552164077758789

Token 797: '-B' (ID: 8287)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1353659629821777
    2. ' -' → logprob: -1.2603659629821777
    3. '-B' → logprob: -1.5103659629821777
    4. ',' → logprob: -1.8853659629821777
    5. '+' → logprob: -4.135365962982178
    6. '(' → logprob: -6.385365962982178
    7. ')' → logprob: -7.010365962982178
    8. ',B' → logprob: -7.135365962982178
    9. ' ,' → logprob: -7.385365962982178
    10. ' +' → logprob: -7.635365962982178

Token 798: ').
' (ID: 6294)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03646526113152504
    2. '()+' → logprob: -4.161465167999268
    3. ' +' → logprob: -4.911465167999268
    4. ',' → logprob: -5.286465167999268
    5. '()' → logprob: -6.161465167999268
    6. '(A' → logprob: -6.161465167999268
    7. ')' → logprob: -6.911465167999268
    8. '+A' → logprob: -7.911465167999268
    9. '(),' → logprob: -8.036465644836426
    10. 'A' → logprob: -8.036465644836426

Token 799: '   ' (ID: 271)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9531069397926331
    2. '   ' → logprob: -1.7031068801879883
    3. 'min' → logprob: -1.9531068801879883
    4. ' range' → logprob: -2.8281068801879883
    5. '(R' → logprob: -2.8281068801879883
    6. 'for' → logprob: -3.0781068801879883
    7. ' for' → logprob: -4.078106880187988
    8. ':' → logprob: -4.203106880187988
    9. '(range' → logprob: -4.203106880187988
    10. ' min' → logprob: -4.328106880187988

Token 800: ' loop' (ID: 11453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3257109224796295
    2. ' for' → logprob: -1.5757108926773071
    3. '   ' → logprob: -3.4507110118865967
    4. 'z' → logprob: -5.075710773468018
    5. 'range' → logprob: -5.200710773468018
    6. ':' → logprob: -5.575710773468018
    7. 'end' → logprob: -5.950710773468018
    8. 'R' → logprob: -5.950710773468018
    9. ' z' → logprob: -5.950710773468018
    10. 'max' → logprob: -6.075710773468018

Token 801: '_range' (ID: 22022)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2249002903699875
    2. '=' → logprob: -1.724900245666504
    3. '_end' → logprob: -5.349900245666504
    4. '   ' → logprob: -5.724900245666504
    5. '_' → logprob: -5.974900245666504
    6. '(' → logprob: -6.099900245666504
    7. '(R' → logprob: -6.474900245666504
    8. '_range' → logprob: -6.474900245666504
    9. 'end' → logprob: -6.724900245666504
    10. 'stop' → logprob: -6.974900245666504

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0662793293595314
    2. '=' → logprob: -2.816279411315918
    3. '(' → logprob: -5.566279411315918
    4. '(min' → logprob: -8.566279411315918
    5. '=min' → logprob: -8.691279411315918
    6. 'min' → logprob: -10.191279411315918
    7. '   ' → logprob: -10.816279411315918
    8. '(range' → logprob: -10.816279411315918
    9. '(R' → logprob: -11.191279411315918
    10. ' ' → logprob: -12.316279411315918

Token 803: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05490744113922119
    2. ' min' → logprob: -2.9299073219299316
    3. '(min' → logprob: -10.92990779876709
    4. 'range' → logprob: -12.67990779876709
    5. '	min' → logprob: -12.92990779876709
    6. '[min' → logprob: -14.42990779876709
    7. '   ' → logprob: -14.80490779876709
    8. 'mini' → logprob: -15.67990779876709
    9. ' range' → logprob: -15.80490779876709
    10. ' ' → logprob: -15.80490779876709

Token 804: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.006743792910128832
    2. '(' → logprob: -5.006743907928467
    3. '(
' → logprob: -10.756743431091309
    4. '((' → logprob: -12.381743431091309
    5. ' (' → logprob: -13.756743431091309
    6. 'A' → logprob: -13.756743431091309
    7. '(a' → logprob: -14.506743431091309
    8. '(

' → logprob: -15.631743431091309
    9. '(B' → logprob: -16.381744384765625
    10. '(
' → logprob: -17.256744384765625

Token 805: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022482690401375294
    2. ' +' → logprob: -6.127248287200928
    3. ',' → logprob: -10.00224781036377
    4. '()+' → logprob: -11.12724781036377
    5. ')+' → logprob: -13.62724781036377
    6. ' ,' → logprob: -15.00224781036377
    7. '(' → logprob: -15.00224781036377
    8. ')' → logprob: -15.00224781036377
    9. '+B' → logprob: -16.002248764038086
    10. '[' → logprob: -16.252248764038086

Token 806: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012737659562844783
    2. ' ' → logprob: -9.125127792358398
    3. ',' → logprob: -11.500127792358398
    4. '+' → logprob: -11.875127792358398
    5. ')' → logprob: -14.000127792358398
    6. '(' → logprob: -16.0001277923584
    7. ' +' → logprob: -16.1251277923584
    8. ' ,' → logprob: -16.2501277923584
    9. '```' → logprob: -16.5001277923584
    10. '2' → logprob: -17.7501277923584

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -10.875020027160645
    3. '(' → logprob: -14.750020027160645
    4. '+' → logprob: -15.250020027160645
    5. ')' → logprob: -15.250020027160645
    6. '```' → logprob: -16.00002098083496
    7. ',' → logprob: -16.37502098083496
    8. ' +' → logprob: -18.12502098083496
    9. '
' → logprob: -18.12502098083496
    10. ' (' → logprob: -18.62502098083496

Token 808: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020663968462031335
    2. ',N' → logprob: -8.87520694732666
    3. ' ,' → logprob: -9.75020694732666
    4. ',
' → logprob: -12.00020694732666
    5. ',n' → logprob: -13.75020694732666
    6. ')' → logprob: -14.37520694732666
    7. ',B' → logprob: -15.00020694732666
    8. 'N' → logprob: -16.375205993652344
    9. ',

' → logprob: -16.875205993652344
    10. ',I' → logprob: -17.000205993652344

Token 809: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.038045283406972885
    2. ' N' → logprob: -3.2880451679229736
    3. '   ' → logprob: -13.413044929504395
    4. ' ' → logprob: -13.413044929504395
    5. '(N' → logprob: -15.288044929504395
    6. '	N' → logprob: -15.413044929504395
    7. ' (' → logprob: -16.03804588317871
    8. '    ' → logprob: -16.53804588317871
    9. ')' → logprob: -16.53804588317871
    10. 'n' → logprob: -17.03804588317871

Token 810: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6800017356872559
    2. '-B' → logprob: -1.0550017356872559
    3. '-' → logprob: -1.9300017356872559
    4. ',' → logprob: -10.555002212524414
    5. '-b' → logprob: -12.305002212524414
    6. ' ' → logprob: -12.555002212524414
    7. 'B' → logprob: -13.305002212524414
    8. ')' → logprob: -13.430002212524414
    9. ' ,' → logprob: -13.430002212524414
    10. '−' → logprob: -14.055002212524414

Token 811: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.157039049663581e-05
    2. ' B' → logprob: -9.875051498413086
    3. '	B' → logprob: -18.375051498413086
    4. '   ' → logprob: -18.500051498413086
    5. ' ' → logprob: -18.875051498413086
    6. 'b' → logprob: -20.250051498413086
    7. '       ' → logprob: -21.000051498413086
    8. '(B' → logprob: -21.000051498413086
    9. '-B' → logprob: -21.875051498413086
    10. '_B' → logprob: -22.000051498413086

Token 812: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021319588995538652
    2. ')
' → logprob: -9.000213623046875
    3. ' )' → logprob: -9.625213623046875
    4. '))' → logprob: -11.750213623046875
    5. '   ' → logprob: -12.875213623046875
    6. '+' → logprob: -13.625213623046875
    7. '-' → logprob: -13.750213623046875
    8. '),' → logprob: -13.875213623046875
    9. ')#' → logprob: -14.000213623046875
    10. ')`' → logprob: -14.000213623046875

Token 813: 'else' (ID: 2807)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27100634574890137
    2. 'for' → logprob: -2.2710063457489014
    3. '
' → logprob: -2.6460063457489014
    4. ')' → logprob: -4.2710065841674805
    5. ':
' → logprob: -4.2710065841674805
    6. '[:]' → logprob: -4.5210065841674805
    7. ' for' → logprob: -5.1460065841674805
    8. '[' → logprob: -5.6460065841674805
    9. '\n' → logprob: -5.8960065841674805
    10. '(' → logprob: -6.2710065841674805

Token 814: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36660370230674744
    2. '   ' → logprob: -1.2416037321090698
    3. ':
' → logprob: -4.116603851318359
    4. '=' → logprob: -7.866603851318359
    5. '[' → logprob: -8.11660385131836
    6. ' =' → logprob: -8.36660385131836
    7. '0' → logprob: -9.24160385131836
    8. '{' → logprob: -9.36660385131836
    9. ' :' → logprob: -9.36660385131836
    10. '  ' → logprob: -9.49160385131836

Token 815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0235200896859169
    2. 'loop' → logprob: -4.773519992828369
    3. ' loop' → logprob: -5.148519992828369
    4. ' ' → logprob: -5.773519992828369
    5. 'N' → logprob: -6.273519992828369
    6. 'R' → logprob: -7.398519992828369
    7. ' range' → logprob: -7.523519992828369
    8. '0' → logprob: -7.648519992828369
    9. ' N' → logprob: -7.773519992828369
    10. 'range' → logprob: -7.898519992828369

Token 816: ' #' (ID: 1069)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.46961820125579834
    2. '   ' → logprob: -1.0946182012557983
    3. ' loop' → logprob: -3.344618320465088
    4. 'N' → logprob: -6.344618320465088
    5. 'range' → logprob: -6.719618320465088
    6. 'R' → logprob: -7.719618320465088
    7. '0' → logprob: -7.844618320465088
    8. ' ' → logprob: -8.21961784362793
    9. ' N' → logprob: -8.96961784362793
    10. ' range' → logprob: -9.21961784362793

Token 817: ' Sinon' (ID: 154924)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.2676544785499573
    2. '   ' → logprob: -1.5176544189453125
    3. '#' → logprob: -4.3926544189453125
    4. ' loop' → logprob: -5.8926544189453125
    5. '
' → logprob: -7.7676544189453125
    6. '(loop' → logprob: -10.517654418945312
    7. '    
' → logprob: -12.892654418945312
    8. '.loop' → logprob: -13.142654418945312
    9. '```' → logprob: -13.142654418945312
    10. '0' → logprob: -13.392654418945312

Token 818: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14605410397052765
    2. ':' → logprob: -2.6460540294647217
    3. ':
' → logprob: -2.7710540294647217
    4. ' loop' → logprob: -6.646054267883301
    5. 'loop' → logprob: -7.396054267883301
    6. '
' → logprob: -8.6460542678833
    7. '(loop' → logprob: -9.5210542678833
    8. ' :
' → logprob: -10.5210542678833
    9. '0' → logprob: -10.7710542678833
    10. ' ' → logprob: -10.8960542678833

Token 819: ' la' (ID: 557)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.46530991792678833
    2. '   ' → logprob: -1.2153098583221436
    3. ' loop' → logprob: -2.5903098583221436
    4. ' ' → logprob: -8.590310096740723
    5. 'range' → logprob: -9.715310096740723
    6. '(loop' → logprob: -9.965310096740723
    7. '0' → logprob: -10.340310096740723
    8. '  ' → logprob: -10.465310096740723
    9. '#' → logprob: -10.715310096740723
    10. '1' → logprob: -11.590310096740723

Token 820: ' boucle' (ID: 174211)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.3874257504940033
    2. ' loop' → logprob: -1.1374257802963257
    3. 'range' → logprob: -8.262425422668457
    4. '
' → logprob: -9.137425422668457
    5. '(loop' → logprob: -10.137425422668457
    6. '#' → logprob: -10.637425422668457
    7. ' ' → logprob: -11.012425422668457
    8. 'for' → logprob: -11.137425422668457
    9. ' range' → logprob: -11.262425422668457
    10. '   ' → logprob: -11.512425422668457

Token 821: ' va' (ID: 3423)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.6860760450363159
    2. '=' → logprob: -1.186076045036316
    3. ' =' → logprob: -2.1860761642456055
    4. 'range' → logprob: -2.9360761642456055
    5. '   ' → logprob: -3.9360761642456055
    6. 'loop' → logprob: -6.4360761642456055
    7. ' range' → logprob: -6.6860761642456055
    8. ' loop' → logprob: -7.5610761642456055
    9. ' continues' → logprob: -7.9360761642456055
    10. '_loop' → logprob: -8.061076164245605

Token 822: ' jusqu' (ID: 21961)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.4652379751205444
    2. 'range' → logprob: -1.7152379751205444
    3. ' R' → logprob: -2.090238094329834
    4. '   ' → logprob: -2.340238094329834
    5. 'N' → logprob: -2.465238094329834
    6. 'R' → logprob: -2.840238094329834
    7. ' loop' → logprob: -2.840238094329834
    8. ' N' → logprob: -2.840238094329834
    9. 'min' → logprob: -3.340238094329834
    10. ' min' → logprob: -3.715238094329834

Token 823: ''à' (ID: 33688)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7251734733581543
    2. 'N' → logprob: -1.3501734733581543
    3. 'A' → logprob: -2.7251734733581543
    4. '(N' → logprob: -2.9751734733581543
    5. '(' → logprob: -3.3501734733581543
    6. ' min' → logprob: -3.7251734733581543
    7. '(A' → logprob: -3.9751734733581543
    8. 'B' → logprob: -4.225173473358154
    9. '(min' → logprob: -4.475173473358154
    10. '=' → logprob: -4.850173473358154

Token 824: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04367850720882416
    2. 'N' → logprob: -3.7936785221099854
    3. 'B' → logprob: -4.168678283691406
    4. '0' → logprob: -6.043678283691406
    5. 'min' → logprob: -6.918678283691406
    6. ' A' → logprob: -7.418678283691406
    7. '(A' → logprob: -7.793678283691406
    8. 'P' → logprob: -8.918678283691406
    9. '1' → logprob: -9.293678283691406
    10. 'max' → logprob: -10.168678283691406

Token 825: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02069440297782421
    2. ' +' → logprob: -3.8956944942474365
    3. '   ' → logprob: -9.145694732666016
    4. '```' → logprob: -11.145694732666016
    5. 'if' → logprob: -12.270694732666016
    6. ':' → logprob: -12.270694732666016
    7. '
' → logprob: -12.645694732666016
    8. '=' → logprob: -12.770694732666016
    9. '+A' → logprob: -13.020694732666016
    10. '+
' → logprob: -13.145694732666016

Token 826: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010318557906430215
    2. ' ' → logprob: -9.375102996826172
    3. 'B' → logprob: -12.250102996826172
    4. '   ' → logprob: -12.750102996826172
    5. '2' → logprob: -13.250102996826172
    6. ')' → logprob: -13.625102996826172
    7. 'A' → logprob: -13.750102996826172
    8. '```' → logprob: -13.750102996826172
    9. '0' → logprob: -13.875102996826172
    10. '...' → logprob: -14.250102996826172

Token 827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7014437364414334e-05
    2. ' ' → logprob: -10.87502670288086
    3. '2' → logprob: -12.00002670288086
    4. 'B' → logprob: -14.25002670288086
    5. 'A' → logprob: -15.00002670288086
    6. '   ' → logprob: -15.75002670288086
    7. '<|end|>' → logprob: -16.37502670288086
    8. '+' → logprob: -16.56252670288086
    9. '```' → logprob: -16.75002670288086
    10. 'N' → logprob: -16.87502670288086

Token 828: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4398452341556549
    2. ':' → logprob: -1.5648452043533325
    3. ':
' → logprob: -2.939845323562622
    4. 'loop' → logprob: -3.189845323562622
    5. '=' → logprob: -3.939845323562622
    6. ' =' → logprob: -4.064845085144043
    7. ' loop' → logprob: -5.314845085144043
    8. '(loop' → logprob: -6.189845085144043
    9. '```' → logprob: -6.189845085144043
    10. ')' → logprob: -6.689845085144043

Token 829: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007000585552304983
    2. 'A' → logprob: -5.38200044631958
    3. '):' → logprob: -7.13200044631958
    4. '   ' → logprob: -7.25700044631958
    5. ')
' → logprob: -7.75700044631958
    6. 'N' → logprob: -9.257000923156738
    7. ' )' → logprob: -9.507000923156738
    8. ':' → logprob: -10.132000923156738
    9. '(A' → logprob: -10.132000923156738
    10. '1' → logprob: -10.132000923156738

Token 830: 'cl' (ID: 565)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09480631351470947
    2. ')' → logprob: -3.46980619430542
    3. '+' → logprob: -3.71980619430542
    4. '```' → logprob: -4.59480619430542
    5. 'A' → logprob: -4.96980619430542
    6. ':
' → logprob: -5.96980619430542
    7. '):' → logprob: -5.96980619430542
    8. '   ' → logprob: -6.09480619430542
    9. ':A' → logprob: -6.21980619430542
    10. '=' → logprob: -6.59480619430542

Token 831: 'u' (ID: 84)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9917409420013428
    2. ':' → logprob: -1.1167409420013428
    3. ')' → logprob: -1.2417409420013428
    4. '):
' → logprob: -5.116741180419922
    5. 'p' → logprob: -6.366741180419922
    6. '```' → logprob: -6.866741180419922
    7. 'cept' → logprob: -6.991741180419922
    8. 't' → logprob: -7.741741180419922
    9. 'clude' → logprob: -7.866741180419922
    10. ':)' → logprob: -7.991741180419922

Token 832: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04100445657968521
    2. '):' → logprob: -3.6660044193267822
    3. '):
' → logprob: -4.791004657745361
    4. ':' → logprob: -6.041004657745361
    5. '1' → logprob: -6.666004657745361
    6. '+' → logprob: -7.291004657745361
    7. '(' → logprob: -8.041004180908203
    8. '):

' → logprob: -8.166004180908203
    9. 'A' → logprob: -8.416004180908203
    10. 't' → logprob: -8.541004180908203

Token 833: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1870410442352295
    2. 'loop' → logprob: -1.8120410442352295
    3. ' loop' → logprob: -5.062041282653809
    4. '
' → logprob: -8.312041282653809
    5. '```' → logprob: -8.312041282653809
    6. 'range' → logprob: -8.937041282653809
    7. '(loop' → logprob: -9.312041282653809
    8. 'for' → logprob: -9.562041282653809
    9. '[' → logprob: -10.812041282653809
    10. ':' → logprob: -10.812041282653809

Token 834: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' (adapté à ' loop') → logprob: -0.010261116549372673
    2. '   ' → logprob: -4.635261058807373
    3. ' loop' → logprob: -8.260261535644531
    4. 'range' → logprob: -8.635261535644531
    5. '
' → logprob: -10.260261535644531
    6. '```' → logprob: -11.135261535644531
    7. 'for' → logprob: -12.010261535644531
    8. 'A' → logprob: -12.760261535644531
    9. '(loop' → logprob: -13.260261535644531
    10. '    
' → logprob: -13.260261535644531

Token 835: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0005593468667939305
    2. '=' → logprob: -8.12555980682373
    3. ' =' → logprob: -8.75055980682373
    4. 'range' → logprob: -9.50055980682373
    5. '   ' → logprob: -12.25055980682373
    6. 'Range' → logprob: -12.50055980682373
    7. '=_' → logprob: -12.87555980682373
    8. ':' → logprob: -13.00055980682373
    9. '_length' → logprob: -13.12555980682373
    10. 'A' → logprob: -13.25055980682373

Token 836: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. '   ' → logprob: -14.535224914550781
    4. ':' → logprob: -15.535224914550781
    5. '	' → logprob: -16.41022491455078
    6. '=
' → logprob: -16.53522491455078
    7. ' ' → logprob: -17.03522491455078
    8. ')' → logprob: -18.03522491455078
    9. ' =
' → logprob: -18.16022491455078
    10. '＝' → logprob: -18.16022491455078

Token 837: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01105159055441618
    2. ' A' → logprob: -4.511051654815674
    3. '0' → logprob: -13.011051177978516
    4. '(A' → logprob: -14.011051177978516
    5. ' ' → logprob: -14.761051177978516
    6. '	A' → logprob: -15.761051177978516
    7. '   ' → logprob: -16.011051177978516
    8. 'B' → logprob: -17.011051177978516
    9. 'N' → logprob: -17.511051177978516
    10. '(' → logprob: -17.886051177978516

Token 838: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6326993703842163
    2. ' +' → logprob: -0.7576993703842163
    3. '+
' → logprob: -10.507699012756348
    4. ' +
' → logprob: -10.507699012756348
    5. '()+' → logprob: -11.882699012756348
    6. '1' → logprob: -12.132699012756348
    7. ')' → logprob: -12.382699012756348
    8. ' ' → logprob: -12.382699012756348
    9. '
' → logprob: -12.757699012756348
    10. 's' → logprob: -12.882699012756348

Token 839: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -18.000003814697266
    4. '0' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '2' → logprob: -18.875003814697266
    7. '۱' → logprob: -19.625003814697266
    8. '+' → logprob: -19.812503814697266
    9. '﻿' → logprob: -19.875003814697266
    10. '
' → logprob: -20.250003814697266

Token 840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. ' ' → logprob: -17.5
    4. '
' → logprob: -18.0
    5. '2' → logprob: -18.375
    6. '0' → logprob: -18.5
    7. '   ' → logprob: -18.8125
    8. '１' → logprob: -20.0
    9. '۱' → logprob: -20.0625
    10. '' → logprob: -20.3125

Token 841: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00439415592700243
    2. ' for' → logprob: -5.504394054412842
    3. '
' → logprob: -9.12939453125
    4. '```' → logprob: -9.62939453125
    5. ':' → logprob: -9.87939453125
    6. 'range' → logprob: -10.12939453125
    7. 'i' → logprob: -11.50439453125
    8. ' 
' → logprob: -11.75439453125
    9. '#' → logprob: -11.87939453125
    10. ')' → logprob: -12.12939453125

Token 842: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.696889623621246e-06
    2. ' for' → logprob: -13.37500286102295
    3. '```' → logprob: -14.00000286102295
    4. '
' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.375001907348633
    6. 'if' → logprob: -17.625001907348633
    7. 'range' → logprob: -17.875001907348633
    8. 'f' → logprob: -18.500001907348633
    9. ' 
' → logprob: -18.625001907348633
    10. '	for' → logprob: -18.875001907348633

Token 843: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.875000953674316
    3. 'if' → logprob: -16.25
    4. '
' → logprob: -16.625
    5. 'i' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. '#' → logprob: -18.625
    8. 'R' → logprob: -19.0
    9. 'def' → logprob: -19.25
    10. '    
' → logprob: -19.25

Token 844: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2556723654270172
    2. 'cle' → logprob: -1.5056723356246948
    3. 'r' → logprob: -6.130672454833984
    4. 'range' → logprob: -7.130672454833984
    5. 'loop' → logprob: -8.130672454833984
    6. 'c' → logprob: -8.505672454833984
    7. 'p' → logprob: -9.755672454833984
    8. 'cles' → logprob: -10.255672454833984
    9. 'n' → logprob: -10.505672454833984
    10. 'k' → logprob: -10.755672454833984

Token 845: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11109201610088348
    2. ' for' → logprob: -2.3610920906066895
    3. ' in' → logprob: -5.6110920906066895
    4. 'in' → logprob: -6.2360920906066895
    5. ' =' → logprob: -6.2360920906066895
    6. '(loop' → logprob: -7.1110920906066895
    7. '=' → logprob: -7.2360920906066895
    8. '
' → logprob: -7.6110920906066895
    9. ' i' → logprob: -8.611091613769531
    10. 'i' → logprob: -8.736091613769531

Token 846: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6250788569450378
    2. 'R' → logprob: -1.1250789165496826
    3. ' i' → logprob: -2.7500789165496826
    4. ' R' → logprob: -2.8750789165496826
    5. 'loop' → logprob: -5.3750786781311035
    6. 'range' → logprob: -5.3750786781311035
    7. ' loop' → logprob: -5.8750786781311035
    8. 'k' → logprob: -6.0000786781311035
    9. ' range' → logprob: -6.5000786781311035
    10. '_' → logprob: -6.8750786781311035

Token 847: ''ensemble' (ID: 79341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1997272968292236
    2. 'range' → logprob: -1.5747272968292236
    3. 'loop' → logprob: -1.8247272968292236
    4. 'for' → logprob: -2.1997272968292236
    5. ' i' → logprob: -2.9497272968292236
    6. ' loop' → logprob: -2.9497272968292236
    7. ' range' → logprob: -3.3247272968292236
    8. ' for' → logprob: -3.8247272968292236
    9. 'R' → logprob: -4.1997270584106445
    10. '(loop' → logprob: -4.6997270584106445

Token 848: ' des' (ID: 731)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.26811447739601135
    2. 'loop' → logprob: -1.893114447593689
    3. 'for' → logprob: -2.8931145668029785
    4. '(R' → logprob: -4.8931145668029785
    5. ' loop' → logprob: -5.1431145668029785
    6. '(' → logprob: -5.2681145668029785
    7. 'R' → logprob: -5.8931145668029785
    8. 'range' → logprob: -6.1431145668029785
    9. '(range' → logprob: -6.2681145668029785
    10. ' for' → logprob: -6.6431145668029785

Token 849: ' valeurs' (ID: 73668)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.121305450797081
    2. 'i' → logprob: -2.246305465698242
    3. ' R' → logprob: -5.371305465698242
    4. 'range' → logprob: -6.871305465698242
    5. ' i' → logprob: -7.246305465698242
    6. 'n' → logprob: -7.371305465698242
    7. 'k' → logprob: -7.746305465698242
    8. 'loop' → logprob: -7.996305465698242
    9. 'r' → logprob: -8.496305465698242
    10. ' loop' → logprob: -9.121305465698242

Token 850: ' de' (ID: 334)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.18914297223091125
    2. 'for' → logprob: -2.814142942428589
    3. 'loop' → logprob: -2.814142942428589
    4. ' loop' → logprob: -4.189143180847168
    5. ' for' → logprob: -4.814143180847168
    6. 'i' → logprob: -4.814143180847168
    7. '(R' → logprob: -4.939143180847168
    8. '(i' → logprob: -5.564143180847168
    9. 'in' → logprob: -6.314143180847168
    10. '(' → logprob: -6.439143180847168

Token 851: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4547891318798065
    2. 'R' → logprob: -1.329789161682129
    3. 'r' → logprob: -3.454789161682129
    4. 'range' → logprob: -3.704789161682129
    5. 'loop' → logprob: -3.829789161682129
    6. 'k' → logprob: -3.954789161682129
    7. ' i' → logprob: -6.954789161682129
    8. 'x' → logprob: -7.329789161682129
    9. ' R' → logprob: -7.329789161682129
    10. ' loop' → logprob: -7.829789161682129

Token 852: ' allant' (ID: 122150)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.06802135705947876
    2. '(' → logprob: -3.068021297454834
    3. 'in' → logprob: -4.818021297454834
    4. 'loop' → logprob: -5.818021297454834
    5. '=' → logprob: -6.318021297454834
    6. ' in' → logprob: -6.443021297454834
    7. ' =' → logprob: -6.443021297454834
    8. '(range' → logprob: -6.818021297454834
    9. ' loop' → logprob: -7.193021297454834
    10. 'for' → logprob: -7.443021297454834

Token 853: ' de' (ID: 334)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.6073763370513916
    2. 'in' → logprob: -1.2323763370513916
    3. '(' → logprob: -2.9823763370513916
    4. 'loop' → logprob: -3.3573763370513916
    5. '(k' → logprob: -3.4823763370513916
    6. 'k' → logprob: -3.6073763370513916
    7. ' in' → logprob: -4.9823760986328125
    8. '(R' → logprob: -5.4823760986328125
    9. 'R' → logprob: -5.7323760986328125
    10. ' loop' → logprob: -6.9823760986328125

Token 854: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16010630130767822
    2. 'loop' → logprob: -2.2851061820983887
    3. 'k' → logprob: -3.7851061820983887
    4. 'R' → logprob: -3.9101061820983887
    5. ' loop' → logprob: -6.410106182098389
    6. 'range' → logprob: -7.160106182098389
    7. '(loop' → logprob: -7.285106182098389
    8. ' R' → logprob: -9.035106658935547
    9. '(R' → logprob: -10.160106658935547
    10. ' ' → logprob: -10.160106658935547

Token 855: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.444170743227005
    2. 'loop' → logprob: -1.0691707134246826
    3. 'R' → logprob: -4.569170951843262
    4. 'k' → logprob: -5.819170951843262
    5. '(loop' → logprob: -7.069170951843262
    6. ' loop' → logprob: -7.444170951843262
    7. 'range' → logprob: -7.694170951843262
    8. '(R' → logprob: -11.069170951843262
    9. '
' → logprob: -11.194170951843262
    10. '```' → logprob: -11.194170951843262

Token 856: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020979184191673994
    2. ' ,' → logprob: -7.252098083496094
    3. ',
' → logprob: -7.377098083496094
    4. '(loop' → logprob: -7.502098083496094
    5. ' loop' → logprob: -9.627098083496094
    6. 'loop' → logprob: -10.252098083496094
    7. 'to' → logprob: -10.502098083496094
    8. ',k' → logprob: -11.002098083496094
    9. '
' → logprob: -11.252098083496094
    10. 'in' → logprob: -11.252098083496094

Token 857: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.023278091102838516
    2. ' loop' → logprob: -3.773277997970581
    3. '(loop' → logprob: -10.39827823638916
    4. 'range' → logprob: -13.39827823638916
    5. '```' → logprob: -14.89827823638916
    6. 'k' → logprob: -15.89827823638916
    7. '`' → logprob: -16.148277282714844
    8. '_loop' → logprob: -17.648277282714844
    9. ' range' → logprob: -17.648277282714844
    10. 'loops' → logprob: -18.273277282714844

Token 858: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.7944891452789307
    2. '(loop' → logprob: -0.9194891452789307
    3. 'loop' → logprob: -2.7944891452789307
    4. '_loop' → logprob: -2.9194891452789307
    5. '(' → logprob: -3.9194891452789307
    6. 'range' → logprob: -4.919488906860352
    7. ' loop' → logprob: -6.294488906860352
    8. '(
' → logprob: -6.419488906860352
    9. '+' → logprob: -6.669488906860352
    10. '(k' → logprob: -6.919488906860352

Token 859: '-' (ID: 12)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.08214981853961945
    2. '(' → logprob: -2.5821497440338135
    3. ':' → logprob: -6.082149982452393
    4. '(
' → logprob: -8.457149505615234
    5. ' (' → logprob: -8.957149505615234
    6. '):' → logprob: -9.082149505615234
    7. ')' → logprob: -9.082149505615234
    8. 'loop' → logprob: -9.207149505615234
    9. '(k' → logprob: -9.332149505615234
    10. ',' → logprob: -10.332149505615234

Token 860: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0039118146523833275
    2. 'loop' → logprob: -6.378911972045898
    3. ' loop' → logprob: -6.628911972045898
    4. ' ' → logprob: -7.878911972045898
    5. '(loop' → logprob: -7.878911972045898
    6. ')' → logprob: -10.003911972045898
    7. '```' → logprob: -10.253911972045898
    8. '(' → logprob: -11.253911972045898
    9. '+' → logprob: -11.628911972045898
    10. '   ' → logprob: -11.753911972045898

Token 861: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09865155071020126
    2. ' for' → logprob: -3.473651647567749
    3. '(k' → logprob: -4.09865140914917
    4. 'range' → logprob: -4.22365140914917
    5. '(loop' → logprob: -4.84865140914917
    6. 'k' → logprob: -5.09865140914917
    7. 'in' → logprob: -5.22365140914917
    8. '(' → logprob: -5.59865140914917
    9. '(range' → logprob: -5.97365140914917
    10. ' k' → logprob: -6.72365140914917

Token 862: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03849652037024498
    2. ' for' → logprob: -4.413496494293213
    3. '(k' → logprob: -4.663496494293213
    4. '(' → logprob: -5.538496494293213
    5. '(range' → logprob: -5.788496494293213
    6. ':' → logprob: -5.788496494293213
    7. 'range' → logprob: -6.038496494293213
    8. 'in' → logprob: -7.038496494293213
    9. '(loop' → logprob: -7.288496494293213
    10. '(
' → logprob: -7.538496494293213

Token 863: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009304316714406013
    2. 'range' → logprob: -5.759304523468018
    3. '(' → logprob: -6.384304523468018
    4. '(range' → logprob: -6.759304523468018
    5. '[' → logprob: -6.884304523468018
    6. ' for' → logprob: -7.384304523468018
    7. '(k' → logprob: -7.509304523468018
    8. '```' → logprob: -7.759304523468018
    9. 'k' → logprob: -8.25930404663086
    10. '(
' → logprob: -8.25930404663086

Token 864: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.038047339767217636
    2. ' k' → logprob: -3.2880473136901855
    3. '_k' → logprob: -12.163047790527344
    4. '	k' → logprob: -14.788047790527344
    5. ' ' → logprob: -16.538047790527344
    6. ' ' → logprob: -17.663047790527344
    7. '_' → logprob: -17.663047790527344
    8. '{k' → logprob: -17.788047790527344
    9. 'K' → logprob: -18.038047790527344
    10. '   ' → logprob: -18.288047790527344

Token 865: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20148789882659912
    2. 'in' → logprob: -1.7014878988265991
    3. ' ' → logprob: -9.70148754119873
    4. 'In' → logprob: -12.70148754119873
    5. ',' → logprob: -12.82648754119873
    6. '	in' → logprob: -13.07648754119873
    7. ')' → logprob: -13.70148754119873
    8. '  ' → logprob: -13.82648754119873
    9. 'k' → logprob: -14.32648754119873
    10. 'n' → logprob: -14.57648754119873

Token 866: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0742444097995758
    2. ' R' → logprob: -3.324244499206543
    3. 'range' → logprob: -3.949244499206543
    4. ' range' → logprob: -4.199244499206543
    5. 'loop' → logprob: -7.074244499206543
    6. ' loop' → logprob: -7.824244499206543
    7. 'Range' → logprob: -12.449244499206543
    8. ' ' → logprob: -12.574244499206543
    9. '	R' → logprob: -12.824244499206543
    10. '(R' → logprob: -12.886744499206543

Token 867: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. 'loop' → logprob: -15.50015926361084
    4. '(k' → logprob: -16.625158309936523
    5. ' (' → logprob: -16.625158309936523
    6. '(
' → logprob: -17.625158309936523
    7. '(lo' → logprob: -17.875158309936523
    8. '0' → logprob: -18.750158309936523
    9. ' loop' → logprob: -19.750158309936523
    10. '((' → logprob: -20.000158309936523

Token 868: '_range' (ID: 22022)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.4015806317329407
    2. '_range' → logprob: -1.276580572128296
    3. '(' → logprob: -3.526580572128296
    4. '_loop' → logprob: -3.901580572128296
    5. 'loop' → logprob: -6.526580810546875
    6. ',' → logprob: -8.651580810546875
    7. 'ange' → logprob: -9.026580810546875
    8. '(
' → logprob: -10.026580810546875
    9. '_' → logprob: -10.026580810546875
    10. 'range' → logprob: -10.276580810546875

Token 869: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030052734073251486
    2. '):
' → logprob: -6.128005504608154
    3. ')' → logprob: -7.503005504608154
    4. ':' → logprob: -8.253005027770996
    5. ' ):' → logprob: -13.253005027770996
    6. '):

' → logprob: -13.378005027770996
    7. '):
' → logprob: -13.503005027770996
    8. ',' → logprob: -14.003005027770996
    9. '+' → logprob: -14.378005027770996
    10. '   ' → logprob: -14.878005027770996

Token 870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02048010379076004
    2. 'c' → logprob: -5.270480155944824
    3. 'if' → logprob: -5.270480155944824
    4. 'n' → logprob: -5.520480155944824
    5. '#' → logprob: -7.020480155944824
    6. 'z' → logprob: -7.395480155944824
    7. 'C' → logprob: -7.395480155944824
    8. '    
' → logprob: -7.645480155944824
    9. 'comb' → logprob: -7.770480155944824
    10. '```' → logprob: -7.770480155944824

Token 871: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3199743032455444
    2. '   ' → logprob: -1.6949743032455444
    3. 'if' → logprob: -1.8199743032455444
    4. 'comb' → logprob: -2.194974422454834
    5. 'n' → logprob: -2.569974422454834
    6. 'C' → logprob: -3.194974422454834
    7. ' comb' → logprob: -3.444974422454834
    8. '#' (adapté à ' #') → logprob: -3.694974422454834
    9. 's' → logprob: -3.944974422454834
    10. 't' → logprob: -4.319974422454834

Token 872: ' Q' (ID: 1486)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1045854091644287
    2. 'c' → logprob: -1.3545854091644287
    3. 'C' → logprob: -2.2295854091644287
    4. 'comb' → logprob: -2.2295854091644287
    5. '#' → logprob: -3.1045854091644287
    6. 'fact' → logprob: -3.6045854091644287
    7. 'num' → logprob: -3.8545854091644287
    8. 'z' → logprob: -3.8545854091644287
    9. 'f' → logprob: -4.604585647583008
    10. 'x' → logprob: -4.729585647583008

Token 873: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28341859579086304
    2. ' =' → logprob: -1.4084186553955078
    3. 'k' → logprob: -7.033418655395508
    4. '=k' → logprob: -8.408418655395508
    5. 'u' → logprob: -8.783418655395508
    6. '   ' → logprob: -9.033418655395508
    7. 'f' → logprob: -9.283418655395508
    8. 'n' → logprob: -9.408418655395508
    9. 'Q' → logprob: -9.658418655395508
    10. '1' → logprob: -9.783418655395508

Token 874: ' déf' (ID: 23956)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02268836461007595
    2. '(F' → logprob: -4.897688388824463
    3. ' F' → logprob: -5.147688388824463
    4. '=' → logprob: -5.772688388824463
    5. '(' → logprob: -5.897688388824463
    6. ' (' → logprob: -6.772688388824463
    7. ' =' → logprob: -8.022687911987305
    8. '(
' → logprob: -8.147687911987305
    9. ' ' → logprob: -8.522687911987305
    10. 'C' → logprob: -8.647687911987305

Token 875: 'ini' (ID: 2363)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.2190239429473877
    2. '=' → logprob: -3.0940239429473877
    3. ' =' → logprob: -3.0940239429473877
    4. ' F' → logprob: -3.3440239429473877
    5. '(F' → logprob: -3.7190239429473877
    6. '   ' → logprob: -4.344023704528809
    7. ' comb' → logprob: -5.094023704528809
    8. 'f' → logprob: -5.344023704528809
    9. 'act' → logprob: -5.719023704528809
    10. 'actor' → logprob: -5.969023704528809

Token 876: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18223661184310913
    2. ' =' → logprob: -1.807236671447754
    3. '   ' → logprob: -7.057236671447754
    4. 'F' → logprob: -7.682236671447754
    5. '=
' → logprob: -8.182236671447754
    6. '=C' → logprob: -8.557236671447754
    7. '=k' → logprob: -9.182236671447754
    8. '=(' → logprob: -9.557236671447754
    9. ' as' → logprob: -9.807236671447754
    10. 'C' → logprob: -10.307236671447754

Token 877: ' N' (ID: 478)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.016605855897068977
    2. '(F' → logprob: -4.266605854034424
    3. '   ' → logprob: -6.641605854034424
    4. '(' → logprob: -7.391605854034424
    5. ' F' → logprob: -8.891606330871582
    6. ' (' → logprob: -9.141606330871582
    7. '((' → logprob: -9.641606330871582
    8. 'C' → logprob: -9.891606330871582
    9. 'Q' → logprob: -10.891606330871582
    10. ' ' → logprob: -11.141606330871582

Token 878: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6402601003646851
    2. '-' → logprob: -0.7652601003646851
    3. '-B' → logprob: -5.015260219573975
    4. '-k' → logprob: -8.015259742736816
    5. '   ' → logprob: -8.140259742736816
    6. ' ' → logprob: -8.890259742736816
    7. '<|end|>' → logprob: -9.765259742736816
    8. 'k' → logprob: -10.390259742736816
    9. 'B' → logprob: -10.765259742736816
    10. '-N' → logprob: -11.140259742736816

Token 879: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04416712373495102
    2. 'k' → logprob: -3.6691670417785645
    3. '1' → logprob: -4.0441670417785645
    4. ' B' → logprob: -9.169167518615723
    5. '(B' → logprob: -9.919167518615723
    6. 'A' → logprob: -11.669167518615723
    7. ' ' → logprob: -12.044167518615723
    8. '   ' → logprob: -12.419167518615723
    9. '(' → logprob: -12.544167518615723
    10. '(k' → logprob: -12.794167518615723

Token 880: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07069911807775497
    2. '-' → logprob: -2.6956992149353027
    3. '   ' → logprob: -7.445699214935303
    4. '-k' → logprob: -9.320698738098145
    5. '  ' → logprob: -10.195698738098145
    6. ' ' → logprob: -11.445698738098145
    7. '    ' → logprob: -11.570698738098145
    8. ')' → logprob: -11.820698738098145
    9. '<|end|>' → logprob: -11.820698738098145
    10. ' ' → logprob: -12.320698738098145

Token 881: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.531315314830863e-06
    2. '-k' → logprob: -13.625003814697266
    3. ' k' → logprob: -13.625003814697266
    4. 'A' → logprob: -14.125003814697266
    5. '-' → logprob: -15.750003814697266
    6. ' -' → logprob: -16.375003814697266
    7. '1' → logprob: -16.625003814697266
    8. '	k' → logprob: -18.375003814697266
    9. '-A' → logprob: -18.875003814697266
    10. 'B' → logprob: -19.125003814697266

Token 882: ' -' (ID: 533)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.4904262125492096
    2. '   ' → logprob: -0.9904261827468872
    3. ' Q' → logprob: -5.240426063537598
    4. '-' → logprob: -5.365426063537598
    5. ' -' → logprob: -5.990426063537598
    6. '
' → logprob: -6.865426063537598
    7. '	Q' → logprob: -7.115426063537598
    8. '-Q' → logprob: -7.240426063537598
    9. '    
' → logprob: -8.115426063537598
    10. ' ' → logprob: -8.490426063537598

Token 883: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003997073043137789
    2. 'A' → logprob: -5.628996849060059
    3. 'k' → logprob: -8.378996849060059
    4. ' ' → logprob: -9.003996849060059
    5. ' A' → logprob: -11.253996849060059
    6. 'C' → logprob: -11.628996849060059
    7. '2' → logprob: -11.753996849060059
    8. '0' → logprob: -12.378996849060059
    9. '(' → logprob: -12.878996849060059
    10. '-' → logprob: -13.253996849060059

Token 884: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00631115073338151
    2. 'A' → logprob: -5.131310939788818
    3. 'k' → logprob: -7.881310939788818
    4. ' ' → logprob: -13.756311416625977
    5. 'B' → logprob: -14.006311416625977
    6. '(' → logprob: -14.131311416625977
    7. '0' → logprob: -14.381311416625977
    8. '(A' → logprob: -14.631311416625977
    9. ' A' → logprob: -15.256311416625977
    10. '2' → logprob: -15.381311416625977

Token 885: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4744364619255066
    2. '-' → logprob: -1.8494365215301514
    3. 'Q' → logprob: -2.0994365215301514
    4. ' -' → logprob: -2.4744365215301514
    5. ' Q' → logprob: -5.599436283111572
    6. ' ' → logprob: -5.724436283111572
    7. '  ' → logprob: -6.724436283111572
    8. ')' → logprob: -6.974436283111572
    9. '    
' → logprob: -7.599436283111572
    10. '
' → logprob: -7.724436283111572

Token 886: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.03506026789546013
    2. '   ' → logprob: -3.660060167312622
    3. ' Q' → logprob: -4.785060405731201
    4. ' ' → logprob: -9.035059928894043
    5. '`' → logprob: -10.285059928894043
    6. 'k' → logprob: -10.535059928894043
    7. '=' → logprob: -10.660059928894043
    8. ' =' → logprob: -10.785059928894043
    9. 'N' → logprob: -11.035059928894043
    10. '#' → logprob: -11.160059928894043

Token 887: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.001113189267925918
    2. ' Q' → logprob: -7.501113414764404
    3. '   ' → logprob: -7.501113414764404
    4. ' ' → logprob: -12.876112937927246
    5. 'k' → logprob: -13.001112937927246
    6. '	Q' → logprob: -14.126112937927246
    7. 'q' → logprob: -14.626112937927246
    8. '
' → logprob: -14.876112937927246
    9. ' ' → logprob: -15.251112937927246
    10. '#' → logprob: -15.501112937927246

Token 888: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889033854007721
    2. ' =' → logprob: -2.578890323638916
    3. '=N' → logprob: -15.203890800476074
    4. ',' → logprob: -16.453889846801758
    5. ' ' → logprob: -16.578889846801758
    6. '=
' → logprob: -16.703889846801758
    7. '   ' → logprob: -16.953889846801758
    8. ' =
' → logprob: -17.203889846801758
    9. ' ' → logprob: -17.578889846801758
    10. ')' → logprob: -17.578889846801758

Token 889: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.688212614681106e-05
    2. ' N' → logprob: -11.000017166137695
    3. '(N' → logprob: -16.500017166137695
    4. '   ' → logprob: -18.250017166137695
    5. '	N' → logprob: -18.375017166137695
    6. ' ' → logprob: -19.125017166137695
    7. '(' → logprob: -19.375017166137695
    8. '[N' → logprob: -20.250017166137695
    9. '
' → logprob: -20.875017166137695
    10. '<N' → logprob: -21.000017166137695

Token 890: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.313862681388855
    2. ' -' → logprob: -1.313862681388855
    3. '-B' → logprob: -7.6888628005981445
    4. '   ' → logprob: -9.063862800598145
    5. ' ' → logprob: -11.188862800598145
    6. '  ' → logprob: -13.063862800598145
    7. ' ' → logprob: -13.438862800598145
    8. ' B' → logprob: -13.563862800598145
    9. '    ' → logprob: -13.688862800598145
    10. ')' → logprob: -13.688862800598145

Token 891: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0011706985533237457
    2. ' B' → logprob: -6.751170635223389
    3. ' ' → logprob: -14.876171112060547
    4. '	B' → logprob: -15.876171112060547
    5. '1' → logprob: -17.001171112060547
    6. '(B' → logprob: -17.626171112060547
    7. 'b' → logprob: -17.876171112060547
    8. '<|end|>' → logprob: -18.001171112060547
    9. '   ' → logprob: -18.376171112060547
    10. '>B' → logprob: -19.001171112060547

Token 892: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38708120584487915
    2. ' -' → logprob: -1.1370811462402344
    3. '-k' → logprob: -9.012081146240234
    4. '
' → logprob: -10.012081146240234
    5. '<|end|>' → logprob: -10.387081146240234
    6. ' ' → logprob: -12.512081146240234
    7. '   ' → logprob: -12.637081146240234
    8. ' 
' → logprob: -13.762081146240234
    9. ' ' → logprob: -14.387081146240234
    10. ')' → logprob: -14.512081146240234

Token 893: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.553032628493384e-05
    2. ' k' → logprob: -9.500075340270996
    3. '1' → logprob: -14.375075340270996
    4. '	k' → logprob: -18.500076293945312
    5. ' ' → logprob: -19.875076293945312
    6. '   ' → logprob: -21.375076293945312
    7. '_k' → logprob: -21.750076293945312
    8. '(k' → logprob: -22.000076293945312
    9. '{k' → logprob: -22.250076293945312
    10. '
' → logprob: -22.875076293945312

Token 894: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20930925011634827
    2. ')' → logprob: -2.4593093395233154
    3. '<|end|>' → logprob: -2.4593093395233154
    4. '+' → logprob: -5.584309101104736
    5. ' ' → logprob: -5.959309101104736
    6. '#' → logprob: -6.209309101104736
    7. '  ' → logprob: -6.459309101104736
    8. '
' → logprob: -6.584309101104736
    9. '    
' → logprob: -6.584309101104736
    10. '*' → logprob: -6.834309101104736

Token 895: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.375003814697266
    4. '
' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.375003814697266
    6. '<|end|>' → logprob: -19.625003814697266
    7. '۱' → logprob: -19.937503814697266
    8. '`' → logprob: -20.437503814697266
    9. '' → logprob: -20.500003814697266
    10. '  ' → logprob: -20.687503814697266

Token 896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -18.75
    4. '```' → logprob: -19.125
    5. '۱' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. '' → logprob: -20.5
    8. '
' → logprob: -20.5
    9. '

' → logprob: -20.75
    10. '１' → logprob: -20.8125

Token 897: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3945907950401306
    2. ')' → logprob: -1.6445908546447754
    3. '<|end|>' → logprob: -2.1445908546447754
    4. '*' → logprob: -4.894590854644775
    5. ':' → logprob: -5.894590854644775
    6. '+' → logprob: -6.519590854644775
    7. '#' → logprob: -6.644590854644775
    8. '.' → logprob: -7.769590854644775
    9. ',' → logprob: -7.894590854644775
    10. ']' → logprob: -8.269590377807617

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08117413520812988
    2. ')' → logprob: -2.83117413520813
    3. ':' → logprob: -5.581173896789551
    4. '<|end|>' → logprob: -5.581173896789551
    5. 'if' → logprob: -5.706173896789551
    6. 'z' → logprob: -6.706173896789551
    7. 'for' → logprob: -6.831173896789551
    8. ')*' → logprob: -6.956173896789551
    9. 'f' → logprob: -7.081173896789551
    10. ' ' → logprob: -7.206173896789551

Token 899: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6377957463264465
    2. ')' → logprob: -1.7627956867218018
    3. 'z' → logprob: -2.0127956867218018
    4. 'C' → logprob: -3.2627956867218018
    5. '(' → logprob: -3.3877956867218018
    6. 'F' → logprob: -3.5127956867218018
    7. 'f' → logprob: -4.262795925140381
    8. '#' (adapté à ' #') → logprob: -4.762795925140381
    9. 'if' → logprob: -5.012795925140381
    10. '*' → logprob: -5.012795925140381

Token 900: ' Calcul' (ID: 57243)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.5801782608032227
    2. 'c' → logprob: -1.7051782608032227
    3. 'if' → logprob: -2.2051782608032227
    4. 'comb' → logprob: -2.2051782608032227
    5. 'x' → logprob: -2.8301782608032227
    6. 'z' → logprob: -2.8301782608032227
    7. 'val' → logprob: -3.0801782608032227
    8. 'f' → logprob: -3.3301782608032227
    9. 'q' → logprob: -3.3301782608032227
    10. 't' → logprob: -3.9551782608032227

Token 901: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8755521774291992
    2. ' =' → logprob: -1.2505521774291992
    3. 'C' → logprob: -1.6255521774291992
    4. '=' → logprob: -2.625552177429199
    5. 'z' → logprob: -5.375552177429199
    6. ' C' → logprob: -5.875552177429199
    7. ' comb' → logprob: -6.250552177429199
    8. 'n' → logprob: -6.250552177429199
    9. ':' → logprob: -6.375552177429199
    10. 'comb' → logprob: -6.375552177429199

Token 902: ' terme' (ID: 42959)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.4442483186721802
    2. '(F' → logprob: -1.9442483186721802
    3. 'z' → logprob: -2.3192481994628906
    4. 'comb' → logprob: -3.3192481994628906
    5. 'f' → logprob: -4.319248199462891
    6. 'temp' → logprob: -4.569248199462891
    7. 'com' → logprob: -4.694248199462891
    8. 'val' → logprob: -4.694248199462891
    9. 'C' → logprob: -4.819248199462891
    10. 'tmp' → logprob: -4.819248199462891

Token 903: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3584032654762268
    2. 'C' → logprob: -2.108403205871582
    3. ' =' → logprob: -2.358403205871582
    4. 'term' → logprob: -3.983403205871582
    5. 'z' → logprob: -4.358403205871582
    6. '   ' → logprob: -4.608403205871582
    7. 'c' → logprob: -4.733403205871582
    8. 't' → logprob: -4.983403205871582
    9. 'f' → logprob: -4.983403205871582
    10. '=C' → logprob: -4.983403205871582

Token 904: ' la' (ID: 557)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.25949081778526306
    2. '(F' → logprob: -1.5094908475875854
    3. '(' → logprob: -6.009490966796875
    4. '((' → logprob: -6.134490966796875
    5. 'Q' → logprob: -7.384490966796875
    6. 'C' → logprob: -7.509490966796875
    7. ' (' → logprob: -7.884490966796875
    8. ' F' → logprob: -7.884490966796875
    9. 'z' → logprob: -8.259490966796875
    10. '(
' → logprob: -8.509490966796875

Token 905: ' somme' (ID: 64484)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.5715868473052979
    2. 'f' → logprob: -1.6965868473052979
    3. '(F' → logprob: -2.071586847305298
    4. 'z' → logprob: -3.446586847305298
    5. '(' → logprob: -3.446586847305298
    6. '(
' → logprob: -3.571586847305298
    7. '(f' → logprob: -3.946586847305298
    8. 'C' → logprob: -6.071586608886719
    9. 'fact' → logprob: -6.196586608886719
    10. 'Q' → logprob: -6.446586608886719

Token 906: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5343614220619202
    2. 'C' → logprob: -1.4093613624572754
    3. '=' → logprob: -2.9093613624572754
    4. ' =' → logprob: -3.5343613624572754
    5. 'term' → logprob: -3.6593613624572754
    6. 'z' → logprob: -4.159361362457275
    7. 'comb' → logprob: -4.159361362457275
    8. 'c' → logprob: -4.784361362457275
    9. 't' → logprob: -5.534361362457275
    10. 'com' → logprob: -6.284361362457275

Token 907: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020723707973957062
    2. ' =' → logprob: -4.270723819732666
    3. '*=' → logprob: -5.520723819732666
    4. '=
' → logprob: -7.645723819732666
    5. '   ' → logprob: -7.770723819732666
    6. '*' → logprob: -7.895723819732666
    7. '#' → logprob: -8.145723342895508
    8. 's' → logprob: -8.520723342895508
    9. ')' → logprob: -8.520723342895508
    10. '+=' → logprob: -9.145723342895508

Token 908: ' ajouté' (ID: 127784)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.5301044583320618
    2. '(F' → logprob: -0.9051044583320618
    3. '(' → logprob: -5.780104637145996
    4. 'f' → logprob: -6.905104637145996
    5. '(I' → logprob: -7.030104637145996
    6. ' (' → logprob: -7.530104637145996
    7. 'Q' → logprob: -8.155104637145996
    8. '(f' → logprob: -8.405104637145996
    9. '(
' → logprob: -8.405104637145996
    10. ' F' → logprob: -8.530104637145996

Token 909: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17074203491210938
    2. '=' → logprob: -2.0457420349121094
    3. ' =' → logprob: -4.045742034912109
    4. 'C' → logprob: -5.795742034912109
    5. '(' → logprob: -6.795742034912109
    6. 'comb' → logprob: -7.045742034912109
    7. 'term' → logprob: -7.545742034912109
    8. 'z' → logprob: -7.670742034912109
    9. ',' → logprob: -7.795742034912109
    10. 'com' → logprob: -7.920742034912109

Token 910: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0005569627974182367
    2. ' z' → logprob: -7.500556945800781
    3. '(z' → logprob: -12.750556945800781
    4. '   ' → logprob: -14.750556945800781
    5. '
' → logprob: -14.875556945800781
    6. 'Q' → logprob: -16.25055694580078
    7. '	z' → logprob: -16.62555694580078
    8. '```' → logprob: -17.00055694580078
    9. 'k' → logprob: -17.12555694580078
    10. 'q' → logprob: -17.12555694580078

Token 911: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5269389152526855
    2. '=' → logprob: -1.9019389152526855
    3. 'z' → logprob: -2.2769389152526855
    4. ' =' → logprob: -2.2769389152526855
    5. 'C' → logprob: -3.5269389152526855
    6. 'term' → logprob: -4.4019389152526855
    7. ' +=' → logprob: -5.7769389152526855
    8. '+=' → logprob: -6.0269389152526855
    9. '
' → logprob: -6.7769389152526855
    10. '=C' → logprob: -7.5269389152526855

Token 912: ' appli' (ID: 25550)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.43270331621170044
    2. '   ' → logprob: -1.4327032566070557
    3. ' z' → logprob: -2.3077032566070557
    4. ' (' → logprob: -5.932703495025635
    5. 'term' → logprob: -6.057703495025635
    6. 'C' → logprob: -6.307703495025635
    7. '(z' → logprob: -6.307703495025635
    8. '(' → logprob: -6.932703495025635
    9. ' comb' → logprob: -7.807703495025635
    10. 'comb' → logprob: -7.807703495025635

Token 913: 'qué' (ID: 23535)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.559748649597168
    2. ' +=' → logprob: -1.934748649597168
    3. ' =' → logprob: -2.309748649597168
    4. '=' → logprob: -2.559748649597168
    5. ' z' → logprob: -3.059748649597168
    6. 'z' → logprob: -3.684748649597168
    7. '+=' → logprob: -4.559748649597168
    8. '    ' → logprob: -5.309748649597168
    9. ' à' → logprob: -5.809748649597168
    10. '       ' → logprob: -6.184748649597168

Token 914: ' modulo' (ID: 112372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4218636453151703
    2. ' =' → logprob: -1.2968636751174927
    3. ',' → logprob: -4.546863555908203
    4. '%=' → logprob: -4.671863555908203
    5. ' à' → logprob: -4.796863555908203
    6. ' %=' → logprob: -5.171863555908203
    7. ' +=' → logprob: -5.421863555908203
    8. '   ' → logprob: -5.546863555908203
    9. ' ' → logprob: -5.671863555908203
    10. ' modulo' → logprob: -5.671863555908203

Token 915: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.024240821599960327
    2. ' M' → logprob: -3.774240732192993
    3. '(M' → logprob: -8.024240493774414
    4. ' (' → logprob: -8.274240493774414
    5. '   ' → logprob: -8.774240493774414
    6. '(' → logprob: -9.524240493774414
    7. '(
' → logprob: -9.524240493774414
    8. ' ' → logprob: -10.274240493774414
    9. 'z' → logprob: -10.524240493774414
    10. '```' → logprob: -11.274240493774414

Token 916: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3049052059650421
    2. ' =' → logprob: -2.0549051761627197
    3. 'z' → logprob: -3.0549051761627197
    4. 'term' → logprob: -3.4299051761627197
    5. '=' → logprob: -3.6799051761627197
    6. 'C' → logprob: -4.179905414581299
    7. 'comb' → logprob: -6.054905414581299
    8. '((' → logprob: -6.554905414581299
    9. '=(' → logprob: -6.679905414581299
    10. '(z' → logprob: -6.804905414581299

Token 917: '   ' (ID: 271)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.10656885802745819
    2. '   ' → logprob: -2.7315688133239746
    3. '(z' → logprob: -3.7315688133239746
    4. 'term' → logprob: -5.356568813323975
    5. ' z' → logprob: -5.731568813323975
    6. ' (' → logprob: -6.981568813323975
    7. '(f' → logprob: -7.231568813323975
    8. '(' → logprob: -7.231568813323975
    9. 'f' → logprob: -8.106569290161133
    10. '((' → logprob: -8.231569290161133

Token 918: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.07478180527687073
    2. 'term' → logprob: -2.699781894683838
    3. 'C' → logprob: -7.074781894683838
    4. 'f' → logprob: -7.199781894683838
    5. 'temp' → logprob: -7.324781894683838
    6. '(z' → logprob: -7.449781894683838
    7. 'comb' → logprob: -7.574781894683838
    8. 'tmp' → logprob: -8.07478141784668
    9. ' z' → logprob: -8.32478141784668
    10. '   ' → logprob: -8.94978141784668

Token 919: ' La' (ID: 3038)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0795501247048378
    2. 'term' → logprob: -2.82955002784729
    3. 'C' → logprob: -4.454550266265869
    4. 'comb' → logprob: -6.079550266265869
    5. 'f' → logprob: -6.579550266265869
    6. '   ' → logprob: -6.954550266265869
    7. 'temp' → logprob: -8.829549789428711
    8. 'fact' → logprob: -8.829549789428711
    9. 'com' → logprob: -8.954549789428711
    10. 'val' → logprob: -9.204549789428711

Token 920: ' formule' (ID: 84316)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.36794328689575195
    2. 'term' → logprob: -1.367943286895752
    3. 'f' → logprob: -3.992943286895752
    4. 'Q' → logprob: -4.867943286895752
    5. ' z' → logprob: -5.242943286895752
    6. '=' → logprob: -5.242943286895752
    7. 'F' → logprob: -5.492943286895752
    8. ' term' → logprob: -5.992943286895752
    9. 'C' → logprob: -6.617943286895752
    10. ' =' → logprob: -6.742943286895752

Token 921: ' comporte' (ID: 143953)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22163821756839752
    2. ' =' → logprob: -1.7216382026672363
    3. 'z' → logprob: -3.9716382026672363
    4. ' +=' → logprob: -8.096638679504395
    5. '+=' → logprob: -8.346638679504395
    6. '=z' → logprob: -8.971638679504395
    7. '```' → logprob: -8.971638679504395
    8. ' z' → logprob: -9.221638679504395
    9. ':' → logprob: -9.346638679504395
    10. ')' → logprob: -10.096638679504395

Token 922: ' plusieurs' (ID: 20875)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.1716059297323227
    2. '(F' → logprob: -2.7966058254241943
    3. '(' → logprob: -3.1716058254241943
    4. ' F' → logprob: -3.2966058254241943
    5. ' (' → logprob: -4.421606063842773
    6. '((' → logprob: -6.046606063842773
    7. '(
' → logprob: -6.296606063842773
    8. '(((' → logprob: -7.796606063842773
    9. ' ' → logprob: -8.171606063842773
    10. '   ' → logprob: -8.421606063842773

Token 923: ' arrangements' (ID: 34602)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4387967884540558
    2. '(' → logprob: -1.5637967586517334
    3. 'F' → logprob: -2.8137967586517334
    4. ' *' → logprob: -2.8137967586517334
    5. ' (' → logprob: -4.4387969970703125
    6. '(
' → logprob: -5.1887969970703125
    7. ')' → logprob: -5.9387969970703125
    8. ' F' → logprob: -6.1887969970703125
    9. '*(' → logprob: -6.9387969970703125
    10. 'f' → logprob: -7.1887969970703125

Token 924: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2065058946609497
    2. ' =' → logprob: -1.2065058946609497
    3. 'z' → logprob: -1.9565058946609497
    4. '[' → logprob: -2.20650577545166
    5. '(' → logprob: -3.08150577545166
    6. '*' → logprob: -3.58150577545166
    7. ' (' → logprob: -4.33150577545166
    8. ' z' → logprob: -4.45650577545166
    9. '%' → logprob: -4.83150577545166
    10. ',' → logprob: -4.95650577545166

Token 925: ' comb' (ID: 4134)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00806377548724413
    2. '(' → logprob: -5.133063793182373
    3. '(F' → logprob: -6.633063793182373
    4. '(
' → logprob: -8.383063316345215
    5. 'f' → logprob: -8.758063316345215
    6. ' F' → logprob: -8.758063316345215
    7. 'pow' → logprob: -10.133063316345215
    8. ' (' → logprob: -10.133063316345215
    9. '((' → logprob: -10.633063316345215
    10. 'factor' → logprob: -10.633063316345215

Token 926: 'inais' (ID: 42744)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.5817577242851257
    2. 'ina' → logprob: -1.5817577838897705
    3. 'inais' → logprob: -2.0817577838897705
    4. '(' → logprob: -2.5817577838897705
    5. '(
' → logprob: -4.331757545471191
    6. 'F' → logprob: -5.331757545471191
    7. '(M' → logprob: -5.581757545471191
    8. '(N' → logprob: -5.581757545471191
    9. 'in' → logprob: -5.956757545471191
    10. 'ination' → logprob: -6.206757545471191

Token 927: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.059071000665426254
    2. 'ais' → logprob: -3.9340710639953613
    3. 't' → logprob: -4.434071063995361
    4. 'sons' → logprob: -4.559071063995361
    5. 'on' → logprob: -5.434071063995361
    6. 'n' → logprob: -5.434071063995361
    7. 'ations' → logprob: -6.934071063995361
    8. 'math' → logprob: -7.184071063995361
    9. 'a' → logprob: -7.434071063995361
    10. 'f' → logprob: -7.559071063995361

Token 928: ' bin' (ID: 6958)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3709920644760132
    2. '(' → logprob: -2.8709921836853027
    3. 'z' → logprob: -3.1209921836853027
    4. '(
' → logprob: -3.2459921836853027
    5. '   ' → logprob: -3.2459921836853027
    6. ' (' → logprob: -3.9959921836853027
    7. 'F' → logprob: -4.245992183685303
    8. 'C' → logprob: -4.245992183685303
    9. '(C' → logprob: -4.370992183685303
    10. ')' → logprob: -4.995992183685303

Token 929: 'om' (ID: 310)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5696628093719482
    2. 'inom' → logprob: -1.3196628093719482
    3. '```' → logprob: -3.4446628093719482
    4. '(' → logprob: -3.6946628093719482
    5. 'ina' → logprob: -3.6946628093719482
    6. 'inaire' → logprob: -3.9446628093719482
    7. '"' → logprob: -4.194663047790527
    8. 'i' → logprob: -4.194663047790527
    9. ''' → logprob: -5.069663047790527
    10. 'ination' → logprob: -5.944663047790527

Token 930: 'iales' (ID: 25133)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -1.5318247079849243
    2. 'o' → logprob: -1.7818247079849243
    3. 'om' → logprob: -2.1568245887756348
    4. 'iales' → logprob: -2.5318245887756348
    5. 'iaux' → logprob: -2.6568245887756348
    6. 'in' → logprob: -2.7818245887756348
    7. 'ial' → logprob: -3.1568245887756348
    8. 'iale' → logprob: -3.4068245887756348
    9. 'omial' → logprob: -3.9068245887756348
    10. '```' → logprob: -3.9068245887756348

Token 931: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45191457867622375
    2. '(' → logprob: -2.2019145488739014
    3. 'F' → logprob: -2.8269145488739014
    4. '(
' → logprob: -2.8269145488739014
    5. 'z' → logprob: -3.0769145488739014
    6. '*' → logprob: -4.3269147872924805
    7. '   ' → logprob: -4.4519147872924805
    8. '[' → logprob: -4.4519147872924805
    9. '(F' → logprob: -4.9519147872924805
    10. ' (' → logprob: -5.0769147872924805

Token 932: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.9995399117469788
    2. '   ' → logprob: -1.374539852142334
    3. ' F' → logprob: -2.749539852142334
    4. 'z' → logprob: -2.749539852142334
    5. ' (' → logprob: -2.749539852142334
    6. '(' → logprob: -2.874539852142334
    7. '(
' → logprob: -3.749539852142334
    8. ')' → logprob: -3.999539852142334
    9. ' z' → logprob: -4.124539852142334
    10. '```' → logprob: -4.374539852142334

Token 933: ' #' (ID: 1069)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.7583135962486267
    2. '(' → logprob: -1.0083136558532715
    3. '(
' → logprob: -3.1333136558532715
    4. ')' → logprob: -3.3833136558532715
    5. ' (' → logprob: -3.7583136558532715
    6. '   ' → logprob: -4.2583136558532715
    7. '(F' → logprob: -5.0083136558532715
    8. ' ' → logprob: -5.1333136558532715
    9. 'Q' → logprob: -5.1333136558532715
    10. ' F' → logprob: -5.2583136558532715

Token 934: ' réalisés' (ID: 164788)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4766141176223755
    2. '   ' → logprob: -2.351613998413086
    3. 'C' → logprob: -2.726613998413086
    4. '(' → logprob: -2.851613998413086
    5. 'F' → logprob: -3.476613998413086
    6. ' z' → logprob: -3.601613998413086
    7. 'term' → logprob: -3.976613998413086
    8. '((' → logprob: -4.101613998413086
    9. '(
' → logprob: -4.601613998413086
    10. ' (' → logprob: -4.601613998413086

Token 935: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8510026335716248
    2. ' (' → logprob: -1.8510026931762695
    3. '   ' → logprob: -1.9760026931762695
    4. '(
' → logprob: -2.8510026931762695
    5. ' F' → logprob: -3.2260026931762695
    6. 'F' → logprob: -3.2260026931762695
    7. '*' → logprob: -3.9760026931762695
    8. ' par' → logprob: -3.9760026931762695
    9. ' z' → logprob: -4.3510026931762695
    10. ' ' → logprob: -4.4760026931762695

Token 936: ' l' (ID: 305)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.38337936997413635
    2. 'k' → logprob: -1.633379340171814
    3. '(' → logprob: -3.6333794593811035
    4. 'Q' → logprob: -4.0083794593811035
    5. 'z' → logprob: -4.6333794593811035
    6. '(k' → logprob: -4.6333794593811035
    7. '(
' → logprob: -4.8833794593811035
    8. '(F' → logprob: -5.0083794593811035
    9. 'N' → logprob: -5.1333794593811035
    10. 'M' → logprob: -5.2583794593811035

Token 937: ''aide' (ID: 75684)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16547541320323944
    2. '(' → logprob: -3.415475368499756
    3. ')' → logprob: -3.790475368499756
    4. 'z' → logprob: -3.790475368499756
    5. 'k' → logprob: -4.165475368499756
    6. 'pow' → logprob: -4.540475368499756
    7. '(k' → logprob: -5.040475368499756
    8. '```' → logprob: -5.040475368499756
    9. '#' → logprob: -5.290475368499756
    10. ' ' → logprob: -5.415475368499756

Token 938: ' des' (ID: 731)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.7910380959510803
    2. '   ' → logprob: -1.9160380363464355
    3. ' des' → logprob: -1.9160380363464355
    4. ' de' → logprob: -3.0410380363464355
    5. '(' → logprob: -3.1660380363464355
    6. 'de' → logprob: -3.2910380363464355
    7. ' F' → logprob: -3.5410380363464355
    8. '#' → logprob: -3.9160380363464355
    9. 'des' → logprob: -3.9160380363464355
    10. '(F' → logprob: -4.2910380363464355

Token 939: ' fact' (ID: 2840)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.004251012112945318
    2. 'C' → logprob: -7.004251003265381
    3. '#' → logprob: -7.254251003265381
    4. 'factor' → logprob: -7.379251003265381
    5. 'f' → logprob: -8.254251480102539
    6. 'fact' → logprob: -9.004251480102539
    7. ' F' → logprob: -9.004251480102539
    8. 'def' → logprob: -9.129251480102539
    9. '*' → logprob: -9.129251480102539
    10. ')' → logprob: -9.254251480102539

Token 940: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -1.0202884674072266
    2. 'or' → logprob: -1.6452884674072266
    3. 'o' → logprob: -1.8952884674072266
    4. 'orial' → logprob: -2.0202884674072266
    5. '#' → logprob: -3.8952884674072266
    6. 'orm' → logprob: -4.270288467407227
    7. '*' → logprob: -4.270288467407227
    8. '```' → logprob: -4.270288467407227
    9. 'eurs' → logprob: -4.770288467407227
    10. 'ielle' → logprob: -4.770288467407227

Token 941: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.000693016336299479
    2. 'els' → logprob: -8.375693321228027
    3. '[' → logprob: -9.375693321228027
    4. 'alles' → logprob: -9.625693321228027
    5. 'elle' → logprob: -10.000693321228027
    6. 'lles' → logprob: -10.000693321228027
    7. 'ell' → logprob: -10.375693321228027
    8. 'e' → logprob: -10.375693321228027
    9. '```' → logprob: -10.375693321228027
    10. 'elli' → logprob: -10.875693321228027

Token 942: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5884979367256165
    2. 'F' → logprob: -1.4634978771209717
    3. '[' → logprob: -2.3384978771209717
    4. '   ' → logprob: -3.2134978771209717
    5. ' and' → logprob: -3.8384978771209717
    6. 'and' → logprob: -5.088498115539551
    7. '[
' → logprob: -5.088498115539551
    8. '[F' → logprob: -5.213498115539551
    9. '```' → logprob: -5.213498115539551
    10. '#' → logprob: -5.338498115539551

Token 943: ' des' (ID: 731)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.20633703470230103
    2. 'in' → logprob: -2.9563369750976562
    3. '#' → logprob: -3.2063369750976562
    4. 'inverse' → logprob: -3.3313369750976562
    5. 'des' → logprob: -3.9563369750976562
    6. '(I' → logprob: -4.456336975097656
    7. ' I' → logprob: -5.331336975097656
    8. 'inv' → logprob: -5.331336975097656
    9. '[I' → logprob: -5.706336975097656
    10. ' invers' → logprob: -5.831336975097656

Token 944: ' invers' (ID: 38721)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5591328144073486
    2. 'I' → logprob: -1.0591328144073486
    3. 'inv' → logprob: -3.0591328144073486
    4. 'inverse' → logprob: -4.1841325759887695
    5. ' I' → logprob: -4.8091325759887695
    6. ' invers' → logprob: -5.9341325759887695
    7. '(I' → logprob: -6.3091325759887695
    8. '(' → logprob: -6.4341325759887695
    9. ' inverse' → logprob: -7.3091325759887695
    10. 'F' → logprob: -7.4341325759887695

Token 945: 'es' (ID: 268)
  Prédit: 'oc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oc' → logprob: -1.106580138206482
    2. '   ' → logprob: -1.231580138206482
    3. 'o' → logprob: -2.6065802574157715
    4. '_factor' → logprob: -3.1065802574157715
    5. 'um' → logprob: -4.1065802574157715
    6. '_fac' → logprob: -4.2315802574157715
    7. 'omial' → logprob: -4.3565802574157715
    8. '(' → logprob: -4.4815802574157715
    9. 'ér' → logprob: -4.4815802574157715
    10. 'uli' → logprob: -4.7315802574157715

Token 946: ' calcul' (ID: 7559)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.11409427970647812
    2. '[' → logprob: -3.6140942573547363
    3. '[n' → logprob: -3.8640942573547363
    4. ']' → logprob: -4.364094257354736
    5. ')' → logprob: -4.864094257354736
    6. ',' → logprob: -5.114094257354736
    7. '#' → logprob: -5.364094257354736
    8. 'def' → logprob: -5.614094257354736
    9. '*' → logprob: -5.739094257354736
    10. '```' → logprob: -5.989094257354736

Token 947: 'és' (ID: 1756)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7272202968597412
    2. ']' → logprob: -1.7272202968597412
    3. 'F' → logprob: -2.477220296859741
    4. '*' → logprob: -2.727220296859741
    5. ')' → logprob: -2.977220296859741
    6. '(' → logprob: -3.602220296859741
    7. '       ' → logprob: -3.727220296859741
    8. '[' → logprob: -4.47722053527832
    9. 'ations' → logprob: -4.47722053527832
    10. '=' → logprob: -4.60222053527832

Token 948: ' précéd' (ID: 55435)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8479037284851074
    2. '[' → logprob: -1.4729037284851074
    3. '   ' → logprob: -2.3479037284851074
    4. 'F' → logprob: -2.5979037284851074
    5. ')' → logprob: -3.3479037284851074
    6. '(' → logprob: -3.3479037284851074
    7. 'z' → logprob: -3.3479037284851074
    8. '(
' → logprob: -4.222903728485107
    9. '[
' → logprob: -4.847903728485107
    10. '```' → logprob: -5.222903728485107

Token 949: 'emment' (ID: 58019)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5438711047172546
    2. '```' → logprob: -1.5438711643218994
    3. ']' → logprob: -2.6688711643218994
    4. '`' → logprob: -3.7938711643218994
    5. '[' → logprob: -4.29387092590332
    6. 'ation' → logprob: -4.41887092590332
    7. ' )' → logprob: -4.79387092590332
    8. ''' → logprob: -5.16887092590332
    9. '()' → logprob: -5.16887092590332
    10. '#' → logprob: -5.16887092590332

Token 950: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5244995951652527
    2. 'z' → logprob: -1.0244996547698975
    3. ' z' → logprob: -4.024499416351318
    4. ',' → logprob: -5.149499416351318
    5. '(' → logprob: -5.274499416351318
    6. ' (' → logprob: -5.649499416351318
    7. '(
' → logprob: -6.024499416351318
    8. ')' → logprob: -6.399499416351318
    9. '(z' → logprob: -6.524499416351318
    10. '+' → logprob: -6.899499416351318

Token 951: '   ' (ID: 271)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.21912266314029694
    2. '   ' → logprob: -1.7191226482391357
    3. 'term' → logprob: -4.469122886657715
    4. 'C' → logprob: -6.844122886657715
    5. '```' → logprob: -6.844122886657715
    6. ' z' → logprob: -7.094122886657715
    7. '(z' → logprob: -7.219122886657715
    8. '(' → logprob: -7.844122886657715
    9. 'f' → logprob: -8.219122886657715
    10. '((' → logprob: -8.719122886657715

Token 952: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6642044186592102
    2. '   ' → logprob: -0.7892044186592102
    3. ' z' → logprob: -4.5392045974731445
    4. 'C' → logprob: -4.9142045974731445
    5. '(' → logprob: -5.0392045974731445
    6. ' (' → logprob: -6.0392045974731445
    7. 'f' → logprob: -7.2892045974731445
    8. 'term' → logprob: -7.5392045974731445
    9. ' C' → logprob: -7.5392045974731445
    10. '(z' → logprob: -7.7892045974731445

Token 953: ' Pour' (ID: 13931)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.057824838906526566
    2. 'term' → logprob: -3.4328248500823975
    3. 'C' → logprob: -4.432824611663818
    4. 't' → logprob: -6.307824611663818
    5. 'f' → logprob: -6.557824611663818
    6. '   ' → logprob: -6.682824611663818
    7. '(' → logprob: -6.807824611663818
    8. '((' → logprob: -6.932824611663818
    9. '(z' → logprob: -7.182824611663818
    10. 'temp' → logprob: -7.432824611663818

Token 954: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9964795708656311
    2. 'comb' → logprob: -1.7464795112609863
    3. 'C' → logprob: -2.6214795112609863
    4. 'F' → logprob: -2.7464795112609863
    5. 'c' → logprob: -2.8714795112609863
    6. 'q' → logprob: -3.1214795112609863
    7. ' n' → logprob: -3.3714795112609863
    8. 'k' → logprob: -3.4964795112609863
    9. 'i' → logprob: -3.7464795112609863
    10. 'x' → logprob: -4.246479511260986

Token 955: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11601246148347855
    2. ' k' → logprob: -3.8660125732421875
    3. ')' → logprob: -3.9910125732421875
    4. 'F' → logprob: -4.3660125732421875
    5. 'z' → logprob: -4.3660125732421875
    6. '(' → logprob: -4.6160125732421875
    7. 'n' → logprob: -4.9910125732421875
    8. 'Q' → logprob: -4.9910125732421875
    9. 'C' → logprob: -5.6160125732421875
    10. 'term' → logprob: -5.8660125732421875

Token 956: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20394271612167358
    2. '=' → logprob: -2.9539427757263184
    3. ' de' → logprob: -3.4539427757263184
    4. '[' → logprob: -3.5789427757263184
    5. ' of' → logprob: -3.7039427757263184
    6. ' =' → logprob: -4.453942775726318
    7. '    ' → logprob: -5.078942775726318
    8. ')' → logprob: -5.328942775726318
    9. 'de' → logprob: -5.453942775726318
    10. '  ' → logprob: -5.953942775726318

Token 957: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010027975076809525
    2. ' k' → logprob: -7.126002788543701
    3. 'Q' → logprob: -8.75100326538086
    4. 'n' → logprob: -11.25100326538086
    5. 'z' → logprob: -11.25100326538086
    6. 'N' → logprob: -12.50100326538086
    7. 'F' → logprob: -13.25100326538086
    8. ' Q' → logprob: -13.75100326538086
    9. '```' → logprob: -13.87600326538086
    10. ' ' → logprob: -14.12600326538086

Token 958: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8591727614402771
    2. ')' → logprob: -1.7341728210449219
    3. ':' → logprob: -1.7341728210449219
    4. ',' → logprob: -2.484172821044922
    5. ' z' → logprob: -3.484172821044922
    6. ' )' → logprob: -3.484172821044922
    7. 'z' → logprob: -3.609172821044922
    8. '):' → logprob: -5.109172821044922
    9. '+' → logprob: -5.484172821044922
    10. ' :' → logprob: -5.484172821044922

Token 959: ' la' (ID: 557)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.029665203765034676
    2. 'range' → logprob: -4.529664993286133
    3. ' R' → logprob: -5.154664993286133
    4. 'k' → logprob: -5.154664993286133
    5. 'Q' → logprob: -5.654664993286133
    6. ' range' → logprob: -6.529664993286133
    7. 'loop' → logprob: -7.404664993286133
    8. ' ' → logprob: -8.654664993286133
    9. ' k' → logprob: -8.904664993286133
    10. '   ' → logprob: -9.029664993286133

Token 960: ' plage' (ID: 78241)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2844597101211548
    2. 'for' → logprob: -1.4094597101211548
    3. 'R' → logprob: -1.9094597101211548
    4. ' range' → logprob: -2.5344595909118652
    5. ':' → logprob: -3.2844595909118652
    6. ')' → logprob: -3.4094595909118652
    7. 'Q' → logprob: -3.5344595909118652
    8. ' for' → logprob: -4.034459590911865
    9. '```' → logprob: -4.159459590911865
    10. '
' → logprob: -4.534459590911865

Token 961: ' défin' (ID: 57890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4858614206314087
    2. ':' → logprob: -1.2358614206314087
    3. ',' → logprob: -2.485861301422119
    4. '[' → logprob: -5.735861301422119
    5. ')' → logprob: -6.360861301422119
    6. '):' → logprob: -6.360861301422119
    7. 'F' → logprob: -7.235861301422119
    8. ':
' → logprob: -7.485861301422119
    9. '(' → logprob: -7.735861301422119
    10. 'z' → logprob: -7.985861301422119

Token 962: 'ie' (ID: 396)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1350632756948471
    2. 'for' → logprob: -3.6350631713867188
    3. 'range' → logprob: -3.6350631713867188
    4. 'R' → logprob: -3.7600631713867188
    5. 'ue' → logprob: -4.885063171386719
    6. 'e' → logprob: -5.010063171386719
    7. 'k' → logprob: -5.135063171386719
    8. '       ' → logprob: -5.385063171386719
    9. ')' → logprob: -5.885063171386719
    10. 'u' → logprob: -6.135063171386719

Token 963: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05950755998492241
    2. ',' → logprob: -2.9345076084136963
    3. ':' → logprob: -6.559507369995117
    4. 'z' → logprob: -6.809507369995117
    5. ',
' → logprob: -7.684507369995117
    6. ':
' → logprob: -8.309507369995117
    7. ' ,' → logprob: -8.434507369995117
    8. '):
' → logprob: -8.809507369995117
    9. ')' → logprob: -8.934507369995117
    10. ' z' → logprob: -8.934507369995117

Token 964: '   ' (ID: 271)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.49148422479629517
    2. '   ' → logprob: -1.6164841651916504
    3. '(' → logprob: -2.6164841651916504
    4. ' z' → logprob: -2.8664841651916504
    5. ' (' → logprob: -3.7414841651916504
    6. '(z' → logprob: -4.61648416519165
    7. 'C' → logprob: -5.24148416519165
    8. '(n' → logprob: -5.49148416519165
    9. '((' → logprob: -5.61648416519165
    10. 'term' → logprob: -6.36648416519165

Token 965: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0850202664732933
    2. 'term' → logprob: -3.9600203037261963
    3. ' z' → logprob: -4.085020065307617
    4. '   ' → logprob: -4.460020065307617
    5. 'C' → logprob: -4.460020065307617
    6. '(' → logprob: -5.585020065307617
    7. 'n' → logprob: -5.960020065307617
    8. '(z' → logprob: -6.085020065307617
    9. 'f' → logprob: -6.210020065307617
    10. '(n' → logprob: -6.210020065307617

Token 966: ' -' (ID: 533)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.44329404830932617
    2. '(' → logprob: -2.193294048309326
    3. '(F' → logprob: -2.443294048309326
    4. '((' → logprob: -2.568294048309326
    5. 'F' → logprob: -3.818294048309326
    6. 'C' → logprob: -4.568294048309326
    7. 'f' → logprob: -4.818294048309326
    8. 'Q' → logprob: -5.068294048309326
    9. '(f' → logprob: -5.068294048309326
    10. '(C' → logprob: -5.443294048309326

Token 967: ' (' (ID: 350)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.856323778629303
    2. 'z' → logprob: -1.1063237190246582
    3. 'F' → logprob: -1.9813237190246582
    4. 'f' → logprob: -4.231323719024658
    5. 'comb' → logprob: -4.231323719024658
    6. 'Q' → logprob: -4.356323719024658
    7. ' z' → logprob: -4.856323719024658
    8. 'term' → logprob: -4.856323719024658
    9. '(' → logprob: -4.981323719024658
    10. 'k' → logprob: -5.231323719024658

Token 968: 'B' (ID: 33)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.16567331552505493
    2. '(F' → logprob: -2.54067325592041
    3. '(' → logprob: -3.16567325592041
    4. 'Q' → logprob: -4.91567325592041
    5. ' F' → logprob: -5.54067325592041
    6. 'k' → logprob: -5.79067325592041
    7. ' (' → logprob: -5.79067325592041
    8. 'N' → logprob: -6.16567325592041
    9. '(N' → logprob: -6.41567325592041
    10. 'z' → logprob: -6.41567325592041

Token 969: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22069308161735535
    2. '-' → logprob: -1.9706931114196777
    3. ')' → logprob: -3.8456931114196777
    4. '-k' → logprob: -4.220693111419678
    5. '+' → logprob: -4.720693111419678
    6. ' +' → logprob: -5.345693111419678
    7. '-B' → logprob: -6.470693111419678
    8. ' ' → logprob: -6.720693111419678
    9. ' )' → logprob: -6.720693111419678
    10. '   ' → logprob: -7.220693111419678

Token 970: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03441745415329933
    2. ')*' → logprob: -4.409417629241943
    3. '-' → logprob: -4.659417629241943
    4. '+' → logprob: -5.284417629241943
    5. ' )' → logprob: -6.159417629241943
    6. ')*(' → logprob: -7.034417629241943
    7. ' -' → logprob: -7.034417629241943
    8. '),' → logprob: -7.659417629241943
    9. ')
' → logprob: -7.784417629241943
    10. ')#' → logprob: -8.159417152404785

Token 971: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08349450677633286
    2. ')*' → logprob: -3.9584944248199463
    3. ' )' → logprob: -4.333494663238525
    4. '-' → logprob: -4.333494663238525
    5. '   ' → logprob: -4.708494663238525
    6. ' -' → logprob: -5.333494663238525
    7. ')
' → logprob: -5.833494663238525
    8. '```' → logprob: -5.958494663238525
    9. '):' → logprob: -6.083494663238525
    10. '
' → logprob: -6.458494663238525

Token 972: ' multip' (ID: 17524)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.672134518623352
    2. '(B' → logprob: -1.547134518623352
    3. ')*' → logprob: -2.9221343994140625
    4. 'B' → logprob: -3.2971343994140625
    5. '(' → logprob: -3.2971343994140625
    6. ' (' → logprob: -3.7971343994140625
    7. 'k' → logprob: -3.7971343994140625
    8. '*' → logprob: -4.0471343994140625
    9. '   ' → logprob: -4.1721343994140625
    10. 'Q' → logprob: -4.7971343994140625

Token 973: 'lié' (ID: 102412)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23511193692684174
    2. ' *' → logprob: -1.735111951828003
    3. ')' → logprob: -4.110111713409424
    4. '   ' → logprob: -4.485111713409424
    5. ' ' → logprob: -6.360111713409424
    6. ' ' → logprob: -7.360111713409424
    7. '*(' → logprob: -8.110112190246582
    8. '  ' → logprob: -8.360112190246582
    9. '**' → logprob: -8.485112190246582
    10. '    ' → logprob: -8.735112190246582

Token 974: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12167157232761383
    2. ' *' → logprob: -2.496671676635742
    3. '*(' → logprob: -3.496671676635742
    4. ')' → logprob: -7.246671676635742
    5. '(B' → logprob: -7.996671676635742
    6. '(' → logprob: -8.121671676635742
    7. '   ' → logprob: -8.496671676635742
    8. ' (' → logprob: -9.996671676635742
    9. ',' → logprob: -9.996671676635742
    10. '*((' → logprob: -9.996671676635742

Token 975: ' la' (ID: 557)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.385337769985199
    2. 'F' → logprob: -1.2603378295898438
    3. '((' → logprob: -3.7603378295898438
    4. ' (' → logprob: -5.510337829589844
    5. '(B' → logprob: -5.760337829589844
    6. '(' → logprob: -5.760337829589844
    7. ' F' → logprob: -7.135337829589844
    8. '(
' → logprob: -7.635337829589844
    9. '(((' → logprob: -8.135337829589844
    10. 'f' → logprob: -8.385337829589844

Token 976: ' combinaison' (ID: 165933)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.8339875936508179
    2. '(F' → logprob: -1.2089875936508179
    3. '(' → logprob: -1.5839875936508179
    4. '((' → logprob: -3.2089877128601074
    5. '(B' → logprob: -4.458987712860107
    6. 'f' → logprob: -5.708987712860107
    7. '(f' → logprob: -5.833987712860107
    8. 'pow' → logprob: -7.208987712860107
    9. '(
' → logprob: -7.333987712860107
    10. 'B' → logprob: -7.708987712860107

Token 977: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1008678451180458
    2. '(F' → logprob: -3.100867748260498
    3. '(
' → logprob: -3.600867748260498
    4. ' (' → logprob: -5.100867748260498
    5. '((' → logprob: -5.600867748260498
    6. '(B' → logprob: -5.725867748260498
    7. '(C' → logprob: -5.975867748260498
    8. 'C' → logprob: -6.100867748260498
    9. 'F' → logprob: -6.350867748260498
    10. ',' → logprob: -6.725867748260498

Token 978: ''autres' (ID: 38753)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.17382004857063293
    2. '(F' → logprob: -2.6738200187683105
    3. 'N' → logprob: -2.9238200187683105
    4. '(N' → logprob: -4.1738200187683105
    5. '(' → logprob: -5.5488200187683105
    6. 'C' → logprob: -5.6738200187683105
    7. 'M' → logprob: -6.0488200187683105
    8. '(B' → logprob: -6.0488200187683105
    9. 'B' → logprob: -6.4238200187683105
    10. 'P' → logprob: -6.7988200187683105

Token 979: ' termes' (ID: 72480)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.9230638146400452
    2. 'C' → logprob: -1.5480637550354004
    3. '(' → logprob: -2.5480637550354004
    4. '(B' → logprob: -2.5480637550354004
    5. '(F' → logprob: -2.5480637550354004
    6. '(
' → logprob: -2.6730637550354004
    7. 'k' → logprob: -3.5480637550354004
    8. 'B' → logprob: -4.1730637550354
    9. '((' → logprob: -4.2980637550354
    10. '(C' → logprob: -4.7980637550354

Token 980: ' (' (ID: 350)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24451878666877747
    2. '*' → logprob: -1.619518756866455
    3. ')' → logprob: -5.244518756866455
    4. '   ' → logprob: -5.369518756866455
    5. '*z' → logprob: -5.494518756866455
    6. '<|end|>' → logprob: -6.244518756866455
    7. '*(' → logprob: -6.744518756866455
    8. ' *
' → logprob: -8.369519233703613
    9. 'z' → logprob: -8.369519233703613
    10. ',' → logprob: -8.494519233703613

Token 981: 'voir' (ID: 8991)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.22329138219356537
    2. '(F' → logprob: -1.9732913970947266
    3. '(B' → logprob: -3.4732913970947266
    4. '((' → logprob: -4.473291397094727
    5. 'B' → logprob: -5.598291397094727
    6. ')' → logprob: -5.598291397094727
    7. ' (' → logprob: -5.848291397094727
    8. '(' → logprob: -5.848291397094727
    9. ' F' → logprob: -6.098291397094727
    10. '(
' → logprob: -6.723291397094727

Token 982: ' la' (ID: 557)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00976553000509739
    2. '(F' → logprob: -5.634765625
    3. '(
' → logprob: -6.009765625
    4. ')' → logprob: -6.884765625
    5. 'k' → logprob: -7.509765625
    6. ' F' → logprob: -7.884765625
    7. '(' → logprob: -8.259765625
    8. '((' → logprob: -8.259765625
    9. '   ' → logprob: -8.259765625
    10. '
' → logprob: -9.009765625

Token 983: ' formule' (ID: 84316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5546495318412781
    2. '*' → logprob: -1.8046495914459229
    3. '(' → logprob: -3.179649591445923
    4. 'F' → logprob: -3.429649591445923
    5. '`' → logprob: -3.804649591445923
    6. 'B' → logprob: -3.804649591445923
    7. '(
' → logprob: -3.929649591445923
    8. '```' → logprob: -4.179649353027344
    9. 'k' → logprob: -4.304649353027344
    10. '#' → logprob: -4.429649353027344

Token 984: ' originale' (ID: 90997)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.309947669506073
    2. '   ' → logprob: -2.5599477291107178
    3. '(
' → logprob: -3.4349477291107178
    4. 'F' → logprob: -4.059947490692139
    5. ',' → logprob: -4.184947490692139
    6. '```' → logprob: -4.559947490692139
    7. '(n' → logprob: -4.684947490692139
    8. '(F' → logprob: -4.809947490692139
    9. '(' → logprob: -5.059947490692139
    10. ')*' → logprob: -5.059947490692139

Token 985: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10349768400192261
    2. '*' → logprob: -3.1034977436065674
    3. ')*' → logprob: -4.103497505187988
    4. '   ' → logprob: -4.353497505187988
    5. ',' → logprob: -5.103497505187988
    6. '[' → logprob: -5.353497505187988
    7. ' *' → logprob: -5.478497505187988
    8. '*z' → logprob: -6.353497505187988
    9. 'z' → logprob: -7.103497505187988
    10. '*(' → logprob: -7.228497505187988

Token 986: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4488084316253662
    2. '(B' → logprob: -1.5738084316253662
    3. 'z' → logprob: -1.8238084316253662
    4. '((' → logprob: -1.8238084316253662
    5. '(' → logprob: -1.9488084316253662
    6. ' (' → logprob: -3.198808431625366
    7. '(
' → logprob: -4.448808670043945
    8. '(F' → logprob: -4.698808670043945
    9. '+' → logprob: -4.948808670043945
    10. ' z' → logprob: -5.073808670043945

Token 987: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7211653590202332
    2. 'z' → logprob: -1.471165418624878
    3. '(B' → logprob: -2.346165418624878
    4. '((' → logprob: -2.721165418624878
    5. ' (' → logprob: -2.721165418624878
    6. '   ' → logprob: -3.971165418624878
    7. ' z' → logprob: -4.346165180206299
    8. '(
' → logprob: -4.721165180206299
    9. ')' → logprob: -5.096165180206299
    10. 'B' → logprob: -6.346165180206299

Token 988: ' -' (ID: 533)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5353450775146484
    2. '(' → logprob: -1.5353450775146484
    3. '   ' → logprob: -2.2853450775146484
    4. 'C' → logprob: -3.7853450775146484
    5. '(B' → logprob: -4.035345077514648
    6. 'term' → logprob: -4.660345077514648
    7. ' z' → logprob: -4.785345077514648
    8. ' (' → logprob: -4.910345077514648
    9. ')' → logprob: -5.160345077514648
    10. 'B' → logprob: -5.535345077514648

Token 989: ' Toutes' (ID: 117422)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3584090769290924
    2. '(B' → logprob: -1.48340904712677
    3. 'C' → logprob: -4.2334089279174805
    4. 'F' → logprob: -4.4834089279174805
    5. '((' → logprob: -4.7334089279174805
    6. '(' → logprob: -4.9834089279174805
    7. 'comb' → logprob: -4.9834089279174805
    8. 'term' → logprob: -5.1084089279174805
    9. '(C' → logprob: -5.6084089279174805
    10. '(F' → logprob: -5.8584089279174805

Token 990: ' les' (ID: 1341)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7050624489784241
    2. ')' → logprob: -1.2050623893737793
    3. '*' → logprob: -2.4550623893737793
    4. ' )' → logprob: -3.2050623893737793
    5. '(' → logprob: -3.8300623893737793
    6. ' (' → logprob: -3.8300623893737793
    7. '   ' → logprob: -4.830062389373779
    8. '(
' → logprob: -5.205062389373779
    9. ' ' → logprob: -5.955062389373779
    10. ' (
' → logprob: -6.080062389373779

Token 991: ' multip' (ID: 17524)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6600982546806335
    2. '(' → logprob: -1.4100983142852783
    3. ')' → logprob: -2.1600983142852783
    4. '(
' → logprob: -3.2850983142852783
    5. ' *' → logprob: -3.5350983142852783
    6. ' (' → logprob: -4.535098075866699
    7. '   ' → logprob: -5.410098075866699
    8. ' ' → logprob: -5.535098075866699
    9. 'multip' → logprob: -5.535098075866699
    10. 'z' → logprob: -5.660098075866699

Token 992: 'lications' (ID: 17986)
  Prédit: 'lications'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lications' → logprob: -0.46299484372138977
    2. '*' → logprob: -1.8379948139190674
    3. ' *' → logprob: -2.8379948139190674
    4. '   ' → logprob: -3.3379948139190674
    5. ' ' → logprob: -3.5879948139190674
    6. ')' → logprob: -3.9629948139190674
    7. 'lication' → logprob: -4.0879950523376465
    8. 'li' → logprob: -5.2129950523376465
    9. '    ' → logprob: -5.4629950523376465
    10. 'lus' → logprob: -5.5879950523376465

Token 993: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.162919282913208
    2. '%' → logprob: -1.287919282913208
    3. '*' → logprob: -1.412919282913208
    4. '   ' → logprob: -2.537919282913208
    5. ' %' → logprob: -3.287919282913208
    6. ',' → logprob: -4.412919044494629
    7. ')' → logprob: -4.662919044494629
    8. '=' → logprob: -4.912919044494629
    9. ' =' → logprob: -5.162919044494629
    10. 'import' → logprob: -5.537919044494629

Token 994: ' divisions' (ID: 66578)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.507498025894165
    2. '=' → logprob: -2.257498025894165
    3. '(' → logprob: -2.507498025894165
    4. ' F' → logprob: -2.882498025894165
    5. '+' → logprob: -3.757498025894165
    6. ')' → logprob: -3.882498025894165
    7. 'mod' → logprob: -4.507497787475586
    8. '*' → logprob: -4.632497787475586
    9. ' z' → logprob: -4.632497787475586
    10. ' %' → logprob: -4.632497787475586

Token 995: ' sont' (ID: 5242)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6156855225563049
    2. '%' → logprob: -0.8656855225563049
    3. '   ' → logprob: -3.86568546295166
    4. ' ' → logprob: -4.99068546295166
    5. ' *' → logprob: -5.86568546295166
    6. ' modulo' → logprob: -6.49068546295166
    7. '*' → logprob: -6.86568546295166
    8. 'import' → logprob: -6.86568546295166
    9. ' %=' → logprob: -7.74068546295166
    10. ' ' → logprob: -7.86568546295166

Token 996: ' effectu' (ID: 100880)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5416967868804932
    2. ' %' → logprob: -1.6666967868804932
    3. '%' → logprob: -2.041696786880493
    4. ' modulo' → logprob: -2.416696786880493
    5. 'mod' → logprob: -5.916696548461914
    6. ')' → logprob: -6.291696548461914
    7. ' mod' → logprob: -6.916696548461914
    8. '    ' → logprob: -7.041696548461914
    9. ' modular' → logprob: -7.166696548461914
    10. ' done' → logprob: -7.541696548461914

Token 997: 'ées' (ID: 5161)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3713935315608978
    2. ' %' → logprob: -2.3713934421539307
    3. '   ' → logprob: -2.9963934421539307
    4. '=' → logprob: -2.9963934421539307
    5. ' ' → logprob: -3.7463934421539307
    6. ' modulo' → logprob: -3.8713934421539307
    7. ')' → logprob: -4.24639368057251
    8. ' =' → logprob: -4.62139368057251
    9. ' par' → logprob: -4.74639368057251
    10. ' à' → logprob: -4.74639368057251

Token 998: ' sous' (ID: 14487)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6439462304115295
    2. '%' → logprob: -0.7689462304115295
    3. '   ' → logprob: -5.143946170806885
    4. '```' → logprob: -6.143946170806885
    5. ' *' → logprob: -6.768946170806885
    6. ' ' → logprob: -7.518946170806885
    7. '*' → logprob: -7.643946170806885
    8. ' modulo' → logprob: -8.143946647644043
    9. '`' → logprob: -8.768946647644043
    10. ')' → logprob: -9.018946647644043

Token 999: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.39455676078796387
    2. 'mod' → logprob: -1.3945567607879639
    3. ' modulo' → logprob: -2.769556760787964
    4. 'M' → logprob: -5.144556999206543
    5. ' %' → logprob: -5.769556999206543
    6. ' M' → logprob: -6.644556999206543
    7. '```' → logprob: -6.769556999206543
    8. 'module' → logprob: -7.269556999206543
    9. 'm' → logprob: -7.769556999206543
    10. ')' → logprob: -7.769556999206543

Token 1000: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6951343417167664
    2. ' M' → logprob: -0.8201343417167664
    3. '`' → logprob: -4.070134162902832
    4. '```' → logprob: -4.445134162902832
    5. ' ' → logprob: -5.070134162902832
    6. 'z' → logprob: -5.445134162902832
    7. '   ' → logprob: -5.570134162902832
    8. '(' → logprob: -5.945134162902832
    9. ' z' → logprob: -6.070134162902832
    10. '``' → logprob: -6.445134162902832

Token 1001: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3748334050178528
    2. '*' → logprob: -1.874833345413208
    3. ' *' → logprob: -2.124833345413208
    4. ')' → logprob: -4.374833583831787
    5. '*z' → logprob: -4.749833583831787
    6. 'z' → logprob: -5.874833583831787
    7. '*
' → logprob: -6.249833583831787
    8. '(
' → logprob: -6.249833583831787
    9. ',' → logprob: -6.374833583831787
    10. '*(' → logprob: -6.499833583831787

Token 1002: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7859424948692322
    2. 'z' → logprob: -1.410942554473877
    3. '(B' → logprob: -2.035942554473877
    4. '(' → logprob: -2.535942554473877
    5. '((' → logprob: -3.160942554473877
    6. ' (' → logprob: -3.785942554473877
    7. ' z' → logprob: -5.410942554473877
    8. '(
' → logprob: -5.410942554473877
    9. '(C' → logprob: -5.785942554473877
    10. '```' → logprob: -5.785942554473877

Token 1003: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3965926766395569
    2. '(B' → logprob: -1.521592617034912
    3. '((' → logprob: -3.021592617034912
    4. '(' → logprob: -3.271592617034912
    5. 'term' → logprob: -5.021592617034912
    6. '(C' → logprob: -5.896592617034912
    7. '   ' → logprob: -5.896592617034912
    8. '(
' → logprob: -6.271592617034912
    9. ' z' → logprob: -6.521592617034912
    10. 'C' → logprob: -6.771592617034912

Token 1004: ' -' (ID: 533)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.28000643849372864
    2. 'z' → logprob: -1.7800064086914062
    3. '(' → logprob: -3.5300064086914062
    4. 'term' → logprob: -3.9050064086914062
    5. 'B' → logprob: -4.905006408691406
    6. '((' → logprob: -5.155006408691406
    7. '   ' → logprob: -5.155006408691406
    8. 't' → logprob: -7.030006408691406
    9. 'tmp' → logprob: -7.030006408691406
    10. 'temp' → logprob: -7.155006408691406

Token 1005: ' Les' (ID: 7029)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.005669475998729467
    2. 'term' → logprob: -5.505669593811035
    3. '   ' → logprob: -8.255669593811035
    4. 'C' → logprob: -8.380669593811035
    5. 'temp' → logprob: -8.880669593811035
    6. ' z' → logprob: -8.880669593811035
    7. 'comb' → logprob: -8.880669593811035
    8. '(B' → logprob: -9.130669593811035
    9. 'val' → logprob: -9.380669593811035
    10. '(z' → logprob: -9.505669593811035

Token 1006: ' divisions' (ID: 66578)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.9753825068473816
    2. 'F' → logprob: -1.7253825664520264
    3. 'C' → logprob: -1.9753825664520264
    4. '   ' → logprob: -3.1003825664520264
    5. 'term' → logprob: -3.1003825664520264
    6. '=' → logprob: -3.2253825664520264
    7. 'f' → logprob: -3.3503825664520264
    8. '#' → logprob: -3.4753825664520264
    9. '*' → logprob: -3.9753825664520264
    10. 'comb' → logprob: -4.100382328033447

Token 1007: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4509582221508026
    2. ' =' → logprob: -1.075958251953125
    3. '%' → logprob: -4.950958251953125
    4. '<|end|>' → logprob: -4.950958251953125
    5. '   ' → logprob: -6.700958251953125
    6. ',' → logprob: -7.075958251953125
    7. '#' → logprob: -7.075958251953125
    8. 'import' → logprob: -7.325958251953125
    9. ' %' → logprob: -7.575958251953125
    10. ')' → logprob: -7.575958251953125

Token 1008: ' remplac' (ID: 140149)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1009: 'ées' (ID: 5161)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.46520987153053284
    2. ' par' → logprob: -1.4652098417282104
    3. '=' → logprob: -2.0902099609375
    4. 'by' → logprob: -4.8402099609375
    5. '_par' → logprob: -5.0902099609375
    6. '_' → logprob: -6.9652099609375
    7. 'é' → logprob: -7.2152099609375
    8. ' by' → logprob: -7.3402099609375
    9. 'és' → logprob: -8.3402099609375
    10. '_by' → logprob: -9.2152099609375

Token 1010: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5859338641166687
    2. ' par' → logprob: -0.8359338641166687
    3. 'by' → logprob: -5.585933685302734
    4. '=' → logprob: -5.960933685302734
    5. '_par' → logprob: -6.460933685302734
    6. ' by' → logprob: -7.210933685302734
    7. '```' → logprob: -8.210933685302734
    8. '*' → logprob: -8.210933685302734
    9. '_' → logprob: -8.335933685302734
    10. '   ' → logprob: -8.585933685302734

Token 1011: ' des' (ID: 731)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1740776002407074
    2. 'F' → logprob: -2.6740775108337402
    3. '%' → logprob: -3.5490775108337402
    4. '(' → logprob: -3.5490775108337402
    5. 'pow' → logprob: -5.04907751083374
    6. ' F' → logprob: -5.17407751083374
    7. '(F' → logprob: -5.29907751083374
    8. 'multip' → logprob: -5.42407751083374
    9. ' (' → logprob: -5.67407751083374
    10. ' *' → logprob: -6.04907751083374

Token 1012: ' multip' (ID: 17524)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09049510210752487
    2. 'F' → logprob: -2.9654951095581055
    3. ' F' → logprob: -4.8404951095581055
    4. '%' → logprob: -4.9654951095581055
    5. ' *' → logprob: -5.0904951095581055
    6. 'pow' → logprob: -5.7154951095581055
    7. 'I' → logprob: -5.9654951095581055
    8. '#' → logprob: -6.2154951095581055
    9. 'multip' → logprob: -7.0904951095581055
    10. '`' → logprob: -7.0904951095581055

Token 1013: 'lications' (ID: 17986)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.12705399096012115
    2. 'f' → logprob: -3.62705397605896
    3. '#' → logprob: -4.002054214477539
    4. 'odu' → logprob: -4.002054214477539
    5. '%' → logprob: -4.502054214477539
    6. 'odule' → logprob: -4.752054214477539
    7. 'ul' → logprob: -5.002054214477539
    8. 'ultip' → logprob: -5.127054214477539
    9. 'ult' → logprob: -5.752054214477539
    10. 'pow' → logprob: -6.002054214477539

Token 1014: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1818032264709473
    2. '   ' → logprob: -1.1818032264709473
    3. '*' → logprob: -1.3068032264709473
    4. 'par' → logprob: -3.1818032264709473
    5. '%' → logprob: -3.4318032264709473
    6. 'by' → logprob: -4.056803226470947
    7. ' par' → logprob: -5.056803226470947
    8. '*=' → logprob: -5.431803226470947
    9. '#' → logprob: -6.181803226470947
    10. ' =' → logprob: -6.306803226470947

Token 1015: ' des' (ID: 731)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.04058054834604263
    2. ' I' → logprob: -3.2905805110931396
    3. 'l' → logprob: -6.540580749511719
    4. '(I' → logprob: -8.415580749511719
    5. 'the' → logprob: -8.415580749511719
    6. ' the' → logprob: -8.915580749511719
    7. ' l' → logprob: -9.040580749511719
    8. 'inverse' → logprob: -9.290580749511719
    9. 'les' → logprob: -10.290580749511719
    10. ' inverse' → logprob: -10.290580749511719

Token 1016: ' invers' (ID: 38721)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.053115732967853546
    2. 'pow' → logprob: -4.0531158447265625
    3. 'inv' → logprob: -4.1781158447265625
    4. ' I' → logprob: -4.8031158447265625
    5. 'F' → logprob: -5.5531158447265625
    6. 'in' → logprob: -6.5531158447265625
    7. 'inverse' → logprob: -6.5531158447265625
    8. ' pow' → logprob: -7.4281158447265625
    9. ' invers' → logprob: -7.5531158447265625
    10. '*' → logprob: -7.6781158447265625

Token 1017: 'es' (ID: 268)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rs' → logprob: -1.3041783571243286
    2. 't' → logprob: -1.6791783571243286
    3. 'r' → logprob: -1.9291783571243286
    4. 'vers' → logprob: -2.054178237915039
    5. 'rt' → logprob: -2.304178237915039
    6. 'ses' → logprob: -2.554178237915039
    7. 'ers' → logprob: -3.804178237915039
    8. 'tes' → logprob: -3.929178237915039
    9. '```' → logprob: -3.929178237915039
    10. 'ters' → logprob: -5.054178237915039

Token 1018: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8868038058280945
    2. '[k' → logprob: -1.2618038654327393
    3. '*' → logprob: -2.1368038654327393
    4. '[' → logprob: -2.2618038654327393
    5. '```' → logprob: -4.13680362701416
    6. 'k' → logprob: -4.88680362701416
    7. '*k' → logprob: -5.13680362701416
    8. '[token' → logprob: -5.38680362701416
    9. '   ' → logprob: -5.51180362701416
    10. '**' → logprob: -5.63680362701416

Token 1019: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2959344685077667
    2. '```' → logprob: -2.7959344387054443
    3. '`' → logprob: -2.9209344387054443
    4. 'k' → logprob: -3.1709344387054443
    5. '%' → logprob: -3.1709344387054443
    6. ')' → logprob: -3.7959344387054443
    7. '1' → logprob: -4.545934677124023
    8. ' M' → logprob: -4.920934677124023
    9. '[' → logprob: -6.420934677124023
    10. '_' → logprob: -6.545934677124023

Token 1020: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015249757561832666
    2. ')' → logprob: -7.126524925231934
    3. ':' → logprob: -8.876524925231934
    4. '*' → logprob: -9.001524925231934
    5. '+' → logprob: -9.376524925231934
    6. ' *' → logprob: -9.876524925231934
    7. ']' → logprob: -10.251524925231934
    8. '```' → logprob: -10.251524925231934
    9. '  ' → logprob: -10.626524925231934
    10. ',' → logprob: -10.626524925231934

Token 1021: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002421318320557475
    2. 'z' → logprob: -6.3774213790893555
    3. ' z' → logprob: -8.252421379089355
    4. '```' → logprob: -8.502421379089355
    5. ')' → logprob: -9.502421379089355
    6. '    
' → logprob: -9.877421379089355
    7. '   ' → logprob: -10.127421379089355
    8. ',' → logprob: -10.877421379089355
    9. '       ' → logprob: -11.752421379089355
    10. '[' → logprob: -12.002421379089355

Token 1022: ' term' (ID: 2914)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.43833860754966736
    2. '   ' → logprob: -2.0633385181427
    3. '(B' → logprob: -2.3133385181427
    4. '(' → logprob: -2.8133385181427
    5. '((' → logprob: -3.5633385181427
    6. '(
' → logprob: -3.8133385181427
    7. ' (' → logprob: -5.563338756561279
    8. ' z' → logprob: -5.688338756561279
    9. 'B' → logprob: -6.188338756561279
    10. '(C' → logprob: -6.938338756561279

Token 1023: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490902438759804
    2. '=' → logprob: -2.9299089908599854
    3. '_' → logprob: -11.554908752441406
    4. ' ' → logprob: -12.304908752441406
    5. ' =
' → logprob: -12.554908752441406
    6. ' ' → logprob: -12.929908752441406
    7. ')' → logprob: -13.304908752441406
    8. 's' → logprob: -13.679908752441406
    9. ',' → logprob: -14.179908752441406
    10. '   ' → logprob: -14.304908752441406

Token 1024: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.010116562247276306
    2. '((' → logprob: -4.7601165771484375
    3. ' (' → logprob: -6.8851165771484375
    4. 'B' → logprob: -8.635116577148438
    5. '(' → logprob: -8.885116577148438
    6. '   ' → logprob: -9.885116577148438
    7. '(((' → logprob: -9.885116577148438
    8. ' ((' → logprob: -10.885116577148438
    9. ' ' → logprob: -12.010116577148438
    10. '(k' → logprob: -12.135116577148438

Token 1025: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4745747745037079
    2. '(B' → logprob: -0.9745748043060303
    3. ' (' → logprob: -8.47457504272461
    4. ' B' → logprob: -8.84957504272461
    5. '   ' → logprob: -9.72457504272461
    6. '(' → logprob: -9.97457504272461
    7. '((' → logprob: -11.22457504272461
    8. ' ' → logprob: -11.72457504272461
    9. '(N' → logprob: -12.34957504272461
    10. '	B' → logprob: -12.97457504272461

Token 1026: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18897198140621185
    2. '-k' → logprob: -1.938971996307373
    3. '-' → logprob: -3.563971996307373
    4. '-K' → logprob: -12.313971519470215
    5. '-token' → logprob: -13.063971519470215
    6. '   ' → logprob: -13.563971519470215
    7. '-n' → logprob: -14.063971519470215
    8. ' ' → logprob: -14.438971519470215
    9. '-q' → logprob: -15.188971519470215
    10. '  ' → logprob: -15.188971519470215

Token 1027: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889264822006226
    2. ' k' → logprob: -2.578892707824707
    3. ' ' → logprob: -13.578892707824707
    4. '	k' → logprob: -13.703892707824707
    5. ')' → logprob: -15.203892707824707
    6. '   ' → logprob: -16.57889175415039
    7. '_k' → logprob: -16.57889175415039
    8. ' ' → logprob: -17.57889175415039
    9. '    ' → logprob: -17.95389175415039
    10. ' к' → logprob: -18.20389175415039

Token 1028: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007001649355515838
    2. ' *' → logprob: -8.000699996948242
    3. '*' → logprob: -9.000699996948242
    4. ')*' → logprob: -9.000699996948242
    5. ' )' → logprob: -9.375699996948242
    6. '   ' → logprob: -10.500699996948242
    7. '*)' → logprob: -13.125699996948242
    8. ')
' → logprob: -13.625699996948242
    9. ' ' → logprob: -14.625699996948242
    10. '```' → logprob: -15.000699996948242

Token 1029: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008681466802954674
    2. '*' → logprob: -4.758681297302246
    3. '   ' → logprob: -10.008681297302246
    4. ')' → logprob: -12.383681297302246
    5. ' ' → logprob: -13.008681297302246
    6. '*(' → logprob: -13.008681297302246
    7. '%' → logprob: -13.258681297302246
    8. '<|end|>' → logprob: -13.258681297302246
    9. ',' → logprob: -13.508681297302246
    10. ' ' → logprob: -13.508681297302246

Token 1030: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.07021317631006241
    2. '(F' → logprob: -2.6952130794525146
    3. '(' → logprob: -9.195213317871094
    4. 'f' → logprob: -10.070213317871094
    5. ' F' → logprob: -10.070213317871094
    6. '((' → logprob: -10.195213317871094
    7. '(
' → logprob: -10.445213317871094
    8. ' (' → logprob: -11.320213317871094
    9. '(f' → logprob: -11.945213317871094
    10. '   ' → logprob: -12.945213317871094

Token 1031: '[B' (ID: 95385)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.024634264409542084
    2. '[' → logprob: -3.77463436126709
    3. '[A' → logprob: -6.77463436126709
    4. '[P' → logprob: -9.27463436126709
    5. 'Q' → logprob: -9.77463436126709
    6. '[B' → logprob: -10.02463436126709
    7. 'N' → logprob: -10.14963436126709
    8. '[n' → logprob: -13.14963436126709
    9. '[(' → logprob: -13.27463436126709
    10. '[k' → logprob: -13.52463436126709

Token 1032: ' +' (ID: 659)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.013693157583475113
    2. '-' → logprob: -4.763693332672119
    3. ' -' → logprob: -6.013693332672119
    4. ']' → logprob: -6.138693332672119
    5. '-Q' → logprob: -9.263692855834961
    6. 'k' → logprob: -9.513692855834961
    7. '<|end|>' → logprob: -9.513692855834961
    8. 'Q' → logprob: -10.013692855834961
    9. '[' → logprob: -10.138692855834961
    10. ']*' → logprob: -10.513692855834961

Token 1033: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007799914572387934
    2. 'Q' → logprob: -5.007800102233887
    3. 'A' → logprob: -7.132800102233887
    4. '+k' → logprob: -9.257800102233887
    5. '-k' → logprob: -9.382800102233887
    6. 'N' → logprob: -10.007800102233887
    7. '-A' → logprob: -11.382800102233887
    8. '(k' → logprob: -11.757800102233887
    9. '(Q' → logprob: -11.882800102233887
    10. '-' → logprob: -12.007800102233887

Token 1034: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013256106525659561
    2. ']%' → logprob: -4.388256072998047
    3. '-' → logprob: -7.763256072998047
    4. '%' → logprob: -8.763256072998047
    5. ' -' → logprob: -10.013256072998047
    6. '<|end|>' → logprob: -10.388256072998047
    7. ']*' → logprob: -11.138256072998047
    8. '   ' → logprob: -11.138256072998047
    9. ' %' → logprob: -11.138256072998047
    10. '<|end|>' → logprob: -11.888256072998047

Token 1035: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014728360110893846
    2. '2' → logprob: -9.000146865844727
    3. 'B' → logprob: -11.875146865844727
    4. 'Q' → logprob: -12.250146865844727
    5. 'A' → logprob: -12.625146865844727
    6. 'k' → logprob: -12.750146865844727
    7. '-' → logprob: -13.250146865844727
    8. ' ' → logprob: -14.125146865844727
    9. 'N' → logprob: -14.375146865844727
    10. '```' → logprob: -14.500146865844727

Token 1036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. '2' → logprob: -11.625017166137695
    3. 'B' → logprob: -12.500017166137695
    4. 'A' → logprob: -13.125017166137695
    5. 'k' → logprob: -13.500017166137695
    6. '-' → logprob: -15.000017166137695
    7. '0' → logprob: -15.625017166137695
    8. ' ' → logprob: -16.250017166137695
    9. '```' → logprob: -16.812517166137695
    10. '(' → logprob: -17.125017166137695

Token 1037: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011866303160786629
    2. ']%' → logprob: -5.136866092681885
    3. '%' → logprob: -5.261866092681885
    4. ']*' → logprob: -8.511866569519043
    5. '   ' → logprob: -8.636866569519043
    6. '<|end|>' → logprob: -9.136866569519043
    7. '*' → logprob: -9.386866569519043
    8. ' *' → logprob: -9.636866569519043
    9. ' %' → logprob: -10.261866569519043
    10. ')' → logprob: -11.136866569519043

Token 1038: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.491712361574173
    2. ' *' → logprob: -1.7417123317718506
    3. ' %' → logprob: -2.4917123317718506
    4. '*' → logprob: -2.7417123317718506
    5. '   ' → logprob: -2.7417123317718506
    6. '<|end|>' → logprob: -7.61671257019043
    7. '*z' → logprob: -7.99171257019043
    8. ')' → logprob: -8.99171257019043
    9. '%A' → logprob: -8.99171257019043
    10. '  ' → logprob: -9.49171257019043

Token 1039: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.006106182467192411
    2. '(I' → logprob: -5.131106376647949
    3. '(' → logprob: -9.00610637664795
    4. ' I' → logprob: -10.25610637664795
    5. '   ' → logprob: -11.25610637664795
    6. ' (' → logprob: -13.25610637664795
    7. '((' → logprob: -13.38110637664795
    8. '	I' → logprob: -14.00610637664795
    9. '[I' → logprob: -14.50610637664795
    10. '(
' → logprob: -14.88110637664795

Token 1040: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0054888068698346615
    2. '[k' → logprob: -5.255488872528076
    3. '[A' → logprob: -8.755488395690918
    4. '[b' → logprob: -10.255488395690918
    5. 'B' → logprob: -10.505488395690918
    6. '[F' → logprob: -11.255488395690918
    7. '[(' → logprob: -11.505488395690918
    8. 'k' → logprob: -13.005488395690918
    9. 'Q' → logprob: -13.005488395690918
    10. '[N' → logprob: -13.255488395690918

Token 1041: ']' (ID: 60)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.4403451681137085
    2. '-k' → logprob: -1.5653451681137085
    3. '-' → logprob: -2.065345287322998
    4. '+' → logprob: -4.565345287322998
    5. ' -' → logprob: -4.940345287322998
    6. ' +' → logprob: -5.940345287322998
    7. 'k' → logprob: -9.56534481048584
    8. '[' → logprob: -9.94034481048584
    9. '[k' → logprob: -10.44034481048584
    10. '<|end|>' → logprob: -11.19034481048584

Token 1042: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19857630133628845
    2. ' *' → logprob: -1.8235763311386108
    3. '<|end|>' → logprob: -4.3235764503479
    4. '%' → logprob: -5.8235764503479
    5. '   ' → logprob: -6.4485764503479
    6. '<|end|>' → logprob: -7.9485764503479
    7. '[' → logprob: -8.448575973510742
    8. ')' → logprob: -9.573575973510742
    9. '  ' → logprob: -10.073575973510742
    10. ' %' → logprob: -10.448575973510742

Token 1043: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0004058858612552285
    2. ' I' → logprob: -8.500406265258789
    3. '(I' → logprob: -8.750406265258789
    4. '(' → logprob: -10.875406265258789
    5. '<|end|>' → logprob: -11.875406265258789
    6. '<|end|>' → logprob: -12.125406265258789
    7. '   ' → logprob: -12.500406265258789
    8. 'F' → logprob: -12.875406265258789
    9. '[I' → logprob: -13.875406265258789
    10. 'k' → logprob: -14.000406265258789

Token 1044: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.4321879744529724
    2. '[A' → logprob: -1.0571880340576172
    3. '[B' → logprob: -6.307188034057617
    4. '[' → logprob: -7.057188034057617
    5. 'k' → logprob: -7.682188034057617
    6. 'A' → logprob: -8.682188034057617
    7. '[(' → logprob: -9.807188034057617
    8. '(k' → logprob: -10.682188034057617
    9. '(A' → logprob: -11.057188034057617
    10. '   ' → logprob: -11.182188034057617

Token 1045: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1046: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.35429656505584717
    2. ' %' → logprob: -1.2292965650558472
    3. ' *' → logprob: -6.229296684265137
    4. '   ' → logprob: -6.479296684265137
    5. ')' → logprob: -6.729296684265137
    6. '*' → logprob: -7.229296684265137
    7. '<|end|>' → logprob: -8.229296684265137
    8. ')%' → logprob: -10.479296684265137
    9. '<|end|>' → logprob: -10.979296684265137
    10. '%B' → logprob: -11.229296684265137

Token 1047: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00012844942102674395
    2. ' F' → logprob: -9.375128746032715
    3. '(' → logprob: -10.875128746032715
    4. '(F' → logprob: -11.250128746032715
    5. 'f' → logprob: -12.625128746032715
    6. '   ' → logprob: -12.750128746032715
    7. 'Q' → logprob: -13.125128746032715
    8. ' (' → logprob: -13.750128746032715
    9. 'I' → logprob: -14.125128746032715
    10. '  ' → logprob: -14.750128746032715

Token 1048: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5055088400840759
    2. '[A' → logprob: -1.5055088996887207
    3. '[N' → logprob: -1.7555088996887207
    4. '[P' → logprob: -6.255508899688721
    5. '[k' → logprob: -9.630508422851562
    6. 'Q' → logprob: -10.255508422851562
    7. '[B' → logprob: -11.005508422851562
    8. '[C' → logprob: -12.130508422851562
    9. 'A' → logprob: -12.380508422851562
    10. '[R' → logprob: -12.505508422851562

Token 1049: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5166271924972534
    2. 'N' → logprob: -1.7666271924972534
    3. 'A' → logprob: -2.516627311706543
    4. '[' → logprob: -2.766627311706543
    5. '[N' → logprob: -3.141627311706543
    6. '[A' → logprob: -3.141627311706543
    7. 'P' → logprob: -6.516627311706543
    8. '[P' → logprob: -7.516627311706543
    9. '(Q' → logprob: -9.141627311706543
    10. '[k' → logprob: -9.266627311706543

Token 1050: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011644343845546246
    2. '-' → logprob: -4.51164436340332
    3. ' -' → logprob: -8.01164436340332
    4. ' ]' → logprob: -9.13664436340332
    5. '[' → logprob: -9.76164436340332
    6. '   ' → logprob: -10.76164436340332
    7. '+' → logprob: -11.51164436340332
    8. ']%' → logprob: -11.76164436340332
    9. ')' → logprob: -11.88664436340332
    10. ']*' → logprob: -11.88664436340332

Token 1051: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02273683063685894
    2. 'k' → logprob: -3.8977367877960205
    3. '1' → logprob: -6.8977370262146
    4. 'Q' → logprob: -7.2727370262146
    5. 'B' → logprob: -7.8977370262146
    6. 'N' → logprob: -10.522736549377441
    7. ' A' → logprob: -10.772736549377441
    8. ']' → logprob: -11.022736549377441
    9. '0' → logprob: -11.147736549377441
    10. 'P' → logprob: -11.522736549377441

Token 1052: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027843791991472244
    2. '-' → logprob: -3.902843713760376
    3. ' -' → logprob: -5.402843952178955
    4. '-k' → logprob: -6.402843952178955
    5. '+' → logprob: -7.902843952178955
    6. ' ]' → logprob: -8.277843475341797
    7. '])' → logprob: -8.902843475341797
    8. '-Q' → logprob: -9.527843475341797
    9. '<|end|>' → logprob: -10.027843475341797
    10. '<|end|>' → logprob: -10.152843475341797

Token 1053: ' k' (ID: 372)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12800388038158417
    2. '1' → logprob: -2.7530038356781006
    3. 'k' → logprob: -3.2530038356781006
    4. '0' → logprob: -5.00300407409668
    5. 'Q' → logprob: -5.25300407409668
    6. 'B' → logprob: -5.62800407409668
    7. 'P' → logprob: -6.50300407409668
    8. ' A' → logprob: -8.00300407409668
    9. '(A' → logprob: -8.75300407409668
    10. 'N' → logprob: -10.50300407409668

Token 1054: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.339776832144707e-05
    2. '-' → logprob: -10.500082969665527
    3. ' ]' → logprob: -11.125082969665527
    4. ']%' → logprob: -11.875082969665527
    5. '   ' → logprob: -12.000082969665527
    6. ')' → logprob: -12.125082969665527
    7. '']' → logprob: -12.125082969665527
    8. ']
' → logprob: -12.625082969665527
    9. '%' → logprob: -12.625082969665527
    10. '])' → logprob: -12.875082969665527

Token 1055: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2903139293193817
    2. '*' → logprob: -1.665313959121704
    3. '<|end|>' → logprob: -3.415313959121704
    4. '   ' → logprob: -3.915313959121704
    5. '%' → logprob: -5.290313720703125
    6. ')' → logprob: -6.290313720703125
    7. '<|end|>' → logprob: -7.040313720703125
    8. ' %' → logprob: -7.040313720703125
    9. '#' → logprob: -8.165313720703125
    10. '[' → logprob: -8.790313720703125

Token 1056: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -3.941161776310764e-05
    2. ' I' → logprob: -10.500039100646973
    3. '   ' → logprob: -11.750039100646973
    4. '(I' → logprob: -12.750039100646973
    5. '	I' → logprob: -14.625039100646973
    6. '>I' → logprob: -15.750039100646973
    7. '.I' → logprob: -16.12504005432129
    8. ' ' → logprob: -16.75004005432129
    9. '$I' → logprob: -16.75004005432129
    10. '(' → logprob: -16.87504005432129

Token 1057: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00029112942866049707
    2. '[A' → logprob: -8.250290870666504
    3. '(Q' → logprob: -10.625290870666504
    4. 'Q' → logprob: -12.500290870666504
    5. '[N' → logprob: -14.500290870666504
    6. '	Q' → logprob: -15.250290870666504
    7. 'A' → logprob: -15.500290870666504
    8. '[P' → logprob: -15.500290870666504
    9. '[(' → logprob: -15.875290870666504
    10. '   ' → logprob: -16.00029182434082

Token 1058: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.021157870069146156
    2. 'A' → logprob: -4.021157741546631
    3. '[' → logprob: -6.021157741546631
    4. '[A' → logprob: -7.896157741546631
    5. '(Q' → logprob: -8.521158218383789
    6. ' Q' → logprob: -13.646158218383789
    7. '	Q' → logprob: -13.771158218383789
    8. 'P' → logprob: -13.896158218383789
    9. '(A' → logprob: -14.021158218383789
    10. '{' → logprob: -15.271158218383789

Token 1059: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5893761515617371
    2. ' -' → logprob: -1.3393762111663818
    3. '-A' → logprob: -1.7143762111663818
    4. '+' → logprob: -6.464375972747803
    5. '-k' → logprob: -7.464375972747803
    6. '[' → logprob: -8.339376449584961
    7. '<|end|>' → logprob: -8.464376449584961
    8. ']' → logprob: -9.214376449584961
    9. '+A' → logprob: -9.339376449584961
    10. '   ' → logprob: -9.464376449584961

Token 1060: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.481465220451355
    2. ' *' → logprob: -0.981465220451355
    3. '<|end|>' → logprob: -5.3564653396606445
    4. '   ' → logprob: -6.3564653396606445
    5. ')' → logprob: -8.231465339660645
    6. 'I' → logprob: -8.856465339660645
    7. '<|end|>' → logprob: -9.356465339660645
    8. ' I' → logprob: -9.481465339660645
    9. '```' → logprob: -9.606465339660645
    10. ' ' → logprob: -9.731465339660645

Token 1061: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.676292231422849e-05
    2. ' I' → logprob: -11.125017166137695
    3. '(I' → logprob: -13.625017166137695
    4. '   ' → logprob: -14.750017166137695
    5. '	I' → logprob: -15.750017166137695
    6. '[I' → logprob: -16.500017166137695
    7. '$I' → logprob: -17.875017166137695
    8. '  ' → logprob: -18.250017166137695
    9. '(' → logprob: -18.375017166137695
    10. '.I' → logprob: -18.375017166137695

Token 1062: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.005330050829797983
    2. '[' → logprob: -5.6303300857543945
    3. '[P' → logprob: -6.6303300857543945
    4. '[N' → logprob: -7.8803300857543945
    5. 'A' → logprob: -10.630330085754395
    6. '```' → logprob: -12.880330085754395
    7. '[
' → logprob: -14.130330085754395
    8. '[B' → logprob: -14.130330085754395
    9. '[C' → logprob: -14.880330085754395
    10. '   ' → logprob: -14.880330085754395

Token 1063: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5998830199241638
    2. ' -' → logprob: -1.2248830795288086
    3. '-k' → logprob: -1.8498830795288086
    4. '[' → logprob: -10.349883079528809
    5. '-n' → logprob: -11.849883079528809
    6. '-A' → logprob: -12.349883079528809
    7. '<|end|>' → logprob: -12.599883079528809
    8. '-K' → logprob: -12.724883079528809
    9. '+' → logprob: -12.724883079528809
    10. '[-' → logprob: -12.974883079528809

Token 1064: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.896309739408025e-07
    2. ' k' → logprob: -14.125000953674316
    3. '_k' → logprob: -18.25
    4. '	k' → logprob: -19.625
    5. '{k' → logprob: -19.75
    6. '   ' → logprob: -20.25
    7. '(k' → logprob: -20.625
    8. '-k' → logprob: -21.25
    9. 'к' → logprob: -21.25
    10. '```' → logprob: -22.125

Token 1065: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020950057660229504
    2. ')' → logprob: -9.25020980834961
    3. ' ]' → logprob: -9.37520980834961
    4. '])' → logprob: -11.37520980834961
    5. ']*' → logprob: -12.12520980834961
    6. '*' → logprob: -12.62520980834961
    7. '   ' → logprob: -12.75020980834961
    8. '']' → logprob: -13.75020980834961
    9. '#' → logprob: -14.12520980834961
    10. '[' → logprob: -14.25020980834961

Token 1066: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5517770648002625
    2. ' %' → logprob: -1.4267771244049072
    3. ')' → logprob: -2.4267771244049072
    4. '   ' → logprob: -2.5517771244049072
    5. '<|end|>' → logprob: -4.301776885986328
    6. ')%' → logprob: -6.676776885986328
    7. ' *' → logprob: -7.176776885986328
    8. '*' → logprob: -7.676776885986328
    9. ' )' → logprob: -8.051776885986328
    10. '  ' → logprob: -8.426776885986328

Token 1067: ' #' (ID: 1069)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31412410736083984
    2. '%' → logprob: -1.3141241073608398
    3. ')' → logprob: -7.56412410736084
    4. '<|end|>' → logprob: -8.93912410736084
    5. ' *' → logprob: -9.43912410736084
    6. '*' → logprob: -9.68912410736084
    7. ')%' → logprob: -11.06412410736084
    8. ' %=' → logprob: -11.68912410736084
    9. '   ' → logprob: -11.68912410736084
    10. '%B' → logprob: -11.81412410736084

Token 1068: ' Ajouter' (ID: 165754)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.6091721057891846
    2. 'z' → logprob: -0.8591721057891846
    3. '   ' → logprob: -4.1091718673706055
    4. ' term' → logprob: -4.7341718673706055
    5. ' z' → logprob: -5.1091718673706055
    6. ' %=' → logprob: -7.9841718673706055
    7. '=' → logprob: -8.484171867370605
    8. '%' → logprob: -8.484171867370605
    9. ' =' → logprob: -8.734171867370605
    10. 'k' → logprob: -8.859171867370605

Token 1069: ' le' (ID: 505)
  Prédit: ' term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' term' → logprob: -0.616935133934021
    2. 'term' → logprob: -0.866935133934021
    3. ' z' → logprob: -4.1169352531433105
    4. '(term' → logprob: -4.2419352531433105
    5. ' (' → logprob: -4.9919352531433105
    6. 'z' → logprob: -6.3669352531433105
    7. '(' → logprob: -7.1169352531433105
    8. '(z' → logprob: -9.616934776306152
    9. '(
' → logprob: -11.116934776306152
    10. ' +=' → logprob: -11.491934776306152

Token 1070: ' terme' (ID: 42959)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.07563209533691406
    2. ' term' → logprob: -2.950632095336914
    3. 'z' → logprob: -4.950632095336914
    4. '=' → logprob: -5.575632095336914
    5. '(term' → logprob: -5.950632095336914
    6. ' z' → logprob: -6.075632095336914
    7. '%' → logprob: -6.575632095336914
    8. ' (' → logprob: -7.325632095336914
    9. ' %=' → logprob: -7.325632095336914
    10. '(' → logprob: -7.450632095336914

Token 1071: ' à' (ID: 1221)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.527457058429718
    2. '=' → logprob: -2.0274569988250732
    3. '%=' → logprob: -2.0274569988250732
    4. '%' → logprob: -2.6524569988250732
    5. ' =' → logprob: -3.6524569988250732
    6. ' +=' → logprob: -4.402457237243652
    7. ' %' → logprob: -4.527457237243652
    8. '   ' → logprob: -4.777457237243652
    9. '+=' → logprob: -5.277457237243652
    10. ')' → logprob: -5.277457237243652

Token 1072: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.201467826962471
    2. 'z' → logprob: -1.7014678716659546
    3. ' (' → logprob: -10.826467514038086
    4. '(z' → logprob: -11.451467514038086
    5. '=' → logprob: -11.576467514038086
    6. '(' → logprob: -12.201467514038086
    7. ' =' → logprob: -12.826467514038086
    8. '=z' → logprob: -12.951467514038086
    9. '	z' → logprob: -13.326467514038086
    10. 'term' → logprob: -14.576467514038086

Token 1073: ' et' (ID: 859)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7209751605987549
    2. ' %' → logprob: -1.4709751605987549
    3. ' %=' → logprob: -2.595975160598755
    4. '
' → logprob: -2.720975160598755
    5. '%' → logprob: -3.095975160598755
    6. '   ' → logprob: -3.595975160598755
    7. ' =' → logprob: -3.845975160598755
    8. ' z' → logprob: -4.345974922180176
    9. '+=' → logprob: -4.845974922180176
    10. '=' → logprob: -4.845974922180176

Token 1074: ' le' (ID: 505)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.10353101789951324
    2. 'z' → logprob: -2.4785311222076416
    3. ' %=' → logprob: -5.1035308837890625
    4. '%' → logprob: -5.2285308837890625
    5. '   ' → logprob: -6.6035308837890625
    6. '=' → logprob: -7.7285308837890625
    7. ' %' → logprob: -7.7285308837890625
    8. ')' → logprob: -8.228530883789062
    9. '
' → logprob: -9.103530883789062
    10. '%=' → logprob: -9.353530883789062

Token 1075: ' réduire' (ID: 78295)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0352630615234375
    2. ' z' → logprob: -3.4102630615234375
    3. '%=' → logprob: -7.1602630615234375
    4. ' %=' → logprob: -7.5352630615234375
    5. '%' → logprob: -8.785263061523438
    6. '=' → logprob: -10.035263061523438
    7. 'mod' → logprob: -10.285263061523438
    8. '```' → logprob: -10.910263061523438
    9. '=z' → logprob: -11.035263061523438
    10. '
' → logprob: -11.535263061523438

Token 1076: ' modulo' (ID: 112372)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.6483421325683594
    2. '%=' → logprob: -1.1483421325683594
    3. '%' → logprob: -1.8983421325683594
    4. '=' → logprob: -5.523342132568359
    5. ' %' → logprob: -6.023342132568359
    6. ' z' → logprob: -6.023342132568359
    7. ' modulo' → logprob: -8.02334213256836
    8. '   ' → logprob: -8.39834213256836
    9. '%
' → logprob: -8.52334213256836
    10. 'z' → logprob: -8.64834213256836

Token 1077: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02324768900871277
    2. ' M' → logprob: -3.773247718811035
    3. '(M' → logprob: -13.773247718811035
    4. '```' → logprob: -15.023247718811035
    5. '`' → logprob: -15.273247718811035
    6. ' ' → logprob: -15.273247718811035
    7. ' ' → logprob: -16.02324676513672
    8. '   ' → logprob: -16.64824676513672
    9. '
' → logprob: -17.02324676513672
    10. ' 
' → logprob: -17.14824676513672

Token 1078: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7640312910079956
    2. '
' → logprob: -1.5140312910079956
    3. ' =' → logprob: -2.264031410217285
    4. '%' → logprob: -2.514031410217285
    5. ' %=' → logprob: -2.889031410217285
    6. ' %' → logprob: -3.639031410217285
    7. '%=' → logprob: -4.139031410217285
    8. ' z' → logprob: -4.264031410217285
    9. '=' → logprob: -5.014031410217285
    10. '```' → logprob: -5.764031410217285

Token 1079: ' éviter' (ID: 64013)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2533567249774933
    2. ' z' → logprob: -1.503356695175171
    3. '```' → logprob: -7.37835693359375
    4. ' continue' → logprob: -8.62835693359375
    5. 'continue' → logprob: -8.75335693359375
    6. ')' → logprob: -8.75335693359375
    7. '.' → logprob: -9.87835693359375
    8. '%' → logprob: -10.12835693359375
    9. '<|end|>' → logprob: -10.37835693359375
    10. '   ' → logprob: -10.62835693359375

Token 1080: ' le' (ID: 505)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.21492671966552734
    2. 'M' → logprob: -1.7149267196655273
    3. '=' → logprob: -5.964926719665527
    4. '```' → logprob: -5.964926719665527
    5. ' =' → logprob: -6.214926719665527
    6. '<|end|>' → logprob: -6.339926719665527
    7. ' z' → logprob: -6.714926719665527
    8. 'z' → logprob: -6.839926719665527
    9. ' ' → logprob: -7.714926719665527
    10. '`' → logprob: -7.714926719665527

Token 1081: ' dépasse' (ID: 165701)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.9282203316688538
    2. ' z' → logprob: -0.9282203316688538
    3. '```' → logprob: -2.178220272064209
    4. '=' → logprob: -2.803220272064209
    5. ' =' → logprob: -5.053220272064209
    6. '%' → logprob: -5.053220272064209
    7. '=z' → logprob: -5.053220272064209
    8. ' %=' → logprob: -5.178220272064209
    9. '%=' → logprob: -5.678220272064209
    10. '+=' → logprob: -6.178220272064209

Token 1082: 'ment' (ID: 508)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.890117347240448
    2. 'ement' → logprob: -0.890117347240448
    3. 'p' → logprob: -2.6401174068450928
    4. 'pas' → logprob: -3.5151174068450928
    5. '#' → logprob: -4.140117168426514
    6. 'ment' → logprob: -4.390117168426514
    7. 'bord' → logprob: -5.265117168426514
    8. '```' → logprob: -5.890117168426514
    9. '_f' → logprob: -6.015117168426514
    10. 'er' → logprob: -6.015117168426514

Token 1083: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9259557127952576
    2. ' z' → logprob: -1.5509557723999023
    3. '%' → logprob: -2.4259557723999023
    4. '   ' → logprob: -2.5509557723999023
    5. '=' → logprob: -3.0509557723999023
    6. ' =' → logprob: -3.3009557723999023
    7. '%=' → logprob: -3.4259557723999023
    8. ' %=' → logprob: -3.5509557723999023
    9. ' 
' → logprob: -3.8009557723999023
    10. ' %' → logprob: -4.050955772399902

Token 1084: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5259649157524109
    2. ' =' → logprob: -1.5259649753570557
    3. ' +=' → logprob: -3.0259649753570557
    4. '%=' → logprob: -3.0259649753570557
    5. '%' → logprob: -3.5259649753570557
    6. '+=' → logprob: -4.025964736938477
    7. ' %=' → logprob: -4.525964736938477
    8. ' z' → logprob: -4.775964736938477
    9. '
' → logprob: -5.025964736938477
    10. ' %' → logprob: -5.150964736938477

Token 1085: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2343936264514923
    2. 'z' (adapté à ' z') → logprob: -1.85939359664917
    3. '   ' → logprob: -3.10939359664917
    4. '	z' → logprob: -5.85939359664917
    5. ' =' → logprob: -6.48439359664917
    6. '=' → logprob: -6.85939359664917
    7. '
' → logprob: -7.10939359664917
    8. '```' → logprob: -7.48439359664917
    9. ' +=' → logprob: -8.359394073486328
    10. ')' → logprob: -8.484394073486328

Token 1086: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04571649432182312
    2. '%=' → logprob: -3.1707165241241455
    3. ' =' → logprob: -6.670716285705566
    4. '+=' → logprob: -6.795716285705566
    5. ' %=' → logprob: -8.170716285705566
    6. '%' → logprob: -10.670716285705566
    7. ' +=' → logprob: -10.920716285705566
    8. '```' → logprob: -14.045716285705566
    9. '	' → logprob: -14.170716285705566
    10. '   ' → logprob: -14.295716285705566

Token 1087: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.17978286743164062
    2. ' (' → logprob: -1.8047828674316406
    3. '(' → logprob: -10.30478286743164
    4. '(x' → logprob: -13.30478286743164
    5. '(Z' → logprob: -14.55478286743164
    6. '   ' → logprob: -15.05478286743164
    7. '(y' → logprob: -15.05478286743164
    8. ' ' → logprob: -15.30478286743164
    9. '(s' → logprob: -15.67978286743164
    10. '[z' → logprob: -15.80478286743164

Token 1088: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.3199920178740285e-05
    2. ' z' → logprob: -11.250022888183594
    3. '(z' → logprob: -11.500022888183594
    4. '	z' → logprob: -17.125022888183594
    5. ''z' → logprob: -18.500022888183594
    6. '[z' → logprob: -18.625022888183594
    7. '   ' → logprob: -18.625022888183594
    8. '_z' → logprob: -20.500022888183594
    9. '-z' → logprob: -21.125022888183594
    10. '.z' → logprob: -21.500022888183594

Token 1089: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.474077433347702
    2. ' +' → logprob: -0.9740774631500244
    3. '＋' → logprob: -15.974077224731445
    4. '+
' → logprob: -16.224077224731445
    5. ' ' → logprob: -16.599077224731445
    6. '   ' → logprob: -16.724077224731445
    7. '```' → logprob: -17.349077224731445
    8. ' +
' → logprob: -17.974077224731445
    9. ' ' → logprob: -18.349077224731445
    10. ' plus' → logprob: -18.474077224731445

Token 1090: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.0011705794604495168
    2. ' term' → logprob: -6.751170635223389
    3. '(term' → logprob: -15.12617015838623
    4. '   ' → logprob: -16.376171112060547
    5. 'ter' → logprob: -18.501171112060547
    6. '-term' → logprob: -18.751171112060547
    7. '```' → logprob: -19.876171112060547
    8. 'terms' → logprob: -19.876171112060547
    9. '.term' → logprob: -20.001171112060547
    10. '
' → logprob: -20.251171112060547

Token 1091: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000633566698525101
    2. ' )' → logprob: -7.500633716583252
    3. ')%' → logprob: -9.750633239746094
    4. ' %' → logprob: -11.375633239746094
    5. '%' → logprob: -11.500633239746094
    6. '   ' → logprob: -14.875633239746094
    7. ' ' → logprob: -15.375633239746094
    8. '```' → logprob: -17.375633239746094
    9. '%)' → logprob: -17.500633239746094
    10. ')
' → logprob: -17.500633239746094

Token 1092: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0028084407094866037
    2. '%' → logprob: -5.877808570861816
    3. ' ' → logprob: -13.877808570861816
    4. ')' → logprob: -13.877808570861816
    5. ' %=' → logprob: -14.752808570861816
    6. '%B' → logprob: -15.252808570861816
    7. ' %#' → logprob: -15.377808570861816
    8. ' ' → logprob: -15.752808570861816
    9. '%A' → logprob: -16.1278076171875
    10. ')%' → logprob: -16.3778076171875

Token 1093: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: 0.0
    2. ' M' → logprob: -16.75
    3. '```' → logprob: -20.375
    4. '998' → logprob: -20.875
    5. '
' → logprob: -23.0
    6. '	M' → logprob: -23.125
    7. '   ' → logprob: -23.375
    8. '`' → logprob: -23.75
    9. '(M' → logprob: -23.75
    10. ' ' → logprob: -24.25

Token 1094: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5413450002670288
    2. '<|end|>' → logprob: -0.9163450002670288
    3. '   ' → logprob: -5.416345119476318
    4. '%' → logprob: -5.416345119476318
    5. '```' → logprob: -6.416345119476318
    6. '+' → logprob: -6.791345119476318
    7. 'print' → logprob: -7.041345119476318
    8. '#' → logprob: -7.416345119476318
    9. '*' → logprob: -7.416345119476318
    10. ':' → logprob: -7.791345119476318

Token 1095: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2946404814720154
    2. '<|end|>' → logprob: -1.5446405410766602
    3. '   ' → logprob: -4.04464054107666
    4. '```' → logprob: -5.29464054107666
    5. ':' → logprob: -5.66964054107666
    6. '+' → logprob: -5.91964054107666
    7. '[' → logprob: -6.16964054107666
    8. ' ' → logprob: -6.29464054107666
    9. '*' → logprob: -6.54464054107666
    10. '%' → logprob: -7.04464054107666

Token 1096: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -16.625
    3. ' print' → logprob: -17.625
    4. '```' → logprob: -18.25
    5. '#print' → logprob: -19.0
    6. '
' → logprob: -20.375
    7. 'printf' → logprob: -22.125
    8. 'Print' → logprob: -22.875
    9. 'for' → logprob: -23.125
    10. 'if' → logprob: -23.5

Token 1097: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0007711516227573156
    2. 'iche' → logprob: -7.2507710456848145
    3. 'ich' → logprob: -10.125771522521973
    4. '#' → logprob: -11.500771522521973
    5. 'ichage' → logprob: -12.000771522521973
    6. 'ic' → logprob: -13.375771522521973
    7. 'print' → logprob: -13.375771522521973
    8. 'ichier' → logprob: -14.000771522521973
    9. '   ' → logprob: -15.375771522521973
    10. 'cher' → logprob: -15.625771522521973

Token 1098: ' le' (ID: 505)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.005233763717114925
    2. 'z' → logprob: -5.2552337646484375
    3. 'print' → logprob: -18.630233764648438
    4. '(' → logprob: -18.630233764648438
    5. ' z' → logprob: -19.005233764648438
    6. '	z' → logprob: -20.130233764648438
    7. '(
' → logprob: -20.505233764648438
    8. '```' → logprob: -20.755233764648438
    9. '[z' → logprob: -21.380233764648438
    10. ',z' → logprob: -21.880233764648438

Token 1099: ' résultat' (ID: 62556)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.47413772344589233
    2. 'z' → logprob: -0.9741377234458923
    3. '(' → logprob: -9.849137306213379
    4. 'za' → logprob: -13.474137306213379
    5. ' z' → logprob: -13.724137306213379
    6. '(
' → logprob: -13.724137306213379
    7. '	z' → logprob: -13.974137306213379
    8. ',z' → logprob: -14.599137306213379
    9. 'result' → logprob: -14.599137306213379
    10. ' (' → logprob: -15.224137306213379

Token 1100: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.750436007976532e-05
    2. '```' → logprob: -10.62503719329834
    3. '(print' → logprob: -11.50003719329834
    4. ' print' → logprob: -13.50003719329834
    5. '(' → logprob: -13.62503719329834
    6. '``' → logprob: -15.87503719329834
    7. '(z' → logprob: -16.375038146972656
    8. '.print' → logprob: -16.875038146972656
    9. '
' → logprob: -17.125038146972656
    10. '(
' → logprob: -17.750038146972656

Token 1101: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013798571308143437
    2. '```' → logprob: -9.125138282775879
    3. '(print' → logprob: -10.750138282775879
    4. '(' → logprob: -12.500138282775879
    5. ' print' → logprob: -12.875138282775879
    6. '``' → logprob: -14.125138282775879
    7. '.print' → logprob: -15.500138282775879
    8. '()
' → logprob: -15.625138282775879
    9. '
' → logprob: -16.375137329101562
    10. '(z' → logprob: -16.750137329101562

Token 1102: ' la' (ID: 557)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00136988062877208
    2. '(z' → logprob: -6.626369953155518
    3. ' z' → logprob: -10.25136947631836
    4. 'print' → logprob: -12.00136947631836
    5. 'la' → logprob: -13.00136947631836
    6. '```' → logprob: -15.50136947631836
    7. '	z' → logprob: -17.12636947631836
    8. 'za' → logprob: -17.37636947631836
    9. 'le' → logprob: -17.62636947631836
    10. ' la' → logprob: -18.37636947631836

Token 1103: ' somme' (ID: 64484)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.014391736127436161
    2. 'print' → logprob: -4.264391899108887
    3. '(z' → logprob: -8.389391899108887
    4. '```' → logprob: -14.889391899108887
    5. '(print' → logprob: -15.514391899108887
    6. '(' → logprob: -15.639391899108887
    7. ' z' → logprob: -16.13939094543457
    8. 'result' → logprob: -17.01439094543457
    9. ' print' → logprob: -17.38939094543457
    10. '
' → logprob: -18.01439094543457

Token 1104: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.073596548754722e-05
    2. '```' → logprob: -10.00005054473877
    3. '(print' → logprob: -12.37505054473877
    4. ' print' → logprob: -14.25005054473877
    5. '``' → logprob: -16.250051498413086
    6. '(' → logprob: -16.375051498413086
    7. '.print' → logprob: -17.125051498413086
    8. '
' → logprob: -17.250051498413086
    9. '#print' → logprob: -17.750051498413086
    10. '(z' → logprob: -18.375051498413086

Token 1105: 'ée' (ID: 2894)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.17966365814208984
    2. 'z' → logprob: -2.67966365814209
    3. 'é' → logprob: -2.67966365814209
    4. 'ée' → logprob: -4.67966365814209
    5. '()' → logprob: -4.92966365814209
    6. 'print' → logprob: -4.92966365814209
    7. ')' → logprob: -6.17966365814209
    8. '()
' → logprob: -8.05466365814209
    9. 'e' → logprob: -8.17966365814209
    10. '(' → logprob: -8.80466365814209

Token 1106: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011236425780225545
    2. '```' → logprob: -9.875112533569336
    3. '(print' → logprob: -10.000112533569336
    4. '(' → logprob: -12.250112533569336
    5. ' print' → logprob: -12.250112533569336
    6. '(z' → logprob: -12.875112533569336
    7. '()
' → logprob: -13.250112533569336
    8. '``' → logprob: -14.875112533569336
    9. '()' → logprob: -15.000112533569336
    10. '.print' → logprob: -15.250112533569336

Token 1107: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -13.500001907348633
    3. ' print' → logprob: -16.875001907348633
    4. '``' → logprob: -18.375001907348633
    5. '(print' → logprob: -18.750001907348633
    6. '
' → logprob: -20.875001907348633
    7. '.print' → logprob: -22.375001907348633
    8. '#print' → logprob: -22.875001907348633
    9. '-print' → logprob: -23.000001907348633
    10. '	print' → logprob: -23.000001907348633

Token 1108: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. 'z' → logprob: -15.875001907348633
    4. ' (' → logprob: -18.875001907348633
    5. '(x' → logprob: -19.000001907348633
    6. '((' → logprob: -19.875001907348633
    7. '(
' → logprob: -22.000001907348633
    8. '(y' → logprob: -22.375001907348633
    9. '(Z' → logprob: -22.375001907348633
    10. '(q' → logprob: -22.750001907348633

Token 1109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. ' )' → logprob: -11.125022888183594
    3. ')
' → logprob: -11.875022888183594
    4. '))' → logprob: -15.500022888183594
    5. '```' → logprob: -15.625022888183594
    6. ')`' → logprob: -15.750022888183594
    7. '')' → logprob: -15.875022888183594
    8. '`)' → logprob: -16.000022888183594
    9. '[' → logprob: -16.625022888183594
    10. '())' → logprob: -16.750022888183594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1107
Tokens correctement prédits (1ère position, stricte): 216
Tokens correctement prédits (1ère position, avec adaptation): 224
Tokens correctement prédits (top 10): 570
Précision stricte (1ère position): 19.51%
Précision adaptée (1ère position): 20.23%
Précision (top 10): 51.49%
================================================================================
