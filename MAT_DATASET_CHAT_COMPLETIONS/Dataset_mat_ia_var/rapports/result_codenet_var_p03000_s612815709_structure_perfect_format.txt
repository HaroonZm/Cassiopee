================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, X = map(int, input().split())
L = list(map(int, input().split()))

D = 0
cnt = 1
for i in range(N):
    D += L[i]
    if D <= X:
        cnt += 1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' X' (ID: 2127)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055288441479206085
    2. '[' → logprob: -3.930288553237915
    3. ' =' → logprob: -4.305288314819336
    4. ',' → logprob: -4.555288314819336
    5. '.' → logprob: -4.930288314819336
    6. '+' → logprob: -6.805288314819336
    7. '_' → logprob: -7.805288314819336
    8. ':' → logprob: -7.930288314819336
    9. '#' → logprob: -8.680288314819336
    10. ')' → logprob: -8.680288314819336

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.9201867580413818
    2. 'map' → logprob: -1.0451867580413818
    3. '10' → logprob: -2.170186758041382
    4. ' np' → logprob: -3.295186758041382
    5. '5' → logprob: -3.420186758041382
    6. ' ' → logprob: -3.920186758041382
    7. 'np' → logprob: -4.045186996459961
    8. '50' → logprob: -5.045186996459961
    9. 'input' → logprob: -5.670186996459961
    10. '20' → logprob: -6.170186996459961

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002744127530604601
    2. '(lambda' → logprob: -6.127744197845459
    3. '(int' → logprob: -8.3777437210083
    4. '```' → logprob: -9.5027437210083
    5. '<|end|>' → logprob: -9.7527437210083
    6. '(user' → logprob: -10.7527437210083
    7. ')' → logprob: -10.8777437210083
    8. '(input' → logprob: -11.2527437210083
    9. '(str' → logprob: -11.6277437210083
    10. '(open' → logprob: -11.7527437210083

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059488363564014435
    2. '(input' → logprob: -3.434488296508789
    3. '(' → logprob: -4.559488296508789
    4. '```' → logprob: -5.559488296508789
    5. '`)' → logprob: -5.809488296508789
    6. ',' → logprob: -6.184488296508789
    7. 'input' → logprob: -6.184488296508789
    8. '`' → logprob: -6.559488296508789
    9. '<|end|>' → logprob: -7.934488296508789
    10. '),' → logprob: -8.059488296508789

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023320466279984
    2. ' input' → logprob: -2.350233316421509
    3. '(input' → logprob: -10.72523307800293
    4. ')' → logprob: -12.72523307800293
    5. ',input' → logprob: -13.85023307800293
    6. '=input' → logprob: -14.97523307800293
    7. '<input' → logprob: -15.85023307800293
    8. '[input' → logprob: -16.22523307800293
    9. '	input' → logprob: -16.97523307800293
    10. 'user' → logprob: -17.97523307800293

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.689306378364563
    2. '()' → logprob: -1.064306378364563
    3. '().' → logprob: -1.939306378364563
    4. ')' → logprob: -4.939306259155273
    5. '(' → logprob: -7.564306259155273
    6. '();)' → logprob: -8.189306259155273
    7. '()`' → logprob: -8.439306259155273
    8. '()>' → logprob: -8.689306259155273
    9. '());' → logprob: -8.814306259155273
    10. '`()' → logprob: -8.939306259155273

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020067949662916362
    2. 'strip' → logprob: -8.625200271606445
    3. ')' → logprob: -11.250200271606445
    4. ' split' → logprob: -12.625200271606445
    5. 'rstrip' → logprob: -12.625200271606445
    6. 'read' → logprob: -14.000200271606445
    7. '(split' → logprob: -14.500200271606445
    8. 'spl' → logprob: -16.500200271606445
    9. 'replace' → logprob: -17.625200271606445
    10. '_split' → logprob: -17.625200271606445

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029897546395659447
    2. '())' → logprob: -4.029897689819336
    3. '))' → logprob: -4.529897689819336
    4. '()' → logprob: -7.779897689819336
    5. '`)' → logprob: -8.029897689819336
    6. '(' → logprob: -9.654897689819336
    7. '()))' → logprob: -10.654897689819336
    8. ')`' → logprob: -11.029897689819336
    9. '```' → logprob: -11.029897689819336
    10. ' )' → logprob: -12.279897689819336

Token 11: 'L' (ID: 43)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8384525179862976
    2. '\n' → logprob: -2.2134525775909424
    3. 'x' → logprob: -2.5884525775909424
    4. '[' → logprob: -2.5884525775909424
    5. 'for' → logprob: -2.5884525775909424
    6. '#' → logprob: -2.9634525775909424
    7. '```' → logprob: -3.0884525775909424
    8. '\' → logprob: -3.8384525775909424
    9. ')' → logprob: -4.463452339172363
    10. 'print' → logprob: -4.588452339172363

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4614478349685669
    2. ' =' → logprob: -1.461447834968567
    3. '.' → logprob: -3.2114477157592773
    4. 'ist' → logprob: -3.8364477157592773
    5. '_' → logprob: -3.9614477157592773
    6. 'i' → logprob: -4.086447715759277
    7. 's' → logprob: -4.461447715759277
    8. '[' → logprob: -4.586447715759277
    9. '=[]' → logprob: -5.711447715759277
    10. 'st' → logprob: -5.836447715759277

Token 13: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1759371757507324
    2. ' list' → logprob: -1.5509371757507324
    3. '[]' → logprob: -1.6759371757507324
    4. ' [' → logprob: -2.0509371757507324
    5. ' []' → logprob: -2.3009371757507324
    6. '[' → logprob: -3.8009371757507324
    7. '[list' → logprob: -3.9259371757507324
    8. '[int' → logprob: -4.550937175750732
    9. '[input' → logprob: -4.675937175750732
    10. '[len' → logprob: -7.050937175750732

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003832736751064658
    2. '(range' → logprob: -5.878832817077637
    3. '(map' → logprob: -7.378832817077637
    4. '()' → logprob: -9.378832817077637
    5. '(input' → logprob: -9.378832817077637
    6. '(int' → logprob: -9.628832817077637
    7. '(
' → logprob: -9.628832817077637
    8. '[' → logprob: -11.253832817077637
    9. '[int' → logprob: -11.503832817077637
    10. 's' → logprob: -11.753832817077637

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036472335923463106
    2. '(' → logprob: -5.628647327423096
    3. 'int' → logprob: -10.753646850585938
    4. '(str' → logprob: -11.628646850585938
    5. '[int' → logprob: -12.003646850585938
    6. '=int' → logprob: -12.878646850585938
    7. '(input' → logprob: -13.128646850585938
    8. '```' → logprob: -13.253646850585938
    9. '<int' → logprob: -13.503646850585938
    10. ',int' → logprob: -13.878646850585938

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5618308782577515
    2. ',input' → logprob: -1.4368308782577515
    3. ',' → logprob: -1.6868308782577515
    4. '(' → logprob: -5.061830997467041
    5. ' ,' → logprob: -8.186830520629883
    6. '(int' → logprob: -8.436830520629883
    7. ',int' → logprob: -9.311830520629883
    8. 'input' → logprob: -10.561830520629883
    9. ' (' → logprob: -10.561830520629883
    10. '```' → logprob: -10.811830520629883

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759426355361938
    2. ' input' → logprob: -0.8259426355361938
    3. '(input' → logprob: -13.075942993164062
    4. ',input' → logprob: -14.200942993164062
    5. '=input' → logprob: -15.200942993164062
    6. '	input' → logprob: -16.325942993164062
    7. '_input' → logprob: -16.950942993164062
    8. ')' → logprob: -17.075942993164062
    9. ' ' → logprob: -17.075942993164062
    10. '<input' → logprob: -17.575942993164062

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000321995816193521
    2. '()' → logprob: -8.125322341918945
    3. '(' → logprob: -11.500322341918945
    4. '(.' → logprob: -12.000322341918945
    5. ' ().' → logprob: -12.750322341918945
    6. '.' → logprob: -13.000322341918945
    7. ')' → logprob: -13.375322341918945
    8. '())' → logprob: -13.875322341918945
    9. '()))' → logprob: -14.375322341918945
    10. ' .' → logprob: -14.750322341918945

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. 'strip' → logprob: -13.875001907348633
    3. ' split' → logprob: -14.375001907348633
    4. '(split' → logprob: -16.750001907348633
    5. 'rstrip' → logprob: -16.750001907348633
    6. 'spl' → logprob: -19.250001907348633
    7. ')' → logprob: -20.250001907348633
    8. 'read' → logprob: -20.375001907348633
    9. '.split' → logprob: -21.250001907348633
    10. 'plit' → logprob: -22.000001907348633

Token 20: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.706499457359314
    2. '()))' → logprob: -1.081499457359314
    3. ')' → logprob: -2.4564995765686035
    4. '(' → logprob: -3.2064995765686035
    5. '())' → logprob: -3.3314995765686035
    6. '()' → logprob: -5.2064995765686035
    7. ')))' → logprob: -11.081499099731445
    8. '('' → logprob: -11.206499099731445
    9. ' ))' → logprob: -12.331499099731445
    10. ''))' → logprob: -12.331499099731445

Token 21: 'D' (ID: 35)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0940353199839592
    2. 's' → logprob: -3.2190353870391846
    3. 'c' → logprob: -3.9690353870391846
    4. 'd' → logprob: -4.8440351486206055
    5. 'sum' → logprob: -5.5940351486206055
    6. 'count' → logprob: -5.7190351486206055
    7. 'f' → logprob: -5.8440351486206055
    8. 'a' → logprob: -6.3440351486206055
    9. 'i' → logprob: -6.8440351486206055
    10. 'max' → logprob: -6.8440351486206055

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3683689832687378
    2. '.' → logprob: -1.4933689832687378
    3. '=' → logprob: -1.4933689832687378
    4. '[' → logprob: -1.6183689832687378
    5. '[i' → logprob: -2.8683691024780273
    6. '.append' → logprob: -4.618369102478027
    7. '=[]' → logprob: -4.993369102478027
    8. 'ef' → logprob: -5.118369102478027
    9. '[:]' → logprob: -5.493369102478027
    10. 'i' → logprob: -5.868369102478027

Token 23: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.131929874420166
    2. '[]' → logprob: -1.256929874420166
    3. 'L' → logprob: -2.381929874420166
    4. '[' → logprob: -2.381929874420166
    5. ' [' → logprob: -2.506929874420166
    6. ' []' → logprob: -2.756929874420166
    7. '[L' → logprob: -3.881929874420166
    8. ' {}' → logprob: -4.006929874420166
    9. '0' → logprob: -5.006929874420166
    10. ' L' → logprob: -5.131929874420166

Token 24: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.13355886936187744
    2. '[]' → logprob: -3.133558750152588
    3. '[L' → logprob: -3.508558750152588
    4. '{' → logprob: -3.633558750152588
    5. '[' → logprob: -4.383558750152588
    6. 'sorted' → logprob: -5.008558750152588
    7. 'L' → logprob: -6.758558750152588
    8. '[X' → logprob: -7.008558750152588
    9. 'dict' → logprob: -7.258558750152588
    10. '[max' → logprob: -7.508558750152588

Token 25: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003430673386901617
    2. ' for' → logprob: -5.8784308433532715
    3. '
' → logprob: -7.6284308433532715
    4. '\n' → logprob: -9.878430366516113
    5. 'f' → logprob: -10.753430366516113
    6. 'max' → logprob: -10.878430366516113
    7. '' → logprob: -11.378430366516113
    8. 'd' → logprob: -11.378430366516113
    9. '\' → logprob: -12.003430366516113
    10. '```' → logprob: -12.378430366516113

Token 26: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001414877362549305
    2. ' for' → logprob: -6.751414775848389
    3. '
' → logprob: -9.001415252685547
    4. 'f' → logprob: -10.126415252685547
    5. '\n' → logprob: -11.001415252685547
    6. 'i' → logprob: -11.126415252685547
    7. '```' → logprob: -11.251415252685547
    8. 'd' → logprob: -11.251415252685547
    9. 'F' → logprob: -12.501415252685547
    10. '\' → logprob: -12.626415252685547

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7751058340072632
    2. ' +=' → logprob: -1.0251058340072632
    3. '=' → logprob: -2.1501059532165527
    4. ' ' → logprob: -3.0251059532165527
    5. '+' → logprob: -4.775105953216553
    6. '+=' → logprob: -5.275105953216553
    7. '_' → logprob: -7.400105953216553
    8. ' +' → logprob: -8.150105476379395
    9. '  ' → logprob: -8.275105476379395
    10. ')' → logprob: -8.275105476379395

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16033531725406647
    2. ' ' → logprob: -1.9103353023529053
    3. '1' → logprob: -9.160335540771484
    4. '[' → logprob: -13.285335540771484
    5. 'N' → logprob: -14.972835540771484
    6. ' [' → logprob: -14.972835540771484
    7. ' N' → logprob: -15.222835540771484
    8. '2' → logprob: -15.285335540771484
    9. '{' → logprob: -15.535335540771484
    10. ' ' → logprob: -15.535335540771484

Token 29: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006494098342955112
    2. '1' → logprob: -7.500649452209473
    3. ' ' → logprob: -9.375649452209473
    4. 'N' → logprob: -12.250649452209473
    5. '[' → logprob: -13.250649452209473
    6. '{}' → logprob: -13.500649452209473
    7. 'X' → logprob: -13.875649452209473
    8. '-' → logprob: -14.500649452209473
    9. '{' → logprob: -14.625649452209473
    10. 'len' → logprob: -15.250649452209473

Token 30: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.782439112663269
    2. 'for' → logprob: -1.157439112663269
    3. ' ' → logprob: -2.1574392318725586
    4. '
' → logprob: -3.0324392318725586
    5. '<|end|>' → logprob: -3.4074392318725586
    6. ' 
' → logprob: -4.157439231872559
    7. '\n' → logprob: -4.907439231872559
    8. '0' → logprob: -6.157439231872559
    9. ' while' → logprob: -7.157439231872559
    10. ' if' → logprob: -7.282439231872559

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012550975196063519
    2. ' for' → logprob: -4.3875508308410645
    3. 'i' → logprob: -11.137551307678223
    4. 'f' → logprob: -12.137551307678223
    5. '\n' → logprob: -12.262551307678223
    6. '
' → logprob: -13.262551307678223
    7. '```' → logprob: -13.262551307678223
    8. '' → logprob: -13.262551307678223
    9. 'd' → logprob: -13.387551307678223
    10. ' ' → logprob: -13.512551307678223

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004409348126500845
    2. 'i' → logprob: -6.129409313201904
    3. ' ' → logprob: -6.379409313201904
    4. ' x' → logprob: -8.254409790039062
    5. ' X' → logprob: -9.129409790039062
    6. ' _' → logprob: -9.754409790039062
    7. '_' → logprob: -9.879409790039062
    8. ' d' → logprob: -11.629409790039062
    9. '  ' → logprob: -11.629409790039062
    10. 'X' → logprob: -12.254409790039062

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02644032984972
    2. 'in' → logprob: -3.651440382003784
    3. ' ' → logprob: -9.151440620422363
    4. '+' → logprob: -11.401440620422363
    5. 'n' → logprob: -11.776440620422363
    6. ',' → logprob: -12.026440620422363
    7. '	in' → logprob: -12.776440620422363
    8. '  ' → logprob: -13.401440620422363
    9. ' i' → logprob: -14.401440620422363
    10. '   ' → logprob: -14.526440620422363

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759426951408386
    2. ' range' → logprob: -0.8259426951408386
    3. '(range' → logprob: -13.575942993164062
    4. '	range' → logprob: -13.700942993164062
    5. ' xrange' → logprob: -14.825942993164062
    6. ' ' → logprob: -15.200942993164062
    7. ')' → logprob: -16.700942993164062
    8. '   ' → logprob: -17.450942993164062
    9. 'L' → logprob: -17.950942993164062
    10. 'X' → logprob: -18.200942993164062

Token 35: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019543453527148813
    2. '(N' → logprob: -8.750195503234863
    3. ' (' → logprob: -10.625195503234863
    4. '(len' → logprob: -11.625195503234863
    5. '(n' → logprob: -13.875195503234863
    6. '(
' → logprob: -14.125195503234863
    7. '(range' → logprob: -14.250195503234863
    8. ' ' → logprob: -14.750195503234863
    9. '(i' → logprob: -15.375195503234863
    10. '(

' → logprob: -16.625194549560547

Token 36: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06208106875419617
    2. ' -' → logprob: -3.0620810985565186
    3. '):' → logprob: -4.4370808601379395
    4. '1' → logprob: -7.3120808601379395
    5. ')' → logprob: -7.6870808601379395
    6. '):
' → logprob: -8.187081336975098
    7. ' ):' → logprob: -9.062081336975098
    8. ' ' → logprob: -11.062081336975098
    9. '[' → logprob: -11.812081336975098
    10. '2' → logprob: -12.062081336975098

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00676889531314373
    2. ' if' → logprob: -5.256768703460693
    3. 'if' → logprob: -7.756768703460693
    4. ' ' → logprob: -7.881768703460693
    5. '    ' → logprob: -8.881769180297852
    6. ':' → logprob: -8.881769180297852
    7. '	if' → logprob: -9.381769180297852
    8. '  ' → logprob: -9.506769180297852
    9. '\t' → logprob: -10.131769180297852
    10. ',' → logprob: -10.381769180297852

Token 38: ' D' (ID: 415)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6642287373542786
    2. '   ' → logprob: -1.0392286777496338
    3. ' if' → logprob: -2.164228677749634
    4. 'i' → logprob: -5.414228916168213
    5. 'for' → logprob: -5.789228916168213
    6. '1' → logprob: -6.039228916168213
    7. 'range' → logprob: -6.289228916168213
    8. ' i' → logprob: -6.289228916168213
    9. ' for' → logprob: -7.414228916168213
    10. 'X' → logprob: -7.539228916168213

Token 39: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10329409688711166
    2. '+=' → logprob: -2.3532941341400146
    3. '+' → logprob: -6.6032938957214355
    4. ' +' → logprob: -7.3532938957214355
    5. ' =' → logprob: -8.228294372558594
    6. '=' → logprob: -8.228294372558594
    7. ',' → logprob: -8.978294372558594
    8. ' <' → logprob: -9.478294372558594
    9. '<' → logprob: -9.978294372558594
    10. ' ' → logprob: -9.978294372558594

Token 40: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004583684261888266
    2. ' L' → logprob: -6.129583835601807
    3. 'X' → logprob: -6.629583835601807
    4. 'abs' → logprob: -7.129583835601807
    5. '1' → logprob: -8.879583358764648
    6. 'i' → logprob: -10.004583358764648
    7. '   ' → logprob: -10.879583358764648
    8. ' abs' → logprob: -11.004583358764648
    9. '(L' → logprob: -11.254583358764648
    10. ' ' → logprob: -11.629583358764648

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007887447252869606
    2. '[' → logprob: -4.882887363433838
    3. '[I' → logprob: -8.632887840270996
    4. '[D' → logprob: -10.382887840270996
    5. '[L' → logprob: -10.757887840270996
    6. '\[' → logprob: -11.507887840270996
    7. ' [' → logprob: -12.382887840270996
    8. '[j' → logprob: -12.757887840270996
    9. '```' → logprob: -12.757887840270996
    10. '[
' → logprob: -12.882887840270996

Token 42: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07497934252023697
    2. '])' → logprob: -2.824979305267334
    3. ')' → logprob: -4.574979305267334
    4. '-' → logprob: -6.949979305267334
    5. ']==' → logprob: -8.199979782104492
    6. ']*' → logprob: -8.574979782104492
    7. ']>' → logprob: -8.574979782104492
    8. ' ]' → logprob: -8.949979782104492
    9. '+' → logprob: -8.949979782104492
    10. ']>=' → logprob: -9.199979782104492

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7797257304191589
    2. ' if' → logprob: -1.1547257900238037
    3. 'if' → logprob: -2.5297257900238037
    4. '+' → logprob: -2.6547257900238037
    5. ' ' → logprob: -3.1547257900238037
    6. '<|end|>' → logprob: -4.279725551605225
    7. '  ' → logprob: -5.279725551605225
    8. '    ' → logprob: -5.279725551605225
    9. '-' → logprob: -6.529725551605225
    10. ' +' → logprob: -6.779725551605225

Token 44: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4393988847732544
    2. ' if' → logprob: -1.0643988847732544
    3. '   ' → logprob: -5.314398765563965
    4. ' ' → logprob: -5.939398765563965
    5. '\n' → logprob: -7.439398765563965
    6. '```' → logprob: -7.689398765563965
    7. ''' → logprob: -7.939398765563965
    8. ' 
' → logprob: -8.689398765563965
    9. '>' → logprob: -9.189398765563965
    10. '`' → logprob: -9.189398765563965

Token 45: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.22971013188362122
    2. 'D' → logprob: -1.6047101020812988
    3. ' L' → logprob: -5.729710102081299
    4. 'L' → logprob: -7.604710102081299
    5. ' ' → logprob: -8.229710578918457
    6. ' i' → logprob: -8.854710578918457
    7. ' X' → logprob: -10.104710578918457
    8. 'X' → logprob: -10.604710578918457
    9. 'i' → logprob: -10.604710578918457
    10. '  ' → logprob: -11.479710578918457

Token 46: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5256640315055847
    2. '>' → logprob: -1.0256640911102295
    3. ' >=' → logprob: -3.9006640911102295
    4. ' >' → logprob: -4.15066385269165
    5. '==' → logprob: -4.52566385269165
    6. '<=' → logprob: -6.27566385269165
    7. '+' → logprob: -7.40066385269165
    8. ' ==' → logprob: -7.77566385269165
    9. '>X' → logprob: -8.400664329528809
    10. '%' → logprob: -9.025664329528809

Token 47: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6933461427688599
    2. ' X' → logprob: -0.6933461427688599
    3. ' ' → logprob: -8.56834602355957
    4. '   ' → logprob: -12.94334602355957
    5. '	X' → logprob: -13.81834602355957
    6. '  ' → logprob: -13.94334602355957
    7. '0' → logprob: -14.44334602355957
    8. '100' → logprob: -14.69334602355957
    9. '>X' → logprob: -14.81834602355957
    10. '10' → logprob: -14.94334602355957

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009287334396503866
    2. ':
' → logprob: -7.00092887878418
    3. ' and' → logprob: -11.75092887878418
    4. ' :' → logprob: -12.50092887878418
    5. ':
' → logprob: -13.25092887878418
    6. 'and' → logprob: -13.62592887878418
    7. '   ' → logprob: -15.00092887878418
    8. '):' → logprob: -15.00092887878418
    9. '.' → logprob: -15.25092887878418
    10. ':

' → logprob: -15.37592887878418

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03678625449538231
    2. ':
' → logprob: -4.161786079406738
    3. '   ' → logprob: -4.661786079406738
    4. '       ' → logprob: -4.661786079406738
    5. ' and' → logprob: -7.536786079406738
    6. '	cnt' → logprob: -8.161786079406738
    7. ':
' → logprob: -8.786786079406738
    8. 'cnt' → logprob: -8.911786079406738
    9. ' cnt' → logprob: -9.161786079406738
    10. ' :' → logprob: -9.661786079406738

Token 50: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0488961897790432
    2. ' cnt' → logprob: -3.048896074295044
    3. '	cnt' → logprob: -8.673895835876465
    4. '(cnt' → logprob: -10.298895835876465
    5. '[cnt' → logprob: -10.423895835876465
    6. '   ' → logprob: -11.173895835876465
    7. '_cnt' → logprob: -11.173895835876465
    8. 'print' → logprob: -11.298895835876465
    9. ' ' → logprob: -11.548895835876465
    10. 'count' → logprob: -12.423895835876465

Token 51: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04952308535575867
    2. '+=' → logprob: -3.049523115158081
    3. '+' → logprob: -7.049522876739502
    4. ' +' → logprob: -10.54952335357666
    5. ' =' → logprob: -10.79952335357666
    6. '=' → logprob: -11.54952335357666
    7. ' ' → logprob: -11.67452335357666
    8. ' *=' → logprob: -14.29952335357666
    9. '<|end|>' → logprob: -14.67452335357666
    10. ' -=' → logprob: -14.79952335357666

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014168326742947102
    2. ' ' → logprob: -4.2641682624816895
    3. 'L' → logprob: -13.014168739318848
    4. '0' → logprob: -14.139168739318848
    5. ' L' → logprob: -14.389168739318848
    6. 'i' → logprob: -14.639168739318848
    7. ' i' → logprob: -15.889168739318848
    8. '2' → logprob: -15.889168739318848
    9. '10' → logprob: -16.01416778564453
    10. '   ' → logprob: -16.38916778564453

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016194197814911604
    2. ' ' → logprob: -9.000162124633789
    3. 'L' → logprob: -10.250162124633789
    4. 'D' → logprob: -13.375162124633789
    5. '0' → logprob: -13.875162124633789
    6. 'i' → logprob: -15.125162124633789
    7. '2' → logprob: -15.625162124633789
    8. ' L' → logprob: -16.75016212463379
    9. '-' → logprob: -17.50016212463379
    10. '+' → logprob: -17.93766212463379

Token 54: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5850152373313904
    2. 'else' → logprob: -0.8350152373313904
    3. '<|end|>' → logprob: -4.835015296936035
    4. 'print' → logprob: -7.835015296936035
    5. ' ' → logprob: -8.085015296936035
    6. '```' → logprob: -9.085015296936035
    7. 'elif' → logprob: -9.335015296936035
    8. '<|end|>' → logprob: -10.460015296936035
    9. '	else' → logprob: -10.585015296936035
    10. '    ' → logprob: -10.585015296936035

Token 55: 'print' (ID: 1598)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5236557126045227
    2. ' else' → logprob: -0.8986557126045227
    3. '<|end|>' → logprob: -8.148655891418457
    4. 'print' → logprob: -9.523655891418457
    5. 'elif' → logprob: -9.773655891418457
    6. '```' → logprob: -10.398655891418457
    7. '   ' → logprob: -10.648655891418457
    8. ' ' → logprob: -10.898655891418457
    9. '	else' → logprob: -11.273655891418457
    10. ' elif' → logprob: -11.898655891418457

Token 56: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06208251789212227
    2. '(cnt' → logprob: -2.812082529067993
    3. '()' → logprob: -9.562082290649414
    4. '('' → logprob: -10.812082290649414
    5. '(C' → logprob: -12.312082290649414
    6. '(count' → logprob: -12.562082290649414
    7. '("' → logprob: -12.562082290649414
    8. '(len' → logprob: -12.687082290649414
    9. '(`' → logprob: -12.937082290649414
    10. '((' → logprob: -13.062082290649414

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.250004768371582
    3. '))' → logprob: -16.1250057220459
    4. '`)' → logprob: -16.8750057220459
    5. ')
' → logprob: -17.2500057220459
    6. ')`' → logprob: -17.3750057220459
    7. '）' → logprob: -17.8750057220459
    8. '')' → logprob: -18.3750057220459
    9. '#' → logprob: -18.8750057220459
    10. '()' → logprob: -19.0000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 44
Précision stricte (1ère position): 32.73%
Précision adaptée (1ère position): 36.36%
Précision (top 10): 80.00%
================================================================================
