================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import islice, accumulate

n, k = map(int, input().split())
p = list(map(int, input().split()))

# Calcul des sommes glissantes optimisé à l'aide de itertools.accumulate et compréhension de liste
prefix_sums = list(accumulate(p, initial=0))
window_sums = [prefix_sums[i + k] - prefix_sums[i] for i in range(n - k + 1)]

# Affichage avec calcul final, sans variable temporaire inutile
print((max(window_sums) + k) / 2.0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' is' (ID: 382)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0018052493687719107
    2. 'com' → logprob: -7.126805305480957
    3. 'chain' → logprob: -8.376805305480957
    4. 'comb' → logprob: -8.501805305480957
    5. '```' → logprob: -8.501805305480957
    6. 'cycle' → logprob: -8.751805305480957
    7. '#' → logprob: -10.501805305480957
    8. 'product' → logprob: -10.876805305480957
    9. 'ertools' → logprob: -10.876805305480957
    10. '`' → logprob: -10.876805305480957

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023280750028789043
    2. '.' → logprob: -6.377327919006348
    3. '\(' → logprob: -8.002327919006348
    4. '(
' → logprob: -9.127327919006348
    5. '```' → logprob: -10.127327919006348
    6. ',' → logprob: -10.127327919006348
    7. '`' → logprob: -10.377327919006348
    8. 'import' → logprob: -11.377327919006348
    9. '\' → logprob: -11.502327919006348
    10. ' (' → logprob: -12.002327919006348

Token 6: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5501224994659424
    2. 'chain' → logprob: -1.8001224994659424
    3. 'cycle' → logprob: -1.9251224994659424
    4. 'zip' → logprob: -3.4251224994659424
    5. 'group' → logprob: -4.175122261047363
    6. 'tee' → logprob: -4.300122261047363
    7. 'filter' → logprob: -4.425122261047363
    8. 'take' → logprob: -4.675122261047363
    9. ' cycle' → logprob: -5.175122261047363
    10. ' chain' → logprob: -5.300122261047363

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027567598968744278
    2. '(
' → logprob: -4.402567386627197
    3. '.' → logprob: -4.527567386627197
    4. '\' → logprob: -7.027567386627197
    5. ',' → logprob: -7.027567386627197
    6. '\(' → logprob: -7.027567386627197
    7. '\n' → logprob: -7.777567386627197
    8. '`' → logprob: -8.527567863464355
    9. 'def' → logprob: -8.652567863464355
    10. 'import' → logprob: -8.777567863464355

Token 8: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014234490226954222
    2. '(
' → logprob: -7.251423358917236
    3. '.' → logprob: -7.751423358917236
    4. '\(' → logprob: -9.376423835754395
    5. 'def' → logprob: -10.001423835754395
    6. ',' → logprob: -10.251423835754395
    7. '```' → logprob: -10.876423835754395
    8. '[' → logprob: -11.001423835754395
    9. '\' → logprob: -11.376423835754395
    10. 'a' → logprob: -11.376423835754395

Token 9: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4001270532608032
    2. '_' → logprob: -1.9001270532608032
    3. ' =' → logprob: -2.0251269340515137
    4. ',' → logprob: -4.150126934051514
    5. 'u' → logprob: -4.400126934051514
    6. ' ' → logprob: -4.900126934051514
    7. ')' → logprob: -5.400126934051514
    8. '.' → logprob: -5.900126934051514
    9. 'e' → logprob: -6.900126934051514
    10. 'a' → logprob: -6.900126934051514

Token 10: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.46343177556991577
    2. ' m' → logprob: -1.2134318351745605
    3. 'm' → logprob: -3.3384318351745605
    4. 'k' → logprob: -3.5884318351745605
    5. ' ' → logprob: -4.7134318351745605
    6. ' '' → logprob: -7.9634318351745605
    7. ' s' → logprob: -8.963431358337402
    8. ' p' → logprob: -9.213431358337402
    9. ' n' → logprob: -9.463431358337402
    10. ' =' → logprob: -9.588431358337402

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02651485800743103
    2. '=' → logprob: -3.651514768600464
    3. ',' → logprob: -8.651515007019043
    4. ' ' → logprob: -11.276515007019043
    5. ' ,' → logprob: -11.276515007019043
    6. '<|end|>' → logprob: -12.276515007019043
    7. ')' → logprob: -13.151515007019043
    8. ' =
' → logprob: -13.151515007019043
    9. '[' → logprob: -13.776515007019043
    10. '.' → logprob: -14.026515007019043

Token 12: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3168116807937622
    2. ' ' → logprob: -1.4418116807937622
    3. 'map' → logprob: -3.5668115615844727
    4. ' input' → logprob: -5.816811561584473
    5. ' int' → logprob: -6.441811561584473
    6. '0' → logprob: -6.566811561584473
    7. 'input' → logprob: -7.816811561584473
    8. ' n' → logprob: -9.191811561584473
    9. '10' → logprob: -9.191811561584473
    10. '1' → logprob: -9.941811561584473

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13732688128948212
    2. '(int' → logprob: -3.012326955795288
    3. '<|end|>' → logprob: -3.387326955795288
    4. '(str' → logprob: -3.637326955795288
    5. '(lambda' → logprob: -4.262326717376709
    6. '(range' → logprob: -6.887326717376709
    7. '(input' → logprob: -7.387326717376709
    8. 'str' → logprob: -7.637326717376709
    9. '<|end|>' → logprob: -7.887326717376709
    10. '```' → logprob: -8.137327194213867

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37473544478416443
    2. ')' → logprob: -1.2497354745864868
    3. '(input' → logprob: -4.124735355377197
    4. '(int' → logprob: -5.999735355377197
    5. 'input' → logprob: -6.499735355377197
    6. '```' → logprob: -6.624735355377197
    7. '`' → logprob: -6.999735355377197
    8. '(str' → logprob: -7.249735355377197
    9. '(n' → logprob: -7.249735355377197
    10. '`)' → logprob: -7.874735355377197

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029771320521831512
    2. ' input' → logprob: -3.529771327972412
    3. '(input' → logprob: -11.154770851135254
    4. ')' → logprob: -12.029770851135254
    5. '=input' → logprob: -15.404770851135254
    6. ',input' → logprob: -15.529770851135254
    7. ' ' → logprob: -16.90477180480957
    8. '	input' → logprob: -17.27977180480957
    9. ' )' → logprob: -17.77977180480957
    10. '[input' → logprob: -18.52977180480957

Token 16: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7392680644989014
    2. '().' → logprob: -0.8642680644989014
    3. '()' → logprob: -2.6142680644989014
    4. ')' → logprob: -4.1142683029174805
    5. '(' → logprob: -4.9892683029174805
    6. '('' → logprob: -6.1142683029174805
    7. '.readline' → logprob: -7.1142683029174805
    8. '`()' → logprob: -8.36426830291748
    9. '());' → logprob: -8.86426830291748
    10. '();)' → logprob: -8.86426830291748

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007593614282086492
    2. 'strip' → logprob: -7.250759124755859
    3. 'read' → logprob: -10.25075912475586
    4. ')' → logprob: -12.12575912475586
    5. ' split' → logprob: -12.25075912475586
    6. 'rstrip' → logprob: -13.00075912475586
    7. '(split' → logprob: -13.75075912475586
    8. 'spl' → logprob: -16.37575912475586
    9. '```' → logprob: -16.50075912475586
    10. '_split' → logprob: -16.62575912475586

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014217570424079895
    2. '))' → logprob: -4.264217376708984
    3. '())' → logprob: -10.389217376708984
    4. '()' → logprob: -12.014217376708984
    5. '),' → logprob: -12.389217376708984
    6. '(' → logprob: -12.889217376708984
    7. ')))' → logprob: -13.139217376708984
    8. '`)' → logprob: -13.264217376708984
    9. ')`' → logprob: -13.264217376708984
    10. '```' → logprob: -13.764217376708984

Token 19: 'p' (ID: 79)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8338931202888489
    2. 'arr' → logprob: -1.458893060684204
    3. 'data' → logprob: -2.208893060684204
    4. 's' → logprob: -2.333893060684204
    5. '
' → logprob: -3.583893060684204
    6. '\' → logprob: -4.583893299102783
    7. '\n' → logprob: -4.708893299102783
    8. 'result' → logprob: -4.958893299102783
    9. 'dp' → logprob: -5.333893299102783
    10. 'array' → logprob: -5.333893299102783

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5544079542160034
    2. '=' → logprob: -1.0544079542160034
    3. '[' → logprob: -3.804408073425293
    4. '[:]' → logprob: -4.054408073425293
    5. 'refix' → logprob: -4.429408073425293
    6. '_' → logprob: -4.554408073425293
    7. ' ' → logprob: -5.929408073425293
    8. ',' → logprob: -6.054408073425293
    9. 'r' → logprob: -6.429408073425293
    10. 's' → logprob: -7.054408073425293

Token 21: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20590129494667053
    2. 'list' → logprob: -1.7059012651443481
    3. ' [' → logprob: -5.580901145935059
    4. '[list' → logprob: -7.705901145935059
    5. '[' → logprob: -8.455901145935059
    6. ' []' → logprob: -11.205901145935059
    7. '[]' → logprob: -11.330901145935059
    8. '[int' → logprob: -12.080901145935059
    9. '[p' → logprob: -12.455901145935059
    10. ' sorted' → logprob: -12.830901145935059

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4304420053958893
    2. '(is' → logprob: -1.055441975593567
    3. '(range' → logprob: -7.055441856384277
    4. '(p' → logprob: -7.555441856384277
    5. '(.' → logprob: -9.055441856384277
    6. '(s' → logprob: -10.430441856384277
    7. '()' → logprob: -11.430441856384277
    8. '(
' → logprob: -11.555441856384277
    9. '(map' → logprob: -11.555441856384277
    10. '((' → logprob: -11.680441856384277

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0046653226017951965
    2. '(' → logprob: -5.504665374755859
    3. 'int' → logprob: -8.00466537475586
    4. '(input' → logprob: -9.25466537475586
    5. '(lambda' → logprob: -10.00466537475586
    6. '[int' → logprob: -10.25466537475586
    7. ')' → logprob: -10.62966537475586
    8. '<int' → logprob: -10.75466537475586
    9. '(str' → logprob: -11.62966537475586
    10. '=int' → logprob: -12.37966537475586

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08768032491207123
    2. ',input' → logprob: -2.8376803398132324
    3. ',' → logprob: -4.212680339813232
    4. '(' → logprob: -4.587680339813232
    5. ')' → logprob: -9.337679862976074
    6. '=input' → logprob: -9.337679862976074
    7. 'input' → logprob: -9.837679862976074
    8. '(int' → logprob: -10.212679862976074
    9. '```' → logprob: -10.837679862976074
    10. '),' → logprob: -10.962679862976074

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061970822513103485
    2. ' input' → logprob: -2.8119707107543945
    3. '(input' → logprob: -13.186970710754395
    4. ',input' → logprob: -14.561970710754395
    5. ' ' → logprob: -14.936970710754395
    6. '=input' → logprob: -15.436970710754395
    7. ')' → logprob: -15.811970710754395
    8. '	input' → logprob: -16.68697166442871
    9. 'list' → logprob: -17.56197166442871
    10. '[input' → logprob: -18.06197166442871

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00013738969573751092
    2. '()' → logprob: -9.000137329101562
    3. '())' → logprob: -12.250137329101562
    4. ')' → logprob: -13.375137329101562
    5. '()).' → logprob: -13.625137329101562
    6. '()))' → logprob: -13.625137329101562
    7. '().__' → logprob: -13.750137329101562
    8. '()[' → logprob: -14.500137329101562
    9. '(),' → logprob: -14.625137329101562
    10. ' ().' → logprob: -14.875137329101562

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.9795445849886164e-05
    2. 'strip' → logprob: -9.875060081481934
    3. 'read' → logprob: -12.500060081481934
    4. 'rstrip' → logprob: -12.875060081481934
    5. ' split' → logprob: -13.625060081481934
    6. '(split' → logprob: -14.875060081481934
    7. 'spl' → logprob: -15.750060081481934
    8. ')' → logprob: -16.000059127807617
    9. ' readline' → logprob: -16.750059127807617
    10. 'plit' → logprob: -16.750059127807617

Token 28: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03073020465672016
    2. '()))' → logprob: -4.155730247497559
    3. ')' → logprob: -4.280730247497559
    4. '())' → logprob: -7.905730247497559
    5. '(' → logprob: -8.530730247497559
    6. '()' → logprob: -9.030730247497559
    7. '),' → logprob: -10.780730247497559
    8. '(p' → logprob: -11.405730247497559
    9. ''))' → logprob: -11.530730247497559
    10. ')))' → logprob: -11.655730247497559

Token 29: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8079971075057983
    2. ')
' → logprob: -1.8079971075057983
    3. 'acc' → logprob: -2.057997226715088
    4. 'p' → logprob: -3.057997226715088
    5. 's' → logprob: -3.182997226715088
    6. 'prefix' → logprob: -3.307997226715088
    7. 'c' → logprob: -3.807997226715088
    8. 'dp' → logprob: -4.057997226715088
    9. 'a' → logprob: -4.432997226715088
    10. 'd' → logprob: -4.557997226715088

Token 30: ' Calcul' (ID: 57243)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.2002413272857666
    2. 'w' → logprob: -1.8252413272857666
    3. ' acc' → logprob: -1.9502413272857666
    4. 'prefix' → logprob: -2.5752413272857666
    5. 'dp' → logprob: -2.7002413272857666
    6. 's' → logprob: -2.7002413272857666
    7. 'a' → logprob: -3.2002413272857666
    8. 'c' → logprob: -3.4502413272857666
    9. ' w' → logprob: -4.3252410888671875
    10. 'q' → logprob: -4.4502410888671875

Token 31: ' des' (ID: 731)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.03822119161486626
    2. 'ating' → logprob: -3.2882211208343506
    3. 'ator' → logprob: -8.78822135925293
    4. 'ated' → logprob: -11.66322135925293
    5. 'uate' → logprob: -12.28822135925293
    6. 'ation' → logprob: -13.28822135925293
    7. '#' → logprob: -13.28822135925293
    8. 'ATE' → logprob: -13.53822135925293
    9. 'e' → logprob: -13.78822135925293
    10. 'us' → logprob: -13.78822135925293

Token 32: ' sommes' (ID: 32024)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.6097097396850586
    2. ' scores' → logprob: -1.7347097396850586
    3. ' la' → logprob: -1.8597097396850586
    4. 's' → logprob: -1.9847097396850586
    5. 'l' → logprob: -2.4847097396850586
    6. ' p' → logprob: -2.4847097396850586
    7. 'acc' → logprob: -3.1097097396850586
    8. 'scores' → logprob: -3.8597097396850586
    9. 'p' → logprob: -4.234709739685059
    10. ' prefix' → logprob: -4.234709739685059

Token 33: ' gl' (ID: 2000)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.2458910942077637
    2. '_prefix' → logprob: -1.4958910942077637
    3. '_' → logprob: -2.1208910942077637
    4. 'p' → logprob: -2.1208910942077637
    5. 'part' → logprob: -2.9958910942077637
    6. '_acc' → logprob: -3.2458910942077637
    7. 'acc' → logprob: -3.4958910942077637
    8. 'cum' → logprob: -3.8708910942077637
    9. '_part' → logprob: -4.120891094207764
    10. 'c' → logprob: -4.245891094207764

Token 34: 'iss' (ID: 1009)
  Prédit: 'obal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obal' → logprob: -0.04687599837779999
    2. 'ob' → logprob: -3.1718759536743164
    3. 'ac' → logprob: -7.296875953674316
    4. 'iss' → logprob: -7.421875953674316
    5. 'obals' → logprob: -7.546875953674316
    6. 'ocale' → logprob: -7.796875953674316
    7. '```' → logprob: -7.921875953674316
    8. 'u' → logprob: -8.421875953674316
    9. '=' → logprob: -8.921875953674316
    10. 'a' → logprob: -9.421875953674316

Token 35: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -1.1160349458805285e-05
    2. 'ante' → logprob: -12.250011444091797
    3. 'ées' → logprob: -12.500011444091797
    4. 'ANTES' → logprob: -13.875011444091797
    5. 'es' → logprob: -14.125011444091797
    6. 'ant' → logprob: -15.250011444091797
    7. 's' → logprob: -15.750011444091797
    8. 't' → logprob: -16.250011444091797
    9. 'ières' → logprob: -16.500011444091797
    10. '#' → logprob: -16.500011444091797

Token 36: ' optim' (ID: 9367)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18188485503196716
    2. '_' → logprob: -2.306884765625
    3. ')' → logprob: -4.181884765625
    4. '(' → logprob: -4.806884765625
    5. 'w' → logprob: -4.931884765625
    6. ' s' → logprob: -5.431884765625
    7. 'm' → logprob: -5.681884765625
    8. 'p' → logprob: -5.806884765625
    9. ':' → logprob: -6.056884765625
    10. ',' → logprob: -6.056884765625

Token 37: 'isé' (ID: 30065)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.48693448305130005
    2. 'ales' → logprob: -1.4869344234466553
    3. 'ées' → logprob: -2.7369344234466553
    4. 'e' → logprob: -2.8619344234466553
    5. 'um' → logprob: -4.986934661865234
    6. 'ée' → logprob: -5.111934661865234
    7. 'al' → logprob: -5.486934661865234
    8. 'é' → logprob: -5.611934661865234
    9. 't' → logprob: -6.111934661865234
    10. 'aux' → logprob: -6.236934661865234

Token 38: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1836349964141846
    2. ')' → logprob: -1.6836349964141846
    3. 'prefix' → logprob: -2.0586349964141846
    4. 'window' → logprob: -3.3086349964141846
    5. 'dp' → logprob: -3.4336349964141846
    6. ' s' → logprob: -3.5586349964141846
    7. 'cum' → logprob: -3.6836349964141846
    8. ':' → logprob: -3.6836349964141846
    9. ' prefix' → logprob: -3.9336349964141846
    10. 'w' → logprob: -3.9336349964141846

Token 39: ' l' (ID: 305)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1845727115869522
    2. 'l' → logprob: -1.934572696685791
    3. 'p' → logprob: -5.184572696685791
    4. 'list' → logprob: -5.434572696685791
    5. 'using' → logprob: -6.059572696685791
    6. ' k' → logprob: -6.434572696685791
    7. 'a' → logprob: -6.559572696685791
    8. '1' → logprob: -6.559572696685791
    9. 'length' → logprob: -6.684572696685791
    10. 'len' → logprob: -6.809572696685791

Token 40: ''aide' (ID: 75684)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023428436368703842
    2. 'l' → logprob: -4.398428440093994
    3. 'a' → logprob: -5.648428440093994
    4. 'n' → logprob: -6.023428440093994
    5. ''aide' → logprob: -6.023428440093994
    6. 'p' → logprob: -7.148428440093994
    7. 'length' → logprob: -7.398428440093994
    8. 'is' → logprob: -8.398427963256836
    9. 'len' → logprob: -9.023427963256836
    10. 'size' → logprob: -9.148427963256836

Token 41: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9889863729476929
    2. 'de' → logprob: -1.1139863729476929
    3. 'd' → logprob: -1.6139863729476929
    4. ' d' → logprob: -3.4889864921569824
    5. '(acc' → logprob: -3.7389864921569824
    6. ')' → logprob: -4.613986492156982
    7. '(' → logprob: -4.738986492156982
    8. 'des' → logprob: -4.863986492156982
    9. ' of' → logprob: -5.238986492156982
    10. 'acc' → logprob: -5.363986492156982

Token 42: ' itertools' (ID: 103178)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.018392113968729973
    2. ' accumulate' → logprob: -4.018392086029053
    3. '(acc' → logprob: -9.518392562866211
    4. 'is' → logprob: -9.893392562866211
    5. 'list' → logprob: -10.268392562866211
    6. 'ac' → logprob: -11.018392562866211
    7. 'it' → logprob: -11.018392562866211
    8. '`' → logprob: -11.393392562866211
    9. '	acc' → logprob: -11.643392562866211
    10. '```' → logprob: -12.018392562866211

Token 43: '.acc' (ID: 70239)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7992363572120667
    2. 's' → logprob: -0.7992363572120667
    3. '_' → logprob: -3.424236297607422
    4. 'p' → logprob: -4.049236297607422
    5. '(' → logprob: -4.299236297607422
    6. 'w' → logprob: -5.299236297607422
    7. 'prefix' → logprob: -5.299236297607422
    8. '_s' → logprob: -5.549236297607422
    9. ')
' → logprob: -5.924236297607422
    10. 'acc' → logprob: -6.049236297607422

Token 44: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -3.333223139634356e-05
    2. 'um' → logprob: -10.750033378601074
    3. '```' → logprob: -12.375033378601074
    4. 'om' → logprob: -12.875033378601074
    5. 'umul' → logprob: -13.375033378601074
    6. 'ulate' → logprob: -13.500033378601074
    7. 'cum' → logprob: -14.875033378601074
    8. 'uminate' → logprob: -14.875033378601074
    9. 'umulative' → logprob: -15.875033378601074
    10. '`' → logprob: -16.000032424926758

Token 45: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4569025039672852
    2. 'w' → logprob: -1.5819025039672852
    3. ')' → logprob: -1.8319025039672852
    4. '(' → logprob: -2.206902503967285
    5. 'p' → logprob: -2.331902503967285
    6. 'prefix' → logprob: -2.831902503967285
    7. 'window' → logprob: -2.831902503967285
    8. '(
' → logprob: -3.831902503967285
    9. 'windows' → logprob: -3.831902503967285
    10. ')
' → logprob: -4.956902503967285

Token 46: ' compréhension' (ID: 142333)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04877959564328194
    2. ' is' → logprob: -3.2987794876098633
    3. 'list' → logprob: -4.923779487609863
    4. ' list' → logprob: -6.298779487609863
    5. 'from' → logprob: -7.173779487609863
    6. 'p' → logprob: -8.798779487609863
    7. ')' → logprob: -9.173779487609863
    8. '#' → logprob: -9.173779487609863
    9. ' itertools' → logprob: -9.548779487609863
    10. ''is' → logprob: -10.298779487609863

Token 47: ' de' (ID: 334)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.6707388162612915
    2. 'p' → logprob: -1.1707388162612915
    3. '[' → logprob: -2.045738697052002
    4. 's' → logprob: -3.295738697052002
    5. '[
' → logprob: -4.795738697052002
    6. '[s' → logprob: -6.670738697052002
    7. '(p' → logprob: -7.295738697052002
    8. '[-' → logprob: -7.795738697052002
    9. '[(' → logprob: -7.920738697052002
    10. '[i' → logprob: -8.54573917388916

Token 48: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.1465371996164322
    2. 'list' → logprob: -2.7715373039245605
    3. 'p' → logprob: -3.1465373039245605
    4. 'lists' → logprob: -4.2715373039245605
    5. '[p' → logprob: -5.0215373039245605
    6. '[' → logprob: -5.1465373039245605
    7. 's' → logprob: -6.6465373039245605
    8. ' liste' → logprob: -7.1465373039245605
    9. '```' → logprob: -7.3965373039245605
    10. '[n' → logprob: -7.8965373039245605

Token 49: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6539771556854248
    2. 'w' → logprob: -1.7789771556854248
    3. '[' → logprob: -1.9039771556854248
    4. ')
' → logprob: -2.028977155685425
    5. 'windows' → logprob: -2.403977155685425
    6. ')' → logprob: -2.653977155685425
    7. 'p' → logprob: -3.153977155685425
    8. 'window' → logprob: -3.528977155685425
    9. 'm' → logprob: -3.653977155685425
    10. 'sl' → logprob: -4.028977394104004

Token 50: 'prefix' (ID: 26155)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7694985866546631
    2. 'w' → logprob: -1.019498586654663
    3. '[' → logprob: -3.519498586654663
    4. 'windows' → logprob: -3.519498586654663
    5. 'q' → logprob: -3.644498586654663
    6. 'window' → logprob: -4.144498825073242
    7. 'prefix' → logprob: -4.644498825073242
    8. 'sl' → logprob: -4.894498825073242
    9. ' w' → logprob: -5.144498825073242
    10. 'm' → logprob: -5.144498825073242

Token 51: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1562877744436264
    2. 's' → logprob: -2.156287670135498
    3. '_sum' → logprob: -3.656287670135498
    4. ' =' → logprob: -6.781287670135498
    5. '_' → logprob: -7.031287670135498
    6. '=' → logprob: -7.281287670135498
    7. 'sum' → logprob: -8.281288146972656
    8. '=_' → logprob: -9.781288146972656
    9. '=[]' → logprob: -10.656288146972656
    10. '=sum' → logprob: -11.156288146972656

Token 52: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.033663105219602585
    2. 'um' → logprob: -3.408663034439087
    3. ' =' → logprob: -11.908662796020508
    4. '=' → logprob: -12.783662796020508
    5. 'u' → logprob: -13.033662796020508
    6. 'm' → logprob: -13.283662796020508
    7. '`' → logprob: -14.658662796020508
    8. '_' → logprob: -15.033662796020508
    9. '_sum' → logprob: -15.033662796020508
    10. 'umsum' → logprob: -15.158662796020508

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804550692439079
    2. '=' → logprob: -3.2880454063415527
    3. '[' → logprob: -13.413045883178711
    4. ' =[' → logprob: -13.913045883178711
    5. 's' → logprob: -14.538045883178711
    6. '(' → logprob: -14.913045883178711
    7. '=[' → logprob: -15.163045883178711
    8. '=p' → logprob: -15.538045883178711
    9. '＝' → logprob: -16.16304588317871
    10. ',' → logprob: -16.66304588317871

Token 54: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.39754244685173035
    2. '[' → logprob: -1.5225424766540527
    3. 'acc' → logprob: -2.6475424766540527
    4. ' list' → logprob: -3.6475424766540527
    5. ' [' → logprob: -4.522542476654053
    6. '[list' → logprob: -6.897542476654053
    7. ' accumulate' → logprob: -7.022542476654053
    8. '(acc' → logprob: -9.147541999816895
    9. '(list' → logprob: -10.647541999816895
    10. '[-' → logprob: -10.647541999816895

Token 55: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -2.165027217415627e-05
    2. '(ac' → logprob: -11.375021934509277
    3. '(' → logprob: -11.875021934509277
    4. '(is' → logprob: -12.750021934509277
    5. 'acc' → logprob: -15.875021934509277
    6. '(it' → logprob: -16.25002098083496
    7. '	acc' → logprob: -16.50002098083496
    8. '.acc' → logprob: -17.87502098083496
    9. ' accumulate' → logprob: -18.25002098083496
    10. '(
' → logprob: -18.62502098083496

Token 56: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -3.583550642360933e-05
    2. 'um' → logprob: -10.375036239624023
    3. 'umul' → logprob: -13.875036239624023
    4. 'ulate' → logprob: -14.000036239624023
    5. '```' → logprob: -14.250036239624023
    6. 'om' → logprob: -14.750036239624023
    7. 'umut' → logprob: -15.250036239624023
    8. '(p' → logprob: -15.375036239624023
    9. 'umu' → logprob: -15.625036239624023
    10. 'umulative' → logprob: -15.750036239624023

Token 57: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00017362393555231392
    2. 'p' → logprob: -9.000173568725586
    3. '([' → logprob: -10.875173568725586
    4. '(' → logprob: -11.000173568725586
    5. ')(' → logprob: -11.750173568725586
    6. ')' → logprob: -13.000173568725586
    7. '(lambda' → logprob: -13.125173568725586
    8. '((' → logprob: -14.250173568725586
    9. '(i' → logprob: -14.750173568725586
    10. ')p' → logprob: -15.375173568725586

Token 58: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11779647320508957
    2. ',' → logprob: -2.2427964210510254
    3. '[' → logprob: -6.242796421051025
    4. '))
' → logprob: -6.992796421051025
    5. ' ))' → logprob: -7.867796421051025
    6. ',p' → logprob: -8.117796897888184
    7. ',k' → logprob: -8.492796897888184
    8. '[i' → logprob: -8.742796897888184
    9. '))-' → logprob: -8.742796897888184
    10. '[:-' → logprob: -8.867796897888184

Token 59: ' initial' (ID: 4871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.02146804891526699
    2. 'initial' → logprob: -4.521468162536621
    3. ' lambda' → logprob: -4.646468162536621
    4. '(lambda' → logprob: -8.021468162536621
    5. ' initial' → logprob: -8.646468162536621
    6. ' ' → logprob: -9.896468162536621
    7. 'start' → logprob: -9.896468162536621
    8. '=lambda' → logprob: -10.271468162536621
    9. ')' → logprob: -10.521468162536621
    10. '   ' → logprob: -10.771468162536621

Token 60: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001344042830169201
    2. '0' → logprob: -6.626344203948975
    3. 's' → logprob: -11.126343727111816
    4. '(' → logprob: -14.126343727111816
    5. ' =' → logprob: -14.751343727111816
    6. ')' → logprob: -14.751343727111816
    7. ',' → logprob: -15.126343727111816
    8. 'p' → logprob: -15.376343727111816
    9. 'n' → logprob: -15.376343727111816
    10. ' ' → logprob: -16.001344680786133

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009152670972980559
    2. ' ' → logprob: -7.000915050506592
    3. '=' → logprob: -13.62591552734375
    4. ')' → logprob: -14.00091552734375
    5. 'p' → logprob: -15.12591552734375
    6. 'k' → logprob: -15.25091552734375
    7. 'n' → logprob: -15.37591552734375
    8. '1' → logprob: -16.00091552734375
    9. '[' → logprob: -16.12591552734375
    10. 'a' → logprob: -16.50091552734375

Token 62: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020568605395965278
    2. '))
' → logprob: -8.875205993652344
    3. '))

' → logprob: -10.750205993652344
    4. ' ))' → logprob: -10.750205993652344
    5. '))[' → logprob: -11.375205993652344
    6. '))
' → logprob: -12.375205993652344
    7. ')' → logprob: -12.500205993652344
    8. ')))' → logprob: -13.625205993652344
    9. '))

' → logprob: -14.250205993652344
    10. '));' → logprob: -15.000205993652344

Token 63: 'window' (ID: 10963)
  Prédit: 'windows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'windows' → logprob: -1.4022387266159058
    2. '[k' → logprob: -2.0272388458251953
    3. ')' → logprob: -2.1522388458251953
    4. 's' → logprob: -2.2772388458251953
    5. 'k' → logprob: -2.4022388458251953
    6. 'window' → logprob: -2.6522388458251953
    7. '[' → logprob: -3.2772388458251953
    8. 'sl' → logprob: -3.4022388458251953
    9. '[
' → logprob: -3.9022388458251953
    10. ')
' → logprob: -3.9022388458251953

Token 64: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.03812296688556671
    2. '_sizes' → logprob: -4.03812313079834
    3. 's' → logprob: -4.16312313079834
    4. '_lengths' → logprob: -6.41312313079834
    5. '_sum' → logprob: -6.53812313079834
    6. '_' → logprob: -7.28812313079834
    7. '_size' → logprob: -9.16312313079834
    8. '_counts' → logprob: -9.53812313079834
    9. '_len' → logprob: -9.53812313079834
    10. ' =' → logprob: -10.28812313079834

Token 65: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.002365063177421689
    2. 'izes' → logprob: -6.5023651123046875
    3. '=' → logprob: -7.7523651123046875
    4. 'um' → logprob: -8.502365112304688
    5. 's' → logprob: -9.127365112304688
    6. 'ize' → logprob: -10.127365112304688
    7. '_' → logprob: -10.752365112304688
    8. ' =' → logprob: -10.752365112304688
    9. 'cores' → logprob: -11.877365112304688
    10. '_sizes' → logprob: -11.877365112304688

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011052774265408516
    2. '=' → logprob: -4.51105260848999
    3. ' =[' → logprob: -12.886053085327148
    4. '[' → logprob: -13.761053085327148
    5. '=[' → logprob: -13.886053085327148
    6. '＝' → logprob: -15.886053085327148
    7. ' [' → logprob: -16.76105308532715
    8. ' ' → logprob: -16.88605308532715
    9. ' ' → logprob: -17.01105308532715
    10. '=[]' → logprob: -17.38605308532715

Token 67: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.33086031675338745
    2. ' [' → logprob: -1.3308603763580322
    3. '[' → logprob: -4.205860137939453
    4. '[list' → logprob: -6.080860137939453
    5. '[i' → logprob: -10.080860137939453
    6. '[len' → logprob: -10.455860137939453
    7. ' ' → logprob: -10.705860137939453
    8. '[min' → logprob: -10.830860137939453
    9. '[start' → logprob: -10.955860137939453
    10. '[n' → logprob: -11.205860137939453

Token 68: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.03806386888027191
    2. ' prefix' → logprob: -3.2880637645721436
    3. '(prefix' → logprob: -10.788064002990723
    4. '   ' → logprob: -14.663064002990723
    5. ' ' → logprob: -15.163064002990723
    6. 'p' → logprob: -15.538064002990723
    7. ' (' → logprob: -15.788064002990723
    8. '_prefix' → logprob: -16.038063049316406
    9. 'x' → logprob: -16.163063049316406
    10. '-prefix' → logprob: -16.288063049316406

Token 69: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.704273118884885e-07
    2. '_sum' → logprob: -15.000000953674316
    3. 'prefix' → logprob: -16.625
    4. 'window' → logprob: -16.75
    5. 's' → logprob: -17.125
    6. '[i' → logprob: -18.0
    7. 'sum' → logprob: -18.25
    8. '[' → logprob: -18.375
    9. 'summ' → logprob: -18.875
    10. '[_' → logprob: -19.375

Token 70: 'ums' (ID: 6162)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.40702927112579346
    2. 'ums' → logprob: -1.2820292711257935
    3. 's' → logprob: -2.907029151916504
    4. '[' → logprob: -6.407029151916504
    5. '[-' → logprob: -9.032029151916504
    6. 'ms' → logprob: -9.157029151916504
    7. '_' → logprob: -9.407029151916504
    8. '[i' → logprob: -9.532029151916504
    9. '_ms' → logprob: -9.907029151916504
    10. 'u' → logprob: -10.782029151916504

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.310693111619912e-05
    2. '[j' → logprob: -10.250042915344238
    3. '[k' → logprob: -12.625042915344238
    4. '[' → logprob: -13.250042915344238
    5. '[n' → logprob: -13.375042915344238
    6. '[idx' → logprob: -14.750042915344238
    7. 'i' → logprob: -15.250042915344238
    8. '[x' → logprob: -15.375042915344238
    9. '[s' → logprob: -16.125043869018555
    10. '[ii' → logprob: -17.375043869018555

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16052743792533875
    2. '+k' → logprob: -2.160527467727661
    3. ' +' → logprob: -3.410527467727661
    4. '+n' → logprob: -11.410527229309082
    5. '+i' → logprob: -12.410527229309082
    6. 'k' → logprob: -14.535527229309082
    7. '＋' → logprob: -14.785527229309082
    8. '+j' → logprob: -15.160527229309082
    9. ' k' → logprob: -15.660527229309082
    10. ' ' → logprob: -15.785527229309082

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001645430107600987
    2. ' k' → logprob: -6.501645565032959
    3. '1' → logprob: -8.8766450881958
    4. ' ' → logprob: -13.5016450881958
    5. '2' → logprob: -14.6266450881958
    6. '   ' → logprob: -14.6266450881958
    7. '	k' → logprob: -15.1266450881958
    8. '3' → logprob: -16.001646041870117
    9. '{k' → logprob: -16.126646041870117
    10. '(k' → logprob: -16.564146041870117

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030649378895759583
    2. ' -' → logprob: -6.50306510925293
    3. ')' → logprob: -7.25306510925293
    4. ']-' → logprob: -7.87806510925293
    5. ' ]' → logprob: -8.25306510925293
    6. '-' → logprob: -8.75306510925293
    7. ')]' → logprob: -11.00306510925293
    8. '[' → logprob: -11.37806510925293
    9. ' ' → logprob: -12.12806510925293
    10. '])' → logprob: -12.37806510925293

Token 75: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014951854944229
    2. '-' → logprob: -1.7014951705932617
    3. '-prefix' → logprob: -9.576495170593262
    4. '-p' → logprob: -11.451495170593262
    5. ' ' → logprob: -13.951495170593262
    6. ' ' → logprob: -14.451495170593262
    7. '-i' → logprob: -16.201496124267578
    8. ',' → logprob: -16.576496124267578
    9. ' –' → logprob: -16.701496124267578
    10. ')' → logprob: -16.701496124267578

Token 76: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5759403705596924
    2. ' prefix' → logprob: -0.8259403705596924
    3. '(prefix' → logprob: -14.575940132141113
    4. '_prefix' → logprob: -15.075940132141113
    5. ' ' → logprob: -16.32594108581543
    6. ' ' → logprob: -17.57594108581543
    7. ' prefixes' → logprob: -17.57594108581543
    8. 'refix' → logprob: -17.70094108581543
    9. '.prefix' → logprob: -17.82594108581543
    10. 'p' → logprob: -18.82594108581543

Token 77: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.0
    3. '_sum' → logprob: -16.875
    4. 'prefix' → logprob: -17.125
    5. 'x' → logprob: -18.25
    6. 'refix' → logprob: -18.875
    7. '```' → logprob: -19.5
    8. '_f' → logprob: -19.5
    9. 'sum' → logprob: -19.625
    10. '_p' → logprob: -19.75

Token 78: 'ums' (ID: 6162)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4978685975074768
    2. 's' → logprob: -1.372868537902832
    3. 'ums' → logprob: -2.247868537902832
    4. 'ms' → logprob: -4.372868537902832
    5. 'fs' → logprob: -4.997868537902832
    6. 'prefix' → logprob: -5.247868537902832
    7. 'f' → logprob: -5.872868537902832
    8. 'm' → logprob: -6.997868537902832
    9. '_f' → logprob: -7.622868537902832
    10. 'u' → logprob: -7.747868537902832

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.817902173381299e-05
    2. '[' → logprob: -9.37509822845459
    3. 'i' → logprob: -11.25009822845459
    4. '[
' → logprob: -15.87509822845459
    5. ' i' → logprob: -16.875097274780273
    6. '(i' → logprob: -17.875097274780273
    7. ' [' → logprob: -18.125097274780273
    8. '```' → logprob: -18.250097274780273
    9. '[I' → logprob: -18.375097274780273
    10. '[...]' → logprob: -18.500097274780273

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020505456253886223
    2. ' for' → logprob: -4.270505428314209
    3. ')' → logprob: -5.270505428314209
    4. 'for' → logprob: -7.145505428314209
    5. ' ]' → logprob: -8.020505905151367
    6. ' ' → logprob: -10.520505905151367
    7. ')]' → logprob: -10.520505905151367
    8. '])' → logprob: -12.020505905151367
    9. ' ' → logprob: -14.145505905151367
    10. ']
' → logprob: -14.270505905151367

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010250375606119633
    2. 'for' → logprob: -4.885250568389893
    3. ']' → logprob: -6.760250568389893
    4. ')' → logprob: -7.010250568389893
    5. ' ' → logprob: -7.760250568389893
    6. ' ]' → logprob: -8.885250091552734
    7. '	for' → logprob: -12.135250091552734
    8. ' )' → logprob: -12.760250091552734
    9. ' ' → logprob: -12.885250091552734
    10. '   ' → logprob: -13.760250091552734

Token 82: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5088872313499451
    2. ' i' → logprob: -1.0088872909545898
    3. 'range' → logprob: -4.00888729095459
    4. 'i' → logprob: -4.13388729095459
    5. ' in' → logprob: -10.50888729095459
    6. '(range' → logprob: -12.38388729095459
    7. '	range' → logprob: -13.25888729095459
    8. ' ' → logprob: -13.88388729095459
    9. ' xrange' → logprob: -14.25888729095459
    10. '_range' → logprob: -14.50888729095459

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005464386660605669
    2. 'in' → logprob: -5.255464553833008
    3. ' range' → logprob: -8.880464553833008
    4. 'range' → logprob: -9.755464553833008
    5. ' ' → logprob: -11.255464553833008
    6. ' n' → logprob: -11.505464553833008
    7. '<|end|>' → logprob: -12.630464553833008
    8. ' i' → logprob: -13.380464553833008
    9. '(range' → logprob: -13.505464553833008
    10. ')' → logprob: -14.130464553833008

Token 84: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889121770858765
    2. ' range' → logprob: -2.5788912773132324
    3. 'is' → logprob: -13.703890800476074
    4. '(range' → logprob: -15.203890800476074
    5. '	range' → logprob: -16.82889175415039
    6. ' ' → logprob: -18.20389175415039
    7. ' is' → logprob: -18.20389175415039
    8. 'Range' → logprob: -20.07889175415039
    9. ' xrange' → logprob: -20.45389175415039
    10. '```' → logprob: -21.07889175415039

Token 85: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08266305178403854
    2. '(' → logprob: -2.582663059234619
    3. '(len' → logprob: -5.582663059234619
    4. '(
' → logprob: -12.957662582397461
    5. ' (' → logprob: -14.707662582397461
    6. ' n' → logprob: -15.832662582397461
    7. '((' → logprob: -16.33266258239746
    8. ')n' → logprob: -16.45766258239746
    9. '(length' → logprob: -16.45766258239746
    10. '(s' → logprob: -16.70766258239746

Token 86: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.040490224957466125
    2. '-' → logprob: -3.54049015045166
    3. '-k' → logprob: -4.54049015045166
    4. ' ' → logprob: -11.41549015045166
    5. '-n' → logprob: -13.04049015045166
    6. '+' → logprob: -14.54049015045166
    7. ')' → logprob: -16.540491104125977
    8. '-K' → logprob: -16.540491104125977
    9. ' +' → logprob: -16.665491104125977
    10. '-m' → logprob: -16.915491104125977

Token 87: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3132627606391907
    2. ' k' → logprob: -1.313262701034546
    3. '	k' → logprob: -14.063262939453125
    4. ' ' → logprob: -15.563262939453125
    5. ' к' → logprob: -16.438262939453125
    6. '(k' → logprob: -18.313262939453125
    7. '1' → logprob: -18.313262939453125
    8. ' (' → logprob: -19.313262939453125
    9. 'к' → logprob: -19.313262939453125
    10. '_k' → logprob: -19.813262939453125

Token 88: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16194792091846466
    2. ' +' → logprob: -1.9119479656219482
    3. ')]' → logprob: -6.536947727203369
    4. ')' → logprob: -8.911948204040527
    5. ')])' → logprob: -9.161948204040527
    6. '1' → logprob: -11.161948204040527
    7. ' ' → logprob: -11.911948204040527
    8. ' )' → logprob: -11.911948204040527
    9. '])' → logprob: -13.786948204040527
    10. '+)' → logprob: -14.036948204040527

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. ')' → logprob: -17.001325607299805
    4. ' ' → logprob: -19.126325607299805
    5. '```' → logprob: -19.376325607299805
    6. '   ' → logprob: -19.751325607299805
    7. '１' → logprob: -20.001325607299805
    8. ' )' → logprob: -20.001325607299805
    9. '  ' → logprob: -20.251325607299805
    10. '2' → logprob: -20.876325607299805

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. ')' → logprob: -17.250017166137695
    4. '   ' → logprob: -18.187517166137695
    5. '```' → logprob: -18.312517166137695
    6. '１' → logprob: -18.437517166137695
    7. '  ' → logprob: -18.875017166137695
    8. '2' → logprob: -19.312517166137695
    9. '' → logprob: -19.437517166137695
    10. '0' → logprob: -19.437517166137695

Token 91: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.506661833962426e-05
    2. ']' → logprob: -9.62508487701416
    3. ')' → logprob: -11.62508487701416
    4. '])]' → logprob: -12.12508487701416
    5. ')])' → logprob: -12.87508487701416
    6. '])' → logprob: -13.50008487701416
    7. ' )' → logprob: -15.25008487701416
    8. '))' → logprob: -16.250085830688477
    9. ')],' → logprob: -16.500085830688477
    10. '')]' → logprob: -16.625085830688477

Token 92: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3332555592060089
    2. 'max' → logprob: -2.2082555294036865
    3. 'print' → logprob: -2.8332555294036865
    4. ']' → logprob: -2.9582555294036865
    5. ',' → logprob: -4.083255767822266
    6. '#' → logprob: -4.333255767822266
    7. 'min' → logprob: -4.708255767822266
    8. '.' → logprob: -5.083255767822266
    9. 'result' → logprob: -5.958255767822266
    10. '
' → logprob: -6.208255767822266

Token 93: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24580872058868408
    2. 'max' → logprob: -2.4958086013793945
    3. 'result' → logprob: -2.6208086013793945
    4. 'ans' → logprob: -3.7458086013793945
    5. 'count' → logprob: -4.2458086013793945
    6. 'm' → logprob: -4.7458086013793945
    7. 'answer' → logprob: -4.9958086013793945
    8. 'res' → logprob: -6.4958086013793945
    9. 'window' → logprob: -6.4958086013793945
    10. 'best' → logprob: -6.6208086013793945

Token 94: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.4997199773788452
    2. 'ichage' → logprob: -0.9997199773788452
    3. '#' → logprob: -4.624720096588135
    4. '_' → logprob: -5.624720096588135
    5. 'ich' → logprob: -6.124720096588135
    6. 'iche' → logprob: -6.249720096588135
    7. '(' → logprob: -6.999720096588135
    8. '[' → logprob: -6.999720096588135
    9. 'cher' → logprob: -7.374720096588135
    10. '**' → logprob: -7.499720096588135

Token 95: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11212145537137985
    2. 'print' → logprob: -2.862121343612671
    3. '(min' → logprob: -3.737121343612671
    4. '(
' → logprob: -4.11212158203125
    5. 'min' → logprob: -5.73712158203125
    6. '(max' → logprob: -6.36212158203125
    7. '(print' → logprob: -6.61212158203125
    8. '(sum' → logprob: -7.36212158203125
    9. '()' → logprob: -8.11212158203125
    10. 'sum' → logprob: -8.11212158203125

Token 96: ' calcul' (ID: 7559)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5334680080413818
    2. 'print' → logprob: -1.1584680080413818
    3. 'sum' → logprob: -2.408468008041382
    4. 'f' → logprob: -5.908468246459961
    5. 'min' → logprob: -6.158468246459961
    6. ''' → logprob: -6.783468246459961
    7. ' max' → logprob: -6.908468246459961
    8. ' sum' → logprob: -7.283468246459961
    9. 'len' → logprob: -7.533468246459961
    10. '"' → logprob: -7.783468246459961

Token 97: ' final' (ID: 1721)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.7311059832572937
    2. 'max' → logprob: -0.8561059832572937
    3. '(' → logprob: -3.3561060428619385
    4. 'print' → logprob: -3.9811060428619385
    5. '(
' → logprob: -4.106105804443359
    6. '(sum' → logprob: -4.606105804443359
    7. 'sum' → logprob: -5.481105804443359
    8. '(len' → logprob: -5.481105804443359
    9. 'window' → logprob: -6.981105804443359
    10. 's' → logprob: -6.981105804443359

Token 98: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08421428501605988
    2. 'max' → logprob: -2.584214210510254
    3. 'sum' → logprob: -5.459214210510254
    4. '(max' → logprob: -7.209214210510254
    5. '
' → logprob: -9.334214210510254
    6. '(sum' → logprob: -9.459214210510254
    7. '(' → logprob: -9.709214210510254
    8. 'for' → logprob: -10.334214210510254
    9. 'min' → logprob: -11.209214210510254
    10. '(
' → logprob: -11.709214210510254

Token 99: ' sans' (ID: 9828)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1204628050327301
    2. ' max' → logprob: -2.3704628944396973
    3. 'print' → logprob: -4.620462894439697
    4. 'sum' → logprob: -4.995462894439697
    5. ' sum' → logprob: -5.995462894439697
    6. ' print' → logprob: -8.120462417602539
    7. '(max' → logprob: -8.495462417602539
    8. 'len' → logprob: -8.620462417602539
    9. 'window' → logprob: -8.870462417602539
    10. ' len' → logprob: -9.995462417602539

Token 100: ' variable' (ID: 11076)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6618136763572693
    2. 'f' → logprob: -1.411813735961914
    3. 'sum' → logprob: -2.786813735961914
    4. 'print' → logprob: -3.161813735961914
    5. 'for' → logprob: -3.661813735961914
    6. 'additional' → logprob: -4.411813735961914
    7. 'inter' → logprob: -4.661813735961914
    8. 'exp' → logprob: -4.911813735961914
    9. 'max' → logprob: -5.036813735961914
    10. 'extra' → logprob: -5.036813735961914

Token 101: ' tempora' (ID: 117509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012308525037951767
    2. 'sum' → logprob: -9.625123023986816
    3. 'max' → logprob: -9.875123023986816
    4. '
' → logprob: -13.000123023986816
    5. ' print' → logprob: -14.000123023986816
    6. '(print' → logprob: -14.625123023986816
    7. '(sum' → logprob: -14.750123023986816
    8. 'for' → logprob: -15.000123023986816
    9. '```' → logprob: -15.125123023986816
    10. '(max' → logprob: -15.125123023986816

Token 102: 'ire' (ID: 594)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018293926259502769
    2. 'int' → logprob: -7.251829624176025
    3. '(print' → logprob: -8.251829147338867
    4. ' print' → logprob: -8.376829147338867
    5. '(' → logprob: -8.751829147338867
    6. 'for' → logprob: -8.876829147338867
    7. '
' → logprob: -9.376829147338867
    8. 'r' → logprob: -10.126829147338867
    9. 's' → logprob: -10.126829147338867
    10. 'sum' → logprob: -11.001829147338867

Token 103: ' inutile' (ID: 157748)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.947715832618997e-05
    2. 'max' → logprob: -9.375089645385742
    3. 'min' → logprob: -13.500089645385742
    4. 'sum' → logprob: -13.750089645385742
    5. '(print' → logprob: -14.250089645385742
    6. '
' → logprob: -14.750089645385742
    7. '```' → logprob: -15.000089645385742
    8. '(max' → logprob: -15.125089645385742
    9. ' print' → logprob: -15.375089645385742
    10. 'pr' → logprob: -15.750089645385742

Token 104: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0087516784551553e-05
    2. 'max' → logprob: -12.62501049041748
    3. '
' → logprob: -12.87501049041748
    4. 'for' → logprob: -13.25001049041748
    5. ' print' → logprob: -13.87501049041748
    6. 'result' → logprob: -14.75001049041748
    7. 'sum' → logprob: -14.75001049041748
    8. '```' → logprob: -15.50001049041748
    9. 'min' → logprob: -15.75001049041748
    10. 'import' → logprob: -17.125009536743164

Token 105: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4140441635390744e-05
    2. 'result' → logprob: -11.625014305114746
    3. 'max' → logprob: -12.500014305114746
    4. ' print' → logprob: -14.375014305114746
    5. 'for' → logprob: -15.500014305114746
    6. 'answer' → logprob: -15.500014305114746
    7. 'sum' → logprob: -15.875014305114746
    8. 'ans' → logprob: -15.875014305114746
    9. 'min' → logprob: -16.50001335144043
    10. '```' → logprob: -17.37501335144043

Token 106: '((' (ID: 2054)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.20619194209575653
    2. '(sum' → logprob: -1.706191897392273
    3. '((' → logprob: -6.0811920166015625
    4. '(' → logprob: -6.4561920166015625
    5. '(min' → logprob: -8.081192016601562
    6. 'max' → logprob: -8.206192016601562
    7. '(f' → logprob: -8.956192016601562
    8. 'sum' → logprob: -9.581192016601562
    9. '(window' → logprob: -9.831192016601562
    10. '(len' → logprob: -9.831192016601562

Token 107: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15890736877918243
    2. 'sum' → logprob: -2.033907413482666
    3. 'k' → logprob: -5.408907413482666
    4. 'window' → logprob: -5.533907413482666
    5. ' max' → logprob: -5.533907413482666
    6. 'len' → logprob: -6.908907413482666
    7. '(max' → logprob: -6.908907413482666
    8. ' sum' → logprob: -7.283907413482666
    9. 'n' → logprob: -8.658906936645508
    10. '(sum' → logprob: -8.908906936645508

Token 108: '(window' (ID: 32892)
  Prédit: '(window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(window' → logprob: -0.027100125327706337
    2. 'window' → logprob: -3.652100086212158
    3. ' window' → logprob: -7.152100086212158
    4. ' (' → logprob: -12.027100563049316
    5. ')' → logprob: -12.277100563049316
    6. '(' → logprob: -13.027100563049316
    7. '	window' → logprob: -13.027100563049316
    8. '(w' → logprob: -14.777100563049316
    9. ')(' → logprob: -15.402100563049316
    10. '.window' → logprob: -15.652100563049316

Token 109: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.5577775128767826e-06
    2. 's' → logprob: -13.000005722045898
    3. '_sum' → logprob: -13.500005722045898
    4. 'window' → logprob: -14.000005722045898
    5. ')_' → logprob: -15.000005722045898
    6. ')' → logprob: -15.750005722045898
    7. '_' → logprob: -16.3750057220459
    8. ' _' → logprob: -16.5000057220459
    9. '\' → logprob: -16.6250057220459
    10. ' sums' → logprob: -17.1250057220459

Token 110: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.02997424453496933
    2. 's' → logprob: -3.5299742221832275
    3. '_s' → logprob: -8.529973983764648
    4. ')' → logprob: -11.904973983764648
    5. 'um' → logprob: -12.029973983764648
    6. 'ms' → logprob: -13.029973983764648
    7. ' sums' → logprob: -13.279973983764648
    8. 'uns' → logprob: -13.404973983764648
    9. 'window' → logprob: -13.904973983764648
    10. ')s' → logprob: -14.029973983764648

Token 111: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7490004301071167
    2. ')' → logprob: -1.2490004301071167
    3. '+' → logprob: -1.4990004301071167
    4. ' *' → logprob: -5.374000549316406
    5. '*' → logprob: -5.624000549316406
    6. ' )' → logprob: -5.749000549316406
    7. ')+' → logprob: -5.999000549316406
    8. ' -' → logprob: -7.124000549316406
    9. ' ' → logprob: -7.374000549316406
    10. ' /' → logprob: -7.499000549316406

Token 112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5966755151748657
    2. '+' → logprob: -1.8466755151748657
    3. ' -' → logprob: -2.096675395965576
    4. ' *' → logprob: -2.346675395965576
    5. '*' → logprob: -3.471675395965576
    6. '-' → logprob: -3.846675395965576
    7. ')' → logprob: -4.721675395965576
    8. '+k' → logprob: -4.846675395965576
    9. '*k' → logprob: -6.221675395965576
    10. '-k' → logprob: -7.471675395965576

Token 113: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003668959951028228
    2. ' k' → logprob: -5.628668785095215
    3. '(k' → logprob: -10.128668785095215
    4. '1' → logprob: -10.628668785095215
    5. ' (' → logprob: -13.253668785095215
    6. '0' → logprob: -13.753668785095215
    7. '	k' → logprob: -14.753668785095215
    8. ' ' → logprob: -15.003668785095215
    9. ')' → logprob: -15.003668785095215
    10. '2' → logprob: -15.753668785095215

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004883381072431803
    2. '*' → logprob: -6.004883289337158
    3. ' )' → logprob: -6.754883289337158
    4. '-' → logprob: -7.254883289337158
    5. ' -' → logprob: -7.879883289337158
    6. ')/' → logprob: -9.504883766174316
    7. ')*' → logprob: -9.879883766174316
    8. '+' → logprob: -11.254883766174316
    9. ' *' → logprob: -12.504883766174316
    10. '*)' → logprob: -12.629883766174316

Token 115: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0224493145942688
    2. '//' → logprob: -4.522449493408203
    3. ' )' → logprob: -5.022449493408203
    4. ' //' → logprob: -5.897449493408203
    5. ')//' → logprob: -6.397449493408203
    6. '-' → logprob: -8.522449493408203
    7. ' ' → logprob: -10.397449493408203
    8. '*' → logprob: -10.897449493408203
    9. '))' → logprob: -11.147449493408203
    10. ' -' → logprob: -11.147449493408203

Token 116: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -17.375001907348633
    4. '```' → logprob: -18.625001907348633
    5. '3' → logprob: -19.750001907348633
    6. '２' → logprob: -19.875001907348633
    7. '
' → logprob: -20.375001907348633
    8. '۲' → logprob: -21.125001907348633
    9. '٢' → logprob: -21.250001907348633
    10. '4' → logprob: -21.625001907348633

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -14.500003814697266
    4. 'k' → logprob: -15.375003814697266
    5. '3' → logprob: -17.125003814697266
    6. '```' → logprob: -17.250003814697266
    7. '(' → logprob: -18.750003814697266
    8. ' k' → logprob: -20.000003814697266
    9. '
' → logprob: -20.250003814697266
    10. 'float' → logprob: -20.375003814697266

Token 118: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.682846287731081e-05
    2. '))' → logprob: -9.625066757202148
    3. ' )' → logprob: -14.375066757202148
    4. ')
' → logprob: -16.87506675720215
    5. ')`' → logprob: -17.00006675720215
    6. ')))' → logprob: -17.37506675720215
    7. '})' → logprob: -18.00006675720215
    8. ')#' → logprob: -18.25006675720215
    9. '`)' → logprob: -18.62506675720215
    10. '）' → logprob: -18.87506675720215

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3416175842285156
    2. ')' → logprob: -1.3416175842285156
    3. 'k' → logprob: -3.5916175842285156
    4. '5' → logprob: -8.966617584228516
    5. '6' → logprob: -10.091617584228516
    6. '1' → logprob: -10.091617584228516
    7. 'f' → logprob: -10.091617584228516
    8. 'n' → logprob: -10.216617584228516
    9. '*k' → logprob: -10.466617584228516
    10. '```' → logprob: -11.716617584228516

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. '))' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.125012397766113
    4. ')
' → logprob: -15.500012397766113
    5. ')`' → logprob: -17.25001335144043
    6. ')))' → logprob: -18.25001335144043
    7. ')}' → logprob: -18.75001335144043
    8. ')#' → logprob: -19.37501335144043
    9. '）' → logprob: -19.50001335144043
    10. '`)' → logprob: -19.87501335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 118
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 39.83%
Précision adaptée (1ère position): 39.83%
Précision (top 10): 69.49%
================================================================================
