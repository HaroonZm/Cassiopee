================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

Mod = 1000000007

def main():
    N = int(input())
    v = list(map(int, input().split()))
    v.sort()
    a = (v[0] + v[1]) / 2
    if N == 2:
        print(a)
        return
    for i in range(2, N):
        a = (a + v[i]) / 2
    print(a)

if __name__ == "__main__":
    main()

def sieve_of_eratosthenes(n):
    if type(n) != int:
        raise TypeError("n is not int")
    if n < 2:
        raise ValueError("n < 2 is not effective")
    prime = [1] * (n + 1)
    for i in range(2, int(math.sqrt(n))):
        if prime[i] == 1:
            for j in range(2 * i, n):
                if j % i == 0:
                    prime[j] = 0
    res = []
    for i in range(2, n):
        if prime[i] == 1:
            res.append(i)
    return res

class UnionFind:
    def __init__(self, n):
        self.parent = []
        for i in range(n + 1):
            self.parent.append(i)
        self.rank = []
        for i in range(n + 1):
            self.rank.append(0)

    def findroot(self, x):
        if x == self.parent[x]:
            return x
        else:
            y = self.parent[x]
            y = self.findroot(self.parent[x])
            return y

    def union(self, x, y):
        px = self.findroot(x)
        py = self.findroot(y)
        if px < py:
            self.parent[py] = px
        else:
            self.parent[px] = py

    def same_group_or_no(self, x, y):
        return self.findroot(x) == self.findroot(y)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'Mod' (ID: 4721)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.289473822107539e-05
    2. 'import' → logprob: -11.625062942504883
    3. '```' → logprob: -11.625062942504883
    4. '\' → logprob: -11.875062942504883
    5. '<|end|>' → logprob: -12.375062942504883
    6. '.\' → logprob: -12.500062942504883
    7. '.pi' → logprob: -12.625062942504883
    8. '.e' → logprob: -12.625062942504883
    9. '\n' → logprob: -12.875062942504883
    10. 'def' → logprob: -13.250062942504883

Token 4: ' =' (ID: 314)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.35318508744239807
    2. 'e' → logprob: -1.4781850576400757
    3. 'er' → logprob: -3.2281851768493652
    4. 'u' → logprob: -3.9781851768493652
    5. 'ules' → logprob: -5.478185176849365
    6. 'ul' → logprob: -6.103185176849365
    7. '.' → logprob: -7.228185176849365
    8. '_' → logprob: -7.353185176849365
    9. ' e' → logprob: -7.603185176849365
    10. '```' → logprob: -7.603185176849365

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011837085708975792
    2. '10' → logprob: -4.636837005615234
    3. '100' → logprob: -6.761837005615234
    4. '32' → logprob: -7.886837005615234
    5. 'math' → logprob: -8.886837005615234
    6. ' math' → logprob: -9.011837005615234
    7. '0' → logprob: -10.011837005615234
    8. 'pow' → logprob: -10.136837005615234
    9. '1' → logprob: -10.261837005615234
    10. ' ' → logprob: -10.261837005615234

Token 6: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10058242827653885
    2. '100' → logprob: -2.3505823612213135
    3. 'math' → logprob: -8.725582122802734
    4. '1' → logprob: -9.600582122802734
    5. ' ' → logprob: -9.600582122802734
    6. 'int' → logprob: -10.350582122802734
    7. '998' → logprob: -11.225582122802734
    8. '```' → logprob: -11.475582122802734
    9. 'pow' → logprob: -12.350582122802734
    10. '0' → logprob: -12.350582122802734

Token 7: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.012594414874911308
    2. '9' → logprob: -4.387594223022461
    3. '0' → logprob: -10.512594223022461
    4. '+' → logprob: -11.512594223022461
    5. '7' → logprob: -11.637594223022461
    6. '09' → logprob: -11.762594223022461
    7. '_' → logprob: -12.137594223022461
    8. '009' → logprob: -12.262594223022461
    9. '007' → logprob: -12.262594223022461
    10. '07' → logprob: -12.512594223022461

Token 8: '000' (ID: 1302)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.13110949099063873
    2. '000' → logprob: -2.2561094760894775
    3. '07' → logprob: -4.756109714508057
    4. '007' → logprob: -4.756109714508057
    5. '19' → logprob: -7.631109714508057
    6. '0' → logprob: -8.631109237670898
    7. '3' → logprob: -8.881109237670898
    8. '+' → logprob: -9.381109237670898
    9. '00' → logprob: -11.256109237670898
    10. '```' → logprob: -11.631109237670898

Token 9: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00024215869780164212
    2. '0' → logprob: -8.625242233276367
    3. '9' → logprob: -10.000242233276367
    4. ' ' → logprob: -11.375242233276367
    5. '+' → logprob: -12.500242233276367
    6. '_' → logprob: -14.375242233276367
    7. '8' → logprob: -15.000242233276367
    8. ' +' → logprob: -15.625242233276367
    9. '```' → logprob: -16.000242233276367
    10. ')' → logprob: -16.125242233276367

Token 10: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17712067067623138
    2. '\n' → logprob: -2.8021206855773926
    3. '\' → logprob: -3.5521206855773926
    4. '```' → logprob: -4.052120685577393
    5. '*' → logprob: -4.302120685577393
    6. '

' → logprob: -4.427120685577393
    7. '<|end|>' → logprob: -4.552120685577393
    8. '**' → logprob: -5.552120685577393
    9. '
' → logprob: -5.802120685577393
    10. '+' → logprob: -6.052120685577393

Token 11: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8189266920089722
    2. 'def' → logprob: -1.6939266920089722
    3. '\n' → logprob: -2.0689268112182617
    4. 'n' → logprob: -2.6939268112182617
    5. '\' → logprob: -2.9439268112182617
    6. '```' → logprob: -3.6939268112182617
    7. '(' → logprob: -3.8189268112182617
    8. 'x' → logprob: -4.193926811218262
    9. '`' → logprob: -4.193926811218262
    10. 'result' → logprob: -4.693926811218262

Token 12: ' main' (ID: 2758)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.8304646015167236
    2. ' pow' → logprob: -1.3304646015167236
    3. ' ' → logprob: -2.3304646015167236
    4. ' f' → logprob: -3.3304646015167236
    5. ' factor' → logprob: -3.5804646015167236
    6. ' solve' → logprob: -3.5804646015167236
    7. ' gcd' → logprob: -3.9554646015167236
    8. ' add' → logprob: -3.9554646015167236
    9. ' mod' → logprob: -4.4554643630981445
    10. ' fibonacci' → logprob: -4.4554643630981445

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038547052536159754
    2. '():' → logprob: -5.753854751586914
    3. ':' → logprob: -8.378854751586914
    4. '(:' → logprob: -8.878854751586914
    5. ' (' → logprob: -9.503854751586914
    6. '```' → logprob: -9.503854751586914
    7. '(
' → logprob: -10.628854751586914
    8. '_' → logprob: -11.003854751586914
    9. '(`' → logprob: -11.128854751586914
    10. '):' → logprob: -11.503854751586914

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41143733263015747
    2. ' ' → logprob: -1.7864372730255127
    3. 'n' → logprob: -2.9114372730255127
    4. '    ' → logprob: -3.1614372730255127
    5. ' n' → logprob: -3.6614372730255127
    6. 'a' → logprob: -4.286437511444092
    7. 'x' → logprob: -4.786437511444092
    8. ' x' → logprob: -5.411437511444092
    9. ' a' → logprob: -5.536437511444092
    10. ' i' → logprob: -5.536437511444092

Token 15: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04380938783288002
    2. ' n' → logprob: -3.793809413909912
    3. 'result' → logprob: -5.043809413909912
    4. '   ' → logprob: -5.293809413909912
    5. 'a' → logprob: -5.793809413909912
    6. ' result' → logprob: -6.668809413909912
    7. 'x' → logprob: -6.793809413909912
    8. 'i' → logprob: -7.043809413909912
    9. 's' → logprob: -7.293809413909912
    10. 'print' → logprob: -8.293808937072754

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3289962112903595
    2. ' ' → logprob: -1.328996181488037
    3. '=' → logprob: -4.578996181488037
    4. ',' → logprob: -6.578996181488037
    5. ' ,' → logprob: -6.578996181488037
    6. '  ' → logprob: -6.828996181488037
    7. '    ' → logprob: -8.578996658325195
    8. ' >' → logprob: -8.703996658325195
    9. '   ' → logprob: -8.828996658325195
    10. '.' → logprob: -8.953996658325195

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01608141139149666
    2. 'int' → logprob: -4.1410813331604
    3. '10' → logprob: -10.766081809997559
    4. ' ' → logprob: -11.516081809997559
    5. ' input' → logprob: -11.766081809997559
    6. ' map' → logprob: -13.641081809997559
    7. '5' → logprob: -13.766081809997559
    8. '0' → logprob: -14.141081809997559
    9. '(int' → logprob: -14.266081809997559
    10. '20' → logprob: -14.391081809997559

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029833676293492317
    2. '(' → logprob: -3.5298337936401367
    3. 'input' → logprob: -9.529833793640137
    4. ' (' → logprob: -12.279833793640137
    5. '('' → logprob: -13.279833793640137
    6. '()' → logprob: -13.279833793640137
    7. '(
' → logprob: -13.654833793640137
    8. ' input' → logprob: -14.529833793640137
    9. '("' → logprob: -15.029833793640137
    10. '(int' → logprob: -16.02983283996582

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19897469878196716
    2. '()' → logprob: -1.8239747285842896
    3. ')' → logprob: -4.323974609375
    4. '(' → logprob: -5.198974609375
    5. '('' → logprob: -8.948974609375
    6. '()))' → logprob: -9.948974609375
    7. '(""))' → logprob: -11.073974609375
    8. ' ())' → logprob: -11.448974609375
    9. '`)' → logprob: -11.698974609375
    10. '')' → logprob: -11.823974609375

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39824631810188293
    2. ' ' → logprob: -1.7732462882995605
    3. 's' → logprob: -3.2732462882995605
    4. 'a' → logprob: -4.1482462882995605
    5. '    
' → logprob: -4.2732462882995605
    6. '    ' → logprob: -4.7732462882995605
    7. ' A' → logprob: -4.7732462882995605
    8. ')' → logprob: -5.0232462882995605
    9. ' s' → logprob: -5.0232462882995605
    10. ' 
' → logprob: -5.0232462882995605

Token 21: ' v' (ID: 323)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.308478832244873
    2. ' A' → logprob: -1.558478832244873
    3. ' s' → logprob: -2.058478832244873
    4. 'result' → logprob: -2.808478832244873
    5. ' a' → logprob: -3.058478832244873
    6. ' ' → logprob: -3.183478832244873
    7. 's' → logprob: -3.433478832244873
    8. ' S' → logprob: -3.683478832244873
    9. '   ' → logprob: -3.933478832244873
    10. ' numbers' → logprob: -3.933478832244873

Token 22: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.27254873514175415
    2. ' =' → logprob: -1.7725486755371094
    3. 'als' → logprob: -3.3975486755371094
    4. '=' → logprob: -3.6475486755371094
    5. 'a' → logprob: -6.022548675537109
    6. 's' → logprob: -6.147548675537109
    7. 'alue' → logprob: -7.022548675537109
    8. '   ' → logprob: -7.147548675537109
    9. '=[' → logprob: -7.897548675537109
    10. '[' → logprob: -8.39754867553711

Token 23: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3868914544582367
    2. ' []' → logprob: -2.1368913650512695
    3. ' list' → logprob: -2.5118913650512695
    4. 'list' → logprob: -3.0118913650512695
    5. '[' → logprob: -3.2618913650512695
    6. '[]' → logprob: -4.1368913650512695
    7. '[list' → logprob: -4.3868913650512695
    8. '[int' → logprob: -5.3868913650512695
    9. '[input' → logprob: -8.26189136505127
    10. '[v' → logprob: -8.38689136505127

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059184033423662186
    2. '(map' → logprob: -3.3091840744018555
    3. '(range' → logprob: -4.1841840744018555
    4. '(input' → logprob: -6.3091840744018555
    5. '(int' → logprob: -6.4341840744018555
    6. '()' → logprob: -6.6841840744018555
    7. '(math' → logprob: -7.5591840744018555
    8. '(v' → logprob: -10.059184074401855
    9. '[int' → logprob: -10.184184074401855
    10. '(eval' → logprob: -10.184184074401855

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008278522291220725
    2. '(' → logprob: -7.125827789306641
    3. 'int' → logprob: -11.12582778930664
    4. '(str' → logprob: -12.75082778930664
    5. '(lambda' → logprob: -12.75082778930664
    6. '<int' → logprob: -13.62582778930664
    7. '=int' → logprob: -14.75082778930664
    8. '(
' → logprob: -15.12582778930664
    9. '```' → logprob: -15.12582778930664
    10. '[int' → logprob: -15.50082778930664

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14069540798664093
    2. ',input' → logprob: -2.140695333480835
    3. ',' → logprob: -4.890695571899414
    4. '(' → logprob: -5.140695571899414
    5. 'input' → logprob: -8.765695571899414
    6. ')' → logprob: -10.015695571899414
    7. ' ,' → logprob: -10.640695571899414
    8. ' input' → logprob: -11.015695571899414
    9. '=input' → logprob: -11.140695571899414
    10. '))' → logprob: -11.515695571899414

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193631649017334
    2. ' input' → logprob: -1.5019363164901733
    3. ',input' → logprob: -13.001935958862305
    4. '(input' → logprob: -13.251935958862305
    5. ' ' → logprob: -13.876935958862305
    6. 'lambda' → logprob: -14.376935958862305
    7. '	input' → logprob: -14.751935958862305
    8. '=input' → logprob: -14.876935958862305
    9. '   ' → logprob: -15.501935958862305
    10. '<input' → logprob: -15.876935958862305

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010640407708706334
    2. '()' → logprob: -9.250106811523438
    3. '(' → logprob: -12.625106811523438
    4. ')' → logprob: -12.750106811523438
    5. '())' → logprob: -13.625106811523438
    6. '()))' → logprob: -13.750106811523438
    7. '.split' → logprob: -14.625106811523438
    8. ' ().' → logprob: -14.750106811523438
    9. 'split' → logprob: -15.625106811523438
    10. '.' → logprob: -15.875106811523438

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.847109812544659e-05
    2. 'strip' → logprob: -10.125048637390137
    3. ' split' → logprob: -12.125048637390137
    4. '(split' → logprob: -13.500048637390137
    5. 'rstrip' → logprob: -13.625048637390137
    6. 'spl' → logprob: -15.375048637390137
    7. ')' → logprob: -16.50004768371582
    8. 's' → logprob: -18.37504768371582
    9. '_split' → logprob: -18.62504768371582
    10. '.split' → logprob: -19.37504768371582

Token 30: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1950206309556961
    2. '))' → logprob: -2.1950206756591797
    3. '())' → logprob: -3.1950206756591797
    4. ')' → logprob: -4.44502067565918
    5. '()' → logprob: -4.69502067565918
    6. '(' → logprob: -5.57002067565918
    7. '()))
' → logprob: -9.94502067565918
    8. '())))' → logprob: -10.32002067565918
    9. ')))' → logprob: -10.44502067565918
    10. '()));' → logprob: -11.44502067565918

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1668938845396042
    2. 'v' → logprob: -2.91689395904541
    3. 's' → logprob: -3.66689395904541
    4. '    
' → logprob: -4.16689395904541
    5. 'dp' → logprob: -4.66689395904541
    6. ' 
' → logprob: -5.04189395904541
    7. ' v' → logprob: -5.16689395904541
    8. ' ' → logprob: -5.79189395904541
    9. 'c' → logprob: -6.04189395904541
    10. 'sum' → logprob: -6.04189395904541

Token 32: ' v' (ID: 323)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0632493495941162
    2. '   ' → logprob: -1.5632493495941162
    3. ' dp' → logprob: -1.5632493495941162
    4. 'v' (adapté à ' v') → logprob: -3.063249349594116
    5. ' ans' → logprob: -3.688249349594116
    6. ' v' → logprob: -3.813249349594116
    7. 'prefix' → logprob: -4.313249588012695
    8. ' prefix' → logprob: -4.438249588012695
    9. 's' → logprob: -4.688249588012695
    10. 'c' → logprob: -4.688249588012695

Token 33: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.23389390110969543
    2. '.' → logprob: -1.608893871307373
    3. '[' → logprob: -5.483893871307373
    4. '=' → logprob: -6.608893871307373
    5. ' =' → logprob: -6.608893871307373
    6. '.append' → logprob: -7.608893871307373
    7. '.reverse' → logprob: -7.858893871307373
    8. '[:]' → logprob: -8.108894348144531
    9. '.count' → logprob: -9.358894348144531
    10. '.pop' → logprob: -9.608894348144531

Token 34: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017352750292047858
    2. '(' → logprob: -6.376735210418701
    3. '())' → logprob: -11.62673568725586
    4. '()`' → logprob: -12.00173568725586
    5. '(reverse' → logprob: -12.50173568725586
    6. '```' → logprob: -13.00173568725586
    7. '(v' → logprob: -13.12673568725586
    8. '(()' → logprob: -13.37673568725586
    9. '()
' → logprob: -13.37673568725586
    10. ' ()' → logprob: -13.87673568725586

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6163153648376465
    2. '
' → logprob: -1.9913153648376465
    3. '    
' → logprob: -2.1163153648376465
    4. '<|end|>' → logprob: -2.7413153648376465
    5. ' ' → logprob: -4.1163153648376465
    6. '[' → logprob: -4.2413153648376465
    7. '```' → logprob: -4.2413153648376465
    8. 'v' → logprob: -4.3663153648376465
    9. ' 
' → logprob: -4.6163153648376465
    10. '(' → logprob: -4.6163153648376465

Token 36: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8512749671936035
    2. ' ans' → logprob: -2.1012749671936035
    3. 'c' → logprob: -2.6012749671936035
    4. 'result' → logprob: -2.6012749671936035
    5. 'ans' → logprob: -2.9762749671936035
    6. ' dp' → logprob: -3.1012749671936035
    7. 's' → logprob: -3.2262749671936035
    8. 'res' → logprob: -3.2262749671936035
    9. ' result' → logprob: -3.2262749671936035
    10. 'd' → logprob: -3.3512749671936035

Token 37: ' =' (ID: 314)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.5342416763305664
    2. 'cc' → logprob: -1.2842416763305664
    3. ' =' → logprob: -2.2842416763305664
    4. '=' → logprob: -4.284241676330566
    5. 'll' → logprob: -4.659241676330566
    6. 'c' → logprob: -5.784241676330566
    7. 'bs' → logprob: -6.534241676330566
    8. 'dd' → logprob: -6.659241676330566
    9. 'ct' → logprob: -6.909241676330566
    10. 'b' → logprob: -7.534241676330566

Token 38: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8070195317268372
    2. ' [' → logprob: -0.8070195317268372
    3. '[]' → logprob: -3.1820194721221924
    4. '0' → logprob: -3.3070194721221924
    5. ' []' → logprob: -4.4320197105407715
    6. '[v' → logprob: -5.1820197105407715
    7. ' ' → logprob: -5.4320197105407715
    8. 'v' → logprob: -6.0570197105407715
    9. '1' → logprob: -6.3070197105407715
    10. ' v' → logprob: -6.6820197105407715

Token 39: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.26199957728385925
    2. ' v' → logprob: -2.3869996070861816
    3. 'N' → logprob: -2.3869996070861816
    4. ' N' → logprob: -4.136999607086182
    5. 'pow' → logprob: -5.386999607086182
    6. 'math' → logprob: -5.511999607086182
    7. '(v' → logprob: -5.636999607086182
    8. ' (' → logprob: -5.886999607086182
    9. '2' → logprob: -6.011999607086182
    10. 'len' → logprob: -6.136999607086182

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1465303897857666
    2. '[-' → logprob: -2.0215303897857666
    3. '[len' → logprob: -6.0215301513671875
    4. '[N' → logprob: -7.2715301513671875
    5. ' [' → logprob: -8.271530151367188
    6. '[n' → logprob: -9.521530151367188
    7. '[i' → logprob: -9.896530151367188
    8. ' [-' → logprob: -10.146530151367188
    9. ')' → logprob: -10.271530151367188
    10. ' ' → logprob: -10.271530151367188

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04507128894329071
    2. '-' → logprob: -3.2950713634490967
    3. ' ' → logprob: -5.670071125030518
    4. '1' → logprob: -5.920071125030518
    5. ' -' → logprob: -7.545071125030518
    6. 'N' → logprob: -8.545071601867676
    7. '2' → logprob: -10.295071601867676
    8. 'len' → logprob: -10.670071601867676
    9. ' N' → logprob: -10.920071601867676
    10. '   ' → logprob: -11.420071601867676

Token 42: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.45629727840423584
    2. '+' → logprob: -1.3312972784042358
    3. ' *' → logprob: -3.5812973976135254
    4. ']' → logprob: -3.7062973976135254
    5. ' -' → logprob: -3.7062973976135254
    6. '*' → logprob: -4.956297397613525
    7. '-' → logprob: -5.456297397613525
    8. ')' → logprob: -5.456297397613525
    9. '**' → logprob: -5.956297397613525
    10. ' **' → logprob: -6.331297397613525

Token 43: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7720060348510742
    2. '+' → logprob: -1.0220060348510742
    3. ' *' → logprob: -2.022006034851074
    4. '*' → logprob: -3.397006034851074
    5. ' -' → logprob: -5.397006034851074
    6. ')' → logprob: -5.897006034851074
    7. '-' → logprob: -6.397006034851074
    8. '**' → logprob: -6.772006034851074
    9. ' **' → logprob: -6.772006034851074
    10. ' )' → logprob: -8.522006034851074

Token 44: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6943174004554749
    2. ' v' → logprob: -0.6943174004554749
    3. '1' → logprob: -7.31931734085083
    4. ' ' → logprob: -8.569317817687988
    5. '2' → logprob: -9.694317817687988
    6. ' math' → logprob: -9.819317817687988
    7. '   ' → logprob: -10.069317817687988
    8. ' (' → logprob: -10.069317817687988
    9. 'math' → logprob: -10.881817817687988
    10. 'a' → logprob: -11.319317817687988

Token 45: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.47480064630508423
    2. '[' → logprob: -0.9748006463050842
    3. '-' → logprob: -7.8498005867004395
    4. '1' → logprob: -9.599801063537598
    5. ']' → logprob: -10.099801063537598
    6. '[N' → logprob: -10.349801063537598
    7. '[
' → logprob: -10.599801063537598
    8. '```' → logprob: -10.724801063537598
    9. '[n' → logprob: -10.974801063537598
    10. '[len' → logprob: -10.974801063537598

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7450820803642273
    2. '-' → logprob: -0.8700820803642273
    3. '0' → logprob: -2.245082139968872
    4. ' -' → logprob: -8.245081901550293
    5. ' ' → logprob: -9.495081901550293
    6. '])' → logprob: -10.745081901550293
    7. ']' → logprob: -10.870081901550293
    8. 'N' → logprob: -11.120081901550293
    9. '   ' → logprob: -11.120081901550293
    10. 'len' → logprob: -11.245081901550293

Token 47: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3089037239551544
    2. '])' → logprob: -1.433903694152832
    3. ']' → logprob: -3.933903694152832
    4. ' )' → logprob: -5.933903694152832
    5. ' ])' → logprob: -6.058903694152832
    6. '))' → logprob: -7.058903694152832
    7. ')//' → logprob: -7.308903694152832
    8. ')])' → logprob: -7.683903694152832
    9. ']))' → logprob: -8.183903694152832
    10. ' ]' → logprob: -9.308903694152832

Token 48: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.3696801662445068
    2. '%' → logprob: -1.7446801662445068
    3. '+' → logprob: -1.9946801662445068
    4. '//' → logprob: -2.369680166244507
    5. '<|end|>' → logprob: -2.619680166244507
    6. '*' → logprob: -2.994680166244507
    7. ' %' → logprob: -2.994680166244507
    8. ' *' → logprob: -2.994680166244507
    9. ' +' → logprob: -3.119680166244507
    10. ')' → logprob: -3.994680166244507

Token 49: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20142823457717896
    2. ' ' → logprob: -1.7014281749725342
    3. '3' → logprob: -12.201428413391113
    4. '```' → logprob: -12.451428413391113
    5. ' ' → logprob: -13.451428413391113
    6. ' math' → logprob: -13.951428413391113
    7. '  ' → logprob: -14.076428413391113
    8. '(' → logprob: -14.951428413391113
    9. 'math' → logprob: -14.951428413391113
    10. '２' → logprob: -15.388928413391113

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.333223139634356e-05
    2. ' ' → logprob: -10.500033378601074
    3. '3' → logprob: -12.625033378601074
    4. '```' → logprob: -14.375033378601074
    5. 'math' → logprob: -14.625033378601074
    6. '1' → logprob: -15.000033378601074
    7. '(' → logprob: -15.250033378601074
    8. '4' → logprob: -15.500033378601074
    9. '6' → logprob: -16.375032424926758
    10. 'float' → logprob: -16.750032424926758

Token 51: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6987836956977844
    2. '*' → logprob: -0.8237836956977844
    3. '\' → logprob: -4.198783874511719
    4. '   ' → logprob: -4.823783874511719
    5. '<|end|>' → logprob: -5.198783874511719
    6. '**' → logprob: -5.323783874511719
    7. ',' → logprob: -5.448783874511719
    8. ' 
' → logprob: -5.698783874511719
    9. '.' → logprob: -5.823783874511719
    10. '\n' → logprob: -5.823783874511719

Token 52: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.137008786201477
    2. '   ' → logprob: -2.0120086669921875
    3. '\n' → logprob: -2.2620086669921875
    4. ')' → logprob: -2.2620086669921875
    5. '
' → logprob: -3.0120086669921875
    6. ' 
' → logprob: -3.1370086669921875
    7. '\' → logprob: -3.1370086669921875
    8. '<|end|>' → logprob: -3.2620086669921875
    9. '    
' → logprob: -3.3870086669921875
    10. '  
' → logprob: -3.7620086669921875

Token 53: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.687900722026825
    2. '\' → logprob: -2.1879007816314697
    3. '  
' → logprob: -3.0629007816314697
    4. ' 
' → logprob: -3.1879007816314697
    5. ' ' → logprob: -3.1879007816314697
    6. '
' → logprob: -3.3129007816314697
    7. '   ' → logprob: -3.4379007816314697
    8. 'a' → logprob: -3.5629007816314697
    9. '' → logprob: -4.062900543212891
    10. '    
' → logprob: -4.062900543212891

Token 54: ' N' (ID: 478)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9195235967636108
    2. ' v' → logprob: -1.5445235967636108
    3. ' N' → logprob: -1.9195235967636108
    4. 'a' → logprob: -1.9195235967636108
    5. 'v' → logprob: -3.2945237159729004
    6. 'N' → logprob: -3.9195237159729004
    7. ' len' → logprob: -4.0445237159729
    8. ' ' → logprob: -4.9195237159729
    9. ' (' → logprob: -5.4195237159729
    10. ' abs' → logprob: -5.7945237159729

Token 55: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5316463708877563
    2. ' <' → logprob: -1.7816463708877563
    3. ' >=' → logprob: -2.281646251678467
    4. ' ' → logprob: -3.031646251678467
    5. ' ==' → logprob: -3.156646251678467
    6. '>' → logprob: -3.406646251678467
    7. ' <=' → logprob: -4.656646251678467
    8. '<' → logprob: -5.281646251678467
    9. '==' → logprob: -6.656646251678467
    10. '>=' → logprob: -6.781646251678467

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36954259872436523
    2. '2' → logprob: -1.3695425987243652
    3. '1' → logprob: -2.9945425987243652
    4. '3' → logprob: -5.369542598724365
    5. '4' → logprob: -12.369543075561523
    6. '0' → logprob: -12.869543075561523
    7. '  ' → logprob: -13.369543075561523
    8. ' ' → logprob: -14.119543075561523
    9. '=' → logprob: -15.057043075561523
    10. '5' → logprob: -15.369543075561523

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0061547658406198025
    2. '3' → logprob: -6.006154537200928
    3. ' ' → logprob: -6.131154537200928
    4. '1' → logprob: -6.506154537200928
    5. '4' → logprob: -13.381155014038086
    6. '  ' → logprob: -13.506155014038086
    7. '   ' → logprob: -15.131155014038086
    8. '5' → logprob: -15.256155014038086
    9. '0' → logprob: -15.881155014038086
    10. '    ' → logprob: -16.506155014038086

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013500562636181712
    2. ' :' → logprob: -9.00013542175293
    3. ':
' → logprob: -12.00013542175293
    4. ':return' → logprob: -13.00013542175293
    5. ' and' → logprob: -13.62513542175293
    6. ':**' → logprob: -14.00013542175293
    7. '):' → logprob: -14.62513542175293
    8. ',' → logprob: -15.37513542175293
    9. '   ' → logprob: -15.87513542175293
    10. 'and' → logprob: -17.37513542175293

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08563902974128723
    2. '       ' → logprob: -2.835638999938965
    3. '   ' → logprob: -3.960638999938965
    4. ':
' → logprob: -5.585638999938965
    5. ':return' → logprob: -9.210638999938965
    6. '\n' → logprob: -9.460638999938965
    7. ',' → logprob: -9.585638999938965
    8. 'print' → logprob: -9.585638999938965
    9. ' print' → logprob: -9.960638999938965
    10. '
' → logprob: -10.210638999938965

Token 60: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.27170613408088684
    2. 'print' (adapté à ' print') → logprob: -1.7717061042785645
    3. '   ' → logprob: -3.0217061042785645
    4. '       ' → logprob: -4.8967061042785645
    5. ':' → logprob: -5.0217061042785645
    6. '    ' → logprob: -6.1467061042785645
    7. '
' → logprob: -6.6467061042785645
    8. ':
' → logprob: -7.7717061042785645
    9. ' ' → logprob: -8.021706581115723
    10. '	print' → logprob: -8.521706581115723

Token 61: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5703665018081665
    2. '(' → logprob: -1.4453665018081665
    3. '(int' → logprob: -1.9453665018081665
    4. '(v' → logprob: -3.695366382598877
    5. '()' → logprob: -4.320366382598877
    6. '("' → logprob: -4.945366382598877
    7. '((' → logprob: -5.320366382598877
    8. '(round' → logprob: -6.070366382598877
    9. '('' → logprob: -7.195366382598877
    10. '(max' → logprob: -7.695366382598877

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002199740381911397
    2. ')
' → logprob: -6.127199649810791
    3. ')
' → logprob: -12.25220012664795
    4. '   ' → logprob: -12.37720012664795
    5. ' )' → logprob: -12.50220012664795
    6. '))' → logprob: -14.12720012664795
    7. '')' → logprob: -15.12720012664795
    8. ')return' → logprob: -15.50220012664795
    9. '")' → logprob: -15.75220012664795
    10. '`)' → logprob: -16.002199172973633

Token 63: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.760019063949585
    2. ' else' → logprob: -1.010019063949585
    3. '   ' → logprob: -2.010019063949585
    4. 'elif' → logprob: -3.635019063949585
    5. ' elif' → logprob: -5.635019302368164
    6. '    
' → logprob: -6.385019302368164
    7. ' ' → logprob: -7.385019302368164
    8. ' 
' → logprob: -7.760019302368164
    9. '```' → logprob: -8.385019302368164
    10. '	else' → logprob: -8.510019302368164

Token 64: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8239416480064392
    2. 'else' → logprob: -1.573941707611084
    3. ' else' → logprob: -1.948941707611084
    4. ' return' → logprob: -2.198941707611084
    5. '   ' → logprob: -2.448941707611084
    6. ' ' → logprob: -4.448941707611084
    7. 'elif' → logprob: -7.198941707611084
    8. '       ' → logprob: -7.823941707611084
    9. ' 
' → logprob: -8.198941230773926
    10. '    
' → logprob: -8.198941230773926

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.001211404800415
    2. ' 
' → logprob: -1.001211404800415
    3. '  
' → logprob: -2.376211404800415
    4. '\n' → logprob: -2.501211404800415
    5. '<|end|>' → logprob: -3.001211404800415
    6. '    
' → logprob: -4.251211166381836
    7. '   
' → logprob: -5.376211166381836
    8. '' → logprob: -5.376211166381836
    9. '```' → logprob: -5.376211166381836
    10. ' ' → logprob: -5.876211166381836

Token 66: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5490001440048218
    2. 'for' → logprob: -1.4240001440048218
    3. '    
' → logprob: -3.1740002632141113
    4. ' 
' → logprob: -3.4240002632141113
    5. '   ' → logprob: -3.5490002632141113
    6. '```' → logprob: -4.299000263214111
    7. 'a' → logprob: -4.924000263214111
    8. '\n' → logprob: -4.924000263214111
    9. '  
' → logprob: -5.299000263214111
    10. '
' → logprob: -5.799000263214111

Token 67: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0102567672729492
    2. ' ' → logprob: -2.010256767272949
    3. 'a' → logprob: -2.385256767272949
    4. ' for' → logprob: -2.635256767272949
    5. 'for' (adapté à ' for') → logprob: -2.885256767272949
    6. '  
' → logprob: -3.010256767272949
    7. '
' → logprob: -3.385256767272949
    8. '    
' → logprob: -3.385256767272949
    9. '\n' → logprob: -3.885256767272949
    10. '\' → logprob: -4.260256767272949

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0032153804786503315
    2. 'i' → logprob: -5.753215312957764
    3. ' ' → logprob: -10.253215789794922
    4. '	i' → logprob: -14.503215789794922
    5. '_' → logprob: -14.753215789794922
    6. ' _' → logprob: -14.753215789794922
    7. ' ' → logprob: -15.128215789794922
    8. '_i' → logprob: -15.128215789794922
    9. '(i' → logprob: -15.628215789794922
    10. '  ' → logprob: -16.753215789794922

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008880218490958214
    2. 'in' → logprob: -5.008880138397217
    3. ' ' → logprob: -6.258880138397217
    4. '  ' → logprob: -8.508880615234375
    5. '	in' → logprob: -11.133880615234375
    6. '   ' → logprob: -11.258880615234375
    7. 'n' → logprob: -12.883880615234375
    8. ' i' → logprob: -12.883880615234375
    9. '    ' → logprob: -13.133880615234375
    10. ' ' → logprob: -13.383880615234375

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3869014084339142
    2. ' range' → logprob: -1.1369013786315918
    3. ' ' → logprob: -11.01190185546875
    4. '	range' → logprob: -12.38690185546875
    5. '  ' → logprob: -12.63690185546875
    6. '   ' → logprob: -12.76190185546875
    7. 'v' → logprob: -13.51190185546875
    8. '(range' → logprob: -14.01190185546875
    9. 'r' → logprob: -15.13690185546875
    10. ' xrange' → logprob: -15.26190185546875

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '(N' → logprob: -14.750000953674316
    3. '(
' → logprob: -15.375000953674316
    4. '2' → logprob: -15.625000953674316
    5. ' (' → logprob: -15.750000953674316
    6. '(len' → logprob: -17.125001907348633
    7. '1' → logprob: -17.625001907348633
    8. '(i' → logprob: -17.875001907348633
    9. '()' → logprob: -18.250001907348633
    10. '((' → logprob: -18.375001907348633

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005643534241244197
    2. ' ' → logprob: -7.7505645751953125
    3. '1' → logprob: -9.125564575195312
    4. '   ' → logprob: -10.750564575195312
    5. '(' → logprob: -13.375564575195312
    6. '  ' → logprob: -14.375564575195312
    7. '3' → logprob: -14.750564575195312
    8. '    ' → logprob: -15.375564575195312
    9. '	' → logprob: -15.875564575195312
    10. ')' → logprob: -15.938064575195312

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003383033908903599
    2. ' ,' → logprob: -5.753383159637451
    3. ',N' → logprob: -8.503382682800293
    4. '   ' → logprob: -14.128382682800293
    5. ' ' → logprob: -14.253382682800293
    6. 'N' → logprob: -15.003382682800293
    7. '  ' → logprob: -15.503382682800293
    8. '，' → logprob: -15.628382682800293
    9. ',len' → logprob: -15.753382682800293
    10. ',n' → logprob: -16.12838363647461

Token 74: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16027580201625824
    2. ' N' → logprob: -1.9102758169174194
    3. '   ' → logprob: -10.03527545928955
    4. ' len' → logprob: -12.78527545928955
    5. 'len' → logprob: -13.16027545928955
    6. ' ' → logprob: -13.53527545928955
    7. '	N' → logprob: -13.91027545928955
    8. 'n' → logprob: -15.28527545928955
    9. '    ' → logprob: -15.28527545928955
    10. '  ' → logprob: -15.78527545928955

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032505544368177652
    2. '):
' → logprob: -5.753250598907471
    3. ' ):' → logprob: -10.128250122070312
    4. ':' → logprob: -10.628250122070312
    5. ')' → logprob: -12.628250122070312
    6. '   ' → logprob: -13.128250122070312
    7. '():' → logprob: -14.003250122070312
    8. '):
' → logprob: -14.003250122070312
    9. '+' → logprob: -14.503250122070312
    10. ' ' → logprob: -15.378250122070312

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11702408641576767
    2. '<|end|>' → logprob: -3.1170241832733154
    3. ' ' → logprob: -3.4920241832733154
    4. '   ' → logprob: -4.367023944854736
    5. '        
' → logprob: -5.117023944854736
    6. ' 
' → logprob: -5.867023944854736
    7. '    ' → logprob: -6.367023944854736
    8. ':' → logprob: -6.492023944854736
    9. ')' → logprob: -6.617023944854736
    10. '    
' → logprob: -6.742023944854736

Token 77: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.39809173345565796
    2. 'a' (adapté à ' a') → logprob: -1.1480917930603027
    3. '   ' → logprob: -5.523091793060303
    4. ' if' → logprob: -5.648091793060303
    5. '       ' → logprob: -6.648091793060303
    6. '    ' → logprob: -6.898091793060303
    7. 'if' → logprob: -7.523091793060303
    8. ' ' → logprob: -8.148091316223145
    9. '	a' → logprob: -8.898091316223145
    10. '        ' → logprob: -9.523091316223145

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31432008743286133
    2. ' =' → logprob: -1.3143200874328613
    3. '+=' → logprob: -7.564320087432861
    4. '*=' → logprob: -7.814320087432861
    5. ' +=' → logprob: -10.314319610595703
    6. ' *=' → logprob: -10.439319610595703
    7. '*' → logprob: -10.689319610595703
    8. '=(' → logprob: -11.314319610595703
    9. '-=' → logprob: -11.689319610595703
    10. '+' → logprob: -11.939319610595703

Token 79: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.23197536170482635
    2. '(math' → logprob: -2.3569753170013428
    3. '(v' → logprob: -3.1069753170013428
    4. 'math' → logprob: -3.8569753170013428
    5. ' (' → logprob: -4.356975555419922
    6. '(' → logprob: -4.481975555419922
    7. '(max' → logprob: -4.481975555419922
    8. 'max' → logprob: -5.356975555419922
    9. ' math' → logprob: -6.606975555419922
    10. '(m' → logprob: -6.856975555419922

Token 80: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00027218335890211165
    2. ' a' → logprob: -8.375271797180176
    3. 'v' → logprob: -10.625271797180176
    4. '(a' → logprob: -11.500271797180176
    5. '(' → logprob: -13.375271797180176
    6. 'math' → logprob: -13.750271797180176
    7. ' ' → logprob: -14.000271797180176
    8. 'i' → logprob: -14.125271797180176
    9. '1' → logprob: -14.750271797180176
    10. '2' → logprob: -14.875271797180176

Token 81: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17975059151649475
    2. '+' → logprob: -1.8047505617141724
    3. ' ' → logprob: -13.179750442504883
    4. '*' → logprob: -13.929750442504883
    5. '+a' → logprob: -14.929750442504883
    6. ' *' → logprob: -14.992250442504883
    7. 'a' → logprob: -15.117250442504883
    8. ' ' → logprob: -15.117250442504883
    9. ' +
' → logprob: -15.242250442504883
    10. 'v' → logprob: -15.367250442504883

Token 82: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2016323208808899
    2. 'v' → logprob: -1.7016322612762451
    3. ' ' → logprob: -9.326632499694824
    4. '	v' → logprob: -9.701632499694824
    5. ' ' → logprob: -10.826632499694824
    6. '  ' → logprob: -11.451632499694824
    7. ')' → logprob: -11.951632499694824
    8. '2' → logprob: -12.201632499694824
    9. '(v' → logprob: -12.201632499694824
    10. ' (' → logprob: -12.326632499694824

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. '[
' → logprob: -15.75000286102295
    4. ' [' → logprob: -16.125003814697266
    5. '[I' → logprob: -18.000003814697266
    6. 'i' → logprob: -18.250003814697266
    7. ')' → logprob: -18.500003814697266
    8. ' ' → logprob: -18.875003814697266
    9. '[v' → logprob: -18.875003814697266
    10. '```' → logprob: -18.875003814697266

Token 84: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012909513898193836
    2. ' )' → logprob: -7.251290798187256
    3. ')/' → logprob: -8.001291275024414
    4. '`)' → logprob: -9.251291275024414
    5. '）' → logprob: -9.501291275024414
    6. '')' → logprob: -11.251291275024414
    7. '])' → logprob: -11.251291275024414
    8. '")' → logprob: -11.376291275024414
    9. '[' → logprob: -11.751291275024414
    10. '))' → logprob: -12.001291275024414

Token 85: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3900643587112427
    2. '/' → logprob: -1.2650643587112427
    3. ')' → logprob: -3.640064239501953
    4. ')/' → logprob: -4.890064239501953
    5. '   ' → logprob: -6.265064239501953
    6. '```' → logprob: -6.640064239501953
    7. ' ' → logprob: -7.015064239501953
    8. '2' → logprob: -7.265064239501953
    9. ' )' → logprob: -7.390064239501953
    10. '`' → logprob: -8.515064239501953

Token 86: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.376703262329102
    4. '  ' → logprob: -15.626703262329102
    5. '２' → logprob: -16.5017032623291
    6. '```' → logprob: -16.6267032623291
    7. ' ' → logprob: -17.2517032623291
    8. '    ' → logprob: -17.3767032623291
    9. '3' → logprob: -17.6892032623291
    10. '۲' → logprob: -17.6892032623291

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.625066757202148
    3. '  ' → logprob: -16.00006675720215
    4. '   ' → logprob: -16.12506675720215
    5. '２' → logprob: -16.37506675720215
    6. 'i' → logprob: -16.75006675720215
    7. '۲' → logprob: -16.81256675720215
    8. '(' → logprob: -17.00006675720215
    9. '```' → logprob: -17.25006675720215
    10. '    ' → logprob: -17.31256675720215

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1827743500471115
    2. 'print' → logprob: -1.807774305343628
    3. ' print' → logprob: -6.932774543762207
    4. '    
' → logprob: -7.057774543762207
    5. ')' → logprob: -8.432774543762207
    6. '
' → logprob: -8.432774543762207
    7. '       ' → logprob: -8.432774543762207
    8. '<|end|>' → logprob: -8.432774543762207
    9. '\n' → logprob: -9.432774543762207
    10. '  
' → logprob: -9.557774543762207

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12730088829994202
    2. 'print' → logprob: -2.127300977706909
    3. '    
' → logprob: -8.877301216125488
    4. '       ' → logprob: -9.377301216125488
    5. '```' → logprob: -9.502301216125488
    6. ' print' → logprob: -10.252301216125488
    7. '<|end|>' → logprob: -11.502301216125488
    8. '	print' → logprob: -11.877301216125488
    9. '  
' → logprob: -12.002301216125488
    10. '
' → logprob: -12.627301216125488

Token 90: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002006199210882187
    2. '   ' → logprob: -6.2520060539245605
    3. ' print' → logprob: -9.627006530761719
    4. '```' → logprob: -11.877006530761719
    5. ' ' → logprob: -13.752006530761719
    6. '	print' → logprob: -13.752006530761719
    7. '    
' → logprob: -13.877006530761719
    8. '       ' → logprob: -14.627006530761719
    9. '  
' → logprob: -14.877006530761719
    10. '  ' → logprob: -15.127006530761719

Token 91: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014166207052767277
    2. '(' → logprob: -4.264166355133057
    3. '((' → logprob: -13.764165878295898
    4. '('' → logprob: -14.889165878295898
    5. '(A' → logprob: -15.264165878295898
    6. '(round' → logprob: -15.389165878295898
    7. ' (' → logprob: -15.639165878295898
    8. '()' → logprob: -15.889165878295898
    9. '("("' → logprob: -16.1391658782959
    10. 'a' → logprob: -16.7641658782959

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -17.500001907348633
    4. ')`' → logprob: -17.500001907348633
    5. '))' → logprob: -18.000001907348633
    6. '）' → logprob: -18.250001907348633
    7. '`)' → logprob: -19.000001907348633
    8. '()' → logprob: -19.500001907348633
    9. '}' → logprob: -19.750001907348633
    10. '')' → logprob: -19.875001907348633

Token 93: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4377640187740326
    2. '<|end|>' → logprob: -1.187764048576355
    3. '#' → logprob: -3.9377639293670654
    4. '
' → logprob: -4.4377641677856445
    5. '```' → logprob: -4.8127641677856445
    6. '\' → logprob: -5.9377641677856445
    7. '\n' → logprob: -6.4377641677856445
    8. '<|end|>' → logprob: -6.4377641677856445
    9. ' ' → logprob: -6.9377641677856445
    10. '(' → logprob: -7.0627641677856445

Token 94: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006358285900205374
    2. '__' → logprob: -5.1313581466674805
    3. ' ' → logprob: -7.8813581466674805
    4. '_' → logprob: -10.63135814666748
    5. ' ' → logprob: -11.13135814666748
    6. ' _' → logprob: -11.75635814666748
    7. ' ' → logprob: -13.38135814666748
    8. ' ​' → logprob: -13.88135814666748
    9. '_name' → logprob: -14.13135814666748
    10. '​' → logprob: -14.88135814666748

Token 95: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002971399575471878
    2. ' __' → logprob: -6.252971172332764
    3. ' ==' → logprob: -8.377971649169922
    4. '__.__' → logprob: -8.627971649169922
    5. '==' → logprob: -8.752971649169922
    6. '.__' → logprob: -9.502971649169922
    7. '__.' → logprob: -9.502971649169922
    8. '___' → logprob: -9.502971649169922
    9. '.' → logprob: -10.002971649169922
    10. '<|end|>' → logprob: -10.002971649169922

Token 96: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001767170149832964
    2. '__.__' → logprob: -6.376767158508301
    3. '__.' → logprob: -9.8767671585083
    4. '==' → logprob: -12.2517671585083
    5. '___' → logprob: -12.8767671585083
    6. '_' → logprob: -13.5017671585083
    7. '__["' → logprob: -13.7517671585083
    8. '.__' → logprob: -14.0017671585083
    9. '__('' → logprob: -14.5017671585083
    10. '__("' → logprob: -14.6267671585083

Token 97: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07481067627668381
    2. ' ==' → logprob: -2.699810743331909
    3. '==' → logprob: -5.44981050491333
    4. '=="' → logprob: -8.199810981750488
    5. '[' → logprob: -9.074810981750488
    6. '=='' → logprob: -10.699810981750488
    7. '["' → logprob: -10.824810981750488
    8. '___' → logprob: -10.949810981750488
    9. '__["' → logprob: -10.949810981750488
    10. ' =="' → logprob: -11.199810981750488

Token 98: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4745595157146454
    2. ''' → logprob: -0.9745595455169678
    3. ' "' → logprob: -7.849559307098389
    4. ' '' → logprob: -9.974559783935547
    5. ' "__' → logprob: -10.724559783935547
    6. '__' → logprob: -11.224559783935547
    7. ' '__' → logprob: -12.224559783935547
    8. '"user' → logprob: -13.099559783935547
    9. ''s' → logprob: -14.224559783935547
    10. ' ' → logprob: -14.349559783935547

Token 99: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10459918528795242
    2. '__' → logprob: -2.3545992374420166
    3. 'name' → logprob: -6.1045989990234375
    4. '```' → logprob: -6.8545989990234375
    5. 'python' → logprob: -7.9795989990234375
    6. '__":
' → logprob: -8.354598999023438
    7. 'm' → logprob: -8.979598999023438
    8. 'py' → logprob: -9.479598999023438
    9. 'built' → logprob: -9.729598999023438
    10. '"' → logprob: -10.229598999023438

Token 100: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2020871788263321
    2. '__":
' → logprob: -1.702087163925171
    3. '__.' → logprob: -7.70208740234375
    4. '__.__' → logprob: -9.07708740234375
    5. '__["' → logprob: -9.57708740234375
    6. '__("' → logprob: -11.07708740234375
    7. '__':
' → logprob: -11.70208740234375
    8. '"' → logprob: -12.57708740234375
    9. '__:' → logprob: -12.95208740234375
    10. '```' → logprob: -13.32708740234375

Token 101: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11371548473834991
    2. 'main' → logprob: -2.238715410232544
    3. '"' → logprob: -7.863715648651123
    4. '   ' → logprob: -7.988715648651123
    5. '	main' → logprob: -9.363715171813965
    6. '_main' → logprob: -10.113715171813965
    7. '__' → logprob: -11.988715171813965
    8. '    
' → logprob: -12.113715171813965
    9. ' "' → logprob: -12.363715171813965
    10. ' ' → logprob: -12.363715171813965

Token 102: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -20.75
    4. '_main' → logprob: -25.0
    5. 'Main' → logprob: -25.375
    6. '   ' → logprob: -26.25
    7. '.main' → logprob: -26.375
    8. '(main' → logprob: -27.5
    9. 'mainwindow' → logprob: -27.75
    10. '  ' → logprob: -29.125

Token 103: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005756704485975206
    2. '(' → logprob: -7.625575542449951
    3. '()
' → logprob: -9.50057601928711
    4. '```' → logprob: -12.62557601928711
    5. '()\' → logprob: -13.00057601928711
    6. '(
' → logprob: -13.50057601928711
    7. ')' → logprob: -13.62557601928711
    8. '\n' → logprob: -14.25057601928711
    9. '
' → logprob: -14.50057601928711
    10. '<|end|>' → logprob: -14.50057601928711

Token 104: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' sieve' (ID: 142781)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07106725871562958
    2. ' factorial' → logprob: -3.5710673332214355
    3. ' _' → logprob: -4.3210673332214355
    4. '_' → logprob: -4.6960673332214355
    5. ' main' → logprob: -4.8210673332214355
    6. '_factor' → logprob: -6.3210673332214355
    7. ' test' → logprob: -6.5710673332214355
    8. ' add' → logprob: -6.9460673332214355
    9. ' foo' → logprob: -7.1960673332214355
    10. ' average' → logprob: -7.6960673332214355

Token 106: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2775505781173706
    2. '(' → logprob: -1.5275505781173706
    3. '(n' → logprob: -4.15255069732666
    4. '_(' → logprob: -5.52755069732666
    5. '_s' → logprob: -5.90255069732666
    6. '(_' → logprob: -7.15255069732666
    7. '_array' → logprob: -8.02755069732666
    8. '_prime' → logprob: -8.15255069732666
    9. '_list' → logprob: -8.65255069732666
    10. ' _' → logprob: -9.40255069732666

Token 107: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.051546234637498856
    2. ' Er' → logprob: -3.051546335220337
    3. ' erat' → logprob: -6.176546096801758
    4. 'erat' → logprob: -7.301546096801758
    5. '_er' → logprob: -9.426546096801758
    6. '(' → logprob: -10.551546096801758
    7. '_s' → logprob: -10.676546096801758
    8. 'Er' → logprob: -10.801546096801758
    9. '```' → logprob: -11.176546096801758
    10. 's' → logprob: -11.551546096801758

Token 108: 'erat' (ID: 73282)
  Prédit: 'erat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erat' → logprob: -0.00047202190035022795
    2. 'E' → logprob: -8.250472068786621
    3. 'eras' → logprob: -9.500472068786621
    4. 'er' → logprob: -10.000472068786621
    5. ' erat' → logprob: -10.000472068786621
    6. 'Er' → logprob: -10.625472068786621
    7. 'erad' → logprob: -12.000472068786621
    8. 'eris' → logprob: -13.125472068786621
    9. ' Er' → logprob: -13.250472068786621
    10. 'erap' → logprob: -13.500472068786621

Token 109: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0072858501225709915
    2. 'osten' → logprob: -5.507286071777344
    3. 'os' → logprob: -6.007286071777344
    4. 'oth' → logprob: -8.757286071777344
    5. ' ost' → logprob: -8.882286071777344
    6. 'osen' → logprob: -9.132286071777344
    7. 'o' → logprob: -10.132286071777344
    8. 'hen' → logprob: -10.507286071777344
    9. 'oten' → logprob: -10.507286071777344
    10. 'ot' → logprob: -10.757286071777344

Token 110: 'hen' (ID: 5447)
  Prédit: 'enes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enes' → logprob: -0.31302446126937866
    2. 'es' → logprob: -1.5630245208740234
    3. 'o' → logprob: -3.8130245208740234
    4. 'esen' → logprob: -4.063024520874023
    5. 'hen' → logprob: -4.313024520874023
    6. 'osen' → logprob: -6.563024520874023
    7. 'oes' → logprob: -6.813024520874023
    8. 'ost' → logprob: -7.563024520874023
    9. 'ogen' → logprob: -7.688024520874023
    10. 'e' → logprob: -7.813024520874023

Token 111: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -17.125
    3. 'is' → logprob: -17.375
    4. 'enes' → logprob: -17.375
    5. 'esen' → logprob: -17.5
    6. 's' → logprob: -17.5
    7. '```' → logprob: -17.875
    8. 'ese' → logprob: -18.375
    9. '
' → logprob: -18.5
    10. '``' → logprob: -19.125

Token 112: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38713017106056213
    2. '(n' → logprob: -1.1371301412582397
    3. ' (' → logprob: -9.012129783630371
    4. '(N' → logprob: -9.512129783630371
    5. '(num' → logprob: -10.762129783630371
    6. '(size' → logprob: -11.762129783630371
    7. '(length' → logprob: -12.137129783630371
    8. '(limit' → logprob: -12.262129783630371
    9. '(len' → logprob: -12.387129783630371
    10. '(k' → logprob: -12.887129783630371

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26553255319595337
    2. '(n' → logprob: -2.1405324935913086
    3. ')' → logprob: -2.6405324935913086
    4. '(' → logprob: -3.1405324935913086
    5. ':' → logprob: -7.765532493591309
    6. '_' → logprob: -9.015532493591309
    7. '():' → logprob: -9.140532493591309
    8. ' ):' → logprob: -9.640532493591309
    9. '(a' → logprob: -9.890532493591309
    10. '(num' → logprob: -10.140532493591309

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005593468667939305
    2. '<|end|>' → logprob: -8.12555980682373
    3. ' ' → logprob: -9.87555980682373
    4. ' sieve' → logprob: -10.00055980682373
    5. 's' → logprob: -10.62555980682373
    6. '    ' → logprob: -11.00055980682373
    7. '```' → logprob: -11.12555980682373
    8. 'n' → logprob: -11.37555980682373
    9. '    
' → logprob: -11.50055980682373
    10. 'import' → logprob: -11.75055980682373

Token 115: ' if' (ID: 538)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -1.2108581066131592
    2. '   ' → logprob: -1.4608581066131592
    3. ' primes' → logprob: -1.4608581066131592
    4. 'pr' → logprob: -1.9608581066131592
    5. ' prime' → logprob: -3.585858106613159
    6. 'is' → logprob: -3.710858106613159
    7. ' is' → logprob: -3.710858106613159
    8. ' sieve' → logprob: -4.085858345031738
    9. 's' → logprob: -5.960858345031738
    10. ' ' → logprob: -7.460858345031738

Token 116: ' type' (ID: 1490)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.038057904690504074
    2. 'n' → logprob: -3.288057804107666
    3. '	n' → logprob: -11.288058280944824
    4. ' ' → logprob: -12.788058280944824
    5. ' ' → logprob: -14.288058280944824
    6. '  ' → logprob: -16.038057327270508
    7. '   ' → logprob: -16.163057327270508
    8. ')n' → logprob: -16.288057327270508
    9. ' not' → logprob: -17.038057327270508
    10. '(n' → logprob: -17.288057327270508

Token 117: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016044458374381065
    2. '(' → logprob: -4.141044616699219
    3. ' (' → logprob: -12.016044616699219
    4. '(not' → logprob: -13.516044616699219
    5. 'n' → logprob: -13.891044616699219
    6. ' n' → logprob: -14.641044616699219
    7. '(
' → logprob: -15.141044616699219
    8. '(int' → logprob: -15.266044616699219
    9. '(x' → logprob: -15.516044616699219
    10. '(i' → logprob: -15.891044616699219

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07541698962450027
    2. '!=' → logprob: -3.5754170417785645
    3. ' !=' → logprob: -4.4504170417785645
    4. ' is' → logprob: -4.5754170417785645
    5. '()' → logprob: -5.3254170417785645
    6. ')!=' → logprob: -5.3254170417785645
    7. ' )' → logprob: -5.4504170417785645
    8. 'is' → logprob: -5.8254170417785645
    9. '==' → logprob: -5.8254170417785645
    10. '(' → logprob: -7.2004170417785645

Token 119: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5153384208679199
    2. ' !=' → logprob: -1.89033842086792
    3. ' is' → logprob: -2.14033842086792
    4. '==' → logprob: -2.26533842086792
    5. 'is' → logprob: -4.01533842086792
    6. ' ==' → logprob: -5.51533842086792
    7. '()!=' → logprob: -5.76533842086792
    8. '(' → logprob: -6.14033842086792
    9. ' ' → logprob: -6.89033842086792
    10. '()' → logprob: -7.51533842086792

Token 120: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019288709154352546
    2. ' int' → logprob: -6.251928806304932
    3. '(int' → logprob: -15.87692928314209
    4. '<int' → logprob: -16.876928329467773
    5. '=int' → logprob: -17.001928329467773
    6. '```' → logprob: -17.251928329467773
    7. ' ' → logprob: -18.251928329467773
    8. '  ' → logprob: -18.751928329467773
    9. '[int' → logprob: -18.876928329467773
    10. '	int' → logprob: -19.001928329467773

Token 121: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0012405868619680405
    2. 'or' → logprob: -6.7512407302856445
    3. ':' → logprob: -10.001240730285645
    4. ' ' → logprob: -11.626240730285645
    5. '<|end|>' → logprob: -11.876240730285645
    6. '   ' → logprob: -12.751240730285645
    7. ' :' → logprob: -13.251240730285645
    8. '	or' → logprob: -13.376240730285645
    9. ' and' → logprob: -13.501240730285645
    10. '<|end|>' → logprob: -15.001240730285645

Token 122: '       ' (ID: 309)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0023818304762244225
    2. 'or' → logprob: -6.502381801605225
    3. '   ' → logprob: -7.502381801605225
    4. ' ' → logprob: -8.252382278442383
    5. '    ' → logprob: -9.877382278442383
    6. '  ' → logprob: -12.502382278442383
    7. ':' → logprob: -12.752382278442383
    8. '<|end|>' → logprob: -13.127382278442383
    9. '	or' → logprob: -13.752382278442383
    10. ' n' → logprob: -13.752382278442383

Token 123: ' raise' (ID: 9338)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07223872095346451
    2. 'return' → logprob: -2.9472386837005615
    3. '   ' → logprob: -4.322238922119141
    4. ':return' → logprob: -5.947238922119141
    5. ' raise' → logprob: -7.072238922119141
    6. '    ' → logprob: -8.69723892211914
    7. 'raise' (adapté à ' raise') → logprob: -8.94723892211914
    8. ' ' → logprob: -9.69723892211914
    9. '	return' → logprob: -10.44723892211914
    10. ' n' → logprob: -10.94723892211914

Token 124: ' Type' (ID: 7003)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.426871657371521
    2. 'Value' → logprob: -1.176871657371521
    3. 'Type' → logprob: -3.4268717765808105
    4. ' Type' → logprob: -5.0518717765808105
    5. '(Value' → logprob: -8.676871299743652
    6. '<|end|>' → logprob: -9.176871299743652
    7. '(Type' → logprob: -10.801871299743652
    8. ' ' → logprob: -11.676871299743652
    9. '	Value' → logprob: -11.801871299743652
    10. ' value' → logprob: -12.426871299743652

Token 125: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'Value' → logprob: -18.75
    3. 'rror' → logprob: -19.125
    4. 'Er' → logprob: -20.5
    5. 'Erro' → logprob: -20.75
    6. '```' → logprob: -21.125
    7. '[' → logprob: -21.375
    8. 'Warning' → logprob: -22.125
    9. '	Error' → logprob: -22.25
    10. 'Errors' → logprob: -22.5

Token 126: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.003358324058353901
    2. '(' → logprob: -5.753358364105225
    3. '('' → logprob: -8.753357887268066
    4. '("'' → logprob: -11.753357887268066
    5. '("")' → logprob: -12.378357887268066
    6. '(f' → logprob: -12.628357887268066
    7. '()' → logprob: -13.128357887268066
    8. '("\' → logprob: -13.753357887268066
    9. '(":' → logprob: -14.003357887268066
    10. '(",' → logprob: -14.128357887268066

Token 127: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2727351784706116
    2. '"' → logprob: -1.8977351188659668
    3. 'Input' → logprob: -2.522735118865967
    4. 'The' → logprob: -6.147735118865967
    5. ' n' → logprob: -6.272735118865967
    6. '")' → logprob: -6.647735118865967
    7. 'Expected' → logprob: -6.647735118865967
    8. ''' → logprob: -7.272735118865967
    9. 'Argument' → logprob: -8.147735595703125
    10. 'Invalid' → logprob: -8.647735595703125

Token 128: ' is' (ID: 382)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0045447577722370625
    2. ' should' → logprob: -5.754544734954834
    3. 'must' → logprob: -6.629544734954834
    4. ' is' → logprob: -11.504545211791992
    5. 'should' → logprob: -11.629545211791992
    6. ' ' → logprob: -11.754545211791992
    7. ' <=' → logprob: -12.254545211791992
    8. ' debe' → logprob: -12.879545211791992
    9. 'Must' → logprob: -13.129545211791992
    10. ' должен' → logprob: -13.379545211791992

Token 129: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2525584399700165
    2. 'not' → logprob: -1.5025584697723389
    3. 'int' → logprob: -8.127558708190918
    4. 'must' → logprob: -9.502558708190918
    5. ' must' → logprob: -9.877558708190918
    6. 'should' → logprob: -10.002558708190918
    7. ' an' → logprob: -10.627558708190918
    8. ' should' → logprob: -10.877558708190918
    9. 'an' → logprob: -11.002558708190918
    10. ' ' → logprob: -11.127558708190918

Token 130: ' int' (ID: 677)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.009754669852554798
    2. ' int' → logprob: -5.634754657745361
    3. 'int' → logprob: -5.759754657745361
    4. 'an' → logprob: -5.884754657745361
    5. ' a' → logprob: -9.13475513458252
    6. ' integer' → logprob: -9.63475513458252
    7. ' of' → logprob: -11.25975513458252
    8. '	an' → logprob: -11.88475513458252
    9. ' ' → logprob: -12.25975513458252
    10. 'integer' → logprob: -13.63475513458252

Token 131: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00019245444855187088
    2. '")
' → logprob: -9.125192642211914
    3. ' or' → logprob: -10.000192642211914
    4. ' ")' → logprob: -10.500192642211914
    5. '"' → logprob: -12.875192642211914
    6. '!")' → logprob: -13.000192642211914
    7. '.")' → logprob: -13.250192642211914
    8. ')")' → logprob: -14.125192642211914
    9. ':' → logprob: -14.375192642211914
    10. ')' → logprob: -14.500192642211914

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021264072507619858
    2. '
' → logprob: -4.27126407623291
    3. '<|end|>' → logprob: -5.27126407623291
    4. '    
' → logprob: -6.52126407623291
    5. '<|end|>' → logprob: -8.27126407623291
    6. '  
' → logprob: -9.64626407623291
    7. 'n' → logprob: -10.52126407623291
    8. ' if' → logprob: -10.77126407623291
    9. 'def' → logprob: -10.89626407623291
    10. '```' → logprob: -11.14626407623291

Token 133: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7007700204849243
    2. ' if' → logprob: -1.0757700204849243
    3. 'if' (adapté à ' if') → logprob: -2.5757699012756348
    4. '    
' → logprob: -3.0757699012756348
    5. '
' → logprob: -3.4507699012756348
    6. 'n' → logprob: -6.325769901275635
    7. 's' → logprob: -6.325769901275635
    8. '  
' → logprob: -6.325769901275635
    9. ' 
' → logprob: -6.575769901275635
    10. '   
' → logprob: -7.575769901275635

Token 134: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31505024433135986
    2. 'n' → logprob: -1.3150502443313599
    3. ' not' → logprob: -6.56505012512207
    4. 'not' → logprob: -8.19005012512207
    5. ' ' → logprob: -10.31505012512207
    6. '(n' → logprob: -11.06505012512207
    7. '	n' → logprob: -11.19005012512207
    8. 'n't' → logprob: -11.56505012512207
    9. ' ' → logprob: -12.00255012512207
    10. ' type' → logprob: -12.25255012512207

Token 135: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20788922905921936
    2. '<' → logprob: -1.707889199256897
    3. ' <=' → logprob: -5.332889080047607
    4. '<=' → logprob: -6.457889080047607
    5. ' ' → logprob: -10.332889556884766
    6. '==' → logprob: -11.957889556884766
    7. '<int' → logprob: -12.332889556884766
    8. '<n' → logprob: -12.707889556884766
    9. ' ==' → logprob: -12.832889556884766
    10. '<len' → logprob: -13.582889556884766

Token 136: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027893532067537308
    2. ' ' → logprob: -3.777893543243408
    3. '0' → logprob: -5.402893543243408
    4. '=' → logprob: -9.40289306640625
    5. '1' → logprob: -10.15289306640625
    6. '   ' → logprob: -12.71539306640625
    7. '```' → logprob: -13.15289306640625
    8. '  ' → logprob: -13.46539306640625
    9. ' =' → logprob: -13.59039306640625
    10. '(' → logprob: -13.65289306640625

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00292018405161798
    2. '0' → logprob: -5.877920150756836
    3. ' ' → logprob: -9.752920150756836
    4. '1' → logprob: -9.877920150756836
    5. '=' → logprob: -13.502920150756836
    6. '   ' → logprob: -13.627920150756836
    7. '```' → logprob: -13.627920150756836
    8. '3' → logprob: -14.252920150756836
    9. '-' → logprob: -14.752920150756836
    10. '(' → logprob: -15.565420150756836

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1765083372592926
    2. ':
' → logprob: -1.9265083074569702
    3. '   ' → logprob: -4.67650842666626
    4. '       ' → logprob: -5.17650842666626
    5. ':return' → logprob: -7.30150842666626
    6. ' or' → logprob: -8.176507949829102
    7. ' :' → logprob: -9.051507949829102
    8. ' :
' → logprob: -9.676507949829102
    9. '):
' → logprob: -11.301507949829102
    10. ',' → logprob: -11.551507949829102

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04165562987327576
    2. '   ' → logprob: -3.2916555404663086
    3. ' return' → logprob: -6.041655540466309
    4. ':' → logprob: -8.041655540466309
    5. 'return' → logprob: -8.291655540466309
    6. ':return' → logprob: -8.541655540466309
    7. '<|end|>' → logprob: -8.916655540466309
    8. '        
' → logprob: -9.791655540466309
    9. '
' → logprob: -9.791655540466309
    10. '    
' → logprob: -10.166655540466309

Token 140: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10985956341028214
    2. ' return' → logprob: -2.3598594665527344
    3. '   ' → logprob: -4.859859466552734
    4. '       ' → logprob: -6.734859466552734
    5. '[]' → logprob: -7.609859466552734
    6. '	return' → logprob: -9.359859466552734
    7. ' ' → logprob: -10.609859466552734
    8. ':return' → logprob: -10.984859466552734
    9. '  ' → logprob: -11.484859466552734
    10. '[]
' → logprob: -11.859859466552734

Token 141: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.001051507773809135
    2. ' Value' → logprob: -6.876051425933838
    3. '	Value' → logprob: -12.251051902770996
    4. 'value' → logprob: -12.501051902770996
    5. '(Value' → logprob: -12.626051902770996
    6. '"value' → logprob: -13.126051902770996
    7. '_Value' → logprob: -13.501051902770996
    8. '.Value' → logprob: -14.126051902770996
    9. '<Value' → logprob: -14.126051902770996
    10. '```' → logprob: -14.501051902770996

Token 142: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0002100965939462185
    2. 'rror' → logprob: -8.75020980834961
    3. 'Value' → logprob: -9.87520980834961
    4. 'ror' → logprob: -16.37520980834961
    5. 'SError' → logprob: -17.00020980834961
    6. 'alue' → logprob: -17.37520980834961
    7. 'Warning' → logprob: -17.37520980834961
    8. 'n' → logprob: -17.50020980834961
    9. 'Val' → logprob: -18.12520980834961
    10. 'LError' → logprob: -18.62520980834961

Token 143: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011720098555088043
    2. '(' → logprob: -6.751172065734863
    3. '('' → logprob: -13.876172065734863
    4. '("")' → logprob: -14.626172065734863
    5. '("'' → logprob: -15.626172065734863
    6. ' ("' → logprob: -16.001171112060547
    7. '(
' → logprob: -16.626171112060547
    8. '("("' → logprob: -16.751171112060547
    9. '()' → logprob: -17.876171112060547
    10. '(">' → logprob: -18.126171112060547

Token 144: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011257786303758621
    2. '"' → logprob: -5.261257648468018
    3. ' n' → logprob: -5.636257648468018
    4. 'Input' → logprob: -6.511257648468018
    5. 'Value' → logprob: -8.136258125305176
    6. 'Number' → logprob: -8.511258125305176
    7. 'Minimum' → logprob: -8.511258125305176
    8. 'Invalid' → logprob: -10.261258125305176
    9. 'The' → logprob: -10.386258125305176
    10. '")' → logprob: -10.511258125305176

Token 145: ' <' (ID: 464)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.18953007459640503
    2. ' <' → logprob: -2.43953013420105
    3. ' should' → logprob: -2.56453013420105
    4. ' is' → logprob: -5.814529895782471
    5. 'must' → logprob: -5.814529895782471
    6. '<' → logprob: -6.939529895782471
    7. ' less' → logprob: -7.564529895782471
    8. 'should' → logprob: -7.814529895782471
    9. ' ' → logprob: -8.064530372619629
    10. ' too' → logprob: -9.439530372619629

Token 146: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10021745413541794
    2. ' ' → logprob: -2.350217342376709
    3. '```' → logprob: -12.475217819213867
    4. '  ' → logprob: -13.225217819213867
    5. '   ' → logprob: -13.350217819213867
    6. '
' → logprob: -14.100217819213867
    7. '0' → logprob: -14.350217819213867
    8. ' ' → logprob: -15.100217819213867
    9. '<|end|>' → logprob: -15.162717819213867
    10. '3' → logprob: -15.600217819213867

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012451570364646614
    2. ' ' → logprob: -9.00012493133545
    3. '```' → logprob: -15.06262493133545
    4. '0' → logprob: -15.56262493133545
    5. '1' → logprob: -16.437623977661133
    6. '   ' → logprob: -17.062623977661133
    7. '"' → logprob: -17.125123977661133
    8. '  ' → logprob: -17.125123977661133
    9. '
' → logprob: -17.187623977661133
    10. '۲' → logprob: -17.375123977661133

Token 148: ' is' (ID: 382)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02977987565100193
    2. '")
' → logprob: -3.5297799110412598
    3. '")
' → logprob: -11.529779434204102
    4. ')' → logprob: -12.279779434204102
    5. '")

' → logprob: -12.779779434204102
    6. ' ")' → logprob: -12.779779434204102
    7. ')")' → logprob: -13.029779434204102
    8. '"' → logprob: -13.279779434204102
    9. 'def' → logprob: -13.404779434204102
    10. ':' → logprob: -14.279779434204102

Token 149: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08154097199440002
    2. 'not' → logprob: -2.581541061401367
    3. ' True' → logprob: -6.956541061401367
    4. ' invalid' → logprob: -7.331541061401367
    5. 'invalid' → logprob: -7.581541061401367
    6. 'True' → logprob: -7.706541061401367
    7. 'true' → logprob: -10.456541061401367
    8. ' true' → logprob: -11.456541061401367
    9. 'unsupported' → logprob: -11.831541061401367
    10. 'allowed' → logprob: -12.081541061401367

Token 150: ' effective' (ID: 8488)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.30324843525886536
    2. ' allowed' → logprob: -1.428248405456543
    3. ' valid' → logprob: -4.178248405456543
    4. 'valid' → logprob: -5.553248405456543
    5. 'supported' → logprob: -6.928248405456543
    6. 'acceptable' → logprob: -7.928248405456543
    7. ' ' → logprob: -8.428248405456543
    8. ' acceptable' → logprob: -8.428248405456543
    9. 'accepted' → logprob: -8.553248405456543
    10. ' supported' → logprob: -8.928248405456543

Token 151: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.040578026324510574
    2. ' for' → logprob: -3.2905781269073486
    3. '")
' → logprob: -6.4155778884887695
    4. 'for' → logprob: -7.9155778884887695
    5. ' ")' → logprob: -8.04057788848877
    6. '.")' → logprob: -9.41557788848877
    7. ' to' → logprob: -9.91557788848877
    8. '"' → logprob: -10.66557788848877
    9. ')' → logprob: -11.04057788848877
    10. 'def' → logprob: -12.29057788848877

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001923279371112585
    2. '<|end|>' → logprob: -7.001923084259033
    3. '    
' → logprob: -7.376923084259033
    4. 'n' → logprob: -8.876923561096191
    5. '<|end|>' → logprob: -9.376923561096191
    6. 'def' → logprob: -10.001923561096191
    7. '
' → logprob: -10.501923561096191
    8. 's' → logprob: -11.251923561096191
    9. '  
' → logprob: -11.501923561096191
    10. ' for' → logprob: -11.626923561096191

Token 153: ' prime' (ID: 9197)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3969864249229431
    2. ' sieve' → logprob: -1.771986484527588
    3. 's' → logprob: -2.771986484527588
    4. 'prime' (adapté à ' prime') → logprob: -3.146986484527588
    5. 'pr' → logprob: -3.896986484527588
    6. ' primes' → logprob: -4.146986484527588
    7. 'is' → logprob: -5.646986484527588
    8. ' is' → logprob: -5.646986484527588
    9. 'dp' → logprob: -5.771986484527588
    10. ' prime' → logprob: -6.021986484527588

Token 154: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09073953330516815
    2. ' =' → logprob: -2.4657394886016846
    3. '=' → logprob: -6.465739727020264
    4. 'es' → logprob: -9.590739250183105
    5. '_numbers' → logprob: -9.965739250183105
    6. '_list' → logprob: -10.090739250183105
    7. '_flags' → logprob: -10.465739250183105
    8. '   ' → logprob: -11.340739250183105
    9. '=[' → logprob: -11.465739250183105
    10. ' ' → logprob: -11.840739250183105

Token 155: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008271370315924287
    2. ' [' → logprob: -7.125827312469482
    3. '[n' → logprob: -10.875826835632324
    4. '[int' → logprob: -14.250826835632324
    5. '   ' → logprob: -14.625826835632324
    6. '[s' → logprob: -15.000826835632324
    7. '[Math' → logprob: -15.000826835632324
    8. '[len' → logprob: -15.250826835632324
    9. '[new' → logprob: -15.500826835632324
    10. '[a' → logprob: -15.500826835632324

Token 156: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.2603901015827432e-05
    2. ' True' → logprob: -10.750022888183594
    3. 'False' → logprob: -14.250022888183594
    4. '(True' → logprob: -14.750022888183594
    5. '   ' → logprob: -16.000022888183594
    6. '1' → logprob: -17.250022888183594
    7. 'Tr' → logprob: -18.625022888183594
    8. '=True' → logprob: -20.125022888183594
    9. '0' → logprob: -20.500022888183594
    10. ']' → logprob: -20.500022888183594

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038086227141320705
    2. ']*' → logprob: -5.753808498382568
    3. ']*(' → logprob: -8.128808975219727
    4. ' for' → logprob: -8.503808975219727
    5. ' ]' → logprob: -9.253808975219727
    6. ',' → logprob: -10.378808975219727
    7. ' ' → logprob: -13.378808975219727
    8. '   ' → logprob: -13.378808975219727
    9. ')' → logprob: -14.378808975219727
    10. ' *' → logprob: -14.378808975219727

Token 158: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038450177758932114
    2. ']*' → logprob: -3.413450241088867
    3. ']*(' → logprob: -5.913450241088867
    4. '*' → logprob: -6.913450241088867
    5. ' for' → logprob: -7.538450241088867
    6. 'for' → logprob: -7.663450241088867
    7. ',' → logprob: -9.413450241088867
    8. '0' → logprob: -13.038450241088867
    9. ']+' → logprob: -13.038450241088867
    10. '*(' → logprob: -13.163450241088867

Token 159: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003799104888457805
    2. ' (' → logprob: -8.37537956237793
    3. '(' → logprob: -9.12537956237793
    4. 'n' → logprob: -10.12537956237793
    5. '(len' → logprob: -15.25037956237793
    6. '((' → logprob: -16.75037956237793
    7. ' n' → logprob: -17.50037956237793
    8. '(max' → logprob: -17.62537956237793
    9. '(
' → logprob: -17.75037956237793
    10. '(nn' → logprob: -18.00037956237793

Token 160: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006177236791700125
    2. '(n' → logprob: -7.500617504119873
    3. ' n' → logprob: -9.750617980957031
    4. ' (' → logprob: -12.125617980957031
    5. '(' → logprob: -14.125617980957031
    6. '	n' → logprob: -15.375617980957031
    7. '   ' → logprob: -15.750617980957031
    8. ' ' → logprob: -18.50061798095703
    9. ')n' → logprob: -18.75061798095703
    10. '```' → logprob: -19.12561798095703

Token 161: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003178071230649948
    2. ' +' → logprob: -5.753178119659424
    3. '+
' → logprob: -15.503177642822266
    4. ' ' → logprob: -16.878177642822266
    5. '＋' → logprob: -17.253177642822266
    6. '+n' → logprob: -17.253177642822266
    7. '   ' → logprob: -17.628177642822266
    8. '+)' → logprob: -18.003177642822266
    9. '1' → logprob: -18.128177642822266
    10. ' plus' → logprob: -18.128177642822266

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '2' → logprob: -17.75037956237793
    4. '１' → logprob: -17.87537956237793
    5. '   ' → logprob: -18.37537956237793
    6. '  ' → logprob: -18.62537956237793
    7. '```' → logprob: -18.87537956237793
    8. '7' → logprob: -19.06287956237793
    9. '۱' → logprob: -19.43787956237793
    10. '0' → logprob: -20.37537956237793

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.87500762939453
    4. '2' → logprob: -17.50000762939453
    5. '１' → logprob: -18.25000762939453
    6. '7' → logprob: -18.43750762939453
    7. '   ' → logprob: -18.50000762939453
    8. '0' → logprob: -18.87500762939453
    9. '۱' → logprob: -19.00000762939453
    10. '' → logprob: -19.18750762939453

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018232580623589456
    2. ')
' → logprob: -8.625182151794434
    3. ' )' → logprob: -13.375182151794434
    4. ')

' → logprob: -13.875182151794434
    5. ')
' → logprob: -16.62518310546875
    6. ')#' → logprob: -17.25018310546875
    7. '#' → logprob: -17.87518310546875
    8. '))' → logprob: -18.00018310546875
    9. '),' → logprob: -18.50018310546875
    10. ']' → logprob: -18.50018310546875

Token 165: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10874760895967484
    2. '<|end|>' → logprob: -2.983747720718384
    3. '   ' → logprob: -3.483747720718384
    4. ' 
' → logprob: -5.358747482299805
    5. '  
' → logprob: -5.483747482299805
    6. '    
' → logprob: -5.608747482299805
    7. ' ' → logprob: -5.608747482299805
    8. '[' → logprob: -5.858747482299805
    9. '\n' → logprob: -7.733747482299805
    10. '
' → logprob: -7.733747482299805

Token 166: ' for' (ID: 395)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0006637069745920599
    2. ' prime' → logprob: -7.625663757324219
    3. '   ' → logprob: -9.125663757324219
    4. '2' → logprob: -10.250663757324219
    5. ' ' → logprob: -12.000663757324219
    6. 'p' → logprob: -12.500663757324219
    7. 'for' (adapté à ' for') → logprob: -12.625663757324219
    8. 'import' → logprob: -12.625663757324219
    9. '
' → logprob: -12.625663757324219
    10. '_prime' → logprob: -13.000663757324219

Token 167: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03906600549817085
    2. 'p' → logprob: -3.4140660762786865
    3. ' i' → logprob: -5.289065837860107
    4. ' p' → logprob: -8.039066314697266
    5. '2' → logprob: -10.414066314697266
    6. ' ' → logprob: -13.039066314697266
    7. 'x' → logprob: -13.789066314697266
    8. '	i' → logprob: -13.914066314697266
    9. '   ' → logprob: -14.039066314697266
    10. 'j' → logprob: -14.164066314697266

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043561309576034546
    2. 'in' → logprob: -3.1685612201690674
    3. ' ' → logprob: -7.6685614585876465
    4. 'n' → logprob: -10.043560981750488
    5. '=' → logprob: -11.293560981750488
    6. '  ' → logprob: -11.668560981750488
    7. '   ' → logprob: -12.168560981750488
    8. 'range' → logprob: -12.293560981750488
    9. 'space' → logprob: -12.668560981750488
    10. '2' → logprob: -12.793560981750488

Token 169: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.313268780708313
    2. 'range' → logprob: -1.313268780708313
    3. '2' → logprob: -12.313268661499023
    4. '	range' → logprob: -13.813268661499023
    5. ' ' → logprob: -13.938268661499023
    6. '(range' → logprob: -15.313268661499023
    7. ' xrange' → logprob: -15.688268661499023
    8. '[' → logprob: -16.188268661499023
    9. '.range' → logprob: -17.688268661499023
    10. ' in' → logprob: -17.813268661499023

Token 170: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011107826605439186
    2. '(' → logprob: -4.511107921600342
    3. ' ' → logprob: -9.761107444763184
    4. '   ' → logprob: -13.761107444763184
    5. '```' → logprob: -15.261107444763184
    6. '	' → logprob: -15.886107444763184
    7. ' (' → logprob: -16.0111083984375
    8. '    ' → logprob: -16.3861083984375
    9. '[' → logprob: -16.6361083984375
    10. '...' → logprob: -16.6986083984375

Token 171: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.000032424926758
    4. '(' → logprob: -15.125032424926758
    5. '	' → logprob: -16.500032424926758
    6. '２' → logprob: -16.875032424926758
    7. '    ' → logprob: -17.000032424926758
    8. '  ' → logprob: -17.125032424926758
    9. 'int' → logprob: -17.125032424926758
    10. '```' → logprob: -17.125032424926758

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009926547296345234
    2. ' ,' → logprob: -4.6349263191223145
    3. '   ' → logprob: -9.509926795959473
    4. ',n' → logprob: -9.634926795959473
    5. ' ' → logprob: -11.009926795959473
    6. ',int' → logprob: -12.759926795959473
    7. '(' → logprob: -13.134926795959473
    8. '(n' → logprob: -13.134926795959473
    9. ',i' → logprob: -13.384926795959473
    10. '2' → logprob: -13.634926795959473

Token 173: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02341446280479431
    2. ' int' → logprob: -3.773414373397827
    3. 'math' → logprob: -8.898414611816406
    4. '   ' → logprob: -11.148414611816406
    5. ' math' → logprob: -11.523414611816406
    6. '(int' → logprob: -12.398414611816406
    7. '	int' → logprob: -13.148414611816406
    8. ' ' → logprob: -13.898414611816406
    9. '    ' → logprob: -15.273414611816406
    10. 'n' → logprob: -15.398414611816406

Token 174: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.03529873490333557
    2. '(n' → logprob: -3.4102988243103027
    3. ' math' → logprob: -7.160298824310303
    4. '(' → logprob: -7.785298824310303
    5. 'math' → logprob: -7.785298824310303
    6. ' (' → logprob: -10.535298347473145
    7. '((' → logprob: -12.285298347473145
    8. 'n' → logprob: -12.660298347473145
    9. '(m' → logprob: -12.785298347473145
    10. '   ' → logprob: -13.785298347473145

Token 175: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0552312470972538
    2. '.' → logprob: -2.9302313327789307
    3. '.math' → logprob: -8.805231094360352
    4. '(math' → logprob: -9.430231094360352
    5. 'sqrt' → logprob: -10.055231094360352
    6. '.is' → logprob: -10.430231094360352
    7. '.ceil' → logprob: -11.430231094360352
    8. ' .' → logprob: -11.805231094360352
    9. '.s' → logprob: -12.055231094360352
    10. '.n' → logprob: -12.180231094360352

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01241664681583643
    2. '(' → logprob: -4.512416839599609
    3. '(i' → logprob: -7.262416839599609
    4. 'n' → logprob: -7.387416839599609
    5. ' (' → logprob: -10.88741683959961
    6. '(
' → logprob: -11.38741683959961
    7. ' n' → logprob: -11.76241683959961
    8. ' ' → logprob: -13.01241683959961
    9. 'i' → logprob: -13.13741683959961
    10. '(math' → logprob: -13.26241683959961

Token 177: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3078797161579132
    2. '(' → logprob: -2.432879686355591
    3. '(n' → logprob: -2.432879686355591
    4. '())' → logprob: -2.682879686355591
    5. ')+' → logprob: -4.05787992477417
    6. '()' → logprob: -6.05787992477417
    7. '(i' → logprob: -7.05787992477417
    8. '2' → logprob: -8.557879447937012
    9. ' )' → logprob: -9.057879447937012
    10. ' (' → logprob: -10.182879447937012

Token 178: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22445771098136902
    2. ' +' → logprob: -1.7244577407836914
    3. ')' → logprob: -4.224457740783691
    4. ')+' → logprob: -5.724457740783691
    5. '()' → logprob: -5.849457740783691
    6. '   ' → logprob: -7.099457740783691
    7. '()+' → logprob: -7.474457740783691
    8. '(' → logprob: -8.099457740783691
    9. ' ' → logprob: -8.474457740783691
    10. '(n' → logprob: -10.974457740783691

Token 179: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22711969912052155
    2. ' +' → logprob: -1.6021196842193604
    3. ' ' → logprob: -7.2271199226379395
    4. '   ' → logprob: -7.4771199226379395
    5. '+i' → logprob: -9.102119445800781
    6. '    ' → logprob: -9.352119445800781
    7. ' i' → logprob: -9.352119445800781
    8. '2' → logprob: -9.727119445800781
    9. '1' → logprob: -10.852119445800781
    10. '  ' → logprob: -11.352119445800781

Token 180: ' if' (ID: 538)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03024376556277275
    2. 'i' → logprob: -4.155243873596191
    3. '   ' → logprob: -5.280243873596191
    4. ' ' → logprob: -5.655243873596191
    5. '+' → logprob: -6.155243873596191
    6. '    ' → logprob: -7.030243873596191
    7. '2' → logprob: -7.155243873596191
    8. ' +' → logprob: -7.655243873596191
    9. ' if' → logprob: -8.155243873596191
    10. '  ' → logprob: -8.280243873596191

Token 181: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.20143857598304749
    2. ' prime' → logprob: -1.701438546180725
    3. 'n' → logprob: -11.951438903808594
    4. ' ' → logprob: -12.451438903808594
    5. 'pr' → logprob: -12.451438903808594
    6. ' not' → logprob: -12.826438903808594
    7. '_prime' → logprob: -13.201438903808594
    8. 'not' → logprob: -13.826438903808594
    9. 'i' → logprob: -13.951438903808594
    10. 'prim' → logprob: -13.951438903808594

Token 182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.125006675720215
    3. 'i' → logprob: -14.250006675720215
    4. ' [' → logprob: -14.625006675720215
    5. '[I' → logprob: -16.25000762939453
    6. '[
' → logprob: -18.25000762939453
    7. '[j' → logprob: -18.37500762939453
    8. '\[' → logprob: -18.50000762939453
    9. ' i' → logprob: -18.62500762939453
    10. '```' → logprob: -19.37500762939453

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14813055098056793
    2. ']:' → logprob: -2.2731306552886963
    3. ']==' → logprob: -3.3981306552886963
    4. ']:
' → logprob: -6.898130416870117
    5. ' ]' → logprob: -8.773130416870117
    6. ']:

' → logprob: -10.023130416870117
    7. '[' → logprob: -11.148130416870117
    8. '==' → logprob: -11.273130416870117
    9. ']:
' → logprob: -12.023130416870117
    10. '   ' → logprob: -13.148130416870117

Token 184: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03798766806721687
    2. ' ==' → logprob: -3.41298770904541
    3. ':' → logprob: -5.53798770904541
    4. '=' → logprob: -8.41298770904541
    5. ']==' → logprob: -8.78798770904541
    6. ' :' → logprob: -12.53798770904541
    7. ' ' → logprob: -12.66298770904541
    8. ')==' → logprob: -12.91298770904541
    9. '==
' → logprob: -13.03798770904541
    10. ':
' → logprob: -13.03798770904541

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001764074433594942
    2. ' ' → logprob: -6.501764297485352
    3. '0' → logprob: -8.251764297485352
    4. '  ' → logprob: -14.876764297485352
    5. '   ' → logprob: -15.251764297485352
    6. 'True' → logprob: -16.12676429748535
    7. '<|end|>' → logprob: -16.37676429748535
    8. '    ' → logprob: -16.75176429748535
    9. '=' → logprob: -17.12676429748535
    10. '۱' → logprob: -18.12676429748535

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034416402922943234
    2. ' ' → logprob: -8.500344276428223
    3. '0' → logprob: -8.875344276428223
    4. 'True' → logprob: -15.250344276428223
    5. '  ' → logprob: -15.437844276428223
    6. '   ' → logprob: -15.687844276428223
    7. '=' → logprob: -16.750343322753906
    8. '    ' → logprob: -17.250343322753906
    9. '۱' → logprob: -17.625343322753906
    10. '	' → logprob: -17.750343322753906

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00476214149966836
    2. ':
' → logprob: -5.379762172698975
    3. ' :' → logprob: -9.379761695861816
    4. '):' → logprob: -10.754761695861816
    5. ' and' → logprob: -11.129761695861816
    6. '):
' → logprob: -12.129761695861816
    7. ' :
' → logprob: -12.629761695861816
    8. 'and' → logprob: -12.754761695861816
    9. '   ' → logprob: -12.879761695861816
    10. ':i' → logprob: -13.129761695861816

Token 188: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07285811007022858
    2. '):' → logprob: -3.4478580951690674
    3. ':
' → logprob: -4.4478583335876465
    4. '           ' → logprob: -4.4478583335876465
    5. ' :' → logprob: -5.1978583335876465
    6. '):
' → logprob: -5.4478583335876465
    7. '       ' → logprob: -5.5728583335876465
    8. ' :
' → logprob: -8.197857856750488
    9. '   ' → logprob: -8.447857856750488
    10. ')' → logprob: -8.697857856750488

Token 189: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3990034759044647
    2. ' for' → logprob: -1.149003505706787
    3. 'i' → logprob: -4.774003505706787
    4. '   ' → logprob: -5.899003505706787
    5. ' i' → logprob: -7.899003505706787
    6. '       ' → logprob: -7.899003505706787
    7. ' ' → logprob: -10.149003028869629
    8. '    ' → logprob: -10.774003028869629
    9. '           ' → logprob: -11.149003028869629
    10. '	for' → logprob: -11.149003028869629

Token 190: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1302792727947235
    2. ' j' → logprob: -2.130279302597046
    3. 'range' → logprob: -5.880279064178467
    4. ' range' → logprob: -7.505279064178467
    5. ' ' → logprob: -14.005279541015625
    6. '	j' → logprob: -14.880279541015625
    7. '<|end|>' → logprob: -16.755279541015625
    8. '   ' → logprob: -17.005279541015625
    9. 'k' → logprob: -17.005279541015625
    10. '  ' → logprob: -17.255279541015625

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016055602580308914
    2. 'in' → logprob: -4.141055583953857
    3. 'range' → logprob: -11.641056060791016
    4. '=' → logprob: -12.641056060791016
    5. ' ' → logprob: -12.766056060791016
    6. ' i' → logprob: -13.266056060791016
    7. '	in' → logprob: -13.641056060791016
    8. '    ' → logprob: -14.266056060791016
    9. '   ' → logprob: -14.391056060791016
    10. ' =' → logprob: -14.516056060791016

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022899746894836
    2. ' range' → logprob: -1.910228967666626
    3. '(range' → logprob: -13.535228729248047
    4. '	range' → logprob: -13.535228729248047
    5. '   ' → logprob: -14.160228729248047
    6. ' ' → logprob: -14.285228729248047
    7. 'i' → logprob: -15.160228729248047
    8. '  ' → logprob: -15.410228729248047
    9. '    ' → logprob: -16.285228729248047
    10. ' in' → logprob: -16.660228729248047

Token 193: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003003081073984504
    2. '(' → logprob: -8.125300407409668
    3. ' (' → logprob: -12.875300407409668
    4. 'i' → logprob: -14.125300407409668
    5. ' i' → logprob: -14.750300407409668
    6. '(
' → logprob: -15.750300407409668
    7. '((' → logprob: -16.00029945373535
    8. '	i' → logprob: -17.12529945373535
    9. '(ii' → logprob: -17.12529945373535
    10. '(j' → logprob: -17.37529945373535

Token 194: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004160145472269505
    2. ' i' → logprob: -7.875415802001953
    3. '2' → logprob: -11.000415802001953
    4. '   ' → logprob: -11.500415802001953
    5. '(i' → logprob: -12.375415802001953
    6. ' ' → logprob: -13.125415802001953
    7. '	i' → logprob: -13.250415802001953
    8. ')' → logprob: -15.750415802001953
    9. '    ' → logprob: -15.875415802001953
    10. '0' → logprob: -16.000415802001953

Token 195: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2649572193622589
    2. '*i' → logprob: -1.5149571895599365
    3. '*' → logprob: -5.139957427978516
    4. ' *' → logprob: -5.889957427978516
    5. ' ,' → logprob: -6.389957427978516
    6. ',i' → logprob: -6.639957427978516
    7. '*j' → logprob: -6.764957427978516
    8. 'i' → logprob: -9.514957427978516
    9. '   ' → logprob: -10.264957427978516
    10. ',j' → logprob: -11.014957427978516

Token 196: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.829823102336377e-05
    2. ' i' → logprob: -9.25009822845459
    3. '   ' → logprob: -14.12509822845459
    4. 'j' → logprob: -14.12509822845459
    5. ' ' → logprob: -15.50009822845459
    6. '	i' → logprob: -15.50009822845459
    7. '*i' → logprob: -16.750099182128906
    8. '(i' → logprob: -17.000099182128906
    9. '       ' → logprob: -17.125099182128906
    10. '    ' → logprob: -17.750099182128906

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.913265239447355e-05
    2. ' ,' → logprob: -9.875099182128906
    3. ',n' → logprob: -10.500099182128906
    4. ',j' → logprob: -10.875099182128906
    5. 'j' → logprob: -14.750099182128906
    6. ',i' → logprob: -14.750099182128906
    7. 'n' → logprob: -15.500099182128906
    8. '   ' → logprob: -16.375099182128906
    9. ',len' → logprob: -17.000099182128906
    10. ',
' → logprob: -17.250099182128906

Token 198: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048601001501083374
    2. ' n' → logprob: -3.048600912094116
    3. '	n' → logprob: -11.798601150512695
    4. '   ' → logprob: -13.048601150512695
    5. '(n' → logprob: -13.298601150512695
    6. ' ' → logprob: -13.798601150512695
    7. '    ' → logprob: -13.798601150512695
    8. '  ' → logprob: -16.423601150512695
    9. ' (' → logprob: -16.673601150512695
    10. ')n' → logprob: -17.048601150512695

Token 199: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018154505640268326
    2. ' +' → logprob: -4.018154621124268
    3. 'n' → logprob: -13.89315414428711
    4. ',' → logprob: -14.26815414428711
    5. '+
' → logprob: -14.51815414428711
    6. '
' → logprob: -14.64315414428711
    7. '   ' → logprob: -14.76815414428711
    8. '1' → logprob: -14.76815414428711
    9. '+j' → logprob: -15.64315414428711
    10. '+i' → logprob: -15.89315414428711

Token 200: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20356564223766327
    2. ',' → logprob: -2.5785655975341797
    3. 'j' → logprob: -3.2035655975341797
    4. 'n' → logprob: -4.20356559753418
    5. ' +' → logprob: -4.20356559753418
    6. ' j' → logprob: -4.57856559753418
    7. '1' → logprob: -5.82856559753418
    8. ' i' → logprob: -5.82856559753418
    9. '   ' → logprob: -5.95356559753418
    10. ' ,' → logprob: -6.07856559753418

Token 201: ' if' (ID: 538)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.391791433095932
    2. ' j' → logprob: -1.6417914628982544
    3. 'prime' → logprob: -2.141791343688965
    4. ' prime' → logprob: -5.016791343688965
    5. '                   ' → logprob: -6.016791343688965
    6. '               ' → logprob: -6.266791343688965
    7. '   ' → logprob: -7.641791343688965
    8. '           ' → logprob: -8.016791343688965
    9. '                ' → logprob: -8.141791343688965
    10. '+' → logprob: -8.141791343688965

Token 202: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6961523294448853
    2. 'j' → logprob: -0.8211523294448853
    3. 'prime' → logprob: -2.9461522102355957
    4. ' prime' → logprob: -4.821152210235596
    5. 'n' → logprob: -7.571152210235596
    6. ' n' → logprob: -8.071152687072754
    7. '	j' → logprob: -10.071152687072754
    8. '(j' → logprob: -10.446152687072754
    9. ' (' → logprob: -10.696152687072754
    10. ' ' → logprob: -11.071152687072754

Token 203: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.860342800617218
    2. ' <=' → logprob: -1.2353427410125732
    3. '%' → logprob: -1.7353427410125732
    4. '<=' → logprob: -2.2353427410125732
    5. '%n' → logprob: -7.235342979431152
    6. '<|end|>' → logprob: -7.360342979431152
    7. '%i' → logprob: -7.485342979431152
    8. '%s' → logprob: -8.235342979431152
    9. '%d' → logprob: -8.985342979431152
    10. ' <' → logprob: -8.985342979431152

Token 204: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001936962129548192
    2. ' i' → logprob: -6.251936912536621
    3. ' ' → logprob: -12.251936912536621
    4. '0' → logprob: -13.251936912536621
    5. '2' → logprob: -13.876936912536621
    6. '  ' → logprob: -15.001936912536621
    7. '   ' → logprob: -15.251936912536621
    8. '1' → logprob: -15.876936912536621
    9. '	i' → logprob: -15.876936912536621
    10. 'j' → logprob: -16.751937866210938

Token 205: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3135046362876892
    2. ' ==' → logprob: -1.313504695892334
    3. ' !=' → logprob: -9.063504219055176
    4. '=' → logprob: -9.813504219055176
    5. '!=' → logprob: -9.938504219055176
    6. ' ' → logprob: -12.188504219055176
    7. '0' → logprob: -12.188504219055176
    8. '===' → logprob: -12.313504219055176
    9. '==
' → logprob: -12.563504219055176
    10. ')==' → logprob: -12.938504219055176

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '=' → logprob: -17.500139236450195
    4. '   ' → logprob: -17.750139236450195
    5. '  ' → logprob: -18.000139236450195
    6. '<|end|>' → logprob: -18.000139236450195
    7. '۰' → logprob: -18.500139236450195
    8. '==' → logprob: -18.625139236450195
    9. '  ' → logprob: -19.062639236450195
    10. '    ' → logprob: -19.125139236450195

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.500045776367188
    4. 'i' → logprob: -18.500045776367188
    5. '  ' → logprob: -18.500045776367188
    6. '```' → logprob: -19.000045776367188
    7. '  ' → logprob: -19.625045776367188
    8. '۰' → logprob: -19.937545776367188
    9. '00' → logprob: -20.062545776367188
    10. 'o' → logprob: -20.312545776367188

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3473629057407379
    2. ':
' → logprob: -1.5973628759384155
    3. '                   ' → logprob: -2.597362995147705
    4. '               ' → logprob: -5.222362995147705
    5. ',' → logprob: -5.472362995147705
    6. ' and' → logprob: -6.097362995147705
    7. '=' → logprob: -6.347362995147705
    8. '):
' → logprob: -7.097362995147705
    9. '           ' → logprob: -8.222362518310547
    10. '   ' → logprob: -8.347362518310547

Token 209: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1205463856458664
    2. ' prime' → logprob: -2.245546340942383
    3. 'prime' → logprob: -5.245546340942383
    4. '               ' → logprob: -6.995546340942383
    5. '                       ' → logprob: -7.745546340942383
    6. '                    ' → logprob: -8.495546340942383
    7. '   ' → logprob: -8.870546340942383
    8. '                  ' → logprob: -9.120546340942383
    9. '           ' → logprob: -9.120546340942383
    10. ' ' → logprob: -9.620546340942383

Token 210: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.31428107619285583
    2. 'prime' (adapté à ' prime') → logprob: -1.3142811059951782
    3. '                   ' → logprob: -7.314280986785889
    4. '                       ' → logprob: -8.939281463623047
    5. '   ' → logprob: -9.814281463623047
    6. '               ' → logprob: -10.064281463623047
    7. ' ' → logprob: -10.314281463623047
    8. '_prime' → logprob: -10.814281463623047
    9. '           ' → logprob: -11.314281463623047
    10. '
' → logprob: -11.939281463623047

Token 211: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.515961285913363e-05
    2. '[' → logprob: -9.750064849853516
    3. '=' → logprob: -12.875064849853516
    4. '[i' → logprob: -13.000064849853516
    5. '=j' → logprob: -14.625064849853516
    6. '[js' → logprob: -14.875064849853516
    7. ' [' → logprob: -15.125064849853516
    8. '[J' → logprob: -15.875064849853516
    9. '=[' → logprob: -16.000064849853516
    10. ']' → logprob: -16.125064849853516

Token 212: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030630340334028006
    2. '=' → logprob: -6.628063201904297
    3. ']=' → logprob: -6.753063201904297
    4. ' ]' → logprob: -8.003063201904297
    5. ' =' → logprob: -8.378063201904297
    6. ']==' → logprob: -13.753063201904297
    7. ')' → logprob: -13.878063201904297
    8. '[' → logprob: -14.378063201904297
    9. ']
' → logprob: -15.128063201904297
    10. ' ' → logprob: -15.378063201904297

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693189084529877
    2. ' =' → logprob: -2.12693190574646
    3. ' ' → logprob: -13.251932144165039
    4. '0' → logprob: -14.251932144165039
    5. '=
' → logprob: -14.876932144165039
    6. '=False' → logprob: -15.126932144165039
    7. '<|end|>' → logprob: -16.00193214416504
    8. '==' → logprob: -16.50193214416504
    9. ']' → logprob: -16.62693214416504
    10. ')' → logprob: -16.62693214416504

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005533903022296727
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.375553131103516
    4. '  ' → logprob: -16.500553131103516
    5. 'False' → logprob: -17.063053131103516
    6. '۰' → logprob: -18.125553131103516
    7. '000' → logprob: -18.313053131103516
    8. '=' → logprob: -18.438053131103516
    9. '    ' → logprob: -18.500553131103516
    10. '[' → logprob: -18.688053131103516

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'False' → logprob: -15.62501049041748
    4. '=' → logprob: -16.750011444091797
    5. '   ' → logprob: -17.062511444091797
    6. '  ' → logprob: -17.312511444091797
    7. '000' → logprob: -17.562511444091797
    8. '1' → logprob: -17.875011444091797
    9. 'false' → logprob: -18.312511444091797
    10. '۰' → logprob: -18.625011444091797

Token 216: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' res' (ID: 694)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34124377369880676
    2. ')' → logprob: -1.4662437438964844
    3. ':' → logprob: -4.091243743896484
    4. '<|end|>' → logprob: -4.091243743896484
    5. '   ' → logprob: -5.091243743896484
    6. ' +' → logprob: -5.341243743896484
    7. '[' → logprob: -5.966243743896484
    8. ']' → logprob: -6.341243743896484
    9. ' ' → logprob: -6.341243743896484
    10. '0' → logprob: -6.591243743896484

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5344542264938354
    2. 'ult' → logprob: -1.5344542264938354
    3. '=' → logprob: -1.7844542264938354
    4. 'u' → logprob: -3.659454345703125
    5. '[' → logprob: -6.659454345703125
    6. 'ults' → logprob: -7.034454345703125
    7. '=[]' → logprob: -7.159454345703125
    8. 't' → logprob: -7.534454345703125
    9. ' ' → logprob: -8.534454345703125
    10. '[]' → logprob: -8.659454345703125

Token 220: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6045947074890137
    2. '[' → logprob: -0.8545947074890137
    3. '[]
' → logprob: -4.104594707489014
    4. '[int' → logprob: -5.604594707489014
    5. '[i' → logprob: -5.854594707489014
    6. '[j' → logprob: -6.104594707489014
    7. ' [' → logprob: -7.229594707489014
    8. ' []' → logprob: -7.729594707489014
    9. '[n' → logprob: -8.104595184326172
    10. '[]

' → logprob: -8.354595184326172

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6991143822669983
    2. ' for' → logprob: -0.6991143822669983
    3. 'for' → logprob: -5.3241143226623535
    4. '<|end|>' → logprob: -6.9491143226623535
    5. '	for' → logprob: -9.324114799499512
    6. ' ' → logprob: -11.449114799499512
    7. '<|end|>' → logprob: -11.824114799499512
    8. '    ' → logprob: -12.199114799499512
    9. '  ' → logprob: -14.074114799499512
    10. '   ' → logprob: -14.574114799499512

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0188548993319273
    2. ' for' → logprob: -4.018855094909668
    3. '   ' → logprob: -7.268855094909668
    4. '	for' → logprob: -11.893855094909668
    5. ' ' → logprob: -14.143855094909668
    6. '  ' → logprob: -15.768855094909668
    7. '<|end|>' → logprob: -17.51885414123535
    8. '
' → logprob: -18.01885414123535
    9. ' 
' → logprob: -18.26885414123535
    10. '    
' → logprob: -18.26885414123535

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.100409597158432
    2. ' i' → logprob: -2.350409507751465
    3. 'k' → logprob: -9.100409507751465
    4. 'x' → logprob: -9.600409507751465
    5. 'num' → logprob: -12.225409507751465
    6. 'p' → logprob: -12.225409507751465
    7. ' k' → logprob: -12.475409507751465
    8. ' x' → logprob: -12.725409507751465
    9. 'number' → logprob: -13.350409507751465
    10. ' ' → logprob: -13.850409507751465

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020588601008057594
    2. 'in' → logprob: -3.8955886363983154
    3. ' ' → logprob: -11.270588874816895
    4. '(' → logprob: -11.395588874816895
    5. 'range' → logprob: -11.770588874816895
    6. '   ' → logprob: -12.770588874816895
    7. ',' → logprob: -13.270588874816895
    8. 'In' → logprob: -13.270588874816895
    9. '=' → logprob: -13.395588874816895
    10. '<|end|>' → logprob: -13.645588874816895

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132633566856384
    2. ' range' → logprob: -1.3132634162902832
    3. ' ' → logprob: -14.438262939453125
    4. '2' → logprob: -14.563262939453125
    5. '	range' → logprob: -14.813262939453125
    6. '(range' → logprob: -15.438262939453125
    7. ' xrange' → logprob: -17.438262939453125
    8. ' in' → logprob: -18.063262939453125
    9. '   ' → logprob: -18.438262939453125
    10. '(' → logprob: -18.563262939453125

Token 226: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. '2' → logprob: -12.75000286102295
    3. ' (' → logprob: -16.375003814697266
    4. '(
' → logprob: -16.375003814697266
    5. ',' → logprob: -19.000003814697266
    6. ' ' → logprob: -19.500003814697266
    7. '(n' → logprob: -19.500003814697266
    8. '((' → logprob: -19.625003814697266
    9. '
' → logprob: -19.750003814697266
    10. '[' → logprob: -20.000003814697266

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '(' → logprob: -14.500004768371582
    4. '1' → logprob: -16.500003814697266
    5. '   ' → logprob: -17.000003814697266
    6. ')' → logprob: -17.312503814697266
    7. '```' → logprob: -17.500003814697266
    8. 'n' → logprob: -17.687503814697266
    9. '0' → logprob: -17.750003814697266
    10. '3' → logprob: -17.812503814697266

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.029847231227905e-05
    2. ' ,' → logprob: -10.125080108642578
    3. ',n' → logprob: -10.125080108642578
    4. 'n' → logprob: -16.875080108642578
    5. ',
' → logprob: -17.375080108642578
    6. ',int' → logprob: -17.625080108642578
    7. ',len' → logprob: -18.000080108642578
    8. ',i' → logprob: -18.250080108642578
    9. '   ' → logprob: -18.375080108642578
    10. '(n' → logprob: -19.125080108642578

Token 229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029751179739832878
    2. ' n' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.40475082397461
    4. 'len' → logprob: -15.40475082397461
    5. '	n' → logprob: -15.77975082397461
    6. ' ' → logprob: -16.65475082397461
    7. '    ' → logprob: -17.77975082397461
    8. ' len' → logprob: -18.02975082397461
    9. '(n' → logprob: -18.02975082397461
    10. 'int' → logprob: -18.52975082397461

Token 230: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02324605919420719
    2. ' +' → logprob: -3.7732460498809814
    3. '   ' → logprob: -15.273245811462402
    4. '+
' → logprob: -16.14824676513672
    5. ')' → logprob: -16.77324676513672
    6. '):' → logprob: -17.14824676513672
    7. '+)' → logprob: -17.27324676513672
    8. ')+' → logprob: -17.52324676513672
    9. '+n' → logprob: -17.89824676513672
    10. '):
' → logprob: -18.14824676513672

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005835341871716082
    2. ' if' → logprob: -8.12558364868164
    3. '   ' → logprob: -8.75058364868164
    4. '<|end|>' → logprob: -9.50058364868164
    5. 'if' → logprob: -11.00058364868164
    6. ',' → logprob: -11.75058364868164
    7. ':' → logprob: -11.87558364868164
    8. '```' → logprob: -12.25058364868164
    9. '<|end|>' → logprob: -12.50058364868164
    10. '      ' → logprob: -13.12558364868164

Token 232: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15542131662368774
    2. ' if' → logprob: -2.155421257019043
    3. '   ' → logprob: -3.655421257019043
    4. '       ' → logprob: -6.155421257019043
    5. '	if' → logprob: -9.280421257019043
    6. ' ' → logprob: -11.155421257019043
    7. '    ' → logprob: -12.280421257019043
    8. '	' → logprob: -13.155421257019043
    9. '	   ' → logprob: -13.155421257019043
    10. '  ' → logprob: -13.530421257019043

Token 233: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.3868715465068817
    2. 'prime' → logprob: -1.136871576309204
    3. 'pr' → logprob: -16.011871337890625
    4. '   ' → logprob: -16.136871337890625
    5. '_prime' → logprob: -16.136871337890625
    6. ' ' → logprob: -16.261871337890625
    7. 'prim' → logprob: -16.511871337890625
    8. ' primes' → logprob: -17.636871337890625
    9. 'Prime' → logprob: -18.261871337890625
    10. 'primer' → logprob: -18.886871337890625

Token 234: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.12500286102295
    3. '[j' → logprob: -14.50000286102295
    4. ' [' → logprob: -17.000001907348633
    5. '[
' → logprob: -17.875001907348633
    6. '[I' → logprob: -18.000001907348633
    7. 'i' → logprob: -18.625001907348633
    8. '[int' → logprob: -19.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. '
' → logprob: -19.875001907348633

Token 235: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6294832229614258
    2. ']==' → logprob: -1.1294832229614258
    3. '==' → logprob: -2.004483222961426
    4. ' ==' → logprob: -4.754483222961426
    5. ' ]' → logprob: -8.129483222961426
    6. ')' → logprob: -9.004483222961426
    7. ')==' → logprob: -9.379483222961426
    8. ']:
' → logprob: -10.504483222961426
    9. ']:' → logprob: -10.629483222961426
    10. '=' → logprob: -11.504483222961426

Token 236: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008251667954027653
    2. ' ==' → logprob: -5.008251667022705
    3. ']==' → logprob: -6.508251667022705
    4. '=' → logprob: -11.508252143859863
    5. ')==' → logprob: -11.633252143859863
    6. ':' → logprob: -11.633252143859863
    7. ']' → logprob: -12.008252143859863
    8. '==
' → logprob: -12.258252143859863
    9. '<|end|>' → logprob: -12.883252143859863
    10. '()==' → logprob: -13.508252143859863

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006267757853493094
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -15.750626564025879
    4. '0' → logprob: -17.125627517700195
    5. '<|end|>' → logprob: -17.875627517700195
    6. '  ' → logprob: -18.500627517700195
    7. ' ' → logprob: -19.063127517700195
    8. '۱' → logprob: -19.063127517700195
    9. '=' → logprob: -19.250627517700195
    10. '...' → logprob: -19.313127517700195

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -17.125003814697266
    4. '<|end|>' → logprob: -17.375003814697266
    5. '   ' → logprob: -17.875003814697266
    6. '=' → logprob: -18.125003814697266
    7. '```' → logprob: -18.500003814697266
    8. '...' → logprob: -19.312503814697266
    9. '  ' → logprob: -19.875003814697266
    10. '
' → logprob: -20.250003814697266

Token 239: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013092710636556149
    2. ':
' → logprob: -4.763092517852783
    3. '):' → logprob: -5.513092517852783
    4. '):
' → logprob: -8.263092994689941
    5. '       ' → logprob: -8.888092994689941
    6. ',' → logprob: -10.888092994689941
    7. '   ' → logprob: -12.013092994689941
    8. ')' → logprob: -12.388092994689941
    9. ']:' → logprob: -13.138092994689941
    10. ' and' → logprob: -13.763092994689941

Token 240: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02857113815844059
    2. 'res' → logprob: -4.153571128845215
    3. ' res' → logprob: -4.403571128845215
    4. '           ' → logprob: -9.028571128845215
    5. '	res' → logprob: -10.278571128845215
    6. ',res' → logprob: -10.403571128845215
    7. '   ' → logprob: -10.403571128845215
    8. ' ' → logprob: -12.778571128845215
    9. '(res' → logprob: -13.778571128845215
    10. '      ' → logprob: -14.028571128845215

Token 241: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.014169861562550068
    2. ' res' → logprob: -4.264169692993164
    3. '       ' → logprob: -12.139169692993164
    4. '	res' → logprob: -14.889169692993164
    5. '   ' → logprob: -15.014169692993164
    6. '
' → logprob: -16.389169692993164
    7. '           ' → logprob: -16.389169692993164
    8. ',res' → logprob: -16.514169692993164
    9. '_res' → logprob: -16.764169692993164
    10. '(res' → logprob: -18.389169692993164

Token 242: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016468366084154695
    2. '.' → logprob: -8.750164985656738
    3. ' .' → logprob: -12.375164985656738
    4. '.extend' → logprob: -14.500164985656738
    5. '.py' → logprob: -14.750164985656738
    6. '.add' → logprob: -14.875164985656738
    7. '.push' → logprob: -15.500164985656738
    8. '.app' → logprob: -15.500164985656738
    9. '.Append' → logprob: -16.500164031982422
    10. '           ' → logprob: -16.500164031982422

Token 243: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.75000286102295
    3. 'i' → logprob: -14.87500286102295
    4. '(
' → logprob: -17.000003814697266
    5. ' i' → logprob: -19.375003814697266
    6. ' (' → logprob: -20.625003814697266
    7. '(int' → logprob: -22.000003814697266
    8. '(n' → logprob: -22.250003814697266
    9. '(I' → logprob: -22.500003814697266
    10. '(j' → logprob: -22.625003814697266

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011009939044015482
    2. ')
' → logprob: -9.125109672546387
    3. ' )' → logprob: -14.875109672546387
    4. ')return' → logprob: -15.000109672546387
    5. '   ' → logprob: -15.125109672546387
    6. ')i' → logprob: -16.750110626220703
    7. ')#' → logprob: -17.625110626220703
    8. ')
' → logprob: -17.625110626220703
    9. ')n' → logprob: -17.750110626220703
    10. ')`' → logprob: -18.000110626220703

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009249743074178696
    2. 'return' → logprob: -4.759249687194824
    3. ' return' → logprob: -7.384249687194824
    4. '	return' → logprob: -11.759249687194824
    5. '       ' → logprob: -13.259249687194824
    6. '<|end|>' → logprob: -13.259249687194824
    7. ':return' → logprob: -13.259249687194824
    8. '```' → logprob: -14.634249687194824
    9. ' ' → logprob: -15.634249687194824
    10. '  ' → logprob: -16.13425064086914

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1443614661693573
    2. ' return' → logprob: -2.3943614959716797
    3. '   ' → logprob: -3.1443614959716797
    4. '	return' → logprob: -10.51936149597168
    5. ':return' → logprob: -10.64436149597168
    6. ' ' → logprob: -10.89436149597168
    7. ')' → logprob: -11.51936149597168
    8. '<|end|>' → logprob: -11.64436149597168
    9. '       ' → logprob: -12.39436149597168
    10. '```' → logprob: -13.14436149597168

Token 247: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.25192928314208984
    2. ' res' → logprob: -1.5019292831420898
    3. '(res' → logprob: -15.87692928314209
    4. '	res' → logprob: -17.626930236816406
    5. ' ' → logprob: -18.751930236816406
    6. ' ' → logprob: -19.376930236816406
    7. 're' → logprob: -19.501930236816406
    8. '$res' → logprob: -20.501930236816406
    9. '[' → logprob: -20.751930236816406
    10. 'r' → logprob: -21.376930236816406

Token 248: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6839146614074707
    2. ':' → logprob: -1.3089146614074707
    3. '<|end|>' → logprob: -2.1839146614074707
    4. '+' → logprob: -2.4339146614074707
    5. '[' → logprob: -4.308914661407471
    6. '):' → logprob: -6.058914661407471
    7. '<|end|>' → logprob: -6.058914661407471
    8. '```' → logprob: -6.808914661407471
    9. '**' → logprob: -6.933914661407471
    10. '}' → logprob: -7.308914661407471

Token 249: 'class' (ID: 1444)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021600129082798958
    2. ')' → logprob: -3.8966002464294434
    3. ':' → logprob: -7.396600246429443
    4. '):' → logprob: -8.896599769592285
    5. '+)' → logprob: -9.021599769592285
    6. '-' → logprob: -9.646599769592285
    7. ' +' → logprob: -10.646599769592285
    8. ',' → logprob: -10.896599769592285
    9. ')+' → logprob: -11.271599769592285
    10. '+
' → logprob: -11.271599769592285

Token 250: ' Union' (ID: 14746)
  Prédit: ' Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.6024050116539001
    2. ' S' → logprob: -1.352405071258545
    3. ' Solution' → logprob: -2.352405071258545
    4. ' My' → logprob: -3.227405071258545
    5. ' Pr' → logprob: -3.852405071258545
    6. ' Factor' → logprob: -4.102405071258545
    7. ' ' → logprob: -5.727405071258545
    8. ' Stack' → logprob: -5.977405071258545
    9. ' Segment' → logprob: -6.227405071258545
    10. ' Solver' → logprob: -6.227405071258545

Token 251: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.0013602360850200057
    2. '[int' → logprob: -6.7513604164123535
    3. '[' → logprob: -9.001359939575195
    4. ':' → logprob: -11.251359939575195
    5. '-F' → logprob: -11.251359939575195
    6. '_Find' → logprob: -12.001359939575195
    7. '[str' → logprob: -12.251359939575195
    8. '[]' → logprob: -12.251359939575195
    9. '{' → logprob: -12.876359939575195
    10. 'Set' → logprob: -12.876359939575195

Token 252: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006638261256739497
    2. '():' → logprob: -7.500663757324219
    3. '(object' → logprob: -9.375663757324219
    4. ' :' → logprob: -10.875663757324219
    5. ':
' → logprob: -12.500663757324219
    6. '):' → logprob: -13.875663757324219
    7. ':**' → logprob: -14.375663757324219
    8. '>:' → logprob: -14.750663757324219
    9. ' ():' → logprob: -15.250663757324219
    10. '(' → logprob: -15.375663757324219

Token 253: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04934937134385109
    2. '   ' → logprob: -3.174349308013916
    3. ':
' → logprob: -5.549349308013916
    4. '<|end|>' → logprob: -7.424349308013916
    5. ' def' → logprob: -7.549349308013916
    6. 'def' → logprob: -7.799349308013916
    7. '(object' → logprob: -8.424349784851074
    8. '  ' → logprob: -8.424349784851074
    9. ':def' → logprob: -8.674349784851074
    10. '```' → logprob: -9.424349784851074

Token 254: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3883305788040161
    2. ' def' → logprob: -1.2633305788040161
    3. '   ' → logprob: -3.2633304595947266
    4. 'class' → logprob: -8.513330459594727
    5. ':def' → logprob: -8.638330459594727
    6. ':' → logprob: -9.013330459594727
    7. '  ' → logprob: -9.388330459594727
    8. '__' → logprob: -9.388330459594727
    9. ' ' → logprob: -9.763330459594727
    10. '	def' → logprob: -10.138330459594727

Token 255: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.31503456830978394
    2. '__' → logprob: -1.3150346279144287
    3. 'init' → logprob: -6.56503438949585
    4. '_init' → logprob: -8.065034866333008
    5. ' init' → logprob: -10.065034866333008
    6. '___' → logprob: -12.440034866333008
    7. '____' → logprob: -14.440034866333008
    8. '_' → logprob: -14.690034866333008
    9. ' _' → logprob: -15.190034866333008
    10. '__(' → logprob: -15.690034866333008

Token 256: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.5
    3. 'inite' → logprob: -18.75
    4. 'int' → logprob: -20.375
    5. '_init' → logprob: -20.5
    6. 'ini' → logprob: -20.5
    7. 'def' → logprob: -20.75
    8. 'innit' → logprob: -20.875
    9. 'in' → logprob: -21.0
    10. '	init' → logprob: -21.75

Token 257: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -4.143808109802194e-05
    2. '__' → logprob: -10.125041007995605
    3. '(self' → logprob: -14.000041007995605
    4. '__(
' → logprob: -15.000041007995605
    5. '__((' → logprob: -15.750041007995605
    6. '__('' → logprob: -17.750041961669922
    7. '_(' → logprob: -18.250041961669922
    8. '__("' → logprob: -18.875041961669922
    9. '__[' → logprob: -19.125041961669922
    10. '__(*' → logprob: -19.250041961669922

Token 258: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.392202976712724e-06
    2. ' self' → logprob: -12.000006675720215
    3. '(self' → logprob: -16.2500057220459
    4. '   ' → logprob: -17.7500057220459
    5. '	self' → logprob: -18.2500057220459
    6. '
' → logprob: -19.2500057220459
    7. ',self' → logprob: -19.5000057220459
    8. '_self' → logprob: -19.8750057220459
    9. '0' → logprob: -20.0000057220459
    10. 'elf' → logprob: -20.3750057220459

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003763343847822398
    2. ',self' → logprob: -8.25037670135498
    3. ' ,' → logprob: -9.62537670135498
    4. 'self' → logprob: -10.25037670135498
    5. ',n' → logprob: -11.50037670135498
    6. '__,' → logprob: -13.87537670135498
    7. ',size' → logprob: -14.00037670135498
    8. ',parent' → logprob: -14.00037670135498
    9. ',num' → logprob: -15.62537670135498
    10. ',s' → logprob: -16.000375747680664

Token 260: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02325642853975296
    2. ' n' → logprob: -3.773256540298462
    3. 'size' → logprob: -11.648256301879883
    4. 'self' → logprob: -13.898256301879883
    5. ' size' → logprob: -14.148256301879883
    6. ' ' → logprob: -15.148256301879883
    7. '   ' → logprob: -15.273256301879883
    8. '	n' → logprob: -16.023256301879883
    9. 'N' → logprob: -17.773256301879883
    10. ')n' → logprob: -18.148256301879883

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026526954025030136
    2. '):
' → logprob: -8.500265121459961
    3. ')' → logprob: -9.875265121459961
    4. ' ):' → logprob: -11.625265121459961
    5. ':' → logprob: -14.000265121459961
    6. '):
' → logprob: -14.875265121459961
    7. '   ' → logprob: -16.50026512145996
    8. '):

' → logprob: -17.62526512145996
    9. '）：' → logprob: -17.87526512145996
    10. '}:' → logprob: -18.12526512145996

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006502201315015554
    2. '   ' → logprob: -5.256502151489258
    3. 'n' → logprob: -8.256502151489258
    4. '    ' → logprob: -8.256502151489258
    5. 'self' → logprob: -8.381502151489258
    6. ' self' → logprob: -9.381502151489258
    7. '<|end|>' → logprob: -9.756502151489258
    8. '     ' → logprob: -10.006502151489258
    9. '	   ' → logprob: -10.131502151489258
    10. ':' → logprob: -10.256502151489258

Token 263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01922181062400341
    2. ' self' → logprob: -4.019221782684326
    3. '       ' → logprob: -7.269221782684326
    4. '   ' → logprob: -8.144222259521484
    5. '	self' → logprob: -9.394222259521484
    6. ' ' → logprob: -14.519222259521484
    7. '    ' → logprob: -16.019222259521484
    8. '(self' → logprob: -16.269222259521484
    9. '  ' → logprob: -16.519222259521484
    10. '	' → logprob: -16.644222259521484

Token 264: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.014237663708627224
    2. '.n' → logprob: -4.889237880706787
    3. '.' → logprob: -5.264237880706787
    4. '._' → logprob: -7.389237880706787
    5. '.parents' → logprob: -7.639237880706787
    6. 'parent' → logprob: -8.764237403869629
    7. '.rank' → logprob: -9.764237403869629
    8. 'n' → logprob: -10.264237403869629
    9. '.size' → logprob: -10.514237403869629
    10. '_parent' → logprob: -10.889237403869629

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022758185863495
    2. ' =' → logprob: -1.9102275371551514
    3. '=[]' → logprob: -13.78522777557373
    4. '＝' → logprob: -13.91022777557373
    5. '=[' → logprob: -14.41022777557373
    6. 's' → logprob: -15.53522777557373
    7. '=self' → logprob: -15.91022777557373
    8. '[' → logprob: -16.410226821899414
    9. ' ' → logprob: -16.535226821899414
    10. '   ' → logprob: -16.535226821899414

Token 266: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.615358293056488
    2. '[list' → logprob: -1.1153583526611328
    3. '[-' → logprob: -2.115358352661133
    4. '[' → logprob: -4.615358352661133
    5. ' list' → logprob: -7.115358352661133
    6. '[n' → logprob: -8.365358352661133
    7. ' [' → logprob: -9.490358352661133
    8. '[node' → logprob: -10.115358352661133
    9. '[parent' → logprob: -10.115358352661133
    10. '[i' → logprob: -11.240358352661133

Token 267: '       ' (ID: 309)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7991049289703369
    2. '[' → logprob: -1.174104928970337
    3. '[n' → logprob: -2.674104928970337
    4. '   ' → logprob: -2.924104928970337
    5. ' range' → logprob: -2.924104928970337
    6. ' for' → logprob: -3.049104928970337
    7. ' =' → logprob: -5.174104690551758
    8. 'range' → logprob: -5.549104690551758
    9. '[i' → logprob: -6.174104690551758
    10. '[-' → logprob: -6.424104690551758

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09992343932390213
    2. 'i' → logprob: -3.7249233722686768
    3. '[-' → logprob: -3.7249233722686768
    4. 'range' → logprob: -3.8499233722686768
    5. 'list' → logprob: -4.224923610687256
    6. '[i' → logprob: -5.724923610687256
    7. '[' → logprob: -5.849923610687256
    8. 'self' → logprob: -6.099923610687256
    9. '   ' → logprob: -6.849923610687256
    10. ' for' → logprob: -7.474923610687256

Token 269: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10499873012304306
    2. ' i' → logprob: -2.354998826980591
    3. '_' → logprob: -5.354998588562012
    4. '_i' → logprob: -10.104998588562012
    5. '	i' → logprob: -11.854998588562012
    6. ' _' → logprob: -12.104998588562012
    7. ' ' → logprob: -13.604998588562012
    8. '   ' → logprob: -13.979998588562012
    9. '  ' → logprob: -15.854998588562012
    10. '_=' → logprob: -16.104999542236328

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006719871424138546
    2. 'in' → logprob: -5.006720066070557
    3. '   ' → logprob: -13.631719589233398
    4. ' ' → logprob: -14.006719589233398
    5. '  ' → logprob: -14.381719589233398
    6. 'n' → logprob: -14.756719589233398
    7. '	in' → logprob: -14.756719589233398
    8. 'i' → logprob: -15.256719589233398
    9. '    ' → logprob: -15.256719589233398
    10. ' i' → logprob: -15.381719589233398

Token 271: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '	range' → logprob: -21.000017166137695
    4. '   ' → logprob: -22.375017166137695
    5. '(range' → logprob: -23.500017166137695
    6. '
' → logprob: -24.250017166137695
    7. 'rang' → logprob: -24.250017166137695
    8. ' ' → logprob: -24.750017166137695
    9. '_range' → logprob: -24.750017166137695
    10. 'n' → logprob: -24.875017166137695

Token 272: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00029351349803619087
    2. '(' → logprob: -8.250293731689453
    3. 'n' → logprob: -10.375293731689453
    4. ' n' → logprob: -15.250293731689453
    5. ' (' → logprob: -15.250293731689453
    6. '	n' → logprob: -15.500293731689453
    7. '(i' → logprob: -15.875293731689453
    8. '(self' → logprob: -16.000293731689453
    9. '   ' → logprob: -16.625293731689453
    10. '(
' → logprob: -17.625293731689453

Token 273: ' +' (ID: 659)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28222930431365967
    2. '):' → logprob: -1.4072293043136597
    3. '+' → logprob: -6.907229423522949
    4. '):
' → logprob: -10.65722942352295
    5. '   ' → logprob: -11.40722942352295
    6. ':' → logprob: -11.53222942352295
    7. ' ):
' → logprob: -11.65722942352295
    8. ')' → logprob: -11.78222942352295
    9. ' ):' → logprob: -11.90722942352295
    10. ':
' → logprob: -12.90722942352295

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.250123977661133
    4. '  ' → logprob: -17.750123977661133
    5. '0' → logprob: -18.750123977661133
    6. '2' → logprob: -19.625123977661133
    7. '１' → logprob: -19.750123977661133
    8. '    ' → logprob: -20.812623977661133
    9. '
' → logprob: -20.937623977661133
    10. '10' → logprob: -21.375123977661133

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '2' → logprob: -19.375001907348633
    5. '１' → logprob: -19.625001907348633
    6. '  ' → logprob: -20.625001907348633
    7. '0' → logprob: -20.750001907348633
    8. '10' → logprob: -20.750001907348633
    9. '
' → logprob: -21.125001907348633
    10. '۱' → logprob: -21.812501907348633

Token 276: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008763471618294716
    2. '):' → logprob: -4.758763313293457
    3. '):
' → logprob: -10.133763313293457
    4. ')' → logprob: -10.258763313293457
    5. '       ' → logprob: -10.383763313293457
    6. ',' → logprob: -10.633763313293457
    7. ':
' → logprob: -12.008763313293457
    8. '   ' → logprob: -12.133763313293457
    9. ':' → logprob: -12.758763313293457
    10. '):

' → logprob: -14.133763313293457

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05901302397251129
    2. ' self' → logprob: -3.0590131282806396
    3. '0' → logprob: -5.3090128898620605
    4. 'self' → logprob: -6.1840128898620605
    5. ',' → logprob: -6.9340128898620605
    6. '       ' → logprob: -7.0590128898620605
    7. '   ' → logprob: -7.6840128898620605
    8. ' ' → logprob: -7.9340128898620605
    9. ',self' → logprob: -9.059013366699219
    10. ' None' → logprob: -9.309013366699219

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0026903904508799314
    2. ' self' → logprob: -6.002690315246582
    3. '   ' → logprob: -8.502690315246582
    4. '           ' → logprob: -11.502690315246582
    5. '	self' → logprob: -14.002690315246582
    6. '       ' → logprob: -14.377690315246582
    7. '  ' → logprob: -16.1276912689209
    8. ' ' → logprob: -16.2526912689209
    9. '    ' → logprob: -17.1276912689209
    10. '' → logprob: -18.8776912689209

Token 279: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0008613191312178969
    2. 'parent' → logprob: -7.125861167907715
    3. ' parent' → logprob: -10.125861167907715
    4. '	parent' → logprob: -12.375861167907715
    5. ',parent' → logprob: -12.500861167907715
    6. '   ' → logprob: -12.750861167907715
    7. '_parent' → logprob: -13.000861167907715
    8. '       ' → logprob: -13.500861167907715
    9. '           ' → logprob: -14.375861167907715
    10. 'self' → logprob: -14.500861167907715

Token 280: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002096197713399306
    2. '.' → logprob: -8.50020980834961
    3. ' .' → logprob: -12.62520980834961
    4. 'append' → logprob: -13.37520980834961
    5. '.app' → logprob: -13.87520980834961
    6. '=' → logprob: -15.87520980834961
    7. '.extend' → logprob: -16.62520980834961
    8. '.i' → logprob: -16.75020980834961
    9. '=i' → logprob: -17.25020980834961
    10. '.ap' → logprob: -17.37520980834961

Token 281: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03961418569087982
    2. '-' → logprob: -3.289614200592041
    3. '(i' → logprob: -6.664614200592041
    4. '-i' → logprob: -8.289613723754883
    5. ' i' → logprob: -10.789613723754883
    6. ' -' → logprob: -11.164613723754883
    7. '(-' → logprob: -11.914613723754883
    8. '	i' → logprob: -13.289613723754883
    9. ')i' → logprob: -14.289613723754883
    10. ',i' → logprob: -15.164613723754883

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8087270038668066e-05
    2. ')
' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -15.750027656555176
    4. ' )' → logprob: -16.000028610229492
    5. ')

' → logprob: -16.500028610229492
    6. '   ' → logprob: -17.125028610229492
    7. '),' → logprob: -18.250028610229492
    8. ')return' → logprob: -18.250028610229492
    9. ')i' → logprob: -18.625028610229492
    10. '       ' → logprob: -18.625028610229492

Token 283: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1774602234363556
    2. '   ' → logprob: -2.802460193634033
    3. '       ' → logprob: -2.927460193634033
    4. 'def' → logprob: -3.177460193634033
    5. ' self' → logprob: -5.177460193634033
    6. '	self' → logprob: -8.302460670471191
    7. '<|end|>' → logprob: -8.552460670471191
    8. ' ' → logprob: -8.552460670471191
    9. ' def' → logprob: -8.927460670471191
    10. '```' → logprob: -9.052460670471191

Token 285: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.12694543600082397
    2. '.size' → logprob: -2.1269454956054688
    3. '.parent' → logprob: -11.751945495605469
    4. '.count' → logprob: -13.001945495605469
    5. 'rank' → logprob: -13.126945495605469
    6. '.sz' → logprob: -13.626945495605469
    7. '.depth' → logprob: -14.251945495605469
    8. 'size' → logprob: -14.376945495605469
    9. '.n' → logprob: -14.376945495605469
    10. '.r' → logprob: -14.501945495605469

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575967013835907
    2. ' =' → logprob: -0.825967013835907
    3. '[' → logprob: -11.075966835021973
    4. '   ' → logprob: -11.825966835021973
    5. ' ' → logprob: -13.075966835021973
    6. 's' → logprob: -13.450966835021973
    7. '=[]' → logprob: -14.075966835021973
    8. '  ' → logprob: -15.450966835021973
    9. '<|end|>' → logprob: -16.07596778869629
    10. '[:]' → logprob: -16.45096778869629

Token 287: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011705794604495168
    2. ' [' → logprob: -6.751170635223389
    3. '[n' → logprob: -15.50117015838623
    4. '[]' → logprob: -16.626171112060547
    5. '   ' → logprob: -17.376171112060547
    6. '[i' → logprob: -18.001171112060547
    7. '[self' → logprob: -18.751171112060547
    8. ' ' → logprob: -19.001171112060547
    9. '[]
' → logprob: -19.251171112060547
    10. '[-' → logprob: -20.001171112060547

Token 288: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7597224712371826
    2. '       ' → logprob: -0.8847224712371826
    3. '[' → logprob: -2.7597224712371826
    4. '<|end|>' → logprob: -3.3847224712371826
    5. '   ' → logprob: -4.884722709655762
    6. 'for' → logprob: -5.384722709655762
    7. ' =' → logprob: -5.884722709655762
    8. ' [' → logprob: -6.509722709655762
    9. ' ' → logprob: -6.509722709655762
    10. '(' → logprob: -7.009722709655762

Token 289: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002434878144413233
    2. '[' → logprob: -6.752434730529785
    3. ' for' → logprob: -6.752434730529785
    4. '0' → logprob: -9.377434730529785
    5. '   ' → logprob: -12.127434730529785
    6. '       ' → logprob: -12.627434730529785
    7. '	for' → logprob: -13.877434730529785
    8. ' [' → logprob: -14.502434730529785
    9. ' ' → logprob: -15.502434730529785
    10. '           ' → logprob: -15.502434730529785

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007109371013939381
    2. ' i' → logprob: -5.00710916519165
    3. '_' → logprob: -8.007109642028809
    4. '_i' → logprob: -9.757109642028809
    5. ' _' → logprob: -13.382109642028809
    6. '	i' → logprob: -13.757109642028809
    7. '(i' → logprob: -16.257108688354492
    8. ' ' → logprob: -16.382108688354492
    9. '   ' → logprob: -16.632108688354492
    10. '```' → logprob: -16.757108688354492

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021336376667023
    2. 'in' → logprob: -2.3502132892608643
    3. 'range' → logprob: -12.850213050842285
    4. ' ' → logprob: -13.100213050842285
    5. '   ' → logprob: -13.975213050842285
    6. '(' → logprob: -15.100213050842285
    7. ' range' → logprob: -15.600213050842285
    8. 'n' → logprob: -15.850213050842285
    9. '       ' → logprob: -15.975213050842285
    10. '  ' → logprob: -16.1002140045166

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -18.626928329467773
    4. '	range' → logprob: -18.876928329467773
    5. ' ' → logprob: -20.376928329467773
    6. '   ' → logprob: -20.876928329467773
    7. '  ' → logprob: -22.251928329467773
    8. '[' → logprob: -22.376928329467773
    9. '    ' → logprob: -24.001928329467773
    10. 'rang' → logprob: -24.626928329467773

Token 293: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.739826181321405e-05
    2. '(' → logprob: -10.37504768371582
    3. 'n' → logprob: -11.12504768371582
    4. 'range' → logprob: -13.75004768371582
    5. '(range' → logprob: -15.50004768371582
    6. '   ' → logprob: -17.50004768371582
    7. ' (' → logprob: -17.75004768371582
    8. '(N' → logprob: -18.50004768371582
    9. '((' → logprob: -19.00004768371582
    10. '```' → logprob: -19.25004768371582

Token 294: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013284528395161033
    2. ' +' → logprob: -6.626328468322754
    3. '   ' → logprob: -13.126328468322754
    4. '+
' → logprob: -16.126327514648438
    5. '1' → logprob: -16.251327514648438
    6. '＋' → logprob: -16.626327514648438
    7. ')' → logprob: -16.751327514648438
    8. '﻿' → logprob: -17.001327514648438
    9. '):
' → logprob: -17.001327514648438
    10. '       ' → logprob: -17.126327514648438

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018339496455155313
    2. ' ' → logprob: -8.62518310546875
    3. '   ' → logprob: -13.50018310546875
    4. '2' → logprob: -14.37518310546875
    5. '0' → logprob: -14.62518310546875
    6. '```' → logprob: -15.75018310546875
    7. '10' → logprob: -15.87518310546875
    8. '(' → logprob: -16.00018310546875
    9. '  ' → logprob: -16.06268310546875
    10. '
' → logprob: -16.37518310546875

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -14.75000286102295
    4. '0' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.187501907348633
    6. '```' → logprob: -16.312501907348633
    7. '+' → logprob: -16.750001907348633
    8. '(' → logprob: -17.312501907348633
    9. '１' → logprob: -17.812501907348633
    10. 'i' → logprob: -17.875001907348633

Token 297: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006756340153515339
    2. '):' → logprob: -5.00675630569458
    3. '():
' → logprob: -10.756756782531738
    4. '):
' → logprob: -12.131756782531738
    5. '   ' → logprob: -12.631756782531738
    6. '       ' → logprob: -12.631756782531738
    7. ':
' → logprob: -12.881756782531738
    8. ')' → logprob: -13.131756782531738
    9. ' ):
' → logprob: -13.881756782531738
    10. '()):
' → logprob: -14.131756782531738

Token 298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33985984325408936
    2. '0' → logprob: -1.4648598432540894
    3. '   ' → logprob: -3.089859962463379
    4. '       ' → logprob: -5.339859962463379
    5. ' ' → logprob: -6.089859962463379
    6. '	       ' → logprob: -6.339859962463379
    7. '	   ' → logprob: -7.339859962463379
    8. '<|end|>' → logprob: -7.464859962463379
    9. ',' → logprob: -7.839859962463379
    10. '    	   ' → logprob: -8.964859962463379

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06831777840852737
    2. ' self' → logprob: -3.1933178901672363
    3. '0' → logprob: -3.6933178901672363
    4. '   ' → logprob: -9.818317413330078
    5. ' ' → logprob: -10.193317413330078
    6. '           ' → logprob: -11.443317413330078
    7. '1' → logprob: -12.568317413330078
    8. '	self' → logprob: -12.818317413330078
    9. '  ' → logprob: -14.318317413330078
    10. '       ' → logprob: -14.443317413330078

Token 300: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.00031985383247956634
    2. '.parent' → logprob: -8.875319480895996
    3. '.append' → logprob: -9.000319480895996
    4. 'rank' → logprob: -9.875319480895996
    5. ' rank' → logprob: -12.625319480895996
    6. '_rank' → logprob: -13.875319480895996
    7. ' .' → logprob: -14.750319480895996
    8. '   ' → logprob: -15.250319480895996
    9. '(rank' → logprob: -16.000320434570312
    10. 'Rank' → logprob: -16.250320434570312

Token 301: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016182278341148049
    2. ' .' → logprob: -9.125162124633789
    3. '.' → logprob: -9.875162124633789
    4. 'append' → logprob: -13.750162124633789
    5. '           ' → logprob: -15.750162124633789
    6. '   ' → logprob: -16.87516212463379
    7. '.app' → logprob: -17.87516212463379
    8. ' append' → logprob: -18.00016212463379
    9. 'Append' → logprob: -18.00016212463379
    10. '       ' → logprob: -18.37516212463379

Token 302: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.6457742175552994e-05
    2. '(' → logprob: -9.875056266784668
    3. ' ' → logprob: -12.250056266784668
    4. '1' → logprob: -16.750057220458984
    5. '   ' → logprob: -18.375057220458984
    6. '(
' → logprob: -19.250057220458984
    7. '  ' → logprob: -19.500057220458984
    8. 'i' → logprob: -20.000057220458984
    9. '０' → logprob: -20.000057220458984
    10. '۰' → logprob: -20.750057220458984

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.375007629394531
    3. '1' → logprob: -12.750007629394531
    4. '   ' → logprob: -18.87500762939453
    5. '０' → logprob: -19.50000762939453
    6. '  ' → logprob: -20.06250762939453
    7. 'i' → logprob: -20.68750762939453
    8. '۰' → logprob: -20.68750762939453
    9. 'a' → logprob: -21.00000762939453
    10. ')' → logprob: -21.56250762939453

Token 304: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.68153518543113e-05
    2. '<|end|>' → logprob: -10.125057220458984
    3. ')
' → logprob: -11.125057220458984
    4. '   ' → logprob: -14.250057220458984
    5. ')return' → logprob: -14.875057220458984
    6. ' )' → logprob: -15.125057220458984
    7. '<|end|>' → logprob: -15.625057220458984
    8. '),' → logprob: -16.000057220458984
    9. '       ' → logprob: -16.000057220458984
    10. ')}' → logprob: -16.250057220458984

Token 305: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.017975853756070137
    2. ' def' → logprob: -4.392975807189941
    3. '   ' → logprob: -5.267975807189941
    4. '<|end|>' → logprob: -8.642975807189941
    5. ')' → logprob: -10.392975807189941
    6. '	def' → logprob: -10.517975807189941
    7. '    
' → logprob: -10.892975807189941
    8. '       ' → logprob: -11.392975807189941
    9. ' 
' → logprob: -12.017975807189941
    10. '  ' → logprob: -12.142975807189941

Token 307: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.4742007553577423
    2. 'find' → logprob: -0.9742007255554199
    3. 'root' → logprob: -9.099201202392578
    4. ' root' → logprob: -11.849201202392578
    5. 'union' → logprob: -13.724201202392578
    6. '_find' → logprob: -13.974201202392578
    7. 'Find' → logprob: -14.099201202392578
    8. 'f' → logprob: -14.349201202392578
    9. '	find' → logprob: -14.349201202392578
    10. ' ' → logprob: -15.474201202392578

Token 308: 'root' (ID: 5488)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016468366084154695
    2. '(' → logprob: -8.750164985656738
    3. 'self' → logprob: -12.250164985656738
    4. '(parent' → logprob: -14.625164985656738
    5. '_parent' → logprob: -14.750164985656738
    6. '(x' → logprob: -15.375164985656738
    7. ' (' → logprob: -16.000164031982422
    8. '(s' → logprob: -16.875164031982422
    9. '(this' → logprob: -17.625164031982422
    10. '(Self' → logprob: -17.750164031982422

Token 309: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016563729150220752
    2. '(' → logprob: -8.750165939331055
    3. '(s' → logprob: -12.750165939331055
    4. ' (' → logprob: -12.750165939331055
    5. 'self' → logprob: -14.500165939331055
    6. '(x' → logprob: -15.000165939331055
    7. '(
' → logprob: -16.375165939331055
    8. '(node' → logprob: -16.375165939331055
    9. '(parent' → logprob: -16.625165939331055
    10. '   ' → logprob: -16.625165939331055

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.643152740551159e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',i' → logprob: -14.875036239624023
    4. 'self' → logprob: -15.125036239624023
    5. ',x' → logprob: -15.500036239624023
    6. ',node' → logprob: -16.250036239624023
    7. ',u' → logprob: -16.500036239624023
    8. ',n' → logprob: -17.625036239624023
    9. ',k' → logprob: -17.750036239624023
    10. ',self' → logprob: -17.750036239624023

Token 311: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00032044618274085224
    2. 'self' → logprob: -8.375320434570312
    3. ' x' → logprob: -9.375320434570312
    4. 'a' → logprob: -12.875320434570312
    5. 'u' → logprob: -13.625320434570312
    6. 'p' → logprob: -14.375320434570312
    7. 'n' → logprob: -15.250320434570312
    8. 'node' → logprob: -15.875320434570312
    9. ' self' → logprob: -16.125320434570312
    10. 'k' → logprob: -16.375320434570312

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004907185211777687
    2. '):
' → logprob: -7.625490665435791
    3. ':' → logprob: -13.87549114227295
    4. ' ):' → logprob: -14.12549114227295
    5. '):
' → logprob: -14.75049114227295
    6. ')' → logprob: -14.75049114227295
    7. '   ' → logprob: -16.250490188598633
    8. 'self' → logprob: -17.500490188598633
    9. '       ' → logprob: -17.875490188598633
    10. '}:' → logprob: -18.125490188598633

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29611116647720337
    2. ':' → logprob: -1.6711111068725586
    3. '   ' → logprob: -3.0461111068725586
    4. '<|end|>' → logprob: -4.421111106872559
    5. ':
' → logprob: -5.171111106872559
    6. '	while' → logprob: -7.421111106872559
    7. '
' → logprob: -7.421111106872559
    8. ' while' → logprob: -7.671111106872559
    9. ' if' → logprob: -8.546111106872559
    10. '    ' → logprob: -8.921111106872559

Token 314: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6965861320495605
    2. ' if' → logprob: -0.6965861320495605
    3. '       ' → logprob: -6.0715861320495605
    4. '   ' → logprob: -6.9465861320495605
    5. ' while' → logprob: -9.571586608886719
    6. 'while' → logprob: -9.571586608886719
    7. '	if' → logprob: -11.321586608886719
    8. '    ' → logprob: -11.571586608886719
    9. ' ' → logprob: -13.821586608886719
    10. '        ' → logprob: -14.446586608886719

Token 315: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014170442707836628
    2. ' self' → logprob: -4.2641706466674805
    3. 'x' → logprob: -11.88917064666748
    4. ' x' → logprob: -16.764169692993164
    5. '(self' → logprob: -18.014169692993164
    6. '	self' → logprob: -18.139169692993164
    7. '   ' → logprob: -18.639169692993164
    8. ' ' → logprob: -19.014169692993164
    9. '[self' → logprob: -21.639169692993164
    10. ' ' → logprob: -22.014169692993164

Token 316: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05895614996552467
    2. ' !=' → logprob: -2.9339561462402344
    3. '==' → logprob: -5.558956146240234
    4. ' ==' → logprob: -8.683956146240234
    5. '   ' → logprob: -11.683956146240234
    6. ' ' → logprob: -11.933956146240234
    7. '!' → logprob: -12.308956146240234
    8. ')!=' → logprob: -12.433956146240234
    9. '=' → logprob: -12.683956146240234
    10. ']!=' → logprob: -12.933956146240234

Token 317: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.615255839889869e-05
    2. ' self' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.75009536743164
    4. '(self' → logprob: -19.25009536743164
    5. '	self' → logprob: -19.62509536743164
    6. '=self' → logprob: -19.75009536743164
    7. ' ' → logprob: -20.25009536743164
    8. '
' → logprob: -20.25009536743164
    9. '[self' → logprob: -21.00009536743164
    10. '  ' → logprob: -21.62509536743164

Token 318: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0001596771035110578
    2. 'parent' → logprob: -8.75015926361084
    3. '.root' → logprob: -15.00015926361084
    4. 'self' → logprob: -15.12515926361084
    5. '_parent' → logprob: -15.37515926361084
    6. '[parent' → logprob: -15.50015926361084
    7. '.self' → logprob: -16.125160217285156
    8. '.user' → logprob: -16.375160217285156
    9. ',parent' → logprob: -17.125160217285156
    10. '.' → logprob: -17.500160217285156

Token 319: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.4121114822482923e-06
    2. '[self' → logprob: -13.500003814697266
    3. 'x' → logprob: -13.625003814697266
    4. '[' → logprob: -14.250003814697266
    5. '[
' → logprob: -17.750003814697266
    6. '[int' → logprob: -18.000003814697266
    7. '```' → logprob: -18.375003814697266
    8. ' x' → logprob: -18.625003814697266
    9. ' [' → logprob: -19.625003814697266
    10. 'self' → logprob: -19.875003814697266

Token 320: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07897593826055527
    2. ']:
' → logprob: -2.5789759159088135
    3. ']' → logprob: -9.578975677490234
    4. ']:
' → logprob: -11.953975677490234
    5. '):
' → logprob: -12.453975677490234
    6. '):' → logprob: -12.453975677490234
    7. ']:

' → logprob: -13.453975677490234
    8. '       ' → logprob: -15.203975677490234
    9. '   ' → logprob: -15.203975677490234
    10. ':' → logprob: -15.703975677490234

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07342318445444107
    2. '       ' → logprob: -3.448423147201538
    3. ' return' → logprob: -3.698423147201538
    4. ':
' → logprob: -5.323423385620117
    5. ':return' → logprob: -6.073423385620117
    6. ' self' → logprob: -6.698423385620117
    7. 'return' → logprob: -6.823423385620117
    8. '   ' → logprob: -6.948423385620117
    9. '	       ' → logprob: -7.323423385620117
    10. '	return' → logprob: -7.573423385620117

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5776901245117188
    2. ' return' → logprob: -0.8276901245117188
    3. '       ' → logprob: -6.452690124511719
    4. 'self' → logprob: -9.577690124511719
    5. ' self' → logprob: -10.452690124511719
    6. '           ' → logprob: -10.577690124511719
    7. 'x' → logprob: -10.702690124511719
    8. '   ' → logprob: -11.577690124511719
    9. '	return' → logprob: -11.702690124511719
    10. ' x' → logprob: -11.952690124511719

Token 323: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -18.625261306762695
    4. 'self' → logprob: -19.250261306762695
    5. '   ' → logprob: -20.750261306762695
    6. '(x' → logprob: -21.875261306762695
    7. ' ' → logprob: -22.000261306762695
    8. ')x' → logprob: -22.875261306762695
    9. '       ' → logprob: -23.625261306762695
    10. '  ' → logprob: -23.875261306762695

Token 324: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08016449213027954
    2. '       ' → logprob: -2.5801644325256348
    3. '        
' → logprob: -6.955164432525635
    4. '    
' → logprob: -8.955164909362793
    5. ' 
' → logprob: -9.330164909362793
    6. '  
' → logprob: -9.705164909362793
    7. '   
' → logprob: -11.705164909362793
    8. '   ' → logprob: -12.080164909362793
    9. '
' → logprob: -12.080164909362793
    10. '            
' → logprob: -12.455164909362793

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.2855416066013277e-05
    2. '	' → logprob: -10.875032424926758
    3. '   ' → logprob: -12.500032424926758
    4. 'self' → logprob: -13.125032424926758
    5. ' else' → logprob: -13.375032424926758
    6. '
' → logprob: -13.625032424926758
    7. ' self' → logprob: -13.875032424926758
    8. 'else' → logprob: -14.000032424926758
    9. '        
' → logprob: -14.125032424926758
    10. '	   ' → logprob: -14.125032424926758

Token 326: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44143614172935486
    2. 'self' → logprob: -1.1914361715316772
    3. ' self' → logprob: -2.9414360523223877
    4. '   ' → logprob: -8.441435813903809
    5. '
' → logprob: -9.566435813903809
    6. '	self' → logprob: -12.066435813903809
    7. 'else' (adapté à ' else') → logprob: -12.191435813903809
    8. '        
' → logprob: -12.941435813903809
    9. 'return' → logprob: -13.066435813903809
    10. 'parent' → logprob: -13.066435813903809

Token 327: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0654788613319397
    2. ':' → logprob: -3.190478801727295
    3. '           ' → logprob: -4.440478801727295
    4. '       ' → logprob: -4.690478801727295
    5. ':return' → logprob: -7.440478801727295
    6. ' :
' → logprob: -8.190479278564453
    7. '   ' → logprob: -9.440479278564453
    8. ' self' → logprob: -9.565479278564453
    9. ',' → logprob: -9.815479278564453
    10. '):
' → logprob: -10.565479278564453

Token 328: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.528108537197113
    2. '       ' → logprob: -1.2781085968017578
    3. '           ' → logprob: -2.403108596801758
    4. ' self' → logprob: -3.778108596801758
    5. '   ' → logprob: -4.028108596801758
    6. '	self' → logprob: -8.653108596801758
    7. ' ' → logprob: -8.653108596801758
    8. '	       ' → logprob: -9.528108596801758
    9. '0' → logprob: -10.403108596801758
    10. '	   ' → logprob: -10.903108596801758

Token 329: ' y' (ID: 342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008128436165861785
    2. ' self' → logprob: -7.250813007354736
    3. '           ' → logprob: -9.875812530517578
    4. '   ' → logprob: -10.500812530517578
    5. '       ' → logprob: -10.750812530517578
    6. '	self' → logprob: -13.500812530517578
    7. '
' → logprob: -14.750812530517578
    8. 'return' → logprob: -15.750812530517578
    9. 'parent' → logprob: -15.750812530517578
    10. ' ' → logprob: -16.125812530517578

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688570261001587
    2. ' =' → logprob: -1.136885643005371
    3. '=self' → logprob: -11.261885643005371
    4. '    ' → logprob: -14.761885643005371
    5. '   ' → logprob: -15.011885643005371
    6. '       ' → logprob: -15.761885643005371
    7. '=
' → logprob: -15.761885643005371
    8. ' ' → logprob: -15.761885643005371
    9. '           ' → logprob: -16.011886596679688
    10. '     ' → logprob: -16.011886596679688

Token 331: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004307884373702109
    2. ' self' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.750431060791016
    4. '       ' → logprob: -18.375431060791016
    5. '	self' → logprob: -19.625431060791016
    6. '           ' → logprob: -20.000431060791016
    7. ' ' → logprob: -20.125431060791016
    8. '(self' → logprob: -20.500431060791016
    9. '
' → logprob: -21.375431060791016
    10. '     ' → logprob: -21.500431060791016

Token 332: '.parent' (ID: 17454)
  Prédit: '.find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0038675388786941767
    2. '.parent' → logprob: -5.7538676261901855
    3. 'find' → logprob: -7.3788676261901855
    4. '.' → logprob: -10.378867149353027
    5. 'parent' → logprob: -10.378867149353027
    6. ' .' → logprob: -12.878867149353027
    7. '	find' → logprob: -15.503867149353027
    8. ' find' → logprob: -16.003868103027344
    9. '.__' → logprob: -16.253868103027344
    10. 'Parent' → logprob: -16.878868103027344

Token 333: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.596781946020201e-05
    2. 'x' → logprob: -10.125045776367188
    3. '[self' → logprob: -12.500045776367188
    4. '[' → logprob: -13.625045776367188
    5. '[
' → logprob: -15.375045776367188
    6. '(x' → logprob: -15.375045776367188
    7. ' x' → logprob: -15.500045776367188
    8. '	x' → logprob: -16.250045776367188
    9. ' [' → logprob: -16.750045776367188
    10. '```' → logprob: -17.750045776367188

Token 334: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39754989743232727
    2. '[x' → logprob: -1.6475498676300049
    3. ']
' → logprob: -2.022549867630005
    4. 'x' → logprob: -6.147550106048584
    5. '])
' → logprob: -7.647550106048584
    6. '(x' → logprob: -8.522549629211426
    7. '])' → logprob: -8.647549629211426
    8. ')
' → logprob: -10.147549629211426
    9. '[self' → logprob: -10.397549629211426
    10. ']=' → logprob: -10.897549629211426

Token 335: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9083479046821594
    2. ' =' → logprob: -0.9083479046821594
    3. '       ' → logprob: -2.0333478450775146
    4. '           ' → logprob: -2.7833478450775146
    5. '=
' → logprob: -8.283348083496094
    6. '
' → logprob: -8.408348083496094
    7. '=self' → logprob: -8.908348083496094
    8. '   ' → logprob: -8.908348083496094
    9. ',' → logprob: -10.033348083496094
    10. '	' → logprob: -11.658348083496094

Token 336: ' y' (ID: 342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.015039891935884953
    2. '           ' → logprob: -4.265039920806885
    3. '       ' → logprob: -7.265039920806885
    4. ' self' → logprob: -8.765039443969727
    5. '   ' → logprob: -11.015039443969727
    6. 'y' (adapté à ' y') → logprob: -13.640039443969727
    7. '	self' → logprob: -13.640039443969727
    8. 'return' → logprob: -14.515039443969727
    9. 'root' → logprob: -15.390039443969727
    10. '=self' → logprob: -15.515039443969727

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889430224895477
    2. ' =' → logprob: -2.5788943767547607
    3. '=self' → logprob: -12.95389461517334
    4. '＝' → logprob: -14.70389461517334
    5. '[parent' → logprob: -15.07889461517334
    6. 'x' → logprob: -15.32889461517334
    7. '=
' → logprob: -15.45389461517334
    8. '[' → logprob: -15.82889461517334
    9. '=find' → logprob: -15.95389461517334
    10. ',' → logprob: -16.203893661499023

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.64708495605737e-05
    2. ' self' → logprob: -9.625066757202148
    3. '(self' → logprob: -14.875066757202148
    4. '[self' → logprob: -17.62506675720215
    5. 's' → logprob: -18.37506675720215
    6. 'y' → logprob: -19.25006675720215
    7. '
' → logprob: -19.62506675720215
    8. '	self' → logprob: -20.00006675720215
    9. 'Union' → logprob: -20.25006675720215
    10. '=self' → logprob: -20.50006675720215

Token 339: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.048679571598768234
    2. '.find' → logprob: -3.0486795902252197
    3. 'parent' → logprob: -9.54867935180664
    4. ' find' → logprob: -11.04867935180664
    5. '=find' → logprob: -13.67367935180664
    6. '.parent' → logprob: -13.79867935180664
    7. '	find' → logprob: -14.17367935180664
    8. '.' → logprob: -14.17367935180664
    9. '(find' → logprob: -14.29867935180664
    10. ')find' → logprob: -15.54867935180664

Token 340: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.1472419600977446e-06
    2. '(root' → logprob: -14.250000953674316
    3. '_root' → logprob: -15.625000953674316
    4. ' root' → logprob: -15.875000953674316
    5. '(x' → logprob: -16.500001907348633
    6. 'parent' → logprob: -17.125001907348633
    7. '	root' → logprob: -18.375001907348633
    8. 'roo' → logprob: -18.625001907348633
    9. 'r' → logprob: -19.125001907348633
    10. '(' → logprob: -19.625001907348633

Token 341: '(self' (ID: 2402)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.002774443943053484
    2. '(self' → logprob: -6.002774238586426
    3. '(' → logprob: -8.377774238586426
    4. '(x' → logprob: -10.002774238586426
    5. 'y' → logprob: -11.752774238586426
    6. '(parent' → logprob: -12.502774238586426
    7. ' y' → logprob: -12.752774238586426
    8. 'self' → logprob: -12.752774238586426
    9. ')' → logprob: -13.002774238586426
    10. '(
' → logprob: -13.377774238586426

Token 342: '.parent' (ID: 17454)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.334419310092926
    2. 'y' → logprob: -1.3344192504882812
    3. '.parent' → logprob: -4.209419250488281
    4. '[parent' → logprob: -6.459419250488281
    5. '[y' → logprob: -6.584419250488281
    6. ' y' → logprob: -7.084419250488281
    7. '(parent' → logprob: -7.084419250488281
    8. '(y' → logprob: -7.459419250488281
    9. ')' → logprob: -7.584419250488281
    10. ' parent' → logprob: -8.459419250488281

Token 343: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.04871715232729912
    2. '[x' → logprob: -3.0487172603607178
    3. 'y' → logprob: -9.673717498779297
    4. '[' → logprob: -10.298717498779297
    5. 'x' → logprob: -10.798717498779297
    6. '(y' → logprob: -12.548717498779297
    7. '[parent' → logprob: -12.548717498779297
    8. '[self' → logprob: -12.923717498779297
    9. ']' → logprob: -13.923717498779297
    10. ')' → logprob: -14.173717498779297

Token 344: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16050955653190613
    2. ')' → logprob: -1.9105095863342285
    3. ']' → logprob: -9.66050910949707
    4. '[y' → logprob: -9.78550910949707
    5. '(y' → logprob: -10.41050910949707
    6. '])
' → logprob: -10.41050910949707
    7. ')y' → logprob: -10.91050910949707
    8. 'y' → logprob: -11.03550910949707
    9. ' )' → logprob: -11.28550910949707
    10. ')
' → logprob: -11.53550910949707

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2547345757484436
    2. '       ' → logprob: -1.5047345161437988
    3. '   ' → logprob: -6.754734516143799
    4. 'self' → logprob: -7.254734516143799
    5. ' self' → logprob: -8.004734992980957
    6. '
' → logprob: -8.754734992980957
    7. '	   ' → logprob: -9.129734992980957
    8. '	       ' → logprob: -9.129734992980957
    9. 'x' → logprob: -9.879734992980957
    10. '	self' → logprob: -10.254734992980957

Token 346: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01487959548830986
    2. ' self' → logprob: -4.2648797035217285
    3. '           ' → logprob: -7.5148797035217285
    4. '       ' → logprob: -8.76487922668457
    5. 'return' (adapté à ' return') → logprob: -11.88987922668457
    6. '   ' → logprob: -12.26487922668457
    7. 'x' → logprob: -13.51487922668457
    8. '	self' → logprob: -13.63987922668457
    9. ' ' → logprob: -15.63987922668457
    10. ' return' → logprob: -16.51487922668457

Token 347: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.017821287736296654
    2. ' y' → logprob: -4.267821311950684
    3. 'self' → logprob: -5.642821311950684
    4. ' self' → logprob: -9.392821311950684
    5. 'x' → logprob: -11.017821311950684
    6. '(self' → logprob: -12.517821311950684
    7. ' ' → logprob: -13.642821311950684
    8. '(y' → logprob: -13.892821311950684
    9. '	y' → logprob: -14.142821311950684
    10. '   ' → logprob: -14.392821311950684

Token 348: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45494967699050903
    2. '<|end|>' → logprob: -1.0799496173858643
    3. '           ' → logprob: -4.454949855804443
    4. '   ' → logprob: -4.829949855804443
    5. ' ' → logprob: -5.829949855804443
    6. '        ' → logprob: -6.829949855804443
    7. '	' → logprob: -7.204949855804443
    8. '    ' → logprob: -8.204949378967285
    9. '  ' → logprob: -8.329949378967285
    10. 'self' → logprob: -8.454949378967285

Token 350: ' def' (ID: 1056)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.021022701635956764
    2. '       ' → logprob: -4.021022796630859
    3. ' self' → logprob: -6.271022796630859
    4. '   ' → logprob: -7.271022796630859
    5. '           ' → logprob: -8.52102279663086
    6. '	self' → logprob: -10.02102279663086
    7. ' ' → logprob: -11.27102279663086
    8. '  ' → logprob: -12.27102279663086
    9. '```' → logprob: -12.52102279663086
    10. '        ' → logprob: -12.89602279663086

Token 351: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.770536482334137
    2. ' unite' → logprob: -1.3955364227294922
    3. 'un' → logprob: -1.6455364227294922
    4. 'root' → logprob: -3.020536422729492
    5. ' union' → logprob: -3.645536422729492
    6. 'p' → logprob: -4.645536422729492
    7. 'parent' → logprob: -5.520536422729492
    8. 'find' → logprob: -6.520536422729492
    9. 'uni' → logprob: -6.895536422729492
    10. 'par' → logprob: -7.270536422729492

Token 352: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012511172099038959
    2. 'root' → logprob: -9.62512493133545
    3. '(root' → logprob: -9.87512493133545
    4. '(' → logprob: -12.50012493133545
    5. ' (' → logprob: -13.00012493133545
    6. 'self' → logprob: -13.87512493133545
    7. '(x' → logprob: -15.00012493133545
    8. '(parent' → logprob: -15.75012493133545
    9. '_root' → logprob: -16.625125885009766
    10. '(s' → logprob: -17.000125885009766

Token 353: ',' (ID: 11)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.2582845985889435
    2. '(self' → logprob: -1.633284568786621
    3. '(root' → logprob: -4.008284568786621
    4. '(x' → logprob: -4.758284568786621
    5. 'self' → logprob: -6.508284568786621
    6. ')(' → logprob: -6.633284568786621
    7. ',' → logprob: -7.008284568786621
    8. '(' → logprob: -7.758284568786621
    9. ')' → logprob: -7.883284568786621
    10. '_root' → logprob: -8.008284568786621

Token 354: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012257329188287258
    2. 'a' → logprob: -4.637257099151611
    3. ' x' → logprob: -6.012257099151611
    4. ' a' → logprob: -10.13725757598877
    5. 'root' → logprob: -12.63725757598877
    6. 'u' → logprob: -13.13725757598877
    7. 'p' → logprob: -13.13725757598877
    8. 'parent' → logprob: -14.26225757598877
    9. 'y' → logprob: -14.76225757598877
    10. 'self' → logprob: -15.26225757598877

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ' ,' → logprob: -11.000020027160645
    3. ',x' → logprob: -13.875020027160645
    4. 'self' → logprob: -14.000020027160645
    5. ',self' → logprob: -14.375020027160645
    6. '   ' → logprob: -14.500020027160645
    7. '_,' → logprob: -15.125020027160645
    8. ',y' → logprob: -15.625020027160645
    9. '       ' → logprob: -16.25002098083496
    10. ',
' → logprob: -17.12502098083496

Token 356: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06196858361363411
    2. ' y' → logprob: -2.8119685649871826
    3. '   ' → logprob: -14.436968803405762
    4. ' ' → logprob: -15.561968803405762
    5. '    ' → logprob: -16.311967849731445
    6. '  ' → logprob: -16.436967849731445
    7. '	y' → logprob: -16.811967849731445
    8. 'x' → logprob: -17.061967849731445
    9. '       ' → logprob: -18.936967849731445
    10. '      ' → logprob: -19.686967849731445

Token 357: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.126961812376976
    2. '):
' → logprob: -2.1269617080688477
    3. ')' → logprob: -11.251961708068848
    4. '):
' → logprob: -11.251961708068848
    5. ' ):' → logprob: -12.251961708068848
    6. '   ' → logprob: -13.751961708068848
    7. '):

' → logprob: -14.001961708068848
    8. ' ):
' → logprob: -14.376961708068848
    9. ':' → logprob: -15.251961708068848
    10. ',' → logprob: -15.876961708068848

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09093830734491348
    2. 'x' → logprob: -3.4659383296966553
    3. ' x' → logprob: -3.4659383296966553
    4. '   ' → logprob: -4.715938091278076
    5. 'root' → logprob: -4.840938091278076
    6. 'px' → logprob: -5.840938091278076
    7. ' px' → logprob: -5.965938091278076
    8. ' root' → logprob: -6.340938091278076
    9. ' ' → logprob: -9.090938568115234
    10. ' rx' → logprob: -9.590938568115234

Token 359: ' px' (ID: 27003)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016426581889390945
    2. 'root' → logprob: -4.2664265632629395
    3. 'rx' → logprob: -6.2664265632629395
    4. 'px' (adapté à ' px') → logprob: -8.266427040100098
    5. '   ' → logprob: -9.516427040100098
    6. 'xr' → logprob: -11.141427040100098
    7. '    
' → logprob: -12.641427040100098
    8. '```' → logprob: -13.016427040100098
    9. 'fx' → logprob: -13.266427040100098
    10. '	x' → logprob: -13.766427040100098

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144695043563843
    2. '=' → logprob: -1.7014470100402832
    3. '=self' → logprob: -10.451446533203125
    4. '   ' → logprob: -13.451446533203125
    5. '=find' → logprob: -14.451446533203125
    6. 'y' → logprob: -14.576446533203125
    7. ')' → logprob: -14.951446533203125
    8. ',' → logprob: -15.076446533203125
    9. ']' → logprob: -15.201446533203125
    10. ' ' → logprob: -15.451446533203125

Token 361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.875158309936523
    4. '(self' → logprob: -20.125158309936523
    5. '	self' → logprob: -21.125158309936523
    6. '       ' → logprob: -21.125158309936523
    7. ' ' → logprob: -22.125158309936523
    8. '[self' → logprob: -22.375158309936523
    9. 'this' → logprob: -22.750158309936523
    10. '  ' → logprob: -23.000158309936523

Token 362: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5759897828102112
    2. '.find' → logprob: -0.8259897828102112
    3. '.' → logprob: -10.325989723205566
    4. 'parent' → logprob: -11.825989723205566
    5. '.parent' → logprob: -12.075989723205566
    6. ' find' → logprob: -13.450989723205566
    7. '.findall' → logprob: -13.950989723205566
    8. ')find' → logprob: -14.950989723205566
    9. ' .' → logprob: -15.200989723205566
    10. 'self' → logprob: -15.325989723205566

Token 363: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -2.935296834039036e-06
    2. 'x' → logprob: -13.50000286102295
    3. 'parent' → logprob: -14.37500286102295
    4. '(root' → logprob: -14.62500286102295
    5. ' root' → logprob: -15.50000286102295
    6. '(x' → logprob: -16.500003814697266
    7. '_root' → logprob: -16.625003814697266
    8. 'self' → logprob: -18.125003814697266
    9. '	root' → logprob: -18.750003814697266
    10. ')' → logprob: -19.125003814697266

Token 364: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.5048530030981055e-06
    2. 'x' → logprob: -13.500001907348633
    3. '(' → logprob: -16.000001907348633
    4. '(y' → logprob: -18.250001907348633
    5. ' (' → logprob: -20.000001907348633
    6. '(px' → logprob: -20.500001907348633
    7. ',x' → logprob: -21.500001907348633
    8. '(
' → logprob: -21.625001907348633
    9. ' x' → logprob: -21.875001907348633
    10. '(self' → logprob: -21.875001907348633

Token 365: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12704035639762878
    2. ')' → logprob: -2.127040386199951
    3. ')
' → logprob: -9.252039909362793
    4. ' )
' → logprob: -11.127039909362793
    5. ')

' → logprob: -14.377039909362793
    6. ' )' → logprob: -14.502039909362793
    7. '       ' → logprob: -15.502039909362793
    8. '   ' → logprob: -16.50204086303711
    9. '())
' → logprob: -16.62704086303711
    10. ')#' → logprob: -17.62704086303711

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12885203957557678
    2. '
' → logprob: -2.503852128982544
    3. ' py' → logprob: -4.628851890563965
    4. ' if' → logprob: -5.128851890563965
    5. 'py' → logprob: -5.378851890563965
    6. '<|end|>' → logprob: -5.628851890563965
    7. ' 
' → logprob: -5.753851890563965
    8. '
' → logprob: -5.753851890563965
    9. '        
' → logprob: -6.503851890563965
    10. '   ' → logprob: -6.628851890563965

Token 367: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' (adapté à ' py') → logprob: -1.306760805164231e-05
    2. ' py' → logprob: -11.25001335144043
    3. '_py' → logprob: -16.75001335144043
    4. 'qy' → logprob: -17.37501335144043
    5. '(py' → logprob: -18.50001335144043
    6. '.py' → logprob: -19.75001335144043
    7. 'px' → logprob: -20.00001335144043
    8. '   ' → logprob: -20.25001335144043
    9. 'Py' → logprob: -20.37501335144043
    10. ' ' → logprob: -22.37501335144043

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47432631254196167
    2. ' =' → logprob: -0.9743263125419617
    3. ')' → logprob: -8.474326133728027
    4. '=self' → logprob: -10.974326133728027
    5. ',' → logprob: -11.849326133728027
    6. '==' → logprob: -12.349326133728027
    7. '       ' → logprob: -12.849326133728027
    8. '=
' → logprob: -12.974326133728027
    9. ')=' → logprob: -13.474326133728027
    10. '<|end|>' → logprob: -13.849326133728027

Token 369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007106438861228526
    2. ' self' → logprob: -7.250710487365723
    3. '(self' → logprob: -14.750710487365723
    4. '[self' → logprob: -16.37571144104004
    5. '=self' → logprob: -16.75071144104004
    6. '	self' → logprob: -17.12571144104004
    7. 'find' → logprob: -17.37571144104004
    8. '       ' → logprob: -18.25071144104004
    9. 'def' → logprob: -18.62571144104004
    10. '   ' → logprob: -19.25071144104004

Token 370: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0025364249013364315
    2. '.find' → logprob: -6.002536296844482
    3. 'parent' → logprob: -10.37753677368164
    4. ' find' → logprob: -10.50253677368164
    5. '.' → logprob: -14.37753677368164
    6. '	find' → logprob: -15.12753677368164
    7. 'y' → logprob: -15.37753677368164
    8. '   ' → logprob: -15.37753677368164
    9. ' ' → logprob: -15.75253677368164
    10. 'py' → logprob: -16.00253677368164

Token 371: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.4021237802808173e-05
    2. '(y' → logprob: -11.500014305114746
    3. 'y' → logprob: -13.250014305114746
    4. ' root' → logprob: -14.375014305114746
    5. '(root' → logprob: -14.500014305114746
    6. ' y' → logprob: -14.750014305114746
    7. 'py' → logprob: -15.000014305114746
    8. '(x' → logprob: -16.62501335144043
    9. 'parent' → logprob: -16.62501335144043
    10. '[y' → logprob: -17.12501335144043

Token 372: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -1.1517960956552997e-05
    2. 'y' → logprob: -12.250011444091797
    3. '(py' → logprob: -12.625011444091797
    4. '(' → logprob: -12.875011444091797
    5. ')' → logprob: -14.750011444091797
    6. ' y' → logprob: -15.625011444091797
    7. ' (' → logprob: -17.000011444091797
    8. 'py' → logprob: -17.000011444091797
    9. ')y' → logprob: -17.375011444091797
    10. '   ' → logprob: -17.375011444091797

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144149661064148
    2. ')
' → logprob: -1.7014415264129639
    3. ')
' → logprob: -10.701441764831543
    4. '       ' → logprob: -12.326441764831543
    5. ')

' → logprob: -14.576441764831543
    6. '):
' → logprob: -14.701441764831543
    7. '   ' → logprob: -15.701441764831543
    8. ')`
' → logprob: -16.701440811157227
    9. ' )' → logprob: -16.826440811157227
    10. ')`' → logprob: -17.201440811157227

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1427639275789261
    2. '<|end|>' → logprob: -2.76776385307312
    3. ' if' → logprob: -3.01776385307312
    4. '
' → logprob: -4.142764091491699
    5. ' ' → logprob: -6.642764091491699
    6. '   ' → logprob: -7.142764091491699
    7. 'if' → logprob: -7.392764091491699
    8. '        
' → logprob: -7.392764091491699
    9. ' 
' → logprob: -7.517764091491699
    10. '  
' → logprob: -8.0177640914917

Token 375: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.127333340875339e-06
    2. ' if' → logprob: -12.500003814697266
    3. '       ' → logprob: -14.750003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '	if' → logprob: -19.250003814697266
    6. 'If' → logprob: -22.250003814697266
    7. '```' → logprob: -22.625003814697266
    8. '
' → logprob: -23.000003814697266
    9. '        
' → logprob: -24.250003814697266
    10. 'return' → logprob: -24.750003814697266

Token 376: ' px' (ID: 27003)
  Prédit: ' px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.31343355774879456
    2. 'px' → logprob: -1.3134335279464722
    3. '(px' → logprob: -8.938433647155762
    4. ' py' → logprob: -10.563433647155762
    5. 'py' → logprob: -12.063433647155762
    6. 'x' → logprob: -12.938433647155762
    7. ':px' → logprob: -12.938433647155762
    8. '_px' → logprob: -13.313433647155762
    9. ' ' → logprob: -13.688433647155762
    10. '   ' → logprob: -14.563433647155762

Token 377: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28814345598220825
    2. ' ==' → logprob: -1.5381433963775635
    3. '!=' → logprob: -3.5381433963775635
    4. ' !=' → logprob: -5.038143634796143
    5. ' ' → logprob: -12.163143157958984
    6. ' ' → logprob: -12.663143157958984
    7. '=' → logprob: -13.288143157958984
    8. '	' → logprob: -14.038143157958984
    9. '==
' → logprob: -14.288143157958984
    10. '[' → logprob: -14.663143157958984

Token 378: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.21138353645801544
    2. ' py' → logprob: -1.711383581161499
    3. '0' → logprob: -4.96138334274292
    4. '>' → logprob: -6.33638334274292
    5. '=' → logprob: -7.08638334274292
    6. '(py' → logprob: -9.336383819580078
    7. ' ' → logprob: -9.461383819580078
    8. '_py' → logprob: -9.961383819580078
    9. '=>' → logprob: -10.336383819580078
    10. 'px' → logprob: -10.961383819580078

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31334030628204346
    2. ':
' → logprob: -1.3133403062820435
    3. ' :' → logprob: -10.938340187072754
    4. ' and' → logprob: -11.063340187072754
    5. ' :
' → logprob: -11.438340187072754
    6. '       ' → logprob: -11.563340187072754
    7. ':
' → logprob: -11.688340187072754
    8. '):
' → logprob: -11.813340187072754
    9. '):' → logprob: -12.938340187072754
    10. ':

' → logprob: -13.313340187072754

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01591106876730919
    2. '       ' → logprob: -5.515911102294922
    3. ':
' → logprob: -5.515911102294922
    4. ' self' → logprob: -5.765911102294922
    5. 'self' → logprob: -6.640911102294922
    6. ':' → logprob: -6.765911102294922
    7. ',' → logprob: -7.515911102294922
    8. '   ' → logprob: -7.890911102294922
    9. '<|end|>' → logprob: -8.140911102294922
    10. ' and' → logprob: -8.265911102294922

Token 381: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15505030751228333
    2. ' self' → logprob: -2.030050277709961
    3. '           ' → logprob: -4.405050277709961
    4. '   ' → logprob: -10.655050277709961
    5. '               ' → logprob: -10.905050277709961
    6. '	self' → logprob: -11.030050277709961
    7. '       ' → logprob: -12.280050277709961
    8. '[self' → logprob: -12.780050277709961
    9. '```' → logprob: -13.030050277709961
    10. '﻿' → logprob: -13.280050277709961

Token 382: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.20226480066776276
    2. 'parent' → logprob: -1.7022647857666016
    3. '_parent' → logprob: -7.327264785766602
    4. '[parent' → logprob: -8.952264785766602
    5. ' parent' → logprob: -10.327264785766602
    6. '	parent' → logprob: -10.827264785766602
    7. ',parent' → logprob: -11.702264785766602
    8. 'Parent' → logprob: -14.077264785766602
    9. '-parent' → logprob: -14.327264785766602
    10. '   ' → logprob: -14.577264785766602

Token 383: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'py' → logprob: -16.625
    3. ' [' → logprob: -16.875
    4. '(py' → logprob: -17.5
    5. '[p' → logprob: -18.0
    6. ' py' → logprob: -18.75
    7. '_py' → logprob: -19.0
    8. '   ' → logprob: -19.25
    9. '[js' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 384: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -9.849109119386412e-06
    2. ' py' → logprob: -12.500009536743164
    3. '[' → logprob: -12.750009536743164
    4. 'px' → logprob: -13.000009536743164
    5. '_py' → logprob: -14.500009536743164
    6. '(py' → logprob: -14.625009536743164
    7. 'Py' → logprob: -18.000009536743164
    8. 'ply' → logprob: -19.375009536743164
    9. '.py' → logprob: -19.750009536743164
    10. '   ' → logprob: -20.250009536743164

Token 385: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019656023010611534
    2. '=' → logprob: -4.519656181335449
    3. ' =' → logprob: -5.019656181335449
    4. ']=' → logprob: -6.394656181335449
    5. ' ]' → logprob: -8.14465618133545
    6. ')' → logprob: -12.89465618133545
    7. '<|end|>' → logprob: -14.76965618133545
    8. '[' → logprob: -15.14465618133545
    9. ' ' → logprob: -15.76965618133545
    10. '    ' → logprob: -16.394655227661133

Token 386: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192955136299133
    2. '=' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.50192928314209
    4. ',' → logprob: -16.876930236816406
    5. ')' → logprob: -17.001930236816406
    6. '[' → logprob: -17.001930236816406
    7. '＝' → logprob: -17.126930236816406
    8. '=x' → logprob: -17.376930236816406
    9. '<|end|>' → logprob: -17.376930236816406
    10. ']' → logprob: -17.501930236816406

Token 387: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -9.639096970204264e-05
    2. ' px' → logprob: -9.250096321105957
    3. 'py' → logprob: -16.125097274780273
    4. '(px' → logprob: -17.375097274780273
    5. '_px' → logprob: -17.625097274780273
    6. ':px' → logprob: -18.375097274780273
    7. 'pm' → logprob: -19.000097274780273
    8. 'pix' → logprob: -19.500097274780273
    9. 'p' → logprob: -19.750097274780273
    10. 'pt' → logprob: -19.875097274780273

Token 388: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020923245698213577
    2. 'elif' → logprob: -4.395923137664795
    3. '<|end|>' → logprob: -5.270923137664795
    4. ' elif' → logprob: -6.145923137664795
    5. 'else' → logprob: -7.395923137664795
    6. ' else' → logprob: -8.520923614501953
    7. '           ' → logprob: -8.520923614501953
    8. '   ' → logprob: -11.020923614501953
    9. '	elif' → logprob: -11.395923614501953
    10. '<|end|>' → logprob: -11.520923614501953

Token 390: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.02852397970855236
    2. '       ' → logprob: -3.7785239219665527
    3. ' elif' → logprob: -5.278523921966553
    4. 'else' (adapté à ' else') → logprob: -8.778524398803711
    5. 'if' → logprob: -12.403524398803711
    6. '   ' → logprob: -13.153524398803711
    7. '	elif' → logprob: -13.153524398803711
    8. ' else' → logprob: -14.028524398803711
    9. '           ' → logprob: -14.528524398803711
    10. '    ' → logprob: -14.653524398803711

Token 391: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010756568983197212
    2. ':' → logprob: -4.885756492614746
    3. ' if' → logprob: -6.385756492614746
    4. ':
' → logprob: -6.635756492614746
    5. '       ' → logprob: -10.010756492614746
    6. '          ' → logprob: -10.635756492614746
    7. '   ' → logprob: -10.885756492614746
    8. ',' → logprob: -11.385756492614746
    9. 'if' → logprob: -11.635756492614746
    10. '	       ' → logprob: -11.760756492614746

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.147689551115036
    2. 'self' → logprob: -2.2726895809173584
    3. ' self' → logprob: -3.3976895809173584
    4. '   ' → logprob: -7.397689342498779
    5. '       ' → logprob: -8.897689819335938
    6. '	self' → logprob: -10.522689819335938
    7. ' ' → logprob: -11.397689819335938
    8. '  ' → logprob: -12.147689819335938
    9. '	       ' → logprob: -12.522689819335938
    10. '          ' → logprob: -12.522689819335938

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04389781132340431
    2. ' self' → logprob: -3.168897867202759
    3. '           ' → logprob: -7.04389762878418
    4. '       ' → logprob: -11.41889762878418
    5. '	self' → logprob: -11.79389762878418
    6. '   ' → logprob: -12.66889762878418
    7. '               ' → logprob: -13.79389762878418
    8. ' ' → logprob: -13.79389762878418
    9. '  ' → logprob: -14.66889762878418
    10. '[self' → logprob: -14.66889762878418

Token 394: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.011051470413804054
    2. 'parent' → logprob: -4.511051654815674
    3. '	parent' → logprob: -13.511051177978516
    4. '[parent' → logprob: -14.011051177978516
    5. ' parent' → logprob: -14.386051177978516
    6. '.' → logprob: -14.761051177978516
    7. ',parent' → logprob: -15.761051177978516
    8. '   ' → logprob: -16.011051177978516
    9. '_parent' → logprob: -16.261051177978516
    10. '           ' → logprob: -16.761051177978516

Token 395: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -16.5
    3. '[x' → logprob: -16.5
    4. '[parent' → logprob: -16.5
    5. ' [' → logprob: -16.75
    6. '```' → logprob: -16.75
    7. '       ' → logprob: -16.75
    8. '[
' → logprob: -18.5
    9. '[self' → logprob: -18.625
    10. '[ix' → logprob: -18.625

Token 396: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -9.088346359931165e-07
    2. ' px' → logprob: -14.125000953674316
    3. '(px' → logprob: -16.25
    4. ':px' → logprob: -17.75
    5. '_px' → logprob: -17.75
    6. 'py' → logprob: -19.0
    7. '[' → logprob: -19.125
    8. 'Px' → logprob: -19.5
    9. 'qx' → logprob: -19.875
    10. 'tx' → logprob: -20.125

Token 397: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2552429139614105
    2. ' =' → logprob: -1.505242943763733
    3. ']' → logprob: -5.755242824554443
    4. ']=' → logprob: -9.505243301391602
    5. ')' → logprob: -9.630243301391602
    6. ')=' → logprob: -13.880243301391602
    7. ' ]' → logprob: -14.505243301391602
    8. '<|end|>' → logprob: -15.880243301391602
    9. '[' → logprob: -16.5052433013916
    10. ' ' → logprob: -16.8802433013916

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. ')' → logprob: -19.264163970947266
    4. 'py' → logprob: -20.014163970947266
    5. '[' → logprob: -20.139163970947266
    6. ' ' → logprob: -20.389163970947266
    7. ']' → logprob: -20.639163970947266
    8. ']=' → logprob: -20.764163970947266
    9. '=y' → logprob: -20.764163970947266
    10. '_py' → logprob: -20.889163970947266

Token 399: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0001234428636962548
    2. ' py' → logprob: -9.000123023986816
    3. '(py' → logprob: -17.250123977661133
    4. '_py' → logprob: -18.375123977661133
    5. 'ply' → logprob: -20.125123977661133
    6. 'Py' → logprob: -20.750123977661133
    7. '.py' → logprob: -21.000123977661133
    8. 'px' → logprob: -21.750123977661133
    9. '   ' → logprob: -23.375123977661133
    10. 'poly' → logprob: -23.625123977661133

Token 400: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -1.1484720706939697
    2. ' is' → logprob: -1.2734720706939697
    3. ' iss' → logprob: -1.3984720706939697
    4. ' connected' → logprob: -2.2734720706939697
    5. 'same' → logprob: -3.2734720706939697
    6. 'iss' → logprob: -5.148471832275391
    7. 'is' → logprob: -5.648471832275391
    8. 'connected' → logprob: -5.773471832275391
    9. ' isin' → logprob: -7.648471832275391
    10. ' find' → logprob: -7.773471832275391

Token 404: '_group' (ID: 15990)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1625594049692154
    2. '(' → logprob: -2.0375595092773438
    3. 'root' → logprob: -4.162559509277344
    4. '(x' → logprob: -6.662559509277344
    5. 's' → logprob: -7.412559509277344
    6. '_root' → logprob: -7.662559509277344
    7. '(root' → logprob: -7.787559509277344
    8. ' (' → logprob: -8.537559509277344
    9. 'roots' → logprob: -8.912559509277344
    10. 'self' → logprob: -8.912559509277344

Token 405: '_or' (ID: 15400)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. ' (' → logprob: -17.25002670288086
    4. 'self' → logprob: -17.50002670288086
    5. '(s' → logprob: -18.50002670288086
    6. '(Self' → logprob: -19.00002670288086
    7. '   ' → logprob: -19.62502670288086
    8. '(this' → logprob: -20.62502670288086
    9. '(sel' → logprob: -20.75002670288086
    10. '(se' → logprob: -21.12502670288086

Token 406: '_no' (ID: 13575)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.038319624960422516
    2. '_not' → logprob: -3.2883195877075195
    3. 'no' → logprob: -8.66331958770752
    4. 'root' → logprob: -10.66331958770752
    5. '_no' → logprob: -10.78831958770752
    6. 'Not' → logprob: -10.91331958770752
    7. ' not' → logprob: -11.66331958770752
    8. 'self' → logprob: -12.03831958770752
    9. 'n' → logprob: -12.41331958770752
    10. '_root' → logprob: -12.66331958770752

Token 407: '(self' (ID: 2402)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00017588881019037217
    2. '(self' → logprob: -8.750175476074219
    3. 'f' → logprob: -11.500175476074219
    4. 'ne' → logprob: -12.625175476074219
    5. 'def' → logprob: -13.500175476074219
    6. 'w' → logprob: -13.875175476074219
    7. 'r' → logprob: -15.250175476074219
    8. 'p' → logprob: -15.625175476074219
    9. 'self' → logprob: -15.750175476074219
    10. '_t' → logprob: -15.750175476074219

Token 408: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.2166411478538066e-05
    2. '(' → logprob: -10.000052452087402
    3. ' (' → logprob: -12.000052452087402
    4. '(s' → logprob: -15.375052452087402
    5. 'self' → logprob: -16.000051498413086
    6. '(x' → logprob: -16.500051498413086
    7. '   ' → logprob: -16.875051498413086
    8. ')(' → logprob: -16.875051498413086
    9. '(this' → logprob: -17.750051498413086
    10. ')' → logprob: -17.875051498413086

Token 409: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03860744088888168
    2. ' x' → logprob: -3.288607358932495
    3. 'self' → logprob: -7.538607597351074
    4. ' self' → logprob: -11.038607597351074
    5. 'a' → logprob: -11.663607597351074
    6. '   ' → logprob: -11.913607597351074
    7. ' ' → logprob: -14.413607597351074
    8. ' a' → logprob: -14.913607597351074
    9. '	x' → logprob: -15.038607597351074
    10. ',x' → logprob: -15.038607597351074

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001239196863025427
    2. ' ,' → logprob: -9.000123977661133
    3. ',x' → logprob: -15.500123977661133
    4. ',y' → logprob: -15.875123977661133
    5. 'self' → logprob: -17.000123977661133
    6. '   ' → logprob: -17.125123977661133
    7. ',self' → logprob: -17.375123977661133
    8. '):' → logprob: -18.500123977661133
    9. ' ' → logprob: -19.250123977661133
    10. '  ' → logprob: -19.375123977661133

Token 411: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018150413408875465
    2. ' y' → logprob: -4.018150329589844
    3. '   ' → logprob: -14.643150329589844
    4. '	y' → logprob: -16.268150329589844
    5. '    ' → logprob: -18.268150329589844
    6. ' ' → logprob: -18.518150329589844
    7. '  ' → logprob: -18.643150329589844
    8. 'x' → logprob: -19.018150329589844
    9. ')y' → logprob: -19.768150329589844
    10. ''y' → logprob: -20.143150329589844

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010946154361590743
    2. '):
' → logprob: -6.876094818115234
    3. ')' → logprob: -9.751094818115234
    4. ',' → logprob: -13.876094818115234
    5. '):
' → logprob: -14.126094818115234
    6. '):

' → logprob: -14.501094818115234
    7. '   ' → logprob: -14.626094818115234
    8. '(self' → logprob: -15.001094818115234
    9. ' ):' → logprob: -15.626094818115234
    10. ':' → logprob: -15.751094818115234

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4819445312023163
    2. '   ' → logprob: -1.3569445610046387
    3. '<|end|>' → logprob: -2.2319445610046387
    4. ' return' → logprob: -4.231944561004639
    5. '	return' → logprob: -6.481944561004639
    6. '    ' → logprob: -7.731944561004639
    7. '<|end|>' → logprob: -8.85694408416748
    8. ' #' → logprob: -8.85694408416748
    9. '     ' → logprob: -8.98194408416748
    10. '(' → logprob: -9.10694408416748

Token 414: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01850365474820137
    2. ' return' → logprob: -4.018503665924072
    3. '   ' → logprob: -8.643503189086914
    4. '       ' → logprob: -8.768503189086914
    5. 'px' → logprob: -10.893503189086914
    6. '	return' → logprob: -13.518503189086914
    7. '
' → logprob: -13.893503189086914
    8. ' px' → logprob: -14.268503189086914
    9. ' ' → logprob: -15.768503189086914
    10. '  ' → logprob: -17.018503189086914

Token 415: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023248272016644478
    2. ' self' → logprob: -3.7732481956481934
    3. '(self' → logprob: -12.898248672485352
    4. '   ' → logprob: -15.523248672485352
    5. '	self' → logprob: -16.64824867248535
    6. '[self' → logprob: -17.27324867248535
    7. ' ' → logprob: -17.77324867248535
    8. 'Self' → logprob: -19.77324867248535
    9. 's' → logprob: -20.64824867248535
    10. ' ' → logprob: -20.89824867248535

Token 416: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -7.465036105713807e-06
    2. '.parent' → logprob: -12.125007629394531
    3. 'find' → logprob: -13.375007629394531
    4. '.' → logprob: -14.875007629394531
    5. '.same' → logprob: -17.37500762939453
    6. ' .' → logprob: -17.62500762939453
    7. ').' → logprob: -18.12500762939453
    8. '.findall' → logprob: -18.25000762939453
    9. 'parent' → logprob: -18.50000762939453
    10. '.Find' → logprob: -18.87500762939453

Token 417: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: 0.0
    2. '(root' → logprob: -17.125
    3. ' root' → logprob: -17.875
    4. '_root' → logprob: -18.125
    5. 'roots' → logprob: -20.25
    6. '	root' → logprob: -20.375
    7. '(x' → logprob: -21.0
    8. 'x' → logprob: -21.25
    9. '.root' → logprob: -21.5
    10. 'same' → logprob: -22.0

Token 418: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004079112783074379
    2. '(' → logprob: -5.504079341888428
    3. ' (' → logprob: -14.37907886505127
    4. '(y' → logprob: -17.379079818725586
    5. '(
' → logprob: -17.504079818725586
    6. '((' → logprob: -18.379079818725586
    7. '(user' → logprob: -18.379079818725586
    8. 'x' → logprob: -18.629079818725586
    9. '("("' → logprob: -19.254079818725586
    10. '(s' → logprob: -20.129079818725586

Token 419: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021307668066583574
    2. ')==' → logprob: -8.500212669372559
    3. '(x' → logprob: -12.000212669372559
    4. ' )' → logprob: -12.875212669372559
    5. '(' → logprob: -14.250212669372559
    6. '==' → logprob: -16.875213623046875
    7. 'x' → logprob: -17.500213623046875
    8. '())' → logprob: -18.250213623046875
    9. '）' → logprob: -18.500213623046875
    10. ']==' → logprob: -18.750213623046875

Token 420: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.026662634685635567
    2. ' ==' → logprob: -3.776662588119507
    3. '(' → logprob: -6.526662826538086
    4. '()==' → logprob: -7.026662826538086
    5. '()' → logprob: -7.526662826538086
    6. ')==' → logprob: -8.651662826538086
    7. ')' → logprob: -8.776662826538086
    8. ']==' → logprob: -9.401662826538086
    9. '(x' → logprob: -10.026662826538086
    10. '=' → logprob: -10.776662826538086

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005235529970377684
    2. ' self' → logprob: -5.25523567199707
    3. '       ' → logprob: -14.25523567199707
    4. '   ' → logprob: -14.63023567199707
    5. '(self' → logprob: -15.00523567199707
    6. '	self' → logprob: -15.63023567199707
    7. 'y' → logprob: -15.75523567199707
    8. '=self' → logprob: -17.75523567199707
    9. '[self' → logprob: -17.88023567199707
    10. '    ' → logprob: -18.00523567199707

Token 422: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.12693557143211365
    2. '.find' → logprob: -2.1269354820251465
    3. '.' → logprob: -12.251935958862305
    4. '.findall' → logprob: -13.626935958862305
    5. '	find' → logprob: -14.751935958862305
    6. 'same' → logprob: -15.001935958862305
    7. ')find' → logprob: -15.751935958862305
    8. ' find' → logprob: -16.126935958862305
    9. 'y' → logprob: -16.251935958862305
    10. '(find' → logprob: -16.376935958862305

Token 423: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0005418312503024936
    2. 'find' → logprob: -7.625541687011719
    3. 'y' → logprob: -10.625541687011719
    4. ' root' → logprob: -11.125541687011719
    5. '(root' → logprob: -12.625541687011719
    6. '(y' → logprob: -12.875541687011719
    7. 'r' → logprob: -13.250541687011719
    8. 'oot' → logprob: -13.375541687011719
    9. ' y' → logprob: -14.125541687011719
    10. '   ' → logprob: -14.250541687011719

Token 424: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -9.729906196298543e-06
    2. '(x' → logprob: -12.500009536743164
    3. ' (' → logprob: -12.625009536743164
    4. '(' → logprob: -12.875009536743164
    5. 'y' → logprob: -17.250009536743164
    6. '(py' → logprob: -17.500009536743164
    7. ' y' → logprob: -19.125009536743164
    8. '   ' → logprob: -19.125009536743164
    9. '(
' → logprob: -20.000009536743164
    10. ' ' → logprob: -20.250009536743164

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '<|end|>' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '}' → logprob: -16.750001907348633
    7. ')return' → logprob: -17.500001907348633
    8. ')x' → logprob: -17.750001907348633
    9. ')

' → logprob: -18.250001907348633
    10. '')' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 423
Tokens correctement prédits (1ère position, stricte): 172
Tokens correctement prédits (1ère position, avec adaptation): 195
Tokens correctement prédits (top 10): 362
Précision stricte (1ère position): 40.66%
Précision adaptée (1ère position): 46.10%
Précision (top 10): 85.58%
================================================================================
