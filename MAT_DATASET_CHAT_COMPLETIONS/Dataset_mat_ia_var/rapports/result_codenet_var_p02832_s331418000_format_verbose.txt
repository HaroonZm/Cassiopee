================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nombre_d_elements = int(input())

liste_entiers = list(map(int, input().split()))

prochain_element_attendu = 1

compteur_elements_ordonnes = 0

if 1 in liste_entiers:
    
    for element_courant in liste_entiers:
        
        if element_courant == prochain_element_attendu:
            
            compteur_elements_ordonnes += 1
            
            prochain_element_attendu += 1
    
    print(nombre_d_elements - compteur_elements_ordonnes)

else:
    
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nombre' (ID: 28576)
  → Token d'amorce (pas de prédiction)

Token 1: '_d' (ID: 1565)
  → Token d'amorce (pas de prédiction)

Token 2: '_elements' (ID: 53344)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3763886094093323
    2. '=' → logprob: -1.5013885498046875
    3. ' =' → logprob: -2.8763885498046875
    4. '[' → logprob: -3.7513885498046875
    5. '(' → logprob: -6.1263885498046875
    6. ')' → logprob: -6.3763885498046875
    7. '```' → logprob: -6.3763885498046875
    8. 's' → logprob: -6.5013885498046875
    9. '.' → logprob: -7.8763885498046875
    10. '_nombre' → logprob: -8.001388549804688

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013171174563467503
    2. '0' → logprob: -4.763171195983887
    3. '10' → logprob: -5.638171195983887
    4. ' len' → logprob: -7.888171195983887
    5. '20' → logprob: -8.763171195983887
    6. '5' → logprob: -9.138171195983887
    7. '1' → logprob: -9.388171195983887
    8. ' int' → logprob: -9.638171195983887
    9. '100' → logprob: -10.263171195983887
    10. ' "' → logprob: -10.513171195983887

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007394956424832344
    2. '```' → logprob: -6.007394790649414
    3. ''' → logprob: -6.382394790649414
    4. '_' → logprob: -6.507394790649414
    5. '`' → logprob: -8.007394790649414
    6. '('' → logprob: -8.257394790649414
    7. '<|end|>' → logprob: -8.882394790649414
    8. '"' → logprob: -9.132394790649414
    9. '[' → logprob: -9.132394790649414
    10. ')' → logprob: -9.507394790649414

Token 6: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0044076829217374325
    2. ')' → logprob: -5.62940788269043
    3. '()' → logprob: -8.37940788269043
    4. '("("' → logprob: -8.87940788269043
    5. '(
' → logprob: -9.12940788269043
    6. '<|end|>' → logprob: -9.25440788269043
    7. '```' → logprob: -10.00440788269043
    8. ' (' → logprob: -10.37940788269043
    9. '('' → logprob: -10.75440788269043
    10. '[' → logprob: -11.00440788269043

Token 7: 'liste' (ID: 69656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4012714624404907
    2. ')' → logprob: -1.6512714624404907
    3. '*' → logprob: -1.7762714624404907
    4. '#' → logprob: -2.651271343231201
    5. 'if' → logprob: -3.151271343231201
    6. '=' → logprob: -3.151271343231201
    7. '+' → logprob: -3.276271343231201
    8. ' ' → logprob: -3.401271343231201
    9. 'print' → logprob: -3.901271343231201
    10. '\' → logprob: -4.026271343231201

Token 8: '_ent' (ID: 66249)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4401479959487915
    2. '_' → logprob: -1.0651479959487915
    3. '.' → logprob: -5.315147876739502
    4. 's' → logprob: -5.565147876739502
    5. ')' → logprob: -7.690147876739502
    6. '[]' → logprob: -8.19014835357666
    7. '_s' → logprob: -8.44014835357666
    8. '_nombre' → logprob: -8.44014835357666
    9. '_[' → logprob: -8.69014835357666
    10. '[:]' → logprob: -8.81514835357666

Token 9: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0021905910689383745
    2. 'i' → logprob: -7.002190589904785
    3. '_' → logprob: -7.627190589904785
    4. '[' → logprob: -8.752190589904785
    5. '```' → logprob: -9.377190589904785
    6. 'rs' → logprob: -9.627190589904785
    7. '_i' → logprob: -9.752190589904785
    8. '[i' → logprob: -10.127190589904785
    9. 'irs' → logprob: -10.252190589904785
    10. 'ier' → logprob: -10.502190589904785

Token 10: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5489335060119629
    2. '[' → logprob: -1.298933506011963
    3. '.append' → logprob: -1.923933506011963
    4. '[:]' → logprob: -6.173933506011963
    5. '.setdefault' → logprob: -7.798933506011963
    6. '.extend' → logprob: -9.173933029174805
    7. '[]' → logprob: -9.173933029174805
    8. 's' → logprob: -9.298933029174805
    9. ' .' → logprob: -9.423933029174805
    10. '_' → logprob: -9.673933029174805

Token 11: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.02198386937379837
    2. '[]' → logprob: -4.146984100341797
    3. ' [' → logprob: -5.396984100341797
    4. ' list' → logprob: -7.271984100341797
    5. 'list' → logprob: -7.646984100341797
    6. '[' → logprob: -9.021984100341797
    7. '[list' → logprob: -9.896984100341797
    8. ' ' → logprob: -10.646984100341797
    9. '[int' → logprob: -11.146984100341797
    10. '[input' → logprob: -11.521984100341797

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004898331593722105
    2. '(range' → logprob: -5.504898548126221
    3. '(input' → logprob: -7.629898548126221
    4. '(int' → logprob: -8.629898071289062
    5. '(
' → logprob: -10.254898071289062
    6. '((' → logprob: -11.504898071289062
    7. '(user' → logprob: -11.629898071289062
    8. '(map' → logprob: -11.629898071289062
    9. '(en' → logprob: -11.629898071289062
    10. '(ent' → logprob: -11.629898071289062

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030042394995689392
    2. '(' → logprob: -3.5300424098968506
    3. 'int' → logprob: -9.40504264831543
    4. '(input' → logprob: -9.53004264831543
    5. '<int' → logprob: -9.53004264831543
    6. '(
' → logprob: -10.28004264831543
    7. '(lambda' → logprob: -11.15504264831543
    8. '[int' → logprob: -12.15504264831543
    9. '=int' → logprob: -12.28004264831543
    10. ')' → logprob: -13.40504264831543

Token 14: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0049836281687021255
    2. ',input' → logprob: -5.754983425140381
    3. '(' → logprob: -7.129983425140381
    4. 'input' → logprob: -7.504983425140381
    5. ',' → logprob: -8.504983901977539
    6. '))' → logprob: -9.129983901977539
    7. ')' → logprob: -9.879983901977539
    8. '=input' → logprob: -10.004983901977539
    9. '),' → logprob: -11.629983901977539
    10. '[input' → logprob: -12.004983901977539

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005309773609042168
    2. ' input' → logprob: -5.255309581756592
    3. '(input' → logprob: -9.50531005859375
    4. ',input' → logprob: -14.13031005859375
    5. '=input' → logprob: -15.75531005859375
    6. '	input' → logprob: -15.88031005859375
    7. '<input' → logprob: -15.88031005859375
    8. ')' → logprob: -16.13031005859375
    9. '))' → logprob: -16.50531005859375
    10. 'range' → logprob: -17.13031005859375

Token 16: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6489192843437195
    2. '(' → logprob: -1.2739193439483643
    3. '()' → logprob: -2.2739193439483643
    4. '())' → logprob: -2.7739193439483643
    5. '))' → logprob: -4.273919105529785
    6. ')' → logprob: -5.023919105529785
    7. '()));' → logprob: -5.523919105529785
    8. '(()' → logprob: -5.898919105529785
    9. '())))' → logprob: -6.898919105529785
    10. '().' → logprob: -7.398919105529785

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005272653419524431
    2. 'strip' → logprob: -5.25527286529541
    3. 'rstrip' → logprob: -10.25527286529541
    4. ' split' → logprob: -13.25527286529541
    5. 'spl' → logprob: -13.38027286529541
    6. '(split' → logprob: -14.75527286529541
    7. 's' → logprob: -17.130271911621094
    8. ')' → logprob: -18.505271911621094
    9. ' strip' → logprob: -18.755271911621094
    10. 'read' → logprob: -18.755271911621094

Token 18: '()))

' (ID: 125972)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6358360648155212
    2. '()))' → logprob: -1.510836124420166
    3. ')' → logprob: -1.635836124420166
    4. '))' → logprob: -3.385836124420166
    5. '()' → logprob: -4.885836124420166
    6. '(' → logprob: -5.010836124420166
    7. '())))' → logprob: -5.760836124420166
    8. ')))' → logprob: -6.135836124420166
    9. '('' → logprob: -6.885836124420166
    10. ''))' → logprob: -9.010835647583008

Token 19: 'pro' (ID: 823)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5582147836685181
    2. 'for' → logprob: -1.433214783668518
    3. 'n' → logprob: -3.3082146644592285
    4. 'i' → logprob: -3.5582146644592285
    5. '#' → logprob: -3.6832146644592285
    6. 'if' → logprob: -4.1832146644592285
    7. 'f' → logprob: -4.5582146644592285
    8. 'c' → logprob: -4.6832146644592285
    9. 'm' → logprob: -4.6832146644592285
    10. 'result' → logprob: -5.0582146644592285

Token 20: 'chain' (ID: 13289)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22471225261688232
    2. 'm' → logprob: -2.099712371826172
    3. 'du' → logprob: -2.724712371826172
    4. 'cess' → logprob: -5.724712371826172
    5. 'gram' → logprob: -5.974712371826172
    6. 'b' → logprob: -6.224712371826172
    7. 'duit' → logprob: -6.474712371826172
    8. '```' → logprob: -7.474712371826172
    9. 'u' → logprob: -8.099712371826172
    10. 'duct' → logprob: -8.349712371826172

Token 21: '_element' (ID: 21131)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0097948107868433
    2. '_token' → logprob: -5.88479471206665
    3. '(' → logprob: -6.75979471206665
    4. '_e' → logprob: -6.88479471206665
    5. '_element' → logprob: -7.00979471206665
    6. '_val' → logprob: -7.63479471206665
    7. 'e' → logprob: -7.75979471206665
    8. 's' → logprob: -8.009795188903809
    9. '_m' → logprob: -8.134795188903809
    10. '_car' → logprob: -8.134795188903809

Token 22: '_att' (ID: 35618)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005620515905320644
    2. '(' → logprob: -6.00562047958374
    3. 's' → logprob: -6.38062047958374
    4. '[' → logprob: -7.63062047958374
    5. ' =' → logprob: -7.88062047958374
    6. '=' → logprob: -8.630620956420898
    7. '()' → logprob: -9.505620956420898
    8. '_s' → logprob: -9.630620956420898
    9. '_=' → logprob: -10.255620956420898
    10. '```' → logprob: -10.505620956420898

Token 23: 'endu' (ID: 46640)
  Prédit: 'endu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endu' → logprob: -0.013374448753893375
    2. 'ent' → logprob: -5.263374328613281
    3. 'endre' → logprob: -5.763374328613281
    4. 'endue' → logprob: -6.388374328613281
    5. 'endus' → logprob: -6.763374328613281
    6. 'end' → logprob: -6.763374328613281
    7. 'nd' → logprob: -8.263374328613281
    8. 'ente' → logprob: -8.513374328613281
    9. 'entu' → logprob: -8.763374328613281
    10. 'endent' → logprob: -8.888374328613281

Token 24: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08207712322473526
    2. '=' → logprob: -2.9570770263671875
    3. ' =' → logprob: -3.7070770263671875
    4. '(' → logprob: -7.0820770263671875
    5. '_=' → logprob: -7.0820770263671875
    6. ')' → logprob: -9.207077026367188
    7. '[' → logprob: -9.207077026367188
    8. ' ' → logprob: -9.582077026367188
    9. ' _' → logprob: -9.832077026367188
    10. '()' → logprob: -9.957077026367188

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39222654700279236
    2. ' ' → logprob: -1.8922265768051147
    3. '0' → logprob: -2.267226457595825
    4. 'liste' → logprob: -2.892226457595825
    5. ' liste' → logprob: -5.017226696014404
    6. 'nombre' → logprob: -5.142226696014404
    7. ' nombre' → logprob: -6.642226696014404
    8. 'l' → logprob: -8.767226219177246
    9. 'len' → logprob: -8.892226219177246
    10. ' len' → logprob: -9.204726219177246

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20185688138008118
    2. '0' → logprob: -2.201856851577759
    3. 'liste' → logprob: -2.701856851577759
    4. 'nombre' → logprob: -5.951857089996338
    5. ' ' → logprob: -6.576857089996338
    6. 'len' → logprob: -8.20185661315918
    7. ' liste' → logprob: -8.95185661315918
    8. 'max' → logprob: -9.20185661315918
    9. 'min' → logprob: -9.20185661315918
    10. 'int' → logprob: -9.51435661315918

Token 27: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: 'comp' (ID: 3697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024287392443511635
    2. ' for' → logprob: -8.750243186950684
    3. '```' → logprob: -9.500243186950684
    4. '
' → logprob: -11.875243186950684
    5. ':' → logprob: -13.750243186950684
    6. '	for' → logprob: -15.000243186950684
    7. '\n' → logprob: -15.125243186950684
    8. '\' → logprob: -15.500243186950684
    9. 'if' → logprob: -16.000242233276367
    10. '' → logprob: -16.250242233276367

Token 29: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.17421771585941315
    2. 'te' → logprob: -2.424217700958252
    3. 't' → logprob: -2.799217700958252
    4. 'ter' → logprob: -4.924217700958252
    5. 'teurs' → logprob: -6.299217700958252
    6. 'té' → logprob: -7.799217700958252
    7. 'tent' → logprob: -9.04921817779541
    8. 'tat' → logprob: -9.17421817779541
    9. 'tele' → logprob: -9.29921817779541
    10. '=' → logprob: -9.42421817779541

Token 30: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3628658652305603
    2. ' =' → logprob: -1.487865924835205
    3. '=' → logprob: -3.112865924835205
    4. ' +=' → logprob: -3.987865924835205
    5. ' ' → logprob: -4.987865924835205
    6. '<|end|>' → logprob: -6.112865924835205
    7. ')' → logprob: -6.612865924835205
    8. '_space' → logprob: -6.612865924835205
    9. '  ' → logprob: -7.737865924835205
    10. '_=' → logprob: -7.737865924835205

Token 31: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029914898332208395
    2. ' +=' → logprob: -6.252991676330566
    3. ' ' → logprob: -8.502991676330566
    4. ' =' → logprob: -8.502991676330566
    5. ' _' → logprob: -9.127991676330566
    6. '_space' → logprob: -9.252991676330566
    7. '+' → logprob: -9.502991676330566
    8. '<|end|>' → logprob: -9.627991676330566
    9. '_=' → logprob: -9.627991676330566
    10. '_con' → logprob: -10.252991676330566

Token 32: 'ordon' (ID: 39916)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8944647312164307
    2. 'correct' → logprob: -1.5194647312164307
    3. 'tra' → logprob: -3.1444647312164307
    4. 'vu' → logprob: -3.3944647312164307
    5. 'aff' → logprob: -3.5194647312164307
    6. 'lus' → logprob: -3.7694647312164307
    7. 'comp' → logprob: -3.8944647312164307
    8. 'tries' → logprob: -3.8944647312164307
    9. 'vue' → logprob: -4.144464492797852
    10. 'trait' → logprob: -4.269464492797852

Token 33: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.016992567107081413
    2. 'e' → logprob: -4.266992568969727
    3. 'és' → logprob: -6.266992568969727
    4. 'nes' → logprob: -8.391992568969727
    5. '```' → logprob: -8.641992568969727
    6. 'er' → logprob: -8.891992568969727
    7. 'é' → logprob: -9.266992568969727
    8. '=' → logprob: -10.016992568969727
    9. 'ne' → logprob: -10.266992568969727
    10. '<' → logprob: -10.516992568969727

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10140848159790039
    2. '=' → logprob: -2.7264084815979004
    3. '_' → logprob: -4.1014084815979
    4. ' +=' → logprob: -4.4764084815979
    5. ' ' → logprob: -6.1014084815979
    6. '+=' → logprob: -8.601408004760742
    7. '_space' → logprob: -8.726408004760742
    8. '+' → logprob: -8.976408004760742
    9. '  ' → logprob: -9.601408004760742
    10. '_=' → logprob: -9.851408004760742

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993754208087921
    2. ' ' → logprob: -2.6949374675750732
    3. '1' → logprob: -14.319937705993652
    4. ' ' → logprob: -14.444937705993652
    5. '۰' → logprob: -18.194936752319336
    6. '<|end|>' → logprob: -18.194936752319336
    7. '```' → logprob: -18.569936752319336
    8. '2' → logprob: -18.757436752319336
    9. '   ' → logprob: -19.007436752319336
    10. 'int' → logprob: -19.069936752319336

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -17.37509536743164
    4. 'pro' → logprob: -18.75009536743164
    5. '```' → logprob: -18.75009536743164
    6. ' ' → logprob: -19.00009536743164
    7. '   ' → logprob: -19.00009536743164
    8. '`' → logprob: -19.12509536743164
    9. '00' → logprob: -19.50009536743164
    10. '000' → logprob: -19.62509536743164

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6906828284263611
    2. 'for' → logprob: -1.3156828880310059
    3. '<|end|>' → logprob: -2.065682888031006
    4. '\n' → logprob: -2.815682888031006
    5. ' for' → logprob: -3.315682888031006
    6. ' 
' → logprob: -5.690682888031006
    7. '\' → logprob: -7.190682888031006
    8. '<|end|>' → logprob: -7.315682888031006
    9. '' → logprob: -7.815682888031006
    10. '#' → logprob: -7.940682888031006

Token 38: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.481510692741722e-05
    2. ' for' → logprob: -9.62507438659668
    3. '```' → logprob: -12.25007438659668
    4. '
' → logprob: -12.62507438659668
    5. 'pour' → logprob: -14.87507438659668
    6. '\n' → logprob: -16.37507438659668
    7. 'f' → logprob: -17.25007438659668
    8. '' → logprob: -17.25007438659668
    9. '\' → logprob: -17.50007438659668
    10. '	for' → logprob: -17.75007438659668

Token 39: ' ' (ID: 220)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7011127471923828
    2. ' prochain' → logprob: -0.8261127471923828
    3. ' ' → logprob: -3.951112747192383
    4. 'pro' → logprob: -4.326112747192383
    5. ' len' → logprob: -4.826112747192383
    6. ' pro' → logprob: -5.201112747192383
    7. ' prochaine' → logprob: -5.326112747192383
    8. 'nombre' → logprob: -5.451112747192383
    9. ' nom' → logprob: -5.576112747192383
    10. ' liste' → logprob: -5.826112747192383

Token 40: '1' (ID: 16)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.0277020931243896
    2. 'nombre' → logprob: -1.0277020931243896
    3. ' nombre' → logprob: -1.6527020931243896
    4. 'len' → logprob: -3.5277020931243896
    5. ' len' → logprob: -3.9027020931243896
    6. 'nom' → logprob: -4.152702331542969
    7. ' prochain' → logprob: -4.777702331542969
    8. ' liste' → logprob: -5.527702331542969
    9. 'liste' → logprob: -5.527702331542969
    10. ' pro' → logprob: -6.027702331542969

Token 41: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09345027059316635
    2. ' <=' → logprob: -2.9684503078460693
    3. ' <' → logprob: -4.09345006942749
    4. '==' → logprob: -4.84345006942749
    5. ' ' → logprob: -5.21845006942749
    6. ' >=' → logprob: -6.21845006942749
    7. ' :' → logprob: -6.34345006942749
    8. ':' → logprob: -6.84345006942749
    9. '  ' → logprob: -6.96845006942749
    10. ' in' → logprob: -7.84345006942749

Token 42: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.010062279179692268
    2. 'liste' → logprob: -4.635062217712402
    3. ' ' → logprob: -9.010062217712402
    4. ' list' → logprob: -9.260062217712402
    5. ' lst' → logprob: -10.385062217712402
    6. ' ' → logprob: -11.135062217712402
    7. ' lista' → logprob: -11.135062217712402
    8. 'list' → logprob: -12.135062217712402
    9. ' lijst' → logprob: -12.510062217712402
    10. ' lis' → logprob: -12.510062217712402

Token 43: '_ent' (ID: 66249)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0767923593521118
    2. '_' → logprob: -1.2017923593521118
    3. '_ent' → logprob: -1.7017923593521118
    4. '_:' → logprob: -2.2017922401428223
    5. '):' → logprob: -3.3267922401428223
    6. ' :' → logprob: -3.8267922401428223
    7. ')' → logprob: -5.701792240142822
    8. ' and' → logprob: -7.826792240142822
    9. 'ent' → logprob: -8.07679271697998
    10. '[:]' → logprob: -8.07679271697998

Token 44: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -1.9862216504407115e-05
    2. 'ier' → logprob: -11.875020027160645
    3. 'ieurs' → logprob: -12.375020027160645
    4. 'ers' → logprob: -12.750020027160645
    5. 'ents' → logprob: -12.750020027160645
    6. 'eurs' → logprob: -14.375020027160645
    7. 'riers' → logprob: -14.500020027160645
    8. '_' → logprob: -14.750020027160645
    9. 'tiers' → logprob: -15.125020027160645
    10. '```' → logprob: -15.375020027160645

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024926606565713882
    2. ' :' → logprob: -6.002492427825928
    3. ':**' → logprob: -11.252492904663086
    4. ':
' → logprob: -13.252492904663086
    5. ' and' → logprob: -13.502492904663086
    6. '):' → logprob: -16.002492904663086
    7. ':]' → logprob: -16.002492904663086
    8. 'and' → logprob: -16.877492904663086
    9. ':return' → logprob: -16.877492904663086
    10. '[:]' → logprob: -16.877492904663086

Token 46: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6334546804428101
    2. '\n' → logprob: -1.25845468044281
    3. ':' → logprob: -2.7584547996520996
    4. '   ' → logprob: -3.0084547996520996
    5. '    
' → logprob: -4.1334547996521
    6. '<|end|>' → logprob: -4.3834547996521
    7. '  
' → logprob: -4.5084547996521
    8. ' 
' → logprob: -4.6334547996521
    9. 'newline' → logprob: -5.0084547996521
    10. ':
' → logprob: -5.5084547996521

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01043042540550232
    2. ' indentation' → logprob: -5.635430335998535
    3. '   ' → logprob: -6.010430335998535
    4. '\t' → logprob: -7.010430335998535
    5. ':' → logprob: -7.260430335998535
    6. ' for' → logprob: -8.010430335998535
    7. '\' → logprob: -8.135430335998535
    8. 'index' → logprob: -8.385430335998535
    9. '```' → logprob: -8.385430335998535
    10. ' ' → logprob: -8.385430335998535

Token 48: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4417838454246521
    2. 'pro' → logprob: -1.5667839050292969
    3. ' ' → logprob: -3.066783905029297
    4. '   ' → logprob: -3.691783905029297
    5. ' indentation' → logprob: -4.441783905029297
    6. ':' → logprob: -4.566783905029297
    7. ' for' → logprob: -5.066783905029297
    8. ' compteur' → logprob: -5.066783905029297
    9. '\t' → logprob: -5.191783905029297
    10. '   ' → logprob: -5.316783905029297

Token 49: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.1767377108335495
    2. ' i' → logprob: -2.5517377853393555
    3. 'element' → logprob: -3.5517377853393555
    4. ' élément' → logprob: -3.5517377853393555
    5. ' nombre' → logprob: -5.0517377853393555
    6. ' e' → logprob: -5.3017377853393555
    7. ' elem' → logprob: -5.4267377853393555
    8. 'i' → logprob: -5.9267377853393555
    9. ' x' → logprob: -6.8017377853393555
    10. ' ' → logprob: -6.9267377853393555

Token 50: '_c' (ID: 1303)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003668606048449874
    2. 'in' → logprob: -5.628668785095215
    3. 's' → logprob: -10.253668785095215
    4. ' ' → logprob: -11.378668785095215
    5. 'dans' → logprob: -12.128668785095215
    6. ' dans' → logprob: -13.128668785095215
    7. 'd' → logprob: -13.128668785095215
    8. '_' → logprob: -13.253668785095215
    9. ',' → logprob: -13.378668785095215
    10. '   ' → logprob: -13.503668785095215

Token 51: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.11327212303876877
    2. 'orrect' → logprob: -3.738272190093994
    3. 'onte' → logprob: -3.988272190093994
    4. 'ont' → logprob: -4.363272190093994
    5. 'orr' → logprob: -4.988272190093994
    6. 'andidat' → logprob: -5.238272190093994
    7. 'urrent' → logprob: -5.363272190093994
    8. 'or' → logprob: -5.363272190093994
    9. ' in' → logprob: -5.613272190093994
    10. 'ur' → logprob: -5.738272190093994

Token 52: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0009151478880085051
    2. 'r' → logprob: -7.625915050506592
    3. 'a' → logprob: -8.50091552734375
    4. '```' → logprob: -9.37591552734375
    5. '_' → logprob: -10.50091552734375
    6. 'ent' → logprob: -10.62591552734375
    7. 'an' → logprob: -10.75091552734375
    8. '_ant' → logprob: -11.25091552734375
    9. 'ante' → logprob: -11.62591552734375
    10. '#' → logprob: -11.62591552734375

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004144642036408186
    2. 'in' → logprob: -5.504144668579102
    3. ' ' → logprob: -10.254144668579102
    4. ' dans' → logprob: -11.629144668579102
    5. 's' → logprob: -11.754144668579102
    6. 'dans' → logprob: -12.379144668579102
    7. '   ' → logprob: -12.879144668579102
    8. ',' → logprob: -13.629144668579102
    9. '  ' → logprob: -13.754144668579102
    10. '<|end|>' → logprob: -14.004144668579102

Token 54: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.014208407141268253
    2. 'liste' → logprob: -4.2642083168029785
    3. ' list' → logprob: -11.014208793640137
    4. ' lista' → logprob: -11.889208793640137
    5. ' la' → logprob: -12.389208793640137
    6. ' ' → logprob: -12.514208793640137
    7. ' lst' → logprob: -12.639208793640137
    8. ' lijst' → logprob: -13.014208793640137
    9. 'list' → logprob: -13.264208793640137
    10. ' ' → logprob: -13.264208793640137

Token 55: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.00017827287956606597
    2. '_' → logprob: -9.375178337097168
    3. 'ent' → logprob: -9.500178337097168
    4. '_d' → logprob: -12.250178337097168
    5. 's' → logprob: -12.375178337097168
    6. '_en' → logprob: -12.875178337097168
    7. '_ENT' → logprob: -13.625178337097168
    8. 'ents' → logprob: -13.875178337097168
    9. '_elements' → logprob: -14.125178337097168
    10. '	ent' → logprob: -14.375178337097168

Token 56: 'iers' (ID: 11012)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.2610098421573639
    2. 'iers' → logprob: -1.7610098123550415
    3. 'ts' → logprob: -3.636009931564331
    4. 'ers' → logprob: -4.636009693145752
    5. 'irs' → logprob: -4.886009693145752
    6. 'ir' → logprob: -5.761009693145752
    7. 'er' → logprob: -6.136009693145752
    8. 'erts' → logprob: -6.261009693145752
    9. 't' → logprob: -6.386009693145752
    10. 'airs' → logprob: -6.761009693145752

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012558032758533955
    2. ' :' → logprob: -4.3875579833984375
    3. '   ' → logprob: -10.512557983398438
    4. ':
' → logprob: -11.137557983398438
    5. '    ' → logprob: -13.762557983398438
    6. ':**' → logprob: -14.012557983398438
    7. ' :
' → logprob: -14.137557983398438
    8. '<|end|>' → logprob: -14.262557983398438
    9. ' ' → logprob: -14.387557983398438
    10. ' if' → logprob: -14.512557983398438

Token 58: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42928236722946167
    2. '    ' → logprob: -2.1792824268341064
    3. '       ' → logprob: -2.3042824268341064
    4. ' if' → logprob: -3.0542824268341064
    5. '```' → logprob: -3.0542824268341064
    6. 'if' → logprob: -3.8042824268341064
    7. '<|end|>' → logprob: -4.929282188415527
    8. '        ' → logprob: -6.179282188415527
    9. ' ' → logprob: -6.304282188415527
    10. ':' → logprob: -6.804282188415527

Token 60: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6612675189971924
    2. ' if' → logprob: -0.7862675189971924
    3. '    ' → logprob: -3.7862675189971924
    4. '   ' → logprob: -5.786267280578613
    5. '```' → logprob: -6.786267280578613
    6. ' ' → logprob: -7.286267280578613
    7. '        ' → logprob: -8.536267280578613
    8. '       ' → logprob: -8.661267280578613
    9. ' ' → logprob: -8.786267280578613
    10. '	if' → logprob: -10.536267280578613

Token 61: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.01613466627895832
    2. 'element' → logprob: -4.141134738922119
    3. ' élément' → logprob: -9.391134262084961
    4. '	element' → logprob: -11.891134262084961
    5. ' elemento' → logprob: -13.016134262084961
    6. ' ' → logprob: -13.016134262084961
    7. 'élé' → logprob: -13.516134262084961
    8. 'pro' → logprob: -13.641134262084961
    9. '(element' → logprob: -14.266134262084961
    10. ' pro' → logprob: -14.516134262084961

Token 62: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -12.375004768371582
    3. '_con' → logprob: -17.000003814697266
    4. 'cour' → logprob: -17.250003814697266
    5. '_pro' → logprob: -17.750003814697266
    6. '```' → logprob: -18.500003814697266
    7. 'c' → logprob: -18.750003814697266
    8. '__' → logprob: -19.000003814697266
    9. 's' → logprob: -19.000003814697266
    10. '_current' → logprob: -19.375003814697266

Token 63: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -8.304016228066757e-05
    2. 'cour' → logprob: -10.500082969665527
    3. 'ur' → logprob: -11.000082969665527
    4. '_' → logprob: -11.000082969665527
    5. '```' → logprob: -11.875082969665527
    6. 'ourt' → logprob: -12.375082969665527
    7. '>' → logprob: -13.125082969665527
    8. '_c' → logprob: -13.625082969665527
    9. 'ont' → logprob: -14.250082969665527
    10. '==' → logprob: -14.250082969665527

Token 64: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004236531909555197
    2. 'rant' → logprob: -5.879236698150635
    3. 'r' → logprob: -7.379236698150635
    4. 'nt' → logprob: -8.254236221313477
    5. 'rent' → logprob: -8.504236221313477
    6. 'ent' → logprob: -9.379236221313477
    7. '_ant' → logprob: -9.754236221313477
    8. '_' → logprob: -10.004236221313477
    9. 't' → logprob: -10.379236221313477
    10. 'rt' → logprob: -10.754236221313477

Token 65: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22545543313026428
    2. '==' → logprob: -1.600455403327942
    3. '=' → logprob: -10.350455284118652
    4. ' ' → logprob: -11.975455284118652
    5. ' =' → logprob: -13.475455284118652
    6. '   ' → logprob: -13.975455284118652
    7. ' ' → logprob: -14.600455284118652
    8. ')==' → logprob: -15.225455284118652
    9. '===' → logprob: -15.225455284118652
    10. '```' → logprob: -15.350455284118652

Token 66: ' prochain' (ID: 52413)
  Prédit: ' prochain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochain' → logprob: -0.5265262126922607
    2. 'pro' → logprob: -0.9015262126922607
    3. ' pro' → logprob: -5.77652645111084
    4. ' ' → logprob: -8.77652645111084
    5. '	pro' → logprob: -9.77652645111084
    6. ' prochaine' → logprob: -10.77652645111084
    7. '   ' → logprob: -11.40152645111084
    8. '  ' → logprob: -11.52652645111084
    9. 'prox' → logprob: -12.02652645111084
    10. ' next' → logprob: -12.15152645111084

Token 67: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.0072273812256753445
    2. '_' → logprob: -5.007227420806885
    3. '_e' → logprob: -8.007226943969727
    4. 'e' → logprob: -9.882226943969727
    5. ' _' → logprob: -10.132226943969727
    6. '_elem' → logprob: -11.007226943969727
    7. '_ele' → logprob: -11.632226943969727
    8. '_Element' → logprob: -11.757226943969727
    9. 's' → logprob: -12.007226943969727
    10. '__' → logprob: -12.007226943969727

Token 68: '_att' (ID: 35618)
  Prédit: '_att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_att' → logprob: -0.005502680316567421
    2. '_' → logprob: -5.255502700805664
    3. ' _' → logprob: -8.880502700805664
    4. '_a' → logprob: -10.005502700805664
    5. '_at' → logprob: -11.130502700805664
    6. '_expected' → logprob: -11.255502700805664
    7. '_ent' → logprob: -11.255502700805664
    8. ' ' → logprob: -11.505502700805664
    9. 'att' → logprob: -12.005502700805664
    10. 's' → logprob: -12.880502700805664

Token 69: 'endu' (ID: 46640)
  Prédit: 'endu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endu' → logprob: -1.4259644558478612e-05
    2. 'endue' → logprob: -12.000014305114746
    3. 'entu' → logprob: -12.750014305114746
    4. 'endeu' → logprob: -13.250014305114746
    5. 'end' → logprob: -14.000014305114746
    6. 'e' → logprob: -14.125014305114746
    7. 'edu' → logprob: -14.375014305114746
    8. '```' → logprob: -15.750014305114746
    9. 'en' → logprob: -15.875014305114746
    10. 'u' → logprob: -16.00001335144043

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021327754948288202
    2. ':
' → logprob: -6.252132892608643
    3. ' :' → logprob: -8.627132415771484
    4. ' and' → logprob: -11.002132415771484
    5. 'and' → logprob: -13.002132415771484
    6. ' :
' → logprob: -13.252132415771484
    7. ':

' → logprob: -13.502132415771484
    8. ':return' → logprob: -14.877132415771484
    9. '):' → logprob: -15.002132415771484
    10. ':**' → logprob: -15.002132415771484

Token 71: '            
' (ID: 7048)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1536749303340912
    2. '            
' → logprob: -2.528674840927124
    3. '
' → logprob: -3.153674840927124
    4. ':' → logprob: -5.278675079345703
    5. '```' → logprob: -5.653675079345703
    6. '\n' → logprob: -6.028675079345703
    7. 'pro' → logprob: -6.153675079345703
    8. ' 
' → logprob: -6.528675079345703
    9. '\' → logprob: -6.653675079345703
    10. '            ' → logprob: -6.903675079345703

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058043867349624634
    2. '            
' → logprob: -3.808043956756592
    3. ' compteur' → logprob: -4.308043956756592
    4. '
' → logprob: -4.558043956756592
    5. 'comp' → logprob: -5.558043956756592
    6. '               ' → logprob: -5.933043956756592
    7. '                
' → logprob: -7.058043956756592
    8. '            ' → logprob: -7.683043956756592
    9. '   ' → logprob: -7.808043956756592
    10. '```' → logprob: -7.933043956756592

Token 73: ' compteur' (ID: 163344)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.4006299078464508
    2. 'comp' → logprob: -1.1506298780441284
    3. '           ' → logprob: -5.150629997253418
    4. ' compteur' → logprob: -5.650629997253418
    5. '               ' → logprob: -5.900629997253418
    6. '   ' → logprob: -7.400629997253418
    7. '```' → logprob: -7.650629997253418
    8. '       ' → logprob: -9.400629997253418
    9. '
' → logprob: -9.400629997253418
    10. ' comp' → logprob: -9.525629997253418

Token 74: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.37500286102295
    3. 'elements' → logprob: -14.25000286102295
    4. '_element' → logprob: -15.37500286102295
    5. '_elem' → logprob: -17.250001907348633
    6. '_ent' → logprob: -17.375001907348633
    7. '_ELEMENTS' → logprob: -17.375001907348633
    8. 'élé' → logprob: -17.500001907348633
    9. '_e' → logprob: -17.625001907348633
    10. '_ele' → logprob: -17.750001907348633

Token 75: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.246537173457909e-06
    2. '_ord' → logprob: -13.500003814697266
    3. '_elements' → logprob: -13.625003814697266
    4. 'ordon' → logprob: -14.625003814697266
    5. '+=' → logprob: -14.750003814697266
    6. ' +=' → logprob: -15.375003814697266
    7. '+' → logprob: -15.625003814697266
    8. '__' → logprob: -16.375003814697266
    9. ' ' → logprob: -17.375003814697266
    10. '‌' → logprob: -17.500003814697266

Token 76: 'ordon' (ID: 39916)
  Prédit: 'ordon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordon' → logprob: -0.0046341149136424065
    2. 'ord' → logprob: -5.379633903503418
    3. 'orden' → logprob: -13.129633903503418
    4. 'ordan' → logprob: -13.129633903503418
    5. '_' → logprob: -13.254633903503418
    6. 'ordi' → logprob: -13.879633903503418
    7. 'orm' → logprob: -14.254633903503418
    8. 'ordinates' → logprob: -14.504633903503418
    9. 'ondon' → logprob: -14.629633903503418
    10. 'or' → logprob: -14.629633903503418

Token 77: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -6.313314952421933e-05
    2. 'nes' → logprob: -10.000062942504883
    3. 'e' → logprob: -11.875062942504883
    4. 'és' → logprob: -12.375062942504883
    5. '```' → logprob: -13.250062942504883
    6. '   ' → logprob: -13.625062942504883
    7. 'esp' → logprob: -14.500062942504883
    8. 's' → logprob: -15.375062942504883
    9. 'ed' → logprob: -15.750062942504883
    10. 'n' → logprob: -15.812562942504883

Token 78: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06996044516563416
    2. '+=' → logprob: -2.694960355758667
    3. '+' → logprob: -11.569960594177246
    4. '=' → logprob: -12.194960594177246
    5. ' =' → logprob: -12.319960594177246
    6. ' ' → logprob: -12.694960594177246
    7. ' ' → logprob: -14.194960594177246
    8. '++' → logprob: -15.069960594177246
    9. ' +' → logprob: -15.319960594177246
    10. '<|end|>' → logprob: -15.444960594177246

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. ' ' → logprob: -15.62907886505127
    4. '   ' → logprob: -19.379077911376953
    5. '```' → logprob: -20.004077911376953
    6. '۱' → logprob: -20.879077911376953
    7. '<|end|>' → logprob: -21.129077911376953
    8. '+' → logprob: -21.254077911376953
    9. '  ' → logprob: -21.629077911376953
    10. '１' → logprob: -21.754077911376953

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -20.125
    5. '<|end|>' → logprob: -21.625
    6. '+' → logprob: -21.875
    7. '۱' → logprob: -22.0
    8. ' ' → logprob: -22.5
    9. '１' → logprob: -22.75
    10. '  ' → logprob: -22.875

Token 81: '
            
' (ID: 45334)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.4006866216659546
    2. 'pro' → logprob: -1.1506866216659546
    3. '           ' → logprob: -4.650686740875244
    4. '
' → logprob: -6.025686740875244
    5. '                
' → logprob: -7.775686740875244
    6. ' 
' → logprob: -8.150686264038086
    7. ' pro' → logprob: -8.400686264038086
    8. '\n' → logprob: -8.775686264038086
    9. '            ' → logprob: -9.275686264038086
    10. '    
' → logprob: -9.525686264038086

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8643136024475098
    2. 'pro' → logprob: -0.8643136024475098
    3. '            
' → logprob: -1.8643136024475098
    4. '
' → logprob: -6.61431360244751
    5. '    
' → logprob: -7.98931360244751
    6. ' pro' → logprob: -9.239313125610352
    7. '                
' → logprob: -9.239313125610352
    8. '\n' → logprob: -9.489313125610352
    9. '        
' → logprob: -9.614313125610352
    10. '\' → logprob: -10.114313125610352

Token 83: ' prochain' (ID: 52413)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.000000953674316
    3. '           ' → logprob: -15.375000953674316
    4. '            
' → logprob: -16.125001907348633
    5. '    
' → logprob: -17.000001907348633
    6. '       ' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. 'print' → logprob: -17.625001907348633
    9. '
' → logprob: -18.000001907348633
    10. 'prox' → logprob: -18.250001907348633

Token 84: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.0018077453132718801
    2. '_' → logprob: -6.376807689666748
    3. '_elements' → logprob: -10.001808166503906
    4. ' _' → logprob: -10.751808166503906
    5. '_ele' → logprob: -11.251808166503906
    6. '_elem' → logprob: -11.751808166503906
    7. '_s' → logprob: -12.376808166503906
    8. '_e' → logprob: -12.501808166503906
    9. '_Element' → logprob: -13.126808166503906
    10. '_piece' → logprob: -13.501808166503906

Token 85: '_att' (ID: 35618)
  Prédit: '_att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_att' → logprob: -9.019237768370658e-05
    2. 'att' → logprob: -10.125090599060059
    3. '+=' → logprob: -10.875090599060059
    4. '_' → logprob: -11.000090599060059
    5. '_ent' → logprob: -12.500090599060059
    6. ' +=' → logprob: -13.375090599060059
    7. '_ann' → logprob: -13.625090599060059
    8. '=' → logprob: -13.875090599060059
    9. '+' → logprob: -13.875090599060059
    10. '_expected' → logprob: -14.250090599060059

Token 86: 'endu' (ID: 46640)
  Prédit: 'endu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endu' → logprob: -4.179569077678025e-05
    2. 'edu' → logprob: -10.250041961669922
    3. 'du' → logprob: -12.625041961669922
    4. 'u' → logprob: -13.250041961669922
    5. 'entu' → logprob: -15.125041961669922
    6. 'e' → logprob: -15.250041961669922
    7. 'endue' → logprob: -15.750041961669922
    8. 'end' → logprob: -15.875041961669922
    9. 'andu' → logprob: -16.375041961669922
    10. 'endeu' → logprob: -16.500041961669922

Token 87: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005959018133580685
    2. ' +=' → logprob: -5.1309590339660645
    3. '+' → logprob: -10.755958557128906
    4. '=' → logprob: -11.755958557128906
    5. ']+=' → logprob: -14.755958557128906
    6. '```' → logprob: -14.880958557128906
    7. '+='' → logprob: -15.505958557128906
    8. '+="' → logprob: -15.880958557128906
    9. ' ' → logprob: -16.130958557128906
    10. '<|end|>' → logprob: -16.755958557128906

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.893150329589844
    4. '```' → logprob: -17.768150329589844
    5. '<|end|>' → logprob: -18.018150329589844
    6. '۱' → logprob: -19.830650329589844
    7. '0' → logprob: -19.955650329589844
    8. '   ' → logprob: -20.143150329589844
    9. '+' → logprob: -20.580650329589844
    10. '１' → logprob: -20.643150329589844

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -21.250001907348633
    4. '   ' → logprob: -21.875001907348633
    5. ' ' → logprob: -22.000001907348633
    6. '１' → logprob: -22.875001907348633
    7. '۱' → logprob: -22.875001907348633
    8. '`' → logprob: -23.375001907348633
    9. '+' → logprob: -23.500001907348633
    10. '0' → logprob: -23.750001907348633

Token 90: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08155623823404312
    2. '<|end|>' → logprob: -3.0815563201904297
    3. '#' → logprob: -4.33155632019043
    4. '
' → logprob: -5.20655632019043
    5. ')' → logprob: -5.33155632019043
    6. 'else' → logprob: -5.83155632019043
    7. '\n' → logprob: -6.70655632019043
    8. ' print' → logprob: -6.70655632019043
    9. '```' → logprob: -7.08155632019043
    10. ' else' → logprob: -7.33155632019043

Token 92: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002320818370208144
    2. 'else' → logprob: -6.127320766448975
    3. ' print' → logprob: -10.127321243286133
    4. 'result' → logprob: -10.127321243286133
    5. 'nombre' → logprob: -11.002321243286133
    6. 'if' → logprob: -11.627321243286133
    7. '    
' → logprob: -12.502321243286133
    8. 'prin' → logprob: -12.502321243286133
    9. '   ' → logprob: -12.752321243286133
    10. '```' → logprob: -12.877321243286133

Token 93: '(nombre' (ID: 124319)
  Prédit: '(comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.0017365860985592008
    2. '(' → logprob: -6.376736640930176
    3. ' (' → logprob: -11.001736640930176
    4. 'comp' → logprob: -11.376736640930176
    5. '(cont' → logprob: -12.626736640930176
    6. '(len' → logprob: -14.251736640930176
    7. '()' → logprob: -14.626736640930176
    8. '((' → logprob: -14.751736640930176
    9. '(pro' → logprob: -15.251736640930176
    10. '(counter' → logprob: -15.501736640930176

Token 94: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.5252596464706585e-05
    2. '_' → logprob: -10.750044822692871
    3. '_de' → logprob: -10.750044822692871
    4. '_elements' → logprob: -14.250044822692871
    5. '_des' → logprob: -14.375044822692871
    6. ')_' → logprob: -15.250044822692871
    7. ' _' → logprob: -15.500044822692871
    8. ')' → logprob: -15.750044822692871
    9. 'd' → logprob: -15.875044822692871
    10. '_n' → logprob: -16.125045776367188

Token 95: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00015979631280060858
    2. '_' → logprob: -9.000160217285156
    3. '_ele' → logprob: -11.000160217285156
    4. '_ent' → logprob: -11.375160217285156
    5. '_e' → logprob: -12.875160217285156
    6. 'elements' → logprob: -13.375160217285156
    7. '_element' → logprob: -13.750160217285156
    8. '_elem' → logprob: -13.875160217285156
    9. '_ELEMENTS' → logprob: -14.375160217285156
    10. '_)' → logprob: -14.625160217285156

Token 96: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5866990089416504
    2. ' -' → logprob: -0.9616990089416504
    3. ')' → logprob: -2.8366990089416504
    4. '-comp' → logprob: -6.21169900894165
    5. '   ' → logprob: -7.58669900894165
    6. ' )' → logprob: -8.336698532104492
    7. ',' → logprob: -9.211698532104492
    8. ' ' → logprob: -10.211698532104492
    9. '-end' → logprob: -11.086698532104492
    10. '    ' → logprob: -11.836698532104492

Token 97: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.014165159314870834
    2. ' compteur' → logprob: -4.264164924621582
    3. ' comp' → logprob: -14.264164924621582
    4. '	comp' → logprob: -14.514164924621582
    5. 'counter' → logprob: -16.1391658782959
    6. '(comp' → logprob: -16.1391658782959
    7. ' compte' → logprob: -16.5141658782959
    8. ' ' → logprob: -16.6391658782959
    9. 'compagn' → logprob: -16.7641658782959
    10. '   ' → logprob: -17.2641658782959

Token 98: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.375005722045898
    3. '_element' → logprob: -15.000005722045898
    4. 'elements' → logprob: -15.250005722045898
    5. 'élé' → logprob: -15.375005722045898
    6. '_ele' → logprob: -15.625005722045898
    7. '_elem' → logprob: -16.1250057220459
    8. '_e' → logprob: -16.5000057220459
    9. '_ELEMENTS' → logprob: -16.5000057220459
    10. ')_' → logprob: -17.8750057220459

Token 99: '_' (ID: 62)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.05018824338912964
    2. 's' → logprob: -3.3001883029937744
    3. 'ord' → logprob: -5.800188064575195
    4. 'ordon' → logprob: -6.425188064575195
    5. 'nes' → logprob: -6.675188064575195
    6. 'ords' → logprob: -6.925188064575195
    7. 'res' → logprob: -6.925188064575195
    8. 'és' → logprob: -7.050188064575195
    9. 'ules' → logprob: -7.300188064575195
    10. 'les' → logprob: -7.425188064575195

Token 100: 'ordon' (ID: 39916)
  Prédit: 'ordon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordon' → logprob: -0.055652257055044174
    2. 'elements' → logprob: -2.930652141571045
    3. 'orden' → logprob: -8.430652618408203
    4. 'lements' → logprob: -8.680652618408203
    5. 'ord' → logprob: -8.805652618408203
    6. '_elements' → logprob: -10.305652618408203
    7. 'ordre' → logprob: -11.055652618408203
    8. 'ordinates' → logprob: -11.055652618408203
    9. 'ondes' → logprob: -11.055652618408203
    10. 'ordan' → logprob: -11.305652618408203

Token 101: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -6.511406809295295e-06
    2. 'és' → logprob: -12.125006675720215
    3. 'e' → logprob: -14.875006675720215
    4. 'nes' → logprob: -15.250006675720215
    5. 's' → logprob: -15.500006675720215
    6. '```' → logprob: -16.3750057220459
    7. 'res' → logprob: -17.0000057220459
    8. ' es' → logprob: -18.1250057220459
    9. 'tes' → logprob: -18.1250057220459
    10. 'ES' → logprob: -18.3750057220459

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')`' → logprob: -16.500001907348633
    4. '))' → logprob: -17.125001907348633
    5. ')
' → logprob: -18.375001907348633
    6. '')' → logprob: -19.125001907348633
    7. '`)' → logprob: -19.250001907348633
    8. '）' → logprob: -20.000001907348633
    9. ')**' → logprob: -20.000001907348633
    10. ')}' → logprob: -20.375001907348633

Token 103: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011204533511772752
    2. ':
' → logprob: -6.876120567321777
    3. ' :' → logprob: -9.376120567321777
    4. ' :
' → logprob: -13.376120567321777
    5. ':

' → logprob: -14.501120567321777
    6. '   ' → logprob: -14.501120567321777
    7. ':
' → logprob: -15.751120567321777
    8. ':return' → logprob: -16.37611961364746
    9. ':def' → logprob: -18.00111961364746
    10. ':\' → logprob: -18.25111961364746

Token 105: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19828401505947113
    2. '    
' → logprob: -2.3232839107513428
    3. '
' → logprob: -2.9482839107513428
    4. 'print' → logprob: -3.9482839107513428
    5. 'nombre' → logprob: -5.323284149169922
    6. ' 
' → logprob: -6.323284149169922
    7. '   
' → logprob: -6.698284149169922
    8. ' print' → logprob: -7.573284149169922
    9. '```' → logprob: -8.073284149169922
    10. '\n' → logprob: -8.073284149169922

Token 106: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007187459850683808
    2. '   ' → logprob: -7.250718593597412
    3. ' print' → logprob: -11.75071907043457
    4. '```' → logprob: -14.12571907043457
    5. '	print' → logprob: -15.50071907043457
    6. '    
' → logprob: -17.25071907043457
    7. '``' → logprob: -18.00071907043457
    8. ' ' → logprob: -19.25071907043457
    9. '  ' → logprob: -19.75071907043457
    10. '\' → logprob: -20.12571907043457

Token 107: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.60414821645827e-06
    2. ' print' → logprob: -12.375004768371582
    3. 'prin' → logprob: -15.375004768371582
    4. 'pr' → logprob: -16.375003814697266
    5. '```' → logprob: -17.875003814697266
    6. 'prit' → logprob: -18.375003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '    
' → logprob: -19.500003814697266
    9. '
' → logprob: -20.250003814697266
    10. 'nombre' → logprob: -20.750003814697266

Token 108: '(-' (ID: 8087)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.018580414354801178
    2. '(' → logprob: -4.018580436706543
    3. 'nombre' → logprob: -7.768580436706543
    4. '(n' → logprob: -13.143580436706543
    5. '(numero' → logprob: -13.143580436706543
    6. '(nome' → logprob: -13.268580436706543
    7. ' nombre' → logprob: -13.768580436706543
    8. ' (' → logprob: -15.393580436706543
    9. '(len' → logprob: -15.643580436706543
    10. '(nb' → logprob: -15.893580436706543

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016131967306137085
    2. 'nombre' → logprob: -4.14113187789917
    3. ' nombre' → logprob: -9.891132354736328
    4. ' ' → logprob: -10.016132354736328
    5. 'nom' → logprob: -13.641132354736328
    6. '(nombre' → logprob: -14.016132354736328
    7. 'nome' → logprob: -16.516132354736328
    8. 'Nombre' → logprob: -16.891132354736328
    9. '_nombre' → logprob: -17.016132354736328
    10. '   ' → logprob: -17.016132354736328

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -17.25
    4. ')
' → logprob: -18.5
    5. ')`' → logprob: -18.5
    6. '')' → logprob: -19.5
    7. '`)' → logprob: -19.875
    8. '）' → logprob: -21.125
    9. ')**' → logprob: -21.375
    10. '")' → logprob: -21.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 40.74%
Précision adaptée (1ère position): 43.52%
Précision (top 10): 75.00%
================================================================================
