================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
first_input_number, second_input_number = map(int, input().split())

maximum_allowed_value = 8

if first_input_number <= maximum_allowed_value and second_input_number <= maximum_allowed_value:
    print('Yay!')
else:
    print(':(')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'first' (ID: 7743)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_number' (ID: 11733)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.318116694688797
    2. '+' → logprob: -2.3181166648864746
    3. '[' → logprob: -2.5681166648864746
    4. '=' → logprob: -3.4431166648864746
    5. ')' → logprob: -4.068116664886475
    6. ' +' → logprob: -4.318116664886475
    7. ' =' → logprob: -4.318116664886475
    8. '.' → logprob: -5.068116664886475
    9. '```' → logprob: -5.193116664886475
    10. ' ' → logprob: -5.443116664886475

Token 4: ' second' (ID: 3099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09978513419628143
    2. '_' → logprob: -3.099785089492798
    3. '=' → logprob: -3.599785089492798
    4. ' =' → logprob: -4.974785327911377
    5. 'second' → logprob: -5.599785327911377
    6. ' ,' → logprob: -6.224785327911377
    7. 'first' → logprob: -6.224785327911377
    8. 'space' → logprob: -6.974785327911377
    9. ')' → logprob: -7.224785327911377
    10. ',' → logprob: -7.349785327911377

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07362455129623413
    2. ')' → logprob: -3.448624610900879
    3. ')_' → logprob: -4.073624610900879
    4. '```' → logprob: -4.573624610900879
    5. '_number' → logprob: -6.198624610900879
    6. '_input' → logprob: -6.323624610900879
    7. '.' → logprob: -6.823624610900879
    8. '=' → logprob: -6.823624610900879
    9. '._' → logprob: -7.073624610900879
    10. '_)' → logprob: -7.698624610900879

Token 6: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3088895380496979
    2. '=' → logprob: -1.6838895082473755
    3. ')' → logprob: -3.558889627456665
    4. '+' → logprob: -3.683889627456665
    5. ' =' → logprob: -4.808889389038086
    6. ',' → logprob: -5.058889389038086
    7. '.' → logprob: -5.433889389038086
    8. '```' → logprob: -5.683889389038086
    9. '*' → logprob: -6.683889389038086
    10. ':' → logprob: -7.433889389038086

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5487768054008484
    2. '+' → logprob: -1.4237768650054932
    3. '=' → logprob: -1.7987768650054932
    4. ' =' → logprob: -5.173776626586914
    5. '```' → logprob: -5.798776626586914
    6. '*' → logprob: -6.423776626586914
    7. ')' → logprob: -6.423776626586914
    8. ',' → logprob: -6.673776626586914
    9. ' ' → logprob: -7.298776626586914
    10. ' +' → logprob: -7.298776626586914

Token 8: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7719160914421082
    2. ' input' → logprob: -1.146916151046753
    3. ' ' → logprob: -1.896916151046753
    4. '0' → logprob: -2.896916151046753
    5. ' int' → logprob: -4.521915912628174
    6. 'int' → logprob: -5.896915912628174
    7. ' map' → logprob: -7.521915912628174
    8. 'map' → logprob: -8.646916389465332
    9. ' [' → logprob: -9.021916389465332
    10. ' []' → logprob: -9.521916389465332

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3965665400028229
    2. '<|end|>' → logprob: -1.7715665102005005
    3. '(lambda' → logprob: -2.14656662940979
    4. '```' → logprob: -4.021566390991211
    5. '(int' → logprob: -4.521566390991211
    6. '<|end|>' → logprob: -5.771566390991211
    7. ')' → logprob: -7.021566390991211
    8. '(str' → logprob: -7.146566390991211
    9. '[int' → logprob: -7.521566390991211
    10. '(user' → logprob: -7.709066390991211

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04161149263381958
    2. ')' → logprob: -3.791611433029175
    3. 'input' → logprob: -5.166611671447754
    4. '(' → logprob: -5.291611671447754
    5. '(user' → logprob: -5.416611671447754
    6. '('' → logprob: -7.291611671447754
    7. '(first' → logprob: -7.416611671447754
    8. ' input' → logprob: -7.791611671447754
    9. '```' → logprob: -8.416611671447754
    10. '(raw' → logprob: -9.041611671447754

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009783834218978882
    2. ' input' → logprob: -4.634783744812012
    3. ')' → logprob: -11.009783744812012
    4. '(input' → logprob: -11.759783744812012
    5. 'user' → logprob: -13.259783744812012
    6. 'first' → logprob: -14.384783744812012
    7. ',input' → logprob: -15.259783744812012
    8. '[input' → logprob: -15.884783744812012
    9. '```' → logprob: -16.009784698486328
    10. '<input' → logprob: -16.134784698486328

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5415112972259521
    2. '())' → logprob: -1.2915112972259521
    3. '(' → logprob: -2.416511297225952
    4. ')' → logprob: -3.291511297225952
    5. '(()' → logprob: -5.541511535644531
    6. '().' → logprob: -5.666511535644531
    7. '();)' → logprob: -6.416511535644531
    8. '('' → logprob: -6.791511535644531
    9. '());' → logprob: -6.916511535644531
    10. '()))' → logprob: -7.666511535644531

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.301394023466855e-05
    2. 'strip' → logprob: -9.750062942504883
    3. ' split' → logprob: -13.625062942504883
    4. ')' → logprob: -13.750062942504883
    5. 'rstrip' → logprob: -13.875062942504883
    6. 'spl' → logprob: -14.000062942504883
    7. 'startswith' → logprob: -15.000062942504883
    8. '(split' → logprob: -15.625062942504883
    9. 'replace' → logprob: -16.625062942504883
    10. 'plit' → logprob: -17.250062942504883

Token 14: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.132624089717865
    2. ')' → logprob: -2.1326241493225098
    3. '()' → logprob: -5.63262414932251
    4. '))' → logprob: -6.75762414932251
    5. '()))' → logprob: -7.38262414932251
    6. '`)' → logprob: -9.382623672485352
    7. '(' → logprob: -9.382623672485352
    8. ' ())' → logprob: -10.007623672485352
    9. '`()' → logprob: -11.382623672485352
    10. '```' → logprob: -11.632623672485352

Token 15: 'maximum' (ID: 78601)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11003973335027695
    2. '#' → logprob: -2.860039710998535
    3. '+
' → logprob: -4.735039710998535
    4. '*' → logprob: -4.860039710998535
    5. '\n' → logprob: -4.860039710998535
    6. '.' → logprob: -5.610039710998535
    7. '<|end|>' → logprob: -5.860039710998535
    8. ')' → logprob: -5.985039710998535
    9. 'if' → logprob: -5.985039710998535
    10. '
' → logprob: -6.360039710998535

Token 16: '_allowed' (ID: 104427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042548488825559616
    2. '_' → logprob: -3.417548418045044
    3. '(_)' → logprob: -5.542548656463623
    4. '()' → logprob: -6.667548656463623
    5. '(max' → logprob: -6.792548656463623
    6. '_max' → logprob: -6.917548656463623
    7. '```' → logprob: -7.792548656463623
    8. '_parent' → logprob: -8.167548179626465
    9. ')' → logprob: -8.417548179626465
    10. '(_' → logprob: -9.667548179626465

Token 17: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1048068180680275
    2. '_space' → logprob: -2.479806900024414
    3. '_value' → logprob: -4.979806900024414
    4. ' =' → logprob: -6.104806900024414
    5. '_number' → logprob: -6.979806900024414
    6. '_length' → logprob: -7.104806900024414
    7. '=' → logprob: -7.354806900024414
    8. '_size' → logprob: -7.854806900024414
    9. '_max' → logprob: -7.854806900024414
    10. '_amount' → logprob: -8.104806900024414

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7967190742492676
    2. '_' → logprob: -1.1717190742492676
    3. '=' → logprob: -2.0467190742492676
    4. '<|end|>' → logprob: -2.7967190742492676
    5. ')' → logprob: -4.046719074249268
    6. ' ' → logprob: -4.421719074249268
    7. '>' → logprob: -5.296719074249268
    8. ',' → logprob: -5.796719074249268
    9. '_max' → logprob: -6.046719074249268
    10. '.' → logprob: -6.046719074249268

Token 19: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2757870852947235
    2. ' ' → logprob: -1.900787115097046
    3. ' first' → logprob: -2.775787115097046
    4. '100' → logprob: -4.525786876678467
    5. 'max' → logprob: -4.775786876678467
    6. ' min' → logprob: -5.275786876678467
    7. 'first' → logprob: -6.025786876678467
    8. ' int' → logprob: -6.650786876678467
    9. '10' → logprob: -7.525786876678467
    10. ' maximum' → logprob: -8.775787353515625

Token 20: '8' (ID: 23)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1823916882276535
    2. 'max' → logprob: -1.93239164352417
    3. '10' → logprob: -4.80739164352417
    4. 'first' → logprob: -5.30739164352417
    5. ' max' → logprob: -5.55739164352417
    6. ' ' → logprob: -5.68239164352417
    7. 'int' → logprob: -7.30739164352417
    8. 'min' → logprob: -8.432392120361328
    9. ' first' → logprob: -8.807392120361328
    10. '0' → logprob: -9.307392120361328

Token 21: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8520247936248779
    2. ' if' → logprob: -1.977024793624878
    3. '
' → logprob: -2.102024793624878
    4. ' ' → logprob: -2.602024793624878
    5. '<|end|>' → logprob: -3.352024793624878
    6. '+' → logprob: -3.602024793624878
    7. '```' → logprob: -3.602024793624878
    8. '\' → logprob: -3.727024793624878
    9. '*' → logprob: -3.977024793624878
    10. '\n' → logprob: -4.352025032043457

Token 22: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04127375781536102
    2. 'result' → logprob: -3.541273832321167
    3. ' if' → logprob: -4.791273593902588
    4. 'max' → logprob: -6.291273593902588
    5. 'sum' → logprob: -7.541273593902588
    6. 'maximum' → logprob: -7.916273593902588
    7. '```' → logprob: -9.166274070739746
    8. 'difference' → logprob: -9.916274070739746
    9. 'total' → logprob: -10.041274070739746
    10. 'minimum' → logprob: -10.541274070739746

Token 23: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.00023357603640761226
    2. ' ' → logprob: -8.75023365020752
    3. 'first' → logprob: -9.87523365020752
    4. ' maximum' → logprob: -11.37523365020752
    5. ' max' → logprob: -11.50023365020752
    6. ' second' → logprob: -13.25023365020752
    7. ' ' → logprob: -15.37523365020752
    8. '	first' → logprob: -16.125232696533203
    9. ' (' → logprob: -18.625232696533203
    10. '  ' → logprob: -18.750232696533203

Token 24: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.49547436833381653
    2. '_' → logprob: -0.9954743385314941
    3. ' _' → logprob: -3.870474338531494
    4. '_number' → logprob: -9.370474815368652
    5. ' ' → logprob: -9.620474815368652
    6. '_output' → logprob: -9.995474815368652
    7. '_in' → logprob: -10.245474815368652
    8. '_value' → logprob: -10.745474815368652
    9. '_user' → logprob: -10.745474815368652
    10. '_space' → logprob: -11.495474815368652

Token 25: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5781123042106628
    2. '_number' → logprob: -0.8281123042106628
    3. '_value' → logprob: -6.8281121253967285
    4. ' _' → logprob: -7.9531121253967285
    5. '_n' → logprob: -8.078112602233887
    6. '_numbers' → logprob: -9.453112602233887
    7. '_input' → logprob: -10.078112602233887
    8. '_s' → logprob: -10.078112602233887
    9. '_second' → logprob: -10.078112602233887
    10. '_num' → logprob: -10.078112602233887

Token 26: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47706085443496704
    2. ' <=' → logprob: -1.2270607948303223
    3. ' <' → logprob: -3.2270607948303223
    4. ' ' → logprob: -3.6020607948303223
    5. ' >=' → logprob: -3.9770607948303223
    6. '>' → logprob: -8.22706127166748
    7. '  ' → logprob: -8.97706127166748
    8. ' ==' → logprob: -9.35206127166748
    9. '<=' → logprob: -10.60206127166748
    10. '<' → logprob: -11.10206127166748

Token 27: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.3064153492450714
    2. 'maximum' → logprob: -1.806415319442749
    3. ' ' → logprob: -2.306415319442749
    4. '  ' → logprob: -10.681415557861328
    5. '.maximum' → logprob: -11.306415557861328
    6. ' ' → logprob: -11.806415557861328
    7. 'max' → logprob: -11.931415557861328
    8. ' max' → logprob: -12.806415557861328
    9. 'Maximum' → logprob: -12.806415557861328
    10. ' second' → logprob: -14.056415557861328

Token 28: '_allowed' (ID: 104427)
  Prédit: '_allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allowed' → logprob: -0.0003178273618686944
    2. '_' → logprob: -8.125317573547363
    3. '_allow' → logprob: -11.875317573547363
    4. '_possible' → logprob: -12.375317573547363
    5. '_ALLOWED' → logprob: -12.750317573547363
    6. ' _' → logprob: -12.750317573547363
    7. '_supported' → logprob: -14.000317573547363
    8. '_available' → logprob: -14.500317573547363
    9. '_al' → logprob: -14.625317573547363
    10. '_enabled' → logprob: -14.625317573547363

Token 29: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0010688931215554476
    2. '_' → logprob: -6.876069068908691
    3. ' _' → logprob: -10.501069068908691
    4. '_val' → logprob: -12.501069068908691
    5. '_number' → logprob: -13.501069068908691
    6. ' ' → logprob: -13.751069068908691
    7. '_values' → logprob: -14.126069068908691
    8. 'value' → logprob: -14.376069068908691
    9. ' value' → logprob: -15.001069068908691
    10. '_VALUE' → logprob: -15.876069068908691

Token 30: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13010574877262115
    2. ' and' → logprob: -2.50510573387146
    3. ' :' → logprob: -3.25510573387146
    4. 'and' → logprob: -6.505105972290039
    5. ' ' → logprob: -8.755105972290039
    6. ':**' → logprob: -10.755105972290039
    7. ':
' → logprob: -11.630105972290039
    8. '>' → logprob: -11.755105972290039
    9. '):' → logprob: -11.755105972290039
    10. ' or' → logprob: -12.005105972290039

Token 31: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.00011987409379798919
    2. ' ' → logprob: -9.250120162963867
    3. 'second' → logprob: -10.875120162963867
    4. ' ' → logprob: -12.750120162963867
    5. ' first' → logprob: -13.250120162963867
    6. '	second' → logprob: -15.625120162963867
    7. '(second' → logprob: -17.625120162963867
    8. '_second' → logprob: -17.750120162963867
    9. ' space' → logprob: -18.125120162963867
    10. '.second' → logprob: -19.375120162963867

Token 32: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.000327956018736586
    2. '_output' → logprob: -8.625328063964844
    3. '_' → logprob: -9.625328063964844
    4. ' _' → logprob: -10.250328063964844
    5. '_number' → logprob: -12.000328063964844
    6. '```' → logprob: -12.000328063964844
    7. '_first' → logprob: -12.125328063964844
    8. '._' → logprob: -12.250328063964844
    9. '_inputs' → logprob: -13.000328063964844
    10. '_in' → logprob: -13.250328063964844

Token 33: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.4259644558478612e-05
    2. '_' → logprob: -12.000014305114746
    3. '_value' → logprob: -13.000014305114746
    4. ' _' → logprob: -13.000014305114746
    5. '```' → logprob: -14.125014305114746
    6. 'number' → logprob: -14.250014305114746
    7. '_numbers' → logprob: -14.875014305114746
    8. 'umber' → logprob: -15.125014305114746
    9. '_Number' → logprob: -15.250014305114746
    10. '_n' → logprob: -15.625014305114746

Token 34: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.00030733743915334344
    2. '<=' → logprob: -8.625307083129883
    3. ' ' → logprob: -9.125307083129883
    4. ' <' → logprob: -11.875307083129883
    5. '<|end|>' → logprob: -11.875307083129883
    6. ' ≤' → logprob: -14.000307083129883
    7. '<|end|>' → logprob: -14.375307083129883
    8. ' >' → logprob: -14.375307083129883
    9. ' <=",' → logprob: -14.500307083129883
    10. ' #' → logprob: -14.625307083129883

Token 35: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.011052302084863186
    2. 'maximum' → logprob: -4.511052131652832
    3. '.maximum' → logprob: -13.261052131652832
    4. 'max' → logprob: -13.386052131652832
    5. ' ' → logprob: -14.511052131652832
    6. ' max' → logprob: -15.261052131652832
    7. ' ' → logprob: -15.386052131652832
    8. 'Maximum' → logprob: -15.511052131652832
    9. ' first' → logprob: -16.51105308532715
    10. ' максим' → logprob: -17.38605308532715

Token 36: '_allowed' (ID: 104427)
  Prédit: '_allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allowed' → logprob: -0.004793345462530851
    2. '_' → logprob: -5.379793167114258
    3. '_allow' → logprob: -9.629793167114258
    4. '_possible' → logprob: -10.754793167114258
    5. '__' → logprob: -11.129793167114258
    6. '_enabled' → logprob: -11.379793167114258
    7. ' _' → logprob: -11.754793167114258
    8. '_ALLOWED' → logprob: -12.254793167114258
    9. '_supported' → logprob: -12.379793167114258
    10. '_requested' → logprob: -12.379793167114258

Token 37: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00015050210640765727
    2. '_' → logprob: -9.125150680541992
    3. 'value' → logprob: -10.875150680541992
    4. '_val' → logprob: -11.500150680541992
    5. '_allowed' → logprob: -12.375150680541992
    6. 'ed' → logprob: -12.625150680541992
    7. 'e' → logprob: -13.625150680541992
    8. ' _' → logprob: -13.875150680541992
    9. 'alue' → logprob: -14.000150680541992
    10. '_values' → logprob: -14.250150680541992

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2352385965641588e-05
    2. ':**' → logprob: -11.500012397766113
    3. ' :' → logprob: -13.500012397766113
    4. ':
' → logprob: -14.500012397766113
    5. '):' → logprob: -15.750012397766113
    6. ' and' → logprob: -16.875011444091797
    7. '':'' → logprob: -17.750011444091797
    8. ':return' → logprob: -18.000011444091797
    9. ',' → logprob: -18.125011444091797
    10. ',:' → logprob: -18.125011444091797

Token 39: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18958954513072968
    2. '   ' → logprob: -2.814589500427246
    3. '
' → logprob: -3.314589500427246
    4. ':
' → logprob: -3.814589500427246
    5. '\n' → logprob: -3.939589500427246
    6. '    
' → logprob: -4.439589500427246
    7. ' 
' → logprob: -5.064589500427246
    8. '\' → logprob: -5.314589500427246
    9. ' :' → logprob: -6.064589500427246
    10. ' ' → logprob: -6.439589500427246

Token 40: ' print' (ID: 2123)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0795538425445557
    2. ' print' → logprob: -1.0795538425445557
    3. 'print' (adapté à ' print') → logprob: -1.8295538425445557
    4. ' ' → logprob: -2.8295538425445557
    5. '\n' → logprob: -3.3295538425445557
    6. '    ' → logprob: -3.7045538425445557
    7. '    
' → logprob: -4.454553604125977
    8. '\' → logprob: -4.704553604125977
    9. '
' → logprob: -5.079553604125977
    10. '     
' → logprob: -5.829553604125977

Token 41: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006761906202882528
    2. '("("' → logprob: -5.3817620277404785
    3. '('' → logprob: -6.3817620277404785
    4. '("' → logprob: -8.50676155090332
    5. '(max' → logprob: -9.38176155090332
    6. '(True' → logprob: -9.63176155090332
    7. '()' → logprob: -10.50676155090332
    8. '(first' → logprob: -10.88176155090332
    9. '((' → logprob: -11.25676155090332
    10. '("")' → logprob: -11.50676155090332

Token 42: 'Y' (ID: 56)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.308070421218872
    2. 'Valid' → logprob: -1.933070421218872
    3. 'OK' → logprob: -2.058070421218872
    4. 'Accepted' → logprob: -2.058070421218872
    5. 'Both' → logprob: -2.183070421218872
    6. 'YES' → logprob: -2.683070421218872
    7. 'Possible' → logprob: -3.683070421218872
    8. 'Allowed' → logprob: -3.808070421218872
    9. 'both' → logprob: -3.933070421218872
    10. 'first' → logprob: -4.808070182800293

Token 43: 'ay' (ID: 356)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3792756497859955
    2. '')' → logprob: -1.5042756795883179
    3. 'ES' → logprob: -2.3792755603790283
    4. ')' → logprob: -7.379275798797607
    5. 'Es' → logprob: -10.00427532196045
    6. '')
' → logprob: -10.12927532196045
    7. ''es' → logprob: -10.37927532196045
    8. 'e' → logprob: -10.62927532196045
    9. 'ou' → logprob: -10.87927532196045
    10. 'ay' → logprob: -11.00427532196045

Token 44: '!')
' (ID: 82203)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -0.003211819101125002
    2. '')' → logprob: -5.753211975097656
    3. ')' → logprob: -10.753211975097656
    4. '!")' → logprob: -12.253211975097656
    5. '!'' → logprob: -12.753211975097656
    6. '!)' → logprob: -12.878211975097656
    7. '!')
' → logprob: -13.753211975097656
    8. ',' → logprob: -14.003211975097656
    9. '！' → logprob: -15.378211975097656
    10. '!!!' → logprob: -16.378211975097656

Token 45: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23285715281963348
    2. '!' → logprob: -2.7328572273254395
    3. ' else' → logprob: -2.8578572273254395
    4. '<|end|>' → logprob: -2.8578572273254395
    5. '
' → logprob: -4.8578572273254395
    6. '```' → logprob: -5.2328572273254395
    7. ':' → logprob: -5.6078572273254395
    8. '\n' → logprob: -6.1078572273254395
    9. '.' → logprob: -6.1078572273254395
    10. 'elif' → logprob: -6.3578572273254395

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.2603901015827432e-05
    2. ' :' → logprob: -11.000022888183594
    3. ':
' → logprob: -12.375022888183594
    4. '   ' → logprob: -13.750022888183594
    5. ':return' → logprob: -15.625022888183594
    6. '):' → logprob: -16.250022888183594
    7. ':**' → logprob: -16.750022888183594
    8. '():' → logprob: -17.125022888183594
    9. '<|end|>' → logprob: -17.625022888183594
    10. ':`' → logprob: -17.625022888183594

Token 47: '   ' (ID: 271)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -1.2394541501998901
    2. '\n' → logprob: -1.3644541501998901
    3. ''' → logprob: -1.4894541501998901
    4. '   ' → logprob: -1.9894541501998901
    5. 'print' → logprob: -3.3644542694091797
    6. '('\' → logprob: -3.7394542694091797
    7. ' print' → logprob: -4.48945426940918
    8. '    
' → logprob: -4.98945426940918
    9. ' ' → logprob: -5.86445426940918
    10. '('' → logprob: -6.23945426940918

Token 48: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0013373857364058495
    2. ''' → logprob: -7.12633752822876
    3. ' print' → logprob: -8.126337051391602
    4. '   ' → logprob: -9.876337051391602
    5. 'No' → logprob: -10.626337051391602
    6. '('' → logprob: -10.751337051391602
    7. 'pass' → logprob: -10.876337051391602
    8. 'Print' → logprob: -11.376337051391602
    9. ''N' → logprob: -11.501337051391602
    10. 'raise' → logprob: -11.876337051391602

Token 49: '(':' (ID: 36524)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.47409892082214355
    2. '(' → logprob: -0.9740989208221436
    3. '('(' → logprob: -12.224099159240723
    4. '()' → logprob: -12.349099159240723
    5. '("' → logprob: -12.474099159240723
    6. '("("' → logprob: -12.849099159240723
    7. '(False' → logprob: -12.974099159240723
    8. ''' → logprob: -14.474099159240723
    9. '(\'' → logprob: -14.474099159240723
    10. '(None' → logprob: -14.849099159240723

Token 50: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4332321584224701
    2. '(' → logprob: -1.0582321882247925
    3. ')' → logprob: -6.808232307434082
    4. '')' → logprob: -7.183232307434082
    5. '-' → logprob: -7.433232307434082
    6. ''(' → logprob: -8.183232307434082
    7. '(':' → logprob: -8.183232307434082
    8. '(('' → logprob: -8.183232307434082
    9. ''' → logprob: -8.308232307434082
    10. '(:' → logprob: -9.058232307434082

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.090760431718081e-05
    2. ')
' → logprob: -9.500090599060059
    3. '')' → logprob: -11.625090599060059
    4. '\n' → logprob: -12.500090599060059
    5. '`)' → logprob: -13.750090599060059
    6. '```' → logprob: -13.750090599060059
    7. '}' → logprob: -14.875090599060059
    8. '")' → logprob: -15.250090599060059
    9. '
' → logprob: -15.375090599060059
    10. '<|end|>' → logprob: -16.250091552734375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 36.73%
Précision adaptée (1ère position): 38.78%
Précision (top 10): 77.55%
================================================================================
