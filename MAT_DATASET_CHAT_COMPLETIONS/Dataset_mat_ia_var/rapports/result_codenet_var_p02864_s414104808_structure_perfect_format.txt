================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(2147483647)
INF = float("inf")
MOD = 10**9 + 7
input = lambda: sys.stdin.readline().rstrip()

def resolve():
    n, k = map(int, input().split())
    H = [0] + list(map(int, input().split()))

    dp = [[INF] * (n - k + 1) for _ in range(n + 1)]
    dp[0][0] = 0

    for x in range(1, n + 1):
        for y in range(1, n - k + 1):
            dp[x][y] = min(dp[x0][y - 1] + max(0, H[x] - H[x0]) for x0 in range(x))

    print(min(dp[x][n - k] for x in range(n + 1)))

resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1822601556777954
    2. '\n' → logprob: -2.057260036468506
    3. '<|end|>' → logprob: -4.182260036468506
    4. '\' → logprob: -4.432260036468506
    5. 'newline' → logprob: -5.557260036468506
    6. 'import' → logprob: -6.057260036468506
    7. '<|end|>' → logprob: -6.682260036468506
    8. '```' → logprob: -7.432260036468506
    9. ';' → logprob: -7.557260036468506
    10. '' → logprob: -7.682260036468506

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3313809633255005
    2. '_trace' → logprob: -2.081380844116211
    3. 'trace' → logprob: -3.706380844116211
    4. 't' → logprob: -4.206380844116211
    5. '_exc' → logprob: -4.331380844116211
    6. '_sys' → logprob: -4.706380844116211
    7. '_soft' → logprob: -4.831380844116211
    8. 'x' → logprob: -4.956380844116211
    9. '_encoding' → logprob: -4.956380844116211
    10. 's' → logprob: -4.956380844116211

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00033427379094064236
    2. 'ursive' → logprob: -8.375334739685059
    3. '_limit' → logprob: -10.875334739685059
    4. 'urs' → logprob: -10.875334739685059
    5. 'ur' → logprob: -11.000334739685059
    6. 'urf' → logprob: -11.500334739685059
    7. '_' → logprob: -11.625334739685059
    8. 'limit' → logprob: -11.875334739685059
    9. 'urse' → logprob: -12.000334739685059
    10. 'ursor' → logprob: -12.375334739685059

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.32502806186676025
    2. '_limit' → logprob: -1.3250280618667603
    3. '_depth' → logprob: -4.575027942657471
    4. 'depth' → logprob: -6.825027942657471
    5. '_' → logprob: -9.325028419494629
    6. 'error' → logprob: -10.325028419494629
    7. ' limit' → logprob: -10.575028419494629
    8. '_limits' → logprob: -10.825028419494629
    9. '_rate' → logprob: -11.075028419494629
    10. '_stack' → logprob: -11.200028419494629

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6933189630508423
    2. '100' → logprob: -0.6933189630508423
    3. ' ' → logprob: -9.318319320678711
    4. '500' → logprob: -9.818319320678711
    5. '300' → logprob: -11.568319320678711
    6. '999' → logprob: -12.568319320678711
    7. '1' → logprob: -12.818319320678711
    8. '250' → logprob: -12.818319320678711
    9. '150' → logprob: -12.943319320678711
    10. '200' → logprob: -13.318319320678711

Token 10: '748' (ID: 39478)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.25259944796562195
    2. '748' → logprob: -1.5025994777679443
    3. '74' → logprob: -7.627599239349365
    4. '73' → logprob: -9.502599716186523
    5. '738' → logprob: -10.752599716186523
    6. '72' → logprob: -11.002599716186523
    7. '83' → logprob: -11.252599716186523
    8. '747' → logprob: -11.377599716186523
    9. '783' → logprob: -11.377599716186523
    10. '78' → logprob: -11.627599716186523

Token 11: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -0.000249061529757455
    2. '363' → logprob: -8.375248908996582
    3. '3' → logprob: -11.000248908996582
    4. '36' → logprob: -14.125248908996582
    5. '367' → logprob: -15.250248908996582
    6. '362' → logprob: -15.500248908996582
    7. '366' → logprob: -15.625248908996582
    8. '```' → logprob: -15.750248908996582
    9. '365' → logprob: -17.2502498626709
    10. '346' → logprob: -17.6252498626709

Token 12: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ')' → logprob: -17.5
    3. '8' → logprob: -19.25
    4. '6' → logprob: -21.125
    5. '2' → logprob: -21.875
    6. '))' → logprob: -23.5
    7. ' ' → logprob: -23.875
    8. '```' → logprob: -24.25
    9. '৭' → logprob: -24.375
    10. '3' → logprob: -24.75

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')
' → logprob: -15.750000953674316
    5. '')' → logprob: -17.625
    6. ')

' → logprob: -18.0
    7. '`)' → logprob: -18.0
    8. '```' → logprob: -18.625
    9. ')))' → logprob: -18.75
    10. ')`' → logprob: -18.875

Token 14: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8468270301818848
    2. '\n' → logprob: -1.0968270301818848
    3. '\' → logprob: -2.0968270301818848
    4. ')' → logprob: -3.5968270301818848
    5. '' → logprob: -3.5968270301818848
    6. '```' → logprob: -3.7218270301818848
    7. '#' → logprob: -4.346827030181885
    8. '
' → logprob: -4.971827030181885
    9. '<|end|>' → logprob: -5.471827030181885
    10. 'import' → logprob: -5.721827030181885

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8892500996589661
    2. ' =' → logprob: -1.0142500400543213
    3. '=' → logprob: -2.3892500400543213
    4. '.' → logprob: -2.5142500400543213
    5. ')' → logprob: -3.8892500400543213
    6. ' ' → logprob: -4.5142502784729
    7. ' _' → logprob: -4.8892502784729
    8. ' .' → logprob: -5.3892502784729
    9. '._' → logprob: -5.8892502784729
    10. ',' → logprob: -6.6392502784729

Token 16: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25574102997779846
    2. ' float' → logprob: -1.880741000175476
    3. '10' → logprob: -3.2557411193847656
    4. 'float' → logprob: -3.3807411193847656
    5. ' int' → logprob: -8.130741119384766
    6. 'int' → logprob: -8.880741119384766
    7. '1' → logprob: -9.255741119384766
    8. '100' → logprob: -10.755741119384766
    9. '214' → logprob: -11.505741119384766
    10. ' ' → logprob: -11.630741119384766

Token 17: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02969646081328392
    2. '(' → logprob: -3.654696464538574
    3. '.' → logprob: -6.404696464538574
    4. '('.')' → logprob: -7.154696464538574
    5. '("' → logprob: -7.779696464538574
    6. ''' → logprob: -8.654696464538574
    7. '32' → logprob: -9.779696464538574
    8. '('_' → logprob: -9.779696464538574
    9. '('.' → logprob: -10.029696464538574
    10. '("("' → logprob: -10.779696464538574

Token 18: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.016761312261223793
    2. ''in' → logprob: -4.266761302947998
    3. ''' → logprob: -6.141761302947998
    4. '"' → logprob: -8.016761779785156
    5. 'INF' → logprob: -11.016761779785156
    6. ''ins' → logprob: -11.141761779785156
    7. '-inf' → logprob: -11.141761779785156
    8. 'info' → logprob: -11.516761779785156
    9. 'in' → logprob: -11.641761779785156
    10. ''inc' → logprob: -12.016761779785156

Token 19: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.018958184868097305
    2. ')' → logprob: -4.01895809173584
    3. ')")' → logprob: -7.14395809173584
    4. '"' → logprob: -11.39395809173584
    5. ')"' → logprob: -13.01895809173584
    6. '}")' → logprob: -14.14395809173584
    7. ' )' → logprob: -14.14395809173584
    8. '')' → logprob: -14.26895809173584
    9. ' ")' → logprob: -14.26895809173584
    10. '()' → logprob: -14.64395809173584

Token 20: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41022947430610657
    2. '
' → logprob: -1.6602294445037842
    3. '\n' → logprob: -3.160229444503784
    4. '\' → logprob: -3.160229444503784
    5. '```' → logprob: -4.035229682922363
    6. '' → logprob: -4.160229682922363
    7. '
' → logprob: -4.285229682922363
    8. '

' → logprob: -4.660229682922363
    9. 'class' → logprob: -7.410229682922363
    10. '#' → logprob: -7.660229682922363

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3221484422683716
    2. '=' → logprob: -1.4471484422683716
    3. '_' → logprob: -3.572148323059082
    4. ' ' → logprob: -4.822148323059082
    5. ')' → logprob: -6.072148323059082
    6. ' )' → logprob: -7.572148323059082
    7. '<|end|>' → logprob: -7.572148323059082
    8. ' _' → logprob: -8.697148323059082
    9. ' =)' → logprob: -8.697148323059082
    10. '.' → logprob: -8.822148323059082

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08918536454439163
    2. '10' → logprob: -2.4641854763031006
    3. '100' → logprob: -8.33918571472168
    4. '1' → logprob: -12.08918571472168
    5. 'int' → logprob: -14.96418571472168
    6. ' ' → logprob: -15.21418571472168
    7. ' int' → logprob: -15.71418571472168
    8. '0' → logprob: -15.96418571472168
    9. ' (' → logprob: -15.96418571472168
    10. ' )' → logprob: -16.83918571472168

Token 23: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023465007543563843
    2. '100' → logprob: -3.7734649181365967
    3. ' ' → logprob: -8.523465156555176
    4. '1' → logprob: -11.148465156555176
    5. '998' → logprob: -12.023465156555176
    6. 'int' → logprob: -15.773465156555176
    7. '(' → logprob: -16.39846420288086
    8. '2' → logprob: -16.52346420288086
    9. '999' → logprob: -17.77346420288086
    10. '123' → logprob: -18.02346420288086

Token 24: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0013161895330995321
    2. '**' → logprob: -6.751316070556641
    3. '09' → logprob: -8.87631607055664
    4. ' ' → logprob: -12.75131607055664
    5. '7' → logprob: -13.00131607055664
    6. '0' → logprob: -15.25131607055664
    7. ' **' → logprob: -15.50131607055664
    8. '10' → logprob: -15.75131607055664
    9. '```' → logprob: -15.75131607055664
    10. '^' → logprob: -16.25131607055664

Token 25: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0280383548888494e-06
    2. '09' → logprob: -13.875000953674316
    3. ' ' → logprob: -18.875001907348633
    4. '+' → logprob: -19.500001907348633
    5. '10' → logprob: -19.500001907348633
    6. '```' → logprob: -19.500001907348633
    7. '18' → logprob: -20.375001907348633
    8. '９' → logprob: -20.625001907348633
    9. '19' → logprob: -22.000001907348633
    10. '8' → logprob: -22.125001907348633

Token 26: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007435183506458998
    2. ' +' → logprob: -7.250743389129639
    3. '7' → logprob: -10.375743865966797
    4. '+
' → logprob: -13.750743865966797
    5. '＋' → logprob: -14.625743865966797
    6. '+

' → logprob: -15.000743865966797
    7. ' ' → logprob: -16.250743865966797
    8. ' plus' → logprob: -16.375743865966797
    9. '```' → logprob: -16.875743865966797
    10. '+</' → logprob: -16.875743865966797

Token 27: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '+' → logprob: -16.0
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -18.75
    6. '07' → logprob: -18.875
    7. '７' → logprob: -19.6875
    8. '9' → logprob: -19.6875
    9. ' ' → logprob: -19.75
    10. '  ' → logprob: -19.875

Token 28: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.875
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -19.875
    5. '７' → logprob: -20.375
    6. '   ' → logprob: -21.25
    7. '' → logprob: -21.625
    8. ' ' → logprob: -21.75
    9. '

' → logprob: -22.25
    10. '07' → logprob: -22.375

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24151594936847687
    2. '\n' → logprob: -2.866515874862671
    3. '' → logprob: -2.991515874862671
    4. '

' → logprob: -3.241515874862671
    5. '```' → logprob: -3.491515874862671
    6. 'def' → logprob: -3.741515874862671
    7. '
' → logprob: -5.11651611328125
    8. '\' → logprob: -5.36651611328125
    9. '#' → logprob: -6.86651611328125
    10. 'import' → logprob: -7.99151611328125

Token 30: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20158007740974426
    2. '
' → logprob: -1.8265800476074219
    3. '

' → logprob: -4.826580047607422
    4. '\n' → logprob: -5.451580047607422
    5. '```' → logprob: -5.701580047607422
    6. '' → logprob: -6.451580047607422
    7. '#' → logprob: -6.451580047607422
    8. 'n' → logprob: -6.951580047607422
    9. '\' → logprob: -7.326580047607422
    10. '
' → logprob: -8.451580047607422

Token 31: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012249799445271492
    2. '.' → logprob: -5.012249946594238
    3. '()' → logprob: -5.262249946594238
    4. '(.)' → logprob: -9.137249946594238
    5. '().' → logprob: -9.762249946594238
    6. '("")' → logprob: -10.262249946594238
    7. ')' → logprob: -10.512249946594238
    8. '("("' → logprob: -11.012249946594238
    9. '(
' → logprob: -11.262249946594238
    10. '```' → logprob: -11.512249946594238

Token 32: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23215866088867188
    2. ' sys' → logprob: -1.6071586608886719
    3. 'input' → logprob: -5.232158660888672
    4. ' lambda' → logprob: -7.232158660888672
    5. 'sys' → logprob: -8.232158660888672
    6. ' ' → logprob: -8.857158660888672
    7. ' open' → logprob: -9.107158660888672
    8. ' int' → logprob: -9.607158660888672
    9. ' raw' → logprob: -10.107158660888672
    10. 'int' → logprob: -11.732158660888672

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02601717598736286
    2. ' :' → logprob: -4.026017189025879
    3. '():' → logprob: -5.401017189025879
    4. '()' → logprob: -6.026017189025879
    5. ' ' → logprob: -7.526017189025879
    6. '().' → logprob: -9.526017189025879
    7. ')' → logprob: -10.401017189025879
    8. ':list' → logprob: -10.401017189025879
    9. ':str' → logprob: -10.651017189025879
    10. '<|end|>' → logprob: -10.776017189025879

Token 34: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.49013766646385193
    2. ' sys' → logprob: -0.9901376962661743
    3. 'input' → logprob: -4.240137577056885
    4. ' input' → logprob: -6.490137577056885
    5. 'stdin' → logprob: -12.865138053894043
    6. '=sys' → logprob: -13.115138053894043
    7. '(sys' → logprob: -13.865138053894043
    8. 'raw' → logprob: -13.990138053894043
    9. '	sys' → logprob: -14.115138053894043
    10. 'str' → logprob: -14.740138053894043

Token 35: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012713817704934627
    2. '.stdout' → logprob: -9.250126838684082
    3. '.' → logprob: -10.625126838684082
    4. '.readline' → logprob: -12.250126838684082
    5. '.std' → logprob: -14.125126838684082
    6. '.stderr' → logprob: -14.500126838684082
    7. ' .' → logprob: -15.750126838684082
    8. '.argv' → logprob: -16.1251277923584
    9. ' stdin' → logprob: -16.2501277923584
    10. 'stdin' → logprob: -16.3751277923584

Token 36: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.796184723294573e-06
    2. '.read' → logprob: -12.375005722045898
    3. '.' → logprob: -13.875005722045898
    4. 'read' → logprob: -14.750005722045898
    5. ' readline' → logprob: -16.5000057220459
    6. '.buffer' → logprob: -17.0000057220459
    7. '.readlines' → logprob: -17.5000057220459
    8. 'buffer' → logprob: -19.1250057220459
    9. '.Read' → logprob: -20.0000057220459
    10. '_read' → logprob: -20.5000057220459

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.28175753355026245
    2. '()' → logprob: -1.4067575931549072
    3. '()\' → logprob: -7.656757354736328
    4. '()
' → logprob: -9.656757354736328
    5. '()

' → logprob: -10.406757354736328
    6. '(' → logprob: -10.656757354736328
    7. '()<' → logprob: -12.656757354736328
    8. '.strip' → logprob: -13.281757354736328
    9. '()[' → logprob: -13.406757354736328
    10. '.rstrip' → logprob: -13.531757354736328

Token 38: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06211703270673752
    2. 'rstrip' → logprob: -2.812117099761963
    3. ' strip' → logprob: -8.812116622924805
    4. '-strip' → logprob: -15.937116622924805
    5. '_strip' → logprob: -15.937116622924805
    6. '(strip' → logprob: -16.562116622924805
    7. 'rst' → logprob: -16.687116622924805
    8. 'r' → logprob: -16.687116622924805
    9. 'str' → logprob: -17.062116622924805
    10. 'split' → logprob: -18.062116622924805

Token 39: '()

' (ID: 5874)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.845901608467102
    2. '
' → logprob: -0.970901608467102
    3. '\n' → logprob: -2.5959014892578125
    4. '\' → logprob: -3.3459014892578125
    5. '

' → logprob: -3.7209014892578125
    6. '```' → logprob: -3.8459014892578125
    7. '' → logprob: -4.7209014892578125
    8. '<|end|>' → logprob: -5.4709014892578125
    9. 'n' → logprob: -5.5959014892578125
    10. '#' → logprob: -5.7209014892578125

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4981374144554138
    2. 'n' → logprob: -0.9981374144554138
    3. 'N' → logprob: -3.8731374740600586
    4. 'class' → logprob: -6.248137474060059
    5. 'from' → logprob: -7.873137474060059
    6. 'd' → logprob: -8.498137474060059
    7. '#' → logprob: -8.998137474060059
    8. 'a' → logprob: -9.123137474060059
    9. '\' → logprob: -9.498137474060059
    10. 'H' → logprob: -9.998137474060059

Token 41: ' resolve' (ID: 14062)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7398675084114075
    2. ' dfs' → logprob: -0.8648675084114075
    3. ' main' → logprob: -2.3648674488067627
    4. ' solve' → logprob: -5.239867687225342
    5. ' factor' → logprob: -6.989867687225342
    6. ' bfs' → logprob: -8.114867210388184
    7. ' solver' → logprob: -8.239867210388184
    8. ' factorial' → logprob: -8.614867210388184
    9. ' sol' → logprob: -9.239867210388184
    10. ' dp' → logprob: -9.239867210388184

Token 42: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.350386295001954e-05
    2. ' ():' → logprob: -9.875073432922363
    3. '(' → logprob: -11.000073432922363
    4. '()' → logprob: -12.500073432922363
    5. '(()' → logprob: -14.750073432922363
    6. '(a' → logprob: -15.375073432922363
    7. '(":' → logprob: -16.00007438659668
    8. '(line' → logprob: -16.25007438659668
    9. '():
' → logprob: -16.50007438659668
    10. '(:' → logprob: -16.50007438659668

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003028213744983077
    2. '    ' → logprob: -6.628028392791748
    3. '    
' → logprob: -6.753028392791748
    4. '<|end|>' → logprob: -8.37802791595459
    5. '<|end|>' → logprob: -9.75302791595459
    6. ' ' → logprob: -9.75302791595459
    7. '\n' → logprob: -10.75302791595459
    8. '\' → logprob: -11.00302791595459
    9. '
' → logprob: -11.00302791595459
    10. 'n' → logprob: -11.25302791595459

Token 44: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05807255581021309
    2. 'n' (adapté à ' n') → logprob: -3.433072566986084
    3. ' N' → logprob: -3.933072566986084
    4. ' ' → logprob: -6.558072566986084
    5. 'N' → logprob: -6.808072566986084
    6. '   ' → logprob: -7.058072566986084
    7. '    ' → logprob: -7.433072566986084
    8. ' h' → logprob: -8.308072090148926
    9. ' H' → logprob: -8.933072090148926
    10. ' pass' → logprob: -10.683072090148926

Token 45: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011925197206437588
    2. ',' → logprob: -4.636925220489502
    3. '=' → logprob: -6.761925220489502
    4. ' ,' → logprob: -7.386925220489502
    5. '=int' → logprob: -8.511924743652344
    6. ' ' → logprob: -8.636924743652344
    7. ' =
' → logprob: -13.386924743652344
    8. '=input' → logprob: -13.386924743652344
    9. ',int' → logprob: -13.511924743652344
    10. ' =)' → logprob: -13.761924743652344

Token 46: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6932876706123352
    2. ' m' → logprob: -1.4432876110076904
    3. 'k' → logprob: -1.9432876110076904
    4. 'm' → logprob: -2.3182876110076904
    5. ' a' → logprob: -5.3182878494262695
    6. ' ' → logprob: -5.6932878494262695
    7. ' q' → logprob: -5.9432878494262695
    8. 'a' → logprob: -6.1932878494262695
    9. ' x' → logprob: -6.5682878494262695
    10. ' d' → logprob: -6.5682878494262695

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132626414299011
    2. '=' → logprob: -1.313262701034546
    3. ',' → logprob: -14.438262939453125
    4. '=input' → logprob: -15.438262939453125
    5. ' ' → logprob: -16.188262939453125
    6. ')' → logprob: -16.813262939453125
    7. '=int' → logprob: -16.938262939453125
    8. '＝' → logprob: -17.188262939453125
    9. '=

' → logprob: -18.313262939453125
    10. ')=' → logprob: -18.688262939453125

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011070811189711094
    2. 'map' → logprob: -4.511070728302002
    3. ' ' → logprob: -11.51107120513916
    4. ' input' → logprob: -11.63607120513916
    5. ' list' → logprob: -13.01107120513916
    6. 'input' → logprob: -13.88607120513916
    7. '	map' → logprob: -14.88607120513916
    8. 'list' → logprob: -15.76107120513916
    9. '  ' → logprob: -16.011070251464844
    10. 'm' → logprob: -16.636070251464844

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06369896978139877
    2. '(' → logprob: -2.8136990070343018
    3. '(input' → logprob: -6.688698768615723
    4. '(str' → logprob: -7.938698768615723
    5. '(list' → logprob: -9.563698768615723
    6. '(lambda' → logprob: -10.063698768615723
    7. '(in' → logprob: -12.063698768615723
    8. '(i' → logprob: -13.438698768615723
    9. '(eval' → logprob: -13.438698768615723
    10. '(map' → logprob: -13.688698768615723

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00524667976424098
    2. ',input' → logprob: -5.255246639251709
    3. ' ,' → logprob: -11.630247116088867
    4. 'input' → logprob: -13.755247116088867
    5. '(input' → logprob: -13.755247116088867
    6. '(' → logprob: -13.880247116088867
    7. ',int' → logprob: -14.130247116088867
    8. '，' → logprob: -16.255247116088867
    9. '```' → logprob: -16.755247116088867
    10. '(),' → logprob: -16.880247116088867

Token 51: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4740942120552063
    2. 'input' → logprob: -0.9740942120552063
    3. ')' → logprob: -11.84909439086914
    4. ' ' → logprob: -12.59909439086914
    5. ',input' → logprob: -12.59909439086914
    6. '(input' → logprob: -13.84909439086914
    7. '=input' → logprob: -14.22409439086914
    8. '	input' → logprob: -14.72409439086914
    9. ' )' → logprob: -14.97409439086914
    10. ' sys' → logprob: -15.34909439086914

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.27099974633893e-05
    2. '()' → logprob: -11.375012397766113
    3. ')' → logprob: -14.625012397766113
    4. '())' → logprob: -14.750012397766113
    5. ' ().' → logprob: -15.125012397766113
    6. '(' → logprob: -16.87501335144043
    7. '()
' → logprob: -17.12501335144043
    8. '().__' → logprob: -18.50001335144043
    9. '()))' → logprob: -19.00001335144043
    10. '()[' → logprob: -19.00001335144043

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.7848862373502925e-05
    2. 'strip' → logprob: -10.750027656555176
    3. ')' → logprob: -12.500027656555176
    4. 'rstrip' → logprob: -13.750027656555176
    5. ' split' → logprob: -14.250027656555176
    6. 'spl' → logprob: -14.875027656555176
    7. 'sp' → logprob: -15.250027656555176
    8. '(split' → logprob: -16.500028610229492
    9. 'plit' → logprob: -16.625028610229492
    10. 's' → logprob: -16.875028610229492

Token 54: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011078826151788235
    2. '))' → logprob: -4.511078834533691
    3. '())' → logprob: -11.136078834533691
    4. '()' → logprob: -11.386078834533691
    5. ')")' → logprob: -13.761078834533691
    6. ')
' → logprob: -13.886078834533691
    7. ')))' → logprob: -14.136078834533691
    8. '),' → logprob: -14.261078834533691
    9. ')`' → logprob: -14.511078834533691
    10. '(' → logprob: -15.261078834533691

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02868177369236946
    2. ')' → logprob: -4.403681755065918
    3. '    
' → logprob: -5.153681755065918
    4. ':' → logprob: -5.778681755065918
    5. ',' → logprob: -7.028681755065918
    6. ' ' → logprob: -7.278681755065918
    7. '\n' → logprob: -7.278681755065918
    8. '```' → logprob: -7.528681755065918
    9. '   
' → logprob: -7.528681755065918
    10. ' 
' → logprob: -7.653681755065918

Token 56: ' H' (ID: 487)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7426650524139404
    2. 'dp' → logprob: -1.2426650524139404
    3. '   ' → logprob: -2.4926650524139404
    4. 'a' → logprob: -3.1176650524139404
    5. ' a' → logprob: -3.1176650524139404
    6. ' A' → logprob: -4.1176652908325195
    7. 'd' → logprob: -4.8676652908325195
    8. 'A' → logprob: -5.3676652908325195
    9. ' graph' → logprob: -5.3676652908325195
    10. 's' → logprob: -5.4926652908325195

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006815423723310232
    2. '=' → logprob: -5.006815433502197
    3. '   ' → logprob: -10.256814956665039
    4. '[' → logprob: -10.756814956665039
    5. '[]' → logprob: -11.381814956665039
    6. ' ' → logprob: -11.506814956665039
    7. '    ' → logprob: -12.131814956665039
    8. '[:]' → logprob: -12.506814956665039
    9. ' =[' → logprob: -13.006814956665039
    10. '=[' → logprob: -13.006814956665039

Token 58: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.019758179783821106
    2. 'list' → logprob: -4.019758224487305
    3. ' [' → logprob: -6.519758224487305
    4. '[list' → logprob: -9.519758224487305
    5. '[' → logprob: -9.769758224487305
    6. ' []' → logprob: -13.394758224487305
    7. '[]' → logprob: -14.769758224487305
    8. '[int' → logprob: -15.519758224487305
    9. '=list' → logprob: -16.644758224487305
    10. ' ' → logprob: -17.019758224487305

Token 59: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011726059019565582
    2. ' int' → logprob: -6.7511725425720215
    3. ']int' → logprob: -13.87617301940918
    4. '0' → logprob: -14.25117301940918
    5. '(int' → logprob: -15.12617301940918
    6. ']' → logprob: -16.37617301940918
    7. ' ' → logprob: -16.50117301940918
    8. '	int' → logprob: -16.50117301940918
    9. '*' → logprob: -16.62617301940918
    10. '<int' → logprob: -17.00117301940918

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010303078452125192
    2. ']+' → logprob: -7.501030445098877
    3. ']*' → logprob: -8.376029968261719
    4. ' ]' → logprob: -9.376029968261719
    5. ']*(' → logprob: -9.626029968261719
    6. ',' → logprob: -9.876029968261719
    7. ' for' → logprob: -10.751029968261719
    8. 'for' → logprob: -11.876029968261719
    9. '()]' → logprob: -12.126029968261719
    10. ')' → logprob: -12.251029968261719

Token 61: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22368548810482025
    2. '+' → logprob: -2.0986855030059814
    3. ']+' → logprob: -2.8486855030059814
    4. ']*(' → logprob: -4.973685264587402
    5. ']*' → logprob: -5.598685264587402
    6. '*' → logprob: -5.598685264587402
    7. ')' → logprob: -6.473685264587402
    8. ' +' → logprob: -6.973685264587402
    9. ' for' → logprob: -7.223685264587402
    10. 'for' → logprob: -7.473685264587402

Token 62: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.049175869673490524
    2. ' list' → logprob: -3.049175977706909
    3. '[list' → logprob: -7.54917573928833
    4. '[' → logprob: -10.049176216125488
    5. ' [' → logprob: -10.924176216125488
    6. '[l' → logprob: -15.674176216125488
    7. '	list' → logprob: -16.549175262451172
    8. '[*' → logprob: -16.924175262451172
    9. '[n' → logprob: -17.049175262451172
    10. 'lis' → logprob: -17.049175262451172

Token 63: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0010367410723119974
    2. '(' → logprob: -6.876036643981934
    3. '(int' → logprob: -13.001036643981934
    4. 'map' → logprob: -13.751036643981934
    5. '()' → logprob: -15.626036643981934
    6. '(
' → logprob: -15.626036643981934
    7. '(range' → logprob: -16.12603759765625
    8. ' map' → logprob: -17.12603759765625
    9. '(m' → logprob: -17.37603759765625
    10. '	map' → logprob: -17.87603759765625

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001745775662129745
    2. 'int' → logprob: -8.750174522399902
    3. ',int' → logprob: -11.375174522399902
    4. '(' → logprob: -13.250174522399902
    5. '[int' → logprob: -13.750174522399902
    6. '<int' → logprob: -14.375174522399902
    7. ' int' → logprob: -14.500174522399902
    8. ']int' → logprob: -14.625174522399902
    9. '=int' → logprob: -15.750174522399902
    10. '	int' → logprob: -16.62517547607422

Token 65: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16605830192565918
    2. ',' → logprob: -2.541058301925659
    3. ',input' → logprob: -2.916058301925659
    4. '(' → logprob: -3.916058301925659
    5. 'input' → logprob: -10.166058540344238
    6. ' ,' → logprob: -10.791058540344238
    7. ')' → logprob: -11.041058540344238
    8. ' (' → logprob: -11.166058540344238
    9. '(int' → logprob: -11.666058540344238
    10. '```' → logprob: -11.791058540344238

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023259107023477554
    2. ' input' → logprob: -3.773259162902832
    3. '(input' → logprob: -11.523259162902832
    4. ',input' → logprob: -13.273259162902832
    5. ')' → logprob: -13.898259162902832
    6. '	input' → logprob: -15.148259162902832
    7. ' ' → logprob: -15.523259162902832
    8. '=input' → logprob: -15.898259162902832
    9. '<input' → logprob: -15.898259162902832
    10. 'int' → logprob: -16.648258209228516

Token 67: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.054500666621607e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -16.875003814697266
    4. '.' → logprob: -18.375003814697266
    5. '(' → logprob: -18.500003814697266
    6. '.split' → logprob: -18.625003814697266
    7. 'split' → logprob: -21.000003814697266
    8. ')' → logprob: -21.000003814697266
    9. '()-' → logprob: -21.125003814697266
    10. '()
' → logprob: -21.125003814697266

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. ' split' → logprob: -14.250000953674316
    3. 'rstrip' → logprob: -14.875000953674316
    4. 'spl' → logprob: -15.500000953674316
    5. '(split' → logprob: -16.875001907348633
    6. 'strip' → logprob: -17.625001907348633
    7. 's' → logprob: -18.750001907348633
    8. ')' → logprob: -18.875001907348633
    9. '.split' → logprob: -19.000001907348633
    10. '().' → logprob: -20.375001907348633

Token 69: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0076241339556872845
    2. '())' → logprob: -5.50762414932251
    3. '()' → logprob: -5.75762414932251
    4. '))' → logprob: -8.007623672485352
    5. '()))
' → logprob: -10.632623672485352
    6. '())))' → logprob: -11.882623672485352
    7. '(' → logprob: -12.007623672485352
    8. '()));' → logprob: -12.132623672485352
    9. ')' → logprob: -13.632623672485352
    10. '())).' → logprob: -13.882623672485352

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5081730484962463
    2. 'dp' → logprob: -1.0081729888916016
    3. ' dp' → logprob: -3.7581729888916016
    4. '
' → logprob: -5.133172988891602
    5. '    
' → logprob: -5.633172988891602
    6. '	dp' → logprob: -8.883172988891602
    7. 'DP' → logprob: -9.508172988891602
    8. '  
' → logprob: -9.508172988891602
    9. '```' → logprob: -9.633172988891602
    10. ' 
' → logprob: -9.758172988891602

Token 71: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0012455896940082312
    2. 'DP' → logprob: -7.001245498657227
    3. '   ' → logprob: -8.501245498657227
    4. ' dp' → logprob: -9.126245498657227
    5. 'cost' → logprob: -12.376245498657227
    6. 'from' → logprob: -12.876245498657227
    7. ' DP' → logprob: -13.126245498657227
    8. 'd' → logprob: -13.251245498657227
    9. 'import' → logprob: -13.751245498657227
    10. 'D' → logprob: -13.751245498657227

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009361166739836335
    2. '=' → logprob: -7.000936031341553
    3. '[' → logprob: -11.000936508178711
    4. ' ' → logprob: -12.000936508178711
    5. ' =[' → logprob: -14.125936508178711
    6. '  ' → logprob: -15.500936508178711
    7. ']' → logprob: -15.750936508178711
    8. '[]' → logprob: -15.750936508178711
    9. ')' → logprob: -16.00093650817871
    10. ' =
' → logprob: -16.37593650817871

Token 73: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12693051993846893
    2. ' [' → logprob: -2.1269304752349854
    3. '[n' → logprob: -13.501930236816406
    4. '[in' → logprob: -15.501930236816406
    5. '[-' → logprob: -15.501930236816406
    6. ' ' → logprob: -15.751930236816406
    7. '[int' → logprob: -16.001930236816406
    8. '   ' → logprob: -16.126930236816406
    9. '[len' → logprob: -16.626930236816406
    10. '[i' → logprob: -16.751930236816406

Token 74: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.001143314759247005
    2. '0' → logprob: -6.876143455505371
    3. 'inf' → logprob: -9.626143455505371
    4. 'float' → logprob: -10.501143455505371
    5. '[' → logprob: -12.126143455505371
    6. ' INF' → logprob: -12.126143455505371
    7. '-INF' → logprob: -13.251143455505371
    8. 'IN' → logprob: -13.626143455505371
    9. 'False' → logprob: -14.126143455505371
    10. '-inf' → logprob: -14.376143455505371

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22453533113002777
    2. ' for' → logprob: -1.724535346031189
    3. ']*' → logprob: -4.3495354652404785
    4. ' ]' → logprob: -5.4745354652404785
    5. 'for' → logprob: -5.7245354652404785
    6. ']*(' → logprob: -6.0995354652404785
    7. ',' → logprob: -9.09953498840332
    8. ' ' → logprob: -10.09953498840332
    9. ')' → logprob: -10.22453498840332
    10. ']+' → logprob: -10.72453498840332

Token 76: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7108773589134216
    2. ' for' → logprob: -0.8358773589134216
    3. ']' → logprob: -2.7108774185180664
    4. ']*(' → logprob: -4.960877418518066
    5. ']*' → logprob: -6.460877418518066
    6. '   ' → logprob: -8.960877418518066
    7. '	for' → logprob: -9.835877418518066
    8. ']+' → logprob: -10.335877418518066
    9. ' ' → logprob: -11.835877418518066
    10. ' ]' → logprob: -12.085877418518066

Token 77: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4364877939224243
    2. '(k' → logprob: -1.0614877939224243
    3. '(' → logprob: -5.061487674713135
    4. ' (' → logprob: -7.186487674713135
    5. '(N' → logprob: -7.936487674713135
    6. '(j' → logprob: -9.936488151550293
    7. '501' → logprob: -10.061488151550293
    8. '(kn' → logprob: -10.561488151550293
    9. '100' → logprob: -10.936488151550293
    10. '(K' → logprob: -10.936488151550293

Token 78: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6112462878227234
    2. '(k' → logprob: -0.9862462878227234
    3. '(n' → logprob: -2.736246347427368
    4. 'n' → logprob: -4.611246109008789
    5. '(' → logprob: -6.111246109008789
    6. '101' → logprob: -6.736246109008789
    7. '501' → logprob: -6.861246109008789
    8. '2' → logprob: -6.986246109008789
    9. '500' → logprob: -7.361246109008789
    10. '100' → logprob: -7.736246109008789

Token 79: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11847279965877533
    2. ' +' → logprob: -2.2434728145599365
    3. ')' → logprob: -5.243472576141357
    4. ' )' → logprob: -8.243473052978516
    5. ' ' → logprob: -10.368473052978516
    6. '+k' → logprob: -11.368473052978516
    7. '   ' → logprob: -12.118473052978516
    8. '+
' → logprob: -12.180973052978516
    9. '+)' → logprob: -12.305973052978516
    10. '
' → logprob: -12.368473052978516

Token 80: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18650570511817932
    2. '1' → logprob: -1.811505675315857
    3. ' k' → logprob: -5.3115057945251465
    4. ' ' → logprob: -6.9365057945251465
    5. '-' → logprob: -7.9365057945251465
    6. '(k' → logprob: -9.061505317687988
    7. '2' → logprob: -9.436505317687988
    8. ' -' → logprob: -10.061505317687988
    9. '-k' → logprob: -10.249005317687988
    10. '+' → logprob: -10.311505317687988

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22632631659507751
    2. ' +' → logprob: -1.6013263463974
    3. ')' → logprob: -7.3513264656066895
    4. '-' → logprob: -9.976325988769531
    5. ' ' → logprob: -9.976325988769531
    6. ' -' → logprob: -10.601325988769531
    7. '
' → logprob: -10.726325988769531
    8. '1' → logprob: -10.726325988769531
    9. '2' → logprob: -10.976325988769531
    10. ')]' → logprob: -10.976325988769531

Token 82: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5242246389389038
    2. '1' → logprob: -0.8992246389389038
    3. ' ' → logprob: -6.899224758148193
    4. '3' → logprob: -9.774224281311035
    5. '   ' → logprob: -11.836724281311035
    6. '```' → logprob: -12.211724281311035
    7. ')' → logprob: -12.524224281311035
    8. '7' → logprob: -12.711724281311035
    9. '
' → logprob: -12.774224281311035
    10. '5' → logprob: -13.149224281311035

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05493295192718506
    2. '2' → logprob: -2.9299330711364746
    3. ' ' → logprob: -10.179932594299316
    4. '3' → logprob: -12.054932594299316
    5. '```' → logprob: -13.679932594299316
    6. '   ' → logprob: -13.742432594299316
    7. '
' → logprob: -14.617432594299316
    8. '7' → logprob: -14.679932594299316
    9. '

' → logprob: -14.804932594299316
    10. ')' → logprob: -14.804932594299316

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0768032893538475
    2. ' for' → logprob: -2.701803207397461
    3. 'for' → logprob: -5.701803207397461
    4. ' )' → logprob: -6.326803207397461
    5. ']' → logprob: -6.951803207397461
    6. ' ' → logprob: -7.951803207397461
    7. ')]' → logprob: -8.451803207397461
    8. '   ' → logprob: -10.076803207397461
    9. ' ]' → logprob: -10.076803207397461
    10. '),' → logprob: -10.576803207397461

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012537204660475254
    2. 'for' → logprob: -4.387537002563477
    3. ' ' → logprob: -11.637537002563477
    4. '   ' → logprob: -12.012537002563477
    5. '	for' → logprob: -12.137537002563477
    6. ']' → logprob: -12.387537002563477
    7. '    ' → logprob: -13.637537002563477
    8. ')' → logprob: -14.762537002563477
    9. ' f' → logprob: -14.887537002563477
    10. '  ' → logprob: -15.012537002563477

Token 86: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006149665918201208
    2. ' _' → logprob: -5.631149768829346
    3. '(' → logprob: -6.506149768829346
    4. ' ' → logprob: -8.006149291992188
    5. ' range' → logprob: -8.006149291992188
    6. 'range' → logprob: -9.006149291992188
    7. ' i' → logprob: -9.131149291992188
    8. '_i' → logprob: -9.631149291992188
    9. '_range' → logprob: -10.381149291992188
    10. ' in' → logprob: -11.131149291992188

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5568678379058838
    2. 'in' → logprob: -0.9318678379058838
    3. 'range' → logprob: -3.431867837905884
    4. ' ' → logprob: -7.431867599487305
    5. ' range' → logprob: -9.181867599487305
    6. 'n' → logprob: -9.431867599487305
    7. 'i' → logprob: -10.806867599487305
    8. '0' → logprob: -11.181867599487305
    9. '  ' → logprob: -11.306867599487305
    10. '(range' → logprob: -11.431867599487305

Token 88: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141500234603882
    2. ' range' → logprob: -1.7014150619506836
    3. '(range' → logprob: -13.701415061950684
    4. '	range' → logprob: -15.326415061950684
    5. ' ' → logprob: -15.576415061950684
    6. '   ' → logprob: -18.201414108276367
    7. ' xrange' → logprob: -18.326414108276367
    8. 'ran' → logprob: -18.326414108276367
    9. '```' → logprob: -18.451414108276367
    10. '[' → logprob: -18.576414108276367

Token 89: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009358644485473633
    2. '(' → logprob: -4.7593584060668945
    3. ' (' → logprob: -7.2593584060668945
    4. '(k' → logprob: -10.509358406066895
    5. '((' → logprob: -11.759358406066895
    6. ' ' → logprob: -13.009358406066895
    7. '(range' → logprob: -14.009358406066895
    8. '(
' → logprob: -14.759358406066895
    9. ' n' → logprob: -14.884358406066895
    10. ')' → logprob: -15.009358406066895

Token 90: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6128547787666321
    2. '+' → logprob: -0.8628547787666321
    3. ' +' → logprob: -3.3628547191619873
    4. ']' → logprob: -7.612854957580566
    5. ' )' → logprob: -7.737854957580566
    6. ')' → logprob: -7.737854957580566
    7. ' ]' → logprob: -9.612854957580566
    8. '   ' → logprob: -9.862854957580566
    9. ')])' → logprob: -10.237854957580566
    10. '-' → logprob: -11.237854957580566

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000375380739569664
    2. ' ' → logprob: -8.250375747680664
    3. '2' → logprob: -9.125375747680664
    4. '   ' → logprob: -12.500375747680664
    5. '```' → logprob: -14.250375747680664
    6. ')' → logprob: -15.625375747680664
    7. '3' → logprob: -16.000375747680664
    8. '0' → logprob: -16.500375747680664
    9. '
' → logprob: -16.562875747680664
    10. '  ' → logprob: -16.750375747680664

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007911669090390205
    2. '0' → logprob: -7.375791072845459
    3. ' ' → logprob: -9.250791549682617
    4. '2' → logprob: -9.625791549682617
    5. '   ' → logprob: -13.625791549682617
    6. '3' → logprob: -14.625791549682617
    7. 'k' → logprob: -15.625791549682617
    8. '  ' → logprob: -15.875791549682617
    9. '```' → logprob: -16.438291549682617
    10. ')' → logprob: -16.750791549682617

Token 93: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.038203977048397064
    2. ']' → logprob: -3.2882039546966553
    3. ')' → logprob: -8.913204193115234
    4. ' ]' → logprob: -10.788204193115234
    5. '   ' → logprob: -13.163204193115234
    6. '])' → logprob: -13.788204193115234
    7. ')],' → logprob: -14.038204193115234
    8. '])]' → logprob: -14.538204193115234
    9. '>]' → logprob: -14.538204193115234
    10. ' )' → logprob: -14.663204193115234

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1247820183634758
    2. 'dp' → logprob: -2.249782085418701
    3. '    
' → logprob: -5.624782085418701
    4. '
' → logprob: -5.624782085418701
    5. ' dp' → logprob: -6.874782085418701
    6. ' ' → logprob: -6.999782085418701
    7. '<|end|>' → logprob: -6.999782085418701
    8. '	dp' → logprob: -7.624782085418701
    9. '  
' → logprob: -8.499781608581543
    10. '[' → logprob: -8.499781608581543

Token 95: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014365050941705704
    2. ' dp' → logprob: -4.389365196228027
    3. '   ' → logprob: -6.389365196228027
    4. ' for' → logprob: -9.514365196228027
    5. 'for' → logprob: -10.139365196228027
    6. '	dp' → logprob: -10.514365196228027
    7. '[' → logprob: -11.514365196228027
    8. '
' → logprob: -12.139365196228027
    9. '    
' → logprob: -12.139365196228027
    10. ' ' → logprob: -12.514365196228027

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '<|end|>' → logprob: -15.125000953674316
    3. '][' → logprob: -15.375000953674316
    4. ' [' → logprob: -15.500000953674316
    5. '```' → logprob: -15.500000953674316
    6. '[n' → logprob: -15.625000953674316
    7. '[][' → logprob: -16.500001907348633
    8. '}[' → logprob: -16.500001907348633
    9. '\[' → logprob: -16.750001907348633
    10. ')[' → logprob: -16.875001907348633

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014071364421397448
    2. '1' → logprob: -6.626407146453857
    3. '[' → logprob: -9.8764066696167
    4. ' ' → logprob: -10.7514066696167
    5. 'k' → logprob: -12.3764066696167
    6. '][' → logprob: -13.7514066696167
    7. '(' → logprob: -13.8764066696167
    8. '```' → logprob: -14.3764066696167
    9. ']' → logprob: -15.0014066696167
    10. ')' → logprob: -15.3764066696167

Token 98: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007604343118146062
    2. ']' → logprob: -7.375760555267334
    3. ' ][' → logprob: -9.000760078430176
    4. '[' → logprob: -11.750760078430176
    5. '   ' → logprob: -14.125760078430176
    6. '][-' → logprob: -14.250760078430176
    7. '"][' → logprob: -15.375760078430176
    8. ''][' → logprob: -15.500760078430176
    9. ' ]' → logprob: -15.625760078430176
    10. ']][' → logprob: -15.625760078430176

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.125042915344238
    3. 'k' → logprob: -13.500042915344238
    4. '1' → logprob: -14.750042915344238
    5. ']' → logprob: -15.937542915344238
    6. 'n' → logprob: -16.000041961669922
    7. '۰' → logprob: -16.375041961669922
    8. ')' → logprob: -16.937541961669922
    9. '  ' → logprob: -17.250041961669922
    10. '   ' → logprob: -17.437541961669922

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.68022444692906e-05
    2. ' ]' → logprob: -10.000046730041504
    3. ']=' → logprob: -13.500046730041504
    4. '=' → logprob: -17.50004768371582
    5. '`]' → logprob: -17.50004768371582
    6. ']
' → logprob: -18.25004768371582
    7. '']' → logprob: -18.37504768371582
    8. ' ' → logprob: -19.12504768371582
    9. ' =' → logprob: -19.50004768371582
    10. ')' → logprob: -19.75004768371582

Token 101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. '＝' → logprob: -14.75192928314209
    4. ' ' → logprob: -16.501930236816406
    5. '=True' → logprob: -17.626930236816406
    6. '=}' → logprob: -18.001930236816406
    7. '=

' → logprob: -18.251930236816406
    8. '=int' → logprob: -18.251930236816406
    9. '.=' → logprob: -18.626930236816406
    10. ']=' → logprob: -19.126930236816406

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.000019073486328
    4. '  ' → logprob: -19.875019073486328
    5. ' ' → logprob: -19.875019073486328
    6. '۰' → logprob: -20.125019073486328
    7. '00' → logprob: -20.375019073486328
    8. '```' → logprob: -20.875019073486328
    9. '０' → logprob: -21.375019073486328
    10. '000' → logprob: -21.437519073486328

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.625001907348633
    4. '00' → logprob: -19.937501907348633
    5. '000' → logprob: -20.625001907348633
    6. '０' → logprob: -20.812501907348633
    7. '   ' → logprob: -21.000001907348633
    8. 'int' → logprob: -21.125001907348633
    9. '```' → logprob: -21.312501907348633
    10. '1' → logprob: -21.437501907348633

Token 104: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3839949071407318
    2. '
' → logprob: -1.2589949369430542
    3. '<|end|>' → logprob: -3.6339948177337646
    4. ' for' → logprob: -5.758995056152344
    5. '    
' → logprob: -6.133995056152344
    6. 'for' → logprob: -7.258995056152344
    7. '```' → logprob: -7.633995056152344
    8. '  
' → logprob: -7.758995056152344
    9. '\n' → logprob: -7.883995056152344
    10. '' → logprob: -8.258995056152344

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04474225267767906
    2. ' for' → logprob: -3.1697423458099365
    3. 'for' → logprob: -7.419742107391357
    4. '<|end|>' → logprob: -7.544742107391357
    5. '
' → logprob: -7.794742107391357
    6. '    
' → logprob: -9.044742584228516
    7. '	for' → logprob: -10.919742584228516
    8. ' 
' → logprob: -11.044742584228516
    9. '```' → logprob: -11.294742584228516
    10. ' ' → logprob: -11.544742584228516

Token 106: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0021317063365131617
    2. ' for' → logprob: -6.252131938934326
    3. '   ' → logprob: -8.502131462097168
    4. '	for' → logprob: -16.877132415771484
    5. '```' → logprob: -17.252132415771484
    6. 'from' → logprob: -17.377132415771484
    7. ' ' → logprob: -17.627132415771484
    8. '
' → logprob: -19.502132415771484
    9. '    
' → logprob: -19.752132415771484
    10. '``' → logprob: -20.502132415771484

Token 107: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0015581895131617785
    2. 'i' → logprob: -6.501558303833008
    3. ' ' → logprob: -10.251558303833008
    4. ' x' → logprob: -12.126558303833008
    5. '   ' → logprob: -13.001558303833008
    6. ' j' → logprob: -13.126558303833008
    7. '	i' → logprob: -13.126558303833008
    8. ' _' → logprob: -13.251558303833008
    9. ' a' → logprob: -13.751558303833008
    10. ' v' → logprob: -14.126558303833008

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03836895525455475
    2. 'in' → logprob: -3.2883689403533936
    3. ' ' → logprob: -8.663369178771973
    4. ',' → logprob: -9.538369178771973
    5. 'n' → logprob: -11.663369178771973
    6. ' i' → logprob: -11.788369178771973
    7. '   ' → logprob: -11.788369178771973
    8. '  ' → logprob: -11.913369178771973
    9. '	in' → logprob: -11.913369178771973
    10. 'i' → logprob: -12.163369178771973

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16028982400894165
    2. ' range' → logprob: -1.9102897644042969
    3. '   ' → logprob: -10.535289764404297
    4. ' ' → logprob: -10.785289764404297
    5. '(range' → logprob: -12.160289764404297
    6. '  ' → logprob: -12.660289764404297
    7. '    ' → logprob: -13.785289764404297
    8. '	range' → logprob: -13.910289764404297
    9. 'in' → logprob: -14.035289764404297
    10. '[' → logprob: -14.160289764404297

Token 110: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010413920972496271
    2. '(n' → logprob: -9.250103950500488
    3. '1' → logprob: -11.875103950500488
    4. '   ' → logprob: -14.500103950500488
    5. '(k' → logprob: -15.250103950500488
    6. ' (' → logprob: -15.750103950500488
    7. ' ' → logprob: -17.125104904174805
    8. 'n' → logprob: -18.000104904174805
    9. '(x' → logprob: -18.000104904174805
    10. '(
' → logprob: -18.250104904174805

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017275560647249222
    2. 'n' → logprob: -4.142275333404541
    3. 'k' → logprob: -6.767275333404541
    4. '0' → logprob: -9.5172758102417
    5. ' ' → logprob: -12.3922758102417
    6. '   ' → logprob: -12.3922758102417
    7. '(n' → logprob: -13.0172758102417
    8. '(' → logprob: -13.2672758102417
    9. ' n' → logprob: -13.7672758102417
    10. '2' → logprob: -14.3922758102417

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019489870173856616
    2. ',n' → logprob: -6.876948833465576
    3. ' ,' → logprob: -7.001948833465576
    4. 'n' → logprob: -12.376949310302734
    5. '   ' → logprob: -14.501949310302734
    6. ',
' → logprob: -14.626949310302734
    7. ' n' → logprob: -15.751949310302734
    8. '(n' → logprob: -15.876949310302734
    9. '```' → logprob: -16.626949310302734
    10. '1' → logprob: -16.751949310302734

Token 113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002214965643361211
    2. ' n' → logprob: -6.1272149085998535
    3. '   ' → logprob: -10.627215385437012
    4. 'k' → logprob: -12.377215385437012
    5. '(n' → logprob: -15.002215385437012
    6. 'len' → logprob: -15.502215385437012
    7. ' ' → logprob: -15.502215385437012
    8. ')' → logprob: -15.752215385437012
    9. '	n' → logprob: -16.002214431762695
    10. '  ' → logprob: -16.127214431762695

Token 114: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519367039203644
    2. ' +' → logprob: -1.501936674118042
    3. '   ' → logprob: -12.126936912536621
    4. '+k' → logprob: -14.126936912536621
    5. '):
' → logprob: -14.751936912536621
    6. '+n' → logprob: -14.751936912536621
    7. '
' → logprob: -15.376936912536621
    8. '＋' → logprob: -16.376935958862305
    9. ' ' → logprob: -16.501935958862305
    10. '1' → logprob: -16.501935958862305

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '```' → logprob: -15.937931060791016
    4. '   ' → logprob: -16.000431060791016
    5. ')' → logprob: -16.250431060791016
    6. '2' → logprob: -18.062931060791016
    7. '  ' → logprob: -18.500431060791016
    8. '
' → logprob: -18.562931060791016
    9. ' x' → logprob: -18.750431060791016
    10. 'x' → logprob: -19.062931060791016

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.250032424926758
    4. '```' → logprob: -16.250032424926758
    5. ')' → logprob: -16.750032424926758
    6. '
' → logprob: -18.187532424926758
    7. '+' → logprob: -18.750032424926758
    8. '  ' → logprob: -18.750032424926758
    9. '``' → logprob: -19.375032424926758
    10. '2' → logprob: -19.437532424926758

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03818390145897865
    2. '):
' → logprob: -3.2881839275360107
    3. ':' → logprob: -9.78818416595459
    4. ')' → logprob: -10.16318416595459
    5. '   ' → logprob: -10.28818416595459
    6. '):
' → logprob: -11.53818416595459
    7. '       ' → logprob: -13.41318416595459
    8. ' ):' → logprob: -13.41318416595459
    9. 'for' → logprob: -15.53818416595459
    10. '}:' → logprob: -15.66318416595459

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06263815611600876
    2. ' for' → logprob: -2.8126380443573
    3. '   ' → logprob: -7.937638282775879
    4. 'for' → logprob: -8.312638282775879
    5. '    ' → logprob: -10.812638282775879
    6. ' ' → logprob: -10.812638282775879
    7. '	   ' → logprob: -11.937638282775879
    8. '	for' → logprob: -12.437638282775879
    9. '```' → logprob: -12.687638282775879
    10. '     ' → logprob: -12.812638282775879

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11408428847789764
    2. 'for' (adapté à ' for') → logprob: -2.239084243774414
    3. '   ' → logprob: -6.989084243774414
    4. '       ' → logprob: -8.114084243774414
    5. ' ' → logprob: -10.989084243774414
    6. '    ' → logprob: -11.364084243774414
    7. '	for' → logprob: -11.614084243774414
    8. '```' → logprob: -14.114084243774414
    9. '     ' → logprob: -14.989084243774414
    10. ' ' → logprob: -15.364084243774414

Token 120: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.48052406311035156
    2. 'j' → logprob: -1.6055240631103516
    3. ' y' → logprob: -2.4805240631103516
    4. ' j' → logprob: -3.9805240631103516
    5. 'i' → logprob: -4.230524063110352
    6. 'd' → logprob: -5.230524063110352
    7. 'c' → logprob: -5.480524063110352
    8. 'jump' → logprob: -5.480524063110352
    9. 'm' → logprob: -5.605524063110352
    10. 'r' → logprob: -5.730524063110352

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011757015017792583
    2. 'in' → logprob: -6.751175880432129
    3. ' ' → logprob: -12.501175880432129
    4. 'range' → logprob: -13.876175880432129
    5. '1' → logprob: -15.751175880432129
    6. '0' → logprob: -16.001174926757812
    7. 'In' → logprob: -16.501174926757812
    8. ')' → logprob: -16.501174926757812
    9. 'n' → logprob: -16.626174926757812
    10. ',' → logprob: -16.626174926757812

Token 122: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4287564754486084
    2. 'range' → logprob: -1.0537564754486084
    3. '(range' → logprob: -10.303756713867188
    4. ' ' → logprob: -11.428756713867188
    5. '   ' → logprob: -13.178756713867188
    6. '0' → logprob: -13.803756713867188
    7. '	range' → logprob: -13.803756713867188
    8. 'n' → logprob: -13.928756713867188
    9. '
' → logprob: -14.428756713867188
    10. ' xrange' → logprob: -14.428756713867188

Token 123: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.2808268666267395
    2. '(' → logprob: -1.7808268070220947
    3. '(n' → logprob: -3.2808268070220947
    4. '(x' → logprob: -3.2808268070220947
    5. '(min' → logprob: -7.905827045440674
    6. '(max' → logprob: -8.030826568603516
    7. '((' → logprob: -8.280826568603516
    8. '(len' → logprob: -8.905826568603516
    9. '(y' → logprob: -10.655826568603516
    10. '0' → logprob: -11.280826568603516

Token 124: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22266077995300293
    2. ' n' → logprob: -2.722660779953003
    3. '0' → logprob: -3.097660779953003
    4. 'min' → logprob: -3.597660779953003
    5. 'k' → logprob: -4.097661018371582
    6. '(n' → logprob: -4.222661018371582
    7. ' min' → logprob: -4.722661018371582
    8. '1' → logprob: -4.722661018371582
    9. ' ' → logprob: -5.972661018371582
    10. '(' → logprob: -6.097661018371582

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010711929644457996
    2. ' ,' → logprob: -9.375106811523438
    3. ',n' → logprob: -11.500106811523438
    4. ',k' → logprob: -11.875106811523438
    5. ',x' → logprob: -12.750106811523438
    6. '   ' → logprob: -14.000106811523438
    7. 'k' → logprob: -14.625106811523438
    8. 'n' → logprob: -15.625106811523438
    9. ',y' → logprob: -16.250106811523438
    10. '(n' → logprob: -16.375106811523438

Token 126: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3002963066101074
    2. 'min' → logprob: -1.6752963066101074
    3. ' n' → logprob: -3.1752963066101074
    4. ' min' → logprob: -3.5502963066101074
    5. '(n' → logprob: -7.300296306610107
    6. 'len' → logprob: -7.550296306610107
    7. '(min' → logprob: -8.800296783447266
    8. 'k' → logprob: -9.175296783447266
    9. ' (' → logprob: -9.800296783447266
    10. 'x' → logprob: -10.175296783447266

Token 127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18461838364601135
    2. '-' → logprob: -1.934618353843689
    3. '-k' → logprob: -4.1846184730529785
    4. '+' → logprob: -4.8096184730529785
    5. ' +' → logprob: -7.3096184730529785
    6. ' ' → logprob: -10.68461799621582
    7. '   ' → logprob: -11.43461799621582
    8. '
' → logprob: -12.30961799621582
    9. '-n' → logprob: -12.43461799621582
    10. '-K' → logprob: -13.43461799621582

Token 128: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.988221684878226e-06
    2. ' k' → logprob: -12.000006675720215
    3. 'x' → logprob: -14.250006675720215
    4. '-k' → logprob: -16.50000762939453
    5. 'kx' → logprob: -18.00000762939453
    6. '(k' → logprob: -18.12500762939453
    7. '   ' → logprob: -18.37500762939453
    8. '	k' → logprob: -19.00000762939453
    9. 'y' → logprob: -19.12500762939453
    10. '(' → logprob: -20.12500762939453

Token 129: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2811569273471832
    2. ' +' → logprob: -1.4061568975448608
    3. ' ' → logprob: -12.906156539916992
    4. '    ' → logprob: -14.281156539916992
    5. '   ' → logprob: -14.406156539916992
    6. '＋' → logprob: -14.906156539916992
    7. '```' → logprob: -15.156156539916992
    8. ')' → logprob: -15.281156539916992
    9. '+k' → logprob: -15.281156539916992
    10. ')+' → logprob: -15.406156539916992

Token 130: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07052817195653915
    2. '1' → logprob: -2.695528268814087
    3. ' ' → logprob: -7.445528030395508
    4. '
' → logprob: -13.070528030395508
    5. '   ' → logprob: -13.633028030395508
    6. 'x' → logprob: -14.508028030395508
    7. '

' → logprob: -14.570528030395508
    8. '```' → logprob: -14.633028030395508
    9. 'y' → logprob: -14.758028030395508
    10. ' y' → logprob: -14.883028030395508

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231534838676453
    2. '2' → logprob: -0.8981534838676453
    3. ' ' → logprob: -10.648153305053711
    4. '3' → logprob: -13.773153305053711
    5. '0' → logprob: -14.085653305053711
    6. '```' → logprob: -14.210653305053711
    7. '
' → logprob: -14.273153305053711
    8. '   ' → logprob: -14.585653305053711
    9. 'x' → logprob: -14.710653305053711
    10. 'y' → logprob: -14.773153305053711

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47413378953933716
    2. '):
' → logprob: -0.9741337895393372
    3. '+' → logprob: -10.349133491516113
    4. ')' → logprob: -11.349133491516113
    5. '):
' → logprob: -11.849133491516113
    6. ':' → logprob: -13.599133491516113
    7. '   ' → logprob: -13.974133491516113
    8. ' ):' → logprob: -14.099133491516113
    9. '       ' → logprob: -14.224133491516113
    10. ' ):
' → logprob: -14.349133491516113

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034440599381923676
    2. '       ' → logprob: -4.034440517425537
    3. '<|end|>' → logprob: -4.534440517425537
    4. ':' → logprob: -6.159440517425537
    5. ' if' → logprob: -6.409440517425537
    6. '        ' → logprob: -7.659440517425537
    7. '               ' → logprob: -8.409440994262695
    8. ',' → logprob: -8.409440994262695
    9. '<|end|>' → logprob: -8.659440994262695
    10. '            ' → logprob: -9.534440994262695

Token 134: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.0714222192764282
    2. 'if' → logprob: -1.1964222192764282
    3. ' if' → logprob: -1.8214222192764282
    4. 'for' → logprob: -2.1964221000671387
    5. ' for' → logprob: -2.9464221000671387
    6. ' dp' → logprob: -4.071422100067139
    7. 'cost' → logprob: -5.321422100067139
    8. '           ' → logprob: -5.321422100067139
    9. '               ' → logprob: -6.321422100067139
    10. ' cost' → logprob: -7.446422100067139

Token 135: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.625004768371582
    3. 'x' → logprob: -14.250004768371582
    4. ' [' → logprob: -14.875004768371582
    5. '][' → logprob: -16.2500057220459
    6. ')[' → logprob: -16.2500057220459
    7. '[
' → logprob: -16.6250057220459
    8. '[i' → logprob: -16.6250057220459
    9. ' x' → logprob: -16.8750057220459
    10. '\[' → logprob: -16.8750057220459

Token 136: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005515365395694971
    2. '-' → logprob: -5.6305155754089355
    3. ']' → logprob: -6.6305155754089355
    4. '[' → logprob: -9.005515098571777
    5. '[y' → logprob: -9.005515098571777
    6. '[x' → logprob: -9.380515098571777
    7. ' ][' → logprob: -9.505515098571777
    8. '   ' → logprob: -10.255515098571777
    9. ' -' → logprob: -10.380515098571777
    10. '])' → logprob: -10.755515098571777

Token 137: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.236549335066229e-05
    2. ' y' → logprob: -10.875021934509277
    3. '   ' → logprob: -14.000021934509277
    4. '0' → logprob: -14.125021934509277
    5. ' ' → logprob: -14.500021934509277
    6. 'max' → logprob: -15.000021934509277
    7. 'x' → logprob: -15.375021934509277
    8. '(y' → logprob: -16.125022888183594
    9. '	y' → logprob: -16.125022888183594
    10. ']' → logprob: -16.375022888183594

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2045203000307083
    2. ' =' → logprob: -1.829520344734192
    3. '=' → logprob: -4.329520225524902
    4. ']=' → logprob: -4.579520225524902
    5. ' ]' → logprob: -7.079520225524902
    6. 'if' → logprob: -9.204520225524902
    7. 'min' → logprob: -10.704520225524902
    8. '=min' → logprob: -10.954520225524902
    9. 'dp' → logprob: -11.454520225524902
    10. '   ' → logprob: -11.829520225524902

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806134685873985
    2. '=' → logprob: -3.2880613803863525
    3. '=min' → logprob: -10.913061141967773
    4. 'min' → logprob: -13.913061141967773
    5. '   ' → logprob: -15.538061141967773
    6. ',' → logprob: -16.038061141967773
    7. '=
' → logprob: -16.663061141967773
    8. ' ' → logprob: -17.038061141967773
    9. '```' → logprob: -17.288061141967773
    10. '    ' → logprob: -17.538061141967773

Token 140: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13278819620609283
    2. 'dp' → logprob: -2.1327881813049316
    3. ' min' → logprob: -5.382788181304932
    4. 'INF' → logprob: -7.507788181304932
    5. ' dp' → logprob: -7.882788181304932
    6. 'max' → logprob: -9.00778865814209
    7. 'inf' → logprob: -10.13278865814209
    8. '0' → logprob: -10.25778865814209
    9. '   ' → logprob: -10.38278865814209
    10. '	min' → logprob: -10.88278865814209

Token 141: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.020936548709869385
    2. '(' → logprob: -4.020936489105225
    3. '(
' → logprob: -5.895936489105225
    4. 'dp' → logprob: -10.895936965942383
    5. '(

' → logprob: -11.395936965942383
    6. '([' → logprob: -14.020936965942383
    7. '(
' → logprob: -14.270936965942383
    8. ' (' → logprob: -15.270936965942383
    9. '	dp' → logprob: -15.520936965942383
    10. ' dp' → logprob: -15.770936965942383

Token 142: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -14.500001907348633
    3. '][' → logprob: -14.625001907348633
    4. '
' → logprob: -15.500001907348633
    5. '[' → logprob: -15.625001907348633
    6. ' ' → logprob: -15.875001907348633
    7. 'x' → logprob: -16.125001907348633
    8. 'dp' → logprob: -16.625001907348633
    9. '   ' → logprob: -16.875001907348633
    10. '[
' → logprob: -16.875001907348633

Token 143: '0' (ID: 15)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.812470555305481
    2. '[x' → logprob: -0.937470555305481
    3. '-' → logprob: -1.812470555305481
    4. ' -' → logprob: -6.812470436096191
    5. 'x' → logprob: -9.312470436096191
    6. ']' → logprob: -10.187470436096191
    7. '-x' → logprob: -10.312470436096191
    8. '[' → logprob: -10.562470436096191
    9. '[y' → logprob: -11.187470436096191
    10. '   ' → logprob: -11.437470436096191

Token 144: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05530987307429314
    2. '-' → logprob: -3.430309772491455
    3. '[y' → logprob: -4.430309772491455
    4. '[x' → logprob: -5.055309772491455
    5. '1' → logprob: -7.055309772491455
    6. ' -' → logprob: -7.180309772491455
    7. '[' → logprob: -7.305309772491455
    8. 'y' → logprob: -7.805309772491455
    9. ']' → logprob: -8.805310249328613
    10. 'x' → logprob: -9.055310249328613

Token 145: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01350547093898058
    2. ' y' → logprob: -4.388505458831787
    3. '][' → logprob: -8.138505935668945
    4. '[y' → logprob: -8.763505935668945
    5. 'x' → logprob: -8.888505935668945
    6. '(y' → logprob: -9.013505935668945
    7. ']' → logprob: -9.013505935668945
    8. '   ' → logprob: -10.263505935668945
    9. 'k' → logprob: -10.888505935668945
    10. 'j' → logprob: -11.326005935668945

Token 146: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3401576578617096
    2. ']' → logprob: -1.3401576280593872
    3. ' -' → logprob: -3.7151577472686768
    4. ']+' → logprob: -6.965157508850098
    5. '])' → logprob: -7.340157508850098
    6. '],' → logprob: -7.840157508850098
    7. ' ]' → logprob: -9.840157508850098
    8. '[' → logprob: -10.590157508850098
    9. '1' → logprob: -11.090157508850098
    10. '][' → logprob: -11.215157508850098

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012023169983876869
    2. ' ' → logprob: -9.125120162963867
    3. ']' → logprob: -12.250120162963867
    4. '   ' → logprob: -13.000120162963867
    5. '
' → logprob: -14.312620162963867
    6. '           ' → logprob: -14.625120162963867
    7. '-' → logprob: -15.000120162963867
    8. '0' → logprob: -15.062620162963867
    9. ')' → logprob: -15.250120162963867
    10. '])' → logprob: -15.250120162963867

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.87508487701416
    3. ']' → logprob: -11.37508487701416
    4. '0' → logprob: -11.87508487701416
    5. '   ' → logprob: -12.43758487701416
    6. '])' → logprob: -12.81258487701416
    7. '```' → logprob: -14.25008487701416
    8. ')' → logprob: -14.31258487701416
    9. ']+' → logprob: -14.50008487701416
    10. '  ' → logprob: -14.68758487701416

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002457238151691854
    2. ']+' → logprob: -8.375246047973633
    3. '],' → logprob: -12.500246047973633
    4. ' ]' → logprob: -12.750246047973633
    5. 'x' → logprob: -13.250246047973633
    6. '+' → logprob: -13.375246047973633
    7. ')' → logprob: -14.000246047973633
    8. '])' → logprob: -14.000246047973633
    9. '[x' → logprob: -14.375246047973633
    10. '[' → logprob: -14.375246047973633

Token 150: ' +' (ID: 659)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5711084008216858
    2. ']' → logprob: -0.9461084008216858
    3. ' +' → logprob: -4.571108341217041
    4. '[' → logprob: -4.696108341217041
    5. ']+' → logprob: -5.321108341217041
    6. '+' → logprob: -5.446108341217041
    7. ',' → logprob: -5.696108341217041
    8. '-' → logprob: -5.696108341217041
    9. '][' → logprob: -5.821108341217041
    10. ' -' → logprob: -5.821108341217041

Token 151: ' max' (ID: 2999)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.31773990392684937
    2. ' abs' → logprob: -1.3177399635314941
    3. '(abs' → logprob: -5.692739963531494
    4. ' (' → logprob: -7.317739963531494
    5. ' ' → logprob: -8.442739486694336
    6. '(H' → logprob: -9.192739486694336
    7. '(' → logprob: -10.442739486694336
    8. '
' → logprob: -10.942739486694336
    9. '   ' → logprob: -11.067739486694336
    10. '  ' → logprob: -11.567739486694336

Token 152: '(' (ID: 7)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.08119908720254898
    2. '(H' → logprob: -3.4561991691589355
    3. '(' → logprob: -3.7061991691589355
    4. 'abs' → logprob: -3.8311991691589355
    5. ' abs' → logprob: -9.956198692321777
    6. '(
' → logprob: -9.956198692321777
    7. '0' → logprob: -10.956198692321777
    8. '(i' → logprob: -11.081198692321777
    9. '_abs' → logprob: -11.331198692321777
    10. '((' → logprob: -12.081198692321777

Token 153: '0' (ID: 15)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3647893965244293
    2. '(abs' → logprob: -1.864789366722107
    3. '(H' → logprob: -2.3647894859313965
    4. '0' → logprob: -3.6147894859313965
    5. '(' → logprob: -3.9897894859313965
    6. 'H' → logprob: -4.8647894859313965
    7. ' abs' → logprob: -6.1147894859313965
    8. ')' → logprob: -7.3647894859313965
    9. '(
' → logprob: -8.364789009094238
    10. '[' → logprob: -9.239789009094238

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034860897809267044
    2. ',H' → logprob: -4.159861087799072
    3. ' ,' → logprob: -5.534861087799072
    4. 'H' → logprob: -5.534861087799072
    5. ',x' → logprob: -5.784861087799072
    6. '],' → logprob: -5.784861087799072
    7. '][' → logprob: -6.409861087799072
    8. ']' → logprob: -6.909861087799072
    9. 'x' → logprob: -7.534861087799072
    10. '(H' → logprob: -8.409860610961914

Token 155: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004184059798717499
    2. ' H' → logprob: -5.504184246063232
    3. '(H' → logprob: -10.129183769226074
    4. 'abs' → logprob: -10.254183769226074
    5. 'x' → logprob: -11.879183769226074
    6. ')' → logprob: -12.254183769226074
    7. '   ' → logprob: -12.754183769226074
    8. ' abs' → logprob: -13.129183769226074
    9. ' ' → logprob: -13.504183769226074
    10. 'Hx' → logprob: -13.816683769226074

Token 156: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0006067678914405406
    2. 'x' → logprob: -7.625606536865234
    3. '[' → logprob: -9.500606536865234
    4. ']' → logprob: -10.875606536865234
    5. '][' → logprob: -12.125606536865234
    6. '[
' → logprob: -12.375606536865234
    7. ' x' → logprob: -12.500606536865234
    8. '(x' → logprob: -13.250606536865234
    9. ')x' → logprob: -13.250606536865234
    10. '
' → logprob: -13.500606536865234

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055222444236278534
    2. ']-' → logprob: -2.930222511291504
    3. '-' → logprob: -8.055222511291504
    4. ' -' → logprob: -11.055222511291504
    5. ' ]' → logprob: -13.180222511291504
    6. '0' → logprob: -14.180222511291504
    7. ']+' → logprob: -14.180222511291504
    8. ']
' → logprob: -14.805222511291504
    9. ' ' → logprob: -14.930222511291504
    10. '   ' → logprob: -15.055222511291504

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2877873182296753
    2. ' -' → logprob: -1.5377873182296753
    3. ']' → logprob: -3.412787437438965
    4. ']-' → logprob: -6.162787437438965
    5. '-H' → logprob: -9.787787437438965
    6. 'x' → logprob: -10.412787437438965
    7. '-x' → logprob: -10.537787437438965
    8. '[' → logprob: -11.162787437438965
    9. ')' → logprob: -12.037787437438965
    10. ' ' → logprob: -12.287787437438965

Token 159: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.431207682704553e-05
    2. ' H' → logprob: -10.125054359436035
    3. 'x' → logprob: -11.875054359436035
    4. ']' → logprob: -12.625054359436035
    5. ')' → logprob: -13.375054359436035
    6. '[' → logprob: -14.375054359436035
    7. 'Hx' → logprob: -14.875054359436035
    8. '])' → logprob: -15.000054359436035
    9. '[x' → logprob: -15.125054359436035
    10. '   ' → logprob: -15.625054359436035

Token 160: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0027020431589335203
    2. 'x' → logprob: -6.377702236175537
    3. '[' → logprob: -7.877702236175537
    4. '][' → logprob: -8.127701759338379
    5. ']' → logprob: -9.502701759338379
    6. '])' → logprob: -9.627701759338379
    7. '0' → logprob: -9.627701759338379
    8. '[
' → logprob: -10.752701759338379
    9. '(x' → logprob: -10.752701759338379
    10. '
' → logprob: -10.877701759338379

Token 161: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08009054511785507
    2. '0' → logprob: -2.7050905227661133
    3. ' -' → logprob: -5.455090522766113
    4. '1' → logprob: -6.080090522766113
    5. '])' → logprob: -6.205090522766113
    6. ']' → logprob: -7.330090522766113
    7. '-x' → logprob: -8.205090522766113
    8. ']])' → logprob: -8.580090522766113
    9. 'x' → logprob: -9.330090522766113
    10. ')])' → logprob: -9.455090522766113

Token 162: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4058338403701782
    2. ')' → logprob: -1.1558338403701782
    3. ']' → logprob: -4.905833721160889
    4. ')])' → logprob: -5.030833721160889
    5. 'x' → logprob: -6.905833721160889
    6. ')]' → logprob: -7.405833721160889
    7. ' )' → logprob: -7.405833721160889
    8. ' ])' → logprob: -7.780833721160889
    9. '[x' → logprob: -8.030834197998047
    10. ']))' → logprob: -8.155834197998047

Token 163: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9563981890678406
    2. ')' → logprob: -1.4563982486724854
    3. 'for' → logprob: -2.3313982486724854
    4. '0' → logprob: -2.4563982486724854
    5. '[x' → logprob: -2.9563982486724854
    6. 'x' → logprob: -3.3313982486724854
    7. ',' → logprob: -3.4563982486724854
    8. ' ' → logprob: -3.7063982486724854
    9. '   ' → logprob: -4.081398010253906
    10. '(x' → logprob: -4.581398010253906

Token 164: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05491793900728226
    2. 'x' → logprob: -2.929918050765991
    3. ' range' → logprob: -11.30491828918457
    4. ' ' → logprob: -11.80491828918457
    5. '0' → logprob: -11.92991828918457
    6. ' xrange' → logprob: -13.05491828918457
    7. '_x' → logprob: -13.17991828918457
    8. ')x' → logprob: -14.05491828918457
    9. '```' → logprob: -14.30491828918457
    10. ' in' → logprob: -14.55491828918457

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.052611757069826126
    2. '_' → logprob: -3.802611827850342
    3. ' in' → logprob: -3.802611827850342
    4. 'in' → logprob: -5.052611827850342
    5. '_x' → logprob: -9.302611351013184
    6. 'x' → logprob: -9.427611351013184
    7. '_in' → logprob: -10.052611351013184
    8. ' ' → logprob: -12.052611351013184
    9. 'o' → logprob: -12.927611351013184
    10. '```' → logprob: -13.177611351013184

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005255695432424545
    2. 'in' → logprob: -5.255255699157715
    3. ' ' → logprob: -11.130255699157715
    4. ')' → logprob: -13.130255699157715
    5. 'range' → logprob: -13.255255699157715
    6. '<|end|>' → logprob: -13.630255699157715
    7. 'import' → logprob: -14.005255699157715
    8. 'x' → logprob: -15.005255699157715
    9. 's' → logprob: -15.630255699157715
    10. '	in' → logprob: -16.1302547454834

Token 167: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006719640456140041
    2. ' range' → logprob: -5.006719589233398
    3. '(range' → logprob: -12.506719589233398
    4. ')' → logprob: -15.256719589233398
    5. '	range' → logprob: -16.2567195892334
    6. ' xrange' → logprob: -16.3817195892334
    7. '[' → logprob: -16.5067195892334
    8. 'x' → logprob: -18.1317195892334
    9. ' ' → logprob: -18.7567195892334
    10. '```' → logprob: -18.8817195892334

Token 168: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006055758567526937
    2. '(max' → logprob: -7.500605583190918
    3. '(' → logprob: -9.875605583190918
    4. 'max' → logprob: -14.375605583190918
    5. 'x' → logprob: -15.500605583190918
    6. '[x' → logprob: -16.1256046295166
    7. '(y' → logprob: -16.5006046295166
    8. '(k' → logprob: -16.7506046295166
    9. '{x' → logprob: -17.2506046295166
    10. '((' → logprob: -17.2506046295166

Token 169: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20880407094955444
    2. '))' → logprob: -1.7088041305541992
    3. '-' → logprob: -5.458804130554199
    4. ')))' → logprob: -6.583804130554199
    5. '0' → logprob: -6.958804130554199
    6. ' -' → logprob: -8.3338041305542
    7. ' )' → logprob: -9.0838041305542
    8. '   ' → logprob: -9.7088041305542
    9. ' ' → logprob: -9.7088041305542
    10. '<|end|>' → logprob: -9.8338041305542

Token 170: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4802117347717285
    2. '<|end|>' → logprob: -0.9802117347717285
    3. '[' → logprob: -5.6052117347717285
    4. '   ' → logprob: -7.2302117347717285
    5. ' ' → logprob: -7.8552117347717285
    6. '[x' → logprob: -7.9802117347717285
    7. '<|end|>' → logprob: -8.35521125793457
    8. '
' → logprob: -8.98021125793457
    9. ' )' → logprob: -9.48021125793457
    10. '(x' → logprob: -9.73021125793457

Token 171: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '(min' (ID: 26035)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.31973984837532043
    2. '(' → logprob: -1.319739818572998
    3. '(sum' → logprob: -5.444739818572998
    4. '(max' → logprob: -7.319739818572998
    5. '(min' → logprob: -7.444739818572998
    6. '()' → logprob: -7.694739818572998
    7. '(np' → logprob: -8.319740295410156
    8. '(
' → logprob: -9.569740295410156
    9. ' (' → logprob: -9.944740295410156
    10. '(len' → logprob: -10.194740295410156

Token 173: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00017040544480551034
    2. '(' → logprob: -9.000170707702637
    3. 'dp' → logprob: -10.125170707702637
    4. ')' → logprob: -13.250170707702637
    5. '(
' → logprob: -13.250170707702637
    6. ' dp' → logprob: -13.625170707702637
    7. '([' → logprob: -14.000170707702637
    8. ' (' → logprob: -14.375170707702637
    9. '	dp' → logprob: -15.500170707702637
    10. '(df' → logprob: -16.00016975402832

Token 174: '[x' (ID: 17295)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.106736039626412e-05
    2. '[-' → logprob: -10.625031471252441
    3. '[len' → logprob: -12.250031471252441
    4. '[' → logprob: -14.000031471252441
    5. '(n' → logprob: -14.875031471252441
    6. '[N' → logprob: -15.000031471252441
    7. '   ' → logprob: -16.250030517578125
    8. 'n' → logprob: -16.750030517578125
    9. '```' → logprob: -17.125030517578125
    10. ')' → logprob: -17.125030517578125

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.058971550315618515
    2. '][-' → logprob: -2.933971643447876
    3. '[n' → logprob: -5.683971405029297
    4. '[-' → logprob: -7.433971405029297
    5. ']' → logprob: -11.058971405029297
    6. '[len' → logprob: -11.183971405029297
    7. ' ][' → logprob: -11.308971405029297
    8. '[x' → logprob: -11.683971405029297
    9. '])' → logprob: -11.808971405029297
    10. '][:' → logprob: -12.058971405029297

Token 176: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019917825236916542
    2. '(n' → logprob: -4.019917964935303
    3. '-' → logprob: -7.269917964935303
    4. '-n' → logprob: -8.019917488098145
    5. '[n' → logprob: -8.144917488098145
    6. ' n' → logprob: -8.394917488098145
    7. '
' → logprob: -10.019917488098145
    8. ',n' → logprob: -10.769917488098145
    9. '[-' → logprob: -10.769917488098145
    10. ' -' → logprob: -10.894917488098145

Token 177: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.06294099241495132
    2. ' -' → logprob: -2.937941074371338
    3. '-' → logprob: -5.062941074371338
    4. '][' → logprob: -6.437941074371338
    5. 'k' → logprob: -10.06294059753418
    6. ']' → logprob: -11.18794059753418
    7. '])' → logprob: -11.81294059753418
    8. '-n' → logprob: -12.31294059753418
    9. ')][' → logprob: -12.31294059753418
    10. ' ' → logprob: -12.75044059753418

Token 178: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.672236824873835e-05
    2. ' k' → logprob: -9.500076293945312
    3. '   ' → logprob: -15.000076293945312
    4. '_k' → logprob: -15.250076293945312
    5. '	k' → logprob: -15.250076293945312
    6. '1' → logprob: -15.750076293945312
    7. 'x' → logprob: -15.750076293945312
    8. ' ' → logprob: -16.062576293945312
    9. '(k' → logprob: -16.062576293945312
    10. '-k' → logprob: -16.250076293945312

Token 179: ']' (ID: 60)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.2833094000816345
    2. ']' → logprob: -1.5333094596862793
    3. '])' → logprob: -4.033309459686279
    4. '+' → logprob: -5.158309459686279
    5. ']))
' → logprob: -5.158309459686279
    6. '   ' → logprob: -7.908309459686279
    7. ' ]' → logprob: -8.283308982849121
    8. ']))

' → logprob: -8.533308982849121
    9. '],' → logprob: -8.783308982849121
    10. '][' → logprob: -9.033308982849121

Token 180: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07886654138565063
    2. 'for' → logprob: -3.703866481781006
    3. ' for' → logprob: -3.953866481781006
    4. '])' → logprob: -4.078866481781006
    5. '))' → logprob: -4.328866481781006
    6. '[x' → logprob: -7.328866481781006
    7. ']' → logprob: -7.453866481781006
    8. ' )' → logprob: -8.078866958618164
    9. '   ' → logprob: -9.703866958618164
    10. '[' → logprob: -9.703866958618164

Token 181: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019286326132714748
    2. ' x' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.501928329467773
    4. '	x' → logprob: -18.501928329467773
    5. ')x' → logprob: -18.751928329467773
    6. '```' → logprob: -19.501928329467773
    7. '
' → logprob: -20.001928329467773
    8. ')' → logprob: -20.751928329467773
    9. '"x' → logprob: -21.001928329467773
    10. ',x' → logprob: -21.001928329467773

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023257475346326828
    2. 'in' → logprob: -3.7732574939727783
    3. 'range' → logprob: -11.6482572555542
    4. ' ' → logprob: -13.1482572555542
    5. 'x' → logprob: -15.1482572555542
    6. ')' → logprob: -15.2732572555542
    7. ' range' → logprob: -15.5232572555542
    8. 'n' → logprob: -16.023258209228516
    9. '```' → logprob: -16.023258209228516
    10. '  ' → logprob: -16.273258209228516

Token 183: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -16.90475082397461
    4. ' ' → logprob: -19.77975082397461
    5. '   ' → logprob: -19.90475082397461
    6. 'r' → logprob: -19.90475082397461
    7. '	range' → logprob: -20.52975082397461
    8. '  ' → logprob: -21.40475082397461
    9. 'rang' → logprob: -21.40475082397461
    10. 'ran' → logprob: -21.90475082397461

Token 184: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2519313097000122
    2. '(' → logprob: -1.5019313097000122
    3. '(k' → logprob: -13.876931190490723
    4. '(len' → logprob: -13.876931190490723
    5. '1' → logprob: -15.876931190490723
    6. ' (' → logprob: -16.37693214416504
    7. '(
' → logprob: -16.62693214416504
    8. '((' → logprob: -18.00193214416504
    9. 'n' → logprob: -18.00193214416504
    10. ' ' → logprob: -18.50193214416504

Token 185: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061968810856342316
    2. ' +' → logprob: -2.8119688034057617
    3. '+
' → logprob: -14.186968803405762
    4. '+n' → logprob: -15.311968803405762
    5. '   ' → logprob: -16.061969757080078
    6. '+x' → logprob: -17.061969757080078
    7. '))' → logprob: -17.311969757080078
    8. '1' → logprob: -17.311969757080078
    9. ' +
' → logprob: -17.436969757080078
    10. '+k' → logprob: -18.186969757080078

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '2' → logprob: -15.750007629394531
    4. '0' → logprob: -16.12500762939453
    5. '   ' → logprob: -17.18750762939453
    6. '
' → logprob: -17.68750762939453
    7. '```' → logprob: -17.75000762939453
    8. '3' → logprob: -19.00000762939453
    9. ')' → logprob: -19.00000762939453
    10. '7' → logprob: -19.06250762939453

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.000003814697266
    3. '2' → logprob: -14.500003814697266
    4. '+' → logprob: -15.250003814697266
    5. '0' → logprob: -15.875003814697266
    6. '(' → logprob: -17.125003814697266
    7. '(n' → logprob: -17.437503814697266
    8. '```' → logprob: -17.500003814697266
    9. '
' → logprob: -18.187503814697266
    10. 'n' → logprob: -18.875003814697266

Token 188: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -8.53050296427682e-05
    2. ')' → logprob: -9.50008487701416
    3. ')))' → logprob: -11.75008487701416
    4. '))
' → logprob: -13.12508487701416
    5. ' ))' → logprob: -15.12508487701416
    6. '   ' → logprob: -15.75008487701416
    7. ')
' → logprob: -17.625085830688477
    8. ' ' → logprob: -18.125085830688477
    9. '])' → logprob: -18.250085830688477
    10. '),' → logprob: -18.625085830688477

Token 189: 'resolve' (ID: 31567)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26927345991134644
    2. '[' → logprob: -2.644273519515991
    3. ' ' → logprob: -2.894273519515991
    4. '<|end|>' → logprob: -2.894273519515991
    5. '(' → logprob: -3.769273519515991
    6. ':' → logprob: -4.019273281097412
    7. '   ' → logprob: -5.644273281097412
    8. '
' → logprob: -5.769273281097412
    9. '```' → logprob: -7.394273281097412
    10. '' → logprob: -7.394273281097412

Token 190: '()' (ID: 416)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04391138628125191
    2. ')' → logprob: -3.2939114570617676
    3. ' ' → logprob: -6.418911457061768
    4. ']' → logprob: -6.918911457061768
    5. '[x' → logprob: -7.168911457061768
    6. '\[' → logprob: -7.793911457061768
    7. '<|end|>' → logprob: -7.918911457061768
    8. '```' → logprob: -8.04391098022461
    9. ',' → logprob: -8.16891098022461
    10. '.' → logprob: -8.54391098022461


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 188
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 161
Précision stricte (1ère position): 48.94%
Précision adaptée (1ère position): 51.06%
Précision (top 10): 85.64%
================================================================================
