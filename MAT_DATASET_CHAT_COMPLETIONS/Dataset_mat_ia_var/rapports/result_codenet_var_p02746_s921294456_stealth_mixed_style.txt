================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_abs(x): 
    return abs(x)
# helper with lambda + inline arithmetic
get_s = lambda t, i: 0 - -t // (3 ** i)
def m(a, b, c, d):
    ## list+max+comprehension (functionnal-ish)
    j_max = max([
        i for i in range(30)
        if get_s(a, i) == get_s(c, i) and get_s(a, i) % 3 == 2 and 1 < get_abs(get_s(b, i) - get_s(d, i))
    ] + [-1]) + 1
    return j_max

# mix old-style for, lambda, list, 1-liners, and normal func
for ___ in range(eval(input())):
    l = list(map(int, input().split()))
    a, b, c, d = (l[0], l[1], l[2], l[3])
    res1 = m(a, b, c, d)
    res2 = m(b, a, d, c)
    if res1==res2==0:
        # one-liner
        print(abs(a - c) + abs(b - d)); continue
    # inline 'if'
    if res1 < res2:
        a, b, c, d = b, a, d, c
        res1 = res2
    iii = 3 ** res1 // 3
    xx = 2*iii + 1
    ## haphazard math mixed with variable mutation and spaghetti assignment
    shift = a - ((a-1) % (3 * iii)) - 1
    a = a - shift
    c = c - shift
    total = get_abs(b - d) + min(get_abs(iii - a) + get_abs(iii - c), get_abs(xx - a) + get_abs(xx - c))
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_abs' (ID: 81310)
  → Token d'amorce (pas de prédiction)

Token 3: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7634077668190002
    2. '_' → logprob: -0.7634077668190002
    3. '(_' → logprob: -3.3884077072143555
    4. 'ol' → logprob: -3.7634077072143555
    5. '(_)' → logprob: -5.5134077072143555
    6. '('_' → logprob: -6.5134077072143555
    7. '```' → logprob: -6.5134077072143555
    8. '_(' → logprob: -7.0134077072143555
    9. '_val' → logprob: -7.0134077072143555
    10. '_tol' → logprob: -7.3884077072143555

Token 4: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47410809993743896
    2. ')' → logprob: -0.974108099937439
    3. '):
' → logprob: -11.47410774230957
    4. '*' → logprob: -12.97410774230957
    5. ')**' → logprob: -13.09910774230957
    6. ':' → logprob: -13.47410774230957
    7. ')：' → logprob: -13.47410774230957
    8. '(x' → logprob: -13.59910774230957
    9. ''):' → logprob: -13.72410774230957
    10. '**' → logprob: -13.72410774230957

Token 5: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12189110368490219
    2. ':' → logprob: -2.4968910217285156
    3. ' return' → logprob: -4.496891021728516
    4. ':return' → logprob: -4.496891021728516
    5. '```' → logprob: -5.121891021728516
    6. 'return' → logprob: -6.621891021728516
    7. ' ' → logprob: -7.246891021728516
    8. '    
' → logprob: -7.996891021728516
    9. '       ' → logprob: -8.121891021728516
    10. '    ' → logprob: -8.371891021728516

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10324937105178833
    2. ':' → logprob: -2.6032493114471436
    3. ' return' → logprob: -4.103249549865723
    4. ':return' → logprob: -5.603249549865723
    5. ' ' → logprob: -6.478249549865723
    6. 'return' → logprob: -6.853249549865723
    7. ' :' → logprob: -7.978249549865723
    8. '```' → logprob: -8.478249549865723
    9. '    ' → logprob: -8.978249549865723
    10. '(' → logprob: -9.103249549865723

Token 7: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050618067383766174
    2. 'return' (adapté à ' return') → logprob: -3.3006181716918945
    3. ' return' → logprob: -4.8006181716918945
    4. '```' → logprob: -6.4256181716918945
    5. '    ' → logprob: -6.8006181716918945
    6. 'r' → logprob: -7.9256181716918945
    7. 'abs' → logprob: -7.9256181716918945
    8. ':return' → logprob: -8.175618171691895
    9. ' ' → logprob: -8.425618171691895
    10. ':' → logprob: -9.300618171691895

Token 8: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.015076526440680027
    2. 'abs' → logprob: -4.390076637268066
    3. ' ' → logprob: -6.015076637268066
    4. ' x' → logprob: -9.765076637268066
    5. '(abs' → logprob: -9.890076637268066
    6. '  ' → logprob: -12.515076637268066
    7. '.abs' → logprob: -12.640076637268066
    8. '_abs' → logprob: -12.890076637268066
    9. ' ' → logprob: -13.265076637268066
    10. 'x' → logprob: -13.890076637268066

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005938516929745674
    2. '(x' → logprob: -5.130938529968262
    3. '(
' → logprob: -12.380938529968262
    4. '('' → logprob: -13.130938529968262
    5. ' (' → logprob: -13.380938529968262
    6. '(

' → logprob: -14.380938529968262
    7. '("("' → logprob: -15.130938529968262
    8. '(user' → logprob: -15.505938529968262
    9. '\(' → logprob: -15.755938529968262
    10. '((' → logprob: -16.005937576293945

Token 10: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.542423165636137e-05
    2. '))' → logprob: -9.375085830688477
    3. '`)' → logprob: -15.500085830688477
    4. ' )' → logprob: -15.625085830688477
    5. ')))' → logprob: -16.750085830688477
    6. '')' → logprob: -16.750085830688477
    7. '()' → logprob: -17.250085830688477
    8. '())' → logprob: -17.250085830688477
    9. ')`' → logprob: -17.750085830688477
    10. ' ' → logprob: -18.000085830688477

Token 11: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6463935375213623
    2. '\n' → logprob: -1.8963935375213623
    3. ')' → logprob: -2.0213935375213623
    4. '```' → logprob: -2.5213935375213623
    5. '<|end|>' → logprob: -3.3963935375213623
    6. '
' → logprob: -3.7713935375213623
    7. '(
' → logprob: -4.521393775939941
    8. '\' → logprob: -4.646393775939941
    9. ':' → logprob: -4.771393775939941
    10. '()' → logprob: -4.896393775939941

Token 12: ' helper' (ID: 25246)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20453596115112305
    2. '\n' → logprob: -2.704535961151123
    3. ')' → logprob: -3.204535961151123
    4. '
' → logprob: -3.954535961151123
    5. '(
' → logprob: -4.204535961151123
    6. ' ' → logprob: -4.579535961151123
    7. '\' → logprob: -4.579535961151123
    8. '()' → logprob: -5.079535961151123
    9. '<|end|>' → logprob: -5.079535961151123
    10. '```' → logprob: -5.704535961151123

Token 13: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.528509497642517
    2. '
' → logprob: -1.778509497642517
    3. '_' → logprob: -2.0285096168518066
    4. '(' → logprob: -2.1535096168518066
    5. '\n' → logprob: -2.5285096168518066
    6. '<|end|>' → logprob: -2.5285096168518066
    7. '()' → logprob: -3.0285096168518066
    8. '(
' → logprob: -3.1535096168518066
    9. '```' → logprob: -3.5285096168518066
    10. '\' → logprob: -3.7785096168518066

Token 14: ' lambda' (ID: 27871)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.8662380576133728
    2. ' type' → logprob: -1.1162381172180176
    3. ' a' → logprob: -1.8662381172180176
    4. ' default' → logprob: -4.366238117218018
    5. ' the' → logprob: -4.491238117218018
    6. 'in' → logprob: -4.741238117218018
    7. ' ' → logprob: -4.991238117218018
    8. ' an' → logprob: -5.366238117218018
    9. '_' → logprob: -5.491238117218018
    10. ' space' → logprob: -5.491238117218018

Token 15: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5416063666343689
    2. '_' → logprob: -2.4166064262390137
    3. '=' → logprob: -2.7916064262390137
    4. ' ' → logprob: -2.7916064262390137
    5. 'lambda' → logprob: -3.0416064262390137
    6. ' 
' → logprob: -3.1666064262390137
    7. '  
' → logprob: -4.416606426239014
    8. '\n' → logprob: -4.541606426239014
    9. ' get' → logprob: -4.541606426239014
    10. '\' → logprob: -4.791606426239014

Token 16: ' inline' (ID: 15905)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2473936527967453
    2. 'lambda' → logprob: -1.6223936080932617
    3. ' ' → logprob: -5.122393608093262
    4. ' x' → logprob: -5.747393608093262
    5. ' =' → logprob: -5.997393608093262
    6. '=lambda' → logprob: -6.247393608093262
    7. ' (' → logprob: -6.372393608093262
    8. '=' → logprob: -6.997393608093262
    9. '(lambda' → logprob: -7.122393608093262
    10. 'x' → logprob: -7.747393608093262

Token 17: ' arithmetic' (ID: 81645)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41482964158058167
    2. ' get' → logprob: -1.9148296117782593
    3. 'get' → logprob: -2.414829730987549
    4. '=' → logprob: -3.664829730987549
    5. 'lambda' → logprob: -4.164829730987549
    6. 'x' → logprob: -4.289829730987549
    7. 'abs' → logprob: -4.914829730987549
    8. ' (' → logprob: -5.289829730987549
    9. '```' → logprob: -5.414829730987549
    10. 'f' → logprob: -5.539829730987549

Token 18: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2595062851905823
    2. 'lambda' → logprob: -2.6345062255859375
    3. '=' → logprob: -2.7595062255859375
    4. ' ' → logprob: -3.7595062255859375
    5. 'def' → logprob: -4.8845062255859375
    6. ' lambda' → logprob: -5.0095062255859375
    7. ' (' → logprob: -5.3845062255859375
    8. ')' → logprob: -5.5095062255859375
    9. ',' → logprob: -5.5095062255859375
    10. '```' → logprob: -5.8845062255859375

Token 19: 'get' (ID: 522)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5553538203239441
    2. 'get' → logprob: -1.6803538799285889
    3. 'result' → logprob: -1.9303538799285889
    4. 'abs' → logprob: -3.805353879928589
    5. 'square' → logprob: -4.05535364151001
    6. 'add' → logprob: -4.43035364151001
    7. 'double' → logprob: -5.05535364151001
    8. 'y' → logprob: -5.18035364151001
    9. ' get' → logprob: -5.30535364151001
    10. 's' → logprob: -5.55535364151001

Token 20: '_s' (ID: 1278)
  Prédit: '_abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.0006852717488072813
    2. '_' → logprob: -7.625685214996338
    3. '_ab' → logprob: -9.750685691833496
    4. '.abs' → logprob: -10.000685691833496
    5. 'abs' → logprob: -10.625685691833496
    6. ' _' → logprob: -11.000685691833496
    7. 'Abs' → logprob: -11.250685691833496
    8. ' Abs' → logprob: -11.375685691833496
    9. '(abs' → logprob: -11.375685691833496
    10. '.' → logprob: -12.000685691833496

Token 21: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.23725077509880066
    2. '_abs' → logprob: -2.987250804901123
    3. '_' → logprob: -3.112250804901123
    4. 'q' → logprob: -3.237250804901123
    5. 'qrt' → logprob: -3.612250804901123
    6. 'quare' → logprob: -4.362250804901123
    7. '_sum' → logprob: -4.487250804901123
    8. '_q' → logprob: -4.862250804901123
    9. '_um' → logprob: -4.862250804901123
    10. 'ize' → logprob: -5.612250804901123

Token 22: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.12702196836471558
    2. ' lambda' → logprob: -2.1270220279693604
    3. '(lambda' → logprob: -9.627021789550781
    4. '   ' → logprob: -10.627021789550781
    5. ' ' → logprob: -14.002021789550781
    6. ' lamb' → logprob: -14.377021789550781
    7. '=lambda' → logprob: -14.502021789550781
    8. '  ' → logprob: -14.627021789550781
    9. '    ' → logprob: -15.002021789550781
    10. '_lambda' → logprob: -15.127021789550781

Token 23: ' t' (ID: 260)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03822314739227295
    2. 'x' → logprob: -3.2882232666015625
    3. ' s' → logprob: -9.788223266601562
    4. ' abs' → logprob: -9.913223266601562
    5. ' y' → logprob: -10.913223266601562
    6. ' ' → logprob: -11.163223266601562
    7. ' lambda' → logprob: -11.163223266601562
    8. 'abs' → logprob: -11.538223266601562
    9. 's' → logprob: -12.038223266601562
    10. ' a' → logprob: -12.288223266601562

Token 24: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18100015819072723
    2. ' :' → logprob: -1.8060001134872437
    3. 't' → logprob: -7.431000232696533
    4. ' t' → logprob: -7.931000232696533
    5. ' ' → logprob: -9.305999755859375
    6. 'abs' → logprob: -9.430999755859375
    7. ':t' → logprob: -9.680999755859375
    8. 's' → logprob: -10.680999755859375
    9. ',' → logprob: -11.430999755859375
    10. ' abs' → logprob: -11.680999755859375

Token 25: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8268969655036926
    2. 'x' → logprob: -1.2018969058990479
    3. ' t' → logprob: -2.451896905899048
    4. 'abs' → logprob: -3.451896905899048
    5. ' s' → logprob: -3.576896905899048
    6. 't' → logprob: -3.576896905899048
    7. ' abs' → logprob: -3.576896905899048
    8. ' key' → logprob: -4.076897144317627
    9. 's' → logprob: -4.326897144317627
    10. ' lambda' → logprob: -5.076897144317627

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008295171894133091
    2. ' :' → logprob: -5.258295059204102
    3. ',' → logprob: -6.008295059204102
    4. ':t' → logprob: -8.008295059204102
    5. 't' → logprob: -8.883295059204102
    6. '=' → logprob: -10.258295059204102
    7. ',t' → logprob: -10.883295059204102
    8. ',:' → logprob: -11.008295059204102
    9. ':,' → logprob: -11.758295059204102
    10. 's' → logprob: -12.008295059204102

Token 27: ' ' (ID: 220)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5032148957252502
    2. 't' → logprob: -1.0032148361206055
    3. ' (' → logprob: -4.6282148361206055
    4. '(t' → logprob: -5.0032148361206055
    5. ' abs' → logprob: -5.1282148361206055
    6. 'abs' → logprob: -6.3782148361206055
    7. '(' → logprob: -6.7532148361206055
    8. ' ' → logprob: -7.0032148361206055
    9. '(abs' → logprob: -7.3782148361206055
    10. ' int' → logprob: -7.6282148361206055

Token 28: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3137977123260498
    2. 'abs' → logprob: -1.5637977123260498
    3. '(t' → logprob: -3.93879771232605
    4. '(abs' → logprob: -4.313797950744629
    5. ' t' → logprob: -4.438797950744629
    6. ' abs' → logprob: -5.188797950744629
    7. 'get' → logprob: -6.313797950744629
    8. 'max' → logprob: -6.563797950744629
    9. 'int' → logprob: -6.688797950744629
    10. 'sum' → logprob: -6.688797950744629

Token 29: ' -' (ID: 533)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8347201943397522
    2. ' +' → logprob: -1.3347201347351074
    3. '+' → logprob: -1.7097201347351074
    4. 'if' → logprob: -3.2097201347351074
    5. ',' → logprob: -3.8347201347351074
    6. ' ' → logprob: -4.084720134735107
    7. '.' → logprob: -4.709720134735107
    8. '+t' → logprob: -4.834720134735107
    9. 'x' → logprob: -5.084720134735107
    10. 't' → logprob: -5.709720134735107

Token 30: ' -' (ID: 533)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6321983337402344
    2. 'i' → logprob: -1.3821983337402344
    3. ' t' → logprob: -2.1321983337402344
    4. ' i' → logprob: -2.7571983337402344
    5. ' (' → logprob: -4.507198333740234
    6. '(' → logprob: -4.757198333740234
    7. '1' → logprob: -5.632198333740234
    8. 'abs' → logprob: -5.757198333740234
    9. '(t' → logprob: -6.132198333740234
    10. '(i' → logprob: -6.257198333740234

Token 31: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5565465688705444
    2. 'i' → logprob: -1.0565465688705444
    3. '(' → logprob: -3.806546688079834
    4. '(t' → logprob: -4.181546688079834
    5. '1' → logprob: -4.306546688079834
    6. '(i' → logprob: -4.681546688079834
    7. ' t' → logprob: -4.806546688079834
    8. ' i' → logprob: -4.931546688079834
    9. ' (' → logprob: -7.056546688079834
    10. ' ' → logprob: -7.806546688079834

Token 32: ' //' (ID: 602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1854995489120483
    2. 'i' → logprob: -1.3104995489120483
    3. ' ' → logprob: -2.310499668121338
    4. ' i' → logprob: -2.560499668121338
    5. ' *' → logprob: -2.810499668121338
    6. '+' → logprob: -3.060499668121338
    7. '*i' → logprob: -3.435499668121338
    8. '+i' → logprob: -3.560499668121338
    9. '*' → logprob: -3.935499668121338
    10. '[i' → logprob: -4.185499668121338

Token 33: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09416628628969193
    2. '2' → logprob: -2.9691662788391113
    3. ' i' → logprob: -3.7191662788391113
    4. '1' → logprob: -4.969166278839111
    5. ' ' → logprob: -5.969166278839111
    6. '(' → logprob: -6.219166278839111
    7. '(i' → logprob: -7.469166278839111
    8. '4' → logprob: -7.844166278839111
    9. '3' → logprob: -7.969166278839111
    10. ' (' → logprob: -8.09416675567627

Token 34: '3' (ID: 18)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028333384543657303
    2. ' i' → logprob: -4.1533331871032715
    3. '2' → logprob: -5.0283331871032715
    4. '1' → logprob: -5.9033331871032715
    5. '(' → logprob: -6.6533331871032715
    6. ' ' → logprob: -7.6533331871032715
    7. '3' → logprob: -8.40333366394043
    8. ')' → logprob: -9.15333366394043
    9. ' (' → logprob: -9.15333366394043
    10. 't' → logprob: -9.40333366394043

Token 35: ' **' (ID: 6240)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4698970913887024
    2. ' i' → logprob: -1.3448970317840576
    3. '2' → logprob: -3.0948970317840576
    4. '3' → logprob: -3.2198970317840576
    5. ' ' → logprob: -4.469897270202637
    6. '4' → logprob: -5.094897270202637
    7. '1' → logprob: -5.469897270202637
    8. '(' → logprob: -6.094897270202637
    9. ' (' → logprob: -6.469897270202637
    10. '(i' → logprob: -7.094897270202637

Token 36: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07992052286863327
    2. '(' → logprob: -2.954920530319214
    3. ' i' → logprob: -4.079920291900635
    4. '(i' → logprob: -5.204920291900635
    5. ' (' → logprob: -6.829920291900635
    6. '2' → logprob: -7.329920291900635
    7. '3' → logprob: -8.579920768737793
    8. ' ' → logprob: -8.954920768737793
    9. '6' → logprob: -9.704920768737793
    10. '1' → logprob: -10.079920768737793

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0364091731607914
    2. ' )' → logprob: -3.6614091396331787
    3. '2' → logprob: -4.911409378051758
    4. '1' → logprob: -6.536409378051758
    5. '4' → logprob: -8.286409378051758
    6. '3' → logprob: -8.411409378051758
    7. '0' → logprob: -8.661409378051758
    8. ' ' → logprob: -8.661409378051758
    9. '6' → logprob: -9.036409378051758
    10. '+' → logprob: -9.661409378051758

Token 38: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6846579313278198
    2. '(' → logprob: -1.8096579313278198
    3. '+' → logprob: -2.4346580505371094
    4. '2' → logprob: -2.6846580505371094
    5. ')' → logprob: -2.6846580505371094
    6. '*' → logprob: -3.5596580505371094
    7. '<|end|>' → logprob: -3.6846580505371094
    8. '**' → logprob: -4.184658050537109
    9. '1' → logprob: -4.684658050537109
    10. '0' → logprob: -5.184658050537109

Token 39: ' m' (ID: 284)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.12709777057170868
    2. ' ' → logprob: -4.0020976066589355
    3. ' factorial' → logprob: -4.0020976066589355
    4. ' add' → logprob: -4.2520976066589355
    5. ' sum' → logprob: -4.2520976066589355
    6. ' calculate' → logprob: -4.5020976066589355
    7. '_' → logprob: -5.1270976066589355
    8. ' compute' → logprob: -5.2520976066589355
    9. ' _' → logprob: -5.3770976066589355
    10. ' cube' → logprob: -5.6270976066589355

Token 40: '(a' (ID: 6271)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'od' → logprob: -1.282279133796692
    2. 'ul' → logprob: -1.532279133796692
    3. 'ax' → logprob: -2.5322790145874023
    4. 'ultiply' → logprob: -2.5322790145874023
    5. 'ult' → logprob: -2.7822790145874023
    6. 'ean' → logprob: -2.9072790145874023
    7. 'ap' → logprob: -3.0322790145874023
    8. 'e' → logprob: -3.6572790145874023
    9. 'get' → logprob: -3.7822790145874023
    10. 'def' → logprob: -4.407279014587402

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20593979954719543
    2. '):' → logprob: -2.330939769744873
    3. ')' → logprob: -3.205939769744873
    4. '[' → logprob: -4.455939769744873
    5. 'a' → logprob: -4.955939769744873
    6. 's' → logprob: -4.955939769744873
    7. 'x' → logprob: -6.080939769744873
    8. '[]):' → logprob: -6.080939769744873
    9. 'ultiply' → logprob: -6.080939769744873
    10. '_' → logprob: -6.330939769744873

Token 42: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.915647566318512
    2. ' b' → logprob: -0.915647566318512
    3. 'i' → logprob: -2.790647506713867
    4. ' n' → logprob: -3.165647506713867
    5. ' i' → logprob: -3.415647506713867
    6. 'n' → logprob: -3.540647506713867
    7. ' t' → logprob: -5.540647506713867
    8. ' l' → logprob: -5.540647506713867
    9. 'a' → logprob: -5.665647506713867
    10. ' s' → logprob: -5.790647506713867

Token 43: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001533428207039833
    2. ',' → logprob: -6.876533508300781
    3. ')' → logprob: -8.251533508300781
    4. ':' → logprob: -9.251533508300781
    5. '=' → logprob: -9.751533508300781
    6. '**' → logprob: -11.001533508300781
    7. ' ):' → logprob: -11.001533508300781
    8. '   ' → logprob: -11.626533508300781
    9. '):
' → logprob: -11.751533508300781
    10. '*' → logprob: -11.751533508300781

Token 44: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2742617428302765
    2. ' c' → logprob: -2.149261713027954
    3. 'i' → logprob: -3.024261713027954
    4. ')' → logprob: -4.024261951446533
    5. '):' → logprob: -4.399261951446533
    6. 'n' → logprob: -4.524261951446533
    7. ' i' → logprob: -5.024261951446533
    8. ' ' → logprob: -5.524261951446533
    9. ' )' → logprob: -5.774261951446533
    10. ' n' → logprob: -5.899261951446533

Token 45: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024713745806366205
    2. ')' → logprob: -6.127471446990967
    3. ',' → logprob: -8.502470970153809
    4. ':' → logprob: -9.752470970153809
    5. '=' → logprob: -12.127470970153809
    6. ' ):' → logprob: -12.252470970153809
    7. '):
' → logprob: -12.377470970153809
    8. ''):' → logprob: -12.877470970153809
    9. '**' → logprob: -13.377470970153809
    10. '*' → logprob: -13.502470970153809

Token 46: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.175819531083107
    2. 'd' → logprob: -2.1758196353912354
    3. ' n' → logprob: -5.175819396972656
    4. ' )' → logprob: -5.425819396972656
    5. ' ):' → logprob: -5.425819396972656
    6. '):' → logprob: -5.550819396972656
    7. ' i' → logprob: -5.550819396972656
    8. ' ' → logprob: -5.925819396972656
    9. ' t' → logprob: -5.925819396972656
    10. ' s' → logprob: -6.050819396972656

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005050283391028643
    2. ',' → logprob: -5.880050182342529
    3. ')' → logprob: -6.630050182342529
    4. ':' → logprob: -8.005050659179688
    5. '=' → logprob: -8.255050659179688
    6. ' ):' → logprob: -8.505050659179688
    7. '   ' → logprob: -10.630050659179688
    8. '=None' → logprob: -10.630050659179688
    9. '):
' → logprob: -10.755050659179688
    10. ' ,' → logprob: -11.755050659179688

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7228140234947205
    2. ':' → logprob: -1.5978140830993652
    3. ' ' → logprob: -1.7228140830993652
    4. '    ' → logprob: -2.2228140830993652
    5. ' return' → logprob: -4.722814083099365
    6. ' :' → logprob: -5.222814083099365
    7. ' (' → logprob: -6.222814083099365
    8. ' 
' → logprob: -6.722814083099365
    9. '<|end|>' → logprob: -6.722814083099365
    10. '  ' → logprob: -6.847814083099365

Token 49: ' ##' (ID: 17252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6985933780670166
    2. ' return' → logprob: -1.6985933780670166
    3. ' ' → logprob: -2.0735933780670166
    4. ' a' → logprob: -2.5735933780670166
    5. '    ' → logprob: -2.9485933780670166
    6. 'a' → logprob: -4.0735931396484375
    7. ' (' → logprob: -4.4485931396484375
    8. 'return' → logprob: -4.8235931396484375
    9. ' r' → logprob: -5.4485931396484375
    10. 'r' → logprob: -5.6985931396484375

Token 50: ' list' (ID: 1562)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.32636338472366333
    2. ' a' → logprob: -2.4513633251190186
    3. '   ' → logprob: -2.9513633251190186
    4. ' ' → logprob: -3.4513633251190186
    5. 'return' → logprob: -3.4513633251190186
    6. 'a' → logprob: -3.8263633251190186
    7. ' r' → logprob: -4.826363563537598
    8. ' t' → logprob: -5.201363563537598
    9. ' (' → logprob: -5.576363563537598
    10. ' n' → logprob: -5.576363563537598

Token 51: '+' (ID: 10)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.714141845703125
    2. '_' → logprob: -1.464141845703125
    3. 's' → logprob: -2.214141845703125
    4. ' comprehension' → logprob: -2.589141845703125
    5. '=' → logprob: -3.339141845703125
    6. '[' → logprob: -4.589141845703125
    7. 'comp' → logprob: -4.839141845703125
    8. '_com' → logprob: -4.964141845703125
    9. '_comp' → logprob: -5.089141845703125
    10. '=[]' → logprob: -5.589141845703125

Token 52: 'max' (ID: 3228)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.145301103591919
    2. ' return' → logprob: -1.395301103591919
    3. '[' → logprob: -2.895301103591919
    4. ' a' → logprob: -3.020301103591919
    5. 'return' → logprob: -3.395301103591919
    6. 'a' → logprob: -3.520301103591919
    7. ' =' → logprob: -3.645301103591919
    8. 's' → logprob: -3.645301103591919
    9. 'abs' → logprob: -3.645301103591919
    10. ' s' → logprob: -3.770301103591919

Token 53: '+' (ID: 10)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1828104257583618
    2. ' return' → logprob: -1.4328104257583618
    3. ' lst' → logprob: -2.0578103065490723
    4. '   ' → logprob: -3.1828103065490723
    5. ' [' → logprob: -3.3078103065490723
    6. 'max' → logprob: -3.6828103065490723
    7. 'lst' → logprob: -3.8078103065490723
    8. ' (' → logprob: -4.307810306549072
    9. 'return' → logprob: -4.307810306549072
    10. ' =' → logprob: -4.432810306549072

Token 54: 'com' (ID: 639)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.45359572768211365
    2. 'max' → logprob: -2.4535956382751465
    3. 'sum' → logprob: -2.9535956382751465
    4. 'map' → logprob: -3.0785956382751465
    5. ' max' → logprob: -3.2035956382751465
    6. ' abs' → logprob: -3.7035956382751465
    7. 'min' → logprob: -3.9535956382751465
    8. ' map' → logprob: -3.9535956382751465
    9. ' sum' → logprob: -4.0785956382751465
    10. 'range' → logprob: -4.5785956382751465

Token 55: 'preh' (ID: 41989)
  Prédit: 'preh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preh' → logprob: -0.003603394143283367
    2. 'p' → logprob: -5.753603458404541
    3. 'pr' → logprob: -8.253602981567383
    4. 'prehensive' → logprob: -9.753602981567383
    5. '```' → logprob: -10.253602981567383
    6. 'pre' → logprob: -10.378602981567383
    7. ' ' → logprob: -11.503602981567383
    8. 'pression' → logprob: -12.378602981567383
    9. 'ph' → logprob: -12.378602981567383
    10. 'b' → logprob: -12.628602981567383

Token 56: 'ension' (ID: 3902)
  Prédit: 'ension'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ension' → logprob: -0.0014815322356298566
    2. 'ensions' → logprob: -6.626481533050537
    3. '[' → logprob: -9.001481056213379
    4. 'ensi' → logprob: -11.751481056213379
    5. '```' → logprob: -12.251481056213379
    6. 'ensión' → logprob: -12.876481056213379
    7. ']' → logprob: -12.876481056213379
    8. '[
' → logprob: -13.376481056213379
    9. ')' → logprob: -13.501481056213379
    10. 'ensive' → logprob: -13.626481056213379

Token 57: ' (' (ID: 350)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6997579336166382
    2. '[max' → logprob: -1.4497579336166382
    3. 'max' → logprob: -1.9497579336166382
    4. '[' → logprob: -2.3247580528259277
    5. ' [' → logprob: -4.449758052825928
    6. ' return' → logprob: -5.324758052825928
    7. '   ' → logprob: -5.699758052825928
    8. '[
' → logprob: -6.199758052825928
    9. 'return' → logprob: -6.824758052825928
    10. '(max' → logprob: -6.949758052825928

Token 58: 'function' (ID: 2706)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9094394445419312
    2. ' abs' → logprob: -2.2844395637512207
    3. 'max' → logprob: -2.4094395637512207
    4. '[' → logprob: -2.7844395637512207
    5. ' max' → logprob: -2.9094395637512207
    6. '   ' → logprob: -3.0344395637512207
    7. ')' → logprob: -3.2844395637512207
    8. 'a' → logprob: -3.5344395637512207
    9. ' [' → logprob: -3.7844395637512207
    10. '    ' → logprob: -4.159439563751221

Token 59: 'nal' (ID: 19757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09849721193313599
    2. ',' → logprob: -3.848497152328491
    3. '   ' → logprob: -3.848497152328491
    4. '):' → logprob: -3.973497152328491
    5. ' ' → logprob: -5.09849739074707
    6. 's' → logprob: -5.59849739074707
    7. '[' → logprob: -5.72349739074707
    8. 'max' → logprob: -5.97349739074707
    9. ' for' → logprob: -6.47349739074707
    10. '  ' → logprob: -6.47349739074707

Token 60: '-ish' (ID: 119149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08961964398622513
    2. ' approach' → logprob: -3.4646196365356445
    3. '):' → logprob: -3.9646196365356445
    4. ' style' → logprob: -5.3396196365356445
    5. 'max' → logprob: -5.5896196365356445
    6. ' ' → logprob: -5.8396196365356445
    7. ',' → logprob: -6.0896196365356445
    8. ' for' → logprob: -6.0896196365356445
    9. ' programming' → logprob: -6.4646196365356445
    10. ' )' → logprob: -6.4646196365356445

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03354426473379135
    2. '):' → logprob: -3.9085443019866943
    3. '   ' → logprob: -5.658544063568115
    4. '[' → logprob: -6.658544063568115
    5. ',' → logprob: -6.783544063568115
    6. ' ' → logprob: -6.908544063568115
    7. '```' → logprob: -6.908544063568115
    8. ')
' → logprob: -7.033544063568115
    9. ' for' → logprob: -7.158544063568115
    10. '):
' → logprob: -7.408544063568115

Token 62: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8298343420028687
    2. '   ' → logprob: -0.9548343420028687
    3. 'return' → logprob: -1.8298343420028687
    4. 'max' → logprob: -4.829834461212158
    5. ' max' → logprob: -4.829834461212158
    6. '```' → logprob: -6.329834461212158
    7. '    ' → logprob: -8.829833984375
    8. ' ' → logprob: -9.079833984375
    9. '[max' → logprob: -9.454833984375
    10. 'result' → logprob: -9.829833984375

Token 63: ' j' (ID: 441)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47402653098106384
    2. '   ' → logprob: -1.4740265607833862
    3. 'return' → logprob: -2.0990264415740967
    4. ' max' → logprob: -4.224026679992676
    5. 'max' → logprob: -5.099026679992676
    6. ' ' → logprob: -7.599026679992676
    7. ' lst' → logprob: -7.599026679992676
    8. '    ' → logprob: -7.724026679992676
    9. ' result' → logprob: -7.849026679992676
    10. ' res' → logprob: -8.224026679992676

Token 64: '_max' (ID: 13731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3956872224807739
    2. ' =' → logprob: -1.270687222480774
    3. 's' → logprob: -3.6456871032714844
    4. 'max' → logprob: -4.520687103271484
    5. '=max' → logprob: -5.270687103271484
    6. ' ' → logprob: -6.770687103271484
    7. ',' → logprob: -7.645687103271484
    8. '   ' → logprob: -8.145687103271484
    9. '=[' → logprob: -8.145687103271484
    10. 'umps' → logprob: -8.145687103271484

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931914687156677
    2. ' =' → logprob: -0.6931914687156677
    3. '=max' → logprob: -10.818191528320312
    4. ',' → logprob: -11.443191528320312
    5. ' ' → logprob: -11.693191528320312
    6. '=int' → logprob: -13.818191528320312
    7. '=j' → logprob: -13.818191528320312
    8. ')' → logprob: -14.068191528320312
    9. '  ' → logprob: -14.693191528320312
    10. 's' → logprob: -14.818191528320312

Token 66: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.061981018632650375
    2. 'max' → logprob: -2.811980962753296
    3. ' ' → logprob: -12.686981201171875
    4. '0' → logprob: -12.936981201171875
    5. '(max' → logprob: -13.061981201171875
    6. '   ' → logprob: -13.686981201171875
    7. ' maximum' → logprob: -13.811981201171875
    8. '[max' → logprob: -14.061981201171875
    9. '	max' → logprob: -14.686981201171875
    10. '3' → logprob: -14.811981201171875

Token 67: '([
' (ID: 18206)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2276441752910614
    2. '(' → logprob: -1.8526442050933838
    3. '(range' → logprob: -3.602644205093384
    4. '(i' → logprob: -4.727643966674805
    5. '(j' → logprob: -5.227643966674805
    6. '(a' → logprob: -6.227643966674805
    7. '([(' → logprob: -7.102643966674805
    8. '((' → logprob: -7.227643966674805
    9. '([-' → logprob: -8.227643966674805
    10. '(abs' → logprob: -8.227643966674805

Token 68: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.331752896308899
    2. 'm' → logprob: -1.456752896308899
    3. 'get' → logprob: -2.3317527770996094
    4. 'c' → logprob: -2.8317527770996094
    5. ' get' → logprob: -2.8317527770996094
    6. ' i' → logprob: -3.3317527770996094
    7. ' m' → logprob: -3.3317527770996094
    8. 'j' → logprob: -3.3317527770996094
    9. 'a' → logprob: -3.5817527770996094
    10. '(i' → logprob: -3.8317527770996094

Token 69: ' i' (ID: 575)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7239436507225037
    2. 'abs' → logprob: -2.0989437103271484
    3. ' get' → logprob: -2.3489437103271484
    4. 'm' → logprob: -2.8489437103271484
    5. 'j' → logprob: -2.9739437103271484
    6. 'i' (adapté à ' i') → logprob: -3.0989437103271484
    7. 'a' → logprob: -3.7239437103271484
    8. 'c' → logprob: -4.223943710327148
    9. '(get' → logprob: -4.348943710327148
    10. ' abs' → logprob: -4.598943710327148

Token 70: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007891586050391197
    2. 'for' → logprob: -4.882891654968262
    3. ' ' → logprob: -8.882891654968262
    4. '   ' → logprob: -10.007891654968262
    5. ' in' → logprob: -10.007891654968262
    6. '    ' → logprob: -11.007891654968262
    7. '	for' → logprob: -11.507891654968262
    8. '  ' → logprob: -11.882891654968262
    9. '+' → logprob: -11.882891654968262
    10. '        ' → logprob: -12.382891654968262

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05528437718749046
    2. 'i' → logprob: -2.930284261703491
    3. ' ' → logprob: -8.80528450012207
    4. ' range' → logprob: -9.05528450012207
    5. 'range' → logprob: -10.18028450012207
    6. ' j' → logprob: -10.93028450012207
    7. '0' → logprob: -11.18028450012207
    8. ' in' → logprob: -11.30528450012207
    9. ' d' → logprob: -11.43028450012207
    10. 'd' → logprob: -11.55528450012207

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004552215104922652
    2. 'in' → logprob: -7.875455379486084
    3. ' ' → logprob: -10.125454902648926
    4. ',' → logprob: -10.875454902648926
    5. '<|end|>' → logprob: -11.375454902648926
    6. '	in' → logprob: -13.000454902648926
    7. ' range' → logprob: -14.375454902648926
    8. ' ,' → logprob: -14.750454902648926
    9. 'range' → logprob: -14.875454902648926
    10. '  ' → logprob: -15.375454902648926

Token 73: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029823746532201767
    2. 'range' → logprob: -3.5298237800598145
    3. ' xrange' → logprob: -10.404823303222656
    4. '	range' → logprob: -10.404823303222656
    5. ' ' → logprob: -12.279823303222656
    6. '<|end|>' → logprob: -13.029823303222656
    7. '(range' → logprob: -13.154823303222656
    8. '[' → logprob: -13.404823303222656
    9. '   ' → logprob: -14.654823303222656
    10. ' rango' → logprob: -15.279823303222656

Token 74: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011482428759336472
    2. '(len' → logprob: -4.761482238769531
    3. '(a' → logprob: -6.886482238769531
    4. '(d' → logprob: -7.511482238769531
    5. '   ' → logprob: -8.261482238769531
    6. ' (' → logprob: -8.636482238769531
    7. '(-' → logprob: -8.636482238769531
    8. '6' → logprob: -9.261482238769531
    9. '4' → logprob: -9.511482238769531
    10. '(abs' → logprob: -9.761482238769531

Token 75: '30' (ID: 1130)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3492680490016937
    2. 'd' → logprob: -3.3492679595947266
    3. ' ' → logprob: -3.3492679595947266
    4. '10' → logprob: -3.3492679595947266
    5. '5' → logprob: -3.7242679595947266
    6. '6' → logprob: -3.7242679595947266
    7. '9' → logprob: -3.9742679595947266
    8. '7' → logprob: -3.9742679595947266
    9. '3' → logprob: -4.099267959594727
    10. 'len' → logprob: -4.099267959594727

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005688794772140682
    2. ' )' → logprob: -8.375569343566895
    3. ')])' → logprob: -8.750569343566895
    4. ' if' → logprob: -9.750569343566895
    5. '   ' → logprob: -9.875569343566895
    6. ')
' → logprob: -10.125569343566895
    7. 'if' → logprob: -10.875569343566895
    8. ')]' → logprob: -12.750569343566895
    9. '       ' → logprob: -12.875569343566895
    10. ' ' → logprob: -13.125569343566895

Token 77: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02724572829902172
    2. '       ' → logprob: -4.15224552154541
    3. 'if' → logprob: -5.15224552154541
    4. '   ' → logprob: -5.40224552154541
    5. '           ' → logprob: -8.27724552154541
    6. ' ' → logprob: -8.65224552154541
    7. '])' → logprob: -8.65224552154541
    8. '    ' → logprob: -9.15224552154541
    9. '        ' → logprob: -10.15224552154541
    10. '	if' → logprob: -11.02724552154541

Token 78: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.041763804852962494
    2. 'if' (adapté à ' if') → logprob: -3.2917637825012207
    3. '       ' → logprob: -6.291763782501221
    4. '   ' → logprob: -6.916763782501221
    5. '])' → logprob: -7.541763782501221
    6. ' ' → logprob: -9.041764259338379
    7. '           ' → logprob: -9.666764259338379
    8. '    ' → logprob: -9.791764259338379
    9. '        ' → logprob: -10.541764259338379
    10. ' ])' → logprob: -10.666764259338379

Token 79: ' get' (ID: 717)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.5290639400482178
    2. ' ' → logprob: -1.9040639400482178
    3. ' m' → logprob: -2.2790639400482178
    4. ' a' → logprob: -2.4040639400482178
    5. ' get' → logprob: -2.4040639400482178
    6. ' b' → logprob: -3.0290639400482178
    7. '(' → logprob: -3.4040639400482178
    8. ' c' → logprob: -3.4040639400482178
    9. '(a' → logprob: -3.4040639400482178
    10. '   ' → logprob: -3.6540639400482178

Token 80: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.813969957875088e-05
    2. '_abs' → logprob: -9.625067710876465
    3. '_' → logprob: -13.625067710876465
    4. 's' → logprob: -15.500067710876465
    5. '_a' → logprob: -15.500067710876465
    6. ' _' → logprob: -15.625067710876465
    7. ' ' → logprob: -16.75006866455078
    8. '_ab' → logprob: -16.87506866455078
    9. '_max' → logprob: -17.25006866455078
    10. 'abs' → logprob: -17.25006866455078

Token 81: '(a' (ID: 6271)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00227693491615355
    2. '(' → logprob: -6.50227689743042
    3. '(b' → logprob: -7.75227689743042
    4. '(d' → logprob: -8.752277374267578
    5. '(a' → logprob: -9.377277374267578
    6. '(i' → logprob: -9.627277374267578
    7. ' (' → logprob: -10.877277374267578
    8. '(s' → logprob: -11.877277374267578
    9. '(len' → logprob: -12.502277374267578
    10. '(c' → logprob: -13.252277374267578

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04736647382378578
    2. ',i' → logprob: -3.6723663806915283
    3. ' ,' → logprob: -4.047366619110107
    4. ',t' → logprob: -6.172366619110107
    5. '(i' → logprob: -8.04736614227295
    6. ',j' → logprob: -8.17236614227295
    7. ' i' → logprob: -9.04736614227295
    8. ' ' → logprob: -9.04736614227295
    9. ',b' → logprob: -9.54736614227295
    10. '(' → logprob: -9.92236614227295

Token 83: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061995361000299454
    2. ' i' → logprob: -2.811995267868042
    3. ')i' → logprob: -11.311995506286621
    4. ' ' → logprob: -12.186995506286621
    5. ')' → logprob: -12.436995506286621
    6. '   ' → logprob: -13.186995506286621
    7. '<|end|>' → logprob: -13.436995506286621
    8. '	i' → logprob: -13.686995506286621
    9. '    ' → logprob: -14.936995506286621
    10. ''i' → logprob: -15.186995506286621

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000952075351960957
    2. ')<=' → logprob: -8.250951766967773
    3. ')>' → logprob: -8.500951766967773
    4. ' )' → logprob: -8.750951766967773
    5. ')>=' → logprob: -8.875951766967773
    6. ')<' → logprob: -9.375951766967773
    7. ')==' → logprob: -10.625951766967773
    8. '   ' → logprob: -11.375951766967773
    9. ' ' → logprob: -11.625951766967773
    10. ')+' → logprob: -12.125951766967773

Token 85: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1266205310821533
    2. ' <=' → logprob: -1.6266205310821533
    3. '<=' → logprob: -2.3766205310821533
    4. ' >' → logprob: -2.5016205310821533
    5. ' ' → logprob: -2.8766205310821533
    6. ' >=' → logprob: -3.2516205310821533
    7. '%' → logprob: -3.2516205310821533
    8. ' <' → logprob: -3.2516205310821533
    9. '<' → logprob: -3.3766205310821533
    10. ')' → logprob: -3.6266205310821533

Token 86: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.21947066485881805
    2. ' get' → logprob: -1.7194706201553345
    3. '0' → logprob: -4.844470500946045
    4. 'b' → logprob: -5.219470500946045
    5. ' ' → logprob: -6.469470500946045
    6. ' b' → logprob: -6.844470500946045
    7. 'c' → logprob: -7.344470500946045
    8. '   ' → logprob: -8.094470977783203
    9. '1' → logprob: -8.594470977783203
    10. ' c' → logprob: -8.969470977783203

Token 87: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.978233846486546e-05
    2. '_b' → logprob: -10.875049591064453
    3. '_' → logprob: -11.625049591064453
    4. '_d' → logprob: -11.875049591064453
    5. '_a' → logprob: -12.625049591064453
    6. 's' → logprob: -12.750049591064453
    7. '_abs' → logprob: -13.125049591064453
    8. '_-' → logprob: -13.687549591064453
    9. '_c' → logprob: -14.000049591064453
    10. '_f' → logprob: -14.687549591064453

Token 88: '(c' (ID: 2410)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.003576788119971752
    2. '(' → logprob: -6.128576755523682
    3. '(d' → logprob: -6.878576755523682
    4. '(c' → logprob: -8.12857723236084
    5. 'b' → logprob: -11.00357723236084
    6. '<|end|>' → logprob: -11.12857723236084
    7. '(a' → logprob: -11.25357723236084
    8. ' (' → logprob: -11.50357723236084
    9. '(user' → logprob: -13.25357723236084
    10. '(s' → logprob: -13.37857723236084

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00287489197216928
    2. ',i' → logprob: -6.127874851226807
    3. ' ,' → logprob: -7.377874851226807
    4. '   ' → logprob: -10.877875328063965
    5. ',b' → logprob: -11.252875328063965
    6. ' ' → logprob: -12.252875328063965
    7. 'b' → logprob: -12.377875328063965
    8. ',a' → logprob: -12.377875328063965
    9. ')' → logprob: -12.627875328063965
    10. ',d' → logprob: -13.315375328063965

Token 90: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6946117877960205
    2. ' i' → logprob: -0.6946117877960205
    3. ' ' → logprob: -6.944611549377441
    4. '   ' → logprob: -8.694611549377441
    5. 'b' → logprob: -9.444611549377441
    6. '  ' → logprob: -9.444611549377441
    7. ' b' → logprob: -9.819611549377441
    8. '    ' → logprob: -10.694611549377441
    9. '	i' → logprob: -11.069611549377441
    10. '0' → logprob: -11.507111549377441

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006678790668956935
    2. ')])' → logprob: -8.125667572021484
    3. ' )' → logprob: -8.875667572021484
    4. ')
' → logprob: -9.750667572021484
    5. '   ' → logprob: -9.750667572021484
    6. ')]' → logprob: -10.125667572021484
    7. ' and' → logprob: -10.750667572021484
    8. 'and' → logprob: -11.250667572021484
    9. ' ' → logprob: -12.000667572021484
    10. ')==' → logprob: -12.125667572021484

Token 92: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38330313563346863
    2. '])' → logprob: -1.758303165435791
    3. ']' → logprob: -2.633303165435791
    4. 'and' → logprob: -2.758303165435791
    5. '   ' → logprob: -5.508303165435791
    6. '])
' → logprob: -6.258303165435791
    7. ' ]' → logprob: -6.883303165435791
    8. ']);' → logprob: -7.133303165435791
    9. ']),' → logprob: -7.508303165435791
    10. '       ' → logprob: -7.758303165435791

Token 93: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.29295504093170166
    2. 'get' → logprob: -1.4179550409317017
    3. '(get' → logprob: -5.542954921722412
    4. ' (' → logprob: -6.417954921722412
    5. '    ' → logprob: -6.917954921722412
    6. ' not' → logprob: -7.167954921722412
    7. '   ' → logprob: -7.417954921722412
    8. ' ' → logprob: -7.417954921722412
    9. 'abs' → logprob: -7.542954921722412
    10. ' abs' → logprob: -7.792954921722412

Token 94: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.1054253011243418e-05
    2. 's' → logprob: -11.750020980834961
    3. '(' → logprob: -12.250020980834961
    4. '_' → logprob: -13.125020980834961
    5. '_b' → logprob: -14.000020980834961
    6. ' ' → logprob: -14.187520980834961
    7. '_a' → logprob: -14.625020980834961
    8. '   ' → logprob: -14.687520980834961
    9. '_d' → logprob: -15.062520980834961
    10. '(s' → logprob: -15.125020980834961

Token 95: '(a' (ID: 6271)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0016444765496999025
    2. '(a' → logprob: -7.126644611358643
    3. '(d' → logprob: -7.251644611358643
    4. '(' → logprob: -9.751644134521484
    5. '(c' → logprob: -9.751644134521484
    6. ' (' → logprob: -11.626644134521484
    7. '(i' → logprob: -13.126644134521484
    8. 'b' → logprob: -14.251644134521484
    9. '(s' → logprob: -14.376644134521484
    10. '<|end|>' → logprob: -14.751644134521484

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012709470465779305
    2. ',b' → logprob: -7.001270771026611
    3. ' ,' → logprob: -8.25127124786377
    4. 'b' → logprob: -10.12627124786377
    5. ',d' → logprob: -11.62627124786377
    6. ' b' → logprob: -11.87627124786377
    7. '<|end|>' → logprob: -12.00127124786377
    8. ',i' → logprob: -12.00127124786377
    9. ' ' → logprob: -12.25127124786377
    10. '(' → logprob: -12.62627124786377

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19656145572662354
    2. 'b' → logprob: -1.8215614557266235
    3. ' i' → logprob: -4.446561336517334
    4. 'd' → logprob: -5.696561336517334
    5. ' b' → logprob: -6.821561336517334
    6. ' ' → logprob: -8.071561813354492
    7. '   ' → logprob: -9.196561813354492
    8. ' d' → logprob: -10.071561813354492
    9. '  ' → logprob: -10.821561813354492
    10. '<|end|>' → logprob: -11.571561813354492

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009205120149999857
    2. ')!=' → logprob: -7.500920295715332
    3. '-' → logprob: -9.000920295715332
    4. ' )' → logprob: -9.375920295715332
    5. '!=' → logprob: -10.875920295715332
    6. '+' → logprob: -10.875920295715332
    7. '   ' → logprob: -11.000920295715332
    8. ')==' → logprob: -11.750920295715332
    9. '')' → logprob: -11.938420295715332
    10. ' !=' → logprob: -12.125920295715332

Token 99: ' %' (ID: 1851)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4593726396560669
    2. '!=' → logprob: -1.084372639656067
    3. '==' → logprob: -3.9593725204467773
    4. ' ==' → logprob: -4.959372520446777
    5. '>' → logprob: -6.459372520446777
    6. ' ' → logprob: -7.084372520446777
    7. ' >' → logprob: -8.459372520446777
    8. ' <=' → logprob: -8.459372520446777
    9. '<=' → logprob: -8.584372520446777
    10. ')' → logprob: -8.709372520446777

Token 100: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3713816702365875
    2. '2' → logprob: -1.4963816404342651
    3. ' ' → logprob: -2.4963817596435547
    4. '4' → logprob: -6.496381759643555
    5. '7' → logprob: -7.371381759643555
    6. '1' → logprob: -8.246381759643555
    7. '10' → logprob: -8.246381759643555
    8. '6' → logprob: -8.621381759643555
    9. '(' → logprob: -8.746381759643555
    10. ' (' → logprob: -8.871381759643555

Token 101: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1854614019393921
    2. '2' → logprob: -1.810461401939392
    3. '(' → logprob: -5.685461521148682
    4. '10' → logprob: -7.435461521148682
    5. '4' → logprob: -7.560461521148682
    6. ' ' → logprob: -8.310461044311523
    7. '6' → logprob: -8.685461044311523
    8. '7' → logprob: -8.810461044311523
    9. '1' → logprob: -8.810461044311523
    10. '9' → logprob: -9.060461044311523

Token 102: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5398874282836914
    2. ' ==' → logprob: -1.1648874282836914
    3. ' !=' → logprob: -2.7898874282836914
    4. '!=' → logprob: -3.4148874282836914
    5. ')' → logprob: -4.914887428283691
    6. ')==' → logprob: -6.539887428283691
    7. ' ' → logprob: -6.664887428283691
    8. '```' → logprob: -8.164887428283691
    9. '[' → logprob: -9.039887428283691
    10. ']==' → logprob: -9.164887428283691

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3796570599079132
    2. ' ' → logprob: -1.8796570301055908
    3. '1' → logprob: -2.129657030105591
    4. '2' → logprob: -3.129657030105591
    5. 'get' → logprob: -8.379656791687012
    6. 'b' → logprob: -9.004656791687012
    7. ' get' → logprob: -9.254656791687012
    8. 'j' → logprob: -10.004656791687012
    9. '   ' → logprob: -10.254656791687012
    10. ' b' → logprob: -10.254656791687012

Token 104: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09597080200910568
    2. '1' → logprob: -2.595970869064331
    3. '2' → logprob: -4.220970630645752
    4. ' ' → logprob: -6.845970630645752
    5. 'get' → logprob: -7.095970630645752
    6. 'j' → logprob: -8.84597110748291
    7. 'a' → logprob: -9.84597110748291
    8. 'i' → logprob: -10.09597110748291
    9. '(' → logprob: -10.22097110748291
    10. ' get' → logprob: -10.59597110748291

Token 105: ' and' (ID: 326)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.010767299681901932
    2. '   ' → logprob: -5.260767459869385
    3. ' and' → logprob: -5.885767459869385
    4. ' ])' → logprob: -7.260767459869385
    5. '])
' → logprob: -7.385767459869385
    6. ']' → logprob: -7.510767459869385
    7. ')' → logprob: -8.010766983032227
    8. ']):' → logprob: -9.385766983032227
    9. '       ' → logprob: -9.385766983032227
    10. ']),' → logprob: -9.510766983032227

Token 106: ' ' (ID: 220)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.16623811423778534
    2. 'get' → logprob: -2.0412380695343018
    3. ' (' → logprob: -5.166238307952881
    4. '(get' → logprob: -5.291238307952881
    5. ' b' → logprob: -6.291238307952881
    6. '    ' → logprob: -6.541238307952881
    7. '   ' → logprob: -6.541238307952881
    8. ' abs' → logprob: -6.791238307952881
    9. ' ' → logprob: -7.041238307952881
    10. 'abs' → logprob: -7.291238307952881

Token 107: '1' (ID: 16)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06744764000177383
    2. ' get' → logprob: -2.9424476623535156
    3. '(get' → logprob: -5.192447662353516
    4. 'b' → logprob: -5.942447662353516
    5. 'abs' → logprob: -6.942447662353516
    6. 'd' → logprob: -7.817447662353516
    7. ' (' → logprob: -7.817447662353516
    8. '   ' → logprob: -8.317447662353516
    9. 'a' → logprob: -8.317447662353516
    10. '(' → logprob: -8.567447662353516

Token 108: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5591627955436707
    2. ' <' → logprob: -2.8091628551483154
    3. '<=' → logprob: -2.9341628551483154
    4. ' <<' → logprob: -3.0591628551483154
    5. '+' → logprob: -3.3091628551483154
    6. '<<' → logprob: -3.3091628551483154
    7. ' and' → logprob: -3.3091628551483154
    8. ' ==' → logprob: -3.6841628551483154
    9. ' +' → logprob: -3.9341628551483154
    10. ' ' → logprob: -4.059162616729736

Token 109: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.6359715461730957
    2. ' get' → logprob: -0.8859715461730957
    3. 'i' → logprob: -3.6359715461730957
    4. '=' → logprob: -4.385971546173096
    5. ' i' → logprob: -4.635971546173096
    6. '=get' → logprob: -5.260971546173096
    7. 'abs' → logprob: -7.010971546173096
    8. 'j' → logprob: -7.510971546173096
    9. '(get' → logprob: -7.885971546173096
    10. ' abs' → logprob: -8.010971069335938

Token 110: '_abs' (ID: 81310)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00017040544480551034
    2. '_abs' → logprob: -9.250170707702637
    3. 'abs' → logprob: -10.750170707702637
    4. '_a' → logprob: -11.000170707702637
    5. 's' → logprob: -11.375170707702637
    6. ' ' → logprob: -12.875170707702637
    7. 'Abs' → logprob: -13.187670707702637
    8. '(abs' → logprob: -13.187670707702637
    9. ' _' → logprob: -13.312670707702637
    10. '_i' → logprob: -13.500170707702637

Token 111: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.1093382015824318
    2. '(b' → logprob: -2.6093382835388184
    3. '(a' → logprob: -4.484338283538818
    4. '(' → logprob: -5.234338283538818
    5. '(d' → logprob: -5.359338283538818
    6. '(t' → logprob: -5.609338283538818
    7. '((' → logprob: -6.109338283538818
    8. '(c' → logprob: -6.984338283538818
    9. '(x' → logprob: -7.109338283538818
    10. '(i' → logprob: -7.859338283538818

Token 112: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.07061447948217392
    2. '_abs' → logprob: -2.6956145763397217
    3. 'abs' → logprob: -8.1956148147583
    4. '_a' → logprob: -9.0706148147583
    5. 's' → logprob: -9.5706148147583
    6. '(abs' → logprob: -9.8206148147583
    7. '_ab' → logprob: -10.1956148147583
    8. '_(' → logprob: -10.3206148147583
    9. '_' → logprob: -10.8206148147583
    10. '(a' → logprob: -10.9456148147583

Token 113: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10037542134523392
    2. '(b' → logprob: -2.6003754138946533
    3. '(c' → logprob: -4.225375652313232
    4. '(get' → logprob: -6.225375652313232
    5. '(' → logprob: -6.350375652313232
    6. '(d' → logprob: -6.600375652313232
    7. 'a' → logprob: -7.225375652313232
    8. '(t' → logprob: -7.725375652313232
    9. '((' → logprob: -9.225375175476074
    10. '(s' → logprob: -9.850375175476074

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12109024822711945
    2. '(c' → logprob: -3.1210901737213135
    3. '(' → logprob: -3.2460901737213135
    4. '(a' → logprob: -4.246090412139893
    5. '(b' → logprob: -4.996090412139893
    6. ')' → logprob: -5.996090412139893
    7. '(i' → logprob: -6.246090412139893
    8. ' ,' → logprob: -6.246090412139893
    9. ',c' → logprob: -7.121090412139893
    10. '(d' → logprob: -8.121089935302734

Token 115: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020769020542502403
    2. ' i' → logprob: -4.020769119262695
    3. 'a' → logprob: -7.020769119262695
    4. 'c' → logprob: -7.645769119262695
    5. ' ' → logprob: -8.145769119262695
    6. 'j' → logprob: -8.270769119262695
    7. '   ' → logprob: -8.895769119262695
    8. 'd' → logprob: -9.145769119262695
    9. '2' → logprob: -9.770769119262695
    10. ')' → logprob: -10.020769119262695

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48439136147499084
    2. '))' → logprob: -0.9843913316726685
    3. ')))' → logprob: -6.109391212463379
    4. ' )' → logprob: -6.234391212463379
    5. '   ' → logprob: -6.609391212463379
    6. ' ' → logprob: -7.109391212463379
    7. '-' → logprob: -7.234391212463379
    8. '(' → logprob: -7.359391212463379
    9. ' ))' → logprob: -7.734391212463379
    10. ')-' → logprob: -8.109391212463379

Token 117: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021189730614423752
    2. '())' → logprob: -4.1461896896362305
    3. ' )' → logprob: -6.0211896896362305
    4. '):' → logprob: -6.8961896896362305
    5. '-' → logprob: -7.8961896896362305
    6. ')<' → logprob: -8.27118968963623
    7. '()' → logprob: -8.64618968963623
    8. '   ' → logprob: -9.14618968963623
    9. ')<=' → logprob: -9.27118968963623
    10. '+' → logprob: -9.27118968963623

Token 118: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.11365047097206116
    2. ' get' → logprob: -2.2386505603790283
    3. '2' → logprob: -8.48865032196045
    4. '1' → logprob: -8.61365032196045
    5. '0' → logprob: -9.11365032196045
    6. '(get' → logprob: -9.23865032196045
    7. ' ' → logprob: -9.73865032196045
    8. '3' → logprob: -9.86365032196045
    9. '   ' → logprob: -10.48865032196045
    10. '  ' → logprob: -10.86365032196045

Token 119: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0016038904432207346
    2. 'abs' → logprob: -7.251604080200195
    3. 's' → logprob: -7.501604080200195
    4. '_abs' → logprob: -8.001604080200195
    5. '(abs' → logprob: -13.626604080200195
    6. '_a' → logprob: -13.751604080200195
    7. 'a' → logprob: -14.251604080200195
    8. 'Abs' → logprob: -14.376604080200195
    9. '(' → logprob: -14.876604080200195
    10. '(s' → logprob: -14.876604080200195

Token 120: '(d' (ID: 2572)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.493002712726593
    2. '(c' → logprob: -1.2430026531219482
    3. '(d' → logprob: -2.3680026531219482
    4. '(b' → logprob: -5.243002891540527
    5. 'a' → logprob: -6.743002891540527
    6. 'd' → logprob: -8.368002891540527
    7. '(' → logprob: -8.493002891540527
    8. '(get' → logprob: -10.243002891540527
    9. 'c' → logprob: -10.868002891540527
    10. '(s' → logprob: -10.993002891540527

Token 121: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.010712926276028156
    2. ',' → logprob: -4.63571310043335
    3. 'b' → logprob: -7.88571310043335
    4. ',b' → logprob: -8.135712623596191
    5. '(' → logprob: -8.885712623596191
    6. ')' → logprob: -9.010712623596191
    7. ' (' → logprob: -11.760712623596191
    8. '(a' → logprob: -12.135712623596191
    9. ' ,' → logprob: -12.260712623596191
    10. '(c' → logprob: -12.885712623596191

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0025119276251643896
    2. ' i' → logprob: -6.002511978149414
    3. ' ' → logprob: -11.502511978149414
    4. 'b' → logprob: -11.502511978149414
    5. 'c' → logprob: -12.377511978149414
    6. '   ' → logprob: -12.752511978149414
    7. 'a' → logprob: -13.127511978149414
    8. ')' → logprob: -13.627511978149414
    9. '0' → logprob: -14.127511978149414
    10. '  ' → logprob: -14.252511978149414

Token 123: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039565786719322205
    2. '))' → logprob: -5.8789567947387695
    3. ' )' → logprob: -7.7539567947387695
    4. ')>' → logprob: -7.8789567947387695
    5. ')))' → logprob: -9.62895679473877
    6. ')<' → logprob: -9.87895679473877
    7. '())' → logprob: -9.87895679473877
    8. '):' → logprob: -10.37895679473877
    9. ')**' → logprob: -10.87895679473877
    10. ')`' → logprob: -11.25395679473877

Token 124: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7547838091850281
    2. '<=' → logprob: -2.004783868789673
    3. ' <' → logprob: -2.004783868789673
    4. '<' → logprob: -2.254783868789673
    5. ' <=' → logprob: -2.754783868789673
    6. ']' → logprob: -3.254783868789673
    7. '   ' → logprob: -4.504783630371094
    8. '()' → logprob: -5.004783630371094
    9. '])' → logprob: -5.379783630371094
    10. '>' → logprob: -5.379783630371094

Token 125: ' ]' (ID: 6045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8126146197319031
    2. ')])' → logprob: -0.8126146197319031
    3. '])' → logprob: -3.187614679336548
    4. ')]' → logprob: -3.562614679336548
    5. ']' (adapté à ' ]') → logprob: -4.312614440917969
    6. '   ' → logprob: -4.687614440917969
    7. ' )' → logprob: -5.187614440917969
    8. ')])
' → logprob: -5.687614440917969
    9. '       ' → logprob: -6.562614440917969
    10. '])]' → logprob: -6.687614440917969

Token 126: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14972887933254242
    2. '])' → logprob: -2.024728775024414
    3. '   ' → logprob: -5.899728775024414
    4. ')
' → logprob: -6.524728775024414
    5. ')])' → logprob: -6.899728775024414
    6. '):' → logprob: -7.024728775024414
    7. '])
' → logprob: -7.774728775024414
    8. '))' → logprob: -9.399728775024414
    9. ']' → logprob: -9.774728775024414
    10. '+' → logprob: -9.774728775024414

Token 127: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003638084279373288
    2. '[-' → logprob: -6.00363826751709
    3. ' [' → logprob: -6.87863826751709
    4. '([' → logprob: -9.12863826751709
    5. '   ' → logprob: -12.12863826751709
    6. '[i' → logprob: -12.75363826751709
    7. ' [-' → logprob: -12.87863826751709
    8. '([-' → logprob: -13.25363826751709
    9. '[
' → logprob: -13.37863826751709
    10. '[j' → logprob: -13.75363826751709

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034206898417323828
    2. '100' → logprob: -6.253420829772949
    3. '10' → logprob: -7.628420829772949
    4. '2' → logprob: -8.37842082977295
    5. '999' → logprob: -8.37842082977295
    6. '30' → logprob: -9.12842082977295
    7. 'float' → logprob: -9.12842082977295
    8. '5' → logprob: -9.75342082977295
    9. '99' → logprob: -10.12842082977295
    10. '20' → logprob: -10.25342082977295

Token 129: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012405868619680405
    2. ')' → logprob: -7.0012407302856445
    3. '])
' → logprob: -8.376240730285645
    4. ']' → logprob: -10.001240730285645
    5. ' ])' → logprob: -11.251240730285645
    6. ')])' → logprob: -11.626240730285645
    7. '])

' → logprob: -11.876240730285645
    8. ']))' → logprob: -12.126240730285645
    9. '   ' → logprob: -12.376240730285645
    10. ')
' → logprob: -12.376240730285645

Token 130: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18979889154434204
    2. '   ' → logprob: -2.0647988319396973
    3. '+' → logprob: -3.8147988319396973
    4. ' +' → logprob: -5.064798831939697
    5. ')
' → logprob: -5.439798831939697
    6. '1' → logprob: -6.564798831939697
    7. ')+' → logprob: -6.564798831939697
    8. '])' → logprob: -6.689798831939697
    9. '       ' → logprob: -6.689798831939697
    10. ']' → logprob: -6.939798831939697

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004691610229201615
    2. ' ' → logprob: -7.750469207763672
    3. '   ' → logprob: -11.000469207763672
    4. '2' → logprob: -11.250469207763672
    5. '0' → logprob: -12.750469207763672
    6. '3' → logprob: -13.125469207763672
    7. '4' → logprob: -14.250469207763672
    8. '5' → logprob: -14.750469207763672
    9. '7' → logprob: -14.750469207763672
    10. '10' → logprob: -15.125469207763672

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003843173326458782
    2. ' ' → logprob: -8.000384330749512
    3. '2' → logprob: -11.000384330749512
    4. '0' → logprob: -11.000384330749512
    5. '   ' → logprob: -12.125384330749512
    6. '3' → logprob: -12.750384330749512
    7. '4' → logprob: -13.875384330749512
    8. '5' → logprob: -14.375384330749512
    9. '```' → logprob: -14.500384330749512
    10. '7' → logprob: -14.500384330749512

Token 133: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20023372769355774
    2. '<|end|>' → logprob: -2.3252336978912354
    3. '   ' → logprob: -2.9502336978912354
    4. ']' → logprob: -5.0752339363098145
    5. ':return' → logprob: -5.3252339363098145
    6. ':' → logprob: -5.3252339363098145
    7. '<|end|>' → logprob: -5.5752339363098145
    8. '
' → logprob: -5.7002339363098145
    9. ':
' → logprob: -6.5752339363098145
    10. 'def' → logprob: -6.7002339363098145

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027210582047700882
    2. ')' → logprob: -4.152210712432861
    3. 'return' → logprob: -5.027210712432861
    4. 'def' → logprob: -6.277210712432861
    5. '<|end|>' → logprob: -6.652210712432861
    6. ' return' → logprob: -8.027210235595703
    7. '
' → logprob: -8.652210235595703
    8. ')
' → logprob: -9.277210235595703
    9. '    
' → logprob: -9.277210235595703
    10. '	return' → logprob: -9.402210235595703

Token 135: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47902727127075195
    2. '   ' → logprob: -1.604027271270752
    3. 'return' (adapté à ' return') → logprob: -2.854027271270752
    4. '<|end|>' → logprob: -3.229027271270752
    5. ' return' → logprob: -4.104027271270752
    6. ':' → logprob: -4.354027271270752
    7. ':return' → logprob: -4.354027271270752
    8. 'def' → logprob: -4.479027271270752
    9. '
' → logprob: -5.229027271270752
    10. ']' → logprob: -5.354027271270752

Token 136: ' j' (ID: 441)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.8371604084968567
    2. 'j' → logprob: -1.087160348892212
    3. ' j' → logprob: -2.337160348892212
    4. '[' → logprob: -3.712160348892212
    5. 'max' → logprob: -3.837160348892212
    6. ' [' → logprob: -3.837160348892212
    7. '[a' → logprob: -4.337160587310791
    8. '[max' → logprob: -4.587160587310791
    9. '[get' → logprob: -4.712160587310791
    10. ' max' → logprob: -5.087160587310791

Token 137: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0021990251261740923
    2. 'max' → logprob: -6.127199172973633
    3. '+' → logprob: -12.627199172973633
    4. 'Max' → logprob: -12.627199172973633
    5. '_' → logprob: -13.127199172973633
    6. '_MAX' → logprob: -13.627199172973633
    7. ')' → logprob: -14.127199172973633
    8. '[' → logprob: -14.252199172973633
    9. '[max' → logprob: -14.752199172973633
    10. '[j' → logprob: -15.002199172973633

Token 138: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1389169543981552
    2. '<|end|>' → logprob: -2.1389169692993164
    3. '+' → logprob: -5.263916969299316
    4. ']' → logprob: -6.888916969299316
    5. '#' → logprob: -7.013916969299316
    6. '(' → logprob: -7.138916969299316
    7. '*' → logprob: -7.513916969299316
    8. '
' → logprob: -7.763916969299316
    9. '<|end|>' → logprob: -7.763916969299316
    10. '>' → logprob: -7.763916969299316

Token 139: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' mix' (ID: 9762)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2405536025762558
    2. '<|end|>' → logprob: -1.740553617477417
    3. '#' → logprob: -4.240553379058838
    4. '+' → logprob: -4.990553379058838
    5. '(' → logprob: -5.365553379058838
    6. ']' → logprob: -6.240553379058838
    7. '<|end|>' → logprob: -6.490553379058838
    8. ' ' → logprob: -6.490553379058838
    9. '*' → logprob: -6.615553379058838
    10. '}' → logprob: -6.740553379058838

Token 141: ' old' (ID: 2890)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20548388361930847
    2. '<|end|>' → logprob: -3.080483913421631
    3. '#' → logprob: -3.580483913421631
    4. ')' → logprob: -3.580483913421631
    5. ' ' → logprob: -4.455483913421631
    6. ' =' → logprob: -4.705483913421631
    7. ':' → logprob: -4.955483913421631
    8. ' def' → logprob: -5.080483913421631
    9. '(' → logprob: -5.080483913421631
    10. '*' → logprob: -5.205483913421631

Token 142: '-style' (ID: 20938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1103814840316772
    2. '<|end|>' → logprob: -1.6103814840316772
    3. '+' → logprob: -2.485381603240967
    4. 'and' → logprob: -2.610381603240967
    5. '#' → logprob: -2.610381603240967
    6. ')' → logprob: -2.985381603240967
    7. ' and' → logprob: -3.485381603240967
    8. '<|end|>' → logprob: -3.735381603240967
    9. 'get' → logprob: -3.860381603240967
    10. 'with' → logprob: -4.235381603240967

Token 143: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9442305564880371
    2. ' i' → logprob: -0.9442305564880371
    3. ' loop' → logprob: -2.194230556488037
    4. ' j' → logprob: -3.069230556488037
    5. ' ' → logprob: -4.819230556488037
    6. 'loop' → logprob: -5.069230556488037
    7. ' loops' → logprob: -5.194230556488037
    8. '...' → logprob: -5.444230556488037
    9. ' for' → logprob: -5.444230556488037
    10. '-loop' → logprob: -5.569230556488037

Token 145: ' lambda' (ID: 27871)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.42627421021461487
    2. 'new' → logprob: -1.4262741804122925
    3. '#' → logprob: -2.926274299621582
    4. ' while' → logprob: -4.301274299621582
    5. 'def' → logprob: -4.426274299621582
    6. ' list' → logprob: -5.426274299621582
    7. 'while' → logprob: -5.551274299621582
    8. 'old' → logprob: -5.801274299621582
    9. ' for' → logprob: -6.176274299621582
    10. ' #' → logprob: -6.176274299621582

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01998734660446644
    2. 's' → logprob: -4.8949875831604
    3. ' and' → logprob: -5.1449875831604
    4. ' ,' → logprob: -6.5199875831604
    5. 'and' → logprob: -7.0199875831604
    6. 'for' → logprob: -7.1449875831604
    7. ',
' → logprob: -7.5199875831604
    8. ' for' → logprob: -7.7699875831604
    9. 'def' → logprob: -7.8949875831604
    10. 'with' → logprob: -8.144987106323242

Token 147: ' list' (ID: 1562)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.261287808418274
    2. ' list' → logprob: -1.886287808418274
    3. 'map' → logprob: -2.3862876892089844
    4. 'def' → logprob: -2.5112876892089844
    5. '#' → logprob: -2.7612876892089844
    6. 'list' → logprob: -3.0112876892089844
    7. 'and' → logprob: -3.0112876892089844
    8. ' map' → logprob: -3.0112876892089844
    9. 'filter' → logprob: -4.011287689208984
    10. ' for' → logprob: -4.136287689208984

Token 148: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' ' (ID: 220)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3999974727630615
    2. '#' → logprob: -2.0249974727630615
    3. 'and' → logprob: -2.0249974727630615
    4. ',' → logprob: -2.2749974727630615
    5. 'range' → logprob: -2.6499974727630615
    6. 'max' → logprob: -3.0249974727630615
    7. 'def' → logprob: -3.1499974727630615
    8. ')' → logprob: -3.2749974727630615
    9. 'filter' → logprob: -3.6499974727630615
    10. '<|end|>' → logprob: -3.7749974727630615

Token 150: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3217483758926392
    2. 'max' → logprob: -1.5717483758926392
    3. 'map' → logprob: -1.6967483758926392
    4. '#' → logprob: -2.5717482566833496
    5. 'dict' → logprob: -2.5717482566833496
    6. 'and' → logprob: -2.6967482566833496
    7. 'filter' → logprob: -3.1967482566833496
    8. 'range' → logprob: -4.44674825668335
    9. 'set' → logprob: -4.82174825668335
    10. 'com' → logprob: -4.82174825668335

Token 151: '-l' (ID: 2887)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'iners' (ID: 64245)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.23238743841648102
    2. 'ine' → logprob: -2.2323875427246094
    3. 'ambda' → logprob: -2.4823875427246094
    4. ')' → logprob: -5.732387542724609
    5. ']' → logprob: -5.857387542724609
    6. '[' → logprob: -6.607387542724609
    7. '   ' → logprob: -6.607387542724609
    8. 'ength' → logprob: -6.607387542724609
    9. ')]' → logprob: -7.107387542724609
    10. 'amb' → logprob: -7.482387542724609

Token 153: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3003946542739868
    2. '<|end|>' → logprob: -1.4253946542739868
    3. ')' → logprob: -2.1753945350646973
    4. 'def' → logprob: -2.3003945350646973
    5. ' and' → logprob: -3.0503945350646973
    6. ',' → logprob: -3.1753945350646973
    7. 'and' → logprob: -3.5503945350646973
    8. ' ' → logprob: -3.8003945350646973
    9. 'for' → logprob: -4.175394535064697
    10. ']' → logprob: -4.300394535064697

Token 155: ' normal' (ID: 6078)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3543209433555603
    2. '#' → logprob: -1.729321002960205
    3. 'def' → logprob: -3.229321002960205
    4. 'dict' → logprob: -4.354321002960205
    5. 'map' → logprob: -4.854321002960205
    6. 'f' → logprob: -5.104321002960205
    7. 'assert' → logprob: -5.229321002960205
    8. 'get' → logprob: -5.229321002960205
    9. 'if' → logprob: -5.354321002960205
    10. 'functional' → logprob: -5.479321002960205

Token 156: ' func' (ID: 4660)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6483768224716187
    2. '<|end|>' → logprob: -0.8983768224716187
    3. 'def' → logprob: -3.398376941680908
    4. ']' → logprob: -4.523376941680908
    5. '<|end|>' → logprob: -5.023376941680908
    6. '#' → logprob: -5.148376941680908
    7. 'j' → logprob: -6.523376941680908
    8. 's' → logprob: -6.523376941680908
    9. '(' → logprob: -6.523376941680908
    10. ',' → logprob: -6.773376941680908

Token 158: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2964990437030792
    2. '<|end|>' → logprob: -1.7964990139007568
    3. ']' → logprob: -3.796499013900757
    4. 'def' → logprob: -3.921499013900757
    5. '#' → logprob: -4.171499252319336
    6. '<|end|>' → logprob: -5.296499252319336
    7. '(' → logprob: -5.671499252319336
    8. ':' → logprob: -5.671499252319336
    9. '+' → logprob: -6.171499252319336
    10. '[' → logprob: -6.296499252319336

Token 159: ' ___' (ID: 14092)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8462960720062256
    2. ' a' → logprob: -0.9712960720062256
    3. ' x' → logprob: -2.5962960720062256
    4. ' t' → logprob: -3.4712960720062256
    5. 'a' → logprob: -3.8462960720062256
    6. ' n' → logprob: -4.221296310424805
    7. 'i' → logprob: -4.221296310424805
    8. ' _' → logprob: -4.846296310424805
    9. ' j' → logprob: -5.221296310424805
    10. ' k' → logprob: -5.346296310424805

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17062926292419434
    2. 'in' → logprob: -2.5456292629241943
    3. '_' → logprob: -2.7956292629241943
    4. ' ' → logprob: -4.795629501342773
    5. ' _' → logprob: -5.295629501342773
    6. ' i' → logprob: -6.045629501342773
    7. 'i' → logprob: -6.795629501342773
    8. '  ' → logprob: -9.170629501342773
    9. '___' → logprob: -9.295629501342773
    10. '_in' → logprob: -9.545629501342773

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31475746631622314
    2. ' range' → logprob: -1.3147574663162231
    3. '[' → logprob: -6.564757347106934
    4. 'get' → logprob: -10.939757347106934
    5. ' [' → logprob: -10.939757347106934
    6. 'm' → logprob: -11.564757347106934
    7. '["' → logprob: -11.814757347106934
    8. ' ' → logprob: -12.314757347106934
    9. '(range' → logprob: -12.564757347106934
    10. '['' → logprob: -12.689757347106934

Token 162: '(eval' (ID: 126973)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.4121114822482923e-06
    2. '(
' → logprob: -13.500003814697266
    3. '10' → logprob: -13.750003814697266
    4. ' (' → logprob: -15.375003814697266
    5. '3' → logprob: -16.375003814697266
    6. '20' → logprob: -16.500003814697266
    7. '5' → logprob: -16.500003814697266
    8. '((' → logprob: -16.875003814697266
    9. '6' → logprob: -17.000003814697266
    10. '30' → logprob: -17.000003814697266

Token 163: '(input' (ID: 10054)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6706594228744507
    2. '(input' → logprob: -1.0456594228744507
    3. '(' → logprob: -2.4206595420837402
    4. '("("' → logprob: -3.2956595420837402
    5. '("' → logprob: -4.67065954208374
    6. 'input' → logprob: -7.42065954208374
    7. '('(' → logprob: -7.42065954208374
    8. '("(' → logprob: -8.420659065246582
    9. '("""' → logprob: -9.045659065246582
    10. '(
' → logprob: -10.045659065246582

Token 164: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7203139662742615
    2. '('' → logprob: -1.2203140258789062
    3. '("' → logprob: -2.4703140258789062
    4. '("("' → logprob: -2.7203140258789062
    5. '()' → logprob: -2.9703140258789062
    6. '(""))' → logprob: -5.470314025878906
    7. '(' → logprob: -5.470314025878906
    8. '().' → logprob: -6.595314025878906
    9. '("(' → logprob: -7.095314025878906
    10. '('(' → logprob: -7.220314025878906

Token 165: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09153024852275848
    2. ':' → logprob: -2.4665303230285645
    3. '():
' → logprob: -6.5915303230285645
    4. '(":' → logprob: -7.4665303230285645
    5. ' :' → logprob: -8.466529846191406
    6. '(' → logprob: -8.966529846191406
    7. ' ():' → logprob: -9.091529846191406
    8. ':
' → logprob: -9.341529846191406
    9. '(':' → logprob: -9.966529846191406
    10. '(:' → logprob: -10.341529846191406

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005591949447989464
    2. ' print' → logprob: -6.630591869354248
    3. ' input' → logprob: -7.130591869354248
    4. ' s' → logprob: -7.380591869354248
    5. 'a' → logprob: -7.630591869354248
    6. ' n' → logprob: -7.755591869354248
    7. ' a' → logprob: -7.880591869354248
    8. ' x' → logprob: -8.130592346191406
    9. 'print' → logprob: -8.505592346191406
    10. '    
' → logprob: -9.005592346191406

Token 167: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02486267127096653
    2. ' a' → logprob: -3.774862766265869
    3. '   ' → logprob: -7.649862766265869
    4. 'l' (adapté à ' l') → logprob: -8.399862289428711
    5. 'print' → logprob: -8.399862289428711
    6. 'n' → logprob: -8.774862289428711
    7. 'x' → logprob: -9.524862289428711
    8. 'A' → logprob: -9.649862289428711
    9. 's' → logprob: -9.774862289428711
    10. 'data' → logprob: -10.399862289428711

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5083159804344177
    2. '=' → logprob: -1.0083160400390625
    3. '=input' → logprob: -4.0083160400390625
    4. 'ine' → logprob: -5.1333160400390625
    5. 'ist' → logprob: -5.7583160400390625
    6. '=line' → logprob: -6.8833160400390625
    7. '=list' → logprob: -7.0083160400390625
    8. ',' → logprob: -7.1333160400390625
    9. '   ' → logprob: -7.1333160400390625
    10. '=int' → logprob: -7.2583160400390625

Token 169: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0048582423478364944
    2. ' list' → logprob: -5.754858016967773
    3. 'input' → logprob: -6.754858016967773
    4. '[list' → logprob: -7.879858016967773
    5. '[input' → logprob: -10.004858016967773
    6. 'eval' → logprob: -10.129858016967773
    7. '[' → logprob: -10.254858016967773
    8. '=list' → logprob: -12.379858016967773
    9. '[*' → logprob: -12.629858016967773
    10. ' input' → logprob: -12.879858016967773

Token 170: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00016039233014453202
    2. '(' → logprob: -8.750160217285156
    3. 'map' → logprob: -14.000160217285156
    4. '(eval' → logprob: -14.125160217285156
    5. '(int' → logprob: -15.875160217285156
    6. '()' → logprob: -16.250160217285156
    7. '(input' → logprob: -16.500160217285156
    8. '(
' → logprob: -16.875160217285156
    9. ' map' → logprob: -18.625160217285156
    10. '(m' → logprob: -18.875160217285156

Token 171: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004975094925612211
    2. '(' → logprob: -8.125497817993164
    3. 'int' → logprob: -8.625497817993164
    4. '(str' → logprob: -11.250497817993164
    5. '(eval' → logprob: -12.375497817993164
    6. '(input' → logprob: -13.875497817993164
    7. '```' → logprob: -14.250497817993164
    8. ',int' → logprob: -14.375497817993164
    9. ' int' → logprob: -14.625497817993164
    10. '(lambda' → logprob: -14.750497817993164

Token 172: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2650684416294098
    2. ',' → logprob: -1.8900684118270874
    3. '(input' → logprob: -2.515068531036377
    4. 'input' → logprob: -7.265068531036377
    5. '(' → logprob: -8.890068054199219
    6. ' ,' → logprob: -10.015068054199219
    7. ' input' → logprob: -11.015068054199219
    8. ' (' → logprob: -11.140068054199219
    9. '   ' → logprob: -12.390068054199219
    10. ',(' → logprob: -13.265068054199219

Token 173: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005556552205234766
    2. ' input' → logprob: -7.500555515289307
    3. '(input' → logprob: -13.375555992126465
    4. '   ' → logprob: -14.125555992126465
    5. ',input' → logprob: -14.875555992126465
    6. '<input' → logprob: -18.37555503845215
    7. '	input' → logprob: -18.50055503845215
    8. '_input' → logprob: -18.62555503845215
    9. '=input' → logprob: -18.75055503845215
    10. '[input' → logprob: -18.87555503845215

Token 174: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.054500666621607e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -16.500003814697266
    4. '(' → logprob: -18.625003814697266
    5. '()
' → logprob: -19.375003814697266
    6. '.split' → logprob: -19.375003814697266
    7. 'split' → logprob: -20.250003814697266
    8. '   ' → logprob: -21.000003814697266
    9. ' ' → logprob: -21.375003814697266
    10. '()))' → logprob: -21.500003814697266

Token 175: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.038049064576625824
    2. 'strip' → logprob: -3.2880489826202393
    3. 'rstrip' → logprob: -12.28804874420166
    4. ' split' → logprob: -12.78804874420166
    5. ' strip' → logprob: -16.163049697875977
    6. '(split' → logprob: -17.913049697875977
    7. 'spl' → logprob: -17.913049697875977
    8. '().' → logprob: -18.413049697875977
    9. 'replace' → logprob: -18.413049697875977
    10. 's' → logprob: -18.663049697875977

Token 176: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005769161507487297
    2. '()' → logprob: -5.6307692527771
    3. '()))
' → logprob: -6.7557692527771
    4. '())' → logprob: -7.3807692527771
    5. '))' → logprob: -8.255768775939941
    6. '())))' → logprob: -9.755768775939941
    7. '()));' → logprob: -10.630768775939941
    8. '(' → logprob: -10.630768775939941
    9. '()))

' → logprob: -12.005768775939941
    10. '().' → logprob: -13.130768775939941

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02356526255607605
    2. ')' → logprob: -3.8985652923583984
    3. '
' → logprob: -7.148565292358398
    4. '<|end|>' → logprob: -7.273565292358398
    5. ')
' → logprob: -7.523565292358398
    6. '    
' → logprob: -7.648565292358398
    7. 'def' → logprob: -8.898565292358398
    8. 'print' → logprob: -9.023565292358398
    9. 'a' → logprob: -10.023565292358398
    10. ',' → logprob: -10.398565292358398

Token 178: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6061933040618896
    2. 'a' (adapté à ' a') → logprob: -1.2311933040618896
    3. '   ' → logprob: -2.6061933040618896
    4. ' print' → logprob: -2.8561933040618896
    5. ' a' → logprob: -4.231193542480469
    6. 'r' → logprob: -4.856193542480469
    7. ')' → logprob: -6.106193542480469
    8. 'x' → logprob: -6.606193542480469
    9. ' r' → logprob: -7.231193542480469
    10. 'j' → logprob: -7.356193542480469

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011157822795212269
    2. ',b' → logprob: -4.511157989501953
    3. '=' → logprob: -9.886157989501953
    4. 'b' → logprob: -10.386157989501953
    5. ' =' → logprob: -11.261157989501953
    6. ',a' → logprob: -11.886157989501953
    7. ',l' → logprob: -13.011157989501953
    8. ' ,' → logprob: -13.011157989501953
    9. ' b' → logprob: -14.261157989501953
    10. '[' → logprob: -14.386157989501953

Token 180: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002476724097505212
    2. ' b' → logprob: -6.002476692199707
    3. '*b' → logprob: -14.627476692199707
    4. '   ' → logprob: -14.752476692199707
    5. '=' → logprob: -16.627477645874023
    6. ' ' → logprob: -16.877477645874023
    7. '  ' → logprob: -17.502477645874023
    8. ',b' → logprob: -17.627477645874023
    9. '*' → logprob: -17.877477645874023
    10. ' =' → logprob: -18.502477645874023

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.698698704596609e-05
    2. '=' → logprob: -9.625097274780273
    3. ',c' → logprob: -11.250097274780273
    4. ' ,' → logprob: -11.625097274780273
    5. ' =' → logprob: -12.000097274780273
    6. 'c' → logprob: -13.125097274780273
    7. ',b' → logprob: -14.750097274780273
    8. '<|end|>' → logprob: -15.875097274780273
    9. 'a' → logprob: -17.000097274780273
    10. '   ' → logprob: -17.625097274780273

Token 182: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004891689168289304
    2. ' c' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.375489234924316
    4. '=' → logprob: -15.000489234924316
    5. ' =' → logprob: -16.87548828125
    6. '=c' → logprob: -17.00048828125
    7. '*c' → logprob: -17.00048828125
    8. '	c' → logprob: -17.25048828125
    9. ' ' → logprob: -17.37548828125
    10. '  ' → logprob: -17.62548828125

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009262301027774811
    2. '=' → logprob: -7.3759260177612305
    3. ',d' → logprob: -8.50092601776123
    4. ' =' → logprob: -9.50092601776123
    5. ' ,' → logprob: -11.25092601776123
    6. 'd' → logprob: -11.87592601776123
    7. '=d' → logprob: -14.00092601776123
    8. '   ' → logprob: -15.25092601776123
    9. ' d' → logprob: -15.62592601776123
    10. '_,' → logprob: -16.625926971435547

Token 184: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013265528250485659
    2. ' d' → logprob: -6.626326560974121
    3. '=' → logprob: -15.376326560974121
    4. '   ' → logprob: -16.126325607299805
    5. ' =' → logprob: -16.626325607299805
    6. 'e' → logprob: -16.751325607299805
    7. ' ' → logprob: -17.251325607299805
    8. ',' → logprob: -17.626325607299805
    9. '*' → logprob: -17.876325607299805
    10. '  ' → logprob: -17.876325607299805

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020600629970431328
    2. ' =' → logprob: -3.8956005573272705
    3. ',' → logprob: -9.770600318908691
    4. '=a' → logprob: -14.270600318908691
    5. '<|end|>' → logprob: -15.895600318908691
    6. '=l' → logprob: -16.020601272583008
    7. '=input' → logprob: -16.520601272583008
    8. '=list' → logprob: -16.770601272583008
    9. '=line' → logprob: -16.895601272583008
    10. '=
' → logprob: -17.020601272583008

Token 186: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014169743284583092
    2. ' l' → logprob: -4.264169692993164
    3. '*l' → logprob: -12.389169692993164
    4. '   ' → logprob: -13.889169692993164
    5. '	l' → logprob: -15.014169692993164
    6. ' ' → logprob: -15.264169692993164
    7. '*' → logprob: -15.514169692993164
    8. '[l' → logprob: -16.264169692993164
    9. 'map' → logprob: -16.389169692993164
    10. ' *' → logprob: -16.639169692993164

Token 187: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006494035013020039
    2. ' l' → logprob: -5.131494045257568
    3. '*l' → logprob: -7.756494045257568
    4. '   ' → logprob: -9.50649356842041
    5. ')' → logprob: -10.13149356842041
    6. ' *' → logprob: -11.63149356842041
    7. '*' → logprob: -12.88149356842041
    8. '	l' → logprob: -13.00649356842041
    9. '
' → logprob: -13.13149356842041
    10. 'map' → logprob: -13.50649356842041

Token 188: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012570513412356377
    2. '[:' → logprob: -4.637570381164551
    3. ')' → logprob: -5.887570381164551
    4. '   ' → logprob: -11.13757038116455
    5. '[:-' → logprob: -11.26257038116455
    6. '[i' → logprob: -13.13757038116455
    7. '
' → logprob: -13.88757038116455
    8. '[-' → logprob: -13.88757038116455
    9. '[:]' → logprob: -14.01257038116455
    10. '0' → logprob: -14.26257038116455

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -12.125019073486328
    3. '1' → logprob: -12.625019073486328
    4. '3' → logprob: -12.750019073486328
    5. '2' → logprob: -13.125019073486328
    6. '   ' → logprob: -13.250019073486328
    7. '[' → logprob: -14.000019073486328
    8. ':' → logprob: -14.125019073486328
    9. '4' → logprob: -14.562519073486328
    10. '
' → logprob: -15.500019073486328

Token 190: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0007634070352651179
    2. ':' → logprob: -8.250762939453125
    3. ']' → logprob: -8.625762939453125
    4. ':],' → logprob: -9.250762939453125
    5. ' ],' → logprob: -9.375762939453125
    6. '],
' → logprob: -10.125762939453125
    7. ']),' → logprob: -10.750762939453125
    8. ':l' → logprob: -11.125762939453125
    9. '-' → logprob: -11.250762939453125
    10. ' :' → logprob: -11.875762939453125

Token 191: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012551332823932171
    2. ' l' → logprob: -4.387551307678223
    3. '   ' → logprob: -11.137551307678223
    4. '    ' → logprob: -11.387551307678223
    5. ' ' → logprob: -12.637551307678223
    6. '       ' → logprob: -13.512551307678223
    7. '  ' → logprob: -13.512551307678223
    8. '0' → logprob: -13.512551307678223
    9. '     ' → logprob: -13.887551307678223
    10. '        ' → logprob: -13.887551307678223

Token 192: '[' (ID: 58)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.1863500028848648
    2. '[' → logprob: -2.686350107192993
    3. '1' → logprob: -2.936350107192993
    4. '),' → logprob: -3.561350107192993
    5. ',' → logprob: -4.561349868774414
    6. '+' → logprob: -4.936349868774414
    7. '-' → logprob: -6.686349868774414
    8. ']),' → logprob: -8.061349868774414
    9. '   ' → logprob: -8.311349868774414
    10. ' ,' → logprob: -8.436349868774414

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006812811829149723
    2. '2' → logprob: -5.131813049316406
    3. '3' → logprob: -7.381813049316406
    4. ' ' → logprob: -9.006813049316406
    5. '4' → logprob: -10.131813049316406
    6. '-' → logprob: -10.631813049316406
    7. '   ' → logprob: -10.756813049316406
    8. '0' → logprob: -10.944313049316406
    9. '
' → logprob: -11.944313049316406
    10. '5' → logprob: -12.506813049316406

Token 194: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019297054968774319
    2. ' ,' → logprob: -6.626929759979248
    3. '),' → logprob: -7.751929759979248
    4. '],' → logprob: -8.87692928314209
    5. ',l' → logprob: -11.37692928314209
    6. '   ' → logprob: -11.75192928314209
    7. 'l' → logprob: -12.12692928314209
    8. ' ' → logprob: -13.75192928314209
    9. '  ' → logprob: -14.00192928314209
    10. '-' → logprob: -14.25192928314209

Token 195: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014204643666744232
    2. ' l' → logprob: -4.264204502105713
    3. '   ' → logprob: -10.639204978942871
    4. '    ' → logprob: -11.889204978942871
    5. ' ' → logprob: -12.889204978942871
    6. '       ' → logprob: -13.389204978942871
    7. '  ' → logprob: -13.514204978942871
    8. '	l' → logprob: -13.764204978942871
    9. '     ' → logprob: -14.139204978942871
    10. ')' → logprob: -14.514204978942871

Token 196: '[' (ID: 58)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00822742935270071
    2. '2' → logprob: -5.258227348327637
    3. '[' → logprob: -6.133227348327637
    4. '-' → logprob: -8.008227348327637
    5. ',' → logprob: -8.633227348327637
    6. '),' → logprob: -8.883227348327637
    7. '+' → logprob: -10.133227348327637
    8. ']),' → logprob: -10.508227348327637
    9. ']' → logprob: -10.633227348327637
    10. '],
' → logprob: -11.008227348327637

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005576779949478805
    2. '],' → logprob: -8.000557899475098
    3. '0' → logprob: -9.250557899475098
    4. '3' → logprob: -10.000557899475098
    5. '   ' → logprob: -10.375557899475098
    6. ' ' → logprob: -11.000557899475098
    7. '1' → logprob: -12.000557899475098
    8. '),' → logprob: -12.500557899475098
    9. '-' → logprob: -12.750557899475098
    10. ']),' → logprob: -12.875557899475098

Token 198: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025026971474289894
    2. '],' → logprob: -3.77502703666687
    3. '),' → logprob: -6.650026798248291
    4. ' ,' → logprob: -8.02502727508545
    5. '])' → logprob: -10.02502727508545
    6. ']' → logprob: -10.02502727508545
    7. ')' → logprob: -10.77502727508545
    8. ',
' → logprob: -11.02502727508545
    9. '   ' → logprob: -11.40002727508545
    10. ',l' → logprob: -12.65002727508545

Token 199: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018150178715586662
    2. ' l' → logprob: -4.018150329589844
    3. ')' → logprob: -16.018150329589844
    4. '   ' → logprob: -16.643150329589844
    5. ' ' → logprob: -16.893150329589844
    6. '	l' → logprob: -16.893150329589844
    7. '    ' → logprob: -17.643150329589844
    8. ' ' → logprob: -17.768150329589844
    9. '*l' → logprob: -19.393150329589844
    10. '  ' → logprob: -19.518150329589844

Token 200: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4591926336288452
    2. '3' → logprob: -2.0841927528381348
    3. '[' → logprob: -2.5841927528381348
    4. '])' → logprob: -2.5841927528381348
    5. '],' → logprob: -2.9591927528381348
    6. '),' → logprob: -3.7091927528381348
    7. ')' → logprob: -4.209192752838135
    8. ':' → logprob: -7.834192752838135
    9. '-' → logprob: -7.959192752838135
    10. ']' → logprob: -8.709192276000977

Token 201: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.4881879400927573e-05
    2. '])' → logprob: -10.750035285949707
    3. ' ' → logprob: -11.750035285949707
    4. ')' → logprob: -12.750035285949707
    5. '),' → logprob: -13.875035285949707
    6. '],' → logprob: -14.375035285949707
    7. '-' → logprob: -15.875035285949707
    8. ',' → logprob: -15.875035285949707
    9. '2' → logprob: -15.875035285949707
    10. '])
' → logprob: -16.12503433227539

Token 202: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0796518474817276
    2. ',' → logprob: -2.5796518325805664
    3. '),' → logprob: -7.829651832580566
    4. '   ' → logprob: -9.079651832580566
    5. ',)' → logprob: -9.204651832580566
    6. '))' → logprob: -9.579651832580566
    7. ' )' → logprob: -10.454651832580566
    8. ')
' → logprob: -11.079651832580566
    9. ' ,' → logprob: -11.954651832580566
    10. ',
' → logprob: -12.079651832580566

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3009188771247864
    2. 'print' → logprob: -1.4259188175201416
    3. '<|end|>' → logprob: -4.050919055938721
    4. ')' → logprob: -7.300919055938721
    5. '
' → logprob: -7.425919055938721
    6. ' print' → logprob: -7.925919055938721
    7. '<|end|>' → logprob: -8.800918579101562
    8. '```' → logprob: -9.050918579101562
    9. '    
' → logprob: -9.550918579101562
    10. ',' → logprob: -10.425918579101562

Token 204: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25209495425224304
    2. '   ' → logprob: -1.5020949840545654
    3. ' print' → logprob: -9.002095222473145
    4. 'j' → logprob: -11.252095222473145
    5. 'result' → logprob: -11.252095222473145
    6. '    
' → logprob: -12.502095222473145
    7. '```' → logprob: -12.502095222473145
    8. '	print' → logprob: -12.877095222473145
    9. ')' → logprob: -13.127095222473145
    10. 'r' → logprob: -13.752095222473145

Token 205: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018152983859181404
    2. '=' → logprob: -4.018153190612793
    3. '<|end|>' → logprob: -13.893153190612793
    4. ')' → logprob: -14.268153190612793
    5. ' ' → logprob: -15.268153190612793
    6. ' =)' → logprob: -15.518153190612793
    7. '=int' → logprob: -15.643153190612793
    8. ',' → logprob: -16.018152236938477
    9. ' =
' → logprob: -16.018152236938477
    10. '<|end|>' → logprob: -16.018152236938477

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484731912612915
    2. ' =' → logprob: -1.2234731912612915
    3. ')' → logprob: -11.22347354888916
    4. '=int' → logprob: -12.84847354888916
    5. '=res' → logprob: -12.84847354888916
    6. '=m' → logprob: -13.09847354888916
    7. ')=' → logprob: -13.72347354888916
    8. '=max' → logprob: -13.97347354888916
    9. ',' → logprob: -14.34847354888916
    10. '=get' → logprob: -14.47347354888916

Token 207: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.018191499635577202
    2. ' m' → logprob: -4.018191337585449
    3. 'max' → logprob: -11.14319133758545
    4. '   ' → logprob: -11.64319133758545
    5. 'str' → logprob: -12.26819133758545
    6. '0' → logprob: -12.51819133758545
    7. ' max' → logprob: -12.51819133758545
    8. ' ' → logprob: -13.26819133758545
    9. 'abs' → logprob: -14.01819133758545
    10. ' str' → logprob: -14.58069133758545

Token 208: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.054500666621607e-06
    2. 'a' → logprob: -13.12500286102295
    3. '(' → logprob: -14.12500286102295
    4. '(
' → logprob: -15.62500286102295
    5. ' (' → logprob: -17.625003814697266
    6. '(abs' → logprob: -17.750003814697266
    7. '((' → logprob: -19.000003814697266
    8. '
' → logprob: -19.375003814697266
    9. '```' → logprob: -19.500003814697266
    10. '(A' → logprob: -20.000003814697266

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021395552903413773
    2. ',b' → logprob: -6.377139568328857
    3. ' ,' → logprob: -7.752139568328857
    4. 'b' → logprob: -12.3771390914917
    5. ',
' → logprob: -13.8771390914917
    6. ',d' → logprob: -14.1271390914917
    7. '   ' → logprob: -15.2521390914917
    8. ',m' → logprob: -15.5021390914917
    9. ' b' → logprob: -15.5021390914917
    10. ',c' → logprob: -15.6271390914917

Token 210: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024774393532425165
    2. ' b' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.502477645874023
    4. ' ' → logprob: -15.127477645874023
    5. '  ' → logprob: -16.252477645874023
    6. '    ' → logprob: -16.502477645874023
    7. '	b' → logprob: -17.252477645874023
    8. 'a' → logprob: -17.502477645874023
    9. ',b' → logprob: -18.127477645874023
    10. 'c' → logprob: -18.252477645874023

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000919200771022588
    2. ',c' → logprob: -7.250919342041016
    3. ' ,' → logprob: -8.875919342041016
    4. 'c' → logprob: -9.625919342041016
    5. ',
' → logprob: -13.625919342041016
    6. ' c' → logprob: -14.625919342041016
    7. 'a' → logprob: -14.750919342041016
    8. ')' → logprob: -15.250919342041016
    9. 'm' → logprob: -15.375919342041016
    10. '```' → logprob: -15.500919342041016

Token 212: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0052342405542731285
    2. ' c' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.380233764648438
    4. ' ' → logprob: -16.005233764648438
    5. '	c' → logprob: -17.130233764648438
    6. '  ' → logprob: -17.130233764648438
    7. ')c' → logprob: -17.380233764648438
    8. '    ' → logprob: -19.255233764648438
    9. '
' → logprob: -19.880233764648438
    10. ',c' → logprob: -20.630233764648438

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001450187264708802
    2. ',d' → logprob: -9.125144958496094
    3. ' ,' → logprob: -10.625144958496094
    4. 'd' → logprob: -11.375144958496094
    5. '```' → logprob: -16.500144958496094
    6. '   ' → logprob: -16.500144958496094
    7. ',
' → logprob: -17.000144958496094
    8. 'a' → logprob: -17.750144958496094
    9. ')' → logprob: -17.875144958496094
    10. ' ' → logprob: -18.625144958496094

Token 214: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004078401252627373
    2. ' d' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.129077911376953
    4. '   ' → logprob: -18.629077911376953
    5. '  ' → logprob: -18.879077911376953
    6. '	d' → logprob: -20.004077911376953
    7. ')d' → logprob: -20.504077911376953
    8. 'a' → logprob: -22.629077911376953
    9. '_d' → logprob: -22.879077911376953
    10. '<|end|>' → logprob: -23.004077911376953

Token 215: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20149636268615723
    2. ')' → logprob: -1.7014963626861572
    3. '   ' → logprob: -9.951496124267578
    4. ')
' → logprob: -10.326496124267578
    5. ')

' → logprob: -13.201496124267578
    6. 'print' → logprob: -15.076496124267578
    7. ' )
' → logprob: -16.076496124267578
    8. 'def' → logprob: -16.451496124267578
    9. ')+' → logprob: -16.451496124267578
    10. ')#' → logprob: -16.701496124267578

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012794039212167263
    2. '
' → logprob: -4.512794017791748
    3. 'print' → logprob: -6.637794017791748
    4. '<|end|>' → logprob: -8.262794494628906
    5. '    
' → logprob: -9.012794494628906
    6. '
' → logprob: -11.262794494628906
    7. ' print' → logprob: -11.637794494628906
    8. '  
' → logprob: -11.887794494628906
    9. ')' → logprob: -12.012794494628906
    10. '```' → logprob: -12.387794494628906

Token 217: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38698598742485046
    2. 'print' → logprob: -1.1369860172271729
    3. ' print' → logprob: -9.761985778808594
    4. '
' → logprob: -10.511985778808594
    5. 'res' (adapté à ' res') → logprob: -10.886985778808594
    6. '    
' → logprob: -12.761985778808594
    7. '	print' → logprob: -12.886985778808594
    8. '```' → logprob: -13.261985778808594
    9. 'if' → logprob: -13.511985778808594
    10. 'for' → logprob: -13.761985778808594

Token 218: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.675625741481781
    2. '2' → logprob: -0.925625741481781
    3. ' =' → logprob: -2.800625801086426
    4. '=' → logprob: -4.175625801086426
    5. '_' → logprob: -4.300625801086426
    6. 'print' → logprob: -6.175625801086426
    7. 's' → logprob: -7.175625801086426
    8. 'ult' → logprob: -7.675625801086426
    9. '_=' → logprob: -8.175625801086426
    10. 'ault' → logprob: -8.550625801086426

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811873257160187
    2. '=' → logprob: -1.4061872959136963
    3. '=m' → logprob: -10.781187057495117
    4. ',' → logprob: -12.031187057495117
    5. '=int' → logprob: -12.906187057495117
    6. '=res' → logprob: -13.406187057495117
    7. ' =
' → logprob: -14.281187057495117
    8. ' ' → logprob: -14.406187057495117
    9. '=f' → logprob: -14.531187057495117
    10. '<|end|>' → logprob: -14.656187057495117

Token 220: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2987987995147705
    2. ' m' → logprob: -1.6737987995147705
    3. 'max' → logprob: -3.5487987995147705
    4. 'res' → logprob: -4.423798561096191
    5. ' max' → logprob: -5.048798561096191
    6. ' res' → logprob: -5.048798561096191
    7. 'abs' → logprob: -5.923798561096191
    8. 'sum' → logprob: -5.923798561096191
    9. '0' → logprob: -6.548798561096191
    10. 'str' → logprob: -6.673798561096191

Token 221: '(b' (ID: 3229)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.14058002829551697
    2. '(d' → logprob: -2.76557993888855
    3. '(b' → logprob: -2.89057993888855
    4. '(a' → logprob: -4.390580177307129
    5. '(' → logprob: -8.390580177307129
    6. ' (' → logprob: -11.640580177307129
    7. '(l' → logprob: -12.015580177307129
    8. '((' → logprob: -12.265580177307129
    9. '(res' → logprob: -12.890580177307129
    10. '(m' → logprob: -13.015580177307129

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007612687186338007
    2. ' ,' → logprob: -7.375761032104492
    3. ',c' → logprob: -9.125761032104492
    4. 'c' → logprob: -10.875761032104492
    5. ' c' → logprob: -13.250761032104492
    6. 'a' → logprob: -13.375761032104492
    7. '   ' → logprob: -14.375761032104492
    8. ',a' → logprob: -14.500761032104492
    9. ',d' → logprob: -14.625761032104492
    10. ',
' → logprob: -14.750761032104492

Token 223: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023881573230028152
    2. ' c' → logprob: -3.773881673812866
    3. 'a' → logprob: -7.398881435394287
    4. ' a' → logprob: -11.398881912231445
    5. ' ' → logprob: -12.273881912231445
    6. 'd' → logprob: -12.398881912231445
    7. '   ' → logprob: -13.273881912231445
    8. ',' → logprob: -14.398881912231445
    9. '  ' → logprob: -14.773881912231445
    10. ',c' → logprob: -15.273881912231445

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016305516473948956
    2. ',c' → logprob: -6.626630783081055
    3. 'c' → logprob: -8.501630783081055
    4. ' ,' → logprob: -9.251630783081055
    5. ' c' → logprob: -13.001630783081055
    6. ',
' → logprob: -14.251630783081055
    7. 'a' → logprob: -14.751630783081055
    8. '   ' → logprob: -14.876630783081055
    9. 'd' → logprob: -15.001630783081055
    10. ',d' → logprob: -15.001630783081055

Token 225: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14274336397647858
    2. 'c' → logprob: -2.0177433490753174
    3. 'a' → logprob: -10.517743110656738
    4. 'l' → logprob: -10.642743110656738
    5. ' d' → logprob: -11.517743110656738
    6. ' c' → logprob: -12.892743110656738
    7. '   ' → logprob: -13.892743110656738
    8. '
' → logprob: -14.017743110656738
    9. 'b' → logprob: -14.142743110656738
    10. 'res' → logprob: -14.642743110656738

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002994697540998459
    2. ',c' → logprob: -5.877994537353516
    3. 'c' → logprob: -8.627994537353516
    4. ' ,' → logprob: -11.502994537353516
    5. ' c' → logprob: -14.377994537353516
    6. ',b' → logprob: -16.002994537353516
    7. ',d' → logprob: -17.127994537353516
    8. '   ' → logprob: -17.252994537353516
    9. ' ' → logprob: -17.377994537353516
    10. ',
' → logprob: -17.877994537353516

Token 227: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00015872348740231246
    2. ' c' → logprob: -8.750158309936523
    3. ')c' → logprob: -15.625158309936523
    4. '	c' → logprob: -17.375158309936523
    5. 'b' → logprob: -17.500158309936523
    6. '   ' → logprob: -17.750158309936523
    7. ')' → logprob: -18.875158309936523
    8. ' ' → logprob: -19.000158309936523
    9. '  ' → logprob: -19.250158309936523
    10. '_c' → logprob: -19.375158309936523

Token 228: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16046234965324402
    2. ')' → logprob: -1.9104623794555664
    3. '   ' → logprob: -8.535462379455566
    4. ')
' → logprob: -10.160462379455566
    5. ' )
' → logprob: -13.535462379455566
    6. ')

' → logprob: -13.660462379455566
    7. 'print' → logprob: -14.660462379455566
    8. ' )' → logprob: -16.53546142578125
    9. ')`
' → logprob: -17.16046142578125
    10. ')#' → logprob: -17.66046142578125

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22458580136299133
    2. 'print' → logprob: -1.849585771560669
    3. '
' → logprob: -3.474585771560669
    4. '<|end|>' → logprob: -4.724586009979248
    5. ' print' → logprob: -6.474586009979248
    6. '    
' → logprob: -6.474586009979248
    7. '```' → logprob: -7.474586009979248
    8. '  
' → logprob: -8.84958553314209
    9. '``' → logprob: -10.22458553314209
    10. '<|end|>' → logprob: -10.72458553314209

Token 230: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018971276585943997
    2. ' print' → logprob: -9.250189781188965
    3. '   ' → logprob: -9.375189781188965
    4. 'if' (adapté à ' if') → logprob: -11.750189781188965
    5. '```' → logprob: -14.250189781188965
    6. 'res' → logprob: -16.87518882751465
    7. '	print' → logprob: -17.12518882751465
    8. '#print' → logprob: -17.25018882751465
    9. ' if' → logprob: -17.62518882751465
    10. '    
' → logprob: -17.62518882751465

Token 231: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.029783006757497787
    2. 'res' → logprob: -3.529783010482788
    3. '(res' → logprob: -11.029783248901367
    4. ' abs' → logprob: -12.029783248901367
    5. ' max' → logprob: -12.779783248901367
    6. ' ' → logprob: -12.904783248901367
    7. ' (' → logprob: -13.029783248901367
    8. ' ' → logprob: -14.279783248901367
    9. ' not' → logprob: -14.529783248901367
    10. '	res' → logprob: -14.529783248901367

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001227276516146958
    2. '2' → logprob: -9.125123023986816
    3. ' ' → logprob: -12.125123023986816
    4. '(' → logprob: -12.812623023986816
    5. '_' → logprob: -13.437623023986816
    6. '```' → logprob: -14.562623023986816
    7. '   ' → logprob: -14.812623023986816
    8. ')' → logprob: -15.437623023986816
    9. '(
' → logprob: -15.562623023986816
    10. '>' → logprob: -15.562623023986816

Token 233: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21342530846595764
    2. '>' → logprob: -1.8384252786636353
    3. ' <' → logprob: -4.338425159454346
    4. ' ==' → logprob: -4.588425159454346
    5. ' >=' → logprob: -6.088425159454346
    6. '<' → logprob: -6.213425159454346
    7. '==' → logprob: -6.213425159454346
    8. ' !=' → logprob: -6.588425159454346
    9. ' <=' → logprob: -6.713425159454346
    10. '>=' → logprob: -7.588425159454346

Token 234: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.024941395968198776
    2. '0' → logprob: -4.149941444396973
    3. '-' → logprob: -5.274941444396973
    4. '1' → logprob: -6.399941444396973
    5. ' res' → logprob: -6.524941444396973
    6. '3' → logprob: -8.399941444396973
    7. '2' → logprob: -9.274941444396973
    8. ' ' → logprob: -9.899941444396973
    9. '10' → logprob: -10.274941444396973
    10. ' -' → logprob: -10.649941444396973

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001398929744027555
    2. '1' → logprob: -8.875140190124512
    3. '
' → logprob: -17.000139236450195
    4. 'res' → logprob: -17.875139236450195
    5. '   ' → logprob: -18.000139236450195
    6. 's' → logprob: -18.125139236450195
    7. ' ' → logprob: -18.500139236450195
    8. 'ance' → logprob: -19.875139236450195
    9. '

' → logprob: -20.125139236450195
    10. '```' → logprob: -20.125139236450195

Token 236: '==' (ID: 560)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019091762602329254
    2. ':
' → logprob: -4.019091606140137
    3. ' :' → logprob: -7.269091606140137
    4. ' and' → logprob: -8.769091606140137
    5. '   ' → logprob: -10.394091606140137
    6. ' :
' → logprob: -11.019091606140137
    7. 'and' → logprob: -11.144091606140137
    8. ':return' → logprob: -11.519091606140137
    9. ' or' → logprob: -11.644091606140137
    10. '==' → logprob: -12.644091606140137

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22896942496299744
    2. '-' → logprob: -1.7289694547653198
    3. '1' → logprob: -3.8539693355560303
    4. '30' → logprob: -5.978969573974609
    5. '2' → logprob: -7.228969573974609
    6. 'j' → logprob: -7.853969573974609
    7. '3' → logprob: -7.978969573974609
    8. '10' → logprob: -8.22896957397461
    9. ' ' → logprob: -8.85396957397461
    10. '4' → logprob: -8.85396957397461

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12949925661087036
    2. ':
' → logprob: -2.1294991970062256
    3. ' :' → logprob: -6.254499435424805
    4. ' or' → logprob: -8.129499435424805
    5. ' :
' → logprob: -8.754499435424805
    6. ' and' → logprob: -9.379499435424805
    7. '   ' → logprob: -10.129499435424805
    8. ':return' → logprob: -10.504499435424805
    9. 'print' → logprob: -11.629499435424805
    10. 'and' → logprob: -11.629499435424805

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012718833051621914
    2. ' print' → logprob: -4.762718677520752
    3. 'print' → logprob: -5.887718677520752
    4. '   ' → logprob: -6.762718677520752
    5. '	print' → logprob: -9.38771915435791
    6. '	   ' → logprob: -10.51271915435791
    7. '
' → logprob: -10.88771915435791
    8. '	' → logprob: -11.63771915435791
    9. '           ' → logprob: -12.01271915435791
    10. '	       ' → logprob: -12.63771915435791

Token 240: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20001612603664398
    2. ' print' → logprob: -1.9500161409378052
    3. '   ' → logprob: -3.3250160217285156
    4. 'break' → logprob: -6.325016021728516
    5. ' break' → logprob: -6.825016021728516
    6. '       ' → logprob: -9.950016021728516
    7. 'continue' → logprob: -10.325016021728516
    8. '    ' → logprob: -10.825016021728516
    9. ' continue' → logprob: -11.200016021728516
    10. '	print' → logprob: -11.825016021728516

Token 241: ' one' (ID: 1001)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08661002665758133
    2. ' print' → logprob: -2.5866100788116455
    3. 'break' → logprob: -5.836609840393066
    4. '   ' → logprob: -6.086609840393066
    5. 'continue' → logprob: -6.961609840393066
    6. ' break' → logprob: -7.086609840393066
    7. ' continue' → logprob: -7.961609840393066
    8. 'pass' → logprob: -9.461609840393066
    9. 'pr' → logprob: -9.461609840393066
    10. ' pass' → logprob: -10.586609840393066

Token 242: '-l' (ID: 2887)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09227719902992249
    2. ' print' → logprob: -2.9672772884368896
    3. '   ' → logprob: -3.4672772884368896
    4. '    ' → logprob: -6.4672770500183105
    5. '
' → logprob: -7.2172770500183105
    6. ':' → logprob: -7.8422770500183105
    7. ' =' → logprob: -7.9672770500183105
    8. ' ' → logprob: -8.092277526855469
    9. '       ' → logprob: -8.092277526855469
    10. '=' → logprob: -8.092277526855469

Token 243: 'iner' (ID: 6010)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.4506615400314331
    2. 'ne' → logprob: -1.200661540031433
    3. '   ' → logprob: -3.4506616592407227
    4. 'f' → logprob: -4.950661659240723
    5. 'print' → logprob: -5.075661659240723
    6. 'n' → logprob: -5.450661659240723
    7. 'e' → logprob: -5.450661659240723
    8. 'if' → logprob: -5.700661659240723
    9. ' print' → logprob: -6.075661659240723
    10. ' if' → logprob: -6.950661659240723

Token 244: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017935218289494514
    2. '   ' → logprob: -4.142935276031494
    3. ' print' → logprob: -6.267935276031494
    4. '       ' → logprob: -13.892934799194336
    5. '	print' → logprob: -14.517934799194336
    6. '```' → logprob: -14.767934799194336
    7. '
' → logprob: -15.017934799194336
    8. 'continue' → logprob: -15.517934799194336
    9. '(print' → logprob: -16.392934799194336
    10. 'Print' → logprob: -16.517934799194336

Token 245: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6869531273841858
    2. 'print' → logprob: -0.9369531273841858
    3. '       ' → logprob: -2.686953067779541
    4. ' print' → logprob: -3.311953067779541
    5. '           ' → logprob: -9.0619535446167
    6. '
' → logprob: -9.3119535446167
    7. '```' → logprob: -9.3119535446167
    8. '	print' → logprob: -10.1869535446167
    9. ':' → logprob: -10.4369535446167
    10. ';' → logprob: -10.8119535446167

Token 246: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.000763510703109e-05
    2. ' print' → logprob: -10.875040054321289
    3. '   ' → logprob: -11.125040054321289
    4. 'continue' → logprob: -13.000040054321289
    5. 'pr' → logprob: -13.875040054321289
    6. 'break' → logprob: -14.375040054321289
    7. '
' → logprob: -14.625040054321289
    8. 'prin' → logprob: -15.250040054321289
    9. '    
' → logprob: -15.500040054321289
    10. 'exit' → logprob: -15.500040054321289

Token 247: '(abs' (ID: 71957)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2608332633972168
    2. '(' → logprob: -2.135833263397217
    3. '('' → logprob: -3.010833263397217
    4. '(-' → logprob: -3.260833263397217
    5. '(":' → logprob: -5.510833263397217
    6. '(max' → logprob: -6.135833263397217
    7. '(sum' → logprob: -6.135833263397217
    8. '(a' → logprob: -6.260833263397217
    9. '(f' → logprob: -6.260833263397217
    10. '((' → logprob: -6.510833263397217

Token 248: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2906261682510376
    2. '(res' → logprob: -1.6656261682510376
    3. '(b' → logprob: -2.915626049041748
    4. '(' → logprob: -5.665626049041748
    5. '(c' → logprob: -6.415626049041748
    6. '(l' → logprob: -6.790626049041748
    7. '((' → logprob: -7.040626049041748
    8. '(d' → logprob: -7.040626049041748
    9. 'a' → logprob: -8.540626525878906
    10. '(m' → logprob: -8.915626525878906

Token 249: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1216546893119812
    2. '-b' → logprob: -2.871654748916626
    3. ' -' → logprob: -3.371654748916626
    4. '+' → logprob: -3.996654748916626
    5. '-d' → logprob: -6.496654510498047
    6. ')' → logprob: -6.621654510498047
    7. '+b' → logprob: -6.746654510498047
    8. '-c' → logprob: -7.621654510498047
    9. ' +' → logprob: -8.496654510498047
    10. 'b' → logprob: -9.121654510498047

Token 250: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031205564737319946
    2. 'b' → logprob: -6.253120422363281
    3. ' c' → logprob: -7.128120422363281
    4. 'd' → logprob: -8.003120422363281
    5. '   ' → logprob: -10.253120422363281
    6. ' ' → logprob: -11.753120422363281
    7. '  ' → logprob: -12.378120422363281
    8. ' b' → logprob: -12.878120422363281
    9. 'a' → logprob: -13.878120422363281
    10. '    ' → logprob: -14.003120422363281

Token 251: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4272784888744354
    2. ')' → logprob: -1.1772785186767578
    3. '),' → logprob: -4.177278518676758
    4. '+' → logprob: -4.677278518676758
    5. ')+' → logprob: -5.302278518676758
    6. ' +' → logprob: -5.677278518676758
    7. ' ))' → logprob: -6.177278518676758
    8. ' )' → logprob: -6.302278518676758
    9. ',' → logprob: -7.677278518676758
    10. ' if' → logprob: -7.927278518676758

Token 252: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015690360218286514
    2. '+' → logprob: -4.765690326690674
    3. ' +' → logprob: -6.515690326690674
    4. ' )' → logprob: -6.515690326690674
    5. '-' → logprob: -7.015690326690674
    6. ',' → logprob: -7.390690326690674
    7. '**' → logprob: -7.515690326690674
    8. ')
' → logprob: -7.640690326690674
    9. '   ' → logprob: -8.015690803527832
    10. ' -' → logprob: -8.390690803527832

Token 253: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0004044554370921105
    2. '1' → logprob: -8.250404357910156
    3. ' abs' → logprob: -8.875404357910156
    4. '(abs' → logprob: -13.500404357910156
    5. 'b' → logprob: -14.500404357910156
    6. '0' → logprob: -14.500404357910156
    7. '   ' → logprob: -15.125404357910156
    8. ' ' → logprob: -15.750404357910156
    9. 'max' → logprob: -15.875404357910156
    10. '
' → logprob: -16.500404357910156

Token 254: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00030566859641112387
    2. '(' → logprob: -8.375306129455566
    3. 'b' → logprob: -9.875306129455566
    4. '(a' → logprob: -11.125306129455566
    5. ' (' → logprob: -11.875306129455566
    6. ')' → logprob: -14.500306129455566
    7. '((' → logprob: -14.875306129455566
    8. '(
' → logprob: -15.375306129455566
    9. '(d' → logprob: -15.500306129455566
    10. '(abs' → logprob: -15.875306129455566

Token 255: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4749116599559784
    2. '-' → logprob: -0.9749116897583008
    3. '-d' → logprob: -7.224911689758301
    4. 'd' → logprob: -9.2249116897583
    5. ' ' → logprob: -12.0999116897583
    6. ' d' → logprob: -13.5999116897583
    7. '  ' → logprob: -15.4749116897583
    8. '   ' → logprob: -15.4749116897583
    9. '(d' → logprob: -16.099910736083984
    10. ' ' → logprob: -16.849910736083984

Token 256: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00010914575977949426
    2. ' d' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.87510871887207
    4. '	d' → logprob: -17.00010871887207
    5. '<|end|>' → logprob: -17.37510871887207
    6. ' ' → logprob: -17.50010871887207
    7. '  ' → logprob: -18.00010871887207
    8. '
' → logprob: -18.12510871887207
    9. ')d' → logprob: -18.12510871887207
    10. '>d' → logprob: -19.37510871887207

Token 257: '));' (ID: 11897)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1603425294160843
    2. ')' → logprob: -1.9103425741195679
    3. ')))' → logprob: -9.7853422164917
    4. '))
' → logprob: -10.9103422164917
    5. ' ))' → logprob: -10.9103422164917
    6. '()))' → logprob: -11.9103422164917
    7. ' )' → logprob: -12.4103422164917
    8. '())' → logprob: -12.6603422164917
    9. '),' → logprob: -12.7853422164917
    10. ')
' → logprob: -13.5353422164917

Token 258: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7417027354240417
    2. 'continue' → logprob: -1.3667027950286865
    3. '       ' → logprob: -1.4917027950286865
    4. 'else' → logprob: -3.4917027950286865
    5. ' continue' → logprob: -4.616702556610107
    6. 'elif' → logprob: -6.366702556610107
    7. ' else' → logprob: -7.116702556610107
    8. ' ' → logprob: -8.366703033447266
    9. 'print' → logprob: -8.866703033447266
    10. '	continue' → logprob: -8.991703033447266

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042992038652300835
    2. '
' → logprob: -6.129299163818359
    3. '    
' → logprob: -6.379299163818359
    4. '<|end|>' → logprob: -8.25429916381836
    5. 'print' → logprob: -9.62929916381836
    6. '  
' → logprob: -10.00429916381836
    7. ' 
' → logprob: -12.12929916381836
    8. '        
' → logprob: -12.12929916381836
    9. '```' → logprob: -12.25429916381836
    10. '       ' → logprob: -12.37929916381836

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016504127415828407
    2. '    
' → logprob: -9.500164985656738
    3. '<|end|>' → logprob: -10.125164985656738
    4. 'print' → logprob: -10.500164985656738
    5. 'if' → logprob: -11.750164985656738
    6. '
' → logprob: -11.750164985656738
    7. '```' → logprob: -13.375164985656738
    8. ' if' → logprob: -13.875164985656738
    9. '  
' → logprob: -14.250164985656738
    10. '       ' → logprob: -14.250164985656738

Token 261: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04471101611852646
    2. 'print' → logprob: -3.169711112976074
    3. 'if' → logprob: -6.544711112976074
    4. ' print' → logprob: -9.169711112976074
    5. '    
' → logprob: -10.169711112976074
    6. ' if' → logprob: -10.419711112976074
    7. 'else' → logprob: -10.794711112976074
    8. 'res' → logprob: -11.044711112976074
    9. 'elif' → logprob: -11.419711112976074
    10. '#' (adapté à ' #') → logprob: -11.919711112976074

Token 262: ' inline' (ID: 15905)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1786651909351349
    2. 'if' → logprob: -2.5536651611328125
    3. ' print' → logprob: -3.5536651611328125
    4. '   ' → logprob: -4.6786651611328125
    5. ' if' → logprob: -4.9286651611328125
    6. 'for' → logprob: -4.9286651611328125
    7. 'res' → logprob: -5.0536651611328125
    8. 'p' → logprob: -5.4286651611328125
    9. 'x' → logprob: -6.0536651611328125
    10. 'r' → logprob: -6.0536651611328125

Token 263: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0075485315173864365
    2. ' print' → logprob: -5.7575483322143555
    3. 'if' → logprob: -6.5075483322143555
    4. 'res' → logprob: -7.0075483322143555
    5. 'for' → logprob: -7.2575483322143555
    6. 'result' → logprob: -8.007548332214355
    7. 'abs' → logprob: -8.382548332214355
    8. ' res' → logprob: -8.632548332214355
    9. 'max' → logprob: -9.757548332214355
    10. 'def' → logprob: -9.882548332214355

Token 264: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15678928792476654
    2. 'res' → logprob: -2.6567893028259277
    3. 'abs' → logprob: -3.6567893028259277
    4. 'if' → logprob: -4.281789302825928
    5. 'result' → logprob: -5.031789302825928
    6. 'x' → logprob: -5.156789302825928
    7. 'max' → logprob: -5.656789302825928
    8. ' res' → logprob: -5.656789302825928
    9. 'for' → logprob: -6.281789302825928
    10. 'a' → logprob: -6.656789302825928

Token 265: ''
' (ID: 2207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8886430859565735
    2. ' print' → logprob: -1.0136430263519287
    3. ' res' → logprob: -1.7636430263519287
    4. ''' → logprob: -3.6386430263519287
    5. 'res' → logprob: -4.638643264770508
    6. '-' → logprob: -5.388643264770508
    7. 'else' → logprob: -5.763643264770508
    8. ' else' → logprob: -6.013643264770508
    9. ' ' → logprob: -6.388643264770508
    10. ' (' → logprob: -7.138643264770508

Token 266: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4771597683429718
    2. '   ' → logprob: -1.6021597385406494
    3. 'print' → logprob: -1.7271597385406494
    4. ' res' → logprob: -10.22715950012207
    5. '    
' → logprob: -10.47715950012207
    6. '(print' → logprob: -10.72715950012207
    7. ' if' → logprob: -10.85215950012207
    8. '    ' → logprob: -10.85215950012207
    9. ' 
' → logprob: -11.47715950012207
    10. 'res' → logprob: -11.60215950012207

Token 267: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007897263392806053
    2. ' print' → logprob: -5.13289737701416
    3. '   ' → logprob: -6.25789737701416
    4. 'res' → logprob: -10.13289737701416
    5. ' res' → logprob: -13.00789737701416
    6. 'r' → logprob: -13.38289737701416
    7. 'pr' → logprob: -13.50789737701416
    8. 'if' (adapté à ' if') → logprob: -13.88289737701416
    9. 'x' → logprob: -14.13289737701416
    10. 'p' → logprob: -14.25789737701416

Token 268: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02137213945388794
    2. ' res' → logprob: -3.896372079849243
    3. 'abs' → logprob: -8.146371841430664
    4. 'j' → logprob: -9.271371841430664
    5. 'get' → logprob: -9.271371841430664
    6. '(res' → logprob: -9.396371841430664
    7. '   ' → logprob: -10.021371841430664
    8. 'a' → logprob: -10.271371841430664
    9. 'not' → logprob: -10.521371841430664
    10. 'm' → logprob: -10.896371841430664

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002812005812302232
    2. '2' → logprob: -5.877811908721924
    3. ' ' → logprob: -13.627812385559082
    4. '==' → logprob: -13.627812385559082
    5. '```' → logprob: -13.752812385559082
    6. '>' → logprob: -13.877812385559082
    7. '!=' → logprob: -15.002812385559082
    8. ':=' → logprob: -15.065312385559082
    9. ' ==' → logprob: -15.190312385559082
    10. 'max' → logprob: -15.502812385559082

Token 270: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.40456655621528625
    2. '<' → logprob: -1.5295665264129639
    3. '!=' → logprob: -2.779566526412964
    4. '==' → logprob: -3.529566526412964
    5. ' >' → logprob: -4.404566764831543
    6. ' <' → logprob: -5.279566764831543
    7. '>=' → logprob: -5.779566764831543
    8. ' !=' → logprob: -6.154566764831543
    9. '<=' → logprob: -6.529566764831543
    10. ' ==' → logprob: -7.654566764831543

Token 271: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.003202312160283327
    2. '0' → logprob: -6.003202438354492
    3. ' res' → logprob: -7.628202438354492
    4. '3' → logprob: -9.628202438354492
    5. '1' → logprob: -10.003202438354492
    6. '2' → logprob: -10.128202438354492
    7. '10' → logprob: -11.003202438354492
    8. '5' → logprob: -11.378202438354492
    9. 'j' → logprob: -11.503202438354492
    10. '20' → logprob: -12.003202438354492

Token 272: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.750005722045898
    3. '
' → logprob: -14.375005722045898
    4. 'max' → logprob: -14.500005722045898
    5. '```' → logprob: -14.937505722045898
    6. 's' → logprob: -15.187505722045898
    7. '1' → logprob: -15.250005722045898
    8. '   ' → logprob: -15.562505722045898
    9. '``' → logprob: -16.0625057220459
    10. '=' → logprob: -16.4375057220459

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03857233747839928
    2. ':
' → logprob: -3.288572311401367
    3. ' :' → logprob: -7.913572311401367
    4. '   ' → logprob: -9.663572311401367
    5. ':return' → logprob: -9.663572311401367
    6. ' :
' → logprob: -11.038572311401367
    7. ' and' → logprob: -11.913572311401367
    8. '       ' → logprob: -12.413572311401367
    9. 'print' → logprob: -12.788572311401367
    10. ' or' → logprob: -13.163572311401367

Token 274: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26816272735595703
    2. '       ' → logprob: -1.518162727355957
    3. ':
' → logprob: -4.268162727355957
    4. '   ' → logprob: -7.518162727355957
    5. ' print' → logprob: -7.768162727355957
    6. 'print' → logprob: -7.893162727355957
    7. ' and' → logprob: -7.893162727355957
    8. ' :' → logprob: -9.268162727355957
    9. '    ' → logprob: -9.768162727355957
    10. ' or' → logprob: -10.018162727355957

Token 275: ' a' (ID: 261)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6145196557044983
    2. '       ' → logprob: -0.9895196557044983
    3. 'print' → logprob: -2.4895195960998535
    4. '
' → logprob: -6.2395195960998535
    5. ' res' → logprob: -7.2395195960998535
    6. '   ' → logprob: -7.2395195960998535
    7. '    ' → logprob: -8.239520072937012
    8. '	print' → logprob: -8.864520072937012
    9. ' x' → logprob: -9.864520072937012
    10. ' a' → logprob: -10.052020072937012

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001748126931488514
    2. ',b' → logprob: -6.626748085021973
    3. ',c' → logprob: -8.501748085021973
    4. 'b' → logprob: -9.626748085021973
    5. '=' → logprob: -10.251748085021973
    6. ' ,' → logprob: -10.251748085021973
    7. ',res' → logprob: -11.501748085021973
    8. ',a' → logprob: -11.626748085021973
    9. ',d' → logprob: -11.751748085021973
    10. ' b' → logprob: -11.751748085021973

Token 277: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16847887635231018
    2. ' b' → logprob: -2.2934789657592773
    3. 'c' → logprob: -3.0434789657592773
    4. ' c' → logprob: -5.043478965759277
    5. ',b' → logprob: -12.043478965759277
    6. ',' → logprob: -12.418478965759277
    7. ' ' → logprob: -13.168478965759277
    8. ',c' → logprob: -13.543478965759277
    9. '<|end|>' → logprob: -13.543478965759277
    10. '	c' → logprob: -15.418478965759277

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008207798935472965
    2. '=' → logprob: -4.88320779800415
    3. ',c' → logprob: -7.50820779800415
    4. 'c' → logprob: -11.008208274841309
    5. '=c' → logprob: -11.258208274841309
    6. ' =' → logprob: -11.258208274841309
    7. ',b' → logprob: -12.758208274841309
    8. ',a' → logprob: -13.008208274841309
    9. ' ,' → logprob: -13.258208274841309
    10. 'a' → logprob: -13.258208274841309

Token 279: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.791440293658525e-05
    2. ' c' → logprob: -9.500078201293945
    3. '   ' → logprob: -12.750078201293945
    4. '  ' → logprob: -16.375078201293945
    5. '	c' → logprob: -16.875078201293945
    6. '    ' → logprob: -17.375078201293945
    7. ' ' → logprob: -17.750078201293945
    8. '<|end|>' → logprob: -17.750078201293945
    9. '=' → logprob: -18.000078201293945
    10. '       ' → logprob: -18.625078201293945

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006684751133434474
    2. '=' → logprob: -7.375668525695801
    3. ',d' → logprob: -10.8756685256958
    4. ' =' → logprob: -11.0006685256958
    5. 'd' → logprob: -13.2506685256958
    6. ' ,' → logprob: -13.3756685256958
    7. ',b' → logprob: -13.5006685256958
    8. ',c' → logprob: -14.0006685256958
    9. '<|end|>' → logprob: -15.5006685256958
    10. 'c' → logprob: -15.6256685256958

Token 281: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3132624924182892
    2. ' d' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.063262939453125
    4. '   ' → logprob: -15.313262939453125
    5. '  ' → logprob: -15.813262939453125
    6. '	d' → logprob: -16.188262939453125
    7. '<|end|>' → logprob: -17.063262939453125
    8. ',d' → logprob: -18.313262939453125
    9. '       ' → logprob: -18.938262939453125
    10. '    ' → logprob: -18.938262939453125

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04876040294766426
    2. ' =' → logprob: -3.048760414123535
    3. ',' → logprob: -8.673760414123535
    4. '=a' → logprob: -13.798760414123535
    5. '=
' → logprob: -15.298760414123535
    6. '   ' → logprob: -15.298760414123535
    7. '=b' → logprob: -15.923760414123535
    8. '    ' → logprob: -16.54875946044922
    9. '=c' → logprob: -16.79875946044922
    10. '＝' → logprob: -16.79875946044922

Token 283: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12968899309635162
    2. ' c' → logprob: -2.6296889781951904
    3. 'b' → logprob: -3.1296889781951904
    4. ' b' → logprob: -5.3796892166137695
    5. '   ' → logprob: -7.0046892166137695
    6. '(c' → logprob: -8.75468921661377
    7. ' ' → logprob: -10.12968921661377
    8. '(b' → logprob: -10.75468921661377
    9. 'a' → logprob: -10.87968921661377
    10. '  ' → logprob: -11.00468921661377

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026264708139933646
    2. ',c' → logprob: -8.375262260437012
    3. ',a' → logprob: -10.500262260437012
    4. ' ,' → logprob: -12.875262260437012
    5. 'a' → logprob: -13.750262260437012
    6. 'c' → logprob: -14.375262260437012
    7. ',d' → logprob: -15.250262260437012
    8. ' c' → logprob: -18.125263214111328
    9. '   ' → logprob: -18.625263214111328
    10. ' a' → logprob: -18.750263214111328

Token 285: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004908377304673195
    2. ' a' → logprob: -7.625490665435791
    3. 'c' → logprob: -12.87549114227295
    4. 'i' → logprob: -16.375490188598633
    5. '0' → logprob: -17.125490188598633
    6. ' c' → logprob: -17.250490188598633
    7. 'd' → logprob: -17.250490188598633
    8. 'res' → logprob: -17.875490188598633
    9. ' ' → logprob: -17.875490188598633
    10. '-a' → logprob: -18.000490188598633

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.707997428951785e-05
    2. ' ,' → logprob: -10.250077247619629
    3. ',c' → logprob: -10.375077247619629
    4. 'c' → logprob: -12.125077247619629
    5. '   ' → logprob: -12.375077247619629
    6. ',d' → logprob: -14.750077247619629
    7. ' c' → logprob: -15.750077247619629
    8. 'd' → logprob: -15.875077247619629
    9. ',
' → logprob: -16.625076293945312
    10. '_,' → logprob: -17.375076293945312

Token 287: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.35706390615087e-05
    2. ' d' → logprob: -10.375033378601074
    3. 'c' → logprob: -13.250033378601074
    4. 'a' → logprob: -14.625033378601074
    5. '   ' → logprob: -18.37503433227539
    6. '  ' → logprob: -18.50003433227539
    7. ' ' → logprob: -19.37503433227539
    8. 'l' → logprob: -19.75003433227539
    9. '	d' → logprob: -20.37503433227539
    10. 'res' → logprob: -20.37503433227539

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001867326645879075
    2. ',c' → logprob: -8.625186920166016
    3. 'c' → logprob: -12.250186920166016
    4. ' ,' → logprob: -13.000186920166016
    5. ' c' → logprob: -17.250186920166016
    6. ',
' → logprob: -17.500186920166016
    7. '   ' → logprob: -18.250186920166016
    8. '```' → logprob: -19.375186920166016
    9. ',b' → logprob: -19.500186920166016
    10. 'import' → logprob: -20.375186920166016

Token 289: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008616345934569836
    2. ' c' → logprob: -4.7586164474487305
    3. '   ' → logprob: -13.88361644744873
    4. '	c' → logprob: -14.63361644744873
    5. ')c' → logprob: -15.50861644744873
    6. '<|end|>' → logprob: -16.133615493774414
    7. '  ' → logprob: -16.758615493774414
    8. ' ' → logprob: -16.883615493774414
    9. ',c' → logprob: -17.008615493774414
    10. '       ' → logprob: -17.383615493774414

Token 290: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01710706390440464
    2. '<|end|>' → logprob: -4.142107009887695
    3. '    
' → logprob: -8.017107009887695
    4. '
' → logprob: -8.142107009887695
    5. 'print' → logprob: -8.392107009887695
    6. ')' → logprob: -9.892107009887695
    7. '<|end|>' → logprob: -10.517107009887695
    8. '       ' → logprob: -10.517107009887695
    9. ',' → logprob: -10.642107009887695
    10. '  
' → logprob: -10.892107009887695

Token 291: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015886196866631508
    2. '
' → logprob: -4.890886306762695
    3. '<|end|>' → logprob: -5.015886306762695
    4. '    
' → logprob: -7.765886306762695
    5. 'print' → logprob: -7.890886306762695
    6. ',' → logprob: -8.390886306762695
    7. ';' → logprob: -8.765886306762695
    8. ')' → logprob: -10.015886306762695
    9. ' else' → logprob: -10.015886306762695
    10. '  
' → logprob: -10.015886306762695

Token 292: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006679732818156481
    2. 'print' → logprob: -5.381679534912109
    3. '       ' → logprob: -6.881679534912109
    4. 'res' (adapté à ' res') → logprob: -7.381679534912109
    5. '<|end|>' → logprob: -8.75667953491211
    6. ' res' → logprob: -9.25667953491211
    7. '
' → logprob: -10.00667953491211
    8. ' print' → logprob: -10.38167953491211
    9. 'continue' → logprob: -10.75667953491211
    10. '    
' → logprob: -11.75667953491211

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02325153350830078
    2. '2' → logprob: -3.773251533508301
    3. '=' → logprob: -12.3982515335083
    4. ' =' → logprob: -14.3982515335083
    5. ',' → logprob: -15.1482515335083
    6. '```' → logprob: -15.1482515335083
    7. 's' → logprob: -15.2732515335083
    8. '_' → logprob: -16.648250579833984
    9. '3' → logprob: -16.648250579833984
    10. ' ' → logprob: -17.273250579833984

Token 294: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005129986093379557
    2. ',res' → logprob: -7.625513076782227
    3. '=' → logprob: -10.750513076782227
    4. ' ,' → logprob: -13.375513076782227
    5. '+=' → logprob: -15.000513076782227
    6. 'res' → logprob: -15.125513076782227
    7. '=res' → logprob: -15.500513076782227
    8. ' =' → logprob: -15.875513076782227
    9. ',re' → logprob: -15.875513076782227
    10. ',m' → logprob: -15.875513076782227

Token 295: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.450645387172699
    2. 'm' → logprob: -1.0756454467773438
    3. ' res' → logprob: -4.075645446777344
    4. ' m' → logprob: -5.450645446777344
    5. '0' → logprob: -8.325645446777344
    6. 'max' → logprob: -9.325645446777344
    7. 'r' → logprob: -10.325645446777344
    8. '(res' → logprob: -12.013145446777344
    9. '   ' → logprob: -12.200645446777344
    10. ' ' → logprob: -12.388145446777344

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.179745614528656
    2. '1' → logprob: -1.8047456741333008
    3. ' ' → logprob: -14.9297456741333
    4. '```' → logprob: -15.9922456741333
    5. '   ' → logprob: -16.117244720458984
    6. 's' → logprob: -16.179744720458984
    7. 'max' → logprob: -17.679744720458984
    8. '[' → logprob: -17.742244720458984
    9. 'res' → logprob: -17.929744720458984
    10. '0' → logprob: -17.929744720458984

Token 297: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008018963038921356
    2. 'print' → logprob: -5.883018970489502
    3. '<|end|>' → logprob: -6.008018970489502
    4. '
' → logprob: -6.383018970489502
    5. '    
' → logprob: -7.508018970489502
    6. ',' → logprob: -9.258018493652344
    7. ' print' → logprob: -9.508018493652344
    8. '#' → logprob: -9.883018493652344
    9. '  
' → logprob: -10.383018493652344
    10. ';' → logprob: -10.383018493652344

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034431421663612127
    2. 'print' → logprob: -5.753443241119385
    3. '    
' → logprob: -9.503442764282227
    4. '#' → logprob: -10.253442764282227
    5. '       ' → logprob: -10.503442764282227
    6. ' print' → logprob: -10.503442764282227
    7. ',' → logprob: -11.003442764282227
    8. '<|end|>' → logprob: -11.128442764282227
    9. '
' → logprob: -11.628442764282227
    10. ')' → logprob: -11.878442764282227

Token 299: ' iii' (ID: 117876)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6880956888198853
    2. 'print' → logprob: -0.8130956888198853
    3. 'r' → logprob: -4.813095569610596
    4. 'if' → logprob: -5.188095569610596
    5. 'res' → logprob: -5.188095569610596
    6. 'for' → logprob: -5.563095569610596
    7. 'dx' → logprob: -5.688095569610596
    8. 'x' → logprob: -5.938095569610596
    9. 'while' → logprob: -6.063095569610596
    10. 'ans' → logprob: -6.063095569610596

Token 300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5127149820327759
    2. ' =' → logprob: -1.1377149820327759
    3. 'for' → logprob: -3.3877148628234863
    4. 'f' → logprob: -3.5127148628234863
    5. 'n' → logprob: -4.512714862823486
    6. '   ' → logprob: -6.262714862823486
    7. 'nd' → logprob: -6.512714862823486
    8. 'i' → logprob: -7.887714862823486
    9. 'dx' → logprob: -7.887714862823486
    10. '_' → logprob: -8.512715339660645

Token 301: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.49819865822792053
    2. '0' → logprob: -1.9981986284255981
    3. 'res' → logprob: -2.2481987476348877
    4. 'm' → logprob: -3.2481987476348877
    5. 'next' → logprob: -3.4981987476348877
    6. 'min' → logprob: -3.4981987476348877
    7. 'j' → logprob: -4.623198509216309
    8. '2' → logprob: -4.623198509216309
    9. '1' → logprob: -4.873198509216309
    10. 'sum' → logprob: -4.998198509216309

Token 302: '3' (ID: 18)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6325784921646118
    2. 'res' → logprob: -1.6325784921646118
    3. '0' → logprob: -2.2575783729553223
    4. 'min' → logprob: -3.1325783729553223
    5. 'next' → logprob: -3.5075783729553223
    6. 'sum' → logprob: -3.6325783729553223
    7. 'm' → logprob: -3.7575783729553223
    8. 'j' → logprob: -4.632578372955322
    9. '2' → logprob: -4.882578372955322
    10. '1' → logprob: -5.132578372955322

Token 303: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02646215818822384
    2. ' **' → logprob: -3.6514620780944824
    3. '*' → logprob: -8.90146255493164
    4. ' *' → logprob: -11.15146255493164
    5. '***' → logprob: -12.52646255493164
    6. 'res' → logprob: -13.52646255493164
    7. '   ' → logprob: -13.90146255493164
    8. '(res' → logprob: -13.90146255493164
    9. '*j' → logprob: -13.90146255493164
    10. ' -' → logprob: -14.77646255493164

Token 304: ' res' (ID: 694)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.3882589340209961
    2. 'res' → logprob: -1.138258934020996
    3. '(' → logprob: -7.263258934020996
    4. '(j' → logprob: -8.263258934020996
    5. 'j' → logprob: -9.013258934020996
    6. ' (' → logprob: -9.263258934020996
    7. ' res' → logprob: -9.388258934020996
    8. '   ' → logprob: -10.513258934020996
    9. '-res' → logprob: -11.138258934020996
    10. 'max' → logprob: -11.763258934020996

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.125
    3. '   ' → logprob: -16.625
    4. 'max' → logprob: -16.8125
    5. ' ' → logprob: -17.0625
    6. '2' → logprob: -17.125
    7. 'i' → logprob: -17.1875
    8. '１' → logprob: -17.9375
    9. ')' → logprob: -18.1875
    10. '_max' → logprob: -18.375

Token 306: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7537752389907837
    2. '   ' → logprob: -0.8787752389907837
    3. ' -' → logprob: -2.503775119781494
    4. '
' → logprob: -4.003775119781494
    5. 'if' → logprob: -5.753775119781494
    6. '+' → logprob: -6.378775119781494
    7. 'def' → logprob: -6.753775119781494
    8. 'for' → logprob: -6.878775119781494
    9. 'print' → logprob: -7.378775119781494
    10. ' *' → logprob: -7.503775119781494

Token 307: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05683572217822075
    2. '3' → logprob: -2.931835651397705
    3. '4' → logprob: -6.806835651397705
    4. '9' → logprob: -7.806835651397705
    5. '(' → logprob: -9.181836128234863
    6. 'abs' → logprob: -9.181836128234863
    7. ' ' → logprob: -9.431836128234863
    8. '10' → logprob: -10.306836128234863
    9. '6' → logprob: -10.931836128234863
    10. '   ' → logprob: -11.056836128234863

Token 308: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3978928327560425
    2. '3' → logprob: -1.1478928327560425
    3. '9' → logprob: -5.647892951965332
    4. '4' → logprob: -5.772892951965332
    5. '10' → logprob: -6.022892951965332
    6. 'abs' → logprob: -7.022892951965332
    7. ' ' → logprob: -8.272892951965332
    8. '(' → logprob: -8.772892951965332
    9. '1' → logprob: -9.397892951965332
    10. '6' → logprob: -9.397892951965332

Token 309: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3335311710834503
    2. 'while' → logprob: -1.958531141281128
    3. 'if' → logprob: -2.833531141281128
    4. '   ' → logprob: -3.583531141281128
    5. 'for' → logprob: -4.708531379699707
    6. 'r' → logprob: -5.333531379699707
    7. 'res' → logprob: -5.458531379699707
    8. 'k' → logprob: -5.458531379699707
    9. 's' → logprob: -5.583531379699707
    10. 'diff' → logprob: -5.833531379699707

Token 311: ' xx' (ID: 44242)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7952713370323181
    2. 'while' → logprob: -1.670271396636963
    3. 'if' → logprob: -2.295271396636963
    4. 'res' → logprob: -3.420271396636963
    5. 'ans' → logprob: -3.545271396636963
    6. 'diff' → logprob: -3.795271396636963
    7. 'for' → logprob: -4.170271396636963
    8. 'r' → logprob: -4.420271396636963
    9. 'x' → logprob: -4.420271396636963
    10. 's' → logprob: -4.670271396636963

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16272839903831482
    2. ' =' → logprob: -1.9127284288406372
    3. ',' → logprob: -6.162728309631348
    4. '   ' → logprob: -8.537728309631348
    5. 's' → logprob: -10.037728309631348
    6. '=get' → logprob: -10.287728309631348
    7. 'x' → logprob: -10.662728309631348
    8. ' ' → logprob: -10.787728309631348
    9. 'a' → logprob: -11.662728309631348
    10. '1' → logprob: -11.662728309631348

Token 313: ' ' (ID: 220)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.24056316912174225
    2. '(get' → logprob: -2.490563154220581
    3. 'a' → logprob: -2.865563154220581
    4. 'abs' → logprob: -3.365563154220581
    5. '(a' → logprob: -4.36556339263916
    6. '0' → logprob: -5.11556339263916
    7. '(abs' → logprob: -5.24056339263916
    8. '((' → logprob: -5.36556339263916
    9. '(' → logprob: -5.61556339263916
    10. '3' → logprob: -5.74056339263916

Token 314: '2' (ID: 17)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.10593364387750626
    2. '(get' → logprob: -2.980933666229248
    3. 'a' → logprob: -3.605933666229248
    4. 'abs' → logprob: -4.730933666229248
    5. '(a' → logprob: -5.230933666229248
    6. '0' → logprob: -5.980933666229248
    7. '((' → logprob: -6.730933666229248
    8. '(abs' → logprob: -6.730933666229248
    9. '3' → logprob: -6.855933666229248
    10. '(' → logprob: -7.230933666229248

Token 315: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7968037724494934
    2. ' **' → logprob: -1.4218037128448486
    3. '**' → logprob: -1.6718037128448486
    4. '*' → logprob: -2.1718037128448486
    5. ' ***' → logprob: -6.546803951263428
    6. '3' → logprob: -6.546803951263428
    7. '***' → logprob: -6.671803951263428
    8. '*(' → logprob: -7.546803951263428
    9. '0' → logprob: -7.921803951263428
    10. '   ' → logprob: -8.42180347442627

Token 316: 'iii' (ID: 50812)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.7684808373451233
    2. '(' → logprob: -1.8934807777404785
    3. 'iii' → logprob: -2.0184807777404785
    4. 'get' → logprob: -2.3934807777404785
    5. '(res' → logprob: -3.0184807777404785
    6. '(a' → logprob: -3.6434807777404785
    7. '(abs' → logprob: -3.7684807777404785
    8. '((' → logprob: -3.8934807777404785
    9. 'abs' → logprob: -4.1434807777404785
    10. 'res' → logprob: -4.7684807777404785

Token 317: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8711301684379578
    2. '+' → logprob: -1.6211302280426025
    3. ' -' → logprob: -1.7461302280426025
    4. '//' → logprob: -2.3711302280426025
    5. '-' → logprob: -2.7461302280426025
    6. ' //' → logprob: -3.3711302280426025
    7. '*' → logprob: -4.621129989624023
    8. ' *' → logprob: -5.496129989624023
    9. '   ' → logprob: -6.746129989624023
    10. ' ' → logprob: -7.871129989624023

Token 318: ' ' (ID: 220)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2840830981731415
    2. '(get' → logprob: -2.409083127975464
    3. 'iii' → logprob: -3.284083127975464
    4. '(' → logprob: -3.659083127975464
    5. '3' → logprob: -3.909083127975464
    6. '0' → logprob: -4.409082889556885
    7. ' get' → logprob: -4.534082889556885
    8. '1' → logprob: -4.659082889556885
    9. '2' → logprob: -4.909082889556885
    10. '((' → logprob: -5.034082889556885

Token 319: '1' (ID: 16)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2531108260154724
    2. '3' → logprob: -3.003110885620117
    3. '(get' → logprob: -3.253110885620117
    4. 'iii' → logprob: -3.378110885620117
    5. '(' → logprob: -3.753110885620117
    6. '2' → logprob: -3.878110885620117
    7. '0' → logprob: -4.128110885620117
    8. '1' → logprob: -4.128110885620117
    9. 'min' → logprob: -5.503110885620117
    10. 'a' → logprob: -5.503110885620117

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7624995708465576
    2. '<|end|>' → logprob: -0.7624995708465576
    3. '   ' → logprob: -3.1374995708465576
    4. 'print' → logprob: -5.387499809265137
    5. '<|end|>' → logprob: -5.512499809265137
    6. '#' → logprob: -6.137499809265137
    7. '    
' → logprob: -6.512499809265137
    8. ';' → logprob: -6.637499809265137
    9. ' if' → logprob: -7.012499809265137
    10. '*' → logprob: -7.262499809265137

Token 321: '   ' (ID: 271)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.16554754972457886
    2. '	yy' → logprob: -3.2905476093292236
    3. '   ' → logprob: -3.4155476093292236
    4. 'y' → logprob: -4.0405473709106445
    5. ' yy' → logprob: -4.1655473709106445
    6. 'print' → logprob: -4.2905473709106445
    7. '<|end|>' → logprob: -4.2905473709106445
    8. 'yyy' → logprob: -4.6655473709106445
    9. 'iii' → logprob: -7.0405473709106445
    10. ',' → logprob: -7.0405473709106445

Token 322: ' ##' (ID: 17252)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.01551936473697424
    2. 'print' → logprob: -5.390519142150879
    3. 'if' → logprob: -6.515519142150879
    4. ' yy' → logprob: -7.015519142150879
    5. 'yyy' → logprob: -7.265519142150879
    6. 'ii' → logprob: -7.390519142150879
    7. 'oo' → logprob: -7.390519142150879
    8. 'y' → logprob: -7.390519142150879
    9. 'res' → logprob: -7.515519142150879
    10. 'while' → logprob: -7.515519142150879

Token 323: ' h' (ID: 312)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.08923247456550598
    2. 'print' → logprob: -3.9642324447631836
    3. 'yyy' → logprob: -4.714232444763184
    4. 'y' → logprob: -5.214232444763184
    5. 'if' → logprob: -5.214232444763184
    6. 'res' → logprob: -5.464232444763184
    7. 'xx' → logprob: -5.839232444763184
    8. 'dy' → logprob: -5.964232444763184
    9. 'while' → logprob: -6.089232444763184
    10. 'rr' → logprob: -6.214232444763184

Token 324: 'aph' (ID: 3837)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2303297519683838
    2. 'h' → logprob: -2.355329751968384
    3. 'hh' → logprob: -2.355329751968384
    4. '#' → logprob: -3.105329751968384
    5. 'hhh' → logprob: -3.355329751968384
    6. '   ' → logprob: -3.355329751968384
    7. 'igh' → logprob: -3.480329751968384
    8. 'i' → logprob: -3.480329751968384
    9. 'y' → logprob: -3.605329751968384
    10. 'ere' → logprob: -3.605329751968384

Token 325: 'azard' (ID: 161784)
  Prédit: 'azard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'azard' → logprob: -0.0028889216482639313
    2. 'haz' → logprob: -6.377889156341553
    3. '   ' → logprob: -7.752889156341553
    4. 'az' → logprob: -8.252888679504395
    5. 'ack' → logprob: -8.252888679504395
    6. 'azz' → logprob: -8.627888679504395
    7. 'as' → logprob: -11.752888679504395
    8. 'z' → logprob: -12.252888679504395
    9. 'h' → logprob: -12.377888679504395
    10. 'azy' → logprob: -12.627888679504395

Token 326: ' math' (ID: 13324)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yy' → logprob: -1.5541558265686035
    2. ' =' → logprob: -1.6791558265686035
    3. 'y' → logprob: -1.8041558265686035
    4. '=' → logprob: -2.4291558265686035
    5. 'x' → logprob: -2.8041558265686035
    6. 'yyy' → logprob: -2.8041558265686035
    7. '   ' → logprob: -3.3041558265686035
    8. 'xxx' → logprob: -3.5541558265686035
    9. 'for' → logprob: -3.8041558265686035
    10. 'xx' → logprob: -4.1791558265686035

Token 327: ' mixed' (ID: 16435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06714235991239548
    2. '
' → logprob: -3.9421422481536865
    3. 'yy' → logprob: -4.192142486572266
    4. 'y' → logprob: -4.817142486572266
    5. '    
' → logprob: -5.692142486572266
    6. 'yyy' → logprob: -6.317142486572266
    7. ',' → logprob: -6.442142486572266
    8. 'print' → logprob: -6.692142486572266
    9. 'x' → logprob: -6.692142486572266
    10. '+' → logprob: -7.192142486572266

Token 328: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.33659103512763977
    2. '   ' → logprob: -1.4615910053253174
    3. ' with' → logprob: -3.9615910053253174
    4. 'xx' → logprob: -4.7115912437438965
    5. 'x' → logprob: -5.0865912437438965
    6. '=' → logprob: -5.3365912437438965
    7. ',' → logprob: -6.2115912437438965
    8. 'xxx' → logprob: -6.2115912437438965
    9. 'iii' → logprob: -6.5865912437438965
    10. 'in' → logprob: -6.8365912437438965

Token 329: ' variable' (ID: 11076)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1677658557891846
    2. '3' → logprob: -2.4177658557891846
    3. 'abs' → logprob: -2.4177658557891846
    4. '2' → logprob: -2.9177658557891846
    5. ' (' → logprob: -2.9177658557891846
    6. 'lambda' → logprob: -2.9177658557891846
    7. ' lambda' → logprob: -3.0427658557891846
    8. ' abs' → logprob: -3.1677658557891846
    9. ' get' → logprob: -3.1677658557891846
    10. ' ' → logprob: -3.1677658557891846

Token 330: ' mutation' (ID: 52929)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.4106065332889557
    2. 'x' → logprob: -3.535606622695923
    3. 'xxx' → logprob: -3.535606622695923
    4. 'ii' → logprob: -3.910606622695923
    5. 'yyy' → logprob: -3.910606622695923
    6. 'jj' → logprob: -4.035606384277344
    7. 'xx' → logprob: -4.160606384277344
    8. 'y' → logprob: -4.285606384277344
    9. 'zz' → logprob: -4.285606384277344
    10. 'iii' → logprob: -4.285606384277344

Token 331: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21751224994659424
    2. 'yy' → logprob: -2.9675121307373047
    3. 'while' → logprob: -3.4675121307373047
    4. 'xx' → logprob: -3.8425121307373047
    5. ' while' → logprob: -4.592512130737305
    6. 'x' → logprob: -4.592512130737305
    7. 'y' → logprob: -4.717512130737305
    8. 'yyy' → logprob: -4.717512130737305
    9. 'xxx' → logprob: -4.967512130737305
    10. 'iii' → logprob: -5.467512130737305

Token 332: ' spaghetti' (ID: 121355)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.9253917932510376
    2. ' inline' → logprob: -2.550391674041748
    3. ' bit' → logprob: -2.925391674041748
    4. ' string' → logprob: -3.050391674041748
    5. ' logic' → logprob: -3.175391674041748
    6. ' list' → logprob: -3.300391674041748
    7. ' comments' → logprob: -3.425391674041748
    8. 'lambda' → logprob: -3.425391674041748
    9. ' lamb' → logprob: -3.550391674041748
    10. '#' → logprob: -3.675391674041748

Token 333: ' assignment' (ID: 24618)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1875272989273071
    2. 'yy' → logprob: -1.5625272989273071
    3. 'y' → logprob: -2.0625271797180176
    4. 'xxx' → logprob: -3.4375271797180176
    5. 'xx' → logprob: -3.5625271797180176
    6. 's' → logprob: -3.5625271797180176
    7. 'i' → logprob: -3.6875271797180176
    8. 'code' → logprob: -4.062527179718018
    9. '   ' → logprob: -4.187527179718018
    10. ' code' → logprob: -4.312527179718018

Token 334: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0808086395263672
    2. 'x' → logprob: -1.7058086395263672
    3. 'xx' → logprob: -2.580808639526367
    4. 'xxx' → logprob: -2.705808639526367
    5. 'y' → logprob: -2.830808639526367
    6. 'yy' → logprob: -3.205808639526367
    7. ',' → logprob: -3.330808639526367
    8. 'iii' → logprob: -3.830808639526367
    9. '
' → logprob: -4.205808639526367
    10. 'a' → logprob: -4.205808639526367

Token 335: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3723673820495605
    2. '   ' → logprob: -1.4973673820495605
    3. 'y' → logprob: -2.8723673820495605
    4. 'xx' → logprob: -2.8723673820495605
    5. 'print' → logprob: -3.2473673820495605
    6. ' x' → logprob: -3.6223673820495605
    7. 'a' → logprob: -3.6223673820495605
    8. 'yy' → logprob: -3.7473673820495605
    9. ' y' → logprob: -3.9973673820495605
    10. ' xx' → logprob: -4.1223673820495605

Token 336: ' shift' (ID: 12847)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0516750812530518
    2. 'b' → logprob: -1.3016750812530518
    3. 'xx' → logprob: -1.9266750812530518
    4. 'x' → logprob: -3.0516750812530518
    5. 'xxx' → logprob: -3.6766750812530518
    6. 'yy' → logprob: -4.051674842834473
    7. 'aa' → logprob: -4.176674842834473
    8. 'iii' → logprob: -4.426674842834473
    9. 'd' → logprob: -4.676674842834473
    10. 'bb' → logprob: -4.676674842834473

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23428215086460114
    2. '=' → logprob: -1.60928213596344
    3. 'x' → logprob: -5.98428201675415
    4. ',' → logprob: -5.98428201675415
    5. '_x' → logprob: -6.73428201675415
    6. 'ed' → logprob: -6.85928201675415
    7. 's' → logprob: -7.98428201675415
    8. '1' → logprob: -8.484282493591309
    9. 'a' → logprob: -8.859282493591309
    10. '_' → logprob: -8.984282493591309

Token 338: ' a' (ID: 261)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xx' → logprob: -1.5949363708496094
    2. 'get' → logprob: -1.9699363708496094
    3. '(xx' → logprob: -2.0949363708496094
    4. '(' → logprob: -2.0949363708496094
    5. 'abs' → logprob: -2.2199363708496094
    6. '(get' → logprob: -2.9699363708496094
    7. 'res' → logprob: -3.4699363708496094
    8. '(abs' → logprob: -3.5949363708496094
    9. '((' → logprob: -3.7199363708496094
    10. 'iii' → logprob: -3.8449363708496094

Token 339: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5363593101501465
    2. ' %' → logprob: -1.5363593101501465
    3. '%' → logprob: -2.4113593101501465
    4. '-' → logprob: -2.9113593101501465
    5. ' +' → logprob: -3.2863593101501465
    6. '+' → logprob: -4.6613593101501465
    7. ' //' → logprob: -5.0363593101501465
    8. ' ' → logprob: -7.2863593101501465
    9. '//' → logprob: -7.2863593101501465
    10. '%x' → logprob: -8.036359786987305

Token 340: ' ((' (ID: 3536)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.02421068400144577
    2. 'get' → logprob: -4.899210453033447
    3. '(xx' → logprob: -5.524210453033447
    4. '(' → logprob: -5.774210453033447
    5. 'xxx' → logprob: -6.024210453033447
    6. 'c' → logprob: -6.024210453033447
    7. 'iii' → logprob: -6.774210453033447
    8. ' xx' → logprob: -7.149210453033447
    9. '(get' → logprob: -7.399210453033447
    10. '3' → logprob: -7.899210453033447

Token 341: 'a' (ID: 64)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.31420212984085083
    2. 'a' → logprob: -1.814202070236206
    3. 'get' → logprob: -2.814202070236206
    4. '(xx' → logprob: -4.064202308654785
    5. '(get' → logprob: -5.189202308654785
    6. '(a' → logprob: -5.439202308654785
    7. 'xxx' → logprob: -5.814202308654785
    8. '2' → logprob: -6.189202308654785
    9. '3' → logprob: -6.314202308654785
    10. ' xx' → logprob: -6.439202308654785

Token 342: '-' (ID: 12)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3754505515098572
    2. '//' → logprob: -1.250450611114502
    3. '%' → logprob: -4.125450611114502
    4. ' %' → logprob: -5.250450611114502
    5. '-' → logprob: -6.500450611114502
    6. '>>' → logprob: -6.625450611114502
    7. ' -' → logprob: -6.875450611114502
    8. ')' → logprob: -7.125450611114502
    9. ')//' → logprob: -9.125450134277344
    10. ' >>' → logprob: -9.250450134277344

Token 343: '1' (ID: 16)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.1970842033624649
    2. 'b' → logprob: -2.5720841884613037
    3. 'a' → logprob: -3.5720841884613037
    4. 'c' → logprob: -4.447084426879883
    5. 'iii' → logprob: -4.447084426879883
    6. '(xx' → logprob: -4.447084426879883
    7. ' xx' → logprob: -4.572084426879883
    8. 'xxx' → logprob: -4.697084426879883
    9. 'ii' → logprob: -5.697084426879883
    10. '(a' → logprob: -5.947084426879883

Token 344: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04524880275130272
    2. ')//' → logprob: -3.1702487468719482
    3. ' )' → logprob: -6.920248985290527
    4. '//' → logprob: -7.670248985290527
    5. ')%' → logprob: -7.670248985290527
    6. ' //' → logprob: -8.920248985290527
    7. '+' → logprob: -9.545248985290527
    8. '%' → logprob: -9.670248985290527
    9. ')#' → logprob: -11.545248985290527
    10. ')>>' → logprob: -11.982748985290527

Token 345: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007903060875833035
    2. ')//' → logprob: -5.132903099060059
    3. ')%' → logprob: -6.882903099060059
    4. ' )' → logprob: -7.882903099060059
    5. '+' → logprob: -8.507903099060059
    6. '%' → logprob: -8.632903099060059
    7. '//' → logprob: -9.007903099060059
    8. '-' → logprob: -10.507903099060059
    9. ' //' → logprob: -11.257903099060059
    10. ')
' → logprob: -12.507903099060059

Token 346: ' (' (ID: 350)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.13280124962329865
    2. 'iii' → logprob: -2.3828012943267822
    3. ' xx' → logprob: -3.8828012943267822
    4. 'xxx' → logprob: -5.007801055908203
    5. '(' → logprob: -6.132801055908203
    6. ' iii' → logprob: -6.632801055908203
    7. '(xx' → logprob: -7.007801055908203
    8. ' (' → logprob: -8.757801055908203
    9. ' xxx' → logprob: -8.882801055908203
    10. ' ' → logprob: -10.007801055908203

Token 347: '3' (ID: 18)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.1937277913093567
    2. 'iii' → logprob: -1.943727731704712
    3. 'xxx' → logprob: -4.068727970123291
    4. ' xx' → logprob: -4.943727970123291
    5. ' iii' → logprob: -5.068727970123291
    6. '(' → logprob: -7.568727970123291
    7. 'ii' → logprob: -7.693727970123291
    8. '3' → logprob: -7.693727970123291
    9. ' ' → logprob: -7.943727970123291
    10. ' xxx' → logprob: -8.568727493286133

Token 348: ' *' (ID: 425)
  Prédit: 'iii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iii' → logprob: -0.0631898045539856
    2. '**' → logprob: -3.813189744949341
    3. 'xxx' → logprob: -3.938189744949341
    4. ' iii' → logprob: -5.06318998336792
    5. 'xx' → logprob: -5.06318998336792
    6. ')' → logprob: -6.06318998336792
    7. '*' → logprob: -6.18818998336792
    8. '{' → logprob: -7.18818998336792
    9. '   ' → logprob: -7.68818998336792
    10. '***' → logprob: -7.93818998336792

Token 349: ' iii' (ID: 117876)
  Prédit: 'iii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iii' → logprob: -0.004780880641192198
    2. ' iii' → logprob: -6.0047807693481445
    3. 'xx' → logprob: -6.5047807693481445
    4. 'xxx' → logprob: -7.3797807693481445
    5. 'ii' → logprob: -9.254780769348145
    6. '   ' → logprob: -10.629780769348145
    7. ' ' → logprob: -11.004780769348145
    8. '  ' → logprob: -11.504780769348145
    9. '(' → logprob: -11.504780769348145
    10. ' xx' → logprob: -11.629780769348145

Token 350: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6957746148109436
    2. '))' → logprob: -0.6957746148109436
    3. '+' → logprob: -7.070774555206299
    4. ' )' → logprob: -7.320774555206299
    5. ')))' → logprob: -8.195775032043457
    6. ' ))' → logprob: -8.195775032043457
    7. ')+' → logprob: -8.695775032043457
    8. '))
' → logprob: -9.195775032043457
    9. ' +' → logprob: -9.445775032043457
    10. '   ' → logprob: -9.945775032043457

Token 351: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.725148618221283
    2. '   ' → logprob: -1.1001486778259277
    3. '
' → logprob: -2.4751486778259277
    4. ' -' → logprob: -3.2251486778259277
    5. '+' → logprob: -3.3501486778259277
    6. '<|end|>' → logprob: -4.725148677825928
    7. ' //' → logprob: -5.725148677825928
    8. '    
' → logprob: -6.350148677825928
    9. 'def' → logprob: -6.475148677825928
    10. '-' → logprob: -6.975148677825928

Token 352: ' ' (ID: 220)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.20621269941329956
    2. 'iii' → logprob: -2.3312127590179443
    3. '(' → logprob: -3.4562127590179443
    4. '1' → logprob: -3.9562127590179443
    5. ' xx' → logprob: -4.081212520599365
    6. 'ii' → logprob: -5.581212520599365
    7. '   ' → logprob: -5.831212520599365
    8. ' iii' → logprob: -5.956212520599365
    9. 'xxx' → logprob: -6.081212520599365
    10. '2' → logprob: -6.206212520599365

Token 353: '1' (ID: 16)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.09654171764850616
    2. 'iii' → logprob: -3.3465416431427
    3. '(' → logprob: -3.5965416431427
    4. '1' → logprob: -4.221541881561279
    5. 'ii' → logprob: -5.846541881561279
    6. 'xxx' → logprob: -5.971541881561279
    7. ' xx' → logprob: -6.096541881561279
    8. '2' → logprob: -6.221541881561279
    9. '(xx' → logprob: -6.346541881561279
    10. '3' → logprob: -7.221541881561279

Token 354: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5009042620658875
    2. ' +' → logprob: -1.5009043216705322
    3. '+' → logprob: -2.7509043216705322
    4. '<|end|>' → logprob: -2.8759043216705322
    5. '
' → logprob: -4.000904083251953
    6. '    
' → logprob: -4.375904083251953
    7. ')' → logprob: -6.125904083251953
    8. ' *' → logprob: -6.125904083251953
    9. ';' → logprob: -6.375904083251953
    10. '<|end|>' → logprob: -6.625904083251953

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0871862843632698
    2. 'shift' → logprob: -3.587186336517334
    3. 'y' → logprob: -4.837186336517334
    4. '+' → logprob: -5.087186336517334
    5. 'x' → logprob: -5.587186336517334
    6. 'iii' → logprob: -6.212186336517334
    7. 'print' → logprob: -6.337186336517334
    8. 's' → logprob: -6.587186336517334
    9. ' shift' → logprob: -6.712186336517334
    10. ' y' → logprob: -6.962186336517334

Token 356: ' a' (ID: 261)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.7062789797782898
    2. 'y' → logprob: -2.3312790393829346
    3. 'shift' → logprob: -2.5812790393829346
    4. 'print' → logprob: -3.0812790393829346
    5. 'yyy' → logprob: -3.7062790393829346
    6. 'bb' → logprob: -3.7062790393829346
    7. 'xx' → logprob: -3.8312790393829346
    8. 'x' → logprob: -3.9562790393829346
    9. 'dy' → logprob: -3.9562790393829346
    10. 'rr' → logprob: -4.4562788009643555

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6448681950569153
    2. '=' → logprob: -1.3948681354522705
    3. ' -=' → logprob: -1.6448681354522705
    4. ' -' → logprob: -4.39486837387085
    5. '-' → logprob: -4.64486837387085
    6. '-=' → logprob: -4.89486837387085
    7. ',' → logprob: -6.39486837387085
    8. ' ' → logprob: -6.51986837387085
    9. ' +=' → logprob: -6.89486837387085
    10. '+=' → logprob: -8.394867897033691

Token 358: ' a' (ID: 261)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.5972282290458679
    2. 'a' → logprob: -1.5972282886505127
    3. '((' → logprob: -2.7222282886505127
    4. '(' → logprob: -3.0972282886505127
    5. 'c' → logprob: -3.2222282886505127
    6. '(a' → logprob: -3.5972282886505127
    7. ' shift' → logprob: -3.8472282886505127
    8. 'xx' → logprob: -4.097228050231934
    9. '(c' → logprob: -4.847228050231934
    10. ' a' → logprob: -5.347228050231934

Token 359: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08089962601661682
    2. '-' → logprob: -2.705899715423584
    3. ' %' → logprob: -5.705899715423584
    4. ' +' → logprob: -5.955899715423584
    5. '%' → logprob: -6.205899715423584
    6. '+' → logprob: -6.455899715423584
    7. ' ' → logprob: -6.830899715423584
    8. '   ' → logprob: -9.330899238586426
    9. 'shift' → logprob: -9.455899238586426
    10. 'a' → logprob: -10.455899238586426

Token 360: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.033344123512506485
    2. ' shift' → logprob: -3.533344030380249
    3. '(' → logprob: -6.533344268798828
    4. 'iii' → logprob: -7.158344268798828
    5. '((' → logprob: -7.408344268798828
    6. ' (' → logprob: -8.783344268798828
    7. '1' → logprob: -9.158344268798828
    8. 'xx' → logprob: -9.283344268798828
    9. '(((' → logprob: -9.783344268798828
    10. ' ((' → logprob: -9.908344268798828

Token 361: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8377557992935181
    2. '<|end|>' → logprob: -0.8377557992935181
    3. '   ' → logprob: -2.2127556800842285
    4. 'b' → logprob: -3.9627556800842285
    5. '    
' → logprob: -6.8377556800842285
    6. '+' → logprob: -7.0877556800842285
    7. ' +' → logprob: -7.2127556800842285
    8. ' b' → logprob: -7.2127556800842285
    9. 'shift' → logprob: -7.3377556800842285
    10. '<|end|>' → logprob: -7.7127556800842285

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045382093638181686
    2. 'b' → logprob: -3.420382022857666
    3. ' b' → logprob: -4.545382022857666
    4. '<|end|>' → logprob: -7.420382022857666
    5. ' shift' → logprob: -9.170382499694824
    6. 'd' → logprob: -9.170382499694824
    7. 'shift' → logprob: -9.795382499694824
    8. '    ' → logprob: -10.545382499694824
    9. ',' → logprob: -10.670382499694824
    10. ' d' → logprob: -10.670382499694824

Token 363: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.766362190246582
    2. ' b' → logprob: -1.266362190246582
    3. '   ' → logprob: -1.391362190246582
    4. 'd' → logprob: -6.641362190246582
    5. ' d' → logprob: -7.016362190246582
    6. ' shift' → logprob: -7.016362190246582
    7. 'shift' → logprob: -8.141362190246582
    8. '<|end|>' → logprob: -8.266362190246582
    9. ' x' → logprob: -8.766362190246582
    10. ' ' → logprob: -8.891362190246582

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28591448068618774
    2. '=' → logprob: -1.410914421081543
    3. ' -=' → logprob: -5.410914421081543
    4. '-=' → logprob: -8.410914421081543
    5. '   ' → logprob: -10.410914421081543
    6. ' +=' → logprob: -11.160914421081543
    7. '-' → logprob: -12.160914421081543
    8. '+=' → logprob: -12.785914421081543
    9. 'c' → logprob: -13.410914421081543
    10. ' -' → logprob: -13.535914421081543

Token 365: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.100409597158432
    2. ' c' → logprob: -2.350409507751465
    3. '   ' → logprob: -9.475409507751465
    4. 'shift' → logprob: -9.600409507751465
    5. 'a' → logprob: -10.725409507751465
    6. ' shift' → logprob: -11.225409507751465
    7. '(c' → logprob: -11.350409507751465
    8. ' ' → logprob: -12.850409507751465
    9. ' a' → logprob: -13.600409507751465
    10. '    ' → logprob: -13.850409507751465

Token 366: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029757089912891388
    2. '-' → logprob: -3.529757022857666
    3. '-c' → logprob: -13.529757499694824
    4. ' -=' → logprob: -13.654757499694824
    5. ' ' → logprob: -13.904757499694824
    6. '   ' → logprob: -14.029757499694824
    7. 'c' → logprob: -14.154757499694824
    8. 'a' → logprob: -14.654757499694824
    9. '-=' → logprob: -15.404757499694824
    10. '=' → logprob: -15.529757499694824

Token 367: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.0004891689168289304
    2. ' shift' → logprob: -7.625489234924316
    3. '   ' → logprob: -13.750489234924316
    4. 'hift' → logprob: -17.75048828125
    5. '.shift' → logprob: -18.00048828125
    6. 'a' → logprob: -18.37548828125
    7. '(' → logprob: -18.50048828125
    8. 'sh' → logprob: -18.50048828125
    9. ' ' → logprob: -18.62548828125
    10. '  ' → logprob: -19.37548828125

Token 368: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04325506091117859
    2. 'b' → logprob: -3.168255090713501
    3. 'shift' → logprob: -9.168254852294922
    4. 'd' → logprob: -9.293254852294922
    5. ' b' → logprob: -10.418254852294922
    6. 'a' → logprob: -12.543254852294922
    7. '```' → logprob: -12.668254852294922
    8. '	b' → logprob: -12.793254852294922
    9. '       ' → logprob: -12.793254852294922
    10. 'x' → logprob: -12.918254852294922

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5299240350723267
    2. 'b' → logprob: -0.9049240350723267
    3. 'd' → logprob: -5.654923915863037
    4. ' b' → logprob: -5.904923915863037
    5. 'shift' → logprob: -8.779924392700195
    6. ' d' → logprob: -9.654924392700195
    7. ' ' → logprob: -9.904924392700195
    8. '    ' → logprob: -10.154924392700195
    9. 'x' → logprob: -10.279924392700195
    10. '```' → logprob: -10.404924392700195

Token 370: ' total' (ID: 3609)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03198383376002312
    2. '   ' → logprob: -3.5319838523864746
    3. 'd' → logprob: -7.406983852386475
    4. ' b' → logprob: -7.781983852386475
    5. 'print' → logprob: -7.781983852386475
    6. 'shift' → logprob: -8.031983375549316
    7. 'iii' → logprob: -9.656983375549316
    8. 'x' → logprob: -10.031983375549316
    9. 'xx' → logprob: -10.031983375549316
    10. 'a' → logprob: -10.281983375549316

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13056574761867523
    2. ' =' → logprob: -2.130565643310547
    3. '+=' → logprob: -6.380565643310547
    4. '_' → logprob: -7.005565643310547
    5. ' +=' → logprob: -7.505565643310547
    6. '_=' → logprob: -9.880565643310547
    7. 'x' → logprob: -10.130565643310547
    8. 's' → logprob: -10.505565643310547
    9. '-=' → logprob: -10.505565643310547
    10. '_points' → logprob: -10.630565643310547

Token 372: ' get' (ID: 717)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6574208736419678
    2. '0' → logprob: -1.7824208736419678
    3. '(abs' → logprob: -2.5324208736419678
    4. '(' → logprob: -2.7824208736419678
    5. 'xx' → logprob: -3.0324208736419678
    6. '(xx' → logprob: -3.9074208736419678
    7. ' abs' → logprob: -4.407421112060547
    8. '((' → logprob: -4.532421112060547
    9. 'get' → logprob: -4.532421112060547
    10. 'max' → logprob: -4.657421112060547

Token 373: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.0009799322579056025
    2. 'abs' → logprob: -7.000979900360107
    3. '_s' → logprob: -9.625980377197266
    4. 's' → logprob: -13.750980377197266
    5. 'Abs' → logprob: -14.375980377197266
    6. '(abs' → logprob: -15.625980377197266
    7. ' abs' → logprob: -16.125980377197266
    8. '_ab' → logprob: -16.375980377197266
    9. '_max' → logprob: -16.375980377197266
    10. '```' → logprob: -16.625980377197266

Token 374: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4296706020832062
    2. '(b' → logprob: -1.1796705722808838
    3. '(c' → logprob: -3.554670572280884
    4. '((' → logprob: -4.679670810699463
    5. '(' → logprob: -6.554670810699463
    6. '(d' → logprob: -6.929670810699463
    7. '(get' → logprob: -7.429670810699463
    8. 'a' → logprob: -8.179670333862305
    9. '(((' → logprob: -8.179670333862305
    10. '(abs' → logprob: -9.054670333862305

Token 375: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02078944630920887
    2. '-' → logprob: -3.895789384841919
    3. '-sh' → logprob: -9.39578914642334
    4. ')' → logprob: -10.27078914642334
    5. '-b' → logprob: -10.39578914642334
    6. ' ' → logprob: -10.52078914642334
    7. '   ' → logprob: -10.89578914642334
    8. '-c' → logprob: -11.64578914642334
    9. ' +' → logprob: -11.64578914642334
    10. '-total' → logprob: -11.64578914642334

Token 376: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09135683625936508
    2. 'shift' → logprob: -2.4663567543029785
    3. '(' → logprob: -6.3413567543029785
    4. '(d' → logprob: -8.216357231140137
    5. ' d' → logprob: -8.716357231140137
    6. ' shift' → logprob: -9.216357231140137
    7. '   ' → logprob: -9.466357231140137
    8. 'c' → logprob: -11.466357231140137
    9. '((' → logprob: -11.591357231140137
    10. ' (' → logprob: -12.216357231140137

Token 377: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000565541791729629
    2. ')
' → logprob: -8.250565528869629
    3. '   ' → logprob: -8.375565528869629
    4. ' )' → logprob: -9.875565528869629
    5. ')+' → logprob: -11.500565528869629
    6. '<|end|>' → logprob: -12.625565528869629
    7. '+' → logprob: -13.500565528869629
    8. ' +' → logprob: -14.125565528869629
    9. ')

' → logprob: -14.375565528869629
    10. '  ' → logprob: -14.500565528869629

Token 378: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.487800270318985
    2. '   ' → logprob: -1.3628002405166626
    3. '+' → logprob: -2.612800359725952
    4. '<|end|>' → logprob: -3.737800359725952
    5. ' -' → logprob: -4.112800121307373
    6. '
' → logprob: -4.612800121307373
    7. '-' → logprob: -6.862800121307373
    8. ' if' → logprob: -6.987800121307373
    9. 'if' → logprob: -7.362800121307373
    10. 'def' → logprob: -7.487800121307373

Token 379: ' min' (ID: 1349)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.3599785566329956
    2. 'abs' → logprob: -1.7349785566329956
    3. 'xx' → logprob: -2.734978675842285
    4. '(xx' → logprob: -4.109978675842285
    5. '(get' → logprob: -4.609978675842285
    6. ' get' → logprob: -4.609978675842285
    7. '(abs' → logprob: -4.734978675842285
    8. '(' → logprob: -5.109978675842285
    9. '1' → logprob: -6.234978675842285
    10. ' abs' → logprob: -6.609978675842285

Token 380: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.1314171403646469
    2. '(abs' → logprob: -2.5064170360565186
    3. '((' → logprob: -4.506417274475098
    4. '(' → logprob: -4.506417274475098
    5. '(
' → logprob: -4.881417274475098
    6. '(b' → logprob: -4.881417274475098
    7. '(a' → logprob: -5.881417274475098
    8. 'get' → logprob: -7.506417274475098
    9. '(xx' → logprob: -7.881417274475098
    10. '(c' → logprob: -8.131417274475098

Token 381: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.0002752790169324726
    2. 'abs' → logprob: -8.375275611877441
    3. '(abs' → logprob: -10.500275611877441
    4. 'Abs' → logprob: -12.375275611877441
    5. '(b' → logprob: -12.625275611877441
    6. '_s' → logprob: -12.750275611877441
    7. '(a' → logprob: -13.000275611877441
    8. '(c' → logprob: -13.125275611877441
    9. '_ab' → logprob: -14.250275611877441
    10. ' abs' → logprob: -14.625275611877441

Token 382: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.019202977418899536
    2. '(b' → logprob: -4.519203186035156
    3. '(c' → logprob: -5.394203186035156
    4. '(xx' → logprob: -6.519203186035156
    5. '((' → logprob: -6.769203186035156
    6. '(' → logprob: -7.894203186035156
    7. '(get' → logprob: -8.394203186035156
    8. '(x' → logprob: -8.519203186035156
    9. '(res' → logprob: -9.519203186035156
    10. '(abs' → logprob: -10.769203186035156

Token 383: 'iii' (ID: 50812)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.056641317903995514
    2. 'a' → logprob: -3.0566413402557373
    3. '((' → logprob: -5.681641101837158
    4. '(' → logprob: -6.681641101837158
    5. '(c' → logprob: -6.681641101837158
    6. '(xx' → logprob: -7.056641101837158
    7. '(b' → logprob: -7.306641101837158
    8. '(x' → logprob: -8.806641578674316
    9. '(get' → logprob: -9.056641578674316
    10. 'xx' → logprob: -10.056641578674316

Token 384: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6633255481719971
    2. '),' → logprob: -1.288325548171997
    3. '-' → logprob: -2.288325548171997
    4. '*' → logprob: -2.538325548171997
    5. ')' → logprob: -4.913325309753418
    6. ' *' → logprob: -5.288325309753418
    7. ' +' → logprob: -5.913325309753418
    8. '+' → logprob: -5.913325309753418
    9. ' ),' → logprob: -6.038325309753418
    10. ' ' → logprob: -6.163325309753418

Token 385: ' a' (ID: 261)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.7144772410392761
    2. '(a' → logprob: -1.714477300643921
    3. '(xx' → logprob: -2.339477300643921
    4. 'get' → logprob: -2.964477300643921
    5. '(get' → logprob: -3.214477300643921
    6. '(c' → logprob: -3.214477300643921
    7. 'b' → logprob: -3.214477300643921
    8. 'a' → logprob: -3.964477300643921
    9. 'xx' → logprob: -4.339477062225342
    10. ' (' → logprob: -4.714477062225342

Token 386: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11915004998445511
    2. ')' → logprob: -2.244150161743164
    3. '%' → logprob: -5.744150161743164
    4. ' ),' → logprob: -6.869150161743164
    5. ' %' → logprob: -7.494150161743164
    6. ')+' → logprob: -7.619150161743164
    7. '   ' → logprob: -7.994150161743164
    8. ' +' → logprob: -8.869150161743164
    9. '+' → logprob: -9.244150161743164
    10. '),
' → logprob: -9.619150161743164

Token 387: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06105152890086174
    2. ' +' → logprob: -3.436051607131958
    3. ' ,' → logprob: -4.186051368713379
    4. '+' → logprob: -4.686051368713379
    5. ',get' → logprob: -6.811051368713379
    6. '   ' → logprob: -7.436051368713379
    7. ' -' → logprob: -8.436051368713379
    8. '-' → logprob: -8.686051368713379
    9. ',
' → logprob: -9.061051368713379
    10. ')' → logprob: -9.061051368713379

Token 388: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0011302133789286017
    2. ' get' → logprob: -7.001130104064941
    3. 'abs' → logprob: -9.376130104064941
    4. '1' → logprob: -9.751130104064941
    5. '(get' → logprob: -10.251130104064941
    6. 'xx' → logprob: -10.626130104064941
    7. '   ' → logprob: -12.751130104064941
    8. '3' → logprob: -13.001130104064941
    9. '(xx' → logprob: -13.001130104064941
    10. '  ' → logprob: -13.376130104064941

Token 389: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -7.576873758807778e-05
    2. 'abs' → logprob: -9.500075340270996
    3. '(abs' → logprob: -14.750075340270996
    4. 'Abs' → logprob: -15.250075340270996
    5. '_s' → logprob: -15.750075340270996
    6. '(get' → logprob: -18.250076293945312
    7. 'get' → logprob: -18.250076293945312
    8. ' abs' → logprob: -18.500076293945312
    9. ' Abs' → logprob: -19.250076293945312
    10. '_ab' → logprob: -19.375076293945312

Token 390: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.258883535861969
    2. '(b' → logprob: -2.258883476257324
    3. '(xx' → logprob: -2.258883476257324
    4. '(c' → logprob: -4.133883476257324
    5. '(a' → logprob: -7.258883476257324
    6. '(ii' → logprob: -7.258883476257324
    7. '((' → logprob: -7.258883476257324
    8. '(x' → logprob: -7.883883476257324
    9. '(get' → logprob: -8.633883476257324
    10. '(d' → logprob: -9.008883476257324

Token 391: 'iii' (ID: 50812)
  Prédit: 'iii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iii' → logprob: -0.11656683683395386
    2. 'xx' → logprob: -3.2415668964385986
    3. '(' → logprob: -3.6165668964385986
    4. 'b' → logprob: -3.7415668964385986
    5. 'c' → logprob: -4.6165666580200195
    6. 'a' → logprob: -6.1165666580200195
    7. 'xxx' → logprob: -6.3665666580200195
    8. '(xx' → logprob: -6.9915666580200195
    9. '   ' → logprob: -7.3665666580200195
    10. '1' → logprob: -7.3665666580200195

Token 392: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47431012988090515
    2. '-' → logprob: -0.9743101596832275
    3. ' ' → logprob: -8.849309921264648
    4. '   ' → logprob: -10.599309921264648
    5. '+' → logprob: -10.849309921264648
    6. '  ' → logprob: -10.974309921264648
    7. ')' → logprob: -11.349309921264648
    8. ' +' → logprob: -12.224309921264648
    9. '*' → logprob: -12.849309921264648
    10. '    ' → logprob: -13.224309921264648

Token 393: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6339665651321411
    2. 'b' → logprob: -0.7589665651321411
    3. ' c' → logprob: -7.508966445922852
    4. ' b' → logprob: -8.133966445922852
    5. 'xx' → logprob: -8.258966445922852
    6. '(c' → logprob: -9.383966445922852
    7. '   ' → logprob: -9.883966445922852
    8. '(b' → logprob: -10.508966445922852
    9. 'x' → logprob: -11.008966445922852
    10. ' ' → logprob: -11.133966445922852

Token 394: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5205971002578735
    2. '),' → logprob: -1.1455971002578735
    3. ')' → logprob: -2.645596981048584
    4. ' ,' → logprob: -4.395596981048584
    5. ' +' → logprob: -6.145596981048584
    6. '+' → logprob: -6.895596981048584
    7. ')+' → logprob: -7.520596981048584
    8. '   ' → logprob: -7.770596981048584
    9. ' ),' → logprob: -8.645597457885742
    10. '))' → logprob: -10.020597457885742

Token 395: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0032163304276764393
    2. ' get' → logprob: -6.00321626663208
    3. 'abs' → logprob: -7.87821626663208
    4. 'xx' → logprob: -8.503216743469238
    5. '3' → logprob: -10.003216743469238
    6. '2' → logprob: -10.628216743469238
    7. 'max' → logprob: -11.128216743469238
    8. '   ' → logprob: -11.253216743469238
    9. '(get' → logprob: -11.753216743469238
    10. 'iii' → logprob: -11.753216743469238

Token 396: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.0001831565605243668
    2. 'abs' → logprob: -8.75018310546875
    3. '(abs' → logprob: -10.75018310546875
    4. 'Abs' → logprob: -13.25018310546875
    5. '(a' → logprob: -14.50018310546875
    6. '(get' → logprob: -15.25018310546875
    7. '_a' → logprob: -15.62518310546875
    8. 'a' → logprob: -15.62518310546875
    9. '_s' → logprob: -16.50018310546875
    10. '(' → logprob: -16.50018310546875

Token 397: '(xx' (ID: 161745)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7322127223014832
    2. '(b' → logprob: -1.732212781906128
    3. '(xx' → logprob: -1.732212781906128
    4. '(a' → logprob: -2.107212781906128
    5. '((' → logprob: -3.732212781906128
    6. '(get' → logprob: -5.357212543487549
    7. '(ii' → logprob: -5.357212543487549
    8. '(x' → logprob: -5.357212543487549
    9. '(abs' → logprob: -6.357212543487549
    10. '(res' → logprob: -6.857212543487549

Token 398: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14297422766685486
    2. '-' → logprob: -2.0179741382598877
    3. ' ' → logprob: -8.517973899841309
    4. '+' → logprob: -10.892973899841309
    5. '  ' → logprob: -11.017973899841309
    6. '   ' → logprob: -11.142973899841309
    7. '-a' → logprob: -11.142973899841309
    8. 'a' → logprob: -11.267973899841309
    9. ')' → logprob: -12.392973899841309
    10. ' +' → logprob: -12.517973899841309

Token 399: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006188179831951857
    2. ' a' → logprob: -5.13118839263916
    3. 'c' → logprob: -9.25618839263916
    4. 'iii' → logprob: -9.25618839263916
    5. 'b' → logprob: -10.38118839263916
    6. ' iii' → logprob: -11.88118839263916
    7. '   ' → logprob: -12.13118839263916
    8. ' c' → logprob: -12.13118839263916
    9. '  ' → logprob: -12.50618839263916
    10. 'xxx' → logprob: -12.75618839263916

Token 400: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007817533914931118
    2. ')+' → logprob: -7.250781536102295
    3. ' )' → logprob: -9.750782012939453
    4. '+' → logprob: -12.125782012939453
    5. '   ' → logprob: -12.625782012939453
    6. '-' → logprob: -13.500782012939453
    7. '))' → logprob: -13.750782012939453
    8. ' +' → logprob: -14.625782012939453
    9. '+)' → logprob: -14.875782012939453
    10. ' -' → logprob: -15.500782012939453

Token 401: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2337287813425064
    2. '+' → logprob: -1.7337287664413452
    3. ')' → logprob: -3.4837288856506348
    4. ')+' → logprob: -6.858728885650635
    5. ' )' → logprob: -10.608728408813477
    6. ' ' → logprob: -11.358728408813477
    7. '   ' → logprob: -11.983728408813477
    8. '),' → logprob: -12.358728408813477
    9. '))' → logprob: -13.233728408813477
    10. '>' → logprob: -13.358728408813477

Token 402: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2519315779209137
    2. 'get' → logprob: -1.5019315481185913
    3. '(get' → logprob: -13.751931190490723
    4. '	get' → logprob: -14.876931190490723
    5. '[get' → logprob: -15.001931190490723
    6. '.get' → logprob: -15.626931190490723
    7. ')get' → logprob: -15.626931190490723
    8. '=get' → logprob: -15.876931190490723
    9. '_get' → logprob: -16.37693214416504
    10. ' ' → logprob: -16.75193214416504

Token 403: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.1269766092300415
    2. 'abs' → logprob: -2.126976490020752
    3. 'get' → logprob: -10.12697696685791
    4. 'Abs' → logprob: -12.25197696685791
    5. ' abs' → logprob: -13.00197696685791
    6. '(abs' → logprob: -14.50197696685791
    7. '```' → logprob: -14.75197696685791
    8. ' Abs' → logprob: -15.37697696685791
    9. 'xx' → logprob: -16.376976013183594
    10. '
' → logprob: -16.501976013183594

Token 404: '(xx' (ID: 161745)
  Prédit: '(xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xx' → logprob: -0.029768766835331917
    2. '(' → logprob: -3.529768705368042
    3. ' (' → logprob: -11.654768943786621
    4. '(x' → logprob: -12.904768943786621
    5. '(ii' → logprob: -12.904768943786621
    6. 'xx' → logprob: -13.154768943786621
    7. '(ix' → logprob: -13.904768943786621
    8. '(cc' → logprob: -14.154768943786621
    9. '(
' → logprob: -14.779768943786621
    10. '(dd' → logprob: -15.904768943786621

Token 405: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06995110958814621
    2. '-' → logprob: -2.694951057434082
    3. ' ' → logprob: -11.319951057434082
    4. '   ' → logprob: -14.069951057434082
    5. '-c' → logprob: -14.194951057434082
    6. 'c' → logprob: -15.069951057434082
    7. '  ' → logprob: -15.319951057434082
    8. '<|end|>' → logprob: -15.819951057434082
    9. ' ' → logprob: -16.6949520111084
    10. '+' → logprob: -16.8199520111084

Token 406: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0036105208564549685
    2. ' c' → logprob: -5.628610610961914
    3. '   ' → logprob: -12.128610610961914
    4. ' ' → logprob: -13.378610610961914
    5. '	c' → logprob: -14.003610610961914
    6. '  ' → logprob: -14.503610610961914
    7. 'xx' → logprob: -14.503610610961914
    8. '    ' → logprob: -15.753610610961914
    9. ')c' → logprob: -15.753610610961914
    10. 'cc' → logprob: -15.878610610961914

Token 407: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012783304555341601
    2. '))' → logprob: -7.626278400421143
    3. ')
' → logprob: -8.126277923583984
    4. ' )' → logprob: -8.376277923583984
    5. '   ' → logprob: -8.626277923583984
    6. '+' → logprob: -10.501277923583984
    7. ')+' → logprob: -10.751277923583984
    8. ')))' → logprob: -12.251277923583984
    9. ' +' → logprob: -12.501277923583984
    10. ')}' → logprob: -12.751277923583984

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3887059688568115
    2. '<|end|>' → logprob: -1.6387059688568115
    3. ')' → logprob: -2.3887059688568115
    4. '+' → logprob: -3.5137059688568115
    5. ' +' → logprob: -5.763706207275391
    6. ',' → logprob: -7.638706207275391
    7. '...' → logprob: -7.888706207275391
    8. '<|end|>' → logprob: -8.01370620727539
    9. '#' → logprob: -8.13870620727539
    10. ';' → logprob: -8.76370620727539

Token 409: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7282823324203491
    2. '<|end|>' → logprob: -1.2282823324203491
    3. ')' → logprob: -1.7282823324203491
    4. '+' → logprob: -3.9782824516296387
    5. 'print' (adapté à ' print') → logprob: -4.353282451629639
    6. '#' → logprob: -5.728282451629639
    7. '...' → logprob: -5.853282451629639
    8. ' +' → logprob: -6.853282451629639
    9. '    ' → logprob: -6.978282451629639
    10. ' ' → logprob: -7.228282451629639

Token 410: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.007483933586627245
    2. 'total' → logprob: -5.007483959197998
    3. '(' → logprob: -7.257483959197998
    4. ' (' → logprob: -10.50748348236084
    5. ' total' → logprob: -10.63248348236084
    6. '(abs' → logprob: -12.00748348236084
    7. '((' → logprob: -13.13248348236084
    8. '(max' → logprob: -14.00748348236084
    9. '(res' → logprob: -14.13248348236084
    10. '(min' → logprob: -14.25748348236084

Token 411: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010986098641296849
    2. ' )' → logprob: -9.750109672546387
    3. '+' → logprob: -10.000109672546387
    4. ' +' → logprob: -13.500109672546387
    5. '*' → logprob: -13.750109672546387
    6. '+)' → logprob: -14.000109672546387
    7. '))' → logprob: -14.000109672546387
    8. '   ' → logprob: -15.000109672546387
    9. ')
' → logprob: -15.250109672546387
    10. ')#' → logprob: -15.500109672546387


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 409
Tokens correctement prédits (1ère position, stricte): 130
Tokens correctement prédits (1ère position, avec adaptation): 131
Tokens correctement prédits (top 10): 295
Précision stricte (1ère position): 31.78%
Précision adaptée (1ère position): 32.03%
Précision (top 10): 72.13%
================================================================================
