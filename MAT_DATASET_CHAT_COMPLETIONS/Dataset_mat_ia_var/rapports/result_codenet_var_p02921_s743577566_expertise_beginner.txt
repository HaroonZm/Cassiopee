================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
T = input()
count = 0
if S[0] == T[0]:
    count = count + 1
if S[1] == T[1]:
    count = count + 1
if S[2] == T[2]:
    count = count + 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029876865446567535
    2. '('' → logprob: -6.627987861633301
    3. ''' → logprob: -7.002987861633301
    4. '()' → logprob: -8.1279878616333
    5. '"' → logprob: -8.6279878616333
    6. '(
' → logprob: -9.3779878616333
    7. '`' → logprob: -9.8779878616333
    8. '("("' → logprob: -10.1279878616333
    9. '.' → logprob: -11.1279878616333
    10. ''s' → logprob: -11.3779878616333

Token 4: 'T' (ID: 51)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02674039453268051
    2. '[::-' → logprob: -4.651740550994873
    3. '[' → logprob: -5.026740550994873
    4. '.strip' → logprob: -5.401740550994873
    5. '+' → logprob: -6.776740550994873
    6. '.count' → logprob: -6.901740550994873
    7. '.lower' → logprob: -7.026740550994873
    8. '.split' → logprob: -7.526740550994873
    9. '.upper' → logprob: -7.651740550994873
    10. 'if' → logprob: -7.901740550994873

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20252157747745514
    2. '=' → logprob: -1.702521562576294
    3. ' ' → logprob: -7.952521800994873
    4. '_' → logprob: -8.452521324157715
    5. ' +=' → logprob: -9.202521324157715
    6. '(' → logprob: -9.327521324157715
    7. '.' → logprob: -9.452521324157715
    8. ')' → logprob: -9.452521324157715
    9. '[' → logprob: -9.827521324157715
    10. '()' → logprob: -10.202521324157715

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34916621446609497
    2. 'input' → logprob: -1.2241661548614502
    3. ' S' → logprob: -7.849166393280029
    4. 'int' → logprob: -9.099165916442871
    5. 'S' → logprob: -9.599165916442871
    6. ' ' → logprob: -9.599165916442871
    7. ' int' → logprob: -10.349165916442871
    8. '(input' → logprob: -11.724165916442871
    9. 'list' → logprob: -12.224165916442871
    10. ' list' → logprob: -12.349165916442871

Token 7: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005275380332022905
    2. '(' → logprob: -5.255275249481201
    3. '()
' → logprob: -11.38027572631836
    4. '`()' → logprob: -11.63027572631836
    5. '()`' → logprob: -12.38027572631836
    6. '()

' → logprob: -12.50527572631836
    7. '```' → logprob: -12.63027572631836
    8. ' ()' → logprob: -12.75527572631836
    9. ')' → logprob: -13.38027572631836
    10. '(
' → logprob: -13.75527572631836

Token 8: 'count' (ID: 5420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6489623188972473
    2. 'for' → logprob: -0.8989623188972473
    3. 'i' → logprob: -2.7739622592926025
    4. 'print' → logprob: -5.898962497711182
    5. 'd' → logprob: -7.023962497711182
    6. 'n' → logprob: -7.523962497711182
    7. 's' → logprob: -7.648962497711182
    8. 'a' → logprob: -7.648962497711182
    9. 'len' → logprob: -8.148962020874023
    10. '```' → logprob: -8.148962020874023

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1367698460817337
    2. '=' → logprob: -2.3867697715759277
    3. ' =' → logprob: -3.7617697715759277
    4. '(' → logprob: -4.511769771575928
    5. 's' → logprob: -7.136769771575928
    6. ' ' → logprob: -7.386769771575928
    7. '_=' → logprob: -9.136770248413086
    8. '[' → logprob: -10.511770248413086
    9. ')' → logprob: -10.511770248413086
    10. ' (' → logprob: -10.761770248413086

Token 10: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0488399975001812
    2. ' ' → logprob: -3.048840045928955
    3. '{}' → logprob: -8.923839569091797
    4. 'S' → logprob: -9.673839569091797
    5. ' S' → logprob: -10.423839569091797
    6. ' {}' → logprob: -11.048839569091797
    7. '1' → logprob: -13.048839569091797
    8. ' ' → logprob: -13.423839569091797
    9. 'len' → logprob: -13.423839569091797
    10. 'T' → logprob: -13.923839569091797

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005307396873831749
    2. '{}' → logprob: -5.255307197570801
    3. 'S' → logprob: -10.6303071975708
    4. '{' → logprob: -11.0053071975708
    5. ' ' → logprob: -11.0053071975708
    6. 'len' → logprob: -11.8803071975708
    7. 'T' → logprob: -12.7553071975708
    8. 'sum' → logprob: -13.3803071975708
    9. 'dict' → logprob: -14.0053071975708
    10. '1' → logprob: -14.3803071975708

Token 12: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2811318039894104
    2. '
' → logprob: -2.0311317443847656
    3. ' for' → logprob: -2.2811317443847656
    4. '\n' → logprob: -5.531131744384766
    5. ' ' → logprob: -6.281131744384766
    6. '' → logprob: -6.531131744384766
    7. ' 
' → logprob: -6.781131744384766
    8. '```' → logprob: -6.906131744384766
    9. 'i' → logprob: -7.406131744384766
    10. '\' → logprob: -7.531131744384766

Token 13: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002997078001499176
    2. '\n' → logprob: -6.377996921539307
    3. ' for' → logprob: -6.877996921539307
    4. '
' → logprob: -9.377997398376465
    5. '```' → logprob: -9.502997398376465
    6. 'i' → logprob: -9.877997398376465
    7. '\' → logprob: -10.752997398376465
    8. 'n' → logprob: -11.127997398376465
    9. 'if' → logprob: -12.627997398376465
    10. '=' → logprob: -13.502997398376465

Token 14: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.02007054165005684
    2. 'S' → logprob: -4.145070552825928
    3. ' ' → logprob: -6.020070552825928
    4. ' len' → logprob: -6.520070552825928
    5. 'len' → logprob: -9.39507007598877
    6. ' ' → logprob: -11.14507007598877
    7. '  ' → logprob: -11.39507007598877
    8. ' '' → logprob: -12.39507007598877
    9. 's' → logprob: -12.52007007598877
    10. ' T' → logprob: -13.52007007598877

Token 15: '[' (ID: 58)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03292330726981163
    2. ' ' → logprob: -4.157923221588135
    3. ' in' → logprob: -5.032923221588135
    4. '[' → logprob: -5.032923221588135
    5. '==' → logprob: -6.282923221588135
    6. '.startswith' → logprob: -7.157923221588135
    7. '.' → logprob: -7.407923221588135
    8. ' !=' → logprob: -8.782923698425293
    9. ' .' → logprob: -9.532923698425293
    10. ' [' → logprob: -10.032923698425293

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01813484914600849
    2. ']' → logprob: -4.393135070800781
    3. ':' → logprob: -6.643135070800781
    4. ']==' → logprob: -6.643135070800781
    5. 'i' → logprob: -6.768135070800781
    6. ' ' → logprob: -7.518135070800781
    7. ':]' → logprob: -8.268135070800781
    8. '-' → logprob: -8.518135070800781
    9. '==' → logprob: -8.518135070800781
    10. '1' → logprob: -9.268135070800781

Token 17: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4537850320339203
    2. ']' → logprob: -1.9537850618362427
    3. ' ==' → logprob: -1.9537850618362427
    4. '=' → logprob: -3.453784942626953
    5. ':' → logprob: -3.578784942626953
    6. '!=' → logprob: -4.703784942626953
    7. ']==' → logprob: -4.953784942626953
    8. ' ]' → logprob: -6.328784942626953
    9. ' !=' → logprob: -6.703784942626953
    10. ' ' → logprob: -7.453784942626953

Token 18: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20563869178295135
    2. ' ==' → logprob: -1.9556386470794678
    3. '!=' → logprob: -3.7056386470794678
    4. '=' → logprob: -4.330638885498047
    5. ' !=' → logprob: -5.705638885498047
    6. ':' → logprob: -6.330638885498047
    7. '+' → logprob: -7.830638885498047
    8. '>' → logprob: -8.080638885498047
    9. '[' → logprob: -8.705638885498047
    10. ' in' → logprob: -8.955638885498047

Token 19: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.000672639871481806
    2. ''' → logprob: -7.875672817230225
    3. ' T' → logprob: -8.500672340393066
    4. 'S' → logprob: -10.375672340393066
    5. ''T' → logprob: -10.500672340393066
    6. '"' → logprob: -11.250672340393066
    7. '"T' → logprob: -12.125672340393066
    8. '`' → logprob: -13.500672340393066
    9. ' ' → logprob: -13.625672340393066
    10. ''S' → logprob: -13.750672340393066

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.9650025428272784e-05
    2. ''' → logprob: -10.875040054321289
    3. '[:' → logprob: -12.250040054321289
    4. ''[' → logprob: -12.250040054321289
    5. '```' → logprob: -13.375040054321289
    6. ' [' → logprob: -13.500040054321289
    7. '`' → logprob: -13.625040054321289
    8. ':' → logprob: -13.875040054321289
    9. '0' → logprob: -14.125040054321289
    10. '[
' → logprob: -14.375040054321289

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.750012397766113
    3. '1' → logprob: -12.500012397766113
    4. ']' → logprob: -15.562512397766113
    5. '[' → logprob: -15.562512397766113
    6. '۰' → logprob: -16.87501335144043
    7. '   ' → logprob: -17.18751335144043
    8. '2' → logprob: -17.18751335144043
    9. ')' → logprob: -17.18751335144043
    10. '０' → logprob: -17.37501335144043

Token 22: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2835051417350769
    2. ']:' → logprob: -1.5335052013397217
    3. ':' → logprob: -3.6585052013397217
    4. ')' → logprob: -5.783504962921143
    5. ']' → logprob: -6.658504962921143
    6. ' ):' → logprob: -7.533504962921143
    7. ' and' → logprob: -8.4085054397583
    8. 'and' → logprob: -10.5335054397583
    9. ']):' → logprob: -10.9085054397583
    10. ' :' → logprob: -10.9085054397583

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16431574523448944
    2. ' count' → logprob: -2.164315700531006
    3. 'count' → logprob: -3.914315700531006
    4. '	count' → logprob: -4.664315700531006
    5. ' ' → logprob: -5.289315700531006
    6. '\t' → logprob: -7.539315700531006
    7. '    ' → logprob: -7.914315700531006
    8. ' if' → logprob: -7.914315700531006
    9. '```' → logprob: -8.789316177368164
    10. '   ' → logprob: -8.914316177368164

Token 24: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.7951982021331787
    2. 'count' (adapté à ' count') → logprob: -0.9201982021331787
    3. '   ' → logprob: -1.9201982021331787
    4. ' ' → logprob: -6.545198440551758
    5. '	count' → logprob: -7.295198440551758
    6. '    ' → logprob: -7.420198440551758
    7. ' if' → logprob: -8.420198440551758
    8. ' ' → logprob: -9.295198440551758
    9. '```' → logprob: -9.670198440551758
    10. '       ' → logprob: -9.795198440551758

Token 25: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030087264254689217
    2. '+=' → logprob: -3.5300872325897217
    3. ' =' → logprob: -8.5300874710083
    4. '=' → logprob: -9.5300874710083
    5. '+' → logprob: -9.7800874710083
    6. ' ' → logprob: -11.9050874710083
    7. '+='' → logprob: -14.0300874710083
    8. '<|end|>' → logprob: -14.1550874710083
    9. '+="' → logprob: -14.7800874710083
    10. ' +' → logprob: -14.7800874710083

Token 26: ' count' (ID: 3605)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04437125846743584
    2. ' ' → logprob: -3.1693713665008545
    3. ' count' → logprob: -7.294371128082275
    4. 'count' → logprob: -7.794371128082275
    5. '0' → logprob: -8.669371604919434
    6. '+' → logprob: -9.294371604919434
    7. ' +' → logprob: -11.544371604919434
    8. '2' → logprob: -13.169371604919434
    9. '   ' → logprob: -13.169371604919434
    10. '10' → logprob: -14.981871604919434

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001373326638713479
    2. ' +' → logprob: -6.626373291015625
    3. '<|end|>' → logprob: -10.251373291015625
    4. 'else' → logprob: -12.251373291015625
    5. '+
' → logprob: -12.751373291015625
    6. '+=' → logprob: -14.251373291015625
    7. ' else' → logprob: -14.376373291015625
    8. 'elif' → logprob: -14.376373291015625
    9. '<|end|>' → logprob: -14.626373291015625
    10. '+

' → logprob: -15.001373291015625

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059287971816957
    2. ' ' → logprob: -5.130928993225098
    3. '2' → logprob: -15.630928993225098
    4. '   ' → logprob: -18.00592803955078
    5. '4' → logprob: -18.19342803955078
    6. '  ' → logprob: -18.19342803955078
    7. ' ' → logprob: -18.25592803955078
    8. '0' → logprob: -18.38092803955078
    9. '3' → logprob: -18.81842803955078
    10. '<|end|>' → logprob: -18.94342803955078

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '2' → logprob: -16.750003814697266
    4. '0' → logprob: -19.500003814697266
    5. '10' → logprob: -19.625003814697266
    6. '<|end|>' → logprob: -20.250003814697266
    7. '   ' → logprob: -20.375003814697266
    8. '3' → logprob: -20.562503814697266
    9. '+' → logprob: -20.625003814697266
    10. '１' → logprob: -20.687503814697266

Token 30: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9150034189224243
    2. '<|end|>' → logprob: -1.1650034189224243
    3. 'elif' → logprob: -2.0400032997131348
    4. 'if' → logprob: -3.4150032997131348
    5. ')' → logprob: -3.7900032997131348
    6. '
' → logprob: -3.9150032997131348
    7. ':' → logprob: -4.290003299713135
    8. '\' → logprob: -4.415003299713135
    9. '.' → logprob: -4.790003299713135
    10. '```' → logprob: -4.790003299713135

Token 31: 'if' (ID: 366)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.827588677406311
    2. '<|end|>' → logprob: -0.952588677406311
    3. 'else' → logprob: -2.7025885581970215
    4. '\n' → logprob: -3.9525885581970215
    5. ')' → logprob: -4.3275885581970215
    6. 'for' → logprob: -4.3275885581970215
    7. '.' → logprob: -4.8275885581970215
    8. ':' → logprob: -4.9525885581970215
    9. '
' → logprob: -4.9525885581970215
    10. '   ' → logprob: -5.0775885581970215

Token 32: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.020788393914699554
    2. 'S' → logprob: -4.020788192749023
    3. ' ' → logprob: -6.395788192749023
    4. ' len' → logprob: -7.145788192749023
    5. ' (' → logprob: -10.020788192749023
    6. 'len' → logprob: -10.145788192749023
    7. ' ' → logprob: -10.395788192749023
    8. '(S' → logprob: -11.020788192749023
    9. '  ' → logprob: -11.520788192749023
    10. ' T' → logprob: -11.645788192749023

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.534558552724775e-05
    2. ' [' → logprob: -11.500025749206543
    3. '[-' → logprob: -12.875025749206543
    4. '[len' → logprob: -13.000025749206543
    5. '1' → logprob: -13.250025749206543
    6. '[i' → logprob: -13.250025749206543
    7. '[
' → logprob: -13.625025749206543
    8. '```' → logprob: -13.625025749206543
    9. ''[' → logprob: -14.125025749206543
    10. ' ' → logprob: -14.250025749206543

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03892635926604271
    2. '[' → logprob: -3.288926362991333
    3. ' ' → logprob: -7.788926124572754
    4. ']' → logprob: -8.788926124572754
    5. '0' → logprob: -9.038926124572754
    6. 'i' → logprob: -9.288926124572754
    7. ' [' → logprob: -9.913926124572754
    8. '(' → logprob: -11.163926124572754
    9. '```' → logprob: -12.038926124572754
    10. 'len' → logprob: -12.601426124572754

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004486653197091073
    2. ']==' → logprob: -8.250448226928711
    3. ' ]' → logprob: -8.625448226928711
    4. '==' → logprob: -12.750448226928711
    5. ' ==' → logprob: -12.875448226928711
    6. '']' → logprob: -14.000448226928711
    7. '[' → logprob: -14.500448226928711
    8. ')' → logprob: -15.000448226928711
    9. '```' → logprob: -15.500448226928711
    10. '"]' → logprob: -16.00044822692871

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07014760375022888
    2. '==' → logprob: -2.6951475143432617
    3. '[' → logprob: -9.320147514343262
    4. ')' → logprob: -9.945147514343262
    5. ' ' → logprob: -10.320147514343262
    6. '=' → logprob: -10.945147514343262
    7. ']' → logprob: -11.320147514343262
    8. ']==' → logprob: -12.945147514343262
    9. ' =' → logprob: -13.195147514343262
    10. ' ' → logprob: -13.570147514343262

Token 37: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.054906439036130905
    2. 'T' → logprob: -2.9299063682556152
    3. ' ' → logprob: -11.304906845092773
    4. ' ' → logprob: -11.929906845092773
    5. ''' → logprob: -12.929906845092773
    6. '`' → logprob: -13.429906845092773
    7. ')' → logprob: -14.804906845092773
    8. '<|end|>' → logprob: -14.804906845092773
    9. '"' → logprob: -16.304906845092773
    10. '[' → logprob: -16.554906845092773

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1279553291387856e-05
    2. '1' → logprob: -11.625011444091797
    3. ' [' → logprob: -14.250011444091797
    4. '[
' → logprob: -14.250011444091797
    5. '```' → logprob: -14.875011444091797
    6. ''[' → logprob: -15.375011444091797
    7. ' ' → logprob: -16.750011444091797
    8. '`' → logprob: -16.875011444091797
    9. ''s' → logprob: -17.125011444091797
    10. '.' → logprob: -17.125011444091797

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. '0' → logprob: -11.500018119812012
    3. ' ' → logprob: -11.875018119812012
    4. ']' → logprob: -14.250018119812012
    5. '[' → logprob: -15.000018119812012
    6. '   ' → logprob: -16.625019073486328
    7. '```' → logprob: -17.187519073486328
    8. ')' → logprob: -17.625019073486328
    9. '' → logprob: -17.625019073486328
    10. '１' → logprob: -17.937519073486328

Token 40: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.007982654497027397
    2. ']:
' → logprob: -5.0079827308654785
    3. ']' → logprob: -6.7579827308654785
    4. ':' → logprob: -10.00798225402832
    5. '']:' → logprob: -10.75798225402832
    6. ']:
' → logprob: -11.25798225402832
    7. '"]:' → logprob: -11.75798225402832
    8. ' ]' → logprob: -12.13298225402832
    9. '}:' → logprob: -13.00798225402832
    10. '):' → logprob: -13.25798225402832

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010291678830981255
    2. 'count' → logprob: -5.385291576385498
    3. '       ' → logprob: -5.510291576385498
    4. ' count' → logprob: -6.510291576385498
    5. '	count' → logprob: -9.260292053222656
    6. '```' → logprob: -11.635292053222656
    7. '    ' → logprob: -11.760292053222656
    8. '
' → logprob: -13.510292053222656
    9. ':
' → logprob: -13.760292053222656
    10. '[count' → logprob: -14.010292053222656

Token 42: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.22581911087036133
    2. 'count' (adapté à ' count') → logprob: -1.6008191108703613
    3. '    ' → logprob: -8.850818634033203
    4. ' ' → logprob: -9.100818634033203
    5. '   ' → logprob: -9.100818634033203
    6. '	count' → logprob: -10.725818634033203
    7. ' counts' → logprob: -11.850818634033203
    8. '1' → logprob: -13.100818634033203
    9. ' c' → logprob: -13.725818634033203
    10. ')' → logprob: -13.975818634033203

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06078413501381874
    2. '=' → logprob: -2.935784101486206
    3. ' +=' → logprob: -5.185784339904785
    4. '+=' → logprob: -8.310784339904785
    5. '+' → logprob: -10.685784339904785
    6. ' +' → logprob: -11.185784339904785
    7. ' ' → logprob: -12.060784339904785
    8. '   ' → logprob: -15.935784339904785
    9. ' ==' → logprob: -16.06078338623047
    10. ')' → logprob: -16.68578338623047

Token 44: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.011055129580199718
    2. 'count' → logprob: -4.511054992675781
    3. ' ' → logprob: -12.511054992675781
    4. '1' → logprob: -13.011054992675781
    5. '	count' → logprob: -14.136054992675781
    6. '0' → logprob: -15.511054992675781
    7. '(count' → logprob: -16.13605499267578
    8. '+' → logprob: -16.13605499267578
    9. ' counts' → logprob: -16.88605499267578
    10. '<count' → logprob: -16.88605499267578

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023996472358704
    2. ' +' → logprob: -1.9102399349212646
    3. ' ' → logprob: -11.410240173339844
    4. ' plus' → logprob: -13.285240173339844
    5. '＋' → logprob: -14.035240173339844
    6. '1' → logprob: -14.785240173339844
    7. ')' → logprob: -15.160240173339844
    8. 'plus' → logprob: -15.160240173339844
    9. '```' → logprob: -15.785240173339844
    10. '2' → logprob: -15.785240173339844

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692883610725403
    2. ' ' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.87692928314209
    4. '```' → logprob: -15.87692928314209
    5. '<|end|>' → logprob: -16.376928329467773
    6. '2' → logprob: -16.751928329467773
    7. '0' → logprob: -16.876928329467773
    8. '１' → logprob: -17.751928329467773
    9. '   ' → logprob: -18.751928329467773
    10. '4' → logprob: -19.064428329467773

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -17.250009536743164
    4. '<|end|>' → logprob: -18.375009536743164
    5. '   ' → logprob: -18.437509536743164
    6. '１' → logprob: -18.625009536743164
    7. '`' → logprob: -19.250009536743164
    8. '0' → logprob: -19.625009536743164
    9. '१' → logprob: -19.687509536743164
    10. '  ' → logprob: -19.750009536743164

Token 48: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0567392036318779
    2. 'print' → logprob: -2.931739091873169
    3. '<|end|>' → logprob: -7.056739330291748
    4. ' if' → logprob: -7.806739330291748
    5. '```' → logprob: -8.55673885345459
    6. '#' → logprob: -8.80673885345459
    7. '\' → logprob: -9.55673885345459
    8. '\n' → logprob: -9.55673885345459
    9. ')' → logprob: -10.68173885345459
    10. '   ' → logprob: -11.05673885345459

Token 49: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4741271734237671
    2. 'print' → logprob: -0.9741271734237671
    3. '```' → logprob: -10.474126815795898
    4. ' if' → logprob: -11.849126815795898
    5. '#' → logprob: -12.474126815795898
    6. '<|end|>' → logprob: -12.599126815795898
    7. 'for' → logprob: -12.724126815795898
    8. 'count' → logprob: -14.224126815795898
    9. 'return' → logprob: -14.349126815795898
    10. '\' → logprob: -14.349126815795898

Token 50: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.0263388492166996
    2. 'S' → logprob: -3.651338815689087
    3. ' ' → logprob: -11.026338577270508
    4. ' len' → logprob: -11.401338577270508
    5. '(S' → logprob: -11.901338577270508
    6. ' (' → logprob: -13.401338577270508
    7. 'len' → logprob: -13.651338577270508
    8. ' ' → logprob: -14.026338577270508
    9. '(' → logprob: -14.776338577270508
    10. '  ' → logprob: -16.276338577270508

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -13.000004768371582
    3. '```' → logprob: -14.750004768371582
    4. '[
' → logprob: -14.875004768371582
    5. '[-' → logprob: -15.000004768371582
    6. '.' → logprob: -15.000004768371582
    7. ''[' → logprob: -15.375004768371582
    8. '3' → logprob: -15.750004768371582
    9. '"[' → logprob: -16.3750057220459
    10. '(' → logprob: -16.5625057220459

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015694992616772652
    2. '[' → logprob: -6.5015692710876465
    3. ' ' → logprob: -9.751569747924805
    4. '0' → logprob: -13.064069747924805
    5. ' [' → logprob: -13.501569747924805
    6. '```' → logprob: -13.814069747924805
    7. ']' → logprob: -14.376569747924805
    8. '1' → logprob: -14.564069747924805
    9. '  ' → logprob: -14.939069747924805
    10. '   ' → logprob: -15.251569747924805

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.8908587662735954e-05
    2. ']==' → logprob: -11.000019073486328
    3. ' ]' → logprob: -14.250019073486328
    4. '[' → logprob: -14.500019073486328
    5. '']' → logprob: -14.625019073486328
    6. '}' → logprob: -16.125019073486328
    7. '"]' → logprob: -16.625019073486328
    8. '==' → logprob: -16.625019073486328
    9. '```' → logprob: -16.875019073486328
    10. '<|end|>' → logprob: -16.875019073486328

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.160935178399086
    2. '==' → logprob: -1.9109351634979248
    3. '[' → logprob: -7.785935401916504
    4. ']' → logprob: -9.410935401916504
    5. ']==' → logprob: -9.660935401916504
    6. ')' → logprob: -9.910935401916504
    7. ' ' → logprob: -10.410935401916504
    8. '<|end|>' → logprob: -10.785935401916504
    9. '=' → logprob: -11.160935401916504
    10. '[]' → logprob: -11.410935401916504

Token 55: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.036757297813892365
    2. 'T' → logprob: -3.411757230758667
    3. ' ' → logprob: -5.911757469177246
    4. ' ' → logprob: -7.911757469177246
    5. ')' → logprob: -11.536757469177246
    6. '<|end|>' → logprob: -11.786757469177246
    7. '  ' → logprob: -13.036757469177246
    8. '`' → logprob: -13.161757469177246
    9. 'S' → logprob: -13.536757469177246
    10. '...' → logprob: -13.661757469177246

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '[
' → logprob: -14.875000953674316
    3. ']' → logprob: -15.000000953674316
    4. '[]' → logprob: -15.625000953674316
    5. '```' → logprob: -15.750000953674316
    6. ' [' → logprob: -15.875000953674316
    7. '3' → logprob: -16.375001907348633
    8. '][' → logprob: -17.000001907348633
    9. ')' → logprob: -17.125001907348633
    10. '2' → logprob: -17.375001907348633

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.500005722045898
    3. '[' → logprob: -13.750005722045898
    4. ']' → logprob: -15.312505722045898
    5. '```' → logprob: -15.500005722045898
    6. '   ' → logprob: -15.937505722045898
    7. '۲' → logprob: -15.937505722045898
    8. '２' → logprob: -16.6250057220459
    9. ')' → logprob: -17.1875057220459
    10. '২' → logprob: -17.2500057220459

Token 58: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0002477502857800573
    2. ']' → logprob: -9.000247955322266
    3. ']:
' → logprob: -9.250247955322266
    4. ':' → logprob: -11.250247955322266
    5. '']:' → logprob: -12.250247955322266
    6. '):' → logprob: -12.750247955322266
    7. '}:' → logprob: -12.875247955322266
    8. '>:' → logprob: -13.250247955322266
    9. '"]:' → logprob: -13.250247955322266
    10. ']:
' → logprob: -14.375247955322266

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.751361608505249
    2. 'count' → logprob: -0.751361608505249
    3. ' count' → logprob: -2.876361608505249
    4. '	count' → logprob: -9.751361846923828
    5. '    ' → logprob: -9.876361846923828
    6. ' ' → logprob: -10.001361846923828
    7. '       ' → logprob: -10.251361846923828
    8. '  ' → logprob: -11.251361846923828
    9. 'c' → logprob: -13.251361846923828
    10. '```' → logprob: -13.376361846923828

Token 60: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.026323985308408737
    2. ' count' → logprob: -3.6513240337371826
    3. '   ' → logprob: -10.901324272155762
    4. 'c' → logprob: -13.401324272155762
    5. ' ' → logprob: -13.526324272155762
    6. '	count' → logprob: -13.776324272155762
    7. '    ' → logprob: -14.901324272155762
    8. '1' → logprob: -14.901324272155762
    9. '```' → logprob: -15.776324272155762
    10. '  ' → logprob: -16.151323318481445

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12865856289863586
    2. ' =' → logprob: -2.1286585330963135
    3. ' +=' → logprob: -7.128658771514893
    4. '+=' → logprob: -7.253658771514893
    5. '+' → logprob: -8.503658294677734
    6. ' +' → logprob: -12.003658294677734
    7. ' ==' → logprob: -12.128658294677734
    8. ' ' → logprob: -12.878658294677734
    9. '==' → logprob: -13.628658294677734
    10. ')' → logprob: -14.503658294677734

Token 62: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.02325025200843811
    2. 'count' → logprob: -3.7732503414154053
    3. ' ' → logprob: -12.898250579833984
    4. '	count' → logprob: -14.023250579833984
    5. '1' → logprob: -14.273250579833984
    6. '(count' → logprob: -14.898250579833984
    7. '+' → logprob: -16.273250579833984
    8. '<count' → logprob: -16.273250579833984
    9. '[count' → logprob: -16.773250579833984
    10. ' counts' → logprob: -17.023250579833984

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08895320445299149
    2. ' +' → logprob: -2.4639532566070557
    3. ' ' → logprob: -11.838953018188477
    4. '+
' → logprob: -13.213953018188477
    5. ' +
' → logprob: -13.588953018188477
    6. '＋' → logprob: -13.963953018188477
    7. '1' → logprob: -14.088953018188477
    8. '2' → logprob: -14.963953018188477
    9. '```' → logprob: -15.338953018188477
    10. '++' → logprob: -15.713953018188477

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858759790658951
    2. ' ' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.673587799072266
    4. '```' → logprob: -16.548587799072266
    5. '   ' → logprob: -17.423587799072266
    6. '  ' → logprob: -17.861087799072266
    7. '2' → logprob: -17.861087799072266
    8. '0' → logprob: -17.923587799072266
    9. '１' → logprob: -18.298587799072266
    10. '3' → logprob: -18.611087799072266

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '１' → logprob: -18.687501907348633
    4. '```' → logprob: -18.875001907348633
    5. '۱' → logprob: -19.062501907348633
    6. '`' → logprob: -19.250001907348633
    7. '0' → logprob: -19.687501907348633
    8. '   ' → logprob: -20.062501907348633
    9. '2' → logprob: -20.062501907348633
    10. 'count' → logprob: -20.187501907348633

Token 66: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012811839114874601
    2. '
' → logprob: -7.126281261444092
    3. 'if' → logprob: -7.751281261444092
    4. '```' → logprob: -11.126280784606934
    5. '\n' → logprob: -11.376280784606934
    6. '\' → logprob: -12.626280784606934
    7. ' print' → logprob: -12.626280784606934
    8. '#' → logprob: -13.001280784606934
    9. '
' → logprob: -13.626280784606934
    10. ' 
' → logprob: -13.751280784606934

Token 67: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012621370842680335
    2. 'if' → logprob: -6.751262187957764
    3. '```' → logprob: -9.626261711120605
    4. 'for' → logprob: -11.876261711120605
    5. '\' → logprob: -12.126261711120605
    6. '\n' → logprob: -13.251261711120605
    7. 'count' → logprob: -13.251261711120605
    8. 'pr' → logprob: -13.376261711120605
    9. '`' → logprob: -13.501261711120605
    10. 'p' → logprob: -13.626261711120605

Token 68: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602497100830078
    2. '(count' → logprob: -1.9102497100830078
    3. '('' → logprob: -12.035249710083008
    4. '((' → logprob: -12.035249710083008
    5. '("("' → logprob: -12.410249710083008
    6. '(c' → logprob: -12.660249710083008
    7. '()' → logprob: -13.285249710083008
    8. '(max' → logprob: -13.785249710083008
    9. '(len' → logprob: -13.785249710083008
    10. '(`' → logprob: -14.035249710083008

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.5
    3. ')`' → logprob: -17.375
    4. ')
' → logprob: -18.375
    5. '`)' → logprob: -19.125
    6. '))' → logprob: -19.375
    7. '}' → logprob: -20.125
    8. '')' → logprob: -20.625
    9. '()' → logprob: -20.625
    10. '(' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 55.22%
Précision adaptée (1ère position): 56.72%
Précision (top 10): 91.04%
================================================================================
