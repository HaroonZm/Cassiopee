================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return map(int, input().split())

def compute_factorials_and_invs(n, MOD):
    f = 1
    factorials = [1]
    for m in range(1, n + 1):
        f *= m
        f %= MOD
        factorials.append(f)
    inv = pow(f, MOD - 2, MOD)
    invs = [1] * (n + 1)
    invs[n] = inv
    for m in range(n, 1, -1):
        inv *= m
        inv %= MOD
        invs[m - 1] = inv
    return factorials, invs

def modnCr(n, r, mod, fac, inv):
    if n < 0 or r < 0 or n < r:
        return 0
    return fac[n] * inv[n - r] * inv[r] % mod

def should_break(one, two, N):
    return one + two > N

def get_dist(one, two):
    return one + two * 2

def get_zero(N, one, two, mod, fac, inv):
    return modnCr(N, one + two, mod, fac, inv)

def get_now_dist_less_X(one, two, zero, mod, fac, inv):
    return modnCr(one + two, one, mod, fac, inv) * zero

def get_dtwo(two, dist, X):
    return two - (dist - X + 1)

def get_now_dist_between_X_and_2X(one, dtwo, zero, mod, fac, inv):
    return modnCr(one + dtwo, one, mod, fac, inv) * zero

def should_continue_dist_equals_X(dist, X):
    return dist == X

def should_continue_dist_between_X_and_2X(dist, X):
    return (dist - X) % 2 == 0

def get_now_all_twos(X, one, zero):
    if X % 2 == 1 and one == 0:
        return zero
    return 0

def update_ans(ans, now, mod):
    return (ans + now) % mod

def main():
    N, X = get_input()
    mod = 998244353
    fac, inv = compute_factorials_and_invs(N + 10, mod)
    ans = 0
    for two in range(N + 1):
        for one in range(N + 1):
            if should_break(one, two, N):
                break
            dist = get_dist(one, two)
            zero = get_zero(N, one, two, mod, fac, inv)
            now = 0
            if dist < X:
                now = get_now_dist_less_X(one, two, zero, mod, fac, inv)
            elif should_continue_dist_equals_X(dist, X):
                continue
            elif dist < 2 * X:
                if should_continue_dist_between_X_and_2X(dist, X):
                    continue
                dtwo = get_dtwo(two, dist, X)
                if dtwo >= 0:
                    now = get_now_dist_between_X_and_2X(one, dtwo, zero, mod, fac, inv)
            elif X % 2 == 1 and one == 0:
                now = get_now_all_twos(X, one, zero)
            ans = update_ans(ans, now, mod)
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003164175897836685
    2. '_' → logprob: -6.253164291381836
    3. '():' → logprob: -7.378164291381836
    4. '```' → logprob: -8.378164291381836
    5. '()' → logprob: -8.753164291381836
    6. ' (' → logprob: -9.878164291381836
    7. '(_' → logprob: -9.878164291381836
    8. '(_:' → logprob: -10.503164291381836
    9. '(:' → logprob: -10.878164291381836
    10. ':' → logprob: -12.003164291381836

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6367071270942688
    2. '   ' → logprob: -1.636707067489624
    3. '\' → logprob: -2.011707067489624
    4. '    
' → logprob: -3.386707067489624
    5. '\n' → logprob: -3.511707067489624
    6. '(' → logprob: -4.011707305908203
    7. '  
' → logprob: -5.136707305908203
    8. '   
' → logprob: -5.261707305908203
    9. ' 
' → logprob: -5.386707305908203
    10. '(
' → logprob: -5.386707305908203

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3594469130039215
    2. 'user' → logprob: -2.4844470024108887
    3. 'input' → logprob: -2.8594470024108887
    4. 'x' → logprob: -2.9844470024108887
    5. 'i' → logprob: -3.2344470024108887
    6. '   ' → logprob: -3.9844470024108887
    7. 'r' → logprob: -3.9844470024108887
    8. ' ' → logprob: -4.234447002410889
    9. 'u' → logprob: -5.359447002410889
    10. 'a' → logprob: -5.734447002410889

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5094054937362671
    2. ' input' → logprob: -1.134405493736267
    3. 'input' → logprob: -2.8844056129455566
    4. '"' → logprob: -4.259405612945557
    5. ''' → logprob: -5.759405612945557
    6. ' "' → logprob: -6.384405612945557
    7. '  ' → logprob: -6.884405612945557
    8. ' '' → logprob: -7.634405612945557
    9. ' None' → logprob: -8.259405136108398
    10. '(input' → logprob: -8.509405136108398

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003687128657475114
    2. ' (' → logprob: -6.378686904907227
    3. '.' → logprob: -6.753686904907227
    4. '(lambda' → logprob: -8.503686904907227
    5. ')' → logprob: -9.128686904907227
    6. '<|end|>' → logprob: -9.378686904907227
    7. '(
' → logprob: -9.628686904907227
    8. '```' → logprob: -9.753686904907227
    9. '[' → logprob: -10.378686904907227
    10. '(.' → logprob: -10.503686904907227

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.33680829405784607
    2. ')' → logprob: -1.4618083238601685
    3. '(' → logprob: -3.211808204650879
    4. 'input' → logprob: -5.086808204650879
    5. '(user' → logprob: -6.711808204650879
    6. ' input' → logprob: -7.086808204650879
    7. '<|end|>' → logprob: -7.211808204650879
    8. '```' → logprob: -7.336808204650879
    9. '(open' → logprob: -8.086808204650879
    10. ' (' → logprob: -8.461808204650879

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5244191288948059
    2. 'input' → logprob: -0.8994191288948059
    3. '(input' → logprob: -7.27441930770874
    4. ')' → logprob: -7.52441930770874
    5. ' )' → logprob: -11.274418830871582
    6. '[input' → logprob: -11.524418830871582
    7. ',input' → logprob: -12.024418830871582
    8. '<|end|>' → logprob: -12.024418830871582
    9. ' raw' → logprob: -12.149418830871582
    10. '	input' → logprob: -12.149418830871582

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9544609189033508
    2. '(' → logprob: -1.204460859298706
    3. '())' → logprob: -1.829460859298706
    4. '(()' → logprob: -2.954460859298706
    5. '('' → logprob: -2.954460859298706
    6. '(""))' → logprob: -4.079461097717285
    7. ')' → logprob: -4.204461097717285
    8. '("")' → logprob: -5.329461097717285
    9. '("("' → logprob: -5.704461097717285
    10. ' ())' → logprob: -6.079461097717285

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009152670972980559
    2. 'strip' → logprob: -7.000915050506592
    3. ' split' → logprob: -13.12591552734375
    4. 'rstrip' → logprob: -13.37591552734375
    5. '(split' → logprob: -15.12591552734375
    6. 'read' → logprob: -17.12591552734375
    7. ')' → logprob: -18.50091552734375
    8. 'spl' → logprob: -18.75091552734375
    9. '```' → logprob: -19.37591552734375
    10. 'replace' → logprob: -20.12591552734375

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18657810986042023
    2. '()))' → logprob: -1.8115781545639038
    3. ')' → logprob: -5.436578273773193
    4. '))' → logprob: -6.436578273773193
    5. '()' → logprob: -7.186578273773193
    6. '(' → logprob: -10.186577796936035
    7. ' ())' → logprob: -11.186577796936035
    8. '())
' → logprob: -11.436577796936035
    9. '()),' → logprob: -11.686577796936035
    10. '`()' → logprob: -12.311577796936035

Token 13: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2962576150894165
    2. '#' → logprob: -2.046257495880127
    3. 'def' → logprob: -3.421257495880127
    4. '(
' → logprob: -3.671257495880127
    5. 'x' → logprob: -4.296257495880127
    6. '()' → logprob: -4.296257495880127
    7. ')' → logprob: -5.046257495880127
    8. 'for' → logprob: -5.171257495880127
    9. '\n' → logprob: -5.671257495880127
    10. '.' → logprob: -5.671257495880127

Token 14: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.965125322341919
    2. ' calculate' → logprob: -1.090125322341919
    3. ' process' → logprob: -1.965125322341919
    4. ' get' → logprob: -2.715125322341919
    5. ' solve' → logprob: -3.465125322341919
    6. ' compute' → logprob: -3.840125322341919
    7. ' factorial' → logprob: -4.84012508392334
    8. ' sort' → logprob: -6.34012508392334
    9. ' print' → logprob: -6.46512508392334
    10. ' sum' → logprob: -6.46512508392334

Token 15: '_factor' (ID: 43757)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2696598768234253
    2. '_factor' → logprob: -2.394659996032715
    3. '(' → logprob: -2.519659996032715
    4. '_' → logprob: -3.769659996032715
    5. '_value' → logprob: -4.144659996032715
    6. '_area' → logprob: -4.894659996032715
    7. '_average' → logprob: -5.644659996032715
    8. '_total' → logprob: -6.269659996032715
    9. '_result' → logprob: -6.394659996032715
    10. '_square' → logprob: -6.519659996032715

Token 16: 'ials' (ID: 16596)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.002947393571957946
    2. '_' → logprob: -6.2529473304748535
    3. 'ialize' → logprob: -7.1279473304748535
    4. '```' → logprob: -9.252947807312012
    5. 'ization' → logprob: -10.252947807312012
    6. 'iel' → logprob: -10.752947807312012
    7. ' ial' → logprob: -11.627947807312012
    8. '   ' → logprob: -12.002947807312012
    9. ' ' → logprob: -12.127947807312012
    10. 'ials' → logprob: -12.252947807312012

Token 17: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033243581652641296
    2. '_' → logprob: -3.9082436561584473
    3. '```' → logprob: -5.283243656158447
    4. '(n' → logprob: -6.158243656158447
    5. '(_' → logprob: -7.033243656158447
    6. '(_)' → logprob: -7.533243656158447
    7. '():' → logprob: -8.158243179321289
    8. '_factor' → logprob: -8.283243179321289
    9. 'def' → logprob: -8.283243179321289
    10. 's' → logprob: -8.408243179321289

Token 18: '_in' (ID: 2267)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.33398693799972534
    2. '_counts' → logprob: -2.33398699760437
    3. '_p' → logprob: -3.33398699760437
    4. '_factor' → logprob: -4.208986759185791
    5. '_inverse' → logprob: -4.333986759185791
    6. '_comb' → logprob: -4.583986759185791
    7. 'com' → logprob: -4.583986759185791
    8. '_div' → logprob: -4.583986759185791
    9. '_cache' → logprob: -4.708986759185791
    10. '_' → logprob: -4.958986759185791

Token 19: 'vs' (ID: 16121)
  Prédit: 'verse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.5979182124137878
    2. 'put' → logprob: -1.2229182720184326
    3. 'puts' → logprob: -2.4729182720184326
    4. 'vers' → logprob: -3.0979182720184326
    5. 'v' → logprob: -3.9729182720184326
    6. 'dex' → logprob: -6.2229180335998535
    7. 'ver' → logprob: -7.4729180335998535
    8. 'vert' → logprob: -7.4729180335998535
    9. 'it' → logprob: -7.4729180335998535
    10. 'div' → logprob: -8.222918510437012

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47675180435180664
    2. '(' → logprob: -0.9767518043518066
    3. '(num' → logprob: -6.601751804351807
    4. '()' → logprob: -7.976751804351807
    5. ' (' → logprob: -8.601751327514648
    6. '(len' → logprob: -8.726751327514648
    7. '_' → logprob: -9.226751327514648
    8. '(size' → logprob: -9.726751327514648
    9. '(length' → logprob: -9.851751327514648
    10. '(N' → logprob: -9.976751327514648

Token 21: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004127792082726955
    2. ')' → logprob: -5.5041279792785645
    3. '):
' → logprob: -10.754127502441406
    4. ':' → logprob: -11.504127502441406
    5. ' ):' → logprob: -11.629127502441406
    6. ',' → logprob: -13.504127502441406
    7. ''):' → logprob: -13.504127502441406
    8. '**' → logprob: -13.629127502441406
    9. ')：' → logprob: -14.129127502441406
    10. '   ' → logprob: -14.629127502441406

Token 22: ' MOD' (ID: 32868)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.032077573239803314
    2. 'MOD' → logprob: -3.5320775508880615
    3. ' mod' → logprob: -6.782077789306641
    4. 'm' → logprob: -7.532077789306641
    5. ' MOD' → logprob: -8.28207778930664
    6. 'p' → logprob: -8.90707778930664
    7. 'Mod' → logprob: -9.28207778930664
    8. ' modulus' → logprob: -10.65707778930664
    9. 'M' → logprob: -10.90707778930664
    10. 'md' → logprob: -11.03207778930664

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005529135232791305
    2. ')' → logprob: -8.000553131103516
    3. ' ):' → logprob: -8.750553131103516
    4. '):
' → logprob: -10.000553131103516
    5. ':' → logprob: -12.125553131103516
    6. ',' → logprob: -13.375553131103516
    7. '**' → logprob: -13.625553131103516
    8. '):
' → logprob: -13.875553131103516
    9. ')：' → logprob: -13.875553131103516
    10. '=' → logprob: -14.000553131103516

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4060327112674713
    2. ':' → logprob: -1.156032681465149
    3. '```' → logprob: -4.781032562255859
    4. ':
' → logprob: -5.156032562255859
    5. 'fact' → logprob: -7.656032562255859
    6. '):
' → logprob: -7.781032562255859
    7. '``' → logprob: -7.906032562255859
    8. '    ' → logprob: -7.906032562255859
    9. '():' → logprob: -7.906032562255859
    10. ' :' → logprob: -7.906032562255859

Token 25: ' f' (ID: 285)
  Prédit: ' fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.1428874284029007
    2. ' factorial' → logprob: -2.5178873538970947
    3. 'fact' → logprob: -3.5178873538970947
    4. '   ' → logprob: -4.267887592315674
    5. 'factor' → logprob: -5.392887592315674
    6. '    ' → logprob: -6.392887592315674
    7. ' fac' → logprob: -7.392887592315674
    8. ' factor' → logprob: -7.517887592315674
    9. '_fact' → logprob: -7.892887592315674
    10. ' f' → logprob: -7.892887592315674

Token 26: ' =' (ID: 314)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.10924287885427475
    2. 'actor' → logprob: -2.3592429161071777
    3. 'a' → logprob: -5.484242916107178
    4. 'ac' → logprob: -5.734242916107178
    5. 'acts' → logprob: -7.734242916107178
    6. '=' → logprob: -7.984242916107178
    7. 'acto' → logprob: -7.984242916107178
    8. ' =' → logprob: -8.35924243927002
    9. '```' → logprob: -9.48424243927002
    10. '   ' → logprob: -9.60924243927002

Token 27: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021431744098663
    2. ' [' → logprob: -2.3502142429351807
    3. '[n' → logprob: -12.475214004516602
    4. '[int' → logprob: -13.225214004516602
    5. '[f' → logprob: -14.225214004516602
    6. ' ' → logprob: -14.725214004516602
    7. '[i' → logprob: -15.725214004516602
    8. '   ' → logprob: -15.850214004516602
    9. '1' → logprob: -15.975214004516602
    10. '[len' → logprob: -16.4752140045166

Token 28: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. ' [' → logprob: -13.500001907348633
    3. '[n' → logprob: -16.375001907348633
    4. '[f' → logprob: -16.625001907348633
    5. '1' → logprob: -17.000001907348633
    6. '(' → logprob: -17.000001907348633
    7. '[int' → logprob: -17.375001907348633
    8. '{' → logprob: -18.625001907348633
    9. '[i' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.500001907348633

Token 29: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32725533843040466
    2. '0' → logprob: -1.577255368232727
    3. '
' → logprob: -4.4522552490234375
    4. ' ' → logprob: -4.8272552490234375
    5. '1' → logprob: -4.9522552490234375
    6. 'f' → logprob: -5.0772552490234375
    7. '[' → logprob: -5.4522552490234375
    8. '2' → logprob: -5.5772552490234375
    9. 'def' → logprob: -5.5772552490234375
    10. ' =' → logprob: -5.9522552490234375

Token 30: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7017861604690552
    2. '0' → logprob: -1.9517861604690552
    3. '_factor' → logprob: -2.2017860412597656
    4. '[]' → logprob: -3.0767860412597656
    5. '_' → logprob: -3.3267860412597656
    6. '!' → logprob: -3.4517860412597656
    7. '=' → logprob: -3.7017860412597656
    8. '_fac' → logprob: -4.201786041259766
    9. '[' → logprob: -4.451786041259766
    10. '_fact' → logprob: -4.451786041259766

Token 31: ' factorial' (ID: 111204)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7709884643554688
    2. 'ac' → logprob: -2.1459884643554688
    3. '_fac' → logprob: -2.7709884643554688
    4. '[' → logprob: -2.8959884643554688
    5. 'f' → logprob: -2.8959884643554688
    6. '_factor' → logprob: -3.0209884643554688
    7. 'fact' → logprob: -3.0209884643554688
    8. '_fact' → logprob: -3.1459884643554688
    9. 'act' → logprob: -4.145988464355469
    10. 'actor' → logprob: -4.395988464355469

Token 32: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.2007883671903983e-05
    2. '_s' → logprob: -11.750021934509277
    3. '=' → logprob: -11.875021934509277
    4. ' =' → logprob: -12.500021934509277
    5. '[s' → logprob: -13.750021934509277
    6. ' s' → logprob: -14.375021934509277
    7. '[]' → logprob: -14.500021934509277
    8. '[' → logprob: -14.625021934509277
    9. '_' → logprob: -15.625021934509277
    10. '=s' → logprob: -15.625021934509277

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5092619061470032
    2. 's' → logprob: -1.0092618465423584
    3. '=' → logprob: -3.3842618465423584
    4. '[' → logprob: -8.259262084960938
    5. ',' → logprob: -8.259262084960938
    6. ' ' → logprob: -9.509262084960938
    7. '[]' → logprob: -10.884262084960938
    8. '   ' → logprob: -10.884262084960938
    9. '[s' → logprob: -11.259262084960938
    10. '  ' → logprob: -12.134262084960938

Token 34: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07890553772449493
    2. ' [' → logprob: -2.5789055824279785
    3. '   ' → logprob: -11.82890510559082
    4. '[n' → logprob: -12.45390510559082
    5. ' ' → logprob: -12.82890510559082
    6. '  ' → logprob: -14.70390510559082
    7. '[f' → logprob: -15.20390510559082
    8. '[i' → logprob: -15.32890510559082
    9. '[int' → logprob: -15.45390510559082
    10. '[]' → logprob: -15.57890510559082

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.875005722045898
    3. '0' → logprob: -13.125005722045898
    4. '   ' → logprob: -15.000005722045898
    5. 'None' → logprob: -15.375005722045898
    6. ']' → logprob: -17.6250057220459
    7. '```' → logprob: -18.0000057220459
    8. '  ' → logprob: -18.6250057220459
    9. '[' → logprob: -18.7500057220459
    10. '-' → logprob: -19.1250057220459

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00220818561501801
    2. ']*(' → logprob: -6.502208232879639
    3. ',' → logprob: -7.752208232879639
    4. ' ]' → logprob: -9.37720775604248
    5. ']*' → logprob: -9.37720775604248
    6. ' for' → logprob: -9.50220775604248
    7. ']+' → logprob: -10.87720775604248
    8. ')' → logprob: -11.75220775604248
    9. ')]' → logprob: -13.87720775604248
    10. ' ' → logprob: -14.00220775604248

Token 37: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38568317890167236
    2. ',' → logprob: -1.3856831789016724
    3. 'for' → logprob: -3.260683059692383
    4. '*' → logprob: -4.885683059692383
    5. ']' → logprob: -5.260683059692383
    6. ' ' → logprob: -5.260683059692383
    7. '[' → logprob: -5.510683059692383
    8. '
' → logprob: -6.010683059692383
    9. '0' → logprob: -6.385683059692383
    10. '=' → logprob: -7.260683059692383

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1960698962211609
    2. 'for' (adapté à ' for') → logprob: -1.8210699558258057
    3. '   ' → logprob: -4.446069717407227
    4. ' ' → logprob: -6.196069717407227
    5. '_' → logprob: -7.321069717407227
    6. ',' → logprob: -8.071069717407227
    7. ' f' → logprob: -8.446069717407227
    8. '[' → logprob: -8.821069717407227
    9. '    
' → logprob: -8.821069717407227
    10. '0' → logprob: -8.946069717407227

Token 39: ' m' (ID: 284)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03398636728525162
    2. 'i' → logprob: -3.5339863300323486
    3. ' _' → logprob: -5.783986568450928
    4. ' ' → logprob: -6.908986568450928
    5. '_' → logprob: -8.90898609161377
    6. '	i' → logprob: -12.03398609161377
    7. '_i' → logprob: -12.65898609161377
    8. ' ' → logprob: -12.78398609161377
    9. 'I' → logprob: -14.28398609161377
    10. '  ' → logprob: -14.40898609161377

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004718603100627661
    2. 'in' → logprob: -5.379718780517578
    3. ' ' → logprob: -9.379718780517578
    4. 'i' → logprob: -12.504718780517578
    5. ' i' → logprob: -13.254718780517578
    6. '   ' → logprob: -13.504718780517578
    7. 'range' → logprob: -13.504718780517578
    8. 'y' → logprob: -14.254718780517578
    9. '  ' → logprob: -14.629718780517578
    10. 'o' → logprob: -14.629718780517578

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20151254534721375
    2. 'range' → logprob: -1.7015125751495361
    3. ' ' → logprob: -9.701512336730957
    4. '  ' → logprob: -10.826512336730957
    5. '   ' → logprob: -11.326512336730957
    6. '	range' → logprob: -13.076512336730957
    7. '(range' → logprob: -13.951512336730957
    8. ' ' → logprob: -14.076512336730957
    9. '    ' → logprob: -14.076512336730957
    10. ' xrange' → logprob: -15.201512336730957

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5213274309644476e-05
    2. ' (' → logprob: -11.750015258789062
    3. '1' → logprob: -11.875015258789062
    4. '2' → logprob: -16.125015258789062
    5. ' ' → logprob: -16.250015258789062
    6. '   ' → logprob: -16.500015258789062
    7. ',' → logprob: -18.375015258789062
    8. '(n' → logprob: -18.750015258789062
    9. '(i' → logprob: -20.000015258789062
    10. '(
' → logprob: -20.000015258789062

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026767326518893242
    2. '2' → logprob: -3.7767672538757324
    3. ' ' → logprob: -5.651767253875732
    4. '   ' → logprob: -12.90176773071289
    5. 'n' → logprob: -13.90176773071289
    6. '(' → logprob: -14.65176773071289
    7. '  ' → logprob: -15.77676773071289
    8. '0' → logprob: -16.33926773071289
    9. '    ' → logprob: -16.65176773071289
    10. ' n' → logprob: -16.90176773071289

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005777699872851372
    2. ' ,' → logprob: -5.505777835845947
    3. ',n' → logprob: -6.380777835845947
    4. 'n' → logprob: -13.755777359008789
    5. ' ' → logprob: -14.005777359008789
    6. ' n' → logprob: -14.005777359008789
    7. '   ' → logprob: -14.380777359008789
    8. ',len' → logprob: -15.380777359008789
    9. ' to' → logprob: -15.630777359008789
    10. '    ' → logprob: -16.75577735900879

Token 45: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692862749099731
    2. 'n' → logprob: -2.1269285678863525
    3. '   ' → logprob: -15.501928329467773
    4. ')n' → logprob: -16.001928329467773
    5. '	n' → logprob: -16.126928329467773
    6. '(n' → logprob: -17.001928329467773
    7. '```' → logprob: -17.376928329467773
    8. '    ' → logprob: -17.501928329467773
    9. ' ' → logprob: -17.501928329467773
    10. ')' → logprob: -17.876928329467773

Token 46: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868756890296936
    2. ' +' → logprob: -1.1368756294250488
    3. '):
' → logprob: -13.136876106262207
    4. '):' → logprob: -13.636876106262207
    5. ' ' → logprob: -14.761876106262207
    6. '   ' → logprob: -15.011876106262207
    7. '+n' → logprob: -15.261876106262207
    8. ')' → logprob: -16.26187515258789
    9. ' +
' → logprob: -16.51187515258789
    10. ' plus' → logprob: -16.88687515258789

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.375709533691406
    4. ')' → logprob: -17.750709533691406
    5. '   ' → logprob: -17.875709533691406
    6. '2' → logprob: -18.875709533691406
    7. ' ' → logprob: -19.250709533691406
    8. '+' → logprob: -19.500709533691406
    9. '  ' → logprob: -20.563209533691406
    10. ',' → logprob: -20.563209533691406

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '2' → logprob: -18.37502670288086
    4. '   ' → logprob: -19.12502670288086
    5. ')' → logprob: -19.37502670288086
    6. '```' → logprob: -19.62502670288086
    7. '  ' → logprob: -20.12502670288086
    8. ' ' → logprob: -20.93752670288086
    9. '１' → logprob: -21.18752670288086
    10. '۱' → logprob: -21.50002670288086

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0512111559510231
    2. '):
' → logprob: -3.05121111869812
    3. ':' → logprob: -6.301211357116699
    4. ')' → logprob: -7.426211357116699
    5. ' ):' → logprob: -9.0512113571167
    6. ',' → logprob: -10.6762113571167
    7. '):
' → logprob: -10.8012113571167
    8. ' ):
' → logprob: -11.3012113571167
    9. '   ' → logprob: -11.8012113571167
    10. ':
' → logprob: -12.4262113571167

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49740609526634216
    2. '   ' → logprob: -1.4974061250686646
    3. '    ' → logprob: -3.122406005859375
    4. ' ' → logprob: -3.622406005859375
    5. ':' → logprob: -3.872406005859375
    6. ' factorial' → logprob: -3.872406005859375
    7. ',' → logprob: -4.372406005859375
    8. '):' → logprob: -5.122406005859375
    9. ')' → logprob: -5.372406005859375
    10. '_factor' → logprob: -5.497406005859375

Token 51: ' f' (ID: 285)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.10541313886642456
    2. ' f' → logprob: -2.4804131984710693
    3. 'factor' → logprob: -4.73041296005249
    4. 'f' (adapté à ' f') → logprob: -5.48041296005249
    5. ' factor' → logprob: -6.60541296005249
    6. '    ' → logprob: -7.10541296005249
    7. '_factor' → logprob: -8.480413436889648
    8. '```' → logprob: -8.605413436889648
    9. ' ' → logprob: -8.855413436889648
    10. ' (' → logprob: -8.855413436889648

Token 52: ' *=' (ID: 25253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5680879950523376
    2. ' =' → logprob: -1.0680880546569824
    3. ' *=' → logprob: -3.1930880546569824
    4. '*' → logprob: -3.5680880546569824
    5. '*=' → logprob: -3.9430880546569824
    6. ' *' → logprob: -6.943088054656982
    7. ' ' → logprob: -9.568087577819824
    8. 's' → logprob: -11.693087577819824
    9. '=f' → logprob: -11.943087577819824
    10. '   ' → logprob: -12.318087577819824

Token 53: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04858771339058876
    2. ' m' → logprob: -3.0485877990722656
    3. '	m' → logprob: -15.423587799072266
    4. ' ' → logprob: -17.048587799072266
    5. '   ' → logprob: -17.173587799072266
    6. '```' → logprob: -18.048587799072266
    7. '(m' → logprob: -18.173587799072266
    8. '    ' → logprob: -18.173587799072266
    9. 'mod' → logprob: -18.298587799072266
    10. '10' → logprob: -18.423587799072266

Token 54: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10281353443861008
    2. '%' → logprob: -2.352813482284546
    3. '
' → logprob: -7.477813720703125
    4. '```' → logprob: -7.477813720703125
    5. '<|end|>' → logprob: -8.602813720703125
    6. '%n' → logprob: -8.602813720703125
    7. ' f' → logprob: -8.727813720703125
    8. '   ' → logprob: -8.727813720703125
    9. ')' → logprob: -9.227813720703125
    10. '       ' → logprob: -9.227813720703125

Token 55: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22602444887161255
    2. '%' → logprob: -1.6010243892669678
    3. '%n' → logprob: -8.851024627685547
    4. '
' → logprob: -9.226024627685547
    5. '<|end|>' → logprob: -9.726024627685547
    6. '   ' → logprob: -9.851024627685547
    7. ')' → logprob: -9.976024627685547
    8. '```' → logprob: -10.101024627685547
    9. ' %=' → logprob: -10.726024627685547
    10. ')%' → logprob: -10.726024627685547

Token 56: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.36949965357780457
    2. 'f' (adapté à ' f') → logprob: -1.994499683380127
    3. 'MOD' → logprob: -2.744499683380127
    4. ' MOD' → logprob: -2.994499683380127
    5. ' ' → logprob: -3.119499683380127
    6. '1' → logprob: -5.994499683380127
    7. ' (' → logprob: -6.369499683380127
    8. '    ' → logprob: -6.744499683380127
    9. '_MOD' → logprob: -7.244499683380127
    10. '```' → logprob: -7.369499683380127

Token 57: ' %=' (ID: 117035)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16728878021240234
    2. '%' → logprob: -1.9172887802124023
    3. ' %=' → logprob: -5.042288780212402
    4. ' ' → logprob: -7.792288780212402
    5. '%=' → logprob: -10.292288780212402
    6. ' ' → logprob: -10.667288780212402
    7. '```' → logprob: -11.042288780212402
    8. '`' → logprob: -11.292288780212402
    9. '=' → logprob: -11.292288780212402
    10. '%n' → logprob: -11.667288780212402

Token 58: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.012511652894318104
    2. 'MOD' → logprob: -4.387511730194092
    3. ' ' → logprob: -14.012511253356934
    4. '_MOD' → logprob: -14.387511253356934
    5. ' ' → logprob: -14.637511253356934
    6. '.MOD' → logprob: -16.38751220703125
    7. '```' → logprob: -18.26251220703125
    8. '(M' → logprob: -18.38751220703125
    9. ' MO' → logprob: -18.76251220703125
    10. '   ' → logprob: -18.76251220703125

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00845145434141159
    2. 'factor' → logprob: -5.133451461791992
    3. ' factorial' → logprob: -6.508451461791992
    4. '   ' → logprob: -7.633451461791992
    5. ',' → logprob: -7.758451461791992
    6. '.factor' → logprob: -10.883451461791992
    7. '```' → logprob: -11.133451461791992
    8. '.' → logprob: -11.508451461791992
    9. 'fact' → logprob: -11.633451461791992
    10. '        
' → logprob: -11.883451461791992

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006043838220648468
    2. 'factor' → logprob: -7.750604152679443
    3. '   ' → logprob: -9.500604629516602
    4. ',' → logprob: -10.000604629516602
    5. ' factorial' → logprob: -10.250604629516602
    6. '```' → logprob: -12.250604629516602
    7. 'fact' → logprob: -13.125604629516602
    8. '      ' → logprob: -13.125604629516602
    9. '_factor' → logprob: -13.500604629516602
    10. '.factor' → logprob: -13.750604629516602

Token 61: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.06832623481750488
    2. ' factorial' → logprob: -2.818326234817505
    3. '       ' → logprob: -5.193325996398926
    4. '   ' → logprob: -7.193325996398926
    5. ' factor' → logprob: -10.943325996398926
    6. 'fact' → logprob: -12.318325996398926
    7. '.factor' → logprob: -12.693325996398926
    8. '_factor' → logprob: -13.193325996398926
    9. ' ' → logprob: -13.318325996398926
    10. '           ' → logprob: -13.818325996398926

Token 62: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. ' s' → logprob: -15.5
    3. '```' → logprob: -17.5
    4. 'sf' → logprob: -17.625
    5. '   ' → logprob: -18.125
    6. '[s' → logprob: -18.625
    7. '       ' → logprob: -18.625
    8. 'es' → logprob: -18.75
    9. '	s' → logprob: -19.125
    10. 'sm' → logprob: -19.125

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10025304555892944
    2. '.' → logprob: -2.350253105163574
    3. '.app' → logprob: -11.100253105163574
    4. ' .' → logprob: -11.350253105163574
    5. '.extend' → logprob: -11.600253105163574
    6. '.Append' → logprob: -12.600253105163574
    7. 'append' → logprob: -12.850253105163574
    8. '.py' → logprob: -13.725253105163574
    9. '_append' → logprob: -13.725253105163574
    10. '.push' → logprob: -14.600253105163574

Token 64: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0002651503309607506
    2. '(' → logprob: -8.250265121459961
    3. '((' → logprob: -12.500265121459961
    4. ' (' → logprob: -16.75026512145996
    5. '(m' → logprob: -18.12526512145996
    6. '(s' → logprob: -18.12526512145996
    7. '(F' → logprob: -18.12526512145996
    8. '(i' → logprob: -18.50026512145996
    9. '(a' → logprob: -18.62526512145996
    10. '(u' → logprob: -18.62526512145996

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. ')
' → logprob: -10.75002670288086
    3. ' )' → logprob: -12.25002670288086
    4. ')

' → logprob: -15.25002670288086
    5. ')return' → logprob: -15.87502670288086
    6. '   ' → logprob: -16.37502670288086
    7. '))' → logprob: -16.75002670288086
    8. ')`' → logprob: -17.12502670288086
    9. ' ' → logprob: -17.25002670288086
    10. ')
' → logprob: -17.37502670288086

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1532752364873886
    2. '
' → logprob: -2.90327525138855
    3. 'in' → logprob: -3.27827525138855
    4. '    
' → logprob: -3.27827525138855
    5. '```' → logprob: -5.278275012969971
    6. 'inv' → logprob: -6.528275012969971
    7. ' 
' → logprob: -6.653275012969971
    8. 'inverse' → logprob: -7.028275012969971
    9. '<|end|>' → logprob: -7.278275012969971
    10. '  
' → logprob: -7.528275012969971

Token 67: ' inv' (ID: 1827)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5378796458244324
    2. 'inv' (adapté à ' inv') → logprob: -1.5378797054290771
    3. 'in' → logprob: -1.7878797054290771
    4. ' inv' → logprob: -3.662879705429077
    5. 'inverse' → logprob: -4.912879467010498
    6. ' inverse' → logprob: -8.287879943847656
    7. '    
' → logprob: -9.037879943847656
    8. ' ' → logprob: -9.162879943847656
    9. '       ' → logprob: -9.412879943847656
    10. ' invers' → logprob: -9.912879943847656

Token 68: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06674612313508987
    2. ' =' → logprob: -3.441746234893799
    3. '_factor' → logprob: -3.816746234893799
    4. '=' → logprob: -5.191746234893799
    5. '_f' → logprob: -5.566746234893799
    6. '_fact' → logprob: -7.441746234893799
    7. 'f' → logprob: -8.19174575805664
    8. '_s' → logprob: -8.94174575805664
    9. '=f' → logprob: -10.06674575805664
    10. 'factor' → logprob: -10.31674575805664

Token 69: ' pow' (ID: 9779)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030436426401138306
    2. ' [' → logprob: -4.0304365158081055
    3. '1' → logprob: -4.6554365158081055
    4. '[f' → logprob: -7.1554365158081055
    5. 'factor' → logprob: -7.1554365158081055
    6. 'pow' → logprob: -7.5304365158081055
    7. ' ' → logprob: -8.030436515808105
    8. 'f' → logprob: -9.655436515808105
    9. ' factorial' → logprob: -10.155436515808105
    10. '(' → logprob: -10.280436515808105

Token 70: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.014218159019947052
    2. '(' → logprob: -4.264218330383301
    3. '```' → logprob: -11.1392183303833
    4. 's' → logprob: -11.3892183303833
    5. 'factor' → logprob: -12.0142183303833
    6. '(`' → logprob: -12.3892183303833
    7. '(
' → logprob: -12.3892183303833
    8. 'f' → logprob: -12.5142183303833
    9. '(a' → logprob: -13.5142183303833
    10. ')' → logprob: -13.7642183303833

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006336859660223126
    2. ',f' → logprob: -7.750633716583252
    3. '(' → logprob: -9.000633239746094
    4. ' ,' → logprob: -10.375633239746094
    5. '(f' → logprob: -11.000633239746094
    6. ')' → logprob: -11.250633239746094
    7. 'f' → logprob: -12.250633239746094
    8. ',
' → logprob: -12.750633239746094
    9. '```' → logprob: -12.875633239746094
    10. 's' → logprob: -13.750633239746094

Token 72: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.11169765144586563
    2. ' MOD' → logprob: -2.4866976737976074
    3. '-' → logprob: -3.8616976737976074
    4. ' -' → logprob: -7.361697673797607
    5. '-M' → logprob: -7.736697673797607
    6. ' ' → logprob: -9.11169719696045
    7. '_MOD' → logprob: -9.23669719696045
    8. ')' → logprob: -9.36169719696045
    9. '   ' → logprob: -10.61169719696045
    10. '  ' → logprob: -10.73669719696045

Token 73: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009115827269852161
    2. ' -' → logprob: -7.000911712646484
    3. '−' → logprob: -17.250911712646484
    4. '–' → logprob: -18.375911712646484
    5. ' ' → logprob: -19.125911712646484
    6. '```' → logprob: -19.125911712646484
    7. ' ' → logprob: -20.500911712646484
    8. '  ' → logprob: -20.875911712646484
    9. '2' → logprob: -21.375911712646484
    10. ')' → logprob: -21.500911712646484

Token 74: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.778209353797138e-05
    2. '-' → logprob: -9.625067710876465
    3. ' ' → logprob: -13.875067710876465
    4. ' -' → logprob: -15.125067710876465
    5. '```' → logprob: -15.500067710876465
    6. '' → logprob: -16.81256866455078
    7. '۲' → logprob: -17.31256866455078
    8. '   ' → logprob: -17.56256866455078
    9. '3' → logprob: -17.56256866455078
    10. '  ' → logprob: -18.18756866455078

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '-' → logprob: -14.000001907348633
    3. '```' → logprob: -14.687501907348633
    4. ' ' → logprob: -15.562501907348633
    5. '

' → logprob: -16.750001907348633
    6. '   ' → logprob: -16.875001907348633
    7. 'two' → logprob: -16.937501907348633
    8. ' -' → logprob: -17.000001907348633
    9. '２' → logprob: -17.062501907348633
    10. '۲' → logprob: -17.500001907348633

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005303950165398419
    2. ')' → logprob: -8.000530242919922
    3. '   ' → logprob: -9.250530242919922
    4. ' ,' → logprob: -9.250530242919922
    5. ' ' → logprob: -13.750530242919922
    6. ',
' → logprob: -14.625530242919922
    7. ' )' → logprob: -14.750530242919922
    8. '	' → logprob: -15.625530242919922
    9. '  ' → logprob: -15.750530242919922
    10. ',n' → logprob: -16.375530242919922

Token 77: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.5824239253997803
    2. 'MOD' → logprob: -0.8324239253997803
    3. ')' → logprob: -5.082424163818359
    4. ' )' → logprob: -8.45742416381836
    5. ' ' → logprob: -10.33242416381836
    6. '   ' → logprob: -11.83242416381836
    7. '_MOD' → logprob: -12.58242416381836
    8. '.MOD' → logprob: -13.70742416381836
    9. '    ' → logprob: -14.95742416381836
    10. ' ' → logprob: -15.08242416381836

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018947436183225363
    2. ')
' → logprob: -8.625189781188965
    3. ' )' → logprob: -11.625189781188965
    4. '   ' → logprob: -14.500189781188965
    5. ')
' → logprob: -16.25018882751465
    6. ')

' → logprob: -16.50018882751465
    7. ' ' → logprob: -16.62518882751465
    8. '),' → logprob: -17.25018882751465
    9. '')' → logprob: -18.00018882751465
    10. '))' → logprob: -18.25018882751465

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008398807840421796
    2. 'in' → logprob: -7.125839710235596
    3. ',' → logprob: -11.500840187072754
    4. ' factorial' → logprob: -11.625840187072754
    5. '<|end|>' → logprob: -12.500840187072754
    6. 'inv' → logprob: -13.000840187072754
    7. 'inverse' → logprob: -13.125840187072754
    8. '	in' → logprob: -13.625840187072754
    9. ' ' → logprob: -14.000840187072754
    10. '```' → logprob: -14.125840187072754

Token 80: ' inv' (ID: 1827)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004897027276456356
    2. 'in' → logprob: -5.379897117614746
    3. 'inv' (adapté à ' inv') → logprob: -8.754897117614746
    4. 'inverse' → logprob: -9.379897117614746
    5. ' inv' → logprob: -11.879897117614746
    6. '    
' → logprob: -12.004897117614746
    7. ' invers' → logprob: -12.129897117614746
    8. ' factorial' → logprob: -12.754897117614746
    9. ' inverse' → logprob: -13.004897117614746
    10. '	in' → logprob: -13.129897117614746

Token 81: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.723352049040841e-06
    2. ' =' → logprob: -13.000004768371582
    3. '=' → logprob: -13.125004768371582
    4. '_s' → logprob: -15.125004768371582
    5. ' s' → logprob: -16.375003814697266
    6. '_list' → logprob: -16.750003814697266
    7. '_' → logprob: -16.875003814697266
    8. '_values' → logprob: -17.375003814697266
    9. '_factor' → logprob: -17.375003814697266
    10. '```' → logprob: -18.500003814697266

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029873017221689224
    2. '=' → logprob: -3.5298731327056885
    3. 's' → logprob: -9.02987289428711
    4. ' ' → logprob: -13.27987289428711
    5. ' =[' → logprob: -14.65487289428711
    6. '=[]' → logprob: -15.27987289428711
    7. '   ' → logprob: -16.15487289428711
    8. '  ' → logprob: -16.65487289428711
    9. '=[' → logprob: -16.77987289428711
    10. '[' → logprob: -16.90487289428711

Token 83: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11290057003498077
    2. ' [' → logprob: -2.237900495529175
    3. '[f' → logprob: -9.862900733947754
    4. '[len' → logprob: -11.737900733947754
    5. '[in' → logprob: -12.487900733947754
    6. ' ' → logprob: -12.862900733947754
    7. '[n' → logprob: -13.112900733947754
    8. '   ' → logprob: -13.112900733947754
    9. '[int' → logprob: -13.112900733947754
    10. '[i' → logprob: -13.987900733947754

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006260919850319624
    2. 'inv' → logprob: -5.381260871887207
    3. 'None' → logprob: -7.006260871887207
    4. '0' → logprob: -7.631260871887207
    5. 'factor' → logprob: -9.006260871887207
    6. 'f' → logprob: -9.881260871887207
    7. ' ' → logprob: -10.381260871887207
    8. '   ' → logprob: -10.881260871887207
    9. 'fact' → logprob: -12.381260871887207
    10. ' inv' → logprob: -12.881260871887207

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007767542265355587
    2. ',' → logprob: -7.250776767730713
    3. ']*(' → logprob: -10.250776290893555
    4. ']*' → logprob: -11.750776290893555
    5. ' ]' → logprob: -12.125776290893555
    6. '<|end|>' → logprob: -12.500776290893555
    7. ')' → logprob: -12.625776290893555
    8. ' for' → logprob: -13.000776290893555
    9. ']+' → logprob: -13.375776290893555
    10. ']
' → logprob: -13.500776290893555

Token 86: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01531732827425003
    2. '<|end|>' → logprob: -5.265317440032959
    3. 'for' → logprob: -5.890317440032959
    4. '*' → logprob: -6.265317440032959
    5. '   ' → logprob: -6.390317440032959
    6. ' for' → logprob: -6.890317440032959
    7. ' ,' → logprob: -7.640317440032959
    8. ']' → logprob: -7.765317440032959
    9. ',
' → logprob: -7.765317440032959
    10. ' ' → logprob: -8.6403169631958

Token 87: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00141440040897578
    2. ' (' → logprob: -6.6264142990112305
    3. '(' → logprob: -9.75141429901123
    4. '   ' → logprob: -11.00141429901123
    5. '(len' → logprob: -11.62641429901123
    6. '(m' → logprob: -13.75141429901123
    7. '[n' → logprob: -14.00141429901123
    8. 'n' → logprob: -14.12641429901123
    9. '((' → logprob: -14.25141429901123
    10. ' ' → logprob: -14.87641429901123

Token 88: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07154513150453568
    2. '(n' → logprob: -2.696545124053955
    3. ' n' → logprob: -6.696545124053955
    4. '   ' → logprob: -8.321545600891113
    5. ' (' → logprob: -9.446545600891113
    6. '(' → logprob: -10.446545600891113
    7. '[n' → logprob: -11.696545600891113
    8. '	n' → logprob: -12.071545600891113
    9. ' ' → logprob: -13.071545600891113
    10. '{' → logprob: -13.946545600891113

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246875032782555
    2. ' +' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.273246765136719
    4. '+
' → logprob: -14.898246765136719
    5. ' +
' → logprob: -16.39824676513672
    6. '+n' → logprob: -16.39824676513672
    7. '＋' → logprob: -17.02324676513672
    8. ' plus' → logprob: -17.02324676513672
    9. '   ' → logprob: -17.77324676513672
    10. '+

' → logprob: -18.27324676513672

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012111874530091882
    2. '2' → logprob: -7.001211166381836
    3. ' ' → logprob: -8.126211166381836
    4. '   ' → logprob: -12.751211166381836
    5. '+' → logprob: -14.876211166381836
    6. '  ' → logprob: -15.001211166381836
    7. '```' → logprob: -15.813711166381836
    8. '    ' → logprob: -16.313711166381836
    9. '`' → logprob: -17.688711166381836
    10. '１' → logprob: -17.751211166381836

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.625011444091797
    3. '2' → logprob: -12.750011444091797
    4. '   ' → logprob: -17.000011444091797
    5. '+' → logprob: -18.250011444091797
    6. '  ' → logprob: -18.875011444091797
    7. '１' → logprob: -19.000011444091797
    8. '۱' → logprob: -19.125011444091797
    9. '```' → logprob: -19.250011444091797
    10. '' → logprob: -19.937511444091797

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002289067953824997
    2. ')
' → logprob: -6.252289295196533
    3. ']' → logprob: -8.127288818359375
    4. ' )' → logprob: -10.002288818359375
    5. '   ' → logprob: -12.377288818359375
    6. ')]' → logprob: -12.752288818359375
    7. ')

' → logprob: -13.252288818359375
    8. '])' → logprob: -13.252288818359375
    9. ')
' → logprob: -13.377288818359375
    10. ',' → logprob: -13.502288818359375

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8175185322761536
    2. '   ' → logprob: -1.3175184726715088
    3. ' for' → logprob: -1.6925184726715088
    4. 'for' → logprob: -2.442518472671509
    5. '    
' → logprob: -4.817518711090088
    6. ' 
' → logprob: -5.192518711090088
    7. '  
' → logprob: -6.567518711090088
    8. '```' → logprob: -6.692518711090088
    9. '[' → logprob: -7.067518711090088
    10. '   
' → logprob: -7.317518711090088

Token 94: ' inv' (ID: 1827)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11102726310491562
    2. 'in' → logprob: -2.611027240753174
    3. '   ' → logprob: -3.736027240753174
    4. ' for' → logprob: -4.986027240753174
    5. 'inv' (adapté à ' inv') → logprob: -7.486027240753174
    6. '```' → logprob: -8.361027717590332
    7. '
' → logprob: -9.611027717590332
    8. '    
' → logprob: -10.361027717590332
    9. 'i' → logprob: -10.986027717590332
    10. 'n' → logprob: -11.861027717590332

Token 95: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.6537622034084052e-05
    2. '[' → logprob: -11.37502670288086
    3. '=' → logprob: -12.37502670288086
    4. '```' → logprob: -13.00002670288086
    5. '[s' → logprob: -13.00002670288086
    6. '   ' → logprob: -13.37502670288086
    7. ' s' → logprob: -14.50002670288086
    8. ''s' → logprob: -14.50002670288086
    9. ' =' → logprob: -14.75002670288086
    10. '    
' → logprob: -15.12502670288086

Token 96: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005510062328539789
    2. '[-' → logprob: -8.000551223754883
    3. '[n' → logprob: -9.125551223754883
    4. '=' → logprob: -10.250551223754883
    5. '[:]' → logprob: -10.750551223754883
    6. ' =' → logprob: -11.375551223754883
    7. '```' → logprob: -11.375551223754883
    8. ' [' → logprob: -11.500551223754883
    9. '=[' → logprob: -12.375551223754883
    10. '[
' → logprob: -13.125551223754883

Token 97: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011752966791391373
    2. ' ]' → logprob: -4.511753082275391
    3. ']=' → logprob: -7.511753082275391
    4. ')]' → logprob: -9.13675308227539
    5. ')' → logprob: -10.63675308227539
    6. '=' → logprob: -11.63675308227539
    7. '`]' → logprob: -12.51175308227539
    8. ' ' → logprob: -12.88675308227539
    9. ']
' → logprob: -13.26175308227539
    10. '])' → logprob: -13.38675308227539

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142999291419983
    2. '=' → logprob: -1.7014299631118774
    3. ' *=' → logprob: -12.326430320739746
    4. ' /=' → logprob: -12.701430320739746
    5. ' =
' → logprob: -13.076430320739746
    6. ' ' → logprob: -13.951430320739746
    7. ',' → logprob: -14.201430320739746
    8. '    ' → logprob: -14.451430320739746
    9. '[' → logprob: -14.576430320739746
    10. '   ' → logprob: -14.826430320739746

Token 99: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.002187256934121251
    2. ' inv' → logprob: -6.127187252044678
    3. 'inf' → logprob: -13.627187728881836
    4. 'int' → logprob: -15.002187728881836
    5. ' ' → logprob: -15.627187728881836
    6. '(inv' → logprob: -15.752187728881836
    7. '   ' → logprob: -16.127187728881836
    8. 'pow' → logprob: -16.252187728881836
    9. 'inverse' → logprob: -17.752187728881836
    10. 'in' → logprob: -18.627187728881836

Token 100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023793911561369896
    2. ' for' → logprob: -4.023793697357178
    3. '    
' → logprob: -6.023793697357178
    4. '
' → logprob: -6.648793697357178
    5. 'for' → logprob: -6.648793697357178
    6. '	for' → logprob: -8.398794174194336
    7. ' 
' → logprob: -9.398794174194336
    8. '	
' → logprob: -9.648794174194336
    9. '```' → logprob: -9.648794174194336
    10. '  
' → logprob: -9.773794174194336

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02528434246778488
    2. ' for' → logprob: -3.7752842903137207
    3. '    
' → logprob: -6.650284290313721
    4. 'for' → logprob: -7.525284290313721
    5. '	for' → logprob: -9.775284767150879
    6. ' 
' → logprob: -10.275284767150879
    7. '
' → logprob: -10.650284767150879
    8. '  
' → logprob: -10.650284767150879
    9. '<|end|>' → logprob: -11.150284767150879
    10. '   
' → logprob: -11.400284767150879

Token 102: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6217580437660217
    2. '   ' → logprob: -0.9967580437660217
    3. 'for' (adapté à ' for') → logprob: -2.371757984161377
    4. ' ' → logprob: -8.871758460998535
    5. '    
' → logprob: -8.996758460998535
    6. '	for' → logprob: -8.996758460998535
    7. ' 
' → logprob: -10.621758460998535
    8. 'n' → logprob: -10.746758460998535
    9. '```' → logprob: -10.746758460998535
    10. '
' → logprob: -10.746758460998535

Token 103: ' m' (ID: 284)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.36527130007743835
    2. ' m' → logprob: -1.3652713298797607
    3. 'm' → logprob: -3.6152713298797607
    4. 'i' → logprob: -3.7402713298797607
    5. ' k' → logprob: -11.74027156829834
    6. ' x' → logprob: -12.36527156829834
    7. ' ' → logprob: -12.61527156829834
    8. 'k' → logprob: -12.86527156829834
    9. 'x' → logprob: -13.11527156829834
    10. '```' → logprob: -14.74027156829834

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007939011557027698
    2. 'in' → logprob: -7.250793933868408
    3. ' ' → logprob: -9.75079345703125
    4. '   ' → logprob: -11.62579345703125
    5. ' m' → logprob: -12.00079345703125
    6. 'm' → logprob: -12.62579345703125
    7. 'n' → logprob: -12.87579345703125
    8. ' n' → logprob: -12.87579345703125
    9. '  ' → logprob: -13.87579345703125
    10. ' i' → logprob: -14.25079345703125

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892592251300812
    2. ' range' → logprob: -2.578925848007202
    3. 're' → logprob: -10.953926086425781
    4. ' reversed' → logprob: -11.828926086425781
    5. '   ' → logprob: -12.078926086425781
    6. ' ' → logprob: -12.328926086425781
    7. '	range' → logprob: -14.703926086425781
    8. '(range' → logprob: -14.828926086425781
    9. '  ' → logprob: -15.078926086425781
    10. ' xrange' → logprob: -16.07892608642578

Token 106: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -12.125008583068848
    3. ' (' → logprob: -13.375008583068848
    4. ' n' → logprob: -14.375008583068848
    5. 'n' → logprob: -14.500008583068848
    6. '   ' → logprob: -17.62500762939453
    7. '	n' → logprob: -18.25000762939453
    8. ',n' → logprob: -20.25000762939453
    9. ' ' → logprob: -20.87500762939453
    10. '<n' → logprob: -21.37500762939453

Token 107: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024758970830589533
    2. ' -' → logprob: -6.002475738525391
    3. ',' → logprob: -15.12747573852539
    4. ' ' → logprob: -17.37747573852539
    5. '-
' → logprob: -18.75247573852539
    6. '   ' → logprob: -19.62747573852539
    7. 'n' → logprob: -20.12747573852539
    8. '1' → logprob: -20.50247573852539
    9. 'm' → logprob: -20.50247573852539
    10. ' ,' → logprob: -20.75247573852539

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006747581530362368
    2. ' ' → logprob: -5.006747722625732
    3. '1' → logprob: -10.881747245788574
    4. '-' → logprob: -11.506747245788574
    5. '   ' → logprob: -13.131747245788574
    6. ' -' → logprob: -13.756747245788574
    7. '  ' → logprob: -15.506747245788574
    8. '```' → logprob: -17.00674819946289
    9. '    ' → logprob: -18.50674819946289
    10. 'm' → logprob: -19.00674819946289

Token 109: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.87501335144043
    3. '1' → logprob: -12.00001335144043
    4. '   ' → logprob: -17.50001335144043
    5. '-' → logprob: -17.62501335144043
    6. '```' → logprob: -20.00001335144043
    7. '  ' → logprob: -21.00001335144043
    8. '
' → logprob: -21.12501335144043
    9. ' -' → logprob: -21.62501335144043
    10. '۰' → logprob: -22.37501335144043

Token 110: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761060118675232
    2. ' -' → logprob: -0.8261060118675232
    3. ',' → logprob: -9.076106071472168
    4. '   ' → logprob: -10.451106071472168
    5. ' ' → logprob: -11.451106071472168
    6. ',-' → logprob: -11.826106071472168
    7. ' ,' → logprob: -12.826106071472168
    8. '-,' → logprob: -13.951106071472168
    9. '  ' → logprob: -14.701106071472168
    10. ' -,' → logprob: -14.826106071472168

Token 111: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003604344092309475
    2. ' -' → logprob: -5.628604412078857
    3. '   ' → logprob: -13.1286039352417
    4. ',-' → logprob: -14.0036039352417
    5. '-step' → logprob: -14.8786039352417
    6. '−' → logprob: -15.1286039352417
    7. ' ' → logprob: -15.2536039352417
    8. '  ' → logprob: -15.3786039352417
    9. '-)' → logprob: -16.128604888916016
    10. '	' → logprob: -16.253604888916016

Token 112: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31413915753364563
    2. ' -' → logprob: -1.5641391277313232
    3. '1' → logprob: -2.8141391277313232
    4. '):
' → logprob: -9.189139366149902
    5. ' ' → logprob: -9.939139366149902
    6. ',-' → logprob: -9.939139366149902
    7. '   ' → logprob: -10.314139366149902
    8. ')' → logprob: -10.314139366149902
    9. '-)' → logprob: -10.939139366149902
    10. '  ' → logprob: -11.064139366149902

Token 113: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0347326323390007
    2. ' -' → logprob: -3.6597325801849365
    3. '):
' → logprob: -4.909732818603516
    4. '):' → logprob: -7.409732818603516
    5. '   ' → logprob: -8.159732818603516
    6. ',-' → logprob: -9.534732818603516
    7. ',' → logprob: -10.409732818603516
    8. ' ):
' → logprob: -12.034732818603516
    9. ' ' → logprob: -12.784732818603516
    10. ':' → logprob: -13.034732818603516

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07762262970209122
    2. '-' → logprob: -3.577622652053833
    3. '   ' → logprob: -4.577622413635254
    4. 's' → logprob: -4.702622413635254
    5. ':' → logprob: -4.952622413635254
    6. ' -' → logprob: -5.077622413635254
    7. '):
' → logprob: -5.327622413635254
    8. ' ' → logprob: -5.952622413635254
    9. '    ' → logprob: -6.827622413635254
    10. ')' → logprob: -7.202622413635254

Token 115: ' inv' (ID: 1827)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09130852669477463
    2. ' inv' → logprob: -3.21630859375
    3. '           ' → logprob: -3.59130859375
    4. '       ' → logprob: -4.71630859375
    5. '   ' → logprob: -5.21630859375
    6. ' in' → logprob: -5.71630859375
    7. 's' → logprob: -7.71630859375
    8. ' ' → logprob: -8.34130859375
    9. 'inv' (adapté à ' inv') → logprob: -8.34130859375
    10. 'm' → logprob: -8.59130859375

Token 116: ' *=' (ID: 25253)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -4.008129963040119e-06
    2. ''s' → logprob: -13.000003814697266
    3. '[' → logprob: -14.250003814697266
    4. '   ' → logprob: -14.625003814697266
    5. '[s' → logprob: -15.625003814697266
    6. '2' → logprob: -16.125003814697266
    7. 'si' → logprob: -16.500003814697266
    8. '```' → logprob: -16.875003814697266
    9. 'is' → logprob: -17.375003814697266
    10. 'sin' → logprob: -17.375003814697266

Token 117: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00010926496179308742
    2. ' m' → logprob: -9.125109672546387
    3. '	m' → logprob: -15.500109672546387
    4. '<|end|>' → logprob: -17.62510871887207
    5. '   ' → logprob: -18.25010871887207
    6. '(m' → logprob: -18.37510871887207
    7. '%m' → logprob: -18.62510871887207
    8. ')m' → logprob: -18.62510871887207
    9. '_m' → logprob: -18.75010871887207
    10. 'м' → logprob: -19.37510871887207

Token 118: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0026479519437998533
    2. ' -' → logprob: -6.002647876739502
    3. ' ' → logprob: -8.75264835357666
    4. '"' → logprob: -12.87764835357666
    5. '   ' → logprob: -13.00264835357666
    6. '  ' → logprob: -13.37764835357666
    7. '^-' → logprob: -13.62764835357666
    8. '```' → logprob: -13.75264835357666
    9. '`' → logprob: -14.00264835357666
    10. ' 
' → logprob: -14.25264835357666

Token 119: '       ' (ID: 309)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012535012501757592
    2. ' -' → logprob: -9.00012493133545
    3. ' ' → logprob: -14.87512493133545
    4. '   ' → logprob: -15.25012493133545
    5. '`' → logprob: -15.62512493133545
    6. '```' → logprob: -15.62512493133545
    7. '(-' → logprob: -15.75012493133545
    8. '"' → logprob: -15.87512493133545
    9. ' 
' → logprob: -16.250125885009766
    10. '	' → logprob: -16.625125885009766

Token 120: ' inv' (ID: 1827)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42632800340652466
    2. 'inv' (adapté à ' inv') → logprob: -1.6763279438018799
    3. 'm' → logprob: -2.55132794380188
    4. 'pow' → logprob: -4.176328182220459
    5. ')' → logprob: -4.426328182220459
    6. '%m' → logprob: -4.551328182220459
    7. '%' → logprob: -4.801328182220459
    8. 'in' → logprob: -5.051328182220459
    9. ' m' → logprob: -5.051328182220459
    10. ' %=' → logprob: -5.926328182220459

Token 121: ' %=' (ID: 117035)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.46332085132598877
    2. '-' → logprob: -1.4633208513259888
    3. '=' → logprob: -2.213320732116699
    4. '%=' → logprob: -3.713320732116699
    5. '%' → logprob: -6.088320732116699
    6. ' %=' → logprob: -6.588320732116699
    7. '**' → logprob: -7.713320732116699
    8. '^-' → logprob: -7.838320732116699
    9. ' -=' → logprob: -7.963320732116699
    10. '```' → logprob: -8.4633207321167

Token 122: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006772919092327356
    2. ' MOD' → logprob: -5.006772994995117
    3. 'm' → logprob: -10.381772994995117
    4. '(M' → logprob: -11.631772994995117
    5. ' (' → logprob: -12.256772994995117
    6. '_MOD' → logprob: -12.381772994995117
    7. '(' → logprob: -12.756772994995117
    8. ' m' → logprob: -13.256772994995117
    9. 'mod' → logprob: -13.756772994995117
    10. '(m' → logprob: -14.381772994995117

Token 123: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01317635364830494
    2. 's' → logprob: -5.388176441192627
    3. 'm' → logprob: -5.638176441192627
    4. 'in' → logprob: -7.388176441192627
    5. '-
' → logprob: -7.388176441192627
    6. '\' → logprob: -7.513176441192627
    7. '
' → logprob: -7.638176441192627
    8. '   ' → logprob: -7.763176441192627
    9. '  
' → logprob: -8.013175964355469
    10. '    
' → logprob: -8.138175964355469

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6219592690467834
    2. '-' → logprob: -1.6219592094421387
    3. 'in' → logprob: -1.6219592094421387
    4. '   ' → logprob: -3.1219592094421387
    5. 'm' → logprob: -4.746959209442139
    6. 's' → logprob: -4.871959209442139
    7. '`' → logprob: -6.496959209442139
    8. '(' → logprob: -6.996959209442139
    9. ' ' → logprob: -7.246959209442139
    10. ')' → logprob: -7.371959209442139

Token 125: ' inv' (ID: 1827)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02781469002366066
    2. 'm' → logprob: -3.9028146266937256
    3. ' inv' → logprob: -5.527814865112305
    4. 'inv' (adapté à ' inv') → logprob: -5.902814865112305
    5. ' m' → logprob: -8.402814865112305
    6. 'f' → logprob: -9.277814865112305
    7. '   ' → logprob: -9.527814865112305
    8. 'factor' → logprob: -10.027814865112305
    9. ' in' → logprob: -10.777814865112305
    10. 's' → logprob: -11.152814865112305

Token 126: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2619937062263489
    2. '=' → logprob: -1.511993646621704
    3. '-' → logprob: -6.011993885040283
    4. '/=' → logprob: -6.011993885040283
    5. '//=' → logprob: -6.261993885040283
    6. '-=' → logprob: -7.136993885040283
    7. 'in' → logprob: -7.511993885040283
    8. '*=' → logprob: -7.886993885040283
    9. '//' → logprob: -8.136993408203125
    10. '/' → logprob: -8.511993408203125

Token 127: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -3.214019307051785e-05
    2. '[' → logprob: -10.375032424926758
    3. 'm' → logprob: -14.625032424926758
    4. '[
' → logprob: -15.375032424926758
    5. '\[' → logprob: -16.000032424926758
    6. '```' → logprob: -17.625032424926758
    7. '[M' → logprob: -17.750032424926758
    8. ' [' → logprob: -17.750032424926758
    9. '[n' → logprob: -17.875032424926758
    10. '[mem' → logprob: -18.125032424926758

Token 128: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00042507401667535305
    2. '-=' → logprob: -8.375425338745117
    3. '=' → logprob: -8.750425338745117
    4. ']' → logprob: -10.500425338745117
    5. ' -' → logprob: -11.750425338745117
    6. ' -=' → logprob: -15.250425338745117
    7. 'm' → logprob: -15.250425338745117
    8. ']=' → logprob: -15.875425338745117
    9. '```' → logprob: -16.625425338745117
    10. ')' → logprob: -17.250425338745117

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '<|end|>' → logprob: -15.875000953674316
    4. ')' → logprob: -18.125
    5. ']' → logprob: -19.0
    6. '   ' → logprob: -19.125
    7. '}' → logprob: -19.375
    8. '```' → logprob: -19.625
    9. '
' → logprob: -19.9375
    10. '  ' → logprob: -20.1875

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.500001907348633
    4. '<|end|>' → logprob: -17.625001907348633
    5. '  ' → logprob: -19.375001907348633
    6. '۱' → logprob: -19.812501907348633
    7. '```' → logprob: -19.812501907348633
    8. '１' → logprob: -20.000001907348633
    9. '১' → logprob: -20.062501907348633
    10. '
' → logprob: -20.062501907348633

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0053123775869607925
    2. '=' → logprob: -5.380312442779541
    3. ']=' → logprob: -7.380312442779541
    4. ')' → logprob: -9.755311965942383
    5. ' =' → logprob: -12.505311965942383
    6. ',' → logprob: -12.755311965942383
    7. ' ]' → logprob: -13.130311965942383
    8. '(' → logprob: -14.755311965942383
    9. ')=' → logprob: -15.255311965942383
    10. '*' → logprob: -15.630311965942383

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004885728703811765
    2. ' =' → logprob: -7.625488758087158
    3. '*=' → logprob: -14.75048828125
    4. '=

' → logprob: -16.62548828125
    5. '==' → logprob: -17.37548828125
    6. ' *=' → logprob: -18.00048828125
    7. '=}' → logprob: -18.25048828125
    8. '=`' → logprob: -18.37548828125
    9. ')' → logprob: -18.37548828125
    10. '=
' → logprob: -18.37548828125

Token 133: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0821746438741684
    2. ' inv' → logprob: -2.58217453956604
    3. '(inv' → logprob: -6.582174777984619
    4. ' (' → logprob: -6.957174777984619
    5. 'in' → logprob: -7.207174777984619
    6. '(' → logprob: -8.957174301147461
    7. '(in' → logprob: -10.707174301147461
    8. ' ' → logprob: -10.707174301147461
    9. 'int' → logprob: -11.332174301147461
    10. ' in' → logprob: -12.457174301147461

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031879570335149765
    2. ' ' → logprob: -4.781879425048828
    3. '*' → logprob: -4.906879425048828
    4. ' return' → logprob: -5.281879425048828
    5. 'return' → logprob: -5.531879425048828
    6. '/' → logprob: -6.656879425048828
    7. '    
' → logprob: -7.156879425048828
    8. ' *' → logprob: -7.281879425048828
    9. ')' → logprob: -7.406879425048828
    10. '       ' → logprob: -7.781879425048828

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06120021641254425
    2. '*' → logprob: -3.0612001419067383
    3. ' ' → logprob: -4.811200141906738
    4. '-' → logprob: -6.936200141906738
    5. ' return' → logprob: -7.436200141906738
    6. ')' → logprob: -7.561200141906738
    7. 'return' → logprob: -7.686200141906738
    8. '	' → logprob: -8.061200141906738
    9. ' *' → logprob: -8.061200141906738
    10. '       ' → logprob: -8.561200141906738

Token 136: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14224539697170258
    2. 'return' (adapté à ' return') → logprob: -2.642245292663574
    3. ' return' → logprob: -3.642245292663574
    4. ')' → logprob: -4.017245292663574
    5. ' ' → logprob: -4.642245292663574
    6. '*' → logprob: -5.892245292663574
    7. '    ' → logprob: -7.142245292663574
    8. '[' → logprob: -7.392245292663574
    9. '	return' → logprob: -7.517245292663574
    10. '  ' → logprob: -7.642245292663574

Token 137: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.01719530113041401
    2. ' factorial' → logprob: -4.142195224761963
    3. '(f' → logprob: -6.767195224761963
    4. ' (' → logprob: -12.767195701599121
    5. ' factor' → logprob: -13.267195701599121
    6. 'fact' → logprob: -13.642195701599121
    7. '_factor' → logprob: -13.767195701599121
    8. 'f' → logprob: -14.267195701599121
    9. '(' → logprob: -14.642195701599121
    10. 'Factor' → logprob: -14.767195701599121

Token 138: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.292907877039397e-06
    2. ' s' → logprob: -12.87500286102295
    3. 'factor' → logprob: -14.87500286102295
    4. '[s' → logprob: -16.500003814697266
    5. '_s' → logprob: -16.625003814697266
    6. '_factor' → logprob: -17.125003814697266
    7. '(s' → logprob: -17.500003814697266
    8. '_' → logprob: -17.625003814697266
    9. ',s' → logprob: -18.125003814697266
    10. ' factorial' → logprob: -18.250003814697266

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009327789884991944
    2. 's' → logprob: -7.000932693481445
    3. ',in' → logprob: -11.375932693481445
    4. ',s' → logprob: -12.625932693481445
    5. ' ,' → logprob: -12.750932693481445
    6. ',
' → logprob: -13.750932693481445
    7. 'in' → logprob: -13.875932693481445
    8. ',f' → logprob: -15.125932693481445
    9. ',int' → logprob: -15.750932693481445
    10. ',n' → logprob: -15.875932693481445

Token 140: ' inv' (ID: 1827)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05024470388889313
    2. ' inv' → logprob: -3.0502448081970215
    3. 'inv' → logprob: -6.4252448081970215
    4. ' invers' → logprob: -11.300244331359863
    5. ' factorial' → logprob: -11.300244331359863
    6. 'In' → logprob: -13.050244331359863
    7. ' in' → logprob: -13.175244331359863
    8. 's' → logprob: -13.675244331359863
    9. 'inverse' → logprob: -13.800244331359863
    10. ' ' → logprob: -14.300244331359863

Token 141: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9623810658231378e-05
    2. ',' → logprob: -10.875020027160645
    3. '_s' → logprob: -15.750020027160645
    4. 'sv' → logprob: -16.125019073486328
    5. ''s' → logprob: -16.125019073486328
    6. '_' → logprob: -17.000019073486328
    7. '```' → logprob: -17.000019073486328
    8. '[' → logprob: -17.125019073486328
    9. 'sins' → logprob: -17.125019073486328
    10. ')' → logprob: -17.250019073486328

Token 142: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0985723733901978
    2. '[' → logprob: -1.8485723733901978
    3. '<|end|>' → logprob: -1.9735723733901978
    4. ' ' → logprob: -2.223572254180908
    5. ')' → logprob: -2.223572254180908
    6. '   ' → logprob: -3.598572254180908
    7. 's' → logprob: -3.723572254180908
    8. '_' → logprob: -3.973572254180908
    9. '=' → logprob: -4.098572254180908
    10. '#' → logprob: -4.223572254180908

Token 144: ' mod' (ID: 1812)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.7406777143478394
    2. ' count' → logprob: -1.7406777143478394
    3. ' solve' → logprob: -2.240677833557129
    4. ' main' → logprob: -2.615677833557129
    5. ' comb' → logprob: -3.115677833557129
    6. ' calculate' → logprob: -3.240677833557129
    7. ' bin' → logprob: -3.240677833557129
    8. ' combination' → logprob: -4.115677833557129
    9. ' combine' → logprob: -4.365677833557129
    10. ' n' → logprob: -5.865677833557129

Token 145: 'n' (ID: 77)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4083012342453003
    2. '_factor' → logprob: -1.4083012342453003
    3. '_add' → logprob: -3.15830135345459
    4. '_mul' → logprob: -4.40830135345459
    5. '_pow' → logprob: -4.40830135345459
    6. '_exp' → logprob: -4.78330135345459
    7. 'ular' → logprob: -5.03330135345459
    8. '_inverse' → logprob: -6.40830135345459
    9. ' _' → logprob: -6.53330135345459
    10. '_expand' → logprob: -7.15830135345459

Token 146: 'Cr' (ID: 14225)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.29672563076019287
    2. '_mul' → logprob: -2.1717257499694824
    3. '_add' → logprob: -2.9217257499694824
    4. 'ular' → logprob: -3.6717257499694824
    5. '_pow' → logprob: -3.7967257499694824
    6. '_exp' → logprob: -4.296725749969482
    7. '_div' → logprob: -4.921725749969482
    8. '_inv' → logprob: -5.171725749969482
    9. '_inverse' → logprob: -5.296725749969482
    10. 'pow' → logprob: -6.296725749969482

Token 147: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1798272728919983
    2. '(n' → logprob: -1.8048272132873535
    3. '(x' → logprob: -11.304827690124512
    4. '(_' → logprob: -11.429827690124512
    5. '(a' → logprob: -12.179827690124512
    6. '(N' → logprob: -12.179827690124512
    7. '((' → logprob: -12.304827690124512
    8. '_(' → logprob: -12.679827690124512
    9. '():' → logprob: -12.804827690124512
    10. '(:' → logprob: -12.804827690124512

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.137130498653278e-05
    2. ' ,' → logprob: -10.125081062316895
    3. ',n' → logprob: -10.625081062316895
    4. ',k' → logprob: -11.375081062316895
    5. ',m' → logprob: -13.500081062316895
    6. ',
' → logprob: -14.125081062316895
    7. ',r' → logprob: -14.625081062316895
    8. ',j' → logprob: -15.250081062316895
    9. '_,' → logprob: -15.375081062316895
    10. ',i' → logprob: -15.625081062316895

Token 149: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.056922104209661484
    2. 'k' → logprob: -3.181922197341919
    3. ' r' → logprob: -4.30692195892334
    4. ' k' → logprob: -8.18192195892334
    5. '   ' → logprob: -10.18192195892334
    6. ',' → logprob: -11.55692195892334
    7. ' ' → logprob: -12.05692195892334
    8. 'n' → logprob: -12.30692195892334
    9. 'def' → logprob: -12.80692195892334
    10. 'm' → logprob: -13.05692195892334

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. '):' → logprob: -13.000003814697266
    3. ' ,' → logprob: -14.250003814697266
    4. ',n' → logprob: -14.375003814697266
    5. ',
' → logprob: -16.125003814697266
    6. ',:' → logprob: -16.750003814697266
    7. ':' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '_,' → logprob: -18.625003814697266
    10. ')' → logprob: -18.625003814697266

Token 151: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.07896833121776581
    2. ' MOD' → logprob: -2.5789682865142822
    3. '   ' → logprob: -10.078968048095703
    4. 'mod' → logprob: -11.328968048095703
    5. ' ' → logprob: -11.453968048095703
    6. 'M' → logprob: -12.078968048095703
    7. ')' → logprob: -12.953968048095703
    8. '_MOD' → logprob: -13.203968048095703
    9. ' M' → logprob: -14.078968048095703
    10. '.MOD' → logprob: -14.453968048095703

Token 152: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000983862322755158
    2. '):
' → logprob: -7.000983715057373
    3. ')' → logprob: -9.625984191894531
    4. ' ):' → logprob: -12.500984191894531
    5. ',' → logprob: -13.500984191894531
    6. '):
' → logprob: -14.500984191894531
    7. '=' → logprob: -15.250984191894531
    8. ':' → logprob: -15.375984191894531
    9. '):

' → logprob: -16.00098419189453
    10. ')：' → logprob: -16.62598419189453

Token 153: ' fac' (ID: 3513)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.14385129511356354
    2. 'factor' → logprob: -2.0188512802124023
    3. 'fact' → logprob: -7.518851280212402
    4. 'f' → logprob: -8.143851280212402
    5. ' fact' → logprob: -9.018851280212402
    6. ' ' → logprob: -9.768851280212402
    7. ' f' → logprob: -9.893851280212402
    8. '   ' → logprob: -10.268851280212402
    9. 'fac' → logprob: -10.768851280212402
    10. ' factor' → logprob: -10.893851280212402

Token 154: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.34621405601501465
    2. 'tor' → logprob: -1.8462140560150146
    3. '):' → logprob: -2.4712140560150146
    4. 'tors' → logprob: -3.5962140560150146
    5. ')' → logprob: -4.471214294433594
    6. ',' → logprob: -4.971214294433594
    7. 's' → logprob: -6.596214294433594
    8. '):
' → logprob: -6.846214294433594
    9. 'actor' → logprob: -7.096214294433594
    10. 'ator' → logprob: -7.846214294433594

Token 155: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.013221992179751396
    2. ' inv' → logprob: -4.7632222175598145
    3. 'in' → logprob: -5.3882222175598145
    4. 'fac' → logprob: -11.263221740722656
    5. 'inf' → logprob: -12.888221740722656
    6. 'inx' → logprob: -13.888221740722656
    7. 'iv' → logprob: -13.888221740722656
    8. ' in' → logprob: -13.888221740722656
    9. ')' → logprob: -14.263221740722656
    10. '   ' → logprob: -14.388221740722656

Token 156: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026465756818652153
    2. '):' → logprob: -3.651465654373169
    3. ',' → logprob: -9.40146541595459
    4. '):
' → logprob: -9.52646541595459
    5. ' ):' → logprob: -12.65146541595459
    6. 'S' → logprob: -13.02646541595459
    7. '_' → logprob: -14.02646541595459
    8. '):

' → logprob: -14.15146541595459
    9. '[]):' → logprob: -15.15146541595459
    10. ')' → logprob: -15.27646541595459

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21922272443771362
    2. ' if' → logprob: -1.7192227840423584
    3. 'if' → logprob: -4.594222545623779
    4. ':' → logprob: -6.344222545623779
    5. '(' → logprob: -6.719222545623779
    6. ')' → logprob: -7.219222545623779
    7. '    ' → logprob: -7.344222545623779
    8. ' return' → logprob: -7.719222545623779
    9. '```' → logprob: -7.844222545623779
    10. ' ' → logprob: -7.969222545623779

Token 158: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14245061576366425
    2. 'return' → logprob: -2.5174505710601807
    3. ' if' → logprob: -3.0174505710601807
    4. ' return' → logprob: -6.01745080947876
    5. '   ' → logprob: -7.26745080947876
    6. '```' → logprob: -10.767450332641602
    7. 'result' → logprob: -11.767450332641602
    8. 'r' → logprob: -12.142450332641602
    9. '	if' → logprob: -13.392450332641602
    10. '    
' → logprob: -13.392450332641602

Token 159: ' n' (ID: 297)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.428731232881546
    2. 'r' → logprob: -1.0537312030792236
    3. ' n' → logprob: -11.053730964660645
    4. 'n' → logprob: -11.678730964660645
    5. ' not' → logprob: -13.178730964660645
    6. '   ' → logprob: -13.553730964660645
    7. ' ' → logprob: -14.303730964660645
    8. '(r' → logprob: -14.428730964660645
    9. '0' → logprob: -14.678730964660645
    10. ' ' → logprob: -14.803730964660645

Token 160: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.029789136722683907
    2. ' <' → logprob: -3.5297892093658447
    3. '<n' → logprob: -10.404788970947266
    4. ' ' → logprob: -13.029788970947266
    5. '<m' → logprob: -13.029788970947266
    6. '   ' → logprob: -14.279788970947266
    7. '[' → logprob: -14.404788970947266
    8. '<int' → logprob: -15.154788970947266
    9. '<len' → logprob: -15.154788970947266
    10. '<p' → logprob: -15.654788970947266

Token 161: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0020848317071795464
    2. '0' → logprob: -6.377084732055664
    3. ' r' → logprob: -7.877084732055664
    4. ' ' → logprob: -12.752084732055664
    5. '=' → logprob: -16.002084732055664
    6. '1' → logprob: -16.252084732055664
    7. '	r' → logprob: -16.502084732055664
    8. '=r' → logprob: -17.252084732055664
    9. '   ' → logprob: -17.627084732055664
    10. '2' → logprob: -17.877084732055664

Token 162: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00021188464597798884
    2. '0' → logprob: -8.500211715698242
    3. ' r' → logprob: -11.750211715698242
    4. '=' → logprob: -15.125211715698242
    5. '=r' → logprob: -17.125211715698242
    6. ' ' → logprob: -17.250211715698242
    7. '1' → logprob: -17.750211715698242
    8. '	r' → logprob: -17.875211715698242
    9. '2' → logprob: -18.750211715698242
    10. '   ' → logprob: -19.000211715698242

Token 163: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001334763248451054
    2. 'or' → logprob: -6.6263346672058105
    3. ' ' → logprob: -12.001335144042969
    4. ':' → logprob: -14.126335144042969
    5. '<|end|>' → logprob: -14.376335144042969
    6. '   ' → logprob: -14.876335144042969
    7. '	or' → logprob: -14.876335144042969
    8. ')' → logprob: -15.126335144042969
    9. ' ' → logprob: -16.00133514404297
    10. '  ' → logprob: -16.25133514404297

Token 164: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2519390881061554
    2. ' r' → logprob: -1.501939058303833
    3. 'n' → logprob: -12.251938819885254
    4. ' n' → logprob: -12.876938819885254
    5. '   ' → logprob: -13.501938819885254
    6. ' ' → logprob: -14.751938819885254
    7. ' or' → logprob: -15.001938819885254
    8. 'or' → logprob: -15.001938819885254
    9. '  ' → logprob: -16.25193977355957
    10. '	r' → logprob: -16.37693977355957

Token 165: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21406961977481842
    2. '>' → logprob: -1.7140696048736572
    3. ' <' → logprob: -4.714069843292236
    4. '<' → logprob: -5.714069843292236
    5. ' ' → logprob: -8.589069366455078
    6. ' or' → logprob: -9.339069366455078
    7. '<|end|>' → logprob: -11.089069366455078
    8. ' ' → logprob: -12.964069366455078
    9. ' >
' → logprob: -13.214069366455078
    10. '   ' → logprob: -13.339069366455078

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015943869948387146
    2. ' ' → logprob: -8.75015926361084
    3. 'or' → logprob: -14.37515926361084
    4. ' or' → logprob: -15.50015926361084
    5. 'r' → logprob: -16.875160217285156
    6. '۰' → logprob: -16.875160217285156
    7. '=' → logprob: -17.375160217285156
    8. '1' → logprob: -18.312660217285156
    9. '```' → logprob: -18.625160217285156
    10. 'n' → logprob: -19.312660217285156

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.145118848304264e-05
    2. ' ' → logprob: -10.000051498413086
    3. 'or' → logprob: -12.500051498413086
    4. ' or' → logprob: -13.125051498413086
    5. '=' → logprob: -15.625051498413086
    6. '<|end|>' → logprob: -15.875051498413086
    7. '۰' → logprob: -17.125051498413086
    8. '```' → logprob: -18.500051498413086
    9. '1' → logprob: -18.625051498413086
    10. 'r' → logprob: -18.750051498413086

Token 168: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007151735480874777
    2. 'or' → logprob: -7.250715255737305
    3. ':' → logprob: -13.375715255737305
    4. '<|end|>' → logprob: -13.875715255737305
    5. '	or' → logprob: -14.000715255737305
    6. ' ' → logprob: -14.125715255737305
    7. '   ' → logprob: -14.250715255737305
    8. ' ' → logprob: -16.000715255737305
    9. ')' → logprob: -16.250715255737305
    10. '<|end|>' → logprob: -16.375715255737305

Token 169: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006115421187132597
    2. ' r' → logprob: -5.131115436553955
    3. 'n' → logprob: -8.631114959716797
    4. ' n' → logprob: -12.006114959716797
    5. '   ' → logprob: -13.381114959716797
    6. ' or' → logprob: -15.506114959716797
    7. '	r' → logprob: -15.756114959716797
    8. 'or' → logprob: -15.881114959716797
    9. ' ' → logprob: -16.256114959716797
    10. '  ' → logprob: -16.381114959716797

Token 170: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10069464147090912
    2. ' <' → logprob: -2.3506946563720703
    3. '<n' → logprob: -7.85069465637207
    4. '<m' → logprob: -10.60069465637207
    5. ' ' → logprob: -10.85069465637207
    6. '[' → logprob: -11.60069465637207
    7. '<int' → logprob: -12.10069465637207
    8. '<len' → logprob: -12.22569465637207
    9. '<p' → logprob: -12.47569465637207
    10. '<num' → logprob: -12.60069465637207

Token 171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4855663721391466e-05
    2. ' r' → logprob: -11.125015258789062
    3. '	r' → logprob: -18.000015258789062
    4. '<|end|>' → logprob: -19.875015258789062
    5. '   ' → logprob: -20.375015258789062
    6. ' ' → logprob: -21.000015258789062
    7. '_r' → logprob: -21.250015258789062
    8. '=r' → logprob: -21.375015258789062
    9. 'р' → logprob: -21.500015258789062
    10. '[r' → logprob: -21.625015258789062

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013038573786616325
    2. ':return' → logprob: -5.138038635253906
    3. ' or' → logprob: -5.388038635253906
    4. ':
' → logprob: -6.013038635253906
    5. '   ' → logprob: -10.138038635253906
    6. ' :' → logprob: -10.888038635253906
    7. 'or' → logprob: -13.263038635253906
    8. ')' → logprob: -13.513038635253906
    9. ' ' → logprob: -13.763038635253906
    10. ' return' → logprob: -14.013038635253906

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004307884373702109
    2. '
' → logprob: -8.500431060791016
    3. '   ' → logprob: -9.250431060791016
    4. ' return' → logprob: -9.625431060791016
    5. 'return' → logprob: -11.125431060791016
    6. ':return' → logprob: -11.625431060791016
    7. '```' → logprob: -12.000431060791016
    8. ':
' → logprob: -12.000431060791016
    9. ' 
' → logprob: -12.625431060791016
    10. '<|end|>' → logprob: -12.625431060791016

Token 174: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28548941016197205
    2. '       ' → logprob: -1.6604894399642944
    3. ' return' → logprob: -3.160489320755005
    4. '   ' → logprob: -4.160489559173584
    5. '
' → logprob: -8.785489082336426
    6. '	return' → logprob: -10.035489082336426
    7. '0' → logprob: -10.410489082336426
    8. ':return' → logprob: -10.660489082336426
    9. ' ' → logprob: -11.035489082336426
    10. '```' → logprob: -11.285489082336426

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048587486147880554
    2. ' ' → logprob: -3.0485875606536865
    3. 'None' → logprob: -16.423587799072266
    4. ' None' → logprob: -16.798587799072266
    5. ' 
' → logprob: -17.298587799072266
    6. ' ' → logprob: -17.798587799072266
    7. '```' → logprob: -18.548587799072266
    8. '۰' → logprob: -19.798587799072266
    9. '`' → logprob: -20.298587799072266
    10. '   ' → logprob: -20.673587799072266

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -19.75
    4. '"' → logprob: -20.125
    5. '   ' → logprob: -20.25
    6. '`' → logprob: -20.5
    7. '000' → logprob: -20.75
    8. '
' → logprob: -21.0
    9. '00' → logprob: -21.25
    10. '۰' → logprob: -21.625

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058854665607213974
    2. ')' → logprob: -3.808854579925537
    3. '    
' → logprob: -4.433854579925537
    4. '
' → logprob: -4.683854579925537
    5. ' 
' → logprob: -5.558854579925537
    6. '\n' → logprob: -5.808854579925537
    7. 'n' → logprob: -6.183854579925537
    8. '  
' → logprob: -6.808854579925537
    9. '<|end|>' → logprob: -7.433854579925537
    10. '   
' → logprob: -7.558854579925537

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003335585934109986
    2. ')' → logprob: -8.625333786010742
    3. '    
' → logprob: -9.375333786010742
    4. ' 
' → logprob: -10.875333786010742
    5. '  ' → logprob: -11.500333786010742
    6. '   
' → logprob: -11.875333786010742
    7. ' return' → logprob: -12.250333786010742
    8. 'return' → logprob: -12.500333786010742
    9. '```' → logprob: -12.625333786010742
    10. 'n' → logprob: -12.625333786010742

Token 179: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005420992616564035
    2. 'return' (adapté à ' return') → logprob: -5.880421161651611
    3. ' return' → logprob: -6.255421161651611
    4. ')' → logprob: -8.630420684814453
    5. '    ' → logprob: -8.880420684814453
    6. '  ' → logprob: -9.630420684814453
    7. '    
' → logprob: -9.755420684814453
    8. '       ' → logprob: -10.130420684814453
    9. ' ' → logprob: -10.255420684814453
    10. '```' → logprob: -10.380420684814453

Token 180: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.6593607068061829
    2. ' fac' → logprob: -0.7843607068061829
    3. '(f' → logprob: -4.159360885620117
    4. ' (' → logprob: -4.534360885620117
    5. '(' → logprob: -10.284360885620117
    6. '_fac' → logprob: -12.034360885620117
    7. 'fact' → logprob: -12.659360885620117
    8. '((' → logprob: -12.909360885620117
    9. '.fac' → logprob: -13.284360885620117
    10. 'Fac' → logprob: -13.534360885620117

Token 181: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. 'n' → logprob: -16.25
    4. '[r' → logprob: -16.5
    5. ' [' → logprob: -18.125
    6. '```' → logprob: -18.5
    7. '[
' → logprob: -18.75
    8. '   ' → logprob: -18.875
    9. '(n' → logprob: -19.375
    10. '\[' → logprob: -19.75

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.674858301877975e-05
    2. ']*' → logprob: -9.250096321105957
    3. ']
' → logprob: -14.750096321105957
    4. ' ]' → logprob: -16.500097274780273
    5. '"]' → logprob: -16.625097274780273
    6. '*' → logprob: -17.125097274780273
    7. '']' → logprob: -17.750097274780273
    8. '   ' → logprob: -17.750097274780273
    9. '```' → logprob: -18.500097274780273
    10. '],' → logprob: -18.500097274780273

Token 183: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08903467655181885
    2. ' *' → logprob: -2.4640345573425293
    3. '   ' → logprob: -10.339035034179688
    4. '**' → logprob: -11.339035034179688
    5. '"' → logprob: -11.839035034179688
    6. ' ' → logprob: -11.964035034179688
    7. '```' → logprob: -11.964035034179688
    8. '[' → logprob: -12.214035034179688
    9. '
' → logprob: -12.214035034179688
    10. '//' → logprob: -12.589035034179688

Token 184: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.6548374891281128
    2. 'inv' → logprob: -0.7798374891281128
    3. 'in' → logprob: -3.9048376083374023
    4. '(inv' → logprob: -6.404837608337402
    5. ' (' → logprob: -8.904837608337402
    6. '(' → logprob: -10.654837608337402
    7. '(in' → logprob: -10.654837608337402
    8. ' in' → logprob: -12.404837608337402
    9. '```' → logprob: -13.279837608337402
    10. '   ' → logprob: -13.654837608337402

Token 185: '[n' (ID: 15433)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.5776860184123507e-06
    2. 'r' → logprob: -13.75000286102295
    3. '[' → logprob: -13.87500286102295
    4. '[n' → logprob: -14.62500286102295
    5. '[m' → logprob: -18.750001907348633
    6. '(r' → logprob: -18.875001907348633
    7. '```' → logprob: -19.250001907348633
    8. ' [' → logprob: -20.000001907348633
    9. '[s' → logprob: -20.125001907348633
    10. '[
' → logprob: -20.250001907348633

Token 186: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.22466132044792175
    2. ']' → logprob: -1.7246613502502441
    3. '[r' → logprob: -4.224661350250244
    4. 'r' → logprob: -5.224661350250244
    5. ' -' → logprob: -6.599661350250244
    6. '-' → logprob: -7.099661350250244
    7. '[' → logprob: -7.474661350250244
    8. ']*' → logprob: -9.724660873413086
    9. '```' → logprob: -9.724660873413086
    10. ''r' → logprob: -10.724660873413086

Token 187: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007122868672013283
    2. ' r' → logprob: -5.007122993469238
    3. '<|end|>' → logprob: -8.507122993469238
    4. '<|end|>' → logprob: -8.882122993469238
    5. '	r' → logprob: -10.882122993469238
    6. '_r' → logprob: -11.507122993469238
    7. 'R' → logprob: -12.382122993469238
    8. '[r' → logprob: -12.507122993469238
    9. ']' → logprob: -12.882122993469238
    10. '-r' → logprob: -13.257122993469238

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.659005157416686e-05
    2. ']%' → logprob: -10.125066757202148
    3. ']*' → logprob: -10.625066757202148
    4. ' ]' → logprob: -14.000066757202148
    5. '']' → logprob: -14.375066757202148
    6. '%' → logprob: -14.500066757202148
    7. '*' → logprob: -16.37506675720215
    8. '"]' → logprob: -16.62506675720215
    9. '`]' → logprob: -16.87506675720215
    10. ']
' → logprob: -17.12506675720215

Token 189: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2981300354003906
    2. '*' → logprob: -1.4231300354003906
    3. '[' → logprob: -5.048130035400391
    4. '%' → logprob: -5.048130035400391
    5. '   ' → logprob: -6.673130035400391
    6. '`' → logprob: -7.548130035400391
    7. '```' → logprob: -7.798130035400391
    8. ' ' → logprob: -8.17313003540039
    9. ')' → logprob: -8.42313003540039
    10. ' %' → logprob: -8.67313003540039

Token 190: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.02980858087539673
    2. ' inv' → logprob: -3.529808521270752
    3. '(inv' → logprob: -9.77980899810791
    4. 'in' → logprob: -14.77980899810791
    5. '.inv' → logprob: -15.40480899810791
    6. '_inv' → logprob: -15.65480899810791
    7. 'fac' → logprob: -15.65480899810791
    8. '   ' → logprob: -16.029808044433594
    9. 'r' → logprob: -16.529808044433594
    10. ' ' → logprob: -16.529808044433594

Token 191: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. 'r' → logprob: -17.375
    4. '[m' → logprob: -17.75
    5. '[n' → logprob: -18.5
    6. '[
' → logprob: -20.5
    7. '```' → logprob: -20.625
    8. '(r' → logprob: -21.0
    9. ' [' → logprob: -21.25
    10. '	r' → logprob: -21.5

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005249768029898405
    2. ']%' → logprob: -5.255249977111816
    3. '%' → logprob: -11.380249977111816
    4. ' ]' → logprob: -12.380249977111816
    5. '']' → logprob: -16.0052490234375
    6. '%n' → logprob: -16.1302490234375
    7. '[' → logprob: -17.1302490234375
    8. '"]' → logprob: -17.5052490234375
    9. ']>' → logprob: -17.7552490234375
    10. ']
' → logprob: -17.8802490234375

Token 193: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16028077900409698
    2. ' %' → logprob: -1.9102808237075806
    3. '%n' → logprob: -10.03528118133545
    4. '[' → logprob: -12.03528118133545
    5. '	' → logprob: -13.28528118133545
    6. '   ' → logprob: -14.16028118133545
    7. ')%' → logprob: -14.53528118133545
    8. ')' → logprob: -14.53528118133545
    9. '%s' → logprob: -14.91028118133545
    10. '[n' → logprob: -14.91028118133545

Token 194: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.014164921827614307
    2. ' mod' → logprob: -4.264164924621582
    3. '(mod' → logprob: -13.514164924621582
    4. '	mod' → logprob: -18.389163970947266
    5. '```' → logprob: -19.264163970947266
    6. 'MOD' → logprob: -19.514163970947266
    7. ' ' → logprob: -20.264163970947266
    8. '`' → logprob: -20.764163970947266
    9. ' мод' → logprob: -22.014163970947266
    10. ' ' → logprob: -22.014163970947266

Token 195: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2807815968990326
    2. '<|end|>' → logprob: -2.1557815074920654
    3. '```' → logprob: -3.7807815074920654
    4. '(' → logprob: -3.9057815074920654
    5. '
' → logprob: -3.9057815074920654
    6. 'def' → logprob: -4.1557817459106445
    7. 'n' → logprob: -4.5307817459106445
    8. ',' → logprob: -4.7807817459106445
    9. '\' → logprob: -4.9057817459106445
    10. '#' → logprob: -5.1557817459106445

Token 196: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6357426643371582
    2. ')' → logprob: -1.5107426643371582
    3. '[' → logprob: -2.260742664337158
    4. ' ' → logprob: -3.260742664337158
    5. '<|end|>' → logprob: -3.760742664337158
    6. '_' → logprob: -3.885742664337158
    7. 'n' → logprob: -4.010742664337158
    8. '   ' → logprob: -4.510742664337158
    9. ',' → logprob: -5.010742664337158
    10. ':' → logprob: -5.010742664337158

Token 197: ' should' (ID: 1757)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004520907998085022
    2. ' solve' → logprob: -6.004520893096924
    3. 'main' → logprob: -6.254520893096924
    4. ' count' → logprob: -9.879521369934082
    5. 'solve' → logprob: -10.754521369934082
    6. ' process' → logprob: -11.254521369934082
    7. ' get' → logprob: -12.004521369934082
    8. ' calculate' → logprob: -12.004521369934082
    9. ' compute' → logprob: -12.129521369934082
    10. ' dfs' → logprob: -12.629521369934082

Token 198: '_break' (ID: 98301)
  Prédit: '_continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.4291291832923889
    2. '_choose' → logprob: -2.304129123687744
    3. '_accept' → logprob: -2.554129123687744
    4. '_use' → logprob: -2.804129123687744
    5. '_take' → logprob: -3.429129123687744
    6. '_apply' → logprob: -3.929129123687744
    7. '_complete' → logprob: -5.304129123687744
    8. '_buy' → logprob: -5.554129123687744
    9. '_compute' → logprob: -5.554129123687744
    10. '_' → logprob: -5.679129123687744

Token 199: '(one' (ID: 92717)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2729828953742981
    2. '():' → logprob: -2.0229828357696533
    3. '(n' → logprob: -2.5229828357696533
    4. '(line' → logprob: -5.022983074188232
    5. '(s' → logprob: -5.397983074188232
    6. '(i' → logprob: -5.647983074188232
    7. ':' → logprob: -6.022983074188232
    8. '(a' → logprob: -6.397983074188232
    9. '(:' → logprob: -6.647983074188232
    10. '(condition' → logprob: -7.397983074188232

Token 200: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.441740483045578
    2. ')' → logprob: -1.8167405128479004
    3. ' ==' → logprob: -3.1917405128479004
    4. '_' → logprob: -3.1917405128479004
    5. '==' → logprob: -3.4417405128479004
    6. '_char' → logprob: -4.4417405128479
    7. ',' → logprob: -4.8167405128479
    8. 's' → logprob: -5.1917405128479
    9. '_count' → logprob: -5.1917405128479
    10. ' ):' → logprob: -5.1917405128479

Token 201: ' two' (ID: 1920)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.6497833132743835
    2. 'two' → logprob: -1.0247833728790283
    3. ' zero' → logprob: -2.6497833728790283
    4. ' two' → logprob: -3.2747833728790283
    5. 'all' → logprob: -6.899783134460449
    6. 'three' → logprob: -6.899783134460449
    7. 'total' → logprob: -7.024783134460449
    8. 'other' → logprob: -7.149783134460449
    9. 'n' → logprob: -7.837283134460449
    10. 'many' → logprob: -7.899783134460449

Token 202: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02675827033817768
    2. ',' → logprob: -3.6517581939697266
    3. '):
' → logprob: -8.026758193969727
    4. ')' → logprob: -9.651758193969727
    5. '_' → logprob: -10.776758193969727
    6. ':' → logprob: -11.026758193969727
    7. ' ):' → logprob: -12.151758193969727
    8. '):
' → logprob: -12.901758193969727
    9. ']:' → logprob: -13.401758193969727
    10. '_,' → logprob: -13.401758193969727

Token 203: ' N' (ID: 478)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.7158969044685364
    2. ' three' → logprob: -0.9658969044685364
    3. 'one' → logprob: -4.465897083282471
    4. ' one' → logprob: -5.028397083282471
    5. 'idx' → logprob: -5.278397083282471
    6. ' MOD' → logprob: -5.403397083282471
    7. ' idx' → logprob: -5.465897083282471
    8. '   ' → logprob: -5.528397083282471
    9. ' n' → logprob: -5.590897083282471
    10. 'k' → logprob: -5.590897083282471

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00883910246193409
    2. ',' → logprob: -4.758839130401611
    3. ')' → logprob: -8.633838653564453
    4. '):
' → logprob: -10.508838653564453
    5. ' ):' → logprob: -11.758838653564453
    6. ':' → logprob: -12.508838653564453
    7. '_' → logprob: -13.008838653564453
    8. '=' → logprob: -13.633838653564453
    9. '   ' → logprob: -14.258838653564453
    10. ']:' → logprob: -15.008838653564453

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014430736191570759
    2. ':' → logprob: -4.389430522918701
    3. '(' → logprob: -7.764430522918701
    4. '    
' → logprob: -7.889430522918701
    5. '    ' → logprob: -8.01443099975586
    6. ':
' → logprob: -8.63943099975586
    7. ' 
' → logprob: -8.88943099975586
    8. ' return' → logprob: -9.13943099975586
    9. ' ' → logprob: -9.63943099975586
    10. '(
' → logprob: -10.13943099975586

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.50011146068573
    2. ' return' → logprob: -1.37511146068573
    3. '   ' → logprob: -2.2501115798950195
    4. ' one' → logprob: -4.2501115798950195
    5. ' if' → logprob: -5.1251115798950195
    6. 'if' → logprob: -5.2501115798950195
    7. 'one' → logprob: -5.7501115798950195
    8. ' for' → logprob: -5.7501115798950195
    9. 'for' → logprob: -5.8751115798950195
    10. ' ' → logprob: -8.75011157989502

Token 207: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.4463977813720703
    2. 'one' → logprob: -1.0713977813720703
    3. ' abs' → logprob: -4.57139778137207
    4. ' (' → logprob: -6.57139778137207
    5. 'abs' → logprob: -6.82139778137207
    6. '(one' → logprob: -6.82139778137207
    7. ' len' → logprob: -7.07139778137207
    8. ' two' → logprob: -7.19639778137207
    9. ' not' → logprob: -7.32139778137207
    10. 'len' → logprob: -7.69639778137207

Token 208: ' +' (ID: 659)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0742501020431519
    2. ' >=' → logprob: -1.1992501020431519
    3. ' >' → logprob: -2.0742502212524414
    4. '>' → logprob: -2.5742502212524414
    5. '==' → logprob: -2.5742502212524414
    6. ' <' → logprob: -3.9492502212524414
    7. '>=' → logprob: -4.199250221252441
    8. '[' → logprob: -4.949250221252441
    9. ' +' → logprob: -4.949250221252441
    10. '+' → logprob: -5.199250221252441

Token 209: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.01149456761777401
    2. ' two' → logprob: -4.5114946365356445
    3. '1' → logprob: -8.136494636535645
    4. 'one' → logprob: -9.511494636535645
    5. '2' → logprob: -10.636494636535645
    6. '   ' → logprob: -11.136494636535645
    7. '(two' → logprob: -11.261494636535645
    8. ' ' → logprob: -11.261494636535645
    9. ' one' → logprob: -12.386494636535645
    10. 'three' → logprob: -13.011494636535645

Token 210: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25074660778045654
    2. ' >' → logprob: -1.8757466077804565
    3. '>=' → logprob: -3.000746726989746
    4. ' >=' → logprob: -4.000746726989746
    5. '<=' → logprob: -9.000746726989746
    6. ' ' → logprob: -9.250746726989746
    7. '<' → logprob: -9.375746726989746
    8. ' <=' → logprob: -9.875746726989746
    9. ' <' → logprob: -10.500746726989746
    10. '>N' → logprob: -10.500746726989746

Token 211: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0014058287488296628
    2. ' N' → logprob: -6.751405715942383
    3. '   ' → logprob: -8.376405715942383
    4. '	N' → logprob: -12.626405715942383
    5. '2' → logprob: -14.501405715942383
    6. '9' → logprob: -14.876405715942383
    7. ' ' → logprob: -14.876405715942383
    8. '1' → logprob: -16.001405715942383
    9. '  ' → logprob: -16.126405715942383
    10. '7' → logprob: -16.126405715942383

Token 212: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4181627333164215
    2. '<|end|>' → logprob: -1.1681627035140991
    3. '#' → logprob: -4.418162822723389
    4. ')' → logprob: -5.043162822723389
    5. '
' → logprob: -5.418162822723389
    6. '```' → logprob: -6.293162822723389
    7. '[' → logprob: -6.543162822723389
    8. '<|end|>' → logprob: -6.793162822723389
    9. ':' → logprob: -7.418162822723389
    10. 'for' → logprob: -7.543162822723389

Token 214: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14855121076107025
    2. 'main' → logprob: -2.0235512256622314
    3. ' solve' → logprob: -5.773550987243652
    4. 'solve' → logprob: -6.023550987243652
    5. 'process' → logprob: -9.398550987243652
    6. ' process' → logprob: -9.523550987243652
    7. ' dfs' → logprob: -10.398550987243652
    8. 'dfs' → logprob: -11.273550987243652
    9. ' solution' → logprob: -11.273550987243652
    10. ' can' → logprob: -11.648550987243652

Token 215: '_dist' (ID: 37968)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.7732646465301514
    2. '_max' → logprob: -1.6482646465301514
    3. '_sum' → logprob: -3.6482646465301514
    4. '_answer' → logprob: -3.7732646465301514
    5. '()' → logprob: -3.8982646465301514
    6. '_indices' → logprob: -3.8982646465301514
    7. '_data' → logprob: -4.3982648849487305
    8. '_output' → logprob: -4.6482648849487305
    9. '_numbers' → logprob: -4.6482648849487305
    10. '_elements' → logprob: -4.7732648849487305

Token 216: '(one' (ID: 92717)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.008250252343714237
    2. 'ances' → logprob: -4.8832502365112305
    3. '(' → logprob: -7.8832502365112305
    4. 'rance' → logprob: -9.50825023651123
    5. '()' → logprob: -10.38325023651123
    6. 'r' → logprob: -11.00825023651123
    7. 'count' → logprob: -11.13325023651123
    8. '_from' → logprob: -11.13325023651123
    9. '_count' → logprob: -11.50825023651123
    10. 'anced' → logprob: -11.50825023651123

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00270073558203876
    2. ' ,' → logprob: -6.2527008056640625
    3. '):' → logprob: -7.3777008056640625
    4. '):
' → logprob: -10.377700805664062
    5. ',
' → logprob: -11.502700805664062
    6. ',n' → logprob: -11.502700805664062
    7. '   ' → logprob: -11.627700805664062
    8. 's' → logprob: -11.627700805664062
    9. '_,' → logprob: -12.002700805664062
    10. 'def' → logprob: -12.127700805664062

Token 218: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.5246647000312805
    2. ' two' → logprob: -0.8996647000312805
    3. 'N' → logprob: -7.399664878845215
    4. '   ' → logprob: -8.524664878845215
    5. ' N' → logprob: -8.524664878845215
    6. ' ' → logprob: -8.774664878845215
    7. ' other' → logprob: -10.024664878845215
    8. 'other' → logprob: -10.337164878845215
    9. 'zero' → logprob: -10.462164878845215
    10. 'three' → logprob: -10.587164878845215

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3882328271865845
    2. ',' → logprob: -1.1382328271865845
    3. '):
' → logprob: -6.638232707977295
    4. '   ' → logprob: -11.513233184814453
    5. ':' → logprob: -11.638233184814453
    6. ')' → logprob: -11.763233184814453
    7. ' ):' → logprob: -12.013233184814453
    8. '(' → logprob: -12.263233184814453
    9. '):
' → logprob: -13.263233184814453
    10. ',
' → logprob: -13.263233184814453

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008381948806345463
    2. ' return' → logprob: -4.8833818435668945
    3. 'return' → logprob: -7.8833818435668945
    4. ' abs' → logprob: -8.758381843566895
    5. ' one' → logprob: -9.633381843566895
    6. 'abs' → logprob: -9.758381843566895
    7. '(one' → logprob: -10.508381843566895
    8. ' (' → logprob: -10.633381843566895
    9. ' max' → logprob: -11.008381843566895
    10. '    
' → logprob: -11.383381843566895

Token 221: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6060156226158142
    2. 'return' (adapté à ' return') → logprob: -1.356015682220459
    3. '   ' → logprob: -2.356015682220459
    4. ' return' → logprob: -3.106015682220459
    5. ' abs' → logprob: -3.106015682220459
    6. 'max' → logprob: -5.856015682220459
    7. 'one' → logprob: -5.856015682220459
    8. '(abs' → logprob: -5.856015682220459
    9. ' max' → logprob: -6.731015682220459
    10. ' one' → logprob: -7.606015682220459

Token 222: ' one' (ID: 1001)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.026636283844709396
    2. '(abs' → logprob: -4.401636123657227
    3. 'one' → logprob: -4.901636123657227
    4. 'max' → logprob: -6.151636123657227
    5. '(one' → logprob: -6.526636123657227
    6. ' abs' → logprob: -6.901636123657227
    7. '(' → logprob: -7.276636123657227
    8. '(max' → logprob: -7.901636123657227
    9. '((' → logprob: -8.151636123657227
    10. 'min' → logprob: -8.651636123657227

Token 223: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38695329427719116
    2. '+' → logprob: -1.136953353881836
    3. ' ' → logprob: -10.886953353881836
    4. ' +
' → logprob: -11.386953353881836
    5. ',' → logprob: -11.511953353881836
    6. '+
' → logprob: -11.636953353881836
    7. ' -' → logprob: -11.761953353881836
    8. ' ,' → logprob: -12.261953353881836
    9. '-' → logprob: -12.511953353881836
    10. ' plus' → logprob: -12.761953353881836

Token 224: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.1295066922903061
    2. ' two' → logprob: -2.1295065879821777
    3. '2' → logprob: -6.379506587982178
    4. ' ' → logprob: -7.254506587982178
    5. '(two' → logprob: -9.754507064819336
    6. '   ' → logprob: -10.004507064819336
    7. '1' → logprob: -10.754507064819336
    8. '(' → logprob: -11.129507064819336
    9. 'one' → logprob: -12.129507064819336
    10. '  ' → logprob: -12.129507064819336

Token 225: ' *' (ID: 425)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08669660240411758
    2. '<|end|>' → logprob: -2.5866966247558594
    3. '
' → logprob: -5.211696624755859
    4. '#' → logprob: -7.836696624755859
    5. '```' → logprob: -7.961696624755859
    6. '\n' → logprob: -7.961696624755859
    7. '[' → logprob: -8.21169662475586
    8. '<|end|>' → logprob: -8.21169662475586
    9. ')' → logprob: -8.58669662475586
    10. '

' → logprob: -9.46169662475586

Token 226: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16745738685131073
    2. '3' → logprob: -2.292457342147827
    3. 'one' → logprob: -4.542457580566406
    4. ' ' → logprob: -4.667457580566406
    5. '4' → logprob: -5.167457580566406
    6. '6' → logprob: -5.667457580566406
    7. '1' → logprob: -6.042457580566406
    8. '5' → logprob: -6.167457580566406
    9. '0' → logprob: -6.167457580566406
    10. '10' → logprob: -6.292457580566406

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13174226880073547
    2. '3' → logprob: -2.631742238998413
    3. '4' → logprob: -4.631742477416992
    4. 'one' → logprob: -4.756742477416992
    5. '100' → logprob: -5.631742477416992
    6. '10' → logprob: -5.631742477416992
    7. '6' → logprob: -5.756742477416992
    8. '5' → logprob: -5.881742477416992
    9. '0' → logprob: -6.381742477416992
    10. '7' → logprob: -6.506742477416992

Token 228: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4724150598049164
    2. '<|end|>' → logprob: -1.3474150896072388
    3. ')' → logprob: -2.472414970397949
    4. '[' → logprob: -4.222414970397949
    5. 'n' → logprob: -5.722414970397949
    6. ',' → logprob: -5.972414970397949
    7. '<|end|>' → logprob: -6.222414970397949
    8. '#' → logprob: -6.597414970397949
    9. 'for' → logprob: -7.097414970397949
    10. '
' → logprob: -7.097414970397949

Token 229: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6296465992927551
    2. 'main' → logprob: -0.8796465992927551
    3. 'solve' → logprob: -4.0046467781066895
    4. ' solve' → logprob: -4.7546467781066895
    5. 'can' → logprob: -6.0046467781066895
    6. 'def' → logprob: -6.0046467781066895
    7. ' can' → logprob: -6.0046467781066895
    8. 'process' → logprob: -6.1296467781066895
    9. ' is' → logprob: -6.6296467781066895
    10. 'calculate' → logprob: -6.7546467781066895

Token 231: '_zero' (ID: 53468)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.3774975538253784
    2. 'dist' → logprob: -1.7524975538253784
    3. 'max' → logprob: -3.002497673034668
    4. '_total' → logprob: -3.127497673034668
    5. '_distance' → logprob: -3.377497673034668
    6. '_sum' → logprob: -3.877497673034668
    7. '_max' → logprob: -3.877497673034668
    8. 'total' → logprob: -3.877497673034668
    9. '_three' → logprob: -3.877497673034668
    10. '_answer' → logprob: -4.002497673034668

Token 232: '(N' (ID: 10564)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.6168808341026306
    2. '_count' → logprob: -1.3668808937072754
    3. '_distance' → logprob: -3.2418808937072754
    4. '_based' → logprob: -3.6168808937072754
    5. '_positions' → logprob: -3.8668808937072754
    6. '_pos' → logprob: -4.116880893707275
    7. 's' → logprob: -4.241880893707275
    8. '_index' → logprob: -4.616880893707275
    9. 'dist' → logprob: -4.991880893707275
    10. '_position' → logprob: -4.991880893707275

Token 233: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021337827667593956
    2. ',' → logprob: -4.021337985992432
    3. '):
' → logprob: -5.771337985992432
    4. ')' → logprob: -10.521337509155273
    5. ' ):' → logprob: -10.521337509155273
    6. '):
' → logprob: -13.271337509155273
    7. '   ' → logprob: -13.396337509155273
    8. ':' → logprob: -13.771337509155273
    9. 'def' → logprob: -13.771337509155273
    10. ' ,' → logprob: -13.771337509155273

Token 234: ' one' (ID: 1001)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.2099390029907227
    2. 'M' → logprob: -1.5849390029907227
    3. 'K' → logprob: -2.0849390029907227
    4. ' MOD' → logprob: -2.2099390029907227
    5. ' M' → logprob: -3.2099390029907227
    6. ' K' → logprob: -3.2099390029907227
    7. 'one' → logprob: -3.3349390029907227
    8. ' one' → logprob: -4.897439002990723
    9. 'mod' → logprob: -5.022439002990723
    10. 'arr' → logprob: -5.022439002990723

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.315936429426074e-05
    2. ' ,' → logprob: -10.250082969665527
    3. ',
' → logprob: -10.625082969665527
    4. '):' → logprob: -10.875082969665527
    5. '):
' → logprob: -13.625082969665527
    6. ',t' → logprob: -14.375082969665527
    7. 's' → logprob: -14.750082969665527
    8. '_,' → logprob: -14.875082969665527
    9. ',n' → logprob: -15.375082969665527
    10. ',s' → logprob: -15.750082969665527

Token 236: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.01402211282402277
    2. 'zero' → logprob: -4.764022350311279
    3. ' two' → logprob: -5.264022350311279
    4. ' zero' → logprob: -8.889021873474121
    5. 'tw' → logprob: -11.514021873474121
    6. '```' → logprob: -11.639021873474121
    7. '   ' → logprob: -11.639021873474121
    8. 'three' → logprob: -12.014021873474121
    9. 'N' → logprob: -12.264021873474121
    10. 'one' → logprob: -12.639021873474121

Token 237: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04937240853905678
    2. '):
' → logprob: -3.049372434616089
    3. ',' → logprob: -7.17437219619751
    4. '):
' → logprob: -11.924372673034668
    5. ')' → logprob: -12.049372673034668
    6. '   ' → logprob: -12.799372673034668
    7. ' ):' → logprob: -13.049372673034668
    8. '):

' → logprob: -14.424372673034668
    9. ':' → logprob: -15.424372673034668
    10. ''):' → logprob: -16.54937171936035

Token 238: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.2322068214416504
    2. 'zero' → logprob: -1.7322068214416504
    3. ' MOD' → logprob: -2.6072068214416504
    4. 'mod' → logprob: -2.9822068214416504
    5. 'three' → logprob: -2.9822068214416504
    6. 'K' → logprob: -3.4822068214416504
    7. '):' → logprob: -3.6072068214416504
    8. 'k' → logprob: -3.7322068214416504
    9. ')' → logprob: -3.7322068214416504
    10. 'dp' → logprob: -3.9822068214416504

Token 239: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03031754307448864
    2. ',' → logprob: -3.530317544937134
    3. '):
' → logprob: -7.655317306518555
    4. ')' → logprob: -9.655317306518555
    5. ' ):' → logprob: -10.655317306518555
    6. '   ' → logprob: -13.530317306518555
    7. ':' → logprob: -13.905317306518555
    8. '):
' → logprob: -14.030317306518555
    9. ' ,' → logprob: -14.280317306518555
    10. '):

' → logprob: -14.530317306518555

Token 240: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.43154358863830566
    2. 'factor' → logprob: -1.6815435886383057
    3. ' factorial' → logprob: -2.1815435886383057
    4. ' fac' → logprob: -3.5565435886383057
    5. 'fact' → logprob: -3.9315435886383057
    6. 'f' → logprob: -6.806543350219727
    7. ' fact' → logprob: -6.806543350219727
    8. ' factor' → logprob: -8.181543350219727
    9. ' ' → logprob: -8.806543350219727
    10. 'facts' → logprob: -8.806543350219727

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ' ,' → logprob: -11.125018119812012
    3. 's' → logprob: -13.500018119812012
    4. '):' → logprob: -14.125018119812012
    5. ',
' → logprob: -14.750018119812012
    6. '‌,' → logprob: -15.250018119812012
    7. ',

' → logprob: -16.000017166137695
    8. '_,' → logprob: -16.500017166137695
    9. ')' → logprob: -17.375017166137695
    10. '‍,' → logprob: -17.625017166137695

Token 242: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.006883622612804174
    2. ' inv' → logprob: -5.00688362121582
    3. 'in' → logprob: -8.75688362121582
    4. '   ' → logprob: -12.25688362121582
    5. ' ' → logprob: -12.75688362121582
    6. 'inf' → logprob: -14.25688362121582
    7. 'int' → logprob: -15.38188362121582
    8. '    ' → logprob: -15.44438362121582
    9. '  ' → logprob: -15.69438362121582
    10. '(inv' → logprob: -15.69438362121582

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00463078822940588
    2. '):
' → logprob: -5.3796305656433105
    3. ')' → logprob: -11.879631042480469
    4. ' ):' → logprob: -13.754631042480469
    5. ',' → logprob: -13.879631042480469
    6. '):
' → logprob: -14.129631042480469
    7. '   ' → logprob: -14.754631042480469
    8. ':' → logprob: -15.254631042480469
    9. '):

' → logprob: -15.504631042480469
    10. '=' → logprob: -17.12963104248047

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03069494664669037
    2. 'zero' → logprob: -4.530694961547852
    3. ' zero' → logprob: -4.655694961547852
    4. ' res' → logprob: -5.405694961547852
    5. ' result' → logprob: -6.655694961547852
    6. 'res' → logprob: -7.155694961547852
    7. ' zeros' → logprob: -7.405694961547852
    8. 'result' → logprob: -7.655694961547852
    9. ' if' → logprob: -7.655694961547852
    10. '    
' → logprob: -8.405694961547852

Token 245: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.19703209400177
    2. 'zero' → logprob: -1.32203209400177
    3. 'total' → logprob: -2.0720319747924805
    4. '   ' → logprob: -2.4470319747924805
    5. 'return' (adapté à ' return') → logprob: -2.6970319747924805
    6. 'if' → logprob: -3.0720319747924805
    7. 'ans' → logprob: -3.8220319747924805
    8. 'result' → logprob: -4.0720319747924805
    9. ' res' → logprob: -4.6970319747924805
    10. 'comb' → logprob: -5.4470319747924805

Token 246: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.572114109992981
    2. 'fac' → logprob: -1.072114109992981
    3. '(mod' → logprob: -2.4471139907836914
    4. '(' → logprob: -5.447113990783691
    5. '(f' → logprob: -7.822113990783691
    6. '((' → logprob: -8.197113990783691
    7. '(max' → logprob: -8.322113990783691
    8. '(get' → logprob: -8.447113990783691
    9. ' mod' → logprob: -8.447113990783691
    10. 'get' → logprob: -8.572113990783691

Token 247: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.572422981262207
    2. '(n' → logprob: -1.822422981262207
    3. '-' → logprob: -2.447422981262207
    4. 'N' → logprob: -3.072422981262207
    5. '-n' → logprob: -3.197422981262207
    6. ' -' → logprob: -3.697422981262207
    7. '%' → logprob: -3.822422981262207
    8. '(' → logprob: -4.447422981262207
    9. '_n' → logprob: -4.572422981262207
    10. '*' → logprob: -4.947422981262207

Token 248: 'Cr' (ID: 14225)
  Prédit: 'Cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -0.002477081725373864
    2. 'n' → logprob: -6.002477169036865
    3. 'C' → logprob: -14.252476692199707
    4. '(n' → logprob: -14.377476692199707
    5. ' Cr' → logprob: -15.752476692199707
    6. ' n' → logprob: -17.627477645874023
    7. 'Cn' → logprob: -17.627477645874023
    8. 'CR' → logprob: -18.002477645874023
    9. 'r' → logprob: -18.627477645874023
    10. '_C' → logprob: -19.377477645874023

Token 249: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003503611544147134
    2. '(n' → logprob: -6.253503799438477
    3. '(' → logprob: -6.503503799438477
    4. '(two' → logprob: -9.878503799438477
    5. '(one' → logprob: -11.628503799438477
    6. 'N' → logprob: -12.253503799438477
    7. '(len' → logprob: -12.503503799438477
    8. '[N' → logprob: -13.503503799438477
    9. '(
' → logprob: -13.628503799438477
    10. '((' → logprob: -14.128503799438477

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004939612466841936
    2. ' ,' → logprob: -6.504939556121826
    3. ',
' → logprob: -6.879939556121826
    4. ' one' → logprob: -7.129939556121826
    5. ' -' → logprob: -7.629939556121826
    6. 'one' → logprob: -7.879939556121826
    7. '-' → logprob: -8.504940032958984
    8. '   ' → logprob: -8.879940032958984
    9. '(one' → logprob: -9.129940032958984
    10. '
' → logprob: -9.379940032958984

Token 251: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.08910588175058365
    2. 'two' → logprob: -2.7141058444976807
    3. ' one' → logprob: -4.08910608291626
    4. ' two' → logprob: -6.46410608291626
    5. 'zero' → logprob: -7.71410608291626
    6. '   ' → logprob: -9.589105606079102
    7. 'N' → logprob: -9.839105606079102
    8. ' ' → logprob: -10.214105606079102
    9. ' zero' → logprob: -11.214105606079102
    10. '0' → logprob: -11.339105606079102

Token 252: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01836508885025978
    2. ')' → logprob: -4.143364906311035
    3. ' ,' → logprob: -6.393364906311035
    4. '   ' → logprob: -7.518364906311035
    5. '+' → logprob: -11.518364906311035
    6. '  ' → logprob: -11.643364906311035
    7. '```' → logprob: -11.643364906311035
    8. ',
' → logprob: -11.768364906311035
    9. ',n' → logprob: -12.018364906311035
    10. '<|end|>' → logprob: -12.018364906311035

Token 253: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0028141476213932037
    2. ' two' → logprob: -5.877814292907715
    3. '   ' → logprob: -12.377814292907715
    4. '2' → logprob: -13.002814292907715
    5. '(two' → logprob: -13.627814292907715
    6. 'tw' → logprob: -14.002814292907715
    7. ' ' → logprob: -15.002814292907715
    8. '  ' → logprob: -15.627814292907715
    9. '0' → logprob: -16.5028133392334
    10. '.two' → logprob: -16.6278133392334

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009116390720009804
    2. ')' → logprob: -4.759116172790527
    3. ' ,' → logprob: -8.009116172790527
    4. '   ' → logprob: -9.509116172790527
    5. '),' → logprob: -10.009116172790527
    6. ',)' → logprob: -11.384116172790527
    7. '```' → logprob: -11.759116172790527
    8. '[' → logprob: -12.009116172790527
    9. ',
' → logprob: -13.009116172790527
    10. ' ' → logprob: -13.259116172790527

Token 255: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011048408225178719
    2. ' mod' → logprob: -4.511048316955566
    3. 'MOD' → logprob: -15.136048316955566
    4. '	mod' → logprob: -15.761048316955566
    5. '   ' → logprob: -16.011049270629883
    6. 'fac' → logprob: -17.136049270629883
    7. ' ' → logprob: -17.511049270629883
    8. '(mod' → logprob: -17.511049270629883
    9. ' MOD' → logprob: -18.636049270629883
    10. ' fac' → logprob: -18.761049270629883

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006739289034157991
    2. ')' → logprob: -5.006739139556885
    3. '),' → logprob: -11.631739616394043
    4. ' ,' → logprob: -11.631739616394043
    5. ',)' → logprob: -12.506739616394043
    6. ',
' → logprob: -14.131739616394043
    7. ',f' → logprob: -14.631739616394043
    8. '   ' → logprob: -15.506739616394043
    9. '```' → logprob: -15.756739616394043
    10. '[' → logprob: -16.506738662719727

Token 257: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0004307884373702109
    2. ' fac' → logprob: -7.750430583953857
    3. 'fact' → logprob: -17.500431060791016
    4. '   ' → logprob: -18.000431060791016
    5. '
' → logprob: -18.500431060791016
    6. '_fac' → logprob: -18.750431060791016
    7. 'fab' → logprob: -19.000431060791016
    8. '.fac' → logprob: -19.250431060791016
    9. 'fas' → logprob: -19.375431060791016
    10. ' ' → logprob: -19.375431060791016

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. ' ,' → logprob: -9.750066757202148
    3. ',
' → logprob: -12.625066757202148
    4. ')' → logprob: -13.250066757202148
    5. 'inv' → logprob: -13.375066757202148
    6. '   ' → logprob: -14.625066757202148
    7. 's' → logprob: -15.125066757202148
    8. ',

' → logprob: -15.500066757202148
    9. '),' → logprob: -16.12506675720215
    10. ',in' → logprob: -16.37506675720215

Token 259: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0007102862582542002
    2. ' inv' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.875710487365723
    4. '   ' → logprob: -16.125709533691406
    5. '(inv' → logprob: -17.750709533691406
    6. '  ' → logprob: -18.125709533691406
    7. 'in' → logprob: -18.500709533691406
    8. '    ' → logprob: -19.000709533691406
    9. 'inf' → logprob: -19.250709533691406
    10. 'inj' → logprob: -19.500709533691406

Token 260: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4868770196917467e-05
    2. ')*' → logprob: -11.250024795532227
    3. '   ' → logprob: -12.000024795532227
    4. ' )' → logprob: -13.125024795532227
    5. ')
' → logprob: -13.250024795532227
    6. ',' → logprob: -14.250024795532227
    7. ' ' → logprob: -15.500024795532227
    8. '),' → logprob: -15.500024795532227
    9. ')`' → logprob: -16.000024795532227
    10. ')**' → logprob: -16.250024795532227

Token 261: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6431794762611389
    2. '[' → logprob: -1.7681794166564941
    3. '   ' → logprob: -1.8931794166564941
    4. '<|end|>' → logprob: -2.893179416656494
    5. ' ' → logprob: -3.893179416656494
    6. 'def' → logprob: -3.893179416656494
    7. '+' → logprob: -4.393179416656494
    8. '*' → logprob: -4.643179416656494
    9. ',' → logprob: -5.393179416656494
    10. ' two' → logprob: -5.518179416656494

Token 262: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19162197411060333
    2. 'main' → logprob: -1.941622018814087
    3. ' solve' → logprob: -4.316621780395508
    4. ' get' → logprob: -5.191621780395508
    5. 'solve' → logprob: -5.691621780395508
    6. ' compute' → logprob: -5.941621780395508
    7. 'get' → logprob: -6.566621780395508
    8. 'compute' → logprob: -6.941621780395508
    9. ' factorial' → logprob: -7.566621780395508
    10. 'def' → logprob: -7.941621780395508

Token 263: '_now' (ID: 49444)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.145660161972046
    2. 'zero' → logprob: -1.270660161972046
    3. '_one' → logprob: -1.895660161972046
    4. '_zero' → logprob: -2.020660161972046
    5. '_two' → logprob: -3.520660161972046
    6. 'two' → logprob: -4.270660400390625
    7. 'ans' → logprob: -4.645660400390625
    8. '_answer' → logprob: -5.020660400390625
    9. 'answer' → logprob: -5.395660400390625
    10. '_ans' → logprob: -5.395660400390625

Token 264: '_dist' (ID: 37968)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.2727530300617218
    2. '(' → logprob: -1.6477530002593994
    3. '(N' → logprob: -3.1477530002593994
    4. '_one' → logprob: -7.1477532386779785
    5. '():' → logprob: -7.2727532386779785
    6. '(two' → logprob: -7.8977532386779785
    7. '(n' → logprob: -8.02275276184082
    8. '(_' → logprob: -8.27275276184082
    9. '(s' → logprob: -9.02275276184082
    10. '_zero' → logprob: -9.14775276184082

Token 265: '_less' (ID: 154196)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.0048349881544709206
    2. '(' → logprob: -5.50483512878418
    3. '(N' → logprob: -7.75483512878418
    4. '(two' → logprob: -8.12983512878418
    5. ' (' → logprob: -11.12983512878418
    6. '(n' → logprob: -11.75483512878418
    7. '(now' → logprob: -13.00483512878418
    8. '():' → logprob: -13.75483512878418
    9. '(s' → logprob: -13.75483512878418
    10. '(
' → logprob: -13.75483512878418

Token 266: '_X' (ID: 16245)
  Prédit: '_than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.383859246969223
    2. '(N' → logprob: -1.3838592767715454
    3. '(one' → logprob: -3.508859157562256
    4. '(' → logprob: -4.258859157562256
    5. '_equal' → logprob: -4.758859157562256
    6. 'than' → logprob: -5.258859157562256
    7. 'def' → logprob: -5.633859157562256
    8. '_or' → logprob: -6.383859157562256
    9. 'Than' → logprob: -6.633859157562256
    10. 'eq' → logprob: -6.883859157562256

Token 267: '(one' (ID: 92717)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02596849761903286
    2. '(X' → logprob: -4.150968551635742
    3. '(one' → logprob: -5.275968551635742
    4. '(' → logprob: -5.400968551635742
    5. '(n' → logprob: -9.650968551635742
    6. '(x' → logprob: -9.900968551635742
    7. ' (' → logprob: -10.525968551635742
    8. 'def' → logprob: -11.025968551635742
    9. '():' → logprob: -11.150968551635742
    10. 'X' → logprob: -11.900968551635742

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012987985974177718
    2. ' ,' → logprob: -9.000129699707031
    3. ',
' → logprob: -12.375129699707031
    4. ')' → logprob: -14.125129699707031
    5. ',n' → logprob: -15.750129699707031
    6. ',t' → logprob: -15.875129699707031
    7. ',)' → logprob: -15.875129699707031
    8. ',

' → logprob: -16.25012969970703
    9. '):' → logprob: -16.37512969970703
    10. '_,' → logprob: -16.50012969970703

Token 269: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.38718950748443604
    2. ' two' → logprob: -1.137189507484436
    3. 'X' → logprob: -8.512189865112305
    4. ' X' → logprob: -10.887189865112305
    5. '   ' → logprob: -10.887189865112305
    6. 'N' → logprob: -11.137189865112305
    7. ' ' → logprob: -11.262189865112305
    8. 'def' → logprob: -11.262189865112305
    9. 'one' → logprob: -12.387189865112305
    10. 'x' → logprob: -12.387189865112305

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -12.750006675720215
    3. '):' → logprob: -13.125006675720215
    4. ',n' → logprob: -13.875006675720215
    5. ',N' → logprob: -14.250006675720215
    6. '   ' → logprob: -15.875006675720215
    7. ',
' → logprob: -16.37500762939453
    8. 'n' → logprob: -16.87500762939453
    9. 'def' → logprob: -16.87500762939453
    10. 'N' → logprob: -17.37500762939453

Token 271: ' zero' (ID: 12421)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.29892513155937195
    2. ' X' → logprob: -1.7989251613616943
    3. 'N' → logprob: -2.7989251613616943
    4. ' N' → logprob: -4.048924922943115
    5. 'mod' → logprob: -5.423924922943115
    6. 'x' → logprob: -5.548924922943115
    7. ' mod' → logprob: -5.923924922943115
    8. ' x' → logprob: -6.673924922943115
    9. 'dist' → logprob: -7.423924922943115
    10. ' dist' → logprob: -7.798924922943115

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.240481914370321e-05
    2. ' ,' → logprob: -10.625052452087402
    3. 's' → logprob: -11.875052452087402
    4. '):' → logprob: -12.375052452087402
    5. ',
' → logprob: -12.625052452087402
    6. ',N' → logprob: -12.625052452087402
    7. '_,' → logprob: -12.875052452087402
    8. '):
' → logprob: -13.250052452087402
    9. ',X' → logprob: -13.625052452087402
    10. 'X' → logprob: -13.625052452087402

Token 273: ' mod' (ID: 1812)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.24303629994392395
    2. ' X' → logprob: -2.3680362701416016
    3. 'N' → logprob: -2.8680362701416016
    4. 'mod' → logprob: -3.2430362701416016
    5. ' mod' → logprob: -4.743036270141602
    6. ' N' → logprob: -4.868036270141602
    7. 'x' → logprob: -5.493036270141602
    8. 'dist' → logprob: -6.493036270141602
    9. ' x' → logprob: -7.243036270141602
    10. 'max' → logprob: -7.493036270141602

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -12.00001335144043
    3. '):' → logprob: -12.12501335144043
    4. ',
' → logprob: -13.75001335144043
    5. 'def' → logprob: -16.87501335144043
    6. '):
' → logprob: -17.00001335144043
    7. '_,' → logprob: -17.12501335144043
    8. ',f' → logprob: -17.37501335144043
    9. '   ' → logprob: -17.50001335144043
    10. ',

' → logprob: -17.62501335144043

Token 275: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.12433335185050964
    2. ' fac' → logprob: -2.249333381652832
    3. 'X' → logprob: -4.999333381652832
    4. 'x' → logprob: -6.249333381652832
    5. ' X' → logprob: -6.499333381652832
    6. ' x' → logprob: -7.999333381652832
    7. 'N' → logprob: -8.624333381652832
    8. 'f' → logprob: -9.249333381652832
    9. 'dist' → logprob: -9.374333381652832
    10. ' N' → logprob: -9.374333381652832

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',
' → logprob: -14.500012397766113
    4. '_,' → logprob: -15.625012397766113
    5. ',

' → logprob: -16.75001335144043
    6. '):' → logprob: -17.00001335144043
    7. 's' → logprob: -17.12501335144043
    8. '‌,' → logprob: -17.25001335144043
    9. ',
' → logprob: -17.50001335144043
    10. '=' → logprob: -17.87501335144043

Token 277: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.04859123006463051
    2. ' inv' → logprob: -3.048591136932373
    3. '
' → logprob: -13.798591613769531
    4. ' ' → logprob: -13.923591613769531
    5. '   ' → logprob: -14.048591613769531
    6. '(inv' → logprob: -14.673591613769531
    7. '```' → logprob: -16.29859161376953
    8. 'inf' → logprob: -16.42359161376953
    9. '

' → logprob: -16.79859161376953
    10. '_inv' → logprob: -16.92359161376953

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009194592945277691
    2. ',' → logprob: -5.009194374084473
    3. '):
' → logprob: -6.009194374084473
    4. ')' → logprob: -11.259194374084473
    5. ' ):' → logprob: -12.509194374084473
    6. '   ' → logprob: -13.509194374084473
    7. ':' → logprob: -13.884194374084473
    8. '):
' → logprob: -14.634194374084473
    9. '):

' → logprob: -15.884194374084473
    10. ',n' → logprob: -16.25919532775879

Token 279: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.24078328907489777
    2. '   ' → logprob: -2.490783214569092
    3. 'total' → logprob: -2.990783214569092
    4. 'result' → logprob: -3.115783214569092
    5. 'ans' → logprob: -4.490783214569092
    6. ' res' → logprob: -4.615783214569092
    7. 'dist' → logprob: -5.490783214569092
    8. 'return' → logprob: -5.740783214569092
    9. 'sum' → logprob: -6.490783214569092
    10. 'if' → logprob: -6.865783214569092

Token 280: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.18444563448429108
    2. 'result' → logprob: -2.68444561958313
    3. 'total' → logprob: -2.80944561958313
    4. 'ans' → logprob: -4.309445858001709
    5. 'if' → logprob: -4.559445858001709
    6. 'return' (adapté à ' return') → logprob: -4.934445858001709
    7. 'now' → logprob: -6.559445858001709
    8. 'dist' → logprob: -6.559445858001709
    9. 'def' → logprob: -6.684445858001709
    10. 'ret' → logprob: -6.934445858001709

Token 281: ' mod' (ID: 1812)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8386396765708923
    2. '(' → logprob: -1.213639736175537
    3. 'mod' → logprob: -2.088639736175537
    4. ' (' → logprob: -2.588639736175537
    5. '(mod' → logprob: -3.088639736175537
    6. 'sum' → logprob: -4.713639736175537
    7. ' mod' → logprob: -4.963639736175537
    8. '(get' → logprob: -6.088639736175537
    9. ' ' → logprob: -6.213639736175537
    10. 'get' → logprob: -6.463639736175537

Token 282: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.6537622034084052e-05
    2. '*' → logprob: -11.00002670288086
    3. '*n' → logprob: -12.62502670288086
    4. 'f' → logprob: -12.87502670288086
    5. 'fac' → logprob: -13.37502670288086
    6. '(n' → logprob: -15.12502670288086
    7. '[' → logprob: -15.25002670288086
    8. '```' → logprob: -15.50002670288086
    9. '+' → logprob: -15.62502670288086
    10. 'mod' → logprob: -15.75002670288086

Token 283: 'Cr' (ID: 14225)
  Prédit: 'Cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.750000953674316
    3. ' Cr' → logprob: -15.750000953674316
    4. 'cr' → logprob: -19.125
    5. 'CR' → logprob: -19.375
    6. 'C' → logprob: -19.875
    7. '_C' → logprob: -20.5
    8. 'fac' → logprob: -20.75
    9. 'Cn' → logprob: -20.75
    10. 'Cd' → logprob: -20.875

Token 284: '(one' (ID: 92717)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.5941011905670166
    2. '(' → logprob: -0.9691011905670166
    3. '(len' → logprob: -3.4691011905670166
    4. 'zero' → logprob: -4.2191009521484375
    5. '(N' → logprob: -4.5941009521484375
    6. '(one' → logprob: -5.2191009521484375
    7. '(two' → logprob: -6.4691009521484375
    8. '(now' → logprob: -6.8441009521484375
    9. '(
' → logprob: -7.3441009521484375
    10. 'X' → logprob: -7.7191009521484375

Token 285: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38868024945259094
    2. ' +' → logprob: -1.1386802196502686
    3. ' plus' → logprob: -7.513680458068848
    4. ',' → logprob: -8.263680458068848
    5. 'plus' → logprob: -8.263680458068848
    6. '   ' → logprob: -8.513680458068848
    7. 'two' → logprob: -9.013680458068848
    8. '[' → logprob: -10.013680458068848
    9. ' two' → logprob: -10.013680458068848
    10. '(two' → logprob: -10.013680458068848

Token 286: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.3148508369922638
    2. 'zero' → logprob: -1.3148508071899414
    3. ' two' → logprob: -6.939850807189941
    4. ' zero' → logprob: -7.439850807189941
    5. 'one' → logprob: -11.689850807189941
    6. '(two' → logprob: -12.189850807189941
    7. '   ' → logprob: -12.189850807189941
    8. ' ' → logprob: -12.564850807189941
    9. '2' → logprob: -12.939850807189941
    10. '0' → logprob: -13.189850807189941

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46886834502220154
    2. ' +' → logprob: -1.593868374824524
    3. '+' → logprob: -1.843868374824524
    4. '   ' → logprob: -4.843868255615234
    5. ' ,' → logprob: -5.468868255615234
    6. ' ' → logprob: -8.218868255615234
    7. ' -' → logprob: -8.593868255615234
    8. '+,' → logprob: -9.593868255615234
    9. '-' → logprob: -9.718868255615234
    10. '  ' → logprob: -10.093868255615234

Token 288: ' one' (ID: 1001)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.05322176590561867
    2. ' zero' → logprob: -3.3032217025756836
    3. 'two' → logprob: -4.928221702575684
    4. 'one' → logprob: -5.053221702575684
    5. '0' → logprob: -7.428221702575684
    6. ' two' → logprob: -7.928221702575684
    7. '   ' → logprob: -8.303221702575684
    8. ' one' → logprob: -8.928221702575684
    9. '2' → logprob: -10.303221702575684
    10. ' ' → logprob: -10.553221702575684

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006079599261283875
    2. ' ,' → logprob: -7.500607967376709
    3. ')' → logprob: -10.37560749053955
    4. '   ' → logprob: -11.37560749053955
    5. '+' → logprob: -12.12560749053955
    6. ' +' → logprob: -12.87560749053955
    7. ' -' → logprob: -13.75060749053955
    8. '+,' → logprob: -14.00060749053955
    9. '-' → logprob: -14.12560749053955
    10. '  ' → logprob: -14.75060749053955

Token 290: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.313262403011322
    2. 'mod' → logprob: -1.3132624626159668
    3. '	mod' → logprob: -14.813261985778809
    4. '   ' → logprob: -16.188262939453125
    5. '    ' → logprob: -16.313262939453125
    6. ' ' → logprob: -16.938262939453125
    7. '(mod' → logprob: -17.688262939453125
    8. '       ' → logprob: -17.813262939453125
    9. '           ' → logprob: -18.188262939453125
    10. 'MOD' → logprob: -18.938262939453125

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ' ,' → logprob: -10.125051498413086
    3. ')' → logprob: -11.500051498413086
    4. ',
' → logprob: -14.000051498413086
    5. ',f' → logprob: -14.750051498413086
    6. '),' → logprob: -15.250051498413086
    7. 'fac' → logprob: -15.750051498413086
    8. '   ' → logprob: -17.375051498413086
    9. ',)' → logprob: -17.375051498413086
    10. '_fac' → logprob: -18.000051498413086

Token 292: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.3133247196674347
    2. ' fac' → logprob: -1.3133246898651123
    3. 'inv' → logprob: -10.188324928283691
    4. ' inv' → logprob: -10.688324928283691
    5. '
' → logprob: -14.188324928283691
    6. ' ' → logprob: -14.563324928283691
    7. '   ' → logprob: -14.938324928283691
    8. '.fac' → logprob: -15.438324928283691
    9. 'fact' → logprob: -16.063323974609375
    10. 'fa' → logprob: -16.313323974609375

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ' ,' → logprob: -10.750035285949707
    3. ')' → logprob: -11.875035285949707
    4. ',
' → logprob: -12.500035285949707
    5. 'inv' → logprob: -13.750035285949707
    6. ',in' → logprob: -14.250035285949707
    7. '(inv' → logprob: -15.375035285949707
    8. '),' → logprob: -15.500035285949707
    9. '[' → logprob: -16.37503433227539
    10. ',user' → logprob: -16.50003433227539

Token 294: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.02975083328783512
    2. ' inv' → logprob: -3.5297508239746094
    3. '(inv' → logprob: -15.65475082397461
    4. ' ' → logprob: -16.02975082397461
    5. '
' → logprob: -17.02975082397461
    6. '   ' → logprob: -17.90475082397461
    7. '.inv' → logprob: -18.65475082397461
    8. '1' → logprob: -19.27975082397461
    9. '[' → logprob: -19.27975082397461
    10. '0' → logprob: -19.90475082397461

Token 295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ' )' → logprob: -12.375014305114746
    3. ')*' → logprob: -12.625014305114746
    4. ')
' → logprob: -12.750014305114746
    5. '   ' → logprob: -12.875014305114746
    6. ')return' → logprob: -14.875014305114746
    7. '<|end|>' → logprob: -15.750014305114746
    8. '[' → logprob: -16.25001335144043
    9. ')#' → logprob: -16.62501335144043
    10. 'def' → logprob: -16.62501335144043

Token 296: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: ' zero' (ID: 12421)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0817132294178009
    2. 'mod' → logprob: -3.3317131996154785
    3. 'zero' → logprob: -3.5817131996154785
    4. '(' → logprob: -5.2067131996154785
    5. '2' → logprob: -5.3317131996154785
    6. 'fac' → logprob: -6.8317131996154785
    7. '0' → logprob: -7.0817131996154785
    8. 'get' → logprob: -7.7067131996154785
    9. ' pow' → logprob: -7.7067131996154785
    10. 'inv' → logprob: -7.8317131996154785

Token 298: '

' (ID: 279)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07988619059324265
    2. '%' → logprob: -2.5798861980438232
    3. '[' → logprob: -6.954885959625244
    4. ')' → logprob: -11.829886436462402
    5. '[
' → logprob: -11.829886436462402
    6. ' %=' → logprob: -12.204886436462402
    7. '   ' → logprob: -12.579886436462402
    8. '[]' → logprob: -13.204886436462402
    9. ' %
' → logprob: -13.454886436462402
    10. '%s' → logprob: -13.454886436462402

Token 299: 'def' (ID: 1314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.24026769399642944
    2. ' %' → logprob: -1.6152677536010742
    3. '<|end|>' → logprob: -4.365267753601074
    4. '[' → logprob: -6.740267753601074
    5. ')' → logprob: -8.115267753601074
    6. ' ' → logprob: -8.365267753601074
    7. '*' → logprob: -9.240267753601074
    8. '**' → logprob: -10.740267753601074
    9. '```' → logprob: -10.740267753601074
    10. '[token' → logprob: -10.865267753601074

Token 300: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.12718595564365387
    2. ' main' → logprob: -3.2521860599517822
    3. 'get' → logprob: -3.3771860599517822
    4. ' compute' → logprob: -4.377185821533203
    5. ' def' → logprob: -4.877185821533203
    6. ' __' → logprob: -4.877185821533203
    7. 'def' → logprob: -5.252185821533203
    8. '__' → logprob: -5.252185821533203
    9. ' ' → logprob: -5.502185821533203
    10. ' solve' → logprob: -6.877185821533203

Token 301: '_d' (ID: 1565)
  Prédit: '_now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.10861801356077194
    2. '_zero' → logprob: -2.8586180210113525
    3. '_two' → logprob: -4.233617782592773
    4. '_input' → logprob: -4.858617782592773
    5. '_dist' → logprob: -4.983617782592773
    6. '_one' → logprob: -5.108617782592773
    7. '_factor' → logprob: -6.108617782592773
    8. 'now' → logprob: -6.358617782592773
    9. '_sum' → logprob: -7.108617782592773
    10. ' now' → logprob: -7.358617782592773

Token 302: 'two' (ID: 38397)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.009925962425768375
    2. 'iff' → logprob: -6.009925842285156
    3. 'istance' → logprob: -6.259925842285156
    4. 'is' → logprob: -6.259925842285156
    5. 'ef' → logprob: -6.884925842285156
    6. 'one' → logprob: -7.759925842285156
    7. 'ouble' → logprob: -8.259925842285156
    8. 'ists' → logprob: -8.259925842285156
    9. 'p' → logprob: -8.759925842285156
    10. '_now' → logprob: -8.759925842285156

Token 303: '(two' (ID: 186841)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7940480709075928
    2. '_less' → logprob: -1.9190480709075928
    3. '(_' → logprob: -2.2940480709075928
    4. '_two' → logprob: -2.4190480709075928
    5. '(two' → logprob: -2.4190480709075928
    6. '(one' → logprob: -3.5440480709075928
    7. '_count' → logprob: -4.044048309326172
    8. '_' → logprob: -4.044048309326172
    9. '_dist' → logprob: -4.794048309326172
    10. '_times' → logprob: -4.794048309326172

Token 304: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5943945050239563
    2. ',' → logprob: -0.9693945050239563
    3. '):
' → logprob: -3.4693944454193115
    4. '+' → logprob: -3.4693944454193115
    5. ' +' → logprob: -5.844394683837891
    6. '   ' → logprob: -6.719394683837891
    7. '-' → logprob: -6.719394683837891
    8. ' -' → logprob: -7.969394683837891
    9. ' ,' → logprob: -8.84439468383789
    10. ')' → logprob: -8.96939468383789

Token 305: ' dist' (ID: 3601)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7509769201278687
    2. ' two' → logprob: -1.6259769201278687
    3. ' N' → logprob: -2.375977039337158
    4. 'mod' → logprob: -2.625977039337158
    5. ' n' → logprob: -2.750977039337158
    6. 'two' → logprob: -3.250977039337158
    7. ' one' → logprob: -4.250977039337158
    8. 'n' → logprob: -4.375977039337158
    9. 'N' → logprob: -4.500977039337158
    10. '   ' → logprob: -5.250977039337158

Token 306: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14048276841640472
    2. ',' → logprob: -2.1404826641082764
    3. '):
' → logprob: -4.6404829025268555
    4. '+' → logprob: -6.7654829025268555
    5. '=' → logprob: -7.1404829025268555
    6. ')' → logprob: -7.6404829025268555
    7. '   ' → logprob: -8.140482902526855
    8. ' +' → logprob: -8.765482902526855
    9. '==' → logprob: -8.890482902526855
    10. 's' → logprob: -9.515482902526855

Token 307: ' X' (ID: 2127)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.3337353467941284
    2. 'mod' → logprob: -1.7087353467941284
    3. ' two' → logprob: -1.9587353467941284
    4. ' dist' → logprob: -2.333735466003418
    5. ' N' → logprob: -2.458735466003418
    6. 'two' → logprob: -2.833735466003418
    7. ' zero' → logprob: -3.333735466003418
    8. ' one' → logprob: -3.458735466003418
    9. 'dist' → logprob: -3.958735466003418
    10. 'N' → logprob: -3.958735466003418

Token 308: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5763543248176575
    2. '):' → logprob: -0.8263543248176575
    3. '):
' → logprob: -8.326354026794434
    4. ')' → logprob: -9.451354026794434
    5. ' ):' → logprob: -10.326354026794434
    6. ':' → logprob: -10.951354026794434
    7. ' ,' → logprob: -11.451354026794434
    8. '=' → logprob: -11.576354026794434
    9. '   ' → logprob: -12.076354026794434
    10. 'def' → logprob: -12.451354026794434

Token 309: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5792940258979797
    2. '   ' → logprob: -0.8292940258979797
    3. '():' → logprob: -6.829294204711914
    4. '(' → logprob: -7.829294204711914
    5. 'def' → logprob: -7.829294204711914
    6. '):' → logprob: -8.079294204711914
    7. ':
' → logprob: -8.579294204711914
    8. ':def' → logprob: -8.704294204711914
    9. ',' → logprob: -9.079294204711914
    10. ' if' → logprob: -9.204294204711914

Token 310: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9684351682662964
    2. '   ' → logprob: -1.0934351682662964
    3. 'return' (adapté à ' return') → logprob: -1.9684351682662964
    4. ' if' → logprob: -2.093435287475586
    5. ' return' → logprob: -3.843435287475586
    6. 'for' → logprob: -7.593435287475586
    7. ' for' → logprob: -8.843435287475586
    8. 'def' → logprob: -8.968435287475586
    9. 'max' → logprob: -10.593435287475586
    10. ' two' → logprob: -10.968435287475586

Token 311: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -1.2589308023452759
    2. '(two' → logprob: -1.6339308023452759
    3. '0' → logprob: -2.1339306831359863
    4. ' two' → logprob: -2.1339306831359863
    5. ' (' → logprob: -2.2589306831359863
    6. '(' → logprob: -3.6339306831359863
    7. 'dist' → logprob: -3.6339306831359863
    8. ' dist' → logprob: -3.7589306831359863
    9. 'max' → logprob: -3.7589306831359863
    10. '(dist' → logprob: -3.7589306831359863

Token 312: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006745331920683384
    2. ' ' → logprob: -5.006745338439941
    3. 'dist' → logprob: -10.631745338439941
    4. ' dist' → logprob: -12.631745338439941
    5. '2' → logprob: -13.631745338439941
    6. '(' → logprob: -14.631745338439941
    7. ' (' → logprob: -14.756745338439941
    8. '(dist' → logprob: -15.381745338439941
    9. '   ' → logprob: -16.006744384765625
    10. 'int' → logprob: -16.131744384765625

Token 314: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04145299270749092
    2. 'X' → logprob: -4.291452884674072
    3. ' dist' → logprob: -4.291452884674072
    4. '(dist' → logprob: -4.791452884674072
    5. ' (' → logprob: -5.916452884674072
    6. '1' → logprob: -6.916452884674072
    7. '(X' → logprob: -7.541452884674072
    8. '(' → logprob: -8.16645336151123
    9. ' X' → logprob: -8.29145336151123
    10. '2' → logprob: -9.29145336151123

Token 315: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5342788696289062
    2. ' +' → logprob: -2.1592788696289062
    3. ')' → logprob: -2.6592788696289062
    4. ' >' → logprob: -2.7842788696289062
    5. '-' → logprob: -3.1592788696289062
    6. '+' → logprob: -3.2842788696289062
    7. '>' → logprob: -3.6592788696289062
    8. ' >=' → logprob: -3.7842788696289062
    9. ' *' → logprob: -5.034278869628906
    10. ' ==' → logprob: -5.159278869628906

Token 316: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06197093799710274
    2. ' X' → logprob: -2.8119709491729736
    3. '1' → logprob: -13.811970710754395
    4. ' ' → logprob: -13.936970710754395
    5. '2' → logprob: -14.561970710754395
    6. '	X' → logprob: -14.936970710754395
    7. '>X' → logprob: -15.186970710754395
    8. ')' → logprob: -15.936970710754395
    9. '   ' → logprob: -16.68697166442871
    10. '<|end|>' → logprob: -16.81197166442871

Token 317: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004701146390289068
    2. ')//' → logprob: -8.375470161437988
    3. ' )' → logprob: -8.500470161437988
    4. '+' → logprob: -11.625470161437988
    5. ' +' → logprob: -11.750470161437988
    6. ')>>' → logprob: -12.000470161437988
    7. '))' → logprob: -13.125470161437988
    8. '[' → logprob: -13.250470161437988
    9. ')#' → logprob: -13.750470161437988
    10. ')))' → logprob: -13.750470161437988

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014038024237379432
    2. ' ' → logprob: -7.00140380859375
    3. '2' → logprob: -7.62640380859375
    4. ')' → logprob: -12.62640380859375
    5. '(' → logprob: -14.75140380859375
    6. '0' → logprob: -15.00140380859375
    7. ' )' → logprob: -15.37640380859375
    8. ' (' → logprob: -16.00140380859375
    9. '```' → logprob: -16.12640380859375
    10. '   ' → logprob: -16.87640380859375

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003183041699230671
    2. '2' → logprob: -8.12531852722168
    3. ' ' → logprob: -10.75031852722168
    4. '0' → logprob: -14.75031852722168
    5. '(' → logprob: -16.00031852722168
    6. '   ' → logprob: -16.50031852722168
    7. '```' → logprob: -16.56281852722168
    8. '3' → logprob: -16.62531852722168
    9. '  ' → logprob: -17.18781852722168
    10. ')' → logprob: -17.25031852722168

Token 320: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004878723411820829
    2. ')//' → logprob: -7.875487804412842
    3. ' )' → logprob: -9.50048828125
    4. ')>>' → logprob: -11.00048828125
    5. '   ' → logprob: -12.25048828125
    6. '//' → logprob: -13.00048828125
    7. ')))' → logprob: -13.62548828125
    8. ')
' → logprob: -13.87548828125
    9. '))' → logprob: -14.00048828125
    10. ')#' → logprob: -14.00048828125

Token 321: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.08842151612043381
    2. 'get' → logprob: -2.713421583175659
    3. 'def' → logprob: -5.08842134475708
    4. ' def' → logprob: -5.21342134475708
    5. ' compute' → logprob: -5.71342134475708
    6. ' main' → logprob: -6.71342134475708
    7. ' two' → logprob: -7.21342134475708
    8. 'compute' → logprob: -8.713421821594238
    9. 'two' → logprob: -8.838421821594238
    10. ' continue' → logprob: -9.088421821594238

Token 323: '_now' (ID: 49444)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -1.4633718729019165
    2. '_two' → logprob: -1.4633718729019165
    3. '_now' → logprob: -1.7133718729019165
    4. '_zero' → logprob: -1.9633718729019165
    5. '_dist' → logprob: -2.213371753692627
    6. '_d' → logprob: -3.963371753692627
    7. '_factor' → logprob: -4.463371753692627
    8. 'one' → logprob: -4.463371753692627
    9. 'two' → logprob: -4.588371753692627
    10. '_input' → logprob: -4.838371753692627

Token 324: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.35901400446891785
    2. '_two' → logprob: -1.7340140342712402
    3. 'two' → logprob: -3.4840140342712402
    4. 'dist' → logprob: -3.6090140342712402
    5. '_' → logprob: -4.10901403427124
    6. 'Dist' → logprob: -4.35901403427124
    7. '(two' → logprob: -4.73401403427124
    8. '(' → logprob: -5.10901403427124
    9. '_d' → logprob: -5.23401403427124
    10. '_token' → logprob: -5.60901403427124

Token 325: '_between' (ID: 124874)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.0017357517499476671
    2. '(' → logprob: -6.626735687255859
    3. 'less' → logprob: -8.37673568725586
    4. '_' → logprob: -9.87673568725586
    5. '(two' → logprob: -10.12673568725586
    6. '_two' → logprob: -10.50173568725586
    7. '(one' → logprob: -10.75173568725586
    8. '(_' → logprob: -12.00173568725586
    9. '_one' → logprob: -12.25173568725586
    10. '```' → logprob: -12.50173568725586

Token 326: '_X' (ID: 16245)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37934646010398865
    2. '(X' → logprob: -1.379346489906311
    3. '(one' → logprob: -3.8793463706970215
    4. '_' → logprob: -4.1293463706970215
    5. '_X' → logprob: -4.2543463706970215
    6. '(_' → logprob: -5.6293463706970215
    7. '(two' → logprob: -6.0043463706970215
    8. '(_,' → logprob: -6.5043463706970215
    9. '(
' → logprob: -7.3793463706970215
    10. '_(' → logprob: -7.5043463706970215

Token 327: '_and' (ID: 18645)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.02574731595814228
    2. '(' → logprob: -4.025747299194336
    3. '(two' → logprob: -5.525747299194336
    4. '_' → logprob: -6.275747299194336
    5. '_and' → logprob: -7.525747299194336
    6. '_X' → logprob: -8.400747299194336
    7. '_one' → logprob: -8.900747299194336
    8. '(X' → logprob: -9.025747299194336
    9. '_less' → logprob: -9.275747299194336
    10. 'and' → logprob: -9.400747299194336

Token 328: '_' (ID: 62)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8785848021507263
    2. '_X' → logprob: -1.253584861755371
    3. '(two' → logprob: -2.003584861755371
    4. 'two' → logprob: -2.253584861755371
    5. '_two' → logprob: -3.628584861755371
    6. 'Y' → logprob: -5.003584861755371
    7. '(one' → logprob: -5.503584861755371
    8. '_Y' → logprob: -6.003584861755371
    9. 'dist' → logprob: -6.003584861755371
    10. '(dist' → logprob: -6.128584861755371

Token 329: '2' (ID: 17)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.011151574552059174
    2. 'two' → logprob: -5.0111517906188965
    3. 'dist' → logprob: -5.8861517906188965
    4. '2' → logprob: -7.7611517906188965
    5. 'Y' → logprob: -8.136151313781738
    6. '_X' → logprob: -8.636151313781738
    7. 'one' → logprob: -8.761151313781738
    8. '_two' → logprob: -9.011151313781738
    9. '(two' → logprob: -9.386151313781738
    10. '(' → logprob: -9.636151313781738

Token 330: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.19096459448337555
    2. '(one' → logprob: -2.315964698791504
    3. '(two' → logprob: -2.690964698791504
    4. '_X' → logprob: -5.565964698791504
    5. '(' → logprob: -6.315964698791504
    6. 'zero' → logprob: -7.565964698791504
    7. 'two' → logprob: -8.315964698791504
    8. 'five' → logprob: -8.565964698791504
    9. '(X' → logprob: -8.690964698791504
    10. '0' → logprob: -8.815964698791504

Token 331: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.0024408125318586826
    2. '(two' → logprob: -6.252440929412842
    3. '(' → logprob: -7.627440929412842
    4. '(X' → logprob: -11.502440452575684
    5. '(now' → logprob: -12.502440452575684
    6. '(x' → logprob: -12.877440452575684
    7. '(def' → logprob: -13.252440452575684
    8. ' (' → logprob: -13.627440452575684
    9. '(
' → logprob: -14.002440452575684
    10. 'def' → logprob: -14.377440452575684

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012976066500414163
    2. ',t' → logprob: -9.625129699707031
    3. ' ,' → logprob: -9.750129699707031
    4. ',
' → logprob: -13.125129699707031
    5. 'two' → logprob: -13.875129699707031
    6. 'and' → logprob: -14.125129699707031
    7. ')' → logprob: -15.125129699707031
    8. '):' → logprob: -15.250129699707031
    9. '_,' → logprob: -15.500129699707031
    10. '_two' → logprob: -16.00012969970703

Token 333: ' dt' (ID: 14008)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.5759999752044678
    2. 'two' → logprob: -0.8259999752044678
    3. ' zero' → logprob: -11.326000213623047
    4. 'X' → logprob: -11.576000213623047
    5. 'zero' → logprob: -11.576000213623047
    6. ' ' → logprob: -11.701000213623047
    7. '   ' → logprob: -12.576000213623047
    8. ' X' → logprob: -12.701000213623047
    9. 'def' → logprob: -12.826000213623047
    10. '(two' → logprob: -12.826000213623047

Token 334: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -6.945094355614856e-05
    2. 'w' → logprob: -9.750069618225098
    3. 'two' → logprob: -12.375069618225098
    4. ' wo' → logprob: -13.375069618225098
    5. 'o' → logprob: -13.500069618225098
    6. '```' → logprob: -14.000069618225098
    7. 'wor' → logprob: -14.500069618225098
    8. 'woo' → logprob: -14.625069618225098
    9. 'we' → logprob: -15.000069618225098
    10. 'wow' → logprob: -15.375069618225098

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043972869752906263
    2. 'two' → logprob: -8.625439643859863
    3. '):' → logprob: -9.000439643859863
    4. '):
' → logprob: -9.875439643859863
    5. '(two' → logprob: -10.000439643859863
    6. ',
' → logprob: -11.250439643859863
    7. ')' → logprob: -11.500439643859863
    8. '_two' → logprob: -12.250439643859863
    9. ' ,' → logprob: -12.375439643859863
    10. ' two' → logprob: -12.500439643859863

Token 336: ' zero' (ID: 12421)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.9636520743370056
    2. ' two' → logprob: -1.3386521339416504
    3. 'two' → logprob: -1.3386521339416504
    4. ' X' → logprob: -2.8386521339416504
    5. ' zero' → logprob: -4.08865213394165
    6. 'zero' → logprob: -4.71365213394165
    7. 'mod' → logprob: -5.71365213394165
    8. ' dist' → logprob: -6.33865213394165
    9. ' mod' → logprob: -6.58865213394165
    10. 'dist' → logprob: -7.08865213394165

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.37500286102295
    3. '   ' → logprob: -15.25000286102295
    4. ',
' → logprob: -15.25000286102295
    5. '):' → logprob: -15.75000286102295
    6. '):
' → logprob: -16.000001907348633
    7. 'two' → logprob: -18.250001907348633
    8. 'one' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. 'def' → logprob: -18.375001907348633

Token 338: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5768086314201355
    2. 'mod' → logprob: -0.8268086314201355
    3. 'X' → logprob: -8.20180892944336
    4. ' two' → logprob: -8.45180892944336
    5. ' X' → logprob: -8.70180892944336
    6. 'two' → logprob: -9.57680892944336
    7. ' one' → logprob: -10.07680892944336
    8. 'one' → logprob: -11.32680892944336
    9. ' zero' → logprob: -11.32680892944336
    10. ' ' → logprob: -11.57680892944336

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -14.875005722045898
    4. '_,' → logprob: -17.0000057220459
    5. ',f' → logprob: -17.1250057220459
    6. 'fac' → logprob: -18.8750057220459
    7. '):
' → logprob: -18.8750057220459
    8. '   ' → logprob: -18.8750057220459
    9. ',

' → logprob: -19.1250057220459
    10. ',\
' → logprob: -19.1250057220459

Token 340: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.07889022678136826
    2. ' fac' → logprob: -2.578890323638916
    3. 'inv' → logprob: -16.203889846801758
    4. '.fac' → logprob: -16.453889846801758
    5. '_fac' → logprob: -16.828889846801758
    6. 'fab' → logprob: -16.953889846801758
    7. ' ' → logprob: -16.953889846801758
    8. 'Fac' → logprob: -17.203889846801758
    9. ' inv' → logprob: -17.453889846801758
    10. 'fact' → logprob: -17.703889846801758

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -13.12500286102295
    3. 'inv' → logprob: -15.00000286102295
    4. ',
' → logprob: -15.25000286102295
    5. ' inv' → logprob: -16.500001907348633
    6. '(inv' → logprob: -16.625001907348633
    7. ',in' → logprob: -17.500001907348633
    8. '):
' → logprob: -17.875001907348633
    9. ')' → logprob: -17.875001907348633
    10. ',int' → logprob: -18.250001907348633

Token 342: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.005234356038272381
    2. ' inv' → logprob: -5.255234241485596
    3. '(inv' → logprob: -14.880234718322754
    4. ' ' → logprob: -16.380233764648438
    5. '   ' → logprob: -16.505233764648438
    6. '.inv' → logprob: -17.255233764648438
    7. 'in' → logprob: -17.380233764648438
    8. '_inv' → logprob: -17.630233764648438
    9. 'inj' → logprob: -17.880233764648438
    10. '```' → logprob: -18.130233764648438

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0792541578412056
    2. '):
' → logprob: -2.579254150390625
    3. ',' → logprob: -7.954254150390625
    4. '):
' → logprob: -12.329254150390625
    5. '):

' → logprob: -12.579254150390625
    6. ')' → logprob: -12.579254150390625
    7. '   ' → logprob: -14.079254150390625
    8. ' ):' → logprob: -14.329254150390625
    9. ':' → logprob: -14.829254150390625
    10. ' ):
' → logprob: -17.704254150390625

Token 344: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03111582249403
    2. '   ' → logprob: -4.031116008758545
    3. 'def' → logprob: -4.406116008758545
    4. ' return' → logprob: -7.531116008758545
    5. '=' → logprob: -9.531115531921387
    6. 'mod' → logprob: -10.031115531921387
    7. 'temp' → logprob: -12.156115531921387
    8. 'tmp' → logprob: -12.281115531921387
    9. '```' → logprob: -13.156115531921387
    10. 'dist' → logprob: -13.281115531921387

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010278578847646713
    2. 'def' → logprob: -4.635278701782227
    3. 'mod' → logprob: -8.260278701782227
    4. ' return' → logprob: -9.510278701782227
    5. '=' → logprob: -9.760278701782227
    6. 'res' → logprob: -10.135278701782227
    7. 'tmp' → logprob: -10.510278701782227
    8. 'result' → logprob: -10.510278701782227
    9. 'val' → logprob: -11.635278701782227
    10. 'temp' → logprob: -11.635278701782227

Token 346: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01723502203822136
    2. '(mod' → logprob: -4.892234802246094
    3. 'get' → logprob: -5.267234802246094
    4. ' mod' → logprob: -5.767234802246094
    5. '(' → logprob: -7.517234802246094
    6. '(get' → logprob: -8.017234802246094
    7. ' get' → logprob: -9.142234802246094
    8. '((' → logprob: -9.142234802246094
    9. ' (' → logprob: -9.517234802246094
    10. 'dt' → logprob: -10.267234802246094

Token 347: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.054500666621607e-06
    2. '*n' → logprob: -13.12500286102295
    3. '*' → logprob: -15.75000286102295
    4. '[n' → logprob: -15.87500286102295
    5. '(n' → logprob: -16.375003814697266
    6. '_n' → logprob: -16.500003814697266
    7. '
' → logprob: -17.125003814697266
    8. '%n' → logprob: -17.250003814697266
    9. 'mod' → logprob: -17.500003814697266
    10. '```' → logprob: -17.500003814697266

Token 348: 'Cr' (ID: 14225)
  Prédit: 'Cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -6.2729995988775045e-06
    2. 'n' → logprob: -12.000006675720215
    3. ' Cr' → logprob: -17.1250057220459
    4. 'C' → logprob: -17.1250057220459
    5. 'CR' → logprob: -17.8750057220459
    6. '_C' → logprob: -18.3750057220459
    7. 'cr' → logprob: -18.5000057220459
    8. 'Ca' → logprob: -20.2500057220459
    9. 'Cn' → logprob: -20.6250057220459
    10. '   ' → logprob: -20.6250057220459

Token 349: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.000996963819488883
    2. '(d' → logprob: -7.000997066497803
    3. '(two' → logprob: -9.500996589660645
    4. '(' → logprob: -11.500996589660645
    5. 'one' → logprob: -15.500996589660645
    6. '(dt' → logprob: -15.750996589660645
    7. '((' → logprob: -16.37599754333496
    8. '(o' → logprob: -16.87599754333496
    9. '(len' → logprob: -17.37599754333496
    10. '[' → logprob: -17.87599754333496

Token 350: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1128886416554451
    2. ' +' → logprob: -2.2378885746002197
    3. '+d' → logprob: -10.73788833618164
    4. '   ' → logprob: -10.86288833618164
    5. ' plus' → logprob: -11.48788833618164
    6. '[' → logprob: -12.86288833618164
    7. '+
' → logprob: -13.11288833618164
    8. 'plus' → logprob: -13.36288833618164
    9. '＋' → logprob: -13.36288833618164
    10. '+t' → logprob: -13.36288833618164

Token 351: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.02960999868810177
    2. 'two' → logprob: -3.6546099185943604
    3. ' dt' → logprob: -5.9046101570129395
    4. ' two' → logprob: -7.6546101570129395
    5. '2' → logprob: -10.154609680175781
    6. '	d' → logprob: -11.279609680175781
    7. '   ' → logprob: -11.404609680175781
    8. ' ' → logprob: -11.529609680175781
    9. 'd' → logprob: -11.779609680175781
    10. 'stwo' → logprob: -11.779609680175781

Token 352: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.0040818434208631516
    2. 'two' → logprob: -5.504081726074219
    3. 'one' → logprob: -14.504081726074219
    4. 'owo' → logprob: -14.629081726074219
    5. '(two' → logprob: -14.754081726074219
    6. 'o' → logprob: -15.004081726074219
    7. 'ow' → logprob: -15.004081726074219
    8. '_two' → logprob: -15.004081726074219
    9. ' two' → logprob: -15.379081726074219
    10. 'we' → logprob: -15.629081726074219

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.069664333248511e-05
    2. ' ,' → logprob: -10.875020980834961
    3. ',
' → logprob: -13.750020980834961
    4. 'two' → logprob: -15.125020980834961
    5. ')' → logprob: -15.875020980834961
    6. '[' → logprob: -17.12502098083496
    7. '   ' → logprob: -17.25002098083496
    8. '```' → logprob: -17.50002098083496
    9. ',

' → logprob: -17.62502098083496
    10. '(two' → logprob: -17.75002098083496

Token 354: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.5948403477668762
    2. 'one' → logprob: -0.8448403477668762
    3. ' two' → logprob: -5.2198405265808105
    4. 'dt' → logprob: -5.2198405265808105
    5. 'two' → logprob: -5.3448405265808105
    6. ' dt' → logprob: -5.8448405265808105
    7. ' ' → logprob: -9.344840049743652
    8. '   ' → logprob: -9.969840049743652
    9. '(one' → logprob: -10.969840049743652
    10. ' ones' → logprob: -10.969840049743652

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ')' → logprob: -14.375004768371582
    4. '   ' → logprob: -15.250004768371582
    5. ',
' → logprob: -15.750004768371582
    6. '```' → logprob: -16.6250057220459
    7. '+' → logprob: -17.8750057220459
    8. ',

' → logprob: -18.2500057220459
    9. '),' → logprob: -18.3750057220459
    10. '-' → logprob: -18.6250057220459

Token 356: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.20141470432281494
    2. ' mod' → logprob: -1.701414704322815
    3. '	mod' → logprob: -13.951415061950684
    4. ' ' → logprob: -16.326414108276367
    5. 'moder' → logprob: -16.326414108276367
    6. '   ' → logprob: -16.451414108276367
    7. '(mod' → logprob: -16.451414108276367
    8. ' мод' → logprob: -16.576414108276367
    9. '0' → logprob: -16.576414108276367
    10. '2' → logprob: -17.326414108276367

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.625003814697266
    3. 'fac' → logprob: -16.250003814697266
    4. ',f' → logprob: -16.250003814697266
    5. ',
' → logprob: -17.500003814697266
    6. ')' → logprob: -19.500003814697266
    7. '_,' → logprob: -19.625003814697266
    8. '_fac' → logprob: -19.750003814697266
    9. ' fac' → logprob: -20.375003814697266
    10. 'f' → logprob: -20.375003814697266

Token 358: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.25193241238594055
    2. ' fac' → logprob: -1.5019323825836182
    3. '_fac' → logprob: -14.376932144165039
    4. ' ' → logprob: -14.876932144165039
    5. '   ' → logprob: -14.876932144165039
    6. 'f' → logprob: -14.876932144165039
    7. '.fac' → logprob: -15.001932144165039
    8. '
' → logprob: -15.626932144165039
    9. 'fas' → logprob: -15.876932144165039
    10. 'fa' → logprob: -15.876932144165039

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5358694731257856e-05
    2. ' ,' → logprob: -11.250035285949707
    3. 'inv' → logprob: -11.625035285949707
    4. ')' → logprob: -12.000035285949707
    5. '[' → logprob: -12.625035285949707
    6. '[in' → logprob: -13.750035285949707
    7. '(inv' → logprob: -14.000035285949707
    8. ',
' → logprob: -14.250035285949707
    9. '),' → logprob: -15.125035285949707
    10. ',in' → logprob: -15.625035285949707

Token 360: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.04858827963471413
    2. ' inv' → logprob: -3.048588275909424
    3. '(inv' → logprob: -14.923588752746582
    4. '   ' → logprob: -15.298588752746582
    5. ' ' → logprob: -15.423588752746582
    6. '2' → logprob: -16.548587799072266
    7. '
' → logprob: -17.048587799072266
    8. '1' → logprob: -17.423587799072266
    9. '0' → logprob: -17.673587799072266
    10. '.inv' → logprob: -18.048587799072266

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011069283820688725
    2. ',' → logprob: -4.511069297790527
    3. '   ' → logprob: -11.386069297790527
    4. ')*' → logprob: -12.011069297790527
    5. ' )' → logprob: -12.761069297790527
    6. ',)' → logprob: -14.636069297790527
    7. '),' → logprob: -15.261069297790527
    8. ')
' → logprob: -15.636069297790527
    9. ' ' → logprob: -16.51106834411621
    10. '}' → logprob: -16.63606834411621

Token 362: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.0788937583565712
    2. ' zero' → logprob: -2.5788936614990234
    3. '0' → logprob: -13.078893661499023
    4. 'zer' → logprob: -14.578893661499023
    5. '   ' → logprob: -14.703893661499023
    6. '(' → logprob: -14.953893661499023
    7. ' ' → logprob: -15.578893661499023
    8. '
' → logprob: -16.203893661499023
    9. 'zeros' → logprob: -16.203893661499023
    10. 'z' → logprob: -16.328893661499023

Token 364: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5837309956550598
    2. '<|end|>' → logprob: -0.8337309956550598
    3. ')' → logprob: -5.833731174468994
    4. '<|end|>' → logprob: -6.458731174468994
    5. '```' → logprob: -7.083731174468994
    6. '
' → logprob: -7.208731174468994
    7. '#' → logprob: -7.333731174468994
    8. ' ' → logprob: -8.583730697631836
    9. '[' → logprob: -9.083730697631836
    10. 'for' → logprob: -9.833730697631836

Token 366: ' should' (ID: 1757)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03390985354781151
    2. ' solve' → logprob: -3.658909797668457
    3. 'main' → logprob: -5.658909797668457
    4. ' get' → logprob: -6.533909797668457
    5. ' calculate' → logprob: -7.283909797668457
    6. ' count' → logprob: -7.533909797668457
    7. ' compute' → logprob: -7.658909797668457
    8. 'solve' → logprob: -8.033909797668457
    9. ' solution' → logprob: -9.408909797668457
    10. ' sum' → logprob: -9.908909797668457

Token 367: '_continue' (ID: 188911)
  Prédit: '_break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -0.004174679517745972
    2. '_continue' → logprob: -5.504174709320068
    3. '_expand' → logprob: -10.75417423248291
    4. '_stop' → logprob: -10.87917423248291
    5. ' _' → logprob: -11.50417423248291
    6. '_split' → logprob: -12.50417423248291
    7. '_replace' → logprob: -12.62917423248291
    8. '_not' → logprob: -12.75417423248291
    9. '_' → logprob: -12.75417423248291
    10. ' break' → logprob: -12.87917423248291

Token 368: '_dist' (ID: 37968)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.00503356009721756
    2. '(' → logprob: -5.630033493041992
    3. '(two' → logprob: -6.880033493041992
    4. ' (' → logprob: -7.880033493041992
    5. '(a' → logprob: -11.505033493041992
    6. '(space' → logprob: -13.005033493041992
    7. '(s' → logprob: -13.005033493041992
    8. '(now' → logprob: -13.380033493041992
    9. '():' → logprob: -13.755033493041992
    10. '(
' → logprob: -14.130033493041992

Token 369: '_equals' (ID: 165870)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.19237788021564484
    2. '(' → logprob: -1.8173779249191284
    3. '_less' → logprob: -5.442378044128418
    4. '(two' → logprob: -6.192378044128418
    5. '(dist' → logprob: -6.442378044128418
    6. '(line' → logprob: -6.692378044128418
    7. '_dist' → logprob: -7.442378044128418
    8. '_' → logprob: -7.442378044128418
    9. '(X' → logprob: -8.192378044128418
    10. ' (' → logprob: -8.442378044128418

Token 370: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -1.0543391704559326
    2. '(X' → logprob: -1.3043391704559326
    3. 'X' → logprob: -1.8043391704559326
    4. '(' → logprob: -1.9293391704559326
    5. '_' → logprob: -3.6793391704559326
    6. '(one' → logprob: -3.6793391704559326
    7. '<|end|>' → logprob: -5.054339408874512
    8. '(x' → logprob: -6.429339408874512
    9. '(two' → logprob: -6.554339408874512
    10. 'one' → logprob: -6.929339408874512

Token 371: '(dist' (ID: 78981)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.001627217628993094
    2. '(' → logprob: -6.501627445220947
    3. '(two' → logprob: -9.001626968383789
    4. '():' → logprob: -14.501626968383789
    5. '(a' → logprob: -15.376626968383789
    6. '(
' → logprob: -15.376626968383789
    7. '(now' → logprob: -16.37662696838379
    8. '(s' → logprob: -16.50162696838379
    9. '(on' → logprob: -16.75162696838379
    10. '(x' → logprob: -16.87662696838379

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05104171484708786
    2. '):' → logprob: -3.051041603088379
    3. ' ,' → logprob: -7.051041603088379
    4. '==' → logprob: -7.301041603088379
    5. ')' → logprob: -8.051041603088379
    6. ' ==' → logprob: -8.676041603088379
    7. ',
' → logprob: -8.926041603088379
    8. '):
' → logprob: -9.551041603088379
    9. '_one' → logprob: -10.051041603088379
    10. ':' → logprob: -10.551041603088379

Token 373: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07906405627727509
    2. ' X' → logprob: -2.579064130783081
    3. '   ' → logprob: -10.07906436920166
    4. ' ' → logprob: -10.20406436920166
    5. 'N' → logprob: -10.57906436920166
    6. 'one' → logprob: -10.95406436920166
    7. 'x' → logprob: -11.57906436920166
    8. ' one' → logprob: -11.57906436920166
    9. 'two' → logprob: -12.20406436920166
    10. ' two' → logprob: -12.57906436920166

Token 374: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002823777496814728
    2. ',' → logprob: -6.002823829650879
    3. '):
' → logprob: -8.002823829650879
    4. ')' → logprob: -12.252823829650879
    5. ':' → logprob: -12.252823829650879
    6. ' ):' → logprob: -13.377823829650879
    7. '   ' → logprob: -14.002823829650879
    8. '=' → logprob: -14.127823829650879
    9. '():' → logprob: -16.002822875976562
    10. '):
' → logprob: -16.127822875976562

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007129086880013347
    2. 'return' → logprob: -7.500712871551514
    3. ' return' → logprob: -8.750713348388672
    4. '	return' → logprob: -13.500713348388672
    5. '```' → logprob: -16.875713348388672
    6. '{return' → logprob: -17.625713348388672
    7. '    ' → logprob: -18.000713348388672
    8. '   ' → logprob: -18.125713348388672
    9. ':return' → logprob: -18.375713348388672
    10. '  ' → logprob: -18.500713348388672

Token 376: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02357795462012291
    2. '   ' → logprob: -3.773577928543091
    3. ' return' → logprob: -8.023577690124512
    4. '
' → logprob: -13.023577690124512
    5. '	return' → logprob: -13.523577690124512
    6. '    
' → logprob: -14.273577690124512
    7. 'if' → logprob: -15.398577690124512
    8. '```' → logprob: -16.273578643798828
    9. '    ' → logprob: -16.398578643798828
    10. '  ' → logprob: -16.523578643798828

Token 377: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22996467351913452
    2. ' dist' → logprob: -1.6049647331237793
    3. 'True' → logprob: -5.729964733123779
    4. 'False' → logprob: -6.979964733123779
    5. ' True' → logprob: -8.229964256286621
    6. ' False' → logprob: -9.729964256286621
    7. '(dist' → logprob: -10.604964256286621
    8. '0' → logprob: -12.854964256286621
    9. '	dist' → logprob: -12.854964256286621
    10. ' ' → logprob: -13.354964256286621

Token 378: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4304814040660858
    2. '==' → logprob: -1.3054814338684082
    3. ' <=' → logprob: -2.805481433868408
    4. '<=' → logprob: -4.055481433868408
    5. ' >=' → logprob: -7.430481433868408
    6. '>=' → logprob: -8.55548095703125
    7. ' <' → logprob: -9.93048095703125
    8. '=' → logprob: -10.18048095703125
    9. '<' → logprob: -10.43048095703125
    10. '>' → logprob: -10.93048095703125

Token 379: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.029751179739832878
    2. ' X' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.27975082397461
    4. '0' → logprob: -15.40475082397461
    5. '	X' → logprob: -16.15475082397461
    6. '>X' → logprob: -16.65475082397461
    7. '   ' → logprob: -16.90475082397461
    8. '_X' → logprob: -17.77975082397461
    9. '<|end|>' → logprob: -18.77975082397461
    10. '  ' → logprob: -19.40475082397461

Token 380: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5800834894180298
    2. '<|end|>' → logprob: -1.3300834894180298
    3. ':' → logprob: -2.2050833702087402
    4. ')' → logprob: -3.0800833702087402
    5. '_' → logprob: -5.20508337020874
    6. '#' → logprob: -5.58008337020874
    7. '```' → logprob: -6.20508337020874
    8. '<|end|>' → logprob: -6.70508337020874
    9. ' ' → logprob: -7.08008337020874
    10. '(' → logprob: -7.20508337020874

Token 382: ' should' (ID: 1757)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.074072241783142
    2. 'def' → logprob: -1.199072241783142
    3. 'get' → logprob: -1.324072241783142
    4. 'should' → logprob: -3.0740723609924316
    5. ' main' → logprob: -4.074072360992432
    6. 'compute' → logprob: -4.574072360992432
    7. 'solve' → logprob: -4.949072360992432
    8. ' get' → logprob: -5.699072360992432
    9. 'calculate' → logprob: -6.324072360992432
    10. ' should' → logprob: -6.574072360992432

Token 383: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.16066448390483856
    2. '_break' → logprob: -1.910664439201355
    3. 'continue' → logprob: -8.035664558410645
    4. 'break' → logprob: -9.785664558410645
    5. '_stop' → logprob: -10.660664558410645
    6. '_return' → logprob: -11.285664558410645
    7. '_cont' → logprob: -11.910664558410645
    8. ' continue' → logprob: -12.285664558410645
    9. '_not' → logprob: -12.785664558410645
    10. 'not' → logprob: -12.910664558410645

Token 384: '_dist' (ID: 37968)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.3204058110713959
    2. '(' → logprob: -2.4454057216644287
    3. '(one' → logprob: -2.5704057216644287
    4. '_dist' → logprob: -3.1954057216644287
    5. 'dist' → logprob: -3.4454057216644287
    6. '(two' → logprob: -4.445405960083008
    7. ' (' → logprob: -5.195405960083008
    8. '_' → logprob: -5.195405960083008
    9. 'def' → logprob: -5.445405960083008
    10. ' dist' → logprob: -6.320405960083008

Token 385: '_between' (ID: 124874)
  Prédit: '_equals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equals' → logprob: -0.0009354014764539897
    2. '_less' → logprob: -8.125935554504395
    3. '_EQUALS' → logprob: -8.375935554504395
    4. '==' → logprob: -9.000935554504395
    5. '_equal' → logprob: -9.250935554504395
    6. '(' → logprob: -9.500935554504395
    7. 'equals' → logprob: -10.000935554504395
    8. ' ==' → logprob: -11.125935554504395
    9. '_' → logprob: -11.375935554504395
    10. '_le' → logprob: -11.375935554504395

Token 386: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.012582412920892239
    2. 'X' → logprob: -4.387582302093506
    3. '(X' → logprob: -10.762582778930664
    4. '_' → logprob: -11.012582778930664
    5. '```' → logprob: -11.137582778930664
    6. ' X' → logprob: -12.262582778930664
    7. '_x' → logprob: -12.387582778930664
    8. '(_' → logprob: -13.387582778930664
    9. 'def' → logprob: -13.637582778930664
    10. '__' → logprob: -13.887582778930664

Token 387: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -8.64970643306151e-05
    2. 'and' → logprob: -9.500086784362793
    3. '_between' → logprob: -11.625086784362793
    4. '_' → logprob: -14.125086784362793
    5. '_AND' → logprob: -14.375086784362793
    6. '_equals' → logprob: -15.375086784362793
    7. ' and' → logprob: -15.375086784362793
    8. '_dist' → logprob: -15.750086784362793
    9. '```' → logprob: -15.750086784362793
    10. '_or' → logprob: -16.250085830688477

Token 388: '_' (ID: 62)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5286959409713745
    2. '_X' → logprob: -1.0286959409713745
    3. '_' → logprob: -3.028696060180664
    4. '2' → logprob: -5.403696060180664
    5. ' X' → logprob: -9.153696060180664
    6. '```' → logprob: -9.528696060180664
    7. '(X' → logprob: -10.278696060180664
    8. ' ' → logprob: -10.528696060180664
    9. '(' → logprob: -12.028696060180664
    10. '__' → logprob: -12.403696060180664

Token 389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005699523026123643
    2. '_' → logprob: -7.625569820404053
    3. ' ' → logprob: -9.750570297241211
    4. 'X' → logprob: -11.000570297241211
    5. '_X' → logprob: -12.750570297241211
    6. '(' → logprob: -14.125570297241211
    7. '1' → logprob: -14.250570297241211
    8. '
' → logprob: -14.875570297241211
    9. '```' → logprob: -14.938070297241211
    10. '__' → logprob: -15.063070297241211

Token 390: 'X' (ID: 55)
  Prédit: '_X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.016118476167321205
    2. 'X' → logprob: -4.14111852645874
    3. '(X' → logprob: -11.141118049621582
    4. '(dist' → logprob: -11.141118049621582
    5. 'dist' → logprob: -11.266118049621582
    6. '_' → logprob: -11.516118049621582
    7. '_equals' → logprob: -11.766118049621582
    8. '```' → logprob: -12.141118049621582
    9. '__' → logprob: -12.891118049621582
    10. '_Y' → logprob: -13.266118049621582

Token 391: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -11.500033378601074
    3. '(def' → logprob: -12.000033378601074
    4. '(
' → logprob: -12.500033378601074
    5. '():' → logprob: -12.625033378601074
    6. 'dist' → logprob: -12.875033378601074
    7. ' (' → logprob: -13.125033378601074
    8. '(d' → logprob: -13.250033378601074
    9. '(distance' → logprob: -13.500033378601074
    10. '(one' → logprob: -14.000033378601074

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012594614236149937
    2. ' ,' → logprob: -9.000125885009766
    3. ',X' → logprob: -13.625125885009766
    4. ',
' → logprob: -14.500125885009766
    5. '_,' → logprob: -15.000125885009766
    6. ',d' → logprob: -16.250125885009766
    7. ',x' → logprob: -16.625125885009766
    8. ',int' → logprob: -16.750125885009766
    9. 'and' → logprob: -17.000125885009766
    10. ',

' → logprob: -17.500125885009766

Token 393: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.44480499625205994
    2. ' X' → logprob: -1.1948050260543823
    3. '2' → logprob: -3.1948049068450928
    4. ' ' → logprob: -4.194805145263672
    5. ' dist' → logprob: -9.194805145263672
    6. 'dist' → logprob: -11.069805145263672
    7. '0' → logprob: -11.069805145263672
    8. ')' → logprob: -11.194805145263672
    9. '1' → logprob: -11.194805145263672
    10. '   ' → logprob: -11.319805145263672

Token 394: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45374199748039246
    2. '):
' → logprob: -1.0787420272827148
    3. ',' → logprob: -3.703742027282715
    4. ':' → logprob: -10.578742027282715
    5. ')' → logprob: -10.703742027282715
    6. '   ' → logprob: -10.703742027282715
    7. '):

' → logprob: -11.703742027282715
    8. '):
' → logprob: -12.078742027282715
    9. ',
' → logprob: -12.703742027282715
    10. '=' → logprob: -12.953742027282715

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06047055870294571
    2. 'return' → logprob: -3.3104705810546875
    3. ' return' → logprob: -3.8104705810546875
    4. '	return' → logprob: -10.310470581054688
    5. '    ' → logprob: -12.435470581054688
    6. '
' → logprob: -13.435470581054688
    7. '  ' → logprob: -13.935470581054688
    8. '    
' → logprob: -13.935470581054688
    9. '```' → logprob: -15.185470581054688
    10. ' ' → logprob: -15.310470581054688

Token 396: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010132847353816032
    2. 'dist' → logprob: -5.010132789611816
    3. ' return' → logprob: -6.135132789611816
    4. 'X' → logprob: -7.510132789611816
    5. '   ' → logprob: -7.510132789611816
    6. '0' → logprob: -9.385132789611816
    7. '2' → logprob: -10.885132789611816
    8. 'def' → logprob: -11.385132789611816
    9. ' dist' → logprob: -11.385132789611816
    10. '1' → logprob: -12.010132789611816

Token 397: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003902076743543148
    2. ' dist' → logprob: -5.628901958465576
    3. 'X' → logprob: -8.128902435302734
    4. '(dist' → logprob: -12.753902435302734
    5. ' X' → logprob: -13.128902435302734
    6. '   ' → logprob: -13.628902435302734
    7. '2' → logprob: -14.253902435302734
    8. '	dist' → logprob: -16.003902435302734
    9. ' ' → logprob: -16.503902435302734
    10. 'not' → logprob: -16.628902435302734

Token 398: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.019699273630976677
    2. ' dist' → logprob: -4.0196990966796875
    3. 'X' → logprob: -6.5196990966796875
    4. ' X' → logprob: -10.394699096679688
    5. '   ' → logprob: -11.144699096679688
    6. '2' → logprob: -11.769699096679688
    7. ')' → logprob: -12.144699096679688
    8. '(dist' → logprob: -12.394699096679688
    9. '	dist' → logprob: -13.144699096679688
    10. ' ' → logprob: -13.144699096679688

Token 399: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7598794102668762
    2. ' >=' → logprob: -1.2598793506622314
    3. '>' → logprob: -1.7598793506622314
    4. '>=' → logprob: -3.1348793506622314
    5. ' <=' → logprob: -4.0098795890808105
    6. ' <' → logprob: -4.6348795890808105
    7. '<=' → logprob: -6.1348795890808105
    8. '<' → logprob: -6.5098795890808105
    9. ' ' → logprob: -7.3848795890808105
    10. ',' → logprob: -8.009879112243652

Token 400: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.23198255896568298
    2. ' X' → logprob: -1.6069825887680054
    3. '1' → logprob: -5.106982707977295
    4. ' ' → logprob: -8.231982231140137
    5. ' (' → logprob: -8.981982231140137
    6. '(X' → logprob: -10.106982231140137
    7. ')' → logprob: -10.481982231140137
    8. '(' → logprob: -11.481982231140137
    9. '2' → logprob: -11.481982231140137
    10. '0' → logprob: -12.231982231140137

Token 401: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02878544293344021
    2. '>' → logprob: -4.403785228729248
    3. '<=' → logprob: -5.653785228729248
    4. ')>' → logprob: -5.778785228729248
    5. ' >' → logprob: -6.028785228729248
    6. ' <=' → logprob: -6.153785228729248
    7. ' )' → logprob: -6.653785228729248
    8. ')<=' → logprob: -6.778785228729248
    9. '<' → logprob: -6.903785228729248
    10. ' <' → logprob: -7.528785228729248

Token 402: ' %' (ID: 1851)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9253326654434204
    2. '<' → logprob: -1.1753326654434204
    3. ' <' → logprob: -2.175332546234131
    4. ' >' → logprob: -2.175332546234131
    5. '<=' → logprob: -3.300332546234131
    6. ' <=' → logprob: -3.550332546234131
    7. '>=' → logprob: -7.300332546234131
    8. ' >=' → logprob: -8.050333023071289
    9. ' ' → logprob: -8.175333023071289
    10. '!=' → logprob: -8.800333023071289

Token 403: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.028670068830251694
    2. '1' → logprob: -3.653670072555542
    3. 'X' → logprob: -6.653669834136963
    4. ' ' → logprob: -6.903669834136963
    5. '(' → logprob: -10.278670310974121
    6. ' X' → logprob: -10.528670310974121
    7. '(X' → logprob: -13.028670310974121
    8. '   ' → logprob: -13.153670310974121
    9. ' (' → logprob: -13.403670310974121
    10. '3' → logprob: -13.903670310974121

Token 404: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02332397550344467
    2. '1' → logprob: -3.7733240127563477
    3. ' ' → logprob: -9.773324012756348
    4. '(' → logprob: -11.398324012756348
    5. 'X' → logprob: -11.773324012756348
    6. 'two' → logprob: -14.960824012756348
    7. '   ' → logprob: -15.210824012756348
    8. '3' → logprob: -15.273324012756348
    9. '0' → logprob: -15.585824012756348
    10. '(X' → logprob: -16.14832305908203

Token 405: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20562027394771576
    2. '==' → logprob: -1.830620288848877
    3. '()' → logprob: -4.455620288848877
    4. '()==' → logprob: -4.705620288848877
    5. ' !=' → logprob: -5.705620288848877
    6. '(' → logprob: -7.330620288848877
    7. '!=' → logprob: -8.330619812011719
    8. '()!=' → logprob: -8.705619812011719
    9. ')' → logprob: -8.955619812011719
    10. ' ' → logprob: -9.205619812011719

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -11.000021934509277
    3. '1' → logprob: -12.250021934509277
    4. '   ' → logprob: -17.37502098083496
    5. '
' → logprob: -17.50002098083496
    6. '۰' → logprob: -18.81252098083496
    7. '=' → logprob: -18.87502098083496
    8. '00' → logprob: -19.25002098083496
    9. '０' → logprob: -20.06252098083496
    10. '000' → logprob: -20.12502098083496

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.057743949990254e-05
    2. '1' → logprob: -11.000020980834961
    3. ' ' → logprob: -12.500020980834961
    4. '۰' → logprob: -17.12502098083496
    5. '०' → logprob: -18.12502098083496
    6. '０' → logprob: -18.25002098083496
    7. '০' → logprob: -18.56252098083496
    8. '٠' → logprob: -18.81252098083496
    9. '
' → logprob: -19.31252098083496
    10. '00' → logprob: -19.37502098083496

Token 408: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5861774682998657
    2. '<|end|>' → logprob: -0.9611774682998657
    3. 'for' → logprob: -4.711177349090576
    4. 'n' → logprob: -4.961177349090576
    5. ')' → logprob: -5.336177349090576
    6. '[' → logprob: -5.586177349090576
    7. 'two' → logprob: -5.586177349090576
    8. 'd' → logprob: -5.711177349090576
    9. '
' → logprob: -5.836177349090576
    10. ' two' → logprob: -5.836177349090576

Token 410: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.35134682059288025
    2. ' main' → logprob: -1.3513468503952026
    3. 'solve' → logprob: -4.101346969604492
    4. 'count' → logprob: -4.851346969604492
    5. ' solve' → logprob: -5.601346969604492
    6. 'get' → logprob: -6.101346969604492
    7. 'calculate' → logprob: -6.476346969604492
    8. 'compute' → logprob: -6.726346969604492
    9. ' count' → logprob: -7.101346969604492
    10. 'sum' → logprob: -7.976346969604492

Token 411: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.7445664405822754
    2. '_two' → logprob: -2.2445664405822754
    3. '_max' → logprob: -2.8695664405822754
    4. '_input' → logprob: -3.2445664405822754
    5. '_answer' → logprob: -3.3695664405822754
    6. '_one' → logprob: -3.4945664405822754
    7. '_next' → logprob: -3.6195664405822754
    8. 'now' → logprob: -3.7445664405822754
    9. '_sum' → logprob: -3.8695664405822754
    10. '_zero' → logprob: -3.8695664405822754

Token 412: '_all' (ID: 13305)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.03453411906957626
    2. 'dist' → logprob: -3.784534215927124
    3. '_two' → logprob: -5.909533977508545
    4. 'Dist' → logprob: -6.659533977508545
    5. 'def' → logprob: -6.659533977508545
    6. 'one' → logprob: -7.034533977508545
    7. 'two' → logprob: -7.159533977508545
    8. '   ' → logprob: -7.284533977508545
    9. '_factor' → logprob: -7.534533977508545
    10. '_one' → logprob: -7.534533977508545

Token 413: '_tw' (ID: 139926)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.2789749503135681
    2. '(one' → logprob: -1.903975009918213
    3. '(' → logprob: -2.653975009918213
    4. 'dist' → logprob: -5.528975009918213
    5. '_two' → logprob: -5.778975009918213
    6. '(two' → logprob: -5.903975009918213
    7. '_counts' → logprob: -6.403975009918213
    8. '_one' → logprob: -6.403975009918213
    9. '_tokens' → logprob: -6.778975009918213
    10. '_' → logprob: -6.778975009918213

Token 414: 'os' (ID: 365)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0004636776284314692
    2. 'os' → logprob: -8.000463485717773
    3. 'wo' → logprob: -10.125463485717773
    4. '(o' → logprob: -11.000463485717773
    5. '_o' → logprob: -11.250463485717773
    6. 'ice' → logprob: -11.625463485717773
    7. ' o' → logprob: -11.625463485717773
    8. '```' → logprob: -11.750463485717773
    9. 'о' → logprob: -12.125463485717773
    10. ''o' → logprob: -12.375463485717773

Token 415: '(X' (ID: 17061)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.8308522701263428
    2. '(two' → logprob: -0.8308522701263428
    3. '(' → logprob: -2.0808522701263428
    4. '():' → logprob: -7.705852508544922
    5. '_count' → logprob: -7.705852508544922
    6. '(t' → logprob: -7.955852508544922
    7. '(n' → logprob: -8.080852508544922
    8. '(number' → logprob: -8.080852508544922
    9. '(count' → logprob: -8.330852508544922
    10. '(*' → logprob: -8.580852508544922

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07063604146242142
    2. '):' → logprob: -2.695636034011841
    3. '+' → logprob: -8.445635795593262
    4. '):
' → logprob: -8.945635795593262
    5. '   ' → logprob: -9.195635795593262
    6. ' ,' → logprob: -9.445635795593262
    7. ',
' → logprob: -9.695635795593262
    8. ' +' → logprob: -10.445635795593262
    9. 'def' → logprob: -11.070635795593262
    10. ':' → logprob: -11.695635795593262

Token 417: ' one' (ID: 1001)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.024448037147522
    2. 'mod' → logprob: -1.024448037147522
    3. ' two' → logprob: -2.3994479179382324
    4. 'two' → logprob: -2.5244479179382324
    5. ' one' → logprob: -3.3994479179382324
    6. ' zero' → logprob: -3.3994479179382324
    7. 'zero' → logprob: -3.8994479179382324
    8. 'one' → logprob: -4.149447917938232
    9. 'X' → logprob: -6.149447917938232
    10. '0' → logprob: -6.774447917938232

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02147773653268814
    2. '):' → logprob: -4.021477699279785
    3. '+' → logprob: -6.396477699279785
    4. '):
' → logprob: -6.646477699279785
    5. ' +' → logprob: -9.896477699279785
    6. ' ,' → logprob: -10.146477699279785
    7. ',
' → logprob: -10.146477699279785
    8. ')' → logprob: -10.771477699279785
    9. '=' → logprob: -10.771477699279785
    10. '_plus' → logprob: -10.771477699279785

Token 419: ' zero' (ID: 12421)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.6328802108764648
    2. ' two' → logprob: -0.7578802108764648
    3. ' zero' → logprob: -9.007880210876465
    4. 'zero' → logprob: -10.007880210876465
    5. ' ' → logprob: -10.757880210876465
    6. 'mod' → logprob: -11.132880210876465
    7. '(two' → logprob: -11.132880210876465
    8. ' mod' → logprob: -11.257880210876465
    9. 'tw' → logprob: -11.632880210876465
    10. ' one' → logprob: -11.882880210876465

Token 420: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.464347173576243e-05
    2. '):' → logprob: -11.12503433227539
    3. ' ,' → logprob: -11.75003433227539
    4. '):
' → logprob: -11.87503433227539
    5. ',
' → logprob: -13.37503433227539
    6. 's' → logprob: -13.75003433227539
    7. '   ' → logprob: -14.25003433227539
    8. '_,' → logprob: -14.75003433227539
    9. 'def' → logprob: -15.37503433227539
    10. 'two' → logprob: -15.87503433227539

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.567575034452602e-05
    2. '	return' → logprob: -10.00009536743164
    3. ' return' → logprob: -11.25009536743164
    4. 'return' → logprob: -11.37509536743164
    5. ':' → logprob: -11.50009536743164
    6. '   ' → logprob: -11.75009536743164
    7. ':return' → logprob: -13.37509536743164
    8. '       ' → logprob: -13.87509536743164
    9. ',' → logprob: -14.00009536743164
    10. '=' → logprob: -14.12509536743164

Token 422: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.036558132618665695
    2. '   ' → logprob: -3.536558151245117
    3. ' return' → logprob: -5.036558151245117
    4. 'if' (adapté à ' if') → logprob: -8.411558151245117
    5. '=' → logprob: -11.411558151245117
    6. '	return' → logprob: -11.411558151245117
    7. 'two' → logprob: -12.536558151245117
    8. '```' → logprob: -12.536558151245117
    9. ' if' → logprob: -12.661558151245117
    10. 'ans' → logprob: -13.036558151245117

Token 423: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.7476605772972107
    2. ' one' → logprob: -1.6226606369018555
    3. ' X' → logprob: -2.1226606369018555
    4. 'one' → logprob: -2.1226606369018555
    5. ' two' → logprob: -2.9976606369018555
    6. 'two' → logprob: -3.6226606369018555
    7. ' zero' → logprob: -5.4976606369018555
    8. 'zero' → logprob: -5.7476606369018555
    9. 'len' → logprob: -5.9976606369018555
    10. ' not' → logprob: -6.8726606369018555

Token 424: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.517628014087677
    2. ' ==' → logprob: -1.1426279544830322
    3. ' <=' → logprob: -3.0176279544830322
    4. '<=' → logprob: -3.8926279544830322
    5. '%' → logprob: -5.017628192901611
    6. ' %' → logprob: -6.017628192901611
    7. ' <' → logprob: -6.392628192901611
    8. '=' → logprob: -6.892628192901611
    9. ' >=' → logprob: -7.142628192901611
    10. '>' → logprob: -7.392628192901611

Token 425: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029228029306977987
    2. ' ' → logprob: -6.377923011779785
    3. '3' → logprob: -6.752923011779785
    4. '4' → logprob: -10.377923011779785
    5. '1' → logprob: -11.627923011779785
    6. '==' → logprob: -12.377923011779785
    7. '   ' → logprob: -12.627923011779785
    8. '6' → logprob: -13.252923011779785
    9. '  ' → logprob: -13.627923011779785
    10. '(' → logprob: -14.752923011779785

Token 426: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002986392646562308
    2. '3' → logprob: -8.250298500061035
    3. '1' → logprob: -11.250298500061035
    4. '4' → logprob: -11.500298500061035
    5. ' ' → logprob: -11.500298500061035
    6. '==' → logprob: -12.875298500061035
    7. '   ' → logprob: -14.500298500061035
    8. '0' → logprob: -15.250298500061035
    9. '
' → logprob: -15.625298500061035
    10. '  ' → logprob: -16.00029945373535

Token 427: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10788412392139435
    2. ' ==' → logprob: -2.357884168624878
    3. '!=' → logprob: -5.107883930206299
    4. ' !=' → logprob: -6.482883930206299
    5. '=' → logprob: -10.607884407043457
    6. '==
' → logprob: -10.982884407043457
    7. ' ' → logprob: -11.732884407043457
    8. '()==' → logprob: -12.482884407043457
    9. '   ' → logprob: -12.607884407043457
    10. '>' → logprob: -12.732884407043457

Token 428: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01000291295349598
    2. '1' → logprob: -5.260003089904785
    3. ' ' → logprob: -5.385003089904785
    4. '=' → logprob: -9.260003089904785
    5. '2' → logprob: -9.510003089904785
    6. '==' → logprob: -13.260003089904785
    7. '   ' → logprob: -14.135003089904785
    8. '  ' → logprob: -15.010003089904785
    9. '
' → logprob: -15.822503089904785
    10. '!=' → logprob: -16.07250213623047

Token 429: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033824380952864885
    2. '2' → logprob: -6.503382205963135
    3. '1' → logprob: -6.503382205963135
    4. ' ' → logprob: -7.878382205963135
    5. '   ' → logprob: -14.253382682800293
    6. '  ' → logprob: -15.878382682800293
    7. '=' → logprob: -15.878382682800293
    8. '==' → logprob: -16.003381729125977
    9. '4' → logprob: -17.378381729125977
    10. '
' → logprob: -17.815881729125977

Token 430: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12011009454727173
    2. ':
' → logprob: -2.745110034942627
    3. ' and' → logprob: -3.745110034942627
    4. '==' → logprob: -4.245110034942627
    5. ' ==' → logprob: -4.745110034942627
    6. '   ' → logprob: -6.995110034942627
    7. 'and' → logprob: -7.120110034942627
    8. ':return' → logprob: -7.745110034942627
    9. ' :' → logprob: -10.370110511779785
    10. '       ' → logprob: -11.245110511779785

Token 431: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.49916887283325195
    2. ' one' → logprob: -1.374168872833252
    3. 'zero' → logprob: -2.624168872833252
    4. ' zero' → logprob: -3.249168872833252
    5. 'two' → logprob: -5.249168872833252
    6. 'X' → logprob: -5.499168872833252
    7. ' (' → logprob: -5.499168872833252
    8. ' two' → logprob: -5.624168872833252
    9. ' X' → logprob: -5.749168872833252
    10. '(one' → logprob: -5.999168872833252

Token 432: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2442895919084549
    2. '==' → logprob: -1.7442896366119385
    3. ' >' → logprob: -3.4942896366119385
    4. '>' → logprob: -5.244289398193359
    5. ' %' → logprob: -6.244289398193359
    6. ' !=' → logprob: -6.994289398193359
    7. ' >=' → logprob: -6.994289398193359
    8. '%' → logprob: -7.244289398193359
    9. ' <' → logprob: -7.494289398193359
    10. ' and' → logprob: -7.744289398193359

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03144601732492447
    2. ' ' → logprob: -3.7814459800720215
    3. '1' → logprob: -5.5314459800720215
    4. 'zero' → logprob: -6.0314459800720215
    5. 'X' → logprob: -7.2814459800720215
    6. ' zero' → logprob: -7.5314459800720215
    7. '2' → logprob: -8.03144645690918
    8. '   ' → logprob: -9.15644645690918
    9. ' X' → logprob: -9.40644645690918
    10. ' (' → logprob: -11.53144645690918

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0134992441162467
    2. ' ' → logprob: -5.1384992599487305
    3. '1' → logprob: -5.2634992599487305
    4. 'X' → logprob: -6.7634992599487305
    5. 'zero' → logprob: -7.0134992599487305
    6. '2' → logprob: -8.76349925994873
    7. ' zero' → logprob: -10.01349925994873
    8. ' X' → logprob: -10.38849925994873
    9. '(' → logprob: -10.76349925994873
    10. '   ' → logprob: -10.88849925994873

Token 435: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07581708580255508
    2. ' and' → logprob: -3.200817108154297
    3. ':
' → logprob: -3.575817108154297
    4. '   ' → logprob: -6.200817108154297
    5. ':return' → logprob: -6.700817108154297
    6. 'and' → logprob: -7.450817108154297
    7. '       ' → logprob: -7.950817108154297
    8. ' :' → logprob: -9.575817108154297
    9. ' or' → logprob: -12.200817108154297
    10. ',' → logprob: -12.325817108154297

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01409991830587387
    2. ':' → logprob: -4.389100074768066
    3. '   ' → logprob: -6.889100074768066
    4. ':
' → logprob: -7.764100074768066
    5. ' and' → logprob: -9.889100074768066
    6. ',' → logprob: -10.264100074768066
    7. ':return' → logprob: -11.139100074768066
    8. ' return' → logprob: -11.889100074768066
    9. ' :' → logprob: -12.014100074768066
    10. '<|end|>' → logprob: -12.139100074768066

Token 437: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24954615533351898
    2. '   ' → logprob: -2.4995460510253906
    3. 'return' (adapté à ' return') → logprob: -2.4995460510253906
    4. ' return' → logprob: -2.8745460510253906
    5. '           ' → logprob: -9.49954605102539
    6. '	return' → logprob: -10.87454605102539
    7. '    ' → logprob: -10.87454605102539
    8. ' ' → logprob: -10.99954605102539
    9. '     ' → logprob: -12.37454605102539
    10. '
' → logprob: -12.49954605102539

Token 438: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010959272272884846
    2. 'zero' → logprob: -4.635959148406982
    3. ' ' → logprob: -7.385959148406982
    4. ' zero' → logprob: -7.635959148406982
    5. '(' → logprob: -9.88595962524414
    6. '1' → logprob: -10.76095962524414
    7. '   ' → logprob: -12.13595962524414
    8. 'None' → logprob: -12.51095962524414
    9. ' (' → logprob: -12.76095962524414
    10. 'get' → logprob: -13.38595962524414

Token 439: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09304510056972504
    2. '<|end|>' → logprob: -2.7180449962615967
    3. '
' → logprob: -4.093045234680176
    4. '<|end|>' → logprob: -7.093045234680176
    5. ' ' → logprob: -7.218045234680176
    6. '*' → logprob: -7.468045234680176
    7. ' *' → logprob: -7.468045234680176
    8. '+' → logprob: -7.843045234680176
    9. '    
' → logprob: -7.843045234680176
    10. '  ' → logprob: -8.343045234680176

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008477445808239281
    2. '<|end|>' → logprob: -7.125847816467285
    3. '	return' → logprob: -11.750847816467285
    4. '<|end|>' → logprob: -11.875847816467285
    5. '    
' → logprob: -12.000847816467285
    6. '       ' → logprob: -12.125847816467285
    7. 'def' → logprob: -12.750847816467285
    8. ')' → logprob: -13.125847816467285
    9. '    ' → logprob: -13.500847816467285
    10. 'return' → logprob: -13.500847816467285

Token 441: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002036179881542921
    2. 'return' (adapté à ' return') → logprob: -6.627036094665527
    3. 'else' → logprob: -7.877036094665527
    4. '       ' → logprob: -9.252036094665527
    5. '	return' → logprob: -9.752036094665527
    6. ' return' → logprob: -9.877036094665527
    7. ' else' → logprob: -10.252036094665527
    8. '<|end|>' → logprob: -10.502036094665527
    9. '    
' → logprob: -11.252036094665527
    10. 'def' → logprob: -11.502036094665527

Token 442: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004706018604338169
    2. ' ' → logprob: -5.879705905914307
    3. 'zero' → logprob: -6.504705905914307
    4. ' zero' → logprob: -8.254706382751465
    5. 'one' → logprob: -10.004706382751465
    6. '1' → logprob: -10.129706382751465
    7. '(' → logprob: -10.629706382751465
    8. 'get' → logprob: -11.504706382751465
    9. '   ' → logprob: -12.004706382751465
    10. ' (' → logprob: -12.254706382751465

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004713066737167537
    2. 'zero' → logprob: -8.000471115112305
    3. '(' → logprob: -10.125471115112305
    4. 'one' → logprob: -10.250471115112305
    5. '1' → logprob: -10.625471115112305
    6. 'get' → logprob: -11.125471115112305
    7. ' ' → logprob: -11.500471115112305
    8. 'mod' → logprob: -12.750471115112305
    9. '(one' → logprob: -13.250471115112305
    10. 'X' → logprob: -13.750471115112305

Token 444: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.031224898993968964
    2. ' solve' → logprob: -4.031224727630615
    3. 'main' → logprob: -4.781224727630615
    4. ' get' → logprob: -6.656224727630615
    5. ' compute' → logprob: -6.656224727630615
    6. 'solve' → logprob: -7.656224727630615
    7. ' count' → logprob: -7.781224727630615
    8. ' calculate' → logprob: -8.031225204467773
    9. ' solution' → logprob: -9.281225204467773
    10. ' sum' → logprob: -9.406225204467773

Token 447: '_ans' (ID: 146254)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.6345833539962769
    2. '(two' → logprob: -1.3845833539962769
    3. '_two' → logprob: -2.1345834732055664
    4. '(' → logprob: -3.2595834732055664
    5. '_one' → logprob: -3.8845834732055664
    6. '_values' → logprob: -4.509583473205566
    7. 'two' → logprob: -5.259583473205566
    8. '   ' → logprob: -5.634583473205566
    9. '_positions' → logprob: -5.634583473205566
    10. ' (' → logprob: -5.759583473205566

Token 448: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.351117342710495
    2. '(ans' → logprob: -1.8511173725128174
    3. '(one' → logprob: -2.1011173725128174
    4. ' (' → logprob: -4.601117134094238
    5. '(now' → logprob: -5.976117134094238
    6. '(answer' → logprob: -6.351117134094238
    7. '   ' → logprob: -7.101117134094238
    8. '(old' → logprob: -8.601117134094238
    9. '(two' → logprob: -8.601117134094238
    10. '(*' → logprob: -8.976117134094238

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ',
' → logprob: -11.00002384185791
    3. ' ,' → logprob: -12.62502384185791
    4. '):' → logprob: -13.00002384185791
    5. '   ' → logprob: -14.25002384185791
    6. '+,' → logprob: -16.000022888183594
    7. '(one' → logprob: -16.000022888183594
    8. ',new' → logprob: -16.500022888183594
    9. '_,' → logprob: -16.625022888183594
    10. '):
' → logprob: -17.000022888183594

Token 450: ' now' (ID: 1954)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.40288466215133667
    2. ' value' → logprob: -1.6528847217559814
    3. ' now' → logprob: -2.0278847217559814
    4. 'value' → logprob: -5.777884483337402
    5. 'val' → logprob: -6.277884483337402
    6. ' new' → logprob: -6.402884483337402
    7. 'now' → logprob: -7.402884483337402
    8. ' res' → logprob: -8.402884483337402
    9. ' mod' → logprob: -8.402884483337402
    10. ' one' → logprob: -8.777884483337402

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2535615563392639
    2. '):' → logprob: -1.5035614967346191
    3. '):
' → logprob: -7.128561496734619
    4. '_' → logprob: -8.503561973571777
    5. '_,' → logprob: -8.503561973571777
    6. '   ' → logprob: -8.878561973571777
    7. '_ans' → logprob: -9.253561973571777
    8. ' ,' → logprob: -10.503561973571777
    9. ' ' → logprob: -10.503561973571777
    10. ')' → logprob: -10.753561973571777

Token 452: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5256039500236511
    2. 'mod' → logprob: -0.9006039500236511
    3. 'MOD' → logprob: -6.400603771209717
    4. ' MOD' → logprob: -7.275603771209717
    5. '   ' → logprob: -10.150604248046875
    6. ' ' → logprob: -11.275604248046875
    7. '):' → logprob: -11.525604248046875
    8. ' ans' → logprob: -12.025604248046875
    9. '):
' → logprob: -12.150604248046875
    10. ' modulo' → logprob: -12.275604248046875

Token 453: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02978092059493065
    2. '):
' → logprob: -3.529780864715576
    3. '):
' → logprob: -11.154781341552734
    4. ',' → logprob: -11.904781341552734
    5. '   ' → logprob: -12.779781341552734
    6. ' ):' → logprob: -12.904781341552734
    7. ':' → logprob: -13.029781341552734
    8. ')' → logprob: -14.279781341552734
    9. '=' → logprob: -14.529781341552734
    10. '):

' → logprob: -14.904781341552734

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17797121405601501
    2. '=' → logprob: -1.9279712438583374
    3. ':' → logprob: -4.302971363067627
    4. ' =' → logprob: -6.552971363067627
    5. '<|end|>' → logprob: -7.677971363067627
    6. ':return' → logprob: -7.802971363067627
    7. '[' → logprob: -8.552970886230469
    8. ' return' → logprob: -8.802970886230469
    9. '=
' → logprob: -8.927970886230469
    10. '```' → logprob: -8.927970886230469

Token 455: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.44076773524284363
    2. 'return' (adapté à ' return') → logprob: -1.190767765045166
    3. '   ' → logprob: -3.440767765045166
    4. ' ans' → logprob: -3.940767765045166
    5. 'ans' → logprob: -7.315767765045166
    6. '(ans' → logprob: -8.565767288208008
    7. '```' → logprob: -9.190767288208008
    8. '    
' → logprob: -11.940767288208008
    9. '	return' → logprob: -11.940767288208008
    10. '_ans' → logprob: -12.315767288208008

Token 456: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03810448944568634
    2. ' (' → logprob: -3.28810453414917
    3. '(' → logprob: -10.538104057312012
    4. '   ' → logprob: -10.913104057312012
    5. '(answer' → logprob: -11.663104057312012
    6. 'ans' → logprob: -12.038104057312012
    7. ' ans' → logprob: -13.788104057312012
    8. '(an' → logprob: -13.913104057312012
    9. '(max' → logprob: -14.538104057312012
    10. '
' → logprob: -15.288104057312012

Token 457: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.9888433093437925e-05
    2. ' ans' → logprob: -10.625040054321289
    3. '(ans' → logprob: -11.125040054321289
    4. '   ' → logprob: -14.250040054321289
    5. '	ans' → logprob: -15.625040054321289
    6. '_ans' → logprob: -17.87504005432129
    7. 'answer' → logprob: -18.50004005432129
    8. 'Ans' → logprob: -19.50004005432129
    9. '(' → logprob: -20.87504005432129
    10. '       ' → logprob: -21.12504005432129

Token 458: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193095207214355
    2. '+' → logprob: -1.5019309520721436
    3. ' +
' → logprob: -14.376931190490723
    4. ' plus' → logprob: -14.501931190490723
    5. ' ' → logprob: -14.876931190490723
    6. ' ' → logprob: -15.876931190490723
    7. '+
' → logprob: -16.376930236816406
    8. '   ' → logprob: -17.126930236816406
    9. ' +=' → logprob: -17.626930236816406
    10. ')' → logprob: -17.876930236816406

Token 459: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.03804194927215576
    2. 'now' → logprob: -3.2880420684814453
    3. '	now' → logprob: -15.663042068481445
    4. '(now' → logprob: -15.913042068481445
    5. '[now' → logprob: -16.163042068481445
    6. '   ' → logprob: -17.038042068481445
    7. ' ' → logprob: -18.413042068481445
    8. '_now' → logprob: -18.788042068481445
    9. ' ' → logprob: -20.413042068481445
    10. '.now' → logprob: -20.538042068481445

Token 460: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ' )' → logprob: -11.000020027160645
    3. ')%' → logprob: -12.750020027160645
    4. '%' → logprob: -17.125019073486328
    5. '）' → logprob: -19.250019073486328
    6. ')
' → logprob: -19.875019073486328
    7. '}' → logprob: -20.250019073486328
    8. '   ' → logprob: -20.500019073486328
    9. '```' → logprob: -21.000019073486328
    10. '*' → logprob: -21.250019073486328

Token 461: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.575941264629364
    2. '%' → logprob: -0.825941264629364
    3. ')' → logprob: -13.70094108581543
    4. ')%' → logprob: -15.07594108581543
    5. '
' → logprob: -15.57594108581543
    6. ' %=' → logprob: -15.82594108581543
    7. ' ' → logprob: -16.57594108581543
    8. '   ' → logprob: -17.20094108581543
    9. ' ' → logprob: -17.95094108581543
    10. '%
' → logprob: -17.95094108581543

Token 462: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.2729995988775045e-06
    2. ' mod' → logprob: -12.000006675720215
    3. '(mod' → logprob: -19.5000057220459
    4. '	mod' → logprob: -22.0000057220459
    5. 'MOD' → logprob: -22.1250057220459
    6. '   ' → logprob: -24.5000057220459
    7. '```' → logprob: -25.2500057220459
    8. ' мод' → logprob: -25.3750057220459
    9. 'md' → logprob: -25.5000057220459
    10. ' ' → logprob: -25.6250057220459

Token 463: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0430399589240551
    2. '<|end|>' → logprob: -3.4180400371551514
    3. '
' → logprob: -5.918039798736572
    4. ')' → logprob: -6.418039798736572
    5. '#' → logprob: -7.418039798736572
    6. '[' → logprob: -7.668039798736572
    7. '```' → logprob: -7.668039798736572
    8. '_' → logprob: -7.668039798736572
    9. '\' → logprob: -7.918039798736572
    10. '<|end|>' → logprob: -8.29304027557373

Token 465: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003062088042497635
    2. ' solve' → logprob: -6.2530622482299805
    3. 'main' → logprob: -7.1280622482299805
    4. ' def' → logprob: -8.62806224822998
    5. ' calculate' → logprob: -10.12806224822998
    6. ' compute' → logprob: -10.12806224822998
    7. 'solve' → logprob: -10.87806224822998
    8. ' solution' → logprob: -11.50306224822998
    9. 'def' → logprob: -11.75306224822998
    10. ' factorial' → logprob: -11.87806224822998

Token 466: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010843054042197764
    2. '():
' → logprob: -9.25010871887207
    3. '()' → logprob: -12.25010871887207
    4. '(' → logprob: -12.50010871887207
    5. ' ():' → logprob: -12.62510871887207
    6. ':' → logprob: -16.00010871887207
    7. 'def' → logprob: -16.00010871887207
    8. '():

' → logprob: -16.50010871887207
    9. '(":' → logprob: -16.62510871887207
    10. '():
' → logprob: -16.62510871887207

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029718761797994375
    2. ' MOD' → logprob: -7.127971649169922
    3. ' N' → logprob: -7.377971649169922
    4. ' n' → logprob: -7.502971649169922
    5. 'MOD' → logprob: -7.877971649169922
    6. ' import' → logprob: -8.377971649169922
    7. 'import' → logprob: -9.002971649169922
    8. 'n' → logprob: -9.502971649169922
    9. 'N' → logprob: -9.627971649169922
    10. '```' → logprob: -10.252971649169922

Token 468: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.06667453050613403
    2. '   ' → logprob: -3.4416744709014893
    3. ' N' → logprob: -3.4416744709014893
    4. 'MOD' → logprob: -8.19167423248291
    5. 'n' → logprob: -9.31667423248291
    6. ' MOD' → logprob: -10.44167423248291
    7. ' ' → logprob: -10.94167423248291
    8. 'import' → logprob: -11.06667423248291
    9. '
' → logprob: -11.44167423248291
    10. 'X' → logprob: -11.81667423248291

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.493430894101039e-05
    2. ' ,' → logprob: -10.375075340270996
    3. ' =' → logprob: -10.625075340270996
    4. '=' → logprob: -11.000075340270996
    5. ',K' → logprob: -13.625075340270996
    6. ',
' → logprob: -14.250075340270996
    7. ',M' → logprob: -15.000075340270996
    8. ',X' → logprob: -16.25007438659668
    9. ' ' → logprob: -16.50007438659668
    10. 'import' → logprob: -16.75007438659668

Token 470: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.002641175640746951
    2. ' X' → logprob: -6.377641201019287
    3. 'K' → logprob: -7.002641201019287
    4. 'Q' → logprob: -11.502640724182129
    5. 'M' → logprob: -11.627640724182129
    6. ' K' → logprob: -12.377640724182129
    7. 'MOD' → logprob: -13.502640724182129
    8. '   ' → logprob: -13.752640724182129
    9. ' ' → logprob: -13.877640724182129
    10. 'mod' → logprob: -14.877640724182129

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14281395077705383
    2. ' =' → logprob: -2.0178139209747314
    3. ',' → logprob: -8.892813682556152
    4. '=input' → logprob: -14.142813682556152
    5. '=get' → logprob: -15.767813682556152
    6. '=
' → logprob: -15.892813682556152
    7. ')=' → logprob: -16.14281463623047
    8. ')' → logprob: -16.26781463623047
    9. '=int' → logprob: -17.14281463623047
    10. ' =
' → logprob: -17.14281463623047

Token 472: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3136596977710724
    2. 'get' → logprob: -1.31365966796875
    3. ' map' → logprob: -8.06365966796875
    4. 'map' → logprob: -9.43865966796875
    5. '	get' → logprob: -13.18865966796875
    6. ' list' → logprob: -14.93865966796875
    7. 'list' → logprob: -15.31365966796875
    8. ' ' → logprob: -15.31365966796875
    9. '   ' → logprob: -15.93865966796875
    10. '_get' → logprob: -16.18865966796875

Token 473: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0042951651848852634
    2. 'input' → logprob: -5.504295349121094
    3. '()' → logprob: -8.504295349121094
    4. 'int' → logprob: -12.629295349121094
    5. '(' → logprob: -12.754295349121094
    6. '_inputs' → logprob: -12.879295349121094
    7. 'Input' → logprob: -13.504295349121094
    8. '()
' → logprob: -13.879295349121094
    9. ' input' → logprob: -13.879295349121094
    10. '_int' → logprob: -14.629295349121094

Token 474: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.698698704596609e-05
    2. '()
' → logprob: -9.250097274780273
    3. '()

' → logprob: -15.375097274780273
    4. '()`' → logprob: -15.625097274780273
    5. '()]' → logprob: -16.500097274780273
    6. '()\' → logprob: -16.500097274780273
    7. '()"' → logprob: -16.625097274780273
    8. '()
' → logprob: -16.750097274780273
    9. ' ()' → logprob: -16.875097274780273
    10. '():' → logprob: -17.250097274780273

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060698105953633785
    2. 'MOD' → logprob: -5.381069660186768
    3. '
' → logprob: -7.506069660186768
    4. ' MOD' → logprob: -8.006070137023926
    5. 'mod' → logprob: -8.256070137023926
    6. '```' → logprob: -8.381070137023926
    7. '    
' → logprob: -9.881070137023926
    8. ' mod' → logprob: -12.006070137023926
    9. '	mod' → logprob: -12.381070137023926
    10. '(mod' → logprob: -12.631070137023926

Token 476: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.07485181838274002
    2. ' MOD' → logprob: -3.0748517513275146
    3. '   ' → logprob: -3.9498517513275146
    4. 'mod' (adapté à ' mod') → logprob: -5.074851989746094
    5. ' mod' → logprob: -7.949851989746094
    6. '```' → logprob: -10.449851989746094
    7. '
' → logprob: -11.699851989746094
    8. ' ' → logprob: -12.199851989746094
    9. '    
' → logprob: -13.199851989746094
    10. '.MOD' → logprob: -13.449851989746094

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014167149551212788
    2. '=' → logprob: -4.264167308807373
    3. ',' → logprob: -12.639166831970215
    4. '   ' → logprob: -15.389166831970215
    5. ' =
' → logprob: -16.13916778564453
    6. 'MOD' → logprob: -17.01416778564453
    7. ' ' → logprob: -17.38916778564453
    8. '  ' → logprob: -18.26416778564453
    9. '=int' → logprob: -19.01416778564453
    10. ' =)' → logprob: -19.01416778564453

Token 478: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006835664622485638
    2. '100' → logprob: -5.006835460662842
    3. ' ' → logprob: -9.3818359375
    4. '998' → logprob: -10.3818359375
    5. '1' → logprob: -12.3818359375
    6. '   ' → logprob: -14.6318359375
    7. 'int' → logprob: -15.3818359375
    8. '(' → logprob: -16.1318359375
    9. '１０' → logprob: -17.1318359375
    10. '999' → logprob: -17.8818359375

Token 479: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009418165311217308
    2. '100' → logprob: -4.75941801071167
    3. '998' → logprob: -7.13441801071167
    4. '(' → logprob: -12.884418487548828
    5. '1' → logprob: -13.259418487548828
    6. 'int' → logprob: -13.634418487548828
    7. 'pow' → logprob: -15.509418487548828
    8. ' ' → logprob: -15.759418487548828
    9. '１０' → logprob: -16.009418487548828
    10. '999' → logprob: -17.384418487548828

Token 480: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. '247' → logprob: -15.375000953674316
    4. '245' → logprob: -16.875
    5. '444' → logprob: -17.375
    6. '457' → logprob: -17.5
    7. '```' → logprob: -17.5
    8. '243' → logprob: -17.625
    9. '254' → logprob: -18.5
    10. '257' → logprob: -18.875

Token 481: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.00015622020873706788
    2. '357' → logprob: -9.50015640258789
    3. '853' → logprob: -9.50015640258789
    4. '857' → logprob: -12.50015640258789
    5. '257' → logprob: -14.00015640258789
    6. '```' → logprob: -14.62515640258789
    7. '7' → logprob: -15.25015640258789
    8. '457' → logprob: -15.62515640258789
    9. '3' → logprob: -15.62515640258789
    10. '273' → logprob: -16.12515640258789

Token 482: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2889080345630646
    2. '
' → logprob: -1.4139080047607422
    3. '    
' → logprob: -5.663908004760742
    4. 'fac' → logprob: -5.788908004760742
    5. 'factor' → logprob: -7.538908004760742
    6. ',' → logprob: -8.163908004760742
    7. '```' → logprob: -9.663908004760742
    8. ',
' → logprob: -9.663908004760742
    9. '
' → logprob: -10.038908004760742
    10. 'f' → logprob: -10.413908004760742

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01712077669799328
    2. 'fac' → logprob: -4.642120838165283
    3. ' factorial' → logprob: -5.392120838165283
    4. 'factor' → logprob: -6.142120838165283
    5. ' fac' → logprob: -8.017120361328125
    6. '_fac' → logprob: -9.642120361328125
    7. 'fact' → logprob: -9.892120361328125
    8. '    
' → logprob: -10.142120361328125
    9. '```' → logprob: -10.642120361328125
    10. '.fac' → logprob: -10.892120361328125

Token 484: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' (adapté à ' fac') → logprob: -0.014484427869319916
    2. 'factor' → logprob: -4.764484405517578
    3. ' fac' → logprob: -5.639484405517578
    4. '   ' → logprob: -7.014484405517578
    5. ' factorial' → logprob: -7.014484405517578
    6. 'fact' → logprob: -7.764484405517578
    7. 'facet' → logprob: -10.764484405517578
    8. 'f' → logprob: -11.764484405517578
    9. 'n' → logprob: -12.014484405517578
    10. 'fas' → logprob: -12.264484405517578

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002707529056351632
    2. 's' → logprob: -8.62527084350586
    3. ' =' → logprob: -10.37527084350586
    4. ',n' → logprob: -10.75027084350586
    5. ' ,' → logprob: -10.87527084350586
    6. '=' → logprob: -11.12527084350586
    7. '_,' → logprob: -12.75027084350586
    8. ',N' → logprob: -14.25027084350586
    9. 't' → logprob: -14.87527084350586
    10. '   ' → logprob: -15.62527084350586

Token 486: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.16032424569129944
    2. ' inv' → logprob: -1.910324215888977
    3. 'in' → logprob: -9.285324096679688
    4. '(inv' → logprob: -12.410324096679688
    5. ' ' → logprob: -13.660324096679688
    6. '_inv' → logprob: -14.410324096679688
    7. ' in' → logprob: -14.535324096679688
    8. ' =' → logprob: -15.160324096679688
    9. '<|end|>' → logprob: -16.035324096679688
    10. '=' → logprob: -16.535324096679688

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048608142882585526
    2. ' =' → logprob: -3.0486080646514893
    3. ',' → logprob: -10.79860782623291
    4. '＝' → logprob: -16.423608779907227
    5. 's' → logprob: -16.798608779907227
    6. '=

' → logprob: -16.798608779907227
    7. ')' → logprob: -17.173608779907227
    8. '   ' → logprob: -17.548608779907227
    9. '<|end|>' → logprob: -17.548608779907227
    10. '=
' → logprob: -17.923608779907227

Token 488: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.1602281779050827
    2. ' compute' → logprob: -1.9102281332015991
    3. '   ' → logprob: -13.03522777557373
    4. '.compute' → logprob: -14.66022777557373
    5. '_compute' → logprob: -14.91022777557373
    6. ' ' → logprob: -15.03522777557373
    7. '
' → logprob: -15.66022777557373
    8. '  ' → logprob: -15.78522777557373
    9. '(com' → logprob: -16.410228729248047
    10. 'comput' → logprob: -16.535228729248047

Token 489: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.3425219549390022e-05
    2. 'factor' → logprob: -12.12501335144043
    3. '_fac' → logprob: -12.37501335144043
    4. '_fact' → logprob: -12.75001335144043
    5. '(f' → logprob: -14.87501335144043
    6. 's' → logprob: -16.25001335144043
    7. '\' → logprob: -16.37501335144043
    8. ' factorial' → logprob: -16.50001335144043
    9. '```' → logprob: -16.62501335144043
    10. '(_' → logprob: -16.87501335144043

Token 490: 'ials' (ID: 16596)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.01914321444928646
    2. 'factor' → logprob: -4.269143104553223
    3. 's' → logprob: -6.394143104553223
    4. 'ials' → logprob: -7.144143104553223
    5. 'als' → logprob: -7.269143104553223
    6. 'al' → logprob: -7.769143104553223
    7. 'ial' → logprob: -8.019143104553223
    8. ' factorial' → logprob: -8.269143104553223
    9. 'ator' → logprob: -8.394143104553223
    10. 't' → logprob: -9.144143104553223

Token 491: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0005262265913188457
    2. '(N' → logprob: -7.875526428222656
    3. 'and' → logprob: -9.250526428222656
    4. 's' → logprob: -10.750526428222656
    5. ' and' → logprob: -11.125526428222656
    6. '(' → logprob: -12.875526428222656
    7. 'And' → logprob: -13.000526428222656
    8. '_' → logprob: -13.375526428222656
    9. '(n' → logprob: -13.375526428222656
    10. '_AND' → logprob: -13.375526428222656

Token 492: '_in' (ID: 2267)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03910418599843979
    2. 'inv' → logprob: -3.2891042232513428
    3. 'ins' → logprob: -8.039104461669922
    4. 'n' → logprob: -8.414104461669922
    5. '(n' → logprob: -9.539104461669922
    6. 'ivs' → logprob: -9.664104461669922
    7. 'vs' → logprob: -10.039104461669922
    8. '(' → logprob: -10.164104461669922
    9. '   ' → logprob: -10.289104461669922
    10. '[' → logprob: -10.539104461669922

Token 493: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -6.372916686814278e-05
    2. 'v' → logprob: -10.3750638961792
    3. 'fs' → logprob: -10.3750638961792
    4. '(N' → logprob: -14.3750638961792
    5. 's' → logprob: -16.000062942504883
    6. '(' → logprob: -16.125062942504883
    7. '[' → logprob: -16.375062942504883
    8. 'gs' → logprob: -17.125062942504883
    9. 'xs' → logprob: -17.125062942504883
    10. 'rs' → logprob: -17.250062942504883

Token 494: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.028536492725834e-05
    2. '(' → logprob: -9.625070571899414
    3. 'N' → logprob: -13.000070571899414
    4. ' (' → logprob: -13.875070571899414
    5. '(n' → logprob: -14.250070571899414
    6. '(X' → logprob: -16.125070571899414
    7. '<|end|>' → logprob: -16.625070571899414
    8. '(
' → logprob: -16.750070571899414
    9. ' N' → logprob: -17.500070571899414
    10. '(len' → logprob: -17.750070571899414

Token 495: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011319868644932285
    2. ')' → logprob: -10.000113487243652
    3. ' ,' → logprob: -11.000113487243652
    4. ',N' → logprob: -11.125113487243652
    5. '   ' → logprob: -11.250113487243652
    6. '+' → logprob: -11.375113487243652
    7. '```' → logprob: -12.500113487243652
    8. '(N' → logprob: -12.625113487243652
    9. ',
' → logprob: -13.375113487243652
    10. '<|end|>' → logprob: -14.625113487243652

Token 496: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.32328200340271
    2. '2' → logprob: -1.44828200340271
    3. '10' → logprob: -1.57328200340271
    4. 'X' → logprob: -2.19828200340271
    5. 'N' → logprob: -2.82328200340271
    6. '5' → logprob: -3.07328200340271
    7. '3' → logprob: -3.82328200340271
    8. '20' → logprob: -3.94828200340271
    9. '100' → logprob: -4.323282241821289
    10. '4' → logprob: -5.573282241821289

Token 497: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2408661842346191
    2. 'N' → logprob: -1.6158661842346191
    3. '10' → logprob: -1.6158661842346191
    4. '2' → logprob: -2.115866184234619
    5. 'X' → logprob: -2.115866184234619
    6. '5' → logprob: -3.490866184234619
    7. '3' → logprob: -4.115866184234619
    8. '100' → logprob: -4.490866184234619
    9. '20' → logprob: -5.115866184234619
    10. '50' → logprob: -5.990866184234619

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -12.000008583068848
    3. ')' → logprob: -14.375008583068848
    4. '```' → logprob: -14.625008583068848
    5. '   ' → logprob: -15.125008583068848
    6. '+' → logprob: -16.12500762939453
    7. '1' → logprob: -16.25000762939453
    8. ',
' → logprob: -16.25000762939453
    9. ',N' → logprob: -16.37500762939453
    10. '‌,' → logprob: -16.37500762939453

Token 499: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02975083328783512
    2. ' mod' → logprob: -3.5297508239746094
    3. '	mod' → logprob: -15.65475082397461
    4. '   ' → logprob: -15.77975082397461
    5. '(mod' → logprob: -18.27975082397461
    6. ' ' → logprob: -18.65475082397461
    7. '998' → logprob: -18.77975082397461
    8. '    ' → logprob: -20.02975082397461
    9. ' мод' → logprob: -20.02975082397461
    10. '
' → logprob: -20.15475082397461

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')

' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. '),' → logprob: -18.625
    7. '<|end|>' → logprob: -19.25
    8. '))' → logprob: -19.5
    9. ' ' → logprob: -19.625
    10. ');' → logprob: -19.875

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012368950992822647
    2. '
' → logprob: -7.376236915588379
    3. '<|end|>' → logprob: -8.126236915588379
    4. '```' → logprob: -8.876236915588379
    5. '    
' → logprob: -9.001236915588379
    6. ' ans' → logprob: -10.751236915588379
    7. '	ans' → logprob: -11.876236915588379
    8. 'ans' → logprob: -12.876236915588379
    9. '<|end|>' → logprob: -13.126236915588379
    10. '(ans' → logprob: -13.126236915588379

Token 502: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3005189299583435
    2. 'ans' (adapté à ' ans') → logprob: -2.0505189895629883
    3. ' ans' → logprob: -2.1755189895629883
    4. 'answer' → logprob: -4.550518989562988
    5. 'one' → logprob: -6.175518989562988
    6. '```' → logprob: -6.175518989562988
    7. '	ans' → logprob: -6.675518989562988
    8. ' answer' → logprob: -7.300518989562988
    9. '(ans' → logprob: -8.550518989562988
    10. ' one' → logprob: -8.925518989562988

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602257490158081
    2. '=' → logprob: -1.910225749015808
    3. ',' → logprob: -13.410225868225098
    4. ' ' → logprob: -17.03522491455078
    5. ' =
' → logprob: -17.16022491455078
    6. '＝' → logprob: -17.91022491455078
    7. '  ' → logprob: -18.78522491455078
    8. ')' → logprob: -19.16022491455078
    9. ' ,' → logprob: -19.16022491455078
    10. ' =)' → logprob: -19.16022491455078

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.375096321105957
    4. '۰' → logprob: -17.250097274780273
    5. '  ' → logprob: -18.125097274780273
    6. '1' → logprob: -18.125097274780273
    7. '
' → logprob: -18.375097274780273
    8. '０' → logprob: -18.500097274780273
    9. ' ' → logprob: -18.625097274780273
    10. '```' → logprob: -18.937597274780273

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '1' → logprob: -16.875
    4. '(' → logprob: -19.3125
    5. '```' → logprob: -19.3125
    6. '۰' → logprob: -19.4375
    7. '   ' → logprob: -19.625
    8. '000' → logprob: -20.1875
    9. '０' → logprob: -20.75
    10. '00' → logprob: -20.875

Token 506: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.660276472568512
    2. '
' → logprob: -0.785276472568512
    3. '    
' → logprob: -3.910276412963867
    4. '	
' → logprob: -6.160276412963867
    5. '```' → logprob: -6.785276412963867
    6. '<|end|>' → logprob: -6.785276412963867
    7. ' for' → logprob: -7.285276412963867
    8. '  
' → logprob: -7.660276412963867
    9. 'for' → logprob: -7.785276412963867
    10. '	for' → logprob: -7.910276412963867

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00888376496732235
    2. ' for' → logprob: -5.008883953094482
    3. '```' → logprob: -7.383883953094482
    4. ' one' → logprob: -8.008883476257324
    5. '    
' → logprob: -8.133883476257324
    6. 'one' → logprob: -8.258883476257324
    7. 'for' → logprob: -8.383883476257324
    8. '	for' → logprob: -9.008883476257324
    9. '<|end|>' → logprob: -9.133883476257324
    10. ',' → logprob: -9.633883476257324

Token 508: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19754190742969513
    2. '   ' → logprob: -1.9475419521331787
    3. ' for' → logprob: -3.9475419521331787
    4. 'one' → logprob: -4.0725417137146
    5. ' one' → logprob: -8.447542190551758
    6. '```' → logprob: -10.447542190551758
    7. '	for' → logprob: -10.572542190551758
    8. '  ' → logprob: -11.822542190551758
    9. ' ' → logprob: -11.822542190551758
    10. '    
' → logprob: -12.947542190551758

Token 509: ' two' (ID: 1920)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.25687023997306824
    2. 'one' → logprob: -1.5068702697753906
    3. ' zero' → logprob: -6.381870269775391
    4. ' two' → logprob: -6.631870269775391
    5. ' i' → logprob: -7.506870269775391
    6. 'two' → logprob: -7.881870269775391
    7. 'zero' → logprob: -8.25687026977539
    8. ' ' → logprob: -8.75687026977539
    9. 'i' → logprob: -9.13187026977539
    10. '   ' → logprob: -9.50687026977539

Token 510: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.523347795009613
    2. 'in' → logprob: -0.898347795009613
    3. ',' → logprob: -9.023347854614258
    4. '   ' → logprob: -10.148347854614258
    5. ' ' → logprob: -10.523347854614258
    6. 'count' → logprob: -11.898347854614258
    7. '	in' → logprob: -12.023347854614258
    8. '_in' → logprob: -12.023347854614258
    9. '```' → logprob: -12.273347854614258
    10. '=' → logprob: -13.148347854614258

Token 511: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38689130544662476
    2. ' range' → logprob: -1.1368913650512695
    3. '(range' → logprob: -11.51189136505127
    4. '   ' → logprob: -13.01189136505127
    5. ' in' → logprob: -13.01189136505127
    6. '	range' → logprob: -13.01189136505127
    7. ' ' → logprob: -13.38689136505127
    8. 'in' → logprob: -14.26189136505127
    9. ')' → logprob: -14.88689136505127
    10. '0' → logprob: -15.01189136505127

Token 512: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2015441358089447
    2. '(N' → logprob: -1.701544165611267
    3. '(X' → logprob: -10.201543807983398
    4. '((' → logprob: -10.576543807983398
    5. '0' → logprob: -10.701543807983398
    6. '(
' → logprob: -10.951543807983398
    7. ' (' → logprob: -11.451543807983398
    8. ',' → logprob: -11.451543807983398
    9. '(n' → logprob: -12.951543807983398
    10. '(T' → logprob: -14.326543807983398

Token 513: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5250568985939026
    2. ' +' → logprob: -0.9000568985939026
    3. '   ' → logprob: -7.275056838989258
    4. '):
' → logprob: -7.775056838989258
    5. '):' → logprob: -7.775056838989258
    6. ',' → logprob: -7.900056838989258
    7. ' +
' → logprob: -12.650056838989258
    8. ' ' → logprob: -12.900056838989258
    9. '+
' → logprob: -13.150056838989258
    10. '<|end|>' → logprob: -13.150056838989258

Token 514: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002060436672763899
    2. ' ' → logprob: -8.500205993652344
    3. '2' → logprob: -13.000205993652344
    4. '   ' → logprob: -15.625205993652344
    5. '
' → logprob: -17.875205993652344
    6. '3' → logprob: -18.000205993652344
    7. '0' → logprob: -18.500205993652344
    8. '  ' → logprob: -18.750205993652344
    9. '１' → logprob: -19.187705993652344
    10. '(' → logprob: -19.312705993652344

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -14.375012397766113
    4. '   ' → logprob: -16.500011444091797
    5. '１' → logprob: -17.875011444091797
    6. '  ' → logprob: -19.000011444091797
    7. '۱' → logprob: -19.062511444091797
    8. '3' → logprob: -19.187511444091797
    9. '0' → logprob: -19.437511444091797
    10. '
' → logprob: -19.875011444091797

Token 516: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003662191331386566
    2. ':' → logprob: -6.253662109375
    3. '):
' → logprob: -6.378662109375
    4. '   ' → logprob: -11.378662109375
    5. '():' → logprob: -11.753662109375
    6. ',' → logprob: -12.378662109375
    7. ']:' → logprob: -13.003662109375
    8. '}:' → logprob: -13.128662109375
    9. '):
' → logprob: -13.628662109375
    10. ')' → logprob: -13.753662109375

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2590227425098419
    2. '   ' → logprob: -2.3840227127075195
    3. ':' → logprob: -2.6340227127075195
    4. '<|end|>' → logprob: -3.5090227127075195
    5. '    ' → logprob: -4.3840227127075195
    6. ' for' → logprob: -4.5090227127075195
    7. ' ' → logprob: -5.3840227127075195
    8. ',' → logprob: -6.6340227127075195
    9. '```' → logprob: -7.3840227127075195
    10. '        
' → logprob: -7.5090227127075195

Token 518: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08209294080734253
    2. '       ' → logprob: -3.0820930004119873
    3. '   ' → logprob: -4.082092761993408
    4. 'for' (adapté à ' for') → logprob: -4.957092761993408
    5. ' one' → logprob: -4.957092761993408
    6. '	for' → logprob: -6.457092761993408
    7. 'one' → logprob: -8.957093238830566
    8. ' ' → logprob: -9.457093238830566
    9. '	   ' → logprob: -9.832093238830566
    10. '    ' → logprob: -9.832093238830566

Token 519: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.5761239528656006
    2. ' one' → logprob: -0.8261239528656006
    3. '   ' → logprob: -9.32612419128418
    4. 'zero' → logprob: -9.70112419128418
    5. ' zero' → logprob: -10.82612419128418
    6. '(one' → logprob: -12.20112419128418
    7. ' ' → logprob: -12.57612419128418
    8. '```' → logprob: -13.20112419128418
    9. '_one' → logprob: -13.70112419128418
    10. 'One' → logprob: -14.32612419128418

Token 520: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007345817284658551
    2. 'in' → logprob: -7.250734806060791
    3. ' ' → logprob: -10.750734329223633
    4. '	in' → logprob: -13.125734329223633
    5. '    ' → logprob: -14.875734329223633
    6. ' ' → logprob: -15.750734329223633
    7. '	' → logprob: -15.750734329223633
    8. 'space' → logprob: -15.875734329223633
    9. '        ' → logprob: -16.125734329223633
    10. '  ' → logprob: -16.500734329223633

Token 521: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01820824109017849
    2. 'range' → logprob: -4.018208026885986
    3. ' in' → logprob: -10.143208503723145
    4. ' ' → logprob: -11.768208503723145
    5. '(range' → logprob: -12.143208503723145
    6. '0' → logprob: -12.643208503723145
    7. ' two' → logprob: -13.518208503723145
    8. 'in' → logprob: -14.018208503723145
    9. '(' → logprob: -15.393208503723145
    10. '	range' → logprob: -15.768208503723145

Token 522: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004149037878960371
    2. ' (' → logprob: -6.004148960113525
    3. '(' → logprob: -6.754148960113525
    4. ' N' → logprob: -7.879148960113525
    5. '(two' → logprob: -10.254149436950684
    6. ' two' → logprob: -10.754149436950684
    7. '0' → logprob: -10.754149436950684
    8. 'N' → logprob: -10.879149436950684
    9. ' ' → logprob: -11.129149436950684
    10. 'two' → logprob: -12.254149436950684

Token 523: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.21596714854240417
    2. ' -' → logprob: -2.2159671783447266
    3. '+' → logprob: -2.4659671783447266
    4. '-' → logprob: -8.590967178344727
    5. '   ' → logprob: -9.840967178344727
    6. ' ' → logprob: -11.465967178344727
    7. ' two' → logprob: -12.090967178344727
    8. '	' → logprob: -13.215967178344727
    9. ' plus' → logprob: -13.715967178344727
    10. '-two' → logprob: -13.715967178344727

Token 524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008853754960000515
    2. ' ' → logprob: -4.883853912353516
    3. ' two' → logprob: -7.758853912353516
    4. 'two' → logprob: -7.758853912353516
    5. '2' → logprob: -8.258853912353516
    6. ' -' → logprob: -9.758853912353516
    7. '   ' → logprob: -11.133853912353516
    8. '(two' → logprob: -11.258853912353516
    9. '+' → logprob: -11.758853912353516
    10. 'N' → logprob: -12.133853912353516

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003213997988495976
    2. ' ' → logprob: -8.875321388244629
    3. 'two' → logprob: -9.000321388244629
    4. '2' → logprob: -10.000321388244629
    5. ' two' → logprob: -12.250321388244629
    6. '+' → logprob: -12.875321388244629
    7. ' -' → logprob: -13.375321388244629
    8. 'one' → logprob: -13.500321388244629
    9. '0' → logprob: -14.250321388244629
    10. '
' → logprob: -14.750321388244629

Token 526: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06270119547843933
    2. '):
' → logprob: -2.9377012252807617
    3. ' -' → logprob: -5.562701225280762
    4. '+' → logprob: -6.812701225280762
    5. '       ' → logprob: -7.312701225280762
    6. '   ' → logprob: -7.437701225280762
    7. ' +' → logprob: -7.687701225280762
    8. '():' → logprob: -8.187701225280762
    9. '[' → logprob: -8.437701225280762
    10. '           ' → logprob: -9.187701225280762

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010265006683766842
    2. '<|end|>' → logprob: -4.885264873504639
    3. '	       ' → logprob: -7.260264873504639
    4. '		' → logprob: -8.010265350341797
    5. '<|end|>' → logprob: -8.260265350341797
    6. '[' → logprob: -8.385265350341797
    7. ' if' → logprob: -8.510265350341797
    8. '               ' → logprob: -8.510265350341797
    9. '       ' → logprob: -8.635265350341797
    10. '```' → logprob: -9.010265350341797

Token 528: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20997203886508942
    2. '           ' → logprob: -2.0849721431732178
    3. '               ' → logprob: -2.8349721431732178
    4. 'if' (adapté à ' if') → logprob: -5.334971904754639
    5. ' ' → logprob: -7.209971904754639
    6. '       ' → logprob: -7.584971904754639
    7. ' ' → logprob: -9.584972381591797
    8. '   ' → logprob: -9.834972381591797
    9. '            ' → logprob: -9.959972381591797
    10. '		' → logprob: -10.709972381591797

Token 529: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.004260276909917593
    2. ' should' → logprob: -5.504260063171387
    3. '           ' → logprob: -9.754260063171387
    4. 'one' → logprob: -10.129260063171387
    5. '   ' → logprob: -10.379260063171387
    6. '               ' → logprob: -10.629260063171387
    7. 'two' → logprob: -11.129260063171387
    8. 'not' → logprob: -11.629260063171387
    9. ' one' → logprob: -13.754260063171387
    10. ' two' → logprob: -14.129260063171387

Token 530: '_break' (ID: 98301)
  Prédit: '_break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -5.676981345459353e-06
    2. '_continue' → logprob: -12.750005722045898
    3. 'break' → logprob: -13.125005722045898
    4. '_' → logprob: -15.125005722045898
    5. '_not' → logprob: -16.1250057220459
    6. '_b' → logprob: -16.6250057220459
    7. '_stop' → logprob: -16.7500057220459
    8. '_have' → logprob: -17.0000057220459
    9. '_fail' → logprob: -17.5000057220459
    10. '_BREAK' → logprob: -17.8750057220459

Token 531: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.0054268003441393375
    2. '(two' → logprob: -5.25542688369751
    3. '(' → logprob: -8.755426406860352
    4. ' (' → logprob: -10.255426406860352
    5. '   ' → logprob: -16.13042640686035
    6. '(
' → logprob: -16.75542640686035
    7. '((' → logprob: -18.25542640686035
    8. '(the' → logprob: -18.38042640686035
    9. ' ' → logprob: -18.75542640686035
    10. '(not' → logprob: -19.00542640686035

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018458699923940003
    2. ' ,' → logprob: -8.625185012817383
    3. ',
' → logprob: -12.875185012817383
    4. '   ' → logprob: -14.375185012817383
    5. '‌,' → logprob: -14.750185012817383
    6. '<|end|>' → logprob: -14.875185012817383
    7. ' ' → logprob: -15.750185012817383
    8. '           ' → logprob: -15.875185012817383
    9. '‍,' → logprob: -16.500185012817383
    10. '               ' → logprob: -17.000185012817383

Token 533: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.01815052703022957
    2. ' two' → logprob: -4.018150329589844
    3. '(two' → logprob: -15.143150329589844
    4. 'tw' → logprob: -16.143150329589844
    5. '   ' → logprob: -16.393150329589844
    6. '.two' → logprob: -17.143150329589844
    7. '           ' → logprob: -17.893150329589844
    8. ' ' → logprob: -17.893150329589844
    9. '_two' → logprob: -18.018150329589844
    10. '               ' → logprob: -18.393150329589844

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2023725062608719
    2. '):' → logprob: -1.7023725509643555
    3. '):
' → logprob: -7.8273725509643555
    4. ')' → logprob: -7.9523725509643555
    5. ' ,' → logprob: -9.827372550964355
    6. ',N' → logprob: -10.202372550964355
    7. ':' → logprob: -10.327372550964355
    8. '   ' → logprob: -10.452372550964355
    9. '(one' → logprob: -10.952372550964355
    10. 'one' → logprob: -12.202372550964355

Token 535: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033558503491804004
    2. ' N' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.375335693359375
    4. '	N' → logprob: -17.125335693359375
    5. '           ' → logprob: -19.125335693359375
    6. '>N' → logprob: -20.750335693359375
    7. '[N' → logprob: -20.875335693359375
    8. '
' → logprob: -21.375335693359375
    9. ')' → logprob: -21.375335693359375
    10. '    ' → logprob: -21.750335693359375

Token 536: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1604582965373993
    2. '):' → logprob: -1.9104583263397217
    3. '           ' → logprob: -9.4104585647583
    4. '               ' → logprob: -9.7854585647583
    5. ':' → logprob: -10.2854585647583
    6. '):
' → logprob: -10.4104585647583
    7. ':
' → logprob: -11.1604585647583
    8. '():
' → logprob: -11.6604585647583
    9. ')' → logprob: -12.2854585647583
    10. '):

' → logprob: -13.7854585647583

Token 537: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011093381908722222
    2. ':' → logprob: -10.500110626220703
    3. '                   ' → logprob: -10.625110626220703
    4. '           ' → logprob: -11.250110626220703
    5. '			' → logprob: -11.875110626220703
    6. '       ' → logprob: -12.125110626220703
    7. '	           ' → logprob: -12.125110626220703
    8. '                       ' → logprob: -12.500110626220703
    9. '<|end|>' → logprob: -12.500110626220703
    10. '                
' → logprob: -12.750110626220703

Token 538: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26376786828041077
    2. '                   ' → logprob: -1.5137678384780884
    3. 'break' (adapté à ' break') → logprob: -4.763767719268799
    4. ' break' → logprob: -5.763767719268799
    5. '   ' → logprob: -10.638768196105957
    6. '                       ' → logprob: -10.888768196105957
    7. '           ' → logprob: -11.138768196105957
    8. '	break' → logprob: -11.263768196105957
    9. '       ' → logprob: -11.763768196105957
    10. 'continue' → logprob: -12.013768196105957

Token 539: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032797686755657196
    2. '            
' → logprob: -4.032797813415527
    3. '
' → logprob: -4.907797813415527
    4. '		' → logprob: -5.532797813415527
    5. '<|end|>' → logprob: -6.907797813415527
    6. ' 
' → logprob: -8.157797813415527
    7. '			
' → logprob: -8.157797813415527
    8. '    
' → logprob: -8.157797813415527
    9. '  
' → logprob: -8.282797813415527
    10. '        
' → logprob: -8.407797813415527

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06585060805082321
    2. '		' → logprob: -3.8158504962921143
    3. '            
' → logprob: -4.065850734710693
    4. '<|end|>' → logprob: -4.940850734710693
    5. '       ' → logprob: -5.940850734710693
    6. '        
' → logprob: -6.190850734710693
    7. '	' → logprob: -6.190850734710693
    8. '
' → logprob: -6.315850734710693
    9. '	       ' → logprob: -6.690850734710693
    10. '		
' → logprob: -6.690850734710693

Token 541: ' dist' (ID: 3601)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3383864760398865
    2. 'dist' (adapté à ' dist') → logprob: -1.3383865356445312
    3. '       ' → logprob: -3.9633865356445312
    4. ' dist' → logprob: -5.713386535644531
    5. '               ' → logprob: -6.213386535644531
    6. '   ' → logprob: -8.963386535644531
    7. '```' → logprob: -9.838386535644531
    8. 'if' → logprob: -9.963386535644531
    9. '	dist' → logprob: -9.963386535644531
    10. '          ' → logprob: -10.213386535644531

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011057606898248196
    2. '=' → logprob: -4.511057376861572
    3. ' ==' → logprob: -11.88605785369873
    4. ',' → logprob: -13.76105785369873
    5. ' ' → logprob: -14.88605785369873
    6. ')' → logprob: -15.26105785369873
    7. ' >' → logprob: -15.51105785369873
    8. '>' → logprob: -15.63605785369873
    9. ' =
' → logprob: -16.261056900024414
    10. ' =)' → logprob: -16.386056900024414

Token 543: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0003445216570980847
    2. ' get' → logprob: -8.000344276428223
    3. 'one' → logprob: -11.625344276428223
    4. '(get' → logprob: -16.62534523010254
    5. '	get' → logprob: -16.75034523010254
    6. ' one' → logprob: -17.12534523010254
    7. '=get' → logprob: -18.12534523010254
    8. '_get' → logprob: -19.00034523010254
    9. '[get' → logprob: -19.00034523010254
    10. 'two' → logprob: -19.12534523010254

Token 544: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.005613761488348246
    2. 'dist' → logprob: -5.505613803863525
    3. 'one' → logprob: -6.630613803863525
    4. '(one' → logprob: -9.255613327026367
    5. 'now' → logprob: -10.005613327026367
    6. '_now' → logprob: -10.380613327026367
    7. '_one' → logprob: -10.630613327026367
    8. 'zero' → logprob: -12.130613327026367
    9. '_zero' → logprob: -12.380613327026367
    10. '_distance' → logprob: -12.755613327026367

Token 545: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -5.796184723294573e-06
    2. '(two' → logprob: -12.375005722045898
    3. '(' → logprob: -13.500005722045898
    4. 'one' → logprob: -15.750005722045898
    5. ' (' → logprob: -19.3750057220459
    6. '(
' → logprob: -20.3750057220459
    7. '```' → logprob: -20.5000057220459
    8. ' one' → logprob: -21.5000057220459
    9. '(on' → logprob: -21.6250057220459
    10. '_one' → logprob: -21.7500057220459

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001010538311675191
    2. ',t' → logprob: -7.001010417938232
    3. ' ,' → logprob: -9.25101089477539
    4. '```' → logprob: -14.00101089477539
    5. ',
' → logprob: -14.62601089477539
    6. '   ' → logprob: -14.75101089477539
    7. '(two' → logprob: -15.00101089477539
    8. '‌,' → logprob: -15.87601089477539
    9. '           ' → logprob: -16.00101089477539
    10. '`,' → logprob: -16.12601089477539

Token 547: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.014165391214191914
    2. ' two' → logprob: -4.26416540145874
    3. '(two' → logprob: -13.389164924621582
    4. '.two' → logprob: -15.889164924621582
    5. '   ' → logprob: -16.1391658782959
    6. ' ' → logprob: -17.0141658782959
    7. '_two' → logprob: -17.2641658782959
    8. 'tw' → logprob: -17.5141658782959
    9. '2' → logprob: -17.8891658782959
    10. '```' → logprob: -18.8891658782959

Token 548: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02454109489917755
    2. ',' → logprob: -4.149540901184082
    3. ')
' → logprob: -4.774540901184082
    4. ' ,' → logprob: -11.899540901184082
    5. ' )' → logprob: -12.274540901184082
    6. '           ' → logprob: -12.649540901184082
    7. ',
' → logprob: -12.649540901184082
    8. '   ' → logprob: -13.024540901184082
    9. '),' → logprob: -13.399540901184082
    10. ')
' → logprob: -13.649540901184082

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06217863783240318
    2. '<|end|>' → logprob: -3.687178611755371
    3. '```' → logprob: -4.562178611755371
    4. ' if' → logprob: -4.812178611755371
    5. '       ' → logprob: -5.562178611755371
    6. '   ' → logprob: -5.562178611755371
    7. '<|end|>' → logprob: -6.312178611755371
    8. '            
' → logprob: -6.312178611755371
    9. '               ' → logprob: -7.312178611755371
    10. '
' → logprob: -7.312178611755371

Token 550: ' zero' (ID: 12421)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1251404732465744
    2. ' if' → logprob: -2.375140428543091
    3. 'if' → logprob: -3.750140428543091
    4. '```' → logprob: -7.37514066696167
    5. '       ' → logprob: -8.750140190124512
    6. '   ' → logprob: -9.000140190124512
    7. '		' → logprob: -9.500140190124512
    8. '               ' → logprob: -10.000140190124512
    9. '	if' → logprob: -11.000140190124512
    10. 'X' → logprob: -11.625140190124512

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5524827837944031
    2. '=' → logprob: -0.9274827837944031
    3. ',' → logprob: -3.552482843399048
    4. ')' → logprob: -8.802482604980469
    5. ' ,' → logprob: -9.927482604980469
    6. 's' → logprob: -10.927482604980469
    7. '>' → logprob: -11.427482604980469
    8. ' ==' → logprob: -11.552482604980469
    9. '   ' → logprob: -12.052482604980469
    10. '```' → logprob: -12.302482604980469

Token 552: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0009118211455643177
    2. ' get' → logprob: -7.000911712646484
    3. '(get' → logprob: -15.250911712646484
    4. '=get' → logprob: -17.250911712646484
    5. '	get' → logprob: -17.375911712646484
    6. '0' → logprob: -17.625911712646484
    7. '[get' → logprob: -17.750911712646484
    8. '   ' → logprob: -18.125911712646484
    9. '.get' → logprob: -18.250911712646484
    10. 'mod' → logprob: -19.375911712646484

Token 553: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -3.368984107510187e-05
    2. 'zero' → logprob: -10.375033378601074
    3. '_dist' → logprob: -13.500033378601074
    4. '_now' → logprob: -15.125033378601074
    5. '_' → logprob: -15.375033378601074
    6. '_input' → logprob: -15.625033378601074
    7. '```' → logprob: -15.875033378601074
    8. 'dist' → logprob: -16.25003433227539
    9. '0' → logprob: -16.62503433227539
    10. 'zer' → logprob: -16.75003433227539

Token 554: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0020017961505800486
    2. '(' → logprob: -6.377001762390137
    3. '(
' → logprob: -9.127001762390137
    4. '<|end|>' → logprob: -9.127001762390137
    5. ' (' → logprob: -10.002001762390137
    6. '```' → logprob: -10.752001762390137
    7. '<|end|>' → logprob: -11.877001762390137
    8. 'N' → logprob: -13.752001762390137
    9. '(X' → logprob: -14.002001762390137
    10. '((' → logprob: -14.377001762390137

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010187433508690447
    2. ' ,' → logprob: -9.875102043151855
    3. '(one' → logprob: -10.000102043151855
    4. '(two' → logprob: -13.875102043151855
    5. '   ' → logprob: -14.125102043151855
    6. ',N' → logprob: -14.250102043151855
    7. ')' → logprob: -14.750102043151855
    8. '(' → logprob: -14.750102043151855
    9. ',
' → logprob: -15.000102043151855
    10. '           ' → logprob: -15.625102043151855

Token 556: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.4140441635390744e-05
    2. ' one' → logprob: -11.500014305114746
    3. 'zero' → logprob: -13.000014305114746
    4. 'two' → logprob: -13.375014305114746
    5. '0' → logprob: -16.25001335144043
    6. 'N' → logprob: -17.12501335144043
    7. '(one' → logprob: -17.50001335144043
    8. '   ' → logprob: -17.87501335144043
    9. '
' → logprob: -19.62501335144043
    10. ' ' → logprob: -19.75001335144043

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022763874381780624
    2. '+' → logprob: -4.397763729095459
    3. ' +' → logprob: -4.647763729095459
    4. ' ,' → logprob: -7.647763729095459
    5. '   ' → logprob: -10.272764205932617
    6. ')' → logprob: -10.647764205932617
    7. '<|end|>' → logprob: -11.147764205932617
    8. ',t' → logprob: -11.272764205932617
    9. '           ' → logprob: -11.272764205932617
    10. '+,' → logprob: -11.272764205932617

Token 558: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.004078639671206474
    2. ' two' → logprob: -5.5040788650512695
    3. '(two' → logprob: -15.25407886505127
    4. 'Two' → logprob: -17.254077911376953
    5. '_two' → logprob: -18.129077911376953
    6. '.two' → logprob: -18.254077911376953
    7. '   ' → logprob: -18.879077911376953
    8. '2' → logprob: -20.379077911376953
    9. ' ' → logprob: -20.754077911376953
    10. '               ' → logprob: -22.629077911376953

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.000007629394531
    3. ',
' → logprob: -14.375007629394531
    4. ')' → logprob: -15.125007629394531
    5. '```' → logprob: -15.375007629394531
    6. '   ' → logprob: -16.00000762939453
    7. '`,' → logprob: -16.62500762939453
    8. '[' → logprob: -17.00000762939453
    9. '‌,' → logprob: -17.75000762939453
    10. ',module' → logprob: -18.12500762939453

Token 560: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019286326132714748
    2. ' mod' → logprob: -6.251928806304932
    3. '	mod' → logprob: -17.376928329467773
    4. '(mod' → logprob: -18.376928329467773
    5. ' ' → logprob: -18.751928329467773
    6. ')' → logprob: -18.876928329467773
    7. '```' → logprob: -19.251928329467773
    8. ' мод' → logprob: -19.876928329467773
    9. 'MOD' → logprob: -20.251928329467773
    10. 'moder' → logprob: -20.376928329467773

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',
' → logprob: -13.87501335144043
    4. ',f' → logprob: -14.62501335144043
    5. 'fac' → logprob: -14.87501335144043
    6. '```' → logprob: -15.87501335144043
    7. ')' → logprob: -16.50001335144043
    8. '‌,' → logprob: -17.62501335144043
    9. ',
' → logprob: -17.87501335144043
    10. ' fac' → logprob: -17.87501335144043

Token 562: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.00020354038861114532
    2. ' fac' → logprob: -8.500203132629395
    3. '_fac' → logprob: -17.75020408630371
    4. '.fac' → logprob: -18.00020408630371
    5. 'facet' → logprob: -18.12520408630371
    6. 'Fac' → logprob: -18.75020408630371
    7. 'fact' → logprob: -18.87520408630371
    8. '
' → logprob: -19.25020408630371
    9. 'fc' → logprob: -19.87520408630371
    10. 'fas' → logprob: -19.87520408630371

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.125007629394531
    3. ',
' → logprob: -14.125007629394531
    4. 'inv' → logprob: -14.250007629394531
    5. ')' → logprob: -16.12500762939453
    6. '[' → logprob: -17.25000762939453
    7. '(inv' → logprob: -17.50000762939453
    8. '```' → logprob: -17.50000762939453
    9. '   ' → logprob: -17.62500762939453
    10. ' inv' → logprob: -17.62500762939453

Token 564: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.003600782947614789
    2. ' inv' → logprob: -5.628600597381592
    3. '(inv' → logprob: -14.75360107421875
    4. ' ' → logprob: -16.00360107421875
    5. '   ' → logprob: -16.00360107421875
    6. '
' → logprob: -17.12860107421875
    7. '.inv' → logprob: -17.75360107421875
    8. 'inf' → logprob: -18.25360107421875
    9. '```' → logprob: -18.25360107421875
    10. '_inv' → logprob: -18.37860107421875

Token 565: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01815415732562542
    2. ')
' → logprob: -4.018154144287109
    3. ')
' → logprob: -13.26815414428711
    4. '           ' → logprob: -14.14315414428711
    5. ')

' → logprob: -14.14315414428711
    6. '   ' → logprob: -15.01815414428711
    7. '),' → logprob: -15.76815414428711
    8. ')`' → logprob: -15.89315414428711
    9. ',' → logprob: -16.14315414428711
    10. ')`
' → logprob: -16.26815414428711

Token 566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014383273664861917
    2. ' now' → logprob: -6.876438140869141
    3. ',' → logprob: -9.50143814086914
    4. 'now' → logprob: -9.62643814086914
    5. '[now' → logprob: -10.12643814086914
    6. '<|end|>' → logprob: -10.25143814086914
    7. '```' → logprob: -10.37643814086914
    8. '	now' → logprob: -10.87643814086914
    9. ')' → logprob: -11.00143814086914
    10. '		' → logprob: -11.25143814086914

Token 567: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.1518527716398239
    2. ' now' → logprob: -2.40185284614563
    3. '           ' → logprob: -3.02685284614563
    4. 'if' → logprob: -7.401852607727051
    5. 'ans' → logprob: -7.776852607727051
    6. 'for' → logprob: -7.776852607727051
    7. '```' → logprob: -9.15185260772705
    8. ' for' → logprob: -9.77685260772705
    9. ' if' → logprob: -9.77685260772705
    10. '               ' → logprob: -10.15185260772705

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699399933218956
    2. '=' → logprob: -2.6949400901794434
    3. '_' → logprob: -13.194939613342285
    4. ' ' → logprob: -14.194939613342285
    5. '   ' → logprob: -15.569939613342285
    6. ' +=' → logprob: -15.694939613342285
    7. ',' → logprob: -15.819939613342285
    8. ' =)' → logprob: -15.819939613342285
    9. '_=' → logprob: -16.3199405670166
    10. ')' → logprob: -16.5699405670166

Token 569: ' ' (ID: 220)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.05505402013659477
    2. ' get' → logprob: -3.180053949356079
    3. '0' → logprob: -4.430054187774658
    4. '(get' → logprob: -9.9300537109375
    5. ' ' → logprob: -11.5550537109375
    6. 'mod' → logprob: -12.4300537109375
    7. '   ' → logprob: -13.8050537109375
    8. 'zero' → logprob: -14.0550537109375
    9. '	get' → logprob: -14.0550537109375
    10. '           ' → logprob: -14.5550537109375

Token 570: '0' (ID: 15)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.01819911040365696
    2. '0' → logprob: -4.0181989669799805
    3. ' get' → logprob: -10.01819896697998
    4. '(get' → logprob: -12.51819896697998
    5. '	get' → logprob: -15.64319896697998
    6. 'zero' → logprob: -15.76819896697998
    7. '
' → logprob: -16.143199920654297
    8. ' ' → logprob: -16.268199920654297
    9. '1' → logprob: -16.518199920654297
    10. '   ' → logprob: -16.643199920654297

Token 571: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43824827671051025
    2. '<|end|>' → logprob: -1.1882482767105103
    3. '
' → logprob: -4.438248157501221
    4. '<|end|>' → logprob: -5.188248157501221
    5. '       ' → logprob: -5.438248157501221
    6. '               ' → logprob: -5.563248157501221
    7. '\n' → logprob: -5.688248157501221
    8. '            
' → logprob: -5.938248157501221
    9. '            ' → logprob: -6.063248157501221
    10. '  
' → logprob: -6.438248157501221

Token 572: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1870955228805542
    2. '<|end|>' → logprob: -1.9370955228805542
    3. '       ' → logprob: -4.937095642089844
    4. '		' → logprob: -5.562095642089844
    5. '<|end|>' → logprob: -6.062095642089844
    6. '               ' → logprob: -6.312095642089844
    7. '            ' → logprob: -6.687095642089844
    8. '            
' → logprob: -7.062095642089844
    9. '\t' → logprob: -7.187095642089844
    10. '	       ' → logprob: -7.312095642089844

Token 573: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09816226363182068
    2. ' if' → logprob: -3.0981621742248535
    3. 'if' (adapté à ' if') → logprob: -3.9731621742248535
    4. ' for' → logprob: -4.2231621742248535
    5. 'for' → logprob: -4.7231621742248535
    6. ' now' → logprob: -5.3481621742248535
    7. 'now' → logprob: -6.9731621742248535
    8. '```' → logprob: -9.473162651062012
    9. '   ' → logprob: -10.348162651062012
    10. '		' → logprob: -10.348162651062012

Token 574: ' dist' (ID: 3601)
  Prédit: ' should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.3231353461742401
    2. 'should' → logprob: -1.4481353759765625
    3. ' dist' → logprob: -3.3231353759765625
    4. 'dist' → logprob: -5.4481353759765625
    5. '   ' → logprob: -8.323135375976562
    6. '           ' → logprob: -8.323135375976562
    7. ' get' → logprob: -9.448135375976562
    8. '            ' → logprob: -10.073135375976562
    9. '    ' → logprob: -10.073135375976562
    10. '               ' → logprob: -10.448135375976562

Token 575: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10869200527667999
    2. ' <=' → logprob: -2.483691930770874
    3. '==' → logprob: -3.983691930770874
    4. '<=' → logprob: -7.108692169189453
    5. ' <' → logprob: -9.733692169189453
    6. '=' → logprob: -10.983692169189453
    7. ' =' → logprob: -11.233692169189453
    8. ' >=' → logprob: -11.358692169189453
    9. '<|end|>' → logprob: -12.358692169189453
    10. ' >' → logprob: -12.608692169189453

Token 576: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07296550273895264
    2. ' X' → logprob: -2.697965621948242
    3. '=' → logprob: -5.822965621948242
    4. '<|end|>' → logprob: -10.322965621948242
    5. '=X' → logprob: -11.197965621948242
    6. ' ' → logprob: -11.822965621948242
    7. ' =' → logprob: -12.822965621948242
    8. '0' → logprob: -12.947965621948242
    9. '>X' → logprob: -13.447965621948242
    10. '	X' → logprob: -13.822965621948242

Token 577: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03370344638824463
    2. ':
' → logprob: -3.408703327178955
    3. '           ' → logprob: -10.658703804016113
    4. '               ' → logprob: -10.783703804016113
    5. ' and' → logprob: -12.658703804016113
    6. ':

' → logprob: -13.033703804016113
    7. ',' → logprob: -13.408703804016113
    8. '       ' → logprob: -13.533703804016113
    9. ' or' → logprob: -13.783703804016113
    10. ':return' → logprob: -14.158703804016113

Token 578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006961996667087078
    2. '           ' → logprob: -5.506961822509766
    3. '<|end|>' → logprob: -7.631961822509766
    4. ':
' → logprob: -8.006961822509766
    5. '                   ' → logprob: -8.256961822509766
    6. '                ' → logprob: -8.256961822509766
    7. '                
' → logprob: -8.381961822509766
    8. '              ' → logprob: -8.631961822509766
    9. ':' → logprob: -8.881961822509766
    10. ' now' → logprob: -9.006961822509766

Token 579: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.45215654373168945
    2. ' now' → logprob: -1.0771565437316895
    3. '               ' → logprob: -4.3271565437316895
    4. 'continue' → logprob: -4.8271565437316895
    5. ' continue' → logprob: -6.8271565437316895
    6. 'zero' → logprob: -8.202156066894531
    7. ' zero' → logprob: -8.702156066894531
    8. '           ' → logprob: -8.702156066894531
    9. '                   ' → logprob: -8.952156066894531
    10. '   ' → logprob: -10.452156066894531

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15505468845367432
    2. '=' → logprob: -2.1550545692443848
    3. ' +=' → logprob: -3.6550545692443848
    4. '+=' → logprob: -6.280054569244385
    5. ' *=' → logprob: -15.030055046081543
    6. '.=' → logprob: -15.655055046081543
    7. ' |=' → logprob: -16.030054092407227
    8. '   ' → logprob: -16.030054092407227
    9. ' ' → logprob: -16.405054092407227
    10. '＝' → logprob: -16.405054092407227

Token 581: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.08979379385709763
    2. ' get' → logprob: -2.4647936820983887
    3. '0' → logprob: -7.464793682098389
    4. '(get' → logprob: -8.339794158935547
    5. 'mod' → logprob: -10.714794158935547
    6. ' ' → logprob: -12.464794158935547
    7. '   ' → logprob: -12.839794158935547
    8. 'now' → logprob: -12.839794158935547
    9. ' (' → logprob: -13.089794158935547
    10. '               ' → logprob: -13.464794158935547

Token 582: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -9.627176768844947e-05
    2. 'now' → logprob: -9.250096321105957
    3. '_dist' → logprob: -17.37509536743164
    4. '_' → logprob: -17.62509536743164
    5. '_zero' → logprob: -18.00009536743164
    6. '```' → logprob: -18.50009536743164
    7. '_n' → logprob: -18.62509536743164
    8. '_not' → logprob: -19.12509536743164
    9. '[now' → logprob: -19.25009536743164
    10. '\' → logprob: -19.37509536743164

Token 583: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.704273118884885e-07
    2. 'dist' → logprob: -15.000000953674316
    3. '_now' → logprob: -16.25
    4. 'Dist' → logprob: -16.5
    5. 'now' → logprob: -18.5
    6. '	dist' → logprob: -19.75
    7. ' _' → logprob: -20.0
    8. ' Dist' → logprob: -20.0
    9. '_DIST' → logprob: -20.0
    10. '```' → logprob: -20.375

Token 584: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.00020401719666551799
    2. 'less' → logprob: -8.500204086303711
    3. ' less' → logprob: -14.750204086303711
    4. 'Less' → logprob: -16.00020408630371
    5. '-less' → logprob: -17.87520408630371
    6. '```' → logprob: -18.37520408630371
    7. '<' → logprob: -18.37520408630371
    8. '.less' → logprob: -19.12520408630371
    9. 'LESS' → logprob: -19.50020408630371
    10. '_le' → logprob: -19.62520408630371

Token 585: '_X' (ID: 16245)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3489932715892792
    2. '_X' → logprob: -1.2239933013916016
    3. ' _' → logprob: -9.098993301391602
    4. '```' → logprob: -9.473993301391602
    5. '_
' → logprob: -9.598993301391602
    6. 'X' → logprob: -9.973993301391602
    7. '_<' → logprob: -9.973993301391602
    8. '_T' → logprob: -10.598993301391602
    9. '_N' → logprob: -10.723993301391602
    10. '_token' → logprob: -11.098993301391602

Token 586: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.00019483851792756468
    2. '(' → logprob: -8.625194549560547
    3. '(two' → logprob: -11.125194549560547
    4. ' (' → logprob: -15.375194549560547
    5. '(
' → logprob: -15.875194549560547
    6. 'one' → logprob: -15.875194549560547
    7. ' one' → logprob: -18.000194549560547
    8. '(now' → logprob: -18.875194549560547
    9. '   ' → logprob: -19.000194549560547
    10. '```' → logprob: -19.250194549560547

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001234428636962548
    2. ',t' → logprob: -9.750123023986816
    3. ' ,' → logprob: -10.375123023986816
    4. '<|end|>' → logprob: -10.625123023986816
    5. '+' → logprob: -12.875123023986816
    6. ',
' → logprob: -13.250123023986816
    7. 'two' → logprob: -13.875123023986816
    8. '(two' → logprob: -14.250123023986816
    9. '           ' → logprob: -14.375123023986816
    10. ')' → logprob: -14.750123023986816

Token 588: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.4740888178348541
    2. ' two' → logprob: -0.9740887880325317
    3. '(two' → logprob: -11.474088668823242
    4. '.two' → logprob: -14.224088668823242
    5. '_two' → logprob: -14.849088668823242
    6. ' ' → logprob: -15.599088668823242
    7. 'zero' → logprob: -16.849088668823242
    8. '   ' → logprob: -17.099088668823242
    9. ' zero' → logprob: -17.599088668823242
    10. 'tw' → logprob: -17.974088668823242

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ' ,' → logprob: -11.375014305114746
    3. '           ' → logprob: -13.875014305114746
    4. '   ' → logprob: -14.125014305114746
    5. ',
' → logprob: -15.000014305114746
    6. '       ' → logprob: -15.750014305114746
    7. ')' → logprob: -15.875014305114746
    8. '[' → logprob: -16.12501335144043
    9. '```' → logprob: -16.62501335144043
    10. '               ' → logprob: -16.75001335144043

Token 590: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.02975071594119072
    2. ' zero' → logprob: -3.5297508239746094
    3. '0' → logprob: -15.65475082397461
    4. '_zero' → logprob: -17.02975082397461
    5. '.zero' → logprob: -17.02975082397461
    6. '-zero' → logprob: -19.15475082397461
    7. ' ' → logprob: -19.40475082397461
    8. ')' → logprob: -19.52975082397461
    9. 'mod' → logprob: -19.65475082397461
    10. ' cero' → logprob: -20.65475082397461

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9027791495318525e-05
    2. ')' → logprob: -11.500019073486328
    3. ' ,' → logprob: -12.125019073486328
    4. '   ' → logprob: -13.250019073486328
    5. ',
' → logprob: -14.125019073486328
    6. '           ' → logprob: -15.250019073486328
    7. '```' → logprob: -15.375019073486328
    8. '       ' → logprob: -15.625019073486328
    9. '               ' → logprob: -16.625019073486328
    10. '`,' → logprob: -17.000019073486328

Token 592: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.842555426876061e-06
    2. ' mod' → logprob: -12.250004768371582
    3. 'X' → logprob: -18.0000057220459
    4. '(mod' → logprob: -19.2500057220459
    5. '
' → logprob: -19.7500057220459
    6. 'moder' → logprob: -20.1250057220459
    7. ')' → logprob: -20.5000057220459
    8. '	mod' → logprob: -20.7500057220459
    9. ' ' → logprob: -21.1250057220459
    10. '```' → logprob: -21.2500057220459

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4498052223643754e-05
    2. ' ,' → logprob: -11.750014305114746
    3. 'inv' → logprob: -13.125014305114746
    4. ',
' → logprob: -13.500014305114746
    5. ',f' → logprob: -13.625014305114746
    6. 'fac' → logprob: -14.250014305114746
    7. ')' → logprob: -14.500014305114746
    8. '_,' → logprob: -16.125015258789062
    9. ' inv' → logprob: -16.250015258789062
    10. ',in' → logprob: -16.375015258789062

Token 594: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.10037165135145187
    2. 'inv' → logprob: -2.3503715991973877
    3. ' fac' → logprob: -8.975371360778809
    4. ' inv' → logprob: -10.225371360778809
    5. 'ans' → logprob: -14.225371360778809
    6. 'fact' → logprob: -15.100371360778809
    7. '1' → logprob: -15.475371360778809
    8. 'factor' → logprob: -15.600371360778809
    9. '
' → logprob: -15.850371360778809
    10. 'f' → logprob: -15.850371360778809

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003589416155591607
    2. 'inv' → logprob: -8.000358581542969
    3. ' inv' → logprob: -11.250358581542969
    4. ' ,' → logprob: -12.250358581542969
    5. '(inv' → logprob: -12.875358581542969
    6. ',
' → logprob: -13.250358581542969
    7. ',in' → logprob: -15.000358581542969
    8. ',v' → logprob: -15.250358581542969
    9. ')' → logprob: -15.375358581542969
    10. '_inv' → logprob: -15.750358581542969

Token 596: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0019287518225610256
    2. ' inv' → logprob: -6.251928806304932
    3. '(inv' → logprob: -16.626928329467773
    4. '
' → logprob: -17.001928329467773
    5. '   ' → logprob: -17.376928329467773
    6. ' ' → logprob: -18.001928329467773
    7. ')' → logprob: -18.501928329467773
    8. '```' → logprob: -18.626928329467773
    9. '_inv' → logprob: -18.876928329467773
    10. '.inv' → logprob: -19.001928329467773

Token 597: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035965684219263494
    2. ')
' → logprob: -8.000359535217285
    3. '           ' → logprob: -11.125359535217285
    4. ' )' → logprob: -12.625359535217285
    5. '               ' → logprob: -13.625359535217285
    6. '   ' → logprob: -13.875359535217285
    7. ')return' → logprob: -14.625359535217285
    8. '):
' → logprob: -14.875359535217285
    9. ')

' → logprob: -15.125359535217285
    10. ')\
' → logprob: -15.125359535217285

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6833009719848633
    2. '<|end|>' → logprob: -1.0583009719848633
    3. '\n' → logprob: -3.0583009719848633
    4. 'elif' → logprob: -3.9333009719848633
    5. '
' → logprob: -4.058300971984863
    6. '               ' → logprob: -4.433300971984863
    7. '```' → logprob: -4.433300971984863
    8. '<|end|>' → logprob: -4.933300971984863
    9. '       ' → logprob: -5.183300971984863
    10. '            
' → logprob: -5.183300971984863

Token 599: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18304398655891418
    2. 'elif' (adapté à ' elif') → logprob: -2.558043956756592
    3. ' elif' → logprob: -2.683043956756592
    4. ' else' → logprob: -5.558043956756592
    5. '       ' → logprob: -5.683043956756592
    6. 'else' → logprob: -5.933043956756592
    7. '<|end|>' → logprob: -5.933043956756592
    8. '\n' → logprob: -6.058043956756592
    9. '   ' → logprob: -6.058043956756592
    10. '	elif' → logprob: -6.808043956756592

Token 600: ' should' (ID: 1757)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.656299889087677
    2. ' dist' → logprob: -0.781299889087677
    3. 'should' → logprob: -4.156300067901611
    4. ' should' → logprob: -4.906300067901611
    5. '   ' → logprob: -8.281299591064453
    6. '    ' → logprob: -10.406299591064453
    7. ' ' → logprob: -11.156299591064453
    8. ' get' → logprob: -11.406299591064453
    9. '(dist' → logprob: -11.656299591064453
    10. '	dist' → logprob: -11.906299591064453

Token 601: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.008715623058378696
    2. 'continue' → logprob: -4.758715629577637
    3. ' continue' → logprob: -9.883715629577637
    4. '```' → logprob: -10.508715629577637
    5. '_cont' → logprob: -11.758715629577637
    6. '_break' → logprob: -12.758715629577637
    7. ' ' → logprob: -13.133715629577637
    8. 'Continue' → logprob: -13.258715629577637
    9. ' _' → logprob: -13.383715629577637
    10. '`' → logprob: -13.883715629577637

Token 602: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0002366753324167803
    2. '(dist' → logprob: -8.875236511230469
    3. 'dist' → logprob: -9.250236511230469
    4. '	dist' → logprob: -15.125236511230469
    5. '(' → logprob: -16.25023651123047
    6. '_DIST' → logprob: -16.37523651123047
    7. '```' → logprob: -16.87523651123047
    8. '_distance' → logprob: -17.50023651123047
    9. '\' → logprob: -17.62523651123047
    10. '_' → logprob: -17.75023651123047

Token 603: '_equals' (ID: 165870)
  Prédit: '_equals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equals' → logprob: -0.04312000051140785
    2. '_between' → logprob: -3.1681199073791504
    3. '_equal' → logprob: -10.168120384216309
    4. '==' → logprob: -10.668120384216309
    5. '_EQUALS' → logprob: -10.918120384216309
    6. 'equals' → logprob: -10.918120384216309
    7. '(' → logprob: -11.668120384216309
    8. '```' → logprob: -12.168120384216309
    9. ' ==' → logprob: -12.793120384216309
    10. 'between' → logprob: -13.543120384216309

Token 604: '_X' (ID: 16245)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.871849536895752
    2. '(dist' → logprob: -1.121849536895752
    3. 'X' → logprob: -1.746849536895752
    4. '_X' → logprob: -2.621849536895752
    5. '(' → logprob: -5.371849536895752
    6. 'dist' → logprob: -5.871849536895752
    7. '_' → logprob: -7.246849536895752
    8. '_dist' → logprob: -7.496849536895752
    9. ' (' → logprob: -9.246849060058594
    10. ' X' → logprob: -9.371849060058594

Token 605: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -2.6656825866666622e-05
    2. '(' → logprob: -10.62502670288086
    3. ' (' → logprob: -13.62502670288086
    4. '(distance' → logprob: -14.75002670288086
    5. '(one' → logprob: -15.37502670288086
    6. 'dist' → logprob: -15.62502670288086
    7. '(two' → logprob: -16.00002670288086
    8. '(
' → logprob: -16.75002670288086
    9. '(dis' → logprob: -16.87502670288086
    10. '	dist' → logprob: -17.50002670288086

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.815280696377158e-05
    2. ' ,' → logprob: -9.500078201293945
    3. ',
' → logprob: -13.750078201293945
    4. '==' → logprob: -14.000078201293945
    5. '(one' → logprob: -15.125078201293945
    6. ' ==' → logprob: -15.750078201293945
    7. '   ' → logprob: -15.750078201293945
    8. '               ' → logprob: -16.375078201293945
    9. '           ' → logprob: -16.375078201293945
    10. ' one' → logprob: -16.875078201293945

Token 607: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0009130131802521646
    2. ' X' → logprob: -7.000913143157959
    3. '
' → logprob: -14.3759126663208
    4. ')' → logprob: -14.5009126663208
    5. '   ' → logprob: -15.8759126663208
    6. ' ' → logprob: -16.375913619995117
    7. '```' → logprob: -16.500913619995117
    8. '           ' → logprob: -16.625913619995117
    9. '               ' → logprob: -17.000913619995117
    10. '	X' → logprob: -18.125913619995117

Token 608: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023255961015820503
    2. '):
' → logprob: -3.7732560634613037
    3. ':' → logprob: -12.523256301879883
    4. '           ' → logprob: -13.398256301879883
    5. ')' → logprob: -13.773256301879883
    6. ' ):' → logprob: -13.898256301879883
    7. '):
' → logprob: -14.398256301879883
    8. '==' → logprob: -14.648256301879883
    9. '):

' → logprob: -14.773256301879883
    10. '               ' → logprob: -14.898256301879883

Token 609: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3900997042655945
    2. '               ' → logprob: -1.1400997638702393
    3. ':
' → logprob: -6.39009952545166
    4. '           ' → logprob: -8.01509952545166
    5. ' now' → logprob: -8.14009952545166
    6. '):' → logprob: -8.26509952545166
    7. '():' → logprob: -8.76509952545166
    8. '```' → logprob: -9.01509952545166
    9. '       ' → logprob: -9.64009952545166
    10. '):
' → logprob: -10.01509952545166

Token 610: ' continue' (ID: 4901)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.31968069076538086
    2. ' now' → logprob: -1.3196806907653809
    3. '               ' → logprob: -5.069680690765381
    4. '                   ' → logprob: -9.694681167602539
    5. '           ' → logprob: -10.319681167602539
    6. '   ' → logprob: -11.944681167602539
    7. '	now' → logprob: -12.444681167602539
    8. '                       ' → logprob: -13.069681167602539
    9. '```' → logprob: -13.819681167602539
    10. '[now' → logprob: -13.944681167602539

Token 611: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10641122609376907
    2. '<|end|>' → logprob: -2.3564112186431885
    3. '               ' → logprob: -5.981411457061768
    4. '<|end|>' → logprob: -6.106411457061768
    5. '            
' → logprob: -7.481411457061768
    6. '
' → logprob: -8.23141098022461
    7. '		' → logprob: -8.48141098022461
    8. '            ' → logprob: -9.85641098022461
    9. '          ' → logprob: -10.10641098022461
    10. '                   ' → logprob: -10.23141098022461

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015719952061772346
    2. '            
' → logprob: -7.001572132110596
    3. '
' → logprob: -8.001571655273438
    4. '		' → logprob: -9.251571655273438
    5. '       ' → logprob: -9.376571655273438
    6. '               ' → logprob: -9.501571655273438
    7. '        
' → logprob: -11.751571655273438
    8. '          ' → logprob: -11.876571655273438
    9. '    
' → logprob: -12.001571655273438
    10. '<|end|>' → logprob: -12.001571655273438

Token 613: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014223090372979641
    2. ' now' → logprob: -4.389223098754883
    3. 'now' → logprob: -7.389223098754883
    4. '               ' → logprob: -7.889223098754883
    5. '       ' → logprob: -8.889223098754883
    6. '[now' → logprob: -9.014223098754883
    7. '+' → logprob: -9.389223098754883
    8. '[' → logprob: -9.639223098754883
    9. '(now' → logprob: -10.389223098754883
    10. '=' → logprob: -10.764223098754883

Token 614: ' dist' (ID: 3601)
  Prédit: ' should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.9189262390136719
    2. 'should' → logprob: -1.1689262390136719
    3. ' dist' → logprob: -1.4189262390136719
    4. 'dist' → logprob: -3.043926239013672
    5. '   ' → logprob: -8.043926239013672
    6. ' ' → logprob: -8.668926239013672
    7. ' not' → logprob: -9.793926239013672
    8. '    ' → logprob: -9.918926239013672
    9. '  ' → logprob: -10.543926239013672
    10. ' get' → logprob: -11.418926239013672

Token 615: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.26445743441581726
    2. '>' → logprob: -2.0144574642181396
    3. ' <' → logprob: -2.5144574642181396
    4. ' <=' → logprob: -4.6394572257995605
    5. '<' → logprob: -5.5144572257995605
    6. ' >=' → logprob: -5.8894572257995605
    7. ' between' → logprob: -7.5144572257995605
    8. '<=' → logprob: -8.014457702636719
    9. '>=' → logprob: -8.389457702636719
    10. '```' → logprob: -8.514457702636719

Token 616: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06999024003744125
    2. ' ' → logprob: -2.6949901580810547
    3. '   ' → logprob: -11.694990158081055
    4. '=' → logprob: -11.694990158081055
    5. 'X' → logprob: -11.819990158081055
    6. '(' → logprob: -12.194990158081055
    7. ' X' → logprob: -12.444990158081055
    8. '
' → logprob: -12.569990158081055
    9. '```' → logprob: -12.569990158081055
    10. '0' → logprob: -12.694990158081055

Token 617: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003585818223655224
    2. ' ' → logprob: -5.7535858154296875
    3. '=' → logprob: -8.628585815429688
    4. '(' → logprob: -9.253585815429688
    5. 'X' → logprob: -9.378585815429688
    6. '1' → logprob: -11.128585815429688
    7. '0' → logprob: -11.378585815429688
    8. '```' → logprob: -12.753585815429688
    9. ' X' → logprob: -12.878585815429688
    10. '   ' → logprob: -12.878585815429688

Token 618: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07521942257881165
    2. 'X' → logprob: -3.3252193927764893
    3. ' *' → logprob: -3.3252193927764893
    4. ' X' → logprob: -7.575219631195068
    5. '   ' → logprob: -12.45021915435791
    6. '```' → logprob: -12.70021915435791
    7. ' ' → logprob: -12.95021915435791
    8. '**' → logprob: -12.95021915435791
    9. '           ' → logprob: -13.32521915435791
    10. '*
' → logprob: -14.45021915435791

Token 619: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -9.639096970204264e-05
    2. ' X' → logprob: -9.250096321105957
    3. ' ' → logprob: -16.375097274780273
    4. '```' → logprob: -16.750097274780273
    5. '   ' → logprob: -17.125097274780273
    6. '
' → logprob: -17.375097274780273
    7. '>X' → logprob: -18.750097274780273
    8. '	X' → logprob: -19.000097274780273
    9. '`' → logprob: -19.250097274780273
    10. '(X' → logprob: -19.500097274780273

Token 620: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012723661959171295
    2. ':
' → logprob: -4.387723445892334
    3. ' and' → logprob: -9.512723922729492
    4. '       ' → logprob: -10.262723922729492
    5. '               ' → logprob: -10.512723922729492
    6. '           ' → logprob: -10.637723922729492
    7. '   ' → logprob: -10.762723922729492
    8. ',' → logprob: -12.137723922729492
    9. '):' → logprob: -12.512723922729492
    10. ':

' → logprob: -12.637723922729492

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16413234174251556
    2. ':' → logprob: -1.9141323566436768
    3. ':
' → logprob: -6.414132118225098
    4. '       ' → logprob: -7.539132118225098
    5. '           ' → logprob: -7.789132118225098
    6. '):' → logprob: -8.039132118225098
    7. '```' → logprob: -8.414132118225098
    8. ' :' → logprob: -8.789132118225098
    9. ')' → logprob: -9.414132118225098
    10. '):
' → logprob: -9.539132118225098

Token 622: ' if' (ID: 538)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.5792288184165955
    2. ' now' → logprob: -0.8292288184165955
    3. '           ' → logprob: -6.82922887802124
    4. '   ' → logprob: -7.32922887802124
    5. '               ' → logprob: -7.32922887802124
    6. 'dt' → logprob: -7.82922887802124
    7. ' dt' → logprob: -8.454228401184082
    8. ' two' → logprob: -9.704228401184082
    9. '	now' → logprob: -9.704228401184082
    10. '       ' → logprob: -10.204228401184082

Token 623: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.7478545904159546
    2. 'dist' → logprob: -1.8728545904159546
    3. ' one' → logprob: -2.497854709625244
    4. 'one' → logprob: -2.747854709625244
    5. 'two' → logprob: -2.872854709625244
    6. ' should' → logprob: -3.122854709625244
    7. ' dist' → logprob: -3.497854709625244
    8. ' two' → logprob: -3.622854709625244
    9. ' not' → logprob: -3.872854709625244
    10. 'not' → logprob: -4.122854709625244

Token 624: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.038080278784036636
    2. 'continue' → logprob: -3.2880802154541016
    3. '_break' → logprob: -10.788080215454102
    4. ' continue' → logprob: -11.913080215454102
    5. '```' → logprob: -12.288080215454102
    6. 'not' → logprob: -13.288080215454102
    7. '   ' → logprob: -13.538080215454102
    8. 'break' → logprob: -13.788080215454102
    9. 'Continue' → logprob: -14.913080215454102
    10. '_cont' → logprob: -15.038080215454102

Token 625: '_dist' (ID: 37968)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.032166119664907455
    2. '_dist' → logprob: -3.532166004180908
    3. '(dist' → logprob: -6.032166004180908
    4. 'not' → logprob: -12.282166481018066
    5. '	dist' → logprob: -12.907166481018066
    6. ' dist' → logprob: -13.407166481018066
    7. '```' → logprob: -13.407166481018066
    8. 'distance' → logprob: -14.407166481018066
    9. 'def' → logprob: -15.032166481018066
    10. '   ' → logprob: -15.782166481018066

Token 626: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.10128352046012878
    2. 'between' → logprob: -2.351283550262451
    3. '_equals' → logprob: -7.351283550262451
    4. 'equals' → logprob: -8.726283073425293
    5. '```' → logprob: -8.851283073425293
    6. 'bet' → logprob: -9.851283073425293
    7. '(dist' → logprob: -10.476283073425293
    8. 'dist' → logprob: -11.351283073425293
    9. ' between' → logprob: -11.351283073425293
    10. '(' → logprob: -12.601283073425293

Token 627: '_X' (ID: 16245)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.08773678541183472
    2. 'dist' → logprob: -2.5877368450164795
    3. '_dist' → logprob: -4.9627366065979
    4. '(' → logprob: -7.3377366065979
    5. ' dist' → logprob: -7.4627366065979
    6. '_' → logprob: -7.7127366065979
    7. '	dist' → logprob: -9.962737083435059
    8. ' (' → logprob: -10.337737083435059
    9. ')' → logprob: -10.712737083435059
    10. '```' → logprob: -11.337737083435059

Token 628: '_and' (ID: 18645)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.6628207564353943
    2. '_dist' → logprob: -1.037820816040039
    3. '_' → logprob: -2.912820816040039
    4. '_between' → logprob: -3.162820816040039
    5. 'dist' → logprob: -3.912820816040039
    6. '_and' → logprob: -4.412820816040039
    7. 'and' → logprob: -7.162820816040039
    8. ')' → logprob: -8.412820816040039
    9. '```' → logprob: -8.662820816040039
    10. '	dist' → logprob: -9.287820816040039

Token 629: '_' (ID: 62)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12201371043920517
    2. '2' → logprob: -2.747013807296753
    3. '(dist' → logprob: -2.997013807296753
    4. 'two' → logprob: -8.122014045715332
    5. '_' → logprob: -8.747014045715332
    6. ' dist' → logprob: -9.372014045715332
    7. '```' → logprob: -9.497014045715332
    8. '_dist' → logprob: -9.997014045715332
    9. 'X' → logprob: -10.122014045715332
    10. '
' → logprob: -10.497014045715332

Token 630: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.12258882028982e-05
    2. 'X' → logprob: -10.87506103515625
    3. '_' → logprob: -10.87506103515625
    4. 'two' → logprob: -11.25006103515625
    5. 'dist' → logprob: -11.75006103515625
    6. ' ' → logprob: -14.12506103515625
    7. '(' → logprob: -14.62506103515625
    8. '```' → logprob: -15.25006103515625
    9. '_two' → logprob: -15.50006103515625
    10. '_X' → logprob: -15.75006103515625

Token 631: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005434504244476557
    2. '_X' → logprob: -5.255434513092041
    3. ' X' → logprob: -9.755434036254883
    4. '(dist' → logprob: -9.755434036254883
    5. '(X' → logprob: -10.380434036254883
    6. '_' → logprob: -10.755434036254883
    7. 'dist' → logprob: -11.130434036254883
    8. '```' → logprob: -12.005434036254883
    9. ' ' → logprob: -13.005434036254883
    10. ')' → logprob: -13.630434036254883

Token 632: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00034261439577676356
    2. 'dist' → logprob: -8.00034236907959
    3. ':' → logprob: -12.37534236907959
    4. '(' → logprob: -13.87534236907959
    5. ' dist' → logprob: -14.87534236907959
    6. '(distance' → logprob: -15.00034236907959
    7. '```' → logprob: -15.37534236907959
    8. ' (' → logprob: -15.37534236907959
    9. '_dist' → logprob: -15.75034236907959
    10. '(
' → logprob: -15.87534236907959

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029708960209973156
    2. ' ,' → logprob: -8.875297546386719
    3. '(two' → logprob: -9.750297546386719
    4. '(dist' → logprob: -10.250297546386719
    5. '               ' → logprob: -11.000297546386719
    6. '```' → logprob: -11.250297546386719
    7. '(one' → logprob: -11.750297546386719
    8. ',
' → logprob: -11.750297546386719
    9. ',t' → logprob: -11.875297546386719
    10. '                   ' → logprob: -12.500297546386719

Token 634: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00038825106457807124
    2. ' X' → logprob: -7.875388145446777
    3. '2' → logprob: -12.500388145446777
    4. ')' → logprob: -13.375388145446777
    5. '```' → logprob: -13.875388145446777
    6. '
' → logprob: -14.000388145446777
    7. '   ' → logprob: -15.000388145446777
    8. ' ' → logprob: -15.125388145446777
    9. '               ' → logprob: -16.000389099121094
    10. '                   ' → logprob: -16.250389099121094

Token 635: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47434261441230774
    2. '):' → logprob: -0.9743425846099854
    3. '                   ' → logprob: -9.474342346191406
    4. '               ' → logprob: -9.599342346191406
    5. '):

' → logprob: -10.224342346191406
    6. '):
' → logprob: -10.349342346191406
    7. ':' → logprob: -10.724342346191406
    8. ')' → logprob: -11.474342346191406
    9. '           ' → logprob: -11.599342346191406
    10. ':
' → logprob: -13.099342346191406

Token 636: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04764260724186897
    2. '                   ' → logprob: -3.172642707824707
    3. ' now' → logprob: -6.797642707824707
    4. '                       ' → logprob: -7.047642707824707
    5. '       ' → logprob: -7.422642707824707
    6. ':' → logprob: -7.672642707824707
    7. '           ' → logprob: -7.797642707824707
    8. '```' → logprob: -8.172642707824707
    9. ')' → logprob: -8.547642707824707
    10. '                ' → logprob: -9.047642707824707

Token 637: ' continue' (ID: 4901)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.131500244140625
    2. ' dt' → logprob: -2.506500244140625
    3. 'now' → logprob: -3.756500244140625
    4. ' now' → logprob: -4.506500244140625
    5. '               ' → logprob: -6.006500244140625
    6. '                   ' → logprob: -6.631500244140625
    7. '       ' → logprob: -6.881500244140625
    8. 'two' → logprob: -7.006500244140625
    9. ' two' → logprob: -7.256500244140625
    10. '                       ' → logprob: -8.506500244140625

Token 638: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09240241348743439
    2. '               ' → logprob: -2.592402458190918
    3. '       ' → logprob: -4.842402458190918
    4. '<|end|>' → logprob: -6.592402458190918
    5. '
' → logprob: -6.967402458190918
    6. '		' → logprob: -7.217402458190918
    7. '	       ' → logprob: -7.592402458190918
    8. '                   ' → logprob: -8.342402458190918
    9. ' else' → logprob: -8.592402458190918
    10. '	' → logprob: -8.592402458190918

Token 639: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6183246970176697
    2. '               ' → logprob: -0.8683246970176697
    3. '       ' → logprob: -3.9933247566223145
    4. '		' → logprob: -4.9933247566223145
    5. '	' → logprob: -5.3683247566223145
    6. '	       ' → logprob: -5.8683247566223145
    7. '                   ' → logprob: -5.9933247566223145
    8. '	           ' → logprob: -6.4933247566223145
    9. '			' → logprob: -6.7433247566223145
    10. '            ' → logprob: -7.8683247566223145

Token 640: ' dt' (ID: 14008)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5484577417373657
    2. '           ' → logprob: -1.6734577417373657
    3. ' now' → logprob: -1.6734577417373657
    4. '                   ' → logprob: -3.423457622528076
    5. 'now' → logprob: -5.048457622528076
    6. ' two' → logprob: -5.423457622528076
    7. '[now' → logprob: -7.423457622528076
    8. ' else' → logprob: -7.548457622528076
    9. '	now' → logprob: -8.048458099365234
    10. ')' → logprob: -8.173458099365234

Token 641: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -1.5048530030981055e-06
    2. 'w' → logprob: -14.000001907348633
    3. 'two' → logprob: -14.625001907348633
    4. '```' → logprob: -15.625001907348633
    5. 'we' → logprob: -17.750001907348633
    6. '``' → logprob: -18.375001907348633
    7. ' wo' → logprob: -18.750001907348633
    8. '=' → logprob: -19.875001907348633
    9. '_two' → logprob: -20.375001907348633
    10. 'o' → logprob: -20.500001907348633

Token 642: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033658839762210846
    2. '=' → logprob: -3.408658742904663
    3. ' ' → logprob: -12.158658981323242
    4. ',' → logprob: -12.908658981323242
    5. ' -=' → logprob: -13.033658981323242
    6. ')' → logprob: -13.658658981323242
    7. ' +=' → logprob: -14.658658981323242
    8. '	' → logprob: -14.908658981323242
    9. '```' → logprob: -15.533658981323242
    10. ' ' → logprob: -15.658658981323242

Token 643: ' get' (ID: 717)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.224179208278656
    2. ' get' → logprob: -1.7241792678833008
    3. 'two' → logprob: -4.099179267883301
    4. 'get' → logprob: -5.474179267883301
    5. '(two' → logprob: -6.474179267883301
    6. '(get' → logprob: -9.0991792678833
    7. '_two' → logprob: -10.3491792678833
    8. '2' → logprob: -11.8491792678833
    9. ' tw' → logprob: -11.9741792678833
    10. '=get' → logprob: -12.0991792678833

Token 644: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.17469912767410278
    2. 'two' → logprob: -1.924699068069458
    3. '_two' → logprob: -4.299699306488037
    4. 'd' → logprob: -7.424699306488037
    5. '(two' → logprob: -8.799698829650879
    6. ' two' → logprob: -10.924698829650879
    7. 'dt' → logprob: -10.924698829650879
    8. 'tw' → logprob: -12.299698829650879
    9. '_tw' → logprob: -13.174698829650879
    10. '_dt' → logprob: -13.799698829650879

Token 645: 'two' (ID: 38397)
  Prédit: 'two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -2.1008713702030946e-06
    2. '(two' → logprob: -14.000001907348633
    3. ' two' → logprob: -14.375001907348633
    4. '_two' → logprob: -14.750001907348633
    5. '```' → logprob: -16.500001907348633
    6. 'Two' → logprob: -17.750001907348633
    7. '-two' → logprob: -18.000001907348633
    8. 'the' → logprob: -18.125001907348633
    9. '.two' → logprob: -18.375001907348633
    10. 't' → logprob: -19.250001907348633

Token 646: '(two' (ID: 186841)
  Prédit: '(two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(two' → logprob: -0.06204241141676903
    2. '(' → logprob: -2.812042474746704
    3. '(
' → logprob: -10.437042236328125
    4. 'two' → logprob: -10.687042236328125
    5. ')' → logprob: -11.437042236328125
    6. ' two' → logprob: -13.062042236328125
    7. '(t' → logprob: -13.062042236328125
    8. ')(' → logprob: -13.312042236328125
    9. '_two' → logprob: -13.812042236328125
    10. ' (' → logprob: -13.812042236328125

Token 647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055786099284887314
    2. '(two' → logprob: -3.0557861328125
    3. '(' → logprob: -5.4307861328125
    4. ')' → logprob: -6.6807861328125
    5. ',t' → logprob: -6.6807861328125
    6. ' ,' → logprob: -9.5557861328125
    7. '```' → logprob: -9.8057861328125
    8. ')(' → logprob: -10.8057861328125
    9. '   ' → logprob: -11.0557861328125
    10. ',
' → logprob: -11.0557861328125

Token 648: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008649199269711971
    2. ' dist' → logprob: -4.7586493492126465
    3. '	dist' → logprob: -11.008648872375488
    4. '(dist' → logprob: -11.383648872375488
    5. '_dist' → logprob: -12.008648872375488
    6. '.dist' → logprob: -15.133648872375488
    7. 'Dist' → logprob: -15.758648872375488
    8. '<|end|>' → logprob: -16.258649826049805
    9. ')' → logprob: -17.008649826049805
    10. '-dist' → logprob: -17.258649826049805

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017040544480551034
    2. ' ,' → logprob: -8.875170707702637
    3. '-' → logprob: -11.750170707702637
    4. ')' → logprob: -11.750170707702637
    5. ',
' → logprob: -12.250170707702637
    6. '```' → logprob: -13.000170707702637
    7. '   ' → logprob: -13.250170707702637
    8. '(' → logprob: -13.500170707702637
    9. ' -' → logprob: -13.875170707702637
    10. '(),' → logprob: -14.875170707702637

Token 650: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -7.505351095460355e-05
    2. ' X' → logprob: -9.500075340270996
    3. '
' → logprob: -16.87507438659668
    4. '>X' → logprob: -17.25007438659668
    5. '```' → logprob: -17.25007438659668
    6. '	X' → logprob: -17.62507438659668
    7. ')' → logprob: -19.12507438659668
    8. '   ' → logprob: -19.25007438659668
    9. '2' → logprob: -19.37507438659668
    10. '_X' → logprob: -20.75007438659668

Token 651: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020003693643957376
    2. ')
' → logprob: -6.252000331878662
    3. ',' → logprob: -10.25200080871582
    4. '   ' → logprob: -11.37700080871582
    5. ' )' → logprob: -12.37700080871582
    6. '```' → logprob: -12.87700080871582
    7. '):' → logprob: -13.00200080871582
    8. '-' → logprob: -13.00200080871582
    9. '               ' → logprob: -13.12700080871582
    10. '):
' → logprob: -13.37700080871582

Token 652: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.020093321800232
    2. '                   ' → logprob: -1.520093321800232
    3. '               ' → logprob: -1.645093321800232
    4. '<|end|>' → logprob: -2.1450934410095215
    5. '           ' → logprob: -3.2700934410095215
    6. '       ' → logprob: -4.0200934410095215
    7. '   ' → logprob: -4.3950934410095215
    8. '<|end|>' → logprob: -5.1450934410095215
    9. '                       ' → logprob: -5.2700934410095215
    10. ' ' → logprob: -5.7700934410095215

Token 653: ' if' (ID: 538)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.3628470003604889
    2. '                   ' → logprob: -1.4878469705581665
    3. '               ' → logprob: -2.987847089767456
    4. 'now' → logprob: -3.737847089767456
    5. '	now' → logprob: -6.237846851348877
    6. '                       ' → logprob: -7.362846851348877
    7. '   ' → logprob: -7.737846851348877
    8. '           ' → logprob: -7.862846851348877
    9. '       ' → logprob: -8.612847328186035
    10. '                ' → logprob: -8.737847328186035

Token 654: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.06267275661230087
    2. ' dt' → logprob: -2.9376728534698486
    3. '0' → logprob: -6.0626726150512695
    4. 'two' → logprob: -6.4376726150512695
    5. ' two' → logprob: -6.5626726150512695
    6. ' ' → logprob: -7.3126726150512695
    7. 'now' → logprob: -8.31267261505127
    8. 'zero' → logprob: -8.43767261505127
    9. ' zero' → logprob: -8.81267261505127
    10. ' now' → logprob: -8.81267261505127

Token 655: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.00012451570364646614
    2. 'two' → logprob: -9.50012493133545
    3. 'o' → logprob: -10.12512493133545
    4. 'ow' → logprob: -12.25012493133545
    5. '_two' → logprob: -13.00012493133545
    6. '```' → logprob: -13.87512493133545
    7. 'w' → logprob: -14.75012493133545
    8. '>' → logprob: -15.00012493133545
    9. '``' → logprob: -15.50012493133545
    10. 'woo' → logprob: -15.87512493133545

Token 656: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07943683117628098
    2. ' >=' → logprob: -3.204436779022217
    3. '<' → logprob: -3.704436779022217
    4. ')' → logprob: -5.579436779022217
    5. ' >' → logprob: -5.704436779022217
    6. ' ==' → logprob: -6.579436779022217
    7. '>=' → logprob: -6.829436779022217
    8. '>' → logprob: -7.329436779022217
    9. ' <=' → logprob: -8.204437255859375
    10. '<|end|>' → logprob: -8.454437255859375

Token 657: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001708732801489532
    2. ' ' → logprob: -6.376708507537842
    3. 'zero' → logprob: -12.751708984375
    4. '1' → logprob: -13.001708984375
    5. '   ' → logprob: -14.751708984375
    6. ' zero' → logprob: -15.001708984375
    7. '۰' → logprob: -16.376708984375
    8. '
' → logprob: -16.439208984375
    9. 'two' → logprob: -16.439208984375
    10. '０' → logprob: -16.501708984375

Token 658: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008304747752845287
    2. ' ' → logprob: -7.12583065032959
    3. '1' → logprob: -11.12583065032959
    4. 'zero' → logprob: -11.75083065032959
    5. '2' → logprob: -14.00083065032959
    6. 'two' → logprob: -14.12583065032959
    7. ' zero' → logprob: -14.81333065032959
    8. '   ' → logprob: -14.93833065032959
    9. '۰' → logprob: -15.75083065032959
    10. '０' → logprob: -15.81333065032959

Token 659: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04591141268610954
    2. ':
' → logprob: -3.1709113121032715
    3. '                   ' → logprob: -6.5459113121032715
    4. ' and' → logprob: -7.2959113121032715
    5. '               ' → logprob: -7.6709113121032715
    6. '<|end|>' → logprob: -9.67091178894043
    7. ',' → logprob: -9.79591178894043
    8. '                       ' → logprob: -10.17091178894043
    9. '):
' → logprob: -10.29591178894043
    10. '           ' → logprob: -10.29591178894043

Token 660: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08353255689144135
    2. '                       ' → logprob: -2.5835325717926025
    3. '               ' → logprob: -5.708532333374023
    4. '                           ' → logprob: -7.958532333374023
    5. '                               ' → logprob: -8.958532333374023
    6. '           ' → logprob: -8.958532333374023
    7. '                    ' → logprob: -9.333532333374023
    8. '       ' → logprob: -9.583532333374023
    9. '			       ' → logprob: -9.833532333374023
    10. '```' → logprob: -9.958532333374023

Token 661: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.5819490551948547
    2. ' now' → logprob: -0.8319490551948547
    3. '                   ' → logprob: -5.206949234008789
    4. '                       ' → logprob: -7.831949234008789
    5. '               ' → logprob: -10.206949234008789
    6. '   ' → logprob: -10.581949234008789
    7. '	now' → logprob: -11.081949234008789
    8. '```' → logprob: -11.956949234008789
    9. '       ' → logprob: -12.081949234008789
    10. '           ' → logprob: -12.456949234008789

Token 662: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06243424117565155
    2. '=' → logprob: -2.812434196472168
    3. ' +=' → logprob: -7.687434196472168
    4. '+=' → logprob: -11.812434196472168
    5. ' ' → logprob: -15.687434196472168
    6. ' *=' → logprob: -15.812434196472168
    7. ')' → logprob: -16.312435150146484
    8. '=get' → logprob: -16.437435150146484
    9. '   ' → logprob: -17.687435150146484
    10. ',' → logprob: -18.062435150146484

Token 663: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.20156966149806976
    2. 'get' → logprob: -1.701569676399231
    3. 'mod' → logprob: -9.451569557189941
    4. ' mod' → logprob: -9.826569557189941
    5. '(get' → logprob: -10.951569557189941
    6. '	get' → logprob: -13.701569557189941
    7. ' ' → logprob: -14.076569557189941
    8. '.get' → logprob: -14.326569557189941
    9. '=get' → logprob: -14.451569557189941
    10. '[get' → logprob: -14.576569557189941

Token 664: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.00015872348740231246
    2. 'now' → logprob: -8.750158309936523
    3. '```' → logprob: -16.500158309936523
    4. '[now' → logprob: -17.625158309936523
    5. '_NOW' → logprob: -18.500158309936523
    6. '_get' → logprob: -18.500158309936523
    7. '_here' → logprob: -19.000158309936523
    8. '`' → logprob: -19.500158309936523
    9. 'get' → logprob: -19.625158309936523
    10. 'Now' → logprob: -19.875158309936523

Token 665: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.023276345804333687
    2. '_now' → logprob: -3.7732763290405273
    3. 'now' → logprob: -11.023276329040527
    4. 'dist' → logprob: -11.523276329040527
    5. '_d' → logprob: -12.648276329040527
    6. '```' → logprob: -14.023276329040527
    7. '_' → logprob: -16.648277282714844
    8. '_not' → logprob: -16.648277282714844
    9. '[now' → logprob: -16.648277282714844
    10. 'Now' → logprob: -16.773277282714844

Token 666: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.0006489329971373081
    2. 'between' → logprob: -7.3756489753723145
    3. '_two' → logprob: -11.500648498535156
    4. '```' → logprob: -12.125648498535156
    5. '_less' → logprob: -12.625648498535156
    6. '(two' → logprob: -13.875648498535156
    7. '_b' → logprob: -14.000648498535156
    8. 'two' → logprob: -14.625648498535156
    9. '_now' → logprob: -15.375648498535156
    10. ' between' → logprob: -15.375648498535156

Token 667: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -9.031157969729975e-05
    2. '(one' → logprob: -10.250090599060059
    3. 'X' → logprob: -11.125090599060059
    4. '_two' → logprob: -11.500090599060059
    5. '(two' → logprob: -11.625090599060059
    6. '```' → logprob: -12.000090599060059
    7. '_' → logprob: -12.125090599060059
    8. '_one' → logprob: -12.250090599060059
    9. '_T' → logprob: -13.250090599060059
    10. '(X' → logprob: -13.500090599060059

Token 668: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.9875121712684631
    2. '_one' → logprob: -0.9875121712684631
    3. '(one' → logprob: -1.4875121116638184
    4. '_two' → logprob: -3.8625121116638184
    5. '_' → logprob: -6.112512111663818
    6. '(two' → logprob: -6.237512111663818
    7. '_X' → logprob: -6.862512111663818
    8. 'and' → logprob: -6.987512111663818
    9. '_between' → logprob: -6.987512111663818
    10. '_T' → logprob: -8.112512588500977

Token 669: '_' (ID: 62)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.14812561869621277
    2. 'one' → logprob: -2.648125648498535
    3. '2' → logprob: -2.898125648498535
    4. '_two' → logprob: -4.648125648498535
    5. '_' → logprob: -6.398125648498535
    6. '(two' → logprob: -8.773125648498535
    7. '```' → logprob: -8.898125648498535
    8. '(one' → logprob: -9.523125648498535
    9. 'X' → logprob: -10.023125648498535
    10. ' two' → logprob: -10.148125648498535

Token 670: '2' (ID: 17)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0006992113194428384
    2. '2' → logprob: -7.375699043273926
    3. '(two' → logprob: -10.250699043273926
    4. 'one' → logprob: -10.875699043273926
    5. ' two' → logprob: -11.125699043273926
    6. '_two' → logprob: -12.750699043273926
    7. 'tw' → logprob: -15.500699043273926
    8. ' ' → logprob: -16.000699996948242
    9. '```' → logprob: -16.375699996948242
    10. 't' → logprob: -17.000699996948242

Token 671: 'X' (ID: 55)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.010752556845545769
    2. 'one' → logprob: -5.0107526779174805
    3. '(two' → logprob: -5.7607526779174805
    4. 'wo' → logprob: -7.2607526779174805
    5. '(one' → logprob: -9.63575267791748
    6. '_two' → logprob: -10.01075267791748
    7. 'Two' → logprob: -10.51075267791748
    8. ' two' → logprob: -11.76075267791748
    9. 'o' → logprob: -12.26075267791748
    10. '
' → logprob: -12.51075267791748

Token 672: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.002507047727704048
    2. '(two' → logprob: -6.002507209777832
    3. '(' → logprob: -10.377507209777832
    4. 'one' → logprob: -15.877507209777832
    5. ' (' → logprob: -17.752506256103516
    6. '(
' → logprob: -17.877506256103516
    7. ' one' → logprob: -18.002506256103516
    8. '(now' → logprob: -19.627506256103516
    9. '```' → logprob: -19.627506256103516
    10. 'One' → logprob: -19.627506256103516

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002394170151092112
    2. ',d' → logprob: -9.125239372253418
    3. ' ,' → logprob: -9.125239372253418
    4. ',t' → logprob: -11.875239372253418
    5. '```' → logprob: -12.375239372253418
    6. ',
' → logprob: -12.625239372253418
    7. '<|end|>' → logprob: -13.500239372253418
    8. '[' → logprob: -13.875239372253418
    9. '+' → logprob: -14.250239372253418
    10. '                   ' → logprob: -14.375239372253418

Token 674: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.003602094016969204
    2. ' dt' → logprob: -5.628602027893066
    3. 'd' → logprob: -14.128602027893066
    4. '
' → logprob: -14.253602027893066
    5. '(dt' → logprob: -16.003602981567383
    6. '_dt' → logprob: -16.503602981567383
    7. 'two' → logprob: -16.503602981567383
    8. 'dtype' → logprob: -16.878602981567383
    9. 'dto' → logprob: -16.878602981567383
    10. ' ' → logprob: -17.003602981567383

Token 675: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -4.084206375409849e-05
    2. 'o' → logprob: -10.875041007995605
    3. 'two' → logprob: -11.375041007995605
    4. 'ow' → logprob: -11.625041007995605
    5. 'we' → logprob: -14.250041007995605
    6. 'w' → logprob: -14.875041007995605
    7. 'owo' → logprob: -16.37504005432129
    8. '_two' → logprob: -16.75004005432129
    9. '```' → logprob: -16.75004005432129
    10. '(two' → logprob: -16.75004005432129

Token 676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6656825866666622e-05
    2. ' ,' → logprob: -10.62502670288086
    3. '```' → logprob: -13.87502670288086
    4. ',
' → logprob: -14.50002670288086
    5. 'zero' → logprob: -15.37502670288086
    6. ')' → logprob: -15.50002670288086
    7. '`,' → logprob: -16.12502670288086
    8. '[' → logprob: -16.87502670288086
    9. ' zero' → logprob: -17.12502670288086
    10. '‌,' → logprob: -17.50002670288086

Token 677: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.023245595395565033
    2. ' zero' → logprob: -3.7732455730438232
    3. '0' → logprob: -17.648244857788086
    4. '_zero' → logprob: -18.898244857788086
    5. 'now' → logprob: -19.148244857788086
    6. '.zero' → logprob: -19.273244857788086
    7. '```' → logprob: -19.523244857788086
    8. '
' → logprob: -19.773244857788086
    9. ' ' → logprob: -20.148244857788086
    10. '-zero' → logprob: -20.398244857788086

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -13.125003814697266
    3. ' ,' → logprob: -13.375003814697266
    4. '   ' → logprob: -15.875003814697266
    5. ',
' → logprob: -16.125003814697266
    6. ')' → logprob: -16.125003814697266
    7. '`,' → logprob: -16.375003814697266
    8. '           ' → logprob: -16.625003814697266
    9. ',module' → logprob: -17.375003814697266
    10. '‌,' → logprob: -17.500003814697266

Token 679: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007099286303855479
    2. ' mod' → logprob: -7.2507100105285645
    3. '	mod' → logprob: -20.000709533691406
    4. '(mod' → logprob: -21.375709533691406
    5. 'moder' → logprob: -22.375709533691406
    6. '```' → logprob: -22.500709533691406
    7. '_mod' → logprob: -22.750709533691406
    8. ' мод' → logprob: -22.875709533691406
    9. ' ' → logprob: -22.875709533691406
    10. '
' → logprob: -23.000709533691406

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ' ,' → logprob: -10.875021934509277
    3. 'fac' → logprob: -13.250021934509277
    4. ',f' → logprob: -15.000021934509277
    5. ',
' → logprob: -15.125021934509277
    6. '```' → logprob: -15.625021934509277
    7. ' fac' → logprob: -16.50002098083496
    8. '_,' → logprob: -17.25002098083496
    9. ')' → logprob: -17.62502098083496
    10. 'f' → logprob: -17.87502098083496

Token 681: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -8.2994620242971e-06
    2. ' fac' → logprob: -11.750008583068848
    3. 'inv' → logprob: -15.125008583068848
    4. 'fab' → logprob: -19.00000762939453
    5. '
' → logprob: -19.25000762939453
    6. 'fact' → logprob: -19.87500762939453
    7. 'Fac' → logprob: -20.00000762939453
    8. 'fa' → logprob: -20.12500762939453
    9. 'fas' → logprob: -20.50000762939453
    10. '_fac' → logprob: -20.50000762939453

Token 682: ',' (ID: 11)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0016722070286050439
    2. ' inv' → logprob: -6.626672267913818
    3. ',' → logprob: -8.00167179107666
    4. '(inv' → logprob: -12.00167179107666
    5. '                   ' → logprob: -13.75167179107666
    6. '           ' → logprob: -13.87667179107666
    7. '   ' → logprob: -14.12667179107666
    8. '               ' → logprob: -14.50167179107666
    9. '```' → logprob: -14.62667179107666
    10. '_inv' → logprob: -14.75167179107666

Token 683: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.001506528351455927
    2. ' inv' → logprob: -6.501506328582764
    3. '
' → logprob: -13.251506805419922
    4. 'fac' → logprob: -14.001506805419922
    5. '(inv' → logprob: -14.376506805419922
    6. ' ' → logprob: -15.751506805419922
    7. '```' → logprob: -15.751506805419922
    8. '   ' → logprob: -15.751506805419922
    9. '
' → logprob: -16.376506805419922
    10. '0' → logprob: -17.001506805419922

Token 684: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003239863086491823
    2. ')
' → logprob: -5.753239631652832
    3. '                   ' → logprob: -10.503239631652832
    4. '               ' → logprob: -11.003239631652832
    5. '           ' → logprob: -12.253239631652832
    6. '):
' → logprob: -12.753239631652832
    7. ' )' → logprob: -13.628239631652832
    8. '   ' → logprob: -13.753239631652832
    9. ')+' → logprob: -13.753239631652832
    10. ')#' → logprob: -13.753239631652832

Token 685: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20251885056495667
    2. '               ' → logprob: -2.077518939971924
    3. '                   ' → logprob: -3.577518939971924
    4. '       ' → logprob: -4.702518939971924
    5. '```' → logprob: -5.327518939971924
    6. ')' → logprob: -5.577518939971924
    7. '                       ' → logprob: -5.952518939971924
    8. '                               ' → logprob: -6.077518939971924
    9. '                           ' → logprob: -6.327518939971924
    10. '<|end|>' → logprob: -6.577518939971924

Token 686: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0582229308784008
    2. 'else' → logprob: -3.683223009109497
    3. ' else' → logprob: -4.308222770690918
    4. '       ' → logprob: -4.683222770690918
    5. '   ' → logprob: -5.183222770690918
    6. '               ' → logprob: -7.183222770690918
    7. 'elif' (adapté à ' elif') → logprob: -7.183222770690918
    8. '
' → logprob: -7.433222770690918
    9. '```' → logprob: -8.058222770690918
    10. ' elif' → logprob: -8.558222770690918

Token 687: ' X' (ID: 2127)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.3350094556808472
    2. 'dist' → logprob: -1.7100094556808472
    3. 'two' → logprob: -1.8350094556808472
    4. ' now' → logprob: -1.9600094556808472
    5. 'now' → logprob: -2.5850095748901367
    6. ' dist' → logprob: -2.5850095748901367
    7. 'False' → logprob: -3.4600095748901367
    8. 'X' → logprob: -3.7100095748901367
    9. 'True' → logprob: -3.7100095748901367
    10. ' X' → logprob: -4.585009574890137

Token 688: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.24311771988868713
    2. '%' → logprob: -1.6181176900863647
    3. ' ==' → logprob: -4.993117809295654
    4. ' *' → logprob: -5.493117809295654
    5. '*' → logprob: -6.118117809295654
    6. '==' → logprob: -6.243117809295654
    7. ':' → logprob: -6.743117809295654
    8. ' >' → logprob: -7.743117809295654
    9. ' ' → logprob: -7.993117809295654
    10. '>' → logprob: -8.368117332458496

Token 689: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013858173042535782
    2. ' ' → logprob: -9.000138282775879
    3. '3' → logprob: -11.750138282775879
    4. '```' → logprob: -13.250138282775879
    5. '==' → logprob: -13.625138282775879
    6. '1' → logprob: -14.500138282775879
    7. '6' → logprob: -14.500138282775879
    8. '=' → logprob: -14.625138282775879
    9. '<|end|>' → logprob: -14.750138282775879
    10. ')' → logprob: -15.000138282775879

Token 690: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '3' → logprob: -15.75000286102295
    4. '1' → logprob: -15.75000286102295
    5. '```' → logprob: -17.125003814697266
    6. '==' → logprob: -18.375003814697266
    7. '4' → logprob: -18.375003814697266
    8. '>' → logprob: -18.375003814697266
    9. '<|end|>' → logprob: -18.625003814697266
    10. '
' → logprob: -18.625003814697266

Token 691: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11291516572237015
    2. ' ==' → logprob: -2.237915277481079
    3. ':' → logprob: -10.2379150390625
    4. '!=' → logprob: -10.8629150390625
    5. '```' → logprob: -11.1129150390625
    6. '=' → logprob: -11.8629150390625
    7. ' !=' → logprob: -12.1129150390625
    8. '===' → logprob: -13.1129150390625
    9. '()==' → logprob: -13.1129150390625
    10. '[' → logprob: -13.3629150390625

Token 692: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2816048860549927
    2. '1' → logprob: -1.4066048860549927
    3. ' ' → logprob: -7.906604766845703
    4. '2' → logprob: -9.406604766845703
    5. '=' → logprob: -14.031604766845703
    6. '   ' → logprob: -14.094104766845703
    7. '
' → logprob: -14.531604766845703
    8. '==' → logprob: -14.906604766845703
    9. '  ' → logprob: -15.906604766845703
    10. '```' → logprob: -16.031604766845703

Token 693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048618022352457047
    2. '0' → logprob: -3.0486180782318115
    3. '2' → logprob: -10.92361831665039
    4. ' ' → logprob: -11.42361831665039
    5. '```' → logprob: -15.23611831665039
    6. '==' → logprob: -15.61111831665039
    7. '
' → logprob: -15.92361831665039
    8. '=' → logprob: -15.92361831665039
    9. '3' → logprob: -16.23611831665039
    10. '[' → logprob: -16.42361831665039

Token 694: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10597824305295944
    2. ':
' → logprob: -2.48097825050354
    3. ' and' → logprob: -4.480978012084961
    4. '               ' → logprob: -5.480978012084961
    5. '           ' → logprob: -7.355978012084961
    6. 'and' → logprob: -7.480978012084961
    7. '==' → logprob: -9.980978012084961
    8. '       ' → logprob: -10.105978012084961
    9. '              ' → logprob: -11.355978012084961
    10. '   ' → logprob: -11.605978012084961

Token 695: ' one' (ID: 1001)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.6222537755966187
    2. ' two' → logprob: -1.9972537755966187
    3. 'one' → logprob: -2.122253894805908
    4. 'now' → logprob: -2.372253894805908
    5. ' now' → logprob: -2.872253894805908
    6. 'zero' → logprob: -3.622253894805908
    7. ' one' → logprob: -4.372253894805908
    8. ' zero' → logprob: -4.872253894805908
    9. 'True' → logprob: -5.372253894805908
    10. '(two' → logprob: -6.622253894805908

Token 696: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12701483070850372
    2. '==' → logprob: -2.1270148754119873
    3. ' >' → logprob: -9.627015113830566
    4. ' !=' → logprob: -11.752015113830566
    5. '>' → logprob: -12.127015113830566
    6. ' ' → logprob: -12.377015113830566
    7. '==
' → logprob: -14.377015113830566
    8. '=' → logprob: -14.502015113830566
    9. '!=' → logprob: -14.627015113830566
    10. ' >=' → logprob: -15.377015113830566

Token 697: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022547018306795508
    2. ' ' → logprob: -8.500225067138672
    3. 'zero' → logprob: -10.875225067138672
    4. 'N' → logprob: -13.875225067138672
    5. 'two' → logprob: -14.125225067138672
    6. ' zero' → logprob: -14.250225067138672
    7. '1' → logprob: -14.625225067138672
    8. '2' → logprob: -16.375225067138672
    9. '<|end|>' → logprob: -16.375225067138672
    10. '```' → logprob: -17.250225067138672

Token 698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002458430244587362
    2. ' ' → logprob: -8.375246047973633
    3. 'two' → logprob: -12.250246047973633
    4. 'zero' → logprob: -12.375246047973633
    5. 'N' → logprob: -12.500246047973633
    6. '1' → logprob: -13.625246047973633
    7. '2' → logprob: -14.500246047973633
    8. '   ' → logprob: -15.125246047973633
    9. ' zero' → logprob: -15.750246047973633
    10. ' two' → logprob: -15.875246047973633

Token 699: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08825847506523132
    2. ':
' → logprob: -2.7132585048675537
    3. '               ' → logprob: -4.213258266448975
    4. ' and' → logprob: -6.463258266448975
    5. '       ' → logprob: -7.088258266448975
    6. '           ' → logprob: -8.088258743286133
    7. '```' → logprob: -8.713258743286133
    8. '<|end|>' → logprob: -8.963258743286133
    9. 'and' → logprob: -9.213258743286133
    10. ':

' → logprob: -9.963258743286133

Token 700: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022205570712685585
    2. ' now' → logprob: -6.377220630645752
    3. '       ' → logprob: -8.377220153808594
    4. '           ' → logprob: -8.752220153808594
    5. 'now' → logprob: -9.127220153808594
    6. '   ' → logprob: -11.502220153808594
    7. '```' → logprob: -12.002220153808594
    8. '                   ' → logprob: -13.252220153808594
    9. '	now' → logprob: -14.252220153808594
    10. '[now' → logprob: -14.377220153808594

Token 701: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.34305694699287415
    2. ' now' → logprob: -1.4680569171905518
    3. '               ' → logprob: -3.2180569171905518
    4. '           ' → logprob: -4.468057155609131
    5. '   ' → logprob: -4.968057155609131
    6. 'ans' → logprob: -6.968057155609131
    7. ' ans' → logprob: -7.968057155609131
    8. '	now' → logprob: -9.093056678771973
    9. '       ' → logprob: -9.593056678771973
    10. '```' → logprob: -9.968056678771973

Token 702: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.344149112701416
    2. ' =' → logprob: -1.344149112701416
    3. ' +=' → logprob: -3.844149112701416
    4. '+=' → logprob: -4.719149112701416
    5. '   ' → logprob: -9.594148635864258
    6. '           ' → logprob: -12.219148635864258
    7. ',' → logprob: -12.344148635864258
    8. '       ' → logprob: -12.719148635864258
    9. '    ' → logprob: -13.469148635864258
    10. '	' → logprob: -13.719148635864258

Token 703: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.31779515743255615
    2. 'zero' → logprob: -1.3177951574325562
    3. ' get' → logprob: -5.942795276641846
    4. ' zero' → logprob: -6.317795276641846
    5. 'now' → logprob: -9.817794799804688
    6. '0' → logprob: -10.442794799804688
    7. '(get' → logprob: -11.942794799804688
    8. '   ' → logprob: -14.067794799804688
    9. '```' → logprob: -14.442794799804688
    10. '+' → logprob: -14.817794799804688

Token 704: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.0015646155225113034
    2. 'now' → logprob: -6.5015645027160645
    3. '_zero' → logprob: -10.001564979553223
    4. '_all' → logprob: -11.501564979553223
    5. 'get' → logprob: -12.001564979553223
    6. 'zero' → logprob: -15.751564979553223
    7. '_next' → logprob: -16.126564025878906
    8. '_two' → logprob: -16.251564025878906
    9. '_one' → logprob: -16.751564025878906
    10. '0' → logprob: -17.251564025878906

Token 705: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.318681188422488e-05
    2. 'all' → logprob: -11.62501335144043
    3. '_now' → logprob: -12.62501335144043
    4. '_dist' → logprob: -14.37501335144043
    5. '_ans' → logprob: -16.50001335144043
    6. '_zero' → logprob: -17.25001335144043
    7. 'All' → logprob: -17.50001335144043
    8. '_one' → logprob: -18.37501335144043
    9. '```' → logprob: -18.62501335144043
    10. ''all' → logprob: -18.75001335144043

Token 706: '_tw' (ID: 139926)
  Prédit: '_tw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tw' → logprob: -0.0011658186558634043
    2. 'tw' → logprob: -6.876165866851807
    3. '_two' → logprob: -9.001165390014648
    4. '_t' → logprob: -12.251165390014648
    5. 'two' → logprob: -13.376165390014648
    6. '_all' → logprob: -13.626165390014648
    7. '```' → logprob: -13.876165390014648
    8. '_tokens' → logprob: -16.00116539001465
    9. '_times' → logprob: -16.25116539001465
    10. 'all' → logprob: -16.25116539001465

Token 707: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -3.91732100979425e-05
    2. 'o' → logprob: -10.375039100646973
    3. 'ow' → logprob: -13.875039100646973
    4. 'w' → logprob: -14.000039100646973
    5. 'ос' → logprob: -14.125039100646973
    6. 'oes' → logprob: -14.125039100646973
    7. '```' → logprob: -14.250039100646973
    8. 'ot' → logprob: -14.937539100646973
    9. 'ros' → logprob: -15.000039100646973
    10. 'ows' → logprob: -15.187539100646973

Token 708: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.025131134316325188
    2. '(' → logprob: -3.7751312255859375
    3. '(two' → logprob: -6.6501312255859375
    4. '(one' → logprob: -7.9001312255859375
    5. '(z' → logprob: -9.150131225585938
    6. '(now' → logprob: -10.150131225585938
    7. '(Z' → logprob: -10.650131225585938
    8. '```' → logprob: -11.275131225585938
    9. '(
' → logprob: -11.400131225585938
    10. '(x' → logprob: -11.775131225585938

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005445729475468397
    2. '(two' → logprob: -8.500544548034668
    3. ',t' → logprob: -9.250544548034668
    4. ' ,' → logprob: -9.375544548034668
    5. ')' → logprob: -9.375544548034668
    6. '   ' → logprob: -10.625544548034668
    7. '(one' → logprob: -10.875544548034668
    8. '           ' → logprob: -11.125544548034668
    9. '               ' → logprob: -12.875544548034668
    10. 'two' → logprob: -13.000544548034668

Token 710: ' one' (ID: 1001)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.005507307127118111
    2. ' zero' → logprob: -5.255507469177246
    3. 'two' → logprob: -8.255507469177246
    4. '0' → logprob: -12.005507469177246
    5. 'one' → logprob: -13.005507469177246
    6. ' two' → logprob: -13.130507469177246
    7. ' ' → logprob: -13.505507469177246
    8. '   ' → logprob: -13.755507469177246
    9. '
' → logprob: -15.755507469177246
    10. '  ' → logprob: -16.13050651550293

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.229872087715194e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',
' → logprob: -14.000061988830566
    4. '```' → logprob: -14.000061988830566
    5. ')' → logprob: -14.625061988830566
    6. '               ' → logprob: -14.750061988830566
    7. '`,' → logprob: -15.000061988830566
    8. '           ' → logprob: -15.125061988830566
    9. 'zero' → logprob: -15.125061988830566
    10. '   ' → logprob: -15.250061988830566

Token 712: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.0015023599844425917
    2. ' zero' → logprob: -6.501502513885498
    3. '0' → logprob: -18.251502990722656
    4. '   ' → logprob: -19.126502990722656
    5. ' ' → logprob: -19.876502990722656
    6. 'now' → logprob: -20.251502990722656
    7. '```' → logprob: -20.376502990722656
    8. '_zero' → logprob: -20.501502990722656
    9. '.zero' → logprob: -20.626502990722656
    10. '
' → logprob: -20.751502990722656

Token 713: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43608373403549194
    2. ')
' → logprob: -1.0610837936401367
    3. '           ' → logprob: -4.936083793640137
    4. ')
' → logprob: -9.561083793640137
    5. '               ' → logprob: -10.436083793640137
    6. '       ' → logprob: -10.811083793640137
    7. '   ' → logprob: -11.561083793640137
    8. ',' → logprob: -12.061083793640137
    9. '          ' → logprob: -12.061083793640137
    10. '<|end|>' → logprob: -12.186083793640137

Token 714: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03378815948963165
    2. '       ' → logprob: -3.5337882041931152
    3. '   ' → logprob: -5.908788204193115
    4. '               ' → logprob: -7.283788204193115
    5. '```' → logprob: -7.908788204193115
    6. '                   ' → logprob: -9.158787727355957
    7. '<|end|>' → logprob: -9.908787727355957
    8. '          ' → logprob: -10.658787727355957
    9. ' ans' → logprob: -10.783787727355957
    10. 'ans' → logprob: -11.533787727355957

Token 715: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2554785907268524
    2. '   ' → logprob: -2.255478620529175
    3. '       ' → logprob: -2.380478620529175
    4. '               ' → logprob: -4.630478382110596
    5. '```' → logprob: -5.005478382110596
    6. 'ans' (adapté à ' ans') → logprob: -5.505478382110596
    7. '                   ' → logprob: -6.130478382110596
    8. '	ans' → logprob: -6.505478382110596
    9. ' ans' → logprob: -6.880478382110596
    10. '
' → logprob: -7.880478382110596

Token 716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34912997484207153
    2. '=' → logprob: -1.2241299152374268
    3. ' +=' → logprob: -7.349130153656006
    4. '+=' → logprob: -10.974129676818848
    5. ',' → logprob: -11.599129676818848
    6. ' ' → logprob: -12.599129676818848
    7. '   ' → logprob: -12.849129676818848
    8. '```' → logprob: -13.224129676818848
    9. ' ^=' → logprob: -13.849129676818848
    10. ' |=' → logprob: -13.849129676818848

Token 717: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0789450854063034
    2. ' update' → logprob: -2.5789451599121094
    3. 'ans' → logprob: -10.32894515991211
    4. ' ans' → logprob: -11.45394515991211
    5. '(update' → logprob: -11.45394515991211
    6. '   ' → logprob: -14.20394515991211
    7. '_update' → logprob: -15.07894515991211
    8. '(ans' → logprob: -15.70394515991211
    9. '	update' → logprob: -16.07894515991211
    10. '.update' → logprob: -16.95394515991211

Token 718: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.0016150808660313487
    2. 'ans' → logprob: -6.501615047454834
    3. '(ans' → logprob: -9.126615524291992
    4. '	ans' → logprob: -13.876615524291992
    5. 'Ans' → logprob: -13.876615524291992
    6. '```' → logprob: -14.126615524291992
    7. '_answer' → logprob: -14.251615524291992
    8. ' ans' → logprob: -14.876615524291992
    9. '`' → logprob: -16.376615524291992
    10. '_answers' → logprob: -16.501615524291992

Token 719: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003361774142831564
    2. 'ans' → logprob: -8.000336647033691
    3. '(answer' → logprob: -15.500336647033691
    4. '```' → logprob: -15.500336647033691
    5. '	ans' → logprob: -15.625336647033691
    6. ' ans' → logprob: -16.375335693359375
    7. ' (' → logprob: -16.750335693359375
    8. '(' → logprob: -17.125335693359375
    9. '(
' → logprob: -17.250335693359375
    10. '_ans' → logprob: -17.875335693359375

Token 720: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6769139170646667
    2. '(now' → logprob: -0.8019139170646667
    3. ',' → logprob: -3.3019139766693115
    4. '(' → logprob: -5.301913738250732
    5. ')' → logprob: -7.301913738250732
    6. '[now' → logprob: -7.926913738250732
    7. ' (' → logprob: -8.42691421508789
    8. '```' → logprob: -9.55191421508789
    9. '(
' → logprob: -9.92691421508789
    10. 'ans' → logprob: -10.30191421508789

Token 721: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.313264399766922
    2. ' now' → logprob: -1.3132643699645996
    3. '	now' → logprob: -13.438264846801758
    4. '[now' → logprob: -14.813264846801758
    5. '(now' → logprob: -15.188264846801758
    6. '   ' → logprob: -15.563264846801758
    7. ' ' → logprob: -16.438264846801758
    8. '```' → logprob: -16.438264846801758
    9. '
' → logprob: -17.063264846801758
    10. ' ' → logprob: -17.188264846801758

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01142951101064682
    2. '(' → logprob: -5.511429309844971
    3. ')' → logprob: -5.511429309844971
    4. '   ' → logprob: -6.636429309844971
    5. '(ans' → logprob: -7.136429309844971
    6. '(now' → logprob: -7.636429309844971
    7. ',
' → logprob: -8.261429786682129
    8. ' ,' → logprob: -9.261429786682129
    9. '```' → logprob: -9.761429786682129
    10. '(
' → logprob: -9.886429786682129

Token 723: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007100477814674377
    2. ' mod' → logprob: -7.2507100105285645
    3. '998' → logprob: -16.750709533691406
    4. '
' → logprob: -17.250709533691406
    5. '	mod' → logprob: -17.625709533691406
    6. '(mod' → logprob: -18.250709533691406
    7. '   ' → logprob: -18.500709533691406
    8. 'MOD' → logprob: -19.375709533691406
    9. '```' → logprob: -21.000709533691406
    10. 'moder' → logprob: -21.125709533691406

Token 724: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33749720454216003
    2. '
' → logprob: -1.9624972343444824
    3. '    
' → logprob: -1.9624972343444824
    4. '<|end|>' → logprob: -5.962497234344482
    5. '  
' → logprob: -6.587497234344482
    6. '        
' → logprob: -7.962497234344482
    7. '```' → logprob: -8.212496757507324
    8. ' 
' → logprob: -8.462496757507324
    9. '   
' → logprob: -8.837496757507324
    10. '	
' → logprob: -9.462496757507324

Token 725: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015903325751423836
    2. '```' → logprob: -4.765903472900391
    3. '<|end|>' → logprob: -5.890903472900391
    4. 'print' → logprob: -6.140903472900391
    5. '
' → logprob: -6.265903472900391
    6. '``' → logprob: -8.64090347290039
    7. '    
' → logprob: -10.26590347290039
    8. ')' → logprob: -10.26590347290039
    9. ' print' → logprob: -10.51590347290039
    10. '<|end|>' → logprob: -10.64090347290039

Token 726: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013404562138020992
    2. 'print' (adapté à ' print') → logprob: -4.513404369354248
    3. '```' → logprob: -6.138404369354248
    4. ' print' → logprob: -9.888404846191406
    5. '    
' → logprob: -10.388404846191406
    6. '
' → logprob: -10.513404846191406
    7. 'if' → logprob: -10.638404846191406
    8. '``' → logprob: -10.638404846191406
    9. '<|end|>' → logprob: -11.138404846191406
    10. '	print' → logprob: -11.763404846191406

Token 727: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.619311974034645e-05
    2. 'ans' → logprob: -10.500036239624023
    3. '(' → logprob: -11.750036239624023
    4. '(
' → logprob: -15.125036239624023
    5. '()' → logprob: -15.500036239624023
    6. ' (' → logprob: -16.000036239624023
    7. '(answer' → logprob: -16.750036239624023
    8. '```' → logprob: -17.375036239624023
    9. '	ans' → logprob: -17.375036239624023
    10. ' ans' → logprob: -18.375036239624023

Token 728: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3438327843905427e-05
    2. '()' → logprob: -11.37502384185791
    3. ')
' → logprob: -12.62502384185791
    4. '())' → logprob: -12.62502384185791
    5. ')`' → logprob: -13.12502384185791
    6. '`)' → logprob: -13.50002384185791
    7. '   ' → logprob: -14.50002384185791
    8. ' )' → logprob: -14.50002384185791
    9. '```' → logprob: -15.50002384185791
    10. '')' → logprob: -15.75002384185791

Token 729: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 730: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3283163905143738
    2. '<|end|>' → logprob: -1.3283164501190186
    3. '```' → logprob: -5.3283162117004395
    4. '#' → logprob: -6.4533162117004395
    5. '[' → logprob: -6.4533162117004395
    6. ':' → logprob: -6.7033162117004395
    7. '   ' → logprob: -6.7033162117004395
    8. '<|end|>' → logprob: -6.8283162117004395
    9. '=' → logprob: -7.3283162117004395
    10. '%' → logprob: -7.9533162117004395


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 728
Tokens correctement prédits (1ère position, stricte): 288
Tokens correctement prédits (1ère position, avec adaptation): 302
Tokens correctement prédits (top 10): 622
Précision stricte (1ère position): 39.56%
Précision adaptée (1ère position): 41.48%
Précision (top 10): 85.44%
================================================================================
