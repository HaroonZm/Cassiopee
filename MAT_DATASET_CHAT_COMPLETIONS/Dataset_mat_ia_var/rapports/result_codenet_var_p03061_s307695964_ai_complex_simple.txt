================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import mul
from functools import reduce, lru_cache, partial
from math import gcd as math_gcd

def compositional_gcd(seq):
    return reduce(lambda x, y: math_gcd(x, y), seq)

def infinite_identity(elem):
    while True:
        yield elem

def cumulative_gcds(seq):
    from itertools import accumulate
    return list(accumulate(seq, lambda x, y: math_gcd(x, y), initial=0))

def reversed_cumulative_gcds(seq):
    rcum = cumulative_gcds(seq[::-1])
    return rcum[::-1]

def main():
    n = int(input())
    a = list(map(int, input().split()))

    a_gcd = compositional_gcd(a)
    normalized_a = list(map(lambda z: z // a_gcd, a))

    lgcd = cumulative_gcds(normalized_a)
    rgcd = reversed_cumulative_gcds(normalized_a)

    # Advanced comprehension with zip and enumerate for artistry
    g = [math_gcd(l, r) for _, (l, r) in enumerate(zip(lgcd, rgcd[1:]))]

    print(max(g) * a_gcd)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' mul' (ID: 9975)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7380027174949646
    2. ' item' → logprob: -0.9880027174949646
    3. 'item' → logprob: -2.1130027770996094
    4. 'import' → logprob: -3.9880027770996094
    5. ' add' → logprob: -5.363002777099609
    6. 'add' → logprob: -6.363002777099609
    7. ' ' → logprob: -6.613002777099609
    8. 'attr' → logprob: -7.238002777099609
    9. ' attr' → logprob: -7.363002777099609
    10. 'getitem' → logprob: -7.988002777099609

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015041893348097801
    2. '*' → logprob: -4.390041828155518
    3. ',' → logprob: -6.640041828155518
    4. '(
' → logprob: -8.265042304992676
    5. '\(' → logprob: -8.515042304992676
    6. ' (' → logprob: -8.640042304992676
    7. '*(' → logprob: -8.765042304992676
    8. '```' → logprob: -9.515042304992676
    9. '(a' → logprob: -9.765042304992676
    10. 'import' → logprob: -10.140042304992676

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1259823441505432
    2. '*' → logprob: -2.5009822845458984
    3. ',' → logprob: -3.6259822845458984
    4. '\(' → logprob: -6.000982284545898
    5. '(
' → logprob: -6.250982284545898
    6. '**' → logprob: -7.250982284545898
    7. '#' → logprob: -7.375982284545898
    8. ' (' → logprob: -7.375982284545898
    9. '\' → logprob: -7.500982284545898
    10. '```' → logprob: -7.625982284545898

Token 6: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.11598900705575943
    2. 'fun' → logprob: -2.6159889698028564
    3. ' itertools' → logprob: -3.4909889698028564
    4. ' math' → logprob: -5.6159892082214355
    5. 'math' → logprob: -6.3659892082214355
    6. 'operator' → logprob: -8.115988731384277
    7. ' operator' → logprob: -8.865988731384277
    8. ' fun' → logprob: -9.740988731384277
    9. '_' → logprob: -10.490988731384277
    10. '_fun' → logprob: -10.990988731384277

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.43074363470077515
    2. 'import' → logprob: -1.05574369430542
    3. '.' → logprob: -7.05574369430542
    4. '_import' → logprob: -7.43074369430542
    5. '.import' → logprob: -8.680743217468262
    6. '	import' → logprob: -8.805743217468262
    7. '<|end|>' → logprob: -9.680743217468262
    8. '_' → logprob: -9.805743217468262
    9. '```' → logprob: -10.180743217468262
    10. ' ' → logprob: -10.305743217468262

Token 8: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.018634824082255363
    2. ' reduce' → logprob: -4.143634796142578
    3. 'partial' → logprob: -6.018634796142578
    4. ' partial' → logprob: -9.018634796142578
    5. 'redu' → logprob: -11.018634796142578
    6. '_reduce' → logprob: -11.768634796142578
    7. '.reduce' → logprob: -11.893634796142578
    8. 'import' → logprob: -11.893634796142578
    9. 'wrap' → logprob: -13.268634796142578
    10. '.partial' → logprob: -13.768634796142578

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01068615261465311
    2. '(
' → logprob: -4.760685920715332
    3. 'def' → logprob: -6.885685920715332
    4. '\n' → logprob: -8.385685920715332
    5. '(lambda' → logprob: -8.635685920715332
    6. '\' → logprob: -9.260685920715332
    7. 'print' → logprob: -9.635685920715332
    8. '```' → logprob: -9.635685920715332
    9. '(

' → logprob: -9.760685920715332
    10. '`' → logprob: -9.885685920715332

Token 10: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.18091657757759094
    2. ' partial' → logprob: -1.8059165477752686
    3. '```' → logprob: -8.055916786193848
    4. 'wrap' → logprob: -8.805916786193848
    5. 'l' → logprob: -9.055916786193848
    6. '.partial' → logprob: -9.055916786193848
    7. 'import' → logprob: -9.180916786193848
    8. 'reduce' → logprob: -9.305916786193848
    9. ' ' → logprob: -9.430916786193848
    10. 'cmp' → logprob: -10.430916786193848

Token 11: 'ru' (ID: 1942)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8609563708305359
    2. 'ist' → logprob: -1.3609564304351807
    3. 'ambda' → logprob: -1.9859564304351807
    4. 'amb' → logprob: -2.3609564304351807
    5. 'e' → logprob: -3.1109564304351807
    6. 'l' → logprob: -4.610956192016602
    7. 'map' → logprob: -4.610956192016602
    8. 'ru' → logprob: -5.235956192016602
    9. 'lambda' → logprob: -5.610956192016602
    10. 'a' → logprob: -5.860956192016602

Token 12: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.03715008869767189
    2. 'cache' → logprob: -3.4121501445770264
    3. 'ru' → logprob: -5.912149906158447
    4. 'ut' → logprob: -7.912149906158447
    5. 'c' → logprob: -9.287150382995605
    6. '```' → logprob: -9.912150382995605
    7. '_cached' → logprob: -10.287150382995605
    8. 'cached' → logprob: -10.287150382995605
    9. '-cache' → logprob: -10.537150382995605
    10. 'u' → logprob: -10.662150382995605

Token 13: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.782090425491333
    2. '\n' → logprob: -1.157090425491333
    3. '\' → logprob: -2.032090425491333
    4. '(' → logprob: -3.032090425491333
    5. '
' → logprob: -4.032090187072754
    6. '```' → logprob: -5.032090187072754
    7. '(
' → logprob: -5.407090187072754
    8. '@' → logprob: -5.657090187072754
    9. '

' → logprob: -6.032090187072754
    10. '#' → logprob: -6.407090187072754

Token 14: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.8325628042221069
    2. 'partial' → logprob: -0.9575628042221069
    3. ' wraps' → logprob: -2.0825629234313965
    4. 'wrap' → logprob: -3.0825629234313965
    5. ' singled' → logprob: -5.8325629234313965
    6. 'cache' → logprob: -5.9575629234313965
    7. ' cache' → logprob: -6.2075629234313965
    8. 'cached' → logprob: -7.2075629234313965
    9. 'cmp' → logprob: -7.5825629234313965
    10. 'total' → logprob: -7.7075629234313965

Token 15: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3824615478515625
    2. ',' → logprob: -1.7574615478515625
    3. '
' → logprob: -2.0074615478515625
    4. '

' → logprob: -2.1324615478515625
    5. '\' → logprob: -2.1324615478515625
    6. '\n' → logprob: -2.2574615478515625
    7. 'import' → logprob: -3.7574615478515625
    8. '(' → logprob: -4.2574615478515625
    9. ',
' → logprob: -4.2574615478515625
    10. ',

' → logprob: -4.7574615478515625

Token 16: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7404516339302063
    2. '@' → logprob: -1.6154515743255615
    3. '\' → logprob: -2.3654515743255615
    4. ',' → logprob: -3.2404515743255615
    5. '
' → logprob: -3.4904515743255615
    6. '

' → logprob: -3.7404515743255615
    7. '\n' → logprob: -3.8654515743255615
    8. 'd' → logprob: -3.9904515743255615
    9. '```' → logprob: -4.115451812744141
    10. '@

' → logprob: -4.240451812744141

Token 17: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6253918409347534
    2. 'math' → logprob: -1.3753918409347534
    3. ' itertools' → logprob: -1.6253918409347534
    4. 'collections' → logprob: -5.250391960144043
    5. ' collections' → logprob: -5.375391960144043
    6. 'it' → logprob: -6.625391960144043
    7. ' typing' → logprob: -7.000391960144043
    8. 'operator' → logprob: -7.125391960144043
    9. 'typing' → logprob: -7.750391960144043
    10. ' threading' → logprob: -8.000391960144043

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12977370619773865
    2. 'import' → logprob: -2.1297736167907715
    3. ' ' → logprob: -6.1297736167907715
    4. '<|end|>' → logprob: -8.00477409362793
    5. '_import' → logprob: -8.62977409362793
    6. '<|end|>' → logprob: -9.75477409362793
    7. '	import' → logprob: -10.25477409362793
    8. '.' → logprob: -11.62977409362793
    9. ' im' → logprob: -12.25477409362793
    10. ' importar' → logprob: -12.25477409362793

Token 19: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -1.2813912630081177
    2. 'prod' → logprob: -1.5313912630081177
    3. ' factorial' → logprob: -1.9063912630081177
    4. ' gcd' → logprob: -2.406391143798828
    5. 'factor' → logprob: -2.781391143798828
    6. 'log' → logprob: -3.281391143798828
    7. ' sqrt' → logprob: -3.406391143798828
    8. ' prod' → logprob: -3.406391143798828
    9. 'is' → logprob: -3.781391143798828
    10. 'ceil' → logprob: -3.906391143798828

Token 20: ' as' (ID: 472)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1657576560974121
    2. 'def' → logprob: -2.790757656097412
    3. ',' → logprob: -3.040757656097412
    4. '
' → logprob: -3.415757656097412
    5. ',

' → logprob: -5.915757656097412
    6. '


' → logprob: -6.165757656097412
    7. ',
' → logprob: -7.165757656097412
    8. '\' → logprob: -7.290757656097412
    9. 'import' → logprob: -7.290757656097412
    10. '```' → logprob: -7.290757656097412

Token 21: ' math' (ID: 13324)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2966999411582947
    2. 'math' → logprob: -1.5467000007629395
    3. ' gcd' → logprob: -3.5467000007629395
    4. ' math' → logprob: -4.4217000007629395
    5. ' g' → logprob: -6.5467000007629395
    6. '_g' → logprob: -6.9217000007629395
    7. '```' → logprob: -9.546699523925781
    8. 'great' → logprob: -9.796699523925781
    9. '__' → logprob: -10.046699523925781
    10. 'reduce' → logprob: -10.546699523925781

Token 22: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.1647621989250183
    2. 'g' → logprob: -1.914762258529663
    3. '.g' → logprob: -5.789762020111084
    4. '```' → logprob: -7.039762020111084
    5. ' gcd' → logprob: -9.414762496948242
    6. '_' → logprob: -9.664762496948242
    7. 'def' → logprob: -9.789762496948242
    8. 'import' → logprob: -9.789762496948242
    9. '_func' → logprob: -9.789762496948242
    10. '_mul' → logprob: -10.414762496948242

Token 23: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00010831133840838447
    2. 'cdn' → logprob: -10.37510871887207
    3. 'c' → logprob: -10.75010871887207
    4. 'cf' → logprob: -10.87510871887207
    5. '_cd' → logprob: -11.50010871887207
    6. 'dc' → logprob: -12.50010871887207
    7. 'cm' → logprob: -12.50010871887207
    8. 'CD' → logprob: -12.62510871887207
    9. '```' → logprob: -12.75010871887207
    10. 'cdf' → logprob: -13.12510871887207

Token 24: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7900316715240479
    2. '
' → logprob: -1.0400316715240479
    3. '

' → logprob: -2.040031671524048
    4. 'def' → logprob: -3.540031671524048
    5. '\n' → logprob: -4.415031433105469
    6. ',
' → logprob: -5.290031433105469
    7. '\' → logprob: -5.665031433105469
    8. '```' → logprob: -5.665031433105469
    9. ',

' → logprob: -6.415031433105469
    10. 'import' → logprob: -6.540031433105469

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.722050666809082
    2. 'd' → logprob: -0.972050666809082
    3. '@' → logprob: -2.972050666809082
    4. '\' → logprob: -3.347050666809082
    5. '```' → logprob: -4.472050666809082
    6. '
' → logprob: -4.597050666809082
    7. 'g' → logprob: -4.847050666809082
    8. '#' → logprob: -5.347050666809082
    9. '_' → logprob: -5.972050666809082
    10. '`' → logprob: -6.222050666809082

Token 26: ' compos' (ID: 14635)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.0721529871225357
    2. ' calculate' → logprob: -3.947153091430664
    3. ' compute' → logprob: -4.072153091430664
    4. ' l' → logprob: -4.822153091430664
    5. ' g' → logprob: -5.822153091430664
    6. ' ' → logprob: -5.947153091430664
    7. 'g' → logprob: -6.322153091430664
    8. ' reduce' → logprob: -6.322153091430664
    9. ' factorial' → logprob: -6.697153091430664
    10. ' factor' → logprob: -6.822153091430664

Token 27: 'itional' (ID: 3616)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.08893205225467682
    2. 'e' → logprob: -2.8389320373535156
    3. 'ition' → logprob: -4.463932037353516
    4. 'it' → logprob: -4.588932037353516
    5. 'position' → logprob: -6.463932037353516
    6. 'pose' → logprob: -7.088932037353516
    7. 'itional' → logprob: -7.463932037353516
    8. 'i' → logprob: -7.713932037353516
    9. 'ited' → logprob: -7.963932037353516
    10. 'iting' → logprob: -8.213932037353516

Token 28: '_g' (ID: 5439)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25698044896125793
    2. 'ity' → logprob: -2.2569804191589355
    3. '_mul' → logprob: -2.3819804191589355
    4. '_m' → logprob: -5.1319804191589355
    5. '_com' → logprob: -5.6319804191589355
    6. '_mult' → logprob: -6.0069804191589355
    7. '_div' → logprob: -6.0069804191589355
    8. '_function' → logprob: -6.3819804191589355
    9. '_sum' → logprob: -6.3819804191589355
    10. '_product' → logprob: -6.7569804191589355

Token 29: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -4.0484450437361374e-05
    2. 'CD' → logprob: -11.625040054321289
    3. 'cdf' → logprob: -11.875040054321289
    4. '_cd' → logprob: -12.000040054321289
    5. 'c' → logprob: -12.125040054321289
    6. 'cf' → logprob: -13.000040054321289
    7. 'd' → logprob: -13.375040054321289
    8. 'cdn' → logprob: -13.875040054321289
    9. '_c' → logprob: -13.875040054321289
    10. '_g' → logprob: -14.250040054321289

Token 30: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006180775817483664
    2. '(a' → logprob: -9.125617980957031
    3. ' (' → logprob: -9.500617980957031
    4. '(x' → logprob: -9.625617980957031
    5. '("("' → logprob: -9.750617980957031
    6. '(*' → logprob: -10.000617980957031
    7. '_' → logprob: -10.000617980957031
    8. '('' → logprob: -11.250617980957031
    9. '(user' → logprob: -11.250617980957031
    10. '(parent' → logprob: -11.500617980957031

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035386555828154087
    2. ')' → logprob: -5.878538608551025
    3. ',' → logprob: -7.628538608551025
    4. '):
' → logprob: -8.878539085388184
    5. '[' → logprob: -11.003539085388184
    6. ' ):' → logprob: -11.128539085388184
    7. '[]):' → logprob: -11.253539085388184
    8. 's' → logprob: -11.378539085388184
    9. ':' → logprob: -11.503539085388184
    10. '_' → logprob: -11.503539085388184

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007986912503838539
    2. ':' → logprob: -5.132987022399902
    3. '    
' → logprob: -7.507987022399902
    4. '(' → logprob: -7.757987022399902
    5. '    ' → logprob: -8.007987022399902
    6. '\' → logprob: -8.882987022399902
    7. ' :' → logprob: -9.007987022399902
    8. 'return' → logprob: -9.757987022399902
    9. ' return' → logprob: -9.757987022399902
    10. '       ' → logprob: -10.507987022399902

Token 33: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16063271462917328
    2. ' reduce' → logprob: -2.160632610321045
    3. '   ' → logprob: -3.910632610321045
    4. 'return' (adapté à ' return') → logprob: -4.910632610321045
    5. 'reduce' → logprob: -5.660632610321045
    6. '    ' → logprob: -6.660632610321045
    7. ' if' → logprob: -8.035633087158203
    8. ' ' → logprob: -8.660633087158203
    9. ' 
' → logprob: -8.910633087158203
    10. ' gcd' → logprob: -9.785633087158203

Token 34: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.017560934647917747
    2. 'reduce' → logprob: -4.142560958862305
    3. ' functools' → logprob: -6.517560958862305
    4. ' ' → logprob: -10.267560958862305
    5. ' ' → logprob: -12.392560958862305
    6. ' fun' → logprob: -13.142560958862305
    7. 'fun' → logprob: -13.267560958862305
    8. '_reduce' → logprob: -13.392560958862305
    9. '.reduce' → logprob: -14.142560958862305
    10. ' None' → logprob: -14.767560958862305

Token 35: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6314438581466675
    2. '(' → logprob: -0.8814438581466675
    3. '(lambda' → logprob: -3.506443977355957
    4. '(part' → logprob: -3.756443977355957
    5. '(operator' → logprob: -8.131443977355957
    6. '(math' → logprob: -9.006443977355957
    7. '((' → logprob: -10.006443977355957
    8. '(mult' → logprob: -10.506443977355957
    9. '(g' → logprob: -10.881443977355957
    10. '(p' → logprob: -11.006443977355957

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.30448251962661743
    2. 'x' → logprob: -2.1794824600219727
    3. ' math' → logprob: -2.6794824600219727
    4. ' a' → logprob: -3.4294824600219727
    5. ' gcd' → logprob: -3.9294824600219727
    6. 'a' → logprob: -4.429482460021973
    7. ' lambda' → logprob: -5.679482460021973
    8. ' mul' → logprob: -5.679482460021973
    9. 'math' → logprob: -6.179482460021973
    10. ' acc' → logprob: -6.554482460021973

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012122603366151452
    2. ' ,' → logprob: -7.251212120056152
    3. ',g' → logprob: -7.876212120056152
    4. ',m' → logprob: -9.501212120056152
    5. ',x' → logprob: -10.626212120056152
    6. ',y' → logprob: -11.251212120056152
    7. '_,' → logprob: -12.876212120056152
    8. 'g' → logprob: -13.751212120056152
    9. ',l' → logprob: -14.251212120056152
    10. '‌,' → logprob: -14.251212120056152

Token 38: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31362366676330566
    2. ' y' → logprob: -1.3136236667633057
    3. ' ' → logprob: -8.188623428344727
    4. 'mul' → logprob: -10.563623428344727
    5. '	y' → logprob: -11.063623428344727
    6. 'g' → logprob: -11.063623428344727
    7. '  ' → logprob: -12.438623428344727
    8. ' mul' → logprob: -12.563623428344727
    9. ' ' → logprob: -12.813623428344727
    10. '_y' → logprob: -13.251123428344727

Token 39: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016767404973506927
    2. ' :' → logprob: -4.641767501831055
    3. ',' → logprob: -5.016767501831055
    4. ',:' → logprob: -8.391767501831055
    5. '_:' → logprob: -10.391767501831055
    6. ' ,' → logprob: -10.391767501831055
    7. ',m' → logprob: -10.891767501831055
    8. '=' → logprob: -11.141767501831055
    9. ',g' → logprob: -11.391767501831055
    10. ':m' → logprob: -12.266767501831055

Token 40: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02895464561879635
    2. 'math' → logprob: -3.6539547443389893
    3. ' ' → logprob: -6.15395450592041
    4. ' ' → logprob: -8.27895450592041
    5. ' mul' → logprob: -9.90395450592041
    6. ' x' → logprob: -10.46645450592041
    7. ' _' → logprob: -10.52895450592041
    8. ' gcd' → logprob: -10.52895450592041
    9. ' y' → logprob: -11.09145450592041
    10. '_math' → logprob: -11.21645450592041

Token 41: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -5.1689596148207784e-05
    2. '_' → logprob: -10.375051498413086
    3. ' _' → logprob: -12.125051498413086
    4. '_s' → logprob: -12.125051498413086
    5. '_f' → logprob: -12.750051498413086
    6. '```' → logprob: -14.000051498413086
    7. '_c' → logprob: -14.250051498413086
    8. 'g' → logprob: -14.750051498413086
    9. '_d' → logprob: -14.875051498413086
    10. '<|end|>' → logprob: -15.125051498413086

Token 42: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.007859884761273861
    2. 'c' → logprob: -5.007859706878662
    3. '_cd' → logprob: -7.507859706878662
    4. 'd' → logprob: -7.757859706878662
    5. '_c' → logprob: -9.50786018371582
    6. 'cdf' → logprob: -10.75786018371582
    7. ' cd' → logprob: -11.25786018371582
    8. 'dc' → logprob: -11.38286018371582
    9. '_' → logprob: -11.88286018371582
    10. 'cdn' → logprob: -11.88286018371582

Token 43: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12743869423866272
    2. '(' → logprob: -2.12743878364563
    3. ',' → logprob: -8.00243854522705
    4. ')' → logprob: -9.37743854522705
    5. '(y' → logprob: -10.12743854522705
    6. ' (' → logprob: -10.50243854522705
    7. ' ' → logprob: -11.25243854522705
    8. ' ,' → logprob: -12.12743854522705
    9. '(
' → logprob: -13.62743854522705
    10. '),' → logprob: -13.87743854522705

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022839488461613655
    2. ',y' → logprob: -3.8978395462036133
    3. ' ,' → logprob: -6.147839546203613
    4. 'y' → logprob: -8.897839546203613
    5. ' y' → logprob: -11.647839546203613
    6. ' ' → logprob: -12.647839546203613
    7. ',
' → logprob: -12.897839546203613
    8. ')' → logprob: -14.397839546203613
    9. ',

' → logprob: -14.397839546203613
    10. '(y' → logprob: -14.897839546203613

Token 45: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0549226813018322
    2. 'y' → logprob: -2.929922580718994
    3. ')' → logprob: -10.804923057556152
    4. ' ' → logprob: -12.054923057556152
    5. ' ' → logprob: -12.179923057556152
    6. ' )' → logprob: -12.804923057556152
    7. ')y' → logprob: -13.304923057556152
    8. '    ' → logprob: -13.992423057556152
    9. '	y' → logprob: -14.804923057556152
    10. '(y' → logprob: -15.242423057556152

Token 46: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0037635015323758125
    2. ')' → logprob: -5.628763675689697
    3. ',' → logprob: -8.878763198852539
    4. ' ),' → logprob: -11.378763198852539
    5. '   ' → logprob: -12.628763198852539
    6. '),
' → logprob: -12.878763198852539
    7. '))' → logprob: -13.003763198852539
    8. ' ' → logprob: -13.753763198852539
    9. '(seq' → logprob: -14.128763198852539
    10. ')),' → logprob: -14.753763198852539

Token 47: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.0013834515120834112
    2. 'seq' → logprob: -6.626383304595947
    3. ' sequence' → logprob: -10.626383781433105
    4. '(seq' → logprob: -10.626383781433105
    5. ' ' → logprob: -12.876383781433105
    6. ')' → logprob: -13.376383781433105
    7. ' ' → logprob: -13.376383781433105
    8. ' sequ' → logprob: -14.626383781433105
    9. '.seq' → logprob: -14.626383781433105
    10. '    ' → logprob: -14.751383781433105

Token 48: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ' )' → logprob: -12.875005722045898
    3. ')
' → logprob: -13.500005722045898
    4. '<|end|>' → logprob: -15.375005722045898
    5. '`)' → logprob: -15.500005722045898
    6. ')return' → logprob: -15.500005722045898
    7. '))' → logprob: -15.625005722045898
    8. ',' → logprob: -15.875005722045898
    9. ' ' → logprob: -16.3750057220459
    10. ')))' → logprob: -16.6250057220459

Token 49: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' infinite' (ID: 48413)
  Prédit: ' compos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compos' → logprob: -0.011395927518606186
    2. ' compose' → logprob: -5.7613959312438965
    3. ' partial' → logprob: -6.0113959312438965
    4. ' _' → logprob: -6.5113959312438965
    5. ' factorial' → logprob: -6.6363959312438965
    6. ' l' → logprob: -7.3863959312438965
    7. ' gcd' → logprob: -8.011395454406738
    8. ' mul' → logprob: -8.261395454406738
    9. ' composed' → logprob: -8.511395454406738
    10. '_com' → logprob: -8.636395454406738

Token 51: '_identity' (ID: 111655)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.9692874550819397
    2. '_g' → logprob: -1.094287395477295
    3. '_factor' → logprob: -2.594287395477295
    4. '_product' → logprob: -3.219287395477295
    5. '_' → logprob: -3.344287395477295
    6. '_com' → logprob: -3.469287395477295
    7. '_generator' → logprob: -4.094287395477295
    8. '_loop' → logprob: -4.094287395477295
    9. '_list' → logprob: -4.344287395477295
    10. '_m' → logprob: -4.969287395477295

Token 52: '(elem' (ID: 61564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3126178979873657
    2. '(' → logprob: -2.562617778778076
    3. '(x' → logprob: -3.062617778778076
    4. '()' → logprob: -3.187617778778076
    5. '_element' → logprob: -4.062617778778076
    6. '(lambda' → logprob: -4.187617778778076
    7. '(element' → logprob: -4.187617778778076
    8. '(n' → logprob: -4.562617778778076
    9. '_' → logprob: -5.812617778778076
    10. '_sequence' → logprob: -5.937617778778076

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5046362280845642
    2. '=' → logprob: -1.004636287689209
    3. '):
' → logprob: -4.504636287689209
    4. ',' → logprob: -4.879636287689209
    5. ')' → logprob: -5.629636287689209
    6. '=lambda' → logprob: -6.004636287689209
    7. ' =' → logprob: -6.754636287689209
    8. 's' → logprob: -7.004636287689209
    9. ':' → logprob: -7.379636287689209
    10. '_func' → logprob: -7.629636287689209

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004861922934651375
    2. ' while' → logprob: -6.004861831665039
    3. 'while' → logprob: -6.129861831665039
    4. 'yield' → logprob: -9.254861831665039
    5. ' yield' → logprob: -10.879861831665039
    6. ' ' → logprob: -11.004861831665039
    7. ' return' → logprob: -11.254861831665039
    8. 'return' → logprob: -11.379861831665039
    9. 'def' → logprob: -11.379861831665039
    10. '    ' → logprob: -11.629861831665039

Token 55: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16281470656394958
    2. ' while' → logprob: -2.1628146171569824
    3. '   ' → logprob: -3.6628146171569824
    4. 'yield' → logprob: -5.662814617156982
    5. 'def' → logprob: -6.037814617156982
    6. ' ' → logprob: -6.662814617156982
    7. 'return' → logprob: -7.037814617156982
    8. ' yield' → logprob: -7.412814617156982
    9. 'partial' → logprob: -8.41281509399414
    10. 'from' → logprob: -8.66281509399414

Token 56: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.38687896728515625
    2. 'True' → logprob: -1.1368789672851562
    3. ' ' → logprob: -12.261878967285156
    4. '(True' → logprob: -13.011878967285156
    5. '   ' → logprob: -14.386878967285156
    6. '  ' → logprob: -15.636878967285156
    7. '1' → logprob: -15.886878967285156
    8. '    ' → logprob: -16.636878967285156
    9. '=True' → logprob: -17.261878967285156
    10. 'False' → logprob: -17.511878967285156

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07237611711025238
    2. '       ' → logprob: -3.822376012802124
    3. 'yield' → logprob: -3.947376012802124
    4. '   ' → logprob: -5.072376251220703
    5. ' :' → logprob: -5.072376251220703
    6. ' yield' → logprob: -5.197376251220703
    7. ':
' → logprob: -5.322376251220703
    8. '	yield' → logprob: -5.822376251220703
    9. '    ' → logprob: -6.322376251220703
    10. ':return' → logprob: -8.322376251220703

Token 58: '       ' (ID: 309)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.6496623754501343
    2. 'yield' → logprob: -1.0246623754501343
    3. '       ' → logprob: -2.399662494659424
    4. '   ' → logprob: -3.774662494659424
    5. '	yield' → logprob: -5.274662494659424
    6. '    ' → logprob: -10.399662017822266
    7. 'Yield' → logprob: -12.774662017822266
    8. '        ' → logprob: -13.149662017822266
    9. ' yields' → logprob: -13.274662017822266
    10. ':' → logprob: -13.399662017822266

Token 59: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.20176111161708832
    2. ' yield' → logprob: -1.7017611265182495
    3. '	yield' → logprob: -8.326761245727539
    4. '       ' → logprob: -9.201761245727539
    5. '   ' → logprob: -12.326761245727539
    6. 'Yield' → logprob: -15.076761245727539
    7. '           ' → logprob: -16.32676124572754
    8. 'y' → logprob: -16.57676124572754
    9. '        ' → logprob: -17.45176124572754
    10. '```' → logprob: -17.57676124572754

Token 60: ' elem' (ID: 23108)
  Prédit: ' elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elem' → logprob: -0.4287264347076416
    2. 'elem' → logprob: -1.0537264347076416
    3. '	elem' → logprob: -10.803726196289062
    4. '(elem' → logprob: -12.928726196289062
    5. 'element' → logprob: -14.053726196289062
    6. 'ele' → logprob: -14.053726196289062
    7. ' ' → logprob: -14.178726196289062
    8. ' ele' → logprob: -15.803726196289062
    9. ' element' → logprob: -16.053726196289062
    10. '    ' → logprob: -16.053726196289062

Token 61: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10279837995767593
    2. '<|end|>' → logprob: -2.7277984619140625
    3. '

' → logprob: -5.2277984619140625
    4. '*' → logprob: -5.3527984619140625
    5. '
' → logprob: -5.7277984619140625
    6. ' ' → logprob: -5.9777984619140625
    7. '<|end|>' → logprob: -5.9777984619140625
    8. ' 

' → logprob: -6.2277984619140625
    9. ',' → logprob: -6.7277984619140625
    10. '```' → logprob: -6.7277984619140625

Token 62: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019729308784008026
    2. '

' → logprob: -4.519729137420654
    3. '_' → logprob: -5.519729137420654
    4. '
' → logprob: -6.894729137420654
    5. '@' → logprob: -7.269729137420654
    6. '_

' → logprob: -7.769729137420654
    7. '```' → logprob: -8.144729614257812
    8. '*' → logprob: -8.269729614257812
    9. ' 

' → logprob: -8.519729614257812
    10. '#' → logprob: -8.644729614257812

Token 63: ' cumulative' (ID: 75628)
  Prédit: ' compos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compos' → logprob: -0.8736768960952759
    2. ' partial' → logprob: -0.9986768960952759
    3. ' gcd' → logprob: -2.3736767768859863
    4. ' compose' → logprob: -2.8736767768859863
    5. ' _' → logprob: -4.123676776885986
    6. ' factorial' → logprob: -4.998676776885986
    7. ' l' → logprob: -5.498676776885986
    8. ' multiply' → logprob: -5.623676776885986
    9. ' functools' → logprob: -5.623676776885986
    10. ' curry' → logprob: -5.998676776885986

Token 64: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.029241101816296577
    2. '_product' → logprob: -4.52924108505249
    3. '_' → logprob: -4.90424108505249
    4. '_sum' → logprob: -5.15424108505249
    5. '_mul' → logprob: -6.27924108505249
    6. '_m' → logprob: -7.15424108505249
    7. '_reduce' → logprob: -7.40424108505249
    8. '_identity' → logprob: -8.779241561889648
    9. '_prod' → logprob: -9.029241561889648
    10. '_products' → logprob: -9.404241561889648

Token 65: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0038256102707237005
    2. 'CD' → logprob: -5.878825664520264
    3. 'cdf' → logprob: -7.878825664520264
    4. 'enerator' → logprob: -9.003825187683105
    5. 'cdn' → logprob: -9.378825187683105
    6. 'def' → logprob: -9.378825187683105
    7. '```' → logprob: -9.378825187683105
    8. 'enerate' → logprob: -10.253825187683105
    9. '_cd' → logprob: -10.253825187683105
    10. 'enerated' → logprob: -10.503825187683105

Token 66: 's' (ID: 82)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.021298615261912346
    2. '(sequence' → logprob: -4.146298408508301
    3. '(' → logprob: -5.396298408508301
    4. '(lst' → logprob: -7.771298408508301
    5. '(arr' → logprob: -8.8962984085083
    6. '(nums' → logprob: -9.8962984085083
    7. '(iter' → logprob: -10.2712984085083
    8. '(s' → logprob: -10.8962984085083
    9. ' (' → logprob: -11.1462984085083
    10. '(elem' → logprob: -11.5212984085083

Token 67: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.001421664608642459
    2. '(sequence' → logprob: -7.1264214515686035
    3. '(' → logprob: -7.6264214515686035
    4. '(lst' → logprob: -9.501421928405762
    5. '(iter' → logprob: -10.376421928405762
    6. '(arr' → logprob: -11.751421928405762
    7. ' (' → logprob: -11.751421928405762
    8. '(nums' → logprob: -12.126421928405762
    9. '(s' → logprob: -14.376421928405762
    10. '(ss' → logprob: -15.251421928405762

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000592947646509856
    2. '):
' → logprob: -7.500593185424805
    3. ')' → logprob: -10.500593185424805
    4. ' ):' → logprob: -12.375593185424805
    5. ',' → logprob: -12.500593185424805
    6. '):
' → logprob: -12.875593185424805
    7. '   ' → logprob: -14.000593185424805
    8. ' ' → logprob: -15.125593185424805
    9. ':' → logprob: -15.500593185424805
    10. '_' → logprob: -16.125593185424805

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37104088068008423
    2. '():' → logprob: -1.9960408210754395
    3. ':' → logprob: -2.3710408210754395
    4. '():
' → logprob: -3.6210408210754395
    5. '(seq' → logprob: -4.2460408210754395
    6. 'def' → logprob: -4.9960408210754395
    7. ':
' → logprob: -5.2460408210754395
    8. 'yield' → logprob: -5.6210408210754395
    9. 's' → logprob: -5.7460408210754395
    10. ' =' → logprob: -6.1210408210754395

Token 70: ' from' (ID: 591)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.22251643240451813
    2. '   ' → logprob: -3.0975165367126465
    3. ' res' → logprob: -3.0975165367126465
    4. ' gcd' → logprob: -3.3475165367126465
    5. 'result' → logprob: -3.7225165367126465
    6. ' def' → logprob: -4.0975165367126465
    7. ' acc' → logprob: -4.7225165367126465
    8. 'def' → logprob: -5.8475165367126465
    9. 'g' → logprob: -6.0975165367126465
    10. ' for' → logprob: -6.0975165367126465

Token 71: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.8353726863861084
    2. ' functools' → logprob: -1.4603726863861084
    3. ' math' → logprob: -1.7103726863861084
    4. ' operator' → logprob: -1.9603726863861084
    5. 'operator' → logprob: -5.2103729248046875
    6. 'math' → logprob: -5.3353729248046875
    7. ' ' → logprob: -6.9603729248046875
    8. '_' → logprob: -7.0853729248046875
    9. '_operator' → logprob: -8.210372924804688
    10. 'fun' → logprob: -9.710372924804688

Token 72: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2521149516105652
    2. 'import' → logprob: -1.50211501121521
    3. '	import' → logprob: -8.752115249633789
    4. '_import' → logprob: -11.127115249633789
    5. ' ' → logprob: -12.502115249633789
    6. '.import' → logprob: -12.502115249633789
    7. '```' → logprob: -14.127115249633789
    8. '<|end|>' → logprob: -14.127115249633789
    9. '.' → logprob: -14.252115249633789
    10. '-import' → logprob: -14.377115249633789

Token 73: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.26616063714027405
    2. 'acc' → logprob: -1.6411606073379517
    3. '.acc' → logprob: -3.766160726547241
    4. '	acc' → logprob: -4.641160488128662
    5. ' ' → logprob: -5.641160488128662
    6. '_acc' → logprob: -5.766160488128662
    7. ' accumulating' → logprob: -9.26616096496582
    8. ' accumulation' → logprob: -9.64116096496582
    9. ' accumulated' → logprob: -9.76616096496582
    10. ''acc' → logprob: -10.14116096496582

Token 74: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046369582414627075
    2. '   ' → logprob: -3.6713695526123047
    3. '
' → logprob: -4.796369552612305
    4. '       ' → logprob: -5.921369552612305
    5. '(lambda' → logprob: -6.546369552612305
    6. ',
' → logprob: -6.796369552612305
    7. '(' → logprob: -6.921369552612305
    8. ' ,' → logprob: -7.046369552612305
    9. 'def' → logprob: -7.171369552612305
    10. '    
' → logprob: -7.171369552612305

Token 75: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5448405742645264
    2. '   ' → logprob: -1.0448405742645264
    3. '
' → logprob: -2.9198405742645264
    4. '    
' → logprob: -4.9198408126831055
    5. ' ,' → logprob: -5.9198408126831055
    6. '

' → logprob: -6.6698408126831055
    7. ' ' → logprob: -7.9198408126831055
    8. '(' → logprob: -7.9198408126831055
    9. ' (' → logprob: -8.294840812683105
    10. 'def' → logprob: -8.294840812683105

Token 76: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06185798719525337
    2. 'return' (adapté à ' return') → logprob: -3.1868579387664795
    3. 'def' → logprob: -5.186858177185059
    4. ' return' → logprob: -5.811858177185059
    5. 'import' → logprob: -6.061858177185059
    6. '    
' → logprob: -6.311858177185059
    7. 'acc' → logprob: -6.436858177185059
    8. '
' → logprob: -6.436858177185059
    9. ',' → logprob: -6.936858177185059
    10. 'lambda' → logprob: -7.436858177185059

Token 77: ' list' (ID: 1562)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.007960181683301926
    2. ' list' → logprob: -5.507960319519043
    3. 'acc' → logprob: -5.632960319519043
    4. 'list' → logprob: -9.132960319519043
    5. '(acc' → logprob: -9.632960319519043
    6. ' acc' → logprob: -9.632960319519043
    7. ' ' → logprob: -11.382960319519043
    8. ' acum' → logprob: -12.257960319519043
    9. ' accum' → logprob: -12.382960319519043
    10. ' accu' → logprob: -12.382960319519043

Token 78: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -4.60414821645827e-06
    2. '(ac' → logprob: -13.000004768371582
    3. '(' → logprob: -13.625004768371582
    4. 'acc' → logprob: -14.000004768371582
    5. '	acc' → logprob: -15.750004768371582
    6. '.acc' → logprob: -17.500003814697266
    7. ' accumulate' → logprob: -17.625003814697266
    8. ' (' → logprob: -18.250003814697266
    9. '((' → logprob: -18.750003814697266
    10. '(
' → logprob: -18.750003814697266

Token 79: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.000251326389843598
    2. 'um' → logprob: -8.375251770019531
    3. 'umul' → logprob: -11.625251770019531
    4. 'umal' → logprob: -13.000251770019531
    5. 'uminate' → logprob: -13.250251770019531
    6. 'om' → logprob: -13.375251770019531
    7. 'umut' → logprob: -13.500251770019531
    8. 'ulate' → logprob: -13.875251770019531
    9. '(' → logprob: -14.125251770019531
    10. '```' → logprob: -14.250251770019531

Token 80: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2150009572505951
    2. '(seq' → logprob: -2.090000867843628
    3. '(lambda' → logprob: -3.090000867843628
    4. '(com' → logprob: -3.840000867843628
    5. '(sequence' → logprob: -6.465001106262207
    6. '(
' → logprob: -7.840001106262207
    7. '(math' → logprob: -7.965001106262207
    8. '<|end|>' → logprob: -8.715001106262207
    9. '(s' → logprob: -9.465001106262207
    10. '(defun' → logprob: -10.340001106262207

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.862962229410186e-05
    2. ' ,' → logprob: -10.375078201293945
    3. ',g' → logprob: -10.500078201293945
    4. ',
' → logprob: -11.750078201293945
    5. '),' → logprob: -13.000078201293945
    6. ',m' → logprob: -13.125078201293945
    7. ',

' → logprob: -13.250078201293945
    8. '   ' → logprob: -13.750078201293945
    9. ',function' → logprob: -13.750078201293945
    10. ',map' → logprob: -14.250078201293945

Token 82: ' lambda' (ID: 27871)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3040315508842468
    2. ' compos' → logprob: -1.4290316104888916
    3. 'math' → logprob: -4.0540313720703125
    4. ' lambda' → logprob: -5.5540313720703125
    5. 'com' → logprob: -7.4290313720703125
    6. ')' → logprob: -8.929031372070312
    7. ' com' → logprob: -8.929031372070312
    8. 'lambda' → logprob: -9.304031372070312
    9. ' composition' → logprob: -9.804031372070312
    10. ' composite' → logprob: -9.929031372070312

Token 83: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.018185647204518318
    2. 'x' → logprob: -4.018185615539551
    3. ' acc' → logprob: -11.64318561553955
    4. ' a' → logprob: -11.64318561553955
    5. 'a' → logprob: -12.01818561553955
    6. ',' → logprob: -12.39318561553955
    7. 'acc' → logprob: -12.64318561553955
    8. ' ' → logprob: -12.76818561553955
    9. '<|end|>' → logprob: -14.39318561553955
    10. ' ,' → logprob: -15.14318561553955

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005109833553433418
    2. ',y' → logprob: -5.630109786987305
    3. ' ,' → logprob: -6.505109786987305
    4. ',x' → logprob: -11.880109786987305
    5. 'y' → logprob: -13.630109786987305
    6. '_,' → logprob: -14.130109786987305
    7. ' y' → logprob: -14.380109786987305
    8. ',g' → logprob: -14.880109786987305
    9. ',m' → logprob: -15.130109786987305
    10. '‌,' → logprob: -15.255109786987305

Token 85: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519306540489197
    2. ' y' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.876930236816406
    4. '	y' → logprob: -14.876930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '_y' → logprob: -16.751930236816406
    7. '  ' → logprob: -16.751930236816406
    8. '    ' → logprob: -17.001930236816406
    9. '   ' → logprob: -17.251930236816406
    10. ',y' → logprob: -17.376930236816406

Token 86: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016254302114248276
    2. ',' → logprob: -4.391254425048828
    3. ' :' → logprob: -5.641254425048828
    4. ',:' → logprob: -8.766254425048828
    5. ',m' → logprob: -11.016254425048828
    6. ' ,' → logprob: -11.891254425048828
    7. ':,' → logprob: -12.016254425048828
    8. ':m' → logprob: -14.266254425048828
    9. '=' → logprob: -14.516254425048828
    10. ',g' → logprob: -14.641254425048828

Token 87: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.009269000962376595
    2. 'math' → logprob: -5.0092692375183105
    3. ' ' → logprob: -6.0092692375183105
    4. ' ' → logprob: -10.509268760681152
    5. ' mathematical' → logprob: -11.509268760681152
    6. '(math' → logprob: -11.634268760681152
    7. ' mul' → logprob: -11.884268760681152
    8. '  ' → logprob: -12.446768760681152
    9. ')' → logprob: -12.509268760681152
    10. '/math' → logprob: -12.821768760681152

Token 88: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.00012047011114191264
    2. '_' → logprob: -9.125120162963867
    3. '_s' → logprob: -12.125120162963867
    4. '<|end|>' → logprob: -13.250120162963867
    5. 'g' → logprob: -13.625120162963867
    6. ' _' → logprob: -14.375120162963867
    7. '_c' → logprob: -14.750120162963867
    8. '```' → logprob: -15.625120162963867
    9. '_f' → logprob: -15.750120162963867
    10. '_gid' → logprob: -16.000120162963867

Token 89: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0035273751709610224
    2. 'c' → logprob: -5.7535271644592285
    3. 'd' → logprob: -8.253527641296387
    4. '_cd' → logprob: -9.628527641296387
    5. 'cdf' → logprob: -12.128527641296387
    6. 'CD' → logprob: -12.378527641296387
    7. 'Cd' → logprob: -12.878527641296387
    8. '<|end|>' → logprob: -13.253527641296387
    9. 'cdn' → logprob: -13.628527641296387
    10. '_c' → logprob: -13.628527641296387

Token 90: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16087450087070465
    2. '(' → logprob: -1.9108744859695435
    3. ')' → logprob: -7.785874366760254
    4. ',' → logprob: -8.535874366760254
    5. ' (' → logprob: -10.535874366760254
    6. ' ' → logprob: -12.785874366760254
    7. '(
' → logprob: -12.785874366760254
    8. ')(' → logprob: -13.160874366760254
    9. ' ,' → logprob: -14.035874366760254
    10. '),' → logprob: -14.160874366760254

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00333420280367136
    2. ',y' → logprob: -5.753334045410156
    3. ' ,' → logprob: -9.128334045410156
    4. ')' → logprob: -11.128334045410156
    5. 'y' → logprob: -11.128334045410156
    6. ' ' → logprob: -12.253334045410156
    7. ',
' → logprob: -12.378334045410156
    8. ' y' → logprob: -13.003334045410156
    9. '<|end|>' → logprob: -13.128334045410156
    10. ',x' → logprob: -13.503334045410156

Token 92: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132683336734772
    2. ' y' → logprob: -1.3132683038711548
    3. ' ' → logprob: -12.813268661499023
    4. ')' → logprob: -13.688268661499023
    5. 'x' → logprob: -13.938268661499023
    6. ')y' → logprob: -13.938268661499023
    7. '	y' → logprob: -14.938268661499023
    8. '<|end|>' → logprob: -15.188268661499023
    9. ' )' → logprob: -15.688268661499023
    10. ' x' → logprob: -16.438268661499023

Token 93: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.42017513513565063
    2. ')' → logprob: -1.1701750755310059
    3. ')))' → logprob: -3.420175075531006
    4. '),' → logprob: -10.170175552368164
    5. ' ))' → logprob: -13.295175552368164
    6. ',' → logprob: -13.545175552368164
    7. '))))' → logprob: -13.545175552368164
    8. ')
' → logprob: -13.795175552368164
    9. ')));' → logprob: -13.795175552368164
    10. ')),' → logprob: -13.920175552368164

Token 94: ' initial' (ID: 4871)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.2806645631790161
    2. ')' → logprob: -1.5306645631790161
    3. ' initial' → logprob: -1.5306645631790161
    4. 'initial' → logprob: -1.7806645631790161
    5. ' True' → logprob: -3.1556644439697266
    6. ' ))' → logprob: -4.155664443969727
    7. 'reverse' → logprob: -4.405664443969727
    8. 'initializer' → logprob: -4.405664443969727
    9. ' reverse' → logprob: -4.530664443969727
    10. ' ' → logprob: -5.155664443969727

Token 95: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00028660334646701813
    2. '=_' → logprob: -9.250287055969238
    3. '=None' → logprob: -9.375287055969238
    4. '=s' → logprob: -9.750287055969238
    5. '=len' → logprob: -11.375287055969238
    6. ' =' → logprob: -12.000287055969238
    7. '=

' → logprob: -12.500287055969238
    8. '=max' → logprob: -13.125287055969238
    9. '=sum' → logprob: -13.250287055969238
    10. ')=' → logprob: -13.500287055969238

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.750025749206543
    3. 'seq' → logprob: -12.875025749206543
    4. ')' → logprob: -14.125025749206543
    5. '1' → logprob: -14.750025749206543
    6. 'None' → logprob: -16.000024795532227
    7. '   ' → logprob: -16.375024795532227
    8. '[' → logprob: -17.250024795532227
    9. '۰' → logprob: -17.250024795532227
    10. '<|end|>' → logprob: -17.250024795532227

Token 97: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47408947348594666
    2. ')' → logprob: -0.974089503288269
    3. ')))' → logprob: -11.974089622497559
    4. ' ))' → logprob: -13.474089622497559
    5. '),' → logprob: -13.599089622497559
    6. ')
' → logprob: -13.599089622497559
    7. ' )' → logprob: -13.724089622497559
    8. ')>' → logprob: -14.474089622497559
    9. '))
' → logprob: -15.099089622497559
    10. ').' → logprob: -16.474088668823242

Token 98: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00581621378660202
    2. ' ' → logprob: -6.0058159828186035
    3. '#' → logprob: -7.2558159828186035
    4. '[' → logprob: -7.5058159828186035
    5. ',' → logprob: -7.7558159828186035
    6. '<|end|>' → logprob: -7.7558159828186035
    7. '(' → logprob: -7.8808159828186035
    8. ' )' → logprob: -8.380816459655762
    9. '.' → logprob: -8.880816459655762
    10. '
' → logprob: -9.130816459655762

Token 99: ' reversed' (ID: 57184)
  Prédit: ' compos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compos' → logprob: -0.040238916873931885
    2. ' partial' → logprob: -4.290238857269287
    3. ' gcd' → logprob: -5.165238857269287
    4. ' compose' → logprob: -5.290238857269287
    5. ' factorial' → logprob: -5.790238857269287
    6. ' _' → logprob: -6.290238857269287
    7. ' composite' → logprob: -6.540238857269287
    8. ' cumulative' → logprob: -7.165238857269287
    9. ' mul' → logprob: -7.290238857269287
    10. ' l' → logprob: -7.415238857269287

Token 100: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.051188159734010696
    2. '(' → logprob: -3.4261882305145264
    3. '_(' → logprob: -5.051187992095947
    4. '_parent' → logprob: -5.426187992095947
    5. '_sequence' → logprob: -6.301187992095947
    6. '('_' → logprob: -7.176187992095947
    7. '_s' → logprob: -7.426187992095947
    8. '_com' → logprob: -7.551187992095947
    9. '_g' → logprob: -7.926187992095947
    10. '```' → logprob: -7.926187992095947

Token 101: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.002861104905605316
    2. 'um' → logprob: -6.752861022949219
    3. 'om' → logprob: -7.002861022949219
    4. 'umul' → logprob: -8.252861022949219
    5. 'umsum' → logprob: -8.752861022949219
    6. 'df' → logprob: -9.252861022949219
    7. 'c' → logprob: -9.377861022949219
    8. 'uml' → logprob: -10.002861022949219
    9. 'ums' → logprob: -11.002861022949219
    10. 'umulate' → logprob: -11.252861022949219

Token 102: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0038601739797741175
    2. '_' → logprob: -5.753859996795654
    3. '_s' → logprob: -7.628859996795654
    4. '_c' → logprob: -8.878860473632812
    5. 'g' → logprob: -11.378860473632812
    6. '```' → logprob: -11.753860473632812
    7. 's' → logprob: -11.878860473632812
    8. '_gc' → logprob: -12.128860473632812
    9. ' _' → logprob: -12.753860473632812
    10. '_sum' → logprob: -13.128860473632812

Token 103: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -3.5597102396423e-05
    2. 'CD' → logprob: -10.750035285949707
    3. 'cdn' → logprob: -12.000035285949707
    4. 'c' → logprob: -12.500035285949707
    5. 'cdf' → logprob: -13.375035285949707
    6. 'cs' → logprob: -13.875035285949707
    7. 'cdr' → logprob: -14.500035285949707
    8. '_cd' → logprob: -14.625035285949707
    9. ' cds' → logprob: -15.750035285949707
    10. 'ds' → logprob: -16.125036239624023

Token 104: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3902033970225602e-05
    2. '(s' → logprob: -11.750014305114746
    3. '(' → logprob: -13.250014305114746
    4. '_s' → logprob: -13.500014305114746
    5. '(seq' → logprob: -13.750014305114746
    6. ' s' → logprob: -14.875014305114746
    7. 'seq' → logprob: -15.125014305114746
    8. ' (' → logprob: -15.750014305114746
    9. ''s' → logprob: -15.875014305114746
    10. '```' → logprob: -16.25001335144043

Token 105: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.01821374148130417
    2. '(' → logprob: -4.018213748931885
    3. '(sequence' → logprob: -9.893213272094727
    4. ' (' → logprob: -11.643213272094727
    5. '(se' → logprob: -13.268213272094727
    6. '(s' → logprob: -14.018213272094727
    7. '(lst' → logprob: -14.768213272094727
    8. '(ss' → logprob: -15.143213272094727
    9. '(seg' → logprob: -15.643213272094727
    10. '(iter' → logprob: -16.143213272094727

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006184352096170187
    2. ',' → logprob: -8.000617980957031
    3. '):
' → logprob: -8.625617980957031
    4. ')' → logprob: -9.500617980957031
    5. ' ):' → logprob: -10.875617980957031
    6. '(seq' → logprob: -12.250617980957031
    7. '):
' → logprob: -13.250617980957031
    8. ':' → logprob: -13.875617980957031
    9. '   ' → logprob: -14.250617980957031
    10. '):

' → logprob: -15.375617980957031

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043275948613882065
    2. ' return' → logprob: -3.668275833129883
    3. 'from' → logprob: -4.668275833129883
    4. ' from' → logprob: -5.043275833129883
    5. 'return' → logprob: -7.043275833129883
    6. 'def' → logprob: -10.168275833129883
    7. '```' → logprob: -11.418275833129883
    8. 'import' → logprob: -11.793275833129883
    9. '(seq' → logprob: -11.793275833129883
    10. ' def' → logprob: -11.918275833129883

Token 108: ' rc' (ID: 23309)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.17810389399528503
    2. 'from' → logprob: -2.3031039237976074
    3. ' return' → logprob: -2.8031039237976074
    4. '   ' → logprob: -7.303103923797607
    5. 'return' → logprob: -7.428103923797607
    6. ' seq' → logprob: -7.803103923797607
    7. ' list' → logprob: -8.05310344696045
    8. ' def' → logprob: -8.67810344696045
    9. ' import' → logprob: -9.30310344696045
    10. ' reversed' → logprob: -9.42810344696045

Token 109: 'um' (ID: 394)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -1.065268874168396
    2. '=' → logprob: -1.940268874168396
    3. 'from' → logprob: -2.1902689933776855
    4. '_seq' → logprob: -2.3152689933776855
    5. 'seq' → logprob: -2.5652689933776855
    6. ' =' → logprob: -2.6902689933776855
    7. 'def' → logprob: -3.0652689933776855
    8. 'ever' → logprob: -3.3152689933776855
    9. '(seq' → logprob: -3.9402689933776855
    10. 'ec' → logprob: -4.5652689933776855

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2427282333374023
    2. 'ulate' → logprob: -1.6177282333374023
    3. 'ulative' → logprob: -1.6177282333374023
    4. 'ulated' → logprob: -1.8677282333374023
    5. 'seq' → logprob: -2.7427282333374023
    6. '=' → logprob: -2.9927282333374023
    7. 'ul' → logprob: -4.242728233337402
    8. 's' → logprob: -5.117728233337402
    9. '_seq' → logprob: -5.117728233337402
    10. 'sum' → logprob: -5.492728233337402

Token 111: ' cumulative' (ID: 75628)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1764872521162033
    2. ' list' → logprob: -2.1764872074127197
    3. 're' → logprob: -3.1764872074127197
    4. 'seq' → logprob: -6.801487445831299
    5. 'com' → logprob: -6.926487445831299
    6. 'c' → logprob: -7.176487445831299
    7. '[' → logprob: -7.426487445831299
    8. '[]' → logprob: -7.676487445831299
    9. '[list' → logprob: -8.05148696899414
    10. ' [' → logprob: -8.17648696899414

Token 112: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.020185859873890877
    2. '_c' → logprob: -4.145185947418213
    3. '_' → logprob: -6.145185947418213
    4. 'g' → logprob: -7.145185947418213
    5. 's' → logprob: -7.270185947418213
    6. 'c' → logprob: -7.770185947418213
    7. '_s' → logprob: -10.020185470581055
    8. 'sg' → logprob: -12.395185470581055
    9. '(' → logprob: -12.645185470581055
    10. 'seq' → logprob: -12.645185470581055

Token 113: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.013478424400091171
    2. '_g' → logprob: -4.6384782791137695
    3. 'g' → logprob: -7.0134782791137695
    4. 'seq' → logprob: -7.3884782791137695
    5. ' gcd' → logprob: -7.5134782791137695
    6. 's' → logprob: -7.6384782791137695
    7. '_c' → logprob: -8.63847827911377
    8. 'cs' → logprob: -9.26347827911377
    9. 'cdf' → logprob: -9.26347827911377
    10. 'c' → logprob: -9.38847827911377

Token 114: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00011033779446734115
    2. 'seq' → logprob: -9.125110626220703
    3. '(seq' → logprob: -14.125110626220703
    4. 'sequence' → logprob: -15.125110626220703
    5. 'ss' → logprob: -16.500110626220703
    6. ''s' → logprob: -16.875110626220703
    7. ')' → logprob: -16.875110626220703
    8. 'se' → logprob: -17.250110626220703
    9. '```' → logprob: -17.375110626220703
    10. 'def' → logprob: -17.375110626220703

Token 115: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.059923622757196426
    2. '(re' → logprob: -2.9349236488342285
    3. '(list' → logprob: -5.6849236488342285
    4. '(' → logprob: -6.6849236488342285
    5. 're' → logprob: -8.93492317199707
    6. '[::-' → logprob: -9.30992317199707
    7. 'seq' → logprob: -9.55992317199707
    8. '(sequence' → logprob: -10.43492317199707
    9. '(reverse' → logprob: -11.05992317199707
    10. ' reversed' → logprob: -11.80992317199707

Token 116: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0008070098701864481
    2. '[' → logprob: -7.25080680847168
    3. '[:' → logprob: -9.62580680847168
    4. '[-' → logprob: -11.37580680847168
    5. '[:-' → logprob: -11.87580680847168
    6. '[len' → logprob: -12.75080680847168
    7. ')[' → logprob: -13.12580680847168
    8. '[:]' → logprob: -13.37580680847168
    9. '()[' → logprob: -13.75080680847168
    10. '[
' → logprob: -13.87580680847168

Token 117: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06964416056871414
    2. '1' → logprob: -3.0696442127227783
    3. '::-' → logprob: -4.194643974304199
    4. ':-' → logprob: -6.444643974304199
    5. '[::-' → logprob: -6.569643974304199
    6. 'ed' → logprob: -6.944643974304199
    7. '[' → logprob: -8.5696439743042
    8. ':' → logprob: -8.5696439743042
    9. 'er' → logprob: -8.8196439743042
    10. '```' → logprob: -8.9446439743042

Token 118: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03871341422200203
    2. '))' → logprob: -3.5387134552001953
    3. '])' → logprob: -4.788713455200195
    4. ' )' → logprob: -8.163713455200195
    5. ')])' → logprob: -9.413713455200195
    6. ')))' → logprob: -9.788713455200195
    7. ')
' → logprob: -9.913713455200195
    8. ')[' → logprob: -10.788713455200195
    9. ']))' → logprob: -10.913713455200195
    10. ' ' → logprob: -11.288713455200195

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6522228121757507
    2. '[::-' → logprob: -0.9022228121757507
    3. '
' → logprob: -3.5272228717803955
    4. 'return' → logprob: -3.9022228717803955
    5. ' return' → logprob: -4.652222633361816
    6. '<|end|>' → logprob: -5.402222633361816
    7. '[' → logprob: -6.027222633361816
    8. ')' → logprob: -6.027222633361816
    9. '    
' → logprob: -6.277222633361816
    10. ',' → logprob: -7.527222633361816

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4139847159385681
    2. ' return' → logprob: -1.163984775543213
    3. '   ' → logprob: -3.663984775543213
    4. 'rc' → logprob: -7.163984775543213
    5. ' rc' → logprob: -8.538984298706055
    6. '
' → logprob: -9.788984298706055
    7. ' ' → logprob: -10.788984298706055
    8. '    
' → logprob: -11.538984298706055
    9. ')' → logprob: -11.788984298706055
    10. '  ' → logprob: -11.788984298706055

Token 121: ' rc' (ID: 23309)
  Prédit: ' rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rc' → logprob: -0.38793742656707764
    2. 'rc' → logprob: -1.1379374265670776
    3. '[' → logprob: -7.512937545776367
    4. ' [' → logprob: -8.887937545776367
    5. 'list' → logprob: -8.887937545776367
    6. ' list' → logprob: -9.387937545776367
    7. '(rc' → logprob: -9.387937545776367
    8. '	rc' → logprob: -10.137937545776367
    9. ' ' → logprob: -11.637937545776367
    10. 're' → logprob: -12.512937545776367

Token 122: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -2.236549335066229e-05
    2. '[' → logprob: -12.000021934509277
    3. 'u' → logprob: -12.500021934509277
    4. 'ум' → logprob: -12.500021934509277
    5. 'cum' → logprob: -12.875021934509277
    6. 'umulative' → logprob: -14.125021934509277
    7. 'umsum' → logprob: -14.250021934509277
    8. 'umulate' → logprob: -15.000021934509277
    9. '```' → logprob: -15.125021934509277
    10. 'om' → logprob: -15.187521934509277

Token 123: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.00512986583635211
    2. '[' → logprob: -5.380129814147949
    3. '[:-' → logprob: -7.755129814147949
    4. ' [' → logprob: -10.75512981414795
    5. '[-' → logprob: -10.75512981414795
    6. '[:]' → logprob: -11.25512981414795
    7. '[:' → logprob: -11.63012981414795
    8. '[len' → logprob: -12.00512981414795
    9. '<|end|>' → logprob: -12.88012981414795
    10. '```' → logprob: -14.13012981414795

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003071117913350463
    2. '-' → logprob: -6.128071308135986
    3. '2' → logprob: -7.128071308135986
    4. '```' → logprob: -10.503070831298828
    5. ')' → logprob: -11.503070831298828
    6. ']' → logprob: -12.128070831298828
    7. '])' → logprob: -12.190570831298828
    8. '<|end|>' → logprob: -12.565570831298828
    9. '[' → logprob: -12.878070831298828
    10. ' ' → logprob: -13.065570831298828

Token 125: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.613945101387799e-05
    2. ']' → logprob: -9.750085830688477
    3. ' )' → logprob: -11.500085830688477
    4. '])' → logprob: -11.500085830688477
    5. '())' → logprob: -13.500085830688477
    6. '(' → logprob: -13.875085830688477
    7. '()' → logprob: -13.875085830688477
    8. ')]' → logprob: -14.000085830688477
    9. '）' → logprob: -14.375085830688477
    10. '<|end|>' → logprob: -14.375085830688477

Token 126: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0246715545654297
    2. '[' → logprob: -1.3996715545654297
    3. '#' → logprob: -1.7746715545654297
    4. '(' → logprob: -2.6496715545654297
    5. '<|end|>' → logprob: -2.7746715545654297
    6. 'def' → logprob: -3.3996715545654297
    7. ':' → logprob: -4.27467155456543
    8. '
' → logprob: -4.64967155456543
    9. ',' → logprob: -5.02467155456543
    10. '_' → logprob: -5.14967155456543

Token 127: ' main' (ID: 2758)
  Prédit: ' compos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compos' → logprob: -0.16203045845031738
    2. ' partial' → logprob: -3.4120304584503174
    3. ' gcd' → logprob: -4.287030220031738
    4. ' compose' → logprob: -4.537030220031738
    5. ' cop' → logprob: -4.787030220031738
    6. ' prefix' → logprob: -4.912030220031738
    7. ' pair' → logprob: -5.162030220031738
    8. ' combined' → logprob: -5.162030220031738
    9. ' composite' → logprob: -5.412030220031738
    10. 'partial' → logprob: -5.724530220031738

Token 128: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5768032670021057
    2. '(' → logprob: -0.8268032670021057
    3. '(:' → logprob: -7.951803207397461
    4. '()' → logprob: -9.201803207397461
    5. '_' → logprob: -9.576803207397461
    6. ':' → logprob: -9.701803207397461
    7. '(_:' → logprob: -10.201803207397461
    8. ' ():' → logprob: -10.451803207397461
    9. '()>' → logprob: -10.576803207397461
    10. '("("' → logprob: -10.951803207397461

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22165456414222717
    2. ' ' → logprob: -2.8466546535491943
    3. '(' → logprob: -3.0966546535491943
    4. '    ' → logprob: -3.3466546535491943
    5. ' (' → logprob: -4.096654415130615
    6. '[' → logprob: -4.221654415130615
    7. ' [' → logprob: -5.596654415130615
    8. ' []' → logprob: -5.596654415130615
    9. ' )' → logprob: -5.846654415130615
    10. ' ()' → logprob: -6.221654415130615

Token 130: ' n' (ID: 297)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -1.0014610290527344
    2. ' seq' → logprob: -1.5014610290527344
    3. 'import' → logprob: -2.1264610290527344
    4. ' import' → logprob: -3.0014610290527344
    5. ' sequence' → logprob: -3.3764610290527344
    6. 'n' (adapté à ' n') → logprob: -3.6264610290527344
    7. ' pass' → logprob: -3.7514610290527344
    8. ' numbers' → logprob: -3.7514610290527344
    9. '   ' → logprob: -3.7514610290527344
    10. 'sequence' → logprob: -3.8764610290527344

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4427054822444916
    2. '=' → logprob: -1.317705512046814
    3. ',' → logprob: -2.4427053928375244
    4. ' ' → logprob: -6.4427056312561035
    5. ' ,' → logprob: -7.5677056312561035
    6. ')' → logprob: -8.192705154418945
    7. '=int' → logprob: -8.317705154418945
    8. '_' → logprob: -8.942705154418945
    9. '<|end|>' → logprob: -9.442705154418945
    10. '  ' → logprob: -9.817705154418945

Token 132: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5264281034469604
    2. 'int' → logprob: -0.9014281034469604
    3. '10' → logprob: -5.90142822265625
    4. ' ' → logprob: -7.90142822265625
    5. '5' → logprob: -9.65142822265625
    6. '20' → logprob: -10.65142822265625
    7. '100' → logprob: -10.90142822265625
    8. 'len' → logprob: -11.02642822265625
    9. ' len' → logprob: -11.52642822265625
    10. '[int' → logprob: -11.65142822265625

Token 133: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2018960565328598
    2. '(' → logprob: -1.701896071434021
    3. 'input' → logprob: -8.576895713806152
    4. '('' → logprob: -8.701895713806152
    5. '()' → logprob: -9.076895713806152
    6. '("' → logprob: -12.076895713806152
    7. ' input' → logprob: -12.951895713806152
    8. '(
' → logprob: -13.201895713806152
    9. '(raw' → logprob: -13.826895713806152
    10. '=input' → logprob: -14.576895713806152

Token 134: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.436536967754364
    2. '())' → logprob: -1.0615370273590088
    3. '(' → logprob: -5.06153678894043
    4. '('' → logprob: -7.56153678894043
    5. '().' → logprob: -8.43653678894043
    6. '()>' → logprob: -8.81153678894043
    7. '());' → logprob: -9.18653678894043
    8. '(),' → logprob: -9.43653678894043
    9. '("("' → logprob: -9.56153678894043
    10. '();)' → logprob: -9.68653678894043

Token 135: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' a' (ID: 261)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.42568597197532654
    2. 'a' (adapté à ' a') → logprob: -1.550686001777649
    3. 'arr' → logprob: -2.1756858825683594
    4. 'sequence' → logprob: -4.675685882568359
    5. 's' → logprob: -5.300685882568359
    6. 'data' → logprob: -6.300685882568359
    7. 'A' → logprob: -6.425685882568359
    8. ' seq' → logprob: -7.550685882568359
    9. 'numbers' → logprob: -7.675685882568359
    10. 'lst' → logprob: -7.800685882568359

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0629344955086708
    2. '=' → logprob: -2.812934398651123
    3. '_' → logprob: -7.937934398651123
    4. 's' → logprob: -8.562934875488281
    5. '[' → logprob: -8.937934875488281
    6. ')' → logprob: -9.437934875488281
    7. '<|end|>' → logprob: -9.562934875488281
    8. '.' → logprob: -10.062934875488281
    9. '[]' → logprob: -10.687934875488281
    10. ',' → logprob: -11.062934875488281

Token 138: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3238312304019928
    2. ' list' → logprob: -1.3238312005996704
    3. '[' → logprob: -5.323831081390381
    4. '[list' → logprob: -5.323831081390381
    5. ' [' → logprob: -7.198831081390381
    6. '[input' → logprob: -11.823831558227539
    7. '[int' → logprob: -12.573831558227539
    8. '[List' → logprob: -13.073831558227539
    9. '[]' → logprob: -13.323831558227539
    10. '[n' → logprob: -13.448831558227539

Token 139: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0032530506141483784
    2. '(' → logprob: -5.878252983093262
    3. '(input' → logprob: -7.878252983093262
    4. '(int' → logprob: -9.753252983093262
    5. '()' → logprob: -12.378252983093262
    6. '(range' → logprob: -12.753252983093262
    7. 'map' → logprob: -13.503252983093262
    8. '(eval' → logprob: -13.878252983093262
    9. ' map' → logprob: -14.628252983093262
    10. '	map' → logprob: -15.753252983093262

Token 140: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010641285916790366
    2. '(' → logprob: -6.876064300537109
    3. 'int' → logprob: -11.50106430053711
    4. '(input' → logprob: -12.00106430053711
    5. ',int' → logprob: -12.50106430053711
    6. '(
' → logprob: -12.62606430053711
    7. ')' → logprob: -12.87606430053711
    8. '=int' → logprob: -13.37606430053711
    9. '<int' → logprob: -13.62606430053711
    10. ']int' → logprob: -14.00106430053711

Token 141: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.41004905104637146
    2. '(input' → logprob: -1.4100490808486938
    3. ',' → logprob: -2.4100489616394043
    4. '(' → logprob: -6.410048961639404
    5. 'input' → logprob: -7.535048961639404
    6. ' ,' → logprob: -9.285049438476562
    7. '=input' → logprob: -9.535049438476562
    8. ' input' → logprob: -10.660049438476562
    9. ')' → logprob: -11.160049438476562
    10. ' (' → logprob: -11.285049438476562

Token 142: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. '(input' → logprob: -16.501928329467773
    4. 'str' → logprob: -17.001928329467773
    5. ' ' → logprob: -18.251928329467773
    6. ',input' → logprob: -18.626928329467773
    7. '	input' → logprob: -19.001928329467773
    8. '<input' → logprob: -19.501928329467773
    9. 'int' → logprob: -19.501928329467773
    10. '=input' → logprob: -19.501928329467773

Token 143: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.107425062713446e-06
    2. '()' → logprob: -12.125006675720215
    3. '(' → logprob: -14.375006675720215
    4. ' ().' → logprob: -15.000006675720215
    5. ')' → logprob: -15.125006675720215
    6. '.' → logprob: -16.00000762939453
    7. 'split' → logprob: -16.12500762939453
    8. '.split' → logprob: -16.37500762939453
    9. ' .' → logprob: -17.00000762939453
    10. '()
' → logprob: -18.12500762939453

Token 144: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.872261317563243e-05
    2. 'strip' → logprob: -9.750059127807617
    3. ' split' → logprob: -15.500059127807617
    4. 'rstrip' → logprob: -16.500059127807617
    5. '(split' → logprob: -16.875059127807617
    6. 'spl' → logprob: -18.125059127807617
    7. '.split' → logprob: -19.750059127807617
    8. '().' → logprob: -21.750059127807617
    9. 's' → logprob: -22.000059127807617
    10. ')' → logprob: -22.250059127807617

Token 145: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02936960570514202
    2. '()' → logprob: -3.779369592666626
    3. '))' → logprob: -5.404369831085205
    4. '())' → logprob: -6.654369831085205
    5. '()))
' → logprob: -9.029369354248047
    6. '(' → logprob: -9.154369354248047
    7. '(),' → logprob: -9.904369354248047
    8. '()));' → logprob: -10.904369354248047
    9. ')' → logprob: -12.029369354248047
    10. '())))' → logprob: -12.404369354248047

Token 146: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' a' (ID: 261)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.17218123376369476
    2. 'left' → logprob: -2.6721811294555664
    3. 'pref' → logprob: -3.9221811294555664
    4. 'l' → logprob: -4.297181129455566
    5. 'pre' → logprob: -4.922181129455566
    6. 'g' → logprob: -4.922181129455566
    7. 'dp' → logprob: -4.922181129455566
    8. 'p' → logprob: -5.297181129455566
    9. 'suffix' → logprob: -5.297181129455566
    10. 'from' → logprob: -5.422181129455566

Token 148: '_g' (ID: 5439)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6115335822105408
    2. '_g' → logprob: -1.3615336418151855
    3. ' =' → logprob: -2.8615336418151855
    4. '=' → logprob: -2.9865336418151855
    5. '[' → logprob: -3.9865336418151855
    6. '<|end|>' → logprob: -3.9865336418151855
    7. '_c' → logprob: -4.2365336418151855
    8. ',' → logprob: -4.3615336418151855
    9. 'g' → logprob: -5.1115336418151855
    10. '[:]' → logprob: -5.6115336418151855

Token 149: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.11435417830944061
    2. '_c' → logprob: -2.864354133605957
    3. ' =' → logprob: -3.614354133605957
    4. '_cd' → logprob: -4.364354133605957
    5. '_g' → logprob: -4.864354133605957
    6. '=' → logprob: -6.614354133605957
    7. 'c' → logprob: -7.114354133605957
    8. '_' → logprob: -8.239354133605957
    9. 'cdf' → logprob: -8.239354133605957
    10. '=g' → logprob: -8.614354133605957

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2039370834827423
    2. '=' → logprob: -1.70393705368042
    3. 's' → logprob: -6.07893705368042
    4. '_' → logprob: -8.578937530517578
    5. ')' → logprob: -10.953937530517578
    6. ',' → logprob: -11.578937530517578
    7. ' ' → logprob: -12.828937530517578
    8. '<|end|>' → logprob: -12.953937530517578
    9. '_=' → logprob: -13.328937530517578
    10. 'a' → logprob: -13.578937530517578

Token 151: ' compos' (ID: 14635)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.18088088929653168
    2. ' compos' → logprob: -1.8058809041976929
    3. 'a' → logprob: -7.430881023406982
    4. ' a' → logprob: -8.805880546569824
    5. ' com' → logprob: -9.430880546569824
    6. ' composite' → logprob: -9.680880546569824
    7. 'math' → logprob: -10.055880546569824
    8. ' math' → logprob: -10.305880546569824
    9. 'comp' → logprob: -10.930880546569824
    10. 'c' → logprob: -11.055880546569824

Token 152: 'itional' (ID: 3616)
  Prédit: 'itional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itional' → logprob: -0.12406349927186966
    2. 'isional' → logprob: -3.374063491821289
    3. 'otional' → logprob: -3.499063491821289
    4. 'pos' → logprob: -3.749063491821289
    5. 'ensional' → logprob: -4.499063491821289
    6. 'ational' → logprob: -5.249063491821289
    7. 's' → logprob: -5.624063491821289
    8. 'osition' → logprob: -5.999063491821289
    9. ' positional' → logprob: -6.624063491821289
    10. 'essional' → logprob: -6.999063491821289

Token 153: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -3.774276774493046e-05
    2. '_' → logprob: -10.250038146972656
    3. '_a' → logprob: -13.500038146972656
    4. 'a' → logprob: -15.500038146972656
    5. 'g' → logprob: -15.875038146972656
    6. ' _' → logprob: -16.000038146972656
    7. '```' → logprob: -16.500038146972656
    8. '_m' → logprob: -16.875038146972656
    9. '_c' → logprob: -16.875038146972656
    10. '_mul' → logprob: -17.000038146972656

Token 154: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00017410075815860182
    2. 'a' → logprob: -9.000174522399902
    3. 'c' → logprob: -10.750174522399902
    4. '_cd' → logprob: -11.375174522399902
    5. 'CD' → logprob: -12.625174522399902
    6. 'cdf' → logprob: -12.750174522399902
    7. 'cdn' → logprob: -12.875174522399902
    8. ' gcd' → logprob: -13.375174522399902
    9. 'g' → logprob: -13.750174522399902
    10. '_c' → logprob: -14.000174522399902

Token 155: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. ' (' → logprob: -15.50015926361084
    4. '(
' → logprob: -16.750158309936523
    5. '(n' → logprob: -17.250158309936523
    6. 'a' → logprob: -17.250158309936523
    7. '(ai' → logprob: -17.750158309936523
    8. '(s' → logprob: -18.000158309936523
    9. ')' → logprob: -18.500158309936523
    10. ' ' → logprob: -18.625158309936523

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006184149067848921
    2. '(a' → logprob: -5.256184101104736
    3. '(' → logprob: -7.881184101104736
    4. 'a' → logprob: -8.381184577941895
    5. ',' → logprob: -8.881184577941895
    6. ')a' → logprob: -9.256184577941895
    7. ')
' → logprob: -10.131184577941895
    8. ',a' → logprob: -11.006184577941895
    9. ' )' → logprob: -11.506184577941895
    10. '   ' → logprob: -11.631184577941895

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012634546495974064
    2. '    
' → logprob: -5.387634754180908
    3. '<|end|>' → logprob: -5.512634754180908
    4. '
' → logprob: -6.262634754180908
    5. ' for' → logprob: -8.26263427734375
    6. ' rest' → logprob: -8.51263427734375
    7. 'rest' → logprob: -8.63763427734375
    8. '    ' → logprob: -8.76263427734375
    9. 'a' → logprob: -8.88763427734375
    10. ' if' → logprob: -9.13763427734375

Token 158: ' normalized' (ID: 59625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.319000482559204
    2. 'print' → logprob: -2.069000482559204
    3. 'c' → logprob: -2.319000482559204
    4. ' if' → logprob: -2.444000482559204
    5. 'prefix' → logprob: -2.569000482559204
    6. 'if' → logprob: -2.819000482559204
    7. ' prefix' → logprob: -2.819000482559204
    8. ' print' → logprob: -3.319000482559204
    9. 'partial' → logprob: -4.194000244140625
    10. 'a' → logprob: -4.194000244140625

Token 159: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.005505526438355446
    2. '_' → logprob: -5.630505561828613
    3. 'a' → logprob: -7.130505561828613
    4. ' =' → logprob: -7.505505561828613
    5. '=' → logprob: -7.630505561828613
    6. '_=' → logprob: -10.505505561828613
    7. '_values' → logprob: -11.505505561828613
    8. '_sequence' → logprob: -12.255505561828613
    9. '_ai' → logprob: -12.630505561828613
    10. 's' → logprob: -13.255505561828613

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141851902008057
    2. '=' → logprob: -1.7014185190200806
    3. '=[]' → logprob: -13.57641887664795
    4. 's' → logprob: -13.82641887664795
    5. '<|end|>' → logprob: -14.32641887664795
    6. ' =[' → logprob: -14.95141887664795
    7. ',' → logprob: -15.07641887664795
    8. ' ' → logprob: -15.32641887664795
    9. ')' → logprob: -15.45141887664795
    10. ' =
' → logprob: -15.45141887664795

Token 161: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.17984361946582794
    2. '[a' → logprob: -2.6798436641693115
    3. '[list' → logprob: -2.6798436641693115
    4. '[' → logprob: -3.6798436641693115
    5. ' list' → logprob: -7.179843425750732
    6. '[i' → logprob: -7.554843425750732
    7. 'list' → logprob: -7.679843425750732
    8. '[x' → logprob: -8.67984390258789
    9. '[m' → logprob: -9.67984390258789
    10. '[n' → logprob: -10.17984390258789

Token 162: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0003673940955195576
    2. '(' → logprob: -8.250367164611816
    3. 'map' → logprob: -9.875367164611816
    4. '(a' → logprob: -10.000367164611816
    5. '(x' → logprob: -12.750367164611816
    6. '(part' → logprob: -12.875367164611816
    7. '(m' → logprob: -14.125367164611816
    8. '(filter' → logprob: -14.625367164611816
    9. '(i' → logprob: -14.625367164611816
    10. '(
' → logprob: -15.000367164611816

Token 163: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0913403108716011
    2. '(part' → logprob: -2.8413403034210205
    3. '(' → logprob: -3.5913403034210205
    4. ' (' → logprob: -6.7163405418396
    5. 'partial' → logprob: -9.091340065002441
    6. ' partial' → logprob: -10.341340065002441
    7. '(
' → logprob: -11.216340065002441
    8. '(f' → logprob: -11.966340065002441
    9. 'lambda' → logprob: -12.466340065002441
    10. '(operator' → logprob: -13.716340065002441

Token 164: ' z' (ID: 579)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.007083452772349119
    2. 'x' → logprob: -5.007083415985107
    3. ' lambda' → logprob: -8.382083892822266
    4. ':' → logprob: -10.132083892822266
    5. 'lambda' → logprob: -10.257083892822266
    6. ' a' → logprob: -10.507083892822266
    7. ' :' → logprob: -11.882083892822266
    8. ' y' → logprob: -12.257083892822266
    9. '(x' → logprob: -13.007083892822266
    10. ' s' → logprob: -13.132083892822266

Token 165: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009915687143802643
    2. ' :' → logprob: -4.634915828704834
    3. ' z' → logprob: -9.259915351867676
    4. ':z' → logprob: -9.884915351867676
    5. 'z' → logprob: -11.509915351867676
    6. ':
' → logprob: -14.384915351867676
    7. ',' → logprob: -14.759915351867676
    8. ':a' → logprob: -14.884915351867676
    9. ':return' → logprob: -15.134915351867676
    10. 'a' → logprob: -15.259915351867676

Token 166: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.12698659300804138
    2. 'z' → logprob: -2.126986503601074
    3. 'mul' → logprob: -10.501986503601074
    4. 'lambda' → logprob: -11.501986503601074
    5. '	z' → logprob: -11.751986503601074
    6. ' lambda' → logprob: -12.626986503601074
    7. ' ' → logprob: -12.876986503601074
    8. '(z' → logprob: -13.501986503601074
    9. ' mul' → logprob: -13.501986503601074
    10. ' (' → logprob: -13.751986503601074

Token 167: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.018047157675027847
    2. '//' → logprob: -4.643047332763672
    3. ' ' → logprob: -4.893047332763672
    4. ' /' → logprob: -9.143047332763672
    5. 'a' → logprob: -9.268047332763672
    6. ')' → logprob: -9.768047332763672
    7. ':' → logprob: -9.955547332763672
    8. 'div' → logprob: -10.205547332763672
    9. ',' → logprob: -10.393047332763672
    10. ' '' → logprob: -10.393047332763672

Token 168: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889176905155182
    2. ' a' → logprob: -2.5788917541503906
    3. '_a' → logprob: -13.70389175415039
    4. ' ' → logprob: -14.95389175415039
    5. '	a' → logprob: -15.45389175415039
    6. ' ' → logprob: -16.07889175415039
    7. ')a' → logprob: -16.32889175415039
    8. '(a' → logprob: -16.70389175415039
    9. ',a' → logprob: -18.20389175415039
    10. '   ' → logprob: -18.32889175415039

Token 169: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.875001907348633
    3. 'g' → logprob: -15.125001907348633
    4. ')' → logprob: -15.375001907348633
    5. 'a' → logprob: -16.125001907348633
    6. '_a' → logprob: -16.750001907348633
    7. '[' → logprob: -18.750001907348633
    8. '_norm' → logprob: -18.750001907348633
    9. '_c' → logprob: -19.000001907348633
    10. ',' → logprob: -19.000001907348633

Token 170: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0017902553081512451
    2. '_cd' → logprob: -7.1267900466918945
    3. 'a' → logprob: -8.001790046691895
    4. 'c' → logprob: -8.001790046691895
    5. '_c' → logprob: -8.751790046691895
    6. 'CD' → logprob: -9.126790046691895
    7. 'd' → logprob: -11.501790046691895
    8. 'cdf' → logprob: -12.251790046691895
    9. 'Cd' → logprob: -12.751790046691895
    10. '_g' → logprob: -12.751790046691895

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00864282064139843
    2. ',a' → logprob: -4.758642673492432
    3. ' ,' → logprob: -11.38364315032959
    4. 'a' → logprob: -11.38364315032959
    5. ',
' → logprob: -12.75864315032959
    6. '),' → logprob: -14.50864315032959
    7. ' a' → logprob: -14.88364315032959
    8. '<|end|>' → logprob: -15.13364315032959
    9. ',z' → logprob: -15.13364315032959
    10. ')' → logprob: -15.63364315032959

Token 172: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029756972566246986
    2. ' a' → logprob: -3.529757022857666
    3. '   ' → logprob: -12.404756546020508
    4. '	a' → logprob: -13.529756546020508
    5. ' ' → logprob: -15.154756546020508
    6. ')a' → logprob: -15.404756546020508
    7. '    ' → logprob: -15.529756546020508
    8. '  ' → logprob: -16.029756546020508
    9. '[a' → logprob: -16.529756546020508
    10. 'а' → logprob: -16.904756546020508

Token 173: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011200665176147595
    2. ' ))' → logprob: -9.12511157989502
    3. ',' → logprob: -13.87511157989502
    4. '));' → logprob: -14.37511157989502
    5. '))
' → logprob: -14.75011157989502
    6. ')))' → logprob: -14.87511157989502
    7. '()))' → logprob: -15.25011157989502
    8. ' ' → logprob: -16.375112533569336
    9. ')),' → logprob: -16.375112533569336
    10. ')' → logprob: -16.375112533569336

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11774416267871857
    2. 'prefix' → logprob: -3.117744207382202
    3. '<|end|>' → logprob: -3.992744207382202
    4. 'c' → logprob: -4.367743968963623
    5. 'partial' → logprob: -4.742743968963623
    6. 'suffix' → logprob: -5.367743968963623
    7. 'rest' → logprob: -5.867743968963623
    8. ' partial' → logprob: -6.242743968963623
    9. ' prefix' → logprob: -6.242743968963623
    10. 'total' → logprob: -6.492743968963623

Token 175: ' lg' (ID: 37176)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2794892489910126
    2. 'left' → logprob: -2.779489278793335
    3. 'c' → logprob: -4.029489040374756
    4. 'suffix' → logprob: -4.029489040374756
    5. 'pref' → logprob: -4.279489040374756
    6. 'pre' → logprob: -4.404489040374756
    7. 'l' → logprob: -4.404489040374756
    8. 'forward' → logprob: -4.779489040374756
    9. 'partial' → logprob: -4.904489040374756
    10. 'from' → logprob: -5.029489040374756

Token 176: 'cd' (ID: 8301)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -1.1779470443725586
    2. '=' → logprob: -1.4279470443725586
    3. ' =' → logprob: -1.9279470443725586
    4. 't' → logprob: -2.9279470443725586
    5. 'normalized' → logprob: -2.9279470443725586
    6. 'n' → logprob: -3.3029470443725586
    7. 'ic' → logprob: -3.5529470443725586
    8. 'a' → logprob: -3.5529470443725586
    9. '=len' → logprob: -3.8029470443725586
    10. '2' → logprob: -3.9279470443725586

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7376243472099304
    2. '=' → logprob: -1.2376244068145752
    3. '_' → logprob: -2.237624406814575
    4. 's' → logprob: -2.612624406814575
    5. '_normal' → logprob: -3.237624406814575
    6. 'normalized' → logprob: -5.612624168395996
    7. '_c' → logprob: -6.362624168395996
    8. '_norm' → logprob: -7.112624168395996
    9. '_a' → logprob: -7.237624168395996
    10. '_values' → logprob: -7.237624168395996

Token 178: ' cumulative' (ID: 75628)
  Prédit: ' cumulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.40644916892051697
    2. ' len' → logprob: -2.28144907951355
    3. ' compos' → logprob: -2.28144907951355
    4. ' normalized' → logprob: -3.90644907951355
    5. 'len' → logprob: -4.156449317932129
    6. 'com' → logprob: -4.156449317932129
    7. 'c' → logprob: -4.156449317932129
    8. 're' → logprob: -4.281449317932129
    9. ' reversed' → logprob: -4.656449317932129
    10. ' lambda' → logprob: -5.281449317932129

Token 179: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.008653218857944012
    2. '_c' → logprob: -4.758653163909912
    3. 's' → logprob: -11.13365364074707
    4. 'g' → logprob: -11.50865364074707
    5. 'c' → logprob: -12.25865364074707
    6. 'a' → logprob: -12.50865364074707
    7. '```' → logprob: -13.75865364074707
    8. '_a' → logprob: -14.00865364074707
    9. '_' → logprob: -14.50865364074707
    10. ' _' → logprob: -14.75865364074707

Token 180: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.001352975727058947
    2. 'c' → logprob: -7.376352787017822
    3. 'ds' → logprob: -8.00135326385498
    4. 'cs' → logprob: -8.12635326385498
    5. 'a' → logprob: -10.25135326385498
    6. 'd' → logprob: -11.12635326385498
    7. 'cdf' → logprob: -12.12635326385498
    8. 'ids' → logprob: -12.25135326385498
    9. '   ' → logprob: -12.25135326385498
    10. 's' → logprob: -12.37635326385498

Token 181: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.5776860184123507e-06
    2. '(s' → logprob: -13.37500286102295
    3. '<|end|>' → logprob: -14.25000286102295
    4. 'c' → logprob: -15.37500286102295
    5. ' s' → logprob: -17.250001907348633
    6. '{s' → logprob: -17.500001907348633
    7. 'es' → logprob: -17.625001907348633
    8. 'с' → logprob: -17.625001907348633
    9. ''s' → logprob: -17.750001907348633
    10. '_s' → logprob: -18.125001907348633

Token 182: '(normal' (ID: 100011)
  Prédit: '(normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.750004768371582
    3. '<|end|>' → logprob: -14.375004768371582
    4. 'normalized' → logprob: -14.625004768371582
    5. '(norm' → logprob: -14.875004768371582
    6. ' normalized' → logprob: -16.875003814697266
    7. '(sorted' → logprob: -17.125003814697266
    8. ' (' → logprob: -17.250003814697266
    9. '(not' → logprob: -18.500003814697266
    10. '(n' → logprob: -18.750003814697266

Token 183: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -7.822646693966817e-06
    2. 'a' → logprob: -12.250007629394531
    3. 'al' → logprob: -13.875007629394531
    4. 'iz' → logprob: -14.250007629394531
    5. 'ated' → logprob: -15.500007629394531
    6. 'ormal' → logprob: -15.625007629394531
    7. 'ize' → logprob: -15.875007629394531
    8. 'zed' → logprob: -16.12500762939453
    9. 'normalized' → logprob: -16.50000762939453
    10. 'imized' → logprob: -16.75000762939453

Token 184: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0008061755215749145
    2. 'a' → logprob: -7.1258063316345215
    3. 's' → logprob: -14.500805854797363
    4. ')' → logprob: -15.250805854797363
    5. '_g' → logprob: -15.250805854797363
    6. '```' → logprob: -15.750805854797363
    7. 'ized' → logprob: -16.37580680847168
    8. 'g' → logprob: -16.75080680847168
    9. '_' → logprob: -16.87580680847168
    10. '   ' → logprob: -17.00080680847168

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004337902646511793
    2. '[' → logprob: -5.879337787628174
    3. '())' → logprob: -8.004338264465332
    4. ')
' → logprob: -8.254338264465332
    5. '))' → logprob: -8.254338264465332
    6. '[:-' → logprob: -8.379338264465332
    7. ')[' → logprob: -8.504338264465332
    8. '   ' → logprob: -9.129338264465332
    9. '(' → logprob: -10.379338264465332
    10. ',' → logprob: -10.504338264465332

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006359354592859745
    2. '<|end|>' → logprob: -5.256359577178955
    3. '    
' → logprob: -7.631359577178955
    4. ')' → logprob: -8.131359100341797
    5. '[' → logprob: -9.381359100341797
    6. '
' → logprob: -9.506359100341797
    7. ',' → logprob: -9.881359100341797
    8. '<|end|>' → logprob: -10.756359100341797
    9. 'n' → logprob: -11.256359100341797
    10. '[]' → logprob: -11.506359100341797

Token 187: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' (adapté à ' rg') → logprob: -0.22894753515720367
    2. '   ' → logprob: -2.478947639465332
    3. 'rc' → logprob: -2.853947639465332
    4. 'r' → logprob: -3.728947639465332
    5. ' rg' → logprob: -5.228947639465332
    6. 'lr' → logprob: -5.228947639465332
    7. 'lg' → logprob: -5.353947639465332
    8. 'for' → logprob: -6.228947639465332
    9. 'rl' → logprob: -6.353947639465332
    10. 'l' → logprob: -6.416447639465332

Token 188: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00374402548186481
    2. 'c' → logprob: -6.378744125366211
    3. 'cdf' → logprob: -6.628744125366211
    4. 'cum' → logprob: -7.378744125366211
    5. '_c' → logprob: -10.253744125366211
    6. 'g' → logprob: -10.753744125366211
    7. 'cdn' → logprob: -11.503744125366211
    8. ' gcd' → logprob: -12.378744125366211
    9. 'cc' → logprob: -12.753744125366211
    10. ' =' → logprob: -12.753744125366211

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889397442340851
    2. '=' → logprob: -2.5788938999176025
    3. 's' → logprob: -12.453893661499023
    4. ',' → logprob: -15.703893661499023
    5. ' ' → logprob: -17.453893661499023
    6. '_' → logprob: -17.578893661499023
    7. ' =[' → logprob: -17.703893661499023
    8. '=list' → logprob: -17.953893661499023
    9. ')' → logprob: -17.953893661499023
    10. ' =
' → logprob: -18.328893661499023

Token 190: ' reversed' (ID: 57184)
  Prédit: ' cumulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.7871733903884888
    2. ' reversed' → logprob: -1.0371733903884888
    3. 're' → logprob: -1.7871733903884888
    4. 'c' → logprob: -3.787173271179199
    5. ' ' → logprob: -10.1621732711792
    6. ' reverse' → logprob: -10.1621732711792
    7. ' c' → logprob: -10.1621732711792
    8. ' cumul' → logprob: -10.1621732711792
    9. ' reversible' → logprob: -10.4121732711792
    10. 'com' → logprob: -10.6621732711792

Token 191: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00012082771718269214
    2. 'c' → logprob: -9.625121116638184
    3. '_' → logprob: -9.875121116638184
    4. '(c' → logprob: -14.500121116638184
    5. 's' → logprob: -14.500121116638184
    6. '_g' → logprob: -15.375121116638184
    7. 'a' → logprob: -15.750121116638184
    8. '(' → logprob: -15.750121116638184
    9. 'r' → logprob: -15.750121116638184
    10. '(_' → logprob: -15.750121116638184

Token 192: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.013860232196748257
    2. 'um' → logprob: -4.38886022567749
    3. 'c' → logprob: -7.38886022567749
    4. 'g' → logprob: -8.513860702514648
    5. 'uml' → logprob: -8.763860702514648
    6. 'umul' → logprob: -8.888860702514648
    7. 'l' → logprob: -10.513860702514648
    8. 'umulate' → logprob: -10.513860702514648
    9. 'umal' → logprob: -10.638860702514648
    10. ' cumulative' → logprob: -11.138860702514648

Token 193: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.14287780225276947
    2. '_c' → logprob: -2.2678778171539307
    3. 's' → logprob: -3.7678778171539307
    4. 'g' → logprob: -5.142877578735352
    5. 'c' → logprob: -7.642877578735352
    6. 'gs' → logprob: -9.017877578735352
    7. 'sg' → logprob: -12.017877578735352
    8. 'cs' → logprob: -12.142877578735352
    9. 'a' → logprob: -12.267877578735352
    10. '_s' → logprob: -12.392877578735352

Token 194: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00443640910089016
    2. 'c' → logprob: -5.504436492919922
    3. 'cs' → logprob: -8.379436492919922
    4. 'ds' → logprob: -9.504436492919922
    5. 'cum' → logprob: -10.754436492919922
    6. 'cdf' → logprob: -12.129436492919922
    7. 'd' → logprob: -12.754436492919922
    8. 'ods' → logprob: -12.879436492919922
    9. 'ids' → logprob: -13.004436492919922
    10. 'CD' → logprob: -13.129436492919922

Token 195: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014931005716789514
    2. 'a' → logprob: -10.000149726867676
    3. '[' → logprob: -10.375149726867676
    4. '(' → logprob: -11.000149726867676
    5. 'c' → logprob: -12.125149726867676
    6. 'rs' → logprob: -12.250149726867676
    7. '(s' → logprob: -12.625149726867676
    8. 'os' → logprob: -12.625149726867676
    9. 'g' → logprob: -12.875149726867676
    10. ')' → logprob: -13.000149726867676

Token 196: '(normal' (ID: 100011)
  Prédit: '(normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -2.4034345187828876e-05
    2. '(' → logprob: -10.87502384185791
    3. 'normalized' → logprob: -13.25002384185791
    4. ' (' → logprob: -13.37502384185791
    5. '(norm' → logprob: -13.50002384185791
    6. '(n' → logprob: -16.250024795532227
    7. '(sorted' → logprob: -16.500024795532227
    8. '```' → logprob: -16.875024795532227
    9. '(list' → logprob: -17.000024795532227
    10. '(not' → logprob: -17.250024795532227

Token 197: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.0242034699767828
    2. 'al' → logprob: -4.024203300476074
    3. 'a' → logprob: -5.524203300476074
    4. 'ormal' → logprob: -7.024203300476074
    5. '_a' → logprob: -7.524203300476074
    6. 'l' → logprob: -9.024203300476074
    7. 'zed' → logprob: -9.399203300476074
    8. 'ated' → logprob: -9.399203300476074
    9. 'z' → logprob: -9.899203300476074
    10. '   ' → logprob: -10.149203300476074

Token 198: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.2378600735682994e-05
    2. 'a' → logprob: -10.625032424926758
    3. 'normalized' → logprob: -12.250032424926758
    4. '_normal' → logprob: -13.125032424926758
    5. ')' → logprob: -14.625032424926758
    6. '_' → logprob: -15.500032424926758
    7. '(normal' → logprob: -15.875032424926758
    8. ')_' → logprob: -16.000032424926758
    9. ' a' → logprob: -16.750032424926758
    10. '   ' → logprob: -17.500032424926758

Token 199: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. '   ' → logprob: -12.00001049041748
    3. ' )' → logprob: -13.12501049041748
    4. '()' → logprob: -14.00001049041748
    5. ')
' → logprob: -14.37501049041748
    6. '[' → logprob: -14.87501049041748
    7. '(' → logprob: -15.25001049041748
    8. '())' → logprob: -15.25001049041748
    9. ')

' → logprob: -15.87501049041748
    10. '))' → logprob: -16.000011444091797

Token 200: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7771448493003845
    2. '   ' → logprob: -1.0271449089050293
    3. ')' → logprob: -2.6521449089050293
    4. 'i' → logprob: -3.1521449089050293
    5. '#' → logprob: -3.9021449089050293
    6. ' for' → logprob: -4.902144908905029
    7. 'max' → logprob: -5.027144908905029
    8. '    
' → logprob: -5.152144908905029
    9. 'if' → logprob: -5.527144908905029
    10. '
' → logprob: -5.777144908905029

Token 201: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3255671262741089
    2. 'res' → logprob: -1.4505671262741089
    3. 'max' → logprob: -1.5755671262741089
    4. 'answer' → logprob: -2.2005672454833984
    5. 'result' → logprob: -2.3255672454833984
    6. 'best' → logprob: -2.9505672454833984
    7. 'for' → logprob: -3.9505672454833984
    8. 'min' → logprob: -5.075567245483398
    9. 'dp' → logprob: -6.200567245483398
    10. 'm' → logprob: -7.325567245483398

Token 202: ' Advanced' (ID: 29017)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -1.1790032386779785
    2. ' for' → logprob: -1.5540032386779785
    3. 'for' → logprob: -2.4290032386779785
    4. ' max' → logprob: -2.4290032386779785
    5. ' result' → logprob: -2.8040032386779785
    6. ' ans' → logprob: -2.9290032386779785
    7. 'max' → logprob: -3.1790032386779785
    8. 'best' → logprob: -3.4290032386779785
    9. ' answer' → logprob: -3.6790032386779785
    10. 'result' → logprob: -3.6790032386779785

Token 203: ' comprehension' (ID: 91423)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.034414291381836
    2. 'dp' → logprob: -1.659414291381836
    3. '_dp' → logprob: -1.784414291381836
    4. ' logic' → logprob: -2.159414291381836
    5. ' dp' → logprob: -3.784414291381836
    6. '<|end|>' → logprob: -4.159414291381836
    7. 'max' → logprob: -4.284414291381836
    8. 'optimization' → logprob: -4.534414291381836
    9. '_logic' → logprob: -4.659414291381836
    10. 'logic' → logprob: -5.034414291381836

Token 204: ' with' (ID: 483)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5549688339233398
    2. ' result' → logprob: -2.05496883392334
    3. 'res' → logprob: -3.30496883392334
    4. '   ' → logprob: -3.42996883392334
    5. 'max' → logprob: -3.42996883392334
    6. 'possible' → logprob: -3.80496883392334
    7. ' best' → logprob: -3.92996883392334
    8. 'best' → logprob: -4.17996883392334
    9. ' valid' → logprob: -4.30496883392334
    10. ' ans' → logprob: -4.30496883392334

Token 205: ' zip' (ID: 16216)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5431963205337524
    2. 'a' → logprob: -2.293196201324463
    3. 'i' → logprob: -2.793196201324463
    4. '[' → logprob: -3.168196201324463
    5. '[(' → logprob: -3.543196201324463
    6. '[a' → logprob: -3.543196201324463
    7. 'result' → logprob: -4.043196201324463
    8. '[
' → logprob: -4.293196201324463
    9. 'max' → logprob: -4.293196201324463
    10. 'z' → logprob: -4.418196201324463

Token 206: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5970235466957092
    2. '   ' → logprob: -1.4720234870910645
    3. '(' → logprob: -1.9720234870910645
    4. ' for' → logprob: -3.9720234870910645
    5. ':' → logprob: -3.9720234870910645
    6. 'result' → logprob: -4.8470234870910645
    7. '(
' → logprob: -5.0970234870910645
    8. '(a' → logprob: -5.2220234870910645
    9. '(l' → logprob: -5.2220234870910645
    10. ',' → logprob: -5.8470234870910645

Token 207: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10012082010507584
    2. 'range' → logprob: -2.725120782852173
    3. 'rg' → logprob: -4.350121021270752
    4. ' enumerate' → logprob: -4.600121021270752
    5. 'zip' → logprob: -5.475121021270752
    6. 'a' → logprob: -7.225121021270752
    7. 'filter' → logprob: -7.850121021270752
    8. ' range' → logprob: -8.475120544433594
    9. ')' → logprob: -8.600120544433594
    10. 'lg' → logprob: -8.850120544433594

Token 208: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4912688434123993
    2. ' for' → logprob: -1.7412688732147217
    3. 'result' → logprob: -2.1162688732147217
    4. '   ' → logprob: -2.6162688732147217
    5. ' result' → logprob: -4.741268634796143
    6. '(' → logprob: -5.866268634796143
    7. '```' → logprob: -6.866268634796143
    8. '(
' → logprob: -6.991268634796143
    9. 'res' → logprob: -7.116268634796143
    10. ':' → logprob: -7.991268634796143

Token 209: ' artistry' (ID: 184307)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003038797527551651
    2. ' i' → logprob: -6.3780388832092285
    3. 'idx' → logprob: -6.7530388832092285
    4. '_' → logprob: -9.37803840637207
    5. ' idx' → logprob: -10.50303840637207
    6. 'index' → logprob: -10.87803840637207
    7. '_i' → logprob: -11.12803840637207
    8. '(i' → logprob: -11.87803840637207
    9. '_,' → logprob: -12.62803840637207
    10. 'for' → logprob: -13.50303840637207

Token 210: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8105438351631165
    2. '   ' → logprob: -1.4355437755584717
    3. 'for' → logprob: -1.5605437755584717
    4. ' for' → logprob: -3.0605437755584717
    5. 'res' → logprob: -4.435544013977051
    6. ' result' → logprob: -4.560544013977051
    7. '(
' → logprob: -4.935544013977051
    8. '(' → logprob: -4.935544013977051
    9. '(i' → logprob: -6.310544013977051
    10. 'combined' → logprob: -6.435544013977051

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0226455926895142
    2. 'for' → logprob: -1.1476455926895142
    3. 'result' → logprob: -1.6476455926895142
    4. ' for' → logprob: -2.6476454734802246
    5. 'res' → logprob: -4.647645473480225
    6. '(
' → logprob: -4.897645473480225
    7. '(' → logprob: -4.897645473480225
    8. ' result' → logprob: -5.272645473480225
    9. 'max' → logprob: -5.647645473480225
    10. '```' → logprob: -6.147645473480225

Token 212: ' g' (ID: 329)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.839073121547699
    2. 'for' → logprob: -0.964073121547699
    3. ' for' → logprob: -2.4640731811523438
    4. ' result' → logprob: -3.3390731811523438
    5. '   ' → logprob: -3.8390731811523438
    6. 'res' → logprob: -4.589073181152344
    7. 'results' → logprob: -4.964073181152344
    8. 'max' → logprob: -5.089073181152344
    9. 'answer' → logprob: -5.964073181152344
    10. 'ans' → logprob: -6.089073181152344

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.105562686920166
    2. ' =' → logprob: -1.105562686920166
    3. 'cd' → logprob: -2.480562686920166
    4. 'enerated' → logprob: -2.605562686920166
    5. '_values' → logprob: -3.105562686920166
    6. '_vals' → logprob: -3.480562686920166
    7. '_' → logprob: -3.480562686920166
    8. 'en' → logprob: -4.230562686920166
    9. 'for' → logprob: -4.605562686920166
    10. '_for' → logprob: -5.605562686920166

Token 214: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2201835811138153
    2. '[i' → logprob: -2.9701836109161377
    3. '[a' → logprob: -2.9701836109161377
    4. ' [' → logprob: -3.5951836109161377
    5. '[z' → logprob: -3.8451836109161377
    6. '[n' → logprob: -3.9701836109161377
    7. '[
' → logprob: -4.720183372497559
    8. '[min' → logprob: -5.345183372497559
    9. '[x' → logprob: -6.220183372497559
    10. '[(' → logprob: -6.345183372497559

Token 215: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4690997004508972
    2. '(' → logprob: -2.719099760055542
    3. 'rg' → logprob: -2.844099760055542
    4. '1' → logprob: -3.094099760055542
    5. 'lg' → logprob: -3.094099760055542
    6. 'max' → logprob: -3.219099760055542
    7. 'normalized' → logprob: -3.594099760055542
    8. 'g' → logprob: -3.719099760055542
    9. ' math' → logprob: -4.094099521636963
    10. '(math' → logprob: -4.219099521636963

Token 216: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -5.550411151489243e-05
    2. '_' → logprob: -10.375055313110352
    3. ')' → logprob: -11.375055313110352
    4. '_c' → logprob: -12.125055313110352
    5. '(' → logprob: -13.750055313110352
    6. '_s' → logprob: -14.500055313110352
    7. 'g' → logprob: -14.875055313110352
    8. ',' → logprob: -15.000055313110352
    9. '_f' → logprob: -15.000055313110352
    10. ')_' → logprob: -15.125055313110352

Token 217: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0029163805302232504
    2. 'g' → logprob: -6.25291633605957
    3. '_g' → logprob: -7.00291633605957
    4. '_cd' → logprob: -10.37791633605957
    5. 'd' → logprob: -11.25291633605957
    6. 'gd' → logprob: -11.75291633605957
    7. '_c' → logprob: -12.37791633605957
    8. 'c' → logprob: -12.62791633605957
    9. ' gcd' → logprob: -12.62791633605957
    10. 'cdf' → logprob: -13.12791633605957

Token 218: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.023452192544937134
    2. '(r' → logprob: -4.148452281951904
    3. '(' → logprob: -5.523452281951904
    4. '((' → logprob: -6.273452281951904
    5. '(
' → logprob: -7.148452281951904
    6. '(normal' → logprob: -7.648452281951904
    7. '(a' → logprob: -10.273451805114746
    8. '(x' → logprob: -10.398451805114746
    9. '(math' → logprob: -10.648451805114746
    10. ' (' → logprob: -10.648451805114746

Token 219: ',' (ID: 11)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0018518929136916995
    2. 'cd' → logprob: -6.751852035522461
    3. '[i' → logprob: -8.001852035522461
    4. '[g' → logprob: -9.126852035522461
    5. 'c' → logprob: -9.626852035522461
    6. 'gd' → logprob: -10.251852035522461
    7. '_g' → logprob: -10.626852035522461
    8. '[' → logprob: -10.751852035522461
    9. '   ' → logprob: -10.876852035522461
    10. '[c' → logprob: -11.751852035522461

Token 220: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07163035124540329
    2. ' r' → logprob: -2.6966302394866943
    3. 'rg' → logprob: -7.321630477905273
    4. 'g' → logprob: -7.696630477905273
    5. ' rg' → logprob: -9.196630477905273
    6. ' ' → logprob: -9.446630477905273
    7. ' math' → logprob: -9.759130477905273
    8. '   ' → logprob: -10.009130477905273
    9. 'c' → logprob: -10.196630477905273
    10. 'math' → logprob: -10.321630477905273

Token 221: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00838739238679409
    2. '[' → logprob: -5.258387565612793
    3. ' for' → logprob: -6.633387565612793
    4. 'for' → logprob: -6.633387565612793
    5. ' )' → logprob: -8.383387565612793
    6. ')
' → logprob: -9.008387565612793
    7. '[i' → logprob: -9.508387565612793
    8. ',' → logprob: -10.633387565612793
    9. '   ' → logprob: -11.133387565612793
    10. '')' → logprob: -12.633387565612793

Token 222: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16033349931240082
    2. 'for' → logprob: -1.910333514213562
    3. '(i' → logprob: -10.660333633422852
    4. '
' → logprob: -10.785333633422852
    5. ')' → logprob: -11.160333633422852
    6. '   ' → logprob: -11.410333633422852
    7. ' 
' → logprob: -12.035333633422852
    8. 'enumer' → logprob: -12.285333633422852
    9. ' ' → logprob: -12.660333633422852
    10. '(l' → logprob: -12.785333633422852

Token 223: ' _,' (ID: 18042)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.45217424631118774
    2. 'l' → logprob: -1.702174186706543
    3. ',' → logprob: -2.452174186706543
    4. '_,' → logprob: -3.077174186706543
    5. ' (' → logprob: -4.077174186706543
    6. '(' → logprob: -4.452174186706543
    7. ' ,' → logprob: -5.077174186706543
    8. '(l' → logprob: -5.827174186706543
    9. ' _,' → logprob: -6.077174186706543
    10. ' ' → logprob: -6.577174186706543

Token 224: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.07273098826408386
    2. ' (' → logprob: -3.6977310180664062
    3. 'l' → logprob: -3.9477310180664062
    4. '(_,' → logprob: -4.572731018066406
    5. '(' → logprob: -4.822731018066406
    6. '(r' → logprob: -5.322731018066406
    7. '(i' → logprob: -7.322731018066406
    8. '(_' → logprob: -8.072731018066406
    9. ' l' → logprob: -8.072731018066406
    10. '(g' → logprob: -8.197731018066406

Token 225: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00015872348740231246
    2. ' l' → logprob: -8.875158309936523
    3. ',' → logprob: -12.000158309936523
    4. 'i' → logprob: -12.125158309936523
    5. ',l' → logprob: -12.500158309936523
    6. '_l' → logprob: -13.500158309936523
    7. '_,' → logprob: -13.625158309936523
    8. 'r' → logprob: -15.375158309936523
    9. 'index' → logprob: -15.875158309936523
    10. '	l' → logprob: -16.125158309936523

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003650795202702284
    2. ',r' → logprob: -5.628650665283203
    3. ' ,' → logprob: -10.253650665283203
    4. ',
' → logprob: -11.128650665283203
    5. 'r' → logprob: -14.378650665283203
    6. ',g' → logprob: -17.003650665283203
    7. ',\
' → logprob: -17.128650665283203
    8. ' r' → logprob: -17.378650665283203
    9. '‌,' → logprob: -17.378650665283203
    10. ',y' → logprob: -17.753650665283203

Token 227: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00010247035970678553
    2. ' r' → logprob: -9.250102043151855
    3. ')' → logprob: -12.125102043151855
    4. ' ' → logprob: -15.375102043151855
    5. 'g' → logprob: -16.000102996826172
    6. '   ' → logprob: -16.500102996826172
    7. '
' → logprob: -16.750102996826172
    8. '  ' → logprob: -17.000102996826172
    9. '```' → logprob: -17.375102996826172
    10. ',r' → logprob: -17.625102996826172

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013827363727614284
    2. 'in' → logprob: -6.626382827758789
    3. ' )' → logprob: -10.501382827758789
    4. ' in' → logprob: -10.626382827758789
    5. ')
' → logprob: -13.001382827758789
    6. '
' → logprob: -14.376382827758789
    7. '),' → logprob: -14.751382827758789
    8. ' ' → logprob: -15.126382827758789
    9. '_in' → logprob: -15.876382827758789
    10. '  ' → logprob: -16.00138282775879

Token 229: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1797865480184555
    2. ' in' → logprob: -1.8047865629196167
    3. ')' → logprob: -10.304786682128906
    4. 'n' → logprob: -13.929786682128906
    5. ' ' → logprob: -13.929786682128906
    6. '
' → logprob: -14.054786682128906
    7. ',' → logprob: -14.054786682128906
    8. 'import' → logprob: -14.054786682128906
    9. 'enumer' → logprob: -14.179786682128906
    10. ']' → logprob: -14.304786682128906

Token 230: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2519467771053314
    2. 'enumer' → logprob: -1.5019468069076538
    3. 'zip' → logprob: -11.876946449279785
    4. ' zip' → logprob: -12.376946449279785
    5. '
' → logprob: -13.001946449279785
    6. 'en' → logprob: -13.626946449279785
    7. ' enumer' → logprob: -14.251946449279785
    8. '```' → logprob: -14.376946449279785
    9. 'Enumer' → logprob: -15.001946449279785
    10. ' en' → logprob: -15.251946449279785

Token 231: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.002086023800075054
    2. 'zip' → logprob: -6.252086162567139
    3. '(en' → logprob: -8.87708568572998
    4. '(' → logprob: -11.50208568572998
    5. ' zip' → logprob: -12.25208568572998
    6. '(z' → logprob: -13.75208568572998
    7. 'enumer' → logprob: -14.00208568572998
    8. ' (' → logprob: -14.87708568572998
    9. '((' → logprob: -15.62708568572998
    10. '.zip' → logprob: -16.252086639404297

Token 232: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.37500286102295
    3. ' (' → logprob: -13.62500286102295
    4. '(r' → logprob: -15.62500286102295
    5. 'lg' → logprob: -16.625003814697266
    6. '((' → logprob: -16.875003814697266
    7. 'l' → logprob: -17.250003814697266
    8. '	l' → logprob: -17.500003814697266
    9. '(
' → logprob: -17.625003814697266
    10. '(lp' → logprob: -17.750003814697266

Token 233: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.726595241460018e-05
    2. '(g' → logprob: -10.75003719329834
    3. '_g' → logprob: -11.75003719329834
    4. 'cd' → logprob: -12.75003719329834
    5. 'gd' → logprob: -13.12503719329834
    6. 'gc' → logprob: -14.12503719329834
    7. 'gcc' → logprob: -14.75003719329834
    8. 'c' → logprob: -15.00003719329834
    9. ' gcd' → logprob: -15.62503719329834
    10. 'gad' → logprob: -15.62503719329834

Token 234: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.0339031834737398e-05
    2. 'cdf' → logprob: -11.625020027160645
    3. 'g' → logprob: -12.000020027160645
    4. 'c' → logprob: -13.375020027160645
    5. '_cd' → logprob: -14.375020027160645
    6. 'd' → logprob: -14.875020027160645
    7. ',' → logprob: -15.000020027160645
    8. 'cdn' → logprob: -15.000020027160645
    9. ' gcd' → logprob: -15.750020027160645
    10. 'cdr' → logprob: -15.750020027160645

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05187814682722092
    2. '(r' → logprob: -3.5518782138824463
    3. ',r' → logprob: -4.176877975463867
    4. '(' → logprob: -5.301877975463867
    5. ' ,' → logprob: -6.676877975463867
    6. ',(' → logprob: -8.551877975463867
    7. ',
' → logprob: -10.051877975463867
    8. ',g' → logprob: -10.926877975463867
    9. ' (' → logprob: -11.676877975463867
    10. '(
' → logprob: -12.426877975463867

Token 236: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.03365145996212959
    2. ' rg' → logprob: -3.408651351928711
    3. '   ' → logprob: -13.283651351928711
    4. '_rg' → logprob: -13.533651351928711
    5. 'lg' → logprob: -14.158651351928711
    6. '
' → logprob: -14.533651351928711
    7. 'rig' → logprob: -14.908651351928711
    8. ' ' → logprob: -15.033651351928711
    9. ')' → logprob: -15.283651351928711
    10. '    ' → logprob: -16.28365135192871

Token 237: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.664371848164592e-05
    2. 'd' → logprob: -11.500016212463379
    3. 'c' → logprob: -13.125016212463379
    4. 'cdf' → logprob: -13.375016212463379
    5. '_cd' → logprob: -14.250016212463379
    6. '[' → logprob: -14.625016212463379
    7. 'CD' → logprob: -14.875016212463379
    8. ')' → logprob: -15.250016212463379
    9. 'dc' → logprob: -15.250016212463379
    10. '   ' → logprob: -15.750016212463379

Token 238: '[' (ID: 58)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00024822709383443
    2. ')]' → logprob: -9.375247955322266
    3. '))]
' → logprob: -9.750247955322266
    4. ' ))' → logprob: -9.750247955322266
    5. ')' → logprob: -11.375247955322266
    6. ' ' → logprob: -11.625247955322266
    7. ')):' → logprob: -11.750247955322266
    8. ')))' → logprob: -11.750247955322266
    9. '()))' → logprob: -12.875247955322266
    10. '   ' → logprob: -13.750247955322266

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10384873300790787
    2. '))' → logprob: -2.353848695755005
    3. '[' → logprob: -6.728848934173584
    4. ')]' → logprob: -7.353848934173584
    5. '(' → logprob: -7.603848934173584
    6. ')):' → logprob: -8.353848457336426
    7. ' ' → logprob: -8.603848457336426
    8. ']))' → logprob: -8.728848457336426
    9. ')' → logprob: -8.728848457336426
    10. ' ))' → logprob: -9.603848457336426

Token 240: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005577972042374313
    2. ']))' → logprob: -7.625557899475098
    3. ':]' → logprob: -9.750557899475098
    4. ' :' → logprob: -12.250557899475098
    5. ':],' → logprob: -12.625557899475098
    6. ']:' → logprob: -13.750557899475098
    7. ':-' → logprob: -14.000557899475098
    8. '']))' → logprob: -14.750557899475098
    9. '))' → logprob: -15.125557899475098
    10. '：' → logprob: -15.750557899475098

Token 241: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.002911861753091216
    2. '))' → logprob: -6.1279120445251465
    3. ']' → logprob: -7.8779120445251465
    4. '']))' → logprob: -9.377911567687988
    5. ')))' → logprob: -10.002911567687988
    6. '])]' → logprob: -10.002911567687988
    7. ' ]' → logprob: -10.502911567687988
    8. ' ))' → logprob: -10.627911567687988
    9. '"]))' → logprob: -10.877911567687988
    10. '],' → logprob: -11.002911567687988

Token 242: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5770772695541382
    2. ']' → logprob: -0.8270772695541382
    3. ')' → logprob: -6.827077388763428
    4. ' ]' → logprob: -10.70207691192627
    5. '])' → logprob: -11.82707691192627
    6. '   ' → logprob: -12.07707691192627
    7. '()]' → logprob: -12.07707691192627
    8. ']
' → logprob: -12.32707691192627
    9. '])]' → logprob: -12.70207691192627
    10. '`]' → logprob: -13.82707691192627

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6063691973686218
    2. '<|end|>' → logprob: -1.2313692569732666
    3. '
' → logprob: -2.1063692569732666
    4. ')' → logprob: -3.3563692569732666
    5. '    
' → logprob: -6.3563690185546875
    6. ' ' → logprob: -7.1063690185546875
    7. 'max' → logprob: -7.7313690185546875
    8. '  
' → logprob: -7.9813690185546875
    9. '[' → logprob: -8.106369018554688
    10. '<|end|>' → logprob: -8.356369018554688

Token 244: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6529167890548706
    2. '   ' → logprob: -1.7779167890548706
    3. 'max' → logprob: -2.27791690826416
    4. 'i' → logprob: -2.65291690826416
    5. 'for' → logprob: -3.40291690826416
    6. 'best' → logprob: -3.77791690826416
    7. 'if' → logprob: -3.90291690826416
    8. 'answer' → logprob: -4.27791690826416
    9. 'idx' → logprob: -4.40291690826416
    10. 'g' → logprob: -4.40291690826416

Token 245: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.11428219825029373
    2. '(' → logprob: -2.9892821311950684
    3. '(sum' → logprob: -3.6142821311950684
    4. '(g' → logprob: -4.114282131195068
    5. '(min' → logprob: -4.364282131195068
    6. '(*' → logprob: -6.864282131195068
    7. '('' → logprob: -7.864282131195068
    8. '(math' → logprob: -9.614282608032227
    9. '(
' → logprob: -10.239282608032227
    10. '([' → logprob: -10.739282608032227

Token 246: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.4021237802808173e-05
    2. '(' → logprob: -11.250014305114746
    3. '(
' → logprob: -14.750014305114746
    4. 'g' → logprob: -15.375014305114746
    5. ')' → logprob: -15.375014305114746
    6. ')(' → logprob: -17.62501335144043
    7. ',g' → logprob: -18.37501335144043
    8. '(max' → logprob: -18.62501335144043
    9. ' (' → logprob: -18.87501335144043
    10. '(s' → logprob: -19.50001335144043

Token 247: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006520323222503066
    2. ')' → logprob: -7.375651836395264
    3. ' ))' → logprob: -11.500652313232422
    4. ')))' → logprob: -11.750652313232422
    5. '()))' → logprob: -12.375652313232422
    6. '))
' → logprob: -12.875652313232422
    7. '),' → logprob: -15.750652313232422
    8. '   ' → logprob: -16.375652313232422
    9. ' ' → logprob: -16.500652313232422
    10. '()' → logprob: -16.875652313232422

Token 248: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015117661096155643
    2. '))' → logprob: -6.501511573791504
    3. ' )' → logprob: -12.501511573791504
    4. ')))' → logprob: -12.626511573791504
    5. '())' → logprob: -14.251511573791504
    6. '`)' → logprob: -14.376511573791504
    7. ')`' → logprob: -15.001511573791504
    8. '})' → logprob: -15.376511573791504
    9. '])' → logprob: -15.501511573791504
    10. '()' → logprob: -16.00151252746582

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6327111124992371
    2. ' a' → logprob: -0.7577111124992371
    3. ' ' → logprob: -9.757711410522461
    4. ''' → logprob: -10.632711410522461
    5. '(a' → logprob: -11.882711410522461
    6. '"' → logprob: -12.257711410522461
    7. ''a' → logprob: -12.257711410522461
    8. ' ' → logprob: -12.257711410522461
    9. ' '' → logprob: -13.007711410522461
    10. '_a' → logprob: -13.257711410522461

Token 250: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.0445127372804563e-05
    2. '_' → logprob: -12.00001049041748
    3. 'g' → logprob: -12.62501049041748
    4. '_a' → logprob: -15.75001049041748
    5. '<|end|>' → logprob: -15.75001049041748
    6. ')' → logprob: -16.125009536743164
    7. '_gc' → logprob: -16.750009536743164
    8. '_c' → logprob: -17.125009536743164
    9. '_gl' → logprob: -17.375009536743164
    10. '_gt' → logprob: -17.625009536743164

Token 251: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.3438327843905427e-05
    2. '_cd' → logprob: -11.75002384185791
    3. 'c' → logprob: -12.12502384185791
    4. 'cdf' → logprob: -12.62502384185791
    5. 'g' → logprob: -12.75002384185791
    6. '_c' → logprob: -13.62502384185791
    7. 'CD' → logprob: -14.25002384185791
    8. 'cdn' → logprob: -14.50002384185791
    9. '_g' → logprob: -14.87502384185791
    10. 'd' → logprob: -15.37502384185791

Token 252: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. ' )' → logprob: -11.125017166137695
    3. '))' → logprob: -13.750017166137695
    4. ')
' → logprob: -14.125017166137695
    5. '`)' → logprob: -15.375017166137695
    6. ')`' → logprob: -16.250017166137695
    7. '())' → logprob: -16.375017166137695
    8. '')' → logprob: -16.750017166137695
    9. '```' → logprob: -17.000017166137695
    10. ')#' → logprob: -18.250017166137695

Token 253: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4550134241580963
    2. '__' → logprob: -1.080013394355774
    3. '_' → logprob: -3.8300135135650635
    4. ' ' → logprob: -5.955013275146484
    5. '_name' → logprob: -7.205013275146484
    6. ' _' → logprob: -7.955013275146484
    7. '___' → logprob: -9.205013275146484
    8. 'space' → logprob: -9.205013275146484
    9. 'name' → logprob: -9.330013275146484
    10. ' ' → logprob: -10.205013275146484

Token 255: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0037023313343524933
    2. ' ==' → logprob: -6.378702163696289
    3. '==' → logprob: -7.003702163696289
    4. ' __' → logprob: -7.628702163696289
    5. '_' → logprob: -7.753702163696289
    6. '=="' → logprob: -10.128702163696289
    7. '__.__' → logprob: -10.253702163696289
    8. '___' → logprob: -10.503702163696289
    9. '.__' → logprob: -11.128702163696289
    10. '__.' → logprob: -11.253702163696289

Token 256: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003418991982471198
    2. '==' → logprob: -8.00034236907959
    3. '__.__' → logprob: -12.25034236907959
    4. ' ==' → logprob: -13.75034236907959
    5. '__.' → logprob: -15.75034236907959
    6. '___' → logprob: -16.125341415405273
    7. '_' → logprob: -16.250341415405273
    8. '=="' → logprob: -16.500341415405273
    9. '=' → logprob: -17.125341415405273
    10. '__,' → logprob: -17.625341415405273

Token 257: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4557110071182251
    2. ' ==' → logprob: -1.330711007118225
    3. '__' → logprob: -2.3307108879089355
    4. '=="' → logprob: -5.4557108879089355
    5. '=='' → logprob: -8.705711364746094
    6. '=' → logprob: -11.330711364746094
    7. '.__' → logprob: -11.580711364746094
    8. '===' → logprob: -11.830711364746094
    9. '==
' → logprob: -12.205711364746094
    10. '_' → logprob: -12.455711364746094

Token 258: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6931572556495667
    2. ''' → logprob: -0.6931572556495667
    3. ' "__' → logprob: -11.818157196044922
    4. ' '__' → logprob: -14.193157196044922
    5. '"user' → logprob: -14.693157196044922
    6. '__' → logprob: -14.818157196044922
    7. ''_' → logprob: -15.443157196044922
    8. ''"' → logprob: -15.443157196044922
    9. '"_' → logprob: -15.818157196044922
    10. ' "' → logprob: -16.693157196044922

Token 259: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04700532183051109
    2. 'name' → logprob: -3.1720054149627686
    3. '__' → logprob: -5.5470051765441895
    4. '"' → logprob: -10.672005653381348
    5. '```' → logprob: -11.047005653381348
    6. '   ' → logprob: -11.547005653381348
    7. 'file' → logprob: -11.672005653381348
    8. '_main' → logprob: -12.047005653381348
    9. 'built' → logprob: -12.047005653381348
    10. '_name' → logprob: -12.922005653381348

Token 260: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06501729041337967
    2. '__' → logprob: -2.8150172233581543
    3. '__.' → logprob: -6.565017223358154
    4. '__':
' → logprob: -6.815017223358154
    5. '.' → logprob: -8.315017700195312
    6. '__.__' → logprob: -8.440017700195312
    7. '__["' → logprob: -9.690017700195312
    8. '.__' → logprob: -12.440017700195312
    9. '__
' → logprob: -13.065017700195312
    10. '."' → logprob: -13.190017700195312

Token 261: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048745427280664444
    2. ' main' → logprob: -3.0487453937530518
    3. '	main' → logprob: -9.173745155334473
    4. '__' → logprob: -10.173745155334473
    5. '   ' → logprob: -11.673745155334473
    6. '_main' → logprob: -13.048745155334473
    7. '"' → logprob: -13.298745155334473
    8. '    
' → logprob: -13.798745155334473
    9. ' ' → logprob: -14.423745155334473
    10. ''' → logprob: -14.548745155334473

Token 262: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.339278580620885e-06
    2. ' main' → logprob: -13.000001907348633
    3. '	main' → logprob: -19.500001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '_main' → logprob: -24.000001907348633
    6. '.main' → logprob: -24.375001907348633
    7. '(main' → logprob: -24.875001907348633
    8. 'mai' → logprob: -26.375001907348633
    9. 'import' → logprob: -26.625001907348633
    10. 'ma' → logprob: -26.750001907348633

Token 263: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003538536373525858
    2. '(' → logprob: -6.378538608551025
    3. '()
' → logprob: -6.503538608551025
    4. '
' → logprob: -8.753538131713867
    5. '(
' → logprob: -9.128538131713867
    6. '<|end|>' → logprob: -10.878538131713867
    7. ')' → logprob: -11.003538131713867
    8. '```' → logprob: -11.628538131713867
    9. '#' → logprob: -12.128538131713867
    10. '()\' → logprob: -12.128538131713867


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 261
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 205
Précision stricte (1ère position): 54.02%
Précision adaptée (1ère position): 56.32%
Précision (top 10): 78.54%
================================================================================
