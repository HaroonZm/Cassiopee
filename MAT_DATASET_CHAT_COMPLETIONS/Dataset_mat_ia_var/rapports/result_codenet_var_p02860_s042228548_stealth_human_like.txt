================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()
# On veut vérifier un truc avec le mot... Est-ce que c'est deux fois la même chose ?
if n % 2 == 1:
    print('No')
    quit()
mid = len(s) // 2
first = s[:mid]
second = s[mid:]
# Bon, on compare les deux parties
if first == second:
    print("Yes")
else:
    print('No')
# Franchement, c'est pas super optimisé mais ça marche
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2073645442724228
    2. ')' → logprob: -1.707364559173584
    3. '()' → logprob: -5.457364559173584
    4. '())' → logprob: -7.082364559173584
    5. '(
' → logprob: -8.082364082336426
    6. '```' → logprob: -9.582364082336426
    7. '))' → logprob: -9.707364082336426
    8. '[' → logprob: -10.582364082336426
    9. '')' → logprob: -10.582364082336426
    10. '")' → logprob: -10.582364082336426

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1446903944015503
    2. ' =' → logprob: -1.2696903944015503
    3. '=' → logprob: -1.8946903944015503
    4. 'tr' → logprob: -2.39469051361084
    5. '.' → logprob: -2.76969051361084
    6. '[' → logprob: -3.01969051361084
    7. 't' → logprob: -4.14469051361084
    8. 'trip' → logprob: -5.64469051361084
    9. 'u' → logprob: -5.76969051361084
    10. '[i' → logprob: -5.89469051361084

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24063017964363098
    2. ' input' → logprob: -1.8656301498413086
    3. '""' → logprob: -3.2406301498413086
    4. '''' → logprob: -4.490630149841309
    5. '"' → logprob: -5.990630149841309
    6. ''' → logprob: -6.490630149841309
    7. '0' → logprob: -6.740630149841309
    8. ' ""' → logprob: -6.865630149841309
    9. ' ''' → logprob: -7.115630149841309
    10. ' ' → logprob: -7.365630149841309

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004013576544821262
    2. ''' → logprob: -6.379013538360596
    3. '('' → logprob: -6.754013538360596
    4. '"' → logprob: -8.254014015197754
    5. '()' → logprob: -8.254014015197754
    6. ')' → logprob: -8.504014015197754
    7. '`' → logprob: -9.004014015197754
    8. '(
' → logprob: -9.129014015197754
    9. ' (' → logprob: -10.004014015197754
    10. '```' → logprob: -10.254014015197754

Token 9: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0056207180023193
    2. 'if' → logprob: -1.2556207180023193
    3. 'i' → logprob: -2.0056207180023193
    4. 'count' → logprob: -2.2556207180023193
    5. 'f' → logprob: -3.2556207180023193
    6. 'c' → logprob: -3.6306207180023193
    7. 't' → logprob: -5.005620956420898
    8. '_' → logprob: -5.255620956420898
    9. 'r' → logprob: -5.380620956420898
    10. 'sum' → logprob: -5.380620956420898

Token 10: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.028428077697754
    2. 'if' → logprob: -1.778428077697754
    3. 'count' → logprob: -1.778428077697754
    4. ' for' → logprob: -2.278428077697754
    5. ' if' → logprob: -2.653428077697754
    6. 'i' → logprob: -3.278428077697754
    7. 'f' → logprob: -3.653428077697754
    8. ' count' → logprob: -4.153428077697754
    9. 'c' → logprob: -4.653428077697754
    10. 'result' → logprob: -5.153428077697754

Token 11: ' veut' (ID: 41653)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007759704254567623
    2. ' e' → logprob: -5.8827595710754395
    3. 'ly' → logprob: -6.8827595710754395
    4. '_' → logprob: -7.0077595710754395
    5. 's' → logprob: -7.3827595710754395
    6. 't' → logprob: -7.6327595710754395
    7. 'el' → logprob: -8.132760047912598
    8. '_e' → logprob: -8.382760047912598
    9. 'l' → logprob: -8.632760047912598
    10. 'g' → logprob: -8.882760047912598

Token 12: ' vérifier' (ID: 93671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0948216915130615
    2. ' compter' → logprob: -1.7198216915130615
    3. 'tr' → logprob: -1.8448216915130615
    4. ' tr' → logprob: -3.0948216915130615
    5. 't' → logprob: -3.2198216915130615
    6. 'count' → logprob: -3.4698216915130615
    7. 's' → logprob: -3.7198216915130615
    8. '  ' → logprob: -3.9698216915130615
    9. '   ' → logprob: -3.9698216915130615
    10. 'r' → logprob: -3.9698216915130615

Token 13: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10712572187185287
    2. 's' → logprob: -3.107125759124756
    3. '_' → logprob: -3.982125759124756
    4. ''' → logprob: -4.357125759124756
    5. ' if' → logprob: -5.232125759124756
    6. ',' → logprob: -5.232125759124756
    7. ' si' → logprob: -5.732125759124756
    8. 'si' → logprob: -6.482125759124756
    9. ')' → logprob: -6.607125759124756
    10. ' s' → logprob: -6.732125759124756

Token 14: ' truc' (ID: 58342)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1124388575553894
    2. ' e' → logprob: -3.237438917160034
    3. ' caractère' → logprob: -3.862438917160034
    4. ''' → logprob: -3.987438917160034
    5. ' espace' → logprob: -5.737438678741455
    6. ' caract' → logprob: -5.862438678741455
    7. 'a' → logprob: -5.987438678741455
    8. '_' → logprob: -6.612438678741455
    9. ' ' → logprob: -6.737438678741455
    10. ''e' → logprob: -6.737438678741455

Token 15: ' avec' (ID: 3937)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5480518937110901
    2. 'i' → logprob: -1.0480518341064453
    3. 'for' → logprob: -3.5480518341064453
    4. ':' → logprob: -4.423051834106445
    5. ' if' → logprob: -5.048051834106445
    6. ',' → logprob: -5.798051834106445
    7. '.' → logprob: -5.923051834106445
    8. 's' → logprob: -6.048051834106445
    9. 'f' → logprob: -6.173051834106445
    10. 'count' → logprob: -6.548051834106445

Token 16: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40354809165000916
    2. ' s' → logprob: -1.9035481214523315
    3. 'len' → logprob: -2.153548002243042
    4. ' len' → logprob: -3.778548002243042
    5. 'if' → logprob: -4.653548240661621
    6. ' if' → logprob: -4.653548240661621
    7. ' la' → logprob: -4.903548240661621
    8. 'la' → logprob: -5.528548240661621
    9. 'n' → logprob: -6.278548240661621
    10. 'for' → logprob: -6.528548240661621

Token 17: ' mot' (ID: 3598)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.047600992023944855
    2. 'n' → logprob: -4.797601222991943
    3. 'string' → logprob: -5.047601222991943
    4. 'm' → logprob: -5.422601222991943
    5. 'prem' → logprob: -5.672601222991943
    6. 'a' → logprob: -5.797601222991943
    7. 'nombre' → logprob: -5.922601222991943
    8. 't' → logprob: -5.922601222991943
    9. 'd' → logprob: -6.172601222991943
    10. 'e' → logprob: -6.172601222991943

Token 18: '...' (ID: 1008)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5402625203132629
    2. 'i' → logprob: -1.1652624607086182
    3. 'for' → logprob: -2.790262460708618
    4. 'f' → logprob: -4.290262699127197
    5. ' if' → logprob: -4.415262699127197
    6. '#' → logprob: -5.790262699127197
    7. 's' → logprob: -5.790262699127197
    8. ' for' → logprob: -6.290262699127197
    9. ':' → logprob: -6.290262699127197
    10. '_' → logprob: -6.790262699127197

Token 19: ' Est' (ID: 4555)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6014559864997864
    2. 'i' → logprob: -0.9764559864997864
    3. 'for' → logprob: -2.8514559268951416
    4. ' if' → logprob: -4.726456165313721
    5. 'f' → logprob: -5.726456165313721
    6. ' for' → logprob: -6.601456165313721
    7. 't' → logprob: -7.726456165313721
    8. 'count' → logprob: -7.726456165313721
    9. ' i' → logprob: -8.226455688476562
    10. 'e' → logprob: -8.226455688476562

Token 20: '-ce' (ID: 35404)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.5352978706359863
    2. 's' → logprob: -1.5352978706359863
    3. ''' → logprob: -1.6602978706359863
    4. 'if' → logprob: -2.6602978706359863
    5. '=' → logprob: -3.0352978706359863
    6. '-' → logprob: -3.0352978706359863
    7. '_' → logprob: -3.2852978706359863
    8. '-ce' → logprob: -3.4102978706359863
    9. ' ' → logprob: -3.6602978706359863
    10. 't' → logprob: -3.7852978706359863

Token 21: ' que' (ID: 661)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3756943941116333
    2. 's' → logprob: -2.0006942749023438
    3. '"' → logprob: -2.2506942749023438
    4. '_' → logprob: -3.8756942749023438
    5. ' ' → logprob: -4.125694274902344
    6. ' que' → logprob: -4.500694274902344
    7. '(' → logprob: -5.375694274902344
    8. '`' → logprob: -6.000694274902344
    9. '```' → logprob: -6.125694274902344
    10. '(s' → logprob: -6.250694274902344

Token 22: ' c' (ID: 274)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5901768207550049
    2. 's' → logprob: -1.7151768207550049
    3. ''s' → logprob: -2.090176820755005
    4. ' s' → logprob: -2.715176820755005
    5. ' le' → logprob: -3.965176820755005
    6. '"' → logprob: -4.215176582336426
    7. ' '' → logprob: -4.340176582336426
    8. ' len' → logprob: -5.215176582336426
    9. 'len' → logprob: -5.215176582336426
    10. ' ' → logprob: -5.590176582336426

Token 23: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33369913697242737
    2. 'e' → logprob: -2.3336992263793945
    3. 'a' → logprob: -2.4586992263793945
    4. ''est' → logprob: -3.2086992263793945
    5. 'ont' → logprob: -4.2086992263793945
    6. ''s' → logprob: -4.3336992263793945
    7. ''a' → logprob: -4.3336992263793945
    8. 'est' → logprob: -5.2086992263793945
    9. 's' → logprob: -5.5836992263793945
    10. ' '' → logprob: -6.5836992263793945

Token 24: ' deux' (ID: 10301)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.036348581314087
    2. '"' → logprob: -1.661348581314087
    3. ''' → logprob: -2.161348581314087
    4. ' s' → logprob: -2.536348581314087
    5. 'une' → logprob: -3.786348581314087
    6. ''un' → logprob: -3.911348581314087
    7. ' "' → logprob: -4.161348342895508
    8. ' une' → logprob: -4.161348342895508
    9. ' vrai' → logprob: -4.286348342895508
    10. ' ' → logprob: -4.286348342895508

Token 25: ' fois' (ID: 14697)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6768683791160583
    2. 's' → logprob: -1.3018684387207031
    3. '_' → logprob: -1.9268684387207031
    4. ' s' → logprob: -4.176868438720703
    5. 'es' → logprob: -4.551868438720703
    6. ' espaces' → logprob: -4.926868438720703
    7. 'n' → logprob: -5.176868438720703
    8. 'm' → logprob: -5.551868438720703
    9. ' _' → logprob: -5.676868438720703
    10. ' =' → logprob: -6.051868438720703

Token 26: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04472948610782623
    2. '_' → logprob: -3.794729471206665
    3. 's' → logprob: -4.669729709625244
    4. ' s' → logprob: -6.044729709625244
    5. ''' → logprob: -6.169729709625244
    6. '  ' → logprob: -6.419729709625244
    7. ' ' → logprob: -6.669729709625244
    8. ' =' → logprob: -7.294729709625244
    9. ' '' → logprob: -7.419729709625244
    10. ' (' → logprob: -7.544729709625244

Token 27: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.2106185257434845
    2. 'm' → logprob: -1.710618495941162
    3. 's' → logprob: -5.460618495941162
    4. ' ' → logprob: -7.210618495941162
    5. 'mot' → logprob: -7.210618495941162
    6. ' m' → logprob: -7.335618495941162
    7. ' meme' → logprob: -7.460618495941162
    8. ' even' → logprob: -8.08561897277832
    9. ' mêmes' → logprob: -8.21061897277832
    10. ' s' → logprob: -8.33561897277832

Token 28: ' chose' (ID: 15505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6937060356140137
    2. 's' → logprob: -1.9437060356140137
    3. ' ' → logprob: -2.3187060356140137
    4. 'word' → logprob: -2.4437060356140137
    5. '?' → logprob: -3.1937060356140137
    6. '_' → logprob: -3.3187060356140137
    7. 'mot' → logprob: -3.6937060356140137
    8. ' word' → logprob: -4.568706035614014
    9. '.' → logprob: -5.193706035614014
    10. ':' → logprob: -5.318706035614014

Token 29: ' ?
' (ID: 19740)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4088001549243927
    2. 'i' → logprob: -1.9088001251220703
    3. ' if' → logprob: -2.2838001251220703
    4. '=' → logprob: -3.9088001251220703
    5. 's' → logprob: -4.03380012512207
    6. ' ' → logprob: -4.28380012512207
    7. '?' → logprob: -4.53380012512207
    8. ':' → logprob: -5.28380012512207
    9. 'n' → logprob: -5.53380012512207
    10. '#' → logprob: -5.90880012512207

Token 30: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5572067499160767
    2. 'i' → logprob: -1.4322067499160767
    3. ' if' → logprob: -1.9322067499160767
    4. '=' → logprob: -4.307206630706787
    5. 's' → logprob: -4.807206630706787
    6. ' i' → logprob: -5.307206630706787
    7. ' ' → logprob: -5.557206630706787
    8. ':' → logprob: -5.682206630706787
    9. '?' → logprob: -5.807206630706787
    10. '#' → logprob: -6.182206630706787

Token 31: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.003186386078596115
    2. 's' → logprob: -5.753186225891113
    3. ' n' → logprob: -12.378186225891113
    4. ' ' → logprob: -13.003186225891113
    5. ' ' → logprob: -13.378186225891113
    6. ' len' → logprob: -14.628186225891113
    7. '(s' → logprob: -16.00318717956543
    8. 'n' → logprob: -16.12818717956543
    9. '	s' → logprob: -16.87818717956543
    10. '_s' → logprob: -17.00318717956543

Token 32: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08823686838150024
    2. '==' → logprob: -3.3382368087768555
    3. ' >' → logprob: -4.2132368087768555
    4. '>' → logprob: -4.7132368087768555
    5. ' >=' → logprob: -4.7132368087768555
    6. ' ' → logprob: -4.9632368087768555
    7. '=' → logprob: -5.8382368087768555
    8. ' *' → logprob: -6.5882368087768555
    9. ' <=' → logprob: -6.5882368087768555
    10. '*' → logprob: -7.0882368087768555

Token 33: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326438188552856
    2. ' ' → logprob: -0.7576438188552856
    3. 's' → logprob: -11.882643699645996
    4. ' len' → logprob: -11.882643699645996
    5. '3' → logprob: -12.007643699645996
    6. '=' → logprob: -12.632643699645996
    7. 'len' → logprob: -12.632643699645996
    8. '1' → logprob: -12.757643699645996
    9. '  ' → logprob: -12.882643699645996
    10. '==' → logprob: -12.882643699645996

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8802491215174086e-05
    2. 'len' → logprob: -10.750028610229492
    3. ' ' → logprob: -11.875028610229492
    4. ' len' → logprob: -16.000028610229492
    5. '(len' → logprob: -16.750028610229492
    6. '```' → logprob: -17.375028610229492
    7. '4' → logprob: -18.250028610229492
    8. '   ' → logprob: -18.375028610229492
    9. '  ' → logprob: -18.500028610229492
    10. '0' → logprob: -18.500028610229492

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0037490101531147957
    2. '==' → logprob: -5.628748893737793
    3. ' =' → logprob: -9.753748893737793
    4. ' ' → logprob: -10.003748893737793
    5. '=' → logprob: -10.128748893737793
    6. ' !=' → logprob: -12.878748893737793
    7. ')' → logprob: -13.503748893737793
    8. ' ===' → logprob: -13.878748893737793
    9. '0' → logprob: -14.878748893737793
    10. ')==' → logprob: -15.378748893737793

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889044284820557
    2. ' ' → logprob: -2.578890323638916
    3. '1' → logprob: -15.328890800476074
    4. '```' → logprob: -16.516389846801758
    5. ')' → logprob: -16.641389846801758
    6. '2' → logprob: -16.703889846801758
    7. ' ' → logprob: -16.891389846801758
    8. '00' → logprob: -16.953889846801758
    9. '  ' → logprob: -17.141389846801758
    10. '=' → logprob: -17.453889846801758

Token 37: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '2' → logprob: -15.375296592712402
    4. '1' → logprob: -16.250295639038086
    5. ')' → logprob: -18.000295639038086
    6. '۰' → logprob: -18.000295639038086
    7. '```' → logprob: -18.562795639038086
    8. '00' → logprob: -18.687795639038086
    9. '٠' → logprob: -19.062795639038086
    10. ' ' → logprob: -19.500295639038086

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04858941584825516
    2. ' :' → logprob: -3.0485894680023193
    3. ':**' → logprob: -14.673589706420898
    4. ' ' → logprob: -14.798589706420898
    5. ':return' → logprob: -14.923589706420898
    6. ':
' → logprob: -15.548589706420898
    7. ' and' → logprob: -16.0485897064209
    8. '：' → logprob: -16.0485897064209
    9. ' :
' → logprob: -16.4235897064209
    10. '):' → logprob: -16.4235897064209

Token 39: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6346604228019714
    2. 'print' → logprob: -1.0096604824066162
    3. ' ' → logprob: -3.634660482406616
    4. '\' → logprob: -3.884660482406616
    5. '   ' → logprob: -4.009660243988037
    6. ' 
' → logprob: -4.009660243988037
    7. '\n' → logprob: -4.759660243988037
    8. '    ' → logprob: -5.634660243988037
    9. ' \' → logprob: -6.134660243988037
    10. ':' → logprob: -6.384660243988037

Token 40: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.025897067040205002
    2. 'print' (adapté à ' print') → logprob: -4.150897026062012
    3. ' ' → logprob: -5.525897026062012
    4. ' p' → logprob: -5.775897026062012
    5. '   ' → logprob: -7.525897026062012
    6. ' pass' → logprob: -7.775897026062012
    7. 'p' → logprob: -7.900897026062012
    8. ' 
' → logprob: -8.025897026062012
    9. ' \' → logprob: -8.275897026062012
    10. ' prin' → logprob: -8.400897026062012

Token 41: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2903836667537689
    2. '("' → logprob: -1.5403836965560913
    3. '('' → logprob: -4.290383815765381
    4. '()' → logprob: -4.415383815765381
    5. '("")' → logprob: -5.165383815765381
    6. '(s' → logprob: -5.665383815765381
    7. '("("' → logprob: -7.040383815765381
    8. '(-' → logprob: -7.540383815765381
    9. '(None' → logprob: -8.040383338928223
    10. '(False' → logprob: -8.165383338928223

Token 42: 'No' (ID: 3160)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.8862970471382141
    2. '-' → logprob: -1.5112969875335693
    3. ':' → logprob: -2.0112969875335693
    4. 'NO' → logprob: -2.1362969875335693
    5. 'No' → logprob: -3.5112969875335693
    6. 'Impossible' → logprob: -3.5112969875335693
    7. 'Im' → logprob: -4.636297225952148
    8. 's' → logprob: -4.761297225952148
    9. 'None' → logprob: -5.761297225952148
    10. '```' → logprob: -5.886297225952148

Token 43: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2734474241733551
    2. '')' → logprob: -1.5234473943710327
    3. 't' → logprob: -4.023447513580322
    4. 'ne' → logprob: -5.773447513580322
    5. 'n' → logprob: -9.273447036743164
    6. '")' → logprob: -9.398447036743164
    7. ''' → logprob: -10.273447036743164
    8. ' )' → logprob: -10.773447036743164
    9. 'pe' → logprob: -11.273447036743164
    10. ' ')' → logprob: -11.898447036743164

Token 44: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12126215547323227
    2. 'elif' → logprob: -2.2462620735168457
    3. ')' → logprob: -5.246262073516846
    4. ' else' → logprob: -6.496262073516846
    5. 'e' → logprob: -7.496262073516846
    6. 'el' → logprob: -8.121262550354004
    7. '<|end|>' → logprob: -8.621262550354004
    8. '   ' → logprob: -8.746262550354004
    9. '```' → logprob: -8.871262550354004
    10. '
' → logprob: -9.371262550354004

Token 45: ' quit' (ID: 27737)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002645929343998432
    2. 'elif' → logprob: -6.002645969390869
    3. 'exit' → logprob: -9.252645492553711
    4. ' else' → logprob: -10.252645492553711
    5. '```' → logprob: -10.627645492553711
    6. '\n' → logprob: -12.502645492553711
    7. ')' → logprob: -12.877645492553711
    8. '   ' → logprob: -13.002645492553711
    9. '#else' → logprob: -13.627645492553711
    10. 'e' → logprob: -13.627645492553711

Token 46: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.198043699143454e-05
    2. '(' → logprob: -9.750091552734375
    3. '()
' → logprob: -10.375091552734375
    4. '()

' → logprob: -14.000091552734375
    5. '()`' → logprob: -14.250091552734375
    6. '()\' → logprob: -15.000091552734375
    7. ' ()' → logprob: -15.625091552734375
    8. '()<' → logprob: -16.250091552734375
    9. '())' → logprob: -16.625091552734375
    10. '()
' → logprob: -16.750091552734375

Token 47: 'mid' (ID: 23430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.229258194565773
    2. 's' → logprob: -2.7292582988739014
    3. 'elif' → logprob: -3.4792582988739014
    4. 'e' → logprob: -3.7292582988739014
    5. 'i' → logprob: -3.9792582988739014
    6. 't' → logprob: -4.229258060455322
    7. 'n' → logprob: -4.354258060455322
    8. '#' → logprob: -4.479258060455322
    9. '```' → logprob: -5.229258060455322
    10. 'm' → logprob: -5.229258060455322

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12822483479976654
    2. ' =' → logprob: -2.1282248497009277
    3. '_' → logprob: -7.253224849700928
    4. 'd' → logprob: -7.628224849700928
    5. '=len' → logprob: -10.37822437286377
    6. 'point' → logprob: -11.00322437286377
    7. 'le' → logprob: -11.25322437286377
    8. '_index' → logprob: -11.37822437286377
    9. 'x' → logprob: -12.37822437286377
    10. '-' → logprob: -12.37822437286377

Token 49: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38687798380851746
    2. 'n' → logprob: -1.1368780136108398
    3. 's' → logprob: -12.26187801361084
    4. 'len' → logprob: -13.88687801361084
    5. 'int' → logprob: -14.13687801361084
    6. '	n' → logprob: -15.13687801361084
    7. ' s' → logprob: -16.511877059936523
    8. '_n' → logprob: -16.511877059936523
    9. '(n' → logprob: -16.636877059936523
    10. ' len' → logprob: -17.011877059936523

Token 50: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00012558852904476225
    2. 's' → logprob: -9.375125885009766
    3. '(' → logprob: -10.125125885009766
    4. '(n' → logprob: -15.125125885009766
    5. '()' → logprob: -16.500125885009766
    6. ' (' → logprob: -16.875125885009766
    7. '(
' → logprob: -17.500125885009766
    8. '```' → logprob: -17.625125885009766
    9. '(a' → logprob: -18.000125885009766
    10. '(t' → logprob: -18.000125885009766

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027158720418810844
    2. ')//' → logprob: -3.902158737182617
    3. '//' → logprob: -5.027158737182617
    4. ' //' → logprob: -10.527158737182617
    5. ' )' → logprob: -11.902158737182617
    6. 's' → logprob: -13.027158737182617
    7. ' ' → logprob: -14.777158737182617
    8. '   ' → logprob: -15.527158737182617
    9. '`)' → logprob: -16.027158737182617
    10. '(' → logprob: -16.152158737182617

Token 52: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.008622024208307266
    2. ' //' → logprob: -4.758622169494629
    3. '```' → logprob: -13.133622169494629
    4. '`' → logprob: -13.508622169494629
    5. '/' → logprob: -13.883622169494629
    6. '#' → logprob: -14.008622169494629
    7. ' ' → logprob: -14.508622169494629
    8. '"' → logprob: -15.133622169494629
    9. ')//' → logprob: -15.383622169494629
    10. '//
' → logprob: -15.383622169494629

Token 53: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۲' → logprob: -17.50000762939453
    4. '२' → logprob: -18.37500762939453
    5. '```' → logprob: -18.50000762939453
    6. '<|end|>' → logprob: -18.62500762939453
    7. '  ' → logprob: -19.50000762939453
    8. '２' → logprob: -19.50000762939453
    9. '২' → logprob: -19.75000762939453
    10. '   ' → logprob: -20.00000762939453

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.875003814697266
    4. '  ' → logprob: -19.000003814697266
    5. '۲' → logprob: -19.125003814697266
    6. '```' → logprob: -19.250003814697266
    7. '२' → logprob: -19.875003814697266
    8. '２' → logprob: -20.375003814697266
    9. '٢' → logprob: -21.062503814697266
    10. '২' → logprob: -21.125003814697266

Token 55: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13306646049022675
    2. '<|end|>' → logprob: -3.008066415786743
    3. ' if' → logprob: -3.758066415786743
    4. '
' → logprob: -3.758066415786743
    5. ' 
' → logprob: -4.883066654205322
    6. 's' → logprob: -4.883066654205322
    7. '<|end|>' → logprob: -6.258066654205322
    8. '  
' → logprob: -6.383066654205322
    9. ''s' → logprob: -6.383066654205322
    10. '#' → logprob: -6.508066654205322

Token 56: 'first' (ID: 7743)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008350973948836327
    2. 'i' → logprob: -4.883350849151611
    3. 's' → logprob: -8.00835132598877
    4. ' if' → logprob: -8.88335132598877
    5. '```' → logprob: -9.38335132598877
    6. 't' → logprob: -10.00835132598877
    7. '<|end|>' → logprob: -10.13335132598877
    8. '#' → logprob: -10.75835132598877
    9. 'first' → logprob: -11.13335132598877
    10. 'If' → logprob: -11.63335132598877

Token 57: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.067811518907547
    2. '_half' → logprob: -2.8178114891052246
    3. '_part' → logprob: -5.442811489105225
    4. '_s' → logprob: -6.692811489105225
    5. '=' → logprob: -9.942811965942383
    6. '_str' → logprob: -10.067811965942383
    7. ' =' → logprob: -10.442811965942383
    8. '_sub' → logprob: -10.442811965942383
    9. 's' → logprob: -10.692811965942383
    10. '_chunk' → logprob: -11.067811965942383

Token 58: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22541461884975433
    2. ' s' → logprob: -1.6004146337509155
    3. '_s' → logprob: -14.600414276123047
    4. '	s' → logprob: -14.725414276123047
    5. '(s' → logprob: -14.725414276123047
    6. ' ' → logprob: -15.850414276123047
    7. ''s' → logprob: -15.850414276123047
    8. ' ' → logprob: -16.537914276123047
    9. '`s' → logprob: -16.537914276123047
    10. '{s' → logprob: -16.850414276123047

Token 59: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0005495758377946913
    2. ':' → logprob: -7.750549793243408
    3. '[mid' → logprob: -9.50054931640625
    4. '[' → logprob: -10.12554931640625
    5. '[:]' → logprob: -12.75054931640625
    6. ' [:' → logprob: -14.62554931640625
    7. ' :' → logprob: -14.87554931640625
    8. ':first' → logprob: -15.25054931640625
    9. '[:-' → logprob: -16.37554931640625
    10. '[
' → logprob: -17.62554931640625

Token 60: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.9361264946837764e-07
    2. ' mid' → logprob: -16.625
    3. '[mid' → logprob: -19.0
    4. 'm' → logprob: -20.125
    5. 'midt' → logprob: -20.5
    6. '(mid' → logprob: -20.5
    7. 'middle' → logprob: -21.125
    8. ' ' → logprob: -21.375
    9. '_mid' → logprob: -22.75
    10. 'midd' → logprob: -22.875

Token 61: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015192650025710464
    2. ']
' → logprob: -6.626519203186035
    3. ' ]' → logprob: -8.626519203186035
    4. ')' → logprob: -11.751519203186035
    5. ']

' → logprob: -12.501519203186035
    6. ']
' → logprob: -13.751519203186035
    7. 's' → logprob: -14.751519203186035
    8. ' ]
' → logprob: -15.251519203186035
    9. 'second' → logprob: -16.25152015686035
    10. '']' → logprob: -16.37652015686035

Token 62: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0005552975926548243
    2. ' second' → logprob: -7.500555515289307
    3. 'last' → logprob: -13.750555038452148
    4. 'se' → logprob: -14.125555038452148
    5. '	second' → logprob: -15.250555038452148
    6. 'sec' → logprob: -15.875555038452148
    7. 'next' → logprob: -16.87555503845215
    8. ' seconde' → logprob: -17.12555503845215
    9. ' secon' → logprob: -17.12555503845215
    10. '_second' → logprob: -17.50055503845215

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022808849811554
    2. '=' → logprob: -1.9102281332015991
    3. '=s' → logprob: -12.78522777557373
    4. 's' → logprob: -14.41022777557373
    5. ' ' → logprob: -15.66022777557373
    6. ' ==' → logprob: -16.535228729248047
    7. '＝' → logprob: -16.660228729248047
    8. ' =)' → logprob: -16.785228729248047
    9. '_' → logprob: -17.035228729248047
    10. '==' → logprob: -17.410228729248047

Token 64: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31326377391815186
    2. ' s' → logprob: -1.3132637739181519
    3. '(s' → logprob: -14.938263893127441
    4. 'first' → logprob: -14.938263893127441
    5. 'second' → logprob: -15.188263893127441
    6. '	s' → logprob: -15.563263893127441
    7. ' first' → logprob: -15.563263893127441
    8. ' ' → logprob: -15.688263893127441
    9. ' ' → logprob: -15.813263893127441
    10. '_s' → logprob: -15.813263893127441

Token 65: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.375006675720215
    3. '[m' → logprob: -13.375006675720215
    4. 'mid' → logprob: -15.625006675720215
    5. '[mem' → logprob: -16.8750057220459
    6. '[first' → logprob: -17.1250057220459
    7. '[:' → logprob: -17.2500057220459
    8. '[:]' → logprob: -17.5000057220459
    9. '[
' → logprob: -17.6250057220459
    10. ' [' → logprob: -17.6250057220459

Token 66: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003667175769805908
    2. ':]' → logprob: -5.62866735458374
    3. ' ]' → logprob: -9.753666877746582
    4. ' :]' → logprob: -12.003666877746582
    5. '()]' → logprob: -14.253666877746582
    6. ' ' → logprob: -14.628666877746582
    7. ':' → logprob: -14.753666877746582
    8. ']
' → logprob: -14.878666877746582
    9. ']==' → logprob: -15.378666877746582
    10. '+]' → logprob: -15.753666877746582

Token 67: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009404043667018414
    2. 'print' → logprob: -7.000940322875977
    3. 'i' → logprob: -10.625940322875977
    4. ' if' → logprob: -12.375940322875977
    5. '```' → logprob: -15.625940322875977
    6. 'If' → logprob: -15.750940322875977
    7. '<|end|>' → logprob: -16.750940322875977
    8. '#print' → logprob: -17.625940322875977
    9. '#' → logprob: -18.000940322875977
    10. ' ' → logprob: -18.250940322875977

Token 68: ' Bon' (ID: 12658)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18373870849609375
    2. 'print' → logprob: -1.8087387084960938
    3. ' if' → logprob: -5.558738708496094
    4. ' print' → logprob: -9.558738708496094
    5. 'If' → logprob: -10.308738708496094
    6. ' ' → logprob: -11.433738708496094
    7. 'i' → logprob: -12.308738708496094
    8. '#' → logprob: -12.558738708496094
    9. '   ' → logprob: -13.433738708496094
    10. '```' → logprob: -13.433738708496094

Token 69: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16035988926887512
    2. 'print' → logprob: -1.9103598594665527
    3. ' if' → logprob: -9.035360336303711
    4. 'for' → logprob: -12.785360336303711
    5. 'i' → logprob: -13.160360336303711
    6. ' print' → logprob: -13.285360336303711
    7. '=' → logprob: -13.535360336303711
    8. '```' → logprob: -13.535360336303711
    9. 's' → logprob: -13.785360336303711
    10. ':' → logprob: -13.910360336303711

Token 70: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007675791857764125
    2. ' if' → logprob: -7.750767707824707
    3. 'print' → logprob: -8.000767707824707
    4. '#' → logprob: -15.125767707824707
    5. '<|end|>' → logprob: -15.125767707824707
    6. ' ' → logprob: -15.500767707824707
    7. 'si' → logprob: -15.875767707824707
    8. 'on' → logprob: -16.25076675415039
    9. 'elif' → logprob: -16.25076675415039
    10. '```' → logprob: -16.25076675415039

Token 71: ' compare' (ID: 12221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1941557079553604
    2. 'print' → logprob: -2.194155693054199
    3. 'continue' → logprob: -3.569155693054199
    4. 'veux' → logprob: -4.194155693054199
    5. 'v' → logprob: -4.819155693054199
    6. 've' → logprob: -5.194155693054199
    7. 'voud' → logprob: -5.819155693054199
    8. 'check' → logprob: -7.069155693054199
    9. 'ver' → logprob: -7.319155693054199
    10. 's' → logprob: -7.444155693054199

Token 72: ' les' (ID: 1341)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1645759493112564
    2. ' if' → logprob: -2.0395760536193848
    3. ' ' → logprob: -4.289576053619385
    4. 'i' → logprob: -5.414576053619385
    5. '<|end|>' → logprob: -7.164576053619385
    6. ':' → logprob: -7.289576053619385
    7. '   ' → logprob: -7.289576053619385
    8. '=' → logprob: -8.414575576782227
    9. 'print' → logprob: -8.789575576782227
    10. '.' → logprob: -9.164575576782227

Token 73: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.026395628228783607
    2. ' deux' → logprob: -4.026395797729492
    3. 'two' → logprob: -5.401395797729492
    4. '2' → logprob: -6.776395797729492
    5. 'first' → logprob: -7.151395797729492
    6. ' two' → logprob: -7.276395797729492
    7. 'strings' → logprob: -7.651395797729492
    8. ' ' → logprob: -8.526395797729492
    9. 'prem' → logprob: -9.151395797729492
    10. 's' → logprob: -10.526395797729492

Token 74: ' parties' (ID: 13531)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31248632073402405
    2. ':' → logprob: -1.9374862909317017
    3. ' if' → logprob: -2.437486410140991
    4. '.' → logprob: -4.312486171722412
    5. ' ' → logprob: -4.687486171722412
    6. 'i' → logprob: -4.812486171722412
    7. '_' → logprob: -6.562486171722412
    8. 's' → logprob: -6.812486171722412
    9. 'e' → logprob: -7.187486171722412
    10. '  
' → logprob: -7.687486171722412

Token 75: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.044422004371881485
    2. ' if' → logprob: -3.419421911239624
    3. '<|end|>' → logprob: -6.044422149658203
    4. ':' → logprob: -6.169422149658203
    5. ' ' → logprob: -6.419422149658203
    6. 'i' → logprob: -7.044422149658203
    7. '
' → logprob: -7.294422149658203
    8. '\n' → logprob: -7.669422149658203
    9. ' 
' → logprob: -7.919422149658203
    10. '.' → logprob: -7.919422149658203

Token 76: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002480412134900689
    2. 'print' → logprob: -6.002480506896973
    3. ' if' → logprob: -12.377480506896973
    4. '```' → logprob: -14.752480506896973
    5. '<|end|>' → logprob: -16.252479553222656
    6. '   ' → logprob: -17.502479553222656
    7. 'i' → logprob: -19.002479553222656
    8. 'If' → logprob: -19.002479553222656
    9. ' ' → logprob: -19.377479553222656
    10. '  
' → logprob: -19.502479553222656

Token 77: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.011054305359721184
    2. 'first' → logprob: -4.511054515838623
    3. '	first' → logprob: -12.886054039001465
    4. ' second' → logprob: -14.011054039001465
    5. '[first' → logprob: -14.136054039001465
    6. '(first' → logprob: -14.386054039001465
    7. ' ' → logprob: -14.511054039001465
    8. 'f' → logprob: -15.011054039001465
    9. ' fi' → logprob: -15.511054039001465
    10. ' f' → logprob: -15.511054039001465

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42881959676742554
    2. '==' → logprob: -1.0538196563720703
    3. '=' → logprob: -9.42881965637207
    4. ' !=' → logprob: -10.67881965637207
    5. '!=' → logprob: -11.80381965637207
    6. ' ' → logprob: -12.92881965637207
    7. ' ' → logprob: -13.17881965637207
    8. ' =' → logprob: -13.55381965637207
    9. ')==' → logprob: -14.05381965637207
    10. ']==' → logprob: -14.92881965637207

Token 79: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.12693630158901215
    2. ' second' → logprob: -2.126936197280884
    3. '	second' → logprob: -12.376935958862305
    4. 'se' → logprob: -13.876935958862305
    5. ' ' → logprob: -14.001935958862305
    6. ' seconde' → logprob: -14.376935958862305
    7. ' ' → logprob: -14.501935958862305
    8. '(second' → logprob: -14.876935958862305
    9. 's' → logprob: -16.001935958862305
    10. ' secon' → logprob: -16.126935958862305

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002060436672763899
    2. ':
' → logprob: -8.500205993652344
    3. ' :' → logprob: -13.500205993652344
    4. '):' → logprob: -14.750205993652344
    5. '<|end|>' → logprob: -15.375205993652344
    6. ':**' → logprob: -15.625205993652344
    7. ':

' → logprob: -16.250205993652344
    8. '():' → logprob: -16.375205993652344
    9. ':return' → logprob: -17.500205993652344
    10. '<|end|>' → logprob: -18.000205993652344

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009119403548538685
    2. '<|end|>' → logprob: -7.375911712646484
    3. '    
' → logprob: -9.625911712646484
    4. ' ' → logprob: -9.750911712646484
    5. ' print' → logprob: -10.250911712646484
    6. '       ' → logprob: -10.500911712646484
    7. '\n' → logprob: -11.000911712646484
    8. 'print' → logprob: -11.125911712646484
    9. '  ' → logprob: -11.250911712646484
    10. ' 
' → logprob: -11.500911712646484

Token 82: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5261001586914062
    2. 'print' (adapté à ' print') → logprob: -0.9011001586914062
    3. ' print' → logprob: -5.901100158691406
    4. '	print' → logprob: -9.276100158691406
    5. '       ' → logprob: -9.401100158691406
    6. 'Print' → logprob: -10.651100158691406
    7. '   ' → logprob: -11.151100158691406
    8. '```' → logprob: -12.401100158691406
    9. '    
' → logprob: -12.526100158691406
    10. ' ' → logprob: -12.901100158691406

Token 83: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023304525762796402
    2. '(' → logprob: -3.7733044624328613
    3. '("' → logprob: -9.77330493927002
    4. '('(' → logprob: -13.77330493927002
    5. '("("' → logprob: -14.14830493927002
    6. '(('' → logprob: -16.398303985595703
    7. ' ('' → logprob: -16.523303985595703
    8. '()' → logprob: -16.898303985595703
    9. '(`' → logprob: -17.273303985595703
    10. '(\'' → logprob: -17.273303985595703

Token 84: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -2.7610454708337784e-05
    2. 'Oui' → logprob: -11.000027656555176
    3. ''' → logprob: -11.875027656555176
    4. '"' → logprob: -12.875027656555176
    5. 'YES' → logprob: -13.875027656555176
    6. ' Yes' → logprob: -15.500027656555176
    7. 'Ye' → logprob: -15.750027656555176
    8. 'Yeah' → logprob: -17.87502670288086
    9. 'No' → logprob: -18.25002670288086
    10. 'Yep' → logprob: -18.25002670288086

Token 85: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.20179083943367004
    2. '")
' → logprob: -1.7017908096313477
    3. ')' → logprob: -8.826790809631348
    4. '')' → logprob: -9.201790809631348
    5. ')
' → logprob: -9.826790809631348
    6. '")
' → logprob: -9.951790809631348
    7. '')
' → logprob: -10.701790809631348
    8. '"' → logprob: -13.451790809631348
    9. '!")' → logprob: -13.951790809631348
    10. '")

' → logprob: -14.076790809631348

Token 86: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00012570773833431304
    2. ' else' → logprob: -9.000125885009766
    3. 'e' → logprob: -14.500125885009766
    4. '```' → logprob: -14.500125885009766
    5. '<|end|>' → logprob: -14.750125885009766
    6. 'elser' → logprob: -15.500125885009766
    7. '	else' → logprob: -15.750125885009766
    8. ')' → logprob: -15.875125885009766
    9. '}else' → logprob: -15.875125885009766
    10. '   ' → logprob: -16.625125885009766

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03295157104730606
    2. '   ' → logprob: -3.532951593399048
    3. ':
' → logprob: -5.782951354980469
    4. ' :' → logprob: -9.657951354980469
    5. ' print' → logprob: -11.282951354980469
    6. '    ' → logprob: -11.532951354980469
    7. ' :
' → logprob: -12.032951354980469
    8. 'print' → logprob: -12.157951354980469
    9. '       ' → logprob: -12.782951354980469
    10. '  ' → logprob: -12.782951354980469

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009968446101993322
    2. ' print' → logprob: -7.000997066497803
    3. 'print' → logprob: -10.250996589660645
    4. ' No' → logprob: -11.000996589660645
    5. ' ' → logprob: -11.500996589660645
    6. '   ' → logprob: -11.750996589660645
    7. '    ' → logprob: -12.125996589660645
    8. '  ' → logprob: -12.500996589660645
    9. ' ' → logprob: -13.000996589660645
    10. '	print' → logprob: -13.625996589660645

Token 89: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.11495529115200043
    2. 'print' (adapté à ' print') → logprob: -2.364955186843872
    3. '   ' → logprob: -4.239955425262451
    4. '	print' → logprob: -9.364954948425293
    5. ' ' → logprob: -9.614954948425293
    6. '    ' → logprob: -9.989954948425293
    7. '(print' → logprob: -10.989954948425293
    8. ' ' → logprob: -11.989954948425293
    9. '.print' → logprob: -12.239954948425293
    10. '  ' → logprob: -13.489954948425293

Token 90: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.26636868715286255
    2. '('' → logprob: -1.7663686275482178
    3. '(' → logprob: -2.7663686275482178
    4. '("("' → logprob: -15.141368865966797
    5. '("""' → logprob: -15.391368865966797
    6. '()' → logprob: -16.391368865966797
    7. '(
' → logprob: -16.641368865966797
    8. '("")' → logprob: -16.766368865966797
    9. '("'' → logprob: -17.391368865966797
    10. '(False' → logprob: -17.516368865966797

Token 91: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. ' No' → logprob: -17.75
    3. '"No' → logprob: -17.75
    4. ''' → logprob: -20.375
    5. '   ' → logprob: -22.5
    6. '"' → logprob: -22.625
    7. 'N' → logprob: -22.875
    8. '_No' → logprob: -23.5
    9. ' ' → logprob: -24.875
    10. 'NO' → logprob: -25.125

Token 92: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00046546570956707
    2. '")' → logprob: -8.250465393066406
    3. ')' → logprob: -8.500465393066406
    4. '')
' → logprob: -14.125465393066406
    5. ''' → logprob: -17.500465393066406
    6. '')"' → logprob: -19.000465393066406
    7. '')

' → logprob: -19.000465393066406
    8. '’)' → logprob: -20.000465393066406
    9. ' ')' → logprob: -20.250465393066406
    10. '`)' → logprob: -20.500465393066406

Token 93: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' Fr' (ID: 2312)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: 'anchement' (ID: 141995)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9033936262130737
    2. ' c' → logprob: -1.0283936262130737
    3. ' on' → logprob: -2.9033937454223633
    4. 'on' → logprob: -3.1533937454223633
    5. 'je' → logprob: -3.1533937454223633
    6. '#' → logprob: -3.7783937454223633
    7. ' je' → logprob: -3.9033937454223633
    8. 'il' → logprob: -4.403393745422363
    9. 'tu' → logprob: -5.278393745422363
    10. 'cela' → logprob: -5.278393745422363

Token 98: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.8755747675895691
    2. '#' → logprob: -1.0005748271942139
    3. ''#' → logprob: -2.625574827194214
    4. 'est' → logprob: -2.750574827194214
    5. ''' → logprob: -3.250574827194214
    6. ''''' → logprob: -3.875574827194214
    7. 'e' → logprob: -4.750574588775635
    8. '```' → logprob: -6.125574588775635
    9. 'ont' → logprob: -6.625574588775635
    10. 'om' → logprob: -7.000574588775635

Token 99: ' pas' (ID: 2173)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.08852396160364151
    2. ' tout' → logprob: -3.0885238647460938
    3. ' parfait' → logprob: -4.713523864746094
    4. ' fini' → logprob: -4.963523864746094
    5. 'f' → logprob: -5.338523864746094
    6. 'par' → logprob: -5.713523864746094
    7. 'exact' → logprob: -6.338523864746094
    8. 'bien' → logprob: -6.338523864746094
    9. ' terminé' → logprob: -6.463523864746094
    10. 't' → logprob: -6.838523864746094

Token 100: ' super' (ID: 2539)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.24084709584712982
    2. 'plus' → logprob: -2.490847110748291
    3. ' parfait' → logprob: -3.615847110748291
    4. 'be' → logprob: -4.115847110748291
    5. 'la' → logprob: -4.615847110748291
    6. 'com' → logprob: -4.615847110748291
    7. ' compliqué' → logprob: -4.615847110748291
    8. 'mal' → logprob: -4.740847110748291
    9. 'tr' → logprob: -4.865847110748291
    10. 'par' → logprob: -4.865847110748291

Token 101: ' optim' (ID: 9367)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.6741698980331421
    2. 'ale' → logprob: -0.7991698980331421
    3. 'al' → logprob: -3.6741700172424316
    4. 'ized' → logprob: -4.299170017242432
    5. 'e' → logprob: -7.674170017242432
    6. 'isable' → logprob: -7.924170017242432
    7. 'ise' → logprob: -8.174169540405273
    8. 'isée' → logprob: -8.424169540405273
    9. '```' → logprob: -9.549169540405273
    10. 'ique' → logprob: -9.924169540405273

Token 103: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' ça' (ID: 13590)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.752964973449707
    2. '<|end|>' → logprob: -1.252964973449707
    3. ' ' → logprob: -1.752964973449707
    4. ' that's' → logprob: -4.377964973449707
    5. ' it's' → logprob: -4.502964973449707
    6. 'c' → logprob: -4.877964973449707
    7. '<|end|>' → logprob: -5.002964973449707
    8. ' it' → logprob: -5.502964973449707
    9. ' ça' → logprob: -5.627964973449707
    10. '...' → logprob: -6.002964973449707

Token 105: ' marche' (ID: 58191)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 23.30%
Précision adaptée (1ère position): 23.30%
Précision (top 10): 61.17%
================================================================================
