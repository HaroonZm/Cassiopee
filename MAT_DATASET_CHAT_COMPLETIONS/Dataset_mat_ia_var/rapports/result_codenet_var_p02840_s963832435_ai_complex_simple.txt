================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    import itertools as it
    import functools as ft
    from math import copysign
    from collections import defaultdict
    input = sys.stdin.readline

    parse = lambda s: list(map(int, s.strip().split()))
    N, x, d = parse(input())

    idn = lambda *args: args[0] if len(args)==1 else args

    # D=0 : use one-liner trickery via bool arithmetics, double-nested ternaries, and map/filter
    if d == 0:
        hack = lambda N, x: list(filter(None, map(lambda t: (N+1)*(t!=0)+(t==0), [x])))[0]
        print(hack(N, x))
        return

    # Swap and normalize everything with functional programming, weird math
    flip = lambda z: (z[0] + z[2] * (z[1]-1), z[1], -z[2]) if z[2] < 0 else z
    x, N, d = ft.reduce(lambda acc, _: flip(acc), range(1), (x,N,d))
    d = abs(d)

    container = defaultdict(list)
    rng = range(N+1)

    # Generate all indices, then extract mod, start and end using reduce and lambdas
    for i in rng:
        mod = pow((x * i) % d, 1, d)
        st, ed = (lambda a,b: (a*d + (x-d)*i, b*d + (x-d)*i))(
            (i*(i+1))//2,
            (i*(N + N-i+1))//2
        )
        container[mod].append((st, ed))

    ans = 0

    # Use reduce and groupby to process
    for mod, intervals in container.items():
        intervals.sort(key=lambda t: t[0])
        # Collapse overlapping intervals using accumulate and next
        ed_prev = intervals[0][0] - 1
        for st, ed in intervals:
            delta = max(0, st - ed_prev)
            contrib = ((ed - st) // d + 1) if st > ed_prev else max(0, (ed - ed_prev) // d)
            ans += contrib
            ed_prev = max(ed_prev, ed)

    print(ans)

if __name__ == '__main__':
    (lambda f: f())(main)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.14868979156017303
    2. '\n' → logprob: -2.7736897468566895
    3. '(' → logprob: -3.6486897468566895
    4. ' ' → logprob: -4.6486897468566895
    5. '   ' → logprob: -4.6486897468566895
    6. ' 
' → logprob: -4.6486897468566895
    7. '    ' → logprob: -5.3986897468566895
    8. '    
' → logprob: -5.5236897468566895
    9. ''' → logprob: -5.8986897468566895
    10. '```' → logprob: -6.2736897468566895

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5938587188720703
    2. '   ' → logprob: -2.0938587188720703
    3. 'return' → logprob: -2.4688587188720703
    4. 'pass' → logprob: -2.8438587188720703
    5. '\' → logprob: -2.9688587188720703
    6. '    ' → logprob: -3.2188587188720703
    7. '\n' → logprob: -3.7188587188720703
    8. ' pass' → logprob: -4.46885871887207
    9. ' ' → logprob: -4.46885871887207
    10. '#' → logprob: -5.09385871887207

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.05344168841838837
    2. ' sys' → logprob: -3.1784417629241943
    3. ' math' → logprob: -5.303441524505615
    4. ' ' → logprob: -5.553441524505615
    5. ' numpy' → logprob: -7.303441524505615
    6. ' json' → logprob: -7.928441524505615
    7. ' random' → logprob: -9.428442001342773
    8. ' space' → logprob: -9.803442001342773
    9. ' tensorflow' → logprob: -9.803442001342773
    10. 'os' → logprob: -9.928442001342773

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7115226984024048
    2. 'newline' → logprob: -1.7115226984024048
    3. '\n' → logprob: -1.9615226984024048
    4. '   ' → logprob: -2.0865225791931152
    5. '.readline' → logprob: -2.5865225791931152
    6. 'import' → logprob: -2.8365225791931152
    7. '<|end|>' → logprob: -2.8365225791931152
    8. '\' → logprob: -3.3365225791931152
    9. 'print' → logprob: -3.4615225791931152
    10. '<|end|>' → logprob: -4.086522579193115

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5024410486221313
    2. '.' → logprob: -1.6274410486221313
    3. '    ' → logprob: -3.377440929412842
    4. '.readline' → logprob: -3.752440929412842
    5. 'newline' → logprob: -3.752440929412842
    6. '.stdout' → logprob: -4.377440929412842
    7. ' ' → logprob: -4.377440929412842
    8. 'import' → logprob: -4.502440929412842
    9. '    
' → logprob: -4.502440929412842
    10. '```' → logprob: -4.752440929412842

Token 8: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.278299480676651
    2. '.' → logprob: -2.403299570083618
    3. ' ' → logprob: -3.403299570083618
    4. '    ' → logprob: -3.528299570083618
    5. '[' → logprob: -3.528299570083618
    6. 'print' → logprob: -4.403299331665039
    7. 'import' (adapté à ' import') → logprob: -5.028299331665039
    8. '\' → logprob: -5.403299331665039
    9. '\n' → logprob: -5.403299331665039
    10. '  ' → logprob: -5.403299331665039

Token 9: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00027825910365208983
    2. ' argparse' → logprob: -9.25027847290039
    3. ' math' → logprob: -9.37527847290039
    4. 'os' → logprob: -9.37527847290039
    5. ' threading' → logprob: -12.62527847290039
    6. ' json' → logprob: -13.25027847290039
    7. '	os' → logprob: -14.12527847290039
    8. ' sys' → logprob: -14.12527847290039
    9. ' logging' → logprob: -14.12527847290039
    10. ' ' → logprob: -14.37527847290039

Token 10: ' as' (ID: 472)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.7046974897384644
    2. '    
' → logprob: -1.9546974897384644
    3. '<|end|>' → logprob: -1.9546974897384644
    4. 'newline' → logprob: -2.079697608947754
    5. '.' → logprob: -2.204697608947754
    6. '\n' → logprob: -2.454697608947754
    7. '<|end|>' → logprob: -3.204697608947754
    8. '   ' → logprob: -3.329697608947754
    9. '```' → logprob: -3.329697608947754
    10. '
' → logprob: -3.829697608947754

Token 11: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.24487830698490143
    2. 'it' → logprob: -2.1198782920837402
    3. ' ' → logprob: -2.7448782920837402
    4. '    ' → logprob: -3.8698782920837402
    5. '   ' → logprob: -4.86987829208374
    6. '  ' → logprob: -6.24487829208374
    7. ' itt' → logprob: -7.36987829208374
    8. '	it' → logprob: -7.61987829208374
    9. 'It' → logprob: -7.74487829208374
    10. 'itl' → logprob: -8.494878768920898

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2241880893707275
    2. '    
' → logprob: -1.5991880893707275
    3. '\' → logprob: -1.9741880893707275
    4. '.' → logprob: -2.2241880893707275
    5. '   ' → logprob: -2.7241880893707275
    6. '' → logprob: -3.2241880893707275
    7. '```' → logprob: -3.3491880893707275
    8. '\n' → logprob: -3.4741880893707275
    9. 'newline' → logprob: -3.8491880893707275
    10. '<|end|>' → logprob: -3.9741880893707275

Token 13: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6949037909507751
    2. '   ' → logprob: -1.56990385055542
    3. '    ' → logprob: -2.31990385055542
    4. '
' → logprob: -2.56990385055542
    5. ' ' → logprob: -3.19490385055542
    6. '.' → logprob: -4.44490385055542
    7. '\n' → logprob: -4.94490385055542
    8. '\' → logprob: -4.94490385055542
    9. '  
' → logprob: -5.19490385055542
    10. '     
' → logprob: -5.19490385055542

Token 14: ' import' (ID: 1588)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7291862964630127
    2. '   ' → logprob: -1.7291862964630127
    3. '    ' → logprob: -1.9791862964630127
    4. '    
' → logprob: -2.7291862964630127
    5. '<|end|>' → logprob: -3.6041862964630127
    6. '\n' → logprob: -3.9791862964630127
    7. 'n' → logprob: -4.479186058044434
    8. 'newline' → logprob: -4.729186058044434
    9. '  ' → logprob: -4.854186058044434
    10. '_' → logprob: -5.104186058044434

Token 15: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2732134163379669
    2. 'math' → logprob: -1.7732133865356445
    3. ' collections' → logprob: -3.0232133865356445
    4. 'collections' → logprob: -4.2732133865356445
    5. ' functools' → logprob: -6.1482133865356445
    6. ' operator' → logprob: -6.7732133865356445
    7. ' os' → logprob: -6.8982133865356445
    8. 'os' → logprob: -6.8982133865356445
    9. 'operator' → logprob: -7.5232133865356445
    10. 're' → logprob: -8.023213386535645

Token 16: ' as' (ID: 472)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8382068872451782
    2. '.' → logprob: -1.4632068872451782
    3. '<|end|>' → logprob: -1.9632068872451782
    4. ' ' → logprob: -3.2132067680358887
    5. '_' → logprob: -3.3382067680358887
    6. '<|end|>' → logprob: -3.8382067680358887
    7. '```' → logprob: -4.088206768035889
    8. 'def' → logprob: -4.213206768035889
    9. '   ' → logprob: -4.213206768035889
    10. '\n' → logprob: -4.838206768035889

Token 17: ' ft' (ID: 16280)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.4893781542778015
    2. 'fun' → logprob: -1.2393782138824463
    3. ' ' → logprob: -3.6143782138824463
    4. '  ' → logprob: -3.9893782138824463
    5. 'f' → logprob: -4.114377975463867
    6. ' ft' → logprob: -4.614377975463867
    7. '    ' → logprob: -4.614377975463867
    8. '   ' → logprob: -4.739377975463867
    9. 'fn' → logprob: -5.739377975463867
    10. 'fu' → logprob: -6.489377975463867

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9734175801277161
    2. '    
' → logprob: -1.3484175205230713
    3. ' ' → logprob: -2.3484175205230713
    4. '    ' → logprob: -2.4734175205230713
    5. '\' → logprob: -2.8484175205230713
    6. '
' → logprob: -2.9734175205230713
    7. '\n' → logprob: -4.47341775894165
    8. '' → logprob: -4.47341775894165
    9. '  
' → logprob: -4.59841775894165
    10. '<|end|>' → logprob: -4.59841775894165

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9316560626029968
    2. ' ' → logprob: -1.8066561222076416
    3. '    
' → logprob: -2.3066561222076416
    4. '.' → logprob: -2.5566561222076416
    5. '<|end|>' → logprob: -2.5566561222076416
    6. '    ' → logprob: -3.3066561222076416
    7. '_' → logprob: -3.9316561222076416
    8. '  
' → logprob: -3.9316561222076416
    9. '
' → logprob: -4.0566558837890625
    10. '\' → logprob: -4.0566558837890625

Token 20: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7595534324645996
    2. '    
' → logprob: -2.0095534324645996
    3. '\n' → logprob: -2.3845534324645996
    4. ' ' → logprob: -2.6345534324645996
    5. '    ' → logprob: -3.0095534324645996
    6. '_' → logprob: -3.1345534324645996
    7. '<|end|>' → logprob: -3.5095534324645996
    8. '  ' → logprob: -4.0095534324646
    9. '
' → logprob: -4.1345534324646
    10. '\' → logprob: -4.1345534324646

Token 21: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6815769076347351
    2. ' collections' → logprob: -1.4315769672393799
    3. ' operator' → logprob: -2.18157696723938
    4. 'collections' → logprob: -3.05657696723938
    5. 'operator' → logprob: -3.30657696723938
    6. ' typing' → logprob: -3.55657696723938
    7. 'math' → logprob: -3.80657696723938
    8. ' ' → logprob: -5.681576728820801
    9. ' os' → logprob: -6.681576728820801
    10. 'typing' → logprob: -6.681576728820801

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4341208338737488
    2. 'import' → logprob: -1.0591208934783936
    3. '<|end|>' → logprob: -5.3091206550598145
    4. '_import' → logprob: -8.934121131896973
    5. '<|end|>' → logprob: -8.934121131896973
    6. '	import' → logprob: -9.184121131896973
    7. ' ' → logprob: -10.059121131896973
    8. ' importar' → logprob: -11.809121131896973
    9. ' impor' → logprob: -12.434121131896973
    10. '```' → logprob: -12.559121131896973

Token 23: ' cop' (ID: 8039)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.46272099018096924
    2. ' sqrt' → logprob: -1.7127209901809692
    3. ' ceil' → logprob: -2.8377208709716797
    4. 'sqrt' → logprob: -3.0877208709716797
    5. ' factorial' → logprob: -3.3377208709716797
    6. ' inf' → logprob: -3.7127208709716797
    7. ' comb' → logprob: -4.33772087097168
    8. 'ceil' → logprob: -5.08772087097168
    9. 'inf' → logprob: -6.83772087097168
    10. 'g' → logprob: -7.08772087097168

Token 24: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.06655552983283997
    2. 'y' → logprob: -2.8165555000305176
    3. 'yac' → logprob: -5.691555500030518
    4. 'ysize' → logprob: -7.566555500030518
    5. 'yc' → logprob: -7.941555500030518
    6. 'yscr' → logprob: -9.816555976867676
    7. 'ysig' → logprob: -10.566555976867676
    8. 'yas' → logprob: -10.691555976867676
    9. ' ys' → logprob: -10.816555976867676
    10. 'ym' → logprob: -11.066555976867676

Token 25: 'ign' (ID: 733)
  Prédit: 'ign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.1432477980852127
    2. 'y' → logprob: -2.5182478427886963
    3. 'ym' → logprob: -4.018247604370117
    4. 'ig' → logprob: -4.143247604370117
    5. 't' → logprob: -5.643247604370117
    6. 'g' → logprob: -5.643247604370117
    7. 'ys' → logprob: -5.768247604370117
    8. 'gn' → logprob: -6.018247604370117
    9. 'e' → logprob: -6.143247604370117
    10. 'ing' → logprob: -7.268247604370117

Token 26: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8477382063865662
    2. '\' → logprob: -1.222738265991211
    3. '    
' → logprob: -2.222738265991211
    4. '(' → logprob: -3.222738265991211
    5. ',' → logprob: -3.472738265991211
    6. '\n' → logprob: -3.847738265991211
    7. ' ' → logprob: -3.972738265991211
    8. '  
' → logprob: -4.347738265991211
    9. '```' → logprob: -4.847738265991211
    10. ' 
' → logprob: -5.097738265991211

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8280452489852905
    2. ' ' → logprob: -2.32804536819458
    3. '
' → logprob: -2.57804536819458
    4. '    
' → logprob: -2.57804536819458
    5. '<|end|>' → logprob: -2.57804536819458
    6. '\n' → logprob: -3.07804536819458
    7. '\' → logprob: -3.07804536819458
    8. ',' → logprob: -3.20304536819458
    9. 'n' → logprob: -4.07804536819458
    10. '  
' → logprob: -4.20304536819458

Token 28: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7387393116950989
    2. '   ' → logprob: -1.238739252090454
    3. ',' → logprob: -2.738739252090454
    4. '    
' → logprob: -3.363739252090454
    5. '_' → logprob: -4.113739490509033
    6. '\n' → logprob: -4.363739490509033
    7. '<|end|>' → logprob: -4.488739490509033
    8. '\' → logprob: -4.613739490509033
    9. ' 
' → logprob: -4.738739490509033
    10. 'def' → logprob: -4.738739490509033

Token 29: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.1132582426071167
    2. ' operator' → logprob: -1.3632582426071167
    3. 'math' → logprob: -2.2382583618164062
    4. ' fractions' → logprob: -2.4882583618164062
    5. 'cmath' → logprob: -2.7382583618164062
    6. 'operator' → logprob: -2.7382583618164062
    7. ' collections' → logprob: -3.3632583618164062
    8. ' typing' → logprob: -4.238258361816406
    9. 'fra' → logprob: -4.488258361816406
    10. 'collections' → logprob: -4.738258361816406

Token 30: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.23788978159427643
    2. ' import' → logprob: -1.7378897666931152
    3. 'abc' → logprob: -3.4878897666931152
    4. '<|end|>' → logprob: -6.737889766693115
    5. 'ounter' → logprob: -6.862889766693115
    6. ' abc' → logprob: -6.987889766693115
    7. ' defaultdict' → logprob: -7.612889766693115
    8. '.' → logprob: -7.737889766693115
    9. '.Counter' → logprob: -8.487890243530273
    10. ' Counter' → logprob: -9.112890243530273

Token 31: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.22720547020435333
    2. ' defaultdict' → logprob: -2.477205514907837
    3. 'default' → logprob: -2.852205514907837
    4. ' deque' → logprob: -2.852205514907837
    5. 'Counter' → logprob: -6.477205276489258
    6. 'named' → logprob: -6.602205276489258
    7. 'abc' → logprob: -7.602205276489258
    8. ' named' → logprob: -8.727205276489258
    9. 'de' → logprob: -9.102205276489258
    10. ' Counter' → logprob: -9.102205276489258

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6238409876823425
    2. '   ' → logprob: -1.1238410472869873
    3. '    
' → logprob: -2.2488410472869873
    4. 'def' → logprob: -5.123840808868408
    5. '  
' → logprob: -5.373840808868408
    6. '<|end|>' → logprob: -5.498840808868408
    7. '\n' → logprob: -5.873840808868408
    8. ',' → logprob: -5.998840808868408
    9. '

' → logprob: -6.248840808868408
    10. '```' → logprob: -6.373840808868408

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.991327702999115
    2. '<|end|>' → logprob: -0.991327702999115
    3. '
' → logprob: -1.7413277626037598
    4. '    
' → logprob: -3.8663277626037598
    5. 'def' → logprob: -4.24132776260376
    6. ',' → logprob: -4.49132776260376
    7. '<|end|>' → logprob: -4.49132776260376
    8. '\n' → logprob: -5.49132776260376
    9. ':' → logprob: -5.86632776260376
    10. 'newline' → logprob: -5.86632776260376

Token 34: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45067447423934937
    2. ' ' → logprob: -2.200674533843994
    3. 'n' → logprob: -2.325674533843994
    4. '    
' → logprob: -3.075674533843994
    5. '\n' → logprob: -3.700674533843994
    6. '
' → logprob: -4.700674533843994
    7. '<|end|>' → logprob: -4.700674533843994
    8. ',' → logprob: -4.700674533843994
    9. '  
' → logprob: -4.950674533843994
    10. 'newline' → logprob: -5.200674533843994

Token 35: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032181181013584137
    2. '=' → logprob: -6.628218173980713
    3. '()' → logprob: -7.003218173980713
    4. '.' → logprob: -8.128217697143555
    5. '<|end|>' → logprob: -8.503217697143555
    6. '_' → logprob: -8.878217697143555
    7. ' =' → logprob: -9.503217697143555
    8. ')' → logprob: -9.878217697143555
    9. '```' → logprob: -10.503217697143555
    10. '('' → logprob: -10.753217697143555

Token 36: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014190302230417728
    2. 'sys' → logprob: -4.264190196990967
    3. ' input' → logprob: -11.514190673828125
    4. 'input' → logprob: -11.889190673828125
    5. '	sys' → logprob: -12.389190673828125
    6. '=sys' → logprob: -13.014190673828125
    7. ' lambda' → logprob: -13.514190673828125
    8. '(sys' → logprob: -13.889190673828125
    9. ' ' → logprob: -14.764190673828125
    10. ' raw' → logprob: -14.889190673828125

Token 37: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013173815095797181
    2. '.stdin' → logprob: -6.751317501068115
    3. '.readline' → logprob: -9.376317024230957
    4. ' .' → logprob: -10.001317024230957
    5. '.read' → logprob: -12.501317024230957
    6. '<|end|>' → logprob: -12.751317024230957
    7. '.stdout' → logprob: -13.501317024230957
    8. '.setdefault' → logprob: -14.126317024230957
    9. '.)' → logprob: -14.251317024230957
    10. 'stdin' → logprob: -14.376317024230957

Token 38: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6395649909973145
    2. '.' → logprob: -0.7645649909973145
    3. '.read' → logprob: -5.0145649909973145
    4. 'read' → logprob: -8.389564514160156
    5. '.Read' → logprob: -10.389564514160156
    6. '.readlines' → logprob: -11.514564514160156
    7. '.\' → logprob: -12.014564514160156
    8. '.stdin' → logprob: -12.264564514160156
    9. '().' → logprob: -12.889564514160156
    10. '```' → logprob: -13.139564514160156

Token 39: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2058199644088745
    2. '    
' → logprob: -1.2058199644088745
    3. '   ' → logprob: -1.5808199644088745
    4. '
' → logprob: -3.205820083618164
    5. '()' → logprob: -3.205820083618164
    6. '\n' → logprob: -3.705820083618164
    7. '(
' → logprob: -4.205820083618164
    8. ' ' → logprob: -4.330820083618164
    9. '\' → logprob: -4.330820083618164
    10. ' 
' → logprob: -4.705820083618164

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14661511778831482
    2. '    
' → logprob: -2.5216150283813477
    3. 'n' → logprob: -3.3966150283813477
    4. '    ' → logprob: -5.396615028381348
    5. '(n' → logprob: -5.771615028381348
    6. '(' → logprob: -6.146615028381348
    7. 'a' → logprob: -6.396615028381348
    8. 'd' → logprob: -6.396615028381348
    9. 'def' → logprob: -6.646615028381348
    10. '
' → logprob: -6.771615028381348

Token 41: ' parse' (ID: 8420)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16450121998786926
    2. 'a' → logprob: -3.289501190185547
    3. '#' → logprob: -3.914501190185547
    4. 'N' → logprob: -4.539501190185547
    5. 'x' → logprob: -4.539501190185547
    6. 's' → logprob: -4.539501190185547
    7. 'd' → logprob: -4.664501190185547
    8. '   ' → logprob: -4.664501190185547
    9. 't' → logprob: -4.789501190185547
    10. 'for' → logprob: -5.039501190185547

Token 42: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8412800431251526
    2. '_line' → logprob: -1.0912799835205078
    3. '(' → logprob: -1.8412799835205078
    4. '_args' → logprob: -3.591279983520508
    5. '_input' → logprob: -3.716279983520508
    6. '_data' → logprob: -5.591279983520508
    7. 'r' → logprob: -6.091279983520508
    8. '_token' → logprob: -6.216279983520508
    9. ')' → logprob: -6.466279983520508
    10. '(line' → logprob: -6.966279983520508

Token 43: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.0754544660449028
    2. 'lambda' → logprob: -2.8254544734954834
    3. '(lambda' → logprob: -4.325454235076904
    4. '(' → logprob: -9.825454711914062
    5. ' ' → logprob: -10.075454711914062
    6. 'int' → logprob: -10.950454711914062
    7. ' (' → logprob: -11.450454711914062
    8. ' int' → logprob: -11.950454711914062
    9. ' list' → logprob: -12.200454711914062
    10. ' str' → logprob: -12.450454711914062

Token 44: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.5233644247055054
    2. ' lambda' → logprob: -1.5233644247055054
    3. ' line' → logprob: -1.8983644247055054
    4. 's' → logprob: -2.023364543914795
    5. ' s' → logprob: -2.023364543914795
    6. 'lambda' → logprob: -2.273364543914795
    7. '_' → logprob: -4.148364543914795
    8. ' input' → logprob: -5.023364543914795
    9. 'x' → logprob: -5.023364543914795
    10. ' x' → logprob: -5.148364543914795

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09087353944778442
    2. ' :' → logprob: -2.7158734798431396
    3. ' s' → logprob: -4.590873718261719
    4. 's' → logprob: -5.090873718261719
    5. ':s' → logprob: -5.465873718261719
    6. '[' → logprob: -9.090873718261719
    7. ':list' → logprob: -10.715873718261719
    8. ' ' → logprob: -11.340873718261719
    9. ':ss' → logprob: -12.465873718261719
    10. ',' → logprob: -12.715873718261719

Token 46: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3238890767097473
    2. ' s' → logprob: -2.3238890171051025
    3. 'list' → logprob: -3.0738890171051025
    4. ' [' → logprob: -3.4488890171051025
    5. ' map' → logprob: -3.6988890171051025
    6. '[s' → logprob: -3.8238890171051025
    7. ' tuple' → logprob: -3.8238890171051025
    8. 's' → logprob: -4.198889255523682
    9. '[' → logprob: -5.198889255523682
    10. 'tuple' → logprob: -5.698889255523682

Token 47: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004932612180709839
    2. '(' → logprob: -5.629932403564453
    3. '(s' → logprob: -6.754932403564453
    4. '(filter' → logprob: -9.504932403564453
    5. '(int' → logprob: -9.629932403564453
    6. 'map' → logprob: -12.129932403564453
    7. ' map' → logprob: -12.379932403564453
    8. '(it' → logprob: -13.004932403564453
    9. '(chain' → logprob: -13.379932403564453
    10. ',map' → logprob: -13.379932403564453

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009017512202262878
    2. '(' → logprob: -4.759017467498779
    3. '(str' → logprob: -8.384017944335938
    4. '<|end|>' → logprob: -9.884017944335938
    5. '(ord' → logprob: -10.509017944335938
    6. 'int' → logprob: -10.884017944335938
    7. ',int' → logprob: -10.884017944335938
    8. '(lambda' → logprob: -11.134017944335938
    9. ')' → logprob: -11.509017944335938
    10. '[int' → logprob: -11.884017944335938

Token 49: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5305761098861694
    2. ',' → logprob: -1.5305761098861694
    3. '(' → logprob: -2.280576229095459
    4. '<|end|>' → logprob: -2.780576229095459
    5. ')' → logprob: -4.030576229095459
    6. ',s' → logprob: -5.280576229095459
    7. 's' → logprob: -6.030576229095459
    8. ' ,' → logprob: -6.530576229095459
    9. '<|end|>' → logprob: -6.655576229095459
    10. ',(' → logprob: -7.780576229095459

Token 50: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16023103892803192
    2. 's' → logprob: -1.9102309942245483
    3. '   ' → logprob: -13.16023063659668
    4. '	s' → logprob: -13.41023063659668
    5. '(s' → logprob: -13.41023063659668
    6. ' ' → logprob: -13.91023063659668
    7. ')' → logprob: -15.41023063659668
    8. '`s' → logprob: -15.41023063659668
    9. ')s' → logprob: -15.41023063659668
    10. '    ' → logprob: -16.16023063659668

Token 51: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.27230745553970337
    2. '.strip' → logprob: -1.5223073959350586
    3. '.' → logprob: -4.022307395935059
    4. '().' → logprob: -6.147307395935059
    5. '.rstrip' → logprob: -9.397307395935059
    6. ' .' → logprob: -10.897307395935059
    7. 'split' → logprob: -11.397307395935059
    8. '.replace' → logprob: -12.772307395935059
    9. '.readline' → logprob: -13.022307395935059
    10. 'strip' → logprob: -13.772307395935059

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001628956088097766
    2. '.split' → logprob: -8.875163078308105
    3. '()' → logprob: -11.000163078308105
    4. ')' → logprob: -13.375163078308105
    5. '('' → logprob: -14.000163078308105
    6. 'split' → logprob: -14.125163078308105
    7. ' .' → logprob: -14.125163078308105
    8. ' ().' → logprob: -14.250163078308105
    9. '   ' → logprob: -14.500163078308105
    10. '())' → logprob: -15.000163078308105

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -15.500000953674316
    3. 'rstrip' → logprob: -15.750000953674316
    4. 'spl' → logprob: -16.25
    5. '(split' → logprob: -16.75
    6. 'strip' → logprob: -17.5
    7. 's' → logprob: -19.125
    8. 'sp' → logprob: -19.125
    9. 'replace' → logprob: -19.25
    10. 'plit' → logprob: -19.375

Token 54: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.14354288578033447
    2. '('' → logprob: -2.893542766571045
    3. '()' → logprob: -3.393542766571045
    4. '())' → logprob: -3.393542766571045
    5. '(' → logprob: -5.143542766571045
    6. '())))' → logprob: -6.268542766571045
    7. '))' → logprob: -6.393542766571045
    8. '(','' → logprob: -6.893542766571045
    9. ''))' → logprob: -7.893542766571045
    10. '()))
' → logprob: -8.893543243408203

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4176478087902069
    2. '   ' → logprob: -2.0426478385925293
    3. '    
' → logprob: -2.4176478385925293
    4. '\n' → logprob: -3.5426478385925293
    5. '' → logprob: -3.6676478385925293
    6. '\' → logprob: -4.542647838592529
    7. ' ' → logprob: -4.792647838592529
    8. '

' → logprob: -5.042647838592529
    9. '(' → logprob: -5.292647838592529
    10. 'newline' → logprob: -5.417647838592529

Token 56: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5890821218490601
    2. '
' → logprob: -1.58908212184906
    3. '\n' → logprob: -2.8390822410583496
    4. '   ' → logprob: -2.9640822410583496
    5. 'x' → logprob: -3.4640822410583496
    6. ' ' → logprob: -4.08908224105835
    7. '    
' → logprob: -4.46408224105835
    8. 'def' → logprob: -4.46408224105835
    9. 'newline' → logprob: -4.58908224105835
    10. '' → logprob: -4.71408224105835

Token 57: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27081307768821716
    2. ' =' → logprob: -1.6458131074905396
    3. '<|end|>' → logprob: -3.77081298828125
    4. ',' → logprob: -4.89581298828125
    5. '=' → logprob: -5.14581298828125
    6. '  ' → logprob: -5.52081298828125
    7. ' ,' → logprob: -6.27081298828125
    8. ')' → logprob: -7.39581298828125
    9. '.' → logprob: -7.89581298828125
    10. '    ' → logprob: -8.52081298828125

Token 58: ' x' (ID: 1215)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.9062477350234985
    2. 'M' → logprob: -1.1562477350234985
    3. 'Q' → logprob: -2.031247615814209
    4. ' K' → logprob: -2.531247615814209
    5. ' M' → logprob: -2.906247615814209
    6. ' Q' → logprob: -4.781247615814209
    7. 'A' → logprob: -6.156247615814209
    8. 'T' → logprob: -6.281247615814209
    9. 'D' → logprob: -7.281247615814209
    10. 'H' → logprob: -7.781247615814209

Token 59: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35437092185020447
    2. '=' → logprob: -1.3543709516525269
    3. ',' → logprob: -3.2293708324432373
    4. '<|end|>' → logprob: -7.479371070861816
    5. 's' → logprob: -10.354371070861816
    6. ' ' → logprob: -11.104371070861816
    7. '  ' → logprob: -11.229371070861816
    8. '<|end|>' → logprob: -11.354371070861816
    9. ')' → logprob: -11.729371070861816
    10. ' ,' → logprob: -11.854371070861816

Token 60: ' d' (ID: 272)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14784236252307892
    2. 'K' → logprob: -2.8978424072265625
    3. 'k' → logprob: -3.7728424072265625
    4. 'd' → logprob: -4.1478424072265625
    5. 'm' → logprob: -4.3978424072265625
    6. 'M' → logprob: -4.5228424072265625
    7. 't' → logprob: -5.2728424072265625
    8. ' y' → logprob: -5.2728424072265625
    9. 'L' → logprob: -6.2728424072265625
    10. 'T' → logprob: -6.5228424072265625

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326202154159546
    2. ' =' → logprob: -0.7576202154159546
    3. ',' → logprob: -11.132619857788086
    4. ' ' → logprob: -13.257619857788086
    5. '=input' → logprob: -14.007619857788086
    6. '=int' → logprob: -14.382619857788086
    7. ')' → logprob: -14.382619857788086
    8. '```' → logprob: -15.132619857788086
    9. '   ' → logprob: -15.257619857788086
    10. 'x' → logprob: -15.257619857788086

Token 62: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.04867275804281235
    2. 'parse' → logprob: -3.048672676086426
    3. ' map' → logprob: -9.673672676086426
    4. '	parse' → logprob: -12.048672676086426
    5. ' ' → logprob: -12.798672676086426
    6. 'map' → logprob: -12.923672676086426
    7. '(parse' → logprob: -13.048672676086426
    8. ' parsed' → logprob: -13.298672676086426
    9. '=parse' → logprob: -13.548672676086426
    10. ' input' → logprob: -14.173672676086426

Token 63: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002064852975308895
    2. '(' → logprob: -6.5020647048950195
    3. 'input' → logprob: -7.8770647048950195
    4. '(sys' → logprob: -9.00206470489502
    5. '()' → logprob: -10.12706470489502
    6. '("' → logprob: -12.50206470489502
    7. '('' → logprob: -12.50206470489502
    8. '(s' → logprob: -12.87706470489502
    9. '(next' → logprob: -13.12706470489502
    10. ' input' → logprob: -13.87706470489502

Token 64: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004212670959532261
    2. '()))' → logprob: -6.004212856292725
    3. '()' → logprob: -6.379212856292725
    4. ')' → logprob: -10.629212379455566
    5. '())
' → logprob: -12.379212379455566
    6. ' ())' → logprob: -12.754212379455566
    7. '().' → logprob: -13.379212379455566
    8. '()),' → logprob: -13.629212379455566
    9. '(' → logprob: -13.629212379455566
    10. '))' → logprob: -14.129212379455566

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17718486487865448
    2. '\n' → logprob: -2.677184820175171
    3. '<|end|>' → logprob: -2.802184820175171
    4. '   ' → logprob: -4.67718505859375
    5. '' → logprob: -5.67718505859375
    6. '\' → logprob: -5.67718505859375
    7. '    
' → logprob: -5.80218505859375
    8. ')' → logprob: -6.17718505859375
    9. 'newline' → logprob: -6.55218505859375
    10. 'if' → logprob: -6.55218505859375

Token 66: ' id' (ID: 1211)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2440398931503296
    2. '<|end|>' → logprob: -1.6190398931503296
    3. 'if' → logprob: -1.8690398931503296
    4. '\n' → logprob: -2.369040012359619
    5. ' ' → logprob: -2.869040012359619
    6. ')' → logprob: -3.119040012359619
    7. 'x' → logprob: -3.369040012359619
    8. '#' → logprob: -3.619040012359619
    9. '\' → logprob: -3.619040012359619
    10. 'i' → logprob: -3.994040012359619

Token 67: 'n' (ID: 77)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.021409936249256134
    2. 's' → logprob: -4.39640998840332
    3. 'xs' → logprob: -6.02140998840332
    4. 'ent' → logprob: -6.27140998840332
    5. ' =' → logprob: -6.89640998840332
    6. 'le' → logprob: -7.27140998840332
    7. 'entities' → logprob: -7.52140998840332
    8. '_' → logprob: -7.64640998840332
    9. '=' → logprob: -7.89640998840332
    10. '_list' → logprob: -8.02140998840332

Token 68: ' =' (ID: 314)
  Prédit: 'entity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entity' → logprob: -0.7028462290763855
    2. 't' → logprob: -1.5778462886810303
    3. ' =' → logprob: -1.8278462886810303
    4. '=' → logprob: -2.4528462886810303
    5. 'ent' → logprob: -3.2028462886810303
    6. 'x' → logprob: -6.827846050262451
    7. ')' → logprob: -6.952846050262451
    8. '(' → logprob: -6.952846050262451
    9. 'd' → logprob: -7.077846050262451
    10. '=int' → logprob: -7.202846050262451

Token 69: ' lambda' (ID: 27871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.897592544555664
    2. ' x' → logprob: -1.897592544555664
    3. ' range' → logprob: -2.272592544555664
    4. 'range' → logprob: -2.272592544555664
    5. 'x' → logprob: -2.397592544555664
    6. 'it' → logprob: -2.647592544555664
    7. '[' → logprob: -2.772592544555664
    8. ' ' → logprob: -2.897592544555664
    9. ' [' → logprob: -3.272592544555664
    10. '1' → logprob: -3.522592544555664

Token 70: ' *' (ID: 425)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4323027729988098
    2. 'x' → logprob: -1.057302713394165
    3. ' lambda' → logprob: -6.932302951812744
    4. 'lambda' → logprob: -7.182302951812744
    5. ' ' → logprob: -7.682302951812744
    6. 'n' → logprob: -8.682302474975586
    7. 'abs' → logprob: -8.932302474975586
    8. ' abs' → logprob: -8.932302474975586
    9. 's' → logprob: -9.182302474975586
    10. 'int' → logprob: -9.182302474975586

Token 71: 'args' (ID: 4285)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.983467698097229
    2. 'args' → logprob: -0.983467698097229
    3. 'range' → logprob: -1.608467698097229
    4. 'a' → logprob: -4.3584675788879395
    5. 'map' → logprob: -4.7334675788879395
    6. '_' → logprob: -4.9834675788879395
    7. 're' → logprob: -5.2334675788879395
    8. 's' → logprob: -5.7334675788879395
    9. 'xs' → logprob: -6.4834675788879395
    10. '[]' → logprob: -6.6084675788879395

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018930566729977727
    2. '=' → logprob: -7.001893043518066
    3. ' :' → logprob: -7.376893043518066
    4. ',' → logprob: -8.251893043518066
    5. ':(' → logprob: -10.126893043518066
    6. ',:' → logprob: -11.001893043518066
    7. '=(' → logprob: -11.876893043518066
    8. 'args' → logprob: -12.126893043518066
    9. '=args' → logprob: -12.126893043518066
    10. '=:' → logprob: -13.126893043518066

Token 73: ' args' (ID: 4966)
  Prédit: ' args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.34130698442459106
    2. 'args' → logprob: -1.4663069248199463
    3. '(args' → logprob: -3.2163069248199463
    4. ' tuple' → logprob: -5.341307163238525
    5. ' list' → logprob: -5.466307163238525
    6. ' (' → logprob: -5.966307163238525
    7. 'tuple' → logprob: -6.341307163238525
    8. 'list' → logprob: -6.591307163238525
    9. '(' → logprob: -7.216307163238525
    10. ' ' → logprob: -7.966307163238525

Token 74: '[' (ID: 58)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8541382551193237
    2. '<|end|>' → logprob: -0.8541382551193237
    3. '[' → logprob: -2.8541383743286133
    4. ')' → logprob: -3.6041383743286133
    5. ',' → logprob: -4.229138374328613
    6. ':' → logprob: -4.854138374328613
    7. ' ' → logprob: -5.354138374328613
    8. '\n' → logprob: -5.354138374328613
    9. '<|end|>' → logprob: -5.354138374328613
    10. '[
' → logprob: -5.479138374328613

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7568315267562866
    2. ']' → logprob: -0.7568315267562866
    3. '[' → logprob: -3.631831645965576
    4. '<|end|>' → logprob: -3.881831645965576
    5. ' ' → logprob: -5.256831645965576
    6. ')' → logprob: -6.131831645965576
    7. ':' → logprob: -6.256831645965576
    8. ' if' → logprob: -7.256831645965576
    9. ':]' → logprob: -7.256831645965576
    10. ':return' → logprob: -7.881831645965576

Token 76: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6157301664352417
    2. ']' → logprob: -1.4907301664352417
    3. '<|end|>' → logprob: -1.6157301664352417
    4. ')' → logprob: -4.240730285644531
    5. 'if' → logprob: -4.365730285644531
    6. ' or' → logprob: -5.865730285644531
    7. '<|end|>' → logprob: -6.740730285644531
    8. ' ' → logprob: -7.115730285644531
    9. '
' → logprob: -7.115730285644531
    10. '}' → logprob: -7.490730285644531

Token 77: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39310193061828613
    2. '<|end|>' → logprob: -1.3931019306182861
    3. ' if' → logprob: -2.893101930618286
    4. '\n' → logprob: -5.268101692199707
    5. ' ' → logprob: -6.018101692199707
    6. ',' → logprob: -6.018101692199707
    7. '[' → logprob: -6.518101692199707
    8. '<|end|>' → logprob: -6.643101692199707
    9. 'if' → logprob: -6.768101692199707
    10. ')' → logprob: -7.143101692199707

Token 78: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.47266262769699097
    2. 'len' → logprob: -1.2226626873016357
    3. ' not' → logprob: -3.5976626873016357
    4. ' args' → logprob: -3.7226626873016357
    5. ' d' → logprob: -4.347662448883057
    6. 'args' → logprob: -4.597662448883057
    7. 'd' → logprob: -5.097662448883057
    8. 'not' → logprob: -7.347662448883057
    9. '(len' → logprob: -8.097662925720215
    10. 'x' → logprob: -8.722662925720215

Token 79: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -2.2723104848410003e-05
    2. '(' → logprob: -10.875022888183594
    3. 'args' → logprob: -12.625022888183594
    4. '=args' → logprob: -15.625022888183594
    5. '	args' → logprob: -16.000022888183594
    6. '$args' → logprob: -16.500022888183594
    7. ' args' → logprob: -16.875022888183594
    8. '(ids' → logprob: -17.750022888183594
    9. ',args' → logprob: -18.000022888183594
    10. ' (' → logprob: -18.125022888183594

Token 80: ')==' (ID: 35269)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7752682566642761
    2. ')' → logprob: -1.150268316268921
    3. ')==' → logprob: -1.650268316268921
    4. ' ==' → logprob: -3.650268316268921
    5. ' else' → logprob: -6.400268077850342
    6. ']==' → logprob: -6.900268077850342
    7. '()==' → logprob: -7.525268077850342
    8. ')<=' → logprob: -7.900268077850342
    9. '<=' → logprob: -8.0252685546875
    10. ' )' → logprob: -8.5252685546875

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017164701130241156
    2. '0' → logprob: -7.001716613769531
    3. ' ' → logprob: -7.126716613769531
    4. '2' → logprob: -14.251716613769531
    5. '   ' → logprob: -15.251716613769531
    6. '  ' → logprob: -16.37671661376953
    7. '' → logprob: -16.50171661376953
    8. '```' → logprob: -16.81421661376953
    9. '3' → logprob: -17.56421661376953
    10. '(' → logprob: -17.81421661376953

Token 82: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02975720353424549
    2. 'else' → logprob: -3.529757261276245
    3. '	else' → logprob: -12.154757499694824
    4. ' ' → logprob: -14.404757499694824
    5. ' ' → logprob: -15.279757499694824
    6. '    ' → logprob: -15.529757499694824
    7. '   ' → logprob: -16.029756546020508
    8. '  ' → logprob: -16.654756546020508
    9. '        ' → logprob: -16.779756546020508
    10. '[]' → logprob: -16.904756546020508

Token 83: ' args' (ID: 4966)
  Prédit: ' args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.9173052310943604
    2. '(args' → logprob: -1.1673052310943604
    3. ' tuple' → logprob: -2.2923052310943604
    4. 'args' → logprob: -2.5423052310943604
    5. ' (' → logprob: -3.6673052310943604
    6. ' lambda' → logprob: -3.9173052310943604
    7. 'tuple' → logprob: -4.042304992675781
    8. '(lambda' → logprob: -4.292304992675781
    9. ' list' → logprob: -5.042304992675781
    10. 'lambda' → logprob: -5.042304992675781

Token 84: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14981959760189056
    2. '<|end|>' → logprob: -2.8998196125030518
    3. ' if' → logprob: -3.6498196125030518
    4. '   ' → logprob: -4.149819374084473
    5. 'def' → logprob: -4.649819374084473
    6. '

' → logprob: -5.024819374084473
    7. '    
' → logprob: -5.524819374084473
    8. 'if' → logprob: -5.774819374084473
    9. '<|end|>' → logprob: -5.899819374084473
    10. 'x' → logprob: -6.399819374084473

Token 86: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2806929349899292
    2. 'res' → logprob: -2.2806930541992188
    3. 'r' → logprob: -2.5306930541992188
    4. 'ans' → logprob: -4.530693054199219
    5. 's' → logprob: -4.905693054199219
    6. 'result' → logprob: -4.905693054199219
    7. 'a' → logprob: -5.280693054199219
    8. '   ' → logprob: -5.530693054199219
    9. ' if' → logprob: -5.530693054199219
    10. 'offset' → logprob: -5.655693054199219

Token 87: ' D' (ID: 415)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0691535472869873
    2. 'x' → logprob: -1.3191535472869873
    3. ' if' → logprob: -1.8191535472869873
    4. 'd' → logprob: -2.1941535472869873
    5. ' d' → logprob: -3.9441535472869873
    6. ' x' → logprob: -4.194153785705566
    7. 'i' → logprob: -4.319153785705566
    8. ' ' → logprob: -4.444153785705566
    9. 'result' → logprob: -4.694153785705566
    10. 'n' → logprob: -5.444153785705566

Token 88: '=' (ID: 28)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.5761603116989136
    2. 'is' → logprob: -1.7011603116989136
    3. 'if' → logprob: -2.201160430908203
    4. 'ist' → logprob: -2.201160430908203
    5. '=' → logprob: -2.576160430908203
    6. 'p' → logprob: -2.951160430908203
    7. ' =' → logprob: -3.201160430908203
    8. 'iff' → logprob: -3.826160430908203
    9. 'i' → logprob: -4.576160430908203
    10. 'ict' → logprob: -4.701160430908203

Token 89: '0' (ID: 15)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.3767218589782715
    2. 'd' → logprob: -1.6267218589782715
    3. 'abs' → logprob: -1.6267218589782715
    4. ' abs' → logprob: -1.8767218589782715
    5. '0' → logprob: -2.5017218589782715
    6. ' ' → logprob: -3.0017218589782715
    7. 'x' → logprob: -4.1267218589782715
    8. ' x' → logprob: -4.7517218589782715
    9. ' None' → logprob: -5.0017218589782715
    10. ' N' → logprob: -5.3767218589782715

Token 90: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4728919267654419
    2. '
' → logprob: -1.972891926765442
    3. '<|end|>' → logprob: -2.0978918075561523
    4. '<|end|>' → logprob: -3.7228918075561523
    5. '\n' → logprob: -3.8478918075561523
    6. ' ' → logprob: -4.097891807556152
    7. '   ' → logprob: -4.722891807556152
    8. ' or' → logprob: -4.847891807556152
    9. ' if' → logprob: -5.347891807556152
    10. '#' → logprob: -5.347891807556152

Token 91: ' use' (ID: 1199)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17987607419490814
    2. 'if' → logprob: -2.4298760890960693
    3. ' pass' → logprob: -4.17987585067749
    4. '   ' → logprob: -4.55487585067749
    5. ' return' → logprob: -4.55487585067749
    6. ' print' → logprob: -4.67987585067749
    7. ' ' → logprob: -4.80487585067749
    8. 'print' → logprob: -4.80487585067749
    9. 'pass' → logprob: -5.55487585067749
    10. '    ' → logprob: -5.55487585067749

Token 92: ' one' (ID: 1001)
  Prédit: ' id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' id' → logprob: -1.151041030883789
    2. ' x' → logprob: -2.026041030883789
    3. ' d' → logprob: -2.651041030883789
    4. 'x' → logprob: -2.776041030883789
    5. ' the' → logprob: -2.901041030883789
    6. ' a' → logprob: -3.026041030883789
    7. ' all' → logprob: -3.401041030883789
    8. ' ' → logprob: -3.651041030883789
    9. 'id' → logprob: -3.651041030883789
    10. 'd' → logprob: -4.151041030883789

Token 93: '-l' (ID: 2887)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2771098017692566
    2. 'if' → logprob: -3.0271098613739014
    3. '
' → logprob: -3.1521098613739014
    4. ' ' → logprob: -3.2771098613739014
    5. ' or' → logprob: -3.4021098613739014
    6. '<|end|>' → logprob: -4.277109622955322
    7. '\n' → logprob: -4.652109622955322
    8. '    ' → logprob: -4.902109622955322
    9. 'd' → logprob: -5.527109622955322
    10. 'x' → logprob: -5.652109622955322

Token 94: 'iner' (ID: 6010)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.011238803155720234
    2. 'ist' → logprob: -5.8862385749816895
    3. 'e' → logprob: -6.1362385749816895
    4. 'if' → logprob: -7.0112385749816895
    5. '   ' → logprob: -7.1362385749816895
    6. '1' → logprob: -7.5112385749816895
    7. 'i' → logprob: -7.7612385749816895
    8. 'in' → logprob: -7.8237385749816895
    9. 'line' → logprob: -7.9487385749816895
    10. ' ine' → logprob: -8.386239051818848

Token 95: ' trick' (ID: 28864)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19720567762851715
    2. ':' → logprob: -2.1972057819366455
    3. ' if' → logprob: -2.9472057819366455
    4. '    ' → logprob: -5.947205543518066
    5. '<|end|>' → logprob: -6.322205543518066
    6. 'if' → logprob: -6.572205543518066
    7. ' ' → logprob: -6.572205543518066
    8. ',' → logprob: -6.697205543518066
    9. '\n' → logprob: -6.697205543518066
    10. '
' → logprob: -6.947205543518066

Token 96: 'ery' (ID: 875)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9962205290794373
    2. '   ' → logprob: -0.9962205290794373
    3. '<|end|>' → logprob: -2.121220588684082
    4. '
' → logprob: -3.371220588684082
    5. ' if' → logprob: -3.871220588684082
    6. ' ' → logprob: -3.996220588684082
    7. '\n' → logprob: -4.121220588684082
    8. ',' → logprob: -4.496220588684082
    9. '    ' → logprob: -4.996220588684082
    10. '    
' → logprob: -4.996220588684082

Token 97: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10116932541131973
    2. ' if' → logprob: -3.4761693477630615
    3. '
' → logprob: -3.8511693477630615
    4. '<|end|>' → logprob: -4.226169109344482
    5. ':' → logprob: -4.601169109344482
    6. '    
' → logprob: -5.101169109344482
    7. '\n' → logprob: -5.476169109344482
    8. 'if' → logprob: -5.851169109344482
    9. ',' → logprob: -6.601169109344482
    10. '\' → logprob: -6.976169109344482

Token 98: ' bool' (ID: 3792)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.6276276111602783
    2. 'x' → logprob: -1.7526276111602783
    3. 'set' → logprob: -2.0026276111602783
    4. ' x' → logprob: -2.3776276111602783
    5. ' set' → logprob: -2.5026276111602783
    6. ' abs' → logprob: -3.2526276111602783
    7. ' id' → logprob: -3.2526276111602783
    8. 'abs' → logprob: -3.5026276111602783
    9. ' pow' → logprob: -3.6276276111602783
    10. ' d' → logprob: -3.7526276111602783

Token 99: ' ar' (ID: 646)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.009814530611038208
    2. '(' → logprob: -4.759814739227295
    3. 'd' → logprob: -7.509814739227295
    4. '(x' → logprob: -8.009814262390137
    5. '(D' → logprob: -9.134814262390137
    6. '(not' → logprob: -9.884814262390137
    7. 'x' → logprob: -11.009814262390137
    8. '(
' → logprob: -11.134814262390137
    9. '((' → logprob: -11.384814262390137
    10. '(if' → logprob: -11.634814262390137

Token 100: 'ith' (ID: 437)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5409733057022095
    2. 'gs' → logprob: -1.1659733057022095
    3. 'r' → logprob: -3.54097318649292
    4. 'ray' → logprob: -3.79097318649292
    5. 'range' → logprob: -3.91597318649292
    6. '[]' → logprob: -4.66597318649292
    7. 'ithmetic' → logprob: -4.79097318649292
    8. '[' → logprob: -5.29097318649292
    9. 'd' → logprob: -5.66597318649292
    10. 'ange' → logprob: -6.16597318649292

Token 101: 'metics' (ID: 62493)
  Prédit: 'metic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'metic' → logprob: -0.034200772643089294
    2. 'metics' → logprob: -3.409200668334961
    3. 'etic' → logprob: -8.909200668334961
    4. 'met' → logprob: -9.534200668334961
    5. 'meti' → logprob: -9.534200668334961
    6. 'matic' → logprob: -9.909200668334961
    7. 'metric' → logprob: -10.034200668334961
    8. 'm' → logprob: -10.159200668334961
    9. 'd' → logprob: -10.284200668334961
    10. 'ic' → logprob: -11.159200668334961

Token 102: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9593783020973206
    2. '<|end|>' → logprob: -0.9593783020973206
    3. '
' → logprob: -2.334378242492676
    4. ' if' → logprob: -3.334378242492676
    5. ':' → logprob: -3.834378242492676
    6. ',' → logprob: -4.209378242492676
    7. '<|end|>' → logprob: -4.209378242492676
    8. ' ' → logprob: -4.459378242492676
    9. ')' → logprob: -4.709378242492676
    10. '\n' → logprob: -5.709378242492676

Token 103: ' double' (ID: 3503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0065808296203613
    2. '    ' → logprob: -1.2565808296203613
    3. ' ' → logprob: -1.6315808296203613
    4. ' 
' → logprob: -3.1315808296203613
    5. '\n' → logprob: -3.6315808296203613
    6. '    
' → logprob: -4.256580829620361
    7. ' d' → logprob: -4.506580829620361
    8. '     
' → logprob: -4.756580829620361
    9. ' \' → logprob: -4.881580829620361
    10. 'd' → logprob: -5.381580829620361

Token 104: '-n' (ID: 5219)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41939777135849
    2. '=' → logprob: -1.4193978309631348
    3. 'd' → logprob: -3.2943978309631348
    4. ' if' → logprob: -4.419397830963135
    5. ' d' → logprob: -4.794397830963135
    6. 'x' → logprob: -5.169397830963135
    7. '_' → logprob: -5.419397830963135
    8. '==' → logprob: -5.419397830963135
    9. '-' → logprob: -5.669397830963135
    10. '#' → logprob: -5.669397830963135

Token 105: 'ested' (ID: 14155)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9826694130897522
    2. '+' → logprob: -1.7326693534851074
    3. '-' → logprob: -2.4826693534851074
    4. 'e' → logprob: -2.7326693534851074
    5. '0' → logprob: -2.9826693534851074
    6. '>' → logprob: -2.9826693534851074
    7. ' ' → logprob: -3.6076693534851074
    8. 'eg' → logprob: -3.8576693534851074
    9. 'o' → logprob: -3.9826693534851074
    10. '1' → logprob: -4.107669353485107

Token 106: ' tern' (ID: 81796)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0421348474919796
    2. 'for' → logprob: -3.4171347618103027
    3. ' if' → logprob: -5.417134761810303
    4. ')' → logprob: -6.792134761810303
    5. ' for' → logprob: -6.917134761810303
    6. '(' → logprob: -7.542134761810303
    7. 'd' → logprob: -8.542135238647461
    8. '(
' → logprob: -8.667135238647461
    9. '[' → logprob: -9.042135238647461
    10. ':' → logprob: -9.292135238647461

Token 107: 'aries' (ID: 8526)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -13.500004768371582
    3. 'iary' → logprob: -13.625004768371582
    4. 'a' → logprob: -13.750004768371582
    5. 'ery' → logprob: -15.500004768371582
    6. 'ar' → logprob: -16.0000057220459
    7. 'aries' → logprob: -16.2500057220459
    8. '#' → logprob: -16.2500057220459
    9. 'ay' → logprob: -16.2500057220459
    10. '   ' → logprob: -16.2500057220459

Token 108: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7445836663246155
    2. '   ' → logprob: -1.2445836067199707
    3. 'if' → logprob: -2.4945836067199707
    4. ' if' → logprob: -2.9945836067199707
    5. '
' → logprob: -3.1195836067199707
    6. '\n' → logprob: -4.494583606719971
    7. ':
' → logprob: -4.619583606719971
    8. ')' → logprob: -4.619583606719971
    9. '    
' → logprob: -4.994583606719971
    10. 'd' → logprob: -4.994583606719971

Token 109: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2991839051246643
    2. ' d' → logprob: -2.1741838455200195
    3. '    ' → logprob: -3.0491838455200195
    4. 'd' → logprob: -4.1741838455200195
    5. '#' → logprob: -4.2991838455200195
    6. ' and' → logprob: -4.2991838455200195
    7. ' or' → logprob: -4.9241838455200195
    8. 'x' → logprob: -5.1741838455200195
    9. ' else' → logprob: -5.2991838455200195
    10. ' ' → logprob: -5.7991838455200195

Token 110: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -2.1833858489990234
    2. ' a' → logprob: -3.0583858489990234
    3. 'set' → logprob: -3.4333858489990234
    4. ' bit' → logprob: -3.4333858489990234
    5. 'abs' → logprob: -3.4958858489990234
    6. 'print' → logprob: -3.5583858489990234
    7. 'return' → logprob: -3.6208858489990234
    8. ' return' → logprob: -3.6833858489990234
    9. 'list' → logprob: -3.6833858489990234
    10. ' not' → logprob: -3.7458858489990234

Token 111: '/filter' (ID: 151200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2151036262512207
    2. '   ' → logprob: -1.8401036262512207
    3. '(
' → logprob: -1.9651036262512207
    4. ' if' → logprob: -2.5901036262512207
    5. ':' → logprob: -2.5901036262512207
    6. 'if' → logprob: -2.7151036262512207
    7. 'd' → logprob: -2.9651036262512207
    8. '(d' → logprob: -3.4651036262512207
    9. ')' → logprob: -4.090103626251221
    10. '
' → logprob: -4.215103626251221

Token 112: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1833508014678955
    2. '   ' → logprob: -1.4333508014678955
    3. ')' → logprob: -2.0583508014678955
    4. '<|end|>' → logprob: -2.1833508014678955
    5. '(' → logprob: -2.6833508014678955
    6. ' if' → logprob: -3.4333508014678955
    7. ',' → logprob: -3.5583508014678955
    8. '
' → logprob: -4.308350563049316
    9. ' ' → logprob: -4.683350563049316
    10. ']' → logprob: -4.808350563049316

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5775267481803894
    2. ':' → logprob: -2.202526807785034
    3. ' if' → logprob: -2.327526807785034
    4. '
' → logprob: -2.327526807785034
    5. '(' → logprob: -3.202526807785034
    6. '\n' → logprob: -3.952526807785034
    7. ' ' → logprob: -4.327526569366455
    8. ')' → logprob: -4.702526569366455
    9. '(
' → logprob: -5.202526569366455
    10. ',' → logprob: -5.202526569366455

Token 114: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.029788793995976448
    2. 'd' → logprob: -3.5297887325286865
    3. ' not' → logprob: -10.904788970947266
    4. ' ' → logprob: -11.779788970947266
    5. '(d' → logprob: -12.779788970947266
    6. ' D' → logprob: -13.404788970947266
    7. ' x' → logprob: -13.529788970947266
    8. ' ' → logprob: -13.654788970947266
    9. '	d' → logprob: -13.904788970947266
    10. 'x' → logprob: -13.904788970947266

Token 116: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5761218667030334
    2. '==' → logprob: -0.8261218667030334
    3. '=' → logprob: -9.576122283935547
    4. ' ' → logprob: -10.326122283935547
    5. ' !=' → logprob: -11.451122283935547
    6. '!=' → logprob: -11.576122283935547
    7. ' =' → logprob: -11.701122283935547
    8. '>' → logprob: -11.826122283935547
    9. ':' → logprob: -11.951122283935547
    10. ')' → logprob: -12.076122283935547

Token 117: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993832439184189
    2. ' ' → logprob: -2.6949384212493896
    3. '   ' → logprob: -13.819938659667969
    4. ' ' → logprob: -14.819938659667969
    5. '  ' → logprob: -15.194938659667969
    6. '    ' → logprob: -15.819938659667969
    7. '```' → logprob: -16.38243865966797
    8. '1' → logprob: -16.56993865966797
    9. '=' → logprob: -16.63243865966797
    10. '۰' → logprob: -17.69493865966797

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023107275774236768
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.25023078918457
    4. '  ' → logprob: -15.87523078918457
    5. '```' → logprob: -17.00023078918457
    6. '۰' → logprob: -17.25023078918457
    7. ' ' → logprob: -17.62523078918457
    8. '    ' → logprob: -17.62523078918457
    9. '=' → logprob: -18.00023078918457
    10. '<|end|>' → logprob: -18.12523078918457

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001046743243932724
    2. ':
' → logprob: -7.001046657562256
    3. ' :' → logprob: -9.001047134399414
    4. ':return' → logprob: -11.751047134399414
    5. '   ' → logprob: -13.501047134399414
    6. '):' → logprob: -14.376047134399414
    7. ':

' → logprob: -14.501047134399414
    8. ' :
' → logprob: -14.626047134399414
    9. ',' → logprob: -15.001047134399414
    10. ':
' → logprob: -15.626047134399414

Token 120: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3581877052783966
    2. '       ' → logprob: -1.2331876754760742
    3. '   ' → logprob: -5.358187675476074
    4. ':
' → logprob: -5.608187675476074
    5. ',' → logprob: -8.358187675476074
    6. '<|end|>' → logprob: -8.358187675476074
    7. '
' → logprob: -8.858187675476074
    8. '    ' → logprob: -9.108187675476074
    9. ' :' → logprob: -9.108187675476074
    10. '        
' → logprob: -9.108187675476074

Token 121: ' hack' (ID: 27750)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21572266519069672
    2. ' print' → logprob: -1.840722680091858
    3. '   ' → logprob: -3.7157225608825684
    4. '       ' → logprob: -4.840722560882568
    5. '
' → logprob: -6.340722560882568
    6. '    ' → logprob: -7.590722560882568
    7. ' if' → logprob: -7.965722560882568
    8. 'if' → logprob: -9.215723037719727
    9. 'return' → logprob: -9.340723037719727
    10. '	print' → logprob: -9.965723037719727

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15968134999275208
    2. '=' → logprob: -2.0346813201904297
    3. 'ed' → logprob: -5.03468132019043
    4. 's' → logprob: -5.78468132019043
    5. '(' → logprob: -6.53468132019043
    6. '   ' → logprob: -6.78468132019043
    7. '=(' → logprob: -7.03468132019043
    8. 'er' → logprob: -7.40968132019043
    9. ' =(' → logprob: -7.40968132019043
    10. '_' → logprob: -7.65968132019043

Token 123: ' lambda' (ID: 27871)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1503021717071533
    2. '1' → logprob: -1.9003021717071533
    3. 'lambda' → logprob: -2.4003021717071533
    4. 'x' → logprob: -2.5253021717071533
    5. 'N' → logprob: -2.5253021717071533
    6. '(lambda' → logprob: -3.0253021717071533
    7. '{' → logprob: -3.2753021717071533
    8. '0' → logprob: -3.5253021717071533
    9. ' len' → logprob: -3.6503021717071533
    10. 'sum' → logprob: -4.025301933288574

Token 124: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7963749170303345
    2. ' x' → logprob: -1.4213749170303345
    3. ' N' → logprob: -2.171374797821045
    4. 'N' → logprob: -2.921374797821045
    5. 'n' → logprob: -3.296374797821045
    6. 'x' → logprob: -3.421374797821045
    7. ' i' → logprob: -4.171374797821045
    8. ' a' → logprob: -4.296374797821045
    9. ' y' → logprob: -5.296374797821045
    10. 'a' → logprob: -5.421374797821045

Token 125: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007993890903890133
    2. ' :' → logprob: -5.507993698120117
    3. ',' → logprob: -6.132993698120117
    4. ':n' → logprob: -7.382993698120117
    5. ',n' → logprob: -8.257993698120117
    6. ':x' → logprob: -8.257993698120117
    7. ',x' → logprob: -8.882993698120117
    8. ':(' → logprob: -9.507993698120117
    9. ',k' → logprob: -9.507993698120117
    10. 'x' → logprob: -9.757993698120117

Token 126: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05617733299732208
    2. ' x' → logprob: -2.9311773777008057
    3. '1' → logprob: -7.681177139282227
    4. 'd' → logprob: -8.681177139282227
    5. 'N' → logprob: -8.681177139282227
    6. ' ' → logprob: -9.181177139282227
    7. ' d' → logprob: -9.431177139282227
    8. '0' → logprob: -9.431177139282227
    9. '2' → logprob: -10.056177139282227
    10. 'id' → logprob: -10.431177139282227

Token 127: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007752607110887766
    2. ',' → logprob: -5.757752418518066
    3. ' :' → logprob: -5.757752418518066
    4. ':(' → logprob: -7.382752418518066
    5. ':x' → logprob: -8.007752418518066
    6. ',x' → logprob: -8.757752418518066
    7. ':[' → logprob: -9.507752418518066
    8. '=' → logprob: -10.257752418518066
    9. 'x' → logprob: -10.257752418518066
    10. ',n' → logprob: -11.132752418518066

Token 128: ' list' (ID: 1562)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7019760012626648
    2. 'N' → logprob: -2.0769760608673096
    3. 'len' → logprob: -2.2019760608673096
    4. ' ' → logprob: -2.8269760608673096
    5. 'x' → logprob: -2.9519760608673096
    6. 'int' → logprob: -3.2019760608673096
    7. ' N' → logprob: -3.7019760608673096
    8. '{' → logprob: -3.9519760608673096
    9. '(' → logprob: -4.4519758224487305
    10. ' len' → logprob: -4.5769758224487305

Token 129: '(filter' (ID: 36366)
  Prédit: '(set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.8090503811836243
    2. '(range' → logprob: -1.1840503215789795
    3. '({' → logprob: -1.4340503215789795
    4. '(' → logprob: -5.684050559997559
    5. '(map' → logprob: -5.809050559997559
    6. '(dict' → logprob: -6.309050559997559
    7. '(
' → logprob: -7.309050559997559
    8. '(sorted' → logprob: -7.684050559997559
    9. '((' → logprob: -8.309050559997559
    10. '(filter' → logprob: -8.559050559997559

Token 130: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.3253009617328644
    2. '(lambda' → logprob: -1.450300931930542
    3. '(bool' → logprob: -3.575300931930542
    4. '(' → logprob: -4.825301170349121
    5. '(set' → logprob: -5.950301170349121
    6. '({' → logprob: -6.325301170349121
    7. '(
' → logprob: -6.325301170349121
    8. '(id' → logprob: -8.075301170349121
    9. '((' → logprob: -8.700301170349121
    10. '(int' → logprob: -9.325301170349121

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05817805975675583
    2. ',map' → logprob: -2.933177947998047
    3. ',[' → logprob: -6.433177947998047
    4. 'map' → logprob: -7.933177947998047
    5. ',
' → logprob: -8.058177947998047
    6. ' ,' → logprob: -8.308177947998047
    7. '   ' → logprob: -8.558177947998047
    8. ',(' → logprob: -8.808177947998047
    9. 'range' → logprob: -8.808177947998047
    10. '       ' → logprob: -9.933177947998047

Token 132: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4211810529232025
    2. ' map' → logprob: -1.921181082725525
    3. '{' → logprob: -2.6711809635162354
    4. '[' → logprob: -2.7961809635162354
    5. 'set' → logprob: -3.7961809635162354
    6. '(map' → logprob: -4.2961812019348145
    7. ' [' → logprob: -5.1711812019348145
    8. ' set' → logprob: -5.2961812019348145
    9. ' {' → logprob: -5.9211812019348145
    10. 'range' → logprob: -5.9211812019348145

Token 133: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.17966951429843903
    2. '(str' → logprob: -2.4296696186065674
    3. '(' → logprob: -2.8046696186065674
    4. '(int' → logprob: -4.679669380187988
    5. '(
' → logprob: -6.054669380187988
    6. '((' → logprob: -6.554669380187988
    7. '(bool' → logprob: -6.679669380187988
    8. '(id' → logprob: -6.804669380187988
    9. '(None' → logprob: -8.929669380187988
    10. '(chr' → logprob: -9.304669380187988

Token 134: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5190150737762451
    2. 'str' → logprob: -1.7690150737762451
    3. '(lambda' → logprob: -2.019015073776245
    4. ' str' → logprob: -3.519015073776245
    5. ' lambda' → logprob: -3.894015073776245
    6. 'x' → logprob: -4.269015312194824
    7. 'bool' → logprob: -4.769015312194824
    8. '(str' → logprob: -5.144015312194824
    9. 'int' → logprob: -5.144015312194824
    10. 'id' → logprob: -5.269015312194824

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010735451243817806
    2. ':int' → logprob: -5.510735511779785
    3. ':[' → logprob: -6.260735511779785
    4. ':(' → logprob: -6.885735511779785
    5. ':x' → logprob: -6.885735511779785
    6. ':N' → logprob: -7.010735511779785
    7. ' :' → logprob: -7.135735511779785
    8. ':i' → logprob: -9.010735511779785
    9. ':str' → logprob: -9.010735511779785
    10. ':n' → logprob: -9.135735511779785

Token 136: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2464344501495361
    2. ' x' → logprob: -1.2464344501495361
    3. ' str' → logprob: -2.371434450149536
    4. ' (' → logprob: -2.496434450149536
    5. 'str' → logprob: -2.746434450149536
    6. '(' → logprob: -3.621434450149536
    7. ' id' → logprob: -4.121434211730957
    8. ' ' → logprob: -4.496434211730957
    9. '(str' → logprob: -4.496434211730957
    10. 'id' → logprob: -4.621434211730957

Token 137: 'N' (ID: 45)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5542998313903809
    2. 'str' → logprob: -2.429299831390381
    3. '(x' → logprob: -2.804299831390381
    4. '(' → logprob: -3.054299831390381
    5. ' x' → logprob: -3.179299831390381
    6. 't' → logprob: -3.679299831390381
    7. ' (' → logprob: -3.804299831390381
    8. '(str' → logprob: -4.054299831390381
    9. '(t' → logprob: -4.179299831390381
    10. 'id' → logprob: -4.679299831390381

Token 138: '+' (ID: 10)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.580682635307312
    2. '-' → logprob: -1.955682635307312
    3. '>' → logprob: -2.5806827545166016
    4. 'and' → logprob: -2.9556827545166016
    5. ' >=' → logprob: -3.3306827545166016
    6. '+' → logprob: -3.7056827545166016
    7. ' -' → logprob: -4.330682754516602
    8. ' and' → logprob: -4.580682754516602
    9. 't' → logprob: -4.830682754516602
    10. '-t' → logprob: -4.955682754516602

Token 139: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40782102942466736
    2. '1' → logprob: -1.2828210592269897
    3. 't' → logprob: -3.9078209400177
    4. '-' → logprob: -4.782821178436279
    5. '~' → logprob: -4.782821178436279
    6. '(' → logprob: -5.407821178436279
    7. ' x' → logprob: -5.907821178436279
    8. '(x' → logprob: -6.157821178436279
    9. '-x' → logprob: -6.282821178436279
    10. '(-' → logprob: -6.782821178436279

Token 140: ')*(' (ID: 44406)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.187479853630066
    2. '-t' → logprob: -1.187479853630066
    3. ' -' → logprob: -1.687479853630066
    4. ')' → logprob: -2.5624799728393555
    5. '-x' → logprob: -3.9374799728393555
    6. ')*' → logprob: -4.0624799728393555
    7. ')-' → logprob: -4.1874799728393555
    8. '-i' → logprob: -4.1874799728393555
    9. '-n' → logprob: -4.3124799728393555
    10. ' if' → logprob: -4.8124799728393555

Token 141: 't' (ID: 83)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029849763959646225
    2. 't' → logprob: -4.654849529266357
    3. ' x' → logprob: -5.279849529266357
    4. '(x' → logprob: -5.404849529266357
    5. 'd' → logprob: -6.029849529266357
    6. 'i' → logprob: -6.904849529266357
    7. '(' → logprob: -7.154849529266357
    8. '-' → logprob: -7.154849529266357
    9. '[' → logprob: -7.529849529266357
    10. '[x' → logprob: -7.654849529266357

Token 142: '!=' (ID: 11408)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2614567279815674
    2. 'x' → logprob: -1.5114567279815674
    3. '-' → logprob: -1.8864567279815674
    4. '>=' → logprob: -2.7614567279815674
    5. 'and' → logprob: -3.0114567279815674
    6. '*x' → logprob: -3.2614567279815674
    7. '!=' → logprob: -3.6364567279815674
    8. ' and' → logprob: -3.6364567279815674
    9. ' ==' → logprob: -3.7614567279815674
    10. '[' → logprob: -4.136456489562988

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29351606965065
    2. 'x' → logprob: -1.4185160398483276
    3. ' ' → logprob: -5.293516159057617
    4. ' x' → logprob: -5.918516159057617
    5. '-' → logprob: -6.168516159057617
    6. '1' → logprob: -6.543516159057617
    7. '-x' → logprob: -7.918516159057617
    8. ' -' → logprob: -9.231016159057617
    9. 'd' → logprob: -9.606016159057617
    10. '   ' → logprob: -9.668516159057617

Token 144: ')+(' (ID: 104644)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6800782680511475
    2. '*x' → logprob: -2.0550782680511475
    3. ' and' → logprob: -2.3050782680511475
    4. ')' → logprob: -2.3050782680511475
    5. 'and' → logprob: -2.4300782680511475
    6. ')-' → logprob: -2.9300782680511475
    7. ')*' → logprob: -2.9300782680511475
    8. 'x' → logprob: -3.0550782680511475
    9. '),' → logprob: -3.1800782680511475
    10. '-x' → logprob: -3.3050782680511475

Token 145: 't' (ID: 83)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13745437562465668
    2. '(x' → logprob: -3.5124542713165283
    3. ' x' → logprob: -3.6374542713165283
    4. 't' → logprob: -4.637454509735107
    5. 'N' → logprob: -4.762454509735107
    6. '(N' → logprob: -4.887454509735107
    7. 'abs' → logprob: -5.012454509735107
    8. '0' → logprob: -5.137454509735107
    9. '(t' → logprob: -5.387454509735107
    10. ' (' → logprob: -5.387454509735107

Token 146: '==' (ID: 560)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9776073694229126
    2. '==' → logprob: -1.3526073694229126
    3. '*x' → logprob: -1.7276073694229126
    4. '!=' → logprob: -2.727607250213623
    5. '*' → logprob: -3.852607250213623
    6. '<=' → logprob: -4.352607250213623
    7. ' ==' → logprob: -4.352607250213623
    8. ' -' → logprob: -4.977607250213623
    9. ' *' → logprob: -5.102607250213623
    10. '>=' → logprob: -5.227607250213623

Token 147: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3520053029060364
    2. '0' → logprob: -1.3520052433013916
    3. '1' → logprob: -3.4770052433013916
    4. 'N' → logprob: -6.102005481719971
    5. ' x' → logprob: -6.477005481719971
    6. '-' → logprob: -6.602005481719971
    7. ' ' → logprob: -7.477005481719971
    8. '-x' → logprob: -8.602005004882812
    9. 't' → logprob: -8.727005004882812
    10. 'd' → logprob: -8.977005004882812

Token 148: '),' (ID: 936)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.917626142501831
    2. '*x' → logprob: -1.042626142501831
    3. '*' → logprob: -1.917626142501831
    4. ' and' → logprob: -3.542626142501831
    5. 'and' → logprob: -3.667626142501831
    6. ')' → logprob: -3.917626142501831
    7. '),' → logprob: -4.79262638092041
    8. ' *' → logprob: -5.04262638092041
    9. ')*(' → logprob: -5.54262638092041
    10. ',' → logprob: -6.41762638092041

Token 149: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1954735815525055
    2. '[' → logprob: -2.9454736709594727
    3. ' range' → logprob: -2.9454736709594727
    4. '[x' → logprob: -3.5704736709594727
    5. '(range' → logprob: -3.5704736709594727
    6. ' [' → logprob: -5.945473670959473
    7. '[it' → logprob: -6.070473670959473
    8. 'x' → logprob: -6.695473670959473
    9. '(' → logprob: -6.820473670959473
    10. '[i' → logprob: -6.945473670959473

Token 150: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16770489513874054
    2. '0' → logprob: -2.4177048206329346
    3. 'i' → logprob: -3.4177048206329346
    4. ' x' → logprob: -5.167705059051514
    5. 'N' → logprob: -5.542705059051514
    6. '*' → logprob: -5.542705059051514
    7. '-' → logprob: -5.542705059051514
    8. '(x' → logprob: -6.167705059051514
    9. '(' → logprob: -6.542705059051514
    10. 'range' → logprob: -7.042705059051514

Token 151: ']))' (ID: 20259)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -1.4004610776901245
    2. ']*' → logprob: -1.5254610776901245
    3. ']*(' → logprob: -1.9004610776901245
    4. '*(' → logprob: -2.650461196899414
    5. ']))' → logprob: -3.025461196899414
    6. ']' → logprob: -3.025461196899414
    7. '*' → logprob: -3.150461196899414
    8. '+i' → logprob: -3.525461196899414
    9. ' *' → logprob: -3.650461196899414
    10. ' for' → logprob: -3.900461196899414

Token 152: ')[' (ID: 13637)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02679077535867691
    2. ')))' → logprob: -4.026790618896484
    3. ')' → logprob: -5.026790618896484
    4. '))
' → logprob: -7.026790618896484
    5. '[' → logprob: -8.151790618896484
    6. '   ' → logprob: -8.401790618896484
    7. '+' → logprob: -9.401790618896484
    8. '       ' → logprob: -9.526790618896484
    9. '[N' → logprob: -9.651790618896484
    10. '[:' → logprob: -9.776790618896484

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05999109148979187
    2. ':' → logprob: -3.0599911212921143
    3. ':N' → logprob: -5.559990882873535
    4. ' ' → logprob: -6.309990882873535
    5. ' :' → logprob: -6.309990882873535
    6. ':]' → logprob: -7.434990882873535
    7. '
' → logprob: -7.559990882873535
    8. 'N' → logprob: -7.809990882873535
    9. '-' → logprob: -8.059990882873535
    10. ':x' → logprob: -8.184990882873535

Token 154: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05610983073711395
    2. ' )' → logprob: -3.05610990524292
    3. ' if' → logprob: -5.68110990524292
    4. '+' → logprob: -6.68110990524292
    5. '   ' → logprob: -7.30610990524292
    6. ')
' → logprob: -7.80610990524292
    7. '       ' → logprob: -8.056109428405762
    8. '    ' → logprob: -8.306109428405762
    9. ' +' → logprob: -8.931109428405762
    10. '        ' → logprob: -9.306109428405762

Token 155: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09286552667617798
    2. ' print' → logprob: -2.592865467071533
    3. '   ' → logprob: -5.342865467071533
    4. 'return' → logprob: -6.092865467071533
    5. ' N' → logprob: -6.467865467071533
    6. ' return' → logprob: -6.717865467071533
    7. 'N' → logprob: -7.342865467071533
    8. '
' → logprob: -7.467865467071533
    9. ' x' → logprob: -8.092865943908691
    10. 'x' → logprob: -8.092865943908691

Token 157: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.20644663274288177
    2. '(' → logprob: -1.706446647644043
    3. '(x' → logprob: -5.706446647644043
    4. '((' → logprob: -7.831446647644043
    5. '(f' → logprob: -8.081446647644043
    6. '(
' → logprob: -8.206446647644043
    7. '(max' → logprob: -8.831446647644043
    8. ' (' → logprob: -9.206446647644043
    9. '(id' → logprob: -9.206446647644043
    10. '(int' → logprob: -9.331446647644043

Token 158: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -5.228561349213123e-05
    2. 'a' → logprob: -11.125052452087402
    3. 'ax' → logprob: -11.625052452087402
    4. 'ck' → logprob: -12.500052452087402
    5. 'ac' → logprob: -12.500052452087402
    6. 'ak' → logprob: -12.750052452087402
    7. 'x' → logprob: -12.875052452087402
    8. 'ist' → logprob: -13.000052452087402
    9. 'ain' → logprob: -13.000052452087402
    10. 'in' → logprob: -13.750052452087402

Token 159: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008714404539205134
    2. '(' → logprob: -7.125871658325195
    3. ' (' → logprob: -9.875871658325195
    4. ')' → logprob: -11.500871658325195
    5. ' ' → logprob: -13.500871658325195
    6. '(
' → logprob: -13.500871658325195
    7. '(n' → logprob: -13.875871658325195
    8. ')(' → logprob: -14.000871658325195
    9. '   ' → logprob: -15.375871658325195
    10. ' )' → logprob: -16.000871658325195

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02459053508937359
    2. ' ,' → logprob: -4.149590492248535
    3. ',x' → logprob: -4.774590492248535
    4. ',
' → logprob: -10.274590492248535
    5. ' x' → logprob: -11.024590492248535
    6. ')' → logprob: -11.524590492248535
    7. 'x' → logprob: -12.399590492248535
    8. ',n' → logprob: -12.774590492248535
    9. ' ' → logprob: -12.899590492248535
    10. '
' → logprob: -13.649590492248535

Token 161: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001326433615759015
    2. ' x' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.126326560974121
    4. ' ' → logprob: -16.001325607299805
    5. '
' → logprob: -16.876325607299805
    6. ')x' → logprob: -17.001325607299805
    7. '    ' → logprob: -17.126325607299805
    8. ')' → logprob: -17.126325607299805
    9. '(x' → logprob: -17.626325607299805
    10. '	x' → logprob: -17.626325607299805

Token 162: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.041294582188129425
    2. ')' → logprob: -3.291294574737549
    3. '))
' → logprob: -6.166294574737549
    4. ' ))' → logprob: -6.916294574737549
    5. ' )' → logprob: -9.166295051574707
    6. ')
' → logprob: -10.666295051574707
    7. ')))' → logprob: -11.541295051574707
    8. ' ))
' → logprob: -11.791295051574707
    9. '),' → logprob: -12.791295051574707
    10. ',' → logprob: -13.041295051574707

Token 163: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31491819024086
    2. ')' → logprob: -2.189918279647827
    3. '<|end|>' → logprob: -2.439918279647827
    4. '\n' → logprob: -2.814918279647827
    5. ')
' → logprob: -5.939918041229248
    6. '    
' → logprob: -6.439918041229248
    7. '  
' → logprob: -6.564918041229248
    8. ' 
' → logprob: -6.689918041229248
    9. '   ' → logprob: -6.814918041229248
    10. '<|end|>' → logprob: -7.564918041229248

Token 164: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0902143269777298
    2. 'return' (adapté à ' return') → logprob: -2.465214252471924
    3. '   ' → logprob: -6.965214252471924
    4. '
' → logprob: -8.840214729309082
    5. ' return' → logprob: -8.840214729309082
    6. '	return' → logprob: -10.590214729309082
    7. ')return' → logprob: -12.590214729309082
    8. 'eturn' → logprob: -13.090214729309082
    9. ':return' → logprob: -13.340214729309082
    10. ' ' → logprob: -13.590214729309082

Token 165: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.401795357465744
    2. '
' → logprob: -2.0267953872680664
    3. '<|end|>' → logprob: -2.0267953872680664
    4. '    
' → logprob: -3.1517953872680664
    5. '\n' → logprob: -5.526795387268066
    6. '    ' → logprob: -5.526795387268066
    7. ')' → logprob: -5.901795387268066
    8. '#' → logprob: -6.276795387268066
    9. '<|end|>' → logprob: -6.901795387268066
    10. 'n' → logprob: -7.151795387268066

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11766839772462845
    2. 'result' → logprob: -3.117668390274048
    3. '    
' → logprob: -4.117668628692627
    4. 'res' → logprob: -4.992668628692627
    5. '#' → logprob: -5.117668628692627
    6. '
' → logprob: -5.367668628692627
    7. 's' → logprob: -5.492668628692627
    8. 'for' → logprob: -5.617668628692627
    9. ')' → logprob: -5.742668628692627
    10. 'rest' → logprob: -5.992668628692627

Token 167: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8065468072891235
    2. 'res' → logprob: -2.056546688079834
    3. '   ' → logprob: -2.181546688079834
    4. 'dp' → logprob: -3.056546688079834
    5. 'r' → logprob: -3.431546688079834
    6. 'seen' → logprob: -3.556546688079834
    7. ' s' → logprob: -3.681546688079834
    8. 'S' → logprob: -3.931546688079834
    9. ' ans' → logprob: -4.181546688079834
    10. 'ans' → logprob: -4.181546688079834

Token 168: ' Swap' (ID: 76518)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6207146644592285
    2. 'res' → logprob: -1.8707146644592285
    3. 'seen' → logprob: -2.1207146644592285
    4. 'dp' → logprob: -2.2457146644592285
    5. 'vals' → logprob: -2.4957146644592285
    6. 'from' → logprob: -3.2457146644592285
    7. 'def' → logprob: -3.2457146644592285
    8. 'ans' → logprob: -3.2457146644592285
    9. 'S' → logprob: -3.6207146644592285
    10. 'r' → logprob: -3.7457146644592285

Token 169: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5323449373245239
    2. '   ' → logprob: -1.282344937324524
    3. ' if' → logprob: -2.6573448181152344
    4. 'd' → logprob: -3.2823448181152344
    5. 'x' → logprob: -4.032344818115234
    6. 'N' → logprob: -5.907344818115234
    7. '    ' → logprob: -6.157344818115234
    8. ' d' → logprob: -6.157344818115234
    9. ' x' → logprob: -6.657344818115234
    10. '(x' → logprob: -7.907344818115234

Token 170: ' normalize' (ID: 44464)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6421432495117188
    2. ' abs' → logprob: -1.3921432495117188
    3. ' d' → logprob: -1.6421432495117188
    4. 'd' → logprob: -3.8921432495117188
    5. ' x' → logprob: -5.767143249511719
    6. ' if' → logprob: -6.517143249511719
    7. 'x' → logprob: -7.017143249511719
    8. ' def' → logprob: -7.142143249511719
    9. 'def' → logprob: -7.142143249511719
    10. 'if' → logprob: -7.267143249511719

Token 171: ' everything' (ID: 5519)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3577743470668793
    2. ' if' → logprob: -1.3577743768692017
    3. 'if' → logprob: -3.232774257659912
    4. 'x' → logprob: -6.107774257659912
    5. ' x' → logprob: -7.232774257659912
    6. ' d' → logprob: -7.482774257659912
    7. 'd' → logprob: -7.607774257659912
    8. 'N' → logprob: -10.60777473449707
    9. 'n' → logprob: -10.73277473449707
    10. ' N' → logprob: -11.23277473449707

Token 172: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053632430732250214
    2. ' if' → logprob: -3.3036324977874756
    3. 'if' → logprob: -4.1786322593688965
    4. ',' → logprob: -9.678632736206055
    5. 'd' → logprob: -10.428632736206055
    6. 'x' → logprob: -10.803632736206055
    7. ' to' → logprob: -11.678632736206055
    8. 'def' → logprob: -12.053632736206055
    9. 'N' → logprob: -12.303632736206055
    10. ':' → logprob: -12.678632736206055

Token 173: ' functional' (ID: 20483)
  Prédit: ' cop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cop' → logprob: -0.7371410727500916
    2. ' d' → logprob: -1.2371411323547363
    3. 'd' → logprob: -2.2371411323547363
    4. 'cop' → logprob: -3.3621411323547363
    5. 'x' → logprob: -3.8621411323547363
    6. ' x' → logprob: -3.9871411323547363
    7. ' abs' → logprob: -4.112141132354736
    8. 'abs' → logprob: -4.362141132354736
    9. 'if' → logprob: -5.237141132354736
    10. ' if' → logprob: -5.862141132354736

Token 174: ' programming' (ID: 23238)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3738473951816559
    2. 'abs' → logprob: -1.7488473653793335
    3. 'def' → logprob: -3.123847484588623
    4. 'x' → logprob: -3.123847484588623
    5. ' d' → logprob: -3.998847484588623
    6. 'l' → logprob: -5.248847484588623
    7. 'lambda' → logprob: -5.248847484588623
    8. 'N' → logprob: -5.623847484588623
    9. 'sign' → logprob: -6.123847484588623
    10. '(d' → logprob: -6.248847484588623

Token 175: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8137274384498596
    2. ' if' → logprob: -1.1887273788452148
    3. 'd' → logprob: -2.938727378845215
    4. 'if' → logprob: -3.063727378845215
    5. ' d' → logprob: -3.188727378845215
    6. 'x' → logprob: -3.313727378845215
    7. ' x' → logprob: -3.938727378845215
    8. 'def' → logprob: -4.688727378845215
    9. ',' → logprob: -4.813727378845215
    10. '
' → logprob: -5.438727378845215

Token 176: ' weird' (ID: 28783)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1327711343765259
    2. 'x' → logprob: -1.8827711343765259
    3. ' d' → logprob: -2.0077710151672363
    4. 'd' → logprob: -2.0077710151672363
    5. '   ' → logprob: -2.3827710151672363
    6. ' if' → logprob: -3.1327710151672363
    7. 'N' → logprob: -3.2577710151672363
    8. ' N' → logprob: -3.5077710151672363
    9. '    ' → logprob: -4.632771015167236
    10. 'if' → logprob: -4.632771015167236

Token 177: ' math' (ID: 13324)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.4242985248565674
    2. 'lambda' → logprob: -1.7992985248565674
    3. 'x' → logprob: -2.2992985248565674
    4. ' lambda' → logprob: -2.6742985248565674
    5. 'abs' → logprob: -2.7992985248565674
    6. 'd' → logprob: -2.7992985248565674
    7. '=lambda' → logprob: -3.4242985248565674
    8. 's' → logprob: -3.5492985248565674
    9. '(
' → logprob: -3.9242985248565674
    10. ' lamb' → logprob: -4.049298286437988

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05267034098505974
    2. 'x' → logprob: -4.302670478820801
    3. 'd' → logprob: -4.802670478820801
    4. 'if' → logprob: -4.802670478820801
    5. ' if' → logprob: -4.802670478820801
    6. 'def' → logprob: -5.677670478820801
    7. 'n' → logprob: -6.427670478820801
    8. 'N' → logprob: -6.802670478820801
    9. ' x' → logprob: -6.802670478820801
    10. ',' → logprob: -7.302670478820801

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12957005202770233
    2. '
' → logprob: -3.6295700073242188
    3. ' if' → logprob: -4.254570007324219
    4. '<|end|>' → logprob: -4.254570007324219
    5. 'def' → logprob: -4.504570007324219
    6. '    ' → logprob: -4.754570007324219
    7. 'n' → logprob: -4.879570007324219
    8. '    
' → logprob: -5.504570007324219
    9. 'x' → logprob: -5.629570007324219
    10. ',' → logprob: -5.629570007324219

Token 180: ' flip' (ID: 29130)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.0079448223114014
    2. 'N' → logprob: -2.1329448223114014
    3. 'if' → logprob: -2.2579448223114014
    4. 'd' → logprob: -2.6329448223114014
    5. 'n' → logprob: -2.8829448223114014
    6. '   ' → logprob: -2.8829448223114014
    7. ' if' → logprob: -2.8829448223114014
    8. ' x' → logprob: -3.0079448223114014
    9. ' d' → logprob: -3.1329448223114014
    10. ' N' → logprob: -3.2579448223114014

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06051623448729515
    2. '=' → logprob: -2.935516119003296
    3. 'd' → logprob: -6.060516357421875
    4. ',' → logprob: -7.060516357421875
    5. '_d' → logprob: -7.560516357421875
    6. '_sign' → logprob: -7.685516357421875
    7. 'sign' → logprob: -7.935516357421875
    8. '=d' → logprob: -8.060516357421875
    9. '   ' → logprob: -8.560516357421875
    10. 'ed' → logprob: -8.560516357421875

Token 182: ' lambda' (ID: 27871)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.761496901512146
    2. 'lambda' → logprob: -1.011496901512146
    3. ' lambda' → logprob: -3.1364970207214355
    4. 'cop' → logprob: -3.6364970207214355
    5. 'ft' → logprob: -4.0114970207214355
    6. ' (' → logprob: -4.3864970207214355
    7. 'abs' → logprob: -4.5114970207214355
    8. '1' → logprob: -4.7614970207214355
    9. '(' → logprob: -4.8864970207214355
    10. '-' → logprob: -5.1364970207214355

Token 183: ' z' (ID: 579)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.017913818359375
    2. ' lambda' → logprob: -1.267913818359375
    3. 'x' → logprob: -2.267913818359375
    4. ' x' → logprob: -2.767913818359375
    5. ' d' → logprob: -3.017913818359375
    6. 'd' → logprob: -3.017913818359375
    7. '(lambda' → logprob: -3.142913818359375
    8. 'n' → logprob: -4.517913818359375
    9. ' n' → logprob: -4.642913818359375
    10. 'a' → logprob: -5.017913818359375

Token 184: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007319331634789705
    2. ',' → logprob: -5.632319450378418
    3. ' :' → logprob: -5.882319450378418
    4. ',z' → logprob: -7.507319450378418
    5. '=' → logprob: -8.757319450378418
    6. ':-' → logprob: -9.507319450378418
    7. ':z' → logprob: -9.882319450378418
    8. 'z' → logprob: -11.382319450378418
    9. ':x' → logprob: -11.757319450378418
    10. '   ' → logprob: -11.757319450378418

Token 185: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.309929609298706
    2. ' (' → logprob: -1.309929609298706
    3. 'z' → logprob: -2.809929609298706
    4. '-' → logprob: -3.059929609298706
    5. ' z' → logprob: -3.059929609298706
    6. ' ' → logprob: -3.309929609298706
    7. ' cop' → logprob: -3.309929609298706
    8. '(-' → logprob: -3.559929609298706
    9. '(z' → logprob: -3.559929609298706
    10. '(x' → logprob: -3.684929609298706

Token 186: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.1780375242233276
    2. '-' → logprob: -1.9280375242233276
    3. 'abs' → logprob: -2.053037643432617
    4. '1' → logprob: -2.303037643432617
    5. '0' → logprob: -2.678037643432617
    6. 'x' → logprob: -2.803037643432617
    7. '-c' → logprob: -2.928037643432617
    8. 'cop' → logprob: -3.303037643432617
    9. 'd' → logprob: -3.553037643432617
    10. '(' → logprob: -4.303037643432617

Token 187: '[' (ID: 58)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.4775203466415405
    2. '*d' → logprob: -2.22752046585083
    3. ' >' → logprob: -2.35252046585083
    4. '>=' → logprob: -2.35252046585083
    5. '<' → logprob: -2.60252046585083
    6. '+' → logprob: -2.85252046585083
    7. ' *' → logprob: -2.85252046585083
    8. ' >=' → logprob: -2.97752046585083
    9. ' <' → logprob: -3.22752046585083
    10. '*x' → logprob: -3.35252046585083

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10585847496986389
    2. '1' → logprob: -2.480858564376831
    3. '::-' → logprob: -4.230858325958252
    4. ':' → logprob: -6.980858325958252
    5. '-' → logprob: -7.730858325958252
    6. '2' → logprob: -8.98085880279541
    7. '
' → logprob: -8.98085880279541
    8. '>' → logprob: -9.10585880279541
    9. ':]' → logprob: -9.48085880279541
    10. '::' → logprob: -9.73085880279541

Token 189: ']' (ID: 60)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -1.46222984790802
    2. ']' → logprob: -1.58722984790802
    3. '],' → logprob: -1.83722984790802
    4. ',' → logprob: -1.96222984790802
    5. ']+' → logprob: -1.96222984790802
    6. ']-' → logprob: -4.0872297286987305
    7. '+' → logprob: -4.3372297286987305
    8. '%' → logprob: -4.8372297286987305
    9. '>' → logprob: -4.9622297286987305
    10. '*' → logprob: -4.9622297286987305

Token 190: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5596566200256348
    2. '*' → logprob: -2.6846566200256348
    3. '*-' → logprob: -2.8096566200256348
    4. '*d' → logprob: -3.1846566200256348
    5. '+' → logprob: -3.5596566200256348
    6. '*(-' → logprob: -3.6846566200256348
    7. ',d' → logprob: -3.6846566200256348
    8. '-' → logprob: -3.9346566200256348
    9. '>' → logprob: -3.9346566200256348
    10. '*z' → logprob: -4.184656620025635

Token 191: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.553670346736908
    2. '1' → logprob: -2.3036704063415527
    3. 'abs' → logprob: -2.4286704063415527
    4. 'cop' → logprob: -2.8036704063415527
    5. 'd' → logprob: -3.0536704063415527
    6. '(' → logprob: -3.6786704063415527
    7. '(-' → logprob: -4.178670406341553
    8. '(z' → logprob: -4.428670406341553
    9. '(d' → logprob: -4.678670406341553
    10. '((' → logprob: -4.928670406341553

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9523811936378479
    2. '1' → logprob: -1.5773811340332031
    3. '*' → logprob: -2.077381134033203
    4. '*z' → logprob: -2.202381134033203
    5. 'z' → logprob: -2.827381134033203
    6. ' *' → logprob: -3.827381134033203
    7. ',' → logprob: -3.952381134033203
    8. '%' → logprob: -4.577381134033203
    9. '*(' → logprob: -4.827381134033203
    10. '-' → logprob: -4.827381134033203

Token 193: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08982092887163162
    2. 'z' → logprob: -2.5898208618164062
    3. '(' → logprob: -5.589820861816406
    4. 'd' → logprob: -5.964820861816406
    5. 'abs' → logprob: -6.964820861816406
    6. '0' → logprob: -7.214820861816406
    7. 'x' → logprob: -7.714820861816406
    8. '-' → logprob: -7.714820861816406
    9. 'N' → logprob: -8.214820861816406
    10. '[' → logprob: -8.464820861816406

Token 194: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7815706133842468
    2. ')' → logprob: -1.2815706729888916
    3. ']' → logprob: -2.2815706729888916
    4. ')%' → logprob: -2.9065706729888916
    5. '-' → logprob: -3.9065706729888916
    6. ' -' → logprob: -4.0315704345703125
    7. '*z' → logprob: -4.4065704345703125
    8. ',' → logprob: -4.5315704345703125
    9. '*' → logprob: -4.7815704345703125
    10. '+' → logprob: -5.5315704345703125

Token 195: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2643362283706665
    2. ',' → logprob: -1.2643362283706665
    3. ' if' → logprob: -2.389336109161377
    4. '*' → logprob: -2.514336109161377
    5. '-' → logprob: -2.639336109161377
    6. '*z' → logprob: -2.639336109161377
    7. ' -' → logprob: -3.139336109161377
    8. ' *' → logprob: -3.889336109161377
    9. ')%' → logprob: -4.389336109161377
    10. '*(' → logprob: -4.514336109161377

Token 196: ' (' (ID: 350)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.3337677717208862
    2. 'z' → logprob: -1.7087677717208862
    3. '((' → logprob: -2.208767890930176
    4. 'cop' → logprob: -2.708767890930176
    5. '((-' → logprob: -2.708767890930176
    6. '(d' → logprob: -2.958767890930176
    7. 'd' → logprob: -3.208767890930176
    8. '(z' → logprob: -3.208767890930176
    9. '(-(' → logprob: -3.583767890930176
    10. '(' → logprob: -3.833767890930176

Token 197: 'z' (ID: 89)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.9839805960655212
    2. 'cop' → logprob: -1.483980655670166
    3. '(-' → logprob: -1.858980655670166
    4. '-' → logprob: -2.733980655670166
    5. '(c' → logprob: -3.608980655670166
    6. '((-' → logprob: -3.983980655670166
    7. '((' → logprob: -4.108980655670166
    8. 'abs' → logprob: -4.108980655670166
    9. 'd' → logprob: -4.108980655670166
    10. '(' → logprob: -4.358980655670166

Token 198: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016392802819609642
    2. '1' → logprob: -4.141392707824707
    3. '0' → logprob: -9.766392707824707
    4. '-' → logprob: -10.016392707824707
    5. '(' → logprob: -10.141392707824707
    6. '#' → logprob: -10.391392707824707
    7. '2' → logprob: -10.516392707824707
    8. '<|end|>' → logprob: -11.391392707824707
    9. '```' → logprob: -11.516392707824707
    10. 'and' → logprob: -11.516392707824707

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02205081284046173
    2. '0' → logprob: -4.647050857543945
    3. '2' → logprob: -4.647050857543945
    4. '-' → logprob: -6.647050857543945
    5. '3' → logprob: -8.022050857543945
    6. 'd' → logprob: -8.147050857543945
    7. '
' → logprob: -8.272050857543945
    8. '(' → logprob: -9.709550857543945
    9. 'N' → logprob: -9.772050857543945
    10. '```' → logprob: -9.834550857543945

Token 200: ']-' (ID: 27107)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.2125225067138672
    2. '-' → logprob: -1.9625225067138672
    3. ' %' → logprob: -2.087522506713867
    4. ' -' → logprob: -2.212522506713867
    5. ' <' → logprob: -2.962522506713867
    6. '+' → logprob: -3.087522506713867
    7. '//' → logprob: -3.212522506713867
    8. '>' → logprob: -3.462522506713867
    9. '>=' → logprob: -3.462522506713867
    10. ' >=' → logprob: -4.212522506713867

Token 201: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7091125249862671
    2. '1' → logprob: -1.209112524986267
    3. '(' → logprob: -2.5841126441955566
    4. 'id' → logprob: -3.3341126441955566
    5. 'x' → logprob: -4.084112644195557
    6. 'z' → logprob: -4.209112644195557
    7. '(N' → logprob: -4.334112644195557
    8. '(x' → logprob: -4.459112644195557
    9. 'min' → logprob: -4.584112644195557
    10. '(id' → logprob: -4.834112644195557

Token 202: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7925265431404114
    2. ',' → logprob: -1.2925264835357666
    3. ')' → logprob: -1.5425264835357666
    4. ')//' → logprob: -3.4175264835357666
    5. '),' → logprob: -4.292526721954346
    6. '[' → logprob: -6.042526721954346
    7. '//' → logprob: -6.417526721954346
    8. ')%' → logprob: -6.667526721954346
    9. ' -' → logprob: -7.167526721954346
    10. ')))' → logprob: -7.167526721954346

Token 203: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8239447474479675
    2. '-z' → logprob: -0.8239447474479675
    3. ' z' → logprob: -2.8239448070526123
    4. '0' → logprob: -4.198944568634033
    5. ' -' → logprob: -4.323944568634033
    6. '-' → logprob: -4.698944568634033
    7. '1' → logprob: -5.323944568634033
    8. '-x' → logprob: -5.698944568634033
    9. 'abs' → logprob: -5.948944568634033
    10. '(-' → logprob: -6.073944568634033

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00039968726923689246
    2. '0' → logprob: -8.875399589538574
    3. '1' → logprob: -9.375399589538574
    4. '2' → logprob: -9.750399589538574
    5. ')' → logprob: -10.500399589538574
    6. '<|end|>' → logprob: -10.750399589538574
    7. ')[' → logprob: -11.250399589538574
    8. '][' → logprob: -11.625399589538574
    9. ',' → logprob: -11.750399589538574
    10. '[-' → logprob: -12.000399589538574

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45342278480529785
    2. '2' → logprob: -1.7034227848052979
    3. '0' → logprob: -1.7034227848052979
    4. '```' → logprob: -9.515922546386719
    5. '3' → logprob: -9.578422546386719
    6. '(' → logprob: -9.765922546386719
    7. '   ' → logprob: -10.203422546386719
    8. ' ' → logprob: -10.265922546386719
    9. '[' → logprob: -10.328422546386719
    10. '-' → logprob: -10.390922546386719

Token 206: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21881994605064392
    2. ')' → logprob: -2.0938198566436768
    3. ' -' → logprob: -3.2188198566436768
    4. '-' → logprob: -4.468820095062256
    5. '[' → logprob: -5.093820095062256
    6. ' ,' → logprob: -5.218820095062256
    7. ' )' → logprob: -5.718820095062256
    8. ' *' → logprob: -6.468820095062256
    9. '])' → logprob: -6.968820095062256
    10. ' +' → logprob: -7.218820095062256

Token 207: ' -' (ID: 533)
  Prédit: '-z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.18697696924209595
    2. '-' → logprob: -2.811976909637451
    3. 'z' → logprob: -2.936976909637451
    4. ' -' → logprob: -3.186976909637451
    5. 'abs' → logprob: -5.686976909637451
    6. ' z' → logprob: -5.936976909637451
    7. '-d' → logprob: -6.061976909637451
    8. '1' → logprob: -6.436976909637451
    9. '-x' → logprob: -6.811976909637451
    10. '0' → logprob: -7.186976909637451

Token 208: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.7848862373502925e-05
    2. ' z' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.250027656555176
    4. '	z' → logprob: -18.250028610229492
    5. 'd' → logprob: -19.375028610229492
    6. '1' → logprob: -19.500028610229492
    7. 'x' → logprob: -19.750028610229492
    8. '    ' → logprob: -20.125028610229492
    9. '       ' → logprob: -20.375028610229492
    10. '  ' → logprob: -20.625028610229492

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004091816488653421
    2. '2' → logprob: -5.504091739654541
    3. ' [' → logprob: -12.6290922164917
    4. '(' → logprob: -13.0040922164917
    5. ' ' → logprob: -13.2540922164917
    6. '   ' → logprob: -13.7540922164917
    7. '```' → logprob: -13.8790922164917
    8. '[
' → logprob: -14.0040922164917
    9. ')' → logprob: -14.2540922164917
    10. '#' → logprob: -15.2540922164917

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. '1' → logprob: -11.75001049041748
    3. ' ' → logprob: -14.12501049041748
    4. '```' → logprob: -14.56251049041748
    5. '0' → logprob: -14.62501049041748
    6. '[' → logprob: -15.18751049041748
    7. '-' → logprob: -15.62501049041748
    8. '
' → logprob: -16.187511444091797
    9. '۲' → logprob: -16.187511444091797
    10. '   ' → logprob: -16.687511444091797

Token 211: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.074907287256792e-05
    2. ' )' → logprob: -9.75006103515625
    3. ')
' → logprob: -13.50006103515625
    4. '))' → logprob: -14.87506103515625
    5. '})' → logprob: -15.37506103515625
    6. '   ' → logprob: -15.50006103515625
    7. ')}' → logprob: -16.50006103515625
    8. ' ' → logprob: -17.00006103515625
    9. '<|end|>' → logprob: -17.00006103515625
    10. ')

' → logprob: -17.12506103515625

Token 212: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0095711946487427
    2. '
' → logprob: -1.1345711946487427
    3. '<|end|>' → logprob: -1.3845711946487427
    4. '    
' → logprob: -3.509571075439453
    5. ')' → logprob: -4.384571075439453
    6. 'flip' → logprob: -4.759571075439453
    7. 'def' → logprob: -6.134571075439453
    8. ',' → logprob: -6.634571075439453
    9. ' if' → logprob: -6.759571075439453
    10. '<|end|>' → logprob: -6.759571075439453

Token 213: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3634498715400696
    2. ' z' → logprob: -1.3634498119354248
    3. 'd' → logprob: -3.488449811935425
    4. ' d' → logprob: -4.113450050354004
    5. '(z' → logprob: -7.363450050354004
    6. ' (' → logprob: -7.488450050354004
    7. 'x' → logprob: -7.863450050354004
    8. ' x' → logprob: -8.988450050354004
    9. '(' → logprob: -9.488450050354004
    10. 'flip' → logprob: -9.488450050354004

Token 214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.8351892473874614e-05
    2. '0' → logprob: -10.375048637390137
    3. 'and' → logprob: -12.375048637390137
    4. ' [' → logprob: -13.000048637390137
    5. ' and' → logprob: -13.000048637390137
    6. '#' → logprob: -13.375048637390137
    7. '(' → logprob: -13.875048637390137
    8. '1' → logprob: -14.125048637390137
    9. '```' → logprob: -14.750048637390137
    10. 'else' → logprob: -14.875048637390137

Token 215: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2814105749130249
    2. '0' → logprob: -1.406410574913025
    3. '[' → logprob: -8.781410217285156
    4. '2' → logprob: -10.031410217285156
    5. ' ' → logprob: -11.156410217285156
    6. '>' → logprob: -11.406410217285156
    7. '   ' → logprob: -11.781410217285156
    8. '(' → logprob: -12.156410217285156
    9. '-' → logprob: -12.406410217285156
    10. ']' → logprob: -12.906410217285156

Token 216: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2920074164867401
    2. ' <' → logprob: -1.9170074462890625
    3. '!=' → logprob: -3.0420074462890625
    4. '[' → logprob: -3.5420074462890625
    5. ' !=' → logprob: -4.0420074462890625
    6. '>' → logprob: -5.7920074462890625
    7. ')' → logprob: -5.9170074462890625
    8. '<|end|>' → logprob: -5.9170074462890625
    9. '0' → logprob: -6.7920074462890625
    10. ' >' → logprob: -7.2920074462890625

Token 217: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.018615875393152237
    2. ' <' → logprob: -4.01861572265625
    3. '>' → logprob: -8.01861572265625
    4. '0' → logprob: -9.64361572265625
    5. '[' → logprob: -10.89361572265625
    6. ' >' → logprob: -10.89361572265625
    7. ' ' → logprob: -11.76861572265625
    8. 'else' → logprob: -12.89361572265625
    9. '&lt' → logprob: -13.14361572265625
    10. '<int' → logprob: -13.39361572265625

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '1' → logprob: -15.875109672546387
    4. '=' → logprob: -16.25010871887207
    5. '۰' → logprob: -18.00010871887207
    6. '```' → logprob: -18.06260871887207
    7. '[' → logprob: -18.18760871887207
    8. '   ' → logprob: -18.31260871887207
    9. '(' → logprob: -18.37510871887207
    10. 'zero' → logprob: -18.75010871887207

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -17.0000057220459
    4. '=' → logprob: -18.2500057220459
    5. '[' → logprob: -19.0000057220459
    6. '(' → logprob: -19.2500057220459
    7. '۰' → logprob: -19.3750057220459
    8. 'zero' → logprob: -19.7500057220459
    9. '```' → logprob: -19.8750057220459
    10. '-' → logprob: -20.2500057220459

Token 220: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.015338588505983353
    2. 'else' → logprob: -4.26533842086792
    3. '<|end|>' → logprob: -6.76533842086792
    4. '	else' → logprob: -11.265338897705078
    5. '<|end|>' → logprob: -12.015338897705078
    6. ' ' → logprob: -14.265338897705078
    7. '   ' → logprob: -14.515338897705078
    8. '
' → logprob: -14.890338897705078
    9. '_else' → logprob: -15.890338897705078
    10. ')' → logprob: -16.015338897705078

Token 221: ' z' (ID: 579)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.910801112651825
    2. 'z' → logprob: -1.4108011722564697
    3. ' (' → logprob: -1.4108011722564697
    4. ' z' → logprob: -2.4108011722564697
    5. '(' → logprob: -3.9108011722564697
    6. '   ' → logprob: -9.91080093383789
    7. ' ' → logprob: -10.16080093383789
    8. '(x' → logprob: -11.03580093383789
    9. '  ' → logprob: -11.91080093383789
    10. '[z' → logprob: -12.41080093383789

Token 222: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0319015979766846
    2. 'range' → logprob: -2.1569015979766846
    3. 'def' → logprob: -2.9069015979766846
    4. 'flip' → logprob: -2.9069015979766846
    5. 'z' → logprob: -3.0319015979766846
    6. 'for' → logprob: -3.2819015979766846
    7. 'r' → logprob: -3.7819015979766846
    8. ' for' → logprob: -3.9069015979766846
    9. ' range' → logprob: -4.0319013595581055
    10. 'f' → logprob: -4.1569013595581055

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0756622701883316
    2. '=' → logprob: -2.95066237449646
    3. ' =' → logprob: -3.95066237449646
    4. 's' → logprob: -8.325662612915039
    5. ',x' → logprob: -8.450662612915039
    6. 'x' → logprob: -8.700662612915039
    7. ')' → logprob: -9.325662612915039
    8. '_' → logprob: -9.700662612915039
    9. ',y' → logprob: -9.700662612915039
    10. ',N' → logprob: -9.950662612915039

Token 226: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.024441169574856758
    2. 'd' → logprob: -4.274441242218018
    3. 'x' → logprob: -5.524441242218018
    4. ' N' → logprob: -5.649441242218018
    5. 'id' → logprob: -7.149441242218018
    6. '1' → logprob: -7.524441242218018
    7. 'abs' → logprob: -8.02444076538086
    8. 'y' → logprob: -8.14944076538086
    9. ' d' → logprob: -8.77444076538086
    10. ' ' → logprob: -9.14944076538086

Token 227: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40503397583961487
    2. ' =' → logprob: -1.2800339460372925
    3. ',' → logprob: -2.905034065246582
    4. '<|end|>' → logprob: -8.780034065246582
    5. 'x' → logprob: -9.530034065246582
    6. '=x' → logprob: -11.655034065246582
    7. ',x' → logprob: -11.905034065246582
    8. ' x' → logprob: -12.155034065246582
    9. ' ' → logprob: -12.155034065246582
    10. ' ,' → logprob: -12.905034065246582

Token 228: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14679959416389465
    2. ' d' → logprob: -2.0217995643615723
    3. 'abs' → logprob: -6.521799564361572
    4. 'id' → logprob: -7.021799564361572
    5. ' abs' → logprob: -8.02180004119873
    6. 'x' → logprob: -8.14680004119873
    7. '0' → logprob: -8.27180004119873
    8. '1' → logprob: -8.52180004119873
    9. ' ' → logprob: -8.77180004119873
    10. 'N' → logprob: -9.27180004119873

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026708483695984
    2. ' =' → logprob: -1.9102671146392822
    3. ',' → logprob: -10.160266876220703
    4. 'x' → logprob: -13.535266876220703
    5. ' ' → logprob: -14.535266876220703
    6. '=f' → logprob: -14.535266876220703
    7. '=x' → logprob: -14.785266876220703
    8. 'flip' → logprob: -15.660266876220703
    9. '=cut' → logprob: -15.785266876220703
    10. '=id' → logprob: -16.535266876220703

Token 230: ' ft' (ID: 16280)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.015302774496376514
    2. ' flip' → logprob: -4.265302658081055
    3. 'id' → logprob: -7.515302658081055
    4. '*' → logprob: -7.890302658081055
    5. '(*' → logprob: -9.390302658081055
    6. ' id' → logprob: -10.265302658081055
    7. '   ' → logprob: -10.765302658081055
    8. '(' → logprob: -11.265302658081055
    9. ' *' → logprob: -11.515302658081055
    10. 'fl' → logprob: -11.640302658081055

Token 231: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.16415955126285553
    2. '.partial' → logprob: -1.9141595363616943
    3. 'reduce' → logprob: -6.414159774780273
    4. '.acc' → logprob: -7.164159774780273
    5. '.map' → logprob: -7.539159774780273
    6. 'partial' → logprob: -8.164159774780273
    7. '.flip' → logprob: -8.289159774780273
    8. '.c' → logprob: -9.039159774780273
    9. '.l' → logprob: -9.414159774780273
    10. '.wrap' → logprob: -10.164159774780273

Token 232: '(lambda' (ID: 43341)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.16409450769424438
    2. 'flip' → logprob: -1.9140944480895996
    3. '(lambda' → logprob: -5.9140944480896
    4. '(' → logprob: -7.2890944480896
    5. ' flip' → logprob: -8.414094924926758
    6. '(
' → logprob: -9.039094924926758
    7. '(fl' → logprob: -9.289094924926758
    8. 'lambda' → logprob: -11.539094924926758
    9. 'fl' → logprob: -11.539094924926758
    10. '_flip' → logprob: -11.914094924926758

Token 233: ' acc' (ID: 1259)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9497411847114563
    2. 'flip' → logprob: -1.3247411251068115
    3. ' lambda' → logprob: -1.4497411251068115
    4. '(lambda' → logprob: -2.5747411251068115
    5. ' flip' → logprob: -3.3247411251068115
    6. '   ' → logprob: -8.32474136352539
    7. ' (' → logprob: -9.57474136352539
    8. '
' → logprob: -9.94974136352539
    9. ' ' → logprob: -10.57474136352539
    10. '    ' → logprob: -11.07474136352539

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003969878423959017
    2. 'lambda' → logprob: -6.878969669342041
    3. 'flip' → logprob: -6.878969669342041
    4. '   ' → logprob: -7.253969669342041
    5. ' ,' → logprob: -7.378969669342041
    6. ',
' → logprob: -8.7539701461792
    7. ':' → logprob: -9.7539701461792
    8. ' lambda' → logprob: -9.7539701461792
    9. '(lambda' → logprob: -9.7539701461792
    10. ',x' → logprob: -9.8789701461792

Token 235: ' _:' (ID: 133568)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.670922577381134
    2. 'flip' → logprob: -0.795922577381134
    3. ' lambda' → logprob: -3.7959225177764893
    4. '(lambda' → logprob: -4.420922756195068
    5. ' flip' → logprob: -5.920922756195068
    6. '   ' → logprob: -8.17092227935791
    7. '
' → logprob: -10.42092227935791
    8. '    ' → logprob: -10.92092227935791
    9. '    
' → logprob: -11.29592227935791
    10. '\
' → logprob: -11.67092227935791

Token 236: ' flip' (ID: 29130)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.0484851710498333
    2. ' flip' → logprob: -3.173485279083252
    3. '(lambda' → logprob: -6.423485279083252
    4. '(' → logprob: -6.673485279083252
    5. 'lambda' → logprob: -7.298485279083252
    6. '(x' → logprob: -7.798485279083252
    7. '(f' → logprob: -7.798485279083252
    8. '   ' → logprob: -8.048484802246094
    9. ' (' → logprob: -8.048484802246094
    10. ' lambda' → logprob: -8.298484802246094

Token 237: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.006572430487722158
    2. ' (' → logprob: -6.006572246551514
    3. 'acc' → logprob: -6.631572246551514
    4. '(' → logprob: -6.631572246551514
    5. '((' → logprob: -7.006572246551514
    6. '(x' → logprob: -7.631572246551514
    7. ' acc' → logprob: -10.506572723388672
    8. '   ' → logprob: -11.256572723388672
    9. ',' → logprob: -12.381572723388672
    10. ')' → logprob: -13.131572723388672

Token 238: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022791020572185516
    2. '(x' → logprob: -4.647790908813477
    3. '(' → logprob: -5.022790908813477
    4. ' ,' → logprob: -6.397790908813477
    5. '(N' → logprob: -6.522790908813477
    6. ',(' → logprob: -6.647790908813477
    7. '),' → logprob: -6.897790908813477
    8. ' (' → logprob: -7.897790908813477
    9. '   ' → logprob: -8.147790908813477
    10. ',x' → logprob: -9.272790908813477

Token 239: ' range' (ID: 3352)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.11278343200683594
    2. '(' → logprob: -2.737783432006836
    3. ' (' → logprob: -3.237783432006836
    4. '(N' → logprob: -6.487783432006836
    5. '[x' → logprob: -7.487783432006836
    6. '[' → logprob: -8.362783432006836
    7. '   ' → logprob: -8.487783432006836
    8. '[(' → logprob: -9.612783432006836
    9. '[N' → logprob: -10.737783432006836
    10. '(id' → logprob: -11.362783432006836

Token 240: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0012354647042229772
    2. '(' → logprob: -7.126235485076904
    3. '(abs' → logprob: -8.001235008239746
    4. 'N' → logprob: -9.626235008239746
    5. 'abs' → logprob: -11.251235008239746
    6. '(n' → logprob: -12.626235008239746
    7. '   ' → logprob: -12.876235008239746
    8. '(int' → logprob: -13.001235008239746
    9. '1' → logprob: -13.376235008239746
    10. '((' → logprob: -13.501235008239746

Token 241: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002979240380227566
    2. ' N' → logprob: -8.875297546386719
    3. '1' → logprob: -9.500297546386719
    4. '   ' → logprob: -10.375297546386719
    5. 'x' → logprob: -11.000297546386719
    6. '(N' → logprob: -11.375297546386719
    7. ' ' → logprob: -12.125297546386719
    8. 'abs' → logprob: -12.125297546386719
    9. '	N' → logprob: -12.250297546386719
    10. '(' → logprob: -12.625297546386719

Token 242: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12267646193504333
    2. 'N' → logprob: -2.247676372528076
    3. ',N' → logprob: -4.997676372528076
    4. '(N' → logprob: -6.872676372528076
    5. ' N' → logprob: -6.997676372528076
    6. ' ,' → logprob: -7.372676372528076
    7. ' ' → logprob: -8.997676849365234
    8. '   ' → logprob: -9.247676849365234
    9. '),' → logprob: -9.872676849365234
    10. '(' → logprob: -9.997676849365234

Token 243: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07390778511762619
    2. ' (' → logprob: -2.6989078521728516
    3. '(' → logprob: -5.948907852172852
    4. '(id' → logprob: -6.823907852172852
    5. '   ' → logprob: -9.073907852172852
    6. '(N' → logprob: -9.823907852172852
    7. '  ' → logprob: -10.073907852172852
    8. ' ' → logprob: -10.823907852172852
    9. 'flip' → logprob: -11.698907852172852
    10. '(f' → logprob: -12.198907852172852

Token 244: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005527103785425425
    2. '(x' → logprob: -5.505527019500732
    3. ' x' → logprob: -7.130527019500732
    4. '0' → logprob: -7.755527019500732
    5. '(' → logprob: -9.25552749633789
    6. ' (' → logprob: -10.00552749633789
    7. ' ' → logprob: -11.25552749633789
    8. '(N' → logprob: -11.38052749633789
    9. '
' → logprob: -11.50552749633789
    10. '   ' → logprob: -11.63052749633789

Token 245: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004734486574307084
    2. ',N' → logprob: -8.375473022460938
    3. ' ,' → logprob: -8.500473022460938
    4. ',
' → logprob: -10.875473022460938
    5. '   ' → logprob: -11.875473022460938
    6. '<|end|>' → logprob: -12.750473022460938
    7. ' ' → logprob: -12.875473022460938
    8. 'N' → logprob: -13.625473022460938
    9. '
' → logprob: -13.750473022460938
    10. ')' → logprob: -13.875473022460938

Token 246: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5763067007064819
    2. ',d' → logprob: -0.8263067007064819
    3. 'd' → logprob: -8.576306343078613
    4. ' ,' → logprob: -8.701306343078613
    5. ',x' → logprob: -12.076306343078613
    6. ' d' → logprob: -13.326306343078613
    7. ',
' → logprob: -13.576306343078613
    8. '   ' → logprob: -14.076306343078613
    9. ',n' → logprob: -14.701306343078613
    10. 'x' → logprob: -15.076306343078613

Token 247: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.301394023466855e-05
    2. '))
' → logprob: -10.375062942504883
    3. ')' → logprob: -10.625062942504883
    4. ' ))' → logprob: -12.250062942504883
    5. ')))' → logprob: -13.250062942504883
    6. '))

' → logprob: -15.000062942504883
    7. '));' → logprob: -15.375062942504883
    8. '))[' → logprob: -15.875062942504883
    9. '[' → logprob: -16.500062942504883
    10. '()))' → logprob: -16.750062942504883

Token 248: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04002121090888977
    2. ' abs' → logprob: -3.2900211811065674
    3. 'd' → logprob: -6.5400214195251465
    4. 'cop' → logprob: -8.665020942687988
    5. ' d' → logprob: -8.915020942687988
    6. 'int' → logprob: -9.415020942687988
    7. '(abs' → logprob: -9.665020942687988
    8. ' cop' → logprob: -10.415020942687988
    9. ' ' → logprob: -11.790020942687988
    10. '-' → logprob: -11.790020942687988

Token 252: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -9.639096970204264e-05
    2. 'd' → logprob: -9.375096321105957
    3. '(' → logprob: -11.375096321105957
    4. '(
' → logprob: -17.125097274780273
    5. '(D' → logprob: -18.250097274780273
    6. '(x' → logprob: -18.375097274780273
    7. '	d' → logprob: -18.875097274780273
    8. ' d' → logprob: -19.250097274780273
    9. '((' → logprob: -20.000097274780273
    10. ',d' → logprob: -20.000097274780273

Token 253: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ')
' → logprob: -11.375027656555176
    3. ' )' → logprob: -11.875027656555176
    4. '<|end|>' → logprob: -12.125027656555176
    5. '   ' → logprob: -13.750027656555176
    6. ')d' → logprob: -14.625027656555176
    7. '<|end|>' → logprob: -14.625027656555176
    8. '))' → logprob: -15.500027656555176
    9. '```' → logprob: -16.00002670288086
    10. ')#' → logprob: -16.00002670288086

Token 254: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' container' (ID: 9282)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.1284310817718506
    2. 'res' → logprob: -2.5034310817718506
    3. 'ans' → logprob: -2.7534310817718506
    4. 'def' → logprob: -2.7534310817718506
    5. 'from' → logprob: -2.8784310817718506
    6. 'seen' → logprob: -2.8784310817718506
    7. 's' → logprob: -3.0034310817718506
    8. 'M' → logprob: -3.1284310817718506
    9. 'vals' → logprob: -3.1284310817718506
    10. 'S' → logprob: -3.2534310817718506

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5776932239532471
    2. ' =' → logprob: -0.8276932239532471
    3. 's' → logprob: -6.577692985534668
    4. '=[]' → logprob: -8.702692985534668
    5. ',' → logprob: -9.577692985534668
    6. ')' → logprob: -10.702692985534668
    7. '_' → logprob: -10.827692985534668
    8. ':' → logprob: -11.077692985534668
    9. 'def' → logprob: -11.952692985534668
    10. '[' → logprob: -12.202692985534668

Token 257: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.07215820252895355
    2. 'set' → logprob: -2.697158098220825
    3. ' defaultdict' → logprob: -7.322158336639404
    4. '{}' → logprob: -7.822158336639404
    5. ' set' → logprob: -7.822158336639404
    6. '{' → logprob: -8.072157859802246
    7. '[]' → logprob: -8.572157859802246
    8. '[' → logprob: -8.822157859802246
    9. '(default' → logprob: -10.322157859802246
    10. ' default' → logprob: -10.697157859802246

Token 258: '(list' (ID: 13116)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4504907727241516
    2. 'int' → logprob: -1.9504907131195068
    3. '(set' → logprob: -2.075490713119507
    4. '(list' → logprob: -3.200490713119507
    5. 'set' → logprob: -3.575490713119507
    6. 'list' → logprob: -4.075490951538086
    7. '(lambda' → logprob: -5.450490951538086
    8. '(bool' → logprob: -6.200490951538086
    9. '<int' → logprob: -6.325490951538086
    10. 'bool' → logprob: -7.950490951538086

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011159272398799658
    2. ')
' → logprob: -6.876115798950195
    3. ')

' → logprob: -9.501115798950195
    4. '   ' → logprob: -13.376115798950195
    5. ' )' → logprob: -13.376115798950195
    6. '[int' → logprob: -13.626115798950195
    7. '())' → logprob: -14.251115798950195
    8. ',' → logprob: -14.626115798950195
    9. '[' → logprob: -14.876115798950195
    10. ')
' → logprob: -14.876115798950195

Token 260: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5336849093437195
    2. ' for' → logprob: -1.5336849689483643
    3. '   ' → logprob: -1.7836849689483643
    4. '<|end|>' → logprob: -3.6586849689483643
    5. ')' → logprob: -6.658684730529785
    6. '
' → logprob: -7.158684730529785
    7. 'def' → logprob: -7.908684730529785
    8. '    
' → logprob: -8.033684730529785
    9. 'container' → logprob: -9.283684730529785
    10. '...' → logprob: -9.283684730529785

Token 261: ' rng' (ID: 76666)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005889683496206999
    2. ' for' → logprob: -5.380889892578125
    3. 'range' → logprob: -7.630889892578125
    4. '   ' → logprob: -8.505889892578125
    5. 'def' → logprob: -8.630889892578125
    6. 'if' → logprob: -9.005889892578125
    7. 'r' → logprob: -10.130889892578125
    8. 'result' → logprob: -10.505889892578125
    9. 'x' → logprob: -10.880889892578125
    10. 'res' → logprob: -10.880889892578125

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3168356418609619
    2. '=' → logprob: -1.316835641860962
    3. 'ange' → logprob: -5.816835403442383
    4. '(range' → logprob: -8.941835403442383
    5. 'range' → logprob: -9.066835403442383
    6. '(' → logprob: -9.066835403442383
    7. '   ' → logprob: -9.316835403442383
    8. '=lambda' → logprob: -9.941835403442383
    9. '_range' → logprob: -10.066835403442383
    10. 'nge' → logprob: -11.316835403442383

Token 263: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0193297378718853
    2. ' range' → logprob: -4.39432954788208
    3. 'N' → logprob: -5.76932954788208
    4. '(range' → logprob: -6.39432954788208
    5. 'x' → logprob: -7.39432954788208
    6. 'lambda' → logprob: -8.269330024719238
    7. '(N' → logprob: -8.519330024719238
    8. 'it' → logprob: -8.894330024719238
    9. 'id' → logprob: -9.019330024719238
    10. '(' → logprob: -9.144330024719238

Token 264: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2023874819278717
    2. '(N' → logprob: -1.7023874521255493
    3. '(x' → logprob: -7.57738733291626
    4. '(-' → logprob: -8.702387809753418
    5. '((' → logprob: -9.327387809753418
    6. '(len' → logprob: -9.952387809753418
    7. '(n' → logprob: -9.952387809753418
    8. '1' → logprob: -10.452387809753418
    9. '(max' → logprob: -11.077387809753418
    10. 'N' → logprob: -11.702387809753418

Token 265: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021856512874364853
    2. '+' → logprob: -4.021856307983398
    3. ' +' → logprob: -5.771856307983398
    4. ' )' → logprob: -7.771856307983398
    5. ')
' → logprob: -9.146856307983398
    6. ',' → logprob: -10.521856307983398
    7. '))' → logprob: -11.771856307983398
    8. '   ' → logprob: -12.271856307983398
    9. '+)' → logprob: -12.396856307983398
    10. '-' → logprob: -12.521856307983398

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4418171455617994e-05
    2. ' ' → logprob: -10.375044822692871
    3. '2' → logprob: -11.500044822692871
    4. '   ' → logprob: -14.437544822692871
    5. 'x' → logprob: -14.750044822692871
    6. '0' → logprob: -14.875044822692871
    7. '```' → logprob: -15.187544822692871
    8. '3' → logprob: -15.312544822692871
    9. '
' → logprob: -16.000043869018555
    10. ')' → logprob: -16.000043869018555

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003003081073984504
    2. ')
' → logprob: -8.250300407409668
    3. ' )' → logprob: -11.000300407409668
    4. '   ' → logprob: -11.000300407409668
    5. ',' → logprob: -13.625300407409668
    6. '))' → logprob: -13.750300407409668
    7. '+' → logprob: -13.750300407409668
    8. ')

' → logprob: -13.875300407409668
    9. '-' → logprob: -15.375300407409668
    10. ' ' → logprob: -15.625300407409668

Token 268: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023806370794773102
    2. '   ' → logprob: -4.148806571960449
    3. ' for' → logprob: -4.898806571960449
    4. '    
' → logprob: -9.64880657196045
    5. 'def' → logprob: -10.39880657196045
    6. '
' → logprob: -10.64880657196045
    7. 'cnt' → logprob: -10.77380657196045
    8. 'result' → logprob: -10.89880657196045
    9. 'values' → logprob: -11.39880657196045
    10. 'res' → logprob: -11.52380657196045

Token 269: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004388942907098681
    2. ' for' → logprob: -8.250438690185547
    3. '   ' → logprob: -9.625438690185547
    4. 'def' → logprob: -10.250438690185547
    5. 's' → logprob: -11.375438690185547
    6. 'x' → logprob: -12.000438690185547
    7. 'if' → logprob: -12.000438690185547
    8. 'res' → logprob: -12.500438690185547
    9. 'sum' → logprob: -12.500438690185547
    10. 'result' → logprob: -12.625438690185547

Token 270: ' Generate' (ID: 33886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013138349168002605
    2. 'def' → logprob: -5.138138294219971
    3. 'vals' → logprob: -6.388138294219971
    4. 'from' → logprob: -6.763138294219971
    5. 'offset' → logprob: -7.138138294219971
    6. 's' → logprob: -7.388138294219971
    7. 'res' → logprob: -8.263138771057129
    8. 'seen' → logprob: -8.388138771057129
    9. 'diff' → logprob: -8.763138771057129
    10. 'cnt' → logprob: -9.013138771057129

Token 271: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0593770742416382
    2. ' for' → logprob: -1.8093770742416382
    3. ' all' → logprob: -2.4343771934509277
    4. 's' → logprob: -2.5593771934509277
    5. 'all' → logprob: -3.0593771934509277
    6. ' subsets' → logprob: -3.5593771934509277
    7. 'def' → logprob: -3.8093771934509277
    8. 'from' → logprob: -4.059377193450928
    9. 'values' → logprob: -4.059377193450928
    10. 'vals' → logprob: -4.184377193450928

Token 272: ' indices' (ID: 30378)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8787503242492676
    2. 'subset' → logprob: -1.7537503242492676
    3. ' subsets' → logprob: -1.8787503242492676
    4. 'sub' → logprob: -2.1287503242492676
    5. ' combinations' → logprob: -3.0037503242492676
    6. 'i' → logprob: -4.253750324249268
    7. 'comb' → logprob: -4.378750324249268
    8. 's' → logprob: -4.503750324249268
    9. 'mask' → logprob: -4.628750324249268
    10. ' subset' → logprob: -5.003750324249268

Token 273: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7875154614448547
    2. '   ' → logprob: -1.28751540184021
    3. 'for' → logprob: -1.41251540184021
    4. ',' → logprob: -5.287515640258789
    5. 'com' → logprob: -5.287515640258789
    6. ' combinations' → logprob: -5.287515640258789
    7. ' i' → logprob: -6.412515640258789
    8. 'i' → logprob: -6.787515640258789
    9. ' in' → logprob: -6.912515640258789
    10. 's' → logprob: -7.037515640258789

Token 274: ' then' (ID: 1815)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41457027196884155
    2. ' for' → logprob: -1.4145703315734863
    3. '   ' → logprob: -3.4145703315734863
    4. ' subsets' → logprob: -4.039570331573486
    5. 'from' → logprob: -4.914570331573486
    6. 's' → logprob: -5.414570331573486
    7. 'com' → logprob: -5.914570331573486
    8. 'values' → logprob: -6.039570331573486
    9. 'sub' → logprob: -6.164570331573486
    10. 'vals' → logprob: -6.164570331573486

Token 275: ' extract' (ID: 13424)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21507738530635834
    2. 'com' → logprob: -2.5900774002075195
    3. '   ' → logprob: -3.5900774002075195
    4. ' for' → logprob: -3.5900774002075195
    5. 'from' → logprob: -4.0900774002075195
    6. 'import' → logprob: -5.0900774002075195
    7. 'sub' → logprob: -5.3400774002075195
    8. 'it' → logprob: -5.3400774002075195
    9. 'combine' → logprob: -6.0900774002075195
    10. '
' → logprob: -6.2150774002075195

Token 276: ' mod' (ID: 1812)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3883310556411743
    2. 'com' → logprob: -1.6383310556411743
    3. 'for' → logprob: -1.7633310556411743
    4. '   ' → logprob: -2.6383309364318848
    5. ' subsets' → logprob: -2.7633309364318848
    6. ' for' → logprob: -3.7633309364318848
    7. ' combinations' → logprob: -3.7633309364318848
    8. 'container' → logprob: -3.7633309364318848
    9. 'sub' → logprob: -4.013330936431885
    10. 's' → logprob: -4.138330936431885

Token 277: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9207001328468323
    2. 'values' → logprob: -1.2957000732421875
    3. 'd' → logprob: -2.2957000732421875
    4. 'vals' → logprob: -2.6707000732421875
    5. 'ulo' → logprob: -3.7957000732421875
    6. 'x' → logprob: -4.0457000732421875
    7. 's' → logprob: -4.1707000732421875
    8. 'i' → logprob: -4.1707000732421875
    9. ' N' → logprob: -4.4207000732421875
    10. ' values' → logprob: -4.6707000732421875

Token 278: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.659193754196167
    2. '#' → logprob: -2.034193754196167
    3. 'for' → logprob: -2.284193754196167
    4. 'd' → logprob: -2.784193754196167
    5. 'rem' → logprob: -2.909193754196167
    6. 'res' → logprob: -3.159193754196167
    7. 'sum' → logprob: -3.284193754196167
    8. 'div' → logprob: -3.409193754196167
    9. 're' → logprob: -3.534193754196167
    10. 'N' → logprob: -3.534193754196167

Token 279: ' and' (ID: 326)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.8548026084899902
    2. '   ' → logprob: -2.1048026084899902
    3. 's' → logprob: -2.1048026084899902
    4. ',' → logprob: -2.3548026084899902
    5. ' =' → logprob: -2.8548026084899902
    6. 'ulo' → logprob: -2.8548026084899902
    7. '=' → logprob: -2.9798026084899902
    8. 'values' → logprob: -3.2298026084899902
    9. ' N' → logprob: -3.4798026084899902
    10. 'i' → logprob: -3.4798026084899902

Token 280: ' end' (ID: 1268)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8137194514274597
    2. 'end' → logprob: -1.8137195110321045
    3. 'offset' → logprob: -1.9387195110321045
    4. 'step' → logprob: -2.1887195110321045
    5. 'stop' → logprob: -3.5637195110321045
    6. 'length' → logprob: -3.6887195110321045
    7. 'sum' → logprob: -4.313719272613525
    8. 'count' → logprob: -4.438719272613525
    9. 'diff' → logprob: -4.938719272613525
    10. 'div' → logprob: -5.313719272613525

Token 281: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.304931402206421
    2. 'for' → logprob: -1.554931402206421
    3. 'values' → logprob: -1.679931402206421
    4. ' for' → logprob: -2.679931402206421
    5. 's' → logprob: -3.304931402206421
    6. 'indices' → logprob: -3.429931402206421
    7. 'ranges' → logprob: -3.554931402206421
    8. ' of' → logprob: -3.929931402206421
    9. ',' → logprob: -4.054931640625
    10. 'vals' → logprob: -4.179931640625

Token 282: ' reduce' (ID: 10389)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.720930278301239
    2. 'lambda' → logprob: -1.5959303379058838
    3. 'enumer' → logprob: -2.220930337905884
    4. 'x' → logprob: -2.720930337905884
    5. 'map' → logprob: -2.970930337905884
    6. 'for' → logprob: -4.470930099487305
    7. 'div' → logprob: -4.470930099487305
    8. 'id' → logprob: -4.470930099487305
    9. '(lambda' → logprob: -4.595930099487305
    10. 'zip' → logprob: -4.845930099487305

Token 283: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5907540321350098
    2. '(lambda' → logprob: -1.7157540321350098
    3. ',' → logprob: -3.0907540321350098
    4. ' for' → logprob: -3.3407540321350098
    5. 'for' → logprob: -3.8407540321350098
    6. '(
' → logprob: -4.09075403213501
    7. '(' → logprob: -4.09075403213501
    8. 'from' → logprob: -4.34075403213501
    9. '(range' → logprob: -4.34075403213501
    10. 'container' → logprob: -4.46575403213501

Token 284: ' lamb' (ID: 50348)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4718981683254242
    2. 'ft' → logprob: -1.2218981981277466
    3. 'filter' → logprob: -3.846898078918457
    4. 'map' → logprob: -3.971898078918457
    5. 'operator' → logprob: -4.346898078918457
    6. 'it' → logprob: -4.846898078918457
    7. ' lambda' → logprob: -5.971898078918457
    8. 'acc' → logprob: -6.096898078918457
    9. 'zip' → logprob: -6.096898078918457
    10. 'sum' → logprob: -6.596898078918457

Token 285: 'das' (ID: 28922)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.00032366468803957105
    2. 'd' → logprob: -8.250323295593262
    3. 'das' → logprob: -10.000323295593262
    4. 'dam' → logprob: -13.125323295593262
    5. 'dda' → logprob: -13.250323295593262
    6. 'xda' → logprob: -13.750323295593262
    7. 'uda' → logprob: -13.875323295593262
    8. 'ambda' → logprob: -13.875323295593262
    9. 'nda' → logprob: -14.000323295593262
    10. 'dal' → logprob: -14.000323295593262

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03847610205411911
    2. ',' → logprob: -4.91347599029541
    3. ' for' → logprob: -5.03847599029541
    4. 'indices' → logprob: -5.28847599029541
    5. 'for' → logprob: -5.41347599029541
    6. 'from' → logprob: -6.28847599029541
    7. '(' → logprob: -6.41347599029541
    8. 'container' → logprob: -6.91347599029541
    9. '
' → logprob: -7.03847599029541
    10. '(i' → logprob: -7.28847599029541

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08015315979719162
    2. ' for' → logprob: -3.580153226852417
    3. 'indices' → logprob: -3.955153226852417
    4. 'for' → logprob: -5.205152988433838
    5. 'idx' → logprob: -5.330152988433838
    6. ' indices' → logprob: -6.330152988433838
    7. 'from' → logprob: -6.455152988433838
    8. 'all' → logprob: -6.705152988433838
    9. ' from' → logprob: -7.080152988433838
    10. ' subsets' → logprob: -7.205152988433838

Token 288: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1985610723495483
    2. 'indices' → logprob: -1.3235610723495483
    3. 'idx' → logprob: -3.198561191558838
    4. 'inds' → logprob: -3.323561191558838
    5. '   ' → logprob: -3.448561191558838
    6. 'comb' → logprob: -3.573561191558838
    7. ' for' → logprob: -3.573561191558838
    8. 'vals' → logprob: -3.573561191558838
    9. 'mod' → logprob: -3.823561191558838
    10. 'all' → logprob: -4.073561191558838

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10833649337291718
    2. 'k' → logprob: -3.2333364486694336
    3. ' i' → logprob: -4.608336448669434
    4. 'm' → logprob: -5.233336448669434
    5. 'n' → logprob: -5.358336448669434
    6. 'c' → logprob: -5.483336448669434
    7. 't' → logprob: -5.483336448669434
    8. 'r' → logprob: -5.608336448669434
    9. 'j' → logprob: -5.733336448669434
    10. 'mask' → logprob: -5.733336448669434

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034844428300857544
    2. 'in' → logprob: -3.409844398498535
    3. 'n' → logprob: -7.159844398498535
    4. ',' → logprob: -8.159844398498535
    5. ' ' → logprob: -10.534844398498535
    6. 's' → logprob: -10.784844398498535
    7. 'range' → logprob: -11.284844398498535
    8. '   ' → logprob: -11.409844398498535
    9. 'r' → logprob: -11.784844398498535
    10. '_' → logprob: -11.972344398498535

Token 291: ' rng' (ID: 76666)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.010985450819134712
    2. 'r' → logprob: -5.135985374450684
    3. 'range' → logprob: -5.885985374450684
    4. ' rng' → logprob: -6.135985374450684
    5. '(r' → logprob: -11.010985374450684
    6. ' ' → logprob: -11.010985374450684
    7. 'rang' → logprob: -11.135985374450684
    8. '   ' → logprob: -11.385985374450684
    9. 'container' → logprob: -12.010985374450684
    10. ' range' → logprob: -12.010985374450684

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0799286738038063
    2. ':
' → logprob: -2.5799286365509033
    3. '       ' → logprob: -7.329928874969482
    4. ' :' → logprob: -8.829928398132324
    5. ',' → logprob: -9.204928398132324
    6. '   ' → logprob: -9.329928398132324
    7. ' :
' → logprob: -10.454928398132324
    8. '    ' → logprob: -12.704928398132324
    9. ':

' → logprob: -12.829928398132324
    10. '=' → logprob: -13.329928398132324

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011016701348125935
    2. ' container' → logprob: -5.011016845703125
    3. 'container' → logprob: -6.511016845703125
    4. ' s' → logprob: -6.886016845703125
    5. ' for' → logprob: -7.511016845703125
    6. 's' → logprob: -9.011016845703125
    7. ' t' → logprob: -9.386016845703125
    8. '   ' → logprob: -9.511016845703125
    9. ' if' → logprob: -10.011016845703125
    10. 'n' → logprob: -10.073516845703125

Token 294: ' mod' (ID: 1812)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.5193719863891602
    2. '   ' → logprob: -1.8943719863891602
    3. 'mod' (adapté à ' mod') → logprob: -2.26937198638916
    4. ' container' → logprob: -2.39437198638916
    5. 'container' → logprob: -2.39437198638916
    6. 'v' → logprob: -2.51937198638916
    7. 'r' → logprob: -3.14437198638916
    8. ' val' → logprob: -3.26937198638916
    9. 'm' → logprob: -3.26937198638916
    10. ' mod' → logprob: -4.14437198638916

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5414840579032898
    2. '=' → logprob: -0.9164840579032898
    3. '_val' → logprob: -4.4164838790893555
    4. '=i' → logprob: -5.7914838790893555
    5. '_value' → logprob: -7.0414838790893555
    6. ',' → logprob: -7.4164838790893555
    7. 'val' → logprob: -7.6664838790893555
    8. '_' → logprob: -8.291483879089355
    9. 'ulo' → logprob: -8.916483879089355
    10. '   ' → logprob: -8.916483879089355

Token 296: ' pow' (ID: 9779)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29562291502952576
    2. '(i' → logprob: -1.5456229448318481
    3. '((' → logprob: -4.420622825622559
    4. ' i' → logprob: -4.545622825622559
    5. '(x' → logprob: -5.045622825622559
    6. ' (' → logprob: -5.295622825622559
    7. 'x' → logprob: -5.295622825622559
    8. 'abs' → logprob: -6.295622825622559
    9. '(abs' → logprob: -7.295622825622559
    10. '(' → logprob: -8.795622825622559

Token 297: '((' (ID: 2054)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6745027303695679
    2. '(i' → logprob: -0.9245027303695679
    3. 'd' → logprob: -3.1745028495788574
    4. '(' → logprob: -4.174502849578857
    5. '(-' → logprob: -4.299502849578857
    6. 'i' → logprob: -4.424502849578857
    7. '2' → logprob: -5.674502849578857
    8. '((' → logprob: -6.174502849578857
    9. '(N' → logprob: -6.549502849578857
    10. 'mod' → logprob: -6.674502849578857

Token 298: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17724786698818207
    2. 'd' → logprob: -2.3022477626800537
    3. '2' → logprob: -3.1772477626800537
    4. '(i' → logprob: -4.677248001098633
    5. '10' → logprob: -5.552248001098633
    6. 'N' → logprob: -5.927248001098633
    7. '-' → logprob: -6.927248001098633
    8. 'x' → logprob: -7.052248001098633
    9. '(d' → logprob: -7.552248001098633
    10. 'mod' → logprob: -7.677248001098633

Token 299: ' *' (ID: 425)
  Prédit: '+d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.5469416379928589
    2. '+' → logprob: -1.4219416379928589
    3. ' +' → logprob: -1.7969416379928589
    4. 'd' → logprob: -5.546941757202148
    5. '+i' → logprob: -5.671941757202148
    6. '%d' → logprob: -5.796941757202148
    7. '-' → logprob: -6.921941757202148
    8. ' -' → logprob: -7.796941757202148
    9. '%' → logprob: -7.796941757202148
    10. ' ' → logprob: -8.296941757202148

Token 300: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6408286690711975
    2. 'i' → logprob: -0.7658286690711975
    3. '(i' → logprob: -6.140828609466553
    4. ' i' → logprob: -6.890828609466553
    5. '2' → logprob: -7.140828609466553
    6. '   ' → logprob: -7.265828609466553
    7. ' d' → logprob: -7.265828609466553
    8. 'N' → logprob: -7.640828609466553
    9. 'pow' → logprob: -7.640828609466553
    10. 'mod' → logprob: -8.390829086303711

Token 301: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36762484908103943
    2. ')%' → logprob: -1.2426248788833618
    3. '),' → logprob: -4.867624759674072
    4. '%' → logprob: -5.117624759674072
    5. ' )' → logprob: -5.867624759674072
    6. '+' → logprob: -6.867624759674072
    7. ' %' → logprob: -7.992624759674072
    8. '%d' → logprob: -8.11762523651123
    9. '   ' → logprob: -9.11762523651123
    10. '-' → logprob: -9.24262523651123

Token 302: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5019182562828064
    2. ',d' → logprob: -1.0019183158874512
    3. '%d' → logprob: -4.001918315887451
    4. ' ,' → logprob: -5.126918315887451
    5. '%' → logprob: -6.251918315887451
    6. ',i' → logprob: -8.376917839050293
    7. ' %' → logprob: -8.376917839050293
    8. 'd' → logprob: -8.751917839050293
    9. ',r' → logprob: -9.376917839050293
    10. '   ' → logprob: -9.501917839050293

Token 303: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006181967910379171
    2. ' d' → logprob: -7.750617980957031
    3. '(d' → logprob: -9.375617980957031
    4. 'N' → logprob: -10.250617980957031
    5. '(' → logprob: -10.750617980957031
    6. '   ' → logprob: -11.500617980957031
    7. '(N' → logprob: -11.625617980957031
    8. ' (' → logprob: -11.875617980957031
    9. ' ' → logprob: -12.125617980957031
    10. '((' → logprob: -12.625617980957031

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00614848081022501
    2. ',d' → logprob: -5.256148338317871
    3. ' ,' → logprob: -7.381148338317871
    4. 'd' → logprob: -9.631148338317871
    5. ')' → logprob: -9.881148338317871
    6. ',i' → logprob: -10.256148338317871
    7. '),' → logprob: -10.631148338317871
    8. ',len' → logprob: -10.881148338317871
    9. ',N' → logprob: -11.006148338317871
    10. '   ' → logprob: -11.256148338317871

Token 305: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008732995949685574
    2. ' ' → logprob: -4.758732795715332
    3. '0' → logprob: -9.883732795715332
    4. 'i' → logprob: -11.258732795715332
    5. 'N' → logprob: -11.383732795715332
    6. '3' → logprob: -11.508732795715332
    7. '1' → logprob: -11.633732795715332
    8. 'd' → logprob: -12.258732795715332
    9. '   ' → logprob: -12.508732795715332
    10. ' i' → logprob: -13.258732795715332

Token 306: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00027706706896424294
    2. ' ' → logprob: -8.875277519226074
    3. '0' → logprob: -9.625277519226074
    4. '3' → logprob: -10.875277519226074
    5. 'i' → logprob: -11.125277519226074
    6. 'N' → logprob: -11.125277519226074
    7. 'd' → logprob: -11.875277519226074
    8. '1' → logprob: -12.375277519226074
    9. '   ' → logprob: -13.500277519226074
    10. 'x' → logprob: -13.625277519226074

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16955122351646423
    2. '2' → logprob: -2.669551134109497
    3. ')' → logprob: -3.544551134109497
    4. ' if' → logprob: -4.419551372528076
    5. '3' → logprob: -4.544551372528076
    6. '1' → logprob: -4.794551372528076
    7. ' ,' → logprob: -5.419551372528076
    8. '+' → logprob: -5.419551372528076
    9. 'if' → logprob: -5.544551372528076
    10. ',i' → logprob: -5.544551372528076

Token 308: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11212687939405441
    2. '1' → logprob: -3.1121268272399902
    3. '10' → logprob: -4.11212682723999
    4. 'None' → logprob: -4.36212682723999
    5. 'N' → logprob: -4.86212682723999
    6. '2' → logprob: -4.98712682723999
    7. ')' → logprob: -5.86212682723999
    8. 'int' → logprob: -6.11212682723999
    9. '0' → logprob: -6.23712682723999
    10. '9' → logprob: -6.23712682723999

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.029847231227905e-05
    2. ' )' → logprob: -10.000080108642578
    3. ')
' → logprob: -10.625080108642578
    4. ')d' → logprob: -13.250080108642578
    5. ')%' → logprob: -13.375080108642578
    6. ')#' → logprob: -13.625080108642578
    7. '))' → logprob: -14.125080108642578
    8. ',' → logprob: -14.250080108642578
    9. ')`' → logprob: -14.750080108642578
    10. ')

' → logprob: -14.750080108642578

Token 310: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05253983289003372
    2. '<|end|>' → logprob: -3.052539825439453
    3. ' )' → logprob: -6.802539825439453
    4. '%' → logprob: -6.927539825439453
    5. '
' → logprob: -7.052539825439453
    6. '<|end|>' → logprob: -8.677539825439453
    7. ' %' → logprob: -9.177539825439453
    8. '#' → logprob: -9.177539825439453
    9. '       ' → logprob: -9.302539825439453
    10. ' ' → logprob: -9.427539825439453

Token 311: ' st' (ID: 420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5271573662757874
    2. 'container' → logprob: -1.5271573066711426
    3. 'start' → logprob: -3.0271573066711426
    4. 'mod' → logprob: -3.2771573066711426
    5. ')' → logprob: -3.6521573066711426
    6. ' container' → logprob: -3.7771573066711426
    7. '[' → logprob: -5.152157306671143
    8. '<|end|>' → logprob: -5.277157306671143
    9. ' mod' → logprob: -5.527157306671143
    10. 'Type' → logprob: -5.902157306671143

Token 312: ',' (ID: 11)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.17172911763191223
    2. '=' → logprob: -2.04672908782959
    3. 'a' → logprob: -4.42172908782959
    4. ' =' → logprob: -4.54672908782959
    5. 'ar' → logprob: -5.29672908782959
    6. 'arts' → logprob: -7.67172908782959
    7. ' ' → logprob: -8.79672908782959
    8. 'r' → logprob: -8.92172908782959
    9. ',' → logprob: -9.17172908782959
    10. '   ' → logprob: -9.67172908782959

Token 313: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4293617010116577
    2. 'en' → logprob: -1.6793617010116577
    3. 'x' → logprob: -2.9293618202209473
    4. 'i' → logprob: -3.0543618202209473
    5. 'end' → logprob: -3.9293618202209473
    6. ' ed' → logprob: -4.679361820220947
    7. '(i' → logprob: -4.929361820220947
    8. '(x' → logprob: -5.179361820220947
    9. 'e' → logprob: -5.679361820220947
    10. 'N' → logprob: -5.679361820220947

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759435892105103
    2. ' =' → logprob: -0.8259435892105103
    3. ',' → logprob: -12.700943946838379
    4. ' ' → logprob: -14.325943946838379
    5. '   ' → logprob: -15.450943946838379
    6. '=int' → logprob: -16.450942993164062
    7. '=i' → logprob: -16.575942993164062
    8. '    ' → logprob: -17.450942993164062
    9. '  ' → logprob: -17.700942993164062
    10. '=lambda' → logprob: -18.075942993164062

Token 315: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9458916783332825
    2. '(x' → logprob: -1.1958916187286377
    3. 'i' → logprob: -2.4458916187286377
    4. '(i' → logprob: -2.6958916187286377
    5. '0' → logprob: -2.9458916187286377
    6. '(' → logprob: -3.0708916187286377
    7. ' (' → logprob: -4.070891857147217
    8. ' x' → logprob: -4.445891857147217
    9. 'id' → logprob: -5.195891857147217
    10. ' i' → logprob: -5.320891857147217

Token 316: 'lambda' (ID: 35280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9023065567016602
    2. 'i' → logprob: -1.4023065567016602
    3. '0' → logprob: -1.7773065567016602
    4. '(x' → logprob: -2.40230655670166
    5. '(i' → logprob: -3.27730655670166
    6. '(' → logprob: -3.90230655670166
    7. ' x' → logprob: -5.15230655670166
    8. '((' → logprob: -5.27730655670166
    9. ' (' → logprob: -5.52730655670166
    10. 'id' → logprob: -5.65230655670166

Token 317: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39446312189102173
    2. 'x' → logprob: -2.519463062286377
    3. 'a' → logprob: -3.019463062286377
    4. 'j' → logprob: -3.519463062286377
    5. 'z' → logprob: -3.769463062286377
    6. 't' → logprob: -3.769463062286377
    7. 'lambda' → logprob: -4.019463062286377
    8. 's' → logprob: -4.144463062286377
    9. 'k' → logprob: -4.144463062286377
    10. 'n' → logprob: -4.519463062286377

Token 318: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.465751588344574
    2. ',b' → logprob: -1.7157516479492188
    3. ':' → logprob: -1.9657516479492188
    4. ',a' → logprob: -3.8407516479492188
    5. 'a' → logprob: -4.340751647949219
    6. ':a' → logprob: -5.340751647949219
    7. ',i' → logprob: -5.840751647949219
    8. ':i' → logprob: -6.340751647949219
    9. ',x' → logprob: -6.715751647949219
    10. ',n' → logprob: -6.965751647949219

Token 319: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002563291694968939
    2. ':(' → logprob: -6.5025634765625
    3. ':a' → logprob: -7.6275634765625
    4. ' :' → logprob: -7.7525634765625
    5. ',' → logprob: -9.5025634765625
    6. 'a' → logprob: -10.7525634765625
    7. '=' → logprob: -11.3775634765625
    8. ':
' → logprob: -12.0025634765625
    9. ' :(' → logprob: -12.2525634765625
    10. ',a' → logprob: -12.3775634765625

Token 320: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2673949599266052
    2. ' (' → logprob: -1.76739501953125
    3. '(' → logprob: -3.76739501953125
    4. '(id' → logprob: -4.26739501953125
    5. '((' → logprob: -5.14239501953125
    6. '(min' → logprob: -5.51739501953125
    7. '(b' → logprob: -5.76739501953125
    8. 'sorted' → logprob: -5.89239501953125
    9. '(sorted' → logprob: -6.26739501953125
    10. 'a' → logprob: -6.39239501953125

Token 321: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6252251863479614
    2. '(min' → logprob: -1.5002251863479614
    3. 'a' → logprob: -1.8752251863479614
    4. 'min' → logprob: -2.500225067138672
    5. '   ' → logprob: -6.500225067138672
    6. ' (' → logprob: -6.500225067138672
    7. '(b' → logprob: -7.000225067138672
    8. ' min' → logprob: -7.750225067138672
    9. '((' → logprob: -7.875225067138672
    10. ' a' → logprob: -8.125225067138672

Token 322: '*d' (ID: 81685)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5137628316879272
    2. '%d' → logprob: -1.6387628316879272
    3. '%b' → logprob: -1.8887628316879272
    4. ',' → logprob: -3.263762950897217
    5. ',b' → logprob: -4.388762950897217
    6. '%' → logprob: -6.138762950897217
    7. ' if' → logprob: -6.388762950897217
    8. '+b' → logprob: -7.888762950897217
    9. ',d' → logprob: -8.138762474060059
    10. ' +' → logprob: -8.388762474060059

Token 323: ' +' (ID: 659)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.36131736636161804
    2. ',' → logprob: -1.8613173961639404
    3. ' +' → logprob: -2.6113173961639404
    4. ',b' → logprob: -3.7363173961639404
    5. '+' → logprob: -3.8613173961639404
    6. '*b' → logprob: -4.611317157745361
    7. '+a' → logprob: -4.986317157745361
    8. '*a' → logprob: -6.111317157745361
    9. ')' → logprob: -6.486317157745361
    10. '+(' → logprob: -6.861317157745361

Token 324: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.017671383917331696
    2. 'min' → logprob: -5.017671585083008
    3. 'a' → logprob: -5.642671585083008
    4. ' b' → logprob: -5.767671585083008
    5. '0' → logprob: -7.017671585083008
    6. 'x' → logprob: -7.017671585083008
    7. '(min' → logprob: -7.517671585083008
    8. '(b' → logprob: -7.642671585083008
    9. ' min' → logprob: -7.767671585083008
    10. '(a' → logprob: -8.642671585083008

Token 325: 'x' (ID: 87)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.031982097774744034
    2. 'a' → logprob: -4.281981945037842
    3. 'x' → logprob: -5.406981945037842
    4. '(b' → logprob: -5.656981945037842
    5. '((' → logprob: -6.156981945037842
    6. '(a' → logprob: -6.406981945037842
    7. '0' → logprob: -6.906981945037842
    8. 'min' → logprob: -7.031981945037842
    9. 'i' → logprob: -7.156981945037842
    10. ' b' → logprob: -7.281981945037842

Token 326: '-d' (ID: 2469)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.19471101462841034
    2. ' *' → logprob: -2.4447109699249268
    3. '*' → logprob: -3.3197109699249268
    4. '*b' → logprob: -3.3197109699249268
    5. 'i' → logprob: -4.819711208343506
    6. '%' → logprob: -5.819711208343506
    7. '*a' → logprob: -6.569711208343506
    8. '%b' → logprob: -6.819711208343506
    9. 'b' → logprob: -7.194711208343506
    10. '%i' → logprob: -7.444711208343506

Token 327: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8005911111831665
    2. ')%' → logprob: -1.8005911111831665
    3. ')*' → logprob: -1.9255911111831665
    4. '*i' → logprob: -2.050590991973877
    5. '*b' → logprob: -3.175590991973877
    6. '))' → logprob: -4.175590991973877
    7. '*' → logprob: -4.300590991973877
    8. '%' → logprob: -4.800590991973877
    9. '*a' → logprob: -4.800590991973877
    10. ')))' → logprob: -4.925590991973877

Token 328: 'i' (ID: 72)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03942018747329712
    2. 'i' → logprob: -3.5394201278686523
    3. 'min' → logprob: -5.289420127868652
    4. ' b' → logprob: -6.539420127868652
    5. '((' → logprob: -7.664420127868652
    6. 'a' → logprob: -7.664420127868652
    7. '(i' → logprob: -7.914420127868652
    8. 'id' → logprob: -8.039420127868652
    9. ' min' → logprob: -8.039420127868652
    10. '(b' → logprob: -8.164420127868652

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05493587628006935
    2. ' ,' → logprob: -3.804935932159424
    3. ',a' → logprob: -4.804935932159424
    4. ',b' → logprob: -4.929935932159424
    5. ' %' → logprob: -5.429935932159424
    6. '%b' → logprob: -5.929935932159424
    7. ')' → logprob: -6.054935932159424
    8. ')%' → logprob: -6.554935932159424
    9. '%' → logprob: -6.804935932159424
    10. ',
' → logprob: -7.304935932159424

Token 330: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.35635140538215637
    2. 'a' → logprob: -1.731351375579834
    3. ' b' → logprob: -2.856351375579834
    4. ' a' → logprob: -4.106351375579834
    5. '(a' → logprob: -4.606351375579834
    6. ' (' → logprob: -4.731351375579834
    7. '         ' → logprob: -5.856351375579834
    8. '(b' → logprob: -5.856351375579834
    9. '    ' → logprob: -5.856351375579834
    10. '          ' → logprob: -5.981351375579834

Token 331: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.07436138391494751
    2. 'd' → logprob: -3.8243613243103027
    3. '*a' → logprob: -4.074361324310303
    4. '+d' → logprob: -4.949361324310303
    5. ')' → logprob: -5.449361324310303
    6. ' *' → logprob: -5.824361324310303
    7. '+' → logprob: -5.824361324310303
    8. '))' → logprob: -6.074361324310303
    9. '*x' → logprob: -6.199361324310303
    10. '*' → logprob: -6.324361324310303

Token 332: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38818424940109253
    2. ' +' → logprob: -1.6381843090057373
    3. '+d' → logprob: -2.8881843090057373
    4. '))' → logprob: -3.8881843090057373
    5. '+x' → logprob: -4.138184070587158
    6. '+a' → logprob: -4.388184070587158
    7. '-' → logprob: -5.263184070587158
    8. ' -' → logprob: -5.638184070587158
    9. '))(' → logprob: -5.888184070587158
    10. '+i' → logprob: -6.013184070587158

Token 333: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0800359696149826
    2. 'x' → logprob: -3.205035924911499
    3. ' (' → logprob: -3.455035924911499
    4. ' x' → logprob: -5.580036163330078
    5. '(' → logprob: -8.205036163330078
    6. ' ' → logprob: -9.330036163330078
    7. '(i' → logprob: -9.330036163330078
    8. 'i' → logprob: -9.455036163330078
    9. '0' → logprob: -9.580036163330078
    10. '(a' → logprob: -9.830036163330078

Token 334: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16459183394908905
    2. '(x' → logprob: -1.9145917892456055
    3. ' x' → logprob: -6.2895917892456055
    4. ' (' → logprob: -7.4145917892456055
    5. 'd' → logprob: -7.5395917892456055
    6. 'i' → logprob: -7.9145917892456055
    7. '1' → logprob: -8.414591789245605
    8. '(' → logprob: -8.414591789245605
    9. '(d' → logprob: -9.414591789245605
    10. '0' → logprob: -9.414591789245605

Token 335: '-d' (ID: 2469)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.518096923828125
    2. '-d' → logprob: -1.268096923828125
    3. '*i' → logprob: -2.768096923828125
    4. '*(' → logprob: -3.518096923828125
    5. '*' → logprob: -4.643096923828125
    6. '-' → logprob: -5.143096923828125
    7. ')*' → logprob: -5.268096923828125
    8. ' *' → logprob: -5.893096923828125
    9. '+d' → logprob: -6.643096923828125
    10. '+' → logprob: -6.768096923828125

Token 336: ')*' (ID: 11043)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.09123410284519196
    2. '*' → logprob: -2.4662342071533203
    3. ')*' → logprob: -6.59123420715332
    4. ' *' → logprob: -7.21623420715332
    5. ')' → logprob: -9.34123420715332
    6. '*(' → logprob: -10.46623420715332
    7. '*j' → logprob: -11.59123420715332
    8. ' ' → logprob: -11.96623420715332
    9. '*a' → logprob: -11.96623420715332
    10. 'i' → logprob: -12.21623420715332

Token 337: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10931159555912018
    2. '(i' → logprob: -2.359311580657959
    3. ' (' → logprob: -5.609311580657959
    4. ' i' → logprob: -5.984311580657959
    5. '(N' → logprob: -6.234311580657959
    6. '(' → logprob: -7.859311580657959
    7. ')' → logprob: -8.859312057495117
    8. 'N' → logprob: -10.046812057495117
    9. '*i' → logprob: -10.484312057495117
    10. '   ' → logprob: -10.546812057495117

Token 338: '))' (ID: 915)
  Prédit: '))('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))(' → logprob: -0.005626204423606396
    2. '))' → logprob: -5.255626201629639
    3. '   ' → logprob: -8.630626678466797
    4. '))[' → logprob: -9.380626678466797
    5. '       ' → logprob: -9.630626678466797
    6. ' ))' → logprob: -10.630626678466797
    7. ')' → logprob: -11.005626678466797
    8. ')(' → logprob: -12.130626678466797
    9. ' ' → logprob: -12.255626678466797
    10. '           ' → logprob: -12.505626678466797

Token 339: '(
' (ID: 1607)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.6081340909004211
    2. '(x' → logprob: -1.6081340312957764
    3. '(i' → logprob: -2.4831340312957764
    4. '(d' → logprob: -2.6081340312957764
    5. '(' → logprob: -2.8581340312957764
    6. '(a' → logprob: -3.7331340312957764
    7. '(ed' → logprob: -4.7331342697143555
    8. '(mod' → logprob: -5.1081342697143555
    9. '(b' → logprob: -6.8581342697143555
    10. '(r' → logprob: -7.6081342697143555

Token 340: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08760955184698105
    2. 'pow' → logprob: -4.087609767913818
    3. '(' → logprob: -4.462609767913818
    4. '(x' → logprob: -4.587609767913818
    5. 'mod' → logprob: -4.837609767913818
    6. 'i' → logprob: -4.962609767913818
    7. 'min' → logprob: -5.212609767913818
    8. 'x' → logprob: -5.337609767913818
    9. '(i' → logprob: -5.462609767913818
    10. '-' → logprob: -5.962609767913818

Token 341: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16675163805484772
    2. 'min' → logprob: -2.7917516231536865
    3. 'pow' → logprob: -3.7917516231536865
    4. 'x' → logprob: -4.291751861572266
    5. '-' → logprob: -4.666751861572266
    6. 'mod' → logprob: -4.791751861572266
    7. 'i' → logprob: -4.791751861572266
    8. '(' (adapté à ' (') → logprob: -5.166751861572266
    9. '(x' → logprob: -5.166751861572266
    10. '1' → logprob: -5.666751861572266

Token 342: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6727213859558105
    2. '(x' → logprob: -2.1727213859558105
    3. 'pow' → logprob: -2.4227213859558105
    4. 'i' → logprob: -2.5477213859558105
    5. 'min' → logprob: -3.0477213859558105
    6. 'x' → logprob: -3.1727213859558105
    7. 'mod' → logprob: -3.6727213859558105
    8. '(' → logprob: -3.7977213859558105
    9. '(i' → logprob: -3.9227213859558105
    10. '((' → logprob: -4.6727213859558105

Token 343: '*(' (ID: 14793)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8560718297958374
    2. '%' → logprob: -1.6060718297958374
    3. '+' → logprob: -1.6060718297958374
    4. ' +' → logprob: -2.856071949005127
    5. ',' → logprob: -2.981071949005127
    6. '%d' → logprob: -4.106071949005127
    7. ')' → logprob: -4.356071949005127
    8. '-' → logprob: -4.731071949005127
    9. ' -' → logprob: -5.481071949005127
    10. ' ' → logprob: -5.731071949005127

Token 344: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005539547186344862
    2. '(i' → logprob: -6.005539417266846
    3. 'N' → logprob: -7.380539417266846
    4. '0' → logprob: -7.380539417266846
    5. 'x' → logprob: -7.380539417266846
    6. 'd' → logprob: -7.755539417266846
    7. '1' → logprob: -8.255539894104004
    8. '-' → logprob: -8.380539894104004
    9. '(N' → logprob: -10.130539894104004
    10. '2' → logprob: -10.255539894104004

Token 345: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2844521701335907
    2. '+' → logprob: -1.409452199935913
    3. ' -' → logprob: -6.159451961517334
    4. ')' → logprob: -7.784451961517334
    5. ' +' → logprob: -7.784451961517334
    6. ')+' → logprob: -9.659452438354492
    7. '1' → logprob: -9.784452438354492
    8. '   ' → logprob: -9.909452438354492
    9. '```' → logprob: -10.909452438354492
    10. ' ' → logprob: -10.971952438354492

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013953536108601838
    2. ' ' → logprob: -9.500139236450195
    3. '0' → logprob: -11.000139236450195
    4. '   ' → logprob: -11.375139236450195
    5. ')' → logprob: -11.500139236450195
    6. '2' → logprob: -11.625139236450195
    7. '
' → logprob: -12.625139236450195
    8. '3' → logprob: -13.125139236450195
    9. '  ' → logprob: -13.125139236450195
    10. '...' → logprob: -13.125139236450195

Token 347: '))' (ID: 915)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.26249462366104126
    2. ')' → logprob: -1.5124945640563965
    3. ')>>' → logprob: -5.1374945640563965
    4. ' )' → logprob: -6.0124945640563965
    5. '//' → logprob: -6.2624945640563965
    6. '   ' → logprob: -9.262495040893555
    7. ' //' → logprob: -9.387495040893555
    8. '))' → logprob: -11.137495040893555
    9. '>>' → logprob: -11.262495040893555
    10. '       ' → logprob: -11.262495040893555

Token 348: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16519543528556824
    2. ' //' → logprob: -1.9151954650878906
    3. ',' → logprob: -5.915195465087891
    4. ')//' → logprob: -7.665195465087891
    5. ')' → logprob: -7.790195465087891
    6. '   ' → logprob: -7.915195465087891
    7. ',//' → logprob: -8.29019546508789
    8. '>>' → logprob: -8.54019546508789
    9. ' ' → logprob: -8.66519546508789
    10. '       ' → logprob: -8.79019546508789

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.125046730041504
    3. '   ' → logprob: -12.250046730041504
    4. '1' → logprob: -14.500046730041504
    5. '4' → logprob: -15.500046730041504
    6. '  ' → logprob: -15.625046730041504
    7. '    ' → logprob: -15.937546730041504
    8. '

' → logprob: -16.937545776367188
    9. '           ' → logprob: -17.187545776367188
    10. '3' → logprob: -17.187545776367188

Token 350: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017131322994828224
    2. ',i' → logprob: -4.392131328582764
    3. ' ,' → logprob: -6.142131328582764
    4. ',
' → logprob: -7.017131328582764
    5. '+' → logprob: -7.892131328582764
    6. '           ' → logprob: -8.267130851745605
    7. ' +' → logprob: -8.642130851745605
    8. '       ' → logprob: -8.892130851745605
    9. '   ' → logprob: -9.017130851745605
    10. ' -' → logprob: -9.892130851745605

Token 351: '           ' (ID: 352)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6226029992103577
    2. '(i' → logprob: -1.872602939605713
    3. ' ((' → logprob: -2.122602939605713
    4. ' (' → logprob: -2.247602939605713
    5. '   ' → logprob: -3.622602939605713
    6. 'i' → logprob: -3.747602939605713
    7. 'N' → logprob: -4.747602939605713
    8. '(N' → logprob: -5.122602939605713
    9. ' i' → logprob: -5.247602939605713
    10. ' ' → logprob: -5.372602939605713

Token 352: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5649076104164124
    2. '(i' → logprob: -1.5649075508117676
    3. ' ((' → logprob: -2.5649075508117676
    4. ' (' → logprob: -2.9399075508117676
    5. 'i' → logprob: -3.0649075508117676
    6. '   ' → logprob: -4.064907550811768
    7. '(N' → logprob: -4.814907550811768
    8. ' i' → logprob: -5.189907550811768
    9. 'N' → logprob: -5.314907550811768
    10. ' ' → logprob: -5.564907550811768

Token 353: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6887533664703369
    2. '(i' → logprob: -0.9387533664703369
    3. 'N' → logprob: -2.938753366470337
    4. '(N' → logprob: -3.563753366470337
    5. '((' → logprob: -4.188753128051758
    6. ' (' → logprob: -5.563753128051758
    7. '   ' → logprob: -5.938753128051758
    8. ' i' → logprob: -6.438753128051758
    9. '(' → logprob: -7.438753128051758
    10. ' ' → logprob: -7.938753128051758

Token 354: '*(' (ID: 14793)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005658571142703295
    2. ' +' → logprob: -5.5056586265563965
    3. '*(' → logprob: -6.6306586265563965
    4. '*' → logprob: -9.880658149719238
    5. '+
' → logprob: -10.005658149719238
    6. ')*(' → logprob: -10.130658149719238
    7. '+(' → logprob: -10.380658149719238
    8. ')' → logprob: -10.880658149719238
    9. '-' → logprob: -11.005658149719238
    10. '   ' → logprob: -11.380658149719238

Token 355: 'N' (ID: 45)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008577931672334671
    2. 'N' → logprob: -5.133577823638916
    3. '2' → logprob: -6.883577823638916
    4. '1' → logprob: -7.508577823638916
    5. '(i' → logprob: -7.508577823638916
    6. '   ' → logprob: -8.758578300476074
    7. '-' → logprob: -9.258578300476074
    8. '(N' → logprob: -9.383578300476074
    9. ' i' → logprob: -9.758578300476074
    10. ')' → logprob: -10.508578300476074

Token 356: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14754566550254822
    2. ')' → logprob: -2.147545576095581
    3. '-' → logprob: -5.14754581451416
    4. '))' → logprob: -5.27254581451416
    5. ')+' → logprob: -5.64754581451416
    6. ')))' → logprob: -6.14754581451416
    7. '   ' → logprob: -6.64754581451416
    8. ' +' → logprob: -8.14754581451416
    9. '-N' → logprob: -8.39754581451416
    10. '-i' → logprob: -8.39754581451416

Token 357: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.257005512714386
    2. 'i' → logprob: -1.8820054531097412
    3. 'N' → logprob: -2.632005453109741
    4. '(' → logprob: -6.88200569152832
    5. '(N' → logprob: -8.00700569152832
    6. '(i' → logprob: -8.13200569152832
    7. ')' → logprob: -8.63200569152832
    8. '0' → logprob: -9.13200569152832
    9. '2' → logprob: -9.13200569152832
    10. '...' → logprob: -9.38200569152832

Token 358: '-i' (ID: 18499)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1485498696565628
    2. '+' → logprob: -2.023549795150757
    3. '-' → logprob: -6.023550033569336
    4. ')' → logprob: -6.023550033569336
    5. ' +' → logprob: -7.648550033569336
    6. '2' → logprob: -8.398550033569336
    7. '```' → logprob: -9.523550033569336
    8. '   ' → logprob: -9.648550033569336
    9. ' -' → logprob: -9.648550033569336
    10. ' ' → logprob: -9.898550033569336

Token 359: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4097212255001068
    2. '))' → logprob: -1.4097212553024292
    3. ')' → logprob: -2.9097211360931396
    4. ')//' → logprob: -3.5347211360931396
    5. '-' → logprob: -5.284721374511719
    6. '   ' → logprob: -6.784721374511719
    7. ' +' → logprob: -7.784721374511719
    8. ' ' → logprob: -8.034721374511719
    9. '//' → logprob: -8.534721374511719
    10. '1' → logprob: -8.534721374511719

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '2' → logprob: -12.000007629394531
    3. ' ' → logprob: -14.500007629394531
    4. '   ' → logprob: -15.125007629394531
    5. '
' → logprob: -15.250007629394531
    6. ')' → logprob: -16.25000762939453
    7. '3' → logprob: -16.87500762939453
    8. '0' → logprob: -17.00000762939453
    9. '```' → logprob: -17.37500762939453
    10. '  ' → logprob: -17.75000762939453

Token 361: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31462961435317993
    2. ')//' → logprob: -1.3146295547485352
    3. ')' → logprob: -6.814629554748535
    4. ' )' → logprob: -8.939629554748535
    5. ' ' → logprob: -9.939629554748535
    6. '   ' → logprob: -10.439629554748535
    7. ' ))' → logprob: -10.814629554748535
    8. '//' → logprob: -11.064629554748535
    9. ')))' → logprob: -11.564629554748535
    10. ')>>' → logprob: -13.064629554748535

Token 362: '//' (ID: 393)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.05549055337905884
    2. ')' → logprob: -3.430490493774414
    3. '//' → logprob: -3.930490493774414
    4. '()' → logprob: -7.430490493774414
    5. '())' → logprob: -7.555490493774414
    6. '   ' → logprob: -7.930490493774414
    7. ' )' → logprob: -8.055490493774414
    8. ' ' → logprob: -9.805490493774414
    9. ' //' → logprob: -10.305490493774414
    10. ')>>' → logprob: -10.305490493774414

Token 363: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.125018119812012
    3. '   ' → logprob: -13.125018119812012
    4. '۲' → logprob: -14.875018119812012
    5. '  ' → logprob: -15.250018119812012
    6. '1' → logprob: -15.750018119812012
    7. '    ' → logprob: -16.687517166137695
    8. '```' → logprob: -16.750017166137695
    9. '٢' → logprob: -17.000017166137695
    10. '२' → logprob: -17.000017166137695

Token 364: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03381028771400452
    2. '       ' → logprob: -3.4088103771209717
    3. '   ' → logprob: -9.40881061553955
    4. ' )' → logprob: -10.53381061553955
    5. '           ' → logprob: -11.28381061553955
    6. ')))' → logprob: -11.40881061553955
    7. '))' → logprob: -11.53381061553955
    8. ')
' → logprob: -11.78381061553955
    9. ')}' → logprob: -12.03381061553955
    10. '),' → logprob: -12.78381061553955

Token 365: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04904738813638687
    2. '       ' → logprob: -3.0490474700927734
    3. '   ' → logprob: -8.174047470092773
    4. ')
' → logprob: -9.799047470092773
    5. '<|end|>' → logprob: -10.549047470092773
    6. ' )' → logprob: -10.674047470092773
    7. ')))' → logprob: -10.674047470092773
    8. '           ' → logprob: -11.049047470092773
    9. '))' → logprob: -11.674047470092773
    10. '<|end|>' → logprob: -12.299047470092773

Token 366: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0340709462761879
    2. '       ' → logprob: -3.4090709686279297
    3. '   ' → logprob: -8.15907096862793
    4. ')
' (adapté à ' )
') → logprob: -9.15907096862793
    5. ' )' → logprob: -10.53407096862793
    6. '))' → logprob: -13.03407096862793
    7. '           ' → logprob: -13.90907096862793
    8. ')))' → logprob: -14.03407096862793
    9. '      ' → logprob: -14.53407096862793
    10. '),' → logprob: -14.90907096862793

Token 367: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6296229958534241
    2. '<|end|>' → logprob: -1.1296229362487793
    3. '       ' → logprob: -2.6296229362487793
    4. '   ' → logprob: -2.7546229362487793
    5. '
' → logprob: -5.879622936248779
    6. ':' → logprob: -5.879622936248779
    7. '<|end|>' → logprob: -7.129622936248779
    8. ',' → logprob: -8.004623413085938
    9. '    ' → logprob: -8.254623413085938
    10. '    
' → logprob: -8.754623413085938

Token 368: ' container' (ID: 9282)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031116284430027008
    2. 'container' (adapté à ' container') → logprob: -4.156116485595703
    3. ' container' → logprob: -4.906116485595703
    4. '<|end|>' → logprob: -5.531116485595703
    5. ')' → logprob: -6.156116485595703
    6. '   ' → logprob: -7.406116485595703
    7. '	container' → logprob: -8.156116485595703
    8. ' for' → logprob: -9.281116485595703
    9. '
' → logprob: -9.406116485595703
    10. '        
' → logprob: -9.906116485595703

Token 369: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055354196578264236
    2. '[i' → logprob: -2.930354118347168
    3. 'mod' → logprob: -8.680354118347168
    4. '[(' → logprob: -8.805354118347168
    5. '[d' → logprob: -10.180354118347168
    6. '[x' → logprob: -10.180354118347168
    7. '[int' → logprob: -11.680354118347168
    8. '[idx' → logprob: -11.930354118347168
    9. '[m' → logprob: -12.055354118347168
    10. '```' → logprob: -12.305354118347168

Token 370: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00021402664424385875
    2. ' mod' → logprob: -9.125213623046875
    3. 'i' → logprob: -10.250213623046875
    4. '(mod' → logprob: -10.375213623046875
    5. 'pow' → logprob: -10.500213623046875
    6. '(i' → logprob: -12.500213623046875
    7. 'm' → logprob: -13.375213623046875
    8. '(' → logprob: -13.750213623046875
    9. 'st' → logprob: -14.000213623046875
    10. '((' → logprob: -14.250213623046875

Token 371: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.27099974633893e-05
    2. ']' → logprob: -11.500012397766113
    3. ' ].' → logprob: -13.250012397766113
    4. ').' → logprob: -14.625012397766113
    5. ']).' → logprob: -15.500012397766113
    6. '][' → logprob: -16.75001335144043
    7. '   ' → logprob: -17.00001335144043
    8. '.append' → logprob: -17.12501335144043
    9. '[' → logprob: -17.37501335144043
    10. '.' → logprob: -17.75001335144043

Token 372: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.318681188422488e-05
    2. 'extend' → logprob: -11.25001335144043
    3. '.append' → logprob: -17.00001335144043
    4. ' append' → logprob: -17.25001335144043
    5. 'app' → logprob: -18.62501335144043
    6. 'appen' → logprob: -19.87501335144043
    7. '_append' → logprob: -20.75001335144043
    8. 'Append' → logprob: -21.62501335144043
    9. '	append' → logprob: -23.12501335144043
    10. '.extend' → logprob: -24.75001335144043

Token 373: '((' (ID: 2054)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.4926293194293976
    2. '((' → logprob: -1.3676292896270752
    3. '(ed' → logprob: -2.617629289627075
    4. '(' → logprob: -3.617629289627075
    5. '(i' → logprob: -3.867629289627075
    6. '(id' → logprob: -4.367629528045654
    7. '(x' → logprob: -7.742629528045654
    8. 'id' → logprob: -9.742629051208496
    9. 'ed' → logprob: -9.742629051208496
    10. ' (' → logprob: -10.367629051208496

Token 374: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0013511877041310072
    2. '(st' → logprob: -7.001351356506348
    3. ' st' → logprob: -8.001351356506348
    4. '(' → logprob: -10.001351356506348
    5. 'i' → logprob: -10.126351356506348
    6. '(i' → logprob: -12.376351356506348
    7. '   ' → logprob: -12.376351356506348
    8. 'id' → logprob: -12.626351356506348
    9. ' (' → logprob: -12.751351356506348
    10. 'x' → logprob: -14.251351356506348

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010450744302943349
    2. ' ,' → logprob: -6.876045227050781
    3. ',
' → logprob: -11.751045227050781
    4. '<|end|>' → logprob: -13.001045227050781
    5. ',end' → logprob: -14.501045227050781
    6. ',

' → logprob: -15.501045227050781
    7. '‌,' → logprob: -15.626045227050781
    8. '
' → logprob: -15.751045227050781
    9. ' ,
' → logprob: -15.751045227050781
    10. '```' → logprob: -16.00104522705078

Token 376: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.03364754095673561
    2. ' ed' → logprob: -3.4086475372314453
    3. '(ed' → logprob: -14.158647537231445
    4. ' ' → logprob: -15.158647537231445
    5. ' ' → logprob: -15.283647537231445
    6. 'et' → logprob: -15.783647537231445
    7. '   ' → logprob: -16.158647537231445
    8. 'e' → logprob: -16.283647537231445
    9. '_ed' → logprob: -16.533647537231445
    10. '  ' → logprob: -17.158647537231445

Token 377: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06210694462060928
    2. '))' → logprob: -2.8121068477630615
    3. ')
' → logprob: -9.31210708618164
    4. '))
' → logprob: -10.68710708618164
    5. '       ' → logprob: -11.56210708618164
    6. ' )' → logprob: -11.81210708618164
    7. '   ' → logprob: -12.68710708618164
    8. ')}' → logprob: -13.06210708618164
    9. ')))' → logprob: -13.43710708618164
    10. '})' → logprob: -14.43710708618164

Token 378: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24847353994846344
    2. '<|end|>' → logprob: -1.7484735250473022
    3. '   ' → logprob: -3.498473644256592
    4. '    ' → logprob: -5.873473644256592
    5. '
' → logprob: -5.873473644256592
    6. ' ' → logprob: -6.498473644256592
    7. '<|end|>' → logprob: -6.623473644256592
    8. ' )' → logprob: -6.748473644256592
    9. ':' → logprob: -6.873473644256592
    10. '```' → logprob: -6.873473644256592

Token 379: ' ans' (ID: 3345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06558727473020554
    2. '<|end|>' → logprob: -3.315587282180786
    3. '       ' → logprob: -4.815587043762207
    4. ':' → logprob: -5.190587043762207
    5. '   ' → logprob: -5.815587043762207
    6. '[' → logprob: -5.815587043762207
    7. ' ' → logprob: -6.190587043762207
    8. '
' → logprob: -6.815587043762207
    9. '    ' → logprob: -7.065587043762207
    10. ' )' → logprob: -7.565587043762207

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519516944885254
    2. '=' → logprob: -1.5019516944885254
    3. '=[]' → logprob: -12.126951217651367
    4. 's' → logprob: -12.751951217651367
    5. ':' → logprob: -12.876951217651367
    6. ',' → logprob: -13.126951217651367
    7. '[' → logprob: -13.251951217651367
    8. '=[' → logprob: -13.251951217651367
    9. ' ' → logprob: -13.376951217651367
    10. ')' → logprob: -13.876951217651367

Token 381: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07243610173463821
    2. 'set' → logprob: -3.3224360942840576
    3. ' ' → logprob: -3.6974360942840576
    4. '[]' → logprob: -5.572436332702637
    5. ' set' → logprob: -5.822436332702637
    6. 'sum' → logprob: -7.822436332702637
    7. 'len' → logprob: -7.947436332702637
    8. ' []' → logprob: -8.072436332702637
    9. 'N' → logprob: -8.322436332702637
    10. '{' → logprob: -8.447436332702637

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0847821980714798
    2. 'set' → logprob: -2.709782123565674
    3. 'sum' → logprob: -4.459782123565674
    4. 'len' → logprob: -6.584782123565674
    5. '[]' → logprob: -7.709782123565674
    6. 'N' → logprob: -7.834782123565674
    7. '{' → logprob: -8.084782600402832
    8. ' ' → logprob: -8.459782600402832
    9. '{}' → logprob: -9.084782600402832
    10. 'default' → logprob: -9.209782600402832

Token 383: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2150816172361374
    2. '<|end|>' → logprob: -1.8400815725326538
    3. '
' → logprob: -3.5900816917419434
    4. 'for' → logprob: -5.965081691741943
    5. ' for' → logprob: -6.465081691741943
    6. ')' → logprob: -6.590081691741943
    7. '<|end|>' → logprob: -7.965081691741943
    8. '    
' → logprob: -8.090081214904785
    9. '+' → logprob: -8.340081214904785
    10. '```' → logprob: -8.590081214904785

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10546914488077164
    2. 'for' → logprob: -2.730469226837158
    3. ' for' → logprob: -3.605469226837158
    4. '<|end|>' → logprob: -4.980469226837158
    5. '
' → logprob: -7.980469226837158
    6. ')' → logprob: -8.98046875
    7. 'from' → logprob: -9.23046875
    8. '  ' → logprob: -9.85546875
    9. '	for' → logprob: -9.85546875
    10. '+' → logprob: -10.35546875

Token 385: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000556843588128686
    2. ' for' → logprob: -7.625556945800781
    3. '   ' → logprob: -10.375556945800781
    4. 'from' → logprob: -11.250556945800781
    5. '#' (adapté à ' #') → logprob: -11.750556945800781
    6. 'mod' → logprob: -12.125556945800781
    7. 'keys' → logprob: -12.250556945800781
    8. 'def' → logprob: -13.125556945800781
    9. '<|end|>' → logprob: -14.000556945800781
    10. 'import' → logprob: -14.125556945800781

Token 386: ' Use' (ID: 7649)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016511372523382306
    2. ' for' → logprob: -6.751651287078857
    3. '#' → logprob: -8.2516508102417
    4. 'from' → logprob: -8.8766508102417
    5. 'keys' → logprob: -11.1266508102417
    6. 'def' → logprob: -11.6266508102417
    7. '   ' → logprob: -11.6266508102417
    8. 'mod' → logprob: -11.6266508102417
    9. 'sorted' → logprob: -11.7516508102417
    10. 'import' → logprob: -12.2516508102417

Token 387: ' reduce' (ID: 10389)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7940436601638794
    2. 'for' → logprob: -1.0440436601638794
    3. 'sorted' → logprob: -2.91904354095459
    4. 'sum' → logprob: -3.29404354095459
    5. 'from' → logprob: -3.66904354095459
    6. ' sorted' → logprob: -4.66904354095459
    7. 'import' → logprob: -4.91904354095459
    8. ' defaultdict' → logprob: -4.91904354095459
    9. 'def' → logprob: -5.04404354095459
    10. 'range' → logprob: -5.29404354095459

Token 388: ' and' (ID: 326)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.010754680261015892
    2. '(' → logprob: -4.885754585266113
    3. 'lambda' → logprob: -7.260754585266113
    4. ' lambda' → logprob: -7.510754585266113
    5. ',' → logprob: -7.635754585266113
    6. '(
' → logprob: -8.010754585266113
    7. ' (' → logprob: -8.385754585266113
    8. 'import' → logprob: -8.635754585266113
    9. '   ' → logprob: -9.010754585266113
    10. '=lambda' → logprob: -9.010754585266113

Token 389: ' group' (ID: 3566)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.38830503821372986
    2. 'lambda' → logprob: -1.6383050680160522
    3. ' ft' → logprob: -2.8883049488067627
    4. ' lambda' → logprob: -3.0133049488067627
    5. 'for' → logprob: -5.388305187225342
    6. 'sum' → logprob: -5.638305187225342
    7. ' for' → logprob: -5.638305187225342
    8. 'it' → logprob: -5.763305187225342
    9. '(lambda' → logprob: -6.138305187225342
    10. ' sum' → logprob: -6.513305187225342

Token 390: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -8.959636033978313e-05
    2. 'b' → logprob: -10.875089645385742
    3. ' by' → logprob: -11.125089645385742
    4. 'y' → logprob: -11.625089645385742
    5. '   ' → logprob: -11.625089645385742
    6. 'By' → logprob: -11.875089645385742
    7. 'from' → logprob: -12.250089645385742
    8. ' ' → logprob: -12.625089645385742
    9. 'bys' → logprob: -12.625089645385742
    10. 'by's' → logprob: -13.000089645385742

Token 391: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0872976779937744
    2. 'import' → logprob: -1.8372976779937744
    3. 'from' → logprob: -1.9622976779937744
    4. '(lambda' → logprob: -2.2122976779937744
    5. '(container' → logprob: -2.7122976779937744
    6. ' for' → logprob: -2.8372976779937744
    7. ' from' → logprob: -2.9622976779937744
    8. '<|end|>' → logprob: -3.7122976779937744
    9. ' container' → logprob: -4.087297439575195
    10. ',' → logprob: -5.087297439575195

Token 392: ' process' (ID: 2273)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.0109926462173462
    2. 'lambda' → logprob: -1.0109926462173462
    3. '(lambda' → logprob: -2.3859925270080566
    4. ' for' → logprob: -3.3859925270080566
    5. 'import' → logprob: -3.3859925270080566
    6. 'ft' → logprob: -3.5109925270080566
    7. 'for' → logprob: -4.010992527008057
    8. ' process' → logprob: -4.885992527008057
    9. 'it' → logprob: -5.010992527008057
    10. ' itertools' → logprob: -5.010992527008057

Token 393: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.6842294931411743
    2. 'from' → logprob: -1.6842294931411743
    3. 'container' → logprob: -1.9342294931411743
    4. ' for' → logprob: -1.9342294931411743
    5. 'for' → logprob: -2.3092293739318848
    6. ' container' → logprob: -2.5592293739318848
    7. '(lambda' → logprob: -3.0592293739318848
    8. '   ' → logprob: -3.6842293739318848
    9. 'lambda' → logprob: -3.8092293739318848
    10. '(container' → logprob: -3.9342293739318848

Token 394: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6969099640846252
    2. 'import' → logprob: -1.1969099044799805
    3. 'for' → logprob: -2.5719099044799805
    4. ' for' → logprob: -3.1969099044799805
    5. '   ' → logprob: -3.5719099044799805
    6. ' from' → logprob: -3.6969099044799805
    7. 'container' → logprob: -4.6969099044799805
    8. ' container' → logprob: -5.3219099044799805
    9. '<|end|>' → logprob: -6.1969099044799805
    10. 'lambda' → logprob: -6.5719099044799805

Token 395: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5181629061698914
    2. ' for' → logprob: -1.2681629657745361
    3. 'import' → logprob: -2.768162965774536
    4. 'from' → logprob: -3.018162965774536
    5. '   ' → logprob: -5.393162727355957
    6. ' from' → logprob: -5.643162727355957
    7. ' import' → logprob: -7.143162727355957
    8. 'ft' → logprob: -7.393162727355957
    9. 'it' → logprob: -7.643162727355957
    10. 'lambda' → logprob: -8.268162727355957

Token 396: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09341529756784439
    2. 'k' → logprob: -2.8434152603149414
    3. 'key' → logprob: -4.093415260314941
    4. ' mod' → logprob: -5.093415260314941
    5. 'm' → logprob: -5.343415260314941
    6. '_,' → logprob: -6.718415260314941
    7. '_mod' → logprob: -7.343415260314941
    8. ' key' → logprob: -7.343415260314941
    9. 'md' → logprob: -8.468415260314941
    10. ' k' → logprob: -8.718415260314941

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002128382766386494
    2. ' ,' → logprob: -9.000212669372559
    3. ' in' → logprob: -10.250212669372559
    4. '_,' → logprob: -10.625212669372559
    5. 'value' → logprob: -11.625212669372559
    6. 'key' → logprob: -12.125212669372559
    7. '_value' → logprob: -12.625212669372559
    8. 'k' → logprob: -13.375212669372559
    9. ',val' → logprob: -13.375212669372559
    10. 'in' → logprob: -13.500212669372559

Token 398: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.1326074600219727
    2. 'group' → logprob: -1.8826074600219727
    3. 'vals' → logprob: -2.2576074600219727
    4. 'segments' → logprob: -2.5076074600219727
    5. 'lst' → logprob: -2.8826074600219727
    6. 'ranges' → logprob: -3.2576074600219727
    7. 'groups' → logprob: -3.5076074600219727
    8. 'grp' → logprob: -3.6326074600219727
    9. ' intervals' → logprob: -3.7576074600219727
    10. 'pairs' → logprob: -3.7576074600219727

Token 399: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760048627853394
    2. ' in' → logprob: -0.8260048627853394
    3. 's' → logprob: -9.951004981994629
    4. '_in' → logprob: -11.701004981994629
    5. '_' → logprob: -12.826004981994629
    6. ' ' → logprob: -13.576004981994629
    7. 'group' → logprob: -14.201004981994629
    8. 'In' → logprob: -14.451004981994629
    9. '   ' → logprob: -14.826004981994629
    10. 'v' → logprob: -14.826004981994629

Token 400: ' container' (ID: 9282)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.10888275504112244
    2. 'sorted' → logprob: -3.3588826656341553
    3. 'container' → logprob: -3.4838826656341553
    4. ' it' → logprob: -4.608882904052734
    5. 'group' → logprob: -5.233882904052734
    6. ' itertools' → logprob: -5.358882904052734
    7. ' container' → logprob: -5.483882904052734
    8. ' sorted' → logprob: -6.108882904052734
    9. '((' → logprob: -6.358882904052734
    10. 'ft' → logprob: -6.483882904052734

Token 401: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005032967776060104
    2. ' in' → logprob: -5.755033016204834
    3. 'in' → logprob: -7.130033016204834
    4. ':
' → logprob: -7.505033016204834
    5. 'items' → logprob: -9.130032539367676
    6. '_items' → logprob: -9.630032539367676
    7. ',' → logprob: -9.755032539367676
    8. '   ' → logprob: -9.880032539367676
    9. '.groupby' → logprob: -10.130032539367676
    10. ' :' → logprob: -10.630032539367676

Token 402: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026529133319854736
    2. ':
' → logprob: -3.90152907371521
    3. '():
' → logprob: -5.276529312133789
    4. '():' → logprob: -7.151529312133789
    5. '   ' → logprob: -10.401529312133789
    6. '):
' → logprob: -11.276529312133789
    7. ' :' → logprob: -11.401529312133789
    8. '       ' → logprob: -12.401529312133789
    9. ':

' → logprob: -12.651529312133789
    10. '):' → logprob: -12.776529312133789

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042030587792396545
    2. '<|end|>' → logprob: -8.250420570373535
    3. '<|end|>' → logprob: -10.000420570373535
    4. '        
' → logprob: -10.250420570373535
    5. '
' → logprob: -11.250420570373535
    6. '```' → logprob: -11.625420570373535
    7. '   ' → logprob: -11.625420570373535
    8. '):
' → logprob: -12.000420570373535
    9. ',' → logprob: -12.250420570373535
    10. ' sorted' → logprob: -12.250420570373535

Token 404: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.11915883421897888
    2. '       ' → logprob: -2.4941587448120117
    3. 'interval' → logprob: -3.6191587448120117
    4. 'import' → logprob: -7.494158744812012
    5. '   ' → logprob: -7.619158744812012
    6. 'from' → logprob: -7.994158744812012
    7. 'sorted' → logprob: -8.119158744812012
    8. ' sorted' → logprob: -8.369158744812012
    9. ' for' → logprob: -8.619158744812012
    10. ' from' → logprob: -8.619158744812012

Token 405: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0040830280631780624
    2. '=' → logprob: -5.504083156585693
    3. ' =' → logprob: -12.629082679748535
    4. 'sort' → logprob: -14.754082679748535
    5. '.' → logprob: -14.879082679748535
    6. '.=' → logprob: -15.379082679748535
    7. '	sort' → logprob: -15.504082679748535
    8. ' sort' → logprob: -16.25408363342285
    9. '=.' → logprob: -16.50408363342285
    10. ' .' → logprob: -17.12908363342285

Token 406: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6971287131309509
    2. '(key' → logprob: -0.6971287131309509
    3. '()
' → logprob: -6.072128772735596
    4. 'key' → logprob: -6.572128772735596
    5. ',key' → logprob: -9.197128295898438
    6. ' key' → logprob: -9.447128295898438
    7. '(reverse' → logprob: -9.572128295898438
    8. '(' → logprob: -12.072128295898438
    9. '   ' → logprob: -12.947128295898438
    10. '();' → logprob: -13.072128295898438

Token 407: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.006823831703513861
    2. '=' → logprob: -5.006824016571045
    3. 'lambda' → logprob: -9.131823539733887
    4. '(lambda' → logprob: -16.256824493408203
    5. '=
' → logprob: -17.006824493408203
    6. '   ' → logprob: -17.006824493408203
    7. '```' → logprob: -17.506824493408203
    8. ' lambda' → logprob: -17.631824493408203
    9. '_lambda' → logprob: -18.006824493408203
    10. ' =' → logprob: -18.006824493408203

Token 408: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.003251508343964815
    2. ' lambda' → logprob: -5.753251552581787
    3. 'x' → logprob: -10.003251075744629
    4. '=lambda' → logprob: -11.753251075744629
    5. 'operator' → logprob: -12.128251075744629
    6. '_lambda' → logprob: -12.253251075744629
    7. '_' → logprob: -12.503251075744629
    8. '(lambda' → logprob: -13.128251075744629
    9. '   ' → logprob: -13.378251075744629
    10. 'lam' → logprob: -13.753251075744629

Token 409: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06210391968488693
    2. ':t' → logprob: -2.8121039867401123
    3. 't' → logprob: -9.312104225158691
    4. ' :' → logprob: -10.062104225158691
    5. ':
' → logprob: -13.062104225158691
    6. ' t' → logprob: -15.187104225158691
    7. '	t' → logprob: -15.312104225158691
    8. '[' → logprob: -15.937104225158691
    9. '   ' → logprob: -16.062103271484375
    10. '[t' → logprob: -16.437103271484375

Token 410: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011061973869800568
    2. ' t' → logprob: -5.011062145233154
    3. 'lambda' → logprob: -5.511062145233154
    4. ' lambda' → logprob: -8.386061668395996
    5. 'operator' → logprob: -10.386061668395996
    6. '_' → logprob: -11.261061668395996
    7. '=lambda' → logprob: -12.636061668395996
    8. '_t' → logprob: -12.761061668395996
    9. '   ' → logprob: -12.886061668395996
    10. '(lambda' → logprob: -13.011061668395996

Token 411: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011631740257143974
    2. '0' → logprob: -4.511631965637207
    3. ':' → logprob: -7.761631965637207
    4. '1' → logprob: -9.136631965637207
    5. 't' → logprob: -11.011631965637207
    6. '   ' → logprob: -11.386631965637207
    7. ' ' → logprob: -11.511631965637207
    8. ' t' → logprob: -13.511631965637207
    9. ' [' → logprob: -13.636631965637207
    10. '[
' → logprob: -13.636631965637207

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00410630414262414
    2. '1' → logprob: -5.504106521606445
    3. ' ' → logprob: -11.129106521606445
    4. '[' → logprob: -11.504106521606445
    5. '   ' → logprob: -13.754106521606445
    6. ':' → logprob: -14.129106521606445
    7. '
' → logprob: -15.129106521606445
    8. ')' → logprob: -15.816606521606445
    9. 't' → logprob: -15.879106521606445
    10. '-' → logprob: -16.566606521606445

Token 413: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004362718027550727
    2. ')
' → logprob: -8.875435829162598
    3. '])' → logprob: -8.875435829162598
    4. ' )' → logprob: -9.375435829162598
    5. '[' → logprob: -9.875435829162598
    6. ')#' → logprob: -12.375435829162598
    7. ')])' → logprob: -13.250435829162598
    8. ')[' → logprob: -13.250435829162598
    9. '   ' → logprob: -13.375435829162598
    10. ')]' → logprob: -13.500435829162598

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007591230678372085
    2. 'current' → logprob: -7.875759124755859
    3. 'end' → logprob: -9.62575912475586
    4. 'merged' → logprob: -9.75075912475586
    5. '   ' → logprob: -9.87575912475586
    6. 'prev' → logprob: -10.00075912475586
    7. '        
' → logprob: -10.25075912475586
    8. 'cur' → logprob: -11.00075912475586
    9. 'from' → logprob: -11.00075912475586
    10. ',' → logprob: -11.37575912475586

Token 415: ' #' (ID: 1069)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.17382274568080902
    2. 'prev' → logprob: -3.2988226413726807
    3. 'current' → logprob: -3.5488226413726807
    4. 'end' → logprob: -3.5488226413726807
    5. 'curr' → logprob: -3.6738226413726807
    6. 'merged' → logprob: -3.6738226413726807
    7. 'last' → logprob: -5.29882287979126
    8. '       ' → logprob: -5.79882287979126
    9. '   ' → logprob: -6.92382287979126
    10. 'stack' → logprob: -6.92382287979126

Token 416: ' Collapse' (ID: 141586)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.637483537197113
    2. 'merged' → logprob: -1.2624835968017578
    3. 'curr' → logprob: -2.387483596801758
    4. 'current' → logprob: -3.637483596801758
    5. 'from' → logprob: -3.887483596801758
    6. 'prev' → logprob: -4.012483596801758
    7. 'end' → logprob: -4.637483596801758
    8. 'import' → logprob: -5.137483596801758
    9. '   ' → logprob: -5.512483596801758
    10. 'last' → logprob: -5.762483596801758

Token 417: ' overlapping' (ID: 90457)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.18659789860248566
    2. ' merged' → logprob: -1.9365979433059692
    3. 'prev' → logprob: -4.81159782409668
    4. 'cur' → logprob: -5.06159782409668
    5. 'last' → logprob: -5.81159782409668
    6. ' last' → logprob: -6.31159782409668
    7. 'stack' → logprob: -6.43659782409668
    8. ' prev' → logprob: -6.56159782409668
    9. 'current' → logprob: -6.81159782409668
    10. ' current' → logprob: -7.31159782409668

Token 418: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.25328370928764343
    2. ' intervals' → logprob: -1.5032837390899658
    3. ' and' → logprob: -8.128283500671387
    4. 'and' → logprob: -8.128283500671387
    5. 'ranges' → logprob: -8.128283500671387
    6. ',' → logprob: -9.128283500671387
    7. 'inter' → logprob: -9.128283500671387
    8. '(interval' → logprob: -9.628283500671387
    9. '<|end|>' → logprob: -10.378283500671387
    10. '_inter' → logprob: -10.628283500671387

Token 419: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019142745062708855
    2. '<|end|>' → logprob: -5.2691426277160645
    3. ' and' → logprob: -5.7691426277160645
    4. ',' → logprob: -5.7691426277160645
    5. 'prev' → logprob: -5.8941426277160645
    6. 'merged' → logprob: -7.2691426277160645
    7. 'end' → logprob: -7.3941426277160645
    8. '        ' → logprob: -8.019143104553223
    9. 'start' → logprob: -8.019143104553223
    10. ')' → logprob: -8.019143104553223

Token 420: ' accumulate' (ID: 74226)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.7674727439880371
    2. 'lambda' → logprob: -1.142472743988037
    3. 'it' → logprob: -2.767472743988037
    4. '[]' → logprob: -2.892472743988037
    5. 'fun' → logprob: -2.892472743988037
    6. 'reduce' → logprob: -4.517472743988037
    7. 'interval' → logprob: -5.017472743988037
    8. ' lambda' → logprob: -5.142472743988037
    9. '[' → logprob: -5.267472743988037
    10. '(lambda' → logprob: -5.392472743988037

Token 421: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0158655643463135
    2. 'from' → logprob: -1.3908655643463135
    3. ',' → logprob: -1.8908655643463135
    4. 'import' → logprob: -2.6408655643463135
    5. ' from' → logprob: -2.8908655643463135
    6. ' and' → logprob: -3.3908655643463135
    7. '(lambda' → logprob: -4.015865325927734
    8. ' =' → logprob: -4.515865325927734
    9. ' intervals' → logprob: -5.015865325927734
    10. ' for' → logprob: -5.515865325927734

Token 422: ' next' (ID: 2613)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.20842814445495605
    2. 'lambda' → logprob: -1.958428144454956
    3. 'ft' → logprob: -3.458428144454956
    4. ' itertools' → logprob: -4.958428382873535
    5. '(lambda' → logprob: -5.583428382873535
    6. ' lambda' → logprob: -6.708428382873535
    7. 'acc' → logprob: -6.833428382873535
    8. 'fun' → logprob: -7.833428382873535
    9. 'list' → logprob: -8.083428382873535
    10. '```' → logprob: -8.583428382873535

Token 423: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5940296649932861
    2. '       ' → logprob: -2.094029664993286
    3. '(it' → logprob: -2.469029664993286
    4. 'import' → logprob: -3.094029664993286
    5. ',' → logprob: -3.219029664993286
    6. '(interval' → logprob: -3.969029664993286
    7. ' from' → logprob: -4.219029426574707
    8. 'interval' → logprob: -4.344029426574707
    9. 'it' → logprob: -4.594029426574707
    10. '(
' → logprob: -4.844029426574707

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08010045439004898
    2. '
' → logprob: -3.8301005363464355
    3. ',' → logprob: -3.9551005363464355
    4. 'from' → logprob: -3.9551005363464355
    5. ' from' → logprob: -5.0801005363464355
    6. 'import' → logprob: -6.5801005363464355
    7. ':' → logprob: -6.5801005363464355
    8. '        
' → logprob: -6.8301005363464355
    9. '(
' → logprob: -7.5801005363464355
    10. 'it' → logprob: -7.8301005363464355

Token 425: ' ed' (ID: 1648)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1248835325241089
    2. 'ft' → logprob: -1.4998835325241089
    3. 'acc' → logprob: -2.7498836517333984
    4. 'import' → logprob: -2.7498836517333984
    5. 'start' → logprob: -2.9998836517333984
    6. ' acc' → logprob: -3.1248836517333984
    7. 'merged' → logprob: -3.1248836517333984
    8. 'prev' → logprob: -3.2498836517333984
    9. ' ft' → logprob: -3.6248836517333984
    10. '       ' → logprob: -3.7498836517333984

Token 426: '_prev' (ID: 60491)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14333197474479675
    2. '=' → logprob: -2.018332004547119
    3. ',' → logprob: -8.143331527709961
    4. 's' → logprob: -8.268331527709961
    5. '_' → logprob: -10.518331527709961
    6. '_=' → logprob: -11.018331527709961
    7. '=max' → logprob: -11.393331527709961
    8. '   ' → logprob: -11.643331527709961
    9. ' ' → logprob: -11.768331527709961
    10. '  ' → logprob: -12.143331527709961

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26805421710014343
    2. '=' → logprob: -1.5180542469024658
    3. ',' → logprob: -4.143054008483887
    4. ' ,' → logprob: -9.393054008483887
    5. '=None' → logprob: -11.518054008483887
    6. ' ' → logprob: -12.518054008483887
    7. '_,' → logprob: -13.268054008483887
    8. '   ' → logprob: -13.268054008483887
    9. '_' → logprob: -13.393054008483887
    10. ')' → logprob: -13.643054008483887

Token 428: ' intervals' (ID: 49900)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023303478956222534
    2. 'interval' → logprob: -4.523303508758545
    3. '0' → logprob: -5.398303508758545
    4. ' -' → logprob: -5.523303508758545
    5. 'float' → logprob: -6.523303508758545
    6. ' intervals' → logprob: -6.773303508758545
    7. 'None' → logprob: -8.273303031921387
    8. '-none' → logprob: -8.898303031921387
    9. '   ' → logprob: -9.148303031921387
    10. '-next' → logprob: -9.773303031921387

Token 429: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.11996734328568e-05
    2. '0' → logprob: -10.375041007995605
    3. '   ' → logprob: -12.250041007995605
    4. '=' → logprob: -13.375041007995605
    5. '[-' → logprob: -14.000041007995605
    6. '][' → logprob: -14.125041007995605
    7. ' [' → logprob: -14.750041007995605
    8. '       ' → logprob: -15.000041007995605
    9. 's' → logprob: -15.125041007995605
    10. 'def' → logprob: -15.375041007995605

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006923045963048935
    2. '[' → logprob: -5.006923198699951
    3. '-' → logprob: -8.881922721862793
    4. ' ' → logprob: -10.006922721862793
    5. '][' → logprob: -11.881922721862793
    6. '
' → logprob: -12.131922721862793
    7. ' -' → logprob: -13.006922721862793
    8. '   ' → logprob: -13.381922721862793
    9. '[-' → logprob: -13.631922721862793
    10. '```' → logprob: -14.256922721862793

Token 431: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04864425212144852
    2. '][' → logprob: -3.0486443042755127
    3. '0' → logprob: -10.548644065856934
    4. '   ' → logprob: -11.798644065856934
    5. ')[' → logprob: -11.923644065856934
    6. ' [' → logprob: -12.298644065856934
    7. ']' → logprob: -12.673644065856934
    8. '
' → logprob: -13.923644065856934
    9. '```' → logprob: -13.923644065856934
    10. '    
' → logprob: -14.173644065856934

Token 432: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000511687423568219
    2. '0' → logprob: -7.625511646270752
    3. '
' → logprob: -11.37551212310791
    4. '-' → logprob: -12.87551212310791
    5. '   ' → logprob: -12.87551212310791
    6. '```' → logprob: -13.37551212310791
    7. ' ' → logprob: -13.62551212310791
    8. '[' → logprob: -14.00051212310791
    9. '
' → logprob: -14.43801212310791
    10. ':' → logprob: -14.68801212310791

Token 433: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. 'd' → logprob: -14.50000286102295
    4. '-' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.625001907348633
    6. 'float' → logprob: -17.125001907348633
    7. '
' → logprob: -17.375001907348633
    8. 'int' → logprob: -18.625001907348633
    9. '       ' → logprob: -19.250001907348633
    10. '10' → logprob: -19.625001907348633

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.625004768371582
    3. 'd' → logprob: -14.375004768371582
    4. '-' → logprob: -15.250004768371582
    5. '   ' → logprob: -17.375003814697266
    6. 'int' → logprob: -17.875003814697266
    7. '
' → logprob: -18.625003814697266
    8. 'float' → logprob: -18.625003814697266
    9. '10' → logprob: -19.375003814697266
    10. '100' → logprob: -19.500003814697266

Token 437: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3701900243759155
    2. '<|end|>' → logprob: -1.2451900243759155
    3. ')' → logprob: -4.495190143585205
    4. ' for' → logprob: -5.495190143585205
    5. '<|end|>' → logprob: -6.495190143585205
    6. '       ' → logprob: -6.870190143585205
    7. '   ' → logprob: -7.245190143585205
    8. ',' → logprob: -7.245190143585205
    9. ' 
' → logprob: -7.745190143585205
    10. ' ' → logprob: -7.995190143585205

Token 438: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03418142721056938
    2. ' for' → logprob: -3.7841813564300537
    3. '       ' → logprob: -4.534181594848633
    4. '   ' → logprob: -9.909181594848633
    5. '	for' → logprob: -10.034181594848633
    6. '<|end|>' → logprob: -11.034181594848633
    7. 'from' → logprob: -11.159181594848633
    8. ')' → logprob: -12.659181594848633
    9. '	' → logprob: -13.284181594848633
    10. '[' → logprob: -13.659181594848633

Token 440: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.019308339804410934
    2. ' st' → logprob: -4.019308567047119
    3. 'start' → logprob: -7.394308567047119
    4. '(st' → logprob: -7.894308567047119
    5. 's' → logprob: -9.019308090209961
    6. ' start' → logprob: -11.394308090209961
    7. '   ' → logprob: -11.769308090209961
    8. 'l' → logprob: -12.269308090209961
    9. '_st' → logprob: -12.269308090209961
    10. 'i' → logprob: -12.394308090209961

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001625379954930395
    2. ' ,' → logprob: -8.875162124633789
    3. ',end' → logprob: -11.500162124633789
    4. '_,' → logprob: -11.875162124633789
    5. ',_' → logprob: -13.625162124633789
    6. '‌,' → logprob: -14.250162124633789
    7. ',
' → logprob: -14.500162124633789
    8. 'ed' → logprob: -14.500162124633789
    9. '<|end|>' → logprob: -14.625162124633789
    10. ',val' → logprob: -15.375162124633789

Token 442: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.02975071594119072
    2. ' ed' → logprob: -3.5297508239746094
    3. '_ed' → logprob: -16.27975082397461
    4. '(ed' → logprob: -17.27975082397461
    5. ' ' → logprob: -17.40475082397461
    6. '   ' → logprob: -17.77975082397461
    7. ' ' → logprob: -17.90475082397461
    8. '       ' → logprob: -18.15475082397461
    9. 'et' → logprob: -18.52975082397461
    10. '.ed' → logprob: -19.15475082397461

Token 443: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004330541472882032
    2. 'in' → logprob: -5.504330635070801
    3. ':' → logprob: -9.5043306350708
    4. '<|end|>' → logprob: -9.7543306350708
    5. ',' → logprob: -10.3793306350708
    6. '       ' → logprob: -10.8793306350708
    7. '	in' → logprob: -11.1293306350708
    8. '   ' → logprob: -11.3793306350708
    9. ' ' → logprob: -11.8793306350708
    10. '<|end|>' → logprob: -12.0043306350708

Token 444: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00218583014793694
    2. ' intervals' → logprob: -6.127185821533203
    3. '   ' → logprob: -15.127185821533203
    4. '(interval' → logprob: -15.252185821533203
    5. ' ' → logprob: -16.002185821533203
    6. '
' → logprob: -17.877185821533203
    7. ' interval' → logprob: -18.002185821533203
    8. '[' → logprob: -18.252185821533203
    9. 'inter' → logprob: -18.377185821533203
    10. '  ' → logprob: -18.377185821533203

Token 445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02650522068142891
    2. ':
' → logprob: -3.7765052318573
    3. '       ' → logprob: -5.901504993438721
    4. '<|end|>' → logprob: -8.401505470275879
    5. '   ' → logprob: -9.276505470275879
    6. ' in' → logprob: -9.901505470275879
    7. ',' → logprob: -10.151505470275879
    8. '<|end|>' → logprob: -10.401505470275879
    9. ' :' → logprob: -10.526505470275879
    10. '):
' → logprob: -11.401505470275879

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002000250155106187
    2. ' if' → logprob: -7.627000331878662
    3. '
' → logprob: -7.752000331878662
    4. '       ' → logprob: -7.877000331878662
    5. '<|end|>' → logprob: -8.626999855041504
    6. ',' → logprob: -9.126999855041504
    7. '            
' → logprob: -9.251999855041504
    8. '```' → logprob: -9.751999855041504
    9. ':
' → logprob: -10.126999855041504
    10. ':' → logprob: -10.501999855041504

Token 447: ' delta' (ID: 18800)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030962005257606506
    2. 'if' → logprob: -4.030961990356445
    3. '               ' → logprob: -4.655961990356445
    4. '           ' → logprob: -5.780961990356445
    5. '       ' → logprob: -9.780961990356445
    6. '            ' → logprob: -11.405961990356445
    7. 'ed' → logprob: -11.405961990356445
    8. '
' → logprob: -11.405961990356445
    9. ' ed' → logprob: -11.655961990356445
    10. '   ' → logprob: -11.655961990356445

Token 448: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3978692889213562
    2. ' =' → logprob: -1.147869348526001
    3. '=max' → logprob: -4.522869110107422
    4. 'max' → logprob: -9.897869110107422
    5. '>' → logprob: -12.147869110107422
    6. '_max' → logprob: -12.272869110107422
    7. 's' → logprob: -12.772869110107422
    8. '   ' → logprob: -13.272869110107422
    9. '+=' → logprob: -13.272869110107422
    10. '=end' → logprob: -13.272869110107422

Token 449: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.034512002021074295
    2. ' max' → logprob: -3.6595120429992676
    3. 'ed' → logprob: -5.034512042999268
    4. 'min' → logprob: -6.909512042999268
    5. '(max' → logprob: -7.534512042999268
    6. '0' → logprob: -10.03451156616211
    7. ' ed' → logprob: -10.53451156616211
    8. ' min' → logprob: -11.15951156616211
    9. 'st' → logprob: -11.28451156616211
    10. '(ed' → logprob: -11.28451156616211

Token 450: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028565898537635803
    2. '(ed' → logprob: -5.877856731414795
    3. '(st' → logprob: -10.002856254577637
    4. '0' → logprob: -12.502856254577637
    5. 'ed' → logprob: -13.377856254577637
    6. ' ' → logprob: -15.002856254577637
    7. '(
' → logprob: -15.252856254577637
    8. ' (' → logprob: -15.752856254577637
    9. '((' → logprob: -15.877856254577637
    10. '   ' → logprob: -16.002857208251953

Token 451: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3444923758506775
    2. '0' → logprob: -1.4694924354553223
    3. '(ed' → logprob: -3.7194924354553223
    4. 'ed' → logprob: -3.8444924354553223
    5. '(st' → logprob: -4.344492435455322
    6. 'st' → logprob: -5.969492435455322
    7. ' ' → logprob: -8.969491958618164
    8. ' ed' → logprob: -10.719491958618164
    9. '   ' → logprob: -12.344491958618164
    10. '(
' → logprob: -12.469491958618164

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015419998671859503
    2. ' ,' → logprob: -6.501542091369629
    3. '           ' → logprob: -10.376542091369629
    4. 'ed' → logprob: -12.626542091369629
    5. '   ' → logprob: -13.501542091369629
    6. '               ' → logprob: -13.626542091369629
    7. '       ' → logprob: -14.876542091369629
    8. ',
' → logprob: -15.001542091369629
    9. '            ' → logprob: -15.001542091369629
    10. ' if' → logprob: -15.501542091369629

Token 453: ' st' (ID: 420)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0016319748247042298
    2. ' ed' → logprob: -6.501631736755371
    3. 'min' → logprob: -9.251631736755371
    4. ' min' → logprob: -10.501631736755371
    5. '   ' → logprob: -13.126631736755371
    6. '  ' → logprob: -14.126631736755371
    7. 'st' → logprob: -14.251631736755371
    8. '(ed' → logprob: -14.251631736755371
    9. ' ' → logprob: -14.751631736755371
    10. 'max' → logprob: -14.876631736755371

Token 454: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0019609862938523293
    2. '-' → logprob: -6.251960754394531
    3. '-ed' → logprob: -11.251960754394531
    4. ',' → logprob: -11.626960754394531
    5. ' ' → logprob: -12.376960754394531
    6. ' ,' → logprob: -13.001960754394531
    7. ')' → logprob: -13.626960754394531
    8. '   ' → logprob: -14.001960754394531
    9. 'ed' → logprob: -14.251960754394531
    10. ' ed' → logprob: -14.876960754394531

Token 455: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -9.412610233994201e-05
    2. ' ed' → logprob: -9.500094413757324
    3. '(ed' → logprob: -11.125094413757324
    4. '   ' → logprob: -12.750094413757324
    5. '(' → logprob: -14.375094413757324
    6. ' (' → logprob: -15.125094413757324
    7. ')' → logprob: -15.875094413757324
    8. 'ans' → logprob: -15.875094413757324
    9. ' ' → logprob: -16.000093460083008
    10. '  ' → logprob: -16.625093460083008

Token 456: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.00012237003829795867
    2. 'prev' → logprob: -9.1251220703125
    3. ')' → logprob: -11.3751220703125
    4. 'ed' → logprob: -14.6251220703125
    5. '```' → logprob: -15.0001220703125
    6. 'Prev' → logprob: -15.2501220703125
    7. '
' → logprob: -15.5001220703125
    8. '   ' → logprob: -15.7501220703125
    9. ')_' → logprob: -16.0001220703125
    10. '	prev' → logprob: -16.1251220703125

Token 457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48312142491340637
    2. ' -' → logprob: -1.108121395111084
    3. ' )' → logprob: -3.858121395111084
    4. '-' → logprob: -3.983121395111084
    5. ' +' → logprob: -5.108121395111084
    6. ')
' → logprob: -5.358121395111084
    7. '+' → logprob: -7.108121395111084
    8. '           ' → logprob: -7.233121395111084
    9. ' )
' → logprob: -7.858121395111084
    10. ')+' → logprob: -8.358121871948242

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013736842665821314
    2. '
' → logprob: -7.376373767852783
    3. '       ' → logprob: -8.251373291015625
    4. 'ed' → logprob: -8.751373291015625
    5. ' ans' → logprob: -9.501373291015625
    6. ' +' → logprob: -9.626373291015625
    7. '+' → logprob: -9.876373291015625
    8. ' ed' → logprob: -10.501373291015625
    9. ')' → logprob: -10.876373291015625
    10. '<|end|>' → logprob: -10.876373291015625

Token 459: ' contrib' (ID: 22457)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.06155650317668915
    2. '           ' → logprob: -3.186556577682495
    3. 'ans' → logprob: -4.686556339263916
    4. 'if' → logprob: -4.936556339263916
    5. ' ed' → logprob: -6.811556339263916
    6. ' if' → logprob: -7.561556339263916
    7. ' ans' → logprob: -8.561556816101074
    8. '       ' → logprob: -9.311556816101074
    9. 'end' → logprob: -10.811556816101074
    10. 'answer' → logprob: -11.061556816101074

Token 460: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029457585886120796
    2. '+=' → logprob: -3.6544575691223145
    3. ' =' → logprob: -5.9044575691223145
    4. '=' → logprob: -8.404458045959473
    5. '+' → logprob: -9.654458045959473
    6. 's' → logprob: -10.154458045959473
    7. ' +' → logprob: -10.529458045959473
    8. '           ' → logprob: -10.654458045959473
    9. '   ' → logprob: -11.029458045959473
    10. '       ' → logprob: -11.404458045959473

Token 461: ' ((' (ID: 3536)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.06202773377299309
    2. '(ed' → logprob: -3.6870276927948
    3. 'delta' → logprob: -4.062027931213379
    4. ' ed' → logprob: -4.562027931213379
    5. '(delta' → logprob: -6.062027931213379
    6. ' delta' → logprob: -6.437027931213379
    7. 'max' → logprob: -6.937027931213379
    8. ' (' → logprob: -7.187027931213379
    9. 'st' → logprob: -8.187027931213379
    10. '(max' → logprob: -8.437027931213379

Token 462: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.3681955337524414
    2. 'delta' → logprob: -1.2431955337524414
    3. 'd' → logprob: -4.993195533752441
    4. 'st' → logprob: -5.368195533752441
    5. ' delta' → logprob: -6.118195533752441
    6. ' ed' → logprob: -6.368195533752441
    7. '(ed' → logprob: -6.493195533752441
    8. '(delta' → logprob: -6.993195533752441
    9. 'x' → logprob: -7.618195533752441
    10. 'N' → logprob: -8.618195533752441

Token 463: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04650785028934479
    2. '-' → logprob: -3.1715078353881836
    3. '_prev' → logprob: -6.171507835388184
    4. '+' → logprob: -7.546507835388184
    5. ' +' → logprob: -7.796507835388184
    6. '-prev' → logprob: -8.421507835388184
    7. ' ' → logprob: -9.296507835388184
    8. '   ' → logprob: -9.796507835388184
    9. '	' → logprob: -10.546507835388184
    10. ')' → logprob: -10.546507835388184

Token 464: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0006498866132460535
    2. 'ed' → logprob: -7.875649929046631
    3. ' st' → logprob: -8.250649452209473
    4. 'prev' → logprob: -12.750649452209473
    5. '   ' → logprob: -13.500649452209473
    6. '(st' → logprob: -13.750649452209473
    7. '	st' → logprob: -14.125649452209473
    8. 'max' → logprob: -14.125649452209473
    9. ' ed' → logprob: -14.625649452209473
    10. ' ' → logprob: -15.250649452209473

Token 465: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42888715863227844
    2. '+' → logprob: -1.053887128829956
    3. ')' → logprob: -8.678887367248535
    4. ')+' → logprob: -12.428887367248535
    5. '   ' → logprob: -12.678887367248535
    6. ' +
' → logprob: -12.803887367248535
    7. '+
' → logprob: -13.928887367248535
    8. ' ' → logprob: -14.053887367248535
    9. '+)' → logprob: -14.053887367248535
    10. '1' → logprob: -14.553887367248535

Token 466: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741955101490021
    2. ' +' → logprob: -0.9741954803466797
    3. ')' → logprob: -9.22419548034668
    4. ')+' → logprob: -11.34919548034668
    5. '+)' → logprob: -13.34919548034668
    6. '   ' → logprob: -13.84919548034668
    7. ' +
' → logprob: -13.97419548034668
    8. ' ' → logprob: -14.09919548034668
    9. '+
' → logprob: -14.22419548034668
    10. '1' → logprob: -14.47419548034668

Token 467: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4085175693035126
    2. 'd' → logprob: -1.408517599105835
    3. '1' → logprob: -3.158517599105835
    4. ' ' → logprob: -4.408517360687256
    5. '(d' → logprob: -4.533517360687256
    6. 'delta' → logprob: -5.408517360687256
    7. '+' → logprob: -5.533517360687256
    8. ' d' → logprob: -5.658517360687256
    9. '(N' → logprob: -5.908517360687256
    10. ' (' → logprob: -6.283517360687256

Token 468: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34914928674697876
    2. '+' → logprob: -1.224149227142334
    3. ')' → logprob: -7.349149227142334
    4. ')+' → logprob: -10.224149703979492
    5. '           ' → logprob: -12.099149703979492
    6. ' +
' → logprob: -12.224149703979492
    7. '+
' → logprob: -12.349149703979492
    8. '       ' → logprob: -13.599149703979492
    9. '   ' → logprob: -13.599149703979492
    10. '+)' → logprob: -13.849149703979492

Token 469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048045333474874496
    2. ' ' → logprob: -4.0480451583862305
    3. 'delta' → logprob: -4.1730451583862305
    4. ' delta' → logprob: -4.2980451583862305
    5. '(delta' → logprob: -9.17304515838623
    6. ' max' → logprob: -9.29804515838623
    7. ' (' → logprob: -9.42304515838623
    8. 'max' → logprob: -9.54804515838623
    9. '   ' → logprob: -10.42304515838623
    10. '(' → logprob: -10.92304515838623

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005562194157391787
    2. 'delta' → logprob: -5.3805623054504395
    3. ' ' → logprob: -7.3805623054504395
    4. ' delta' → logprob: -8.630561828613281
    5. '   ' → logprob: -9.755561828613281
    6. '(delta' → logprob: -10.630561828613281
    7. '(' → logprob: -11.630561828613281
    8. ')' → logprob: -11.630561828613281
    9. 'max' → logprob: -11.755561828613281
    10. '    ' → logprob: -12.255561828613281

Token 471: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009236755780875683
    2. '           ' → logprob: -5.009236812591553
    3. ')*' → logprob: -6.884236812591553
    4. ' )' → logprob: -7.384236812591553
    5. ')
' → logprob: -7.509236812591553
    6. '<|end|>' → logprob: -9.509236335754395
    7. '+' → logprob: -9.634236335754395
    8. ' +' → logprob: -9.634236335754395
    9. ')+' → logprob: -10.509236335754395
    10. '       ' → logprob: -11.009236335754395

Token 472: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14149336516857147
    2. '
' → logprob: -2.266493320465088
    3. '<|end|>' → logprob: -3.641493320465088
    4. '+' → logprob: -7.641493320465088
    5. ')' → logprob: -7.766493320465088
    6. ' +' → logprob: -8.141493797302246
    7. '		' → logprob: -9.016493797302246
    8. ' 
' → logprob: -9.141493797302246
    9. '            
' → logprob: -9.141493797302246
    10. '<|end|>' → logprob: -9.141493797302246

Token 473: ' st' (ID: 420)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.9761967062950134
    2. 'ed' → logprob: -1.3511967658996582
    3. ' delta' → logprob: -1.7261967658996582
    4. ' ed' → logprob: -2.476196765899658
    5. 'st' → logprob: -2.601196765899658
    6. ' st' → logprob: -4.101196765899658
    7. '(delta' → logprob: -5.726196765899658
    8. '(ed' → logprob: -5.726196765899658
    9. '(st' → logprob: -6.351196765899658
    10. 'con' → logprob: -6.976196765899658

Token 474: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.062201160937547684
    2. '<=' → logprob: -2.8122012615203857
    3. ' >' → logprob: -8.687201499938965
    4. ' <' → logprob: -10.937201499938965
    5. '>' → logprob: -11.062201499938965
    6. ' >=' → logprob: -11.187201499938965
    7. ' ' → logprob: -12.187201499938965
    8. '>=' → logprob: -12.562201499938965
    9. '<|end|>' → logprob: -13.187201499938965
    10. '[' → logprob: -13.687201499938965

Token 475: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0003407071635592729
    2. ' ed' → logprob: -8.000340461730957
    3. '=' → logprob: -12.250340461730957
    4. ' ' → logprob: -15.375340461730957
    5. '_ed' → logprob: -16.625341415405273
    6. '  ' → logprob: -17.750341415405273
    7. '0' → logprob: -17.875341415405273
    8. '   ' → logprob: -17.875341415405273
    9. '```' → logprob: -18.125341415405273
    10. 'edt' → logprob: -18.500341415405273

Token 476: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.22718067467212677
    2. ' else' → logprob: -2.2271807193756104
    3. '>=' → logprob: -3.2271807193756104
    4. 'else' → logprob: -3.8521807193756104
    5. ' >=' → logprob: -3.9771807193756104
    6. '           ' → logprob: -4.852180480957031
    7. 'prev' → logprob: -6.477180480957031
    8. '>' → logprob: -6.602180480957031
    9. '       ' → logprob: -6.727180480957031
    10. '   ' → logprob: -7.352180480957031

Token 477: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.005304788704961538
    2. 'else' → logprob: -5.50530481338501
    3. '           ' → logprob: -6.88030481338501
    4. '            ' → logprob: -8.880304336547852
    5. ' +' → logprob: -10.880304336547852
    6. '+' → logprob: -10.880304336547852
    7. '        ' → logprob: -12.005304336547852
    8. '<|end|>' → logprob: -12.505304336547852
    9. ' ' → logprob: -12.880304336547852
    10. '          ' → logprob: -13.005304336547852

Token 478: ' max' (ID: 2999)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.41900989413261414
    2. '(max' → logprob: -1.2940099239349365
    3. 'max' → logprob: -3.1690099239349365
    4. ' ((' → logprob: -4.544009685516357
    5. ' (' → logprob: -4.794009685516357
    6. ' max' → logprob: -6.044009685516357
    7. '0' → logprob: -6.169009685516357
    8. '(' → logprob: -6.294009685516357
    9. '(min' → logprob: -8.044010162353516
    10. ' ' → logprob: -8.544010162353516

Token 479: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005909211467951536
    2. '0' → logprob: -7.625590801239014
    3. '((' → logprob: -9.250591278076172
    4. ' (' → logprob: -12.875591278076172
    5. '(ed' → logprob: -13.125591278076172
    6. 'ed' → logprob: -13.625591278076172
    7. '(
' → logprob: -14.500591278076172
    8. '(((' → logprob: -14.625591278076172
    9. ' ' → logprob: -16.000591278076172
    10. '(delta' → logprob: -17.625591278076172

Token 480: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01861599273979664
    2. '(' → logprob: -4.018616199493408
    3. '((' → logprob: -8.14361572265625
    4. ' ' → logprob: -9.51861572265625
    5. 'ed' → logprob: -9.64361572265625
    6. ' (' → logprob: -10.64361572265625
    7. '(ed' → logprob: -12.26861572265625
    8. '   ' → logprob: -12.89361572265625
    9. '(((' → logprob: -13.76861572265625
    10. '1' → logprob: -13.89361572265625

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013403973542153835
    2. '(ed' → logprob: -4.38840389251709
    3. '(' → logprob: -7.26340389251709
    4. '0' → logprob: -9.76340389251709
    5. 'ed' → logprob: -9.76340389251709
    6. ',(' → logprob: -10.51340389251709
    7. ' ,' → logprob: -10.76340389251709
    8. '((' → logprob: -11.51340389251709
    9. ',
' → logprob: -12.13840389251709
    10. '   ' → logprob: -12.38840389251709

Token 482: ' (' (ID: 350)
  Prédit: '(ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ed' → logprob: -0.09308038651943207
    2. '((' → logprob: -2.5930802822113037
    3. ' (' → logprob: -4.468080520629883
    4. 'ed' → logprob: -6.218080520629883
    5. '(' → logprob: -8.593080520629883
    6. ' ((' → logprob: -9.093080520629883
    7. '   ' → logprob: -9.218080520629883
    8. ' ' → logprob: -10.093080520629883
    9. '(ent' → logprob: -10.593080520629883
    10. '  ' → logprob: -10.843080520629883

Token 483: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.017569953575730324
    2. '(ed' → logprob: -4.1425700187683105
    3. ' ed' → logprob: -6.6425700187683105
    4. ' (' → logprob: -8.892569541931152
    5. '(' → logprob: -10.267569541931152
    6. '   ' → logprob: -10.642569541931152
    7. '((' → logprob: -12.017569541931152
    8. ' ' → logprob: -12.642569541931152
    9. '  ' → logprob: -12.767569541931152
    10. 'end' → logprob: -12.892569541931152

Token 484: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016138533130288124
    2. '-' → logprob: -4.141138553619385
    3. ' ' → logprob: -9.391138076782227
    4. '   ' → logprob: -11.766138076782227
    5. '-ed' → logprob: -13.016138076782227
    6. '-prev' → logprob: -13.016138076782227
    7. '  ' → logprob: -13.766138076782227
    8. '```' → logprob: -13.891138076782227
    9. '    ' → logprob: -14.016138076782227
    10. '
' → logprob: -14.266138076782227

Token 485: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.022153887897729874
    2. ' ed' → logprob: -4.022153854370117
    3. 'max' → logprob: -6.272153854370117
    4. ' max' → logprob: -6.272153854370117
    5. '(ed' → logprob: -8.897153854370117
    6. '   ' → logprob: -10.897153854370117
    7. ' ' → logprob: -11.397153854370117
    8. ' (' → logprob: -11.522153854370117
    9. 'eds' → logprob: -11.897153854370117
    10. '  ' → logprob: -12.022153854370117

Token 486: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.002523937961086631
    2. 'prev' → logprob: -6.002523899078369
    3. ')' → logprob: -10.252524375915527
    4. '   ' → logprob: -12.502524375915527
    5. 'Prev' → logprob: -13.377524375915527
    6. '```' → logprob: -13.752524375915527
    7. '	prev' → logprob: -13.877524375915527
    8. '
' → logprob: -14.127524375915527
    9. ' ' → logprob: -14.502524375915527
    10. '[' → logprob: -14.877524375915527

Token 487: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012611840851604939
    2. ')//' → logprob: -4.3876118659973145
    3. ' )' → logprob: -9.512611389160156
    4. '+' → logprob: -11.012611389160156
    5. '//' → logprob: -12.387611389160156
    6. ' +' → logprob: -12.762611389160156
    7. '   ' → logprob: -13.137611389160156
    8. ')
' → logprob: -14.012611389160156
    9. '       ' → logprob: -14.137611389160156
    10. ' //' → logprob: -15.262611389160156

Token 488: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15701815485954285
    2. ')//' → logprob: -2.6570181846618652
    3. '//' → logprob: -2.9070181846618652
    4. ' //' → logprob: -4.282018184661865
    5. '+' → logprob: -5.282018184661865
    6. ' +' → logprob: -7.657018184661865
    7. '           ' → logprob: -8.282017707824707
    8. ' )' → logprob: -8.407017707824707
    9. '       ' → logprob: -8.407017707824707
    10. '```' → logprob: -9.157017707824707

Token 489: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007613963447511196
    2. ' d' → logprob: -4.8826141357421875
    3. '   ' → logprob: -12.257614135742188
    4. '
' → logprob: -14.507614135742188
    5. '       ' → logprob: -14.507614135742188
    6. ' ' → logprob: -14.632614135742188
    7. '           ' → logprob: -15.007614135742188
    8. '	d' → logprob: -15.257614135742188
    9. '    ' → logprob: -15.507614135742188
    10. ')d' → logprob: -15.882614135742188

Token 490: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.747160792350769
    2. ' +' → logprob: -0.997160792350769
    3. ')' → logprob: -1.872160792350769
    4. ')+' → logprob: -5.872160911560059
    5. '           ' → logprob: -8.122160911560059
    6. ' )' → logprob: -8.497160911560059
    7. ')
' → logprob: -9.247160911560059
    8. '       ' → logprob: -9.997160911560059
    9. '+)' → logprob: -10.997160911560059
    10. '          ' → logprob: -11.122160911560059

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.028536492725834e-05
    2. '       ' → logprob: -10.750070571899414
    3. '
' → logprob: -11.125070571899414
    4. ' ed' → logprob: -11.750070571899414
    5. '<|end|>' → logprob: -12.375070571899414
    6. '               ' → logprob: -12.750070571899414
    7. '```' → logprob: -12.750070571899414
    8. ',' → logprob: -12.750070571899414
    9. 'ed' → logprob: -12.875070571899414
    10. '          ' → logprob: -12.875070571899414

Token 492: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5137450098991394
    2. 'ans' (adapté à ' ans') → logprob: -1.3887450695037842
    3. ' ans' → logprob: -2.763745069503784
    4. '       ' → logprob: -3.138745069503784
    5. ' if' → logprob: -3.888745069503784
    6. 'if' → logprob: -3.888745069503784
    7. '
' → logprob: -6.013744831085205
    8. 'ed' → logprob: -6.888744831085205
    9. '   ' → logprob: -7.888744831085205
    10. '	ans' → logprob: -8.388745307922363

Token 493: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31330081820487976
    2. ' +=' → logprob: -1.3133008480072021
    3. '   ' → logprob: -10.688301086425781
    4. '       ' → logprob: -11.938301086425781
    5. '    ' → logprob: -12.938301086425781
    6. '+' → logprob: -13.313301086425781
    7. '	' → logprob: -13.438301086425781
    8. '=' → logprob: -13.688301086425781
    9. '+=(' → logprob: -14.063301086425781
    10. ']+=' → logprob: -14.188301086425781

Token 494: ' contrib' (ID: 22457)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.043689921498298645
    2. 'delta' → logprob: -3.9186899662017822
    3. ' contrib' → logprob: -4.418689727783203
    4. ' delta' → logprob: -4.543689727783203
    5. '	con' → logprob: -10.793689727783203
    6. 'contri' → logprob: -10.981189727783203
    7. '   ' → logprob: -11.043689727783203
    8. ' ' → logprob: -11.106189727783203
    9. ' contribu' → logprob: -11.418689727783203
    10. 'max' → logprob: -11.543689727783203

Token 495: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00136368942912668
    2. '
' → logprob: -6.626363754272461
    3. '            
' → logprob: -10.876363754272461
    4. '       ' → logprob: -11.751363754272461
    5. '
' → logprob: -12.876363754272461
    6. '        
' → logprob: -13.376363754272461
    7. '               ' → logprob: -13.626363754272461
    8. '          ' → logprob: -13.876363754272461
    9. '   ' → logprob: -14.251363754272461
    10. ' ed' → logprob: -14.501363754272461

Token 496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003685861302074045
    2. '       ' → logprob: -8.500368118286133
    3. '
' → logprob: -9.000368118286133
    4. '            
' → logprob: -11.125368118286133
    5. '        
' → logprob: -12.250368118286133
    6. '               ' → logprob: -12.250368118286133
    7. '<|end|>' → logprob: -13.000368118286133
    8. '   ' → logprob: -13.125368118286133
    9. '```' → logprob: -13.250368118286133
    10. '		' → logprob: -13.375368118286133

Token 497: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' (adapté à ' ed') → logprob: -0.016247380524873734
    2. '           ' → logprob: -4.266247272491455
    3. ' ed' → logprob: -6.641247272491455
    4. '       ' → logprob: -7.266247272491455
    5. '   ' → logprob: -10.141247749328613
    6. 'if' → logprob: -11.141247749328613
    7. ' if' → logprob: -11.516247749328613
    8. '_ed' → logprob: -12.516247749328613
    9. '               ' → logprob: -13.016247749328613
    10. '		' → logprob: -13.641247749328613

Token 498: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -2.999452772201039e-05
    2. 'prev' → logprob: -10.750029563903809
    3. '=' → logprob: -12.500029563903809
    4. '>' → logprob: -13.375029563903809
    5. ' =' → logprob: -13.625029563903809
    6. '	prev' → logprob: -13.750029563903809
    7. '   ' → logprob: -14.875029563903809
    8. '_' → logprob: -15.875029563903809
    9. '```' → logprob: -16.125030517578125
    10. '    
' → logprob: -16.500030517578125

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519693970680237
    2. ' =' → logprob: -1.501969337463379
    3. '=max' → logprob: -10.126969337463379
    4. '	' → logprob: -16.751970291137695
    5. 'max' → logprob: -16.876970291137695
    6. '=
' → logprob: -17.376970291137695
    7. ' ' → logprob: -17.501970291137695
    8. '   ' → logprob: -17.501970291137695
    9. '=

' → logprob: -17.501970291137695
    10. ',' → logprob: -18.001970291137695

Token 500: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.020704442635178566
    2. 'ed' → logprob: -4.52070426940918
    3. ' max' → logprob: -4.64570426940918
    4. ' ed' → logprob: -12.14570426940918
    5. '	max' → logprob: -14.39570426940918
    6. 'st' → logprob: -15.02070426940918
    7. 'min' → logprob: -15.14570426940918
    8. '(max' → logprob: -15.27070426940918
    9. '   ' → logprob: -15.52070426940918
    10. '_ed' → logprob: -16.64570426940918

Token 501: '(ed' (ID: 135912)
  Prédit: '(ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ed' → logprob: -0.0015029559144750237
    2. 'ed' → logprob: -6.501502990722656
    3. '(' → logprob: -14.876502990722656
    4. ' ed' → logprob: -16.251502990722656
    5. '(e' → logprob: -17.126502990722656
    6. '_ed' → logprob: -17.251502990722656
    7. '(ev' → logprob: -17.626502990722656
    8. '   ' → logprob: -17.751502990722656
    9. '(et' → logprob: -17.876502990722656
    10. '(
' → logprob: -17.876502990722656

Token 502: '_prev' (ID: 60491)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.010977198369801044
    2. '_prev' → logprob: -4.885977268218994
    3. ',' → logprob: -5.760977268218994
    4. ' ed' → logprob: -9.010976791381836
    5. '   ' → logprob: -10.760976791381836
    6. '(ed' → logprob: -10.760976791381836
    7. '_ed' → logprob: -10.760976791381836
    8. 'Prev' → logprob: -12.260976791381836
    9. ' ,' → logprob: -12.510976791381836
    10. ')' → logprob: -12.510976791381836

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039504567394033074
    2. 'ed' → logprob: -7.875394821166992
    3. ' ,' → logprob: -11.375394821166992
    4. ',
' → logprob: -13.125394821166992
    5. ' ed' → logprob: -13.500394821166992
    6. '   ' → logprob: -17.750394821166992
    7. '_,' → logprob: -18.500394821166992
    8. '_ed' → logprob: -18.500394821166992
    9. '(ed' → logprob: -18.625394821166992
    10. '
' → logprob: -19.375394821166992

Token 504: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.04859009385108948
    2. ' ed' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.673589706420898
    4. '   ' → logprob: -14.173589706420898
    5. '_ed' → logprob: -15.798589706420898
    6. '  ' → logprob: -16.0485897064209
    7. '(ed' → logprob: -16.0485897064209
    8. ' ' → logprob: -16.5485897064209
    9. 'eds' → logprob: -16.7985897064209
    10. 'edi' → logprob: -17.0485897064209

Token 505: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6374248266220093
    2. '<|end|>' → logprob: -0.7624248266220093
    3. '<|end|>' → logprob: -6.262424945831299
    4. '
' → logprob: -6.387424945831299
    5. ')
' → logprob: -7.387424945831299
    6. ' )' → logprob: -7.887424945831299
    7. '```' → logprob: -9.63742446899414
    8. '       ' → logprob: -10.38742446899414
    9. ' 
' → logprob: -10.88742446899414
    10. '   ' → logprob: -11.01242446899414

Token 506: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008768792264163494
    2. '   ' → logprob: -5.508768558502197
    3. '
' → logprob: -5.633768558502197
    4. ')' → logprob: -7.258768558502197
    5. ' print' → logprob: -8.633769035339355
    6. '<|end|>' → logprob: -9.008769035339355
    7. '```' → logprob: -10.133769035339355
    8. ')
' → logprob: -10.883769035339355
    9. 'if' → logprob: -11.133769035339355
    10. '    
' → logprob: -11.383769035339355

Token 508: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02980811893939972
    2. '(' → logprob: -3.5298080444335938
    3. '('' → logprob: -9.904808044433594
    4. '(f' → logprob: -12.529808044433594
    5. '(answer' → logprob: -13.654808044433594
    6. '(
' → logprob: -13.779808044433594
    7. '()' → logprob: -14.404808044433594
    8. ' (' → logprob: -15.029808044433594
    9. '(`' → logprob: -15.029808044433594
    10. '(ord' → logprob: -15.529808044433594

Token 509: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025192240718752146
    2. ')
' → logprob: -8.750251770019531
    3. '```' → logprob: -10.625251770019531
    4. '())' → logprob: -11.000251770019531
    5. ' )' → logprob: -11.500251770019531
    6. '
' → logprob: -11.625251770019531
    7. '<|end|>' → logprob: -11.625251770019531
    8. '()' → logprob: -11.875251770019531
    9. '`)' → logprob: -12.000251770019531
    10. '')' → logprob: -12.500251770019531

Token 510: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5189288258552551
    2. '[' → logprob: -1.5189287662506104
    3. '<|end|>' → logprob: -2.5189287662506104
    4. '%' → logprob: -2.8939287662506104
    5. ' ' → logprob: -3.7689287662506104
    6. '(' → logprob: -5.0189290046691895
    7. '<|end|>' → logprob: -5.3939290046691895
    8. ']' → logprob: -5.8939290046691895
    9. '   ' → logprob: -6.1439290046691895
    10. ':' → logprob: -6.2689290046691895

Token 511: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04859680309891701
    2. '__' → logprob: -3.0485968589782715
    3. ' ' → logprob: -11.923596382141113
    4. 'name' → logprob: -13.548596382141113
    5. ' ' → logprob: -14.048596382141113
    6. '_name' → logprob: -15.798596382141113
    7. ''' → logprob: -16.29859733581543
    8. ' name' → logprob: -16.42359733581543
    9. 'Name' → logprob: -16.79859733581543
    10. '  ' → logprob: -16.79859733581543

Token 512: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5192720293998718
    2. ' ==' → logprob: -1.5192720890045166
    3. ' __' → logprob: -1.7692720890045166
    4. 'name' → logprob: -4.7692718505859375
    5. '==' → logprob: -5.2692718505859375
    6. ' =="' → logprob: -8.019271850585938
    7. '=="' → logprob: -8.519271850585938
    8. ' ' → logprob: -8.519271850585938
    9. '.__' → logprob: -8.519271850585938
    10. '_' → logprob: -8.519271850585938

Token 513: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01297021470963955
    2. '==' → logprob: -4.512970447540283
    3. ' ==' → logprob: -6.637970447540283
    4. '=="' → logprob: -7.637970447540283
    5. '=='' → logprob: -9.637969970703125
    6. '__.__' → logprob: -10.512969970703125
    7. '_' → logprob: -10.762969970703125
    8. '___' → logprob: -12.512969970703125
    9. '__["' → logprob: -13.512969970703125
    10. '=' → logprob: -13.637969970703125

Token 514: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15706847608089447
    2. '==' → logprob: -2.1570684909820557
    3. '=="' → logprob: -3.6570684909820557
    4. '__' → logprob: -5.657068252563477
    5. '=='' → logprob: -8.157068252563477
    6. ' =="' → logprob: -10.157068252563477
    7. '==
' → logprob: -10.782068252563477
    8. '=' → logprob: -12.032068252563477
    9. '.' → logprob: -12.157068252563477
    10. ' ' → logprob: -12.157068252563477

Token 515: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07890069484710693
    2. ''' → logprob: -2.5789008140563965
    3. '__' → logprob: -11.703900337219238
    4. ' "__' → logprob: -12.953900337219238
    5. ' '__' → logprob: -16.078901290893555
    6. ''"' → logprob: -16.328901290893555
    7. '   ' → logprob: -16.703901290893555
    8. '`' → logprob: -17.078901290893555
    9. '"name' → logprob: -17.203901290893555
    10. '"user' → logprob: -17.328901290893555

Token 516: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.674858301877975e-05
    2. ''' → logprob: -10.000096321105957
    3. '__' → logprob: -10.000096321105957
    4. 'name' → logprob: -12.375096321105957
    5. '"' → logprob: -13.625096321105957
    6. ' main' → logprob: -15.750096321105957
    7. '_main' → logprob: -16.125097274780273
    8. ' '__' → logprob: -16.125097274780273
    9. ''m' → logprob: -16.375097274780273
    10. ''name' → logprob: -17.500097274780273

Token 517: '__':
' (ID: 39314)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5666578412055969
    2. '():' → logprob: -1.4416577816009521
    3. ':' → logprob: -2.316657781600952
    4. '__':
' → logprob: -2.441657781600952
    5. ':
' → logprob: -5.816658020019531
    6. '':' → logprob: -5.816658020019531
    7. '()' → logprob: -6.191658020019531
    8. '__":
' → logprob: -7.191658020019531
    9. '__' → logprob: -7.316658020019531
    10. '__:' → logprob: -8.066658020019531

Token 518: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4894728660583496
    2. '   ' → logprob: -0.9894728660583496
    3. '	main' → logprob: -4.36447286605835
    4. ' main' → logprob: -5.98947286605835
    5. '    
' → logprob: -10.864473342895508
    6. '```' → logprob: -11.364473342895508
    7. '_main' → logprob: -11.614473342895508
    8. '
' → logprob: -12.614473342895508
    9. '   ' → logprob: -12.614473342895508
    10. '(main' → logprob: -13.489473342895508

Token 519: ' (' (ID: 350)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.375
    3. '	main' → logprob: -18.875
    4. 'import' → logprob: -19.375
    5. '   ' → logprob: -21.875
    6. '(main' → logprob: -22.5
    7. '_main' → logprob: -22.75
    8. '.main' → logprob: -24.5
    9. '```' → logprob: -25.375
    10. 'Main' → logprob: -25.5

Token 520: 'lambda' (ID: 35280)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020854694594163448
    2. ')' → logprob: -8.500208854675293
    3. ' main' → logprob: -12.375208854675293
    4. '	main' → logprob: -14.125208854675293
    5. '_main' → logprob: -17.125207901000977
    6. '   ' → logprob: -18.625207901000977
    7. ').__' → logprob: -19.250207901000977
    8. 'Main' → logprob: -19.625207901000977
    9. ')__' → logprob: -19.625207901000977
    10. '__' → logprob: -19.750207901000977

Token 521: ' f' (ID: 285)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1269780844449997
    2. '):' → logprob: -3.2519781589508057
    3. ' :' → logprob: -3.5019781589508057
    4. 'main' → logprob: -3.6269781589508057
    5. '():' → logprob: -4.751977920532227
    6. ' main' → logprob: -4.751977920532227
    7. ' ):' → logprob: -5.626977920532227
    8. ')' → logprob: -6.751977920532227
    9. ':int' → logprob: -7.626977920532227
    10. ' )' → logprob: -8.501977920532227

Token 522: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0171112809330225
    2. 'f' → logprob: -5.142111301422119
    3. '(f' → logprob: -5.392111301422119
    4. ':f' → logprob: -5.392111301422119
    5. '):' → logprob: -7.267111301422119
    6. ' f' → logprob: -7.892111301422119
    7. '=lambda' → logprob: -8.142110824584961
    8. ' :' → logprob: -8.642110824584961
    9. '=f' → logprob: -9.017110824584961
    10. ')' → logprob: -9.517110824584961

Token 523: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004341261519584805
    2. ' f' → logprob: -8.625433921813965
    3. 'print' → logprob: -9.250433921813965
    4. '   ' → logprob: -9.500433921813965
    5. 'sys' → logprob: -10.375433921813965
    6. '(f' → logprob: -11.000433921813965
    7. '__' → logprob: -11.375433921813965
    8. 'exit' → logprob: -12.125433921813965
    9. 'lambda' → logprob: -12.625433921813965
    10. 'exec' → logprob: -13.125433921813965

Token 524: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023499593138694763
    2. '(f' → logprob: -4.398499488830566
    3. '()' → logprob: -4.648499488830566
    4. '(main' → logprob: -7.898499488830566
    5. '(' → logprob: -8.523499488830566
    6. '().__' → logprob: -9.023499488830566
    7. '(lambda' → logprob: -9.398499488830566
    8. '(()' → logprob: -9.523499488830566
    9. '():' → logprob: -9.523499488830566
    10. '(__' → logprob: -9.773499488830566

Token 525: '(' (ID: 7)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.0012222514487802982
    2. '(lambda' → logprob: -6.876222133636475
    3. 'main' → logprob: -9.626222610473633
    4. '(def' → logprob: -9.751222610473633
    5. '(' → logprob: -9.876222610473633
    6. 'def' → logprob: -11.876222610473633
    7. ' (' → logprob: -13.501222610473633
    8. '(func' → logprob: -13.501222610473633
    9. '(Main' → logprob: -13.751222610473633
    10. '()' → logprob: -13.876222610473633

Token 526: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.676292231422849e-05
    2. ' main' → logprob: -11.000017166137695
    3. '	main' → logprob: -18.625017166137695
    4. '(main' → logprob: -19.125017166137695
    5. 'lambda' → logprob: -20.125017166137695
    6. '_main' → logprob: -22.875017166137695
    7. '.main' → logprob: -23.000017166137695
    8. '   ' → logprob: -23.500017166137695
    9. '/main' → logprob: -25.000017166137695
    10. '  ' → logprob: -25.250017166137695

Token 527: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010092071170220152
    2. '())' → logprob: -9.500101089477539
    3. '()' → logprob: -10.875101089477539
    4. ')
' → logprob: -12.250101089477539
    5. '))' → logprob: -13.625101089477539
    6. '(' → logprob: -15.000101089477539
    7. ' )' → logprob: -15.250101089477539
    8. ')`' → logprob: -15.500101089477539
    9. ')#' → logprob: -16.75010108947754
    10. '<|end|>' → logprob: -16.87510108947754


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 525
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 162
Tokens correctement prédits (top 10): 365
Précision stricte (1ère position): 29.71%
Précision adaptée (1ère position): 30.86%
Précision (top 10): 69.52%
================================================================================
