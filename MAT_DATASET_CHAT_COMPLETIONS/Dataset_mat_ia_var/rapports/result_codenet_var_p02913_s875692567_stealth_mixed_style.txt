================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S = input()

# On alterne différentes logiques et styles, du fonctionnel au impératif, avec quelques astuces OOP et comprehensions

def get_matches(s, l, r):
    L = r - l
    tgt = s[l:r]
    # style list comprehension inside generator
    idxs = (k for k in range(l + L, len(s) - 1))
    for k in idxs:
        cmp = "".join([c for c in s[k:k + L]])
        if tgt == cmp:
            return L
    return None

class Window:
    def __init__(self, n):
        self.l, self.r = 0, 1
        self.n = n

    def move_left(self):
        self.l += 1
        self.r = min(self.r + 1, self.n - 1)

    def move_right(self):
        self.r += 1

w = Window(N)
ans = 0

# Utilisation de while, for, try-except, pattern-matching
while w.l < N and w.r < N:
    try:
        # Style map avec lambda expression
        result = get_matches(S, w.l, w.r)
        match result:
            case None:
                w.move_left()
            case val if w.r < N - 1:
                ans = max(ans, val)
                w.move_right()
            case _:
                w.move_left()
    except Exception as e:
        # on ignore, mais démontre un patchwork de gestion
        w.move_left()

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'S' (ID: 50)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11139343678951263
    2. '=' → logprob: -2.861393451690674
    3. '[' → logprob: -3.236393451690674
    4. ' =' → logprob: -4.861393451690674
    5. ')' → logprob: -8.236392974853516
    6. '_' → logprob: -8.486392974853516
    7. 'u' → logprob: -9.861392974853516
    8. '.=' → logprob: -9.861392974853516
    9. '[:]' → logprob: -9.986392974853516
    10. ':' → logprob: -9.986392974853516

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06223924085497856
    2. ' input' → logprob: -2.812239170074463
    3. '""' → logprob: -9.437239646911621
    4. ' ' → logprob: -10.062239646911621
    5. '0' → logprob: -10.687239646911621
    6. '"' → logprob: -10.812239646911621
    7. '[input' → logprob: -10.937239646911621
    8. '[]' → logprob: -11.312239646911621
    9. '''' → logprob: -11.437239646911621
    10. '=input' → logprob: -11.562239646911621

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004458247218281031
    2. '()' → logprob: -6.254458427429199
    3. '('' → logprob: -7.004458427429199
    4. ''' → logprob: -7.129458427429199
    5. ')' → logprob: -8.0044584274292
    6. '"' → logprob: -9.1294584274292
    7. '(
' → logprob: -9.5044584274292
    8. ' (' → logprob: -9.7544584274292
    9. '`' → logprob: -9.8794584274292
    10. '```' → logprob: -10.0044584274292

Token 9: '#' (ID: 2)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28188225626945496
    2. 'for' → logprob: -2.1568822860717773
    3. 'result' → logprob: -2.7818822860717773
    4. 'c' → logprob: -3.7818822860717773
    5. 'f' → logprob: -5.031882286071777
    6. 'freq' → logprob: -5.031882286071777
    7. 'd' → logprob: -5.156882286071777
    8. 'counter' → logprob: -5.406882286071777
    9. 'cnt' → logprob: -5.531882286071777
    10. 'counts' → logprob: -5.656882286071777

Token 10: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0318762063980103
    2. 'for' → logprob: -1.1568762063980103
    3. ' for' → logprob: -2.2818760871887207
    4. ' count' → logprob: -2.7818760871887207
    5. 'f' → logprob: -3.0318760871887207
    6. 'result' → logprob: -4.156876087188721
    7. 'if' → logprob: -4.531876087188721
    8. 's' → logprob: -4.531876087188721
    9. ' cnt' → logprob: -4.656876087188721
    10. ' f' → logprob: -4.906876087188721

Token 11: ' alter' (ID: 14183)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008834847249090672
    2. ' e' → logprob: -5.3838348388671875
    3. '_' → logprob: -6.5088348388671875
    4. ' =' → logprob: -7.0088348388671875
    5. '=' → logprob: -8.008834838867188
    6. 'es' → logprob: -8.633834838867188
    7. '_e' → logprob: -8.633834838867188
    8. 's' → logprob: -8.758834838867188
    9. 't' → logprob: -8.883834838867188
    10. 'l' → logprob: -9.258834838867188

Token 12: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010359067237004638
    2. '_' → logprob: -7.876035690307617
    3. '_n' → logprob: -8.126035690307617
    4. 'na' → logprob: -9.376035690307617
    5. 'ing' → logprob: -9.751035690307617
    6. 'nation' → logprob: -10.001035690307617
    7. 'native' → logprob: -10.251035690307617
    8. 'a' → logprob: -10.626035690307617
    9. 'e' → logprob: -11.001035690307617
    10. 'ed' → logprob: -11.626035690307617

Token 13: ' différentes' (ID: 41398)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09447924047708511
    2. 's' → logprob: -3.3444793224334717
    3. ' =' → logprob: -4.219479084014893
    4. '_' → logprob: -4.344479084014893
    5. 'r' → logprob: -4.344479084014893
    6. ' between' → logprob: -5.344479084014893
    7. ' for' → logprob: -6.344479084014893
    8. '=' → logprob: -6.469479084014893
    9. 'for' → logprob: -6.594479084014893
    10. '(' → logprob: -6.969479084014893

Token 14: ' log' (ID: 2142)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -1.503528118133545
    2. ' façons' → logprob: -2.128528118133545
    3. 'str' → logprob: -2.378528118133545
    4. 's' → logprob: -2.503528118133545
    5. ' chaînes' → logprob: -3.003528118133545
    6. 'l' → logprob: -3.003528118133545
    7. 'positions' → logprob: -3.128528118133545
    8. 'man' → logprob: -3.128528118133545
    9. ' stratégies' → logprob: -3.253528118133545
    10. ' couleurs' → logprob: -3.628528118133545

Token 15: 'iques' (ID: 11654)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9674166440963745
    2. 'iques' → logprob: -1.0924166440963745
    3. 's' → logprob: -1.4674166440963745
    4. 'ic' → logprob: -3.717416763305664
    5. 'ique' → logprob: -4.092416763305664
    6. '```' → logprob: -5.342416763305664
    7. '_' → logprob: -6.342416763305664
    8. '_i' → logprob: -6.592416763305664
    9. 'u' → logprob: -6.842416763305664
    10. 'iq' → logprob: -7.342416763305664

Token 16: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4771377146244049
    2. 'if' → logprob: -1.4771376848220825
    3. 'i' → logprob: -2.102137804031372
    4. 'f' → logprob: -4.477137565612793
    5. 'result' → logprob: -4.977137565612793
    6. ' for' → logprob: -5.352137565612793
    7. ' if' → logprob: -6.727137565612793
    8. 'r' → logprob: -6.977137565612793
    9. 'count' → logprob: -7.602137565612793
    10. '```' → logprob: -7.602137565612793

Token 17: ' styles' (ID: 12849)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.254516839981079
    2. ' calcul' → logprob: -2.754516839981079
    3. ' conditions' → logprob: -3.004516839981079
    4. 's' → logprob: -3.004516839981079
    5. 't' → logprob: -3.629516839981079
    6. ' traitements' → logprob: -3.754516839981079
    7. ' on' → logprob: -3.879516839981079
    8. ' spaces' → logprob: -3.879516839981079
    9. ' test' → logprob: -4.0045166015625
    10. 'r' → logprob: -4.0045166015625

Token 18: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2157118320465088
    2. 'i' → logprob: -1.4657118320465088
    3. ' for' → logprob: -1.9657118320465088
    4. 'if' → logprob: -2.465711832046509
    5. '```' → logprob: -2.965711832046509
    6. ' if' → logprob: -2.965711832046509
    7. '
' → logprob: -3.340711832046509
    8. 's' → logprob: -3.965711832046509
    9. ' ' → logprob: -4.34071159362793
    10. ' 
' → logprob: -4.46571159362793

Token 19: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01235329918563366
    2. 's' → logprob: -6.012353420257568
    3. ' 
' → logprob: -6.387353420257568
    4. '_' → logprob: -6.512353420257568
    5. 'n' → logprob: -6.762353420257568
    6. ' for' → logprob: -7.012353420257568
    7. ' n' → logprob: -7.762353420257568
    8. 'r' → logprob: -7.887353420257568
    9. ' t' → logprob: -7.887353420257568
    10. 't' → logprob: -8.01235294342041

Token 20: ' fonction' (ID: 17610)
  Prédit: ' coup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coup' → logprob: -0.8507035374641418
    2. 'c' → logprob: -1.725703477859497
    3. '```' → logprob: -1.850703477859497
    4. 'python' → logprob: -3.350703477859497
    5. ' #' → logprob: -3.725703477859497
    6. '#' → logprob: -3.850703477859497
    7. 'd' → logprob: -4.225703716278076
    8. 'Python' → logprob: -4.225703716278076
    9. 'dé' → logprob: -4.350703716278076
    10. ''' → logprob: -4.975703716278076

Token 21: 'nel' (ID: 10085)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.036313652992248535
    2. 'def' → logprob: -4.286313533782959
    3. 'nement' → logprob: -5.411313533782959
    4. '```' → logprob: -6.036313533782959
    5. 'nel' → logprob: -6.411313533782959
    6. 's' → logprob: -6.411313533782959
    7. ' ' → logprob: -6.536313533782959
    8. 'a' → logprob: -6.661313533782959
    9. '   ' → logprob: -6.786313533782959
    10. '_' → logprob: -6.911313533782959

Token 22: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9491332173347473
    2. ' ' → logprob: -2.3241331577301025
    3. 'for' → logprob: -2.3241331577301025
    4. '.' → logprob: -2.9491331577301025
    5. 's' → logprob: -3.0741331577301025
    6. ':' → logprob: -3.0741331577301025
    7. '_' → logprob: -3.1991331577301025
    8. ')' → logprob: -3.5741331577301025
    9. 'def' → logprob: -3.6991331577301025
    10. '```' → logprob: -3.6991331577301025

Token 23: ' impér' (ID: 148162)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.44993266463279724
    2. 'im' → logprob: -1.3249326944351196
    3. 'for' → logprob: -3.94993257522583
    4. '```' → logprob: -4.07493257522583
    5. 'imper' → logprob: -4.82493257522583
    6. 'python' → logprob: -5.07493257522583
    7. 'dé' → logprob: -5.19993257522583
    8. 'style' → logprob: -5.44993257522583
    9. 'proc' → logprob: -5.57493257522583
    10. '#' → logprob: -5.69993257522583

Token 24: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.007227142807096243
    2. 'atifs' → logprob: -5.882226943969727
    3. 'def' → logprob: -6.257226943969727
    4. 'atique' → logprob: -7.757226943969727
    5. 'ative' → logprob: -8.132226943969727
    6. 'ativement' → logprob: -8.382226943969727
    7. 's' → logprob: -8.507226943969727
    8. 'aire' → logprob: -8.757226943969727
    9. 't' → logprob: -8.882226943969727
    10. 'at' → logprob: -9.007226943969727

Token 25: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1342750787734985
    2. 'result' → logprob: -1.6342750787734985
    3. 'i' → logprob: -2.259274959564209
    4. 'count' → logprob: -3.134274959564209
    5. 's' → logprob: -3.384274959564209
    6. '
' → logprob: -3.384274959564209
    7. ' for' → logprob: -3.384274959564209
    8. 'f' → logprob: -3.634274959564209
    9. 'r' → logprob: -3.759274959564209
    10. 'c' → logprob: -3.884274959564209

Token 26: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06019549071788788
    2. ' a' → logprob: -4.560195446014404
    3. ' i' → logprob: -5.185195446014404
    4. 's' → logprob: -5.435195446014404
    5. ' for' → logprob: -5.435195446014404
    6. ' n' → logprob: -5.810195446014404
    7. ' 
' → logprob: -6.060195446014404
    8. ' ,' → logprob: -6.185195446014404
    9. ',' → logprob: -6.310195446014404
    10. '#' → logprob: -6.310195446014404

Token 27: ' quelques' (ID: 17687)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.385846495628357
    2. 'diff' → logprob: -1.760846495628357
    3. 'des' → logprob: -2.0108466148376465
    4. ' différentes' → logprob: -2.6358466148376465
    5. ' la' → logprob: -2.8858466148376465
    6. ' l' → logprob: -3.3858466148376465
    7. 'l' → logprob: -3.6358466148376465
    8. 'une' → logprob: -3.7608466148376465
    9. 'for' → logprob: -3.8858466148376465
    10. ' for' → logprob: -4.0108466148376465

Token 28: ' astuces' (ID: 164126)
  Prédit: ' commentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' commentaires' → logprob: -0.06519801914691925
    2. ' #' → logprob: -4.815197944641113
    3. ' suggestions' → logprob: -4.940197944641113
    4. '#' → logprob: -4.940197944641113
    5. 'comment' → logprob: -5.315197944641113
    6. ' espaces' → logprob: -5.565197944641113
    7. ' erreurs' → logprob: -6.190197944641113
    8. '```' → logprob: -6.190197944641113
    9. ' variables' → logprob: -6.315197944641113
    10. ' lignes' → logprob: -6.440197944641113

Token 29: ' O' (ID: 532)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3313140869140625
    2. 'count' → logprob: -1.7063140869140625
    3. 'for' → logprob: -2.2063140869140625
    4. 'res' → logprob: -2.4563140869140625
    5. 'd' → logprob: -3.0813140869140625
    6. 'dp' → logprob: -3.0813140869140625
    7. 'i' → logprob: -3.3313140869140625
    8. 'c' → logprob: -3.3313140869140625
    9. 'ans' → logprob: -3.4563140869140625
    10. 'r' → logprob: -3.7063140869140625

Token 30: 'OP' (ID: 4164)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9611120223999023
    2. '(' → logprob: -1.5861120223999023
    3. '(n' → logprob: -2.0861120223999023
    4. 'r' → logprob: -3.0861120223999023
    5. 'u' → logprob: -3.0861120223999023
    6. 'N' → logprob: -3.5861120223999023
    7. '=' → logprob: -3.7111120223999023
    8. 'pt' → logprob: -3.9611120223999023
    9. 'ut' → logprob: -4.336112022399902
    10. '()' → logprob: -4.461112022399902

Token 31: ' et' (ID: 859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3152204751968384
    2. 'count' → logprob: -1.9402204751968384
    3. 'res' → logprob: -2.065220355987549
    4. 'c' → logprob: -2.315220355987549
    5. 'dp' → logprob: -2.565220355987549
    6. 'r' → logprob: -2.940220355987549
    7. 'i' → logprob: -3.565220355987549
    8. 'for' → logprob: -3.565220355987549
    9. 'ans' → logprob: -3.565220355987549
    10. 'd' → logprob: -3.940220355987549

Token 32: ' compreh' (ID: 13576)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.4559489488601685
    2. ' des' → logprob: -2.205948829650879
    3. 'l' → logprob: -2.955948829650879
    4. 'du' → logprob: -3.330948829650879
    5. ' réc' → logprob: -3.330948829650879
    6. ' algorithm' → logprob: -3.455948829650879
    7. ' du' → logprob: -3.455948829650879
    8. ' une' → logprob: -3.643448829650879
    9. 'de' → logprob: -3.768448829650879
    10. ' commentaires' → logprob: -3.830948829650879

Token 33: 'ensions' (ID: 7401)
  Prédit: 'ensions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensions' → logprob: -0.22583729028701782
    2. 'ension' → logprob: -1.600837230682373
    3. 'ens' → logprob: -8.600837707519531
    4. 's' → logprob: -9.225837707519531
    5. '```' → logprob: -9.600837707519531
    6. 'ensi' → logprob: -10.850837707519531
    7. 'h' → logprob: -11.600837707519531
    8. 'ensión' → logprob: -11.850837707519531
    9. 'ensiones' → logprob: -11.975837707519531
    10. 'ensive' → logprob: -11.975837707519531

Token 34: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8140054941177368
    2. 'result' → logprob: -1.8140054941177368
    3. 'i' → logprob: -2.3140053749084473
    4. 'count' → logprob: -3.1890053749084473
    5. 's' → logprob: -3.6890053749084473
    6. 'd' → logprob: -3.6890053749084473
    7. 'res' → logprob: -3.8140053749084473
    8. 'f' → logprob: -4.064005374908447
    9. '
' → logprob: -4.189005374908447
    10. 'if' → logprob: -4.314005374908447

Token 35: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1143475770950317
    2. 'count' → logprob: -1.2393475770950317
    3. 'for' → logprob: -2.364347457885742
    4. 'res' → logprob: -2.989347457885742
    5. 'c' → logprob: -3.239347457885742
    6. 'freq' → logprob: -3.239347457885742
    7. 'dp' → logprob: -3.364347457885742
    8. 'r' → logprob: -3.739347457885742
    9. 'counts' → logprob: -4.239347457885742
    10. 'ans' → logprob: -4.489347457885742

Token 36: ' get' (ID: 717)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -1.6212129592895508
    2. ' count' → logprob: -2.246212959289551
    3. ' is' → logprob: -2.496212959289551
    4. ' ' → logprob: -2.621212959289551
    5. ' transform' → logprob: -2.871212959289551
    6. ' f' → logprob: -2.871212959289551
    7. ' decode' → logprob: -2.996212959289551
    8. ' palindrome' → logprob: -3.246212959289551
    9. ' encode' → logprob: -3.621212959289551
    10. ' process' → logprob: -3.746212959289551

Token 37: '_matches' (ID: 97462)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.225868821144104
    2. '_char' → logprob: -1.975868821144104
    3. '_v' → logprob: -2.7258687019348145
    4. '_score' → logprob: -2.8508687019348145
    5. '_count' → logprob: -3.1008687019348145
    6. '_indices' → logprob: -3.6008687019348145
    7. '_next' → logprob: -3.7258687019348145
    8. '_' → logprob: -3.8508687019348145
    9. '_length' → logprob: -3.8508687019348145
    10. '_index' → logprob: -4.2258687019348145

Token 38: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020165763795375824
    2. '(S' → logprob: -4.520165920257568
    3. '(s' → logprob: -5.395165920257568
    4. '(line' → logprob: -7.395165920257568
    5. '(word' → logprob: -7.520165920257568
    6. '(string' → logprob: -7.895165920257568
    7. '(text' → logprob: -8.64516544342041
    8. '(strings' → logprob: -8.64516544342041
    9. '(N' → logprob: -8.77016544342041
    10. '(user' → logprob: -8.77016544342041

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07211671769618988
    2. '):' → logprob: -2.8221166133880615
    3. ')' → logprob: -4.822116851806641
    4. ' ,' → logprob: -7.572116851806641
    5. '[' → logprob: -7.947116851806641
    6. 's' → logprob: -7.947116851806641
    7. 'e' → logprob: -8.94711685180664
    8. ',index' → logprob: -9.44711685180664
    9. 'u' → logprob: -9.57211685180664
    10. ',s' → logprob: -9.82211685180664

Token 40: ' l' (ID: 305)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -1.8564876317977905
    2. ' n' → logprob: -1.9814876317977905
    3. ' p' → logprob: -2.60648775100708
    4. 'n' → logprob: -2.73148775100708
    5. 'pattern' → logprob: -2.85648775100708
    6. ' k' → logprob: -3.23148775100708
    7. 'p' → logprob: -3.35648775100708
    8. ' t' → logprob: -3.41898775100708
    9. 'k' → logprob: -3.48148775100708
    10. ' c' → logprob: -3.60648775100708

Token 41: ',' (ID: 11)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.35276639461517334
    2. 'en' → logprob: -1.4777663946151733
    3. '):' → logprob: -3.477766513824463
    4. 'ength' → logprob: -4.227766513824463
    5. 'e' → logprob: -4.352766513824463
    6. ')' → logprob: -5.352766513824463
    7. 'eft' → logprob: -6.602766513824463
    8. '):
' → logprob: -7.352766513824463
    9. ',' → logprob: -7.477766513824463
    10. 'i' → logprob: -7.477766513824463

Token 42: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3926573097705841
    2. ' r' → logprob: -1.2676572799682617
    3. 'i' → logprob: -4.767657279968262
    4. ')' → logprob: -5.392657279968262
    5. ' i' → logprob: -5.517657279968262
    6. 'p' → logprob: -5.642657279968262
    7. ' p' → logprob: -6.017657279968262
    8. 't' → logprob: -6.767657279968262
    9. 'c' → logprob: -6.955157279968262
    10. 'n' → logprob: -7.080157279968262

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01615484058856964
    2. ')' → logprob: -4.141154766082764
    3. ',' → logprob: -10.016155242919922
    4. ' ):' → logprob: -10.391155242919922
    5. '):
' → logprob: -10.516155242919922
    6. '=' → logprob: -11.516155242919922
    7. ':' → logprob: -13.266155242919922
    8. ' ' → logprob: -13.266155242919922
    9. 's' → logprob: -13.891155242919922
    10. '):

' → logprob: -14.641155242919922

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0458734929561615
    2. ':' → logprob: -3.2958734035491943
    3. '):' → logprob: -5.420873641967773
    4. 'if' → logprob: -7.295873641967773
    5. 'return' → logprob: -7.795873641967773
    6. ' ' → logprob: -8.170873641967773
    7. 'for' → logprob: -8.420873641967773
    8. '  ' → logprob: -8.420873641967773
    9. ':
' → logprob: -8.545873641967773
    10. ')' → logprob: -8.545873641967773

Token 45: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5787297487258911
    2. 'count' → logprob: -1.9537297487258911
    3. 'return' → logprob: -2.4537296295166016
    4. 'if' → logprob: -2.7037296295166016
    5. 'matches' → logprob: -3.3287296295166016
    6. ' if' → logprob: -4.078729629516602
    7. ' return' → logprob: -4.203729629516602
    8. ' count' → logprob: -4.203729629516602
    9. ' matches' → logprob: -4.328729629516602
    10. 's' → logprob: -4.578729629516602

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4748617708683014
    2. '=' → logprob: -1.224861741065979
    3. '=[]' → logprob: -2.8498618602752686
    4. 'en' → logprob: -4.3498616218566895
    5. 'ist' → logprob: -5.2248616218566895
    6. ',' → logprob: -6.9748616218566895
    7. 'et' → logprob: -7.0998616218566895
    8. '   ' → logprob: -7.3498616218566895
    9. '[' → logprob: -7.3498616218566895
    10. '=[' → logprob: -7.4748616218566895

Token 47: ' r' (ID: 428)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9236501455307007
    2. '[r' → logprob: -1.2986501455307007
    3. '[s' → logprob: -1.6736501455307007
    4. '[len' → logprob: -2.4236502647399902
    5. ' []' → logprob: -4.54865026473999
    6. ' [' → logprob: -4.54865026473999
    7. '[l' → logprob: -4.79865026473999
    8. '[' → logprob: -4.79865026473999
    9. '[(' → logprob: -5.54865026473999
    10. '[int' → logprob: -6.04865026473999

Token 48: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5432394742965698
    2. '+' → logprob: -1.2932394742965698
    3. ' +' → logprob: -2.0432395935058594
    4. '-l' → logprob: -4.793239593505859
    5. '-' → logprob: -5.668239593505859
    6. 'eturn' → logprob: -6.418239593505859
    7. '-L' → logprob: -8.16823959350586
    8. 'ight' → logprob: -8.54323959350586
    9. '[' → logprob: -8.66823959350586
    10. '-list' → logprob: -8.79323959350586

Token 49: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014434972777962685
    2. ' l' → logprob: -4.264434814453125
    3. '1' → logprob: -8.264434814453125
    4. 's' → logprob: -11.889434814453125
    5. ' ' → logprob: -13.014434814453125
    6. '	l' → logprob: -13.264434814453125
    7. '0' → logprob: -13.764434814453125
    8. '2' → logprob: -15.139434814453125
    9. '10' → logprob: -15.514434814453125
    10. ' s' → logprob: -15.889434814453125

Token 50: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13117264211177826
    2. '+' → logprob: -2.1311726570129395
    3. ' ' → logprob: -6.6311726570129395
    4. '
' → logprob: -6.8811726570129395
    5. '1' → logprob: -7.6311726570129395
    6. ')' → logprob: -7.7561726570129395
    7. 'eturn' → logprob: -8.506172180175781
    8. ' -' → logprob: -9.131172180175781
    9. '   ' → logprob: -9.381172180175781
    10. 's' → logprob: -10.006172180175781

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2082198858261108
    2. ' +' → logprob: -1.2082198858261108
    3. '+' → logprob: -1.4582198858261108
    4. ')' → logprob: -3.0832200050354004
    5. 'eturn' → logprob: -3.9582200050354004
    6. 's' → logprob: -4.3332200050354
    7. ' if' → logprob: -4.4582200050354
    8. ' ' → logprob: -4.8332200050354
    9. 'def' → logprob: -4.8332200050354
    10. ' //' → logprob: -5.0832200050354

Token 52: ' tgt' (ID: 109597)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.527724266052246
    2. '+' → logprob: -2.777724266052246
    3. ' ' → logprob: -2.777724266052246
    4. ' for' → logprob: -2.902724266052246
    5. ' return' → logprob: -2.902724266052246
    6. '   ' → logprob: -3.027724266052246
    7. 'res' → logprob: -3.027724266052246
    8. 'return' → logprob: -3.152724266052246
    9. ' +' → logprob: -3.152724266052246
    10. ' if' → logprob: -3.152724266052246

Token 53: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.577181875705719
    2. ' =' → logprob: -1.0771818161010742
    3. '=' → logprob: -2.827181816101074
    4. 's' → logprob: -4.202181816101074
    5. 'ets' → logprob: -4.327181816101074
    6. 'u' → logprob: -6.452181816101074
    7. 'etter' → logprob: -6.827181816101074
    8. 'arget' → logprob: -6.952181816101074
    9. '_count' → logprob: -7.452181816101074
    10. 'r' → logprob: -7.577181816101074

Token 54: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5613411664962769
    2. 's' → logprob: -0.9363411664962769
    3. ' [' → logprob: -5.436341285705566
    4. 'len' → logprob: -5.436341285705566
    5. ' len' → logprob: -5.561341285705566
    6. 'S' → logprob: -5.936341285705566
    7. ' L' → logprob: -6.061341285705566
    8. ' (' → logprob: -6.186341285705566
    9. ' S' → logprob: -6.186341285705566
    10. ' ' → logprob: -6.186341285705566

Token 55: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0004413975402712822
    2. '[' → logprob: -8.125441551208496
    3. '[r' → logprob: -10.125441551208496
    4. ' [' → logprob: -10.250441551208496
    5. '[L' → logprob: -10.875441551208496
    6. 'l' → logprob: -11.375441551208496
    7. '[:' → logprob: -11.750441551208496
    8. '[s' → logprob: -11.875441551208496
    9. '+l' → logprob: -12.625441551208496
    10. '[i' → logprob: -13.125441551208496

Token 56: ':r' (ID: 118417)
  Prédit: ':l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':l' → logprob: -0.023403290659189224
    2. ':r' → logprob: -4.523403167724609
    3. ':' → logprob: -4.648403167724609
    4. ' :' → logprob: -6.648403167724609
    5. '+' → logprob: -6.773403167724609
    6. '+l' → logprob: -9.02340316772461
    7. ':L' → logprob: -10.02340316772461
    8. ']' → logprob: -11.02340316772461
    9. ' +' → logprob: -11.39840316772461
    10. ':]' → logprob: -11.39840316772461

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007056408794596791
    2. ' ]' → logprob: -7.625705718994141
    3. ']
' → logprob: -9.37570571899414
    4. '].' → logprob: -10.00070571899414
    5. ')' → logprob: -10.75070571899414
    6. '+' → logprob: -11.00070571899414
    7. '])' → logprob: -11.00070571899414
    8. ']

' → logprob: -12.00070571899414
    9. ')]' → logprob: -12.25070571899414
    10. ']+' → logprob: -12.62570571899414

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05880138650536537
    2. '
' → logprob: -3.4338014125823975
    3. 'return' → logprob: -4.808801174163818
    4. 'def' → logprob: -5.808801174163818
    5. ')' → logprob: -5.933801174163818
    6. '[::-' → logprob: -6.058801174163818
    7. '    
' → logprob: -6.183801174163818
    8. ')
' → logprob: -7.183801174163818
    9. ' return' → logprob: -7.433801174163818
    10. 's' → logprob: -7.558801174163818

Token 59: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6965142488479614
    2. 'return' → logprob: -0.9465142488479614
    3. 'matches' → logprob: -3.696514129638672
    4. 'res' → logprob: -4.446514129638672
    5. 'count' → logprob: -4.571514129638672
    6. 'cnt' → logprob: -4.821514129638672
    7. ' return' → logprob: -4.946514129638672
    8. 'm' → logprob: -5.071514129638672
    9. 'for' → logprob: -5.196514129638672
    10. 'def' → logprob: -5.321514129638672

Token 60: ' style' (ID: 2713)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4358652830123901
    2. ' res' → logprob: -1.5608652830123901
    3. 'return' → logprob: -1.8108652830123901
    4. ' matches' → logprob: -2.6858654022216797
    5. ' for' → logprob: -3.0608654022216797
    6. '   ' → logprob: -3.1858654022216797
    7. 'matches' → logprob: -3.3108654022216797
    8. 'res' → logprob: -3.6858654022216797
    9. ' result' → logprob: -3.9358654022216797
    10. 'result' → logprob: -4.56086540222168

Token 61: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3946686089038849
    2. '   ' → logprob: -2.0196685791015625
    3. '=' → logprob: -2.5196685791015625
    4. 's' → logprob: -3.5196685791015625
    5. 'return' → logprob: -4.2696685791015625
    6. ' return' → logprob: -4.8946685791015625
    7. ':' → logprob: -5.2696685791015625
    8. 'def' → logprob: -5.2696685791015625
    9. 'count' → logprob: -5.3946685791015625
    10. ' matches' → logprob: -5.5196685791015625

Token 62: ' comprehension' (ID: 91423)
  Prédit: '_comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -1.0716451406478882
    2. '_com' → logprob: -1.3216451406478882
    3. 'comp' → logprob: -1.4466451406478882
    4. '_' → logprob: -2.9466452598571777
    5. ' comprehension' → logprob: -3.5716452598571777
    6. ' =' → logprob: -3.8216452598571777
    7. 's' → logprob: -4.071645259857178
    8. 'com' → logprob: -4.446645259857178
    9. '_matches' → logprob: -5.196645259857178
    10. 'compr' → logprob: -5.946645259857178

Token 63: ' inside' (ID: 6772)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.626505970954895
    2. '   ' → logprob: -1.001505970954895
    3. '[' → logprob: -3.6265058517456055
    4. ']' → logprob: -4.1265058517456055
    5. ')' → logprob: -4.2515058517456055
    6. ' return' → logprob: -4.6265058517456055
    7. 's' → logprob: -5.0015058517456055
    8. ':' → logprob: -5.8765058517456055
    9. '[:]' → logprob: -5.8765058517456055
    10. '[
' → logprob: -6.1265058517456055

Token 64: ' generator' (ID: 23989)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0847158208489418
    2. ' return' → logprob: -3.0847158432006836
    3. 's' → logprob: -5.209715843200684
    4. 't' → logprob: -5.209715843200684
    5. 'def' → logprob: -5.209715843200684
    6. 'matches' → logprob: -5.459715843200684
    7. '```' → logprob: -5.459715843200684
    8. ' tgt' → logprob: -6.334715843200684
    9. 'get' → logprob: -6.834715843200684
    10. '[t' → logprob: -7.084715843200684

Token 65: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0528357028961182
    2. ' for' → logprob: -1.8028357028961182
    3. ',' → logprob: -2.052835702896118
    4. ')' → logprob: -2.427835702896118
    5. 's' → logprob: -2.552835702896118
    6. ' =' → logprob: -2.802835702896118
    7. '=' → logprob: -3.677835702896118
    8. 'return' → logprob: -3.927835702896118
    9. 'for' → logprob: -4.052835464477539
    10. ':
' → logprob: -4.302835464477539

Token 66: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.217555284500122
    2. 'return' → logprob: -1.842555284500122
    3. ')' → logprob: -1.967555284500122
    4. ' for' → logprob: -2.092555284500122
    5. ',' → logprob: -2.342555284500122
    6. 'for' → logprob: -2.717555284500122
    7. 's' → logprob: -3.967555284500122
    8. ':
' → logprob: -4.217555046081543
    9. '):' → logprob: -4.342555046081543
    10. '(' → logprob: -4.967555046081543

Token 67: ' idx' (ID: 14016)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33233246207237244
    2. '(' → logprob: -2.2073323726654053
    3. 'for' → logprob: -2.8323323726654053
    4. 'yield' → logprob: -3.2073323726654053
    5. '   ' → logprob: -3.5823323726654053
    6. '(i' → logprob: -4.207332611083984
    7. ' return' → logprob: -4.582332611083984
    8. ' for' → logprob: -5.457332611083984
    9. ')' → logprob: -5.457332611083984
    10. '(return' → logprob: -6.207332611083984

Token 68: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6937046647071838
    2. 'es' → logprob: -0.8187046647071838
    3. ' =' → logprob: -3.068704605102539
    4. '_generator' → logprob: -5.318704605102539
    5. '_gen' → logprob: -5.693704605102539
    6. 'ices' → logprob: -6.693704605102539
    7. '=' → logprob: -6.943704605102539
    8. ',' → logprob: -7.693704605102539
    9. '_list' → logprob: -7.693704605102539
    10. '_' → logprob: -7.943704605102539

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28116628527641296
    2. '=' → logprob: -1.4061663150787354
    3. ',' → logprob: -12.281166076660156
    4. 's' → logprob: -12.781166076660156
    5. ' ' → logprob: -12.906166076660156
    6. '  ' → logprob: -13.656166076660156
    7. '   ' → logprob: -13.781166076660156
    8. ')' → logprob: -14.531166076660156
    9. ' =[' → logprob: -14.531166076660156
    10. 'for' → logprob: -14.906166076660156

Token 70: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0458225011825562
    2. '(i' → logprob: -1.2958225011825562
    3. '[i' → logprob: -1.5458225011825562
    4. ' [' → logprob: -2.4208226203918457
    5. '(x' → logprob: -3.2958226203918457
    6. '(s' → logprob: -4.795822620391846
    7. '[x' → logprob: -4.920822620391846
    8. '(' → logprob: -5.170822620391846
    9. '[' → logprob: -5.545822620391846
    10. '[s' → logprob: -6.545822620391846

Token 71: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.025781361386179924
    2. '[i' → logprob: -4.275781154632568
    3. '(i' → logprob: -5.400781154632568
    4. ' i' → logprob: -6.275781154632568
    5. 'j' → logprob: -6.650781154632568
    6. 'k' → logprob: -7.025781154632568
    7. '   ' → logprob: -7.150781154632568
    8. 'idx' → logprob: -7.525781154632568
    9. ' ' → logprob: -7.775781154632568
    10. '```' → logprob: -8.400781631469727

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027207104489207268
    2. 'for' → logprob: -3.652207136154175
    3. ' ' → logprob: -7.527206897735596
    4. '+' → logprob: -8.027207374572754
    5. '  ' → logprob: -11.402207374572754
    6. '	for' → logprob: -11.402207374572754
    7. '-' → logprob: -11.777207374572754
    8. '   ' → logprob: -12.402207374572754
    9. ' +' → logprob: -13.277207374572754
    10. '```' → logprob: -13.652207374572754

Token 73: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.005618496797978878
    2. 'k' → logprob: -5.380618572235107
    3. ',' → logprob: -7.755618572235107
    4. ' ' → logprob: -8.50561809539795
    5. ' in' → logprob: -8.88061809539795
    6. ' range' → logprob: -8.88061809539795
    7. ',k' → logprob: -9.63061809539795
    8. ' ,' → logprob: -12.00561809539795
    9. '	k' → logprob: -12.63061809539795
    10. ' idx' → logprob: -13.00561809539795

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08693617582321167
    2. ' range' → logprob: -3.4619362354278564
    3. ',' → logprob: -3.7119362354278564
    4. 'in' → logprob: -3.8369362354278564
    5. 'range' → logprob: -5.211935997009277
    6. ' ' → logprob: -8.961935997009277
    7. ' xrange' → logprob: -9.211935997009277
    8. 'x' → logprob: -10.336935997009277
    9. ',k' → logprob: -10.461935997009277
    10. 's' → logprob: -10.586935997009277

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890928536653519
    2. ' range' → logprob: -2.578909397125244
    3. '[' → logprob: -11.453908920288086
    4. ' ' → logprob: -12.328908920288086
    5. '	range' → logprob: -13.328908920288086
    6. '(range' → logprob: -13.953908920288086
    7. '   ' → logprob: -14.328908920288086
    8. '  ' → logprob: -14.453908920288086
    9. ' xrange' → logprob: -15.078908920288086
    10. ')' → logprob: -15.703908920288086

Token 76: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.25441884994506836
    2. '(L' → logprob: -1.5044188499450684
    3. '(' → logprob: -6.254418849945068
    4. 'l' → logprob: -8.629419326782227
    5. 'L' → logprob: -9.004419326782227
    6. '(len' → logprob: -9.379419326782227
    7. ' (' → logprob: -10.004419326782227
    8. '   ' → logprob: -10.379419326782227
    9. '	l' → logprob: -10.629419326782227
    10. ' L' → logprob: -11.129419326782227

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09500741958618164
    2. ' +' → logprob: -2.9700074195861816
    3. ',' → logprob: -3.3450074195861816
    4. '   ' → logprob: -6.220007419586182
    5. ' ,' → logprob: -7.095007419586182
    6. '+l' → logprob: -7.595007419586182
    7. ',L' → logprob: -7.595007419586182
    8. ' ' → logprob: -9.220006942749023
    9. '+r' → logprob: -10.470006942749023
    10. '    ' → logprob: -10.595006942749023

Token 78: ' L' (ID: 451)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0271893497556448
    2. 'L' → logprob: -3.777189254760742
    3. ' ' → logprob: -5.902189254760742
    4. ' L' → logprob: -7.527189254760742
    5. '   ' → logprob: -7.527189254760742
    6. '2' → logprob: -9.527189254760742
    7. '0' → logprob: -11.402189254760742
    8. '(' → logprob: -11.777189254760742
    9. '(L' → logprob: -11.777189254760742
    10. '  ' → logprob: -12.652189254760742

Token 79: ',' (ID: 11)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.8537999987602234
    2. ' //' → logprob: -0.9787999987602234
    3. ' -' → logprob: -2.853800058364868
    4. ' ' → logprob: -3.103800058364868
    5. ' +' → logprob: -3.478800058364868
    6. ',' → logprob: -3.728800058364868
    7. '-' → logprob: -4.353799819946289
    8. ')' → logprob: -4.478799819946289
    9. '+' → logprob: -4.728799819946289
    10. ' ,' → logprob: -5.478799819946289

Token 80: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.34898898005485535
    2. ' len' → logprob: -1.3489890098571777
    3. 'l' → logprob: -4.473989009857178
    4. 'N' → logprob: -4.973989009857178
    5. 'r' → logprob: -5.098989009857178
    6. ' l' → logprob: -5.973989009857178
    7. ' N' → logprob: -6.223989009857178
    8. ' r' → logprob: -6.598989009857178
    9. 'n' → logprob: -6.848989009857178
    10. ' ' → logprob: -6.848989009857178

Token 81: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0019706233870238066
    2. '(t' → logprob: -6.3769707679748535
    3. 's' → logprob: -8.501970291137695
    4. '(S' → logprob: -10.126970291137695
    5. '(' → logprob: -11.251970291137695
    6. 't' → logprob: -12.126970291137695
    7. 'S' → logprob: -13.126970291137695
    8. ' (' → logprob: -14.001970291137695
    9. ')' → logprob: -14.001970291137695
    10. '(n' → logprob: -14.876970291137695

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07280813157558441
    2. '))' → logprob: -2.697808027267456
    3. ' )' → logprob: -5.947808265686035
    4. ')))' → logprob: -9.447808265686035
    5. ' ))' → logprob: -9.822808265686035
    6. ' -' → logprob: -10.572808265686035
    7. ' ' → logprob: -10.697808265686035
    8. '   ' → logprob: -11.072808265686035
    9. ')
' → logprob: -11.072808265686035
    10. '))
' → logprob: -11.947808265686035

Token 83: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003091558814048767
    2. ' )' → logprob: -6.253091335296631
    3. ' -' → logprob: -7.753091335296631
    4. '-' → logprob: -7.878091335296631
    5. ' if' → logprob: -9.003091812133789
    6. '   ' → logprob: -9.753091812133789
    7. '))' → logprob: -9.878091812133789
    8. '-l' → logprob: -10.128091812133789
    9. 'if' → logprob: -10.628091812133789
    10. ' ' → logprob: -11.128091812133789

Token 84: ' ' (ID: 220)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.20178206264972687
    2. ' L' → logprob: -1.7017821073532104
    3. ' ' → logprob: -8.7017822265625
    4. '1' → logprob: -9.5767822265625
    5. 'l' → logprob: -9.9517822265625
    6. ')' → logprob: -11.3267822265625
    7. 'N' → logprob: -11.4517822265625
    8. '2' → logprob: -11.5767822265625
    9. ' (' → logprob: -11.5767822265625
    10. ' l' → logprob: -11.8267822265625

Token 85: '1' (ID: 16)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00626495061442256
    2. ' L' → logprob: -5.131265163421631
    3. '(L' → logprob: -8.631264686584473
    4. '1' → logprob: -9.131264686584473
    5. ' (' → logprob: -10.756264686584473
    6. ' ' → logprob: -12.006264686584473
    7. 'l' → logprob: -12.256264686584473
    8. '(' → logprob: -12.756264686584473
    9. 'N' → logprob: -12.881264686584473
    10. '+' → logprob: -13.131264686584473

Token 86: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012746135704219341
    2. '+' → logprob: -5.512746334075928
    3. ' if' → logprob: -6.137746334075928
    4. ',' → logprob: -6.262746334075928
    5. ' )' → logprob: -6.762746334075928
    6. ' +' → logprob: -7.012746334075928
    7. '   ' → logprob: -7.012746334075928
    8. ' -' → logprob: -7.137746334075928
    9. '    ' → logprob: -8.38774585723877
    10. '-' → logprob: -8.63774585723877

Token 87: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011298561468720436
    2. ')' → logprob: -5.386298656463623
    3. 'if' → logprob: -5.511298656463623
    4. '+' → logprob: -6.386298656463623
    5. '   ' → logprob: -7.261298656463623
    6. '  ' → logprob: -9.761298179626465
    7. ' ' → logprob: -10.136298179626465
    8. '    ' → logprob: -10.136298179626465
    9. '	if' → logprob: -10.636298179626465
    10. ' +' → logprob: -11.011298179626465

Token 88: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01736612431704998
    2. 'if' → logprob: -4.2673659324646
    3. ')' → logprob: -6.5173659324646
    4. '   ' → logprob: -7.0173659324646
    5. '+' → logprob: -8.142366409301758
    6. ' ' → logprob: -8.517366409301758
    7. '  ' → logprob: -9.017366409301758
    8. '    ' → logprob: -9.392366409301758
    9. '	if' → logprob: -9.392366409301758
    10. ':' → logprob: -11.392366409301758

Token 89: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.47652649879455566
    2. ' i' → logprob: -1.6015264987945557
    3. 'k' → logprob: -2.1015264987945557
    4. ' idx' → logprob: -3.6015264987945557
    5. ' j' → logprob: -4.726526260375977
    6. 'i' → logprob: -4.726526260375977
    7. 'idx' → logprob: -5.851526260375977
    8. ' x' → logprob: -6.976526260375977
    9. 'j' → logprob: -6.976526260375977
    10. ' ' → logprob: -6.976526260375977

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005305027589201927
    2. 'in' → logprob: -5.25530481338501
    3. ',' → logprob: -10.255305290222168
    4. ' ' → logprob: -11.005305290222168
    5. '  ' → logprob: -11.755305290222168
    6. 's' → logprob: -12.380305290222168
    7. 'not' → logprob: -13.505305290222168
    8. '	in' → logprob: -13.755305290222168
    9. ' not' → logprob: -14.255305290222168
    10. '   ' → logprob: -14.255305290222168

Token 91: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.004602314904332161
    2. 'idx' → logprob: -6.004602432250977
    3. ' range' → logprob: -6.504602432250977
    4. '(idx' → logprob: -8.254602432250977
    5. '[idx' → logprob: -9.379602432250977
    6. ' (' → logprob: -9.379602432250977
    7. 'range' → logprob: -9.879602432250977
    8. ' ' → logprob: -10.379602432250977
    9. '	idx' → logprob: -10.379602432250977
    10. ' [' → logprob: -10.879602432250977

Token 92: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33095183968544006
    2. 'xs' → logprob: -1.5809518098831177
    3. 'x' → logprob: -2.5809519290924072
    4. 'xes' → logprob: -9.830951690673828
    5. 'cs' → logprob: -10.080951690673828
    6. 'ex' → logprob: -10.205951690673828
    7. 'ks' → logprob: -10.705951690673828
    8. 'sx' → logprob: -10.955951690673828
    9. '   ' → logprob: -11.330951690673828
    10. 'dx' → logprob: -11.580951690673828

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006460628472268581
    2. ':
' → logprob: -5.131460666656494
    3. ' :' → logprob: -8.381460189819336
    4. ' if' → logprob: -8.506460189819336
    5. '<|end|>' → logprob: -10.006460189819336
    6. '):' → logprob: -11.756460189819336
    7. '   ' → logprob: -11.756460189819336
    8. ' :
' → logprob: -12.006460189819336
    9. '):
' → logprob: -12.256460189819336
    10. ':return' → logprob: -12.631460189819336

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6428154110908508
    2. ':' → logprob: -1.642815351486206
    3. '   ' → logprob: -1.892815351486206
    4. ' if' → logprob: -2.267815351486206
    5. 'if' → logprob: -4.892815589904785
    6. '-' → logprob: -5.017815589904785
    7. '<|end|>' → logprob: -5.517815589904785
    8. '    ' → logprob: -6.142815589904785
    9. ':
' → logprob: -6.767815589904785
    10. '+' → logprob: -6.767815589904785

Token 95: ' cmp' (ID: 57822)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1631447821855545
    2. ' if' → logprob: -1.913144826889038
    3. 'if' → logprob: -6.788144588470459
    4. '   ' → logprob: -7.913144588470459
    5. '    ' → logprob: -8.288145065307617
    6. '+' → logprob: -9.038145065307617
    7. '<|end|>' → logprob: -9.038145065307617
    8. ',' → logprob: -9.288145065307617
    9. '-' → logprob: -9.288145065307617
    10. 's' → logprob: -9.413145065307617

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31992867588996887
    2. '=' → logprob: -1.4449286460876465
    3. '_s' → logprob: -3.9449286460876465
    4. '_' → logprob: -5.3199286460876465
    5. 'if' → logprob: -6.0699286460876465
    6. 's' → logprob: -6.1949286460876465
    7. '_idx' → logprob: -6.3199286460876465
    8. '_start' → logprob: -7.1949286460876465
    9. 'k' → logprob: -7.1949286460876465
    10. '_len' → logprob: -7.3199286460876465

Token 97: ' "".' (ID: 94734)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08049110323190689
    2. 's' → logprob: -2.580491065979004
    3. ' tgt' → logprob: -6.580491065979004
    4. ' ' → logprob: -9.080491065979004
    5. 't' → logprob: -10.705491065979004
    6. '   ' → logprob: -10.955491065979004
    7. '(s' → logprob: -11.205491065979004
    8. '  ' → logprob: -11.830491065979004
    9. '	s' → logprob: -12.205491065979004
    10. ' ' → logprob: -12.830491065979004

Token 98: 'join' (ID: 10891)
  Prédit: 'startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'startswith' → logprob: -0.06715162098407745
    2. 'join' → logprob: -2.9421515464782715
    3. 'find' → logprob: -4.5671515464782715
    4. 's' → logprob: -6.6921515464782715
    5. 'count' → logprob: -8.81715202331543
    6. 'compare' → logprob: -8.94215202331543
    7. 'replace' → logprob: -9.94215202331543
    8. 'format' → logprob: -9.94215202331543
    9. 'slice' → logprob: -10.31715202331543
    10. 'r' → logprob: -10.31715202331543

Token 99: '([' (ID: 5194)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004241161979734898
    2. '([' → logprob: -6.254240989685059
    3. '(' → logprob: -6.629240989685059
    4. '(sorted' → logprob: -8.379240989685059
    5. '(t' → logprob: -8.504240989685059
    6. '((' → logprob: -8.629240989685059
    7. '(re' → logprob: -8.754240989685059
    8. 's' → logprob: -10.004240989685059
    9. '(S' → logprob: -10.129240989685059
    10. '(list' → logprob: -10.129240989685059

Token 100: 'c' (ID: 66)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01983718015253544
    2. 't' → logprob: -4.644837379455566
    3. ' s' → logprob: -5.394837379455566
    4. 'c' → logprob: -5.644837379455566
    5. '   ' → logprob: -8.019837379455566
    6. '[t' → logprob: -8.394837379455566
    7. '[s' → logprob: -8.519837379455566
    8. '[c' → logprob: -9.019837379455566
    9. ' ' → logprob: -9.019837379455566
    10. '(s' → logprob: -9.144837379455566

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004332676064223051
    2. 'for' → logprob: -5.504332542419434
    3. ' if' → logprob: -8.504332542419434
    4. 's' → logprob: -11.379332542419434
    5. '1' → logprob: -11.504332542419434
    6. ' ' → logprob: -11.754332542419434
    7. 'if' → logprob: -11.754332542419434
    8. '	for' → logprob: -12.504332542419434
    9. ' ==' → logprob: -12.879332542419434
    10. '   ' → logprob: -12.879332542419434

Token 102: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.027604002505540848
    2. 'c' → logprob: -3.777604103088379
    3. ' s' → logprob: -6.277604103088379
    4. ' range' → logprob: -7.277604103088379
    5. ' cmp' → logprob: -7.527604103088379
    6. 's' → logprob: -7.902604103088379
    7. 'range' → logprob: -9.277604103088379
    8. ' t' → logprob: -9.277604103088379
    9. ' tgt' → logprob: -9.340104103088379
    10. ' in' → logprob: -9.465104103088379

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001525452476926148
    2. 'in' → logprob: -7.501525402069092
    3. ',' → logprob: -7.626525402069092
    4. 's' → logprob: -8.12652587890625
    5. ',c' → logprob: -9.25152587890625
    6. ' c' → logprob: -10.50152587890625
    7. 'c' → logprob: -10.75152587890625
    8. ' ' → logprob: -10.87652587890625
    9. ' s' → logprob: -12.00152587890625
    10. ' ,' → logprob: -12.12652587890625

Token 104: ' s' (ID: 265)
  Prédit: ' tgt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tgt' → logprob: -0.11246570199728012
    2. ' s' → logprob: -2.8624656200408936
    3. ' range' → logprob: -3.7374656200408936
    4. 's' → logprob: -4.112465858459473
    5. 't' → logprob: -4.987465858459473
    6. 'range' → logprob: -6.487465858459473
    7. ' t' → logprob: -7.737465858459473
    8. '(t' → logprob: -10.174965858459473
    9. ' target' → logprob: -10.299965858459473
    10. ' targ' → logprob: -10.424965858459473

Token 105: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00516141252592206
    2. ' k' → logprob: -6.255161285400391
    3. '[l' → logprob: -6.630161285400391
    4. '[r' → logprob: -7.005161285400391
    5. ' in' → logprob: -8.00516128540039
    6. '[' → logprob: -8.75516128540039
    7. ' [' → logprob: -9.00516128540039
    8. 'k' → logprob: -9.25516128540039
    9. ' r' → logprob: -10.00516128540039
    10. '][' → logprob: -10.00516128540039

Token 106: ':k' (ID: 69335)
  Prédit: ':k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':k' → logprob: -0.24329008162021637
    2. ' :' → logprob: -1.7432900667190552
    3. 'k' → logprob: -4.118289947509766
    4. ':' → logprob: -4.243289947509766
    5. '-k' → logprob: -5.618289947509766
    6. ' -' → logprob: -6.118289947509766
    7. ' k' → logprob: -6.243289947509766
    8. '-' → logprob: -6.493289947509766
    9. ' ' → logprob: -7.368289947509766
    10. '   ' → logprob: -8.368289947509766

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023317337036132812
    2. ' +' → logprob: -3.773317337036133
    3. 'L' → logprob: -9.898317337036133
    4. '+k' → logprob: -12.273317337036133
    5. '+l' → logprob: -12.273317337036133
    6. ' ' → logprob: -12.398317337036133
    7. ' L' → logprob: -12.523317337036133
    8. '   ' → logprob: -13.273317337036133
    9. '-L' → logprob: -13.898317337036133
    10. '>L' → logprob: -15.148317337036133

Token 108: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005016815848648548
    2. ' L' → logprob: -7.75050163269043
    3. ' ' → logprob: -9.75050163269043
    4. '   ' → logprob: -12.25050163269043
    5. '  ' → logprob: -12.87550163269043
    6. 'r' → logprob: -13.12550163269043
    7. 'len' → logprob: -14.37550163269043
    8. 'l' → logprob: -14.50050163269043
    9. '
' → logprob: -14.62550163269043
    10. '(L' → logprob: -14.62550163269043

Token 109: ']])
' (ID: 62818)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13678306341171265
    2. ']])' → logprob: -2.1367831230163574
    3. ']==' → logprob: -5.136783123016357
    4. ' ]' → logprob: -5.636783123016357
    5. ']])
' → logprob: -8.6367826461792
    6. ']]' → logprob: -10.0117826461792
    7. ']])

' → logprob: -10.3867826461792
    8. ' if' → logprob: -10.7617826461792
    9. ')])' → logprob: -11.1367826461792
    10. '   ' → logprob: -11.3867826461792

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15091942250728607
    2. ')' → logprob: -2.1509194374084473
    3. '<|end|>' → logprob: -4.525919437408447
    4. ' ==' → logprob: -5.650919437408447
    5. '==' → logprob: -5.900919437408447
    6. ' if' → logprob: -6.150919437408447
    7. '<|end|>' → logprob: -7.025919437408447
    8. ')
' → logprob: -7.400919437408447
    9. '
' → logprob: -7.900919437408447
    10. ')==' → logprob: -7.900919437408447

Token 111: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24770793318748474
    2. ' if' → logprob: -2.8727078437805176
    3. '<|end|>' → logprob: -2.8727078437805176
    4. ' ==' → logprob: -3.4977078437805176
    5. '==' → logprob: -3.4977078437805176
    6. ')' → logprob: -3.8727078437805176
    7. '
' → logprob: -4.622707843780518
    8. 'if' (adapté à ' if') → logprob: -5.372707843780518
    9. '<|end|>' → logprob: -5.497707843780518
    10. '   ' → logprob: -5.997707843780518

Token 112: ' tgt' (ID: 109597)
  Prédit: ' cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmp' → logprob: -0.016738684847950935
    2. 'cmp' → logprob: -4.1417388916015625
    3. ' tgt' → logprob: -7.2667388916015625
    4. 't' → logprob: -13.016738891601562
    5. ' ' → logprob: -13.891738891601562
    6. '	c' → logprob: -14.016738891601562
    7. ' cm' → logprob: -15.141738891601562
    8. 'c' → logprob: -15.266738891601562
    9. '   ' → logprob: -15.266738891601562
    10. ' comp' → logprob: -15.516738891601562

Token 113: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931562423706055
    2. ' ==' → logprob: -0.6931562423706055
    3. ' in' → logprob: -12.068156242370605
    4. '=' → logprob: -13.943156242370605
    5. '==
' → logprob: -14.193156242370605
    6. ' ' → logprob: -14.318156242370605
    7. ' ' → logprob: -15.693156242370605
    8. 'in' → logprob: -15.943156242370605
    9. '===' → logprob: -15.943156242370605
    10. '[' → logprob: -16.318157196044922

Token 114: ' cmp' (ID: 57822)
  Prédit: ' cmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmp' → logprob: -0.07889022678136826
    2. 'cmp' → logprob: -2.578890323638916
    3. ' cm' → logprob: -15.203889846801758
    4. ' ' → logprob: -15.703889846801758
    5. 'cm' → logprob: -17.078889846801758
    6. ' c' → logprob: -18.203889846801758
    7. ' cmb' → logprob: -18.453889846801758
    8. '_cmp' → logprob: -18.828889846801758
    9. 'c' → logprob: -18.953889846801758
    10. '	c' → logprob: -18.953889846801758

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016116275219246745
    2. ':
' → logprob: -6.501611709594727
    3. '):' → logprob: -10.126611709594727
    4. ':return' → logprob: -10.126611709594727
    5. ' and' → logprob: -11.501611709594727
    6. '       ' → logprob: -12.126611709594727
    7. '           ' → logprob: -12.501611709594727
    8. ' :' → logprob: -12.876611709594727
    9. '):
' → logprob: -13.376611709594727
    10. ')' → logprob: -13.501611709594727

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011322376318275928
    2. ' return' → logprob: -5.136322498321533
    3. ':' → logprob: -6.511322498321533
    4. ':
' → logprob: -6.761322498321533
    5. ':return' → logprob: -6.761322498321533
    6. 'return' → logprob: -7.011322498321533
    7. '               ' → logprob: -8.386322021484375
    8. '
' → logprob: -9.261322021484375
    9. '):' → logprob: -9.511322021484375
    10. '):
' → logprob: -10.011322021484375

Token 117: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6229559779167175
    2. 'return' (adapté à ' return') → logprob: -1.4979560375213623
    3. '           ' → logprob: -1.6229560375213623
    4. ' yield' → logprob: -3.4979560375213623
    5. 'yield' → logprob: -4.497955799102783
    6. '               ' → logprob: -6.997955799102783
    7. '       ' → logprob: -7.997955799102783
    8. '	yield' → logprob: -9.997956275939941
    9. '   ' → logprob: -11.497956275939941
    10. '
' → logprob: -11.497956275939941

Token 118: ' L' (ID: 451)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004022953100502491
    2. ' k' → logprob: -5.62902307510376
    3. 'True' → logprob: -8.129022598266602
    4. ' True' → logprob: -9.379022598266602
    5. '[k' → logprob: -11.254022598266602
    6. '(k' → logprob: -11.379022598266602
    7. ' ' → logprob: -12.129022598266602
    8. 's' → logprob: -12.129022598266602
    9. '   ' → logprob: -13.629022598266602
    10. ' [' → logprob: -14.004022598266602

Token 119: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.687308132648468
    2. '+' → logprob: -1.1873080730438232
    3. '<|end|>' → logprob: -2.0623080730438232
    4. ')' → logprob: -4.187308311462402
    5. ' ' → logprob: -4.437308311462402
    6. '       ' → logprob: -4.937308311462402
    7. '    ' → logprob: -5.187308311462402
    8. '<|end|>' → logprob: -5.312308311462402
    9. ' +' → logprob: -5.437308311462402
    10. '[' → logprob: -5.687308311462402

Token 121: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7461087107658386
    2. '<|end|>' → logprob: -0.9961087107658386
    3. ')' → logprob: -2.3711087703704834
    4. '
' → logprob: -4.621108531951904
    5. ' ' → logprob: -4.746108531951904
    6. 'return' (adapté à ' return') → logprob: -4.871108531951904
    7. '+' → logprob: -5.121108531951904
    8. ' return' → logprob: -5.246108531951904
    9. '0' → logprob: -5.746108531951904
    10. ',' → logprob: -6.121108531951904

Token 122: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3286190330982208
    2. '0' → logprob: -1.4536190032958984
    3. ' None' → logprob: -3.0786190032958984
    4. ' ' → logprob: -8.203619003295898
    5. '-' → logprob: -10.453619003295898
    6. 'False' → logprob: -10.703619003295898
    7. ' -' → logprob: -12.078619003295898
    8. '   ' → logprob: -13.328619003295898
    9. '_None' → logprob: -13.328619003295898
    10. ' ' → logprob: -14.328619003295898

Token 123: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07450424134731293
    2. ':' → logprob: -3.3245041370391846
    3. '<|end|>' → logprob: -3.5745041370391846
    4. '+' → logprob: -5.449504375457764
    5. '<|end|>' → logprob: -7.074504375457764
    6. '):' → logprob: -7.074504375457764
    7. '0' → logprob: -8.074503898620605
    8. ')
' → logprob: -8.949503898620605
    9. 's' → logprob: -9.199503898620605
    10. '
' → logprob: -9.199503898620605

Token 124: 'class' (ID: 1444)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07591775059700012
    2. ':' → logprob: -2.8259177207946777
    3. ' ' → logprob: -5.575917720794678
    4. '<|end|>' → logprob: -5.950917720794678
    5. '):' → logprob: -6.825917720794678
    6. '+' → logprob: -6.825917720794678
    7. ' )' → logprob: -6.950917720794678
    8. 's' → logprob: -7.200917720794678
    9. '[' → logprob: -7.450917720794678
    10. ']' → logprob: -7.575917720794678

Token 125: ' Window' (ID: 24479)
  Prédit: ' Matcher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Matcher' → logprob: -0.30998578667640686
    2. ' Trie' → logprob: -3.059985876083374
    3. ' Solution' → logprob: -3.184985876083374
    4. ' String' → logprob: -3.559985876083374
    5. ' K' → logprob: -3.809985876083374
    6. ' A' → logprob: -3.934985876083374
    7. ' Match' → logprob: -3.934985876083374
    8. ' S' → logprob: -4.059985637664795
    9. ' Re' → logprob: -4.559985637664795
    10. ' Pattern' → logprob: -4.559985637664795

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010178061202168465
    2. '(' → logprob: -7.2510175704956055
    3. '(object' → logprob: -8.751017570495605
    4. ':
' → logprob: -9.626017570495605
    5. '():' → logprob: -10.126017570495605
    6. ' :' → logprob: -11.126017570495605
    7. '(list' → logprob: -11.751017570495605
    8. '(size' → logprob: -12.626017570495605
    9. '):' → logprob: -13.126017570495605
    10. '(Size' → logprob: -13.251017570495605

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030186280608177185
    2. ':' → logprob: -4.155186176300049
    3. '    ' → logprob: -5.155186176300049
    4. '    
' → logprob: -6.280186176300049
    5. '<|end|>' → logprob: -6.405186176300049
    6. ' def' → logprob: -6.780186176300049
    7. '(' → logprob: -7.155186176300049
    8. 'def' → logprob: -7.155186176300049
    9. ' ' → logprob: -7.405186176300049
    10. ':
' → logprob: -8.030186653137207

Token 128: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6488244533538818
    2. 'def' (adapté à ' def') → logprob: -0.7738244533538818
    3. '   ' → logprob: -4.648824691772461
    4. '__' → logprob: -5.273824691772461
    5. ' __' → logprob: -6.648824691772461
    6. '	def' → logprob: -10.023824691772461
    7. ' ' → logprob: -10.523824691772461
    8. '```' → logprob: -11.648824691772461
    9. '    
' → logprob: -12.523824691772461
    10. ':def' → logprob: -13.398824691772461

Token 129: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3650994300842285
    2. 'init' → logprob: -1.6150994300842285
    3. ' __' → logprob: -2.3650994300842285
    4. '_init' → logprob: -4.3650994300842285
    5. ' init' → logprob: -8.61509895324707
    6. 'it' → logprob: -9.24009895324707
    7. '_' → logprob: -10.74009895324707
    8. 't' → logprob: -11.49009895324707
    9. '___' → logprob: -11.86509895324707
    10. 'nit' → logprob: -12.24009895324707

Token 130: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.981667537620524e-06
    2. 'ini' → logprob: -13.875001907348633
    3. 'def' → logprob: -14.750001907348633
    4. 'in' → logprob: -15.750001907348633
    5. 'i' → logprob: -15.875001907348633
    6. 'int' → logprob: -16.375001907348633
    7. 'inite' → logprob: -17.125001907348633
    8. ' init' → logprob: -17.625001907348633
    9. '_init' → logprob: -17.750001907348633
    10. '```' → logprob: -17.750001907348633

Token 131: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038125261664390564
    2. '__' → logprob: -3.2881252765655518
    3. '__(
' → logprob: -9.788125038146973
    4. '__((' → logprob: -11.288125038146973
    5. '(self' → logprob: -11.663125038146973
    6. '__('' → logprob: -12.788125038146973
    7. '(' → logprob: -13.413125038146973
    8. '__(*' → logprob: -14.038125038146973
    9. '___' → logprob: -14.413125038146973
    10. '__("' → logprob: -15.288125038146973

Token 132: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011705794604495168
    2. ' self' → logprob: -6.751170635223389
    3. '(self' → logprob: -15.75117015838623
    4. ')' → logprob: -16.376171112060547
    5. 's' → logprob: -17.126171112060547
    6. '   ' → logprob: -17.251171112060547
    7. ',' → logprob: -17.626171112060547
    8. '	self' → logprob: -17.626171112060547
    9. ',self' → logprob: -18.001171112060547
    10. '_self' → logprob: -18.001171112060547

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022148462012410164
    2. ' ,' → logprob: -6.2522149085998535
    3. ',s' → logprob: -8.627214431762695
    4. 'self' → logprob: -9.252214431762695
    5. ',self' → logprob: -12.002214431762695
    6. '(self' → logprob: -13.377214431762695
    7. '   ' → logprob: -13.752214431762695
    8. '(s' → logprob: -15.002214431762695
    9. ' (' → logprob: -15.377214431762695
    10. ',n' → logprob: -15.502214431762695

Token 134: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2888019382953644
    2. 'size' → logprob: -2.788801908493042
    3. 'start' → logprob: -2.788801908493042
    4. ' s' → logprob: -3.163801908493042
    5. 'l' → logprob: -3.288801908493042
    6. 'left' → logprob: -3.788801908493042
    7. ' size' → logprob: -4.663802146911621
    8. ' left' → logprob: -5.288802146911621
    9. ' start' → logprob: -5.788802146911621
    10. ' l' → logprob: -6.038802146911621

Token 135: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038042343221604824
    2. ' ,' → logprob: -5.7538042068481445
    3. '):' → logprob: -7.7538042068481445
    4. ')' → logprob: -9.128804206848145
    5. ',n' → logprob: -10.003804206848145
    6. '=' → logprob: -10.878804206848145
    7. ' ):' → logprob: -12.003804206848145
    8. '   ' → logprob: -12.878804206848145
    9. ' )' → logprob: -12.878804206848145
    10. ' ' → logprob: -13.003804206848145

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030676912516355515
    2. ',' → logprob: -3.53067684173584
    3. ',n' → logprob: -7.90567684173584
    4. 'self' → logprob: -8.53067684173584
    5. '   ' → logprob: -9.15567684173584
    6. ' self' → logprob: -9.65567684173584
    7. 'n' → logprob: -9.90567684173584
    8. '(n' → logprob: -10.65567684173584
    9. ' ,' → logprob: -10.78067684173584
    10. '	' → logprob: -10.90567684173584

Token 137: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03404882550239563
    2. '       ' → logprob: -3.7840487957000732
    3. ' self' → logprob: -4.534049034118652
    4. '   ' → logprob: -12.284049034118652
    5. '	self' → logprob: -12.909049034118652
    6. ' ' → logprob: -14.909049034118652
    7. 'def' → logprob: -16.409048080444336
    8. '(self' → logprob: -16.534048080444336
    9. '     ' → logprob: -16.659048080444336
    10. '      ' → logprob: -16.659048080444336

Token 138: '.l' (ID: 1000)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.08127481490373611
    2. ' =' → logprob: -3.0812747478485107
    3. '.' → logprob: -3.9562747478485107
    4. '=' → logprob: -5.70627498626709
    5. '._' → logprob: -5.70627498626709
    6. '.size' → logprob: -6.20627498626709
    7. ' .' → logprob: -6.70627498626709
    8. '.N' → logprob: -7.20627498626709
    9. '=n' → logprob: -7.45627498626709
    10. '   ' → logprob: -7.70627498626709

Token 139: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6981456279754639
    2. ' =' → logprob: -0.6981456279754639
    3. ',' → logprob: -5.323145866394043
    4. '   ' → logprob: -10.073145866394043
    5. ' ,' → logprob: -10.698145866394043
    6. 'eft' → logprob: -11.073145866394043
    7. 'f' → logprob: -11.948145866394043
    8. ' ' → logprob: -12.198145866394043
    9. '=int' → logprob: -12.448145866394043
    10. 'e' → logprob: -13.198145866394043

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09274059534072876
    2. ' self' → logprob: -2.467740535736084
    3. '0' → logprob: -6.092740535736084
    4. ' =' → logprob: -6.967740535736084
    5. 'n' → logprob: -8.342741012573242
    6. ' ' → logprob: -9.092741012573242
    7. '=' → logprob: -9.592741012573242
    8. '=self' → logprob: -9.967741012573242
    9. ' n' → logprob: -10.092741012573242
    10. 's' → logprob: -10.717741012573242

Token 141: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0002502535644453019
    2. '.n' → logprob: -8.625249862670898
    3. '.' → logprob: -10.500249862670898
    4. '.l' → logprob: -11.125249862670898
    5. 'r' → logprob: -11.250249862670898
    6. ' =' → logprob: -11.875249862670898
    7. ' .' → logprob: -12.500249862670898
    8. '=' → logprob: -14.375249862670898
    9. '.u' → logprob: -14.375249862670898
    10. '_r' → logprob: -14.750249862670898

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.87692928314209
    4. ',' → logprob: -15.62692928314209
    5. '<|end|>' → logprob: -15.62692928314209
    6. '0' → logprob: -16.626928329467773
    7. '=None' → logprob: -16.751928329467773
    8. '=int' → logprob: -17.501928329467773
    9. '＝' → logprob: -17.626928329467773
    10. '<|end|>' → logprob: -17.751928329467773

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043030016124248505
    2. ' ' → logprob: -3.168030023574829
    3. '(' → logprob: -10.66802978515625
    4. ' (' → logprob: -12.16802978515625
    5. '   ' → logprob: -13.79302978515625
    6. '1' → logprob: -14.79302978515625
    7. ' ' → logprob: -15.54302978515625
    8. '  ' → logprob: -16.04302978515625
    9. '[' → logprob: -16.35552978515625
    10. ',' → logprob: -16.48052978515625

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.876193169271573e-05
    2. ' ' → logprob: -9.500088691711426
    3. '(' → logprob: -11.250088691711426
    4. '1' → logprob: -14.750088691711426
    5. '   ' → logprob: -16.000089645385742
    6. '[' → logprob: -16.625089645385742
    7. ' (' → logprob: -16.875089645385742
    8. '-' → logprob: -16.875089645385742
    9. ',' → logprob: -17.500089645385742
    10. 'None' → logprob: -17.750089645385742

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016930309357121587
    2. ',n' → logprob: -6.876693248748779
    3. ',
' → logprob: -8.251692771911621
    4. ' ,' → logprob: -8.626692771911621
    5. ',N' → logprob: -9.001692771911621
    6. '       ' → logprob: -9.751692771911621
    7. '+' → logprob: -11.376692771911621
    8. '   ' → logprob: -11.626692771911621
    9. ',None' → logprob: -12.376692771911621
    10. ' +' → logprob: -13.126692771911621

Token 146: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6983617544174194
    2. '1' → logprob: -1.3233617544174194
    3. '0' → logprob: -1.6983617544174194
    4. ' n' → logprob: -3.073361873626709
    5. ' ' → logprob: -5.073361873626709
    6. 'N' → logprob: -7.948361873626709
    7. '2' → logprob: -8.07336139678955
    8. ' N' → logprob: -9.82336139678955
    9. '   ' → logprob: -10.32336139678955
    10. '10' → logprob: -10.69836139678955

Token 147: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8579251170158386
    2. '1' → logprob: -0.9829251170158386
    3. '0' → logprob: -1.6079251766204834
    4. 'N' → logprob: -7.232924938201904
    5. ' n' → logprob: -8.107925415039062
    6. '2' → logprob: -8.232925415039062
    7. ' ' → logprob: -9.107925415039062
    8. '10' → logprob: -12.232925415039062
    9. '-' → logprob: -12.295425415039062
    10. '3' → logprob: -12.545425415039062

Token 148: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04631597176194191
    2. 'self' (adapté à ' self') → logprob: -3.171315908432007
    3. ' self' → logprob: -6.046316146850586
    4. 'n' → logprob: -7.421316146850586
    5. '   ' → logprob: -8.921316146850586
    6. 'def' → logprob: -9.171316146850586
    7. '
' → logprob: -10.296316146850586
    8. '	self' → logprob: -10.671316146850586
    9. '	' → logprob: -10.796316146850586
    10. '<|end|>' → logprob: -11.671316146850586

Token 151: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0004889304982498288
    2. '.length' → logprob: -8.375489234924316
    3. '.size' → logprob: -9.250489234924316
    4. '.s' → logprob: -9.750489234924316
    5. ' .' → logprob: -10.500489234924316
    6. '.N' → logprob: -11.125489234924316
    7. '.r' → logprob: -11.250489234924316
    8. '.' → logprob: -11.625489234924316
    9. '.max' → logprob: -11.625489234924316
    10. '.len' → logprob: -12.625489234924316

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145240426063538
    2. ' =' → logprob: -1.701452374458313
    3. '   ' → logprob: -11.576452255249023
    4. ' ' → logprob: -11.576452255249023
    5. '<|end|>' → logprob: -12.201452255249023
    6. '    ' → logprob: -12.701452255249023
    7. ',' → logprob: -12.701452255249023
    8. '=n' → logprob: -13.201452255249023
    9. '  ' → logprob: -13.701452255249023
    10. 's' → logprob: -13.951452255249023

Token 153: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014165629632771015
    2. ' n' → logprob: -4.26416540145874
    3. '	n' → logprob: -13.389165878295898
    4. '_n' → logprob: -15.764165878295898
    5. '   ' → logprob: -16.0141658782959
    6. ' ' → logprob: -16.3891658782959
    7. 'N' → logprob: -16.8891658782959
    8. ' ' → logprob: -17.1391658782959
    9. '  ' → logprob: -17.7641658782959
    10. '[n' → logprob: -17.8891658782959

Token 154: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03480125218629837
    2. ' def' → logprob: -3.6598012447357178
    3. '   ' → logprob: -4.784801483154297
    4. '	def' → logprob: -9.534801483154297
    5. '<|end|>' → logprob: -10.659801483154297
    6. '    
' → logprob: -11.909801483154297
    7. '
' → logprob: -12.659801483154297
    8. '<|end|>' → logprob: -14.034801483154297
    9. '  ' → logprob: -14.409801483154297
    10. '       ' → logprob: -14.659801483154297

Token 157: ' move' (ID: 5275)
  Prédit: 'expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expand' → logprob: -0.7039639949798584
    2. ' move' → logprob: -1.7039639949798584
    3. 'move' → logprob: -2.3289639949798584
    4. ' advance' → logprob: -3.0789639949798584
    5. ' can' → logprob: -3.2039639949798584
    6. ' expand' → logprob: -3.3289639949798584
    7. 'can' → logprob: -3.4539639949798584
    8. 'advance' → logprob: -3.5789639949798584
    9. ' shift' → logprob: -4.5789642333984375
    10. 'shift' → logprob: -4.9539642333984375

Token 158: '_left' (ID: 22189)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04222330451011658
    2. '_right' → logprob: -3.6672232151031494
    3. '(' → logprob: -4.9172234535217285
    4. 'self' → logprob: -5.5422234535217285
    5. '()' → logprob: -6.0422234535217285
    6. '_to' → logprob: -7.4172234535217285
    7. '_left' → logprob: -7.7922234535217285
    8. '_r' → logprob: -8.04222297668457
    9. 'right' → logprob: -8.41722297668457
    10. '_self' → logprob: -8.79222297668457

Token 159: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002743054646998644
    2. '(' → logprob: -6.377743244171143
    3. '()' → logprob: -7.502743244171143
    4. '():' → logprob: -8.002742767333984
    5. '():
' → logprob: -9.502742767333984
    6. ' (' → logprob: -9.877742767333984
    7. '   ' → logprob: -11.502742767333984
    8. 'self' → logprob: -11.627742767333984
    9. '(
' → logprob: -12.877742767333984
    10. '       ' → logprob: -13.002742767333984

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6595966219902039
    2. '):
' → logprob: -0.7845966219902039
    3. ',' → logprob: -3.6595966815948486
    4. ')' → logprob: -7.5345964431762695
    5. 'self' → logprob: -8.78459644317627
    6. '):

' → logprob: -9.65959644317627
    7. ' ):' → logprob: -10.53459644317627
    8. '):
' → logprob: -11.15959644317627
    9. '   ' → logprob: -11.15959644317627
    10. '(self' → logprob: -11.53459644317627

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20058651268482208
    2. ' if' → logprob: -2.2005865573883057
    3. 'if' → logprob: -2.8255865573883057
    4. 'self' → logprob: -5.200586318969727
    5. '   ' → logprob: -5.575586318969727
    6. ' self' → logprob: -6.075586318969727
    7. '	if' → logprob: -9.450586318969727
    8. '	self' → logprob: -10.825586318969727
    9. '	   ' → logprob: -11.700586318969727
    10. '    ' → logprob: -11.700586318969727

Token 162: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1921497881412506
    2. 'self' (adapté à ' self') → logprob: -1.9421497583389282
    3. '       ' → logprob: -4.067149639129639
    4. ' if' → logprob: -4.317149639129639
    5. ' self' → logprob: -7.442149639129639
    6. '   ' → logprob: -8.067150115966797
    7. '	if' → logprob: -10.192150115966797
    8. '	self' → logprob: -11.442150115966797
    9. '	' → logprob: -12.567150115966797
    10. ' ' → logprob: -13.692150115966797

Token 163: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0061996690928936005
    2. '.r' → logprob: -5.131199836730957
    3. '.' → logprob: -8.631199836730957
    4. ' .' → logprob: -9.381199836730957
    5. '   ' → logprob: -13.256199836730957
    6. '.t' → logprob: -13.881199836730957
    7. 'l' → logprob: -14.006199836730957
    8. '.n' → logprob: -14.381199836730957
    9. '	l' → logprob: -14.381199836730957
    10. '_l' → logprob: -15.131199836730957

Token 164: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3135310411453247
    2. '+=' → logprob: -1.3135310411453247
    3. '=' → logprob: -8.563530921936035
    4. '+' → logprob: -10.063530921936035
    5. ' -=' → logprob: -11.063530921936035
    6. ' =' → logprob: -11.688530921936035
    7. '   ' → logprob: -12.563530921936035
    8. '    ' → logprob: -12.813530921936035
    9. ' +' → logprob: -13.188530921936035
    10. '-=' → logprob: -13.188530921936035

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.12507438659668
    4. '2' → logprob: -18.12507438659668
    5. '0' → logprob: -18.50007438659668
    6. '  ' → logprob: -19.56257438659668
    7. '+' → logprob: -19.81257438659668
    8. '       ' → logprob: -19.87507438659668
    9. '
' → logprob: -19.87507438659668
    10. '```' → logprob: -20.37507438659668

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.375015258789062
    4. '2' → logprob: -16.500015258789062
    5. '0' → logprob: -16.562515258789062
    6. '-' → logprob: -17.937515258789062
    7. '
' → logprob: -18.125015258789062
    8. '```' → logprob: -18.250015258789062
    9. '  ' → logprob: -19.000015258789062
    10. '+' → logprob: -19.062515258789062

Token 167: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5776324272155762
    2. 'self' (adapté à ' self') → logprob: -0.8276324272155762
    3. '       ' → logprob: -6.702632427215576
    4. ' if' → logprob: -8.452632904052734
    5. '   ' → logprob: -9.077632904052734
    6. 'return' → logprob: -9.452632904052734
    7. ' self' → logprob: -10.452632904052734
    8. 'def' → logprob: -10.827632904052734
    9. '	self' → logprob: -12.952632904052734
    10. '           ' → logprob: -13.327632904052734

Token 170: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0002969703928101808
    2. 'r' → logprob: -8.500296592712402
    3. '.' → logprob: -10.000296592712402
    4. '.l' → logprob: -11.000296592712402
    5. '.move' → logprob: -11.375296592712402
    6. 'move' → logprob: -12.000296592712402
    7. '	r' → logprob: -13.625296592712402
    8. ' .' → logprob: -13.625296592712402
    9. '._' → logprob: -13.750296592712402
    10. '```' → logprob: -13.875296592712402

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33307573199272156
    2. '+=' → logprob: -1.583075761795044
    3. ' +=' → logprob: -2.833075761795044
    4. ' =' → logprob: -3.958075761795044
    5. ' ' → logprob: -12.333075523376465
    6. '<|end|>' → logprob: -13.708075523376465
    7. ']+=' → logprob: -14.083075523376465
    8. '+' → logprob: -14.083075523376465
    9. '   ' → logprob: -14.583075523376465
    10. 'def' → logprob: -14.583075523376465

Token 172: ' min' (ID: 1349)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018470417708158493
    2. 'max' → logprob: -4.393470287322998
    3. ' self' → logprob: -5.268470287322998
    4. ' max' → logprob: -7.143470287322998
    5. 'min' → logprob: -14.018470764160156
    6. ' ' → logprob: -15.018470764160156
    7. '	self' → logprob: -15.268470764160156
    8. '(self' → logprob: -16.143470764160156
    9. '   ' → logprob: -16.893470764160156
    10. ' ' → logprob: -17.393470764160156

Token 173: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5690089639974758e-05
    2. '(' → logprob: -11.250015258789062
    3. '(len' → logprob: -13.125015258789062
    4. 'self' → logprob: -14.500015258789062
    5. ' (' → logprob: -16.500015258789062
    6. '(s' → logprob: -17.500015258789062
    7. '(max' → logprob: -18.125015258789062
    8. '(
' → logprob: -19.125015258789062
    9. '((' → logprob: -20.125015258789062
    10. '(n' → logprob: -20.125015258789062

Token 174: '.r' (ID: 2951)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.6935701370239258
    2. '.n' → logprob: -0.6935701370239258
    3. '.r' → logprob: -8.318570137023926
    4. 'n' → logprob: -8.943570137023926
    5. '.' → logprob: -10.693570137023926
    6. ' .' → logprob: -11.318570137023926
    7. 'l' → logprob: -11.943570137023926
    8. 'self' → logprob: -13.318570137023926
    9. '   ' → logprob: -13.568570137023926
    10. ')' → logprob: -13.693570137023926

Token 175: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021710782311856747
    2. '+' → logprob: -6.752171039581299
    3. ' +' → logprob: -7.502171039581299
    4. ' ,' → logprob: -7.877171039581299
    5. ',self' → logprob: -10.252171516418457
    6. 'self' → logprob: -10.877171516418457
    7. 'max' → logprob: -12.627171516418457
    8. '+self' → logprob: -12.752171516418457
    9. ',max' → logprob: -12.752171516418457
    10. '+,' → logprob: -13.002171516418457

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01251177117228508
    2. ' ' → logprob: -4.387511730194092
    3. '0' → logprob: -13.26251220703125
    4. '2' → logprob: -16.38751220703125
    5. '   ' → logprob: -16.38751220703125
    6. 'self' → logprob: -16.51251220703125
    7. '  ' → logprob: -16.76251220703125
    8. '(' → logprob: -17.13751220703125
    9. ' ' → logprob: -18.20001220703125
    10. ' (' → logprob: -18.26251220703125

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019562290981411934
    2. ' ' → logprob: -6.251956462860107
    3. '0' → logprob: -10.50195598602295
    4. '   ' → logprob: -17.001956939697266
    5. '(' → logprob: -17.126956939697266
    6. ' (' → logprob: -17.501956939697266
    7. '  ' → logprob: -17.689456939697266
    8. ' ' → logprob: -17.939456939697266
    9. ',' → logprob: -18.814456939697266
    10. '-' → logprob: -19.189456939697266

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3889884352684021
    2. ')' → logprob: -1.1389884948730469
    3. '<|end|>' → logprob: -6.388988494873047
    4. ' ,' → logprob: -8.013988494873047
    5. ' )' → logprob: -10.638988494873047
    6. ')
' → logprob: -10.763988494873047
    7. ',
' → logprob: -11.513988494873047
    8. '<|end|>' → logprob: -11.763988494873047
    9. ',n' → logprob: -12.138988494873047
    10. ',)' → logprob: -12.138988494873047

Token 179: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715728435665369
    2. ' self' → logprob: -5.006715774536133
    3. '       ' → logprob: -15.506715774536133
    4. '   ' → logprob: -15.756715774536133
    5. '	self' → logprob: -17.256715774536133
    6. ' ' → logprob: -17.756715774536133
    7. 'len' → logprob: -17.881715774536133
    8. '(self' → logprob: -19.006715774536133
    9. ')' → logprob: -19.256715774536133
    10. 'n' → logprob: -19.381715774536133

Token 180: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.00000286102295
    3. 'n' → logprob: -15.25000286102295
    4. ' .' → logprob: -19.125001907348633
    5. '	n' → logprob: -19.500001907348633
    6. ').' → logprob: -20.125001907348633
    7. '<n' → logprob: -20.250001907348633
    8. ')' → logprob: -20.375001907348633
    9. ',n' → logprob: -20.375001907348633
    10. '.l' → logprob: -20.750001907348633

Token 181: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.375006675720215
    3. ' )' → logprob: -13.625006675720215
    4. '<|end|>' → logprob: -14.750006675720215
    5. '   ' → logprob: -15.500006675720215
    6. '       ' → logprob: -16.2500057220459
    7. ')

' → logprob: -16.3750057220459
    8. ')}' → logprob: -16.6250057220459
    9. '())' → logprob: -16.6250057220459
    10. '))' → logprob: -17.1250057220459

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013296448159962893
    2. ' ' → logprob: -6.62632942199707
    3. ')' → logprob: -12.75132942199707
    4. '0' → logprob: -14.75132942199707
    5. '   ' → logprob: -15.62632942199707
    6. '2' → logprob: -16.12632942199707
    7. '
' → logprob: -16.87632942199707
    8. ')
' → logprob: -17.12632942199707
    9. ' )' → logprob: -17.37632942199707
    10. '    ' → logprob: -18.12632942199707

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. '0' → logprob: -11.87501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '2' → logprob: -16.000011444091797
    5. ')' → logprob: -17.250011444091797
    6. '```' → logprob: -17.875011444091797
    7. '-' → logprob: -18.375011444091797
    8. '   ' → logprob: -19.000011444091797
    9. '
' → logprob: -19.687511444091797
    10. '3' → logprob: -19.875011444091797

Token 184: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.619311974034645e-05
    2. '<|end|>' → logprob: -11.000036239624023
    3. ')
' → logprob: -11.125036239624023
    4. '   ' → logprob: -12.625036239624023
    5. ' )' → logprob: -14.500036239624023
    6. ')return' → logprob: -15.375036239624023
    7. '       ' → logprob: -15.375036239624023
    8. ')

' → logprob: -16.625036239624023
    9. '),' → logprob: -17.000036239624023
    10. '`)' → logprob: -17.125036239624023

Token 185: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7835246324539185
    2. '<|end|>' → logprob: -0.9085246324539185
    3. 'def' (adapté à ' def') → logprob: -2.158524513244629
    4. '
' → logprob: -4.158524513244629
    5. '<|end|>' → logprob: -5.533524513244629
    6. '    
' → logprob: -6.158524513244629
    7. ' def' → logprob: -6.658524513244629
    8. ')' → logprob: -7.158524513244629
    9. ' ' → logprob: -8.408524513244629
    10. '	def' → logprob: -8.658524513244629

Token 187: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.09943109005689621
    2. ' move' → logprob: -2.599431037902832
    3. 'expand' → logprob: -4.224431037902832
    4. 'can' → logprob: -6.349431037902832
    5. 'def' → logprob: -6.474431037902832
    6. 'get' → logprob: -7.474431037902832
    7. ' can' → logprob: -8.599431037902832
    8. ' def' → logprob: -8.724431037902832
    9. 'advance' → logprob: -8.724431037902832
    10. 'extend' → logprob: -8.974431037902832

Token 188: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -5.7530574849806726e-05
    2. '_left' → logprob: -10.375057220458984
    3. 'right' → logprob: -11.500057220458984
    4. '_r' → logprob: -11.875057220458984
    5. '_up' → logprob: -12.500057220458984
    6. '_to' → logprob: -13.000057220458984
    7. '_down' → logprob: -13.375057220458984
    8. '_' → logprob: -14.000057220458984
    9. 'r' → logprob: -15.375057220458984
    10. '_next' → logprob: -16.000057220458984

Token 189: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.0722858102526516e-05
    2. '(' → logprob: -10.250041007995605
    3. 'self' → logprob: -12.500041007995605
    4. ' (' → logprob: -14.625041007995605
    5. '   ' → logprob: -14.875041007995605
    6. '():' → logprob: -15.250041007995605
    7. '(
' → logprob: -15.625041007995605
    8. '():
' → logprob: -16.00004005432129
    9. '       ' → logprob: -16.25004005432129
    10. 'def' → logprob: -16.87504005432129

Token 190: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15480944514274597
    2. '):' → logprob: -2.1548094749450684
    3. '(self' → logprob: -3.6548094749450684
    4. 'self' → logprob: -7.029809474945068
    5. ')' → logprob: -7.779809474945068
    6. '():
' → logprob: -8.90480899810791
    7. '):

' → logprob: -9.52980899810791
    8. '   ' → logprob: -9.90480899810791
    9. '():' → logprob: -10.90480899810791
    10. '(' → logprob: -11.40480899810791

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31863027811050415
    2. 'self' → logprob: -1.3186302185058594
    3. ' self' → logprob: -5.318630218505859
    4. '   ' → logprob: -7.943630218505859
    5. '	self' → logprob: -10.06863021850586
    6. '1' → logprob: -10.81863021850586
    7. 'if' → logprob: -11.19363021850586
    8. '	' → logprob: -11.69363021850586
    9. ' ' → logprob: -12.19363021850586
    10. '	   ' → logprob: -13.19363021850586

Token 192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012520132586359978
    2. 'if' → logprob: -5.3875203132629395
    3. ' self' → logprob: -5.5125203132629395
    4. '       ' → logprob: -5.6375203132629395
    5. '   ' → logprob: -8.637519836425781
    6. ' if' → logprob: -9.512519836425781
    7. '1' → logprob: -12.137519836425781
    8. ' ' → logprob: -12.512519836425781
    9. '	self' → logprob: -12.512519836425781
    10. 'while' → logprob: -13.387519836425781

Token 193: '.r' (ID: 2951)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18006457388401031
    2. '+=' → logprob: -1.8050645589828491
    3. 'r' → logprob: -9.30506420135498
    4. '   ' → logprob: -9.43006420135498
    5. ' ' → logprob: -9.80506420135498
    6. '.' → logprob: -10.43006420135498
    7. '+' → logprob: -11.30506420135498
    8. '=' → logprob: -11.68006420135498
    9. '    ' → logprob: -11.93006420135498
    10. ' r' → logprob: -12.18006420135498

Token 194: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38689565658569336
    2. ' +=' → logprob: -1.1368956565856934
    3. '=' → logprob: -10.636896133422852
    4. '+' → logprob: -15.011896133422852
    5. ' =' → logprob: -15.636896133422852
    6. ']+=' → logprob: -16.26189613342285
    7. '   ' → logprob: -16.76189613342285
    8. ' ' → logprob: -17.38689613342285
    9. '  ' → logprob: -18.26189613342285
    10. '+=(' → logprob: -18.76189613342285

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007108822464942932
    2. ' ' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.250710487365723
    4. '2' → logprob: -16.50071144104004
    5. '  ' → logprob: -16.93821144104004
    6. '<|end|>' → logprob: -17.06321144104004
    7. '```' → logprob: -17.31321144104004
    8. '       ' → logprob: -18.18821144104004
    9. '0' → logprob: -18.37571144104004
    10. '
' → logprob: -18.87571144104004

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -16.7500057220459
    4. '   ' → logprob: -17.7500057220459
    5. '```' → logprob: -18.0625057220459
    6. '0' → logprob: -18.9375057220459
    7. '<|end|>' → logprob: -19.4375057220459
    8. '  ' → logprob: -19.8750057220459
    9. '3' → logprob: -20.0000057220459
    10. '۱' → logprob: -20.5000057220459

Token 197: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: 'w' (ID: 86)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37118077278137207
    2. '<|end|>' → logprob: -1.246180772781372
    3. '<|end|>' → logprob: -5.121180534362793
    4. '
' → logprob: -5.246180534362793
    5. 'def' → logprob: -5.621180534362793
    6. ':' → logprob: -5.746180534362793
    7. ' ' → logprob: -6.246180534362793
    8. '    
' → logprob: -7.496180534362793
    9. '       ' → logprob: -7.996180534362793
    10. '  ' → logprob: -7.996180534362793

Token 199: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33968856930732727
    2. ' =' → logprob: -2.089688539505005
    3. 'indow' → logprob: -2.589688539505005
    4. '=' → logprob: -2.589688539505005
    5. '.move' → logprob: -4.464688777923584
    6. 'indows' → logprob: -6.589688777923584
    7. '   ' → logprob: -8.089688301086426
    8. ' ' → logprob: -9.339688301086426
    9. '  ' → logprob: -9.464688301086426
    10. 'ith' → logprob: -9.589688301086426

Token 200: ' Window' (ID: 24479)
  Prédit: 'Window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Window' → logprob: -0.0001234428636962548
    2. ' Window' → logprob: -9.000123023986816
    3. '(Window' → logprob: -17.750123977661133
    4. 'window' → logprob: -18.375123977661133
    5. 'W' → logprob: -19.625123977661133
    6. '.Window' → logprob: -19.750123977661133
    7. 'Windows' → logprob: -19.875123977661133
    8. '_Window' → logprob: -20.125123977661133
    9. 'Win' → logprob: -21.625123977661133
    10. '_window' → logprob: -21.750123977661133

Token 201: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006796371191740036
    2. '(' → logprob: -5.006796360015869
    3. '(S' → logprob: -10.256796836853027
    4. '(n' → logprob: -10.631796836853027
    5. 'N' → logprob: -10.881796836853027
    6. '(s' → logprob: -14.006796836853027
    7. '(len' → logprob: -14.256796836853027
    8. '((' → logprob: -14.756796836853027
    9. ' (' → logprob: -15.006796836853027
    10. '(
' → logprob: -15.006796836853027

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013310716021806002
    2. ')
' → logprob: -6.626330852508545
    3. ')

' → logprob: -13.001331329345703
    4. ' )' → logprob: -13.001331329345703
    5. ')
' → logprob: -15.501331329345703
    6. '))' → logprob: -16.626331329345703
    7. ')`' → logprob: -16.876331329345703
    8. '),' → logprob: -17.001331329345703
    9. ')#' → logprob: -17.126331329345703
    10. '+' → logprob: -17.376331329345703

Token 203: 'ans' (ID: 616)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16892066597938538
    2. 'max' → logprob: -2.6689207553863525
    3. 'res' → logprob: -2.7939207553863525
    4. 'ans' → logprob: -4.293920516967773
    5. 'result' → logprob: -5.168920516967773
    6. 'for' → logprob: -6.418920516967773
    7. 'answer' → logprob: -6.418920516967773
    8. 'results' → logprob: -7.043920516967773
    9. 'best' → logprob: -7.918920516967773
    10. 'length' → logprob: -8.293920516967773

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022737830877304
    2. '=' → logprob: -2.3502273559570312
    3. 's' → logprob: -11.225227355957031
    4. ',' → logprob: -12.225227355957031
    5. ' ' → logprob: -14.475227355957031
    6. '=[]' → logprob: -14.600227355957031
    7. '_' → logprob: -14.725227355957031
    8. 'max' → logprob: -15.100227355957031
    9. ')' → logprob: -16.47522735595703
    10. 'es' → logprob: -16.97522735595703

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00972539372742176
    2. ' ' → logprob: -4.884725570678711
    3. '[]' → logprob: -6.634725570678711
    4. '-' → logprob: -8.009725570678711
    5. 'None' → logprob: -8.884725570678711
    6. '1' → logprob: -9.259725570678711
    7. ' []' → logprob: -9.884725570678711
    8. '""' → logprob: -10.134725570678711
    9. '[]
' → logprob: -10.384725570678711
    10. ' -' → logprob: -10.384725570678711

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008191954344511032
    2. '-' → logprob: -5.63319206237793
    3. '[]' → logprob: -6.25819206237793
    4. '1' → logprob: -6.63319206237793
    5. 'None' → logprob: -7.63319206237793
    6. 'float' → logprob: -8.25819206237793
    7. 'N' → logprob: -8.75819206237793
    8. '[' → logprob: -9.00819206237793
    9. '""' → logprob: -9.38319206237793
    10. 'max' → logprob: -9.88319206237793

Token 207: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0004995359340682626
    2. 'for' → logprob: -8.000499725341797
    3. ' while' → logprob: -9.000499725341797
    4. '<|end|>' → logprob: -10.250499725341797
    5. 'While' → logprob: -13.125499725341797
    6. '
' → logprob: -13.250499725341797
    7. '```' → logprob: -14.375499725341797
    8. '#' → logprob: -14.875499725341797
    9. '<|end|>' → logprob: -15.125499725341797
    10. '	while' → logprob: -15.625499725341797

Token 208: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00020413640595506877
    2. 'for' → logprob: -8.500204086303711
    3. ' while' → logprob: -14.375204086303711
    4. 'While' → logprob: -18.25020408630371
    5. '
' → logprob: -19.75020408630371
    6. '```' → logprob: -19.75020408630371
    7. 'w' → logprob: -20.75020408630371
    8. '	while' → logprob: -20.87520408630371
    9. '#' → logprob: -21.25020408630371
    10. 'wh' → logprob: -22.00020408630371

Token 209: ' Util' (ID: 13564)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005722216796129942
    2. 'for' → logprob: -5.2557220458984375
    3. ' while' → logprob: -7.6307220458984375
    4. ' for' → logprob: -13.755722045898438
    5. 'While' → logprob: -13.880722045898438
    6. '
' → logprob: -14.505722045898438
    7. 'def' → logprob: -16.380722045898438
    8. 'wh' → logprob: -17.255722045898438
    9. '```' → logprob: -17.255722045898438
    10. 'i' → logprob: -17.380722045898438

Token 210: 'isation' (ID: 6993)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20363837480545044
    2. 'isant' → logprob: -2.4536383152008057
    3. 'for' → logprob: -2.5786383152008057
    4. 'iser' → logprob: -5.703638553619385
    5. 'izing' → logprob: -5.703638553619385
    6. 'isateur' → logprob: -5.953638553619385
    7. 'def' → logprob: -6.078638553619385
    8. 'ise' → logprob: -6.203638553619385
    9. 'isé' → logprob: -6.203638553619385
    10. '#' → logprob: -6.453638553619385

Token 211: ' de' (ID: 334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01283288188278675
    2. ' while' → logprob: -4.387833118438721
    3. 'for' → logprob: -8.637832641601562
    4. '=' → logprob: -10.012832641601562
    5. ' =' → logprob: -10.512832641601562
    6. ':' → logprob: -10.762832641601562
    7. ' of' → logprob: -11.262832641601562
    8. ' for' → logprob: -11.637832641601562
    9. 'def' → logprob: -11.887832641601562
    10. 'of' → logprob: -11.887832641601562

Token 212: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0034177242778241634
    2. 'range' → logprob: -6.003417491912842
    3. 'for' → logprob: -7.128417491912842
    4. 'w' → logprob: -9.62841796875
    5. '```' → logprob: -10.62841796875
    6. ' while' → logprob: -10.75341796875
    7. 's' → logprob: -12.12841796875
    8. 'a' → logprob: -12.37841796875
    9. 'def' → logprob: -12.62841796875
    10. 'S' → logprob: -13.12841796875

Token 213: ',' (ID: 11)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16150610148906708
    2. ' w' → logprob: -1.9115060567855835
    3. 'ans' → logprob: -7.536506175994873
    4. ' not' → logprob: -8.661505699157715
    5. ' ans' → logprob: -9.286505699157715
    6. 'not' → logprob: -9.536505699157715
    7. 'N' → logprob: -9.786505699157715
    8. '(w' → logprob: -9.786505699157715
    9. 'True' → logprob: -9.911505699157715
    10. 'while' → logprob: -10.036505699157715

Token 214: ' for' (ID: 395)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6958941221237183
    2. ' w' → logprob: -0.6958941221237183
    3. ' True' → logprob: -6.570894241333008
    4. ' not' → logprob: -7.445894241333008
    5. 'True' → logprob: -7.695894241333008
    6. ' while' → logprob: -9.320894241333008
    7. 'while' → logprob: -9.695894241333008
    8. 'not' → logprob: -9.945894241333008
    9. ' ' → logprob: -10.820894241333008
    10. 'ans' → logprob: -11.070894241333008

Token 215: ',' (ID: 11)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.40038928389549255
    2. 'w' → logprob: -1.150389313697815
    3. ' ans' → logprob: -5.900389194488525
    4. ' not' → logprob: -6.525389194488525
    5. 's' → logprob: -6.650389194488525
    6. ' s' → logprob: -6.650389194488525
    7. ' and' → logprob: -6.900389194488525
    8. ',' → logprob: -7.025389194488525
    9. ' i' → logprob: -7.150389194488525
    10. ' True' → logprob: -7.900389194488525

Token 216: ' try' (ID: 2075)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8867703676223755
    2. 'and' → logprob: -1.0117703676223755
    3. ' et' → logprob: -2.136770248413086
    4. 'et' → logprob: -2.636770248413086
    5. 'if' → logprob: -4.011770248413086
    6. ' if' → logprob: -5.511770248413086
    7. '...' → logprob: -5.886770248413086
    8. ' not' → logprob: -6.136770248413086
    9. 'w' → logprob: -6.761770248413086
    10. 'while' → logprob: -7.011770248413086

Token 217: '-ex' (ID: 15801)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08155612647533417
    2. ',' → logprob: -3.3315560817718506
    3. 'for' → logprob: -3.7065560817718506
    4. ':
' → logprob: -5.08155632019043
    5. 'while' → logprob: -5.08155632019043
    6. 's' → logprob: -5.83155632019043
    7. ' for' → logprob: -6.45655632019043
    8. 'with' → logprob: -8.83155632019043
    9. ' while' → logprob: -8.95655632019043
    10. 'w' → logprob: -9.08155632019043

Token 218: 'cept' (ID: 953)
  Prédit: 'cept'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cept' → logprob: -2.546478935983032e-05
    2. 'pt' → logprob: -11.500025749206543
    3. 'ception' → logprob: -11.750025749206543
    4. 'cepte' → logprob: -12.500025749206543
    5. 'cepts' → logprob: -13.750025749206543
    6. 'ceptions' → logprob: -13.875025749206543
    7. 'cep' → logprob: -15.000025749206543
    8. 'CEPT' → logprob: -15.250025749206543
    9. 'continue' → logprob: -15.750025749206543
    10. 'pect' → logprob: -16.000024795532227

Token 219: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0026610277127474546
    2. ' while' → logprob: -6.252661228179932
    3. 'try' → logprob: -7.627661228179932
    4. '
' → logprob: -8.502660751342773
    5. '```' → logprob: -11.002660751342773
    6. ',' → logprob: -12.002660751342773
    7. 'for' → logprob: -12.127660751342773
    8. 'w' → logprob: -12.502660751342773
    9. '#' → logprob: -13.252660751342773
    10. ':
' → logprob: -13.877660751342773

Token 220: ' pattern' (ID: 8302)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010676257312297821
    2. 'try' → logprob: -5.385676383972168
    3. 'if' → logprob: -6.260676383972168
    4. 'finally' → logprob: -6.885676383972168
    5. 'for' → logprob: -7.135676383972168
    6. 'except' → logprob: -7.385676383972168
    7. ' while' → logprob: -7.635676383972168
    8. 'and' → logprob: -7.885676383972168
    9. 'else' → logprob: -8.260676383972168
    10. 'continue' → logprob: -8.760676383972168

Token 221: '-m' (ID: 2126)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7594961524009705
    2. ' matching' → logprob: -1.3844962120056152
    3. ' for' → logprob: -2.6344962120056152
    4. 'for' → logprob: -2.7594962120056152
    5. ',' → logprob: -3.0094962120056152
    6. 's' → logprob: -3.6344962120056152
    7. 'match' → logprob: -4.259496212005615
    8. 'matching' → logprob: -4.259496212005615
    9. ':
' → logprob: -4.884496212005615
    10. '_matching' → logprob: -5.009496212005615

Token 222: 'atching' (ID: 42443)
  Prédit: 'atch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atch' → logprob: -0.026530884206295013
    2. 'atching' → logprob: -3.6515309810638428
    3. 'at' → logprob: -8.776531219482422
    4. 'atched' → logprob: -10.151531219482422
    5. '#' → logprob: -11.151531219482422
    6. 'atches' → logprob: -12.151531219482422
    7. '...' → logprob: -12.526531219482422
    8. '```' → logprob: -12.776531219482422
    9. 'atcher' → logprob: -12.901531219482422
    10. 'ATCH' → logprob: -13.151531219482422

Token 223: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0023284326307475567
    2. ' while' → logprob: -6.377328395843506
    3. '
' → logprob: -7.627328395843506
    4. '```' → logprob: -9.627328872680664
    5. 'try' → logprob: -10.502328872680664
    6. ',' → logprob: -11.502328872680664
    7. 's' → logprob: -11.627328872680664
    8. 'for' → logprob: -11.627328872680664
    9. ':
' → logprob: -12.127328872680664
    10. 'w' → logprob: -12.627328872680664

Token 224: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00016098834748845547
    2. ' while' → logprob: -8.875161170959473
    3. 'try' → logprob: -10.875161170959473
    4. '
' → logprob: -13.875161170959473
    5. '```' → logprob: -13.875161170959473
    6. 'While' → logprob: -16.125160217285156
    7. '#' → logprob: -17.250160217285156
    8. 'for' → logprob: -17.375160217285156
    9. '	while' → logprob: -17.750160217285156
    10. 'w' → logprob: -17.750160217285156

Token 225: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.009212426841259003
    2. 'w' → logprob: -5.384212493896484
    3. ' True' → logprob: -5.509212493896484
    4. 'True' → logprob: -8.384212493896484
    5. ' not' → logprob: -8.634212493896484
    6. ' (' → logprob: -10.134212493896484
    7. ' ' → logprob: -10.259212493896484
    8. '(w' → logprob: -10.884212493896484
    9. '(' → logprob: -11.134212493896484
    10. '(True' → logprob: -12.384212493896484

Token 226: '.l' (ID: 1000)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0017295641591772437
    2. '.l' → logprob: -6.376729488372803
    3. ' .' → logprob: -10.751729965209961
    4. '.' → logprob: -12.376729965209961
    5. '.right' → logprob: -15.251729965209961
    6. '.n' → logprob: -16.00172996520996
    7. '.b' → logprob: -16.25172996520996
    8. '.s' → logprob: -16.25172996520996
    9. 'r' → logprob: -16.37672996520996
    10. '```' → logprob: -16.50172996520996

Token 227: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.050088245421648026
    2. '<' → logprob: -3.0500881671905518
    3. '<w' → logprob: -6.675088405609131
    4. '<N' → logprob: -9.175087928771973
    5. ' <=' → logprob: -9.675087928771973
    6. '<n' → logprob: -10.050087928771973
    7. '<len' → logprob: -11.550087928771973
    8. ' ' → logprob: -11.925087928771973
    9. '<=' → logprob: -11.925087928771973
    10. 'w' → logprob: -12.800087928771973

Token 228: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5951820015907288
    2. 'w' → logprob: -0.8451820015907288
    3. ' N' → logprob: -4.595181941986084
    4. ' w' → logprob: -4.720181941986084
    5. ' ' → logprob: -10.595182418823242
    6. 'len' → logprob: -11.970182418823242
    7. '   ' → logprob: -12.720182418823242
    8. '	N' → logprob: -13.095182418823242
    9. '  ' → logprob: -13.470182418823242
    10. 'W' → logprob: -13.845182418823242

Token 229: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.189063161611557
    2. 'and' → logprob: -1.8140631914138794
    3. '   ' → logprob: -5.68906307220459
    4. ':
' → logprob: -5.68906307220459
    5. '-' → logprob: -6.43906307220459
    6. ':' → logprob: -7.18906307220459
    7. ' -' → logprob: -9.18906307220459
    8. ' ' → logprob: -10.18906307220459
    9. '  ' → logprob: -12.68906307220459
    10. '	and' → logprob: -12.68906307220459

Token 230: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.018159663304686546
    2. ' w' → logprob: -4.018159866333008
    3. '   ' → logprob: -12.518159866333008
    4. ' ' → logprob: -12.643159866333008
    5. ' ' → logprob: -14.018159866333008
    6. '  ' → logprob: -14.768159866333008
    7. 'not' → logprob: -15.393159866333008
    8. ' not' → logprob: -15.518159866333008
    9. '(w' → logprob: -15.518159866333008
    10. ' (' → logprob: -15.705659866333008

Token 231: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -2.7491250875755213e-05
    2. '.' → logprob: -10.750027656555176
    3. ' .' → logprob: -13.000027656555176
    4. 'r' → logprob: -13.125027656555176
    5. '<' → logprob: -14.000027656555176
    6. '	r' → logprob: -15.250027656555176
    7. ' <' → logprob: -15.625027656555176
    8. ' ' → logprob: -16.12502670288086
    9. '.<' → logprob: -16.62502670288086
    10. '```' → logprob: -16.75002670288086

Token 232: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03940551355481148
    2. '<' → logprob: -3.289405584335327
    3. ' <=' → logprob: -6.664405345916748
    4. '<=' → logprob: -9.539405822753906
    5. ' ' → logprob: -12.039405822753906
    6. '<N' → logprob: -12.164405822753906
    7. '+' → logprob: -13.539405822753906
    8. '<n' → logprob: -13.914405822753906
    9. 'w' → logprob: -14.664405822753906
    10. ' +' → logprob: -14.914405822753906

Token 233: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0024814847856760025
    2. ' N' → logprob: -6.002481460571289
    3. ' ' → logprob: -12.627481460571289
    4. '   ' → logprob: -13.502481460571289
    5. 'len' → logprob: -14.877481460571289
    6. '	N' → logprob: -15.252481460571289
    7. 'w' → logprob: -15.877481460571289
    8. '  ' → logprob: -16.25248146057129
    9. 'n' → logprob: -16.62748146057129
    10. '
' → logprob: -17.12748146057129

Token 234: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.576564610004425
    2. ':
' → logprob: -0.826564610004425
    3. '   ' → logprob: -7.451564788818359
    4. ' and' → logprob: -10.95156478881836
    5. '):
' → logprob: -11.57656478881836
    6. ':

' → logprob: -11.95156478881836
    7. ' :
' → logprob: -12.70156478881836
    8. ':
' → logprob: -12.82656478881836
    9. ',' → logprob: -13.20156478881836
    10. '():
' → logprob: -13.95156478881836

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020938136731274426
    2. 'match' → logprob: -9.75020980834961
    3. 'try' → logprob: -10.12520980834961
    4. 'length' → logprob: -10.50020980834961
    5. '```' → logprob: -11.00020980834961
    6. 'token' → logprob: -11.00020980834961
    7. ' if' → logprob: -11.87520980834961
    8. ' length' → logprob: -12.00020980834961
    9. 'if' → logprob: -12.00020980834961
    10. '    
' → logprob: -12.37520980834961

Token 236: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08713090419769287
    2. 'res' → logprob: -3.3371310234069824
    3. 'length' → logprob: -3.9621310234069824
    4. 'match' → logprob: -3.9621310234069824
    5. 'm' → logprob: -4.962131023406982
    6. 'matches' → logprob: -7.337131023406982
    7. 'len' → logprob: -7.587131023406982
    8. 'result' → logprob: -7.837131023406982
    9. ' res' → logprob: -8.087130546569824
    10. 'L' → logprob: -8.462130546569824

Token 237: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4810241162776947
    2. ':' → logprob: -0.9810241460800171
    3. '       ' → logprob: -4.981024265289307
    4. '   ' → logprob: -10.731023788452148
    5. ' :
' → logprob: -11.231023788452148
    6. ' :' → logprob: -12.106023788452148
    7. ':

' → logprob: -12.481023788452148
    8. ':
' → logprob: -12.731023788452148
    9. '):
' → logprob: -12.856023788452148
    10. '        ' → logprob: -13.481023788452148

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020276403054594994
    2. 'length' → logprob: -4.6452765464782715
    3. 'match' → logprob: -6.1452765464782715
    4. ' length' → logprob: -6.1452765464782715
    5. 'len' → logprob: -6.3952765464782715
    6. '   ' → logprob: -7.0202765464782715
    7. 'if' → logprob: -7.1452765464782715
    8. ' if' → logprob: -7.6452765464782715
    9. 'L' → logprob: -7.8952765464782715
    10. 'val' → logprob: -8.020276069641113

Token 239: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0998375415802002
    2. 'length' → logprob: -1.4748375415802002
    3. '       ' → logprob: -1.5998375415802002
    4. 'match' → logprob: -1.9748375415802002
    5. 'len' → logprob: -3.7248375415802
    6. 'm' → logprob: -3.7248375415802
    7. 'l' → logprob: -4.599837303161621
    8. ' res' → logprob: -4.599837303161621
    9. ' length' → logprob: -4.974837303161621
    10. 'L' → logprob: -4.974837303161621

Token 240: ' Style' (ID: 17602)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9541550278663635
    2. 'length' → logprob: -1.4541549682617188
    3. 'match' → logprob: -1.8291549682617188
    4. ' res' → logprob: -2.8291549682617188
    5. ' length' → logprob: -3.2041549682617188
    6. 'm' → logprob: -3.2041549682617188
    7. '       ' → logprob: -3.8291549682617188
    8. 'len' → logprob: -3.9541549682617188
    9. 'L' → logprob: -4.954154968261719
    10. ' match' → logprob: -5.204154968261719

Token 241: ' map' (ID: 4014)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.113986611366272
    2. '           ' → logprob: -1.363986611366272
    3. 'match' → logprob: -2.1139864921569824
    4. 'len' → logprob: -2.4889864921569824
    5. 'L' → logprob: -2.6139864921569824
    6. ' length' → logprob: -2.7389864921569824
    7. ' L' → logprob: -4.363986492156982
    8. ' match' → logprob: -4.738986492156982
    9. '       ' → logprob: -4.863986492156982
    10. ':
' → logprob: -4.988986492156982

Token 242: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7699975967407227
    2. 'length' → logprob: -1.7699975967407227
    3. 'len' → logprob: -2.0199975967407227
    4. 'result' → logprob: -2.8949975967407227
    5. '(lambda' → logprob: -2.8949975967407227
    6. ' length' → logprob: -3.6449975967407227
    7. '(match' → logprob: -4.769997596740723
    8. 'res' → logprob: -5.019997596740723
    9. 'value' → logprob: -5.144997596740723
    10. 'lambda' → logprob: -5.144997596740723

Token 243: ' lambda' (ID: 27871)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9856813549995422
    2. 'matches' → logprob: -1.6106812953948975
    3. 'match' → logprob: -2.1106812953948975
    4. 'res' → logprob: -2.2356812953948975
    5. 'len' → logprob: -3.1106812953948975
    6. 'get' → logprob: -3.1106812953948975
    7. 'result' → logprob: -3.6106812953948975
    8. 'lambda' → logprob: -3.9856812953948975
    9. 'value' → logprob: -4.360681533813477
    10. 'next' → logprob: -4.485681533813477

Token 244: ' expression' (ID: 12973)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004572530742734671
    2. ',' → logprob: -7.12957239151001
    3. 'match' → logprob: -7.50457239151001
    4. 'matches' → logprob: -7.75457239151001
    5. ':' → logprob: -7.87957239151001
    6. 't' → logprob: -8.379572868347168
    7. 'len' → logprob: -8.379572868347168
    8. ' =' → logprob: -8.754572868347168
    9. 'result' → logprob: -9.129572868347168
    10. 's' → logprob: -9.129572868347168

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00414061825722456
    2. 'match' → logprob: -6.629140853881836
    3. 'matches' → logprob: -7.004140853881836
    4. 'len' → logprob: -7.754140853881836
    5. 'length' → logprob: -8.004140853881836
    6. 'res' → logprob: -8.629140853881836
    7. ' res' → logprob: -9.379140853881836
    8. ' match' → logprob: -9.504140853881836
    9. ',' → logprob: -9.504140853881836
    10. 'm' → logprob: -9.504140853881836

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07714026421308517
    2. 'matches' → logprob: -3.2021403312683105
    3. 'match' → logprob: -4.4521403312683105
    4. 'length' → logprob: -4.9521403312683105
    5. 'res' → logprob: -5.5771403312683105
    6. 'len' → logprob: -5.8271403312683105
    7. 'm' → logprob: -6.0771403312683105
    8. ' res' → logprob: -7.0771403312683105
    9. 'l' → logprob: -7.2021403312683105
    10. 'result' → logprob: -7.5771403312683105

Token 247: ' result' (ID: 1534)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9124946594238281
    2. 'res' → logprob: -1.4124946594238281
    3. 'match' → logprob: -1.7874946594238281
    4. 'matches' → logprob: -2.287494659423828
    5. 'L' → logprob: -4.037494659423828
    6. 'ans' → logprob: -4.162494659423828
    7. 'm' → logprob: -4.912494659423828
    8. ' res' → logprob: -5.037494659423828
    9. 'matched' → logprob: -5.162494659423828
    10. 'found' → logprob: -5.162494659423828

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020562442019581795
    2. '=' → logprob: -3.8955624103546143
    3. ',' → logprob: -11.145562171936035
    4. '   ' → logprob: -13.020562171936035
    5. '       ' → logprob: -13.520562171936035
    6. ' ' → logprob: -13.645562171936035
    7. '    ' → logprob: -15.020562171936035
    8. 's' → logprob: -15.020562171936035
    9. '        ' → logprob: -15.395562171936035
    10. ')' → logprob: -15.770562171936035

Token 249: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.926822304725647
    2. 'list' → logprob: -1.176822304725647
    3. 'map' → logprob: -1.301822304725647
    4. ' get' → logprob: -4.676822185516357
    5. ' list' → logprob: -4.801822185516357
    6. 'max' → logprob: -5.676822185516357
    7. ' map' → logprob: -6.051822185516357
    8. 'next' → logprob: -7.926822185516357
    9. '   ' → logprob: -9.676822662353516
    10. ' max' → logprob: -9.676822662353516

Token 250: '_matches' (ID: 97462)
  Prédit: '_matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -1.1472419600977446e-06
    2. 'matches' → logprob: -14.250000953674316
    3. ' _' → logprob: -16.375001907348633
    4. '_mat' → logprob: -16.375001907348633
    5. '(matches' → logprob: -16.750001907348633
    6. '_' → logprob: -16.875001907348633
    7. '_match' → logprob: -17.125001907348633
    8. '_ma' → logprob: -17.750001907348633
    9. ' matches' → logprob: -18.125001907348633
    10. '_m' → logprob: -18.500001907348633

Token 251: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. 'S' → logprob: -15.125001907348633
    4. '(s' → logprob: -16.125001907348633
    5. '(
' → logprob: -16.500001907348633
    6. ' (' → logprob: -17.625001907348633
    7. '((' → logprob: -19.375001907348633
    8. '```' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '(N' → logprob: -20.375001907348633

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009258725331164896
    2. ' ,' → logprob: -7.6259260177612305
    3. ',S' → logprob: -7.8759260177612305
    4. '(S' → logprob: -10.12592601776123
    5. '   ' → logprob: -11.25092601776123
    6. '       ' → logprob: -14.00092601776123
    7. '(' → logprob: -14.25092601776123
    8. '  ' → logprob: -14.25092601776123
    9. ',w' → logprob: -14.25092601776123
    10. 'w' → logprob: -14.50092601776123

Token 253: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.009762464091181755
    2. ' w' → logprob: -4.634762287139893
    3. '   ' → logprob: -13.25976276397705
    4. ')' → logprob: -13.25976276397705
    5. '0' → logprob: -13.63476276397705
    6. '    ' → logprob: -14.75976276397705
    7. ' ' → logprob: -15.25976276397705
    8. '
' → logprob: -15.38476276397705
    9. 's' → logprob: -15.75976276397705
    10. '  ' → logprob: -16.134761810302734

Token 254: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -2.641841820150148e-05
    2. '.' → logprob: -10.62502670288086
    3. ' .' → logprob: -13.12502670288086
    4. '.r' → logprob: -17.62502670288086
    5. '.left' → logprob: -17.62502670288086
    6. 'l' → logprob: -18.25002670288086
    7. '.L' → logprob: -18.87502670288086
    8. '.t' → logprob: -19.25002670288086
    9. '.i' → logprob: -19.62502670288086
    10. ').' → logprob: -19.75002670288086

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006066487403586507
    2. ' ,' → logprob: -7.625606536865234
    3. ',w' → logprob: -9.250606536865234
    4. 'w' → logprob: -11.125606536865234
    5. '   ' → logprob: -12.250606536865234
    6. ',
' → logprob: -14.500606536865234
    7. '(),' → logprob: -14.625606536865234
    8. ' ' → logprob: -14.750606536865234
    9. '  ' → logprob: -14.875606536865234
    10. '       ' → logprob: -15.500606536865234

Token 256: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0036026788875460625
    2. ' w' → logprob: -5.628602504730225
    3. '   ' → logprob: -13.128602981567383
    4. '       ' → logprob: -15.378602981567383
    5. ')' → logprob: -16.253602981567383
    6. '  ' → logprob: -16.753602981567383
    7. '    ' → logprob: -16.878602981567383
    8. '	w' → logprob: -17.003602981567383
    9. ' ' → logprob: -17.253602981567383
    10. '           ' → logprob: -17.628602981567383

Token 257: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0001645644661039114
    2. '.' → logprob: -8.875164985656738
    3. 'r' → logprob: -10.625164985656738
    4. ' .' → logprob: -15.500164985656738
    5. ' r' → logprob: -16.375164031982422
    6. '.w' → logprob: -17.000164031982422
    7. '	r' → logprob: -17.500164031982422
    8. ').' → logprob: -18.625164031982422
    9. '.u' → logprob: -19.125164031982422
    10. '..' → logprob: -19.625164031982422

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03814338892698288
    2. ')
' → logprob: -3.2881433963775635
    3. '       ' → logprob: -9.913143157958984
    4. '   ' → logprob: -10.913143157958984
    5. ' )' → logprob: -10.913143157958984
    6. ')
' → logprob: -11.663143157958984
    7. ' )
' → logprob: -12.288143157958984
    8. ')

' → logprob: -14.163143157958984
    9. '))' → logprob: -14.288143157958984
    10. ')`
' → logprob: -14.413143157958984

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009343287092633545
    2. ')' → logprob: -7.87593412399292
    3. ')
' → logprob: -8.625934600830078
    4. ' if' → logprob: -8.750934600830078
    5. '   ' → logprob: -9.000934600830078
    6. '
' → logprob: -9.625934600830078
    7. '           ' → logprob: -11.875934600830078
    8. 'if' → logprob: -12.125934600830078
    9. '        
' → logprob: -12.125934600830078
    10. '()
' → logprob: -13.250934600830078

Token 260: ' match' (ID: 3981)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04258904978632927
    2. ' if' → logprob: -3.542588949203491
    3. 'if' → logprob: -4.41758918762207
    4. '   ' → logprob: -7.29258918762207
    5. '	if' → logprob: -12.16758918762207
    6. '
' → logprob: -13.29258918762207
    7. 'except' → logprob: -13.66758918762207
    8. ')' → logprob: -14.04258918762207
    9. '        
' → logprob: -14.29258918762207
    10. '           ' → logprob: -14.29258918762207

Token 261: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.00525284931063652
    2. 'result' → logprob: -5.255252838134766
    3. '(result' → logprob: -11.005252838134766
    4. ' ' → logprob: -13.505252838134766
    5. ' (' → logprob: -14.880252838134766
    6. ' res' → logprob: -15.630252838134766
    7. ' ' → logprob: -15.880252838134766
    8. '	result' → logprob: -16.505252838134766
    9. '   ' → logprob: -16.880252838134766
    10. '=result' → logprob: -17.380252838134766

Token 262: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3516976237297058
    2. '   ' → logprob: -1.7266976833343506
    3. ':' → logprob: -2.6016976833343506
    4. '           ' → logprob: -3.6016976833343506
    5. ' case' → logprob: -5.2266974449157715
    6. '       ' → logprob: -5.3516974449157715
    7. 'case' → logprob: -5.4766974449157715
    8. ' :
' → logprob: -6.8516974449157715
    9. '):
' → logprob: -7.2266974449157715
    10. '():
' → logprob: -8.60169792175293

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03176386281847954
    2. ' None' → logprob: -3.781763792037964
    3. 'None' → logprob: -5.156764030456543
    4. ' case' → logprob: -6.031764030456543
    5. 'case' → logprob: -8.406764030456543
    6. '   ' → logprob: -9.781764030456543
    7. '       ' → logprob: -11.281764030456543
    8. '               ' → logprob: -11.781764030456543
    9. '(None' → logprob: -12.031764030456543
    10. ' ' → logprob: -12.531764030456543

Token 264: ' case' (ID: 1890)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029681751504540443
    2. ' None' → logprob: -3.77968168258667
    3. 'case' (adapté à ' case') → logprob: -6.02968168258667
    4. 'int' → logprob: -6.02968168258667
    5. '0' → logprob: -7.40468168258667
    6. ' case' → logprob: -7.77968168258667
    7. '           ' → logprob: -7.90468168258667
    8. 'L' → logprob: -9.779682159423828
    9. '   ' → logprob: -10.279682159423828
    10. ' ' → logprob: -10.404682159423828

Token 265: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07711896300315857
    2. 'L' → logprob: -2.8271188735961914
    3. 'int' → logprob: -4.327118873596191
    4. ' None' → logprob: -7.202118873596191
    5. 'length' → logprob: -7.577118873596191
    6. 'n' → logprob: -8.202118873596191
    7. 'len' → logprob: -9.452118873596191
    8. ' L' → logprob: -9.827118873596191
    9. '0' → logprob: -10.327118873596191
    10. '_' → logprob: -10.452118873596191

Token 266: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7754436731338501
    2. ':
' → logprob: -0.7754436731338501
    3. ':' → logprob: -2.7754435539245605
    4. '           ' → logprob: -4.2754435539245605
    5. ',' → logprob: -7.5254435539245605
    6. '=' → logprob: -7.9004435539245605
    7. '       ' → logprob: -8.025444030761719
    8. ' :
' → logprob: -8.275444030761719
    9. '             ' → logprob: -8.525444030761719
    10. ' :' → logprob: -8.525444030761719

Token 267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01797608844935894
    2. '           ' → logprob: -4.1429762840271
    3. ' w' → logprob: -6.5179762840271
    4. 'w' → logprob: -8.892975807189941
    5. '0' → logprob: -9.267975807189941
    6. '       ' → logprob: -9.517975807189941
    7. ' ans' → logprob: -10.017975807189941
    8. '   ' → logprob: -10.392975807189941
    9. 'ans' → logprob: -10.517975807189941
    10. ' None' → logprob: -11.517975807189941

Token 268: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0027432930655777454
    2. ' w' → logprob: -6.002743244171143
    3. '   ' → logprob: -8.2527437210083
    4. '           ' → logprob: -13.2527437210083
    5. '               ' → logprob: -13.3777437210083
    6. '                   ' → logprob: -13.5027437210083
    7. '
' → logprob: -14.0027437210083
    8. '       ' → logprob: -14.2527437210083
    9. '	w' → logprob: -14.8777437210083
    10. 'if' → logprob: -15.5027437210083

Token 269: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0003502434410620481
    2. '.' → logprob: -8.000349998474121
    3. ' .' → logprob: -11.375349998474121
    4. '.mov' → logprob: -13.875349998474121
    5. 'move' → logprob: -14.000349998474121
    6. '.m' → logprob: -14.625349998474121
    7. ').' → logprob: -16.000350952148438
    8. ' move' → logprob: -16.125350952148438
    9. '.increment' → logprob: -16.375350952148438
    10. '	move' → logprob: -16.625350952148438

Token 270: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.38987451791763306
    2. '_right' → logprob: -1.1398744583129883
    3. 'right' → logprob: -6.389874458312988
    4. 'left' → logprob: -6.639874458312988
    5. '_' → logprob: -13.014874458312988
    6. '_r' → logprob: -13.514874458312988
    7. '_le' → logprob: -13.889874458312988
    8. '_up' → logprob: -14.014874458312988
    9. 'Right' → logprob: -14.264874458312988
    10. '_down' → logprob: -14.264874458312988

Token 271: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001414426224073395
    2. '       ' → logprob: -9.125141143798828
    3. '
' → logprob: -11.000141143798828
    4. '            
' → logprob: -12.000141143798828
    5. 'case' → logprob: -12.000141143798828
    6. '   ' → logprob: -14.500141143798828
    7. '                
' → logprob: -14.750141143798828
    8. '               ' → logprob: -14.750141143798828
    9. '()
' → logprob: -15.000141143798828
    10. '        
' → logprob: -15.250141143798828

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.613945101387799e-05
    2. '       ' → logprob: -10.000085830688477
    3. 'case' → logprob: -10.125085830688477
    4. '   ' → logprob: -14.750085830688477
    5. '               ' → logprob: -16.375085830688477
    6. ' case' → logprob: -16.375085830688477
    7. '```' → logprob: -16.750085830688477
    8. '          ' → logprob: -17.375085830688477
    9. '		' → logprob: -18.375085830688477
    10. '1' → logprob: -18.500085830688477

Token 273: ' case' (ID: 1890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.022560715675354
    2. 'case' (adapté à ' case') → logprob: -1.022560715675354
    3. '       ' → logprob: -1.272560715675354
    4. '   ' → logprob: -8.147561073303223
    5. '1' → logprob: -9.022561073303223
    6. ' case' → logprob: -9.147561073303223
    7. '0' → logprob: -11.647561073303223
    8. '          ' → logprob: -12.272561073303223
    9. '      ' → logprob: -13.022561073303223
    10. '2' → logprob: -13.147561073303223

Token 274: ' val' (ID: 1459)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.293062686920166
    2. 'length' → logprob: -1.293062686920166
    3. 'int' → logprob: -1.668062686920166
    4. '_' → logprob: -2.043062686920166
    5. 'l' → logprob: -3.418062686920166
    6. 'n' → logprob: -3.668062686920166
    7. ' length' → logprob: -3.668062686920166
    8. 'val' → logprob: -4.918062686920166
    9. 'res' → logprob: -4.918062686920166
    10. ' L' → logprob: -5.168062686920166

Token 275: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48306676745414734
    2. ':' → logprob: -0.9830667972564697
    3. ':
' → logprob: -5.233066558837891
    4. '       ' → logprob: -6.733066558837891
    5. 'if' → logprob: -7.233066558837891
    6. '   ' → logprob: -7.358066558837891
    7. '           ' → logprob: -7.858066558837891
    8. '=' → logprob: -8.98306655883789
    9. '      ' → logprob: -9.10806655883789
    10. '               ' → logprob: -9.23306655883789

Token 276: ' w' (ID: 286)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02979700267314911
    2. ' val' → logprob: -3.529797077178955
    3. '   ' → logprob: -10.904796600341797
    4. 'True' → logprob: -11.154796600341797
    5. ' True' → logprob: -12.529796600341797
    6. ' ' → logprob: -13.029796600341797
    7. '  ' → logprob: -13.529796600341797
    8. '_' → logprob: -13.904796600341797
    9. '0' → logprob: -14.029796600341797
    10. '	val' → logprob: -14.279796600341797

Token 277: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00355326640419662
    2. '.l' → logprob: -5.75355339050293
    3. '.' → logprob: -8.50355339050293
    4. 'r' → logprob: -9.25355339050293
    5. ' .' → logprob: -9.75355339050293
    6. ' ' → logprob: -13.37855339050293
    7. '..' → logprob: -13.50355339050293
    8. '.s' → logprob: -13.69105339050293
    9. '.move' → logprob: -13.75355339050293
    10. '_r' → logprob: -13.81605339050293

Token 278: ' <' (ID: 464)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18890990316867828
    2. '<' → logprob: -2.4389100074768066
    3. ' <' → logprob: -3.3139100074768066
    4. '-val' → logprob: -3.8139100074768066
    5. '-' → logprob: -4.063910007476807
    6. '<=' → logprob: -5.813910007476807
    7. '+' → logprob: -6.188910007476807
    8. ' <=' → logprob: -6.563910007476807
    9. ' +' → logprob: -6.938910007476807
    10. '==' → logprob: -7.188910007476807

Token 279: ' N' (ID: 478)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.32632529735565186
    2. 'N' → logprob: -1.3263252973556519
    3. ' w' → logprob: -4.576325416564941
    4. ' N' → logprob: -6.326325416564941
    5. 'len' → logprob: -7.826325416564941
    6. 'val' → logprob: -8.076325416564941
    7. 'S' → logprob: -9.701325416564941
    8. '   ' → logprob: -9.951325416564941
    9. ' val' → logprob: -11.326325416564941
    10. ' ' → logprob: -11.451325416564941

Token 280: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9878418445587158
    2. ':' → logprob: -1.2378418445587158
    3. '-' → logprob: -1.4878418445587158
    4. ' -' → logprob: -2.362841844558716
    5. '               ' → logprob: -4.862841606140137
    6. '           ' → logprob: -5.112841606140137
    7. '   ' → logprob: -6.737841606140137
    8. ' :' → logprob: -7.362841606140137
    9. ' :
' → logprob: -8.237841606140137
    10. '                   ' → logprob: -8.362841606140137

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026466218754649162
    2. ' ' → logprob: -3.651466131210327
    3. '2' → logprob: -9.276466369628906
    4. '   ' → logprob: -10.151466369628906
    5. '           ' → logprob: -11.026466369628906
    6. ' val' → logprob: -12.651466369628906
    7. 'val' → logprob: -13.151466369628906
    8. '                   ' → logprob: -13.151466369628906
    9. '               ' → logprob: -13.276466369628906
    10. '       ' → logprob: -13.276466369628906

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001686962554231286
    2. '2' → logprob: -6.501687049865723
    3. ' ' → logprob: -8.626687049865723
    4. '   ' → logprob: -12.876687049865723
    5. '
' → logprob: -14.314187049865723
    6. '3' → logprob: -14.689187049865723
    7. '0' → logprob: -15.064187049865723
    8. '-' → logprob: -15.064187049865723
    9. '  ' → logprob: -15.939187049865723
    10. '```' → logprob: -16.001686096191406

Token 283: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14715999364852905
    2. ':' → logprob: -2.272160053253174
    3. '               ' → logprob: -3.397160053253174
    4. ' and' → logprob: -9.647159576416016
    5. '           ' → logprob: -10.272159576416016
    6. ':w' → logprob: -10.272159576416016
    7. ' :
' → logprob: -10.397159576416016
    8. '):
' → logprob: -10.772159576416016
    9. ':

' → logprob: -11.022159576416016
    10. ':
' → logprob: -11.397159576416016

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22054986655712128
    2. 'w' → logprob: -1.7205498218536377
    3. ' w' → logprob: -3.9705498218536377
    4. ':
' → logprob: -10.220549583435059
    5. '           ' → logprob: -11.095549583435059
    6. '   ' → logprob: -11.595549583435059
    7. ':' → logprob: -11.595549583435059
    8. ':w' → logprob: -11.595549583435059
    9. '       ' → logprob: -12.845549583435059
    10. '	w' → logprob: -13.220549583435059

Token 285: ' ans' (ID: 3345)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.009720553644001484
    2. ' w' → logprob: -5.009720325469971
    3. '               ' → logprob: -6.009720325469971
    4. '   ' → logprob: -8.259720802307129
    5. 'ans' (adapté à ' ans') → logprob: -8.634720802307129
    6. '           ' → logprob: -10.009720802307129
    7. '                   ' → logprob: -10.259720802307129
    8. ' ans' → logprob: -11.009720802307129
    9. '       ' → logprob: -12.134720802307129
    10. '
' → logprob: -12.884720802307129

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05554739013314247
    2. ' +=' → logprob: -3.0555474758148193
    3. '=' → logprob: -5.05554723739624
    4. '+=' → logprob: -7.55554723739624
    5. '=max' → logprob: -10.305547714233398
    6. 'max' → logprob: -13.305547714233398
    7. ',' → logprob: -13.680547714233398
    8. ' ' → logprob: -13.805547714233398
    9. '   ' → logprob: -14.305547714233398
    10. ' max' → logprob: -15.180547714233398

Token 287: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3093413710594177
    2. ' max' → logprob: -1.4343414306640625
    3. 'val' → logprob: -3.6843414306640625
    4. ' val' → logprob: -5.9343414306640625
    5. 'ans' → logprob: -11.059341430664062
    6. ' ans' → logprob: -11.934341430664062
    7. '	max' → logprob: -12.184341430664062
    8. '   ' → logprob: -12.809341430664062
    9. 'result' → logprob: -13.059341430664062
    10. ' ' → logprob: -13.809341430664062

Token 288: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.981667537620524e-06
    2. 'ans' → logprob: -13.625001907348633
    3. '(' → logprob: -14.375001907348633
    4. '(val' → logprob: -16.000001907348633
    5. '	ans' → logprob: -18.250001907348633
    6. '(
' → logprob: -18.500001907348633
    7. ' (' → logprob: -18.875001907348633
    8. '(an' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '(answer' → logprob: -20.000001907348633

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025673373602330685
    2. ',val' → logprob: -6.127567291259766
    3. ' ,' → logprob: -7.877567291259766
    4. 'val' → logprob: -13.752567291259766
    5. ',
' → logprob: -14.252567291259766
    6. 'ans' → logprob: -14.502567291259766
    7. '   ' → logprob: -15.627567291259766
    8. ' ans' → logprob: -15.877567291259766
    9. ',w' → logprob: -16.127567291259766
    10. ',value' → logprob: -16.252567291259766

Token 290: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.014244836755096912
    2. ' val' → logprob: -4.26424503326416
    3. 'result' → logprob: -9.88924503326416
    4. 'w' → logprob: -11.26424503326416
    5. '           ' → logprob: -11.51424503326416
    6. 'ans' → logprob: -13.26424503326416
    7. '               ' → logprob: -13.88924503326416
    8. 'v' → logprob: -14.01424503326416
    9. ' result' → logprob: -14.13924503326416
    10. 'value' → logprob: -14.63924503326416

Token 291: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007473636418581009
    2. '               ' → logprob: -5.257473468780518
    3. ')' → logprob: -6.132473468780518
    4. ')
' → logprob: -9.882473945617676
    5. ' )
' → logprob: -11.882473945617676
    6. ');' → logprob: -12.757473945617676
    7. '           ' → logprob: -13.257473945617676
    8. ');
' → logprob: -13.757473945617676
    9. ')

' → logprob: -14.007473945617676
    10. 'w' → logprob: -14.257473945617676

Token 292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026221470907330513
    2. 'w' → logprob: -6.252622127532959
    3. ' w' → logprob: -7.377622127532959
    4. '           ' → logprob: -9.752622604370117
    5. '       ' → logprob: -12.127622604370117
    6. '              ' → logprob: -13.752622604370117
    7. '   ' → logprob: -14.127622604370117
    8. ',w' → logprob: -14.502622604370117
    9. '```' → logprob: -14.877622604370117
    10. '                
' → logprob: -15.127622604370117

Token 293: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.13945433497428894
    2. ' w' → logprob: -2.1394543647766113
    3. '               ' → logprob: -4.389454364776611
    4. '           ' → logprob: -10.639453887939453
    5. '       ' → logprob: -11.764453887939453
    6. '	w' → logprob: -12.639453887939453
    7. '   ' → logprob: -12.764453887939453
    8. '                   ' → logprob: -13.639453887939453
    9. ',w' → logprob: -14.889453887939453
    10. '              ' → logprob: -15.264453887939453

Token 294: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0001242772996192798
    2. '.' → logprob: -9.000123977661133
    3. ' .' → logprob: -14.625123977661133
    4. 'move' → logprob: -15.500123977661133
    5. ').' → logprob: -16.500123977661133
    6. '.mov' → logprob: -17.625123977661133
    7. '	move' → logprob: -18.250123977661133
    8. '.m' → logprob: -18.375123977661133
    9. ' move' → logprob: -18.625123977661133
    10. '.w' → logprob: -19.375123977661133

Token 295: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00038288687937892973
    2. 'right' → logprob: -7.875382900238037
    3. '_r' → logprob: -13.750382423400879
    4. '_left' → logprob: -14.250382423400879
    5. '.right' → logprob: -14.875382423400879
    6. ' right' → logprob: -15.500382423400879
    7. 'r' → logprob: -15.750382423400879
    8. 'Right' → logprob: -15.875382423400879
    9. '_RIGHT' → logprob: -16.500383377075195
    10. '_Right' → logprob: -17.000383377075195

Token 296: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6288509964942932
    2. '           ' → logprob: -0.8788509964942932
    3. '()
' → logprob: -3.0038509368896484
    4. '       ' → logprob: -7.503850936889648
    5. '<|end|>' → logprob: -7.503850936889648
    6. ')' → logprob: -8.003850936889648
    7. '               ' → logprob: -8.378850936889648
    8. '   ' → logprob: -9.003850936889648
    9. '<|end|>' → logprob: -9.753850936889648
    10. '())' → logprob: -10.878850936889648

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017112065688706934
    2. '       ' → logprob: -9.125170707702637
    3. '   ' → logprob: -10.000170707702637
    4. 'else' → logprob: -11.750170707702637
    5. '               ' → logprob: -12.625170707702637
    6. '          ' → logprob: -13.750170707702637
    7. 'case' → logprob: -13.875170707702637
    8. '<|end|>' → logprob: -13.875170707702637
    9. '```' → logprob: -14.250170707702637
    10. '...' → logprob: -15.125170707702637

Token 298: ' case' (ID: 1890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22842808067798615
    2. 'case' (adapté à ' case') → logprob: -1.9784281253814697
    3. '       ' → logprob: -2.7284281253814697
    4. ' case' → logprob: -8.10342788696289
    5. '   ' → logprob: -8.72842788696289
    6. '_' → logprob: -9.60342788696289
    7. 'else' → logprob: -9.72842788696289
    8. '         ' → logprob: -12.60342788696289
    9. '     ' → logprob: -12.85342788696289
    10. '_case' → logprob: -13.10342788696289

Token 299: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02683231793344021
    2. 'val' → logprob: -3.901832342147827
    3. '_:' → logprob: -5.276832103729248
    4. ' _' → logprob: -7.651832103729248
    5. 'None' → logprob: -7.651832103729248
    6. ' val' → logprob: -9.776832580566406
    7. '_val' → logprob: -10.276832580566406
    8. '_None' → logprob: -10.651832580566406
    9. '_=' → logprob: -10.651832580566406
    10. ' _:' → logprob: -11.151832580566406

Token 300: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12853392958641052
    2. '               ' → logprob: -2.5035338401794434
    3. ':' → logprob: -3.2535338401794434
    4. '                   ' → logprob: -9.878534317016602
    5. '           ' → logprob: -10.378534317016602
    6. '              ' → logprob: -10.628534317016602
    7. 'w' → logprob: -10.878534317016602
    8. ':
' → logprob: -10.878534317016602
    9. '   ' → logprob: -11.503534317016602
    10. ':

' → logprob: -12.378534317016602

Token 301: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3563261926174164
    2. 'w' → logprob: -1.2313262224197388
    3. ' w' → logprob: -5.481326103210449
    4. 'break' → logprob: -6.356326103210449
    5. '   ' → logprob: -7.231326103210449
    6. '       ' → logprob: -7.231326103210449
    7. '           ' → logprob: -7.981326103210449
    8. ' break' → logprob: -9.48132610321045
    9. ' ' → logprob: -10.48132610321045
    10. '                   ' → logprob: -11.48132610321045

Token 302: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.4944080412387848
    2. 'break' → logprob: -0.9944080114364624
    3. ' break' → logprob: -4.494408130645752
    4. 'ans' → logprob: -5.744408130645752
    5. ' w' → logprob: -5.869408130645752
    6. '   ' → logprob: -6.494408130645752
    7. '           ' → logprob: -7.494408130645752
    8. '       ' → logprob: -7.869408130645752
    9. '               ' → logprob: -8.494407653808594
    10. ' ans' → logprob: -8.619407653808594

Token 303: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -9.209963900502771e-05
    2. '.' → logprob: -9.375092506408691
    3. 'move' → logprob: -12.875092506408691
    4. '.r' → logprob: -13.375092506408691
    5. '.l' → logprob: -14.000092506408691
    6. ' .' → logprob: -14.250092506408691
    7. 'r' → logprob: -14.375092506408691
    8. '.mov' → logprob: -15.250092506408691
    9. '.advance' → logprob: -16.000091552734375
    10. '.break' → logprob: -16.000091552734375

Token 304: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.08408311009407043
    2. 'left' → logprob: -2.584083080291748
    3. '_right' → logprob: -5.334083080291748
    4. 'right' → logprob: -7.959083080291748
    5. 'Left' → logprob: -12.959083557128906
    6. ' left' → logprob: -13.584083557128906
    7. '_LEFT' → logprob: -14.959083557128906
    8. 'r' → logprob: -15.084083557128906
    9. 'lef' → logprob: -15.209083557128906
    10. '.left' → logprob: -15.334083557128906

Token 305: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47576844692230225
    2. ')' → logprob: -1.6007684469223022
    3. '<|end|>' → logprob: -1.8507684469223022
    4. 'print' → logprob: -4.850768566131592
    5. '   ' → logprob: -5.475768566131592
    6. '```' → logprob: -5.600768566131592
    7. '<|end|>' → logprob: -6.975768566131592
    8. ']' → logprob: -7.475768566131592
    9. 'w' → logprob: -7.600768566131592
    10. '())' → logprob: -7.600768566131592

Token 306: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019531534053385258
    2. '<|end|>' → logprob: -9.375195503234863
    3. '   ' → logprob: -10.625195503234863
    4. ')' → logprob: -10.875195503234863
    5. ' print' → logprob: -11.250195503234863
    6. 'w' → logprob: -11.250195503234863
    7. 'continue' → logprob: -11.500195503234863
    8. '```' → logprob: -11.625195503234863
    9. 'else' → logprob: -12.000195503234863
    10. '#' → logprob: -13.000195503234863

Token 307: ' except' (ID: 6384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: ' Exception' (ID: 6851)
  Prédit: ' Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Index' → logprob: -0.02432483248412609
    2. ' Exception' → logprob: -3.774324893951416
    3. ' Stop' → logprob: -7.774324893951416
    4. ' Keyboard' → logprob: -7.899324893951416
    5. 'Index' → logprob: -8.774324417114258
    6. '(Index' → logprob: -9.399324417114258
    7. ' Value' → logprob: -10.649324417114258
    8. ' EOF' → logprob: -11.149324417114258
    9. '(Exception' → logprob: -13.024324417114258
    10. 'Exception' → logprob: -13.024324417114258

Token 309: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2582290768623352
    2. ' as' → logprob: -1.5082290172576904
    3. ':
' → logprob: -5.3832292556762695
    4. 'as' → logprob: -6.6332292556762695
    5. '   ' → logprob: -8.50822925567627
    6. '():' → logprob: -9.63322925567627
    7. '():
' → logprob: -10.38322925567627
    8. '       ' → logprob: -10.63322925567627
    9. '	as' → logprob: -11.00822925567627
    10. ' :' → logprob: -11.50822925567627

Token 310: ' e' (ID: 319)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.3814637362957001
    2. ' pass' → logprob: -1.7564637660980225
    3. ':' → logprob: -2.7564637660980225
    4. 'pass' → logprob: -3.7564637660980225
    5. ' None' → logprob: -4.256463527679443
    6. ' ' → logprob: -4.381463527679443
    7. 'Exception' → logprob: -5.006463527679443
    8. 'None' → logprob: -5.131463527679443
    9. ' Keyboard' → logprob: -5.256463527679443
    10. 'Keyboard' → logprob: -6.381463527679443

Token 311: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019395671784877777
    2. ':
' → logprob: -4.01939582824707
    3. '       ' → logprob: -6.76939582824707
    4. ' as' → logprob: -10.26939582824707
    5. '   ' → logprob: -10.51939582824707
    6. '):' → logprob: -11.14439582824707
    7. '):
' → logprob: -12.14439582824707
    8. '<|end|>' → logprob: -12.26939582824707
    9. ' :' → logprob: -12.51939582824707
    10. ',' → logprob: -13.64439582824707

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00706060416996479
    2. ' pass' → logprob: -5.007060527801514
    3. ' break' → logprob: -8.632061004638672
    4. ' print' → logprob: -9.132061004638672
    5. ' raise' → logprob: -10.507061004638672
    6. ' continue' → logprob: -11.632061004638672
    7. '   ' → logprob: -11.757061004638672
    8. 'pass' → logprob: -11.757061004638672
    9. 'print' → logprob: -13.507061004638672
    10. '	pass' → logprob: -13.632061004638672

Token 313: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.10293377190828323
    2. ' break' → logprob: -2.352933883666992
    3. 'pass' → logprob: -7.102933883666992
    4. 'print' → logprob: -7.227933883666992
    5. ' pass' → logprob: -7.852933883666992
    6. '   ' → logprob: -7.977933883666992
    7. '       ' → logprob: -8.352933883666992
    8. 'raise' → logprob: -8.977933883666992
    9. 'w' → logprob: -9.977933883666992
    10. ' print' → logprob: -10.852933883666992

Token 314: ' on' (ID: 402)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.485892653465271
    2. 'break' → logprob: -1.235892653465271
    3. 'print' → logprob: -2.9858927726745605
    4. ' pass' → logprob: -3.2358927726745605
    5. ' break' → logprob: -5.6108927726745605
    6. 'w' → logprob: -7.7358927726745605
    7. ' print' → logprob: -8.985892295837402
    8. 'continue' → logprob: -9.360892295837402
    9. 'raise' → logprob: -9.360892295837402
    10. '#' → logprob: -10.110892295837402

Token 315: ' ignore' (ID: 17887)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5179106593132019
    2. ' pass' → logprob: -1.1429107189178467
    3. ' raise' → logprob: -3.1429107189178467
    4. ' print' → logprob: -3.8929107189178467
    5. 'break' → logprob: -4.892910480499268
    6. 'pass' → logprob: -5.517910480499268
    7. '       ' → logprob: -5.767910480499268
    8. '   ' → logprob: -6.017910480499268
    9. 'raise' → logprob: -6.017910480499268
    10. 'print' → logprob: -7.267910480499268

Token 316: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5816219449043274
    2. ' pass' → logprob: -0.8316219449043274
    3. 'pass' → logprob: -5.331622123718262
    4. ' continue' → logprob: -7.331622123718262
    5. '	pass' → logprob: -9.081622123718262
    6. '           ' → logprob: -10.456622123718262
    7. '   ' → logprob: -11.081622123718262
    8. 'continue' → logprob: -11.206622123718262
    9. '(pass' → logprob: -14.581622123718262
    10. '_pass' → logprob: -14.706622123718262

Token 317: ' mais' (ID: 2899)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.03841381520032883
    2. '       ' → logprob: -4.038414001464844
    3. 'pass' → logprob: -4.038414001464844
    4. ' continue' → logprob: -6.163414001464844
    5. 'continue' → logprob: -8.413414001464844
    6. ' break' → logprob: -9.413414001464844
    7. 'break' → logprob: -11.663414001464844
    8. '           ' → logprob: -12.163414001464844
    9. '   ' → logprob: -12.663414001464844
    10. ' w' → logprob: -12.663414001464844

Token 318: ' démont' (ID: 194677)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.47986823320388794
    2. 'pass' → logprob: -0.9798682332038879
    3. ' continue' → logprob: -5.854868412017822
    4. 'continue' → logprob: -6.104868412017822
    5. '       ' → logprob: -8.104867935180664
    6. 'break' → logprob: -9.229867935180664
    7. 'print' → logprob: -9.479867935180664
    8. ' break' → logprob: -9.729867935180664
    9. '#' → logprob: -9.979867935180664
    10. '   ' → logprob: -10.104867935180664

Token 319: 're' (ID: 264)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.9456189870834351
    2. 'str' → logprob: -1.070618987083435
    3. 'te' → logprob: -2.3206191062927246
    4. 'tr' → logprob: -3.0706191062927246
    5. 'age' → logprob: -3.4456191062927246
    6. 'trer' → logprob: -3.6956191062927246
    7. 're' → logprob: -3.9456191062927246
    8. 'r' → logprob: -4.445619106292725
    9. 'ter' → logprob: -4.820619106292725
    10. 'e' → logprob: -5.445619106292725

Token 320: ' un' (ID: 537)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.81252521276474
    2. ' pass' → logprob: -0.93752521276474
    3. '       ' → logprob: -1.8125252723693848
    4. '        ' → logprob: -8.187524795532227
    5. ' la' → logprob: -8.562524795532227
    6. ' print' → logprob: -8.687524795532227
    7. ' le' → logprob: -9.187524795532227
    8. ' continue' → logprob: -9.187524795532227
    9. 'print' → logprob: -9.187524795532227
    10. 'w' → logprob: -9.312524795532227

Token 321: ' patch' (ID: 20867)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.19262321293354034
    2. 'print' → logprob: -2.8176231384277344
    3. ' pass' → logprob: -3.3176231384277344
    4. 'e' → logprob: -3.4426231384277344
    5. ' debug' → logprob: -4.942623138427734
    6. ' passage' → logprob: -4.942623138427734
    7. 'debug' → logprob: -5.067623138427734
    8. 'try' → logprob: -5.817623138427734
    9. '#' → logprob: -6.192623138427734
    10. 'raise' → logprob: -6.317623138427734

Token 322: 'work' (ID: 1596)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.41248226165771484
    2. '       ' → logprob: -1.1624822616577148
    3. 'pass' → logprob: -4.787482261657715
    4. '   ' → logprob: -5.037482261657715
    5. ' ' → logprob: -5.787482261657715
    6. '           ' → logprob: -6.537482261657715
    7. ' continue' → logprob: -7.287482261657715
    8. '        ' → logprob: -7.412482261657715
    9. ' raise' → logprob: -7.412482261657715
    10. '    ' → logprob: -7.662482261657715

Token 323: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03987665846943855
    2. ' pass' → logprob: -3.289876699447632
    3. 'pass' → logprob: -6.914876461029053
    4. ' continue' → logprob: -7.414876461029053
    5. '<|end|>' → logprob: -9.289876937866211
    6. '           ' → logprob: -10.164876937866211
    7. '   ' → logprob: -10.414876937866211
    8. 'continue' → logprob: -10.539876937866211
    9. '	pass' → logprob: -11.664876937866211
    10. '        
' → logprob: -12.039876937866211

Token 324: ' gestion' (ID: 29607)
  Prédit: 'styles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'styles' → logprob: -0.706416666507721
    2. ' styles' → logprob: -0.706416666507721
    3. 'pass' → logprob: -5.206416606903076
    4. 'log' → logprob: -6.581416606903076
    5. 'tech' → logprob: -6.706416606903076
    6. ' techniques' → logprob: -7.456416606903076
    7. 'print' → logprob: -7.706416606903076
    8. 'code' → logprob: -7.831416606903076
    9. 'style' → logprob: -7.831416606903076
    10. ' pratiques' → logprob: -8.206417083740234

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019564496353268623
    2. ' pass' → logprob: -4.394564628601074
    3. '   ' → logprob: -6.394564628601074
    4. 'pass' → logprob: -6.394564628601074
    5. ' de' → logprob: -7.019564628601074
    6. '           ' → logprob: -7.019564628601074
    7. ' des' → logprob: -7.644564628601074
    8. '        ' → logprob: -8.144564628601074
    9. '    ' → logprob: -8.644564628601074
    10. ' d' → logprob: -9.019564628601074

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2867814600467682
    2. ' pass' → logprob: -1.4117814302444458
    3. 'pass' → logprob: -5.411781311035156
    4. '<|end|>' → logprob: -7.411781311035156
    5. ' continue' → logprob: -8.036781311035156
    6. '	pass' → logprob: -10.411781311035156
    7. '           ' → logprob: -10.411781311035156
    8. '        
' → logprob: -10.536781311035156
    9. '   ' → logprob: -10.661781311035156
    10. 'continue' → logprob: -10.911781311035156

Token 327: ' w' (ID: 286)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.016109442338347435
    2. ' pass' → logprob: -4.266109466552734
    3. 'continue' → logprob: -6.266109466552734
    4. '   ' → logprob: -10.766109466552734
    5. ' continue' → logprob: -10.891109466552734
    6. '_' → logprob: -13.141109466552734
    7. 'break' → logprob: -13.891109466552734
    8. '       ' → logprob: -14.766109466552734
    9. 'None' → logprob: -14.891109466552734
    10. 'print' → logprob: -14.891109466552734

Token 328: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.008005950599908829
    2. '.' → logprob: -4.8830060958862305
    3. '.l' → logprob: -8.50800609588623
    4. '.r' → logprob: -8.75800609588623
    5. 'r' → logprob: -10.63300609588623
    6. 'move' → logprob: -13.00800609588623
    7. ' .' → logprob: -13.13300609588623
    8. '.mov' → logprob: -13.25800609588623
    9. '.raise' → logprob: -13.88300609588623
    10. '.advance' → logprob: -13.88300609588623

Token 329: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.012777437455952168
    2. '_right' → logprob: -4.387777328491211
    3. 'left' → logprob: -8.262777328491211
    4. 'right' → logprob: -11.637777328491211
    5. '_LEFT' → logprob: -15.137777328491211
    6. 'Left' → logprob: -15.387777328491211
    7. '_down' → logprob: -16.51277732849121
    8. '   ' → logprob: -16.51277732849121
    9. ' left' → logprob: -17.38777732849121
    10. 'LEFT' → logprob: -17.51277732849121

Token 330: '()

' (ID: 5874)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5833524465560913
    2. '()' → logprob: -1.2083524465560913
    3. '<|end|>' → logprob: -1.9583524465560913
    4. '())' → logprob: -7.083352565765381
    5. '()
' → logprob: -7.833352565765381
    6. '```' → logprob: -7.958352565765381
    7. '<|end|>' → logprob: -8.083352088928223
    8. '
' → logprob: -9.833352088928223
    9. '   ' → logprob: -9.958352088928223
    10. '}' → logprob: -10.083352088928223

Token 331: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0019402962643653154
    2. '(' → logprob: -6.2519402503967285
    3. ' (' → logprob: -11.501940727233887
    4. '()' → logprob: -14.126940727233887
    5. '(max' → logprob: -15.751940727233887
    6. '(answer' → logprob: -16.00193977355957
    7. 'ans' → logprob: -16.12693977355957
    8. '(f' → logprob: -16.37693977355957
    9. '('' → logprob: -16.50193977355957
    10. '(len' → logprob: -16.62693977355957

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ' )' → logprob: -12.250005722045898
    3. ')
' → logprob: -14.125005722045898
    4. '))' → logprob: -16.0000057220459
    5. ')`' → logprob: -16.1250057220459
    6. '`)' → logprob: -16.3750057220459
    7. '())' → logprob: -16.8750057220459
    8. '+' → logprob: -17.1250057220459
    9. ')#' → logprob: -17.7500057220459
    10. '()' → logprob: -18.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 331
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 120
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 34.44%
Précision adaptée (1ère position): 36.25%
Précision (top 10): 68.58%
================================================================================
