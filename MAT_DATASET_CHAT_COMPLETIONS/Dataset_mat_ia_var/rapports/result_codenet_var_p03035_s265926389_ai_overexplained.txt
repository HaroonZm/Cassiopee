================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer deux valeurs entières séparées par un espace
# input() lit la ligne de texte entrée par l'utilisateur au clavier
# .split() découpe la chaîne de caractères entrée en une liste de sous-chaînes en utilisant l'espace comme séparateur
# map(int, ...) applique la fonction int (pour convertir en entier) à chaque élément de cette liste
# Les deux valeurs ainsi converties en entiers sont assignées respectivement aux variables A et B
A, B = map(int, input().split())

# Début de la structure conditionnelle 'if'
# On vérifie si la valeur de A est supérieure ou égale à 13
if A >= 13:
    # Si la condition précédente est vraie (A est au moins 13)
    # On affiche simplement la valeur de B en utilisant print()
    print(B)
# Si la première condition (A >= 13) n'est pas satisfaite, on vérifie la suivante avec 'elif'
# 'elif' signifie "sinon, si..."
# On vérifie si la valeur de A est inférieure ou égale à 12 ET supérieure ou égale à 6
# En Python, l'expression composée 12 >= A >= 6 est équivalente à (12 >= A) and (A >= 6)
elif 12 >= A >= 6:
    # Si cette condition est vraie (c'est-à-dire A est compris entre 6 et 12, bornes incluses)
    # On affiche la moitié de la valeur B, en utilisant la division entière (//)
    # La division entière retourne le quotient sans les décimales (partie entière seulement)
    print(B // 2)
# Si aucune des conditions précédentes n'est vraie (c'est-à-dire, si A est inférieur à 6)
# On utilise 'else' pour traiter tous les autres cas restants
else:
    # On affiche 0, ce qui signifie que pour les valeurs de A inférieures à 6, la sortie est toujours 0
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7432820796966553
    2. ' ' → logprob: -1.6182820796966553
    3. ':' → logprob: -1.8682820796966553
    4. '_' → logprob: -2.2432820796966553
    5. ' de' → logprob: -4.243282318115234
    6. ' :' → logprob: -4.243282318115234
    7. '```' → logprob: -4.868282318115234
    8. ' =' → logprob: -5.243282318115234
    9. ' d' → logprob: -5.243282318115234
    10. ''' → logprob: -5.368282318115234

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014099803753197193
    2. ' l' → logprob: -4.389099597930908
    3. 'user' → logprob: -7.139099597930908
    4. 'util' → logprob: -8.639100074768066
    5. ''' → logprob: -9.389100074768066
    6. ' user' → logprob: -9.514100074768066
    7. '_' → logprob: -9.639100074768066
    8. '#' → logprob: -9.764100074768066
    9. 'la' → logprob: -9.889100074768066
    10. '`' → logprob: -10.264100074768066

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.3604263961315155
    2. 'name' → logprob: -2.235426425933838
    3. 'user' → logprob: -2.485426425933838
    4. 'n' → logprob: -3.235426425933838
    5. 'input' → logprob: -4.110426425933838
    6. 's' → logprob: -4.360426425933838
    7. 'username' → logprob: -4.735426425933838
    8. '#' → logprob: -5.110426425933838
    9. '`' → logprob: -5.235426425933838
    10. 'print' → logprob: -5.735426425933838

Token 7: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3964186906814575
    2. 'e' → logprob: -1.2714186906814575
    3. ''entrée' → logprob: -3.896418571472168
    4. 'é' → logprob: -5.396418571472168
    5. 'a' → logprob: -5.771418571472168
    6. 'entrée' → logprob: -6.021418571472168
    7. ''ent' → logprob: -6.021418571472168
    8. ''é' → logprob: -6.646418571472168
    9. ''avoir' → logprob: -6.646418571472168
    10. '’' → logprob: -6.771418571472168

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.281941682100296
    2. 'ent' → logprob: -2.1569416522979736
    3. 'entrée' → logprob: -2.1569416522979736
    4. 's' → logprob: -4.781941890716553
    5. 'entre' → logprob: -7.031941890716553
    6. 'input' → logprob: -7.156941890716553
    7. 'enter' → logprob: -7.156941890716553
    8. 'être' → logprob: -7.656941890716553
    9. 'e' → logprob: -7.781941890716553
    10. 'é' → logprob: -7.906941890716553

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -9.007317567011341e-05
    2. 'éer' → logprob: -9.750089645385742
    3. 'rer' → logprob: -11.500089645385742
    4. 'erer' → logprob: -12.000089645385742
    5. 'érer' → logprob: -13.000089645385742
    6. 'trer' → logprob: -13.125089645385742
    7. 'é' → logprob: -13.125089645385742
    8. 'e' → logprob: -13.500089645385742
    9. ''er' → logprob: -13.625089645385742
    10. 'ér' → logprob: -13.750089645385742

Token 10: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09059526771306992
    2. ' un' → logprob: -3.215595245361328
    3. ''' → logprob: -4.090595245361328
    4. ' une' → logprob: -4.590595245361328
    5. '_' → logprob: -4.840595245361328
    6. 'u' → logprob: -5.965595245361328
    7. 'une' → logprob: -6.715595245361328
    8. ' a' → logprob: -6.965595245361328
    9. 'un' → logprob: -6.965595245361328
    10. ' u' → logprob: -6.965595245361328

Token 11: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12191209942102432
    2. 's' → logprob: -2.6219120025634766
    3. ' espaces' → logprob: -3.8719120025634766
    4. ' s' → logprob: -5.371912002563477
    5. ' nombres' → logprob: -5.496912002563477
    6. '_' → logprob: -5.496912002563477
    7. ' espace' → logprob: -6.746912002563477
    8. 'es' → logprob: -6.746912002563477
    9. ' mots' → logprob: -7.246912002563477
    10. 'e' → logprob: -7.496912002563477

Token 12: ' ent' (ID: 1121)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6474198698997498
    2. 'x' → logprob: -1.5224199295043945
    3. '\n' → logprob: -1.8974199295043945
    4. 'val' → logprob: -3.1474199295043945
    5. 'a' → logprob: -3.6474199295043945
    6. 'value' → logprob: -4.1474199295043945
    7. 'n' → logprob: -4.8974199295043945
    8. '```' → logprob: -4.8974199295043945
    9. '\' → logprob: -6.0224199295043945
    10. '`' → logprob: -6.3974199295043945

Token 13: 'ières' (ID: 44864)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11674728989601135
    2. 'i' → logprob: -2.8667473793029785
    3. 'iers' → logprob: -3.8667473793029785
    4. 'ières' → logprob: -3.9917473793029785
    5. '```' → logprob: -5.4917473793029785
    6. 'ires' → logprob: -5.7417473793029785
    7. 'rs' → logprob: -6.2417473793029785
    8. 'ri' → logprob: -6.7417473793029785
    9. 'rès' → logprob: -7.3667473793029785
    10. '#' → logprob: -7.4917473793029785

Token 14: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1176109313964844
    2. 'x' → logprob: -1.2426109313964844
    3. 'v' → logprob: -1.6176109313964844
    4. '\n' → logprob: -2.1176109313964844
    5. 'n' → logprob: -3.1176109313964844
    6. '\' → logprob: -4.617610931396484
    7. 'val' → logprob: -5.492610931396484
    8. '```' → logprob: -6.367610931396484
    9. 'value' → logprob: -6.617610931396484
    10. '#' → logprob: -6.867610931396484

Token 15: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.003907538019120693
    2. 'é' → logprob: -6.003907680511475
    3. 'és' → logprob: -6.753907680511475
    4. 'ée' → logprob: -8.253907203674316
    5. '```' → logprob: -13.128907203674316
    6. ' par' → logprob: -14.878907203674316
    7. 'es' → logprob: -15.128907203674316
    8. 'er' → logprob: -15.503907203674316
    9. '&eacute' → logprob: -15.503907203674316
    10. '#' → logprob: -15.503907203674316

Token 16: ' par' (ID: 686)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10441428422927856
    2. 'e' → logprob: -2.479414224624634
    3. 's' → logprob: -4.229414463043213
    4. '_' → logprob: -8.729413986206055
    5. ' ' → logprob: -8.854413986206055
    6. ':' → logprob: -8.979413986206055
    7. ',' → logprob: -9.479413986206055
    8. '.' → logprob: -9.604413986206055
    9. 'é' → logprob: -9.729413986206055
    10. 'ées' → logprob: -10.854413986206055

Token 17: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5074149966239929
    2. 'un' → logprob: -1.0074150562286377
    3. ' un' → logprob: -4.007414817810059
    4. ' une' → logprob: -5.632414817810059
    5. ''un' → logprob: -5.757414817810059
    6. 'es' → logprob: -6.632414817810059
    7. 'esp' → logprob: -7.257414817810059
    8. '```' → logprob: -7.257414817810059
    9. ''une' → logprob: -7.507414817810059
    10. ' ' → logprob: -7.632414817810059

Token 18: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.720903217792511
    2. ' espace' → logprob: -0.970903217792511
    3. ''espace' → logprob: -2.345903158187866
    4. 'esp' → logprob: -4.345903396606445
    5. 'e' → logprob: -4.470903396606445
    6. 'space' → logprob: -4.720903396606445
    7. '’espace' → logprob: -6.345903396606445
    8. '_' → logprob: -7.220903396606445
    9. ''esp' → logprob: -7.345903396606445
    10. 's' → logprob: -7.470903396606445

Token 19: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.46955591440200806
    2. 'n' → logprob: -2.4695558547973633
    3. 'x' → logprob: -2.4695558547973633
    4. 'i' → logprob: -2.8445558547973633
    5. 'input' → logprob: -2.9695558547973633
    6. 'val' → logprob: -3.3445558547973633
    7. 'a' → logprob: -4.219555854797363
    8. 'e' → logprob: -4.469555854797363
    9. '```' → logprob: -4.844555854797363
    10. 'user' → logprob: -4.969555854797363

Token 20: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9568464159965515
    2. 'v' → logprob: -1.7068464756011963
    3. 'n' → logprob: -1.8318464756011963
    4. 'val' → logprob: -2.3318464756011963
    5. 'i' → logprob: -3.3318464756011963
    6. '```' → logprob: -3.3318464756011963
    7. 'a' → logprob: -3.4568464756011963
    8. 'input' → logprob: -4.081846237182617
    9. 'e' → logprob: -4.331846237182617
    10. '`' → logprob: -4.456846237182617

Token 21: ' input' (ID: 3422)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3831973373889923
    2. 'ent' → logprob: -2.38319730758667
    3. 'n' → logprob: -2.88319730758667
    4. 'values' → logprob: -3.50819730758667
    5. 'user' → logprob: -3.75819730758667
    6. 'a' → logprob: -3.75819730758667
    7. 'entr' → logprob: -3.88319730758667
    8. 'input' → logprob: -3.88319730758667
    9. 'v' → logprob: -4.38319730758667
    10. 'value' → logprob: -4.75819730758667

Token 22: '()' (ID: 416)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0431125164031982
    2. ' =' → logprob: -1.0431125164031982
    3. 's' → logprob: -2.4181125164031982
    4. 'val' → logprob: -2.5431125164031982
    5. 'user' → logprob: -3.0431125164031982
    6. '_' → logprob: -3.7931125164031982
    7. '(' → logprob: -5.168112754821777
    8. 'value' → logprob: -5.168112754821777
    9. 'values' → logprob: -5.168112754821777
    10. ' ' → logprob: -5.293112754821777

Token 23: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5038923621177673
    2. ')' → logprob: -2.753892421722412
    3. ',' → logprob: -2.878892421722412
    4. ' ' → logprob: -3.003892421722412
    5. '.' → logprob: -3.253892421722412
    6. '#' → logprob: -3.378892421722412
    7. '()' → logprob: -4.128892421722412
    8. 's' → logprob: -4.128892421722412
    9. '[' → logprob: -4.253892421722412
    10. '=' → logprob: -4.753892421722412

Token 24: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.44790077209472656
    2. ' la' → logprob: -1.3229007720947266
    3. ' l' → logprob: -3.5729007720947266
    4. '()' → logprob: -3.5729007720947266
    5. 'une' → logprob: -4.697900772094727
    6. ' ' → logprob: -4.947900772094727
    7. ' )' → logprob: -5.072900772094727
    8. ' les' → logprob: -5.447900772094727
    9. ' ' → logprob: -6.197900772094727
    10. ' un' → logprob: -6.822900772094727

Token 25: ' ligne' (ID: 19583)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9466444253921509
    2. ' ligne' → logprob: -1.8216444253921509
    3. ' chaîne' → logprob: -1.9466444253921509
    4. 'chaine' → logprob: -2.5716443061828613
    5. 'ligne' → logprob: -2.8216443061828613
    6. ' valeur' → logprob: -3.0716443061828613
    7. ' suite' → logprob: -3.1966443061828613
    8. 'suite' → logprob: -3.8216443061828613
    9. ' ' → logprob: -4.571644306182861
    10. 'val' → logprob: -4.821644306182861

Token 26: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3040831983089447
    2. 's' → logprob: -1.679083228111267
    3. ' ,' → logprob: -3.9290831089019775
    4. ' suivante' → logprob: -4.804083347320557
    5. 'user' → logprob: -5.304083347320557
    6. 'e' → logprob: -5.429083347320557
    7. 'entrée' → logprob: -5.929083347320557
    8. '  ' → logprob: -5.929083347320557
    9. ' d' → logprob: -6.054083347320557
    10. ' )' → logprob: -6.054083347320557

Token 27: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.7789570689201355
    2. 'code' → logprob: -0.9039570689201355
    3. ' texte' → logprob: -2.9039571285247803
    4. 'commande' → logprob: -3.2789571285247803
    5. ' code' → logprob: -4.278956890106201
    6. 's' → logprob: -4.278956890106201
    7. 'l' → logprob: -5.028956890106201
    8. '#' → logprob: -6.028956890106201
    9. ' sais' → logprob: -6.903956890106201
    10. 'entrée' → logprob: -6.903956890106201

Token 28: ' entrée' (ID: 95590)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.589028239250183
    2. ',' → logprob: -1.714028239250183
    3. 'a' → logprob: -1.964028239250183
    4. 's' → logprob: -2.0890283584594727
    5. 'val' → logprob: -2.5890283584594727
    6. 'x' → logprob: -2.9640283584594727
    7. 'user' → logprob: -3.0890283584594727
    8. 'n' → logprob: -3.0890283584594727
    9. ' ' → logprob: -3.8390283584594727
    10. 'value' → logprob: -4.464028358459473

Token 29: ' par' (ID: 686)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8820071816444397
    2. 'val' → logprob: -1.882007122039795
    3. 'x' → logprob: -1.882007122039795
    4. ',' → logprob: -2.632007122039795
    5. 'a' → logprob: -2.882007122039795
    6. 'n' → logprob: -3.132007122039795
    7. 'u' → logprob: -3.757007122039795
    8. ' ' → logprob: -3.882007122039795
    9. 'user' → logprob: -4.882007122039795
    10. '#' → logprob: -5.007007122039795

Token 30: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1828734427690506
    2. ' l' → logprob: -1.8078734874725342
    3. '	l' → logprob: -6.182873249053955
    4. ' ' → logprob: -8.557873725891113
    5. '#' → logprob: -8.682873725891113
    6. ' défaut' → logprob: -8.807873725891113
    7. 'def' → logprob: -8.807873725891113
    8. 'util' → logprob: -9.557873725891113
    9. ' #' → logprob: -10.057873725891113
    10. ' ' → logprob: -10.057873725891113

Token 31: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.16473428905010223
    2. ''' → logprob: -2.664734363555908
    3. 'u' → logprob: -2.914734363555908
    4. ''u' → logprob: -4.039734363555908
    5. ''util' → logprob: -4.789734363555908
    6. '’utilisateur' → logprob: -7.289734363555908
    7. ''us' → logprob: -7.289734363555908
    8. ''user' → logprob: -7.914734363555908
    9. ''use' → logprob: -9.78973388671875
    10. ''utilisation' → logprob: -10.03973388671875

Token 32: ' au' (ID: 2791)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1788997650146484
    2. 'a' → logprob: -1.4288997650146484
    3. 'n' → logprob: -1.8038997650146484
    4. 'val' → logprob: -1.8038997650146484
    5. 'x' → logprob: -2.5538997650146484
    6. 'values' → logprob: -4.553899765014648
    7. '```' → logprob: -5.303899765014648
    8. ',' → logprob: -5.803899765014648
    9. 'ent' → logprob: -5.803899765014648
    10. '#' → logprob: -5.803899765014648

Token 33: ' clavier' (ID: 187878)
  Prédit: ' clavier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clavier' → logprob: -0.837934136390686
    2. 'cl' → logprob: -1.212934136390686
    3. 'format' → logprob: -2.3379340171813965
    4. 'input' → logprob: -4.0879340171813965
    5. 'pass' → logprob: -4.0879340171813965
    6. 'keyboard' → logprob: -4.3379340171813965
    7. 'stdin' → logprob: -4.4629340171813965
    8. 's' → logprob: -4.5879340171813965
    9. 'l' → logprob: -4.7129340171813965
    10. 'n' → logprob: -4.8379340171813965

Token 34: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1964412927627563
    2. 'a' → logprob: -1.3214412927627563
    3. 'v' → logprob: -1.4464412927627563
    4. 'val' → logprob: -2.196441173553467
    5. 'x' → logprob: -2.946441173553467
    6. '```' → logprob: -4.821441173553467
    7. '#' → logprob: -5.321441173553467
    8. 'values' → logprob: -5.571441173553467
    9. 'ent' → logprob: -5.821441173553467
    10. 'u' → logprob: -5.946441173553467

Token 35: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6121863126754761
    2. 'x' → logprob: -1.612186312675476
    3. 'v' → logprob: -2.1121864318847656
    4. 'n' → logprob: -2.2371864318847656
    5. 'val' → logprob: -4.112186431884766
    6. '#' → logprob: -5.487186431884766
    7. 'values' → logprob: -6.237186431884766
    8. 'u' → logprob: -6.612186431884766
    9. '```' → logprob: -6.612186431884766
    10. 'ent' → logprob: -6.612186431884766

Token 36: ' .' (ID: 887)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8348950147628784
    2. 'val' → logprob: -0.9598950147628784
    3. 'v' → logprob: -2.709895133972168
    4. 'x' → logprob: -3.084895133972168
    5. 'n' → logprob: -3.209895133972168
    6. 'values' → logprob: -4.209895133972168
    7. 'ent' → logprob: -5.459895133972168
    8. 'value' → logprob: -5.959895133972168
    9. ' valeurs' → logprob: -6.834895133972168
    10. ' a' → logprob: -6.834895133972168

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02263171784579754
    2. 'strip' → logprob: -3.8976316452026367
    3. 's' → logprob: -6.397631645202637
    4. 'spl' → logprob: -8.397631645202637
    5. ' split' → logprob: -8.897631645202637
    6. '#' → logprob: -10.522631645202637
    7. 'rstrip' → logprob: -11.772631645202637
    8. 'sp' → logprob: -11.897631645202637
    9. '.split' → logprob: -11.897631645202637
    10. '.strip' → logprob: -13.522631645202637

Token 38: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8017400503158569
    2. '('' → logprob: -0.8017400503158569
    3. '(' → logprob: -2.3017401695251465
    4. '("' → logprob: -5.9267401695251465
    5. '("("' → logprob: -9.551739692687988
    6. '(',' → logprob: -10.926739692687988
    7. ''' → logprob: -11.301739692687988
    8. ' ()' → logprob: -11.926739692687988
    9. '('.')' → logprob: -12.051739692687988
    10. '(
' → logprob: -12.176739692687988

Token 39: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8629462718963623
    2. '('' → logprob: -1.1129462718963623
    3. '(' → logprob: -1.6129462718963623
    4. '<|end|>' → logprob: -3.3629462718963623
    5. '("' → logprob: -5.362946510314941
    6. ''' → logprob: -5.487946510314941
    7. '<|end|>' → logprob: -6.612946510314941
    8. ' (' → logprob: -6.612946510314941
    9. ')' → logprob: -7.487946510314941
    10. '[' → logprob: -7.612946510314941

Token 40: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0025189423467963934
    2. 'p' → logprob: -6.502519130706787
    3. 'pé' → logprob: -7.752519130706787
    4. 'page' → logprob: -8.002518653869629
    5. 'per' → logprob: -9.752518653869629
    6. 'пе' → logprob: -9.877518653869629
    7. ' pe' → logprob: -10.377518653869629
    8. 'ppe' → logprob: -10.627518653869629
    9. '```' → logprob: -10.627518653869629
    10. 'pa' → logprob: -11.627518653869629

Token 41: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4049016833305359
    2. '<|end|>' → logprob: -1.6549017429351807
    3. '('' → logprob: -3.1549017429351807
    4. ' ' → logprob: -3.7799017429351807
    5. ' la' → logprob: -3.7799017429351807
    6. '(' → logprob: -3.9049017429351807
    7. ''' → logprob: -4.654901504516602
    8. ' (' → logprob: -5.279901504516602
    9. ' )' → logprob: -5.529901504516602
    10. ' ()' → logprob: -5.654901504516602

Token 42: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.9985122680664062
    2. 'string' → logprob: -1.3735122680664062
    3. ''' → logprob: -2.1235122680664062
    4. ' chaîne' → logprob: -2.6235122680664062
    5. 'texte' → logprob: -2.6235122680664062
    6. ' string' → logprob: -3.1235122680664062
    7. 'input' → logprob: -4.123512268066406
    8. ' ' → logprob: -4.248512268066406
    9. ' '' → logprob: -5.248512268066406
    10. ' chaine' → logprob: -5.248512268066406

Token 43: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9745426177978516
    2. '[' → logprob: -1.2245426177978516
    3. 's' → logprob: -2.3495426177978516
    4. '[]' → logprob: -2.7245426177978516
    5. '_' → logprob: -3.3495426177978516
    6. ')' → logprob: -3.7245426177978516
    7. '()' → logprob: -3.9745426177978516
    8. ''' → logprob: -4.099542617797852
    9. '<|end|>' → logprob: -4.224542617797852
    10. '"' → logprob: -4.724542617797852

Token 44: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.975153923034668
    2. 'car' → logprob: -1.100153923034668
    3. 'au' → logprob: -1.725153923034668
    4. ' caractères' → logprob: -4.100153923034668
    5. ''espace' → logprob: -4.225153923034668
    6. '```' → logprob: -4.225153923034668
    7. 'l' → logprob: -4.725153923034668
    8. ' l' → logprob: -4.850153923034668
    9. ''esp' → logprob: -4.850153923034668
    10. '"' → logprob: -5.350153923034668

Token 45: ' entrée' (ID: 95590)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.547561526298523
    2. '()' → logprob: -2.0475616455078125
    3. '[' → logprob: -2.2975616455078125
    4. ''' → logprob: -3.0475616455078125
    5. ')' → logprob: -3.6725616455078125
    6. 's' → logprob: -3.7975616455078125
    7. ' ' → logprob: -3.9225616455078125
    8. ' (' → logprob: -4.5475616455078125
    9. '```' → logprob: -4.6725616455078125
    10. ',' → logprob: -4.7975616455078125

Token 46: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16688339412212372
    2. 's' → logprob: -2.7918834686279297
    3. ',' → logprob: -4.66688346862793
    4. ')' → logprob: -4.66688346862793
    5. '```' → logprob: -4.66688346862793
    6. 'n' → logprob: -4.91688346862793
    7. '(' → logprob: -5.04188346862793
    8. '_' → logprob: -5.29188346862793
    9. '=' → logprob: -5.41688346862793
    10. 'u' → logprob: -5.54188346862793

Token 47: ' une' (ID: 2463)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.9106863141059875
    2. ''' → logprob: -2.4106862545013428
    3. ' ' → logprob: -2.4106862545013428
    4. '```' → logprob: -2.7856862545013428
    5. 'es' → logprob: -3.0356862545013428
    6. ''espace' → logprob: -3.0356862545013428
    7. ' espace' → logprob: -3.2856862545013428
    8. 'un' → logprob: -3.2856862545013428
    9. ' un' → logprob: -4.160686492919922
    10. ' une' → logprob: -4.160686492919922

Token 48: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5146759748458862
    2. ' liste' → logprob: -1.3896759748458862
    3. 's' → logprob: -2.639676094055176
    4. ' seule' → logprob: -4.139676094055176
    5. 'list' → logprob: -4.764676094055176
    6. 'se' → logprob: -4.764676094055176
    7. ' ' → logprob: -5.139676094055176
    8. 'ou' → logprob: -5.389676094055176
    9. 'space' → logprob: -5.514676094055176
    10. ' simple' → logprob: -5.514676094055176

Token 49: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.808401882648468
    2. 'v' → logprob: -0.933401882648468
    3. 'a' → logprob: -2.8084018230438232
    4. 'val' → logprob: -3.5584018230438232
    5. 'x' → logprob: -4.183402061462402
    6. '[' → logprob: -4.183402061462402
    7. ',' → logprob: -4.808402061462402
    8. 'u' → logprob: -5.058402061462402
    9. 'e' → logprob: -5.558402061462402
    10. 's' → logprob: -5.683402061462402

Token 50: ' sous' (ID: 14487)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.8307367563247681
    2. 'esp' → logprob: -1.580736756324768
    3. ' chaînes' → logprob: -1.955736756324768
    4. ' ' → logprob: -2.9557366371154785
    5. ''' → logprob: -3.2057366371154785
    6. ''esp' → logprob: -3.4557366371154785
    7. 'cha' → logprob: -3.4557366371154785
    8. ' '' → logprob: -4.5807366371154785
    9. 'es' → logprob: -4.5807366371154785
    10. ''espace' → logprob: -5.2057366371154785

Token 51: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.48498979210853577
    2. 'cha' → logprob: -1.3599897623062134
    3. 'chain' → logprob: -2.484989881515503
    4. '-' → logprob: -4.609989643096924
    5. 'strings' → logprob: -4.609989643096924
    6. 'chaine' → logprob: -5.859989643096924
    7. '-cha' → logprob: -5.859989643096924
    8. '```' → logprob: -5.984989643096924
    9. 'string' → logprob: -6.359989643096924
    10. 'chains' → logprob: -6.484989643096924

Token 52: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.35182082653045654
    2. 'î' → logprob: -1.2268208265304565
    3. 'r' → logprob: -6.851820945739746
    4. 'nes' → logprob: -7.226820945739746
    5. 'Î' → logprob: -7.976820945739746
    6. 'ì' → logprob: -8.226820945739746
    7. 'ines' → logprob: -8.976820945739746
    8. 'îne' → logprob: -9.101820945739746
    9. 'ï' → logprob: -9.226820945739746
    10. 'în' → logprob: -9.351820945739746

Token 53: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.208107352256775
    2. 'n' → logprob: -1.208107352256775
    3. 'v' → logprob: -1.333107352256775
    4. 'x' → logprob: -2.7081074714660645
    5. 'val' → logprob: -3.0831074714660645
    6. '#' → logprob: -4.8331074714660645
    7. ',' → logprob: -5.2081074714660645
    8. '```' → logprob: -6.2081074714660645
    9. 'values' → logprob: -6.7081074714660645
    10. 'u' → logprob: -6.8331074714660645

Token 54: ' utilisant' (ID: 92474)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.0661462545394897
    2. 's' → logprob: -1.3161462545394897
    3. ' ' → logprob: -2.1911463737487793
    4. ' espaces' → logprob: -2.8161463737487793
    5. ' fonction' → logprob: -3.1911463737487793
    6. '<|end|>' → logprob: -3.4411463737487793
    7. 'space' → logprob: -3.8161463737487793
    8. ' ' → logprob: -4.066146373748779
    9. 'es' → logprob: -4.191146373748779
    10. ''espace' → logprob: -4.316146373748779

Token 55: ' l' (ID: 305)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14551810920238495
    2. 'l' → logprob: -2.3955180644989014
    3. ' ' → logprob: -3.8955180644989014
    4. ' l' → logprob: -4.7705183029174805
    5. ''un' → logprob: -5.2705183029174805
    6. ''espace' → logprob: -5.7705183029174805
    7. '<|end|>' → logprob: -6.1455183029174805
    8. '"' → logprob: -6.7705183029174805
    9. ' ' → logprob: -7.1455183029174805
    10. ''l' → logprob: -7.8955183029174805

Token 56: ''espace' (ID: 118124)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5697392821311951
    2. ''espace' → logprob: -1.4447393417358398
    3. 'a' → logprob: -2.19473934173584
    4. ''a' → logprob: -3.06973934173584
    5. 'es' → logprob: -4.31973934173584
    6. 'e' → logprob: -4.44473934173584
    7. ''esp' → logprob: -4.56973934173584
    8. '```' → logprob: -7.06973934173584
    9. ''e' → logprob: -7.19473934173584
    10. 'u' → logprob: -7.31973934173584

Token 57: ' comme' (ID: 7971)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9628955721855164
    2. 'a' → logprob: -1.2128956317901611
    3. 'x' → logprob: -1.8378956317901611
    4. 'v' → logprob: -2.337895631790161
    5. '#' → logprob: -3.587895631790161
    6. 'val' → logprob: -4.337895393371582
    7. ',' → logprob: -5.087895393371582
    8. 'i' → logprob: -5.337895393371582
    9. '```' → logprob: -5.712895393371582
    10. 'u' → logprob: -6.337895393371582

Token 58: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1979901790618896
    2. 'sé' → logprob: -1.9479901790618896
    3. ' sépar' → logprob: -2.0729901790618896
    4. 'l' → logprob: -2.3229901790618896
    5. '<|end|>' → logprob: -2.3229901790618896
    6. 'delimiter' → logprob: -2.5729901790618896
    7. 'le' → logprob: -3.6979901790618896
    8. ''' → logprob: -3.8229901790618896
    9. 'se' → logprob: -3.9479901790618896
    10. 'dé' → logprob: -4.447990417480469

Token 59: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.029173143208026886
    2. 'ate' → logprob: -3.9041731357574463
    3. 'ation' → logprob: -5.654173374176025
    4. 'a' → logprob: -5.904173374176025
    5. 'ator' → logprob: -7.279173374176025
    6. 'atrice' → logprob: -7.404173374176025
    7. 'ateurs' → logprob: -7.529173374176025
    8. 'e' → logprob: -9.654172897338867
    9. '```' → logprob: -9.904172897338867
    10. 'at' → logprob: -10.154172897338867

Token 60: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34495094418525696
    2. 'n' → logprob: -1.5949509143829346
    3. 'x' → logprob: -2.8449509143829346
    4. 'v' → logprob: -4.219951152801514
    5. 'val' → logprob: -4.594951152801514
    6. '#' → logprob: -6.469951152801514
    7. '```' → logprob: -6.719951152801514
    8. 'A' → logprob: -7.469951152801514
    9. 'ent' → logprob: -7.594951152801514
    10. 'u' → logprob: -7.719951152801514

Token 61: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9034799337387085
    2. 'val' → logprob: -1.4034799337387085
    3. 'n' → logprob: -1.6534799337387085
    4. 'v' → logprob: -2.403480052947998
    5. 'x' → logprob: -3.153480052947998
    6. 'values' → logprob: -4.278480052947998
    7. 'ent' → logprob: -5.403480052947998
    8. 'vals' → logprob: -6.028480052947998
    9. '```' → logprob: -6.278480052947998
    10. 'numbers' → logprob: -7.653480052947998

Token 62: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0268681049346924
    2. 'v' → logprob: -1.1518681049346924
    3. 'n' → logprob: -1.6518681049346924
    4. 'x' → logprob: -2.4018681049346924
    5. 'val' → logprob: -3.9018681049346924
    6. '#' → logprob: -4.401867866516113
    7. 'u' → logprob: -6.026867866516113
    8. 'values' → logprob: -6.151867866516113
    9. '```' → logprob: -7.026867866516113
    10. 'i' → logprob: -7.151867866516113

Token 63: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04895102605223656
    2. '(int' → logprob: -3.2989509105682373
    3. '(lambda' → logprob: -4.548951148986816
    4. '(str' → logprob: -8.548951148986816
    5. '(
' → logprob: -11.298951148986816
    6. '()' → logprob: -11.298951148986816
    7. 'int' → logprob: -11.548951148986816
    8. '(float' → logprob: -12.173951148986816
    9. '(func' → logprob: -12.798951148986816
    10. '(`' → logprob: -12.798951148986816

Token 64: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11341506987810135
    2. ',' → logprob: -2.238415002822876
    3. '(' → logprob: -8.363414764404297
    4. ',)' → logprob: -9.863414764404297
    5. ' )' → logprob: -9.863414764404297
    6. '#' → logprob: -10.863414764404297
    7. ',input' → logprob: -10.863414764404297
    8. ' ,' → logprob: -10.988414764404297
    9. '`)' → logprob: -10.988414764404297
    10. '())' → logprob: -11.113414764404297

Token 65: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5270907878875732
    2. 'input' → logprob: -1.0270907878875732
    3. ')' → logprob: -3.1520907878875732
    4. ' )' → logprob: -4.777091026306152
    5. ' user' → logprob: -9.277091026306152
    6. '(input' → logprob: -9.402091026306152
    7. 'user' → logprob: -9.402091026306152
    8. ' ' → logprob: -10.527091026306152
    9. '=input' → logprob: -10.902091026306152
    10. '...)' → logprob: -11.527091026306152

Token 66: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4117308557033539
    2. '(' → logprob: -1.1617308855056763
    3. ' )' → logprob: -4.786730766296387
    4. '(
' → logprob: -5.161730766296387
    5. '()' → logprob: -5.661730766296387
    6. '(values' → logprob: -6.786730766296387
    7. '#' → logprob: -7.286730766296387
    8. '(user' → logprob: -7.536730766296387
    9. '(input' → logprob: -7.786730766296387
    10. '(int' → logprob: -8.036730766296387

Token 67: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6605269908905029
    2. 'int' → logprob: -1.410526990890503
    3. ' la' → logprob: -2.160526990890503
    4. '(int' → logprob: -2.410526990890503
    5. ' ' → logprob: -4.910527229309082
    6. ' à' → logprob: -5.285527229309082
    7. '(lambda' → logprob: -5.410527229309082
    8. ' lambda' → logprob: -5.785527229309082
    9. '```' → logprob: -5.785527229309082
    10. '(' → logprob: -6.285527229309082

Token 68: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.19262410700321198
    2. ' fonction' → logprob: -2.317624092102051
    3. 'int' → logprob: -2.692624092102051
    4. ' int' → logprob: -5.192624092102051
    5. 'fon' → logprob: -6.817624092102051
    6. ' function' → logprob: -7.067624092102051
    7. 'function' → logprob: -7.192624092102051
    8. 'split' → logprob: -8.94262409210205
    9. ' conversion' → logprob: -9.19262409210205
    10. 'entrée' → logprob: -9.31762409210205

Token 69: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6188640594482422
    2. '(int' → logprob: -1.1188640594482422
    3. 'int' → logprob: -2.118864059448242
    4. '(lambda' → logprob: -5.368864059448242
    5. '(' → logprob: -5.493864059448242
    6. ')' → logprob: -6.618864059448242
    7. '<|end|>' → logprob: -7.118864059448242
    8. '()' → logprob: -7.493864059448242
    9. ' lambda' → logprob: -7.993864059448242
    10. ' (' → logprob: -7.993864059448242

Token 70: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2520604729652405
    2. '()' → logprob: -1.6270604133605957
    3. ')' → logprob: -4.502060413360596
    4. '(
' → logprob: -5.752060413360596
    5. 'sur' → logprob: -5.877060413360596
    6. '(s' → logprob: -6.627060413360596
    7. '(aux' → logprob: -6.627060413360596
    8. ' aux' → logprob: -7.002060413360596
    9. '(

' → logprob: -7.127060413360596
    10. 'aux' → logprob: -7.252060413360596

Token 71: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03151393681764603
    2. ' )' → logprob: -3.5315139293670654
    3. ' à' → logprob: -7.0315141677856445
    4. ' sur' → logprob: -7.7815141677856445
    5. 'sur' → logprob: -8.656514167785645
    6. ' aux' → logprob: -9.656514167785645
    7. ' ' → logprob: -9.781514167785645
    8. 'à' → logprob: -9.906514167785645
    9. ' pour' → logprob: -10.156514167785645
    10. 'pour' → logprob: -10.406514167785645

Token 72: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.3787497282028198
    2. 'convert' → logprob: -1.2537497282028198
    3. 'transform' → logprob: -3.7537498474121094
    4. ' transformer' → logprob: -5.378749847412109
    5. ' convert' → logprob: -6.503749847412109
    6. 'con' → logprob: -9.50374984741211
    7. 'converter' → logprob: -9.62874984741211
    8. ' ' → logprob: -10.00374984741211
    9. ')' → logprob: -10.12874984741211
    10. 'tr' → logprob: -11.37874984741211

Token 73: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08665035665035248
    2. ' chaque' → logprob: -3.4616503715515137
    3. ' à' → logprob: -4.336650371551514
    4. ' les' → logprob: -4.461650371551514
    5. ' )' → logprob: -4.836650371551514
    6. 'les' → logprob: -5.086650371551514
    7. ' aux' → logprob: -5.586650371551514
    8. ' la' → logprob: -5.711650371551514
    9. 'aux' → logprob: -6.711650371551514
    10. ' chacune' → logprob: -6.836650371551514

Token 74: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.36128896474838257
    2. ' entier' → logprob: -1.9862890243530273
    3. ' ent' → logprob: -3.1112890243530273
    4. ' nombres' → logprob: -3.4862890243530273
    5. ')' → logprob: -3.7362890243530273
    6. 'chaine' → logprob: -4.611289024353027
    7. ' des' → logprob: -4.736289024353027
    8. ' chaînes' → logprob: -4.861289024353027
    9. 'nombre' → logprob: -4.986289024353027
    10. ' ' → logprob: -4.986289024353027

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027624370995908976
    2. ' )' → logprob: -6.252762317657471
    3. 'sur' → logprob: -8.502762794494629
    4. '(' → logprob: -8.877762794494629
    5. 's' → logprob: -9.627762794494629
    6. ' à' → logprob: -9.752762794494629
    7. ' sur' → logprob: -9.877762794494629
    8. ',' → logprob: -10.002762794494629
    9. ')`' → logprob: -10.127762794494629
    10. '`)' → logprob: -10.627762794494629

Token 76: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010304655879735947
    2. ' )' → logprob: -5.7603044509887695
    3. 'sur' → logprob: -6.8853044509887695
    4. '(
' → logprob: -7.0103044509887695
    5. 'a' → logprob: -7.0103044509887695
    6. ',' → logprob: -7.2603044509887695
    7. '()' → logprob: -7.6353044509887695
    8. '(' → logprob: -7.8853044509887695
    9. '),' → logprob: -8.38530445098877
    10. ' à' → logprob: -8.51030445098877

Token 77: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8004615306854248
    2. 'l' → logprob: -1.6754615306854248
    3. 'la' → logprob: -1.8004615306854248
    4. ' la' → logprob: -2.300461530685425
    5. 'cha' → logprob: -3.550461530685425
    6. ' each' → logprob: -4.050461769104004
    7. ' l' → logprob: -4.050461769104004
    8. ' chacune' → logprob: -4.050461769104004
    9. 'de' → logprob: -5.300461769104004
    10. 'each' → logprob: -5.675461769104004

Token 78: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06392689794301987
    2. ' élément' → logprob: -2.813926935195923
    3. ')' → logprob: -6.688926696777344
    4. 'element' → logprob: -8.313926696777344
    5. 'val' → logprob: -8.813926696777344
    6. ' element' → logprob: -9.563926696777344
    7. ' valeur' → logprob: -9.563926696777344
    8. ' éléments' → logprob: -9.938926696777344
    9. ' )' → logprob: -10.563926696777344
    10. 'elem' → logprob: -11.563926696777344

Token 79: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8498660922050476
    2. 'a' → logprob: -1.4748661518096924
    3. ')' → logprob: -2.0998661518096924
    4. 'n' → logprob: -2.8498661518096924
    5. ',' → logprob: -3.4748661518096924
    6. 'v' → logprob: -3.4748661518096924
    7. 'u' → logprob: -4.224865913391113
    8. 'x' → logprob: -4.224865913391113
    9. '(
' → logprob: -5.099865913391113
    10. ' ' → logprob: -5.224865913391113

Token 80: ' cette' (ID: 7696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6795550584793091
    2. 'la' → logprob: -1.054555058479309
    3. ' la' → logprob: -2.0545549392700195
    4. ' l' → logprob: -4.8045549392700195
    5. 'input' → logprob: -5.4295549392700195
    6. ' input' → logprob: -6.6795549392700195
    7. '#' → logprob: -7.6795549392700195
    8. 's' → logprob: -7.8045549392700195
    9. 'liste' → logprob: -7.8045549392700195
    10. 'list' → logprob: -7.9295549392700195

Token 81: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.03110923431813717
    2. ' ligne' → logprob: -4.28110933303833
    3. 'liste' → logprob: -4.90610933303833
    4. ' chaîne' → logprob: -5.40610933303833
    5. ' ' → logprob: -6.03110933303833
    6. ' )' → logprob: -8.031108856201172
    7. ' list' → logprob: -8.031108856201172
    8. 'ligne' → logprob: -8.281108856201172
    9. 'chaine' → logprob: -8.406108856201172
    10. ' phrase' → logprob: -8.781108856201172

Token 82: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17129239439964294
    2. 'n' → logprob: -2.921292304992676
    3. 'x' → logprob: -2.921292304992676
    4. 'v' → logprob: -3.546292304992676
    5. 'val' → logprob: -4.421292304992676
    6. ',' → logprob: -6.671292304992676
    7. ' a' → logprob: -7.046292304992676
    8. 'values' → logprob: -7.046292304992676
    9. ':' → logprob: -7.171292304992676
    10. 'A' → logprob: -7.671292304992676

Token 83: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08194742351770401
    2. 'x' → logprob: -3.2069473266601562
    3. 'v' → logprob: -3.9569473266601562
    4. 'n' → logprob: -4.331947326660156
    5. 'val' → logprob: -5.706947326660156
    6. 'A' → logprob: -7.456947326660156
    7. '```' → logprob: -7.706947326660156
    8. ':' → logprob: -8.081947326660156
    9. ' a' → logprob: -8.206947326660156
    10. 'b' → logprob: -8.706947326660156

Token 84: ' Les' (ID: 7029)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12783992290496826
    2. 'val' → logprob: -2.752840042114258
    3. 'x' → logprob: -3.502840042114258
    4. ' a' → logprob: -3.877840042114258
    5. ' x' → logprob: -6.627840042114258
    6. ' val' → logprob: -7.002840042114258
    7. ' valeurs' → logprob: -7.127840042114258
    8. 'values' → logprob: -7.377840042114258
    9. 'v' → logprob: -7.627840042114258
    10. 'ent' → logprob: -7.627840042114258

Token 85: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5761682391166687
    2. 'val' → logprob: -1.3261682987213135
    3. ' a' → logprob: -2.5761682987213135
    4. ' valeurs' → logprob: -3.2011682987213135
    5. ' val' → logprob: -4.451168060302734
    6. 'x' → logprob: -4.576168060302734
    7. 'ent' → logprob: -4.701168060302734
    8. 'de' → logprob: -4.951168060302734
    9. 'n' → logprob: -5.576168060302734
    10. 'v' → logprob: -5.701168060302734

Token 86: ' valeurs' (ID: 73668)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9103522896766663
    2. 'n' → logprob: -1.2853522300720215
    3. ' valeurs' → logprob: -2.2853522300720215
    4. 'val' → logprob: -2.6603522300720215
    5. 'ent' → logprob: -3.4103522300720215
    6. ' a' → logprob: -3.5353522300720215
    7. ' nombres' → logprob: -3.5353522300720215
    8. 'x' → logprob: -4.5353522300720215
    9. 'v' → logprob: -5.0353522300720215
    10. ',' → logprob: -5.1603522300720215

Token 87: ' ainsi' (ID: 16371)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32338523864746094
    2. ' =' → logprob: -2.448385238647461
    3. ' a' → logprob: -2.573385238647461
    4. 's' → logprob: -3.323385238647461
    5. ',' → logprob: -3.698385238647461
    6. '1' → logprob: -3.698385238647461
    7. 'n' → logprob: -5.323385238647461
    8. 'x' → logprob: -5.323385238647461
    9. '=' → logprob: -5.948385238647461
    10. 'v' → logprob: -6.073385238647461

Token 88: ' convert' (ID: 8452)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1779513359069824
    2. ' affect' → logprob: -1.6779513359069824
    3. 'r' → logprob: -1.9279513359069824
    4. ' stock' → logprob: -2.0529513359069824
    5. 'assign' → logprob: -2.1779513359069824
    6. ' récup' → logprob: -3.0529513359069824
    7. ' assign' → logprob: -4.052951335906982
    8. 'stock' → logprob: -4.302951335906982
    9. ' attrib' → logprob: -4.427951335906982
    10. ',' → logprob: -5.802951335906982

Token 89: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.02872856892645359
    2. 'i' → logprob: -4.778728485107422
    3. 'is' → logprob: -4.903728485107422
    4. '```' → logprob: -6.153728485107422
    5. '#' → logprob: -6.528728485107422
    6. 'ie' → logprob: -6.778728485107422
    7. '   ' → logprob: -6.903728485107422
    8. 'issent' → logprob: -7.153728485107422
    9. 'es' → logprob: -7.528728485107422
    10. 'ises' → logprob: -7.653728485107422

Token 90: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.696753740310669
    2. 'a' → logprob: -1.821753740310669
    3. ' =' → logprob: -2.196753740310669
    4. 's' → logprob: -2.446753740310669
    5. ' ' → logprob: -3.321753740310669
    6. ' ,' → logprob: -3.321753740310669
    7. ' a' → logprob: -3.821753740310669
    8. '=' → logprob: -4.07175350189209
    9. ')' → logprob: -5.19675350189209
    10. 'v' → logprob: -5.44675350189209

Token 91: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.19854101538658142
    2. 'ent' → logprob: -2.1985409259796143
    3. ' espaces' → logprob: -3.8235409259796143
    4. ' integers' → logprob: -4.323541164398193
    5. ' nombres' → logprob: -4.448541164398193
    6. ' entier' → logprob: -4.948541164398193
    7. ' int' → logprob: -5.573541164398193
    8. ' ' → logprob: -6.198541164398193
    9. '_ent' → logprob: -6.448541164398193
    10. ' variables' → logprob: -7.198541164398193

Token 92: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.4906543493270874
    2. 'ières' → logprob: -1.4906543493270874
    3. 'i' → logprob: -1.9906543493270874
    4. 'ière' → logprob: -3.865654468536377
    5. 'ier' → logprob: -5.490654468536377
    6. 'ié' → logprob: -7.490654468536377
    7. '#' → logprob: -9.740653991699219
    8. '```' → logprob: -9.865653991699219
    9. ' i' → logprob: -10.365653991699219
    10. 'ieres' → logprob: -10.615653991699219

Token 93: ' sont' (ID: 5242)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8173340559005737
    2. ',' → logprob: -0.9423340559005737
    3. ' a' → logprob: -2.5673341751098633
    4. 's' → logprob: -3.9423341751098633
    5. ' ,' → logprob: -3.9423341751098633
    6. 'x' → logprob: -4.442334175109863
    7. ' =' → logprob: -4.942334175109863
    8. 'n' → logprob: -5.067334175109863
    9. ')' → logprob: -5.317334175109863
    10. ' ' → logprob: -5.442334175109863

Token 94: ' assign' (ID: 14975)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affect' → logprob: -1.3631486892700195
    2. ' assign' → logprob: -1.4881486892700195
    3. ' stock' → logprob: -1.6131486892700195
    4. ' attrib' → logprob: -2.4881486892700195
    5. 'r' → logprob: -2.6131486892700195
    6. 'assign' → logprob: -3.1131486892700195
    7. ' a' → logprob: -3.6131486892700195
    8. ' ensuite' → logprob: -3.8631486892700195
    9. ' assigned' → logprob: -3.9881486892700195
    10. ' r' → logprob: -4.1131486892700195

Token 95: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.06449068337678909
    2. 'é' → logprob: -2.814490795135498
    3. 'és' → logprob: -6.064490795135498
    4. 'ée' → logprob: -8.81449031829834
    5. ' é' → logprob: -10.31449031829834
    6. 'es' → logprob: -11.68949031829834
    7. 'e' → logprob: -13.93949031829834
    8. '=' → logprob: -14.43949031829834
    9. 'nées' → logprob: -14.56449031829834
    10. '```' → logprob: -14.56449031829834

Token 96: ' respect' (ID: 5618)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34167203307151794
    2. ' a' → logprob: -1.7166720628738403
    3. ',' → logprob: -2.841671943664551
    4. 'x' → logprob: -3.341671943664551
    5. ' à' → logprob: -5.341671943664551
    6. 'n' → logprob: -6.091671943664551
    7. ' x' → logprob: -7.091671943664551
    8. 'v' → logprob: -7.216671943664551
    9. ' ,' → logprob: -7.341671943664551
    10. 'ent' → logprob: -7.466671943664551

Token 97: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.7451195120811462
    2. 'vement' → logprob: -0.9951195120811462
    3. 'v' → logprob: -2.495119571685791
    4. 've' → logprob: -4.120119571685791
    5. 'u' → logprob: -4.245119571685791
    6. 'ement' → logprob: -4.370119571685791
    7. 'vel' → logprob: -5.245119571685791
    8. ' v' → logprob: -5.745119571685791
    9. 'ved' → logprob: -5.745119571685791
    10. 'emment' → logprob: -6.245119571685791

Token 98: ' aux' (ID: 5850)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18266044557094574
    2. 'a' → logprob: -2.8076603412628174
    3. ' a' → logprob: -3.3076603412628174
    4. ' à' → logprob: -3.8076603412628174
    5. 'n' → logprob: -5.0576605796813965
    6. ' ,' → logprob: -5.1826605796813965
    7. 'x' → logprob: -5.5576605796813965
    8. 'u' → logprob: -5.6826605796813965
    9. ' aux' → logprob: -5.6826605796813965
    10. 's' → logprob: -6.0576605796813965

Token 99: ' variables' (ID: 13955)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5627502799034119
    2. 'a' → logprob: -1.0627503395080566
    3. ' variables' → logprob: -3.4377503395080566
    4. ' x' → logprob: -3.5627503395080566
    5. 'x' → logprob: -4.562750339508057
    6. 'val' → logprob: -5.937750339508057
    7. 'de' → logprob: -6.062750339508057
    8. ' nombres' → logprob: -6.437750339508057
    9. ' val' → logprob: -6.687750339508057
    10. ' deux' → logprob: -6.937750339508057

Token 100: ' A' (ID: 355)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4832645654678345
    2. 'a' → logprob: -1.1082645654678345
    3. ' x' → logprob: -3.233264446258545
    4. 'x' → logprob: -4.358264446258545
    5. ' val' → logprob: -8.608264923095703
    6. ' u' → logprob: -9.233264923095703
    7. ' ' → logprob: -9.358264923095703
    8. 'u' → logprob: -9.483264923095703
    9. 'n' → logprob: -9.608264923095703
    10. ' A' → logprob: -9.733264923095703

Token 101: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03483118861913681
    2. ' ,' → logprob: -3.4098312854766846
    3. ' et' → logprob: -7.2848310470581055
    4. ',A' → logprob: -8.284831047058105
    5. ' and' → logprob: -9.284831047058105
    6. 'et' → logprob: -10.034831047058105
    7. 'A' → logprob: -10.659831047058105
    8. ',B' → logprob: -11.034831047058105
    9. ' A' → logprob: -11.784831047058105
    10. ' ' → logprob: -11.784831047058105

Token 102: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.054925840348005295
    2. 'B' → logprob: -2.9299259185791016
    3. ' ' → logprob: -10.554925918579102
    4. ' ' → logprob: -11.179925918579102
    5. ',' → logprob: -13.929925918579102
    6. '  ' → logprob: -14.179925918579102
    7. ' ,' → logprob: -14.804925918579102
    8. 's' → logprob: -15.179925918579102
    9. ' ' → logprob: -15.304925918579102
    10. '```' → logprob: -15.679925918579102

Token 103: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000672043883241713
    2. '
' → logprob: -7.500671863555908
    3. 'a' → logprob: -10.000672340393066
    4. ',' → logprob: -10.500672340393066
    5. ' 
' → logprob: -11.250672340393066
    6. '#' → logprob: -11.250672340393066
    7. ' A' → logprob: -11.750672340393066
    8. '

' → logprob: -13.000672340393066
    9. ',
' → logprob: -13.125672340393066
    10. '```' → logprob: -13.250672340393066

Token 104: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.097437315271236e-05
    2. 'a' → logprob: -10.37505054473877
    3. ' A' → logprob: -11.75005054473877
    4. '#' → logprob: -12.12505054473877
    5. '```' → logprob: -13.12505054473877
    6. 'n' → logprob: -13.75005054473877
    7. 'x' → logprob: -14.25005054473877
    8. '
' → logprob: -14.25005054473877
    9. ' 
' → logprob: -14.62505054473877
    10. '  
' → logprob: -15.25005054473877

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06999000906944275
    2. ' ,' → logprob: -2.6949899196624756
    3. ' ' → logprob: -10.319990158081055
    4. ',B' → logprob: -11.569990158081055
    5. ' =' → logprob: -12.194990158081055
    6. ',A' → logprob: -13.944990158081055
    7. 's' → logprob: -14.069990158081055
    8. 'A' → logprob: -14.319990158081055
    9. ' A' → logprob: -14.444990158081055
    10. 'B' → logprob: -14.569990158081055

Token 106: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.06198393553495407
    2. 'B' → logprob: -2.811983823776245
    3. ' ' → logprob: -11.061984062194824
    4. '=' → logprob: -15.561984062194824
    5. '=B' → logprob: -15.936984062194824
    6. '  ' → logprob: -16.061983108520508
    7. '_B' → logprob: -16.811983108520508
    8. ' ' → logprob: -17.061983108520508
    9. ' =' → logprob: -17.686983108520508
    10. 'space' → logprob: -17.936983108520508

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018160121515393257
    2. '=' → logprob: -4.018160343170166
    3. ',' → logprob: -12.268159866333008
    4. ' =
' → logprob: -12.643159866333008
    5. ' ' → logprob: -13.893159866333008
    6. '=input' → logprob: -15.018159866333008
    7. ' ' → logprob: -15.268159866333008
    8. '<|end|>' → logprob: -15.268159866333008
    9. ')' → logprob: -15.893159866333008
    10. '=int' → logprob: -16.393159866333008

Token 108: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10020667314529419
    2. ' map' → logprob: -2.3502066135406494
    3. 'list' → logprob: -17.35020637512207
    4. '	map' → logprob: -18.22520637512207
    5. 'int' → logprob: -19.10020637512207
    6. '(map' → logprob: -19.85020637512207
    7. 'input' → logprob: -20.72520637512207
    8. ' ' → logprob: -20.72520637512207
    9. ' list' → logprob: -20.85020637512207
    10. '_map' → logprob: -20.97520637512207

Token 109: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.029762065038084984
    2. '(' → logprob: -3.529762029647827
    3. ' (' → logprob: -12.779762268066406
    4. 'int' → logprob: -12.904762268066406
    5. '<int' → logprob: -12.904762268066406
    6. '(
' → logprob: -13.404762268066406
    7. '[int' → logprob: -14.154762268066406
    8. '(

' → logprob: -14.654762268066406
    9. '(lambda' → logprob: -14.779762268066406
    10. '(input' → logprob: -14.904762268066406

Token 110: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005765372421592474
    2. 'input' → logprob: -5.380765438079834
    3. '(' → logprob: -7.755765438079834
    4. ')' → logprob: -8.005764961242676
    5. ' (' → logprob: -8.505764961242676
    6. ',input' → logprob: -8.880764961242676
    7. ' input' → logprob: -10.380764961242676
    8. '[input' → logprob: -12.505764961242676
    9. '=input' → logprob: -12.755764961242676
    10. ' )' → logprob: -13.380764961242676

Token 111: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02324780821800232
    2. ' input' → logprob: -3.773247718811035
    3. '(input' → logprob: -13.148247718811035
    4. ' ' → logprob: -15.773247718811035
    5. '=input' → logprob: -16.14824867248535
    6. '	input' → logprob: -16.77324867248535
    7. '<input' → logprob: -16.77324867248535
    8. ')' → logprob: -17.02324867248535
    9. '[input' → logprob: -17.27324867248535
    10. ',input' → logprob: -18.02324867248535

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.15663906931877136
    2. '()' → logprob: -2.2816390991210938
    3. '())' → logprob: -3.1566390991210938
    4. '("' → logprob: -9.656639099121094
    5. '(' → logprob: -10.281639099121094
    6. '()).' → logprob: -10.281639099121094
    7. '('' → logprob: -10.531639099121094
    8. '()`' → logprob: -10.656639099121094
    9. ' ())' → logprob: -10.906639099121094
    10. ')' → logprob: -10.906639099121094

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.292907877039397e-06
    2. 'strip' → logprob: -12.75000286102295
    3. ' split' → logprob: -14.75000286102295
    4. 'rstrip' → logprob: -19.250003814697266
    5. 'spl' → logprob: -19.750003814697266
    6. '(split' → logprob: -19.875003814697266
    7. ')' → logprob: -22.500003814697266
    8. 's' → logprob: -24.125003814697266
    9. 'plit' → logprob: -24.125003814697266
    10. '.split' → logprob: -24.250003814697266

Token 114: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00483617652207613
    2. '()))' → logprob: -6.004836082458496
    3. '()' → logprob: -6.129836082458496
    4. ')' → logprob: -8.879836082458496
    5. '(' → logprob: -11.129836082458496
    6. '))' → logprob: -11.254836082458496
    7. ' ())' → logprob: -11.629836082458496
    8. '())
' → logprob: -12.879836082458496
    9. '('' → logprob: -14.254836082458496
    10. '());' → logprob: -15.254836082458496

Token 115: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0946215391159058
    2. '
' → logprob: -1.0946215391159058
    3. 'if' → logprob: -1.5946215391159058
    4. '  
' → logprob: -3.4696216583251953
    5. ':' → logprob: -4.094621658325195
    6. ' if' → logprob: -4.094621658325195
    7. '<|end|>' → logprob: -4.344621658325195
    8. '+' → logprob: -4.469621658325195
    9. ' 
' → logprob: -4.594621658325195
    10. ')' → logprob: -4.844621658325195

Token 116: ' Dé' (ID: 27247)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08796398341655731
    2. 'if' → logprob: -3.0879640579223633
    3. '#' → logprob: -3.4629640579223633
    4. 'sum' → logprob: -6.212964057922363
    5. 'result' → logprob: -6.462964057922363
    6. ' print' → logprob: -6.962964057922363
    7. ' if' → logprob: -6.962964057922363
    8. 's' → logprob: -7.087964057922363
    9. 'C' → logprob: -7.712964057922363
    10. ' somme' → logprob: -9.087964057922363

Token 117: 'but' (ID: 8293)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.5643323063850403
    2. 'f' → logprob: -1.4393322467803955
    3. '#' → logprob: -2.4393322467803955
    4. 'termination' → logprob: -3.5643322467803955
    5. 'if' → logprob: -4.064332485198975
    6. 'fi' → logprob: -4.439332485198975
    7. 'term' → logprob: -4.439332485198975
    8. 'termin' → logprob: -4.939332485198975
    9. 'cal' → logprob: -4.939332485198975
    10. 'claration' → logprob: -4.939332485198975

Token 118: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14726905524730682
    2. ' if' → logprob: -2.2722690105438232
    3. '#' → logprob: -3.6472690105438232
    4. ':' → logprob: -5.897269248962402
    5. '
' → logprob: -7.022269248962402
    6. '```' → logprob: -7.147269248962402
    7. 'for' → logprob: -7.647269248962402
    8. ',' → logprob: -7.897269248962402
    9. '<|end|>' → logprob: -7.897269248962402
    10. 'x' → logprob: -8.272269248962402

Token 119: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5272135138511658
    2. ' l' → logprob: -1.5272135734558105
    3. ' la' → logprob: -1.9022135734558105
    4. 'if' → logprob: -3.7772135734558105
    5. ' for' → logprob: -4.6522135734558105
    6. ' ' → logprob: -4.9022135734558105
    7. 'l' → logprob: -6.7772135734558105
    8. ' the' → logprob: -7.5272135734558105
    9. ' ' → logprob: -8.027213096618652
    10. 'for' → logprob: -8.277213096618652

Token 120: ' structure' (ID: 8866)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.752579391002655
    2. '#' → logprob: -1.6275794506072998
    3. ' boucle' → logprob: -1.7525794506072998
    4. 'condition' → logprob: -2.6275794506073
    5. ' comparaison' → logprob: -4.127579212188721
    6. ' #' → logprob: -4.127579212188721
    7. ' somme' → logprob: -4.752579212188721
    8. ' structure' → logprob: -4.877579212188721
    9. ' if' → logprob: -5.127579212188721
    10. ' programmation' → logprob: -5.752579212188721

Token 121: ' condition' (ID: 7060)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009143565781414509
    2. 'if' → logprob: -4.759143352508545
    3. ' ' → logprob: -8.259143829345703
    4. ':' → logprob: -9.634143829345703
    5. ' ' → logprob: -9.759143829345703
    6. ' i' → logprob: -10.384143829345703
    7. '```' → logprob: -10.884143829345703
    8. 'If' → logprob: -11.134143829345703
    9. ' ```' → logprob: -11.384143829345703
    10. ' If' → logprob: -11.509143829345703

Token 122: 'nelle' (ID: 30805)
  Prédit: 'nelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nelle' → logprob: -0.012278526090085506
    2. 'if' → logprob: -5.1372785568237305
    3. ' if' → logprob: -5.2622785568237305
    4. 'nel' → logprob: -7.7622785568237305
    5. 'al' → logprob: -8.38727855682373
    6. 'nelles' → logprob: -8.76227855682373
    7. 'elle' → logprob: -9.13727855682373
    8. 'ale' → logprob: -9.38727855682373
    9. 'el' → logprob: -10.38727855682373
    10. '```' → logprob: -11.01227855682373

Token 123: ' '' (ID: 461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3916257619857788
    2. 'if' → logprob: -1.1416257619857788
    3. '
' → logprob: -6.516625881195068
    4. '<|end|>' → logprob: -6.891625881195068
    5. ' 
' → logprob: -7.266625881195068
    6. ':' → logprob: -7.516625881195068
    7. 'If' → logprob: -7.891625881195068
    8. '  
' → logprob: -8.89162540435791
    9. '```' → logprob: -8.89162540435791
    10. ':
' → logprob: -9.26662540435791

Token 124: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011050770990550518
    2. ' if' → logprob: -4.511050701141357
    3. 'i' → logprob: -13.511051177978516
    4. '```' → logprob: -13.636051177978516
    5. 'If' → logprob: -16.136051177978516
    6. ' i' → logprob: -16.511051177978516
    7. '`' → logprob: -16.511051177978516
    8. '``' → logprob: -17.261051177978516
    9. 'ifs' → logprob: -17.386051177978516
    10. ' ' → logprob: -17.636051177978516

Token 125: ''
' (ID: 2207)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06633935123682022
    2. ' ' → logprob: -3.8163392543792725
    3. 'A' → logprob: -4.316339492797852
    4. ':' → logprob: -4.441339492797852
    5. ' :' → logprob: -4.441339492797852
    6. ' if' → logprob: -6.191339492797852
    7. ' ' → logprob: -6.566339492797852
    8. ' a' → logprob: -7.816339492797852
    9. ' :
' → logprob: -7.941339492797852
    10. 'if' → logprob: -8.566339492797852

Token 126: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04094700887799263
    2. ' if' → logprob: -3.2909469604492188
    3. 'i' → logprob: -5.915946960449219
    4. ' ' → logprob: -9.915946960449219
    5. ' 
' → logprob: -10.165946960449219
    6. 'If' → logprob: -10.665946960449219
    7. ' i' → logprob: -10.665946960449219
    8. 'A' → logprob: -11.040946960449219
    9. '```' → logprob: -11.290946960449219
    10. 'I' → logprob: -11.790946960449219

Token 127: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038043100386857986
    2. ' if' → logprob: -3.2880430221557617
    3. 'If' → logprob: -13.913043022155762
    4. '
' → logprob: -15.163043022155762
    5. 'A' → logprob: -15.913043022155762
    6. 'ifs' → logprob: -16.163043975830078
    7. ' 
' → logprob: -16.288043975830078
    8. ' If' → logprob: -16.288043975830078
    9. 'i' → logprob: -16.913043975830078
    10. '```' → logprob: -17.413043975830078

Token 128: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.2861563563346863
    2. 'if' → logprob: -2.411156415939331
    3. ' teste' → logprob: -3.161156415939331
    4. 'compare' → logprob: -3.286156415939331
    5. ' compare' → logprob: -3.536156415939331
    6. 'v' → logprob: -4.161156177520752
    7. ' if' → logprob: -4.286156177520752
    8. ' souhaite' → logprob: -4.786156177520752
    9. ' veut' → logprob: -6.036156177520752
    10. 'ver' → logprob: -6.661156177520752

Token 129: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -1.664371848164592e-05
    2. 'if' → logprob: -11.750016212463379
    3. 'ife' → logprob: -12.625016212463379
    4. '```' → logprob: -13.375016212463379
    5. '#' → logprob: -13.750016212463379
    6. 'i' → logprob: -14.500016212463379
    7. 'ifié' → logprob: -15.000016212463379
    8. 'ify' → logprob: -15.375016212463379
    9. 'ifiez' → logprob: -15.500016212463379
    10. 'f' → logprob: -15.750016212463379

Token 130: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.12611046433448792
    2. ' if' → logprob: -2.751110553741455
    3. 'si' → logprob: -3.376110553741455
    4. ' ' → logprob: -4.251110553741455
    5. ' ' → logprob: -5.501110553741455
    6. 'if' → logprob: -7.126110553741455
    7. '<|end|>' → logprob: -7.876110553741455
    8. ' whether' → logprob: -9.126110076904297
    9. '  ' → logprob: -9.501110076904297
    10. 's' → logprob: -9.626110076904297

Token 131: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.029835760593414307
    2. 'A' → logprob: -3.5298357009887695
    3. ' B' → logprob: -9.90483570098877
    4. ' ' → logprob: -10.77983570098877
    5. ' ' → logprob: -11.77983570098877
    6. 'B' → logprob: -12.40483570098877
    7. '	A' → logprob: -13.90483570098877
    8. '  ' → logprob: -15.02983570098877
    9. ' (' → logprob: -15.52983570098877
    10. '(A' → logprob: -15.65483570098877

Token 132: ' valeur' (ID: 41664)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.25070345401763916
    2. 'A' → logprob: -2.0007033348083496
    3. ' B' → logprob: -2.6257033348083496
    4. 'B' → logprob: -4.37570333480835
    5. ' valeur' → logprob: -6.75070333480835
    6. ' ' → logprob: -9.000703811645508
    7. 's' → logprob: -10.125703811645508
    8. ' différence' → logprob: -10.375703811645508
    9. ' somme' → logprob: -10.875703811645508
    10. 'a' → logprob: -11.000703811645508

Token 133: ' de' (ID: 334)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2589074373245239
    2. 'A' → logprob: -1.508907437324524
    3. ' de' → logprob: -5.008907318115234
    4. 's' → logprob: -10.008907318115234
    5. 'de' → logprob: -10.008907318115234
    6. ' ' → logprob: -10.133907318115234
    7. ' B' → logprob: -10.258907318115234
    8. ' d' → logprob: -10.383907318115234
    9. 'B' → logprob: -11.258907318115234
    10. ' suivante' → logprob: -11.383907318115234

Token 134: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0381094291806221
    2. 'A' → logprob: -3.288109540939331
    3. ' B' → logprob: -10.16310977935791
    4. ' ' → logprob: -10.78810977935791
    5. 'B' → logprob: -12.66310977935791
    6. ' ' → logprob: -13.03810977935791
    7. '	A' → logprob: -13.03810977935791
    8. '  ' → logprob: -15.16310977935791
    9. ''A' → logprob: -15.41310977935791
    10. '(A' → logprob: -16.038108825683594

Token 135: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20092502236366272
    2. '>' → logprob: -2.20092511177063
    3. ' est' → logprob: -3.45092511177063
    4. ' <' → logprob: -3.45092511177063
    5. 'est' → logprob: -5.325924873352051
    6. '<' → logprob: -6.575924873352051
    7. '%' → logprob: -8.07592487335205
    8. ' ==' → logprob: -8.07592487335205
    9. ' is' → logprob: -8.45092487335205
    10. ' ' → logprob: -8.57592487335205

Token 136: ' supérieure' (ID: 106336)
  Prédit: ' supérieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieure' → logprob: -0.17871356010437012
    2. 'strict' → logprob: -3.05371356010437
    3. ' strict' → logprob: -3.30371356010437
    4. ' plus' → logprob: -3.30371356010437
    5. ' inf' → logprob: -4.803713798522949
    6. ' strictly' → logprob: -5.053713798522949
    7. 'sup' → logprob: -5.053713798522949
    8. 'inf' → logprob: -5.178713798522949
    9. '>' → logprob: -5.303713798522949
    10. 'plus' → logprob: -5.928713798522949

Token 137: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.097028449177742
    2. 'à' → logprob: -2.7220284938812256
    3. '<|end|>' → logprob: -4.3470282554626465
    4. ' to' → logprob: -5.2220282554626465
    5. ' ' → logprob: -5.8470282554626465
    6. 'to' → logprob: -6.9720282554626465
    7. 'a' → logprob: -7.2220282554626465
    8. ' a' → logprob: -7.4720282554626465
    9. ')' → logprob: -7.5970282554626465
    10. ',' → logprob: -7.7220282554626465

Token 138: ' ég' (ID: 33150)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6568741798400879
    2. 'strict' → logprob: -1.156874179840088
    3. '>' → logprob: -2.406874179840088
    4. ' à' → logprob: -3.031874179840088
    5. ' ég' → logprob: -4.406874179840088
    6. 'inf' → logprob: -5.406874179840088
    7. '=' → logprob: -5.781874179840088
    8. '#' → logprob: -6.406874179840088
    9. ' strict' → logprob: -6.656874179840088
    10. '<' → logprob: -6.656874179840088

Token 139: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.005367395002394915
    2. 'al' → logprob: -5.255367279052734
    3. 'a' → logprob: -9.880367279052734
    4. '```' → logprob: -10.755367279052734
    5. 'uale' → logprob: -11.255367279052734
    6. 'aule' → logprob: -12.005367279052734
    7. '>' → logprob: -12.255367279052734
    8. 'але' → logprob: -12.630367279052734
    9. 'ales' → logprob: -12.880367279052734
    10. 'aux' → logprob: -12.880367279052734

Token 140: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.022838450968265533
    2. 'à' → logprob: -4.272838592529297
    3. ' ' → logprob: -5.147838592529297
    4. ' ' → logprob: -7.147838592529297
    5. '<|end|>' → logprob: -7.397838592529297
    6. '  ' → logprob: -7.522838592529297
    7. ''à' → logprob: -8.147838592529297
    8. '’à' → logprob: -9.022838592529297
    9. 'A' → logprob: -9.022838592529297
    10. ' a' → logprob: -9.022838592529297

Token 141: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.033686961978673935
    2. ' B' → logprob: -3.408686876296997
    3. ' ' → logprob: -10.783686637878418
    4. '10' → logprob: -12.033686637878418
    5. ' à' → logprob: -12.783686637878418
    6. '20' → logprob: -13.283686637878418
    7. '0' → logprob: -13.283686637878418
    8. ' ' → logprob: -13.658686637878418
    9. '	B' → logprob: -13.783686637878418
    10. '>B' → logprob: -14.408686637878418

Token 142: '13' (ID: 1311)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.018170781433582306
    2. ' B' → logprob: -4.0181708335876465
    3. ' ' → logprob: -12.018170356750488
    4. '10' → logprob: -12.643170356750488
    5. '0' → logprob: -12.893170356750488
    6. ' à' → logprob: -13.893170356750488
    7. '	B' → logprob: -13.893170356750488
    8. '100' → logprob: -14.143170356750488
    9. 'la' → logprob: -14.268170356750488
    10. '20' → logprob: -14.393170356750488

Token 143: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19445902109146118
    2. 'if' → logprob: -1.9444589614868164
    3. ':
' → logprob: -3.6944589614868164
    4. ' if' → logprob: -5.444458961486816
    5. '
' → logprob: -6.569458961486816
    6. ' :' → logprob: -6.694458961486816
    7. '<|end|>' → logprob: -7.319458961486816
    8. ' :
' → logprob: -7.944458961486816
    9. '  
' → logprob: -8.694458961486816
    10. '```' → logprob: -8.944458961486816

Token 144: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14388948678970337
    2. '
' → logprob: -2.1438894271850586
    3. ' if' → logprob: -4.643889427185059
    4. ':
' → logprob: -6.143889427185059
    5. ':' → logprob: -6.768889427185059
    6. ' 
' → logprob: -7.018889427185059
    7. '\n' → logprob: -7.268889427185059
    8. '  
' → logprob: -7.268889427185059
    9. ';if' → logprob: -7.643889427185059
    10. '<|end|>' → logprob: -7.893889427185059

Token 145: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.03864770010113716
    2. ' ' → logprob: -3.2886476516723633
    3. 'A' → logprob: -7.663647651672363
    4. ' ' → logprob: -8.913647651672363
    5. ' B' → logprob: -13.538647651672363
    6. '  ' → logprob: -14.663647651672363
    7. '	A' → logprob: -16.41364860534668
    8. ' ' → logprob: -17.16364860534668
    9. '_A' → logprob: -17.28864860534668
    10. ' А' → logprob: -17.28864860534668

Token 146: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.012727898545563221
    2. '>=' → logprob: -4.387727737426758
    3. ' ' → logprob: -9.012727737426758
    4. ' >' → logprob: -9.762727737426758
    5. ' <' → logprob: -10.512727737426758
    6. '>' → logprob: -12.137727737426758
    7. ' ' → logprob: -13.012727737426758
    8. '<' → logprob: -14.262727737426758
    9. ')>=' → logprob: -14.387727737426758
    10. '  ' → logprob: -14.512727737426758

Token 147: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.2014191895723343
    2. ' ' → logprob: -1.7014192342758179
    3. '1' → logprob: -12.57641887664795
    4. ' ' → logprob: -13.57641887664795
    5. '3' → logprob: -15.07641887664795
    6. '14' → logprob: -15.32641887664795
    7. '```' → logprob: -16.138919830322266
    8. '12' → logprob: -16.638919830322266
    9. '10' → logprob: -17.013919830322266
    10. '0' → logprob: -17.076419830322266

Token 148: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '1' → logprob: -18.75
    4. '3' → logprob: -19.125
    5. '14' → logprob: -19.75
    6. '130' → logprob: -20.875
    7. '15' → logprob: -21.125
    8. '12' → logprob: -21.875
    9. '133' → logprob: -21.875
    10. '10' → logprob: -22.0

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013607077300548553
    2. ':
' → logprob: -4.513607025146484
    3. ' and' → logprob: -6.263607025146484
    4. ' :' → logprob: -7.513607025146484
    5. 'and' → logprob: -9.638607025146484
    6. ' or' → logprob: -11.138607025146484
    7. ' :
' → logprob: -11.138607025146484
    8. ':

' → logprob: -12.513607025146484
    9. ':
' → logprob: -12.763607025146484
    10. ' ' → logprob: -13.763607025146484

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024777427315711975
    2. 'print' → logprob: -4.899777412414551
    3. ' print' → logprob: -5.024777412414551
    4. ':' → logprob: -5.149777412414551
    5. '
' → logprob: -6.274777412414551
    6. '   ' → logprob: -7.524777412414551
    7. '    
' → logprob: -7.774777412414551
    8. '	print' → logprob: -8.02477741241455
    9. ' ' → logprob: -8.02477741241455
    10. ':
' → logprob: -8.27477741241455

Token 151: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1464920938014984
    2. '   ' → logprob: -2.5214920043945312
    3. ' print' → logprob: -2.8964920043945312
    4. 'if' → logprob: -8.396492004394531
    5. ' ' → logprob: -8.521492004394531
    6. ' if' → logprob: -9.271492004394531
    7. 'B' → logprob: -10.271492004394531
    8. 'A' → logprob: -10.521492004394531
    9. '#' (adapté à ' #') → logprob: -10.521492004394531
    10. '  ' → logprob: -10.896492004394531

Token 152: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25450649857521057
    2. ' print' → logprob: -1.5045064687728882
    3. '   ' → logprob: -6.754506587982178
    4. ' if' → logprob: -7.629506587982178
    5. 'if' → logprob: -7.754506587982178
    6. 'B' → logprob: -9.62950611114502
    7. ' ' → logprob: -9.62950611114502
    8. '#' → logprob: -9.87950611114502
    9. 'A' → logprob: -9.87950611114502
    10. 'pr' → logprob: -10.12950611114502

Token 153: ' la' (ID: 557)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.0855838879942894
    2. 'B' → logprob: -3.3355839252471924
    3. ' print' → logprob: -3.7105839252471924
    4. '   ' → logprob: -4.960583686828613
    5. 'print' → logprob: -5.085583686828613
    6. ' ' → logprob: -5.585583686828613
    7. ' A' → logprob: -6.210583686828613
    8. '    ' → logprob: -6.335583686828613
    9. ' ' → logprob: -7.960583686828613
    10. '  ' → logprob: -8.085583686828613

Token 154: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15580271184444427
    2. ' print' → logprob: -2.1558027267456055
    3. '   ' → logprob: -4.0308027267456055
    4. ' ' → logprob: -6.1558027267456055
    5. ' B' → logprob: -6.1558027267456055
    6. 'B' → logprob: -6.2808027267456055
    7. ' valeur' → logprob: -6.6558027267456055
    8. ':' → logprob: -7.5308027267456055
    9. '#' → logprob: -8.280802726745605
    10. 'A' → logprob: -8.280802726745605

Token 155: ' précédente' (ID: 177319)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15585729479789734
    2. '   ' → logprob: -2.4058573246002197
    3. ' :' → logprob: -3.0308573246002197
    4. ' print' → logprob: -5.905857086181641
    5. ' est' → logprob: -7.280857086181641
    6. ':
' → logprob: -7.405857086181641
    7. ' ' → logprob: -8.15585708618164
    8. ' and' → logprob: -8.40585708618164
    9. '    ' → logprob: -8.40585708618164
    10. 'print' → logprob: -8.53085708618164

Token 156: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04785943776369095
    2. ' :' → logprob: -3.9228594303131104
    3. ':
' → logprob: -4.9228596687316895
    4. ' and' → logprob: -5.2978596687316895
    5. ' print' → logprob: -5.2978596687316895
    6. '   ' → logprob: -5.4228596687316895
    7. 'print' → logprob: -5.5478596687316895
    8. 'and' → logprob: -7.7978596687316895
    9. ' or' → logprob: -8.172859191894531
    10. ' :
' → logprob: -8.422859191894531

Token 157: ' vraie' (ID: 105841)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.7529730796813965
    2. ' vraie' → logprob: -1.5029730796813965
    3. ' true' → logprob: -1.8779730796813965
    4. ' vrai' → logprob: -2.5029730796813965
    5. 'True' → logprob: -3.6279730796813965
    6. 'v' → logprob: -4.1279730796813965
    7. '   ' → logprob: -4.5029730796813965
    8. ' ' → logprob: -5.3779730796813965
    9. ' vra' → logprob: -5.7529730796813965
    10. 'true' → logprob: -6.0029730796813965

Token 158: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5114564895629883
    2. '   ' → logprob: -1.1364564895629883
    3. ':
' → logprob: -3.5114564895629883
    4. ' :' → logprob: -4.011456489562988
    5. ' and' → logprob: -4.261456489562988
    6. ' print' → logprob: -4.886456489562988
    7. 'print' → logprob: -6.011456489562988
    8. ',' → logprob: -6.136456489562988
    9. ' :
' → logprob: -6.136456489562988
    10. '       ' → logprob: -7.636456489562988

Token 159: 'A' (ID: 32)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5439489483833313
    2. '   ' → logprob: -1.5439488887786865
    3. 'print' → logprob: -1.6689488887786865
    4. '    ' → logprob: -5.793949127197266
    5. ' B' → logprob: -6.043949127197266
    6. ',' → logprob: -6.418949127197266
    7. ' ' → logprob: -6.543949127197266
    8. ')' → logprob: -6.918949127197266
    9. ' ' → logprob: -6.918949127197266
    10. ' if' → logprob: -7.293949127197266

Token 160: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.09991771727800369
    2. '>=' → logprob: -2.8499176502227783
    3. ' >' → logprob: -3.7249176502227783
    4. '>' → logprob: -5.974917888641357
    5. ' <=' → logprob: -5.974917888641357
    6. '%' → logprob: -6.224917888641357
    7. ' ' → logprob: -6.474917888641357
    8. ' %' → logprob: -6.599917888641357
    9. ' <' → logprob: -6.974917888641357
    10. ' ==' → logprob: -7.849917888641357

Token 161: ' au' (ID: 2791)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.7951579689979553
    2. ' supérieur' → logprob: -1.2951579093933105
    3. ' supérieure' → logprob: -1.9201579093933105
    4. ' sup' → logprob: -3.6701579093933105
    5. 'super' → logprob: -3.9201579093933105
    6. ' au' → logprob: -4.0451579093933105
    7. 'au' → logprob: -4.4201579093933105
    8. 'plus' → logprob: -4.7951579093933105
    9. ' ' → logprob: -4.9201579093933105
    10. ' plus' → logprob: -5.1701579093933105

Token 162: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.002849102020263672
    2. ' moins' → logprob: -6.752849102020264
    3. 'minimum' → logprob: -7.377849102020264
    4. 'mo' → logprob: -7.627849102020264
    5. 'menos' → logprob: -8.877849578857422
    6. 'min' → logprob: -9.002849578857422
    7. '-' → logprob: -9.252849578857422
    8. '   ' → logprob: -9.752849578857422
    9. '-mo' → logprob: -10.627849578857422
    10. 'm' → logprob: -10.752849578857422

Token 163: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.18045908212661743
    2. ' ' → logprob: -1.8054590225219727
    3. 'tre' → logprob: -7.930459022521973
    4. '14' → logprob: -8.930459022521973
    5. ' tre' → logprob: -9.055459022521973
    6. 'de' → logprob: -10.680459022521973
    7. ' de' → logprob: -11.555459022521973
    8. '1' → logprob: -11.680459022521973
    9. 'dou' → logprob: -11.805459022521973
    10. 'à' → logprob: -12.055459022521973

Token 164: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.0032069424632936716
    2. ' ' → logprob: -5.753206729888916
    3. 'tre' → logprob: -11.253207206726074
    4. '14' → logprob: -11.503207206726074
    5. '1' → logprob: -12.753207206726074
    6. ' tre' → logprob: -14.628207206726074
    7. '3' → logprob: -15.003207206726074
    8. '18' → logprob: -15.003207206726074
    9. '12' → logprob: -15.128207206726074
    10. 'de' → logprob: -15.253207206726074

Token 165: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5532940030097961
    2. '   ' → logprob: -1.4282939434051514
    3. ' et' → logprob: -3.1782939434051514
    4. ' ),' → logprob: -3.4282939434051514
    5. '):' → logprob: -3.4282939434051514
    6. ':' → logprob: -3.5532939434051514
    7. ' and' → logprob: -4.1782941818237305
    8. ')' → logprob: -4.5532941818237305
    9. ',' → logprob: -4.9282941818237305
    10. ' or' → logprob: -6.0532941818237305

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3576919436454773
    2. ':' → logprob: -1.482692003250122
    3. ' print' → logprob: -3.732692003250122
    4. ' :' → logprob: -3.857692003250122
    5. 'print' → logprob: -4.107691764831543
    6. ':
' → logprob: -4.982691764831543
    7. ' :
' → logprob: -6.482691764831543
    8. ' and' → logprob: -6.857691764831543
    9. '    ' → logprob: -7.482691764831543
    10. '       ' → logprob: -7.482691764831543

Token 167: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3508998155593872
    2. 'print' → logprob: -1.3508998155593872
    3. '   ' → logprob: -3.3508996963500977
    4. ' if' → logprob: -6.850899696350098
    5. 'if' → logprob: -8.350899696350098
    6. ' ' → logprob: -8.600899696350098
    7. '    ' → logprob: -9.225899696350098
    8. ' B' → logprob: -9.725899696350098
    9. 'A' → logprob: -9.975899696350098
    10. 'B' → logprob: -10.225899696350098

Token 168: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0601884201169014
    2. ' print' → logprob: -2.9351885318756104
    3. '   ' → logprob: -5.810188293457031
    4. 'if' → logprob: -6.685188293457031
    5. ' if' → logprob: -7.435188293457031
    6. 'C' → logprob: -9.185188293457031
    7. 'result' → logprob: -9.685188293457031
    8. 'prix' → logprob: -9.685188293457031
    9. ' ' → logprob: -9.935188293457031
    10. 'B' → logprob: -9.935188293457031

Token 169: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.33508360385894775
    2. 'print' → logprob: -1.3350836038589478
    3. '   ' → logprob: -4.085083484649658
    4. ' if' → logprob: -5.835083484649658
    5. 'if' → logprob: -7.460083484649658
    6. 'pr' → logprob: -7.960083484649658
    7. ' ' → logprob: -8.085083961486816
    8. '    ' → logprob: -9.085083961486816
    9. ':' → logprob: -9.960083961486816
    10. ' prin' → logprob: -9.960083961486816

Token 170: ' simplement' (ID: 45065)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03542036563158035
    2. '(' → logprob: -3.4104204177856445
    3. '(A' → logprob: -7.2854204177856445
    4. '(B' → logprob: -7.7854204177856445
    5. '('' → logprob: -8.160420417785645
    6. '"B' → logprob: -8.785420417785645
    7. '"' → logprob: -9.410420417785645
    8. '"A' → logprob: -10.285420417785645
    9. 'A' → logprob: -10.535420417785645
    10. '()' → logprob: -10.535420417785645

Token 171: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.9653325080871582
    2. 'A' → logprob: -1.0903325080871582
    3. '(A' → logprob: -1.8403325080871582
    4. '"' → logprob: -3.590332508087158
    5. '(' → logprob: -3.590332508087158
    6. '"A' → logprob: -3.965332508087158
    7. 'B' → logprob: -4.090332508087158
    8. '(B' → logprob: -4.090332508087158
    9. '"B' → logprob: -4.840332508087158
    10. 'print' → logprob: -5.965332508087158

Token 172: ' valeur' (ID: 41664)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.32239001989364624
    2. 'A' → logprob: -1.947390079498291
    3. ' B' → logprob: -3.072390079498291
    4. 'print' → logprob: -3.697390079498291
    5. 'val' → logprob: -4.197390079498291
    6. ' valeur' → logprob: -4.447390079498291
    7. ' A' → logprob: -4.572390079498291
    8. '"' → logprob: -5.822390079498291
    9. 'value' → logprob: -5.822390079498291
    10. 's' → logprob: -6.322390079498291

Token 173: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06133454665541649
    2. 'de' → logprob: -3.4363346099853516
    3. 'A' → logprob: -3.9363346099853516
    4. ' A' → logprob: -5.686334609985352
    5. 'B' → logprob: -6.311334609985352
    6. ' B' → logprob: -7.311334609985352
    7. ' ' → logprob: -7.436334609985352
    8. '   ' → logprob: -8.186334609985352
    9. ' d' → logprob: -8.186334609985352
    10. 'print' → logprob: -8.436334609985352

Token 174: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8210888504981995
    2. 'B' → logprob: -0.8210888504981995
    3. ' B' → logprob: -2.6960887908935547
    4. ' A' → logprob: -2.9460887908935547
    5. 'print' → logprob: -11.196088790893555
    6. ' ' → logprob: -11.446088790893555
    7. '13' → logprob: -12.071088790893555
    8. ''A' → logprob: -12.196088790893555
    9. '12' → logprob: -12.571088790893555
    10. '"' → logprob: -12.758588790893555

Token 175: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32493579387664795
    2. 'print' → logprob: -1.699935793876648
    3. '
' → logprob: -2.9499359130859375
    4. ' print' → logprob: -3.1999359130859375
    5. '    
' → logprob: -6.6999359130859375
    6. '```' → logprob: -9.324935913085938
    7. ',' → logprob: -9.949935913085938
    8. '   
' → logprob: -10.199935913085938
    9. '
' → logprob: -10.324935913085938
    10. '	print' → logprob: -10.324935913085938

Token 176: ' utilisant' (ID: 92474)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03464685380458832
    2. ' print' → logprob: -3.40964674949646
    3. ' ' → logprob: -7.909646987915039
    4. '   ' → logprob: -8.409646987915039
    5. 'pr' → logprob: -9.284646987915039
    6. '```' → logprob: -9.909646987915039
    7. 'prin' → logprob: -10.159646987915039
    8. 'plus' → logprob: -11.034646987915039
    9. 'maj' → logprob: -11.159646987915039
    10. '
' → logprob: -11.284646987915039

Token 177: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.47407785058021545
    2. 'print' → logprob: -0.9740778207778931
    3. '```' → logprob: -15.599078178405762
    4. '   ' → logprob: -15.849078178405762
    5. ' la' → logprob: -15.849078178405762
    6. '	print' → logprob: -15.974078178405762
    7. '(print' → logprob: -16.224077224731445
    8. 'prin' → logprob: -16.599077224731445
    9. ' ' → logprob: -16.724077224731445
    10. ' ' → logprob: -17.599077224731445

Token 178: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0624699629843235
    2. '(B' → logprob: -3.187469959259033
    3. '   ' → logprob: -4.187469959259033
    4. '()' → logprob: -5.687469959259033
    5. '(
' → logprob: -7.562469959259033
    6. '()
' → logprob: -9.562470436096191
    7. '(print' → logprob: -10.562470436096191
    8. ' (' → logprob: -10.562470436096191
    9. '("' → logprob: -11.062470436096191
    10. '(b' → logprob: -11.187470436096191

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0728457048535347
    2. '
' → logprob: -2.822845697402954
    3. '    
' → logprob: -4.822845935821533
    4. 'print' → logprob: -6.572845935821533
    5. '\n' → logprob: -8.072845458984375
    6. '```' → logprob: -8.072845458984375
    7. ':' → logprob: -8.572845458984375
    8. '       ' → logprob: -8.572845458984375
    9. ' print' → logprob: -9.572845458984375
    10. '  
' → logprob: -9.697845458984375

Token 180: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5862460136413574
    2. 'print' (adapté à ' print') → logprob: -1.3362460136413574
    3. ' print' → logprob: -1.7112460136413574
    4. '```' → logprob: -10.211246490478516
    5. '       ' → logprob: -10.461246490478516
    6. '
' → logprob: -11.211246490478516
    7. '	print' → logprob: -11.336246490478516
    8. '    
' → logprob: -11.961246490478516
    9. '   ' → logprob: -11.961246490478516
    10. '    ' → logprob: -13.086246490478516

Token 181: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.03804412856698036
    2. '(' → logprob: -3.2880442142486572
    3. '()' → logprob: -13.538043975830078
    4. '(A' → logprob: -14.413043975830078
    5. '(b' → logprob: -15.538043975830078
    6. '(
' → logprob: -15.788043975830078
    7. '((' → logprob: -15.788043975830078
    8. '("' → logprob: -15.913043975830078
    9. ' (' → logprob: -16.538043975830078
    10. '('' → logprob: -17.038043975830078

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ' )' → logprob: -11.625009536743164
    3. ')
' → logprob: -15.000009536743164
    4. '))' → logprob: -17.125009536743164
    5. '')' → logprob: -17.750009536743164
    6. '   ' → logprob: -17.875009536743164
    7. ')#' → logprob: -18.125009536743164
    8. ')`' → logprob: -18.625009536743164
    9. '())' → logprob: -18.875009536743164
    10. '")' → logprob: -18.875009536743164

Token 183: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0628720372915268
    2. 'elif' → logprob: -2.8128719329833984
    3. ' else' → logprob: -7.062871932983398
    4. ' elif' → logprob: -11.312871932983398
    5. '<|end|>' → logprob: -11.437871932983398
    6. 'el' → logprob: -12.062871932983398
    7. '```' → logprob: -12.687871932983398
    8. 'elseif' → logprob: -13.062871932983398
    9. 'e' → logprob: -13.312871932983398
    10. '    
' → logprob: -13.437871932983398

Token 184: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.38854995369911194
    2. 'elif' → logprob: -1.1385499238967896
    3. ' else' → logprob: -6.5135498046875
    4. ' elif' → logprob: -8.7635498046875
    5. 'el' → logprob: -10.2635498046875
    6. 'elseif' → logprob: -13.8885498046875
    7. 'els' → logprob: -14.1385498046875
    8. 'elser' → logprob: -14.3885498046875
    9. 'elsif' → logprob: -14.8885498046875
    10. 'eli' → logprob: -15.0135498046875

Token 185: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.08851992338895798
    2. 'A' → logprob: -2.588519811630249
    3. ' B' → logprob: -5.713520050048828
    4. ' ' → logprob: -6.088520050048828
    5. ' not' → logprob: -6.338520050048828
    6. ' else' → logprob: -6.838520050048828
    7. 'else' → logprob: -7.713520050048828
    8. 'B' → logprob: -8.463520050048828
    9. ' elif' → logprob: -8.713520050048828
    10. 'elif' → logprob: -9.213520050048828

Token 186: ' première' (ID: 23423)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0270256996154785
    2. 'elif' → logprob: -1.1520256996154785
    3. 'A' → logprob: -2.1520256996154785
    4. ' A' → logprob: -2.4020256996154785
    5. ' condition' → logprob: -3.0270256996154785
    6. ' else' → logprob: -3.4020256996154785
    7. ' elif' → logprob: -4.4020256996154785
    8. 'condition' → logprob: -5.1520256996154785
    9. ' valeur' → logprob: -5.1520256996154785
    10. ' B' → logprob: -5.7770256996154785

Token 187: ' condition' (ID: 7060)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.555263102054596
    2. ' condition' → logprob: -1.3052630424499512
    3. 'else' → logprob: -2.555263042449951
    4. ' elif' → logprob: -3.055263042449951
    5. 'condition' → logprob: -4.555263042449951
    6. ' else' → logprob: -4.680263042449951
    7. 'if' → logprob: -5.930263042449951
    8. ':' → logprob: -6.680263042449951
    9. 'e' → logprob: -6.930263042449951
    10. ' partie' → logprob: -7.055263042449951

Token 188: ' (' (ID: 350)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.540542721748352
    2. 'elif' → logprob: -1.165542721748352
    3. ':' → logprob: -3.0405426025390625
    4. ' else' → logprob: -3.0405426025390625
    5. ' elif' → logprob: -4.6655426025390625
    6. 'el' → logprob: -9.040542602539062
    7. ' :' → logprob: -9.040542602539062
    8. ' est' → logprob: -9.040542602539062
    9. 'e' → logprob: -9.415542602539062
    10. 'est' → logprob: -10.040542602539062

Token 189: 'A' (ID: 32)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7851202487945557
    2. 'A' → logprob: -1.2851202487945557
    3. ' A' → logprob: -1.6601202487945557
    4. 'else' → logprob: -3.5351202487945557
    5. ' elif' → logprob: -3.5351202487945557
    6. ' not' → logprob: -4.660120010375977
    7. ' else' → logprob: -5.285120010375977
    8. ')' → logprob: -6.035120010375977
    9. 'not' → logprob: -6.660120010375977
    10. 'if' → logprob: -8.910120010375977

Token 190: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026697807013988495
    2. '<' → logprob: -3.651697874069214
    3. ' >=' → logprob: -8.776698112487793
    4. ')' → logprob: -9.651698112487793
    5. 'else' → logprob: -10.026698112487793
    6. ' ' → logprob: -10.526698112487793
    7. ' )' → logprob: -10.651698112487793
    8. ' >' → logprob: -11.026698112487793
    9. ' else' → logprob: -11.276698112487793
    10. ' <=' → logprob: -11.276698112487793

Token 191: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.4287259578704834
    2. ' ' → logprob: -1.0537259578704834
    3. ')' → logprob: -11.678726196289062
    4. ' ' → logprob: -12.053726196289062
    5. '14' → logprob: -12.553726196289062
    6. '1' → logprob: -13.616226196289062
    7. '   ' → logprob: -14.053726196289062
    8. '12' → logprob: -14.428726196289062
    9. '  ' → logprob: -14.741226196289062
    10. '3' → logprob: -14.803726196289062

Token 192: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '1' → logprob: -16.375431060791016
    4. '14' → logprob: -16.500431060791016
    5. ')' → logprob: -16.625431060791016
    6. '3' → logprob: -17.250431060791016
    7. '0' → logprob: -17.500431060791016
    8. '   ' → logprob: -17.562931060791016
    9. '  ' → logprob: -17.687931060791016
    10. '```' → logprob: -18.187931060791016

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2402629256248474
    2. 'else' → logprob: -1.9902629852294922
    3. '):
' → logprob: -3.240262985229492
    4. '):' → logprob: -3.990262985229492
    5. ' else' → logprob: -5.115262985229492
    6. ':)' → logprob: -5.115262985229492
    7. ':' → logprob: -5.865262985229492
    8. 'elif' → logprob: -5.990262985229492
    9. ' )' → logprob: -7.490262985229492
    10. ':
' → logprob: -7.865262985229492

Token 194: ' n' (ID: 297)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.024025775492191315
    2. 'elif' → logprob: -4.274025917053223
    3. ' else' → logprob: -5.149025917053223
    4. ':' → logprob: -5.524025917053223
    5. ' elif' → logprob: -11.399025917053223
    6. ':
' → logprob: -12.399025917053223
    7. '_else' → logprob: -14.024025917053223
    8. 'est' → logprob: -14.649025917053223
    9. 'elsif' → logprob: -14.774025917053223
    10. 'elseif' → logprob: -15.024025917053223

Token 195: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.1657576560974121
    2. 'e' → logprob: -2.540757656097412
    3. 'pas' → logprob: -3.415757656097412
    4. 'elif' → logprob: -4.540757656097412
    5. '#' → logprob: -4.665757656097412
    6. '’est' → logprob: -5.040757656097412
    7. 'ot' → logprob: -5.915757656097412
    8. 'n' → logprob: -6.415757656097412
    9. 'on' → logprob: -6.415757656097412
    10. 'est' → logprob: -6.540757656097412

Token 196: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.043191470205783844
    2. ' pas' → logprob: -3.168191432952881
    3. '#' → logprob: -10.043191909790039
    4. 't' → logprob: -10.293191909790039
    5. 'p' → logprob: -10.668191909790039
    6. '_pas' → logprob: -10.668191909790039
    7. 'Pas' → logprob: -10.668191909790039
    8. 'not' → logprob: -10.793191909790039
    9. 'else' → logprob: -11.668191909790039
    10. 's' → logprob: -12.668191909790039

Token 197: ' satis' (ID: 56317)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.01405385136604309
    2. ' pas' → logprob: -4.639053821563721
    3. 'v' → logprob: -5.889053821563721
    4. 'True' → logprob: -6.764053821563721
    5. '#' → logprob: -8.514054298400879
    6. 'Pas' → logprob: -10.139054298400879
    7. 's' → logprob: -10.514054298400879
    8. ' True' → logprob: -10.764054298400879
    9. 'plus' → logprob: -11.264054298400879
    10. ':' → logprob: -11.889054298400879

Token 198: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.6936755776405334
    2. 'ais' → logprob: -0.9436755776405334
    3. 'ait' → logprob: -2.4436755180358887
    4. 'aise' → logprob: -4.818675518035889
    5. 'a' → logprob: -5.193675518035889
    6. 'is' → logprob: -5.693675518035889
    7. 'fait' → logprob: -6.068675518035889
    8. 'f' → logprob: -6.568675518035889
    9. 'aites' → logprob: -7.193675518035889
    10. 'e' → logprob: -7.318675518035889

Token 199: ',' (ID: 11)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0025709024630486965
    2. 'else' → logprob: -6.002571105957031
    3. ' elif' → logprob: -9.627571105957031
    4. ':' → logprob: -10.627571105957031
    5. 'el' → logprob: -12.752571105957031
    6. ' else' → logprob: -13.877571105957031
    7. ',' → logprob: -14.502571105957031
    8. 'eli' → logprob: -15.377571105957031
    9. 'els' → logprob: -15.627571105957031
    10. 'elsif' → logprob: -15.877571105957031

Token 200: ' on' (ID: 402)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00788993202149868
    2. 'else' → logprob: -5.382889747619629
    3. ' elif' → logprob: -5.757889747619629
    4. ' else' → logprob: -9.632889747619629
    5. 'el' → logprob: -10.507889747619629
    6. 'if' → logprob: -12.757889747619629
    7. 'els' → logprob: -13.007889747619629
    8. 'eli' → logprob: -13.507889747619629
    9. ' el' → logprob: -13.757889747619629
    10. '   ' → logprob: -13.882889747619629

Token 201: ' vér' (ID: 42524)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.20382244884967804
    2. 'else' → logprob: -1.7038224935531616
    3. ' else' → logprob: -6.578822612762451
    4. ' elif' → logprob: -7.078822612762451
    5. 'el' → logprob: -8.828822135925293
    6. 'els' → logprob: -11.203822135925293
    7. 'elsif' → logprob: -12.453822135925293
    8. 'eli' → logprob: -12.703822135925293
    9. 'elseif' → logprob: -13.703822135925293
    10. 'elser' → logprob: -13.828822135925293

Token 202: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.7194705605506897
    2. 'elif' → logprob: -0.8444705605506897
    3. 'if' → logprob: -2.719470500946045
    4. 'else' → logprob: -5.094470500946045
    5. 'el' → logprob: -5.719470500946045
    6. 'elsif' → logprob: -6.344470500946045
    7. 'ut' → logprob: -6.969470500946045
    8. 'ify' → logprob: -7.094470500946045
    9. 'ifiez' → logprob: -7.219470500946045
    10. 'f' → logprob: -7.469470500946045

Token 203: ' la' (ID: 557)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03935704380273819
    2. ' elif' → logprob: -3.2893569469451904
    3. ':' → logprob: -7.6643571853637695
    4. 'else' → logprob: -7.9143571853637695
    5. 'une' → logprob: -8.53935718536377
    6. '   ' → logprob: -9.28935718536377
    7. 'if' → logprob: -10.28935718536377
    8. ' une' → logprob: -10.41435718536377
    9. 'el' → logprob: -10.66435718536377
    10. ' ' → logprob: -10.66435718536377

Token 204: ' suivante' (ID: 107439)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.016224168241024017
    2. ' elif' → logprob: -4.641224384307861
    3. 'else' → logprob: -5.141224384307861
    4. ' else' → logprob: -8.891223907470703
    5. 'if' → logprob: -9.016223907470703
    6. '   ' → logprob: -9.641223907470703
    7. 'el' → logprob: -10.141223907470703
    8. ' ' → logprob: -10.266223907470703
    9. ':' → logprob: -10.516223907470703
    10. 'A' → logprob: -10.891223907470703

Token 205: ' avec' (ID: 3937)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00021295747137628496
    2. ' elif' → logprob: -8.500212669372559
    3. 'el' → logprob: -11.625212669372559
    4. 'eli' → logprob: -14.625212669372559
    5. ' eli' → logprob: -17.500213623046875
    6. 'e' → logprob: -18.125213623046875
    7. 'elsif' → logprob: -18.250213623046875
    8. 'El' → logprob: -18.375213623046875
    9. '```' → logprob: -18.500213623046875
    10. 'els' → logprob: -18.750213623046875

Token 206: ' '' (ID: 461)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.001858080504462123
    2. ' elif' → logprob: -6.376858234405518
    3. 'if' → logprob: -9.12685775756836
    4. 'el' → logprob: -10.62685775756836
    5. 'A' → logprob: -11.50185775756836
    6. ' A' → logprob: -12.50185775756836
    7. '```' → logprob: -13.25185775756836
    8. '`' → logprob: -13.50185775756836
    9. ' if' → logprob: -14.12685775756836
    10. '   ' → logprob: -14.12685775756836

Token 207: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.007716651540249586
    2. ' elif' → logprob: -4.882716655731201
    3. 'else' → logprob: -10.007716178894043
    4. 'if' → logprob: -10.257716178894043
    5. 'el' → logprob: -10.632716178894043
    6. ' if' → logprob: -14.007716178894043
    7. ' else' → logprob: -14.007716178894043
    8. '   ' → logprob: -14.132716178894043
    9. 'elseif' → logprob: -14.382716178894043
    10. '`' → logprob: -14.382716178894043

Token 208: ''
' (ID: 2207)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.10505947470664978
    2. 'A' → logprob: -2.6050593852996826
    3. ' B' → logprob: -3.7300593852996826
    4. 'B' → logprob: -6.480059623718262
    5. ' if' → logprob: -9.230059623718262
    6. 'if' → logprob: -9.355059623718262
    7. 'elif' → logprob: -10.355059623718262
    8. ' elif' → logprob: -10.730059623718262
    9. ' ' → logprob: -10.855059623718262
    10. '   ' → logprob: -10.980059623718262

Token 209: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.07107880711555481
    2. ' elif' → logprob: -2.6960787773132324
    3. ' A' → logprob: -7.321078777313232
    4. 'A' → logprob: -7.946078777313232
    5. 'el' → logprob: -10.32107925415039
    6. ' B' → logprob: -10.44607925415039
    7. 'if' → logprob: -10.69607925415039
    8. 'B' → logprob: -10.69607925415039
    9. ' if' → logprob: -12.32107925415039
    10. '   ' → logprob: -12.69607925415039

Token 210: ' '' (ID: 461)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03951965644955635
    2. ' elif' → logprob: -3.2895195484161377
    3. 'A' → logprob: -7.289519786834717
    4. 'B' → logprob: -8.039519309997559
    5. ' A' → logprob: -8.164519309997559
    6. 'el' → logprob: -9.414519309997559
    7. ' B' → logprob: -9.539519309997559
    8. 'if' → logprob: -11.789519309997559
    9. 'else' → logprob: -12.164519309997559
    10. '   ' → logprob: -12.289519309997559

Token 211: 'elif' (ID: 29767)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.3257712125778198
    2. ' B' → logprob: -1.3257712125778198
    3. 'A' → logprob: -1.4507712125778198
    4. 'B' → logprob: -1.7007712125778198
    5. 'elif' → logprob: -3.0757713317871094
    6. ' elif' → logprob: -5.325771331787109
    7. ' ' → logprob: -7.700771331787109
    8. 'else' → logprob: -9.13827133178711
    9. 'if' → logprob: -10.51327133178711
    10. '   ' → logprob: -10.63827133178711

Token 212: ''' (ID: 6)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20525361597537994
    2. ' B' → logprob: -2.0802536010742188
    3. 'A' → logprob: -2.9552536010742188
    4. 'B' → logprob: -4.830253601074219
    5. ' ' → logprob: -7.830253601074219
    6. ''' → logprob: -8.830253601074219
    7. ' ' → logprob: -10.642753601074219
    8. ''A' → logprob: -12.017753601074219
    9. ' '' → logprob: -12.205253601074219
    10. '  ' → logprob: -12.455253601074219

Token 213: ' signifie' (ID: 81149)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.24906519055366516
    2. ' B' → logprob: -1.7490651607513428
    3. 'A' → logprob: -3.2490651607513428
    4. 'B' → logprob: -4.874065399169922
    5. ' ' → logprob: -9.874065399169922
    6. ' ' → logprob: -11.249065399169922
    7. '   ' → logprob: -12.936565399169922
    8. ' (' → logprob: -12.936565399169922
    9. ' a' → logprob: -13.499065399169922
    10. ':' → logprob: -13.811565399169922

Token 214: ' "' (ID: 392)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6911275386810303
    2. ' A' → logprob: -0.8161275386810303
    3. ' B' → logprob: -3.3161275386810303
    4. 'B' → logprob: -4.316127777099609
    5. '"' → logprob: -5.941127777099609
    6. ' "' → logprob: -6.566127777099609
    7. '"A' → logprob: -6.941127777099609
    8. ' ' → logprob: -7.566127777099609
    9. ' que' → logprob: -7.566127777099609
    10. 'que' → logprob: -7.566127777099609

Token 215: 'sin' (ID: 23516)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.36469051241874695
    2. 'A' → logprob: -1.3646905422210693
    3. ' B' → logprob: -3.2396905422210693
    4. 'B' → logprob: -4.86469030380249
    5. ' ' → logprob: -6.11469030380249
    6. ' ' → logprob: -8.364690780639648
    7. 'else' → logprob: -9.989690780639648
    8. 'que' → logprob: -10.114690780639648
    9. '12' → logprob: -10.177190780639648
    10. 'une' → logprob: -10.177190780639648

Token 216: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.000422570708906278
    2. 'elif' → logprob: -8.750422477722168
    3. 'ons' → logprob: -10.250422477722168
    4. 'ont' → logprob: -10.375422477722168
    5. 'a' → logprob: -10.625422477722168
    6. 'if' → logprob: -10.750422477722168
    7. 'c' → logprob: -10.750422477722168
    8. 'e' → logprob: -10.875422477722168
    9. 'onn' → logprob: -10.875422477722168
    10. 'ce' → logprob: -10.875422477722168

Token 217: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5894351005554199
    2. ' if' → logprob: -1.33943510055542
    3. 'si' → logprob: -2.33943510055542
    4. ' si' → logprob: -2.46443510055542
    5. ' ' → logprob: -7.33943510055542
    6. ' A' → logprob: -7.33943510055542
    7. ' ' → logprob: -8.589435577392578
    8. '   ' → logprob: -8.714435577392578
    9. 'A' → logprob: -9.464435577392578
    10. '  ' → logprob: -9.839435577392578

Token 218: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.11906411498785019
    2. 'if' → logprob: -2.4940640926361084
    3. ' si' → logprob: -3.6190640926361084
    4. ' if' → logprob: -5.8690643310546875
    5. 'Si' → logprob: -11.244064331054688
    6. '```' → logprob: -11.869064331054688
    7. 'A' → logprob: -12.119064331054688
    8. ' ' → logprob: -12.244064331054688
    9. ' ' → logprob: -12.744064331054688
    10. 'If' → logprob: -13.744064331054688

Token 219: '..."
' (ID: 63347)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.21571919322013855
    2. 'A' → logprob: -1.715719223022461
    3. ' B' → logprob: -4.465719223022461
    4. 'B' → logprob: -5.965719223022461
    5. ' ' → logprob: -9.590719223022461
    6. '"' → logprob: -10.465719223022461
    7. ' ' → logprob: -10.840719223022461
    8. '   ' → logprob: -12.215719223022461
    9. '  ' → logprob: -12.840719223022461
    10. ' (' → logprob: -13.153219223022461

Token 220: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.005248106550425291
    2. ' elif' → logprob: -5.255248069763184
    3. 'el' → logprob: -11.505248069763184
    4. 'if' → logprob: -12.880248069763184
    5. 'else' → logprob: -14.255248069763184
    6. '   ' → logprob: -15.255248069763184
    7. 'A' → logprob: -15.505248069763184
    8. 'elseif' → logprob: -16.0052490234375
    9. 'elsif' → logprob: -16.3802490234375
    10. ' A' → logprob: -16.5052490234375

Token 221: ' On' (ID: 2160)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.22123757004737854
    2. 'A' → logprob: -2.3462376594543457
    3. 'B' → logprob: -2.9712376594543457
    4. ' A' → logprob: -3.7212376594543457
    5. ' elif' → logprob: -4.096237659454346
    6. ' B' → logprob: -4.596237659454346
    7. 'if' → logprob: -8.096237182617188
    8. '   ' → logprob: -8.846237182617188
    9. 'else' → logprob: -10.346237182617188
    10. ' ' → logprob: -10.346237182617188

Token 222: ' vér' (ID: 42524)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.940095841884613
    2. ' B' → logprob: -1.1900959014892578
    3. 'A' → logprob: -2.065095901489258
    4. 'B' → logprob: -2.440095901489258
    5. 'elif' → logprob: -2.440095901489258
    6. ' elif' → logprob: -5.690095901489258
    7. ' ' → logprob: -7.690095901489258
    8. ' ' → logprob: -10.190095901489258
    9. ' a' → logprob: -10.440095901489258
    10. ' (' → logprob: -10.565095901489258

Token 223: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.011066209524869919
    2. 'if' → logprob: -4.511066436767578
    3. 'ifi' → logprob: -11.886066436767578
    4. 'ifiez' → logprob: -12.261066436767578
    5. 'ife' → logprob: -12.511066436767578
    6. 'elif' → logprob: -14.511066436767578
    7. 'A' → logprob: -14.761066436767578
    8. 'ifié' → logprob: -14.761066436767578
    9. 'ifies' → logprob: -15.261066436767578
    10. 'ify' → logprob: -15.386066436767578

Token 224: ' si' (ID: 1784)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.293813019990921
    2. ' A' → logprob: -2.0438129901885986
    3. 'B' → logprob: -2.2938129901885986
    4. 'A' → logprob: -3.7938129901885986
    5. 'elif' → logprob: -7.168813228607178
    6. ' ' → logprob: -7.293813228607178
    7. ' elif' → logprob: -9.79381275177002
    8. ' if' → logprob: -10.04381275177002
    9. 'if' → logprob: -10.04381275177002
    10. '   ' → logprob: -11.04381275177002

Token 225: ' la' (ID: 557)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6951732039451599
    2. 'B' → logprob: -1.1951732635498047
    3. 'A' → logprob: -2.1951732635498047
    4. ' A' → logprob: -2.4451732635498047
    5. ' ' → logprob: -8.320173263549805
    6. ' ' → logprob: -12.007673263549805
    7. '   ' → logprob: -12.445173263549805
    8. '10' → logprob: -12.570173263549805
    9. '13' → logprob: -12.570173263549805
    10. '0' → logprob: -12.695173263549805

Token 226: ' valeur' (ID: 41664)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5707239508628845
    2. ' B' → logprob: -1.4457240104675293
    3. 'A' → logprob: -1.9457240104675293
    4. ' A' → logprob: -2.9457240104675293
    5. ' valeur' → logprob: -6.070724010467529
    6. 'val' → logprob: -7.570724010467529
    7. ' ' → logprob: -8.070723533630371
    8. 'value' → logprob: -8.320723533630371
    9. ' value' → logprob: -9.445723533630371
    10. 'elif' → logprob: -9.883223533630371

Token 227: ' de' (ID: 334)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.557209312915802
    2. ' de' → logprob: -1.5572092533111572
    3. ' B' → logprob: -1.8072092533111572
    4. 'de' → logprob: -3.5572092533111572
    5. 'A' → logprob: -3.9322092533111572
    6. ' A' → logprob: -5.932209491729736
    7. '(B' → logprob: -7.682209491729736
    8. '   ' → logprob: -7.932209491729736
    9. ' ' → logprob: -8.307209014892578
    10. ' of' → logprob: -9.557209014892578

Token 228: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10495752096176147
    2. 'A' → logprob: -2.3549575805664062
    3. ' B' → logprob: -5.479957580566406
    4. ' A' → logprob: -7.979957580566406
    5. '13' → logprob: -9.354957580566406
    6. '12' → logprob: -10.479957580566406
    7. ' ' → logprob: -10.604957580566406
    8. '10' → logprob: -10.854957580566406
    9. '18' → logprob: -11.729957580566406
    10. 'a' → logprob: -11.979957580566406

Token 229: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.27971646189689636
    2. '<' → logprob: -2.0297164916992188
    3. ' >=' → logprob: -2.9047164916992188
    4. '>' → logprob: -3.2797164916992188
    5. ' <' → logprob: -5.029716491699219
    6. '<=' → logprob: -5.029716491699219
    7. '==' → logprob: -5.404716491699219
    8. ' >' → logprob: -6.779716491699219
    9. ' <=' → logprob: -7.779716491699219
    10. ' ==' → logprob: -8.029716491699219

Token 230: ' inf' (ID: 5603)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.2123831510543823
    2. '<' → logprob: -1.3373831510543823
    3. 'strict' → logprob: -1.5873831510543823
    4. 'inf' → logprob: -1.9623831510543823
    5. '>' → logprob: -3.462383270263672
    6. ' inf' → logprob: -4.462383270263672
    7. 'sup' → logprob: -4.712383270263672
    8. '<=' → logprob: -4.837383270263672
    9. ' supérieure' → logprob: -4.837383270263672
    10. ' >=' → logprob: -5.462383270263672

Token 231: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.0002036595979006961
    2. 'érieur' → logprob: -8.875204086303711
    3. 'érie' → logprob: -10.250204086303711
    4. 'erie' → logprob: -10.750204086303711
    5. 'érieures' → logprob: -13.125204086303711
    6. 'é' → logprob: -13.625204086303711
    7. '   ' → logprob: -14.375204086303711
    8. '<' → logprob: -14.375204086303711
    9. 'érieurs' → logprob: -15.125204086303711
    10. '>' → logprob: -15.125204086303711

Token 232: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2480282485485077
    2. 'à' → logprob: -1.62302827835083
    3. '13' → logprob: -4.62302827835083
    4. 'ou' → logprob: -5.87302827835083
    5. '   ' → logprob: -5.99802827835083
    6. ' ou' → logprob: -6.37302827835083
    7. ' ' → logprob: -6.62302827835083
    8. '#' → logprob: -7.62302827835083
    9. ' or' → logprob: -7.74802827835083
    10. '```' → logprob: -8.123027801513672

Token 233: ' ég' (ID: 33150)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7497574687004089
    2. '13' → logprob: -2.1247575283050537
    3. 'strict' → logprob: -2.6247575283050537
    4. ' à' → logprob: -2.7497575283050537
    5. 'ég' → logprob: -3.2497575283050537
    6. 'égal' → logprob: -3.4997575283050537
    7. ' ' → logprob: -3.6247575283050537
    8. 'ou' → logprob: -3.6247575283050537
    9. '=' → logprob: -3.7497575283050537
    10. '12' → logprob: -4.124757289886475

Token 234: 'ale' (ID: 1167)
  Prédit: 'érieure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.0350450798869133
    2. 'rie' → logprob: -3.9100451469421387
    3. 'ie' → logprob: -4.660045146942139
    4. 'erie' → logprob: -5.785045146942139
    5. 'érie' → logprob: -6.910045146942139
    6. 'ière' → logprob: -8.16004467010498
    7. 'a' → logprob: -8.78504467010498
    8. 'érieur' → logprob: -9.78504467010498
    9. '{' → logprob: -10.03504467010498
    10. 'ieur' → logprob: -10.16004467010498

Token 235: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2616427540779114
    2. 'à' → logprob: -2.3866426944732666
    3. '13' → logprob: -3.3866426944732666
    4. '7' → logprob: -4.511642932891846
    5. ' to' → logprob: -4.636642932891846
    6. ' ' → logprob: -4.636642932891846
    7. '10' → logprob: -4.761642932891846
    8. '8' → logprob: -4.886642932891846
    9. 'to' → logprob: -5.011642932891846
    10. '12' → logprob: -5.011642932891846

Token 236: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.3247548043727875
    2. '5' → logprob: -2.8247547149658203
    3. '6' → logprob: -2.8247547149658203
    4. '10' → logprob: -2.9497547149658203
    5. '7' → logprob: -3.8247547149658203
    6. '0' → logprob: -3.9497547149658203
    7. '1' → logprob: -4.44975471496582
    8. ' ' → logprob: -4.57475471496582
    9. '3' → logprob: -4.69975471496582
    10. '11' → logprob: -4.69975471496582

Token 237: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.6880456209182739
    2. '6' → logprob: -2.1880455017089844
    3. '0' → logprob: -2.5630455017089844
    4. '10' → logprob: -2.6880455017089844
    5. '5' → logprob: -2.8130455017089844
    6. '1' → logprob: -2.9380455017089844
    7. '7' → logprob: -3.4380455017089844
    8. '3' → logprob: -3.5630455017089844
    9. '11' → logprob: -4.063045501708984
    10. '2' → logprob: -4.188045501708984

Token 238: ' ET' (ID: 23345)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -8.73314929776825e-05
    2. ':' → logprob: -10.12508773803711
    3. ' elif' → logprob: -10.12508773803711
    4. 'el' → logprob: -12.00008773803711
    5. '   ' → logprob: -14.37508773803711
    6. 'and' → logprob: -16.62508773803711
    7. ':
' → logprob: -16.87508773803711
    8. 'else' → logprob: -17.00008773803711
    9. '	elif' → logprob: -17.25008773803711
    10. ' and' → logprob: -17.37508773803711

Token 239: ' supérieure' (ID: 106336)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1766817718744278
    2. ' B' → logprob: -2.0516817569732666
    3. 'A' → logprob: -3.5516817569732666
    4. ' A' → logprob: -5.551681995391846
    5. '  ' → logprob: -8.051681518554688
    6. '   ' → logprob: -8.176681518554688
    7. '    ' → logprob: -9.301681518554688
    8. ' ' → logprob: -10.426681518554688
    9. ' (' → logprob: -10.426681518554688
    10. 'if' → logprob: -10.801681518554688

Token 240: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.2074978351593018
    2. ' ou' → logprob: -1.2074978351593018
    3. ' or' → logprob: -1.7074978351593018
    4. ' à' → logprob: -2.4574978351593018
    5. 'à' → logprob: -2.5824978351593018
    6. 'strict' → logprob: -3.7074978351593018
    7. '=' → logprob: -4.332497596740723
    8. 'or' → logprob: -5.332497596740723
    9. '```' → logprob: -5.957497596740723
    10. ' strict' → logprob: -6.457497596740723

Token 241: ' ég' (ID: 33150)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.6466778516769409
    2. 'à' → logprob: -1.896677851676941
    3. '=' → logprob: -2.5216779708862305
    4. 'strict' → logprob: -2.5216779708862305
    5. 'ég' → logprob: -3.3966779708862305
    6. '0' → logprob: -3.5216779708862305
    7. 'ou' → logprob: -3.5216779708862305
    8. 'eg' → logprob: -4.0216779708862305
    9. 'egal' → logprob: -4.1466779708862305
    10. '9' → logprob: -4.1466779708862305

Token 242: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0026030067820101976
    2. 'al' → logprob: -6.002603054046631
    3. 'ales' → logprob: -11.127602577209473
    4. 'uale' → logprob: -11.127602577209473
    5. 'але' → logprob: -11.252602577209473
    6. 'ène' → logprob: -11.752602577209473
    7. 'agée' → logprob: -11.752602577209473
    8. 'u' → logprob: -11.877602577209473
    9. 'à' → logprob: -12.002602577209473
    10. 'alité' → logprob: -12.127602577209473

Token 243: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6654612421989441
    2. ' à' → logprob: -0.7904612421989441
    3. '```' → logprob: -3.790461301803589
    4. '=' → logprob: -6.04046106338501
    5. 'to' → logprob: -6.41546106338501
    6. ' to' → logprob: -6.54046106338501
    7. '#' → logprob: -6.79046106338501
    8. '12' → logprob: -7.91546106338501
    9. 'À' → logprob: -7.91546106338501
    10. ''à' → logprob: -8.040461540222168

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3049800992012024
    2. '1' → logprob: -1.5549800395965576
    3. '6' → logprob: -3.9299800395965576
    4. '7' → logprob: -4.179980278015137
    5. '4' → logprob: -5.554980278015137
    6. '2' → logprob: -5.679980278015137
    7. '5' → logprob: -5.679980278015137
    8. '3' → logprob: -5.804980278015137
    9. '10' → logprob: -6.554980278015137
    10. '8' → logprob: -6.929980278015137

Token 245: '6' (ID: 21)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6073506474494934
    2. '1' → logprob: -1.6073505878448486
    3. '6' → logprob: -1.8573505878448486
    4. '7' → logprob: -2.8573505878448486
    5. '10' → logprob: -4.857350826263428
    6. '4' → logprob: -4.857350826263428
    7. '2' → logprob: -4.982350826263428
    8. '3' → logprob: -4.982350826263428
    9. '5' → logprob: -5.107350826263428
    10. '8' → logprob: -5.357350826263428

Token 246: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00026622318546287715
    2. ' elif' → logprob: -8.250266075134277
    3. 'el' → logprob: -12.500266075134277
    4. ' and' → logprob: -14.875266075134277
    5. ':' → logprob: -15.125266075134277
    6. '   ' → logprob: -15.500266075134277
    7. 'and' → logprob: -15.625266075134277
    8. 'if' → logprob: -16.750267028808594
    9. ' (' → logprob: -17.000267028808594
    10. ',' → logprob: -17.250267028808594

Token 247: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -9.317247167928144e-05
    2. ' elif' → logprob: -9.375093460083008
    3. 'el' → logprob: -11.750093460083008
    4. ':' → logprob: -15.625093460083008
    5. 'eli' → logprob: -16.250093460083008
    6. 'e' → logprob: -17.125093460083008
    7. '```' → logprob: -17.500093460083008
    8. 'El' → logprob: -17.625093460083008
    9. ' eli' → logprob: -18.125093460083008
    10. '   ' → logprob: -18.375093460083008

Token 248: ' En' (ID: 2130)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -2.629921436891891e-05
    2. ' elif' → logprob: -10.62502670288086
    3. 'el' → logprob: -13.25002670288086
    4. 'eli' → logprob: -15.50002670288086
    5. 'e' → logprob: -18.12502670288086
    6. 'El' → logprob: -18.75002670288086
    7. '```' → logprob: -19.37502670288086
    8. ' eli' → logprob: -19.62502670288086
    9. 'elseif' → logprob: -19.75002670288086
    10. 'elf' → logprob: -19.75002670288086

Token 249: ' Python' (ID: 26534)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.055012498050928116
    2. ' elif' → logprob: -2.9300124645233154
    3. 'el' → logprob: -9.430012702941895
    4. ' A' → logprob: -10.680012702941895
    5. 'A' → logprob: -11.055012702941895
    6. ' el' → logprob: -13.180012702941895
    7. '```' → logprob: -13.555012702941895
    8. 'if' → logprob: -13.805012702941895
    9. 'else' → logprob: -13.930012702941895
    10. ' ' → logprob: -14.180012702941895

Token 250: ',' (ID: 11)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.31705591082572937
    2. ' elif' → logprob: -1.9420559406280518
    3. ':' → logprob: -2.1920559406280518
    4. 'if' → logprob: -5.192055702209473
    5. ' if' → logprob: -5.192055702209473
    6. ' :' → logprob: -5.817055702209473
    7. ' and' → logprob: -7.192055702209473
    8. ',' → logprob: -7.692055702209473
    9. ':
' → logprob: -7.692055702209473
    10. ' ' → logprob: -8.317055702209473

Token 251: ' l' (ID: 305)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3354499936103821
    2. 'if' → logprob: -2.3354499340057373
    3. ' A' → logprob: -2.4604499340057373
    4. 'A' → logprob: -3.0854499340057373
    5. ' ' → logprob: -3.9604499340057373
    6. '6' → logprob: -3.9604499340057373
    7. '12' → logprob: -4.960450172424316
    8. ' if' → logprob: -4.960450172424316
    9. ' elif' → logprob: -5.585450172424316
    10. ' B' → logprob: -8.585450172424316

Token 252: ''ex' (ID: 23472)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11667302995920181
    2. 'if' → logprob: -2.741672992706299
    3. ' if' → logprob: -4.241672992706299
    4. ' elif' → logprob: -4.241672992706299
    5. 'A' → logprob: -4.991672992706299
    6. 'and' → logprob: -5.741672992706299
    7. ' A' → logprob: -5.866672992706299
    8. 'a' → logprob: -7.116672992706299
    9. 'e' → logprob: -7.241672992706299
    10. ' a' → logprob: -7.616672992706299

Token 253: 'pression' (ID: 4521)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2509497106075287
    2. 'pression' → logprob: -1.625949740409851
    3. 'if' → logprob: -3.7509496212005615
    4. 'el' → logprob: -7.625949859619141
    5. 'pr' → logprob: -7.750949859619141
    6. '```' → logprob: -8.50094985961914
    7. 'p' → logprob: -9.00094985961914
    8. 'ecution' → logprob: -9.12594985961914
    9. 'écution' → logprob: -9.37594985961914
    10. 'emple' → logprob: -10.12594985961914

Token 254: ' composée' (ID: 146865)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.013215061277151108
    2. 'elif' → logprob: -4.388215065002441
    3. ' ' → logprob: -7.888215065002441
    4. 'if' → logprob: -8.763215065002441
    5. '```' → logprob: -9.138215065002441
    6. '   ' → logprob: -11.013215065002441
    7. '(' → logprob: -11.263215065002441
    8. 'A' → logprob: -11.513215065002441
    9. '12' → logprob: -12.138215065002441
    10. ' elif' → logprob: -12.263215065002441

Token 255: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6853117346763611
    2. 'if' → logprob: -1.0603117942810059
    3. 'elif' → logprob: -2.060311794281006
    4. 'A' → logprob: -4.060311794281006
    5. '12' → logprob: -6.060311794281006
    6. ' if' → logprob: -7.060311794281006
    7. '```' → logprob: -7.685311794281006
    8. 'est' → logprob: -7.810311794281006
    9. ' ' → logprob: -8.435311317443848
    10. ' A' → logprob: -8.685311317443848

Token 256: '12' (ID: 899)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0805860310792923
    2. 'elif' → logprob: -2.5805859565734863
    3. 'if' → logprob: -6.830585956573486
    4. '(' → logprob: -8.080586433410645
    5. '```' → logprob: -9.080586433410645
    6. '12' → logprob: -9.330586433410645
    7. ' ' → logprob: -9.830586433410645
    8. 'and' → logprob: -12.080586433410645
    9. 'el' → logprob: -12.080586433410645
    10. 'A' → logprob: -12.080586433410645

Token 257: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5760754942893982
    2. '>=' → logprob: -0.8260754942893982
    3. '>' → logprob: -10.201075553894043
    4. ' ' → logprob: -10.326075553894043
    5. 'and' → logprob: -11.701075553894043
    6. '6' → logprob: -11.826075553894043
    7. '≥' → logprob: -12.076075553894043
    8. '<=' → logprob: -12.201075553894043
    9. '```' → logprob: -12.451075553894043
    10. ' ' → logprob: -12.701075553894043

Token 258: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07000378519296646
    2. ' A' → logprob: -2.6950037479400635
    3. '12' → logprob: -10.195003509521484
    4. '6' → logprob: -10.945003509521484
    5. ' ' → logprob: -11.945003509521484
    6. ' ' → logprob: -13.070003509521484
    7. '	A' → logprob: -13.820003509521484
    8. '>A' → logprob: -14.070003509521484
    9. '   ' → logprob: -14.820003509521484
    10. '
' → logprob: -15.695003509521484

Token 259: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14573822915554047
    2. ' >=' → logprob: -2.020738124847412
    3. 'and' → logprob: -6.145738124847412
    4. ' and' → logprob: -7.020738124847412
    5. ')>=' → logprob: -11.89573860168457
    6. ' ' → logprob: -12.77073860168457
    7. ']>=' → logprob: -12.89573860168457
    8. ')' → logprob: -13.39573860168457
    9. ' ' → logprob: -13.52073860168457
    10. 'ge' → logprob: -13.52073860168457

Token 260: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. 'A' → logprob: -17.688304901123047
    4. '```' → logprob: -17.938304901123047
    5. '   ' → logprob: -18.063304901123047
    6. ' A' → logprob: -18.125804901123047
    7. ' six' → logprob: -18.313304901123047
    8. '' → logprob: -18.438304901123047
    9. '۶' → logprob: -18.500804901123047
    10. '
' → logprob: -18.750804901123047

Token 261: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -19.250001907348633
    4. '
' → logprob: -20.125001907348633
    5. '۶' → logprob: -20.125001907348633
    6. '٦' → logprob: -20.375001907348633
    7. '' → logprob: -20.625001907348633
    8. 'A' → logprob: -20.750001907348633
    9. 'six' → logprob: -21.062501907348633
    10. '６' → logprob: -21.062501907348633

Token 262: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011527685448527336
    2. ':
' → logprob: -4.5115275382995605
    3. 'print' → logprob: -8.886528015136719
    4. '   ' → logprob: -9.011528015136719
    5. '):' → logprob: -9.886528015136719
    6. 'if' → logprob: -10.011528015136719
    7. ' :' → logprob: -10.386528015136719
    8. ' and' → logprob: -10.511528015136719
    9. 'and' → logprob: -10.886528015136719
    10. 'elif' → logprob: -11.136528015136719

Token 263: ' équ' (ID: 18899)
  Prédit: 'équ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'équ' → logprob: -0.31648755073547363
    2. 'une' → logprob: -2.0664875507354736
    3. 'equ' → logprob: -2.6914875507354736
    4. 'v' → logprob: -3.6914875507354736
    5. ' équ' → logprob: -4.3164873123168945
    6. 'True' → logprob: -4.4414873123168945
    7. 'true' → logprob: -5.1914873123168945
    8. 'égal' → logprob: -5.4414873123168945
    9. ' une' → logprob: -5.5664873123168945
    10. 'exact' → logprob: -5.9414873123168945

Token 264: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.13007676601409912
    2. 'iv' → logprob: -2.1300768852233887
    3. 'ivalent' → logprob: -5.880076885223389
    4. 'i' → logprob: -8.63007640838623
    5. '   ' → logprob: -10.38007640838623
    6. '#' → logprob: -10.38007640838623
    7. 'val' → logprob: -10.75507640838623
    8. 'ivable' → logprob: -11.50507640838623
    9. 'al' → logprob: -11.63007640838623
    10. 'v' → logprob: -12.00507640838623

Token 265: 'ente' (ID: 1576)
  Prédit: 'alent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alent' → logprob: -1.1167606115341187
    2. 'ent' → logprob: -1.2417606115341187
    3. 'ale' → logprob: -1.2417606115341187
    4. 'al' → logprob: -2.491760730743408
    5. 'ente' → logprob: -4.866760730743408
    6. 'lent' → logprob: -6.366760730743408
    7. 'ante' → logprob: -6.741760730743408
    8. 'ant' → logprob: -7.366760730743408
    9. 'aut' → logprob: -8.99176025390625
    10. 'a' → logprob: -9.11676025390625

Token 266: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.13788360357284546
    2. ' à' → logprob: -2.6378836631774902
    3. 'to' → logprob: -3.1378836631774902
    4. 'if' → logprob: -4.51288366317749
    5. '   ' → logprob: -6.63788366317749
    6. '#' → logprob: -7.26288366317749
    7. ' to' → logprob: -8.262883186340332
    8. 'À' → logprob: -8.887883186340332
    9. 'au' → logprob: -9.012883186340332
    10. ''à' → logprob: -9.137883186340332

Token 267: ' (' (ID: 350)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.05401526391506195
    2. '(' → logprob: -3.4290151596069336
    3. ' ' → logprob: -4.554015159606934
    4. 'A' → logprob: -5.304015159606934
    5. '12' → logprob: -5.804015159606934
    6. 'B' → logprob: -7.679015159606934
    7. ' (' → logprob: -7.804015159606934
    8. ' A' → logprob: -8.554015159606934
    9. '(A' → logprob: -8.929015159606934
    10. 'True' → logprob: -9.304015159606934

Token 268: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.26552796363830566
    2. '6' → logprob: -1.7655279636383057
    3. 'A' → logprob: -2.8905279636383057
    4. '(' → logprob: -6.015527725219727
    5. 'B' → logprob: -6.140527725219727
    6. ' ' → logprob: -6.640527725219727
    7. ' A' → logprob: -8.390527725219727
    8. ')' → logprob: -9.015527725219727
    9. '(A' → logprob: -9.265527725219727
    10. '   ' → logprob: -9.390527725219727

Token 269: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5235868692398071
    2. '>=' → logprob: -0.8985868692398071
    3. ')' → logprob: -8.023587226867676
    4. ')>=' → logprob: -9.523587226867676
    5. ' ' → logprob: -11.273587226867676
    6. 'and' → logprob: -12.023587226867676
    7. '   ' → logprob: -12.148587226867676
    8. ' ' → logprob: -12.273587226867676
    9. '```' → logprob: -12.398587226867676
    10. ']>=' → logprob: -12.398587226867676

Token 270: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.048595886677503586
    2. ' A' → logprob: -3.048595905303955
    3. ' ' → logprob: -12.548595428466797
    4. ')' → logprob: -13.423595428466797
    5. '   ' → logprob: -13.798595428466797
    6. ' ' → logprob: -14.298595428466797
    7. '	A' → logprob: -14.423595428466797
    8. '12' → logprob: -15.048595428466797
    9. '
' → logprob: -15.173595428466797
    10. '>A' → logprob: -15.798595428466797

Token 271: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1888481080532074
    2. ')' → logprob: -2.1888480186462402
    3. ' >=' → logprob: -3.3138480186462402
    4. ')>=' → logprob: -4.68884801864624
    5. ' and' → logprob: -4.93884801864624
    6. 'and' → logprob: -4.93884801864624
    7. ' )' → logprob: -9.438848495483398
    8. '   ' → logprob: -11.688848495483398
    9. ']>=' → logprob: -11.813848495483398
    10. ' ' → logprob: -12.063848495483398

Token 272: ' and' (ID: 326)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.09879466891288757
    2. 'and' → logprob: -2.72379469871521
    3. ' and' → logprob: -3.72379469871521
    4. ' >=' → logprob: -5.473794460296631
    5. ')>=' → logprob: -9.973794937133789
    6. ')' → logprob: -10.223794937133789
    7. ']>=' → logprob: -12.223794937133789
    8. 'if' → logprob: -12.223794937133789
    9. 'ge' → logprob: -12.348794937133789
    10. '
' → logprob: -13.098794937133789

Token 273: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.4319056272506714
    2. '(' → logprob: -1.1819056272506714
    3. ' (' → logprob: -3.681905746459961
    4. 'A' → logprob: -4.056905746459961
    5. '6' → logprob: -7.181905746459961
    6. ' A' → logprob: -7.556905746459961
    7. '(B' → logprob: -9.306905746459961
    8. '   ' → logprob: -9.556905746459961
    9. '12' → logprob: -10.056905746459961
    10. ' ' → logprob: -10.431905746459961

Token 274: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.055155325680971146
    2. '6' → logprob: -2.9301552772521973
    3. ' A' → logprob: -8.430155754089355
    4. ' ' → logprob: -11.055155754089355
    5. '   ' → logprob: -11.180155754089355
    6. '12' → logprob: -11.680155754089355
    7. 'B' → logprob: -12.180155754089355
    8. '7' → logprob: -12.555155754089355
    9. '(' → logprob: -12.930155754089355
    10. '  ' → logprob: -14.055155754089355

Token 275: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2258453667163849
    2. '>=' → logprob: -1.6008453369140625
    3. ')>=' → logprob: -8.600845336914062
    4. ')' → logprob: -8.725845336914062
    5. ' <=' → logprob: -10.600845336914062
    6. ' ' → logprob: -10.725845336914062
    7. '<=' → logprob: -11.600845336914062
    8. '<|end|>' → logprob: -11.975845336914062
    9. ']>=' → logprob: -12.100845336914062
    10. '   ' → logprob: -12.475845336914062

Token 276: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '
' → logprob: -17.001325607299805
    4. '```' → logprob: -17.626325607299805
    5. '   ' → logprob: -18.313825607299805
    6. ' ' → logprob: -18.313825607299805
    7. ')' → logprob: -18.876325607299805
    8. '  ' → logprob: -19.063825607299805
    9. ' six' → logprob: -19.251325607299805
    10. '۶' → logprob: -19.313825607299805

Token 277: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -17.125045776367188
    4. '12' → logprob: -17.375045776367188
    5. ')' → logprob: -18.250045776367188
    6. '1' → logprob: -19.125045776367188
    7. '   ' → logprob: -19.250045776367188
    8. '  ' → logprob: -19.375045776367188
    9. ' ' → logprob: -19.937545776367188
    10. '
' → logprob: -20.062545776367188

Token 278: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22188813984394073
    2. '):
' → logprob: -1.7218881845474243
    3. ')' → logprob: -4.221888065338135
    4. '   ' → logprob: -5.346888065338135
    5. ':' → logprob: -7.721888065338135
    6. 'print' → logprob: -9.846888542175293
    7. ' ):' → logprob: -9.846888542175293
    8. 'if' → logprob: -9.971888542175293
    9. ')
' → logprob: -9.971888542175293
    10. '):

' → logprob: -10.096888542175293

Token 279: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.981667537620524e-06
    2. ' elif' → logprob: -13.500001907348633
    3. 'el' → logprob: -15.000001907348633
    4. '```' → logprob: -16.375001907348633
    5. '12' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.375001907348633
    7. 'elseif' → logprob: -18.125001907348633
    8. '#elif' → logprob: -18.250001907348633
    9. '	elif' → logprob: -18.500001907348633
    10. 'El' → logprob: -18.500001907348633

Token 280: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.2035842090845108
    2. ' ' → logprob: -1.7035841941833496
    3. 'A' → logprob: -6.82858419418335
    4. '6' → logprob: -7.32858419418335
    5. ' A' → logprob: -7.82858419418335
    6. 'B' → logprob: -11.328584671020508
    7. '(' → logprob: -11.953584671020508
    8. '   ' → logprob: -12.078584671020508
    9. ' B' → logprob: -12.953584671020508
    10. '  ' → logprob: -13.453584671020508

Token 281: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0024509229697287083
    2. '6' → logprob: -6.502450942993164
    3. 'A' → logprob: -7.127450942993164
    4. ' ' → logprob: -9.002450942993164
    5. 'B' → logprob: -11.002450942993164
    6. '   ' → logprob: -13.127450942993164
    7. ' A' → logprob: -13.127450942993164
    8. '(' → logprob: -14.127450942993164
    9. '13' → logprob: -15.252450942993164
    10. '  ' → logprob: -15.752450942993164

Token 282: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2814052700996399
    2. '>=' → logprob: -1.4064052104949951
    3. ' ' → logprob: -8.656405448913574
    4. '>' → logprob: -10.656405448913574
    5. '   ' → logprob: -10.906405448913574
    6. 'and' → logprob: -12.156405448913574
    7. ']>=' → logprob: -12.531405448913574
    8. ')>=' → logprob: -12.531405448913574
    9. ' and' → logprob: -12.781405448913574
    10. '
' → logprob: -12.906405448913574

Token 283: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3484462797641754
    2. ' A' → logprob: -1.223446249961853
    3. ' ' → logprob: -14.223445892333984
    4. '	A' → logprob: -14.723445892333984
    5. '   ' → logprob: -15.598445892333984
    6. ' ' → logprob: -16.223445892333984
    7. 'a' → logprob: -16.348445892333984
    8. '>A' → logprob: -16.598445892333984
    9. '6' → logprob: -17.473445892333984
    10. '_A' → logprob: -17.660945892333984

Token 284: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.22552642226219177
    2. ' >=' → logprob: -1.6005264520645142
    3. ' and' → logprob: -9.850526809692383
    4. 'and' → logprob: -9.975526809692383
    5. ')>=' → logprob: -12.475526809692383
    6. ' ' → logprob: -12.725526809692383
    7. ']>=' → logprob: -12.850526809692383
    8. '>' → logprob: -13.850526809692383
    9. '≥' → logprob: -14.100526809692383
    10. ')' → logprob: -14.475526809692383

Token 285: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '```' → logprob: -18.004077911376953
    4. '   ' → logprob: -18.254077911376953
    5. '٦' → logprob: -18.941577911376953
    6. '۶' → logprob: -19.004077911376953
    7. '' → logprob: -19.254077911376953
    8. '६' → logprob: -19.691577911376953
    9. ' ' → logprob: -19.941577911376953
    10. '৬' → logprob: -20.004077911376953

Token 286: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '٦' → logprob: -18.375019073486328
    4. '۶' → logprob: -18.437519073486328
    5. '```' → logprob: -18.500019073486328
    6. '६' → logprob: -18.812519073486328
    7. '৬' → logprob: -19.062519073486328
    8. '６' → logprob: -19.250019073486328
    9. '06' → logprob: -19.750019073486328
    10. '' → logprob: -19.937519073486328

Token 287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1002776175737381
    2. ':
' → logprob: -2.3502776622772217
    3. '   ' → logprob: -9.7252779006958
    4. ' :' → logprob: -12.4752779006958
    5. ' :
' → logprob: -12.4752779006958
    6. ':
' → logprob: -13.3502779006958
    7. 'print' → logprob: -14.1002779006958
    8. '):
' → logprob: -14.4752779006958
    9. ':

' → logprob: -15.1002779006958
    10. '):' → logprob: -15.8502779006958

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012536262162029743
    2. 'print' → logprob: -4.38753604888916
    3. ' print' → logprob: -11.01253604888916
    4. '```' → logprob: -11.88753604888916
    5. '   ' → logprob: -13.01253604888916
    6. '       ' → logprob: -14.63753604888916
    7. '  ' → logprob: -16.137537002563477
    8. '	print' → logprob: -16.262537002563477
    9. '    
' → logprob: -16.387537002563477
    10. '``' → logprob: -17.012537002563477

Token 289: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018426524475216866
    2. '   ' → logprob: -4.018426418304443
    3. ' print' → logprob: -8.393426895141602
    4. 'if' → logprob: -11.268426895141602
    5. 'A' → logprob: -11.393426895141602
    6. 'B' → logprob: -12.018426895141602
    7. '```' → logprob: -12.768426895141602
    8. 'C' → logprob: -13.018426895141602
    9. 'for' → logprob: -13.143426895141602
    10. ' ' → logprob: -13.268426895141602

Token 290: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003820524725597352
    2. '   ' → logprob: -8.625382423400879
    3. ' print' → logprob: -9.375382423400879
    4. 'if' → logprob: -9.750382423400879
    5. 'A' → logprob: -10.625382423400879
    6. 'B' → logprob: -11.125382423400879
    7. 'C' → logprob: -12.250382423400879
    8. 'result' → logprob: -12.625382423400879
    9. '#' → logprob: -13.125382423400879
    10. '7' → logprob: -13.625382423400879

Token 291: ' cette' (ID: 7696)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03426402434706688
    2. 'A' → logprob: -4.284264087677002
    3. ' print' → logprob: -4.284264087677002
    4. 'B' → logprob: -5.534264087677002
    5. '   ' → logprob: -6.659264087677002
    6. ' A' → logprob: -7.534264087677002
    7. ' B' → logprob: -8.409263610839844
    8. '12' → logprob: -11.159263610839844
    9. '10' → logprob: -11.284263610839844
    10. '7' → logprob: -11.409263610839844

Token 292: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9246013164520264
    2. ':' → logprob: -1.5496013164520264
    3. ' condition' → logprob: -2.1746013164520264
    4. 'A' → logprob: -2.2996013164520264
    5. 'condition' → logprob: -2.5496013164520264
    6. '   ' → logprob: -3.9246013164520264
    7. 'val' → logprob: -4.1746015548706055
    8. ' A' → logprob: -4.5496015548706055
    9. ' print' → logprob: -4.6746015548706055
    10. 'B' → logprob: -4.7996015548706055

Token 293: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024981046095490456
    2. '   ' → logprob: -3.8999810218811035
    3. ' est' → logprob: -6.1499810218811035
    4. ' :' → logprob: -7.5249810218811035
    5. 'print' → logprob: -7.6499810218811035
    6. ':
' → logprob: -7.6499810218811035
    7. 'est' → logprob: -7.6499810218811035
    8. ' print' → logprob: -9.399981498718262
    9. ' is' → logprob: -9.524981498718262
    10. '==' → logprob: -11.024981498718262

Token 294: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.18665388226509094
    2. 'v' → logprob: -1.8116538524627686
    3. 'V' → logprob: -6.061654090881348
    4. ' True' → logprob: -6.061654090881348
    5. 'true' → logprob: -6.811654090881348
    6. ' vraie' → logprob: -6.936654090881348
    7. '   ' → logprob: -9.436654090881348
    8. ' vra' → logprob: -10.936654090881348
    9. ' vrai' → logprob: -11.436654090881348
    10. 'vé' → logprob: -11.811654090881348

Token 295: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11122642457485199
    2. ':' → logprob: -2.4862263202667236
    3. 'print' → logprob: -4.361226558685303
    4. '       ' → logprob: -5.361226558685303
    5. ' print' → logprob: -6.111226558685303
    6. ':
' → logprob: -6.486226558685303
    7. ',' → logprob: -7.986226558685303
    8. '):' → logprob: -9.486226081848145
    9. ' :' → logprob: -9.861226081848145
    10. '    ' → logprob: -10.111226081848145

Token 296: 'c' (ID: 66)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2738198935985565
    2. 'A' → logprob: -1.898819923400879
    3. '   ' → logprob: -3.273819923400879
    4. 'B' → logprob: -3.398819923400879
    5. ' print' → logprob: -4.273819923400879
    6. ' A' → logprob: -5.773819923400879
    7. ' B' → logprob: -6.898819923400879
    8. 'C' → logprob: -9.273819923400879
    9. ',' → logprob: -9.523819923400879
    10. '#' → logprob: -9.773819923400879

Token 297: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051756352186203
    2. 'print' → logprob: -3.8017563819885254
    3. ' print' → logprob: -4.176756381988525
    4. '#' → logprob: -6.051756381988525
    5. ')' → logprob: -6.051756381988525
    6. '    ' → logprob: -6.676756381988525
    7. ':' → logprob: -6.926756381988525
    8. ' est' → logprob: -7.426756381988525
    9. 'e' → logprob: -7.426756381988525
    10. ''' → logprob: -7.551756381988525

Token 298: '-à' (ID: 56297)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1541457176208496
    2. 'que' → logprob: -1.1541457176208496
    3. 'le' → logprob: -1.9041457176208496
    4. ' que' → logprob: -2.7791457176208496
    5. 'la' → logprob: -3.0291457176208496
    6. ' vrai' → logprob: -3.9041457176208496
    7. 'à' → logprob: -4.15414571762085
    8. 'exact' → logprob: -4.27914571762085
    9. 'B' → logprob: -4.77914571762085
    10. '   ' → logprob: -4.90414571762085

Token 299: '-dire' (ID: 76064)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38025927543640137
    2. 'True' → logprob: -2.1302592754364014
    3. 'true' → logprob: -2.8802592754364014
    4. 'la' → logprob: -3.5052592754364014
    5. ' vrai' → logprob: -4.0052595138549805
    6. 'à' → logprob: -4.2552595138549805
    7. 'B' → logprob: -4.3802595138549805
    8. 'l' → logprob: -4.7552595138549805
    9. '6' → logprob: -4.8802595138549805
    10. '   ' → logprob: -5.0052595138549805

Token 300: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9442564249038696
    2. '   ' → logprob: -1.0692564249038696
    3. ' que' → logprob: -2.06925630569458
    4. 'B' → logprob: -2.69425630569458
    5. 'que' → logprob: -3.44425630569458
    6. ' A' → logprob: -4.31925630569458
    7. ' B' → logprob: -4.69425630569458
    8. 'print' → logprob: -5.06925630569458
    9. ',' → logprob: -5.19425630569458
    10. 'le' → logprob: -6.44425630569458

Token 301: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5032304525375366
    2. ' <' → logprob: -2.628230571746826
    3. ' <=' → logprob: -2.878230571746826
    4. '*' → logprob: -2.878230571746826
    5. '>=' → logprob: -2.878230571746826
    6. '%' → logprob: -3.253230571746826
    7. '   ' → logprob: -3.378230571746826
    8. '<' → logprob: -3.753230571746826
    9. ' %' → logprob: -4.128230571746826
    10. ' >' → logprob: -4.628230571746826

Token 302: ' compris' (ID: 49173)
  Prédit: ' compris'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compris' → logprob: -0.4861283004283905
    2. 'between' → logprob: -2.111128330230713
    3. 'dans' → logprob: -2.236128330230713
    4. ' entre' → logprob: -2.736128330230713
    5. ' between' → logprob: -3.486128330230713
    6. 'inf' → logprob: -4.361128330230713
    7. 'entre' → logprob: -4.736128330230713
    8. ' dans' → logprob: -4.861128330230713
    9. '6' → logprob: -4.986128330230713
    10. 'au' → logprob: -5.361128330230713

Token 303: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.22402912378311157
    2. 'entre' → logprob: -1.7240290641784668
    3. 'between' → logprob: -4.224029064178467
    4. ' between' → logprob: -4.974029064178467
    5. 'Entre' → logprob: -7.724029064178467
    6. 'dans' → logprob: -9.724029541015625
    7. '   ' → logprob: -9.849029541015625
    8. ' между' → logprob: -9.974029541015625
    9. ''entre' → logprob: -10.099029541015625
    10. '    ' → logprob: -10.724029541015625

Token 304: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.012539439834654331
    2. ' ' → logprob: -4.387539386749268
    3. '7' → logprob: -11.012539863586426
    4. '   ' → logprob: -13.012539863586426
    5. '12' → logprob: -13.137539863586426
    6. ' six' → logprob: -13.137539863586426
    7. '9' → logprob: -13.887539863586426
    8. '    ' → logprob: -14.075039863586426
    9. ',' → logprob: -14.137539863586426
    10. '  ' → logprob: -14.262539863586426

Token 305: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00030686063109897077
    2. '12' → logprob: -8.125307083129883
    3. ' ' → logprob: -11.500307083129883
    4. '1' → logprob: -15.375307083129883
    5. '9' → logprob: -16.500307083129883
    6. '7' → logprob: -16.625307083129883
    7. 'six' → logprob: -16.687807083129883
    8. '```' → logprob: -16.687807083129883
    9. '   ' → logprob: -17.312807083129883
    10. '11' → logprob: -17.375307083129883

Token 306: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.018003368750214577
    2. ' et' → logprob: -4.768003463745117
    3. 'and' → logprob: -5.268003463745117
    4. 'inclusive' → logprob: -6.518003463745117
    5. ' and' → logprob: -6.643003463745117
    6. '   ' → logprob: -7.393003463745117
    7. ' inclus' → logprob: -7.893003463745117
    8. ')' → logprob: -8.268003463745117
    9. '```' → logprob: -10.518003463745117
    10. '(in' → logprob: -10.518003463745117

Token 307: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.004099773708730936
    2. ' ' → logprob: -5.5040998458862305
    3. '11' → logprob: -11.00409984588623
    4. '1' → logprob: -13.56659984588623
    5. '10' → logprob: -14.62909984588623
    6. '2' → logprob: -14.87909984588623
    7. '   ' → logprob: -14.94159984588623
    8. ' ' → logprob: -15.25409984588623
    9. '```' → logprob: -15.31659984588623
    10. '۱۲' → logprob: -15.69159984588623

Token 308: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -6.587483221665025e-05
    2. '11' → logprob: -10.125065803527832
    3. ' ' → logprob: -10.625065803527832
    4. '1' → logprob: -14.812565803527832
    5. '2' → logprob: -15.125065803527832
    6. '10' → logprob: -15.562565803527832
    7. '9' → logprob: -16.00006675720215
    8. '13' → logprob: -16.25006675720215
    9. '```' → logprob: -16.31256675720215
    10. '
' → logprob: -16.68756675720215

Token 309: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7499797940254211
    2. '),' → logprob: -0.7499797940254211
    3. ' ),' → logprob: -3.9999797344207764
    4. '):
' → logprob: -3.9999797344207764
    5. '):' → logprob: -4.8749799728393555
    6. ',' → logprob: -5.2499799728393555
    7. ')' → logprob: -5.6249799728393555
    8. ' ):
' → logprob: -7.7499799728393555
    9. '    ' → logprob: -8.249979972839355
    10. ' )' → logprob: -8.499979972839355

Token 310: ' born' (ID: 12275)
  Prédit: ' inclus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inclus' → logprob: -0.9889345765113831
    2. '   ' → logprob: -1.1139345169067383
    3. 'inclusive' → logprob: -1.8639345169067383
    4. ' inclusive' → logprob: -2.6139345169067383
    5. ')' → logprob: -3.2389345169067383
    6. ')
' → logprob: -4.113934516906738
    7. '):
' → logprob: -5.488934516906738
    8. 'in' → logprob: -5.613934516906738
    9. '),' → logprob: -6.238934516906738
    10. 'y' → logprob: -6.988934516906738

Token 311: 'es' (ID: 268)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4998638331890106
    2. 'ées' → logprob: -1.124863862991333
    3. 'é' → logprob: -3.249863862991333
    4. 'es' → logprob: -3.874863862991333
    5. 'ed' → logprob: -6.249863624572754
    6. '6' → logprob: -6.374863624572754
    7. 'és' → logprob: -6.374863624572754
    8. 'ees' → logprob: -6.499863624572754
    9. 'e' → logprob: -7.249863624572754
    10. '#' → logprob: -8.124863624572754

Token 312: ' inclus' (ID: 11891)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1631157100200653
    2. ' inclus' → logprob: -2.1631157398223877
    3. 'inclusive' → logprob: -3.7881157398223877
    4. '   ' → logprob: -5.288115501403809
    5. ')' → logprob: -5.538115501403809
    6. 'incl' → logprob: -6.038115501403809
    7. 'included' → logprob: -7.413115501403809
    8. '(in' → logprob: -7.913115501403809
    9. 'inc' → logprob: -8.788115501403809
    10. 'clus' → logprob: -9.913115501403809

Token 313: 'es' (ID: 268)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.779958963394165
    2. '):' → logprob: -1.404958963394165
    3. 'es' → logprob: -1.529958963394165
    4. ')' → logprob: -2.904958963394165
    5. '):
' → logprob: -4.029958724975586
    6. '):

' → logprob: -5.279958724975586
    7. '   ' → logprob: -7.029958724975586
    8. 'e' → logprob: -7.529958724975586
    9. ')
' → logprob: -9.029958724975586
    10. ' ),' → logprob: -9.404958724975586

Token 314: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17335528135299683
    2. '),' → logprob: -2.7983553409576416
    3. '):' → logprob: -3.0483553409576416
    4. '):
' → logprob: -3.0483553409576416
    5. ')' → logprob: -6.2983551025390625
    6. 'print' → logprob: -7.1733551025390625
    7. ' print' → logprob: -8.798355102539062
    8. '):

' → logprob: -8.923355102539062
    9. ':' → logprob: -9.173355102539062
    10. ')
' → logprob: -9.423355102539062

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42920437455177307
    2. 'print' → logprob: -1.0542043447494507
    3. ' print' → logprob: -7.80420446395874
    4. 'if' → logprob: -10.929203987121582
    5. '   ' → logprob: -11.054203987121582
    6. '```' → logprob: -11.179203987121582
    7. '       ' → logprob: -12.054203987121582
    8. '  ' → logprob: -12.179203987121582
    9. '    
' → logprob: -12.304203987121582
    10. '	print' → logprob: -12.304203987121582

Token 316: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020858801901340485
    2. '   ' → logprob: -3.8958587646484375
    3. ' print' → logprob: -8.645858764648438
    4. '
' → logprob: -9.520858764648438
    5. 'if' → logprob: -10.895858764648438
    6. '    
' → logprob: -11.395858764648438
    7. '```' → logprob: -11.645858764648438
    8. 'A' → logprob: -12.020858764648438
    9. 'for' → logprob: -12.895858764648438
    10. 'pr' → logprob: -13.145858764648438

Token 317: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005898103583604097
    2. '   ' → logprob: -5.2558979988098145
    3. '
' → logprob: -7.7558979988098145
    4. ' print' → logprob: -8.755898475646973
    5. 'if' → logprob: -10.505898475646973
    6. '    
' → logprob: -11.505898475646973
    7. '#' → logprob: -11.505898475646973
    8. 'A' → logprob: -11.505898475646973
    9. 'B' → logprob: -12.880898475646973
    10. 'result' → logprob: -13.255898475646973

Token 318: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00231891474686563
    2. ' print' → logprob: -6.127318859100342
    3. '   ' → logprob: -9.8773193359375
    4. ' ' → logprob: -11.3773193359375
    5. 'for' → logprob: -11.8773193359375
    6. 'printf' → logprob: -12.0023193359375
    7. '```' → logprob: -12.1273193359375
    8. ':' → logprob: -12.2523193359375
    9. '#' → logprob: -12.3148193359375
    10. 'pr' → logprob: -12.3773193359375

Token 319: ' la' (ID: 557)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.10071156173944473
    2. '(B' → logprob: -2.9757115840911865
    3. 'A' → logprob: -3.3507115840911865
    4. '(' → logprob: -5.350711345672607
    5. 'print' → logprob: -6.225711345672607
    6. 'B' → logprob: -6.725711345672607
    7. '((' → logprob: -7.600711345672607
    8. '("' → logprob: -9.100711822509766
    9. '()' → logprob: -9.225711822509766
    10. '(abs' → logprob: -9.225711822509766

Token 320: ' moitié' (ID: 93216)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.039183855056762695
    2. 'B' → logprob: -4.039183616638184
    3. 'print' → logprob: -4.289183616638184
    4. '(A' → logprob: -5.914183616638184
    5. ' A' → logprob: -6.414183616638184
    6. 'max' → logprob: -8.039183616638184
    7. '"A' → logprob: -8.039183616638184
    8. '0' → logprob: -8.164183616638184
    9. '2' → logprob: -8.539183616638184
    10. 'min' → logprob: -8.539183616638184

Token 321: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7048553228378296
    2. '(B' → logprob: -1.0798553228378296
    3. 'de' → logprob: -2.579855442047119
    4. '(' → logprob: -2.954855442047119
    5. '()' → logprob: -3.829855442047119
    6. ' (' → logprob: -4.954855442047119
    7. '(A' → logprob: -5.704855442047119
    8. '   ' → logprob: -6.329855442047119
    9. 'print' → logprob: -6.329855442047119
    10. ')' → logprob: -7.204855442047119

Token 322: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.010214623063802719
    2. ' B' → logprob: -4.635214805603027
    3. 'A' → logprob: -8.135214805603027
    4. '(B' → logprob: -8.885214805603027
    5. ' (' → logprob: -11.260214805603027
    6. ' A' → logprob: -12.260214805603027
    7. '(A' → logprob: -12.635214805603027
    8. 'print' → logprob: -12.760214805603027
    9. '(' → logprob: -12.885214805603027
    10. ' ' → logprob: -15.635214805603027

Token 323: ' valeur' (ID: 41664)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014162804931402206
    2. 'A' → logprob: -4.639163017272949
    3. ' B' → logprob: -5.764163017272949
    4. '(B' → logprob: -7.389163017272949
    5. 'print' → logprob: -8.51416301727295
    6. ' (' → logprob: -8.51416301727295
    7. '(A' → logprob: -9.01416301727295
    8. ' A' → logprob: -9.63916301727295
    9. '(' → logprob: -10.13916301727295
    10. ' print' → logprob: -11.63916301727295

Token 324: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1388624906539917
    2. ' B' → logprob: -2.2638626098632812
    3. ' de' → logprob: -3.8888626098632812
    4. ' (' → logprob: -6.388862609863281
    5. '(B' → logprob: -6.513862609863281
    6. 'de' → logprob: -6.888862609863281
    7. '   ' → logprob: -8.138862609863281
    8. 'A' → logprob: -8.263862609863281
    9. '(' → logprob: -8.388862609863281
    10. ' of' → logprob: -9.388862609863281

Token 325: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32946905493736267
    2. '   ' → logprob: -1.454469084739685
    3. ' print' → logprob: -3.3294689655303955
    4. ',' → logprob: -5.329469203948975
    5. '//' → logprob: -6.079469203948975
    6. ' //' → logprob: -6.079469203948975
    7. '(print' → logprob: -7.829469203948975
    8. ')' → logprob: -8.204468727111816
    9. '(' → logprob: -8.329468727111816
    10. ' (' → logprob: -8.579468727111816

Token 326: ' en' (ID: 469)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.8011849522590637
    2. 'print' → logprob: -1.426184892654419
    3. ' print' → logprob: -1.676184892654419
    4. 'B' → logprob: -2.426184892654419
    5. '   ' → logprob: -3.926184892654419
    6. 'end' → logprob: -5.176185131072998
    7. ')' → logprob: -6.676185131072998
    8. ' ' → logprob: -6.801185131072998
    9. '    ' → logprob: -6.801185131072998
    10. ' end' → logprob: -7.176185131072998

Token 327: ' utilisant' (ID: 92474)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03498326614499092
    2. 'end' → logprob: -4.409983158111572
    3. 'B' → logprob: -5.034983158111572
    4. ' print' → logprob: -5.534983158111572
    5. '//' → logprob: -5.659983158111572
    6. '2' → logprob: -5.909983158111572
    7. ' B' → logprob: -6.659983158111572
    8. ' /' → logprob: -7.284983158111572
    9. ' end' → logprob: -7.284983158111572
    10. 'A' → logprob: -7.284983158111572

Token 328: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5073769688606262
    2. ' B' → logprob: -1.6323769092559814
    3. 'B' → logprob: -1.8823769092559814
    4. ' print' → logprob: -3.0073769092559814
    5. 'int' → logprob: -8.007376670837402
    6. ' (' → logprob: -9.132376670837402
    7. '(B' → logprob: -9.132376670837402
    8. ' ' → logprob: -9.507376670837402
    9. ' int' → logprob: -9.757376670837402
    10. '   ' → logprob: -10.257376670837402

Token 329: ' division' (ID: 21629)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10891280323266983
    2. '//' → logprob: -2.733912706375122
    3. '/' → logprob: -3.733912706375122
    4. ' print' → logprob: -4.858912944793701
    5. 'B' → logprob: -6.358912944793701
    6. ' /' → logprob: -6.358912944793701
    7. '/B' → logprob: -7.108912944793701
    8. ' //' → logprob: -7.108912944793701
    9. ' B' → logprob: -7.858912944793701
    10. 'int' → logprob: -8.983912467956543

Token 330: ' entière' (ID: 61583)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.7535226345062256
    2. '/' → logprob: -0.8785226345062256
    3. 'print' → logprob: -3.0035226345062256
    4. 'B' → logprob: -3.5035226345062256
    5. ' print' → logprob: -5.003522872924805
    6. ',' → logprob: -5.003522872924805
    7. ' B' → logprob: -5.253522872924805
    8. ' //' → logprob: -5.753522872924805
    9. ')' → logprob: -5.753522872924805
    10. '/B' → logprob: -5.878522872924805

Token 331: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9373359680175781
    2. '(B' → logprob: -1.6873359680175781
    3. 'B' → logprob: -1.9373359680175781
    4. '   ' → logprob: -2.562335968017578
    5. ' (' → logprob: -2.937335968017578
    6. '//' → logprob: -3.187335968017578
    7. ' //' → logprob: -3.312335968017578
    8. ' B' → logprob: -3.687335968017578
    9. ',' → logprob: -4.062335968017578
    10. '(' → logprob: -4.562335968017578

Token 332: '//' (ID: 393)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25353899598121643
    2. ' B' → logprob: -1.503538966178894
    3. ')' → logprob: -7.503539085388184
    4. '//' → logprob: -7.878539085388184
    5. 'print' → logprob: -8.128539085388184
    6. ' //' → logprob: -8.628539085388184
    7. ' )' → logprob: -9.128539085388184
    8. 'b' → logprob: -10.753539085388184
    9. ' print' → logprob: -11.003539085388184
    10. ' ' → logprob: -11.003539085388184

Token 333: ')
' (ID: 446)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2779325246810913
    2. ' ' → logprob: -1.9029325246810913
    3. ')' → logprob: -2.402932643890381
    4. ' B' → logprob: -6.527932643890381
    5. ' )' → logprob: -7.277932643890381
    6. 'B' → logprob: -7.402932643890381
    7. '   ' → logprob: -8.652932167053223
    8. ').' → logprob: -10.777932167053223
    9. '),' → logprob: -11.277932167053223
    10. '  ' → logprob: -11.402932167053223

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008035274222493172
    2. 'print' → logprob: -4.883035182952881
    3. ' print' → logprob: -7.758035182952881
    4. '```' → logprob: -13.883035659790039
    5. '   ' → logprob: -15.133035659790039
    6. '       ' → logprob: -15.258035659790039
    7. '  ' → logprob: -16.75803565979004
    8. '	print' → logprob: -17.00803565979004
    9. '    ' → logprob: -17.25803565979004
    10. '
' → logprob: -17.25803565979004

Token 335: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32829025387763977
    2. '   ' → logprob: -1.4532902240753174
    3. ' print' → logprob: -3.0782902240753174
    4. '	print' → logprob: -13.078289985656738
    5. '  ' → logprob: -13.453289985656738
    6. ' ' → logprob: -13.453289985656738
    7. '       ' → logprob: -14.078289985656738
    8. '```' → logprob: -14.328289985656738
    9. '    
' → logprob: -14.453289985656738
    10. '   ' → logprob: -14.828289985656738

Token 336: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07208067178726196
    2. ' print' → logprob: -2.947080612182617
    3. '   ' → logprob: -4.072080612182617
    4. '  ' → logprob: -12.697080612182617
    5. ' ' → logprob: -12.947080612182617
    6. '	print' → logprob: -13.447080612182617
    7. '
' → logprob: -14.447080612182617
    8. '```' → logprob: -14.447080612182617
    9. '    ' → logprob: -14.822080612182617
    10. '       ' → logprob: -15.072080612182617

Token 337: ' division' (ID: 21629)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34879520535469055
    2. ' print' → logprob: -1.2237951755523682
    3. ' ' → logprob: -9.223794937133789
    4. ' half' → logprob: -9.348794937133789
    5. 'half' → logprob: -10.348794937133789
    6. ' B' → logprob: -10.973794937133789
    7. ' )' → logprob: -11.098794937133789
    8. ')' → logprob: -11.348794937133789
    9. ' moitié' → logprob: -11.473794937133789
    10. 'space' → logprob: -11.598794937133789

Token 338: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.2732528746128082
    2. 'B' → logprob: -2.0232529640197754
    3. 'ent' → logprob: -3.5232529640197754
    4. 'int' → logprob: -4.273252964019775
    5. 'inte' → logprob: -4.648252964019775
    6. '//' → logprob: -4.773252964019775
    7. ' B' → logprob: -4.773252964019775
    8. 'integer' → logprob: -4.898252964019775
    9. 'print' → logprob: -5.023252964019775
    10. 'b' → logprob: -5.773252964019775

Token 339: ' retourne' (ID: 178818)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -1.4257056713104248
    2. ' garantit' → logprob: -1.6757056713104248
    3. ' de' → logprob: -2.425705671310425
    4. '<|end|>' → logprob: -2.675705671310425
    5. 'print' → logprob: -2.925705671310425
    6. 'B' → logprob: -2.925705671310425
    7. ' assure' → logprob: -3.050705671310425
    8. ' ren' → logprob: -3.675705671310425
    9. ' B' → logprob: -3.675705671310425
    10. ' retourne' → logprob: -3.675705671310425

Token 340: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3679681122303009
    2. 'B' → logprob: -1.9929680824279785
    3. 'la' → logprob: -2.4929680824279785
    4. ' B' → logprob: -3.3679680824279785
    5. ' le' → logprob: -3.4929680824279785
    6. ' l' → logprob: -4.4929680824279785
    7. 'le' → logprob: -5.3679680824279785
    8. 'l' → logprob: -5.7429680824279785
    9. ' une' → logprob: -6.4929680824279785
    10. ' un' → logprob: -6.7429680824279785

Token 341: ' quotient' (ID: 169302)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.7411215901374817
    2. 'nombre' → logprob: -1.116121530532837
    3. 'rés' → logprob: -1.866121530532837
    4. 'result' → logprob: -4.366121768951416
    5. ' résultat' → logprob: -4.366121768951416
    6. ' quotient' → logprob: -4.741121768951416
    7. ' nombre' → logprob: -5.241121768951416
    8. 'B' → logprob: -7.866121768951416
    9. 'part' → logprob: -7.866121768951416
    10. ' result' → logprob: -8.991121292114258

Token 342: ' sans' (ID: 9828)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5280793309211731
    2. 'B' → logprob: -0.9030793309211731
    3. ' de' → logprob: -5.528079509735107
    4. '   ' → logprob: -7.653079509735107
    5. ' (' → logprob: -8.40307903289795
    6. 'de' → logprob: -9.40307903289795
    7. '(B' → logprob: -10.02807903289795
    8. ',' → logprob: -10.40307903289795
    9. ' of' → logprob: -10.77807903289795
    10. 'b' → logprob: -11.15307903289795

Token 343: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3364722430706024
    2. 'la' → logprob: -1.3364722728729248
    3. ' partie' → logprob: -4.586472034454346
    4. 'le' → logprob: -5.211472034454346
    5. ' reste' → logprob: -6.086472034454346
    6. 'reste' → logprob: -6.461472034454346
    7. ' le' → logprob: -7.086472034454346
    8. 'part' → logprob: -7.211472034454346
    9. ' remainder' → logprob: -7.211472034454346
    10. ' ' → logprob: -7.836472034454346

Token 344: ' déc' (ID: 8498)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -1.1586625576019287
    2. ' déc' → logprob: -1.5336625576019287
    3. 'part' → logprob: -2.2836625576019287
    4. 'rest' → logprob: -2.4086625576019287
    5. 'd' → logprob: -2.6586625576019287
    6. ' reste' → logprob: -3.2836625576019287
    7. ' ' → logprob: -3.4086625576019287
    8. ' ' → logprob: -3.4086625576019287
    9. 'decimal' → logprob: -4.033662796020508
    10. ' partie' → logprob: -4.033662796020508

Token 345: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.002372319810092449
    2. 'imal' → logprob: -6.6273722648620605
    3. 'imals' → logprob: -7.0023722648620605
    4. 'imes' → logprob: -10.127372741699219
    5. '```' → logprob: -11.002372741699219
    6. 'imas' → logprob: -11.127372741699219
    7. '%' → logprob: -11.627372741699219
    8. 'ima' → logprob: -11.752372741699219
    9. 'c' → logprob: -11.877372741699219
    10. 'imali' → logprob: -12.002372741699219

Token 346: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.027001850306987762
    2. 'aux' → logprob: -4.652001857757568
    3. 'ur' → logprob: -4.777001857757568
    4. 'res' → logprob: -6.152001857757568
    5. 'urs' → logprob: -6.527001857757568
    6. 'als' → logprob: -6.777001857757568
    7. 'ures' → logprob: -7.152001857757568
    8. 'es' → logprob: -7.402001857757568
    9. 'al' → logprob: -7.527001857757568
    10. 'ale' → logprob: -7.902001857757568

Token 347: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17184939980506897
    2. 'print' → logprob: -2.421849489212036
    3. ' print' → logprob: -2.671849489212036
    4. ',' → logprob: -12.546849250793457
    5. '```' → logprob: -12.546849250793457
    6. '	print' → logprob: -13.796849250793457
    7. '(print' → logprob: -14.046849250793457
    8. '.print' → logprob: -14.171849250793457
    9. ' (' → logprob: -14.171849250793457
    10. '   ' → logprob: -14.296849250793457

Token 348: 'part' (ID: 5815)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.9691869020462036
    2. ')' → logprob: -1.0941869020462036
    3. 'B' → logprob: -1.7191869020462036
    4. ' )' → logprob: -2.719186782836914
    5. '2' → logprob: -4.344186782836914
    6. '1' → logprob: -4.719186782836914
    7. 'print' → logprob: -5.094186782836914
    8. ' print' → logprob: -6.469186782836914
    9. 'A' → logprob: -6.719186782836914
    10. 'b' → logprob: -6.719186782836914

Token 349: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.900497555732727
    2. 'e' → logprob: -1.150497555732727
    3. 'ent' → logprob: -3.1504974365234375
    4. 'age' → logprob: -3.2754974365234375
    5. ' entière' → logprob: -3.4004974365234375
    6. '   ' → logprob: -3.7754974365234375
    7. 's' → logprob: -4.0254974365234375
    8. 'ies' → logprob: -4.0254974365234375
    9. 'es' → logprob: -4.4004974365234375
    10. '```' → logprob: -4.4004974365234375

Token 350: ' entière' (ID: 61583)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6254340410232544
    2. ' ent' → logprob: -1.0004340410232544
    3. ' entière' → logprob: -2.375433921813965
    4. 'enti' → logprob: -6.000433921813965
    5. '	ent' → logprob: -7.750433921813965
    6. ' ' → logprob: -8.000433921813965
    7. '_ent' → logprob: -8.250433921813965
    8. '   ' → logprob: -8.500433921813965
    9. '(ent' → logprob: -9.000433921813965
    10. ')' → logprob: -9.500433921813965

Token 351: ' seulement' (ID: 32072)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004110696725547314
    2. ' )' → logprob: -5.879110813140869
    3. ').' → logprob: -7.004110813140869
    4. 'de' → logprob: -10.004110336303711
    5. ' de' → logprob: -10.004110336303711
    6. ')`' → logprob: -10.004110336303711
    7. ' restantes' → logprob: -11.004110336303711
    8. '),' → logprob: -11.004110336303711
    9. 'rest' → logprob: -11.129110336303711
    10. 'B' → logprob: -11.254110336303711

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15891632437705994
    2. '   ' → logprob: -2.1589162349700928
    3. ')
' → logprob: -3.6589162349700928
    4. 'print' → logprob: -5.533916473388672
    5. ' de' → logprob: -7.658916473388672
    6. 'B' → logprob: -8.408916473388672
    7. ').' → logprob: -8.783916473388672
    8. ',' → logprob: -9.033916473388672
    9. ' print' → logprob: -9.033916473388672
    10. ' )' → logprob: -9.033916473388672

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005051471292972565
    2. 'print' → logprob: -5.380051612854004
    3. ' print' → logprob: -7.755051612854004
    4. '       ' → logprob: -13.880051612854004
    5. '```' → logprob: -14.005051612854004
    6. '   ' → logprob: -14.505051612854004
    7. '	print' → logprob: -16.380050659179688
    8. '  ' → logprob: -16.755050659179688
    9. '    ' → logprob: -17.255050659179688
    10. ' ' → logprob: -17.505050659179688

Token 354: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.44113555550575256
    2. '   ' → logprob: -1.1911355257034302
    3. ' print' → logprob: -2.9411356449127197
    4. '       ' → logprob: -12.06613540649414
    5. '	print' → logprob: -13.31613540649414
    6. ' ' → logprob: -13.81613540649414
    7. '    ' → logprob: -13.94113540649414
    8. '   ' → logprob: -13.94113540649414
    9. '  ' → logprob: -14.06613540649414
    10. '```' → logprob: -14.31613540649414

Token 355: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.22636832296848297
    2. '(' → logprob: -1.6013683080673218
    3. ' (' → logprob: -7.101368427276611
    4. ' B' → logprob: -9.476367950439453
    5. 'B' → logprob: -10.101367950439453
    6. '((' → logprob: -12.226367950439453
    7. '(b' → logprob: -12.726367950439453
    8. '()' → logprob: -12.976367950439453
    9. ' ' → logprob: -13.976367950439453
    10. ')' → logprob: -14.101367950439453

Token 356: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1003180593252182
    2. '//' → logprob: -2.35031795501709
    3. ')' → logprob: -9.22531795501709
    4. ')//' → logprob: -11.85031795501709
    5. ' ' → logprob: -12.85031795501709
    6. '   ' → logprob: -13.60031795501709
    7. ' ' → logprob: -13.85031795501709
    8. ' )' → logprob: -14.60031795501709
    9. ' //
' → logprob: -15.85031795501709
    10. '"' → logprob: -16.475318908691406

Token 357: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '3' → logprob: -14.625012397766113
    4. '   ' → logprob: -16.875011444091797
    5. '```' → logprob: -17.125011444091797
    6. '1' → logprob: -17.250011444091797
    7. '4' → logprob: -17.375011444091797
    8. ')' → logprob: -17.562511444091797
    9. '２' → logprob: -18.875011444091797
    10. '12' → logprob: -18.875011444091797

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.625012397766113
    3. '3' → logprob: -12.750012397766113
    4. '4' → logprob: -14.750012397766113
    5. '1' → logprob: -16.00001335144043
    6. '   ' → logprob: -17.18751335144043
    7. '6' → logprob: -17.50001335144043
    8. '12' → logprob: -17.50001335144043
    9. '```' → logprob: -17.75001335144043
    10. '10' → logprob: -18.18751335144043

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005532711511477828
    2. ')
' → logprob: -7.500553131103516
    3. ' )' → logprob: -15.875553131103516
    4. ')

' → logprob: -17.250553131103516
    5. ')#' → logprob: -17.375553131103516
    6. 'else' → logprob: -18.000553131103516
    7. '   ' → logprob: -18.000553131103516
    8. '))' → logprob: -18.125553131103516
    9. 'elif' → logprob: -18.500553131103516
    10. ')
' → logprob: -18.750553131103516

Token 360: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004079708829522133
    2. 'elif' → logprob: -5.504079818725586
    3. ' else' → logprob: -13.754079818725586
    4. '```' → logprob: -15.879079818725586
    5. '<|end|>' → logprob: -17.129079818725586
    6. '#else' → logprob: -17.754079818725586
    7. 'elseif' → logprob: -18.629079818725586
    8. '_else' → logprob: -19.379079818725586
    9. '#' → logprob: -19.504079818725586
    10. 'elsif' → logprob: -19.879079818725586

Token 361: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00012356207298580557
    2. 'elif' → logprob: -9.000123977661133
    3. ' else' → logprob: -15.875123977661133
    4. '#' → logprob: -19.500123977661133
    5. '#else' → logprob: -19.750123977661133
    6. '```' → logprob: -19.875123977661133
    7. 'elseif' → logprob: -20.750123977661133
    8. 'elser' → logprob: -22.125123977661133
    9. '_else' → logprob: -22.125123977661133
    10. 'elsif' → logprob: -22.125123977661133

Token 362: ' aucune' (ID: 51173)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00812598131597042
    2. ' A' → logprob: -5.0081257820129395
    3. 'B' → logprob: -7.1331257820129395
    4. '6' → logprob: -8.383126258850098
    5. '12' → logprob: -8.508126258850098
    6. 'else' → logprob: -9.508126258850098
    7. '#' → logprob: -10.758126258850098
    8. '7' → logprob: -10.758126258850098
    9. 'not' → logprob: -11.758126258850098
    10. ' B' → logprob: -11.758126258850098

Token 363: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.074434518814087
    2. ' des' → logprob: -1.199434518814087
    3. 'aut' → logprob: -1.949434518814087
    4. ' autre' → logprob: -2.324434518814087
    5. 'condition' → logprob: -2.574434518814087
    6. '#' → logprob: -3.824434518814087
    7. 'de' → logprob: -4.574434280395508
    8. ' condition' → logprob: -5.449434280395508
    9. 'd' → logprob: -6.324434280395508
    10. 'other' → logprob: -7.574434280395508

Token 364: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.0025907543022185564
    2. 'condition' → logprob: -6.627590656280518
    3. 'cond' → logprob: -7.127590656280518
    4. ' conditions' → logprob: -8.627591133117676
    5. 'de' → logprob: -8.752591133117676
    6. '#' → logprob: -10.127591133117676
    7. '2' → logprob: -10.252591133117676
    8. 'prem' → logprob: -11.127591133117676
    9. 'aut' → logprob: -11.752591133117676
    10. ' deux' → logprob: -12.377591133117676

Token 365: ' précéd' (ID: 55435)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.4700015187263489
    2. ' précéd' → logprob: -1.970001459121704
    3. 'preced' → logprob: -1.970001459121704
    4. 'n' → logprob: -2.845001459121704
    5. 'su' → logprob: -4.720001697540283
    6. ' n' → logprob: -5.220001697540283
    7. 'pré' → logprob: -5.220001697540283
    8. 'elif' → logprob: -5.345001697540283
    9. 's' → logprob: -6.470001697540283
    10. 'if' → logprob: -6.595001697540283

Token 366: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.00015800826076883823
    2. 'ents' → logprob: -9.625158309936523
    3. 'ente' → logprob: -9.875158309936523
    4. 'ent' → logprob: -10.500158309936523
    5. '#' → logprob: -12.125158309936523
    6. 'ENTES' → logprob: -13.375158309936523
    7. 'es' → logprob: -14.000158309936523
    8. '>' → logprob: -14.125158309936523
    9. 'if' → logprob: -14.375158309936523
    10. 'est' → logprob: -14.625158309936523

Token 367: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46878936886787415
    2. 'n' → logprob: -1.2187893390655518
    3. ' n' → logprob: -3.0937893390655518
    4. 'else' → logprob: -3.7187893390655518
    5. 'est' → logprob: -5.343789577484131
    6. ':
' → logprob: -6.468789577484131
    7. ' else' → logprob: -7.343789577484131
    8. '#' → logprob: -7.718789577484131
    9. ':#' → logprob: -8.343789100646973
    10. ' is' → logprob: -8.468789100646973

Token 368: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.1125202476978302
    2. 'est' → logprob: -2.737520217895508
    3. '#' → logprob: -4.612520217895508
    4. 'n' → logprob: -4.737520217895508
    5. 'pas' → logprob: -4.862520217895508
    6. 'elif' → logprob: -4.862520217895508
    7. '’est' → logprob: -6.112520217895508
    8. 'e' → logprob: -6.737520217895508
    9. 'o' → logprob: -6.862520217895508
    10. ''était' → logprob: -7.487520217895508

Token 369: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5894763469696045
    2. 's' → logprob: -1.3394763469696045
    3. 'pas' → logprob: -1.7144763469696045
    4. 'True' → logprob: -6.214476585388184
    5. 'true' → logprob: -6.964476585388184
    6. 'V' → logprob: -8.964476585388184
    7. ' True' → logprob: -9.714476585388184
    8. '#' → logprob: -10.214476585388184
    9. 'valid' → logprob: -10.464476585388184
    10. 'Pas' → logprob: -10.464476585388184

Token 370: ' (' (ID: 350)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011592842638492584
    2. ':' → logprob: -4.511592864990234
    3. ' else' → logprob: -7.636592864990234
    4. ':
' → logprob: -10.136592864990234
    5. 'elif' → logprob: -10.761592864990234
    6. ',' → logprob: -14.011592864990234
    7. '_else' → logprob: -14.761592864990234
    8. 'elses' → logprob: -16.261592864990234
    9. '```' → logprob: -17.136592864990234
    10. 'elser' → logprob: -17.386592864990234

Token 371: 'c' (ID: 66)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25490254163742065
    2. ':' → logprob: -1.5049026012420654
    3. 'A' → logprob: -6.129902362823486
    4. ':
' → logprob: -7.629902362823486
    5. '...' → logprob: -9.629902839660645
    6. ' else' → logprob: -9.879902839660645
    7. 'B' → logprob: -10.379902839660645
    8. 'elif' → logprob: -10.379902839660645
    9. '#' → logprob: -10.629902839660645
    10. ':A' → logprob: -10.879902839660645

Token 372: ''est' (ID: 6616)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0954214483499527
    2. 'elif' → logprob: -2.470421552658081
    3. '#' → logprob: -6.470421314239502
    4. 'e' → logprob: -6.595421314239502
    5. 'o' → logprob: -6.720421314239502
    6. ' else' → logprob: -7.345421314239502
    7. 'a' → logprob: -7.345421314239502
    8. 'els' → logprob: -8.22042179107666
    9. 'one' → logprob: -8.72042179107666
    10. 'on' → logprob: -8.97042179107666

Token 373: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.6421573162078857
    2. 'A' → logprob: -0.8921573162078857
    3. 'à' → logprob: -3.2671573162078857
    4. '#' → logprob: -4.767157554626465
    5. ' à' → logprob: -5.392157554626465
    6. 'else' → logprob: -6.142157554626465
    7. '-' → logprob: -6.642157554626465
    8. '   ' → logprob: -6.767157554626465
    9. '    ' → logprob: -6.767157554626465
    10. ' A' → logprob: -6.892157554626465

Token 374: '-dire' (ID: 76064)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.007750844582915306
    2. '#' → logprob: -5.382750988006592
    3. ' pas' → logprob: -6.882750988006592
    4. '   ' → logprob: -7.007750988006592
    5. '```' → logprob: -7.632750988006592
    6. 'p' → logprob: -8.132750511169434
    7. '_pas' → logprob: -9.632750511169434
    8. '       ' → logprob: -10.007750511169434
    9. 'la' → logprob: -10.757750511169434
    10. 'plus' → logprob: -10.757750511169434

Token 375: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01747870445251465
    2. ' A' → logprob: -4.392478942871094
    3. ' que' → logprob: -5.642478942871094
    4. 'que' → logprob: -6.642478942871094
    5. 'else' → logprob: -10.267478942871094
    6. '6' → logprob: -10.767478942871094
    7. '   ' → logprob: -11.517478942871094
    8. 'if' → logprob: -11.517478942871094
    9. ':' → logprob: -11.767478942871094
    10. ' ' → logprob: -12.267478942871094

Token 376: ' si' (ID: 1784)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0171622633934021
    2. 'else' → logprob: -4.267162322998047
    3. ' A' → logprob: -5.892162322998047
    4. ' else' → logprob: -9.642162322998047
    5. 'True' → logprob: -9.642162322998047
    6. '5' → logprob: -10.267162322998047
    7. '6' → logprob: -10.517162322998047
    8. 'B' → logprob: -11.142162322998047
    9. 'elif' → logprob: -11.142162322998047
    10. 'if' → logprob: -12.767162322998047

Token 377: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00017469677550252527
    2. ' A' → logprob: -8.750174522399902
    3. 'else' → logprob: -12.000174522399902
    4. '5' → logprob: -12.125174522399902
    5. '6' → logprob: -13.125174522399902
    6. 'B' → logprob: -13.250174522399902
    7. '   ' → logprob: -14.500174522399902
    8. ' else' → logprob: -16.75017547607422
    9. '4' → logprob: -17.25017547607422
    10. '0' → logprob: -17.75017547607422

Token 378: ' est' (ID: 893)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10032614320516586
    2. ' <' → logprob: -2.3503260612487793
    3. '<=' → logprob: -9.975326538085938
    4. ' <=' → logprob: -10.725326538085938
    5. '5' → logprob: -10.975326538085938
    6. '3' → logprob: -11.600326538085938
    7. ')' → logprob: -12.350326538085938
    8. '4' → logprob: -12.600326538085938
    9. ' is' → logprob: -12.975326538085938
    10. ' ' → logprob: -13.100326538085938

Token 379: ' inférieur' (ID: 191498)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012648437172174454
    2. '5' → logprob: -4.512648582458496
    3. 'inf' → logprob: -7.512648582458496
    4. ' <' → logprob: -7.887648582458496
    5. 'moins' → logprob: -8.512648582458496
    6. '1' → logprob: -8.887648582458496
    7. ' inférieur' → logprob: -9.012648582458496
    8. '0' → logprob: -9.137648582458496
    9. ' inf' → logprob: -11.012648582458496
    10. ' moins' → logprob: -11.137648582458496

Token 380: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5918111205101013
    2. '6' → logprob: -1.341811180114746
    3. ' to' → logprob: -2.091811180114746
    4. 'à' → logprob: -3.341811180114746
    5. '<' → logprob: -4.716811180114746
    6. 'to' → logprob: -4.716811180114746
    7. '   ' → logprob: -6.216811180114746
    8. '7' → logprob: -6.216811180114746
    9. '5' → logprob: -6.966811180114746
    10. '<|end|>' → logprob: -7.341811180114746

Token 381: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. 'six' → logprob: -17.875123977661133
    4. ' six' → logprob: -18.375123977661133
    5. '٦' → logprob: -18.500123977661133
    6. '```' → logprob: -18.500123977661133
    7. '۶' → logprob: -18.625123977661133
    8. '=' → logprob: -19.500123977661133
    9. '６' → logprob: -19.562623977661133
    10. '   ' → logprob: -19.625123977661133

Token 382: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -18.375001907348633
    4. '0' → logprob: -18.875001907348633
    5. 'six' → logprob: -19.375001907348633
    6. '٦' → logprob: -19.625001907348633
    7. '5' → logprob: -19.750001907348633
    8. '۶' → logprob: -20.000001907348633
    9. '=' → logprob: -20.250001907348633
    10. '1' → logprob: -20.562501907348633

Token 383: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6835930347442627
    2. ':' → logprob: -1.1835930347442627
    3. '):
' → logprob: -1.6835930347442627
    4. ':
' → logprob: -6.183592796325684
    5. '   ' → logprob: -7.058592796325684
    6. ')' → logprob: -7.933592796325684
    7. 'and' → logprob: -12.183592796325684
    8. ',' → logprob: -12.558592796325684
    9. ' ):
' → logprob: -12.558592796325684
    10. ' and' → logprob: -12.683592796325684

Token 384: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005361348390579224
    2. ':' → logprob: -5.255361557006836
    3. ':
' → logprob: -9.380361557006836
    4. 'print' → logprob: -10.755361557006836
    5. ' else' → logprob: -11.380361557006836
    6. 'elif' → logprob: -11.505361557006836
    7. '   ' → logprob: -15.630361557006836
    8. '```' → logprob: -16.255361557006836
    9. '_else' → logprob: -18.130361557006836
    10. ':

' → logprob: -18.505361557006836

Token 385: ' On' (ID: 2160)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1637164789135568e-05
    2. 'print' → logprob: -12.250011444091797
    3. 'elif' → logprob: -12.375011444091797
    4. ' else' → logprob: -12.875011444091797
    5. '```' → logprob: -17.125011444091797
    6. '   ' → logprob: -18.500011444091797
    7. '#else' → logprob: -18.625011444091797
    8. '{
' → logprob: -20.125011444091797
    9. '}else' → logprob: -20.125011444091797
    10. '#' → logprob: -20.125011444091797

Token 386: ' utilise' (ID: 70283)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01831546053290367
    2. 'print' → logprob: -4.018315315246582
    3. ' else' → logprob: -8.893315315246582
    4. 'elif' → logprob: -10.893315315246582
    5. ' print' → logprob: -12.268315315246582
    6. '   ' → logprob: -13.393315315246582
    7. '```' → logprob: -13.393315315246582
    8. ':' → logprob: -13.893315315246582
    9. '#else' → logprob: -16.0183162689209
    10. ':
' → logprob: -16.2683162689209

Token 387: ' '' (ID: 461)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0001733855315251276
    2. 'print' → logprob: -8.750173568725586
    3. ' else' → logprob: -11.125173568725586
    4. '```' → logprob: -16.125173568725586
    5. 'elif' → logprob: -16.625173568725586
    6. '_else' → logprob: -17.250173568725586
    7. '#' → logprob: -17.375173568725586
    8. '#else' → logprob: -18.125173568725586
    9. '   ' → logprob: -18.125173568725586
    10. 'els' → logprob: -19.000173568725586

Token 388: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -8.888114098226652e-05
    2. 'print' → logprob: -9.500088691711426
    3. ' else' → logprob: -11.375088691711426
    4. 'elif' → logprob: -13.750088691711426
    5. '```' → logprob: -14.000088691711426
    6. '   ' → logprob: -15.875088691711426
    7. '#else' → logprob: -16.000089645385742
    8. 'if' → logprob: -16.250089645385742
    9. '#' → logprob: -16.500089645385742
    10. '}else' → logprob: -16.875089645385742

Token 389: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006726264487951994
    2. ':
' → logprob: -5.006726264953613
    3. ' :' → logprob: -11.631726264953613
    4. '   ' → logprob: -14.006726264953613
    5. ' :
' → logprob: -14.256726264953613
    6. '):' → logprob: -15.381726264953613
    7. '):
' → logprob: -17.006725311279297
    8. ':
' → logprob: -17.131725311279297
    9. '():' → logprob: -17.131725311279297
    10. ':**' → logprob: -17.131725311279297

Token 390: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03385695815086365
    2. ':
' → logprob: -3.4088568687438965
    3. 'else' → logprob: -9.283857345581055
    4. '   ' → logprob: -9.408857345581055
    5. 'print' → logprob: -10.283857345581055
    6. ' :' → logprob: -14.283857345581055
    7. ':

' → logprob: -14.908857345581055
    8. ' else' → logprob: -15.658857345581055
    9. ' print' → logprob: -15.658857345581055
    10. 'elif' → logprob: -15.783857345581055

Token 391: ' traiter' (ID: 105852)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7210983037948608
    2. ' print' → logprob: -1.7210983037948608
    3. ':' → logprob: -2.0960984230041504
    4. 'print' → logprob: -2.3460984230041504
    5. ' afficher' → logprob: -2.3460984230041504
    6. '#' → logprob: -5.09609842300415
    7. ':
' → logprob: -5.47109842300415
    8. 'aff' → logprob: -5.72109842300415
    9. '    ' → logprob: -6.59609842300415
    10. ' impr' → logprob: -6.72109842300415

Token 392: ' tous' (ID: 10688)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5308384895324707
    2. '   ' → logprob: -1.0308384895324707
    3. 'la' → logprob: -3.1558384895324707
    4. 'le' → logprob: -5.280838489532471
    5. 'print' → logprob: -5.530838489532471
    6. ' la' → logprob: -6.905838489532471
    7. '#' → logprob: -7.030838489532471
    8. 'une' → logprob: -7.405838489532471
    9. '```' → logprob: -8.280838012695312
    10. '  ' → logprob: -8.530838012695312

Token 393: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.10637927800416946
    2. ' les' → logprob: -2.356379270553589
    3. '#' → logprob: -5.731379508972168
    4. 'le' → logprob: -5.981379508972168
    5. '```' → logprob: -8.606379508972168
    6. ' le' → logprob: -9.731379508972168
    7. '   ' → logprob: -9.981379508972168
    8. '<|end|>' → logprob: -10.481379508972168
    9. 's' → logprob: -11.481379508972168
    10. ' ' → logprob: -11.481379508972168

Token 394: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.5174654126167297
    2. 'cas' → logprob: -1.017465353012085
    3. ' autres' → logprob: -3.267465353012085
    4. ' cas' → logprob: -5.892465591430664
    5. '#' → logprob: -7.517465591430664
    6. ''autres' → logprob: -7.642465591430664
    7. '```' → logprob: -8.767465591430664
    8. ' ' → logprob: -9.517465591430664
    9. '   ' → logprob: -9.642465591430664
    10. 'other' → logprob: -10.017465591430664

Token 395: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.0914246141910553
    2. ':' → logprob: -2.9664247035980225
    3. ' cas' → logprob: -3.3414247035980225
    4. 'cases' → logprob: -7.966424465179443
    5. '#' → logprob: -9.716424942016602
    6. ':
' → logprob: -10.216424942016602
    7. ' casos' → logprob: -11.091424942016602
    8. 'print' → logprob: -11.716424942016602
    9. '```' → logprob: -11.716424942016602
    10. 'c' → logprob: -11.966424942016602

Token 396: ' rest' (ID: 2867)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5533804297447205
    2. 'else' → logprob: -1.0533804893493652
    3. ':
' → logprob: -2.6783804893493652
    4. '   ' → logprob: -4.928380489349365
    5. 'print' → logprob: -8.178380012512207
    6. ' else' → logprob: -10.553380012512207
    7. '```' → logprob: -11.053380012512207
    8. 'elif' → logprob: -13.303380012512207
    9. ' :' → logprob: -14.428380012512207
    10. ':

' → logprob: -14.553380012512207

Token 397: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0859057754278183
    2. 'ants' → logprob: -2.8359057903289795
    3. 'e' → logprob: -4.5859055519104
    4. 'ante' → logprob: -4.9609055519104
    5. 'antes' → logprob: -5.2109055519104
    6. 'of' → logprob: -8.085906028747559
    7. 're' → logprob: -8.710906028747559
    8. '```' → logprob: -9.460906028747559
    9. '   ' → logprob: -9.835906028747559
    10. 'ent' → logprob: -9.835906028747559

Token 398: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08489039540290833
    2. ':' → logprob: -2.584890365600586
    3. ':
' → logprob: -5.334890365600586
    4. '   ' → logprob: -6.959890365600586
    5. 'print' → logprob: -8.584890365600586
    6. ' else' → logprob: -10.959890365600586
    7. '```' → logprob: -11.834890365600586
    8. 'elif' → logprob: -13.959890365600586
    9. '_else' → logprob: -16.084890365600586
    10. ' print' → logprob: -16.834890365600586

Token 399: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006649533752351999
    2. '   ' → logprob: -6.006649494171143
    3. 'print' → logprob: -6.131649494171143
    4. ':' → logprob: -6.256649494171143
    5. '```' → logprob: -9.8816499710083
    6. ' else' → logprob: -11.0066499710083
    7. 'elif' → logprob: -12.7566499710083
    8. ':
' → logprob: -12.7566499710083
    9. ' print' → logprob: -15.1316499710083
    10. '_else' → logprob: -16.506649017333984

Token 400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012518951669335365
    2. ':
' → logprob: -4.387518882751465
    3. '   ' → logprob: -11.887518882751465
    4. ' :' → logprob: -13.387518882751465
    5. ' :
' → logprob: -14.887518882751465
    6. ':
' → logprob: -15.012518882751465
    7. ':

' → logprob: -16.01251983642578
    8. '):
' → logprob: -17.63751983642578
    9. '():
' → logprob: -18.51251983642578
    10. '{' → logprob: -18.63751983642578

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01423919852823019
    2. 'print' → logprob: -4.264239311218262
    3. ' print' → logprob: -9.514239311218262
    4. '   ' → logprob: -13.639239311218262
    5. '       ' → logprob: -15.514239311218262
    6. '    ' → logprob: -15.764239311218262
    7. '	print' → logprob: -15.889239311218262
    8. '```' → logprob: -16.014238357543945
    9. '  ' → logprob: -16.764238357543945
    10. ' ' → logprob: -17.389238357543945

Token 402: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0921942703134846e-05
    2. '   ' → logprob: -12.25001049041748
    3. ' print' → logprob: -12.50001049041748
    4. '0' → logprob: -13.25001049041748
    5. 'pr' → logprob: -15.75001049041748
    6. 'prin' → logprob: -16.000011444091797
    7. 'A' → logprob: -16.125011444091797
    8. '7' → logprob: -17.125011444091797
    9. 'Print' → logprob: -17.875011444091797
    10. '	print' → logprob: -18.000011444091797

Token 403: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.988221684878226e-06
    2. '   ' → logprob: -12.500006675720215
    3. ' print' → logprob: -13.000006675720215
    4. '#' → logprob: -15.000006675720215
    5. 'pr' → logprob: -15.500006675720215
    6. 'prin' → logprob: -15.500006675720215
    7. 'pass' → logprob: -17.12500762939453
    8. 'A' → logprob: -17.25000762939453
    9. '#print' → logprob: -17.87500762939453
    10. 'printf' → logprob: -18.00000762939453

Token 404: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003238316858187318
    2. ' print' → logprob: -5.753238201141357
    3. '   ' → logprob: -9.753238677978516
    4. '#' → logprob: -13.753238677978516
    5. 'pr' → logprob: -14.878238677978516
    6. '    ' → logprob: -15.128238677978516
    7. ' ' → logprob: -15.753238677978516
    8. '	print' → logprob: -15.753238677978516
    9. '  ' → logprob: -15.878238677978516
    10. '#print' → logprob: -16.128238677978516

Token 405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05688325688242912
    2. 'A' → logprob: -3.0568833351135254
    3. 'B' → logprob: -4.931883335113525
    4. '(' → logprob: -7.556883335113525
    5. ' ' → logprob: -8.556882858276367
    6. '(A' → logprob: -8.806882858276367
    7. '(B' → logprob: -9.681882858276367
    8. ' A' → logprob: -10.056882858276367
    9. 'print' → logprob: -10.306882858276367
    10. ' B' → logprob: -10.806882858276367

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19979004561901093
    2. 'A' → logprob: -1.8247900009155273
    3. 'B' → logprob: -3.9497900009155273
    4. '(' → logprob: -8.074790000915527
    5. '(A' → logprob: -8.949790000915527
    6. '(B' → logprob: -9.699790000915527
    7. 'print' → logprob: -10.324790000915527
    8. '1' → logprob: -11.199790000915527
    9. ' A' → logprob: -12.324790000915527
    10. '2' → logprob: -12.449790000915527

Token 407: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.083835244178772
    2. '(' → logprob: -1.333835244178772
    3. '0' → logprob: -1.333835244178772
    4. 'print' → logprob: -2.3338351249694824
    5. '()
' → logprob: -3.7088351249694824
    6. '   ' → logprob: -4.333835124969482
    7. '(print' → logprob: -9.45883560180664
    8. ')' → logprob: -9.95883560180664
    9. ' ' → logprob: -10.58383560180664
    10. '```' → logprob: -10.95883560180664

Token 408: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3877456486225128
    2. '0' → logprob: -1.1377456188201904
    3. ' print' → logprob: -7.1377458572387695
    4. ' ' → logprob: -9.76274585723877
    5. '   ' → logprob: -10.76274585723877
    6. 'end' → logprob: -15.01274585723877
    7. ')' → logprob: -15.63774585723877
    8. '  ' → logprob: -15.76274585723877
    9. '    ' → logprob: -15.88774585723877
    10. '```' → logprob: -16.512744903564453

Token 409: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14657960832118988
    2. 'print' → logprob: -2.3965795040130615
    3. '   ' → logprob: -4.521579742431641
    4. ' )' → logprob: -4.646579742431641
    5. ' print' → logprob: -4.896579742431641
    6. '```' → logprob: -5.396579742431641
    7. ')
' → logprob: -5.646579742431641
    8. '.' → logprob: -6.646579742431641
    9. ''' → logprob: -6.896579742431641
    10. '  ' → logprob: -7.271579742431641

Token 410: ' signifie' (ID: 81149)
  Prédit: ' signifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.11436863988637924
    2. ' correspond' → logprob: -3.6143686771392822
    3. 'ind' → logprob: -3.8643686771392822
    4. ' veut' → logprob: -3.9893686771392822
    5. 'print' → logprob: -4.239368438720703
    6. ' indique' → logprob: -4.864368438720703
    7. 'sign' → logprob: -4.989368438720703
    8. 'cor' → logprob: -6.489368438720703
    9. '```' → logprob: -6.739368438720703
    10. '#' → logprob: -6.864368438720703

Token 411: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.548295795917511
    2. '0' → logprob: -1.5482957363128662
    3. 'que' → logprob: -1.6732957363128662
    4. 'auc' → logprob: -4.298295974731445
    5. 'une' → logprob: -6.548295974731445
    6. 'la' → logprob: -6.548295974731445
    7. 'qu' → logprob: -6.798295974731445
    8. ' la' → logprob: -6.923295974731445
    9. ' une' → logprob: -7.548295974731445
    10. ' ' → logprob: -7.798295974731445

Token 412: ' pour' (ID: 1930)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.678291380405426
    2. 'print' → logprob: -0.803291380405426
    3. 'B' → logprob: -3.8032913208007812
    4. 'le' → logprob: -5.553291320800781
    5. 'auc' → logprob: -5.678291320800781
    6. ' ' → logprob: -5.803291320800781
    7. ' B' → logprob: -5.803291320800781
    8. 'A' → logprob: -5.803291320800781
    9. 'la' → logprob: -5.928291320800781
    10. ' la' → logprob: -6.428291320800781

Token 413: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10957200080156326
    2. 'les' → logprob: -2.734571933746338
    3. 'tout' → logprob: -3.609571933746338
    4. 't' → logprob: -4.859571933746338
    5. ' les' → logprob: -6.734571933746338
    6. '#' → logprob: -6.859571933746338
    7. 'ces' → logprob: -7.484571933746338
    8. ' A' → logprob: -7.734571933746338
    9. ' toute' → logprob: -8.109572410583496
    10. ' toutes' → logprob: -8.359572410583496

Token 414: ' valeurs' (ID: 73668)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5782473683357239
    2. 'val' → logprob: -0.8282473683357239
    3. ' A' → logprob: -7.453247547149658
    4. 'ent' → logprob: -7.828247547149658
    5. 'cas' → logprob: -7.828247547149658
    6. 'aut' → logprob: -8.0782470703125
    7. 'values' → logprob: -8.5782470703125
    8. 'indices' → logprob: -9.2032470703125
    9. 'n' → logprob: -9.4532470703125
    10. ' valeurs' → logprob: -9.7032470703125

Token 415: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.39965924620628357
    2. ' de' → logprob: -2.0246591567993164
    3. 'inf' → logprob: -2.3996591567993164
    4. 'A' → logprob: -3.2746591567993164
    5. ' inf' → logprob: -3.2746591567993164
    6. 'd' → logprob: -3.6496591567993164
    7. ' d' → logprob: -6.649659156799316
    8. ' A' → logprob: -6.649659156799316
    9. ' ' → logprob: -7.274659156799316
    10. '   ' → logprob: -7.649659156799316

Token 416: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9027791495318525e-05
    2. ' A' → logprob: -10.875019073486328
    3. ' ' → logprob: -16.875019073486328
    4. '#' → logprob: -17.125019073486328
    5. 'a' → logprob: -18.625019073486328
    6. '```' → logprob: -18.625019073486328
    7. '	A' → logprob: -18.875019073486328
    8. ' ' → logprob: -19.250019073486328
    9. '
' → logprob: -19.375019073486328
    10. '`' → logprob: -19.625019073486328

Token 417: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.4728759229183197
    2. ' inf' → logprob: -1.722875952720642
    3. '<' → logprob: -1.847875952720642
    4. ' <' → logprob: -3.2228758335113525
    5. 'infer' → logprob: -7.972876071929932
    6. 'strict' → logprob: -8.597875595092773
    7. ' inférieur' → logprob: -9.347875595092773
    8. 'moins' → logprob: -9.597875595092773
    9. ' ' → logprob: -9.597875595092773
    10. ' strict' → logprob: -10.972875595092773

Token 418: 'érieures' (ID: 108978)
  Prédit: 'érieures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieures' → logprob: -0.05167292058467865
    2. 'érieure' → logprob: -3.42667293548584
    3. 'érieur' → logprob: -4.05167293548584
    4. 'érieurs' → logprob: -8.05167293548584
    5. 'érie' → logprob: -9.17667293548584
    6. 'érées' → logprob: -11.30167293548584
    7. 'éri' → logprob: -11.92667293548584
    8. '0' → logprob: -12.05167293548584
    9. 'er' → logprob: -12.05167293548584
    10. 'ér' → logprob: -12.55167293548584

Token 419: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3736104369163513
    2. ' à' → logprob: -1.748610496520996
    3. 'à' → logprob: -1.998610496520996
    4. '6' → logprob: -6.998610496520996
    5. '  ' → logprob: -8.248610496520996
    6. '0' → logprob: -8.248610496520996
    7. ' ' → logprob: -8.623610496520996
    8. '<' → logprob: -8.998610496520996
    9. '    ' → logprob: -9.123610496520996
    10. 'a' → logprob: -9.373610496520996

Token 420: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -19.125059127807617
    4. '۶' → logprob: -20.875059127807617
    5. '٦' → logprob: -21.000059127807617
    6. ' six' → logprob: -21.000059127807617
    7. 'six' → logprob: -21.625059127807617
    8. '0' → logprob: -21.750059127807617
    9. '﻿' → logprob: -21.750059127807617
    10. '   ' → logprob: -21.937559127807617

Token 421: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -17.250019073486328
    4. '0' → logprob: -19.500019073486328
    5. 'six' → logprob: -19.750019073486328
    6. ' six' → logprob: -20.062519073486328
    7. '13' → logprob: -20.312519073486328
    8. '1' → logprob: -20.312519073486328
    9. '٦' → logprob: -20.375019073486328
    10. '۶' → logprob: -20.812519073486328

Token 422: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44156506657600403
    2. ',' → logprob: -1.0665650367736816
    3. 'print' → logprob: -4.816565036773682
    4. ')' → logprob: -5.816565036773682
    5. ' ,' → logprob: -7.441565036773682
    6. ' print' → logprob: -7.566565036773682
    7. '0' → logprob: -8.19156551361084
    8. '  ' → logprob: -9.31656551361084
    9. ')
' → logprob: -9.69156551361084
    10. '.' → logprob: -9.94156551361084

Token 423: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006155004259198904
    2. ' print' → logprob: -5.256155014038086
    3. '0' → logprob: -7.006155014038086
    4. '   ' → logprob: -11.256155014038086
    5. ' ' → logprob: -13.631155014038086
    6. ' on' → logprob: -15.506155014038086
    7. 'on' → logprob: -16.506155014038086
    8. '	print' → logprob: -17.006155014038086
    9. '```' → logprob: -18.131155014038086
    10. '  ' → logprob: -18.381155014038086

Token 424: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35010987520217896
    2. 'val' → logprob: -1.2251098155975342
    3. ' print' → logprob: -7.975110054016113
    4. ' valeur' → logprob: -8.225110054016113
    5. 'quant' → logprob: -8.350110054016113
    6. 'sort' → logprob: -8.350110054016113
    7. 'rés' → logprob: -8.600110054016113
    8. 'ré' → logprob: -9.350110054016113
    9. 'output' → logprob: -10.100110054016113
    10. 'part' → logprob: -10.100110054016113

Token 425: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.24079622328281403
    2. ' sera' → logprob: -1.7407962083816528
    3. 'est' → logprob: -3.4907963275909424
    4. 'sera' → logprob: -5.240796089172363
    5. 's' → logprob: -6.615796089172363
    6. 'print' → logprob: -7.115796089172363
    7. ' ' → logprob: -8.615796089172363
    8. ' vaut' → logprob: -9.115796089172363
    9. ' print' → logprob: -9.240796089172363
    10. ' s' → logprob: -9.365796089172363

Token 426: ' toujours' (ID: 16867)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004086828324943781
    2. ' ' → logprob: -5.504086971282959
    3. '   ' → logprob: -11.8790864944458
    4. '```' → logprob: -14.5040864944458
    5. '  ' → logprob: -16.254087448120117
    6. '`' → logprob: -16.254087448120117
    7. ' zero' → logprob: -16.254087448120117
    8. '    ' → logprob: -16.254087448120117
    9. 'auc' → logprob: -16.629087448120117
    10. 'n' → logprob: -16.629087448120117

Token 427: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.2500057220459
    4. '   ' → logprob: -16.3750057220459
    5. 'zero' → logprob: -18.6250057220459
    6. '`' → logprob: -18.7500057220459
    7. 'auc' → logprob: -19.2500057220459
    8. '``' → logprob: -20.0000057220459
    9. '000' → logprob: -20.3750057220459
    10. '  ' → logprob: -20.6250057220459

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -17.875
    4. 'print' → logprob: -21.5
    5. '`' → logprob: -22.875
    6. '``' → logprob: -23.125
    7. '   ' → logprob: -23.625
    8. '000' → logprob: -23.75
    9. '۰' → logprob: -24.375
    10. '00' → logprob: -24.75

Token 429: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07949177920818329
    2. 'print' → logprob: -2.5794918537139893
    3. '
' → logprob: -8.32949161529541
    4. '0' → logprob: -8.70449161529541
    5. '```' → logprob: -9.57949161529541
    6. ' print' → logprob: -9.95449161529541
    7. '    
' → logprob: -9.95449161529541
    8. '  ' → logprob: -11.82949161529541
    9. ' ' → logprob: -12.07949161529541
    10. '  
' → logprob: -12.32949161529541

Token 430: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2014312595129013
    2. '   ' → logprob: -1.7014312744140625
    3. '```' → logprob: -11.451431274414062
    4. ' print' → logprob: -11.826431274414062
    5. '	print' → logprob: -17.826431274414062
    6. '``' → logprob: -17.951431274414062
    7. '       ' → logprob: -19.201431274414062
    8. '0' → logprob: -19.576431274414062
    9. '   ' → logprob: -20.201431274414062
    10. '  ' → logprob: -20.576431274414062

Token 431: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' print' → logprob: -15.250000953674316
    4. '```' → logprob: -21.125
    5. '	print' → logprob: -22.875
    6. '0' → logprob: -24.125
    7. 'Print' → logprob: -25.25
    8. '``' → logprob: -25.25
    9. '  ' → logprob: -25.75
    10. 'printf' → logprob: -26.0

Token 432: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.00000286102295
    3. '()' → logprob: -16.375001907348633
    4. ' (' → logprob: -16.625001907348633
    5. '((' → logprob: -20.375001907348633
    6. '(
' → logprob: -20.625001907348633
    7. '('' → logprob: -21.875001907348633
    8. '(

' → logprob: -22.000001907348633
    9. '(False' → logprob: -22.750001907348633
    10. ' ' → logprob: -23.000001907348633

Token 433: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.875
    3. ')' → logprob: -24.5
    4. '۰' → logprob: -25.625
    5. '０' → logprob: -27.0
    6. '```' → logprob: -28.125
    7. '٠' → logprob: -28.875
    8. '"' → logprob: -29.0
    9. '00' → logprob: -29.125
    10. '   ' → logprob: -29.375

Token 434: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ' )' → logprob: -12.625004768371582
    3. ')
' → logprob: -13.250004768371582
    4. '))' → logprob: -18.1250057220459
    5. '')' → logprob: -19.0000057220459
    6. '())' → logprob: -19.1250057220459
    7. ')`' → logprob: -19.5000057220459
    8. '`)' → logprob: -19.6250057220459
    9. '")' → logprob: -19.7500057220459
    10. ')#' → logprob: -20.0000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 432
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 111
Tokens correctement prédits (top 10): 257
Précision stricte (1ère position): 25.23%
Précision adaptée (1ère position): 25.69%
Précision (top 10): 59.49%
================================================================================
