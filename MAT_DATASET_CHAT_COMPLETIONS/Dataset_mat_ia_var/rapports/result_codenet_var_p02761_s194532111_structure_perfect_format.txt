================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
defs = [tuple(map(int, input().split())) for _ in range(m)]

is_empty = False
jouken = {}

for i in range(n):
    dd = list(set([d[1] for d in defs if d[0] - 1 == i]))
    if len(dd) > 1:
        is_empty = True
        break
    elif len(dd) == 1:
        jouken[i] = dd[0]

num = [0] * n

if n == 1:
    if 0 in jouken:
        num[0] = jouken[0]
    else:
        num[0] = 0
else:
    if 0 in jouken:
        if jouken[0] == 0:
            is_empty = True
        else:
            num[0] = jouken[0]
    else:
        num[0] = 1
    for i in range(1, n):
        if i in jouken:
            num[i] = jouken[i]
        else:
            num[i] = 0

num = [str(i) for i in num]

if is_empty:
    print(-1)
else:
    print(''.join(num))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48386162519454956
    2. ' =' → logprob: -1.4838616847991943
    3. ',' → logprob: -1.8588616847991943
    4. ')' → logprob: -7.983861446380615
    5. '```' → logprob: -8.108861923217773
    6. ' ,' → logprob: -9.858861923217773
    7. ' ' → logprob: -9.983861923217773
    8. '_' → logprob: -10.358861923217773
    9. '#' → logprob: -10.483861923217773
    10. ';' → logprob: -10.733861923217773

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7132365703582764
    2. ' map' → logprob: -1.4632365703582764
    3. ' input' → logprob: -2.2132365703582764
    4. 'map' → logprob: -2.8382365703582764
    5. 'input' → logprob: -2.9632365703582764
    6. '0' → logprob: -3.0882365703582764
    7. ' n' → logprob: -4.9632368087768555
    8. '10' → logprob: -5.8382368087768555
    9. ' int' → logprob: -6.4632368087768555
    10. 'int' → logprob: -7.4632368087768555

Token 5: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38210946321487427
    2. '(' → logprob: -1.6321094036102295
    3. '(input' → logprob: -2.2571094036102295
    4. '```' → logprob: -6.007109642028809
    5. '`)' → logprob: -6.382109642028809
    6. '(user' → logprob: -6.382109642028809
    7. '(token' → logprob: -6.507109642028809
    8. '<|end|>' → logprob: -6.507109642028809
    9. '(n' → logprob: -6.632109642028809
    10. '`' → logprob: -7.007109642028809

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1602884978055954
    2. 'input' → logprob: -1.9102884531021118
    3. '(input' → logprob: -9.66028881072998
    4. ')' → logprob: -15.03528881072998
    5. ',input' → logprob: -15.91028881072998
    6. '=input' → logprob: -16.160287857055664
    7. '<input' → logprob: -17.160287857055664
    8. ' )' → logprob: -17.785287857055664
    9. '[input' → logprob: -17.785287857055664
    10. '```' → logprob: -18.035287857055664

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4078379273414612
    2. '()' → logprob: -1.2828378677368164
    3. ')' → logprob: -3.4078378677368164
    4. '(' → logprob: -5.032837867736816
    5. '`()' → logprob: -5.657837867736816
    6. '(""))' → logprob: -6.157837867736816
    7. '().' → logprob: -6.157837867736816
    8. '('' → logprob: -6.532837867736816
    9. '()))' → logprob: -6.657837867736816
    10. '```' → logprob: -7.032837867736816

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015224798116832972
    2. 'strip' → logprob: -6.501522541046143
    3. 'rstrip' → logprob: -11.376522064208984
    4. ' split' → logprob: -12.251522064208984
    5. ')' → logprob: -12.751522064208984
    6. 'read' → logprob: -14.126522064208984
    7. '(split' → logprob: -15.251522064208984
    8. 'spl' → logprob: -17.001522064208984
    9. '_split' → logprob: -17.251522064208984
    10. 'startswith' → logprob: -17.751522064208984

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03527203947305679
    2. '())' → logprob: -3.9102721214294434
    3. '))' → logprob: -4.285272121429443
    4. '()' → logprob: -7.910272121429443
    5. '(' → logprob: -8.035271644592285
    6. '()))' → logprob: -9.660271644592285
    7. '`)' → logprob: -10.035271644592285
    8. '('' → logprob: -11.535271644592285
    9. ')`' → logprob: -12.035271644592285
    10. ')))' → logprob: -12.410271644592285

Token 11: 'defs' (ID: 120321)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18924707174301147
    2. 'for' → logprob: -3.0642471313476562
    3. 'x' → logprob: -3.3142471313476562
    4. '\n' → logprob: -4.064247131347656
    5. 'd' → logprob: -4.689247131347656
    6. '`' → logprob: -4.814247131347656
    7. 'r' → logprob: -4.814247131347656
    8. ',' → logprob: -4.939247131347656
    9. '#' → logprob: -5.439247131347656
    10. 's' → logprob: -5.564247131347656

Token 12: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01725916564464569
    2. '(' → logprob: -5.017259120941162
    3. '_' → logprob: -5.892259120941162
    4. '   ' → logprob: -6.267259120941162
    5. '  ' → logprob: -6.392259120941162
    6. ' (' → logprob: -7.142259120941162
    7. ' ()' → logprob: -7.392259120941162
    8. ' a' → logprob: -7.642259120941162
    9. ' =' → logprob: -7.767259120941162
    10. '()' → logprob: -8.39225959777832

Token 13: ' [' (ID: 723)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0849264860153198
    2. ' ' → logprob: -1.5849264860153198
    3. ' def' → logprob: -2.2099266052246094
    4. 'f' → logprob: -2.2099266052246094
    5. '   ' → logprob: -2.8349266052246094
    6. ' defs' → logprob: -3.7099266052246094
    7. ' []' → logprob: -3.7099266052246094
    8. '[' → logprob: -3.9599266052246094
    9. ' "' → logprob: -4.834926605224609
    10. 'defs' → logprob: -5.084926605224609

Token 14: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27186301350593567
    2. '[]' → logprob: -2.1468629837036133
    3. 'int' → logprob: -3.5218629837036133
    4. 'lambda' → logprob: -4.021862983703613
    5. ']' → logprob: -4.146862983703613
    6. 'list' → logprob: -4.271862983703613
    7. ' []' → logprob: -4.521862983703613
    8. '(int' → logprob: -5.396862983703613
    9. 'def' → logprob: -5.521862983703613
    10. '[int' → logprob: -5.521862983703613

Token 15: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006322878412902355
    2. '(' → logprob: -5.881322860717773
    3. '(int' → logprob: -6.131322860717773
    4. '(input' → logprob: -6.756322860717773
    5. 'map' → logprob: -8.881322860717773
    6. '(
' → logprob: -11.381322860717773
    7. 'int' → logprob: -12.756322860717773
    8. '()' → logprob: -12.881322860717773
    9. '<int' → logprob: -13.256322860717773
    10. '(range' → logprob: -13.256322860717773

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00031973462319001555
    2. '(' → logprob: -8.375319480895996
    3. 'int' → logprob: -10.000319480895996
    4. '<int' → logprob: -11.250319480895996
    5. '(str' → logprob: -11.375319480895996
    6. '[int' → logprob: -11.625319480895996
    7. '=int' → logprob: -12.625319480895996
    8. ',int' → logprob: -12.625319480895996
    9. ']int' → logprob: -14.000319480895996
    10. ')' → logprob: -14.125319480895996

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2613389790058136
    2. ',input' → logprob: -1.5113389492034912
    3. '(input' → logprob: -4.76133918762207
    4. 'input' → logprob: -7.63633918762207
    5. '(' → logprob: -8.51133918762207
    6. ' ,' → logprob: -10.38633918762207
    7. '(),' → logprob: -10.76133918762207
    8. '```' → logprob: -11.13633918762207
    9. ')' → logprob: -11.51133918762207
    10. '`,' → logprob: -12.01133918762207

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1428094059228897
    2. ' input' → logprob: -2.0178093910217285
    3. ')' → logprob: -9.892809867858887
    4. '(input' → logprob: -10.517809867858887
    5. 'list' → logprob: -11.267809867858887
    6. ',input' → logprob: -11.267809867858887
    7. '[input' → logprob: -11.392809867858887
    8. '=input' → logprob: -12.142809867858887
    9. 's' → logprob: -12.767809867858887
    10. '<input' → logprob: -13.142809867858887

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.633853652398102e-05
    2. '()' → logprob: -9.875056266784668
    3. ' ().' → logprob: -13.250056266784668
    4. ')' → logprob: -13.500056266784668
    5. '()))' → logprob: -14.500056266784668
    6. '.' → logprob: -15.000056266784668
    7. '))' → logprob: -15.875056266784668
    8. '())' → logprob: -15.875056266784668
    9. '(' → logprob: -16.375057220458984
    10. '().__' → logprob: -16.625057220458984

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -15.375000953674316
    3. 'strip' → logprob: -15.375000953674316
    4. '(split' → logprob: -15.875000953674316
    5. 'spl' → logprob: -17.75
    6. 'rstrip' → logprob: -17.875
    7. 's' → logprob: -18.875
    8. 'plit' → logprob: -20.25
    9. 'startswith' → logprob: -20.5
    10. '.split' → logprob: -21.875

Token 21: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007216964848339558
    2. '))' → logprob: -5.257216930389404
    3. '())' → logprob: -6.507216930389404
    4. '()' → logprob: -8.007217407226562
    5. '()))
' → logprob: -9.132217407226562
    6. '())))' → logprob: -11.257217407226562
    7. '()));' → logprob: -11.882217407226562
    8. ')' → logprob: -12.257217407226562
    9. '(' → logprob: -12.382217407226562
    10. '()),' → logprob: -12.382217407226562

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17482325434684753
    2. '()' → logprob: -2.42482328414917
    3. ')]' → logprob: -3.92482328414917
    4. '()]' → logprob: -4.17482328414917
    5. 'for' → logprob: -4.42482328414917
    6. ' for' → logprob: -4.54982328414917
    7. '())' → logprob: -5.04982328414917
    8. ']' → logprob: -5.54982328414917
    9. '(' → logprob: -6.17482328414917
    10. '(n' → logprob: -7.67482328414917

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0815391018986702
    2. '_' → logprob: -2.5815391540527344
    3. 'range' → logprob: -6.456539154052734
    4. '_range' → logprob: -7.831539154052734
    5. ' ' → logprob: -8.081539154052734
    6. ' _' → logprob: -8.206539154052734
    7. '(range' → logprob: -9.831539154052734
    8. ' i' → logprob: -10.956539154052734
    9. ' xrange' → logprob: -11.831539154052734
    10. '	range' → logprob: -11.831539154052734

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005616127513349056
    2. 'in' → logprob: -5.380616188049316
    3. ' ' → logprob: -7.755616188049316
    4. '_' → logprob: -8.255616188049316
    5. ' range' → logprob: -8.755616188049316
    6. 'range' → logprob: -10.005616188049316
    7. 's' → logprob: -10.130616188049316
    8. '(' → logprob: -10.380616188049316
    9. '  ' → logprob: -12.380616188049316
    10. ')' → logprob: -12.380616188049316

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03805159032344818
    2. ' range' → logprob: -3.2880516052246094
    3. '	range' → logprob: -12.53805160522461
    4. ' ' → logprob: -12.78805160522461
    5. '(range' → logprob: -14.28805160522461
    6. 'r' → logprob: -14.53805160522461
    7. 'ranges' → logprob: -14.91305160522461
    8. '[' → logprob: -15.03805160522461
    9. '```' → logprob: -15.16305160522461
    10. 'm' → logprob: -15.28805160522461

Token 26: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0658160075545311
    2. '(' → logprob: -2.8158159255981445
    3. '(m' → logprob: -5.5658159255981445
    4. '(s' → logprob: -11.940815925598145
    5. ' (' → logprob: -12.315815925598145
    6. '(len' → logprob: -14.565815925598145
    7. '(
' → logprob: -14.815815925598145
    8. '((' → logprob: -15.065815925598145
    9. '(range' → logprob: -15.190815925598145
    10. '(k' → logprob: -15.190815925598145

Token 27: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00040409780922345817
    2. ')' → logprob: -7.875403881072998
    3. ')])' → logprob: -11.500404357910156
    4. ']' → logprob: -12.250404357910156
    5. ' )' → logprob: -12.625404357910156
    6. '')]' → logprob: -13.500404357910156
    7. ')],' → logprob: -14.125404357910156
    8. ')]
' → logprob: -14.125404357910156
    9. '))' → logprob: -14.500404357910156
    10. '])]' → logprob: -14.625404357910156

Token 28: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0496126413345337
    2. ')' → logprob: -1.4246126413345337
    3. 'd' → logprob: -1.7996126413345337
    4. 'for' → logprob: -2.299612522125244
    5. ']' → logprob: -2.674612522125244
    6. 'a' → logprob: -4.299612522125244
    7. '=' → logprob: -4.549612522125244
    8. '[' → logprob: -4.799612522125244
    9. '#' → logprob: -5.049612522125244
    10. '_' → logprob: -5.424612522125244

Token 29: '_empty' (ID: 35051)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.001813530921936
    2. '_' → logprob: -1.126813530921936
    3. '_valid' → logprob: -2.3768134117126465
    4. 'def' → logprob: -2.7518134117126465
    5. 'instance' → logprob: -3.0018134117126465
    6. '_a' → logprob: -4.2518134117126465
    7. '_sorted' → logprob: -4.6268134117126465
    8. 'a' → logprob: -4.8768134117126465
    9. 'space' → logprob: -4.8768134117126465
    10. ':' → logprob: -5.0018134117126465

Token 30: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004742831224575639
    2. '_' → logprob: -8.625473976135254
    3. '('' → logprob: -9.750473976135254
    4. '("("' → logprob: -10.000473976135254
    5. '(_)' → logprob: -10.375473976135254
    6. '()' → logprob: -10.625473976135254
    7. '_parent' → logprob: -11.125473976135254
    8. '_space' → logprob: -11.250473976135254
    9. '((' → logprob: -11.375473976135254
    10. '(
' → logprob: -11.500473976135254

Token 31: ' False' (ID: 7983)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9204768538475037
    2. 'True' → logprob: -1.1704769134521484
    3. '[]' → logprob: -2.0454769134521484
    4. '(True' → logprob: -2.5454769134521484
    5. ' []' → logprob: -3.0454769134521484
    6. '[' → logprob: -4.170476913452148
    7. 'False' → logprob: -4.670476913452148
    8. '0' → logprob: -6.670476913452148
    9. ' ' → logprob: -6.670476913452148
    10. ' False' → logprob: -6.670476913452148

Token 32: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.685691773891449
    2. '
' → logprob: -1.1856918334960938
    3. '\n' → logprob: -2.9356918334960938
    4. '\' → logprob: -3.0606918334960938
    5. ' for' → logprob: -3.5606918334960938
    6. 'newline' → logprob: -4.060691833496094
    7. ':' → logprob: -4.435691833496094
    8. '' → logprob: -4.560691833496094
    9. ',' → logprob: -4.935691833496094
    10. 'if' → logprob: -6.060691833496094

Token 33: 'jou' (ID: 56682)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4695596992969513
    2. '
' → logprob: -1.344559669494629
    3. ' for' → logprob: -3.594559669494629
    4. ':' → logprob: -4.219559669494629
    5. ' 
' → logprob: -4.219559669494629
    6. 'i' → logprob: -4.469559669494629
    7. '\n' → logprob: -4.594559669494629
    8. '\' → logprob: -5.094559669494629
    9. ',' → logprob: -5.094559669494629
    10. '' → logprob: -5.344559669494629

Token 34: 'ken' (ID: 2144)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023555591702461243
    2. 'rn' → logprob: -4.523555755615234
    3. 'ry' → logprob: -5.523555755615234
    4. '```' → logprob: -7.023555755615234
    5. 'le' → logprob: -7.148555755615234
    6. 'n' → logprob: -7.273555755615234
    7. '_r' → logprob: -7.648555755615234
    8. 'l' → logprob: -7.648555755615234
    9. 'ran' → logprob: -7.773555755615234
    10. 'rd' → logprob: -7.773555755615234

Token 35: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1226204633712769
    2. ' =' → logprob: -1.1226204633712769
    3. '_' → logprob: -1.7476204633712769
    4. '=' → logprob: -1.7476204633712769
    5. ' ' → logprob: -7.997620582580566
    6. '_s' → logprob: -8.872620582580566
    7. '_=' → logprob: -9.997620582580566
    8. '[' → logprob: -10.747620582580566
    9. '_str' → logprob: -10.872620582580566
    10. ')' → logprob: -11.122620582580566

Token 36: ' {}

' (ID: 21724)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.37701064348220825
    2. ' []' → logprob: -1.2520105838775635
    3. ' True' → logprob: -4.752010822296143
    4. 'True' → logprob: -5.127010822296143
    5. 'set' → logprob: -5.252010822296143
    6. 'False' → logprob: -5.752010822296143
    7. ' ' → logprob: -6.377010822296143
    8. ' set' → logprob: -6.752010822296143
    9. ' False' → logprob: -7.627010822296143
    10. '[' → logprob: -7.752010822296143

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01587892323732376
    2. ' for' → logprob: -4.265879154205322
    3. 'if' → logprob: -7.515879154205322
    4. 'f' → logprob: -8.265878677368164
    5. '
' → logprob: -8.765878677368164
    6. 'n' → logprob: -8.890878677368164
    7. 'i' → logprob: -9.140878677368164
    8. ' 
' → logprob: -9.140878677368164
    9. 's' → logprob: -9.140878677368164
    10. ':' → logprob: -9.265878677368164

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5033227205276489
    2. ' _' → logprob: -1.253322720527649
    3. ' ' → logprob: -3.5033226013183594
    4. '_' → logprob: -3.6283226013183594
    5. ' s' → logprob: -4.503322601318359
    6. ' x' → logprob: -4.753322601318359
    7. ' d' → logprob: -5.128322601318359
    8. ' j' → logprob: -5.378322601318359
    9. ' n' → logprob: -5.628322601318359
    10. ' item' → logprob: -5.628322601318359

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07202233374118805
    2. 'in' → logprob: -2.6970224380493164
    3. ' ' → logprob: -6.572022438049316
    4. 'n' → logprob: -7.447022438049316
    5. ',' → logprob: -10.197022438049316
    6. 'range' → logprob: -11.072022438049316
    7. 's' → logprob: -11.697022438049316
    8. ' n' → logprob: -11.697022438049316
    9. '  ' → logprob: -11.697022438049316
    10. '_' → logprob: -11.822022438049316

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02327296882867813
    2. 'range' → logprob: -3.77327299118042
    3. ' ran' → logprob: -11.648272514343262
    4. ' ' → logprob: -11.898272514343262
    5. ' ra' → logprob: -12.648272514343262
    6. '(range' → logprob: -13.398272514343262
    7. '	range' → logprob: -13.398272514343262
    8. ' r' → logprob: -14.023272514343262
    9. '_range' → logprob: -14.148272514343262
    10. ' rang' → logprob: -14.148272514343262

Token 41: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17084674537181854
    2. '(' → logprob: -2.545846700668335
    3. '(m' → logprob: -2.545846700668335
    4. ' (' → logprob: -8.670846939086914
    5. '(s' → logprob: -10.795846939086914
    6. '(range' → logprob: -11.170846939086914
    7. '(len' → logprob: -11.795846939086914
    8. '(i' → logprob: -11.920846939086914
    9. ' n' → logprob: -12.170846939086914
    10. 'n' → logprob: -12.795846939086914

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04134971648454666
    2. ')' → logprob: -3.2913496494293213
    3. '):
' → logprob: -6.2913498878479
    4. ':' → logprob: -7.2913498878479
    5. '+' → logprob: -7.5413498878479
    6. ' ):' → logprob: -8.541349411010742
    7. ' )' → logprob: -11.291349411010742
    8. '-' → logprob: -11.916349411010742
    9. ',' → logprob: -12.291349411010742
    10. '   ' → logprob: -12.791349411010742

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05004481226205826
    2. '    ' → logprob: -4.050045013427734
    3. ' ' → logprob: -4.175045013427734
    4. '<|end|>' → logprob: -4.800045013427734
    5. '    
' → logprob: -6.300045013427734
    6. '\t' → logprob: -6.675045013427734
    7. '<|end|>' → logprob: -7.425045013427734
    8. '[' → logprob: -7.425045013427734
    9. '  ' → logprob: -7.550045013427734
    10. '[j' → logprob: -8.050045013427734

Token 44: ' dd' (ID: 18636)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1385085582733154
    2. ' jou' → logprob: -1.7635085582733154
    3. '    ' → logprob: -1.8885085582733154
    4. '   ' → logprob: -2.3885085582733154
    5. ' ' → logprob: -2.8885085582733154
    6. ' if' → logprob: -3.1385085582733154
    7. 'jou' → logprob: -3.1385085582733154
    8. ' j' → logprob: -3.5135085582733154
    9. 'for' → logprob: -4.1385087966918945
    10. ' is' → logprob: -4.1385087966918945

Token 45: ' =' (ID: 314)
  Prédit: 'efs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'efs' → logprob: -0.2722052037715912
    2. 'ef' → logprob: -1.8972052335739136
    3. ' =' → logprob: -3.397205114364624
    4. 's' → logprob: -4.397205352783203
    5. 'f' → logprob: -4.522205352783203
    6. '=' → logprob: -4.772205352783203
    7. 'defs' → logprob: -5.022205352783203
    8. 'e' → logprob: -5.397205352783203
    9. 'def' → logprob: -6.397205352783203
    10. '[' → logprob: -6.772205352783203

Token 46: ' list' (ID: 1562)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.6959101557731628
    2. '{}' → logprob: -1.0709102153778076
    3. ' defs' → logprob: -3.1959102153778076
    4. ' []' → logprob: -3.4459102153778076
    5. 'defs' → logprob: -3.8209102153778076
    6. '[]' → logprob: -4.0709099769592285
    7. ' i' → logprob: -4.6959099769592285
    8. ' input' → logprob: -4.9459099769592285
    9. 'input' → logprob: -5.6959099769592285
    10. ' dict' → logprob: -6.0709099769592285

Token 47: '(set' (ID: 25904)
  Prédit: '(def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(def' → logprob: -0.5736725330352783
    2. '(map' → logprob: -1.6986725330352783
    3. '(range' → logprob: -2.0736725330352783
    4. '(' → logprob: -3.0736725330352783
    5. '()' → logprob: -3.0736725330352783
    6. '(input' → logprob: -3.9486725330352783
    7. '(filter' → logprob: -5.448672294616699
    8. 's' → logprob: -5.573672294616699
    9. '(s' → logprob: -6.198672294616699
    10. '(de' → logprob: -6.698672294616699

Token 48: '([' (ID: 5194)
  Prédit: '(def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(def' → logprob: -0.008919095620512962
    2. 'defs' → logprob: -5.8839192390441895
    3. '(d' → logprob: -6.5089192390441895
    4. '())' → logprob: -6.6339192390441895
    5. '(' → logprob: -6.7589192390441895
    6. '()' → logprob: -7.0089192390441895
    7. '(s' → logprob: -7.6339192390441895
    8. '([' → logprob: -8.883918762207031
    9. ' (' → logprob: -8.883918762207031
    10. ')' → logprob: -9.508918762207031

Token 49: 'd' (ID: 67)
  Prédit: 'defs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'defs' → logprob: -0.07499206066131592
    2. 'j' → logprob: -3.5749921798706055
    3. 'x' → logprob: -3.8249921798706055
    4. ' defs' → logprob: -4.5749921798706055
    5. 'i' → logprob: -6.1999921798706055
    6. 's' → logprob: -6.3249921798706055
    7. ' j' → logprob: -6.4499921798706055
    8. 'd' → logprob: -6.9499921798706055
    9. ' x' → logprob: -7.0749921798706055
    10. '(j' → logprob: -7.4499921798706055

Token 50: '[' (ID: 58)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9526944160461426
    2. ' for' → logprob: -1.2026944160461426
    3. '[i' → logprob: -1.8276944160461426
    4. '[' → logprob: -2.8276944160461426
    5. 'for' → logprob: -3.3276944160461426
    6. 'efs' → logprob: -3.8276944160461426
    7. '[j' → logprob: -4.702694416046143
    8. 'ef' → logprob: -4.952694416046143
    9. '[s' → logprob: -5.327694416046143
    10. 'defs' → logprob: -5.827694416046143

Token 51: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11393089592456818
    2. '0' → logprob: -2.3639309406280518
    3. '1' → logprob: -4.363930702209473
    4. 'j' → logprob: -7.488930702209473
    5. ' i' → logprob: -9.488930702209473
    6. '2' → logprob: -9.863930702209473
    7. '(i' → logprob: -10.113930702209473
    8. '[i' → logprob: -10.551430702209473
    9. 'x' → logprob: -10.801430702209473
    10. ']' → logprob: -11.676430702209473

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005835891701281071
    2. 'for' → logprob: -5.505836009979248
    3. ' for' → logprob: -6.505836009979248
    4. ' ]' → logprob: -9.25583553314209
    5. '-' → logprob: -9.75583553314209
    6. '][' → logprob: -10.13083553314209
    7. ' ' → logprob: -10.88083553314209
    8. '[' → logprob: -12.13083553314209
    9. ']==' → logprob: -12.25583553314209
    10. ')' → logprob: -12.38083553314209

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4742884635925293
    2. 'for' → logprob: -0.9742884635925293
    3. ' ' → logprob: -9.349288940429688
    4. '	for' → logprob: -9.474288940429688
    5. ']' → logprob: -10.974288940429688
    6. '[' → logprob: -11.974288940429688
    7. 'or' → logprob: -11.974288940429688
    8. '-' → logprob: -12.599288940429688
    9. ')' → logprob: -13.349288940429688
    10. '
' → logprob: -13.724288940429688

Token 54: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3617493510246277
    2. ' defs' → logprob: -1.4867494106292725
    3. 'defs' → logprob: -3.2367494106292725
    4. 'd' → logprob: -3.3617494106292725
    5. 's' → logprob: -7.361749172210693
    6. ' s' → logprob: -7.486749172210693
    7. ' def' → logprob: -7.486749172210693
    8. 'def' → logprob: -7.611749172210693
    9. ' ddef' → logprob: -8.236749649047852
    10. ' ds' → logprob: -8.986749649047852

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029334424063563347
    2. 'ef' → logprob: -3.779334306716919
    3. 'in' → logprob: -5.279334545135498
    4. 's' → logprob: -7.279334545135498
    5. 'efs' → logprob: -9.15433406829834
    6. 'f' → logprob: -9.27933406829834
    7. 'for' → logprob: -11.15433406829834
    8. 'def' → logprob: -11.40433406829834
    9. ' for' → logprob: -11.77933406829834
    10. ' ' → logprob: -11.77933406829834

Token 56: ' defs' (ID: 192560)
  Prédit: 'defs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'defs' → logprob: -0.17990607023239136
    2. ' defs' → logprob: -1.8049061298370361
    3. 'def' → logprob: -9.304905891418457
    4. 'dfs' → logprob: -10.929905891418457
    5. 'ds' → logprob: -11.054905891418457
    6. 's' → logprob: -11.304905891418457
    7. ' def' → logprob: -12.429905891418457
    8. 'Defs' → logprob: -12.679905891418457
    9. 'efs' → logprob: -12.804905891418457
    10. '_defs' → logprob: -12.929905891418457

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019231975078582764
    2. 'if' → logprob: -4.019231796264648
    3. '   ' → logprob: -7.394231796264648
    4. ' ' → logprob: -8.519231796264648
    5. '  ' → logprob: -9.394231796264648
    6. '    ' → logprob: -9.519231796264648
    7. '	if' → logprob: -10.269231796264648
    8. ']))' → logprob: -11.019231796264648
    9. '])' → logprob: -12.269231796264648
    10. ' for' → logprob: -12.269231796264648

Token 58: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011056549847126007
    2. 'd' → logprob: -4.511056423187256
    3. ' ' → logprob: -12.511056900024414
    4. '	d' → logprob: -13.261056900024414
    5. ' ' → logprob: -14.136056900024414
    6. 'def' → logprob: -14.761056900024414
    7. '    ' → logprob: -15.136056900024414
    8. ' i' → logprob: -15.448556900024414
    9. '   ' → logprob: -15.573556900024414
    10. '  ' → logprob: -15.636056900024414

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4259644558478612e-05
    2. ' [' → logprob: -12.375014305114746
    3. '0' → logprob: -12.750014305114746
    4. ' and' → logprob: -12.875014305114746
    5. ' ' → logprob: -13.000014305114746
    6. 'and' → logprob: -14.375014305114746
    7. '][' → logprob: -14.875014305114746
    8. '[i' → logprob: -15.500014305114746
    9. '[
' → logprob: -15.750014305114746
    10. 'def' → logprob: -16.00001335144043

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010628487507347018
    2. ' ' → logprob: -9.750105857849121
    3. '1' → logprob: -10.000105857849121
    4. 'i' → logprob: -14.312605857849121
    5. '
' → logprob: -14.812605857849121
    6. '   ' → logprob: -15.187605857849121
    7. '[' → logprob: -15.500105857849121
    8. '2' → logprob: -16.062606811523438
    9. '۰' → logprob: -16.562606811523438
    10. '(' → logprob: -16.625106811523438

Token 61: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.37575575709342957
    2. ' ==' → logprob: -1.250755786895752
    3. ']==' → logprob: -3.750755786895752
    4. ']' → logprob: -5.750755786895752
    5. ' ' → logprob: -8.875755310058594
    6. ' ]' → logprob: -10.125755310058594
    7. '']==' → logprob: -11.000755310058594
    8. ')' → logprob: -11.625755310058594
    9. '=' → logprob: -12.000755310058594
    10. ')==' → logprob: -12.125755310058594

Token 62: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11302099376916885
    2. ' ==' → logprob: -2.238020896911621
    3. ']==' → logprob: -8.738020896911621
    4. '=' → logprob: -11.488020896911621
    5. ' ' → logprob: -11.613020896911621
    6. ']' → logprob: -11.738020896911621
    7. '===' → logprob: -12.738020896911621
    8. '==
' → logprob: -12.738020896911621
    9. ')' → logprob: -13.613020896911621
    10. ')==' → logprob: -13.863020896911621

Token 63: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0630406066775322
    2. '1' → logprob: -4.313040733337402
    3. ' (' → logprob: -4.313040733337402
    4. 'i' → logprob: -4.438040733337402
    5. ' ' → logprob: -4.563040733337402
    6. ' ==' → logprob: -4.938040733337402
    7. '==' → logprob: -5.813040733337402
    8. '(i' → logprob: -7.563040733337402
    9. '(' → logprob: -8.188040733337402
    10. '=' → logprob: -8.563040733337402

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5406320691108704
    2. 'i' → logprob: -1.9156320095062256
    3. ' i' → logprob: -1.9156320095062256
    4. ' (' → logprob: -2.5406320095062256
    5. '(i' → logprob: -3.5406320095062256
    6. ' ' → logprob: -4.290632247924805
    7. '(' → logprob: -7.040632247924805
    8. ' n' → logprob: -9.228132247924805
    9. '(n' → logprob: -9.290632247924805
    10. 'n' → logprob: -9.353132247924805

Token 65: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1810644119977951
    2. ' ==' → logprob: -1.8060643672943115
    3. ']==' → logprob: -6.931064605712891
    4. ')' → logprob: -8.55606460571289
    5. ')==' → logprob: -9.93106460571289
    6. ']' → logprob: -10.05606460571289
    7. ' ' → logprob: -10.55606460571289
    8. '!=' → logprob: -11.30606460571289
    9. '==
' → logprob: -12.43106460571289
    10. ' !=' → logprob: -12.55606460571289

Token 66: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34845981001853943
    2. ' i' → logprob: -1.2234598398208618
    3. ' ' → logprob: -11.84846019744873
    4. '   ' → logprob: -12.34846019744873
    5. '	i' → logprob: -12.84846019744873
    6. '  ' → logprob: -15.47346019744873
    7. ')i' → logprob: -15.84846019744873
    8. ')' → logprob: -16.098459243774414
    9. ' ' → logprob: -16.223459243774414
    10. '    ' → logprob: -16.473459243774414

Token 67: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0021364595741033554
    2. ']))
' → logprob: -7.00213623046875
    3. ']' → logprob: -7.12713623046875
    4. ']))

' → logprob: -8.62713623046875
    5. '])' → logprob: -9.00213623046875
    6. ' ]' → logprob: -9.62713623046875
    7. '])))' → logprob: -11.50213623046875
    8. ' and' → logprob: -11.62713623046875
    9. ' ' → logprob: -12.00213623046875
    10. '))' → logprob: -12.12713623046875

Token 68: '   ' (ID: 271)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6919493675231934
    2. ')' → logprob: -0.8169493675231934
    3. ' if' → logprob: -3.4419493675231934
    4. 'if' → logprob: -4.441949367523193
    5. ' )
' → logprob: -5.191949367523193
    6. ' )' → logprob: -5.816949367523193
    7. ')

' → logprob: -6.191949367523193
    8. '   ' → logprob: -6.691949367523193
    9. '])' → logprob: -7.191949367523193
    10. ' ' → logprob: -7.566949367523193

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33539748191833496
    2. 'if' (adapté à ' if') → logprob: -1.960397481918335
    3. ')' → logprob: -2.710397481918335
    4. '   ' → logprob: -2.835397481918335
    5. ' for' → logprob: -5.460397720336914
    6. ' ' → logprob: -6.335397720336914
    7. 'for' → logprob: -6.460397720336914
    8. 'dd' → logprob: -6.585397720336914
    9. '<|end|>' → logprob: -6.585397720336914
    10. '
' → logprob: -6.835397720336914

Token 70: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.11566147208213806
    2. 'len' → logprob: -2.490661382675171
    3. ' not' → logprob: -3.740661382675171
    4. ' dd' → logprob: -6.49066162109375
    5. 'not' → logprob: -7.74066162109375
    6. ' ' → logprob: -8.11566162109375
    7. 'dd' → logprob: -8.49066162109375
    8. ' le' → logprob: -9.99066162109375
    9. '(len' → logprob: -10.24066162109375
    10. ' l' → logprob: -10.74066162109375

Token 71: '(dd' (ID: 131879)
  Prédit: '(dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dd' → logprob: -0.012966093607246876
    2. '(' → logprob: -4.387966156005859
    3. ' (' → logprob: -8.26296615600586
    4. '(j' → logprob: -8.76296615600586
    5. '(d' → logprob: -10.88796615600586
    6. 'dd' → logprob: -12.13796615600586
    7. '(def' → logprob: -12.51296615600586
    8. 's' → logprob: -13.13796615600586
    9. ' dd' → logprob: -13.26296615600586
    10. '(set' → logprob: -13.38796615600586

Token 72: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.542151689529419
    2. ')' → logprob: -1.292151689529419
    3. '==' → logprob: -2.292151689529419
    4. ' <' → logprob: -4.41715145111084
    5. ' )' → logprob: -4.79215145111084
    6. ' !=' → logprob: -4.79215145111084
    7. ' >' → logprob: -5.04215145111084
    8. ' ' → logprob: -6.16715145111084
    9. ' <=' → logprob: -6.54215145111084
    10. '>' → logprob: -6.66715145111084

Token 73: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24299460649490356
    2. '==' → logprob: -1.8679945468902588
    3. ' <' → logprob: -3.992994546890259
    4. ' >' → logprob: -4.242994785308838
    5. ' !=' → logprob: -4.367994785308838
    6. ' <=' → logprob: -5.242994785308838
    7. '<' → logprob: -5.867994785308838
    8. '>' → logprob: -5.992994785308838
    9. '!=' → logprob: -6.367994785308838
    10. ' ' → logprob: -6.992994785308838

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29893824458122253
    2. ' ' → logprob: -1.673938274383545
    3. '0' → logprob: -2.673938274383545
    4. 'n' → logprob: -7.298938274383545
    5. '2' → logprob: -7.548938274383545
    6. ' n' → logprob: -7.798938274383545
    7. 'len' → logprob: -9.923937797546387
    8. 'm' → logprob: -10.173937797546387
    9. ' len' → logprob: -10.173937797546387
    10. '3' → logprob: -10.423937797546387

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02429259940981865
    2. ' ' → logprob: -4.274292469024658
    3. '0' → logprob: -4.774292469024658
    4. '2' → logprob: -6.774292469024658
    5. 'n' → logprob: -8.274292945861816
    6. 'm' → logprob: -9.649292945861816
    7. '3' → logprob: -9.774292945861816
    8. ' n' → logprob: -11.024292945861816
    9. '10' → logprob: -11.461792945861816
    10. 'len' → logprob: -11.461792945861816

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017094480572268367
    2. ' :' → logprob: -6.876709461212158
    3. ' and' → logprob: -8.126708984375
    4. ':
' → logprob: -8.376708984375
    5. ' or' → logprob: -9.751708984375
    6. 'and' → logprob: -10.501708984375
    7. '=' → logprob: -10.501708984375
    8. '):' → logprob: -12.251708984375
    9. ':def' → logprob: -12.251708984375
    10. '==' → logprob: -12.376708984375

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3283723294734955
    2. ' is' → logprob: -1.7033723592758179
    3. 'is' → logprob: -2.5783722400665283
    4. '       ' → logprob: -4.453372478485107
    5. '    ' → logprob: -5.328372478485107
    6. ' ' → logprob: -6.328372478485107
    7. ':' → logprob: -7.328372478485107
    8. '=' → logprob: -7.703372478485107
    9. '```' → logprob: -8.07837200164795
    10. '    
' → logprob: -8.20337200164795

Token 78: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12394019216299057
    2. 'is' (adapté à ' is') → logprob: -2.2489402294158936
    3. '   ' → logprob: -4.6239399909973145
    4. ' ' → logprob: -7.6239399909973145
    5. '    ' → logprob: -8.498940467834473
    6. ' break' → logprob: -9.123940467834473
    7. '```' → logprob: -9.498940467834473
    8. '
' → logprob: -9.748940467834473
    9. '    
' → logprob: -9.748940467834473
    10. '  ' → logprob: -10.248940467834473

Token 79: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -11.500014305114746
    3. '_false' → logprob: -13.250014305114746
    4. ' _' → logprob: -14.375014305114746
    5. '_em' → logprob: -14.625014305114746
    6. '_EMPTY' → logprob: -15.000014305114746
    7. '_emp' → logprob: -15.125014305114746
    8. 'empty' → logprob: -16.12501335144043
    9. '_true' → logprob: -16.75001335144043
    10. '_none' → logprob: -17.25001335144043

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04309761896729469
    2. '=' → logprob: -3.168097734451294
    3. ' ' → logprob: -9.668097496032715
    4. '=True' → logprob: -10.543097496032715
    5. ' |=' → logprob: -12.918097496032715
    6. ' ' → logprob: -13.668097496032715
    7. 's' → logprob: -14.043097496032715
    8. 'True' → logprob: -14.043097496032715
    9. '_' → logprob: -14.168097496032715
    10. ' True' → logprob: -14.668097496032715

Token 81: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.38687217235565186
    2. ' True' → logprob: -1.1368721723556519
    3. 'False' → logprob: -13.886872291564941
    4. '=True' → logprob: -16.636871337890625
    5. ' False' → logprob: -16.886871337890625
    6. ' ' → logprob: -17.261871337890625
    7. '(True' → logprob: -18.011871337890625
    8. ' Tru' → logprob: -18.011871337890625
    9. 'Tr' → logprob: -19.011871337890625
    10. 'true' → logprob: -19.386871337890625

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07315011322498322
    2. '   ' → logprob: -2.823150157928467
    3. ' ' → logprob: -5.823150157928467
    4. '    ' → logprob: -5.948150157928467
    5. '           ' → logprob: -6.698150157928467
    6. ' else' → logprob: -6.823150157928467
    7. '        ' → logprob: -7.448150157928467
    8. '    
' → logprob: -7.698150157928467
    9. '  ' → logprob: -8.073149681091309
    10. '	' → logprob: -8.198149681091309

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07022407650947571
    2. '   ' → logprob: -2.6952240467071533
    3. '           ' → logprob: -9.320223808288574
    4. ' else' → logprob: -9.945223808288574
    5. '	' → logprob: -10.570223808288574
    6. '    
' → logprob: -10.570223808288574
    7. '    ' → logprob: -10.695223808288574
    8. '        
' → logprob: -11.070223808288574
    9. '     ' → logprob: -11.820223808288574
    10. '        ' → logprob: -11.945223808288574

Token 84: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5262073874473572
    2. ' break' → logprob: -1.401207447052002
    3. 'break' (adapté à ' break') → logprob: -2.401207447052002
    4. '   ' → logprob: -2.651207447052002
    5. '	break' → logprob: -6.651207447052002
    6. ' ' → logprob: -9.151206970214844
    7. '```' → logprob: -9.151206970214844
    8. '           ' → logprob: -10.026206970214844
    9. ' ' → logprob: -11.026206970214844
    10. '
' → logprob: -11.276206970214844

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007173155900090933
    2. '    
' → logprob: -8.000717163085938
    3. 'jou' → logprob: -9.625717163085938
    4. '
' → logprob: -9.750717163085938
    5. ')' → logprob: -10.250717163085938
    6. 'else' → logprob: -10.500717163085938
    7. 's' → logprob: -10.750717163085938
    8. '        
' → logprob: -11.000717163085938
    9. '<|end|>' → logprob: -11.250717163085938
    10. ' ' → logprob: -11.250717163085938

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002290494740009308
    2. '       ' → logprob: -7.877290725708008
    3. ' ' → logprob: -8.252290725708008
    4. 'jou' → logprob: -8.377290725708008
    5. ' else' → logprob: -8.502290725708008
    6. '    
' → logprob: -8.877290725708008
    7. '   ' → logprob: -8.877290725708008
    8. '  ' → logprob: -9.252290725708008
    9. 'else' → logprob: -9.252290725708008
    10. '    ' → logprob: -9.252290725708008

Token 87: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04346863552927971
    2. 'if' → logprob: -3.418468713760376
    3. ' if' → logprob: -5.543468475341797
    4. 'jou' → logprob: -6.043468475341797
    5. 'elif' (adapté à ' elif') → logprob: -6.543468475341797
    6. 'else' → logprob: -6.793468475341797
    7. ' ' → logprob: -8.168468475341797
    8. '       ' → logprob: -9.043468475341797
    9. '  ' → logprob: -9.293468475341797
    10. ' elif' → logprob: -9.668468475341797

Token 88: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6671730875968933
    2. ' len' → logprob: -0.7921730875968933
    3. ' dd' → logprob: -3.667173147201538
    4. 'dd' → logprob: -4.792172908782959
    5. ' ' → logprob: -10.292173385620117
    6. ' not' → logprob: -10.417173385620117
    7. 'not' → logprob: -11.417173385620117
    8. '	len' → logprob: -11.479673385620117
    9. '(len' → logprob: -11.792173385620117
    10. ' d' → logprob: -12.042173385620117

Token 89: '(dd' (ID: 131879)
  Prédit: '(dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dd' → logprob: -0.0014634536346420646
    2. '(' → logprob: -7.251463413238525
    3. ' (' → logprob: -7.251463413238525
    4. '(d' → logprob: -10.876463890075684
    5. '(ds' → logprob: -12.001463890075684
    6. '(df' → logprob: -12.626463890075684
    7. '(def' → logprob: -12.876463890075684
    8. '(dp' → logprob: -13.126463890075684
    9. '(ss' → logprob: -13.751463890075684
    10. 's' → logprob: -13.876463890075684

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014347892254590988
    2. ' ==' → logprob: -5.014348030090332
    3. '==' → logprob: -5.139348030090332
    4. ')==' → logprob: -6.514348030090332
    5. ' )' → logprob: -8.514348030090332
    6. '）' → logprob: -10.889348030090332
    7. ' ' → logprob: -12.139348030090332
    8. '=' → logprob: -12.139348030090332
    9. '()' → logprob: -12.264348030090332
    10. '	' → logprob: -12.389348030090332

Token 91: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04885531961917877
    2. ' ==' → logprob: -3.0488553047180176
    3. '=' → logprob: -8.923855781555176
    4. ')==' → logprob: -10.298855781555176
    5. '===' → logprob: -10.673855781555176
    6. ']==' → logprob: -10.923855781555176
    7. ' ' → logprob: -11.298855781555176
    8. ')' → logprob: -11.423855781555176
    9. '==
' → logprob: -11.548855781555176
    10. '1' → logprob: -12.298855781555176

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038920626044273376
    2. ' ' → logprob: -3.7889206409454346
    3. '0' → logprob: -4.1639204025268555
    4. ' ' → logprob: -14.038920402526855
    5. '<|end|>' → logprob: -14.101420402526855
    6. '```' → logprob: -14.913920402526855
    7. '   ' → logprob: -15.038920402526855
    8. '...' → logprob: -15.101420402526855
    9. ' exactly' → logprob: -15.226420402526855
    10. '۱' → logprob: -15.288920402526855

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0626392737030983
    2. '0' → logprob: -2.8126392364501953
    3. ' ' → logprob: -7.312639236450195
    4. '```' → logprob: -13.875139236450195
    5. '۱' → logprob: -15.062639236450195
    6. '

' → logprob: -15.687639236450195
    7. '<|end|>' → logprob: -15.812639236450195
    8. '  ' → logprob: -15.875139236450195
    9. 'exact' → logprob: -15.875139236450195
    10. '   ' → logprob: -15.937639236450195

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04875313863158226
    2. ':
' → logprob: -3.048753023147583
    3. '):' → logprob: -9.548752784729004
    4. ')' → logprob: -10.423752784729004
    5. '):
' → logprob: -10.423752784729004
    6. '[' → logprob: -11.798752784729004
    7. ':

' → logprob: -11.923752784729004
    8. ':
' → logprob: -12.423752784729004
    9. ':j' → logprob: -12.423752784729004
    10. '   ' → logprob: -12.673752784729004

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5892735123634338
    2. ':' → logprob: -0.8392735123634338
    3. ':
' → logprob: -5.214273452758789
    4. 'jou' → logprob: -5.964273452758789
    5. '       ' → logprob: -6.714273452758789
    6. '[j' → logprob: -7.214273452758789
    7. '[' → logprob: -7.464273452758789
    8. 'j' → logprob: -7.714273452758789
    9. ' ' → logprob: -7.839273452758789
    10. ')' → logprob: -7.964273452758789

Token 96: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' (adapté à ' jou') → logprob: -0.09003077447414398
    2. ' jou' → logprob: -2.4650306701660156
    3. '   ' → logprob: -7.090030670166016
    4. '       ' → logprob: -9.090030670166016
    5. 'j' → logprob: -9.965030670166016
    6. '    
' → logprob: -11.090030670166016
    7. '```' → logprob: -11.465030670166016
    8. '           ' → logprob: -11.715030670166016
    9. '    ' → logprob: -11.840030670166016
    10. 'joj' → logprob: -12.215030670166016

Token 97: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -4.11996734328568e-05
    2. 'aken' → logprob: -11.375041007995605
    3. 'cken' → logprob: -11.625041007995605
    4. 'uken' → logprob: -12.375041007995605
    5. 'oken' → logprob: -12.750041007995605
    6. 'kenen' → logprob: -13.125041007995605
    7. 'кен' → logprob: -13.250041007995605
    8. 'kens' → logprob: -13.375041007995605
    9. '```' → logprob: -13.375041007995605
    10. ' ken' → logprob: -13.875041007995605

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000953502138145268
    2. '[' → logprob: -7.000953674316406
    3. '[n' → logprob: -11.000953674316406
    4. '[j' → logprob: -11.500953674316406
    5. ' [' → logprob: -12.625953674316406
    6. '=' → logprob: -12.875953674316406
    7. '[(' → logprob: -13.250953674316406
    8. '[d' → logprob: -14.000953674316406
    9. '[int' → logprob: -14.000953674316406
    10. '[f' → logprob: -14.000953674316406

Token 99: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030316898482851684
    2. ']=' → logprob: -8.375303268432617
    3. ' ]' → logprob: -9.625303268432617
    4. '=' → logprob: -12.000303268432617
    5. ' =' → logprob: -15.250303268432617
    6. '`]' → logprob: -16.750303268432617
    7. ' ' → logprob: -17.500303268432617
    8. '[' → logprob: -17.500303268432617
    9. ')' → logprob: -17.625303268432617
    10. '']' → logprob: -17.750303268432617

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741003215312958
    2. '=' → logprob: -0.9741003513336182
    3. ']' → logprob: -11.349100112915039
    4. ']=' → logprob: -12.349100112915039
    5. ' ' → logprob: -12.599100112915039
    6. '[' → logprob: -14.099100112915039
    7. ',' → logprob: -14.349100112915039
    8. ')' → logprob: -14.849100112915039
    9. '＝' → logprob: -14.849100112915039
    10. ' |=' → logprob: -15.349100112915039

Token 101: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.033651694655418396
    2. ' dd' → logprob: -3.40865159034729
    3. ' ' → logprob: -13.533651351928711
    4. 'ddd' → logprob: -13.658651351928711
    5. '(dd' → logprob: -14.033651351928711
    6. 'dds' → logprob: -14.283651351928711
    7. '   ' → logprob: -14.908651351928711
    8. '_dd' → logprob: -15.408651351928711
    9. 'd' → logprob: -15.408651351928711
    10. 'ddi' → logprob: -15.533651351928711

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005796041805297136
    2. '0' → logprob: -7.625579833984375
    3. ' ' → logprob: -9.375579833984375
    4. ' [' → logprob: -12.000579833984375
    5. '1' → logprob: -15.625579833984375
    6. '][' → logprob: -16.125579833984375
    7. '```' → logprob: -16.625579833984375
    8. '
' → logprob: -16.813079833984375
    9. '(' → logprob: -16.875579833984375
    10. '[-' → logprob: -17.000579833984375

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.250014305114746
    3. '[' → logprob: -14.500014305114746
    4. ']' → logprob: -15.000014305114746
    5. '   ' → logprob: -16.12501335144043
    6. '-' → logprob: -16.25001335144043
    7. ')' → logprob: -16.75001335144043
    8. '1' → logprob: -17.00001335144043
    9. '])' → logprob: -17.12501335144043
    10. '00' → logprob: -17.75001335144043

Token 104: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004048836883157492
    2. ']' → logprob: -5.879048824310303
    3. '<|end|>' → logprob: -7.379048824310303
    4. '}' → logprob: -7.879048824310303
    5. ' )' → logprob: -9.379049301147461
    6. ')
' → logprob: -9.379049301147461
    7. ')]' → logprob: -10.754049301147461
    8. '])' → logprob: -11.504049301147461
    9. '   ' → logprob: -11.629049301147461
    10. '<|end|>' → logprob: -12.004049301147461

Token 105: 'num' (ID: 4571)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34840747714042664
    2. '<|end|>' → logprob: -1.348407506942749
    3. ' 
' → logprob: -4.34840726852417
    4. '_' → logprob: -5.59840726852417
    5. ':' → logprob: -5.59840726852417
    6. '[' → logprob: -5.97340726852417
    7. ')' → logprob: -5.97340726852417
    8. '   ' → logprob: -6.59840726852417
    9. '\n' → logprob: -6.84840726852417
    10. '
' → logprob: -6.97340726852417

Token 106: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3789864778518677
    2. '_' → logprob: -1.3789864778518677
    3. '_conditions' → logprob: -4.128986358642578
    4. ' =' → logprob: -4.628986358642578
    5. '_counts' → logprob: -5.003986358642578
    6. '_constraints' → logprob: -5.253986358642578
    7. '_s' → logprob: -5.503986358642578
    8. '_list' → logprob: -6.753986358642578
    9. '_count' → logprob: -6.753986358642578
    10. '_choices' → logprob: -6.753986358642578

Token 107: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2513715624809265
    2. 'len' → logprob: -2.2513716220855713
    3. 'n' → logprob: -3.0013716220855713
    4. ' ' → logprob: -4.001371383666992
    5. 'sum' → logprob: -4.001371383666992
    6. ' n' → logprob: -4.501371383666992
    7. ' len' → logprob: -4.751371383666992
    8. '1' → logprob: -5.251371383666992
    9. ' sum' → logprob: -6.001371383666992
    10. '[' → logprob: -7.501371383666992

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26104214787483215
    2. 'jou' → logprob: -2.6360421180725098
    3. '1' → logprob: -2.7610421180725098
    4. 'i' → logprob: -3.0110421180725098
    5. '-' → logprob: -4.38604211807251
    6. ' ' → logprob: -4.51104211807251
    7. 'False' → logprob: -5.13604211807251
    8. 'int' → logprob: -6.01104211807251
    9. 'None' → logprob: -6.01104211807251
    10. ' i' → logprob: -6.13604211807251

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08511584252119064
    2. ' for' → logprob: -2.960115909576416
    3. 'for' → logprob: -4.710115909576416
    4. ' ]' → logprob: -4.835115909576416
    5. ']*(' → logprob: -4.960115909576416
    6. ']*' → logprob: -5.335115909576416
    7. ',' → logprob: -7.085115909576416
    8. ']+' → logprob: -10.335115432739258
    9. ',n' → logprob: -10.335115432739258
    10. ')' → logprob: -10.460115432739258

Token 110: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1430341005325317
    2. 'for' → logprob: -1.5180341005325317
    3. '<|end|>' → logprob: -2.018033981323242
    4. '*' → logprob: -2.518033981323242
    5. ' *' → logprob: -2.893033981323242
    6. '
' → logprob: -3.018033981323242
    7. '*(' → logprob: -3.893033981323242
    8. ']' → logprob: -4.018033981323242
    9. '(n' → logprob: -4.143033981323242
    10. ',' → logprob: -4.268033981323242

Token 111: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1422385573387146
    2. '(n' → logprob: -2.1422386169433594
    3. 'm' → logprob: -6.017238616943359
    4. '(' → logprob: -6.017238616943359
    5. '10' → logprob: -6.142238616943359
    6. '100' → logprob: -6.517238616943359
    7. '3' → logprob: -6.517238616943359
    8. '(m' → logprob: -6.767238616943359
    9. '101' → logprob: -7.017238616943359
    10. 'len' → logprob: -8.01723861694336

Token 112: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09636082500219345
    2. ' for' → logprob: -2.721360921859741
    3. 'count' → logprob: -5.221360683441162
    4. 'num' → logprob: -5.346360683441162
    5. '<|end|>' → logprob: -5.471360683441162
    6. 'cnt' → logprob: -6.221360683441162
    7. 's' → logprob: -6.596360683441162
    8. ')' → logprob: -6.971360683441162
    9. '[' → logprob: -7.346360683441162
    10. 'i' → logprob: -7.596360683441162

Token 113: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012024736031889915
    2. ' for' → logprob: -4.887024879455566
    3. 'i' → logprob: -6.637024879455566
    4. 'num' → logprob: -6.762024879455566
    5. ')' → logprob: -8.012024879455566
    6. '+' → logprob: -8.262024879455566
    7. 'count' → logprob: -8.387024879455566
    8. ' ' → logprob: -8.387024879455566
    9. 'while' → logprob: -8.887024879455566
    10. 'if' → logprob: -9.762024879455566

Token 114: ' n' (ID: 297)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.7908844947814941
    2. ' is' → logprob: -1.1658844947814941
    3. ' not' → logprob: -2.165884494781494
    4. 'not' → logprob: -2.165884494781494
    5. 'len' → logprob: -5.915884494781494
    6. ' len' → logprob: -6.165884494781494
    7. 'n' → logprob: -7.790884494781494
    8. ' ' → logprob: -8.790884017944336
    9. ' n' → logprob: -9.540884017944336
    10. '  ' → logprob: -10.665884017944336

Token 115: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.050739094614982605
    2. '>' → logprob: -3.300739049911499
    3. ' ' → logprob: -5.300739288330078
    4. ' ==' → logprob: -5.675739288330078
    5. ' <' → logprob: -6.550739288330078
    6. ' <=' → logprob: -7.175739288330078
    7. '%' → logprob: -7.425739288330078
    8. '==' → logprob: -8.175739288330078
    9. ' >=' → logprob: -8.300739288330078
    10. ' %' → logprob: -8.300739288330078

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11523524671792984
    2. '0' → logprob: -2.6152353286743164
    3. ' ' → logprob: -3.3652353286743164
    4. '2' → logprob: -7.240235328674316
    5. 'm' → logprob: -8.240235328674316
    6. '3' → logprob: -9.865235328674316
    7. ' m' → logprob: -11.115235328674316
    8. '  ' → logprob: -11.240235328674316
    9. '4' → logprob: -11.302735328674316
    10. '   ' → logprob: -11.490235328674316

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07196009904146194
    2. '0' → logprob: -2.696960210800171
    3. '2' → logprob: -6.696959972381592
    4. ' ' → logprob: -8.07196044921875
    5. 'm' → logprob: -8.19696044921875
    6. '3' → logprob: -9.82196044921875
    7. 'len' → logprob: -10.19696044921875
    8. 'num' → logprob: -11.07196044921875
    9. '4' → logprob: -11.38446044921875
    10. '100' → logprob: -11.57196044921875

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07894586026668549
    2. ':
' → logprob: -2.5789458751678467
    3. ' and' → logprob: -10.203946113586426
    4. ':return' → logprob: -12.078946113586426
    5. '   ' → logprob: -12.453946113586426
    6. ' :' → logprob: -13.203946113586426
    7. 'and' → logprob: -13.203946113586426
    8. 'print' → logprob: -13.578946113586426
    9. ':
' → logprob: -13.703946113586426
    10. ' :
' → logprob: -13.828946113586426

Token 119: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34854868054389954
    2. '   ' → logprob: -1.7235486507415771
    3. 'print' → logprob: -2.473548650741577
    4. ':' → logprob: -3.598548650741577
    5. ' print' → logprob: -5.598548889160156
    6. '
' → logprob: -9.473548889160156
    7. ' :
' → logprob: -9.473548889160156
    8. ' ' → logprob: -9.598548889160156
    9. '0' → logprob: -9.598548889160156
    10. 'num' → logprob: -9.973548889160156

Token 120: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002183449687436223
    2. 'if' (adapté à ' if') → logprob: -6.502183437347412
    3. 'num' → logprob: -7.502183437347412
    4. ' print' → logprob: -10.00218391418457
    5. 'for' → logprob: -10.50218391418457
    6. '   ' → logprob: -11.37718391418457
    7. '1' → logprob: -11.62718391418457
    8. '
' → logprob: -11.87718391418457
    9. 'pr' → logprob: -12.25218391418457
    10. 'prin' → logprob: -12.25218391418457

Token 121: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3769078254699707
    2. 'is' → logprob: -1.3769078254699707
    3. 'len' → logprob: -2.0019078254699707
    4. '1' → logprob: -2.3769078254699707
    5. 'm' → logprob: -2.6269078254699707
    6. 'jou' → logprob: -2.7519078254699707
    7. 'not' → logprob: -3.6269078254699707
    8. 'n' → logprob: -3.6269078254699707
    9. 'num' → logprob: -3.7519078254699707
    10. ' ' → logprob: -3.8769078254699707

Token 122: '0' (ID: 15)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8952295780181885
    2. 'm' → logprob: -1.7702295780181885
    3. '0' → logprob: -1.8952295780181885
    4. 'len' → logprob: -1.8952295780181885
    5. '1' → logprob: -2.8952295780181885
    6. 'not' → logprob: -3.3952295780181885
    7. 'n' → logprob: -4.270229339599609
    8. 'num' → logprob: -4.270229339599609
    9. 'jou' → logprob: -6.020229339599609
    10. 'j' → logprob: -8.77022933959961

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2636030614376068
    2. ' not' → logprob: -1.8886030912399292
    3. 'in' → logprob: -3.3886029720306396
    4. ' ==' → logprob: -3.8886029720306396
    5. 'not' → logprob: -4.763603210449219
    6. '==' → logprob: -4.888603210449219
    7. ' <' → logprob: -5.638603210449219
    8. ':' → logprob: -6.013603210449219
    9. ' <=' → logprob: -7.013603210449219
    10. ' ' → logprob: -7.263603210449219

Token 124: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.0025493851862847805
    2. ' jou' → logprob: -6.002549171447754
    3. 'num' → logprob: -10.752549171447754
    4. 'j' → logprob: -11.377549171447754
    5. 'defs' → logprob: -11.502549171447754
    6. 'jour' → logprob: -11.877549171447754
    7. 'def' → logprob: -12.377549171447754
    8. 'jo' → logprob: -12.627549171447754
    9. 'joy' → logprob: -13.127549171447754
    10. '  ' → logprob: -13.502549171447754

Token 125: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -3.953082341467962e-05
    2. 'k' → logprob: -11.500039100646973
    3. 'kan' → logprob: -12.125039100646973
    4. 'kou' → logprob: -12.625039100646973
    5. ' ken' → logprob: -12.875039100646973
    6. 'kun' → logprob: -13.125039100646973
    7. 'oken' → logprob: -13.250039100646973
    8. 'cken' → logprob: -13.250039100646973
    9. 'кен' → logprob: -13.375039100646973
    10. '```' → logprob: -13.750039100646973

Token 126: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.29865431785583496
    2. ':
' → logprob: -2.173654317855835
    3. 'and' → logprob: -2.423654317855835
    4. ':' → logprob: -3.173654317855835
    5. ' or' → logprob: -4.798654556274414
    6. '.values' → logprob: -5.673654556274414
    7. 'or' → logprob: -6.673654556274414
    8. '.keys' → logprob: -7.923654556274414
    9. '   ' → logprob: -8.048654556274414
    10. ' ' → logprob: -8.923654556274414

Token 127: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9272891879081726
    2. '   ' → logprob: -1.0522892475128174
    3. ':' → logprob: -2.0522892475128174
    4. 'print' → logprob: -2.5522892475128174
    5. ' and' → logprob: -3.5522892475128174
    6. ' print' → logprob: -4.427289009094238
    7. 'and' → logprob: -5.802289009094238
    8. ' ' → logprob: -6.427289009094238
    9. 'num' → logprob: -6.802289009094238
    10. '==' → logprob: -7.302289009094238

Token 128: ' num' (ID: 2269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11962568759918213
    2. 'num' (adapté à ' num') → logprob: -2.2446255683898926
    3. '   ' → logprob: -5.244625568389893
    4. ' print' → logprob: -7.244625568389893
    5. 'if' → logprob: -7.619625568389893
    6. ' num' → logprob: -8.61962604522705
    7. ' ' → logprob: -10.61962604522705
    8. '[num' → logprob: -11.24462604522705
    9. 'for' → logprob: -11.61962604522705
    10. ' if' → logprob: -11.61962604522705

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04872169345617294
    2. '[j' → logprob: -3.6737217903137207
    3. ' =' → logprob: -4.673721790313721
    4. '[i' → logprob: -5.173721790313721
    5. '.append' → logprob: -5.673721790313721
    6. '=' → logprob: -6.298721790313721
    7. '[:]' → logprob: -6.923721790313721
    8. '[num' → logprob: -7.798721790313721
    9. '[n' → logprob: -8.798721313476562
    10. '[:' → logprob: -9.923721313476562

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -10.625053405761719
    3. 'jou' → logprob: -11.375053405761719
    4. ']' → logprob: -11.500053405761719
    5. 'j' → logprob: -13.250053405761719
    6. '1' → logprob: -13.250053405761719
    7. '-' → logprob: -14.250053405761719
    8. '   ' → logprob: -14.687553405761719
    9. ')' → logprob: -14.875053405761719
    10. '```' → logprob: -14.937553405761719

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04678579047322273
    2. '=' → logprob: -3.796785831451416
    3. ']=' → logprob: -3.796785831451416
    4. ' =' → logprob: -7.921785831451416
    5. ' ]' → logprob: -8.296785354614258
    6. ']+=' → logprob: -8.796785354614258
    7. '[' → logprob: -11.171785354614258
    8. ')' → logprob: -11.546785354614258
    9. ' ' → logprob: -11.921785354614258
    10. ']==' → logprob: -12.171785354614258

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07910062372684479
    2. ' =' → logprob: -2.5791006088256836
    3. '+=' → logprob: -8.579100608825684
    4. ' +=' → logprob: -11.079100608825684
    5. ' ' → logprob: -13.454100608825684
    6. '=j' → logprob: -13.579100608825684
    7. '=num' → logprob: -14.454100608825684
    8. '==' → logprob: -14.454100608825684
    9. '＝' → logprob: -14.704100608825684
    10. '=int' → logprob: -14.829100608825684

Token 133: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.005736321676522493
    2. ' jou' → logprob: -5.505736351013184
    3. '1' → logprob: -6.755736351013184
    4. ' ' → logprob: -8.630736351013184
    5. 'j' → logprob: -9.755736351013184
    6. '0' → logprob: -9.880736351013184
    7. 'jug' → logprob: -10.255736351013184
    8. 'jo' → logprob: -10.880736351013184
    9. '2' → logprob: -11.443236351013184
    10. 'joy' → logprob: -11.443236351013184

Token 134: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -9.448370838072151e-05
    2. 'cken' → logprob: -10.000094413757324
    3. 'uken' → logprob: -11.125094413757324
    4. 'kan' → logprob: -12.125094413757324
    5. 'oken' → logprob: -12.125094413757324
    6. 'k' → logprob: -12.500094413757324
    7. 'anken' → logprob: -12.500094413757324
    8. 'ou' → logprob: -12.625094413757324
    9. ' ken' → logprob: -12.875094413757324
    10. 'kon' → logprob: -13.500094413757324

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004338877333793789
    2. '0' → logprob: -7.750433921813965
    3. '[
' → logprob: -13.375433921813965
    4. ' ' → logprob: -15.125433921813965
    5. '```' → logprob: -15.625433921813965
    6. '][' → logprob: -15.687933921813965
    7. '00' → logprob: -15.875433921813965
    8. ']' → logprob: -16.18793296813965
    9. '
' → logprob: -16.31293296813965
    10. '[i' → logprob: -16.50043296813965

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '[' → logprob: -15.000001907348633
    4. ']' → logprob: -16.375001907348633
    5. '```' → logprob: -18.500001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '1' → logprob: -19.375001907348633
    8. ')' → logprob: -20.000001907348633
    9. '(' → logprob: -20.500001907348633
    10. 'i' → logprob: -20.625001907348633

Token 137: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026464125141501427
    2. ']
' → logprob: -3.6514642238616943
    3. ' ]' → logprob: -9.776464462280273
    4. '()]' → logprob: -10.901464462280273
    5. ']%' → logprob: -10.901464462280273
    6. ']

' → logprob: -11.276464462280273
    7. '<|end|>' → logprob: -11.526464462280273
    8. ']
' → logprob: -11.526464462280273
    9. ']()' → logprob: -11.901464462280273
    10. ']()
' → logprob: -12.151464462280273

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10406048595905304
    2. 'else' → logprob: -2.354060411453247
    3. ' else' → logprob: -5.854060649871826
    4. 'elif' → logprob: -7.604060649871826
    5. 'print' → logprob: -7.979060649871826
    6. '
' → logprob: -10.979060173034668
    7. '[' → logprob: -11.229060173034668
    8. '       ' → logprob: -11.229060173034668
    9. '    
' → logprob: -11.604060173034668
    10. '[]' → logprob: -11.604060173034668

Token 139: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.014554334804415703
    2. ' else' → logprob: -4.264554500579834
    3. 'elif' → logprob: -8.514554023742676
    4. 'print' → logprob: -9.139554023742676
    5. '
' → logprob: -11.014554023742676
    6. '   ' → logprob: -11.264554023742676
    7. '0' → logprob: -12.139554023742676
    8. '[' → logprob: -12.264554023742676
    9. '1' → logprob: -12.514554023742676
    10. '	else' → logprob: -12.764554023742676

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06255238503217697
    2. ':
' → logprob: -2.8125524520874023
    3. '   ' → logprob: -7.562552452087402
    4. '       ' → logprob: -11.187552452087402
    5. '[' → logprob: -11.437552452087402
    6. 'num' → logprob: -11.437552452087402
    7. ',' → logprob: -12.062552452087402
    8. ' num' → logprob: -12.187552452087402
    9. '0' → logprob: -12.562552452087402
    10. '=' → logprob: -12.937552452087402

Token 141: '       ' (ID: 309)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.35245922207832336
    2. 'num' → logprob: -1.602459192276001
    3. '   ' → logprob: -2.352459192276001
    4. ' ' → logprob: -9.227458953857422
    5. '0' → logprob: -9.352458953857422
    6. '	num' → logprob: -9.602458953857422
    7. '1' → logprob: -10.102458953857422
    8. ' for' → logprob: -10.102458953857422
    9. 'import' → logprob: -10.352458953857422
    10. '[num' → logprob: -10.477458953857422

Token 142: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.07076721638441086
    2. ' num' → logprob: -2.6957671642303467
    3. 'import' → logprob: -8.570767402648926
    4. 'for' → logprob: -8.695767402648926
    5. '   ' → logprob: -9.320767402648926
    6. '1' → logprob: -9.320767402648926
    7. 'from' → logprob: -9.445767402648926
    8. ' for' → logprob: -9.695767402648926
    9. '
' → logprob: -10.195767402648926
    10. 'print' → logprob: -10.320767402648926

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1888679839321412e-05
    2. '=' → logprob: -11.750021934509277
    3. '=[' → logprob: -12.125021934509277
    4. ' =' → logprob: -12.750021934509277
    5. '[
' → logprob: -13.125021934509277
    6. ' [' → logprob: -13.625021934509277
    7. '[i' → logprob: -14.500021934509277
    8. '```' → logprob: -14.500021934509277
    9. '0' → logprob: -15.375021934509277
    10. ' =[' → logprob: -15.625021934509277

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1645723134279251
    2. '1' → logprob: -2.539572238922119
    3. '9' → logprob: -2.789572238922119
    4. '999' → logprob: -5.664572238922119
    5. '100' → logprob: -6.664572238922119
    6. '10' → logprob: -6.789572238922119
    7. ']' → logprob: -6.789572238922119
    8. '99' → logprob: -7.164572238922119
    9. '3' → logprob: -7.789572238922119
    10. '-' → logprob: -7.789572238922119

Token 145: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003770270384848118
    2. '=' → logprob: -6.378770351409912
    3. ']=' → logprob: -6.503770351409912
    4. ' ]' → logprob: -8.378769874572754
    5. ' =' → logprob: -8.628769874572754
    6. '[' → logprob: -9.128769874572754
    7. ']+=' → logprob: -10.628769874572754
    8. ')' → logprob: -11.003769874572754
    9. '}' → logprob: -13.878769874572754
    10. '0' → logprob: -13.878769874572754

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.504040356958285e-05
    2. ' =' → logprob: -9.750064849853516
    3. '+=' → logprob: -12.125064849853516
    4. '[' → logprob: -13.875064849853516
    5. ')' → logprob: -16.625064849853516
    6. ']' → logprob: -16.750064849853516
    7. '.=' → logprob: -16.750064849853516
    8. '=}' → logprob: -17.875064849853516
    9. '=

' → logprob: -18.000064849853516
    10. ']=' → logprob: -18.125064849853516

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15746542811393738
    2. '0' → logprob: -2.2824654579162598
    3. '9' → logprob: -3.7824654579162598
    4. '100' → logprob: -4.90746545791626
    5. '10' → logprob: -5.03246545791626
    6. '3' → logprob: -5.78246545791626
    7. 'm' → logprob: -7.03246545791626
    8. '7' → logprob: -7.15746545791626
    9. '2' → logprob: -7.53246545791626
    10. '-' → logprob: -8.407464981079102

Token 148: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2492591142654419
    2. '0' → logprob: -1.624259114265442
    3. '100' → logprob: -4.874258995056152
    4. '9' → logprob: -5.124258995056152
    5. '10' → logprob: -5.374258995056152
    6. '3' → logprob: -6.124258995056152
    7. '202' → logprob: -7.624258995056152
    8. '7' → logprob: -7.749258995056152
    9. '2' → logprob: -7.749258995056152
    10. '200' → logprob: -8.249258995056152

Token 149: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23261485993862152
    2. '<|end|>' → logprob: -2.607614755630493
    3. 'elif' → logprob: -3.107614755630493
    4. ' else' → logprob: -3.232614755630493
    5. '
' → logprob: -3.357614755630493
    6. '\n' → logprob: -4.982614994049072
    7. '    
' → logprob: -6.857614994049072
    8. '   ' → logprob: -6.982614994049072
    9. ' 
' → logprob: -7.232614994049072
    10. ')' → logprob: -7.482614994049072

Token 150: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.39941465854644775
    2. '
' → logprob: -2.024414539337158
    3. '<|end|>' → logprob: -2.399414539337158
    4. ' else' → logprob: -3.024414539337158
    5. 'elif' → logprob: -3.524414539337158
    6. '\n' → logprob: -4.149414539337158
    7. '#' → logprob: -6.024414539337158
    8. ' ' → logprob: -6.274414539337158
    9. ' 
' → logprob: -6.649414539337158
    10. 'for' → logprob: -7.149414539337158

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01130705140531063
    2. ':
' → logprob: -4.511307239532471
    3. ' :' → logprob: -8.511306762695312
    4. '   ' → logprob: -10.136306762695312
    5. ' :
' → logprob: -11.636306762695312
    6. ',' → logprob: -12.511306762695312
    7. ':
' → logprob: -13.386306762695312
    8. ':

' → logprob: -14.011306762695312
    9. '：' → logprob: -14.636306762695312
    10. ' if' → logprob: -14.761306762695312

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48833584785461426
    2. ' for' → logprob: -0.9883358478546143
    3. ' from' → logprob: -5.238335609436035
    4. 'for' → logprob: -5.488335609436035
    5. ' import' → logprob: -7.363335609436035
    6. ' ind' → logprob: -7.363335609436035
    7. 'import' → logprob: -7.363335609436035
    8. 'from' → logprob: -7.488335609436035
    9. ' i' → logprob: -7.863335609436035
    10. '```' → logprob: -8.113335609436035

Token 153: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39132797718048096
    2. 'for' → logprob: -1.266327977180481
    3. '   ' → logprob: -3.8913278579711914
    4. ' from' → logprob: -4.766327857971191
    5. 'from' → logprob: -5.141327857971191
    6. ' dp' → logprob: -6.641327857971191
    7. 'dp' → logprob: -6.641327857971191
    8. ' if' → logprob: -7.016327857971191
    9. 'if' (adapté à ' if') → logprob: -7.391327857971191
    10. 'import' → logprob: -7.891327857971191

Token 154: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30095919966697693
    2. '0' → logprob: -1.6759592294692993
    3. ' is' → logprob: -3.5509591102600098
    4. ' n' → logprob: -4.30095911026001
    5. ' not' → logprob: -4.67595911026001
    6. 'is' → logprob: -5.42595911026001
    7. '1' → logprob: -5.42595911026001
    8. 'n' → logprob: -5.55095911026001
    9. ' len' → logprob: -5.80095911026001
    10. 'len' → logprob: -6.67595911026001

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1072799414396286
    2. 'is' → logprob: -3.2322800159454346
    3. 'n' → logprob: -3.6072800159454346
    4. ' ' → logprob: -4.9822797775268555
    5. 'len' → logprob: -4.9822797775268555
    6. '1' → logprob: -5.1072797775268555
    7. 'jou' → logprob: -5.2322797775268555
    8. 'not' → logprob: -5.8572797775268555
    9. 'num' → logprob: -6.4822797775268555
    10. '(' → logprob: -6.6072797775268555

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5574867725372314
    2. ' not' → logprob: -0.9324867725372314
    3. 'not' → logprob: -3.9324867725372314
    4. 'in' → logprob: -4.432486534118652
    5. ' ' → logprob: -7.307486534118652
    6. ' ==' → logprob: -7.682486534118652
    7. '==' → logprob: -8.057486534118652
    8. ':' → logprob: -8.182486534118652
    9. '[' → logprob: -8.807486534118652
    10. ']' → logprob: -9.432486534118652

Token 157: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.01604609750211239
    2. ' jou' → logprob: -4.141046047210693
    3. 'j' → logprob: -11.516046524047852
    4. ' ' → logprob: -14.641046524047852
    5. 'jour' → logprob: -14.891046524047852
    6. '```' → logprob: -15.266046524047852
    7. 'tou' → logprob: -15.891046524047852
    8. '   ' → logprob: -16.14104652404785
    9. '[j' → logprob: -16.26604652404785
    10. 'kou' → logprob: -16.39104652404785

Token 158: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.0001487140398239717
    2. 'k' → logprob: -9.62514877319336
    3. 'kens' → logprob: -10.75014877319336
    4. 'cken' → logprob: -11.25014877319336
    5. 'kan' → logprob: -11.50014877319336
    6. 'kon' → logprob: -11.75014877319336
    7. 'kun' → logprob: -12.12514877319336
    8. 'uken' → logprob: -12.50014877319336
    9. 'kou' → logprob: -12.62514877319336
    10. 'kken' → logprob: -12.62514877319336

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07897670567035675
    2. ':
' → logprob: -2.703976631164551
    3. ' and' → logprob: -4.828976631164551
    4. 'and' → logprob: -7.953976631164551
    5. '   ' → logprob: -8.57897663116455
    6. '==' → logprob: -9.07897663116455
    7. '):' → logprob: -9.32897663116455
    8. ' :' → logprob: -9.70397663116455
    9. '       ' → logprob: -10.07897663116455
    10. '):
' → logprob: -10.45397663116455

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2750276029109955
    2. ':' → logprob: -1.9000276327133179
    3. ':
' → logprob: -3.4000275135040283
    4. ' and' → logprob: -3.5250275135040283
    5. '   ' → logprob: -4.025027751922607
    6. 'and' → logprob: -5.400027751922607
    7. 'num' → logprob: -6.025027751922607
    8. ' num' → logprob: -6.775027751922607
    9. '==' → logprob: -8.52502727508545
    10. '.' → logprob: -8.77502727508545

Token 161: ' if' (ID: 538)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.024162273854017258
    2. ' num' → logprob: -4.649162292480469
    3. 'if' (adapté à ' if') → logprob: -4.899162292480469
    4. '   ' → logprob: -5.149162292480469
    5. ' if' → logprob: -7.399162292480469
    6. ' ' → logprob: -9.399162292480469
    7. 'for' → logprob: -9.774162292480469
    8. 'jou' → logprob: -10.149162292480469
    9. 'nums' → logprob: -10.586662292480469
    10. 'start' → logprob: -10.649162292480469

Token 162: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.16540317237377167
    2. ' jou' → logprob: -1.915403127670288
    3. 'n' → logprob: -6.415403366088867
    4. 'num' → logprob: -6.915403366088867
    5. ' num' → logprob: -7.415403366088867
    6. ' ' → logprob: -7.540403366088867
    7. ' n' → logprob: -8.165403366088867
    8. 'j' → logprob: -8.665403366088867
    9. '1' → logprob: -8.790403366088867
    10. 'len' → logprob: -9.290403366088867

Token 163: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -5.431207682704553e-05
    2. '[' → logprob: -10.750054359436035
    3. ' ken' → logprob: -11.375054359436035
    4. 'cken' → logprob: -11.625054359436035
    5. 'kan' → logprob: -12.000054359436035
    6. 'k' → logprob: -13.750054359436035
    7. '_' → logprob: -14.250054359436035
    8. 'uken' → logprob: -14.250054359436035
    9. 'kens' → logprob: -14.250054359436035
    10. ']' → logprob: -14.375054359436035

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003000696888193488
    2. '0' → logprob: -8.125300407409668
    3. '```' → logprob: -13.625300407409668
    4. '][' → logprob: -14.125300407409668
    5. '==' → logprob: -14.750300407409668
    6. '   ' → logprob: -15.500300407409668
    7. '1' → logprob: -15.750300407409668
    8. ')[' → logprob: -15.750300407409668
    9. '[i' → logprob: -15.750300407409668
    10. '[
' → logprob: -15.875300407409668

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -12.00001049041748
    3. '1' → logprob: -13.75001049041748
    4. ']' → logprob: -13.75001049041748
    5. '   ' → logprob: -13.87501049041748
    6. '```' → logprob: -15.00001049041748
    7. '-' → logprob: -16.000011444091797
    8. ')' → logprob: -16.187511444091797
    9. '
' → logprob: -16.375011444091797
    10. '`' → logprob: -16.687511444091797

Token 166: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11443168669939041
    2. '!=' → logprob: -2.614431619644165
    3. ' ==' → logprob: -3.739431619644165
    4. '>' → logprob: -5.489431858062744
    5. ' !=' → logprob: -5.739431858062744
    6. '<' → logprob: -6.489431858062744
    7. ' ' → logprob: -7.739431858062744
    8. '>=' → logprob: -7.739431858062744
    9. '<=' → logprob: -8.239431381225586
    10. ' in' → logprob: -8.364431381225586

Token 167: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09800879657268524
    2. '!=' → logprob: -2.973008871078491
    3. ' ==' → logprob: -3.598008871078491
    4. '>' → logprob: -4.723008632659912
    5. ' !=' → logprob: -6.348008632659912
    6. '<' → logprob: -6.348008632659912
    7. '<=' → logprob: -7.348008632659912
    8. '>=' → logprob: -7.348008632659912
    9. ' ' → logprob: -8.47300910949707
    10. ' >' → logprob: -8.47300910949707

Token 168: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006954061333090067
    2. '1' → logprob: -5.006954193115234
    3. ' ' → logprob: -8.756954193115234
    4. 'm' → logprob: -10.006954193115234
    5. '2' → logprob: -11.756954193115234
    6. '9' → logprob: -11.881954193115234
    7. 'n' → logprob: -12.756954193115234
    8. '-' → logprob: -13.131954193115234
    9. '3' → logprob: -13.194454193115234
    10. '
' → logprob: -13.319454193115234

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012273734901100397
    2. '1' → logprob: -7.001227378845215
    3. 'm' → logprob: -8.626227378845215
    4. ' ' → logprob: -9.376227378845215
    5. 'n' → logprob: -11.501227378845215
    6. 'num' → logprob: -11.813727378845215
    7. '-' → logprob: -12.376227378845215
    8. '2' → logprob: -12.688727378845215
    9. 'j' → logprob: -12.751227378845215
    10. '9' → logprob: -12.751227378845215

Token 170: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14722810685634613
    2. ':' → logprob: -2.0222280025482178
    3. '   ' → logprob: -6.397228240966797
    4. '           ' → logprob: -6.522228240966797
    5. '       ' → logprob: -7.397228240966797
    6. ' or' → logprob: -7.647228240966797
    7. ':return' → logprob: -9.397228240966797
    8. ' and' → logprob: -9.772228240966797
    9. ':
' → logprob: -9.772228240966797
    10. ' :
' → logprob: -10.272228240966797

Token 171: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5618281364440918
    2. '           ' → logprob: -1.0618281364440918
    3. 'print' → logprob: -3.811828136444092
    4. '   ' → logprob: -3.936828136444092
    5. 'num' → logprob: -4.311828136444092
    6. 'pass' → logprob: -4.311828136444092
    7. 'is' → logprob: -5.061828136444092
    8. ' pass' → logprob: -5.561828136444092
    9. ' is' → logprob: -6.061828136444092
    10. ' print' → logprob: -6.561828136444092

Token 172: ' is' (ID: 382)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3557649850845337
    2. 'is' (adapté à ' is') → logprob: -1.2307649850845337
    3. 'pass' → logprob: -6.230764865875244
    4. '   ' → logprob: -6.355764865875244
    5. '           ' → logprob: -6.480764865875244
    6. ' is' → logprob: -7.105764865875244
    7. 'num' → logprob: -7.480764865875244
    8. '       ' → logprob: -8.105765342712402
    9. ' print' → logprob: -9.230765342712402
    10. 'n' → logprob: -10.355765342712402

Token 173: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -3.128163257315464e-07
    2. 'empty' → logprob: -15.875
    3. '_' → logprob: -16.625
    4. '_em' → logprob: -18.5
    5. ' empty' → logprob: -19.25
    6. '_EMPTY' → logprob: -19.375
    7. '_false' → logprob: -19.75
    8. 'Empty' → logprob: -19.875
    9. '_emp' → logprob: -20.0
    10. '_invalid' → logprob: -20.375

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762667059898376
    2. '=' → logprob: -0.8262667059898376
    3. '=True' → logprob: -8.076266288757324
    4. 'True' → logprob: -11.451266288757324
    5. ' True' → logprob: -13.076266288757324
    6. ' ' → logprob: -13.951266288757324
    7. ')' → logprob: -14.576266288757324
    8. '[' → logprob: -14.826266288757324
    9. '   ' → logprob: -14.826266288757324
    10. '	' → logprob: -15.326266288757324

Token 175: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.656383680412546e-05
    2. ' True' → logprob: -10.000046730041504
    3. 'False' → logprob: -13.750046730041504
    4. 'Tr' → logprob: -18.125045776367188
    5. '=True' → logprob: -19.000045776367188
    6. '(True' → logprob: -20.125045776367188
    7. 'true' → logprob: -20.375045776367188
    8. ' ' → logprob: -21.250045776367188
    9. '1' → logprob: -21.250045776367188
    10. '   ' → logprob: -21.625045776367188

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7671729326248169
    2. '<|end|>' → logprob: -0.8921729326248169
    3. '
' → logprob: -2.6421728134155273
    4. '   ' → logprob: -3.3921728134155273
    5. 'else' → logprob: -4.892172813415527
    6. '\n' → logprob: -5.767172813415527
    7. 'elif' → logprob: -5.892172813415527
    8. ' else' → logprob: -6.517172813415527
    9. '<|end|>' → logprob: -7.017172813415527
    10. '#' → logprob: -7.142172813415527

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11609344929456711
    2. '   ' → logprob: -2.616093397140503
    3. '<|end|>' → logprob: -4.491093635559082
    4. '    ' → logprob: -4.866093635559082
    5. 'else' → logprob: -5.241093635559082
    6. '        ' → logprob: -5.991093635559082
    7. '
' → logprob: -6.616093635559082
    8. ')' → logprob: -6.991093635559082
    9. '           ' → logprob: -7.116093635559082
    10. ' else' → logprob: -7.116093635559082

Token 178: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015359592624008656
    2. '       ' → logprob: -4.515359401702881
    3. 'else' (adapté à ' else') → logprob: -6.015359401702881
    4. ' else' → logprob: -7.265359401702881
    5. 'elif' → logprob: -7.640359401702881
    6. '
' → logprob: -7.890359401702881
    7. '    ' → logprob: -8.890359878540039
    8. '    
' → logprob: -10.015359878540039
    9. ')' → logprob: -10.640359878540039
    10. ' elif' → logprob: -11.140359878540039

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7991597056388855
    2. '           ' → logprob: -1.1741597652435303
    3. ':
' → logprob: -1.4241597652435303
    4. '       ' → logprob: -9.04916000366211
    5. ',' → logprob: -9.04916000366211
    6. '
' → logprob: -9.79916000366211
    7. 'num' → logprob: -9.79916000366211
    8. '   ' → logprob: -10.17416000366211
    9. '.' → logprob: -11.29916000366211
    10. ' :' → logprob: -11.42416000366211

Token 180: '           ' (ID: 352)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.024343915283679962
    2. '           ' → logprob: -4.649343967437744
    3. ' num' → logprob: -4.899343967437744
    4. '   ' → logprob: -5.024343967437744
    5. 'for' → logprob: -8.524343490600586
    6. '	num' → logprob: -9.399343490600586
    7. '               ' → logprob: -9.899343490600586
    8. '       ' → logprob: -10.524343490600586
    9. ' for' → logprob: -10.524343490600586
    10. ' ' → logprob: -11.024343490600586

Token 181: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.00030590701499022543
    2. '   ' → logprob: -9.000306129455566
    3. ' num' → logprob: -9.500306129455566
    4. 'for' → logprob: -9.750306129455566
    5. '           ' → logprob: -11.625306129455566
    6. 'if' → logprob: -11.750306129455566
    7. 'from' → logprob: -12.000306129455566
    8. 'pass' → logprob: -12.125306129455566
    9. 'prev' → logprob: -12.250306129455566
    10. 'def' → logprob: -13.375306129455566

Token 182: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.412610233994201e-05
    2. ' =' → logprob: -9.625094413757324
    3. ' [' → logprob: -10.875094413757324
    4. '=' → logprob: -12.000094413757324
    5. '0' → logprob: -14.250094413757324
    6. '=[' → logprob: -14.250094413757324
    7. '[
' → logprob: -14.875094413757324
    8. ' =[' → logprob: -15.250094413757324
    9. '[i' → logprob: -15.625094413757324
    10. '```' → logprob: -16.125093460083008

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004877334926277399
    2. '1' → logprob: -5.62987756729126
    3. ' ' → logprob: -6.87987756729126
    4. '-' → logprob: -8.754877090454102
    5. '[' → logprob: -9.629877090454102
    6. ']' → logprob: -12.067377090454102
    7. ' -' → logprob: -12.129877090454102
    8. '
' → logprob: -13.442377090454102
    9. '(' → logprob: -13.629877090454102
    10. '   ' → logprob: -13.754877090454102

Token 184: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6995753645896912
    2. ' =' → logprob: -1.074575424194336
    3. '=' → logprob: -1.824575424194336
    4. ']=' → logprob: -8.074575424194336
    5. ' ]' → logprob: -9.074575424194336
    6. '[' → logprob: -10.699575424194336
    7. ')' → logprob: -10.824575424194336
    8. ' ' → logprob: -13.199575424194336
    9. ',' → logprob: -13.449575424194336
    10. '   ' → logprob: -13.824575424194336

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141403377056122
    2. ' =' → logprob: -1.7014139890670776
    3. '+=' → logprob: -15.326414108276367
    4. '[' → logprob: -15.576414108276367
    5. ' +=' → logprob: -16.451414108276367
    6. '＝' → logprob: -16.701414108276367
    7. ' ' → logprob: -17.076414108276367
    8. '=num' → logprob: -17.201414108276367
    9. '=j' → logprob: -17.576414108276367
    10. ',' → logprob: -17.701414108276367

Token 186: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.10131971538066864
    2. '1' → logprob: -2.4763197898864746
    3. ' jou' → logprob: -4.851319789886475
    4. ' ' → logprob: -5.726319789886475
    5. 'jug' → logprob: -8.538819313049316
    6. '   ' → logprob: -8.913819313049316
    7. 'jut' → logprob: -9.226319313049316
    8. 'j' → logprob: -9.226319313049316
    9. 'jo' → logprob: -9.538819313049316
    10. '  ' → logprob: -9.851319313049316

Token 187: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -1.3663626305060461e-05
    2. ' ken' → logprob: -12.00001335144043
    3. 'uken' → logprob: -13.12501335144043
    4. 'cken' → logprob: -13.87501335144043
    5. 'k' → logprob: -14.00001335144043
    6. 'kan' → logprob: -14.12501335144043
    7. 'kens' → logprob: -14.12501335144043
    8. '
' → logprob: -15.37501335144043
    9. 'kon' → logprob: -15.50001335144043
    10. 'Ken' → logprob: -15.75001335144043

Token 188: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026301342993974686
    2. '0' → logprob: -3.651301383972168
    3. '```' → logprob: -14.776301383972168
    4. ' ' → logprob: -15.026301383972168
    5. '[
' → logprob: -16.15130043029785
    6. '][' → logprob: -16.52630043029785
    7. '   ' → logprob: -17.15130043029785
    8. ' [' → logprob: -17.27630043029785
    9. ']' → logprob: -17.77630043029785
    10. '00' → logprob: -17.77630043029785

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -16.375
    4. ']' → logprob: -17.75
    5. '   ' → logprob: -17.875
    6. '```' → logprob: -18.625
    7. '-' → logprob: -18.6875
    8. '
' → logprob: -19.5625
    9. '(' → logprob: -19.625
    10. '０' → logprob: -19.875

Token 190: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2180211991071701
    2. ')' → logprob: -1.7180211544036865
    3. '<|end|>' → logprob: -4.343021392822266
    4. '}' → logprob: -6.843021392822266
    5. '+' → logprob: -7.343021392822266
    6. '
' → logprob: -7.968021392822266
    7. '<|end|>' → logprob: -8.218021392822266
    8. ']
' → logprob: -8.218021392822266
    9. '   ' → logprob: -8.843021392822266
    10. ')
' → logprob: -8.968021392822266

Token 191: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.596714973449707
    2. 'else' → logprob: -1.471714973449707
    3. '   ' → logprob: -2.471714973449707
    4. '
' → logprob: -2.971714973449707
    5. '<|end|>' → logprob: -2.971714973449707
    6. ' else' → logprob: -4.846714973449707
    7. '\n' → logprob: -4.971714973449707
    8. ' elif' → logprob: -5.471714973449707
    9. '    
' → logprob: -5.471714973449707
    10. ')' → logprob: -6.471714973449707

Token 192: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2811975479125977
    2. 'elif' → logprob: -1.2811975479125977
    3. 'else' (adapté à ' else') → logprob: -1.7811975479125977
    4. '\n' → logprob: -2.5311975479125977
    5. ' 
' → logprob: -2.6561975479125977
    6. '<|end|>' → logprob: -3.4061975479125977
    7. ' else' → logprob: -4.156197547912598
    8. ' ' → logprob: -4.156197547912598
    9. ' elif' → logprob: -4.656197547912598
    10. '    
' → logprob: -4.781197547912598

Token 193: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19627289474010468
    2. ':' → logprob: -1.821272850036621
    3. ':
' → logprob: -4.196272850036621
    4. '   ' → logprob: -7.071272850036621
    5. ' :' → logprob: -8.696272850036621
    6. '0' → logprob: -9.446272850036621
    7. ' :
' → logprob: -9.696272850036621
    8. '    ' → logprob: -10.321272850036621
    9. ' ' → logprob: -10.696272850036621
    10. '[' → logprob: -10.821272850036621

Token 194: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2544173002243042
    2. '       ' → logprob: -1.7544173002243042
    3. 'num' → logprob: -3.2544174194335938
    4. ' num' → logprob: -4.379417419433594
    5. ' for' → logprob: -8.754417419433594
    6. '```' → logprob: -9.004417419433594
    7. '
' → logprob: -10.004417419433594
    8. 'for' → logprob: -10.004417419433594
    9. '	num' → logprob: -10.254417419433594
    10. '           ' → logprob: -10.879417419433594

Token 195: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.03795071318745613
    2. ' num' → logprob: -3.5379507541656494
    3. '   ' → logprob: -5.78795051574707
    4. '0' → logprob: -6.03795051574707
    5. '1' → logprob: -6.03795051574707
    6. ' ' → logprob: -8.66295051574707
    7. 'for' → logprob: -10.16295051574707
    8. '  ' → logprob: -10.66295051574707
    9. ' for' → logprob: -11.03795051574707
    10. '	num' → logprob: -11.03795051574707

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -14.375001907348633
    3. '=' → logprob: -15.000001907348633
    4. '0' → logprob: -15.625001907348633
    5. ' =' → logprob: -15.625001907348633
    6. 'import' → logprob: -16.625001907348633
    7. '=[' → logprob: -16.875001907348633
    8. '[
' → logprob: -17.125001907348633
    9. '.append' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.500001907348633

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001855406299000606
    2. ' ' → logprob: -8.7501859664917
    3. '[' → logprob: -11.2501859664917
    4. '-' → logprob: -12.1251859664917
    5. '1' → logprob: -12.2501859664917
    6. ']' → logprob: -13.8751859664917
    7. '   ' → logprob: -14.0001859664917
    8. ' -' → logprob: -14.4376859664917
    9. ')' → logprob: -14.6876859664917
    10. ' [' → logprob: -15.6251859664917

Token 198: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6206589937210083
    2. ' =' → logprob: -1.1206589937210083
    3. ']' → logprob: -1.9956589937210083
    4. ')' → logprob: -8.620658874511719
    5. ']=' → logprob: -8.620658874511719
    6. ' ]' → logprob: -10.245658874511719
    7. '   ' → logprob: -11.870658874511719
    8. ' ' → logprob: -11.870658874511719
    9. '[' → logprob: -12.245658874511719
    10. '}' → logprob: -13.495658874511719

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759437084197998
    2. ' =' → logprob: -0.8259437084197998
    3. '+=' → logprob: -13.200943946838379
    4. ' +=' → logprob: -13.575943946838379
    5. ' ' → logprob: -15.075943946838379
    6. '0' → logprob: -15.575943946838379
    7. '[' → logprob: -15.700943946838379
    8. '   ' → logprob: -16.200942993164062
    9. '.=' → logprob: -16.700942993164062
    10. '＝' → logprob: -17.200942993164062

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020198944956064224
    2. '0' → logprob: -4.020198822021484
    3. ' ' → logprob: -7.395198822021484
    4. '-' → logprob: -8.020198822021484
    5. '10' → logprob: -8.145198822021484
    6. 'm' → logprob: -8.395198822021484
    7. '9' → logprob: -8.770198822021484
    8. '100' → logprob: -8.770198822021484
    9. 'n' → logprob: -9.645198822021484
    10. '999' → logprob: -10.395198822021484

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008695332217030227
    2. '0' → logprob: -7.1258697509765625
    3. '10' → logprob: -10.875869750976562
    4. '100' → logprob: -11.500869750976562
    5. 'm' → logprob: -11.875869750976562
    6. '-' → logprob: -12.500869750976562
    7. 'pow' → logprob: -12.500869750976562
    8. 'n' → logprob: -12.875869750976562
    9. ' ' → logprob: -13.000869750976562
    10. '9' → logprob: -13.000869750976562

Token 202: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49255824089050293
    2. ' for' → logprob: -1.117558240890503
    3. '<|end|>' → logprob: -2.867558240890503
    4. ')' → logprob: -6.492558479309082
    5. '
' → logprob: -7.117558479309082
    6. '   ' → logprob: -7.242558479309082
    7. '\n' → logprob: -7.617558479309082
    8. ' ' → logprob: -8.617558479309082
    9. 'i' → logprob: -8.617558479309082
    10. ' 
' → logprob: -8.867558479309082

Token 203: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07982400804758072
    2. ' for' → logprob: -2.5798239707946777
    3. 'i' → logprob: -7.579823970794678
    4. 'if' → logprob: -9.079824447631836
    5. ':' → logprob: -9.204824447631836
    6. ')' → logprob: -10.079824447631836
    7. '\n' → logprob: -10.454824447631836
    8. '   ' → logprob: -10.829824447631836
    9. '.' → logprob: -10.954824447631836
    10. 'n' → logprob: -11.329824447631836

Token 205: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03366436809301376
    2. ' i' → logprob: -3.4086644649505615
    3. ' ' → logprob: -11.78366470336914
    4. 'j' → logprob: -12.53366470336914
    5. '	i' → logprob: -13.03366470336914
    6. 'x' → logprob: -13.53366470336914
    7. '   ' → logprob: -14.15866470336914
    8. 'k' → logprob: -14.40866470336914
    9. 'idx' → logprob: -14.40866470336914
    10. '(i' → logprob: -15.15866470336914

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00023727134976070374
    2. 'in' → logprob: -8.875237464904785
    3. ' ' → logprob: -9.375237464904785
    4. ' range' → logprob: -12.000237464904785
    5. 'range' → logprob: -12.125237464904785
    6. '	in' → logprob: -14.875237464904785
    7. ' i' → logprob: -15.125237464904785
    8. '  ' → logprob: -16.25023651123047
    9. '_' → logprob: -16.62523651123047
    10. '   ' → logprob: -16.75023651123047

Token 207: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020720958709717
    2. 'range' → logprob: -2.3502073287963867
    3. '(range' → logprob: -15.225207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '	range' → logprob: -16.47520637512207
    6. 'Range' → logprob: -17.97520637512207
    7. '   ' → logprob: -18.10020637512207
    8. 'r' → logprob: -18.47520637512207
    9. ' ' → logprob: -18.72520637512207
    10. '  ' → logprob: -18.85020637512207

Token 208: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5094070477061905e-05
    2. '1' → logprob: -11.125015258789062
    3. '(n' → logprob: -15.625015258789062
    4. '   ' → logprob: -17.000015258789062
    5. 'n' → logprob: -18.250015258789062
    6. ' (' → logprob: -18.875015258789062
    7. '[' → logprob: -19.250015258789062
    8. ' ' → logprob: -20.250015258789062
    9. '(
' → logprob: -20.875015258789062
    10. '```' → logprob: -21.250015258789062

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010449681576574221
    2. ' ' → logprob: -9.500104904174805
    3. 'n' → logprob: -10.625104904174805
    4. '   ' → logprob: -12.250104904174805
    5. '  ' → logprob: -15.750104904174805
    6. '(' → logprob: -15.875104904174805
    7. ' n' → logprob: -16.625104904174805
    8. '
' → logprob: -16.750104904174805
    9. '    ' → logprob: -17.375104904174805
    10. '0' → logprob: -17.500104904174805

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003501715138554573
    2. ',n' → logprob: -5.878501892089844
    3. ' ,' → logprob: -7.378501892089844
    4. ' n' → logprob: -9.878501892089844
    5. 'n' → logprob: -11.003501892089844
    6. '   ' → logprob: -12.628501892089844
    7. '	n' → logprob: -14.628501892089844
    8. ',
' → logprob: -15.878501892089844
    9. '(n' → logprob: -16.003501892089844
    10. ' ' → logprob: -17.128501892089844

Token 211: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858759790658951
    2. ' n' → logprob: -3.0485875606536865
    3. '	n' → logprob: -15.548587799072266
    4. '   ' → logprob: -16.548587799072266
    5. ')n' → logprob: -18.548587799072266
    6. ' ' → logprob: -19.423587799072266
    7. 'len' → logprob: -19.673587799072266
    8. '    ' → logprob: -20.048587799072266
    9. '  ' → logprob: -20.548587799072266
    10. ')' → logprob: -20.798587799072266

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011078709736466408
    2. '):
' → logprob: -4.511078834533691
    3. ' ):' → logprob: -10.636078834533691
    4. ')' → logprob: -13.011078834533691
    5. ':' → logprob: -13.136078834533691
    6. '):
' → logprob: -13.386078834533691
    7. ' ):
' → logprob: -15.511078834533691
    8. '-' → logprob: -15.761078834533691
    9. '):

' → logprob: -15.886078834533691
    10. ']:' → logprob: -16.636077880859375

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7510274648666382
    2. ' if' → logprob: -1.3760274648666382
    3. 'if' → logprob: -2.0010275840759277
    4. '   ' → logprob: -2.0010275840759277
    5. '```' → logprob: -5.376027584075928
    6. ' for' → logprob: -9.25102710723877
    7. 'num' → logprob: -9.25102710723877
    8. ',' → logprob: -10.00102710723877
    9. 'for' → logprob: -10.12602710723877
    10. '``' → logprob: -10.25102710723877

Token 214: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021165812388062477
    2. '   ' → logprob: -4.14616584777832
    3. 'num' → logprob: -6.02116584777832
    4. ' if' → logprob: -6.64616584777832
    5. 'for' → logprob: -6.89616584777832
    6. '       ' → logprob: -8.89616584777832
    7. 'found' → logprob: -8.89616584777832
    8. 'possible' → logprob: -9.64616584777832
    9. 'min' → logprob: -11.39616584777832
    10. 'prev' → logprob: -11.89616584777832

Token 215: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014586403965950012
    2. ' i' → logprob: -4.264586448669434
    3. '   ' → logprob: -8.139586448669434
    4. 'num' → logprob: -10.389586448669434
    5. '0' → logprob: -10.889586448669434
    6. 'is' → logprob: -11.139586448669434
    7. '(i' → logprob: -11.139586448669434
    8. '       ' → logprob: -11.264586448669434
    9. ' ' → logprob: -11.639586448669434
    10. '	i' → logprob: -12.014586448669434

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013355625793337822
    2. 'in' → logprob: -4.513355731964111
    3. ' not' → logprob: -6.138355731964111
    4. 'not' → logprob: -9.388355255126953
    5. ' ' → logprob: -10.638355255126953
    6. '-' → logprob: -11.138355255126953
    7. ')' → logprob: -11.138355255126953
    8. ' -' → logprob: -13.138355255126953
    9. ' i' → logprob: -13.263355255126953
    10. '   ' → logprob: -13.888355255126953

Token 217: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -7.874882430769503e-05
    2. ' jou' → logprob: -9.500079154968262
    3. 'j' → logprob: -13.750079154968262
    4. 'jour' → logprob: -14.000079154968262
    5. '   ' → logprob: -14.750079154968262
    6. '```' → logprob: -14.875079154968262
    7. 'kou' → logprob: -15.875079154968262
    8. 'jo' → logprob: -16.000078201293945
    9. 'tou' → logprob: -16.000078201293945
    10. 'joy' → logprob: -16.000078201293945

Token 218: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -2.2200749754119897e-06
    2. 'uken' → logprob: -14.500001907348633
    3. 'cken' → logprob: -14.625001907348633
    4. 'oken' → logprob: -15.250001907348633
    5. 'kens' → logprob: -15.250001907348633
    6. ' ken' → logprob: -15.625001907348633
    7. 'k' → logprob: -15.875001907348633
    8. 'kan' → logprob: -16.250001907348633
    9. 'kun' → logprob: -16.750001907348633
    10. 'chen' → logprob: -17.000001907348633

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.180214524269104
    2. ':
' → logprob: -1.805214524269104
    3. ' and' → logprob: -8.680214881896973
    4. '):
' → logprob: -8.805214881896973
    5. 'and' → logprob: -9.180214881896973
    6. '):' → logprob: -10.930214881896973
    7. '=' → logprob: -11.180214881896973
    8. ':

' → logprob: -12.680214881896973
    9. '   ' → logprob: -12.805214881896973
    10. ':
' → logprob: -13.180214881896973

Token 220: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5016933679580688
    2. '           ' → logprob: -1.6266933679580688
    3. ' and' → logprob: -2.5016932487487793
    4. '=' → logprob: -2.8766932487487793
    5. ':
' → logprob: -3.3766932487487793
    6. ' =' → logprob: -4.501693248748779
    7. '       ' → logprob: -5.376693248748779
    8. '<|end|>' → logprob: -6.126693248748779
    9. '==' → logprob: -6.876693248748779
    10. ',' → logprob: -6.876693248748779

Token 221: ' num' (ID: 2269)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21500249207019806
    2. 'num' (adapté à ' num') → logprob: -1.7150025367736816
    3. '           ' → logprob: -4.715002536773682
    4. ' if' → logprob: -5.465002536773682
    5. '   ' → logprob: -9.090002059936523
    6. ' num' → logprob: -9.215002059936523
    7. '       ' → logprob: -9.840002059936523
    8. '               ' → logprob: -10.840002059936523
    9. '```' → logprob: -11.715002059936523
    10. '``' → logprob: -13.215002059936523

Token 222: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. '[num' → logprob: -15.87500286102295
    4. ' =' → logprob: -16.625003814697266
    5. '[I' → logprob: -16.875003814697266
    6. '[idx' → logprob: -17.000003814697266
    7. '[
' → logprob: -17.250003814697266
    8. ' [' → logprob: -17.375003814697266
    9. '[int' → logprob: -18.250003814697266
    10. '[n' → logprob: -18.375003814697266

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5256060361862183
    2. ' =' → logprob: -1.0256060361862183
    3. '=' → logprob: -3.025606155395508
    4. ']=' → logprob: -6.650606155395508
    5. ' ]' → logprob: -8.400606155395508
    6. ')' → logprob: -8.900606155395508
    7. ' ' → logprob: -11.400606155395508
    8. '   ' → logprob: -11.650606155395508
    9. '[' → logprob: -12.025606155395508
    10. ',' → logprob: -12.150606155395508

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193196535110474
    2. ' =' → logprob: -1.50193190574646
    3. '=num' → logprob: -13.001932144165039
    4. '=
' → logprob: -16.12693214416504
    5. '=max' → logprob: -16.12693214416504
    6. '=int' → logprob: -16.12693214416504
    7. '＝' → logprob: -16.50193214416504
    8. ',' → logprob: -16.62693214416504
    9. '=

' → logprob: -17.12693214416504
    10. ' ' → logprob: -17.25193214416504

Token 225: ' jou' (ID: 10865)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.0003983760252594948
    2. ' jou' → logprob: -8.250398635864258
    3. 'num' → logprob: -9.875398635864258
    4. ' ' → logprob: -10.750398635864258
    5. 'j' → logprob: -11.250398635864258
    6. '   ' → logprob: -11.500398635864258
    7. 'tou' → logprob: -11.750398635864258
    8. 'jour' → logprob: -12.625398635864258
    9. ' ' → logprob: -12.625398635864258
    10. '  ' → logprob: -13.000398635864258

Token 226: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -1.282920129597187e-05
    2. ' ken' → logprob: -12.750012397766113
    3. 'kan' → logprob: -12.750012397766113
    4. 'cken' → logprob: -13.125012397766113
    5. 'uken' → logprob: -13.250012397766113
    6. 'oken' → logprob: -13.875012397766113
    7. '[' → logprob: -14.250012397766113
    8. 'kens' → logprob: -14.625012397766113
    9. 'kon' → logprob: -15.125012397766113
    10. 'k' → logprob: -15.375012397766113

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.250001907348633
    3. '```' → logprob: -14.750001907348633
    4. 'i' → logprob: -15.000001907348633
    5. '{i' → logprob: -16.875001907348633
    6. ')[' → logprob: -16.875001907348633
    7. '[
' → logprob: -17.000001907348633
    8. '[I' → logprob: -17.250001907348633
    9. '(i' → logprob: -17.500001907348633
    10. ' [' → logprob: -17.750001907348633

Token 228: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19838900864124298
    2. ' else' → logprob: -1.9483890533447266
    3. '<|end|>' → logprob: -3.8233890533447266
    4. 'else' → logprob: -4.573389053344727
    5. ' elif' → logprob: -5.573389053344727
    6. 'elif' → logprob: -6.823389053344727
    7. '<|end|>' → logprob: -9.573389053344727
    8. '	else' → logprob: -9.823389053344727
    9. '	elif' → logprob: -9.948389053344727
    10. ' or' → logprob: -9.948389053344727

Token 230: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9174672365188599
    2. 'else' (adapté à ' else') → logprob: -0.9174672365188599
    3. '       ' → logprob: -1.6674672365188599
    4. 'elif' → logprob: -4.79246711730957
    5. '   ' → logprob: -6.16746711730957
    6. ' elif' → logprob: -6.66746711730957
    7. '	else' → logprob: -7.79246711730957
    8. '<|end|>' → logprob: -9.79246711730957
    9. '	elif' → logprob: -9.91746711730957
    10. ' ' → logprob: -11.29246711730957

Token 231: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14306266605854034
    2. ':' → logprob: -2.7680625915527344
    3. '           ' → logprob: -3.3930625915527344
    4. '       ' → logprob: -3.7680625915527344
    5. ' =' → logprob: -5.393062591552734
    6. ' :
' → logprob: -5.768062591552734
    7. '   ' → logprob: -6.018062591552734
    8. '=' → logprob: -6.768062591552734
    9. ' if' → logprob: -7.268062591552734
    10. '[' → logprob: -7.518062591552734

Token 232: '           ' (ID: 352)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5389188528060913
    2. ' num' → logprob: -1.5389188528060913
    3. '1' → logprob: -1.9139188528060913
    4. '       ' → logprob: -3.788918972015381
    5. '   ' → logprob: -4.788918972015381
    6. ' ' → logprob: -5.538918972015381
    7. 'max' → logprob: -5.538918972015381
    8. '0' → logprob: -5.538918972015381
    9. ' max' → logprob: -5.788918972015381
    10. ' if' → logprob: -5.913918972015381

Token 233: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.1032738909125328
    2. '1' → logprob: -2.353273868560791
    3. 'max' → logprob: -6.603273868560791
    4. 'if' → logprob: -7.353273868560791
    5. '   ' → logprob: -7.603273868560791
    6. ' num' → logprob: -8.60327434539795
    7. '0' → logprob: -8.60327434539795
    8. 'for' → logprob: -10.10327434539795
    9. 'min' → logprob: -10.35327434539795
    10. '
' → logprob: -10.47827434539795

Token 234: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.875000953674316
    3. '[I' → logprob: -16.250001907348633
    4. '```' → logprob: -18.125001907348633
    5. '[
' → logprob: -18.375001907348633
    6. '
' → logprob: -18.750001907348633
    7. '[num' → logprob: -19.125001907348633
    8. ' [' → logprob: -19.125001907348633
    9. '[j' → logprob: -19.250001907348633
    10. '[idx' → logprob: -19.250001907348633

Token 235: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022990626748651266
    2. '-' → logprob: -6.627298831939697
    3. ']=' → logprob: -7.627298831939697
    4. '=' → logprob: -8.127299308776855
    5. '[i' → logprob: -9.877299308776855
    6. ' ]' → logprob: -10.252299308776855
    7. ' -' → logprob: -10.377299308776855
    8. '[' → logprob: -10.377299308776855
    9. ' =' → logprob: -10.752299308776855
    10. ']+=' → logprob: -12.002299308776855

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196152925491333
    2. ' =' → logprob: -1.5019614696502686
    3. '=num' → logprob: -10.626961708068848
    4. '=
' → logprob: -12.501961708068848
    5. '[' → logprob: -13.251961708068848
    6. '+=' → logprob: -14.126961708068848
    7. ' =
' → logprob: -15.001961708068848
    8. ' +=' → logprob: -15.251961708068848
    9. '[num' → logprob: -15.501961708068848
    10. ' ' → logprob: -15.501961708068848

Token 237: ' ' (ID: 220)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.09836950898170471
    2. '1' → logprob: -2.598369598388672
    3. 'max' → logprob: -4.848369598388672
    4. '9' → logprob: -5.098369598388672
    5. '0' → logprob: -5.973369598388672
    6. '10' → logprob: -7.223369598388672
    7. ' num' → logprob: -7.598369598388672
    8. 'min' → logprob: -7.723369598388672
    9. '   ' → logprob: -8.348369598388672
    10. ' ' → logprob: -8.723369598388672

Token 238: '0' (ID: 15)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07111122459173203
    2. 'max' → logprob: -3.1961112022399902
    3. '1' → logprob: -4.32111120223999
    4. 'min' → logprob: -4.69611120223999
    5. '0' → logprob: -5.94611120223999
    6. '10' → logprob: -6.82111120223999
    7. '9' → logprob: -7.07111120223999
    8. '(num' → logprob: -8.571111679077148
    9. ' num' → logprob: -9.071111679077148
    10. '   ' → logprob: -9.321111679077148

Token 239: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: 'num' (ID: 4571)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' [' (ID: 723)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7181071043014526
    2. '[num' → logprob: -1.0931071043014526
    3. '[' → logprob: -2.218107223510742
    4. ' [' → logprob: -3.468107223510742
    5. ' num' → logprob: -3.468107223510742
    6. 'list' → logprob: -5.968107223510742
    7. ' list' → logprob: -7.468107223510742
    8. '[len' → logprob: -7.468107223510742
    9. 'sorted' → logprob: -7.593107223510742
    10. 'tuple' → logprob: -8.468107223510742

Token 243: 'str' (ID: 689)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8702810406684875
    2. 'num' → logprob: -1.7452809810638428
    3. 'str' → logprob: -1.8702809810638428
    4. 'min' → logprob: -2.1202809810638428
    5. '1' → logprob: -3.2452809810638428
    6. 'x' → logprob: -3.6202809810638428
    7. '0' → logprob: -3.6202809810638428
    8. '(max' → logprob: -4.870281219482422
    9. 'n' → logprob: -5.370281219482422
    10. '(' → logprob: -5.370281219482422

Token 244: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005204113200306892
    2. '(i' → logprob: -5.755204200744629
    3. '(n' → logprob: -6.755204200744629
    4. '(num' → logprob: -7.130204200744629
    5. 'x' → logprob: -10.505204200744629
    6. '(k' → logprob: -11.755204200744629
    7. '(d' → logprob: -11.755204200744629
    8. '(a' → logprob: -12.255204200744629
    9. '(s' → logprob: -12.880204200744629
    10. '(' → logprob: -13.005204200744629

Token 245: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.041768160182983e-05
    2. '+' → logprob: -10.875080108642578
    3. '()' → logprob: -11.000080108642578
    4. ' )' → logprob: -11.625080108642578
    5. '())' → logprob: -11.750080108642578
    6. '(num' → logprob: -11.875080108642578
    7. 'num' → logprob: -12.375080108642578
    8. ').' → logprob: -12.875080108642578
    9. '(' → logprob: -12.875080108642578
    10. ' +' → logprob: -13.000080108642578

Token 246: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23608677089214325
    2. 'for' → logprob: -1.6110867261886597
    3. ')' → logprob: -4.861086845397949
    4. '()' → logprob: -6.111086845397949
    5. '+' → logprob: -7.611086845397949
    6. 'or' → logprob: -9.61108684539795
    7. ' ' → logprob: -10.36108684539795
    8. 'if' → logprob: -11.11108684539795
    9. ' if' → logprob: -11.36108684539795
    10. ']' → logprob: -12.11108684539795

Token 247: ' i' (ID: 575)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0380416102707386
    2. ' num' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.038042068481445
    4. '	num' → logprob: -17.038042068481445
    5. '(num' → logprob: -17.538042068481445
    6. ',num' → logprob: -19.038042068481445
    7. '  ' → logprob: -19.288042068481445
    8. 'n' → logprob: -19.413042068481445
    9. '_' → logprob: -19.538042068481445
    10. '[num' → logprob: -19.538042068481445

Token 248: ' in' (ID: 306)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.011302454397082329
    2. 'num' → logprob: -4.511302471160889
    3. '(' → logprob: -8.38630199432373
    4. ' num' → logprob: -10.63630199432373
    5. ',num' → logprob: -13.88630199432373
    6. '=num' → logprob: -14.88630199432373
    7. '<num' → logprob: -15.26130199432373
    8. '	num' → logprob: -15.51130199432373
    9. ' (' → logprob: -15.63630199432373
    10. ':num' → logprob: -15.63630199432373

Token 249: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00020354038861114532
    2. ' num' → logprob: -8.500203132629395
    3. '(num' → logprob: -18.25020408630371
    4. '[num' → logprob: -18.87520408630371
    5. 'nums' → logprob: -19.12520408630371
    6. '	num' → logprob: -19.25020408630371
    7. 'range' → logprob: -19.75020408630371
    8. ' ' → logprob: -20.00020408630371
    9. '   ' → logprob: -21.00020408630371
    10. '
' → logprob: -21.12520408630371

Token 250: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011828463757410645
    2. ')]' → logprob: -6.876183032989502
    3. '])' → logprob: -9.626182556152344
    4. ' ]' → logprob: -10.001182556152344
    5. ')' → logprob: -10.626182556152344
    6. '()]' → logprob: -11.876182556152344
    7. ']
' → logprob: -12.001182556152344
    8. '])]' → logprob: -15.501182556152344
    9. '`]' → logprob: -15.501182556152344
    10. ']

' → logprob: -15.626182556152344

Token 251: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008140355930663645
    2. 'if' → logprob: -7.125813961029053
    3. 'for' → logprob: -12.250814437866211
    4. ' print' → logprob: -13.125814437866211
    5. 'return' → logprob: -14.000814437866211
    6. '```' → logprob: -14.250814437866211
    7. 'prin' → logprob: -15.250814437866211
    8. 'pr' → logprob: -15.375814437866211
    9. '#' → logprob: -15.500814437866211
    10. '#print' → logprob: -15.625814437866211

Token 252: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25781571865081787
    2. ' not' → logprob: -1.5078157186508179
    3. 'not' → logprob: -5.882815837860107
    4. 'is' → logprob: -6.132815837860107
    5. ' ' → logprob: -7.507815837860107
    6. ' ' → logprob: -8.50781536102295
    7. ' n' → logprob: -9.63281536102295
    8. 'n' → logprob: -10.13281536102295
    9. ' len' → logprob: -11.38281536102295
    10. '_' → logprob: -11.63281536102295

Token 253: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.0004378214362077415
    2. '_' → logprob: -7.7504377365112305
    3. ' _' → logprob: -12.75043773651123
    4. '__' → logprob: -14.00043773651123
    5. '_false' → logprob: -14.25043773651123
    6. '_EMPTY' → logprob: -14.37543773651123
    7. '_emp' → logprob: -14.37543773651123
    8. '_none' → logprob: -14.62543773651123
    9. '_not' → logprob: -14.75043773651123
    10. 'empty' → logprob: -15.50043773651123

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.013994814362377e-05
    2. ':
' → logprob: -10.25005054473877
    3. ' :' → logprob: -11.62505054473877
    4. '==' → logprob: -13.00005054473877
    5. ' ==' → logprob: -13.00005054473877
    6. ':return' → logprob: -14.37505054473877
    7. ' or' → logprob: -15.00005054473877
    8. '():' → logprob: -16.375049591064453
    9. '=' → logprob: -16.750049591064453
    10. 'or' → logprob: -17.250049591064453

Token 255: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7439737319946289
    2. 'print' → logprob: -0.9939737319946289
    3. '   ' → logprob: -1.868973731994629
    4. '	print' → logprob: -8.993973731994629
    5. '\n' → logprob: -9.368973731994629
    6. '
' → logprob: -9.868973731994629
    7. '```' → logprob: -10.368973731994629
    8. '    
' → logprob: -10.618973731994629
    9. '\' → logprob: -10.618973731994629
    10. '    ' → logprob: -11.743973731994629

Token 256: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014787864871323109
    2. ' print' → logprob: -4.264787673950195
    3. '   ' → logprob: -7.389787673950195
    4. '
' → logprob: -13.139787673950195
    5. '	print' → logprob: -13.514787673950195
    6. '```' → logprob: -13.889787673950195
    7. 'pr' → logprob: -14.139787673950195
    8. '\n' → logprob: -14.764787673950195
    9. '    
' → logprob: -15.264787673950195
    10. '    ' → logprob: -15.514787673950195

Token 257: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2920589745044708
    2. '(-' → logprob: -1.6670589447021484
    3. '("' → logprob: -2.9170589447021484
    4. '()' → logprob: -5.292058944702148
    5. '('' → logprob: -5.667058944702148
    6. '0' → logprob: -6.667058944702148
    7. '("")' → logprob: -8.167058944702148
    8. '("-' → logprob: -8.917058944702148
    9. '-' → logprob: -9.167058944702148
    10. '(None' → logprob: -10.167058944702148

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.125
    3. '１' → logprob: -18.25
    4. ')' → logprob: -18.75
    5. '```' → logprob: -18.875
    6. ' ' → logprob: -19.0
    7. '4' → logprob: -19.75
    8. '3' → logprob: -20.375
    9. 'print' → logprob: -20.5
    10. '``' → logprob: -21.0

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017027945723384619
    2. ')
' → logprob: -6.376702785491943
    3. ' )' → logprob: -15.376703262329102
    4. 'else' → logprob: -15.876703262329102
    5. '）' → logprob: -16.1267032623291
    6. ')`' → logprob: -16.6267032623291
    7. ')
' → logprob: -17.1267032623291
    8. '))' → logprob: -17.3767032623291
    9. ')

' → logprob: -17.5017032623291
    10. ')`
' → logprob: -17.7517032623291

Token 260: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -5.633853652398102e-05
    2. 'elif' → logprob: -10.375056266784668
    3. ' else' → logprob: -10.625056266784668
    4. ')' → logprob: -15.000056266784668
    5. '#else' → logprob: -15.875056266784668
    6. '```' → logprob: -16.500057220458984
    7. '_else' → logprob: -16.625057220458984
    8. 'continue' → logprob: -16.875057220458984
    9. 'elses' → logprob: -17.000057220458984
    10. '}else' → logprob: -17.750057220458984

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027019143104553223
    2. ':
' → logprob: -3.6520190238952637
    3. '   ' → logprob: -7.277019023895264
    4. ' :' → logprob: -11.152019500732422
    5. ' :
' → logprob: -11.777019500732422
    6. 'print' → logprob: -13.027019500732422
    7. ' print' → logprob: -13.777019500732422
    8. ':

' → logprob: -14.402019500732422
    9. '  ' → logprob: -15.027019500732422
    10. ',' → logprob: -15.402019500732422

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09372024983167648
    2. ' print' → logprob: -2.8437201976776123
    3. 'print' → logprob: -3.4687201976776123
    4. '	print' → logprob: -9.593720436096191
    5. '```' → logprob: -11.468720436096191
    6. ' for' → logprob: -11.718720436096191
    7. '   ' → logprob: -12.718720436096191
    8. 'for' → logprob: -13.468720436096191
    9. ' ' → logprob: -13.843720436096191
    10. '<|end|>' → logprob: -13.843720436096191

Token 263: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0040799472481012344
    2. ' print' → logprob: -5.504079818725586
    3. '   ' → logprob: -13.379079818725586
    4. 'for' → logprob: -18.129079818725586
    5. '	print' → logprob: -18.754079818725586
    6. 'pr' → logprob: -19.254079818725586
    7. 'prin' → logprob: -19.254079818725586
    8. '.print' → logprob: -19.754079818725586
    9. '```' → logprob: -19.754079818725586
    10. ' prin' → logprob: -20.129079818725586

Token 264: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3928580582141876
    2. '("' → logprob: -1.1428580284118652
    3. '(' → logprob: -5.142858028411865
    4. '(*' → logprob: -9.267858505249023
    5. '"' → logprob: -10.767858505249023
    6. ''' → logprob: -12.142858505249023
    7. '()' → logprob: -12.767858505249023
    8. '("")' → logprob: -13.392858505249023
    9. '(
' → logprob: -14.017858505249023
    10. ' ("' → logprob: -14.267858505249023

Token 265: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010981805389747024
    2. '"' → logprob: -7.376098155975342
    3. ''.' → logprob: -8.1260986328125
    4. ' '.' → logprob: -9.3760986328125
    5. ' '' → logprob: -11.1260986328125
    6. '1' → logprob: -11.2510986328125
    7. ' ' → logprob: -11.2510986328125
    8. 'join' → logprob: -11.3760986328125
    9. '''.' → logprob: -11.3760986328125
    10. '0' → logprob: -12.1260986328125

Token 266: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.2664456789934775e-06
    2. ' join' → logprob: -13.750000953674316
    3. '''.' → logprob: -16.750001907348633
    4. ''.' → logprob: -16.875001907348633
    5. 'j' → logprob: -17.000001907348633
    6. '.join' → logprob: -17.375001907348633
    7. 'jo' → logprob: -17.750001907348633
    8. '.' → logprob: -18.250001907348633
    9. '(join' → logprob: -18.875001907348633
    10. '```' → logprob: -19.125001907348633

Token 267: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.3869003355503082
    2. 'num' → logprob: -1.1369003057479858
    3. '[num' → logprob: -11.261899948120117
    4. ' num' → logprob: -11.386899948120117
    5. ',num' → logprob: -13.011899948120117
    6. ')' → logprob: -13.136899948120117
    7. '	num' → logprob: -14.886899948120117
    8. '(' → logprob: -15.386899948120117
    9. '<num' → logprob: -16.136899948120117
    10. '$num' → logprob: -16.636899948120117

Token 268: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132653534412384
    2. '))' → logprob: -1.313265323638916
    3. '))
' → logprob: -13.813265800476074
    4. ')
' → logprob: -13.938265800476074
    5. ')))' → logprob: -14.313265800476074
    6. '())' → logprob: -14.688265800476074
    7. ')}' → logprob: -15.813265800476074
    8. ' )' → logprob: -15.938265800476074
    9. '])' → logprob: -16.438264846801758
    10. '})' → logprob: -16.813264846801758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 266
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 118
Tokens correctement prédits (top 10): 231
Précision stricte (1ère position): 40.60%
Précision adaptée (1ère position): 44.36%
Précision (top 10): 86.84%
================================================================================
