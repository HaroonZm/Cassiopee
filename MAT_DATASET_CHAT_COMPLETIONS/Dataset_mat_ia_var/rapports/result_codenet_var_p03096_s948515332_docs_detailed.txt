================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    """
    Main function to compute the number of ways to arrange the input sequence with specific constraints.
    The approaches and procedures follow dynamic programming (DP) with optimizations based on colors
    and avoiding consecutive duplicates.

    Reads:
        - N: number of elements in input.
        - X: list of integers representing colors or values.

    Outputs:
        - Number of possible arrangements modulo 10^9+7.
    """

    # Read the number of elements
    N = int(input())
    # Read each color/value in the sequence
    X = [int(input()) for _ in range(N)]
    MOD = int(1e9) + 7  # Modulus for large numbers

    # Remove consecutive duplicates in X to form a new sequence
    colors = set()       # To track unique colors
    NoDouble = [-1]      # To build new sequence starting with sentinel

    for x in X:
        colors.add(x)
        if x == NoDouble[-1]:
            # Skip consecutive duplicates
            continue
        NoDouble.append(x)
    del NoDouble[0]      # Remove sentinel value
    N = len(NoDouble)    # Reassign N to new sequence length
    C = len(colors)      # Number of unique colors (not used further in this code)

    # ForIdxLastNum[i]: for the i-th item in NoDouble, the index of its previous appearance (-1 if first occurrence)
    ForIdxLastNum = [-1] * N
    # Onetime_colors[c]: For each color c, store the latest index where it's found
    Onetime_colors = [-1] * (2 * 10**5 + 1)  # Handles large color range

    for idx, color in enumerate(NoDouble):
        if Onetime_colors[color] == -1:
            # First appearance of this color
            Onetime_colors[color] = idx
        else:
            # Already appeared before; store previous index for DP reference
            ForIdxLastNum[idx] = Onetime_colors[color]
            Onetime_colors[color] = idx

    # DP[i]: number of ways to arrange the first i elements
    DP = [0] * (N + 1)
    DP[0] = 1  # Base case: 1 way to arrange zero elements (empty sequence)

    for idx, color in enumerate(NoDouble):
        if ForIdxLastNum[idx] == -1:
            # This color hasn't appeared before: same as previous count
            DP[idx + 1] = DP[idx]
        else:
            # Add the cases by extending from the previous occurrence
            lastIdx = ForIdxLastNum[idx]
            DP[idx + 1] = (DP[lastIdx + 1] + DP[idx]) % MOD

    # Output the final answer modulo MOD
    print(DP[N] % MOD)


if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8559384346008301
    2. '\' → logprob: -1.35593843460083
    3. '\n' → logprob: -1.35593843460083
    4. '```' → logprob: -3.35593843460083
    5. '    
' → logprob: -4.48093843460083
    6. ':' → logprob: -5.85593843460083
    7. '    ' → logprob: -6.23093843460083
    8. '(' → logprob: -6.60593843460083
    9. '\r' → logprob: -6.60593843460083
    10. ' 
' → logprob: -6.98093843460083

Token 4: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4869790077209473
    2. '\n' → logprob: -1.7369790077209473
    3. '\' → logprob: -1.8619790077209473
    4. 'n' → logprob: -2.6119790077209473
    5. 'x' → logprob: -2.6119790077209473
    6. ' ' → logprob: -2.7369790077209473
    7. '```' → logprob: -2.9869790077209473
    8. '    ' → logprob: -2.9869790077209473
    9. 'a' → logprob: -3.6119790077209473
    10. '`' → logprob: -3.9869790077209473

Token 5: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.7540644407272339
    2. 'Find' → logprob: -1.0040644407272339
    3. '   ' → logprob: -3.0040645599365234
    4. 'Write' → logprob: -3.1290645599365234
    5. 'Solve' → logprob: -3.6290645599365234
    6. '"""' → logprob: -4.254064559936523
    7. 'Calcul' → logprob: -5.254064559936523
    8. 'Given' → logprob: -5.629064559936523
    9. 'Detect' → logprob: -6.379064559936523
    10. 'Returns' → logprob: -6.504064559936523

Token 6: ' Main' (ID: 7956)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.5406123995780945
    2. 'Find' → logprob: -1.2906124591827393
    3. '   ' → logprob: -3.4156124591827393
    4. '"""' → logprob: -3.5406124591827393
    5. 'Process' → logprob: -4.29061222076416
    6. 'Given' → logprob: -4.29061222076416
    7. 'Write' → logprob: -4.79061222076416
    8. 'Determine' → logprob: -5.04061222076416
    9. 'Calcul' → logprob: -5.16561222076416
    10. 'Detect' → logprob: -5.41561222076416

Token 7: ' function' (ID: 1114)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7437607645988464
    2. ' function' → logprob: -0.9937607645988464
    3. '()' → logprob: -2.993760824203491
    4. ' code' → logprob: -3.368760824203491
    5. '```' → logprob: -3.618760824203491
    6. ')' → logprob: -4.618760585784912
    7. '_' → logprob: -4.868760585784912
    8. '"""' → logprob: -5.118760585784912
    9. ' solution' → logprob: -5.743760585784912
    10. ' problem' → logprob: -5.743760585784912

Token 8: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3474654257297516
    2. '```' → logprob: -2.4724655151367188
    3. ' to' → logprob: -2.7224655151367188
    4. 'def' → logprob: -2.7224655151367188
    5. '"""' → logprob: -4.097465515136719
    6. ' for' → logprob: -4.597465515136719
    7. '    ' → logprob: -4.972465515136719
    8. '\' → logprob: -4.972465515136719
    9. '\n' → logprob: -5.222465515136719
    10. ')' → logprob: -5.472465515136719

Token 9: ' compute' (ID: 23864)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.8280311226844788
    2. ' process' → logprob: -1.703031063079834
    3. ' solve' → logprob: -2.203031063079834
    4. ' calculate' → logprob: -2.328031063079834
    5. ' compute' → logprob: -3.703031063079834
    6. ' find' → logprob: -3.828031063079834
    7. ' implement' → logprob: -4.203031063079834
    8. ' parse' → logprob: -4.203031063079834
    9. '   ' → logprob: -4.328031063079834
    10. 'solve' → logprob: -4.453031063079834

Token 10: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0023403274826705456
    2. 'the' → logprob: -6.252340316772461
    3. '   ' → logprob: -9.377340316772461
    4. 's' → logprob: -9.377340316772461
    5. ' an' → logprob: -10.127340316772461
    6. ' a' → logprob: -10.127340316772461
    7. '    ' → logprob: -10.252340316772461
    8. '<|end|>' → logprob: -11.252340316772461
    9. '```' → logprob: -11.377340316772461
    10. ' solution' → logprob: -11.377340316772461

Token 11: ' number' (ID: 2086)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6820974349975586
    2. ' sum' → logprob: -1.9320974349975586
    3. ' maximum' → logprob: -2.4320974349975586
    4. ' minimum' → logprob: -2.4320974349975586
    5. ' solution' → logprob: -3.3070974349975586
    6. ' number' → logprob: -3.3070974349975586
    7. ' result' → logprob: -3.9320974349975586
    8. ' shortest' → logprob: -4.307097434997559
    9. 'minimum' → logprob: -4.682097434997559
    10. ' longest' → logprob: -5.057097434997559

Token 12: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.23577748239040375
    2. 's' → logprob: -1.735777497291565
    3. 'of' → logprob: -3.6107773780822754
    4. ' ' → logprob: -6.360777378082275
    5. '"' → logprob: -6.610777378082275
    6. '_of' → logprob: -6.985777378082275
    7. '_' → logprob: -6.985777378082275
    8. '"""' → logprob: -8.235777854919434
    9. '1' → logprob: -8.485777854919434
    10. '  ' → logprob: -8.985777854919434

Token 13: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.46370548009872437
    2. ' valid' → logprob: -2.338705539703369
    3. ' unique' → logprob: -2.963705539703369
    4. 'ways' → logprob: -4.088705539703369
    5. ' connected' → logprob: -4.088705539703369
    6. ' sub' → logprob: -4.213705539703369
    7. ' integers' → logprob: -4.213705539703369
    8. ' words' → logprob: -4.588705539703369
    9. ' paths' → logprob: -4.588705539703369
    10. ' distinct' → logprob: -4.713705539703369

Token 14: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.468433141708374
    2. ' ' → logprob: -1.218433141708374
    3. '    ' → logprob: -3.093433141708374
    4. '   ' → logprob: -3.968433141708374
    5. '<|end|>' → logprob: -4.968433380126953
    6. '  ' → logprob: -6.218433380126953
    7. '(' → logprob: -6.468433380126953
    8. 'to' → logprob: -7.468433380126953
    9. ' t' → logprob: -7.718433380126953
    10. ')' → logprob: -7.968433380126953

Token 15: ' arrange' (ID: 36281)
  Prédit: ' tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.4828042685985565
    2. ' partition' → logprob: -2.107804298400879
    3. ' arrange' → logprob: -2.232804298400879
    4. ' color' → logprob: -3.232804298400879
    5. ' place' → logprob: -3.357804298400879
    6. ' paint' → logprob: -4.357804298400879
    7. ' choose' → logprob: -4.482804298400879
    8. ' ' → logprob: -4.607804298400879
    9. ' split' → logprob: -5.232804298400879
    10. ' climb' → logprob: -5.357804298400879

Token 16: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8904828429222107
    2. ' the' → logprob: -1.7654829025268555
    3. ' to' → logprob: -2.1404829025268555
    4. '    ' → logprob: -2.3904829025268555
    5. ' a' → logprob: -2.8904829025268555
    6. '_' → logprob: -3.5154829025268555
    7. ' objects' → logprob: -3.8904829025268555
    8. ' def' → logprob: -4.1404829025268555
    9. ' s' → logprob: -4.3904829025268555
    10. ' tokens' → logprob: -4.5154829025268555

Token 17: ' input' (ID: 3422)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -1.6667152643203735
    2. ' ' → logprob: -1.7917152643203735
    3. ' n' → logprob: -2.291715145111084
    4. ' items' → logprob: -2.416715145111084
    5. 'n' → logprob: -3.041715145111084
    6. ' objects' → logprob: -3.166715145111084
    7. ' cards' → logprob: -3.666715145111084
    8. ' string' → logprob: -3.666715145111084
    9. ' strings' → logprob: -3.666715145111084
    10. ' chess' → logprob: -3.666715145111084

Token 18: ' sequence' (ID: 16281)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -1.0987437963485718
    2. ' s' → logprob: -1.4737437963485718
    3. 's' → logprob: -2.2237439155578613
    4. ' arrays' → logprob: -2.8487439155578613
    5. '_' → logprob: -3.2237439155578613
    6. 'def' → logprob: -3.3487439155578613
    7. '```' → logprob: -3.3487439155578613
    8. ' tokens' → logprob: -3.4737439155578613
    9. ' def' → logprob: -4.098743915557861
    10. ' array' → logprob: -4.473743915557861

Token 19: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9621188044548035
    2. ' in' → logprob: -1.2121188640594482
    3. ' to' → logprob: -2.5871188640594482
    4. ' into' → logprob: -2.7121188640594482
    5. '    ' → logprob: -3.2121188640594482
    6. ' of' → logprob: -3.9621188640594482
    7. '.' → logprob: -4.087118625640869
    8. 'def' → logprob: -4.212118625640869
    9. 's' → logprob: -4.337118625640869
    10. '```' → logprob: -4.837118625640869

Token 20: ' specific' (ID: 4857)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.028826210647821426
    2. ' a' → logprob: -4.6538262367248535
    3. ' the' → logprob: -4.9038262367248535
    4. ' given' → logprob: -5.7788262367248535
    5. 'a' → logprob: -6.9038262367248535
    6. 'o' → logprob: -7.1538262367248535
    7. 'in' → logprob: -7.1538262367248535
    8. ' spaces' → logprob: -7.1538262367248535
    9. ' an' → logprob: -7.4038262367248535
    10. ' no' → logprob: -7.5288262367248535

Token 21: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.054673388600349426
    2. ' arrangements' → logprob: -3.679673433303833
    3. ' tokens' → logprob: -5.179673194885254
    4. ' conditions' → logprob: -5.304673194885254
    5. ' sequences' → logprob: -5.304673194885254
    6. 'constraints' → logprob: -5.304673194885254
    7. ' permutations' → logprob: -6.429673194885254
    8. ' elements' → logprob: -6.929673194885254
    9. '```' → logprob: -7.054673194885254
    10. ' spacing' → logprob: -7.679673194885254

Token 22: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013498886488378048
    2. '```' → logprob: -5.013498783111572
    3. '.' → logprob: -5.763498783111572
    4. ':' → logprob: -7.013498783111572
    5. '"""' → logprob: -7.638498783111572
    6. '
' → logprob: -7.888498783111572
    7. '       ' → logprob: -7.888498783111572
    8. '    
' → logprob: -8.63849925994873
    9. '    ' → logprob: -8.63849925994873
    10. ')' → logprob: -8.88849925994873

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04007435962557793
    2. '```' → logprob: -4.165074348449707
    3. '"""' → logprob: -4.165074348449707
    4. '\n' → logprob: -5.165074348449707
    5. '`' → logprob: -6.790074348449707
    6. '"""
' → logprob: -7.665074348449707
    7. '\' → logprob: -8.290074348449707
    8. '    ' → logprob: -8.415074348449707
    9. '"' → logprob: -8.665074348449707
    10. '       ' → logprob: -9.540074348449707

Token 24: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08295362442731857
    2. '"""' → logprob: -3.207953691482544
    3. '```' → logprob: -3.457953691482544
    4. '
' → logprob: -5.832953453063965
    5. '\n' → logprob: -6.332953453063965
    6. '    ' → logprob: -6.957953453063965
    7. '    
' → logprob: -7.707953453063965
    8. 'n' → logprob: -8.082953453063965
    9. '"""
' → logprob: -8.582953453063965
    10. '""' → logprob: -8.832953453063965

Token 25: ' approaches' (ID: 25707)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9673365950584412
    2. '   ' → logprob: -1.467336654663086
    3. ' function' → logprob: -1.967336654663086
    4. ' code' → logprob: -2.592336654663086
    5. ' problem' → logprob: -2.842336654663086
    6. '    ' → logprob: -4.342336654663086
    7. ' next' → logprob: -4.467336654663086
    8. 'input' → logprob: -4.467336654663086
    9. ' """
' → logprob: -4.592336654663086
    10. ' constraints' → logprob: -4.592336654663086

Token 26: ' and' (ID: 326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.681239902973175
    2. ' to' → logprob: -2.0562398433685303
    3. ' are' → logprob: -2.0562398433685303
    4. '   ' → logprob: -2.8062398433685303
    5. ' is' → logprob: -2.9312398433685303
    6. ' for' → logprob: -3.8062398433685303
    7. '<|end|>' → logprob: -4.181240081787109
    8. ' can' → logprob: -4.681240081787109
    9. '<|end|>' → logprob: -4.681240081787109
    10. '    ' → logprob: -4.806240081787109

Token 27: ' procedures' (ID: 19586)
  Prédit: ' limitations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' limitations' → logprob: -1.5971384048461914
    2. ' logic' → logprob: -1.5971384048461914
    3. ' techniques' → logprob: -2.4721384048461914
    4. ' constraints' → logprob: -2.4721384048461914
    5. ' ideas' → logprob: -2.5971384048461914
    6. ' steps' → logprob: -3.2221384048461914
    7. ' return' → logprob: -3.2221384048461914
    8. ' parameters' → logprob: -3.3471384048461914
    9. ' methods' → logprob: -3.4721384048461914
    10. ' test' → logprob: -3.7221384048461914

Token 28: ' follow' (ID: 2622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9338166117668152
    2. ' are' → logprob: -1.05881667137146
    3. ' to' → logprob: -2.43381667137146
    4. ' for' → logprob: -3.55881667137146
    5. ' is' → logprob: -3.68381667137146
    6. ' ' → logprob: -4.183816432952881
    7. '<|end|>' → logprob: -4.308816432952881
    8. '<|end|>' → logprob: -4.433816432952881
    9. ':' → logprob: -4.683816432952881
    10. ' that' → logprob: -5.183816432952881

Token 29: ' dynamic' (ID: 14012)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.363237589597702
    2. '```' → logprob: -1.3632376194000244
    3. 'def' → logprob: -4.363237380981445
    4. ':' → logprob: -4.488237380981445
    5. ' to' → logprob: -5.863237380981445
    6. '       ' → logprob: -5.988237380981445
    7. '<|end|>' → logprob: -5.988237380981445
    8. ' the' → logprob: -6.363237380981445
    9. '\n' → logprob: -6.363237380981445
    10. '    ' → logprob: -6.363237380981445

Token 30: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.00025561772054061294
    2. 'Programming' → logprob: -9.500255584716797
    3. ' Programming' → logprob: -9.625255584716797
    4. '_' → logprob: -10.250255584716797
    5. ' ' → logprob: -10.250255584716797
    6. '_program' → logprob: -10.625255584716797
    7. 'program' → logprob: -11.250255584716797
    8. '   ' → logprob: -13.250255584716797
    9. ' programmation' → logprob: -13.250255584716797
    10. '<|end|>' → logprob: -14.000255584716797

Token 31: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05610915273427963
    2. '
' → logprob: -3.8061091899871826
    3. '<|end|>' → logprob: -4.5561089515686035
    4. '    ' → logprob: -5.6811089515686035
    5. '    
' → logprob: -5.8061089515686035
    6. '\n' → logprob: -5.9311089515686035
    7. '.' → logprob: -5.9311089515686035
    8. ' ' → logprob: -6.1811089515686035
    9. '<|end|>' → logprob: -6.8061089515686035
    10. '  ' → logprob: -6.8061089515686035

Token 32: 'DP' (ID: 16851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11409853398799896
    2. ').' → logprob: -2.23909854888916
    3. '),' → logprob: -8.36409854888916
    4. '):' → logprob: -8.73909854888916
    5. ' to' → logprob: -8.86409854888916
    6. '):
' → logprob: -8.86409854888916
    7. ')
' → logprob: -9.36409854888916
    8. ' approach' → logprob: -9.48909854888916
    9. ').
' → logprob: -9.86409854888916
    10. ' based' → logprob: -10.11409854888916

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05401458591222763
    2. '):' → logprob: -4.054014682769775
    3. ')
' → logprob: -4.929014682769775
    4. ').' → logprob: -5.054014682769775
    5. ' )' → logprob: -5.179014682769775
    6. '   ' → logprob: -5.304014682769775
    7. '):
' → logprob: -5.554014682769775
    8. '_' → logprob: -5.554014682769775
    9. ' ' → logprob: -7.179014682769775
    10. '```' → logprob: -7.429014682769775

Token 34: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6840171217918396
    2. '
' → logprob: -1.1840171813964844
    3. ':' → logprob: -2.6840171813964844
    4. '\' → logprob: -3.3090171813964844
    5. '\n' → logprob: -3.9340171813964844
    6. '    ' → logprob: -4.184017181396484
    7. '.' → logprob: -4.559017181396484
    8. ' ' → logprob: -4.934017181396484
    9. '```' → logprob: -5.059017181396484
    10. '    
' → logprob: -5.184017181396484

Token 35: ' optim' (ID: 9367)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -1.0957725048065186
    2. ' careful' → logprob: -1.8457725048065186
    3. ' the' → logprob: -1.9707725048065186
    4. ' recursion' → logprob: -2.2207725048065186
    5. ' respect' → logprob: -2.8457725048065186
    6. ' a' → logprob: -2.9707725048065186
    7. ' dynamic' → logprob: -3.3457725048065186
    8. ' space' → logprob: -3.5957725048065186
    9. ' bit' → logprob: -4.595772743225098
    10. 'out' → logprob: -5.345772743225098

Token 36: 'izations' (ID: 25434)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -1.2685602903366089
    2. 'e' → logprob: -1.5185602903366089
    3. 'ized' → logprob: -1.7685602903366089
    4. 'al' → logprob: -2.2685604095458984
    5. 'i' → logprob: -2.7685604095458984
    6. 'a' → logprob: -3.0185604095458984
    7. '   ' → logprob: -3.2685604095458984
    8. '```' → logprob: -4.268560409545898
    9. 'izing' → logprob: -4.518560409545898
    10. ' ' → logprob: -4.768560409545898

Token 37: ' based' (ID: 4122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2808835804462433
    2. ' ' → logprob: -2.655883550643921
    3. '.' → logprob: -2.905883550643921
    4. ' for' → logprob: -3.405883550643921
    5. '_' → logprob: -3.655883550643921
    6. '    ' → logprob: -4.0308837890625
    7. ' to' → logprob: -4.2808837890625
    8. '<|end|>' → logprob: -5.1558837890625
    9. ':' → logprob: -5.7808837890625
    10. '  ' → logprob: -5.9058837890625

Token 38: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.031866058707237244
    2. '_' → logprob: -4.156866073608398
    3. ' ' → logprob: -4.781866073608398
    4. 'on' → logprob: -5.031866073608398
    5. '[' → logprob: -9.156866073608398
    6. '  ' → logprob: -9.156866073608398
    7. '=' → logprob: -9.281866073608398
    8. '   ' → logprob: -9.406866073608398
    9. ')' → logprob: -9.531866073608398
    10. '    ' → logprob: -9.906866073608398

Token 39: ' colors' (ID: 10803)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.38522666692733765
    2. ' dynamic' → logprob: -1.3852267265319824
    3. ' space' → logprob: -4.260226726531982
    4. ' a' → logprob: -4.510226726531982
    5. 'the' → logprob: -5.260226726531982
    6. ' n' → logprob: -5.510226726531982
    7. ' spaces' → logprob: -5.510226726531982
    8. ' memo' → logprob: -5.885226726531982
    9. ' combin' → logprob: -6.010226726531982
    10. ' dp' → logprob: -6.385226726531982

Token 40: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06388842314481735
    2. '   ' → logprob: -3.4388883113861084
    3. ')' → logprob: -3.9388883113861084
    4. ' ' → logprob: -5.4388885498046875
    5. ',' → logprob: -6.3138885498046875
    6. '=' → logprob: -6.6888885498046875
    7. '[' → logprob: -7.8138885498046875
    8. '\' → logprob: -7.8138885498046875
    9. ':' → logprob: -8.563888549804688
    10. '"' → logprob: -8.813888549804688

Token 41: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4094090461730957
    2. '   ' → logprob: -1.7844090461730957
    3. ')' → logprob: -2.4094090461730957
    4. ':' → logprob: -3.5344090461730957
    5. ' ' → logprob: -4.159409046173096
    6. ',' → logprob: -4.534409046173096
    7. '=' → logprob: -4.784409046173096
    8. '.' → logprob: -5.659409046173096
    9. '):' → logprob: -6.409409046173096
    10. '```' → logprob: -6.659409046173096

Token 42: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08929429203271866
    2. '_' → logprob: -2.964294195175171
    3. ':' → logprob: -4.71429443359375
    4. '.' → logprob: -5.08929443359375
    5. ')' → logprob: -5.21429443359375
    6. ' ' → logprob: -5.83929443359375
    7. ',' → logprob: -5.96429443359375
    8. '```' → logprob: -5.96429443359375
    9. ' and' → logprob: -6.96429443359375
    10. '    ' → logprob: -6.96429443359375

Token 43: ' avoiding' (ID: 49354)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.2505350410938263
    2. ' counts' → logprob: -2.250535011291504
    3. ' frequencies' → logprob: -3.250535011291504
    4. ' values' → logprob: -4.250535011291504
    5. ' lengths' → logprob: -4.500535011291504
    6. ' frequency' → logprob: -4.750535011291504
    7. ' types' → logprob: -5.000535011291504
    8. ' sequences' → logprob: -5.625535011291504
    9. ' states' → logprob: -5.625535011291504
    10. ' the' → logprob: -5.625535011291504

Token 44: ' consecutive' (ID: 40840)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.8488669395446777
    2. ' duplicate' → logprob: -1.3488669395446777
    3. ' repeated' → logprob: -2.3488669395446777
    4. ' redundant' → logprob: -3.5988669395446777
    5. ' unnecessary' → logprob: -3.9738669395446777
    6. ' invalid' → logprob: -3.9738669395446777
    7. ' repeating' → logprob: -3.9738669395446777
    8. ' consecutive' → logprob: -4.473866939544678
    9. ' adjacent' → logprob: -4.473866939544678
    10. ' sequences' → logprob: -4.723866939544678

Token 45: ' duplicates' (ID: 91135)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.860112726688385
    2. ' duplicates' → logprob: -1.4851126670837402
    3. ' ' → logprob: -2.1101126670837402
    4. ' identical' → logprob: -2.4851126670837402
    5. ' colors' → logprob: -2.7351126670837402
    6. ' equal' → logprob: -4.11011266708374
    7. ' tokens' → logprob: -4.73511266708374
    8. ' items' → logprob: -4.86011266708374
    9. ' repeats' → logprob: -4.86011266708374
    10. ' same' → logprob: -4.86011266708374

Token 46: '.

' (ID: 364)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8118680715560913
    2. ':' → logprob: -0.9368680715560913
    3. '   ' → logprob: -2.686868190765381
    4. '\n' → logprob: -2.936868190765381
    5. '
' → logprob: -3.436868190765381
    6. '```' → logprob: -5.311868190765381
    7. '' → logprob: -7.311868190765381
    8. 'n' → logprob: -7.436868190765381
    9. '    
' → logprob: -7.436868190765381
    10. '    ' → logprob: -7.561868190765381

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018931744620203972
    2. '```' → logprob: -4.643931865692139
    3. '"""' → logprob: -5.643931865692139
    4. ')' → logprob: -6.268931865692139
    5. '\n' → logprob: -6.643931865692139
    6. 'n' → logprob: -7.268931865692139
    7. ' ' → logprob: -7.893931865692139
    8. '
' → logprob: -8.51893138885498
    9. ' """' → logprob: -8.76893138885498
    10. '"' → logprob: -8.76893138885498

Token 48: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019206486642360687
    2. 'n' → logprob: -4.519206523895264
    3. '    ' → logprob: -5.644206523895264
    4. ' ' → logprob: -6.394206523895264
    5. '
' → logprob: -7.269206523895264
    6. ')' → logprob: -7.769206523895264
    7. '```' → logprob: -8.019206047058105
    8. '"""' → logprob: -8.519206047058105
    9. '#' → logprob: -8.769206047058105
    10. '    
' → logprob: -9.019206047058105

Token 49: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8434019684791565
    2. '   ' → logprob: -1.5934019088745117
    3. ' input' → logprob: -1.7184019088745117
    4. 'input' → logprob: -2.7184019088745117
    5. 'from' → logprob: -3.2184019088745117
    6. ' the' → logprob: -3.7184019088745117
    7. ' from' → logprob: -4.218401908874512
    8. '(' → logprob: -4.468401908874512
    9. ')' → logprob: -4.843401908874512
    10. 'import' → logprob: -5.718401908874512

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12167907506227493
    2. ' input' → logprob: -3.2466790676116943
    3. 'input' → logprob: -3.6216790676116943
    4. '    ' → logprob: -3.8716790676116943
    5. '       ' → logprob: -4.621679306030273
    6. ')' → logprob: -4.871679306030273
    7. '```' → logprob: -5.746679306030273
    8. '<|end|>' → logprob: -6.746679306030273
    9. ' )' → logprob: -6.871679306030273
    10. '<|end|>' → logprob: -7.121679306030273

Token 51: ' -' (ID: 533)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7778598666191101
    2. '   ' → logprob: -1.1528599262237549
    3. 'n' → logprob: -2.652859926223755
    4. ' input' → logprob: -2.652859926223755
    5. 'data' → logprob: -3.402859926223755
    6. ')' → logprob: -4.152859687805176
    7. 's' → logprob: -5.777859687805176
    8. ' data' → logprob: -5.777859687805176
    9. 'r' → logprob: -6.027859687805176
    10. 'd' → logprob: -6.152859687805176

Token 52: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24723157286643982
    2. ' input' → logprob: -2.6222314834594727
    3. 'input' → logprob: -2.7472314834594727
    4. ' n' → logprob: -2.8722314834594727
    5. '   ' → logprob: -4.247231483459473
    6. 'i' → logprob: -6.247231483459473
    7. ' data' → logprob: -6.372231483459473
    8. 'int' → logprob: -6.372231483459473
    9. 'data' → logprob: -6.622231483459473
    10. 'a' → logprob: -7.122231483459473

Token 53: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6880068182945251
    2. '   ' → logprob: -1.56300687789917
    3. ',' → logprob: -1.93800687789917
    4. '=' → logprob: -2.06300687789917
    5. ':' → logprob: -4.68800687789917
    6. ')' → logprob: -6.31300687789917
    7. '```' → logprob: -6.93800687789917
    8. '  ' → logprob: -7.18800687789917
    9. '    ' → logprob: -7.31300687789917
    10. '_' → logprob: -7.68800687789917

Token 54: ' number' (ID: 2086)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20411711931228638
    2. 'int' → logprob: -1.8291170597076416
    3. ' n' → logprob: -4.329117298126221
    4. ' ' → logprob: -4.954117298126221
    5. ' input' → logprob: -6.329117298126221
    6. '=int' → logprob: -8.204116821289062
    7. '   ' → logprob: -8.329116821289062
    8. ' integer' → logprob: -8.329116821289062
    9. ' N' → logprob: -8.454116821289062
    10. '    ' → logprob: -8.829116821289062

Token 55: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.755303144454956
    2. '   ' → logprob: -1.505303144454956
    3. '=' → logprob: -2.130303144454956
    4. ')' → logprob: -3.130303144454956
    5. ' of' → logprob: -3.255303144454956
    6. ' ' → logprob: -3.380303144454956
    7. '\' → logprob: -4.130303382873535
    8. '    ' → logprob: -4.380303382873535
    9. '(' → logprob: -5.005303382873535
    10. ''' → logprob: -5.130303382873535

Token 56: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.12141420692205429
    2. ' ' → logprob: -3.1214141845703125
    3. ' items' → logprob: -3.1214141845703125
    4. ' integers' → logprob: -4.1214141845703125
    5. ' cards' → logprob: -5.2464141845703125
    6. ' sequences' → logprob: -7.1214141845703125
    7. ' points' → logprob: -7.2464141845703125
    8. ' colors' → logprob: -7.3714141845703125
    9. ' spaces' → logprob: -7.7464141845703125
    10. ' objects' → logprob: -8.121414184570312

Token 57: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5385804176330566
    2. '\n' → logprob: -1.2885804176330566
    3. '\' → logprob: -2.6635804176330566
    4. '```' → logprob: -3.0385804176330566
    5. '
' → logprob: -4.663580417633057
    6. '    
' → logprob: -5.163580417633057
    7. '    ' → logprob: -6.913580417633057
    8. ',' → logprob: -7.038580417633057
    9. ''\' → logprob: -7.163580417633057
    10. '       ' → logprob: -7.413580417633057

Token 58: ' input' (ID: 3422)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.030398031696677208
    2. 'the' → logprob: -4.155397891998291
    3. ' input' → logprob: -4.780397891998291
    4. ' sequence' → logprob: -5.530397891998291
    5. ' range' → logprob: -7.780397891998291
    6. ' a' → logprob: -7.780397891998291
    7. ' array' → logprob: -8.03039836883545
    8. ' sequences' → logprob: -8.65539836883545
    9. '   ' → logprob: -9.03039836883545
    10. ' an' → logprob: -9.15539836883545

Token 59: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34462448954582214
    2. '\' → logprob: -2.2196245193481445
    3. '\n' → logprob: -2.2196245193481445
    4. '```' → logprob: -3.4696245193481445
    5. ')' → logprob: -3.8446245193481445
    6. '_' → logprob: -5.5946245193481445
    7. '<|end|>' → logprob: -6.0946245193481445
    8. '    
' → logprob: -6.0946245193481445
    9. ',' → logprob: -6.3446245193481445
    10. '    ' → logprob: -6.5946245193481445

Token 60: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38536351919174194
    2. '\' → logprob: -1.8853635787963867
    3. '\n' → logprob: -2.2603635787963867
    4. '```' → logprob: -3.1353635787963867
    5. '    ' → logprob: -5.510363578796387
    6. '    
' → logprob: -5.885363578796387
    7. 'n' → logprob: -6.260363578796387
    8. '       ' → logprob: -6.385363578796387
    9. 'newline' → logprob: -6.510363578796387
    10. ' \' → logprob: -6.760363578796387

Token 61: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03772091120481491
    2. '    ' → logprob: -4.412720680236816
    3. 'n' → logprob: -4.912720680236816
    4. ' ' → logprob: -5.287720680236816
    5. '\n' → logprob: -5.412720680236816
    6. '       ' → logprob: -5.537720680236816
    7. '```' → logprob: -6.287720680236816
    8. '\' → logprob: -7.662720680236816
    9. '  ' → logprob: -7.662720680236816
    10. ' \' → logprob: -8.662720680236816

Token 62: ' X' (ID: 2127)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.7946776151657104
    2. ' data' → logprob: -2.294677734375
    3. ' arr' → logprob: -2.419677734375
    4. ' colors' → logprob: -2.919677734375
    5. 'arr' → logprob: -3.044677734375
    6. 'A' → logprob: -3.294677734375
    7. ' a' → logprob: -3.419677734375
    8. 'data' → logprob: -3.419677734375
    9. ' sequence' → logprob: -3.419677734375
    10. 'colors' → logprob: -3.794677734375

Token 63: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4245840609073639
    2. ':' → logprob: -1.4245840311050415
    3. '=' → logprob: -2.799584150314331
    4. ',' → logprob: -3.174584150314331
    5. ')' → logprob: -6.674583911895752
    6. '   ' → logprob: -8.17458438873291
    7. '=int' → logprob: -8.42458438873291
    8. '=input' → logprob: -8.79958438873291
    9. '_input' → logprob: -9.04958438873291
    10. '):' → logprob: -9.17458438873291

Token 64: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.898380696773529
    2. ' list' → logprob: -1.2733807563781738
    3. ' int' → logprob: -2.148380756378174
    4. 'int' → logprob: -3.148380756378174
    5. ' colors' → logprob: -3.398380756378174
    6. ' the' → logprob: -3.898380756378174
    7. '   ' → logprob: -4.148380756378174
    8. ' a' → logprob: -4.648380756378174
    9. ' input' → logprob: -4.773380756378174
    10. ' color' → logprob: -4.898380756378174

Token 65: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.25245267152786255
    2. '[int' → logprob: -2.0024526119232178
    3. ' =' → logprob: -3.2524526119232178
    4. '<|end|>' → logprob: -3.5024526119232178
    5. ')' → logprob: -5.127452850341797
    6. '   ' → logprob: -5.627452850341797
    7. '=' → logprob: -6.377452850341797
    8. '[' → logprob: -6.752452850341797
    9. '<|end|>' → logprob: -6.752452850341797
    10. '  ' → logprob: -7.252452850341797

Token 66: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.0823463574051857
    2. 'int' → logprob: -3.3323464393615723
    3. 'inte' → logprob: -3.4573464393615723
    4. ' int' → logprob: -4.832346439361572
    5. 'ints' → logprob: -5.707346439361572
    6. '[int' → logprob: -8.082345962524414
    7. ' ints' → logprob: -9.082345962524414
    8. ' integer' → logprob: -10.457345962524414
    9. '<int' → logprob: -11.457345962524414
    10. 'integer' → logprob: -11.457345962524414

Token 67: ' representing' (ID: 25389)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5918617248535156
    2. '   ' → logprob: -1.0918617248535156
    3. '=' → logprob: -3.4668617248535156
    4. ':' → logprob: -3.8418617248535156
    5. '```' → logprob: -3.9668617248535156
    6. '):' → logprob: -4.466861724853516
    7. ')' → logprob: -4.716861724853516
    8. '[' → logprob: -5.466861724853516
    9. ',' → logprob: -5.966861724853516
    10. '=[]' → logprob: -6.591861724853516

Token 68: ' colors' (ID: 10803)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.28979286551475525
    2. ' colors' → logprob: -1.5397928953170776
    3. ' elements' → logprob: -3.539792776107788
    4. ' positions' → logprob: -6.414793014526367
    5. ' color' → logprob: -6.664793014526367
    6. 'the' → logprob: -6.789793014526367
    7. ' sequence' → logprob: -7.164793014526367
    8. 'colors' → logprob: -7.164793014526367
    9. ' values' → logprob: -7.414793014526367
    10. ' input' → logprob: -7.414793014526367

Token 69: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08626288175582886
    2. '\' → logprob: -4.2112627029418945
    3. '
' → logprob: -4.3362627029418945
    4. ')' → logprob: -4.4612627029418945
    5. '\n' → logprob: -4.5862627029418945
    6. ':' → logprob: -5.2112627029418945
    7. '```' → logprob: -5.2112627029418945
    8. '[' → logprob: -5.4612627029418945
    9. '.' → logprob: -5.5862627029418945
    10. ',' → logprob: -5.8362627029418945

Token 70: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.4486319422721863
    2. ' elements' → logprob: -1.823632001876831
    3. ' types' → logprob: -1.948632001876831
    4. ' sequences' → logprob: -4.573631763458252
    5. 'values' → logprob: -4.698631763458252
    6. ' categories' → logprob: -4.698631763458252
    7. ' items' → logprob: -4.698631763458252
    8. 'types' → logprob: -5.073631763458252
    9. ' positions' → logprob: -5.573631763458252
    10. ' numbers' → logprob: -5.573631763458252

Token 71: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2373604029417038
    2. '
' → logprob: -2.2373604774475098
    3. '```' → logprob: -3.4873604774475098
    4. ')' → logprob: -3.7373604774475098
    5. ':' → logprob: -4.11236047744751
    6. '    
' → logprob: -5.23736047744751
    7. '):' → logprob: -5.23736047744751
    8. '.' → logprob: -5.61236047744751
    9. '\' → logprob: -5.61236047744751
    10. '\n' → logprob: -5.73736047744751

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010153737850487232
    2. '```' → logprob: -5.260153770446777
    3. '"""' → logprob: -5.635153770446777
    4. '\n' → logprob: -8.260153770446777
    5. '"' → logprob: -8.510153770446777
    6. '    
' → logprob: -8.760153770446777
    7. 'n' → logprob: -8.760153770446777
    8. ')' → logprob: -8.760153770446777
    9. '`' → logprob: -9.385153770446777
    10. ' """' → logprob: -9.510153770446777

Token 73: ' Outputs' (ID: 145641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033555859699845314
    2. '"""' → logprob: -6.753355503082275
    3. ' """' → logprob: -7.378355503082275
    4. '    ' → logprob: -7.378355503082275
    5. '```' → logprob: -8.503355979919434
    6. 'n' → logprob: -8.628355979919434
    7. ')' → logprob: -8.878355979919434
    8. ' ' → logprob: -9.253355979919434
    9. '  ' → logprob: -9.878355979919434
    10. '    
' → logprob: -10.003355979919434

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.410146564245224
    2. '   ' → logprob: -1.1601465940475464
    3. ' :' → logprob: -4.785146713256836
    4. '(' → logprob: -5.785146713256836
    5. '    ' → logprob: -6.035146713256836
    6. '       ' → logprob: -6.285146713256836
    7. ':
' → logprob: -6.785146713256836
    8. '\n' → logprob: -7.035146713256836
    9. '\' → logprob: -7.160146713256836
    10. '```' → logprob: -7.535146713256836

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02573349140584469
    2. '    ' → logprob: -4.150733470916748
    3. '       ' → logprob: -5.400733470916748
    4. '1' → logprob: -6.025733470916748
    5. '"' → logprob: -7.025733470916748
    6. ' ' → logprob: -7.400733470916748
    7. ''' → logprob: -8.525733947753906
    8. '```' → logprob: -8.525733947753906
    9. '  ' → logprob: -8.900733947753906
    10. '`' → logprob: -8.900733947753906

Token 76: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13374534249305725
    2. ' result' → logprob: -3.8837454319000244
    3. 'result' → logprob: -4.133745193481445
    4. '       ' → logprob: -4.633745193481445
    5. 'The' → logprob: -4.758745193481445
    6. ' The' → logprob: -5.008745193481445
    7. ' None' → logprob: -5.008745193481445
    8. ' the' → logprob: -5.133745193481445
    9. 'int' → logprob: -5.258745193481445
    10. 'print' → logprob: -5.258745193481445

Token 77: ' Number' (ID: 9184)
  Prédit: ' The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.9837273955345154
    2. ' int' → logprob: -1.9837274551391602
    3. 'The' → logprob: -2.10872745513916
    4. 'int' → logprob: -2.23372745513916
    5. '   ' → logprob: -2.73372745513916
    6. ' print' → logprob: -3.10872745513916
    7. ' return' → logprob: -3.48372745513916
    8. ' the' → logprob: -3.85872745513916
    9. 'print' → logprob: -3.85872745513916
    10. 'return' → logprob: -4.60872745513916

Token 78: ' of' (ID: 328)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9710678458213806
    2. ':' → logprob: -1.2210679054260254
    3. '   ' → logprob: -2.0960679054260254
    4. '\n' → logprob: -2.4710679054260254
    5. ')' → logprob: -3.5960679054260254
    6. ' ' → logprob: -3.9710679054260254
    7. '
' → logprob: -3.9710679054260254
    8. '(' → logprob: -4.096067905426025
    9. '_' → logprob: -5.096067905426025
    10. '"' → logprob: -5.221067905426025

Token 79: ' possible' (ID: 4149)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.06400786340236664
    2. ' ' → logprob: -2.8140077590942383
    3. ' possible' → logprob: -7.439007759094238
    4. '   ' → logprob: -8.189007759094238
    5. ' \' → logprob: -8.439007759094238
    6. ' valid' → logprob: -8.439007759094238
    7. 'ways' → logprob: -8.564007759094238
    8. '  ' → logprob: -8.814007759094238
    9. ' unique' → logprob: -10.189007759094238
    10. '\n' → logprob: -10.439007759094238

Token 80: ' arrangements' (ID: 34602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2702760696411133
    2. ' ways' → logprob: -1.7702760696411133
    3. '_' → logprob: -2.8952760696411133
    4. ' arrangements' → logprob: -6.145276069641113
    5. ' _' → logprob: -6.270276069641113
    6. ' s' → logprob: -6.645276069641113
    7. '   ' → logprob: -6.645276069641113
    8. ' \' → logprob: -6.895276069641113
    9. '  ' → logprob: -7.145276069641113
    10. 's' → logprob: -7.770276069641113

Token 81: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16170194745063782
    2. ':' → logprob: -2.4117019176483154
    3. '\n' → logprob: -4.1617021560668945
    4. '
' → logprob: -4.5367021560668945
    5. '\' → logprob: -5.1617021560668945
    6. '```' → logprob: -5.1617021560668945
    7. '<|end|>' → logprob: -5.2867021560668945
    8. ')' → logprob: -5.5367021560668945
    9. ',' → logprob: -6.0367021560668945
    10. '.' → logprob: -6.4117021560668945

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3499246835708618
    2. '10' → logprob: -1.2249246835708618
    3. ' MOD' → logprob: -8.09992504119873
    4. ' (' → logprob: -8.09992504119873
    5. ' \(' → logprob: -8.09992504119873
    6. ' M' → logprob: -8.59992504119873
    7. '998' → logprob: -8.97492504119873
    8. ' `' → logprob: -9.47492504119873
    9. '100' → logprob: -9.84992504119873
    10. '1' → logprob: -10.09992504119873

Token 83: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5890254974365234
    2. ' ' → logprob: -0.8390254974365234
    3. '100' → logprob: -4.589025497436523
    4. '(' → logprob: -6.464025497436523
    5. ' (' → logprob: -7.339025497436523
    6. '998' → logprob: -7.714025497436523
    7. '1' → logprob: -9.089025497436523
    8. ' MOD' → logprob: -11.089025497436523
    9. '`' → logprob: -11.339025497436523
    10. ' \(' → logprob: -11.589025497436523

Token 84: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.051269493997097015
    2. '%' → logprob: -3.67626953125
    3. '1' → logprob: -5.17626953125
    4. '9' → logprob: -5.42626953125
    5. ' ' → logprob: -5.55126953125
    6. '6' → logprob: -5.92626953125
    7. '4' → logprob: -6.42626953125
    8. '7' → logprob: -6.42626953125
    9. '3' → logprob: -6.92626953125
    10. '5' → logprob: -7.05126953125

Token 85: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '09' → logprob: -16.000003814697266
    4. '```' → logprob: -16.500003814697266
    5. '10' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.250003814697266
    7. '6' → logprob: -18.500003814697266
    8. '4' → logprob: -18.875003814697266
    9. '``' → logprob: -19.000003814697266
    10. '+' → logprob: -19.250003814697266

Token 86: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033790577203035355
    2. '**' → logprob: -4.533790588378906
    3. '_' → logprob: -5.158790588378906
    4. '7' → logprob: -5.158790588378906
    5. ')' → logprob: -5.658790588378906
    6. '9' → logprob: -5.783790588378906
    7. ' +' → logprob: -7.158790588378906
    8. ':' → logprob: -7.283790588378906
    9. '```' → logprob: -7.408790588378906
    10. '^' → logprob: -7.533790588378906

Token 87: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.07148075848817825
    2. '9' → logprob: -2.6964807510375977
    3. '+' → logprob: -6.696480751037598
    4. ' ' → logprob: -8.446480751037598
    5. '```' → logprob: -9.446480751037598
    6. ' +' → logprob: -13.071480751037598
    7. '``' → logprob: -13.196480751037598
    8. '10' → logprob: -13.446480751037598
    9. '`' → logprob: -13.571480751037598
    10. '57' → logprob: -14.258980751037598

Token 88: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2253606617450714
    2. '\n' → logprob: -1.850360631942749
    3. '
' → logprob: -3.975360631942749
    4. '\' → logprob: -4.850360870361328
    5. ':' → logprob: -5.350360870361328
    6. '    
' → logprob: -5.600360870361328
    7. '```' → logprob: -5.725360870361328
    8. '' → logprob: -6.350360870361328
    9. '  
' → logprob: -7.100360870361328
    10. ')' → logprob: -7.100360870361328

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11494603753089905
    2. '
' → logprob: -2.364946126937866
    3. '```' → logprob: -5.489945888519287
    4. '    
' → logprob: -5.739945888519287
    5. '"""' → logprob: -5.739945888519287
    6. '"' → logprob: -6.864945888519287
    7. '\n' → logprob: -7.114945888519287
    8. ')' → logprob: -7.489945888519287
    9. ' 
' → logprob: -7.989945888519287
    10. 'n' → logprob: -8.239946365356445

Token 90: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04959262162446976
    2. '
' → logprob: -3.4245927333831787
    3. '    
' → logprob: -5.4245924949646
    4. '```' → logprob: -5.4245924949646
    5. '\n' → logprob: -5.7995924949646
    6. '    ' → logprob: -7.2995924949646
    7. '"""' → logprob: -7.2995924949646
    8. '\' → logprob: -7.9245924949646
    9. '' → logprob: -7.9245924949646
    10. ' 
' → logprob: -8.049592971801758

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04736499860882759
    2. 'n' → logprob: -3.2973649501800537
    3. '    ' → logprob: -6.172365188598633
    4. '    
' → logprob: -6.922365188598633
    5. 'N' → logprob: -7.047365188598633
    6. '
' → logprob: -7.047365188598633
    7. ' n' → logprob: -7.172365188598633
    8. ' import' → logprob: -7.297365188598633
    9. 'import' → logprob: -7.422365188598633
    10. ' \' → logprob: -7.672365188598633

Token 92: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01040128618478775
    2. 'n' → logprob: -5.010401248931885
    3. '   ' → logprob: -6.385401248931885
    4. '#' (adapté à ' #') → logprob: -6.760401248931885
    5. 'import' → logprob: -7.260401248931885
    6. ' N' → logprob: -9.260401725769043
    7. ' import' → logprob: -11.510401725769043
    8. ' ' → logprob: -12.260401725769043
    9. 'MOD' → logprob: -12.385401725769043
    10. 'mod' → logprob: -12.635401725769043

Token 93: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8296967148780823
    2. 'N' → logprob: -1.3296966552734375
    3. '   ' → logprob: -2.4546966552734375
    4. ' n' → logprob: -2.5796966552734375
    5. ' N' → logprob: -3.0796966552734375
    6. 'import' → logprob: -3.0796966552734375
    7. ' import' → logprob: -3.4546966552734375
    8. ' ' → logprob: -5.5796966552734375
    9. '#' → logprob: -5.8296966552734375
    10. ' input' → logprob: -6.5796966552734375

Token 94: ' the' (ID: 290)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.007593133952468634
    2. '   ' → logprob: -5.507593154907227
    3. ' n' → logprob: -6.257593154907227
    4. '    ' → logprob: -7.257593154907227
    5. ' ' → logprob: -7.882593154907227
    6. 'N' → logprob: -8.757593154907227
    7. 'n' → logprob: -8.757593154907227
    8. '  ' → logprob: -9.882593154907227
    9. '(N' → logprob: -10.632593154907227
    10. '```' → logprob: -10.632593154907227

Token 95: ' number' (ID: 2086)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.11760905385017395
    2. 'N' → logprob: -3.1176090240478516
    3. 'n' → logprob: -3.3676090240478516
    4. ' ' → logprob: -4.242609024047852
    5. ' n' → logprob: -4.367609024047852
    6. ' input' → logprob: -5.492609024047852
    7. 'input' → logprob: -7.867609024047852
    8. '   ' → logprob: -8.242609024047852
    9. '  ' → logprob: -8.492609024047852
    10. ' space' → logprob: -9.867609024047852

Token 96: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38996896147727966
    2. '   ' → logprob: -2.0149688720703125
    3. '_of' → logprob: -2.6399688720703125
    4. '=' → logprob: -2.7649688720703125
    5. '()' → logprob: -3.7649688720703125
    6. ' of' → logprob: -3.7649688720703125
    7. '(' → logprob: -5.7649688720703125
    8. 'of' → logprob: -6.5149688720703125
    9. '_' → logprob: -6.6399688720703125
    10. '    ' → logprob: -7.2649688720703125

Token 97: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.04671787843108177
    2. ' N' → logprob: -3.921717882156372
    3. 'elements' → logprob: -4.296717643737793
    4. ' ' → logprob: -4.671717643737793
    5. ' lines' → logprob: -7.046717643737793
    6. 'N' → logprob: -7.421717643737793
    7. ' inputs' → logprob: -7.921717643737793
    8. ' input' → logprob: -7.921717643737793
    9. 'n' → logprob: -8.671717643737793
    10. ' n' → logprob: -8.921717643737793

Token 98: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014741703867912292
    2. 'n' → logprob: -5.139741897583008
    3. 'N' → logprob: -5.639741897583008
    4. '    
' → logprob: -5.764741897583008
    5. '
' → logprob: -6.764741897583008
    6. ' N' → logprob: -7.639741897583008
    7. '\n' → logprob: -8.264741897583008
    8. '```' → logprob: -9.889741897583008
    9. '       ' → logprob: -10.264741897583008
    10. '	N' → logprob: -10.764741897583008

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018188927322626114
    2. 'n' → logprob: -4.768188953399658
    3. ' N' → logprob: -5.268188953399658
    4. 'N' → logprob: -5.518188953399658
    5. '    
' → logprob: -9.1431884765625
    6. '       ' → logprob: -9.8931884765625
    7. ' =' → logprob: -10.2681884765625
    8. ' n' → logprob: -10.3931884765625
    9. '  ' → logprob: -10.6431884765625
    10. '=' → logprob: -10.6431884765625

Token 100: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5813849568367004
    2. 'N' (adapté à ' N') → logprob: -0.8313849568367004
    3. '   ' → logprob: -5.456385135650635
    4. 'n' → logprob: -6.956385135650635
    5. ' n' → logprob: -8.581384658813477
    6. ' 
' → logprob: -11.956384658813477
    7. '	N' → logprob: -12.081384658813477
    8. '    
' → logprob: -12.831384658813477
    9. ' ' → logprob: -12.956384658813477
    10. '\n' → logprob: -13.956384658813477

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0034673791378736496
    2. '=' → logprob: -5.753467559814453
    3. ',' → logprob: -8.253467559814453
    4. '   ' → logprob: -10.753467559814453
    5. ' ,' → logprob: -12.503467559814453
    6. '=int' → logprob: -13.628467559814453
    7. ' =
' → logprob: -14.128467559814453
    8. ' ' → logprob: -14.128467559814453
    9. ')' → logprob: -14.753467559814453
    10. '=input' → logprob: -14.753467559814453

Token 102: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2519305646419525
    2. 'int' → logprob: -1.501930594444275
    3. ' ' → logprob: -14.501930236816406
    4. '   ' → logprob: -15.126930236816406
    5. ' input' → logprob: -15.376930236816406
    6. '=int' → logprob: -15.501930236816406
    7. 'input' → logprob: -16.251930236816406
    8. '	int' → logprob: -16.876930236816406
    9. '(int' → logprob: -17.251930236816406
    10. '[int' → logprob: -17.376930236816406

Token 103: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.038333505392074585
    2. '(' → logprob: -3.2883334159851074
    3. 'input' → logprob: -8.163333892822266
    4. ' input' → logprob: -12.288333892822266
    5. ' (' → logprob: -13.288333892822266
    6. '(
' → logprob: -14.538333892822266
    7. '=input' → logprob: -16.038333892822266
    8. '()' → logprob: -16.163333892822266
    9. '(int' → logprob: -16.538333892822266
    10. '(stdin' → logprob: -17.538333892822266

Token 104: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07904015481472015
    2. '()' → logprob: -2.579040050506592
    3. ')' → logprob: -9.07904052734375
    4. '().' → logprob: -11.20404052734375
    5. '(' → logprob: -11.70404052734375
    6. ' ())' → logprob: -12.45404052734375
    7. '();)' → logprob: -13.07904052734375
    8. '()))' → logprob: -13.07904052734375
    9. '());' → logprob: -13.32904052734375
    10. '()),' → logprob: -13.70404052734375

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5388284921646118
    2. 'X' → logprob: -1.0388284921646118
    3. '
' → logprob: -3.1638283729553223
    4. '    
' → logprob: -4.413828372955322
    5. ' X' → logprob: -5.038828372955322
    6. ' 
' → logprob: -7.788828372955322
    7. '  ' → logprob: -8.28882884979248
    8. '  
' → logprob: -8.53882884979248
    9. '\n' → logprob: -8.53882884979248
    10. '    ' → logprob: -9.03882884979248

Token 106: ' #' (ID: 1069)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6516151428222656
    2. '
' → logprob: -0.9016151428222656
    3. ' X' → logprob: -3.2766151428222656
    4. ' 
' → logprob: -4.276615142822266
    5. '    
' → logprob: -4.901615142822266
    6. '\n' → logprob: -5.401615142822266
    7. '   ' → logprob: -5.401615142822266
    8. '  
' → logprob: -7.026615142822266
    9. 'n' → logprob: -7.401615142822266
    10. '<|end|>' → logprob: -7.401615142822266

Token 107: ' Read' (ID: 5405)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0487874336540699
    2. ' X' → logprob: -3.0487873554229736
    3. '#' → logprob: -8.798787117004395
    4. '   ' → logprob: -10.423787117004395
    5. ' #' → logprob: -12.298787117004395
    6. 'x' → logprob: -12.298787117004395
    7. '```' → logprob: -12.548787117004395
    8. '
' → logprob: -12.798787117004395
    9. ' ' → logprob: -13.548787117004395
    10. ' x' → logprob: -14.923787117004395

Token 108: ' each' (ID: 2454)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.651646614074707
    2. '()' → logprob: -1.151646614074707
    3. '(' → logprob: -2.276646614074707
    4. 'X' → logprob: -3.401646614074707
    5. ' the' → logprob: -3.901646614074707
    6. '   ' → logprob: -5.776646614074707
    7. ' ' → logprob: -6.776646614074707
    8. '(X' → logprob: -7.526646614074707
    9. 'the' → logprob: -7.776646614074707
    10. ' a' → logprob: -7.776646614074707

Token 109: ' color' (ID: 3089)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.060108620673418045
    2. '(' → logprob: -3.0601086616516113
    3. '()
' → logprob: -6.060108661651611
    4. '(X' → logprob: -6.435108661651611
    5. ' line' → logprob: -6.685108661651611
    6. 'X' → logprob: -6.935108661651611
    7. ' elements' → logprob: -7.185108661651611
    8. '(
' → logprob: -7.185108661651611
    9. ' values' → logprob: -7.435108661651611
    10. '().' → logprob: -7.685108661651611

Token 110: '/value' (ID: 137311)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09997942298650742
    2. 's' → logprob: -2.9749794006347656
    3. '_colors' → logprob: -4.099979400634766
    4. '_values' → logprob: -4.474979400634766
    5. 'X' → logprob: -5.224979400634766
    6. '_list' → logprob: -5.349979400634766
    7. '()
' → logprob: -6.849979400634766
    8. ' =' → logprob: -7.099979400634766
    9. '(' → logprob: -7.349979400634766
    10. '_' → logprob: -7.474979400634766

Token 111: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24509300291538239
    2. 's' → logprob: -2.4950931072235107
    3. '()
' → logprob: -2.9950931072235107
    4. 'X' → logprob: -3.2450931072235107
    5. ' =' → logprob: -3.8700931072235107
    6. '   ' → logprob: -4.370092868804932
    7. ' X' → logprob: -5.620092868804932
    8. '().' → logprob: -6.120092868804932
    9. '(' → logprob: -6.370092868804932
    10. '(X' → logprob: -6.620092868804932

Token 112: ' the' (ID: 290)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6283677220344543
    2. ' input' → logprob: -0.8783677220344543
    3. 'input' → logprob: -3.8783676624298096
    4. 'list' → logprob: -4.253367900848389
    5. ' the' → logprob: -4.753367900848389
    6. ' X' → logprob: -6.378367900848389
    7. '()' → logprob: -6.503367900848389
    8. ' a' → logprob: -6.753367900848389
    9. '   ' → logprob: -7.128367900848389
    10. ' map' → logprob: -7.753367900848389

Token 113: ' sequence' (ID: 16281)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5984514355659485
    2. 'list' → logprob: -1.5984513759613037
    3. 'input' → logprob: -1.8484513759613037
    4. ' input' → logprob: -2.7234513759613037
    5. ' sequence' → logprob: -4.223451614379883
    6. 'X' → logprob: -6.098451614379883
    7. 'sequence' → logprob: -6.348451614379883
    8. '()' → logprob: -6.848451614379883
    9. ' array' → logprob: -7.098451614379883
    10. ' X' → logprob: -7.098451614379883

Token 114: '
' (ID: 198)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5097449421882629
    2. ' X' → logprob: -1.5097448825836182
    3. '   ' → logprob: -1.7597448825836182
    4. '
' → logprob: -5.134745121002197
    5. '	X' → logprob: -8.759744644165039
    6. '    
' → logprob: -9.259744644165039
    7. '(X' → logprob: -10.134744644165039
    8. ' ' → logprob: -10.634744644165039
    9. ' 
' → logprob: -11.009744644165039
    10. '\n' → logprob: -11.259744644165039

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38942691683769226
    2. ' X' → logprob: -1.7644269466400146
    3. 'X' → logprob: -1.8894269466400146
    4. '
' → logprob: -9.764427185058594
    5. ' ' → logprob: -10.889427185058594
    6. '    
' → logprob: -11.639427185058594
    7. '	X' → logprob: -11.639427185058594
    8. '  ' → logprob: -11.889427185058594
    9. '    ' → logprob: -12.389427185058594
    10. ' 
' → logprob: -13.514427185058594

Token 116: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.2014913111925125
    2. ' X' → logprob: -1.701491355895996
    3. '   ' → logprob: -9.576491355895996
    4. 'x' → logprob: -12.326491355895996
    5. ' ' → logprob: -13.701491355895996
    6. '	X' → logprob: -14.076491355895996
    7. ' x' → logprob: -14.701491355895996
    8. '
' → logprob: -15.201491355895996
    9. 'A' → logprob: -15.451491355895996
    10. 's' → logprob: -15.451491355895996

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020817816257477
    2. '=' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.975208282470703
    4. '[:]' → logprob: -15.975208282470703
    5. ' =[' → logprob: -16.100208282470703
    6. '.' → logprob: -16.100208282470703
    7. '=[]' → logprob: -16.975208282470703
    8. '=list' → logprob: -17.100208282470703
    9. ' ' → logprob: -17.225208282470703
    10. '[' → logprob: -17.225208282470703

Token 118: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20145943760871887
    2. 'list' → logprob: -1.7014594078063965
    3. ' [' → logprob: -10.576459884643555
    4. '[list' → logprob: -11.451459884643555
    5. '[' → logprob: -11.826459884643555
    6. 'input' → logprob: -13.701459884643555
    7. ' input' → logprob: -14.451459884643555
    8. ' ' → logprob: -14.701459884643555
    9. '[input' → logprob: -15.451459884643555
    10. '=list' → logprob: -16.076459884643555

Token 119: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.583550642360933e-05
    2. ' int' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.500036239624023
    4. '0' → logprob: -16.625036239624023
    5. '*' → logprob: -17.750036239624023
    6. '(int' → logprob: -17.875036239624023
    7. '```' → logprob: -17.875036239624023
    8. '  ' → logprob: -18.000036239624023
    9. ' ' → logprob: -18.250036239624023
    10. ')' → logprob: -18.250036239624023

Token 120: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0020963724236935377
    2. '(' → logprob: -6.377096176147461
    3. '(x' → logprob: -8.252096176147461
    4. 'input' → logprob: -9.127096176147461
    5. '(i' → logprob: -11.877096176147461
    6. ' (' → logprob: -12.127096176147461
    7. '()' → logprob: -12.377096176147461
    8. '(
' → logprob: -12.377096176147461
    9. ',input' → logprob: -14.377096176147461
    10. '(inp' → logprob: -14.627096176147461

Token 121: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004994167247787118
    2. '()' → logprob: -7.750499248504639
    3. ')' → logprob: -9.875499725341797
    4. '())
' → logprob: -11.750499725341797
    5. '().' → logprob: -12.500499725341797
    6. '()]' → logprob: -12.625499725341797
    7. '()
' → logprob: -13.875499725341797
    8. ' ())' → logprob: -14.000499725341797
    9. '())
' → logprob: -15.375499725341797
    10. '(' → logprob: -16.125499725341797

Token 122: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018840155098587275
    2. ')' → logprob: -7.0018839836120605
    3. '())' → logprob: -7.0018839836120605
    4. '().' → logprob: -10.751884460449219
    5. 'for' → logprob: -11.001884460449219
    6. '()]' → logprob: -11.376884460449219
    7. ' ()' → logprob: -11.876884460449219
    8. '(' → logprob: -13.001884460449219
    9. ' for' → logprob: -13.251884460449219
    10. '   ' → logprob: -15.001884460449219

Token 123: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0005114490049891174
    2. 'range' → logprob: -8.500511169433594
    3. '_' → logprob: -8.625511169433594
    4. ' _' → logprob: -9.500511169433594
    5. ' xrange' → logprob: -10.375511169433594
    6. '_range' → logprob: -11.500511169433594
    7. '	range' → logprob: -12.125511169433594
    8. ' ' → logprob: -12.625511169433594
    9. ' in' → logprob: -13.125511169433594
    10. '(range' → logprob: -13.625511169433594

Token 124: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019299437990412116
    2. ' range' → logprob: -6.251929759979248
    3. '  ' → logprob: -15.001930236816406
    4. '	range' → logprob: -15.126930236816406
    5. '   ' → logprob: -15.626930236816406
    6. '(range' → logprob: -15.751930236816406
    7. ' ' → logprob: -16.126930236816406
    8. '_' → logprob: -16.501930236816406
    9. 'rang' → logprob: -16.751930236816406
    10. 'in' → logprob: -16.751930236816406

Token 125: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005236717872321606
    2. ' range' → logprob: -5.255236625671387
    3. '   ' → logprob: -13.630236625671387
    4. '(range' → logprob: -14.630236625671387
    5. '  ' → logprob: -14.755236625671387
    6. ' ' → logprob: -15.255236625671387
    7. '	range' → logprob: -15.755236625671387
    8. '    ' → logprob: -16.380237579345703
    9. 'rang' → logprob: -16.380237579345703
    10. '```' → logprob: -16.505237579345703

Token 126: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.2378600735682994e-05
    2. '(' → logprob: -10.500032424926758
    3. 'N' → logprob: -12.375032424926758
    4. '(
' → logprob: -15.750032424926758
    5. '   ' → logprob: -15.875032424926758
    6. '(n' → logprob: -16.000032424926758
    7. ' (' → logprob: -16.500032424926758
    8. '	N' → logprob: -17.625032424926758
    9. ' N' → logprob: -18.750032424926758
    10. ')' → logprob: -18.875032424926758

Token 127: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.615255839889869e-05
    2. ']' → logprob: -9.625096321105957
    3. ')' → logprob: -10.500096321105957
    4. ' )' → logprob: -13.750096321105957
    5. '   ' → logprob: -14.750096321105957
    6. ')]
' → logprob: -14.875096321105957
    7. '])]' → logprob: -15.625096321105957
    8. '])' → logprob: -16.50009536743164
    9. '')]' → logprob: -16.62509536743164
    10. ' ]' → logprob: -16.62509536743164

Token 128: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024882089346647263
    2. '   ' → logprob: -4.5248823165893555
    3. '    
' → logprob: -4.8998823165893555
    4. '\n' → logprob: -5.8998823165893555
    5. '

' → logprob: -6.7748823165893555
    6. '  
' → logprob: -7.6498823165893555
    7. '```' → logprob: -7.6498823165893555
    8. ' 
' → logprob: -7.7748823165893555
    9. '<|end|>' → logprob: -7.7748823165893555
    10. '
    
' → logprob: -8.899882316589355

Token 129: ' MOD' (ID: 32868)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09283555299043655
    2. '   ' → logprob: -3.5928356647491455
    3. 'dp' → logprob: -3.7178356647491455
    4. '    
' → logprob: -4.217835426330566
    5. '

' → logprob: -4.717835426330566
    6. 'mod' → logprob: -5.717835426330566
    7. ' 
' → logprob: -5.842835426330566
    8. '
    
' → logprob: -6.592835426330566
    9. 'M' → logprob: -7.217835426330566
    10. 'DP' → logprob: -7.342835426330566

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005939821247011423
    2. '=' → logprob: -5.130939960479736
    3. ' ' → logprob: -12.005939483642578
    4. ' =)' → logprob: -13.505939483642578
    5. ' =
' → logprob: -13.630939483642578
    6. ')' → logprob: -14.130939483642578
    7. ',' → logprob: -14.505939483642578
    8. '    ' → logprob: -15.130939483642578
    9. '<|end|>' → logprob: -15.880939483642578
    10. ' ' → logprob: -16.005939483642578

Token 131: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49269983172416687
    2. '10' → logprob: -0.9926998615264893
    3. '100' → logprob: -3.9926998615264893
    4. ' ' → logprob: -14.99269962310791
    5. '1' → logprob: -15.24269962310791
    6. 'int' → logprob: -16.367700576782227
    7. '```' → logprob: -16.867700576782227
    8. ' (' → logprob: -17.367700576782227
    9. '(' → logprob: -17.617700576782227
    10. ' int' → logprob: -18.117700576782227

Token 132: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00218583014793694
    2. '1' → logprob: -6.127185821533203
    3. ' ' → logprob: -15.252185821533203
    4. '(
' → logprob: -15.252185821533203
    5. ' (' → logprob: -16.002185821533203
    6. '10' → logprob: -16.752185821533203
    7. '[' → logprob: -17.502185821533203
    8. '9' → logprob: -17.627185821533203
    9. '()' → logprob: -17.752185821533203
    10. '"' → logprob: -17.752185821533203

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.000001907348633
    3. '"' → logprob: -15.250001907348633
    4. ' ' → logprob: -15.500001907348633
    5. '10' → logprob: -16.125001907348633
    6. '100' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.250001907348633
    8. '```' → logprob: -17.750001907348633
    9. '[' → logprob: -18.875001907348633
    10. '`' → logprob: -19.250001907348633

Token 134: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21434742212295532
    2. '000' → logprob: -1.9643473625183105
    3. '9' → logprob: -3.4643473625183105
    4. '0' → logprob: -4.2143473625183105
    5. '_' → logprob: -5.3393473625183105
    6. '009' → logprob: -7.4643473625183105
    7. '```' → logprob: -8.214347839355469
    8. '**' → logprob: -8.464347839355469
    9. ')' → logprob: -8.589347839355469
    10. '   ' → logprob: -8.714347839355469

Token 135: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3902033970225602e-05
    2. '+' → logprob: -11.500014305114746
    3. '09' → logprob: -12.500014305114746
    4. '```' → logprob: -17.37501335144043
    5. ' ' → logprob: -17.62501335144043
    6. '   ' → logprob: -19.00001335144043
    7. '
' → logprob: -19.62501335144043
    8. '009' → logprob: -19.62501335144043
    9. '``' → logprob: -20.81251335144043
    10. '

' → logprob: -20.93751335144043

Token 136: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.519893501419574e-05
    2. ')+' → logprob: -10.00009536743164
    3. ' +' → logprob: -10.12509536743164
    4. ')' → logprob: -12.00009536743164
    5. '7' → logprob: -13.25009536743164
    6. '9' → logprob: -13.62509536743164
    7. '+)' → logprob: -15.37509536743164
    8. 'plus' → logprob: -16.25009536743164
    9. '＋' → logprob: -16.37509536743164
    10. '+
' → logprob: -17.00009536743164

Token 137: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.68022444692906e-05
    2. ' +' → logprob: -10.625046730041504
    3. '7' → logprob: -10.750046730041504
    4. '+
' → logprob: -14.625046730041504
    5. 'plus' → logprob: -14.875046730041504
    6. ' plus' → logprob: -16.50004768371582
    7. '＋' → logprob: -17.12504768371582
    8. '```' → logprob: -17.50004768371582
    9. '9' → logprob: -18.12504768371582
    10. 'Plus' → logprob: -18.12504768371582

Token 138: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.125
    3. ' ' → logprob: -17.75
    4. '   ' → logprob: -19.75
    5. '07' → logprob: -19.875
    6. '```' → logprob: -20.125
    7. '007' → logprob: -22.0
    8. '  ' → logprob: -22.375
    9. '' → logprob: -22.6875
    10. '۷' → logprob: -22.875

Token 139: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -19.125
    3. '+' → logprob: -20.375
    4. ' ' → logprob: -20.5
    5. '```' → logprob: -20.5
    6. '007' → logprob: -21.125
    7. '   ' → logprob: -22.125
    8. '' → logprob: -22.25
    9. '७' → logprob: -22.625
    10. '
' → logprob: -22.625

Token 140: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008087544701993465
    2. '    
' → logprob: -5.383087635040283
    3. ' 
' → logprob: -6.633087635040283
    4. '   ' → logprob: -7.508087635040283
    5. '

' → logprob: -7.633087635040283
    6. '  
' → logprob: -8.258087158203125
    7. '
' → logprob: -8.633087158203125
    8. '
    
' → logprob: -8.758087158203125
    9. '   
' → logprob: -9.133087158203125
    10. '<|end|>' → logprob: -9.133087158203125

Token 141: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0057309940457344055
    2. '    
' → logprob: -6.005731105804443
    3. ' 
' → logprob: -7.380731105804443
    4. '   ' → logprob: -7.380731105804443
    5. '

' → logprob: -7.630731105804443
    6. '
    
' → logprob: -8.005730628967285
    7. '  
' → logprob: -8.255730628967285
    8. '
' → logprob: -8.505730628967285
    9. '\n' → logprob: -9.005730628967285
    10. '#' → logprob: -9.380730628967285

Token 142: ' Mod' (ID: 7191)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6655227541923523
    2. '#' → logprob: -1.540522813796997
    3. 'def' → logprob: -2.915522813796997
    4. '<|end|>' → logprob: -3.165522813796997
    5. 'MOD' → logprob: -3.540522813796997
    6. ' 
' → logprob: -3.540522813796997
    7. '  
' → logprob: -3.790522813796997
    8. 'mod' → logprob: -3.915522813796997
    9. ' ' → logprob: -3.915522813796997
    10. '   ' → logprob: -4.415522575378418

Token 143: 'ulus' (ID: 40006)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.9486050605773926
    2. '<|end|>' → logprob: -1.1986050605773926
    3. '=' → logprob: -2.4486050605773926
    4. 'ulus' → logprob: -2.5736050605773926
    5. ' =' → logprob: -3.0736050605773926
    6. 'ULO' → logprob: -3.6986050605773926
    7. 'ULE' → logprob: -3.8236050605773926
    8. 'ular' → logprob: -4.448605060577393
    9. ')' → logprob: -4.698605060577393
    10. '```' → logprob: -5.323605060577393

Token 144: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03317461907863617
    2. '<|end|>' → logprob: -3.783174514770508
    3. '

' → logprob: -5.533174514770508
    4. '    
' → logprob: -6.158174514770508
    5. '<|end|>' → logprob: -7.033174514770508
    6. ' 
' → logprob: -7.908174514770508
    7. '  
' → logprob: -7.908174514770508
    8. '
' → logprob: -7.908174514770508
    9. '   ' → logprob: -8.033174514770508
    10. '
    
' → logprob: -8.283174514770508

Token 145: ' large' (ID: 4410)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20329649746418
    2. '100' → logprob: -2.328296422958374
    3. ' ' → logprob: -2.953296422958374
    4. 'mod' → logprob: -3.828296422958374
    5. '1' → logprob: -5.453296661376953
    6. '998' → logprob: -6.078296661376953
    7. ' modulo' → logprob: -6.328296661376953
    8. '```' → logprob: -6.953296661376953
    9. ' calculations' → logprob: -7.953296661376953
    10. ' modular' → logprob: -8.328296661376953

Token 146: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.06538552045822144
    2. ' integers' → logprob: -3.440385580062866
    3. 'numbers' → logprob: -4.065385341644287
    4. ' arithmetic' → logprob: -5.315385341644287
    5. ' integer' → logprob: -5.440385341644287
    6. ' number' → logprob: -6.315385341644287
    7. ' calculations' → logprob: -6.315385341644287
    8. 'inte' → logprob: -8.190385818481445
    9. ' values' → logprob: -8.315385818481445
    10. ' operations' → logprob: -8.690385818481445

Token 147: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03646411374211311
    2. '    
' → logprob: -4.036464214324951
    3. '   ' → logprob: -4.661464214324951
    4. ' 
' → logprob: -6.161464214324951
    5. '<|end|>' → logprob: -6.536464214324951
    6. '

' → logprob: -6.661464214324951
    7. '  
' → logprob: -6.911464214324951
    8. '
    
' → logprob: -7.411464214324951
    9. '\n' → logprob: -8.036463737487793
    10. '   
' → logprob: -8.161463737487793

Token 148: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.765474259853363
    2. '
' → logprob: -1.0154743194580078
    3. '   ' → logprob: -2.515474319458008
    4. '    
' → logprob: -3.265474319458008
    5. ' 
' → logprob: -3.640474319458008
    6. ' dp' → logprob: -4.515474319458008
    7. '

' → logprob: -6.015474319458008
    8. ' 

' → logprob: -6.265474319458008
    9. '   
' → logprob: -6.390474319458008
    10. '
    
' → logprob: -6.515474319458008

Token 149: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028981858864426613
    2. 'from' → logprob: -4.903981685638428
    3. '#' (adapté à ' #') → logprob: -5.278981685638428
    4. 'prev' → logprob: -5.278981685638428
    5. '   ' → logprob: -5.653981685638428
    6. 'if' → logprob: -6.653981685638428
    7. 'last' → logprob: -6.778981685638428
    8. 'f' → logprob: -6.903981685638428
    9. ' dp' → logprob: -6.903981685638428
    10. 'color' → logprob: -7.528981685638428

Token 150: ' Remove' (ID: 18141)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11526531726121902
    2. 'from' → logprob: -2.615265369415283
    3. ' dp' → logprob: -4.615265369415283
    4. '#' → logprob: -4.740265369415283
    5. 'prev' → logprob: -4.865265369415283
    6. ' from' → logprob: -5.240265369415283
    7. 'last' → logprob: -7.365265369415283
    8. 'color' → logprob: -7.490265369415283
    9. 'freq' → logprob: -8.115264892578125
    10. 'import' → logprob: -8.365264892578125

Token 151: ' consecutive' (ID: 40840)
  Prédit: '_duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duplicates' → logprob: -0.3841981589794159
    2. ' duplicates' → logprob: -1.5091981887817383
    3. '_' → logprob: -3.1341981887817383
    4. ' consecutive' → logprob: -3.7591981887817383
    5. 'duplicates' → logprob: -4.634198188781738
    6. '_duplicate' → logprob: -4.634198188781738
    7. '_con' → logprob: -6.009198188781738
    8. 'con' → logprob: -6.384198188781738
    9. ' _' → logprob: -6.384198188781738
    10. ' duplicate' → logprob: -7.009198188781738

Token 152: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.705484926700592
    2. '_duplicates' → logprob: -0.705484926700592
    3. 'duplicates' → logprob: -4.705484867095947
    4. '_duplicate' → logprob: -6.580484867095947
    5. 'Duplicates' → logprob: -6.705484867095947
    6. '_' → logprob: -8.580485343933105
    7. ' duplicate' → logprob: -9.080485343933105
    8. '   ' → logprob: -9.330485343933105
    9. 's' → logprob: -9.330485343933105
    10. 'duplicate' → logprob: -10.705485343933105

Token 153: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1284874826669693
    2. '
' → logprob: -2.3784875869750977
    3. '    
' → logprob: -4.378487586975098
    4. 'X' → logprob: -4.753487586975098
    5. 'new' → logprob: -6.628487586975098
    6. 'while' → logprob: -7.128487586975098
    7. ' 
' → logprob: -7.253487586975098
    8. 'prev' → logprob: -7.253487586975098
    9. ',' → logprob: -8.003487586975098
    10. ' X' → logprob: -8.128487586975098

Token 154: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.28733256459236145
    2. ' X' → logprob: -1.412332534790039
    3. ' the' → logprob: -5.662332534790039
    4. '   ' → logprob: -6.912332534790039
    5. 'the' → logprob: -6.912332534790039
    6. '[X' → logprob: -8.537332534790039
    7. ' ' → logprob: -8.912332534790039
    8. '[' → logprob: -9.287332534790039
    9. ' a' → logprob: -9.662332534790039
    10. '[]' → logprob: -10.162332534790039

Token 155: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22240562736988068
    2. '
' → logprob: -1.8474056720733643
    3. 'X' → logprob: -4.472405433654785
    4. 'filtered' → logprob: -4.472405433654785
    5. '    
' → logprob: -4.722405433654785
    6. 'new' → logprob: -5.722405433654785
    7. ',' → logprob: -6.472405433654785
    8. 'while' → logprob: -7.347405433654785
    9. ' 
' → logprob: -7.597405433654785
    10. ' =' → logprob: -7.597405433654785

Token 156: ' form' (ID: 1625)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.447834849357605
    2. '[]
' → logprob: -1.572834849357605
    3. '[' → logprob: -1.947834849357605
    4. 'X' → logprob: -2.1978349685668945
    5. '   ' → logprob: -2.4478349685668945
    6. ' []
' → logprob: -2.8228349685668945
    7. ' [' → logprob: -3.3228349685668945
    8. ' []' → logprob: -3.6978349685668945
    9. ' ' → logprob: -4.5728349685668945
    10. ' X' → logprob: -4.5728349685668945

Token 157: ' a' (ID: 261)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -1.6089043617248535
    2. 'a' → logprob: -1.9839043617248535
    3. ' a' → logprob: -2.2339043617248535
    4. 'compressed' → logprob: -2.3589043617248535
    5. 'arr' → logprob: -2.4839043617248535
    6. 'X' → logprob: -2.6089043617248535
    7. 'new' → logprob: -3.1089043617248535
    8. 'Y' → logprob: -3.2339043617248535
    9. 'clean' → logprob: -3.2339043617248535
    10. ' filtered' → logprob: -3.7339043617248535

Token 158: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5973979830741882
    2. 'filtered' → logprob: -1.722398042678833
    3. 'compressed' → logprob: -2.347398042678833
    4. 'unique' → logprob: -2.972398042678833
    5. ' new' → logprob: -3.597398042678833
    6. 'clean' → logprob: -3.847398042678833
    7. 'B' → logprob: -4.097397804260254
    8. 'Y' → logprob: -4.472397804260254
    9. 'X' → logprob: -4.847397804260254
    10. ' filtered' → logprob: -5.347397804260254

Token 159: ' sequence' (ID: 16281)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.23971593379974365
    2. 'sequence' → logprob: -3.364716053009033
    3. ' sequence' → logprob: -3.489716053009033
    4. 'list' → logprob: -3.739716053009033
    5. 'filtered' → logprob: -3.864716053009033
    6. '_list' → logprob: -4.114716053009033
    7. 'new' → logprob: -4.489716053009033
    8. ' list' → logprob: -4.614716053009033
    9. '_colors' → logprob: -4.614716053009033
    10. '_sequence' → logprob: -4.864716053009033

Token 160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23668164014816284
    2. 'filtered' → logprob: -2.6116816997528076
    3. '
' → logprob: -3.8616816997528076
    4. ',' → logprob: -3.8616816997528076
    5. 'new' → logprob: -3.8616816997528076
    6. 'clean' → logprob: -4.2366814613342285
    7. ' filtered' → logprob: -4.2366814613342285
    8. 'X' → logprob: -4.3616814613342285
    9. 'compressed' → logprob: -5.2366814613342285
    10. ' new' → logprob: -5.3616814613342285

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055248960852622986
    2. '
' → logprob: -4.055248737335205
    3. 'X' → logprob: -4.430248737335205
    4. '    
' → logprob: -4.430248737335205
    5. ' X' → logprob: -5.430248737335205
    6. 'filtered' → logprob: -6.180248737335205
    7. ' filtered' → logprob: -6.805248737335205
    8. ',' → logprob: -7.055248737335205
    9. 'new' → logprob: -7.305248737335205
    10. ' new' → logprob: -7.555248737335205

Token 162: ' colors' (ID: 10803)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.1535412073135376
    2. 'new' → logprob: -1.6535412073135376
    3. ' new' → logprob: -2.153541088104248
    4. 'filtered' → logprob: -2.278541088104248
    5. 'X' → logprob: -2.653541088104248
    6. ' Y' → logprob: -2.778541088104248
    7. ' filtered' → logprob: -3.528541088104248
    8. 'clean' → logprob: -3.903541088104248
    9. 'from' → logprob: -4.028541088104248
    10. ' X' → logprob: -4.653541088104248

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38772696256637573
    2. '=' → logprob: -1.1377270221710205
    3. '=[]' → logprob: -7.512726783752441
    4. '_filtered' → logprob: -8.637726783752441
    5. '_unique' → logprob: -10.012726783752441
    6. '_clean' → logprob: -11.012726783752441
    7. '_' → logprob: -11.137726783752441
    8. '=[]
' → logprob: -11.262726783752441
    9. '   ' → logprob: -12.137726783752441
    10. '_processed' → logprob: -12.262726783752441

Token 164: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6845106482505798
    2. '[X' → logprob: -1.5595107078552246
    3. '[]
' → logprob: -1.5595107078552246
    4. '[' → logprob: -3.3095107078552246
    5. ' [' → logprob: -3.6845107078552246
    6. ' []' → logprob: -5.059510707855225
    7. '[x' → logprob: -5.559510707855225
    8. ' []
' → logprob: -6.934510707855225
    9. '[i' → logprob: -7.559510707855225
    10. '[list' → logprob: -7.809510707855225

Token 165: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023851191624999046
    2. '(X' → logprob: -4.14885139465332
    3. '()
' → logprob: -4.89885139465332
    4. '([' → logprob: -8.64885139465332
    5. '(' → logprob: -10.02385139465332
    6. '()

' → logprob: -10.27385139465332
    7. '([]' → logprob: -10.77385139465332
    8. '(x' → logprob: -10.89885139465332
    9. '({' → logprob: -12.14885139465332
    10. '(
' → logprob: -12.27385139465332

Token 166: '      ' (ID: 1699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1691805124282837
    2. '
' → logprob: -1.9191805124282837
    3. '()
' → logprob: -2.044180393218994
    4. '()' → logprob: -2.169180393218994
    5. '   ' → logprob: -2.419180393218994
    6. 'X' → logprob: -3.169180393218994
    7. 'prev' → logprob: -3.544180393218994
    8. 'colors' → logprob: -3.919180393218994
    9. 'current' → logprob: -4.419180393218994
    10. 'for' → logprob: -4.544180393218994

Token 167: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14327464997768402
    2. '()
' → logprob: -2.1432745456695557
    3. 'colors' → logprob: -4.893274784088135
    4. ' =' → logprob: -5.893274784088135
    5. '   ' → logprob: -7.143274784088135
    6. ',' → logprob: -7.268274784088135
    7. 'prev' → logprob: -7.393274784088135
    8. 'X' → logprob: -7.393274784088135
    9. ')' → logprob: -7.518274784088135
    10. '=' → logprob: -8.268274307250977

Token 168: ' To' (ID: 2514)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.8634784817695618
    2. 'prev' → logprob: -0.9884784817695618
    3. 'colors' → logprob: -2.613478422164917
    4. ' colors' → logprob: -3.238478422164917
    5. ' last' → logprob: -3.613478422164917
    6. 'last' → logprob: -4.238478660583496
    7. 'seen' → logprob: -4.363478660583496
    8. ' unique' → logprob: -5.238478660583496
    9. ' previous' → logprob: -5.238478660583496
    10. ' seen' → logprob: -5.238478660583496

Token 169: ' track' (ID: 5290)
  Prédit: ' track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.5651543736457825
    2. 'track' → logprob: -2.1901543140411377
    3. ' keep' → logprob: -2.5651543140411377
    4. ' store' → logprob: -2.6901543140411377
    5. 'store' → logprob: -2.8151543140411377
    6. 'keep' → logprob: -2.9401543140411377
    7. 'colors' → logprob: -3.5651543140411377
    8. ' ' → logprob: -4.815154552459717
    9. 'collect' → logprob: -5.190154552459717
    10. 'add' → logprob: -5.690154552459717

Token 170: ' unique' (ID: 5746)
  Prédit: ' seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -1.2809232473373413
    2. ' the' → logprob: -1.7809232473373413
    3. ' last' → logprob: -1.7809232473373413
    4. ' unique' → logprob: -2.280923366546631
    5. ' previous' → logprob: -2.405923366546631
    6. ' used' → logprob: -3.030923366546631
    7. 'seen' → logprob: -3.030923366546631
    8. ' colors' → logprob: -3.280923366546631
    9. ' prev' → logprob: -4.030923366546631
    10. 'prev' → logprob: -5.155923366546631

Token 171: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.9170528054237366
    2. 'colors' → logprob: -0.9170528054237366
    3. '_colors' → logprob: -1.9170527458190918
    4. ' elements' → logprob: -4.292052745819092
    5. ' ' → logprob: -4.667052745819092
    6. 'color' → logprob: -5.292052745819092
    7. ' color' → logprob: -5.417052745819092
    8. '_color' → logprob: -5.792052745819092
    9. 'tokens' → logprob: -5.792052745819092
    10. ' tokens' → logprob: -5.917052745819092

Token 172: '
' (ID: 198)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -1.0328737497329712
    2. 'prev' → logprob: -2.1578736305236816
    3. '   ' → logprob: -2.5328736305236816
    4. 'unique' → logprob: -3.1578736305236816
    5. ' colors' → logprob: -3.2828736305236816
    6. 'current' → logprob: -3.2828736305236816
    7. ',' → logprob: -3.4078736305236816
    8. ' last' → logprob: -3.5328736305236816
    9. '<|end|>' → logprob: -3.5328736305236816
    10. 'last' → logprob: -3.7828736305236816

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1348063945770264
    2. 'prev' → logprob: -2.2598063945770264
    3. ' unique' → logprob: -2.3848063945770264
    4. 'colors' → logprob: -2.5098063945770264
    5. 'unique' → logprob: -2.5098063945770264
    6. ' colors' → logprob: -3.2598063945770264
    7. ' prev' → logprob: -3.3848063945770264
    8. 'distinct' → logprob: -3.3848063945770264
    9. ' last' → logprob: -3.6348063945770264
    10. '
' → logprob: -3.6348063945770264

Token 174: ' No' (ID: 3004)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.3857231140136719
    2. 'filtered' → logprob: -1.6357231140136719
    3. ' prev' → logprob: -1.7607231140136719
    4. ' filtered' → logprob: -2.135723114013672
    5. 'new' → logprob: -2.385723114013672
    6. ' new' → logprob: -2.635723114013672
    7. ' unique' → logprob: -4.010723114013672
    8. 'unique' → logprob: -4.010723114013672
    9. ' last' → logprob: -4.885723114013672
    10. 'arr' → logprob: -5.010723114013672

Token 175: 'Double' (ID: 10948)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2715449333190918
    2. 'con' → logprob: -2.271544933319092
    3. 'ne' → logprob: -3.271544933319092
    4. '_con' → logprob: -3.396544933319092
    5. 'colors' → logprob: -4.271544933319092
    6. 'de' → logprob: -4.771544933319092
    7. 'duplicates' → logprob: -4.771544933319092
    8. 'c' → logprob: -5.271544933319092
    9. 'r' → logprob: -5.646544933319092
    10. 'w' → logprob: -5.896544933319092

Token 176: ' =' (ID: 314)
  Prédit: 'Colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Colors' → logprob: -1.1790136098861694
    2. 't' → logprob: -1.8040136098861694
    3. 's' → logprob: -2.304013729095459
    4. ' =' → logprob: -2.429013729095459
    5. 'X' → logprob: -2.429013729095459
    6. 'List' → logprob: -2.679013729095459
    7. 'd' → logprob: -3.304013729095459
    8. '=' → logprob: -3.929013729095459
    9. 'colors' → logprob: -3.929013729095459
    10. 'ts' → logprob: -3.929013729095459

Token 177: ' [-' (ID: 20191)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.007378146983683109
    2. '[' → logprob: -5.382378101348877
    3. ' []' → logprob: -6.757378101348877
    4. '[]
' → logprob: -6.882378101348877
    5. '[X' → logprob: -7.757378101348877
    6. ' [' → logprob: -9.507378578186035
    7. '[x' → logprob: -11.257378578186035
    8. '[N' → logprob: -11.257378578186035
    9. '[int' → logprob: -12.132378578186035
    10. '[n' → logprob: -12.257378578186035

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025154929608106613
    2. 'X' → logprob: -6.0025153160095215
    3. ' X' → logprob: -11.75251579284668
    4. 'float' → logprob: -12.00251579284668
    5. 'N' → logprob: -12.37751579284668
    6. 'x' → logprob: -12.50251579284668
    7. 'int' → logprob: -12.62751579284668
    8. '2' → logprob: -13.00251579284668
    9. ' ' → logprob: -13.12751579284668
    10. '999' → logprob: -13.25251579284668

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01607613079249859
    2. ',' → logprob: -4.76607608795166
    3. ' ]' → logprob: -5.26607608795166
    4. ']
' → logprob: -6.26607608795166
    5. ',
' → logprob: -9.51607608795166
    6. '
' → logprob: -10.01607608795166
    7. ')' → logprob: -10.14107608795166
    8. '   ' → logprob: -10.26607608795166
    9. '0' → logprob: -10.51607608795166
    10. '1' → logprob: -10.76607608795166

Token 180: '     ' (ID: 530)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5089491605758667
    2. ']' → logprob: -1.5089491605758667
    3. ' for' → logprob: -2.0089492797851562
    4. '
' → logprob: -3.6339492797851562
    5. ',' → logprob: -4.883949279785156
    6. ' ]' → logprob: -6.383949279785156
    7. '<|end|>' → logprob: -6.633949279785156
    8. '   ' → logprob: -6.633949279785156
    9. ')' → logprob: -6.883949279785156
    10. ' ' → logprob: -7.383949279785156

Token 181: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15896695852279663
    2. 'for' → logprob: -2.6589670181274414
    3. '
' → logprob: -3.4089670181274414
    4. ',' → logprob: -3.4089670181274414
    5. ' for' → logprob: -5.408967018127441
    6. ' ]' → logprob: -6.283967018127441
    7. 'def' → logprob: -6.908967018127441
    8. ']
' → logprob: -6.908967018127441
    9. ',
' → logprob: -7.408967018127441
    10. ')' → logprob: -8.158967018127441

Token 182: ' To' (ID: 2514)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.041421882808208466
    2. '-' → logprob: -4.291421890258789
    3. ' -' → logprob: -4.791421890258789
    4. ' ' → logprob: -5.666421890258789
    5. '[]' → logprob: -5.666421890258789
    6. 'X' → logprob: -5.916421890258789
    7. ']' → logprob: -6.416421890258789
    8. ' X' → logprob: -6.416421890258789
    9. '[-' → logprob: -6.541421890258789
    10. 'None' → logprob: -7.041421890258789

Token 183: ' build' (ID: 3024)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33764755725860596
    2. 'No' → logprob: -1.837647557258606
    3. '-' → logprob: -2.8376474380493164
    4. 'append' → logprob: -3.7126474380493164
    5. '[-' → logprob: -4.087647438049316
    6. ' No' → logprob: -4.837647438049316
    7. '[]' → logprob: -5.087647438049316
    8. 'X' → logprob: -6.212647438049316
    9. ' -' → logprob: -6.212647438049316
    10. ' ' → logprob: -6.587647438049316

Token 184: ' new' (ID: 620)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.548200249671936
    2. ' No' → logprob: -2.0482001304626465
    3. '[' → logprob: -2.2982001304626465
    4. '[]' → logprob: -2.4232001304626465
    5. '[-' → logprob: -3.1732001304626465
    6. ' [' → logprob: -3.9232001304626465
    7. '   ' → logprob: -4.4232001304626465
    8. ' []' → logprob: -4.6732001304626465
    9. ' [-' → logprob: -5.4232001304626465
    10. 'colors' → logprob: -5.6732001304626465

Token 185: ' sequence' (ID: 16281)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6138267517089844
    2. 'No' → logprob: -1.4888267517089844
    3. 'colors' → logprob: -2.3638267517089844
    4. ' No' → logprob: -3.7388267517089844
    5. 'X' → logprob: -3.8638267517089844
    6. '[]' → logprob: -3.9888267517089844
    7. ' colors' → logprob: -4.113826751708984
    8. ' ' → logprob: -4.488826751708984
    9. ' X' → logprob: -4.738826751708984
    10. ' sequence' → logprob: -5.238826751708984

Token 186: ' starting' (ID: 8601)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3902934491634369
    2. '   ' → logprob: -1.5152934789657593
    3. ',' → logprob: -3.7652933597564697
    4. 'for' → logprob: -4.265293598175049
    5. '    
' → logprob: -4.390293598175049
    6. ' for' → logprob: -4.640293598175049
    7. '[' → logprob: -4.890293598175049
    8. '<|end|>' → logprob: -5.015293598175049
    9. 'tokens' → logprob: -5.640293598175049
    10. ')' → logprob: -5.765293598175049

Token 187: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.25012704730033875
    2. 'from' → logprob: -1.7501270771026611
    3. ' with' → logprob: -3.250127077102661
    4. ' from' → logprob: -5.500126838684082
    5. '   ' → logprob: -6.375126838684082
    6. '[-' → logprob: -6.625126838684082
    7. ',' → logprob: -7.125126838684082
    8. '[' → logprob: -8.375126838684082
    9. 'at' → logprob: -8.625126838684082
    10. ' at' → logprob: -8.750126838684082

Token 188: ' sentinel' (ID: 180334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.055636025965213776
    2. '0' → logprob: -3.680635929107666
    3. ' -' → logprob: -3.680635929107666
    4. '[-' → logprob: -6.180635929107666
    5. 'None' → logprob: -6.805635929107666
    6. '[' → logprob: -8.305636405944824
    7. ' ' → logprob: -9.555636405944824
    8. ' None' → logprob: -10.180636405944824
    9. '   ' → logprob: -10.930636405944824
    10. 'a' → logprob: -11.180636405944824

Token 189: '

' (ID: 279)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3188193738460541
    2. ',' → logprob: -1.4438194036483765
    3. ' ]' → logprob: -4.693819522857666
    4. '1' → logprob: -5.068819522857666
    5. '
' → logprob: -5.443819522857666
    6. ']
' → logprob: -5.818819522857666
    7. ')' → logprob: -5.943819522857666
    8. 'tokens' → logprob: -6.443819522857666
    9. ' ,' → logprob: -6.568819522857666
    10. ',
' → logprob: -6.693819522857666

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8108624219894409
    2. ' for' → logprob: -1.935862421989441
    3. '[]' → logprob: -2.1858625411987305
    4. '<|end|>' → logprob: -2.5608625411987305
    5. ',' → logprob: -3.0608625411987305
    6. ')' → logprob: -3.1858625411987305
    7. 'for' → logprob: -3.1858625411987305
    8. ' ' → logprob: -4.0608625411987305
    9. '[' → logprob: -4.0608625411987305
    10. '    
' → logprob: -4.5608625411987305

Token 191: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7048598527908325
    2. 'for' (adapté à ' for') → logprob: -0.7048598527908325
    3. '   ' → logprob: -5.079859733581543
    4. ' ' → logprob: -6.704859733581543
    5. '0' → logprob: -6.954859733581543
    6. 'prev' → logprob: -7.829859733581543
    7. '[' → logprob: -8.079859733581543
    8. '    ' → logprob: -8.204859733581543
    9. '1' → logprob: -8.204859733581543
    10. ' last' → logprob: -8.579859733581543

Token 192: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6870314478874207
    2. ' i' → logprob: -1.4370315074920654
    3. 'x' → logprob: -1.5620315074920654
    4. ' x' → logprob: -3.4370315074920654
    5. 'c' → logprob: -4.937031269073486
    6. 'color' → logprob: -5.562031269073486
    7. ' c' → logprob: -5.812031269073486
    8. ' color' → logprob: -6.062031269073486
    9. ' ' → logprob: -8.062031745910645
    10. '   ' → logprob: -8.812031745910645

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018278591334819794
    2. 'in' → logprob: -4.0182785987854
    3. ' ' → logprob: -9.018278121948242
    4. 'n' → logprob: -13.518278121948242
    5. '	in' → logprob: -13.643278121948242
    6. '  ' → logprob: -14.143278121948242
    7. 'x' → logprob: -14.393278121948242
    8. ' x' → logprob: -14.393278121948242
    9. '_in' → logprob: -14.393278121948242
    10. '   ' → logprob: -14.518278121948242

Token 194: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06200499087572098
    2. ' X' → logprob: -2.812005043029785
    3. ' ' → logprob: -10.812005043029785
    4. ' range' → logprob: -12.437005043029785
    5. '   ' → logprob: -12.437005043029785
    6. '  ' → logprob: -13.187005043029785
    7. 'range' → logprob: -13.312005043029785
    8. '[' → logprob: -13.562005043029785
    9. ')' → logprob: -13.812005043029785
    10. 'x' → logprob: -14.187005043029785

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001242613303475082
    2. ':
' → logprob: -7.126242637634277
    3. ' :' → logprob: -7.751242637634277
    4. '):' → logprob: -12.376242637634277
    5. '   ' → logprob: -13.501242637634277
    6. ' :
' → logprob: -13.751242637634277
    7. '       ' → logprob: -15.126242637634277
    8. '=' → logprob: -15.501242637634277
    9. ':

' → logprob: -16.25124168395996
    10. '：' → logprob: -16.37624168395996

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048425424844026566
    2. '<|end|>' → logprob: -3.9234254360198975
    3. ' ' → logprob: -4.298425197601318
    4. ' if' → logprob: -5.173425197601318
    5. '    ' → logprob: -5.298425197601318
    6. '   ' → logprob: -6.423425197601318
    7. '<|end|>' → logprob: -8.048425674438477
    8. '        
' → logprob: -8.548425674438477
    9. ',' → logprob: -8.673425674438477
    10. ')' → logprob: -8.798425674438477

Token 197: ' colors' (ID: 10803)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31487876176834106
    2. 'if' → logprob: -1.3148787021636963
    3. '       ' → logprob: -6.439878940582275
    4. '   ' → logprob: -11.064878463745117
    5. '	if' → logprob: -13.564878463745117
    6. '    ' → logprob: -13.814878463745117
    7. ' ' → logprob: -14.314878463745117
    8. 'If' → logprob: -15.189878463745117
    9. '```' → logprob: -16.314878463745117
    10. '
' → logprob: -16.689878463745117

Token 198: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.821390688419342
    2. '.add' → logprob: -1.1963906288146973
    3. '!=' → logprob: -1.6963906288146973
    4. 'not' → logprob: -3.6963906288146973
    5. '=' → logprob: -4.071390628814697
    6. ':' → logprob: -4.571390628814697
    7. ' =' → logprob: -5.571390628814697
    8. ' .' → logprob: -5.571390628814697
    9. ' not' → logprob: -5.946390628814697
    10. ' !=' → logprob: -5.946390628814697

Token 199: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00193149340339005
    2. '(' → logprob: -6.251931667327881
    3. ' (' → logprob: -12.876931190490723
    4. 'x' → logprob: -16.25193214416504
    5. '(
' → logprob: -16.37693214416504
    6. '((' → logprob: -16.50193214416504
    7. ' x' → logprob: -18.37693214416504
    8. '(xs' → logprob: -18.37693214416504
    9. '(X' → logprob: -18.62693214416504
    10. '(int' → logprob: -18.62693214416504

Token 200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3500264883041382
    2. ')
' → logprob: -1.2250264883041382
    3. ' )
' → logprob: -7.350026607513428
    4. ' )' → logprob: -7.475026607513428
    5. ' if' → logprob: -8.47502613067627
    6. '       ' → logprob: -9.85002613067627
    7. 'if' → logprob: -10.22502613067627
    8. ')

' → logprob: -10.60002613067627
    9. '   ' → logprob: -10.72502613067627
    10. ')
' → logprob: -10.97502613067627

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008145138621330261
    2. '
' → logprob: -6.133145332336426
    3. ' if' → logprob: -6.258145332336426
    4. '   ' → logprob: -6.383145332336426
    5. '<|end|>' → logprob: -6.633145332336426
    6. '        
' → logprob: -8.383145332336426
    7. ' ' → logprob: -8.758145332336426
    8. '<|end|>' → logprob: -8.883145332336426
    9. ')' → logprob: -9.133145332336426
    10. ',' → logprob: -9.383145332336426

Token 202: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008624386973679066
    2. ' if' → logprob: -4.75862455368042
    3. '       ' → logprob: -12.133624076843262
    4. '   ' → logprob: -12.383624076843262
    5. '```' → logprob: -15.633624076843262
    6. ' ' → logprob: -16.508625030517578
    7. '
' → logprob: -16.883625030517578
    8. '	if' → logprob: -17.133625030517578
    9. 'If' → logprob: -17.258625030517578
    10. '           ' → logprob: -17.383625030517578

Token 203: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0196805689483881
    2. ' No' → logprob: -4.269680500030518
    3. 'x' → logprob: -5.644680500030518
    4. 'No' → logprob: -6.394680500030518
    5. ' ' → logprob: -8.644680976867676
    6. ' len' → logprob: -10.019680976867676
    7. '	x' → logprob: -11.519680976867676
    8. '   ' → logprob: -11.582180976867676
    9. ' not' → logprob: -11.644680976867676
    10. '(No' → logprob: -11.832180976867676

Token 204: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6326478123664856
    2. '!=' → logprob: -0.7576478123664856
    3. ')!=' → logprob: -10.757647514343262
    4. ']!=' → logprob: -11.257647514343262
    5. '()!=' → logprob: -12.757647514343262
    6. ' ' → logprob: -12.882647514343262
    7. '   ' → logprob: -13.257647514343262
    8. ' ' → logprob: -13.632647514343262
    9. '!==' → logprob: -13.757647514343262
    10. '[' → logprob: -13.757647514343262

Token 205: ' No' (ID: 3004)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.004093004856258631
    2. ' No' → logprob: -5.504093170166016
    3. '   ' → logprob: -11.504093170166016
    4. ' ' → logprob: -12.754093170166016
    5. '
' → logprob: -14.754093170166016
    6. '_No' → logprob: -14.879093170166016
    7. '  ' → logprob: -15.754093170166016
    8. 'N' → logprob: -16.004093170166016
    9. 'Nos' → logprob: -16.004093170166016
    10. '       ' → logprob: -16.754093170166016

Token 206: 'Double' (ID: 10948)
  Prédit: 'Double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Double' → logprob: -9.221884101862088e-05
    2. '[-' → logprob: -10.750092506408691
    3. 'Dou' → logprob: -11.500092506408691
    4. ' ' → logprob: -11.750092506408691
    5. 'Do' → logprob: -11.750092506408691
    6. '   ' → logprob: -11.875092506408691
    7. 'No' → logprob: -11.875092506408691
    8. 'D' → logprob: -12.000092506408691
    9. 'ouble' → logprob: -12.125092506408691
    10. '[Double' → logprob: -12.375092506408691

Token 207: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.153795766294934e-06
    2. '   ' → logprob: -12.250005722045898
    3. '-' → logprob: -14.625005722045898
    4. ' [-' → logprob: -15.125005722045898
    5. '       ' → logprob: -15.625005722045898
    6. '[' → logprob: -15.750005722045898
    7. '```' → logprob: -16.2500057220459
    8. '
' → logprob: -16.6250057220459
    9. '[len' → logprob: -17.1250057220459
    10. '[
' → logprob: -17.8750057220459

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001761272142175585
    2. ' ' → logprob: -8.750176429748535
    3. '
' → logprob: -12.312676429748535
    4. '2' → logprob: -12.312676429748535
    5. '   ' → logprob: -13.062676429748535
    6. '```' → logprob: -13.750176429748535
    7. '  ' → logprob: -14.875176429748535
    8. 'x' → logprob: -15.125176429748535
    9. '

' → logprob: -15.375176429748535
    10. '-' → logprob: -15.437676429748535

Token 209: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6358713507652283
    2. '):' → logprob: -0.7608713507652283
    3. '       ' → logprob: -6.885871410369873
    4. ')' → logprob: -6.885871410369873
    5. ':
' → logprob: -7.760871410369873
    6. ':' → logprob: -7.760871410369873
    7. '           ' → logprob: -8.760870933532715
    8. '   ' → logprob: -9.385870933532715
    9. ' ):
' → logprob: -10.510870933532715
    10. ' or' → logprob: -11.135870933532715

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012196095660328865
    2. 'continue' → logprob: -5.012196063995361
    3. ' continue' → logprob: -5.762196063995361
    4. '       ' → logprob: -6.137196063995361
    5. '	continue' → logprob: -9.51219654083252
    6. '	       ' → logprob: -10.38719654083252
    7. '   ' → logprob: -10.88719654083252
    8. '_continue' → logprob: -11.51219654083252
    9. 'contin' → logprob: -12.01219654083252
    10. '		' → logprob: -12.38719654083252

Token 211: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12567761540412903
    2. ' continue' → logprob: -2.6256775856018066
    3. '           ' → logprob: -3.3756775856018066
    4. '       ' → logprob: -4.500677585601807
    5. '	continue' → logprob: -8.500678062438965
    6. '   ' → logprob: -9.125678062438965
    7. '               ' → logprob: -9.625678062438965
    8. '_continue' → logprob: -11.500678062438965
    9. 'contin' → logprob: -11.875678062438965
    10. 'continu' → logprob: -12.125678062438965

Token 212: ' Skip' (ID: 47626)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20535147190093994
    2. ' continue' → logprob: -1.95535147190094
    3. '           ' → logprob: -3.7053513526916504
    4. '       ' → logprob: -3.9553513526916504
    5. '   ' → logprob: -8.330351829528809
    6. '	continue' → logprob: -9.830351829528809
    7. '_continue' → logprob: -10.955351829528809
    8. '               ' → logprob: -11.205351829528809
    9. 'contin' → logprob: -11.330351829528809
    10. '```' → logprob: -11.330351829528809

Token 213: ' consecutive' (ID: 40840)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.42172300815582275
    2. ' continue' → logprob: -1.1717230081558228
    3. '           ' → logprob: -3.546722888946533
    4. '       ' → logprob: -5.296722888946533
    5. '   ' → logprob: -9.296723365783691
    6. '    ' → logprob: -9.921723365783691
    7. '            ' → logprob: -10.421723365783691
    8. '_continue' → logprob: -10.421723365783691
    9. ' continuing' → logprob: -10.796723365783691
    10. 'contin' → logprob: -10.796723365783691

Token 214: ' duplicates' (ID: 91135)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05959954485297203
    2. ' x' → logprob: -3.5595996379852295
    3. ' duplicates' → logprob: -4.30959939956665
    4. 'duplicates' → logprob: -4.43459939956665
    5. 'continue' → logprob: -6.05959939956665
    6. ' continue' → logprob: -7.80959939956665
    7. 'tokens' → logprob: -8.434599876403809
    8. 'double' → logprob: -8.934599876403809
    9. ' tokens' → logprob: -9.309599876403809
    10. ' double' → logprob: -9.434599876403809

Token 215: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01271094474941492
    2. 'continue' → logprob: -4.887711048126221
    3. ' continue' → logprob: -5.762711048126221
    4. '       ' → logprob: -6.262711048126221
    5. '               ' → logprob: -11.012710571289062
    6. '   ' → logprob: -11.262710571289062
    7. '_continue' → logprob: -12.762710571289062
    8. '	continue' → logprob: -13.012710571289062
    9. 'Continue' → logprob: -13.387710571289062
    10. '
' → logprob: -13.387710571289062

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08211226761341095
    2. 'continue' → logprob: -3.0821123123168945
    3. '       ' → logprob: -3.9571123123168945
    4. ' continue' → logprob: -4.3321123123168945
    5. '   ' → logprob: -7.3321123123168945
    6. '               ' → logprob: -10.582112312316895
    7. ' ' → logprob: -11.832112312316895
    8. '	continue' → logprob: -11.832112312316895
    9. '```' → logprob: -11.957112312316895
    10. '		' → logprob: -13.332112312316895

Token 217: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.22217024862766266
    2. ' continue' → logprob: -1.7221702337265015
    3. '           ' → logprob: -3.972170352935791
    4. '       ' → logprob: -6.597170352935791
    5. '   ' → logprob: -8.097169876098633
    6. '	continue' → logprob: -11.222169876098633
    7. '               ' → logprob: -11.222169876098633
    8. 'contin' → logprob: -12.347169876098633
    9. 'continu' → logprob: -12.597169876098633
    10. ' ' → logprob: -13.222169876098633

Token 218: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016330767422914505
    2. 'No' → logprob: -4.516330718994141
    3. '   ' → logprob: -6.016330718994141
    4. 'else' → logprob: -6.641330718994141
    5. ' No' → logprob: -7.641330718994141
    6. '        
' → logprob: -8.26633071899414
    7. '
' → logprob: -8.26633071899414
    8. ' else' → logprob: -8.39133071899414
    9. '           ' → logprob: -9.64133071899414
    10. ')' → logprob: -9.89133071899414

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0166516974568367
    2. 'No' → logprob: -4.266651630401611
    3. ' No' → logprob: -6.891651630401611
    4. '   ' → logprob: -7.266651630401611
    5. 'else' → logprob: -7.766651630401611
    6. ' else' → logprob: -8.39165210723877
    7. '           ' → logprob: -10.39165210723877
    8. '
' → logprob: -10.64165210723877
    9. ')' → logprob: -11.14165210723877
    10. '        
' → logprob: -11.39165210723877

Token 220: ' No' (ID: 3004)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' (adapté à ' No') → logprob: -0.039371829479932785
    2. '   ' → logprob: -3.5393717288970947
    3. ' No' → logprob: -4.789371967315674
    4. '       ' → logprob: -6.914371967315674
    5. 'else' → logprob: -8.539371490478516
    6. ' else' → logprob: -10.039371490478516
    7. '           ' → logprob: -12.039371490478516
    8. '
' → logprob: -12.289371490478516
    9. '  ' → logprob: -12.914371490478516
    10. '     ' → logprob: -13.039371490478516

Token 221: 'Double' (ID: 10948)
  Prédit: 'Double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Double' → logprob: -3.292907877039397e-06
    2. 'D' → logprob: -13.62500286102295
    3. 'Dou' → logprob: -14.00000286102295
    4. 'ouble' → logprob: -14.50000286102295
    5. ' Double' → logprob: -15.25000286102295
    6. '	Double' → logprob: -15.87500286102295
    7. '[Double' → logprob: -16.250003814697266
    8. '.Double' → logprob: -16.500003814697266
    9. '_double' → logprob: -16.500003814697266
    10. 'double' → logprob: -17.000003814697266

Token 222: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.2378600735682994e-05
    2. '.' → logprob: -10.375032424926758
    3. '.app' → logprob: -14.500032424926758
    4. ' .' → logprob: -15.250032424926758
    5. ').' → logprob: -15.875032424926758
    6. '.extend' → logprob: -16.625032424926758
    7. 'append' → logprob: -16.750032424926758
    8. '.Append' → logprob: -16.875032424926758
    9. '_append' → logprob: -17.375032424926758
    10. '.ap' → logprob: -17.500032424926758

Token 223: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00033558503491804004
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -16.625335693359375
    4. ' (' → logprob: -17.250335693359375
    5. 'x' → logprob: -17.500335693359375
    6. '((' → logprob: -20.375335693359375
    7. '```' → logprob: -20.750335693359375
    8. '(token' → logprob: -21.375335693359375
    9. '(int' → logprob: -21.375335693359375
    10. '()' → logprob: -21.500335693359375

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7835754988482222e-05
    2. ')
' → logprob: -11.250018119812012
    3. ' )' → logprob: -12.375018119812012
    4. '   ' → logprob: -15.500018119812012
    5. ')

' → logprob: -16.625017166137695
    6. '<|end|>' → logprob: -16.750017166137695
    7. ')return' → logprob: -17.250017166137695
    8. '))' → logprob: -17.250017166137695
    9. ')}' → logprob: -17.375017166137695
    10. '),' → logprob: -17.625017166137695

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03274623677134514
    2. '    
' → logprob: -3.7827463150024414
    3. '
' → logprob: -5.032746315002441
    4. '#' → logprob: -7.282746315002441
    5. '```' → logprob: -8.032746315002441
    6. 'for' → logprob: -8.282746315002441
    7. '<|end|>' → logprob: -8.282746315002441
    8. '  
' → logprob: -8.532746315002441
    9. 'dp' → logprob: -8.657746315002441
    10. ' 
' → logprob: -8.907746315002441

Token 226: ' del' (ID: 1083)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44736248254776
    2. 'dp' → logprob: -1.3223624229431152
    3. '    
' → logprob: -3.4473624229431152
    4. '
' → logprob: -3.4473624229431152
    5. ' dp' → logprob: -4.322362422943115
    6. '#' → logprob: -5.947362422943115
    7. 'DP' → logprob: -6.072362422943115
    8. 'max' → logprob: -6.822362422943115
    9. ' length' → logprob: -7.072362422943115
    10. 'n' → logprob: -7.197362422943115

Token 227: ' No' (ID: 3004)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.05434229224920273
    2. ' No' → logprob: -3.179342269897461
    3. 'X' → logprob: -4.679342269897461
    4. 'colors' → logprob: -7.054342269897461
    5. ' X' → logprob: -7.679342269897461
    6. ' colors' → logprob: -7.929342269897461
    7. 'N' → logprob: -9.054342269897461
    8. 'x' → logprob: -9.554342269897461
    9. ' ' → logprob: -10.804342269897461
    10. '[' → logprob: -10.804342269897461

Token 228: 'Double' (ID: 10948)
  Prédit: 'Double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Double' → logprob: -2.1054253011243418e-05
    2. 'ouble' → logprob: -10.875020980834961
    3. 'uble' → logprob: -14.250020980834961
    4. 'Dou' → logprob: -14.500020980834961
    5. 'Duplicate' → logprob: -15.250020980834961
    6. 'double' → logprob: -15.500020980834961
    7. 'D' → logprob: -15.625020980834961
    8. ' Double' → logprob: -15.625020980834961
    9. '[Double' → logprob: -15.875020980834961
    10. 'u' → logprob: -17.37502098083496

Token 229: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.021252065896987915
    2. '[' → logprob: -3.896252155303955
    3. '[:-' → logprob: -8.271251678466797
    4. '1' → logprob: -9.021251678466797
    5. '[
' → logprob: -9.146251678466797
    6. '[:]' → logprob: -9.771251678466797
    7. '0' → logprob: -10.146251678466797
    8. '[]' → logprob: -10.396251678466797
    9. ' ' → logprob: -10.771251678466797
    10. '
' → logprob: -11.521251678466797

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017894209595397115
    2. '-' → logprob: -6.376789569854736
    3. ':' → logprob: -10.501789093017578
    4. ' ' → logprob: -10.626789093017578
    5. '[' → logprob: -11.126789093017578
    6. '1' → logprob: -11.751789093017578
    7. '
' → logprob: -13.001789093017578
    8. ']' → logprob: -13.376789093017578
    9. '   ' → logprob: -13.376789093017578
    10. '[-' → logprob: -13.751789093017578

Token 231: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004129218868911266
    2. ']' → logprob: -5.504129409790039
    3. '])' → logprob: -10.379129409790039
    4. ')]' → logprob: -11.254129409790039
    5. ')
' → logprob: -12.754129409790039
    6. ' )' → logprob: -13.254129409790039
    7. '）' → logprob: -14.629129409790039
    8. '   ' → logprob: -14.754129409790039
    9. '#' → logprob: -14.879129409790039
    10. ')#' → logprob: -16.00412940979004

Token 232: '     ' (ID: 530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6595203280448914
    2. '   ' → logprob: -0.7845203280448914
    3. '    
' → logprob: -3.909520387649536
    4. '#' → logprob: -5.784520149230957
    5. ')' → logprob: -7.534520149230957
    6. '

' → logprob: -7.909520149230957
    7. 'def' → logprob: -8.034520149230957
    8. ' 
' → logprob: -8.159520149230957
    9. 'dp' → logprob: -8.159520149230957
    10. '```' → logprob: -8.284520149230957

Token 233: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6384804844856262
    2. '
' → logprob: -0.8884804844856262
    3. '    
' → logprob: -3.0134804248809814
    4. ' 
' → logprob: -5.5134806632995605
    5. '#' (adapté à ' #') → logprob: -6.1384806632995605
    6. '<|end|>' → logprob: -7.0134806632995605
    7. '    ' → logprob: -7.3884806632995605
    8. ')' → logprob: -7.6384806632995605
    9. '  
' → logprob: -7.7634806632995605
    10. ' ' → logprob: -7.8884806632995605

Token 234: ' Remove' (ID: 18141)
  Prédit: 'Remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Remove' → logprob: -0.3353281319141388
    2. '#' → logprob: -1.5853281021118164
    3. ' Remove' → logprob: -2.8353281021118164
    4. ' #' → logprob: -4.335328102111816
    5. 'Pop' → logprob: -5.835328102111816
    6. 'remove' → logprob: -6.210328102111816
    7. ' remove' → logprob: -6.835328102111816
    8. 'Removing' → logprob: -7.210328102111816
    9. 'Continue' → logprob: -7.960328102111816
    10. 'pop' → logprob: -8.835328102111816

Token 235: ' sentinel' (ID: 180334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5047668814659119
    2. 'the' → logprob: -1.1297669410705566
    3. 'sent' → logprob: -3.3797669410705566
    4. ' the' → logprob: -4.129766941070557
    5. 'No' → logprob: -4.504766941070557
    6. ' -' → logprob: -5.504766941070557
    7. '[-' → logprob: -6.004766941070557
    8. 'Sent' → logprob: -7.254766941070557
    9. ' sentinel' → logprob: -7.254766941070557
    10. '#' → logprob: -7.504766941070557

Token 236: ' value' (ID: 1432)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0943126305937767
    2. '   ' → logprob: -2.7193126678466797
    3. '    
' → logprob: -4.84431266784668
    4. 'dp' → logprob: -5.09431266784668
    5. '

' → logprob: -5.46931266784668
    6. '#' → logprob: -6.96931266784668
    7. 'n' → logprob: -7.34431266784668
    8. 'DP' → logprob: -7.46931266784668
    9. 'def' → logprob: -7.71931266784668
    10. 'N' → logprob: -7.71931266784668

Token 237: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7332329154014587
    2. '   ' → logprob: -0.7332329154014587
    3. 'dp' → logprob: -3.9832329750061035
    4. '    
' → logprob: -4.4832329750061035
    5. '#' → logprob: -5.3582329750061035
    6. 'DP' → logprob: -6.8582329750061035
    7. 'n' → logprob: -7.3582329750061035
    8. '

' → logprob: -7.6082329750061035
    9. ' dp' → logprob: -8.108232498168945
    10. 'N' → logprob: -8.608232498168945

Token 238: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6743375658988953
    2. '   ' → logprob: -1.29933762550354
    3. '    
' → logprob: -2.42433762550354
    4. '<|end|>' → logprob: -2.42433762550354
    5. 'def' → logprob: -5.174337387084961
    6. '  
' → logprob: -5.299337387084961
    7. ')' → logprob: -5.549337387084961
    8. '#' → logprob: -5.549337387084961
    9. 'for' → logprob: -5.674337387084961
    10. '

' → logprob: -5.924337387084961

Token 239: ' N' (ID: 478)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.393780916929245
    2. '   ' → logprob: -2.1437809467315674
    3. '#' → logprob: -2.6437809467315674
    4. 'max' → logprob: -3.6437809467315674
    5. 'DP' → logprob: -4.143780708312988
    6. 'M' → logprob: -4.393780708312988
    7. ' dp' → logprob: -4.518780708312988
    8. '
' → logprob: -5.018780708312988
    9. '    
' → logprob: -5.143780708312988
    10. 'from' → logprob: -5.143780708312988

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07248155772686005
    2. '=' → logprob: -3.197481632232666
    3. ' -=' → logprob: -3.572481632232666
    4. '-=' → logprob: -7.697481632232666
    5. ' +=' → logprob: -8.447481155395508
    6. '<|end|>' → logprob: -9.447481155395508
    7. '=len' → logprob: -9.822481155395508
    8. '-' → logprob: -9.822481155395508
    9. ')' → logprob: -10.697481155395508
    10. '+=' → logprob: -10.822481155395508

Token 241: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00043102685594931245
    2. ' len' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. '(len' → logprob: -16.625431060791016
    5. '[len' → logprob: -18.875431060791016
    6. '	len' → logprob: -18.875431060791016
    7. ' ' → logprob: -19.125431060791016
    8. '  ' → logprob: -19.750431060791016
    9. '=len' → logprob: -20.000431060791016
    10. '```' → logprob: -20.000431060791016

Token 242: '(No' (ID: 136998)
  Prédit: '(No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(No' → logprob: -0.0004160145472269505
    2. 'No' → logprob: -8.125415802001953
    3. '(' → logprob: -9.125415802001953
    4. '(N' → logprob: -12.375415802001953
    5. '(Note' → logprob: -12.875415802001953
    6. '(no' → logprob: -13.875415802001953
    7. '```' → logprob: -14.125415802001953
    8. '(Number' → logprob: -14.875415802001953
    9. '(NO' → logprob: -14.875415802001953
    10. '_No' → logprob: -15.000415802001953

Token 243: 'Double' (ID: 10948)
  Prédit: 'Double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Double' → logprob: -3.547789674485102e-05
    2. 'ouble' → logprob: -11.000035285949707
    3. 'No' → logprob: -11.125035285949707
    4. ')' → logprob: -13.125035285949707
    5. 'D' → logprob: -14.000035285949707
    6. 'Dou' → logprob: -14.750035285949707
    7. 'Duplicate' → logprob: -15.125035285949707
    8. ']' → logprob: -16.375036239624023
    9. 'double' → logprob: -16.625036239624023
    10. ' Double' → logprob: -16.875036239624023

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -12.125008583068848
    3. '   ' → logprob: -13.250008583068848
    4. ' )' → logprob: -15.250008583068848
    5. '#' → logprob: -15.375008583068848
    6. ')#' → logprob: -15.875008583068848
    7. '())' → logprob: -16.00000762939453
    8. '<|end|>' → logprob: -16.12500762939453
    9. '()' → logprob: -16.75000762939453
    10. '))' → logprob: -16.87500762939453

Token 245: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27104198932647705
    2. '   ' → logprob: -1.521041989326477
    3. '    
' → logprob: -4.5210418701171875
    4. 'dp' → logprob: -5.3960418701171875
    5. '  
' → logprob: -7.3960418701171875
    6. '+' → logprob: -7.3960418701171875
    7. ')' → logprob: -7.3960418701171875
    8. ' 
' → logprob: -7.7710418701171875
    9. 'DP' → logprob: -8.146041870117188
    10. '#' → logprob: -8.896041870117188

Token 246: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.064445860683918
    2. '   ' → logprob: -2.939445972442627
    3. '    
' → logprob: -5.314445972442627
    4. '+' → logprob: -6.689445972442627
    5. '<|end|>' → logprob: -7.064445972442627
    6. '

' → logprob: -7.814445972442627
    7. ')' → logprob: -8.064445495605469
    8. ' 
' → logprob: -8.189445495605469
    9. '#' (adapté à ' #') → logprob: -8.314445495605469
    10. 'def' → logprob: -8.564445495605469

Token 247: ' Re' (ID: 907)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11827996373176575
    2. ' #' → logprob: -3.1182799339294434
    3. 'Update' → logprob: -3.2432799339294434
    4. 'def' → logprob: -4.868279933929443
    5. ' Update' → logprob: -5.243279933929443
    6. 'N' → logprob: -5.993279933929443
    7. 'Replace' → logprob: -5.993279933929443
    8. 'Rewrite' → logprob: -6.368279933929443
    9. 'Re' → logprob: -6.743279933929443
    10. 'Adjust' → logprob: -6.743279933929443

Token 248: 'assign' (ID: 14297)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.07838378846645355
    2. 'set' → logprob: -2.953383684158325
    3. 'defined' → logprob: -4.328383922576904
    4. 'assign' → logprob: -5.203383922576904
    5. 'define' → logprob: -6.703383922576904
    6. 'def' → logprob: -6.828383922576904
    7. 'cal' → logprob: -7.203383922576904
    8. 'ad' → logprob: -8.078383445739746
    9. 'ass' → logprob: -8.453383445739746
    10. 'duced' → logprob: -8.828383445739746

Token 249: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08813787996768951
    2. '<|end|>' → logprob: -2.7131378650665283
    3. ' N' → logprob: -4.963138103485107
    4. '<|end|>' → logprob: -5.463138103485107
    5. '```' → logprob: -5.838138103485107
    6. '   ' → logprob: -6.838138103485107
    7. 'def' → logprob: -6.963138103485107
    8. '(N' → logprob: -7.463138103485107
    9. '#' → logprob: -8.46313762664795
    10. ' to' → logprob: -8.58813762664795

Token 250: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039324719458818436
    2. '   ' → logprob: -4.039324760437012
    3. '+' → logprob: -4.414324760437012
    4. '<|end|>' → logprob: -6.164324760437012
    5. '#' → logprob: -6.414324760437012
    6. 'dp' → logprob: -6.789324760437012
    7. '    
' → logprob: -6.914324760437012
    8. ')' → logprob: -7.164324760437012
    9. '

' → logprob: -7.414324760437012
    10. '\n' → logprob: -8.664324760437012

Token 251: ' new' (ID: 620)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14877691864967346
    2. 'len' → logprob: -2.5237770080566406
    3. ' N' → logprob: -2.8987770080566406
    4. ' len' → logprob: -6.148777008056641
    5. '   ' → logprob: -7.148777008056641
    6. ' ' → logprob: -11.14877700805664
    7. 'reflect' → logprob: -11.14877700805664
    8. ' reflect' → logprob: -11.39877700805664
    9. '    ' → logprob: -12.27377700805664
    10. ' the' → logprob: -12.27377700805664

Token 252: ' sequence' (ID: 16281)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5749302506446838
    2. 'length' → logprob: -1.199930191040039
    3. ' value' → logprob: -2.574930191040039
    4. 'N' → logprob: -3.574930191040039
    5. 'value' → logprob: -4.449930191040039
    6. ' sequence' → logprob: -4.824930191040039
    7. ' N' → logprob: -5.324930191040039
    8. 'len' → logprob: -5.824930191040039
    9. 'sequence' → logprob: -6.199930191040039
    10. 'line' → logprob: -7.074930191040039

Token 253: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6214414834976196
    2. 'dp' → logprob: -0.9964414834976196
    3. '
' → logprob: -3.49644136428833
    4. '    
' → logprob: -3.74644136428833
    5. 'DP' → logprob: -3.74644136428833
    6. ' dp' → logprob: -4.99644136428833
    7. ' DP' → logprob: -6.49644136428833
    8. '#' → logprob: -6.87144136428833
    9. ',' → logprob: -6.87144136428833
    10. '_dp' → logprob: -6.87144136428833

Token 254: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7174320816993713
    2. 'dp' → logprob: -1.0924320220947266
    3. '
' → logprob: -1.9674320220947266
    4. '    
' → logprob: -4.342432022094727
    5. 'DP' → logprob: -4.592432022094727
    6. ' dp' → logprob: -4.967432022094727
    7. '_dp' → logprob: -6.967432022094727
    8. '#' → logprob: -7.342432022094727
    9. ' DP' → logprob: -7.467432022094727
    10. '  
' → logprob: -7.967432022094727

Token 255: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7736318707466125
    2. '   ' → logprob: -1.2736318111419678
    3. '
' → logprob: -1.6486318111419678
    4. ' dp' → logprob: -3.5236318111419678
    5. 'DP' → logprob: -4.398632049560547
    6. '    
' → logprob: -4.523632049560547
    7. ' DP' → logprob: -5.898632049560547
    8. '#' → logprob: -6.398632049560547
    9. '

' → logprob: -6.523632049560547
    10. ' 
' → logprob: -6.648632049560547

Token 256: ' C' (ID: 363)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05614803731441498
    2. '   ' → logprob: -3.556148052215576
    3. ' dp' → logprob: -4.306148052215576
    4. 'if' → logprob: -5.431148052215576
    5. 'DP' → logprob: -6.056148052215576
    6. ' if' → logprob: -6.306148052215576
    7. '    
' → logprob: -7.181148052215576
    8. '#' → logprob: -7.681148052215576
    9. '
' → logprob: -8.056147575378418
    10. 'f' → logprob: -8.181147575378418

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06638196110725403
    2. '=' → logprob: -2.8163819313049316
    3. 'ount' → logprob: -6.566381931304932
    4. 'OL' → logprob: -7.066381931304932
    5. 'ol' → logprob: -7.191381931304932
    6. 'O' → logprob: -7.816381931304932
    7. 'OUNT' → logprob: -8.06638240814209
    8. '   ' → logprob: -8.31638240814209
    9. '_colors' → logprob: -9.31638240814209
    10. 'olor' → logprob: -9.31638240814209

Token 258: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00030841029365547
    2. 'max' → logprob: -8.2503080368042
    3. ' len' → logprob: -10.2503080368042
    4. '   ' → logprob: -11.8753080368042
    5. 'colors' → logprob: -13.7503080368042
    6. '[len' → logprob: -13.7503080368042
    7. 'min' → logprob: -14.6253080368042
    8. '(len' → logprob: -14.7503080368042
    9. '0' → logprob: -15.1253080368042
    10. 'int' → logprob: -15.7503080368042

Token 259: '(colors' (ID: 131922)
  Prédit: '(colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. 'colors' → logprob: -15.12500286102295
    4. ' (' → logprob: -16.500001907348633
    5. '(chars' → logprob: -16.750001907348633
    6. '(col' → logprob: -17.375001907348633
    7. '(cols' → logprob: -18.000001907348633
    8. '(color' → logprob: -18.000001907348633
    9. ' colors' → logprob: -18.375001907348633
    10. '(columns' → logprob: -18.625001907348633

Token 260: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.909333023941144e-05
    2. ')
' → logprob: -9.750068664550781
    3. '())' → logprob: -12.500068664550781
    4. ')#' → logprob: -13.375068664550781
    5. '<|end|>' → logprob: -13.375068664550781
    6. ' )' → logprob: -13.750068664550781
    7. '   ' → logprob: -14.000068664550781
    8. '()' → logprob: -14.000068664550781
    9. '#' → logprob: -14.500068664550781
    10. '))' → logprob: -16.12506866455078

Token 261: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34248286485671997
    2. '
' → logprob: -1.4674828052520752
    3. '    
' → logprob: -3.717482805252075
    4. 'dp' → logprob: -3.842482805252075
    5. ' dp' → logprob: -5.342483043670654
    6. '#' → logprob: -5.967483043670654
    7. 'DP' → logprob: -6.217483043670654
    8. ' 
' → logprob: -7.217483043670654
    9. ' DP' → logprob: -7.217483043670654
    10. ')' → logprob: -7.967483043670654

Token 262: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.516588568687439
    2. '   ' → logprob: -1.016588568687439
    3. '#' (adapté à ' #') → logprob: -4.0165886878967285
    4. '+' → logprob: -4.7665886878967285
    5. '    
' → logprob: -5.1415886878967285
    6. ')' → logprob: -6.2665886878967285
    7. '<|end|>' → logprob: -6.5165886878967285
    8. 'def' → logprob: -6.5165886878967285
    9. ' +' → logprob: -6.7665886878967285
    10. ' #' → logprob: -6.8915886878967285

Token 263: ' Number' (ID: 9184)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0795038938522339
    2. 'Number' → logprob: -1.5795038938522339
    3. ' Number' → logprob: -1.7045038938522339
    4. ' number' → logprob: -2.5795040130615234
    5. 'C' → logprob: -2.7045040130615234
    6. ' C' → logprob: -3.0795040130615234
    7. ' #' → logprob: -3.7045040130615234
    8. 'Count' → logprob: -3.7045040130615234
    9. 'print' → logprob: -5.204504013061523
    10. 'Calculate' → logprob: -5.204504013061523

Token 264: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.26268449425697327
    2. '_of' → logprob: -1.8876844644546509
    3. ' of' → logprob: -2.6376845836639404
    4. '=' → logprob: -5.887684345245361
    5. '_colors' → logprob: -5.887684345245361
    6. 'Of' → logprob: -7.012684345245361
    7. ' =' → logprob: -7.012684345245361
    8. '_' → logprob: -8.63768482208252
    9. '_tokens' → logprob: -8.76268482208252
    10. 'colors' → logprob: -8.76268482208252

Token 265: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.4751814007759094
    2. ' unique' → logprob: -0.9751814007759094
    3. 'colors' → logprob: -7.975181579589844
    4. ' distinct' → logprob: -8.225181579589844
    5. ' colors' → logprob: -8.600181579589844
    6. 'distinct' → logprob: -8.600181579589844
    7. '(unique' → logprob: -9.600181579589844
    8. 'different' → logprob: -10.475181579589844
    9. ' different' → logprob: -11.850181579589844
    10. '_unique' → logprob: -12.350181579589844

Token 266: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.497024804353714
    2. 'colors' → logprob: -1.1220247745513916
    3. '_colors' → logprob: -2.8720247745513916
    4. '(colors' → logprob: -5.247025012969971
    5. ')' → logprob: -6.747025012969971
    6. '<|end|>' → logprob: -6.747025012969971
    7. '(' → logprob: -7.747025012969971
    8. ' unique' → logprob: -8.122024536132812
    9. ' elements' → logprob: -8.997024536132812
    10. 's' → logprob: -9.247024536132812

Token 267: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7066791653633118
    2. '   ' → logprob: -1.081679105758667
    3. '
' → logprob: -2.581679105758667
    4. 'DP' → logprob: -3.206679105758667
    5. '    
' → logprob: -4.206679344177246
    6. ' dp' → logprob: -4.456679344177246
    7. '#' → logprob: -4.706679344177246
    8. ' DP' → logprob: -5.081679344177246
    9. ' 
' → logprob: -6.831679344177246
    10. 'from' → logprob: -6.956679344177246

Token 268: 'not' (ID: 2878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005523175350390375
    2. ' )' → logprob: -8.0005521774292
    3. ')
' → logprob: -9.1255521774292
    4. '   ' → logprob: -10.2505521774292
    5. '-' → logprob: -11.1255521774292
    6. 'colors' → logprob: -11.2505521774292
    7. '#' → logprob: -12.0005521774292
    8. '))' → logprob: -12.2505521774292
    9. ').' → logprob: -12.6255521774292
    10. ' -' → logprob: -12.7505521774292

Token 269: ' used' (ID: 2061)
  Prédit: 'including'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'including' → logprob: -0.9942601323127747
    2. 'used' → logprob: -1.2442600727081299
    3. ')' → logprob: -2.11926007270813
    4. 'count' → logprob: -2.49426007270813
    5. '=' → logprob: -2.74426007270813
    6. ' including' → logprob: -4.119260311126709
    7. ' used' → logprob: -4.244260311126709
    8. 'necessarily' → logprob: -4.869260311126709
    9. '+' → logprob: -5.119260311126709
    10. 'in' → logprob: -5.744260311126709

Token 270: ' further' (ID: 6544)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014656837447546422
    2. ')
' → logprob: -9.125146865844727
    3. '   ' → logprob: -11.500146865844727
    4. ' )' → logprob: -11.500146865844727
    5. '#' → logprob: -12.000146865844727
    6. '<|end|>' → logprob: -12.375146865844727
    7. 'def' → logprob: -13.500146865844727
    8. '()' → logprob: -13.750146865844727
    9. ')

' → logprob: -13.750146865844727
    10. '())' → logprob: -13.875146865844727

Token 271: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031389365904033184
    2. ')
' → logprob: -8.250313758850098
    3. '   ' → logprob: -10.125313758850098
    4. ')

' → logprob: -12.000313758850098
    5. '#' → logprob: -13.250313758850098
    6. ' )' → logprob: -13.500313758850098
    7. '<|end|>' → logprob: -14.375313758850098
    8. '")' → logprob: -15.125313758850098
    9. ')
' → logprob: -15.250313758850098
    10. 'def' → logprob: -15.500313758850098

Token 272: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.8823407292366028
    2. 'code' → logprob: -1.257340669631958
    3. 'the' → logprob: -1.382340669631958
    4. ')' → logprob: -4.007340908050537
    5. ' this' → logprob: -4.132340908050537
    6. ' code' → logprob: -4.507340908050537
    7. ' the' → logprob: -5.882340908050537
    8. '#' → logprob: -7.007340908050537
    9. '```' → logprob: -7.382340908050537
    10. ')
' → logprob: -7.882340908050537

Token 273: ' code' (ID: 3490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005688918754458427
    2. ' code' → logprob: -5.6306891441345215
    3. ')
' → logprob: -7.1306891441345215
    4. 'code' → logprob: -7.5056891441345215
    5. 'def' → logprob: -8.505688667297363
    6. '#' → logprob: -9.255688667297363
    7. ' )' → logprob: -9.255688667297363
    8. '```' → logprob: -9.505688667297363
    9. ')#' → logprob: -9.630688667297363
    10. ')

' → logprob: -10.380688667297363

Token 274: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047047226689755917
    2. ')
' → logprob: -7.8754706382751465
    3. '   ' → logprob: -9.500470161437988
    4. ')

' → logprob: -11.750470161437988
    5. '#' → logprob: -12.375470161437988
    6. '```' → logprob: -13.875470161437988
    7. ' )' → logprob: -14.125470161437988
    8. 'def' → logprob: -15.375470161437988
    9. ')#' → logprob: -15.500470161437988
    10. '")' → logprob: -15.750470161437988

Token 275: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07569696754217148
    2. '   ' → logprob: -3.5756969451904297
    3. 'DP' → logprob: -3.5756969451904297
    4. '#' → logprob: -5.57569694519043
    5. '
' → logprob: -5.82569694519043
    6. 'from' → logprob: -5.95069694519043
    7. 'if' → logprob: -6.95069694519043
    8. 'ans' → logprob: -7.45069694519043
    9. '    
' → logprob: -7.45069694519043
    10. 'f' → logprob: -7.57569694519043

Token 276: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04712063446640968
    2. '   ' → logprob: -3.9221205711364746
    3. 'DP' → logprob: -4.047120571136475
    4. 'from' → logprob: -5.797120571136475
    5. '#' (adapté à ' #') → logprob: -6.172120571136475
    6. 'import' → logprob: -7.297120571136475
    7. 'ans' → logprob: -7.547120571136475
    8. '
' → logprob: -7.922120571136475
    9. 'if' → logprob: -8.047121047973633
    10. '    
' → logprob: -9.172121047973633

Token 277: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03661594167351723
    2. 'from' → logprob: -4.28661584854126
    3. '#' → logprob: -5.16161584854126
    4. 'DP' → logprob: -5.41161584854126
    5. 'import' → logprob: -5.53661584854126
    6. 'ans' → logprob: -6.78661584854126
    7. 'if' → logprob: -7.16161584854126
    8. 'def' → logprob: -7.28661584854126
    9. 'memo' → logprob: -7.53661584854126
    10. 'left' → logprob: -7.78661584854126

Token 278: 'Idx' (ID: 16248)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4235421121120453
    2. 'i' → logprob: -1.2985421419143677
    3. ' _' → logprob: -3.798542022705078
    4. ' dp' → logprob: -4.048542022705078
    5. 'dp' → logprob: -4.798542022705078
    6. ' l' → logprob: -5.048542022705078
    7. '_' → logprob: -5.673542022705078
    8. '_dp' → logprob: -5.923542022705078
    9. 'l' → logprob: -6.173542022705078
    10. '_i' → logprob: -6.298542022705078

Token 279: 'Last' (ID: 6949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05217306688427925
    2. 's' → logprob: -3.177173137664795
    3. 'es' → logprob: -5.552173137664795
    4. '=' → logprob: -6.302173137664795
    5. '_' → logprob: -7.927173137664795
    6. '_to' → logprob: -7.927173137664795
    7. '2' → logprob: -8.552172660827637
    8. 'for' → logprob: -8.552172660827637
    9. ',' → logprob: -8.677172660827637
    10. '_s' → logprob: -8.802172660827637

Token 280: 'Num' (ID: 5702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01107045728713274
    2. '=' → logprob: -4.636070251464844
    3. 's' → logprob: -7.386070251464844
    4. ',' → logprob: -8.761070251464844
    5. 'es' → logprob: -9.261070251464844
    6. ' ' → logprob: -10.011070251464844
    7. 'of' → logprob: -10.136070251464844
    8. 'Of' → logprob: -10.136070251464844
    9. 'For' → logprob: -10.261070251464844
    10. 'Last' → logprob: -10.511070251464844

Token 281: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1478586047887802
    2. '=' → logprob: -2.0228586196899414
    3. 's' → logprob: -5.522858619689941
    4. 'Last' → logprob: -8.522858619689941
    5. '_last' → logprob: -9.022858619689941
    6. 'For' → logprob: -9.147858619689941
    7. '=[' → logprob: -9.522858619689941
    8. '_of' → logprob: -9.522858619689941
    9. '_for' → logprob: -9.522858619689941
    10. '_idx' → logprob: -9.772858619689941

Token 282: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06256716698408127
    2. 'x' → logprob: -3.1875672340393066
    3. ' ]' → logprob: -4.937567234039307
    4. 's' → logprob: -5.187567234039307
    5. ']=' → logprob: -6.812567234039307
    6. ' =' → logprob: -6.812567234039307
    7. 'n' → logprob: -6.812567234039307
    8. '=' → logprob: -7.437567234039307
    9. ':]' → logprob: -7.687567234039307
    10. ']:' → logprob: -7.937567234039307

Token 283: ' for' (ID: 395)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.26279494166374207
    2. '-' → logprob: -2.0127949714660645
    3. ' [-' → logprob: -3.3877949714660645
    4. ' -' → logprob: -4.1377949714660645
    5. '[' → logprob: -4.1377949714660645
    6. ' stores' → logprob: -5.3877949714660645
    7. ' [' → logprob: -5.3877949714660645
    8. '0' → logprob: -5.6377949714660645
    9. '[i' → logprob: -5.6377949714660645
    10. '[]' → logprob: -5.7627949714660645

Token 284: ' the' (ID: 290)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.2161476612091064
    2. 'each' → logprob: -1.5911476612091064
    3. 'i' → logprob: -2.0911476612091064
    4. ' i' → logprob: -2.5911476612091064
    5. 'x' → logprob: -2.5911476612091064
    6. 'No' → logprob: -2.7161476612091064
    7. 'idx' → logprob: -3.8411476612091064
    8. ' No' → logprob: -3.8411476612091064
    9. ' j' → logprob: -4.091147422790527
    10. 'j' → logprob: -4.216147422790527

Token 285: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29774418473243713
    2. ' i' → logprob: -1.7977441549301147
    3. 'x' → logprob: -2.9227442741394043
    4. ' in' → logprob: -4.922744274139404
    5. 'idx' → logprob: -5.172744274139404
    6. 'range' → logprob: -5.922744274139404
    7. ' x' → logprob: -6.422744274139404
    8. ' range' → logprob: -6.422744274139404
    9. 'index' → logprob: -6.547744274139404
    10. ' ' → logprob: -6.547744274139404

Token 286: '-th' (ID: 14928)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5255472660064697
    2. 'nd' → logprob: -1.4005472660064697
    3. ']' → logprob: -2.6505472660064697
    4. '-th' → logprob: -3.9005472660064697
    5. ' =' → logprob: -4.275547027587891
    6. 't' → logprob: -4.650547027587891
    7. 'nt' → logprob: -4.900547027587891
    8. '+' → logprob: -5.025547027587891
    9. 'dx' → logprob: -5.150547027587891
    10. 'f' → logprob: -5.150547027587891

Token 287: ' item' (ID: 2169)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.36147987842559814
    2. ' color' → logprob: -2.4864797592163086
    3. ' element' → logprob: -3.1114797592163086
    4. 'element' → logprob: -3.1114797592163086
    5. ' occurrence' → logprob: -3.4864797592163086
    6. 'index' → logprob: -3.7364797592163086
    7. 'position' → logprob: -3.9864797592163086
    8. 'value' → logprob: -4.486479759216309
    9. 'number' → logprob: -4.611479759216309
    10. ' number' → logprob: -5.236479759216309

Token 288: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12530706822872162
    2. '=' → logprob: -2.250307083129883
    3. ' in' → logprob: -6.000307083129883
    4. ':' → logprob: -7.000307083129883
    5. 's' → logprob: -7.000307083129883
    6. 'in' → logprob: -7.125307083129883
    7. 'for' → logprob: -7.125307083129883
    8. '   ' → logprob: -7.250307083129883
    9. ' is' → logprob: -7.250307083129883
    10. 'For' → logprob: -7.500307083129883

Token 289: ' No' (ID: 3004)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.03930214047431946
    2. 'range' → logprob: -3.414302110671997
    3. ' range' → logprob: -5.539302349090576
    4. 'the' → logprob: -7.164302349090576
    5. ' No' → logprob: -7.414302349090576
    6. 'X' → logprob: -9.539301872253418
    7. '`' → logprob: -10.039301872253418
    8. '[' → logprob: -10.539301872253418
    9. '   ' → logprob: -10.789301872253418
    10. ' the' → logprob: -10.914301872253418

Token 290: 'Double' (ID: 10948)
  Prédit: 'Double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Double' → logprob: -0.014032336883246899
    2. 'No' → logprob: -4.639032363891602
    3. 'Last' → logprob: -6.514032363891602
    4. 'x' → logprob: -7.264032363891602
    5. ']' → logprob: -8.389032363891602
    6. 'ouble' → logprob: -8.514032363891602
    7. ')' → logprob: -8.889032363891602
    8. 'For' → logprob: -8.889032363891602
    9. 'Duplicate' → logprob: -8.889032363891602
    10. 'double' → logprob: -9.139032363891602

Token 291: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.556938648223877
    2. '=' → logprob: -1.681938648223877
    3. ' is' → logprob: -3.181938648223877
    4. ' stores' → logprob: -3.306938648223877
    5. '[i' → logprob: -3.681938648223877
    6. ',' → logprob: -4.181938648223877
    7. '_idx' → logprob: -4.181938648223877
    8. 'is' → logprob: -4.431938648223877
    9. '#' → logprob: -5.056938648223877
    10. '_index' → logprob: -5.181938648223877

Token 292: ' the' (ID: 290)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.1148042678833008
    2. ' store' → logprob: -1.6148042678833008
    3. ' stores' → logprob: -1.7398042678833008
    4. 'the' → logprob: -2.114804267883301
    5. 'stores' → logprob: -3.239804267883301
    6. 'initialize' → logprob: -3.614804267883301
    7. ' the' → logprob: -3.739804267883301
    8. 'find' → logprob: -3.989804267883301
    9. '0' → logprob: -4.614804267883301
    10. ' find' → logprob: -4.739804267883301

Token 293: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.38512977957725525
    2. 'last' → logprob: -1.8851298093795776
    3. ' index' → logprob: -2.260129690170288
    4. ' last' → logprob: -2.885129690170288
    5. 'previous' → logprob: -6.010129928588867
    6. 'position' → logprob: -6.135129928588867
    7. ' position' → logprob: -7.510129928588867
    8. 'next' → logprob: -8.010129928588867
    9. 'latest' → logprob: -8.135129928588867
    10. '#' → logprob: -8.385129928588867

Token 294: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2618180215358734
    2. 'of' → logprob: -1.5118180513381958
    3. ' where' → logprob: -5.261817932128906
    4. ' =' → logprob: -7.136817932128906
    5. '_of' → logprob: -7.136817932128906
    6. '=' → logprob: -7.761817932128906
    7. 'where' → logprob: -7.761817932128906
    8. ' ' → logprob: -8.011817932128906
    9. '   ' → logprob: -8.011817932128906
    10. 's' → logprob: -8.261817932128906

Token 295: ' its' (ID: 1617)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.039328958839178085
    2. 'last' → logprob: -3.6643290519714355
    3. ' the' → logprob: -4.9143290519714355
    4. 'No' → logprob: -6.2893290519714355
    5. 'its' → logprob: -6.2893290519714355
    6. ' its' → logprob: -7.4143290519714355
    7. ' last' → logprob: -8.039328575134277
    8. 'Last' → logprob: -8.289328575134277
    9. 'previous' → logprob: -8.789328575134277
    10. 'i' → logprob: -9.289328575134277

Token 296: ' previous' (ID: 5880)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.04575919359922409
    2. ' last' → logprob: -3.4207592010498047
    3. 'previous' → logprob: -4.545759201049805
    4. 'first' → logprob: -7.545759201049805
    5. 'most' → logprob: -7.795759201049805
    6. 'latest' → logprob: -8.420759201049805
    7. ' previous' → logprob: -9.170759201049805
    8. 'Last' → logprob: -10.170759201049805
    9. ' most' → logprob: -11.045759201049805
    10. 'For' → logprob: -11.170759201049805

Token 297: ' appearance' (ID: 16814)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.4851662218570709
    2. ' occurrence' → logprob: -1.4851661920547485
    3. 'appearance' → logprob: -2.860166311264038
    4. 'occur' → logprob: -3.235166311264038
    5. '_occ' → logprob: -3.860166311264038
    6. 'Occ' → logprob: -4.110166072845459
    7. 'Occurrence' → logprob: -4.610166072845459
    8. 'O' → logprob: -4.985166072845459
    9. ' appearance' → logprob: -6.985166072845459
    10. 'index' → logprob: -6.985166072845459

Token 298: ' (-' (ID: 21382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20026534795761108
    2. '=' → logprob: -3.200265407562256
    3. 'of' → logprob: -3.325265407562256
    4. 's' → logprob: -4.075265407562256
    5. 'Of' → logprob: -4.075265407562256
    6. '   ' → logprob: -4.575265407562256
    7. ' of' → logprob: -4.700265407562256
    8. 'in' → logprob: -5.200265407562256
    9. '_of' → logprob: -5.200265407562256
    10. '[' → logprob: -5.200265407562256

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. '-' → logprob: -12.625011444091797
    3. '2' → logprob: -12.875011444091797
    4. ' ' → logprob: -12.875011444091797
    5. '   ' → logprob: -13.875011444091797
    6. '```' → logprob: -14.000011444091797
    7. ' -' → logprob: -14.875011444091797
    8. ')' → logprob: -15.500011444091797
    9. '`' → logprob: -15.750011444091797
    10. '=' → logprob: -15.750011444091797

Token 300: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0513630285859108
    2. ',' → logprob: -4.301362991333008
    3. ' for' → logprob: -4.551362991333008
    4. ']' → logprob: -4.801362991333008
    5. '   ' → logprob: -5.551362991333008
    6. ' )' → logprob: -5.676362991333008
    7. '+' → logprob: -6.176362991333008
    8. '])' → logprob: -6.426362991333008
    9. 'for' → logprob: -6.551362991333008
    10. ' if' → logprob: -7.051362991333008

Token 301: ' first' (ID: 1577)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.028443224728107452
    2. 'No' → logprob: -4.153443336486816
    3. 'not' → logprob: -5.028443336486816
    4. ' -' → logprob: -6.528443336486816
    5. 'None' → logprob: -6.653443336486816
    6. '-not' → logprob: -6.653443336486816
    7. '-No' → logprob: -7.778443336486816
    8. '-no' → logprob: -8.028443336486816
    9. 'Not' → logprob: -8.153443336486816
    10. '```' → logprob: -9.278443336486816

Token 302: ' occurrence' (ID: 55807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07539443671703339
    2. '_occ' → logprob: -3.57539439201355
    3. ' occurrence' → logprob: -4.325394630432129
    4. '_' → logprob: -5.325394630432129
    5. 'appearance' → logprob: -5.325394630432129
    6. ')
' → logprob: -5.575394630432129
    7. 'Occurrence' → logprob: -5.825394630432129
    8. 'occ' → logprob: -5.950394630432129
    9. ')_' → logprob: -6.200394630432129
    10. ' appearance' → logprob: -6.200394630432129

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012257329188287258
    2. '   ' → logprob: -5.637257099151611
    3. '[i' → logprob: -5.887257099151611
    4. ')
' → logprob: -6.137257099151611
    5. '])' → logprob: -6.637257099151611
    6. ']' → logprob: -6.887257099151611
    7. '`)' → logprob: -8.01225757598877
    8. ' )' → logprob: -8.38725757598877
    9. ',' → logprob: -9.01225757598877
    10. 'def' → logprob: -9.63725757598877

Token 304: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6779908537864685
    2. 'For' → logprob: -1.0529909133911133
    3. '   ' → logprob: -2.1779909133911133
    4. ' For' → logprob: -4.052990913391113
    5. '
' → logprob: -5.302990913391113
    6. '=' → logprob: -6.052990913391113
    7. '[-' → logprob: -7.427990913391113
    8. ' for' → logprob: -7.552990913391113
    9. ',' → logprob: -7.552990913391113
    10. 'Prev' → logprob: -7.802990913391113

Token 305: ' For' (ID: 2214)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'For' (adapté à ' For') → logprob: -0.016271304339170456
    2. ' For' → logprob: -4.141271114349365
    3. 'for' → logprob: -9.016271591186523
    4. '   ' → logprob: -10.141271591186523
    5. ' for' → logprob: -10.141271591186523
    6. 'From' → logprob: -11.141271591186523
    7. '```' → logprob: -12.766271591186523
    8. '_for' → logprob: -13.016271591186523
    9. 'from' → logprob: -13.141271591186523
    10. '#' → logprob: -13.391271591186523

Token 306: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -2.2603901015827432e-05
    2. 'idx' → logprob: -11.000022888183594
    3. 'd' → logprob: -13.000022888183594
    4. 'I' → logprob: -14.125022888183594
    5. 'Ix' → logprob: -14.125022888183594
    6. 'x' → logprob: -14.375022888183594
    7. 'For' → logprob: -14.625022888183594
    8. 'Index' → logprob: -15.500022888183594
    9. 'Last' → logprob: -15.625022888183594
    10. 'dx' → logprob: -15.875022888183594

Token 307: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -9.014684110297821e-06
    2. '_Last' → logprob: -12.750008583068848
    3. 'last' → logprob: -13.125008583068848
    4. '	Last' → logprob: -13.375008583068848
    5. 'For' → logprob: -13.750008583068848
    6. ' =' → logprob: -14.500008583068848
    7. '_last' → logprob: -14.875008583068848
    8. '=' → logprob: -15.875008583068848
    9. 'Lastname' → logprob: -15.875008583068848
    10. 'Las' → logprob: -16.125009536743164

Token 308: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.00022713904036208987
    2. 'Last' → logprob: -8.500226974487305
    3. 'Nums' → logprob: -12.000226974487305
    4. 'num' → logprob: -12.125226974487305
    5. 'Appear' → logprob: -13.000226974487305
    6. ' =' → logprob: -13.000226974487305
    7. 'Number' → logprob: -13.375226974487305
    8. 'For' → logprob: -14.250226974487305
    9. '=' → logprob: -14.250226974487305
    10. 'Pos' → logprob: -14.500226974487305

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6334950923919678
    2. '=' → logprob: -0.7584950923919678
    3. '=[' → logprob: -7.258495330810547
    4. '=[]' → logprob: -9.258495330810547
    5. ' =[' → logprob: -9.883495330810547
    6. '[' → logprob: -10.758495330810547
    7. '=[[' → logprob: -12.258495330810547
    8. '   ' → logprob: -12.633495330810547
    9. ')' → logprob: -12.883495330810547
    10. ',' → logprob: -13.008495330810547

Token 310: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0006262990063987672
    2. '{}' → logprob: -8.250626564025879
    3. ' [-' → logprob: -8.375626564025879
    4. '{-' → logprob: -9.875626564025879
    5. '[]' → logprob: -10.500626564025879
    6. '   ' → logprob: -10.750626564025879
    7. '{' → logprob: -10.875626564025879
    8. '[' → logprob: -11.250626564025879
    9. 'dict' → logprob: -13.875626564025879
    10. ' ' → logprob: -15.000626564025879

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. '2' → logprob: -13.000006675720215
    3. '-' → logprob: -13.125006675720215
    4. ' ' → logprob: -13.875006675720215
    5. '   ' → logprob: -15.187506675720215
    6. ' -' → logprob: -15.812506675720215
    7. '```' → logprob: -15.875006675720215
    8. '`' → logprob: -16.8125057220459
    9. '100' → logprob: -17.0000057220459
    10. '10' → logprob: -17.1250057220459

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021810729522258043
    2. ']*' → logprob: -7.002181053161621
    3. ' ]' → logprob: -7.127181053161621
    4. ' for' → logprob: -8.252181053161621
    5. 'for' → logprob: -9.752181053161621
    6. ')' → logprob: -10.377181053161621
    7. ',' → logprob: -10.377181053161621
    8. ']+' → logprob: -10.502181053161621
    9. ']*(' → logprob: -10.627181053161621
    10. '   ' → logprob: -10.752181053161621

Token 313: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48614078760147095
    2. 'for' → logprob: -2.111140727996826
    3. '<|end|>' → logprob: -2.361140727996826
    4. ',' → logprob: -3.236140727996826
    5. ' +' → logprob: -3.486140727996826
    6. '[' → logprob: -3.986140727996826
    7. ' *' → logprob: -4.236140727996826
    8. ')' → logprob: -4.361140727996826
    9. '
' → logprob: -4.611140727996826
    10. '+' → logprob: -4.861140727996826

Token 314: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005061076022684574
    2. '(N' → logprob: -5.630061149597168
    3. '(' → logprob: -6.630061149597168
    4. 'len' → logprob: -10.005061149597168
    5. '   ' → logprob: -10.505061149597168
    6. '100' → logprob: -10.630061149597168
    7. '(len' → logprob: -11.130061149597168
    8. ' N' → logprob: -11.505061149597168
    9. ' (' → logprob: -12.380061149597168
    10. 'max' → logprob: -13.255061149597168

Token 315: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2394327074289322
    2. '   ' → logprob: -1.989432692527771
    3. 'for' → logprob: -2.9894328117370605
    4. ' for' → logprob: -4.8644328117370605
    5. '    
' → logprob: -5.6144328117370605
    6. 'For' → logprob: -5.7394328117370605
    7. ')' → logprob: -5.8644328117370605
    8. '  
' → logprob: -6.2394328117370605
    9. 'last' → logprob: -7.1144328117370605
    10. 'prev' → logprob: -7.1144328117370605

Token 316: '   ' (ID: 271)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.9101974964141846
    2. '   ' → logprob: -1.2851974964141846
    3. 'idx' → logprob: -1.6601974964141846
    4. 'pos' → logprob: -2.6601974964141846
    5. 'prev' → logprob: -3.6601974964141846
    6. 'index' → logprob: -4.5351972579956055
    7. 'color' → logprob: -4.5351972579956055
    8. 'position' → logprob: -5.9101972579956055
    9. 'indices' → logprob: -6.0351972579956055
    10. 'Last' → logprob: -6.1601972579956055

Token 317: ' #' (ID: 1069)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.31479889154434204
    2. 'pos' → logprob: -1.8147988319396973
    3. 'idx' → logprob: -2.8147988319396973
    4. 'Last' → logprob: -3.3147988319396973
    5. 'index' → logprob: -5.314798831939697
    6. 'Pos' → logprob: -6.439798831939697
    7. 'prev' → logprob: -7.064798831939697
    8. 'Index' → logprob: -7.064798831939697
    9. 'Idx' → logprob: -7.314798831939697
    10. 'color' → logprob: -7.439798831939697

Token 318: ' On' (ID: 2160)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1538861095905304
    2. 'Last' → logprob: -2.653886079788208
    3. 'pos' → logprob: -3.278886079788208
    4. 'idx' → logprob: -3.778886079788208
    5. 'index' → logprob: -6.153886318206787
    6. 'prev' → logprob: -6.528886318206787
    7. 'color' → logprob: -6.653886318206787
    8. 'Pos' → logprob: -6.778886318206787
    9. 'Idx' → logprob: -6.903886318206787
    10. 'Index' → logprob: -7.278886318206787

Token 319: 'etime' (ID: 7359)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3121907711029053
    2. 'Last' → logprob: -2.1871907711029053
    3. 'Pos' → logprob: -2.5621907711029053
    4. 'Color' → logprob: -4.437191009521484
    5. 'For' → logprob: -4.562191009521484
    6. 'Stack' → logprob: -4.812191009521484
    7. 'Going' → logprob: -4.812191009521484
    8. 'Hold' → logprob: -5.312191009521484
    9. 'Appear' → logprob: -5.312191009521484
    10. 'Idx' → logprob: -5.437191009521484

Token 320: '_colors' (ID: 79137)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29671066999435425
    2. 'Last' → logprob: -2.421710729598999
    3. '=' → logprob: -3.046710729598999
    4. 'last' → logprob: -4.04671049118042
    5. 'seen' → logprob: -4.17171049118042
    6. 'Seen' → logprob: -4.42171049118042
    7. 'pos' → logprob: -4.92171049118042
    8. '_last' → logprob: -4.92171049118042
    9. 'Idx' → logprob: -5.04671049118042
    10. 'Pos' → logprob: -5.17171049118042

Token 321: '[c' (ID: 22840)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34887799620628357
    2. '=' → logprob: -1.223878026008606
    3. '_last' → logprob: -8.973877906799316
    4. '=set' → logprob: -9.723877906799316
    5. 'last' → logprob: -10.223877906799316
    6. 'Last' → logprob: -10.598877906799316
    7. '_seen' → logprob: -10.848877906799316
    8. '=dict' → logprob: -10.973877906799316
    9. '_idx' → logprob: -11.098877906799316
    10. '={}' → logprob: -11.348877906799316

Token 322: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007781841326504946
    2. '=' → logprob: -5.882781982421875
    3. ' =' → logprob: -6.132781982421875
    4. ']=' → logprob: -6.757781982421875
    5. 'x' → logprob: -7.507781982421875
    6. 'idx' → logprob: -8.382781982421875
    7. 'index' → logprob: -9.007781982421875
    8. '_idx' → logprob: -9.007781982421875
    9. '']' → logprob: -9.507781982421875
    10. '"]' → logprob: -9.757781982421875

Token 323: ' For' (ID: 2214)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5184798240661621
    2. '{}' → logprob: -1.018479824066162
    3. ' -' → logprob: -4.018479824066162
    4. '[-' → logprob: -4.143479824066162
    5. 'dict' → logprob: -5.768479824066162
    6. ' {}' → logprob: -6.018479824066162
    7. '{-' → logprob: -6.018479824066162
    8. '[]' → logprob: -7.893479824066162
    9. '{' → logprob: -7.893479824066162
    10. ' dict' → logprob: -8.39348030090332

Token 324: ' each' (ID: 2454)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.29017847776412964
    2. '{}' → logprob: -1.9151785373687744
    3. '[' → logprob: -3.4151785373687744
    4. '{' → logprob: -4.165178298950195
    5. ' [-' → logprob: -4.165178298950195
    6. '-' → logprob: -4.665178298950195
    7. 'dict' → logprob: -5.165178298950195
    8. '{-' → logprob: -5.415178298950195
    9. 'c' → logprob: -5.665178298950195
    10. 'default' → logprob: -5.790178298950195

Token 325: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6890887022018433
    2. ' color' → logprob: -1.3140887022018433
    3. 'c' → logprob: -1.6890887022018433
    4. ' c' → logprob: -3.314088821411133
    5. 'x' → logprob: -5.939088821411133
    6. 'index' → logprob: -6.689088821411133
    7. ' x' → logprob: -7.564088821411133
    8. 'colors' → logprob: -7.689088821411133
    9. ' index' → logprob: -8.064088821411133
    10. ' range' → logprob: -8.064088821411133

Token 326: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11951685696840286
    2. '=' → logprob: -2.2445168495178223
    3. ',' → logprob: -6.869516849517822
    4. '_last' → logprob: -7.244516849517822
    5. '   ' → logprob: -7.494516849517822
    6. 'idx' → logprob: -7.619516849517822
    7. '_idx' → logprob: -7.744516849517822
    8. ':' → logprob: -7.744516849517822
    9. '[-' → logprob: -7.869516849517822
    10. 'last' → logprob: -7.994516849517822

Token 327: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5800752639770508
    2. '=' → logprob: -1.2050752639770508
    3. ',' → logprob: -2.080075263977051
    4. ':' → logprob: -4.705075263977051
    5. '   ' → logprob: -6.080075263977051
    6. 'On' → logprob: -7.955075263977051
    7. ' ,' → logprob: -7.955075263977051
    8. ''s' → logprob: -8.33007526397705
    9. ' is' → logprob: -8.45507526397705
    10. 'index' → logprob: -8.58007526397705

Token 328: ' store' (ID: 4897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09904766082763672
    2. ' -' → logprob: -2.5990476608276367
    3. 'On' → logprob: -6.099047660827637
    4. '-on' → logprob: -6.099047660827637
    5. 'None' → logprob: -6.349047660827637
    6. ' =' → logprob: -6.599047660827637
    7. 'lambda' → logprob: -6.599047660827637
    8. '[]' → logprob: -6.724047660827637
    9. '-On' → logprob: -7.224047660827637
    10. ' lambda' → logprob: -7.349047660827637

Token 329: ' the' (ID: 290)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04842963069677353
    2. '[]' → logprob: -3.6734297275543213
    3. ' -' → logprob: -4.673429489135742
    4. 'None' → logprob: -5.173429489135742
    5. '[-' → logprob: -5.798429489135742
    6. 'the' → logprob: -6.423429489135742
    7. '{}' → logprob: -7.423429489135742
    8. ' None' → logprob: -8.173429489135742
    9. '   ' → logprob: -8.548429489135742
    10. '0' → logprob: -8.548429489135742

Token 330: ' latest' (ID: 6898)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0556006096303463
    2. '-last' → logprob: -3.680600643157959
    3. 'last' → logprob: -4.180600643157959
    4. ' -' → logprob: -5.180600643157959
    5. ' last' → logprob: -5.680600643157959
    6. '[]' → logprob: -7.180600643157959
    7. '-index' → logprob: -7.305600643157959
    8. 'index' → logprob: -7.680600643157959
    9. '[-' → logprob: -7.680600643157959
    10. '-N' → logprob: -7.680600643157959

Token 331: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.15348437428474426
    2. ' occurrence' → logprob: -2.528484344482422
    3. ' index' → logprob: -3.403484344482422
    4. 'occ' → logprob: -3.903484344482422
    5. 'appearance' → logprob: -5.403484344482422
    6. 'occur' → logprob: -6.528484344482422
    7. ' appearance' → logprob: -7.403484344482422
    8. '_occ' → logprob: -7.653484344482422
    9. '-' → logprob: -7.903484344482422
    10. '_index' → logprob: -8.153484344482422

Token 332: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2591849565505981
    2. ' of' → logprob: -1.6341849565505981
    3. 'of' → logprob: -2.1341848373413086
    4. 'in' → logprob: -2.6341848373413086
    5. '   ' → logprob: -3.0091848373413086
    6. ' in' → logprob: -3.0091848373413086
    7. '=-' → logprob: -3.1341848373413086
    8. '[-' → logprob: -3.2591848373413086
    9. 'initialized' → logprob: -3.2591848373413086
    10. '[c' → logprob: -3.6341848373413086

Token 333: ' it's' (ID: 4275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.060145556926727295
    2. 'it' → logprob: -3.560145616531372
    3. ' it' → logprob: -3.810145616531372
    4. ' c' → logprob: -5.060145378112793
    5. 'color' → logprob: -7.935145378112793
    6. 'the' → logprob: -8.060145378112793
    7. 'that' → logprob: -8.935145378112793
    8. 'x' → logprob: -9.060145378112793
    9. 'On' → logprob: -9.185145378112793
    10. ' the' → logprob: -9.560145378112793

Token 334: ' found' (ID: 2491)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.6315932273864746
    2. 'found' → logprob: -1.8815932273864746
    3. 'used' → logprob: -2.2565932273864746
    4. 'appe' → logprob: -3.1315932273864746
    5. 'stored' → logprob: -3.2565932273864746
    6. 'last' → logprob: -4.131593227386475
    7. 'first' → logprob: -4.131593227386475
    8. ' found' → logprob: -4.256593227386475
    9. ' used' → logprob: -4.381593227386475
    10. 'enc' → logprob: -5.131593227386475

Token 335: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011815996840596199
    2. '=' → logprob: -4.761816024780273
    3. '   ' → logprob: -6.511816024780273
    4. 'On' → logprob: -6.761816024780273
    5. ',' → logprob: -9.261816024780273
    6. 's' → logprob: -9.636816024780273
    7. ' On' → logprob: -9.761816024780273
    8. '[' → logprob: -10.511816024780273
    9. '_on' → logprob: -10.511816024780273
    10. ' defaultdict' → logprob: -10.511816024780273

Token 336: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14994356036186218
    2. '   ' → logprob: -2.1499435901641846
    3. '=' → logprob: -4.6499433517456055
    4. '{' → logprob: -6.2749433517456055
    5. ',' → logprob: -6.3999433517456055
    6. ' in' → logprob: -6.6499433517456055
    7. ' defaultdict' → logprob: -6.8999433517456055
    8. '{}' → logprob: -7.0249433517456055
    9. '```' → logprob: -7.5249433517456055
    10. '[-' → logprob: -7.6499433517456055

Token 337: ' On' (ID: 2160)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1793593019247055
    2. 'default' → logprob: -2.929359197616577
    3. 'On' (adapté à ' On') → logprob: -3.054359197616577
    4. '{' → logprob: -3.554359197616577
    5. ' {}' → logprob: -3.804359197616577
    6. '[-' → logprob: -5.554359436035156
    7. '[' → logprob: -5.929359436035156
    8. ' defaultdict' → logprob: -6.429359436035156
    9. '{-' → logprob: -6.929359436035156
    10. '{}
' → logprob: -7.179359436035156

Token 338: 'etime' (ID: 7359)
  Prédit: 'etime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etime' → logprob: -0.03416610509157181
    2. 'time' → logprob: -3.409166097640991
    3. 'e' → logprob: -8.03416633605957
    4. 'Time' → logprob: -8.90916633605957
    5. '_time' → logprob: -10.28416633605957
    6. 'et' → logprob: -11.90916633605957
    7. 'etimes' → logprob: -11.90916633605957
    8. 'ETIME' → logprob: -12.65916633605957
    9. ' time' → logprob: -13.15916633605957
    10. '-time' → logprob: -13.28416633605957

Token 339: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.002626192755997181
    2. '=' → logprob: -7.002626419067383
    3. ' =' → logprob: -7.252626419067383
    4. '_indices' → logprob: -7.502626419067383
    5. '_indexes' → logprob: -9.502626419067383
    6. '=_' → logprob: -9.877626419067383
    7. '_' → logprob: -10.002626419067383
    8. '=[' → logprob: -10.252626419067383
    9. '```' → logprob: -10.377626419067383
    10. '_idx' → logprob: -10.502626419067383

Token 340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021087527275085
    2. ' =' → logprob: -2.3502109050750732
    3. '={}' → logprob: -12.975211143493652
    4. '[' → logprob: -14.725211143493652
    5. '={' → logprob: -15.350211143493652
    6. '=[' → logprob: -15.475211143493652
    7. '=[]' → logprob: -15.475211143493652
    8. ' ' → logprob: -15.850211143493652
    9. ')' → logprob: -15.850211143493652
    10. ',' → logprob: -16.100210189819336

Token 341: ' [-' (ID: 20191)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0021855919621884823
    2. 'dict' → logprob: -6.252185821533203
    3. '[-' → logprob: -9.002185821533203
    4. ' {}' → logprob: -9.877185821533203
    5. 'default' → logprob: -10.377185821533203
    6. '{-' → logprob: -10.752185821533203
    7. ' dict' → logprob: -10.752185821533203
    8. '{' → logprob: -12.252185821533203
    9. '{})' → logprob: -13.877185821533203
    10. '{}
' → logprob: -14.127185821533203

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.290784560609609e-05
    2. '-' → logprob: -10.125072479248047
    3. '2' → logprob: -10.625072479248047
    4. ' ' → logprob: -13.250072479248047
    5. '100' → logprob: -13.500072479248047
    6. '10' → logprob: -13.625072479248047
    7. '999' → logprob: -14.187572479248047
    8. '   ' → logprob: -14.312572479248047
    9. '(' → logprob: -15.125072479248047
    10. ' -' → logprob: -15.187572479248047

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00137404166162014
    2. ']*' → logprob: -6.626374244689941
    3. ']*(' → logprob: -10.626374244689941
    4. ' ]' → logprob: -11.251374244689941
    5. '*' → logprob: -12.626374244689941
    6. ' *' → logprob: -13.001374244689941
    7. ')' → logprob: -13.126374244689941
    8. '   ' → logprob: -13.751374244689941
    9. 'for' → logprob: -14.126374244689941
    10. ' for' → logprob: -14.876374244689941

Token 344: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6065757274627686
    2. '*' → logprob: -1.2315757274627686
    3. '*(' → logprob: -1.8565757274627686
    4. '(' → logprob: -5.606575965881348
    5. '*C' → logprob: -7.481575965881348
    6. ' *(' → logprob: -7.606575965881348
    7. '   ' → logprob: -7.731575965881348
    8. '0' → logprob: -8.356575965881348
    9. '<|end|>' → logprob: -8.356575965881348
    10. ' (' → logprob: -8.356575965881348

Token 345: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19822710752487183
    2. '(max' → logprob: -2.3232271671295166
    3. '100' → logprob: -3.1982271671295166
    4. '(int' → logprob: -4.1982269287109375
    5. '10' → logprob: -5.1982269287109375
    6. '(N' → logprob: -5.3232269287109375
    7. 'max' → logprob: -5.3232269287109375
    8. '(M' → logprob: -5.5732269287109375
    9. '(MAX' → logprob: -5.5732269287109375
    10. 'int' → logprob: -7.1982269287109375

Token 346: '2' (ID: 17)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5021461248397827
    2. '10' → logprob: -1.2521461248397827
    3. '100' → logprob: -2.3771462440490723
    4. '(' → logprob: -4.877146244049072
    5. '(max' → logprob: -5.502146244049072
    6. 'int' → logprob: -6.127146244049072
    7. '200' → logprob: -6.627146244049072
    8. 'MAX' → logprob: -8.127145767211914
    9. '(int' → logprob: -8.877145767211914
    10. 'N' → logprob: -9.502145767211914

Token 347: ' *' (ID: 425)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.26228535175323486
    2. '*' → logprob: -1.6372853517532349
    3. '10' → logprob: -3.8872852325439453
    4. '_' → logprob: -5.512285232543945
    5. '0' → logprob: -5.637285232543945
    6. '00' → logprob: -5.637285232543945
    7. '*(' → logprob: -6.512285232543945
    8. '100' → logprob: -6.887285232543945
    9. '010' → logprob: -7.387285232543945
    10. '001' → logprob: -8.012285232543945

Token 348: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10883026570081711
    2. '(' → logprob: -2.483830213546753
    3. 'N' → logprob: -4.483830451965332
    4. 'max' → logprob: -5.858830451965332
    5. '100' → logprob: -5.858830451965332
    6. '(N' → logprob: -6.733830451965332
    7. '(max' → logprob: -7.108830451965332
    8. '200' → logprob: -8.983830451965332
    9. ' ' → logprob: -9.358830451965332
    10. ' (' → logprob: -9.358830451965332

Token 349: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.27975350618362427
    2. '(' → logprob: -2.0297534465789795
    3. 'N' → logprob: -2.2797534465789795
    4. '100' → logprob: -5.404753684997559
    5. '(N' → logprob: -5.529753684997559
    6. 'max' → logprob: -7.154753684997559
    7. '(max' → logprob: -8.029753684997559
    8. '200' → logprob: -9.154753684997559
    9. 'C' → logprob: -9.279753684997559
    10. '(int' → logprob: -9.279753684997559

Token 350: '**' (ID: 410)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.012624189257621765
    2. '6' → logprob: -4.387624263763428
    3. '7' → logprob: -9.26262378692627
    4. '**' → logprob: -11.88762378692627
    5. '+' → logprob: -12.01262378692627
    6. '```' → logprob: -12.88762378692627
    7. '4' → logprob: -13.76262378692627
    8. '   ' → logprob: -14.07512378692627
    9. '``' → logprob: -15.01262378692627
    10. '3' → logprob: -15.26262378692627

Token 351: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0036195507273077965
    2. '6' → logprob: -5.62861967086792
    3. '7' → logprob: -11.003619194030762
    4. '4' → logprob: -13.503619194030762
    5. '9' → logprob: -14.441119194030762
    6. '3' → logprob: -15.878619194030762
    7. '```' → logprob: -16.003620147705078
    8. '   ' → logprob: -16.066120147705078
    9. '8' → logprob: -16.128620147705078
    10. '
' → logprob: -16.378620147705078

Token 352: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33525750041007996
    2. ' +' → logprob: -1.8352575302124023
    3. ')' → logprob: -2.0852575302124023
    4. ')
' → logprob: -7.585257530212402
    5. '1' → logprob: -7.960257530212402
    6. '   ' → logprob: -9.710257530212402
    7. ')]' → logprob: -10.585257530212402
    8. ' )' → logprob: -10.835257530212402
    9. ')

' → logprob: -11.460257530212402
    10. ']' → logprob: -11.835257530212402

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16331753134727478
    2. '5' → logprob: -2.0383174419403076
    3. '10' → logprob: -4.288317680358887
    4. '2' → logprob: -5.038317680358887
    5. '7' → logprob: -8.913317680358887
    6. ' ' → logprob: -10.288317680358887
    7. '3' → logprob: -10.288317680358887
    8. '0' → logprob: -12.163317680358887
    9. '4' → logprob: -12.413317680358887
    10. '6' → logprob: -12.913317680358887

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11452992260456085
    2. '5' → logprob: -2.489529848098755
    3. '10' → logprob: -4.114530086517334
    4. '2' → logprob: -4.864530086517334
    5. '7' → logprob: -6.864530086517334
    6. '3' → logprob: -9.489529609680176
    7. '0' → logprob: -9.864529609680176
    8. '4' → logprob: -10.864529609680176
    9. '6' → logprob: -11.239529609680176
    10. ' ' → logprob: -12.114529609680176

Token 355: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012332366895861924
    2. ')
' → logprob: -9.125123023986816
    3. '   ' → logprob: -11.375123023986816
    4. ' )' → logprob: -13.000123023986816
    5. ')

' → logprob: -15.125123023986816
    6. ')
' → logprob: -16.000123977661133
    7. ']' → logprob: -16.750123977661133
    8. '```' → logprob: -17.625123977661133
    9. ')#' → logprob: -17.750123977661133
    10. '))' → logprob: -17.750123977661133

Token 356: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20375984907150269
    2. '   ' → logprob: -2.5787599086761475
    3. 'for' → logprob: -3.2037599086761475
    4. '    
' → logprob: -3.8287599086761475
    5. ' 
' → logprob: -4.078759670257568
    6. ' for' → logprob: -4.203759670257568
    7. '  
' → logprob: -4.453759670257568
    8. '   
' → logprob: -7.078759670257568
    9. '

' → logprob: -7.328759670257568
    10. '
' → logprob: -8.578760147094727

Token 357: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2533937394618988
    2. '
' → logprob: -2.2533936500549316
    3. ' for' → logprob: -2.8783936500549316
    4. '   ' → logprob: -2.8783936500549316
    5. '    
' → logprob: -6.128393650054932
    6. ')' → logprob: -6.128393650054932
    7. '  
' → logprob: -8.00339412689209
    8. '<|end|>' → logprob: -8.37839412689209
    9. 'def' → logprob: -8.75339412689209
    10. '

' → logprob: -8.75339412689209

Token 358: ' Handles' (ID: 47620)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34651026129722595
    2. '   ' → logprob: -1.7215102910995483
    3. '
' → logprob: -2.846510171890259
    4. ' for' → logprob: -3.096510171890259
    5. '    
' → logprob: -5.471510410308838
    6. ' 
' → logprob: -5.971510410308838
    7. '  
' → logprob: -6.721510410308838
    8. ')' → logprob: -7.471510410308838
    9. '```' → logprob: -8.09650993347168
    10. ' ' → logprob: -8.34650993347168

Token 359: ' large' (ID: 4410)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1271052211523056
    2. '10' → logprob: -2.252105236053467
    3. ' ' → logprob: -4.877105236053467
    4. '200' → logprob: -6.002105236053467
    5. '   ' → logprob: -6.752105236053467
    6. 'colors' → logprob: -7.002105236053467
    7. 'No' → logprob: -7.627105236053467
    8. 'max' → logprob: -8.002104759216309
    9. '2' → logprob: -8.002104759216309
    10. '0' → logprob: -8.252104759216309

Token 360: ' color' (ID: 3089)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' range' (ID: 3352)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.4806216955184937
    2. '<|end|>' → logprob: -1.6056216955184937
    3. ')' → logprob: -1.8556216955184937
    4. 'values' → logprob: -1.9806216955184937
    5. ' ranges' → logprob: -3.355621814727783
    6. ' values' → logprob: -3.480621814727783
    7. 'range' → logprob: -3.480621814727783
    8. ' indices' → logprob: -3.605621814727783
    9. ' range' → logprob: -3.980621814727783
    10. '   ' → logprob: -4.105621814727783

Token 362: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2408488690853119
    2. 'for' → logprob: -1.6158488988876343
    3. ' for' → logprob: -4.740849018096924
    4. '
' → logprob: -6.115849018096924
    5. '    
' → logprob: -6.365849018096924
    6. ')' → logprob: -6.740849018096924
    7. '```' → logprob: -7.865849018096924
    8. '	for' → logprob: -8.365848541259766
    9. 'idx' → logprob: -8.990848541259766
    10. '  
' → logprob: -9.365848541259766

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36546790599823
    2. 'for' → logprob: -1.49046790599823
    3. ' for' → logprob: -3.3654680252075195
    4. ')' → logprob: -4.2404680252075195
    5. '    
' → logprob: -4.4904680252075195
    6. 'i' → logprob: -5.1154680252075195
    7. ' 
' → logprob: -5.3654680252075195
    8. '  
' → logprob: -5.7404680252075195
    9. '
' → logprob: -6.2404680252075195
    10. '   
' → logprob: -6.7404680252075195

Token 364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010020491667091846
    2. '   ' → logprob: -4.6350202560424805
    3. ' for' → logprob: -8.26002025604248
    4. '    
' → logprob: -13.63502025604248
    5. '```' → logprob: -14.01002025604248
    6. 'For' → logprob: -14.26002025604248
    7. 'i' → logprob: -14.38502025604248
    8. '	for' → logprob: -14.38502025604248
    9. '
' → logprob: -14.51002025604248
    10. ')' → logprob: -15.38502025604248

Token 365: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061992332339286804
    2. ' i' → logprob: -2.8119924068450928
    3. 'idx' → logprob: -11.061992645263672
    4. ' idx' → logprob: -12.561992645263672
    5. '	i' → logprob: -13.436992645263672
    6. '   ' → logprob: -14.061992645263672
    7. 'index' → logprob: -14.436992645263672
    8. '(i' → logprob: -14.436992645263672
    9. '_i' → logprob: -14.561992645263672
    10. ' ' → logprob: -14.811992645263672

Token 366: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01652636006474495
    2. 'in' → logprob: -4.141526222229004
    3. ' ' → logprob: -8.266526222229004
    4. ',' → logprob: -9.016526222229004
    5. '	in' → logprob: -9.641526222229004
    6. '_in' → logprob: -11.141526222229004
    7. ' ,' → logprob: -11.266526222229004
    8. '   ' → logprob: -12.266526222229004
    9. '_' → logprob: -12.766526222229004
    10. '    ' → logprob: -12.891526222229004

Token 367: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.29350969195365906
    2. 'x' → logprob: -2.1685097217559814
    3. 'val' → logprob: -3.0435097217559814
    4. 'c' → logprob: -3.1685097217559814
    5. 'num' → logprob: -3.6685097217559814
    6. ' color' → logprob: -4.543509483337402
    7. 'col' → logprob: -4.668509483337402
    8. 'value' → logprob: -6.543509483337402
    9. 'v' → logprob: -6.543509483337402
    10. ' val' → logprob: -7.293509483337402

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789998397231102
    2. 'in' → logprob: -2.5789997577667236
    3. ',' → logprob: -10.078999519348145
    4. ' ' → logprob: -10.203999519348145
    5. '	in' → logprob: -10.953999519348145
    6. '_in' → logprob: -12.953999519348145
    7. ')' → logprob: -12.953999519348145
    8. '  ' → logprob: -13.078999519348145
    9. '   ' → logprob: -13.328999519348145
    10. '<|end|>' → logprob: -13.703999519348145

Token 369: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.004078758880496025
    2. ' enumerate' → logprob: -5.5040788650512695
    3. '```' → logprob: -16.129077911376953
    4. '   ' → logprob: -17.379077911376953
    5. 'range' → logprob: -17.379077911376953
    6. 'enum' → logprob: -17.629077911376953
    7. 'en' → logprob: -17.629077911376953
    8. '(en' → logprob: -18.004077911376953
    9. 'in' → logprob: -18.379077911376953
    10. 'No' → logprob: -18.504077911376953

Token 370: '(No' (ID: 136998)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.1902875453233719
    2. '(No' → logprob: -1.9402875900268555
    3. ' No' → logprob: -3.5652875900268555
    4. '   ' → logprob: -7.0652875900268555
    5. '(' → logprob: -8.690287590026855
    6. ' (' → logprob: -9.065287590026855
    7. ')' → logprob: -9.940287590026855
    8. '_No' → logprob: -10.190287590026855
    9. ' ' → logprob: -10.440287590026855
    10. '(no' → logprob: -10.815287590026855

Token 371: 'Double' (ID: 10948)
  Prédit: 'Double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Double' → logprob: -7.553032628493384e-05
    2. 'No' → logprob: -9.500075340270996
    3. 'double' → logprob: -15.125075340270996
    4. 'D' → logprob: -16.625076293945312
    5. '[Double' → logprob: -16.625076293945312
    6. 'ouble' → logprob: -16.875076293945312
    7. '_double' → logprob: -17.250076293945312
    8. ' Double' → logprob: -17.375076293945312
    9. ')' → logprob: -17.375076293945312
    10. 'Duplicate' → logprob: -18.125076293945312

Token 372: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20157258212566376
    2. '):
' → logprob: -1.7015725374221802
    3. '):
' → logprob: -8.82657241821289
    4. '   ' → logprob: -11.82657241821289
    5. ':' → logprob: -13.20157241821289
    6. ' ):' → logprob: -14.07657241821289
    7. '):

' → logprob: -14.32657241821289
    8. ']:' → logprob: -14.45157241821289
    9. '[]):' → logprob: -14.95157241821289
    10. '():
' → logprob: -15.57657241821289

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020975546911358833
    2. '   ' → logprob: -3.8959755897521973
    3. '```' → logprob: -8.395975112915039
    4. '    
' → logprob: -10.270975112915039
    5. '):
' → logprob: -10.520975112915039
    6. ')' → logprob: -10.520975112915039
    7. 'For' → logprob: -11.145975112915039
    8. ' if' → logprob: -11.270975112915039
    9. '	   ' → logprob: -11.395975112915039
    10. ':' → logprob: -11.520975112915039

Token 374: ' if' (ID: 538)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.25293228030204773
    2. 'On' → logprob: -2.62793231010437
    3. 'prev' → logprob: -2.75293231010437
    4. '           ' → logprob: -3.75293231010437
    5. 'last' → logprob: -3.87793231010437
    6. '       ' → logprob: -3.87793231010437
    7. '   ' → logprob: -4.377932071685791
    8. 'previous' → logprob: -5.377932071685791
    9. 'If' → logprob: -6.127932071685791
    10. 'Last' → logprob: -6.627932071685791

Token 375: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.007809850387275219
    2. ' On' → logprob: -4.882809638977051
    3. '   ' → logprob: -9.00780963897705
    4. 'For' → logprob: -10.00780963897705
    5. '	On' → logprob: -10.50780963897705
    6. ' ' → logprob: -12.88280963897705
    7. 'color' → logprob: -14.00780963897705
    8. '_On' → logprob: -14.13280963897705
    9. '    ' → logprob: -14.25780963897705
    10. '_on' → logprob: -14.38280963897705

Token 376: 'etime' (ID: 7359)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2675265967845917
    2. 'etime' → logprob: -1.517526626586914
    3. 'ntime' → logprob: -4.267526626586914
    4. '[' → logprob: -8.142526626586914
    5. 'tem' → logprob: -8.392526626586914
    6. 'On' → logprob: -9.017526626586914
    7. '```' → logprob: -9.392526626586914
    8. 'timeout' → logprob: -9.517526626586914
    9. 'untime' → logprob: -9.517526626586914
    10. 'one' → logprob: -9.642526626586914

Token 377: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.625
    3. 'colors' → logprob: -18.25
    4. '_color' → logprob: -18.625
    5. 'Colors' → logprob: -18.75
    6. '_' → logprob: -18.875
    7. '_c' → logprob: -19.0
    8. '[_' → logprob: -19.5
    9. '
' → logprob: -19.5
    10. '[' → logprob: -19.5

Token 378: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.375001907348633
    3. 'color' → logprob: -14.500001907348633
    4. ' [' → logprob: -14.750001907348633
    5. '=color' → logprob: -15.000001907348633
    6. '[
' → logprob: -15.500001907348633
    7. ' color' → logprob: -17.125001907348633
    8. '[size' → logprob: -17.250001907348633
    9. '(color' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.500001907348633

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.160043716430664
    2. '!=' → logprob: -1.160043716430664
    3. '[idx' → logprob: -1.910043716430664
    4. '!=-' → logprob: -2.035043716430664
    5. ' !=' → logprob: -3.660043716430664
    6. ']!=' → logprob: -3.910043716430664
    7. '==' → logprob: -4.035043716430664
    8. '[' → logprob: -4.285043716430664
    9. '==-' → logprob: -4.910043716430664
    10. '[color' → logprob: -6.285043716430664

Token 380: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.058879733085632324
    2. '!=-' → logprob: -3.308879852294922
    3. ' !=' → logprob: -4.058879852294922
    4. '==' → logprob: -6.308879852294922
    5. '>=' → logprob: -6.933879852294922
    6. '[idx' → logprob: -8.058879852294922
    7. '==-' → logprob: -9.058879852294922
    8. ']!=' → logprob: -9.933879852294922
    9. '[' → logprob: -10.433879852294922
    10. ')!=' → logprob: -11.058879852294922

Token 381: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.130576806142926e-05
    2. ' -' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.875030517578125
    4. ' ' → logprob: -19.750030517578125
    5. '−' → logprob: -21.125030517578125
    6. '  ' → logprob: -21.375030517578125
    7. '‌' → logprob: -21.625030517578125
    8. '[-' → logprob: -21.750030517578125
    9. 'idx' → logprob: -22.375030517578125
    10. '```' → logprob: -23.250030517578125

Token 382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017359900521114469
    2. '-' → logprob: -6.376736164093018
    3. '2' → logprob: -11.37673568725586
    4. ' -' → logprob: -11.50173568725586
    5. '```' → logprob: -12.75173568725586
    6. ' ' → logprob: -12.81423568725586
    7. 'idx' → logprob: -13.81423568725586
    8. '   ' → logprob: -14.00173568725586
    9. '#' → logprob: -15.06423568725586
    10. '999' → logprob: -15.31423568725586

Token 383: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7242065668106079
    2. ':
' → logprob: -0.7242065668106079
    3. '           ' → logprob: -3.5992064476013184
    4. '       ' → logprob: -6.474206447601318
    5. '):
' → logprob: -7.724206447601318
    6. ' or' → logprob: -7.849206447601318
    7. '):' → logprob: -8.849206924438477
    8. ',' → logprob: -9.349206924438477
    9. ')' → logprob: -9.474206924438477
    10. ' :
' → logprob: -9.474206924438477

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028671622276306152
    2. 'For' → logprob: -6.002867221832275
    3. '   ' → logprob: -8.377866744995117
    4. ' For' → logprob: -9.377866744995117
    5. '               ' → logprob: -10.627866744995117
    6. '       ' → logprob: -10.877866744995117
    7. ':' → logprob: -11.377866744995117
    8. '          ' → logprob: -13.002866744995117
    9. '	       ' → logprob: -13.002866744995117
    10. ':
' → logprob: -13.252866744995117

Token 385: ' #' (ID: 1069)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.20814017951488495
    2. 'For' → logprob: -1.8331401348114014
    3. '           ' → logprob: -4.0831403732299805
    4. '               ' → logprob: -4.8331403732299805
    5. '   ' → logprob: -5.9581403732299805
    6. ' On' → logprob: -8.33314037322998
    7. '       ' → logprob: -8.33314037322998
    8. ' For' → logprob: -10.33314037322998
    9. ' ' → logprob: -10.83314037322998
    10. '	On' → logprob: -11.20814037322998

Token 386: ' First' (ID: 8338)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.0007494711899198592
    2. '           ' → logprob: -8.000749588012695
    3. 'For' → logprob: -8.375749588012695
    4. ' On' → logprob: -9.000749588012695
    5. '   ' → logprob: -10.125749588012695
    6. '       ' → logprob: -11.250749588012695
    7. 'for' → logprob: -13.000749588012695
    8. '               ' → logprob: -13.375749588012695
    9. '	On' → logprob: -13.500749588012695
    10. '#' → logprob: -14.250749588012695

Token 387: ' appearance' (ID: 16814)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.3747099041938782
    2. ' occurrence' → logprob: -1.7497098445892334
    3. 'appearance' → logprob: -2.7497098445892334
    4. 'occur' → logprob: -3.3747098445892334
    5. 'idx' → logprob: -3.7497098445892334
    6. 'time' → logprob: -6.1247100830078125
    7. 'Occurrence' → logprob: -6.1247100830078125
    8. '       ' → logprob: -6.1247100830078125
    9. '_occ' → logprob: -6.4997100830078125
    10. 'index' → logprob: -6.6247100830078125

Token 388: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.167764663696289
    2. '           ' → logprob: -1.167764663696289
    3. '       ' → logprob: -1.417764663696289
    4. '               ' → logprob: -2.292764663696289
    5. '):' → logprob: -5.042764663696289
    6. ':
' → logprob: -5.417764663696289
    7. 'On' → logprob: -5.542764663696289
    8. '<|end|>' → logprob: -5.792764663696289
    9. ' =' → logprob: -5.917764663696289
    10. '=' → logprob: -5.917764663696289

Token 389: ' this' (ID: 495)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.5351586937904358
    2. 'idx' → logprob: -0.9101586937904358
    3. ' color' → logprob: -5.160158634185791
    4. ' idx' → logprob: -5.285158634185791
    5. 'For' → logprob: -7.535158634185791
    6. 'On' → logprob: -8.03515911102295
    7. 'index' → logprob: -9.91015911102295
    8. 'No' → logprob: -10.28515911102295
    9. '[idx' → logprob: -10.41015911102295
    10. '[color' → logprob: -10.53515911102295

Token 390: ' color' (ID: 3089)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7181415557861328
    2. 'color' → logprob: -1.2181415557861328
    3. ' color' → logprob: -2.218141555786133
    4. ' idx' → logprob: -2.593141555786133
    5. 'index' → logprob: -4.218141555786133
    6. 'token' → logprob: -4.843141555786133
    7. '[idx' → logprob: -5.968141555786133
    8. ' index' → logprob: -6.218141555786133
    9. '[color' → logprob: -6.343141555786133
    10. ' token' → logprob: -6.718141555786133

Token 391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2896033525466919
    2. '       ' → logprob: -2.0396032333374023
    3. ':' → logprob: -2.6646032333374023
    4. '               ' → logprob: -3.5396032333374023
    5. ':
' → logprob: -4.664603233337402
    6. '):
' → logprob: -5.789603233337402
    7. '):' → logprob: -5.914603233337402
    8. '<|end|>' → logprob: -6.289603233337402
    9. 'On' → logprob: -7.039603233337402
    10. ',' → logprob: -7.414603233337402

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05623165890574455
    2. '               ' → logprob: -3.431231737136841
    3. '       ' → logprob: -4.431231498718262
    4. ':' → logprob: -5.056231498718262
    5. 'For' → logprob: -7.306231498718262
    6. ':
' → logprob: -7.556231498718262
    7. '```' → logprob: -7.556231498718262
    8. '   ' → logprob: -7.681231498718262
    9. '):
' → logprob: -7.806231498718262
    10. ',' → logprob: -8.056231498718262

Token 393: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' (adapté à ' On') → logprob: -0.0120554743334651
    2. '           ' → logprob: -5.012055397033691
    3. 'For' → logprob: -6.012055397033691
    4. '               ' → logprob: -6.262055397033691
    5. '   ' → logprob: -7.637055397033691
    6. ' On' → logprob: -8.137055397033691
    7. '       ' → logprob: -8.762055397033691
    8. '	On' → logprob: -11.137055397033691
    9. 'for' → logprob: -11.387055397033691
    10. ' ' → logprob: -13.012055397033691

Token 394: 'etime' (ID: 7359)
  Prédit: 'etime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etime' → logprob: -0.20155173540115356
    2. 'time' → logprob: -1.7015516757965088
    3. 'etimes' → logprob: -10.32655143737793
    4. '           ' → logprob: -10.57655143737793
    5. '```' → logprob: -11.32655143737793
    6. 'ertime' → logprob: -11.57655143737793
    7. 'ntime' → logprob: -11.57655143737793
    8. '       ' → logprob: -11.57655143737793
    9. 'timeout' → logprob: -12.32655143737793
    10. '               ' → logprob: -12.45155143737793

Token 395: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -1.7432603272027336e-06
    2. 'colors' → logprob: -14.375001907348633
    3. '```' → logprob: -14.375001907348633
    4. '_tokens' → logprob: -16.125001907348633
    5. '_indices' → logprob: -16.250001907348633
    6. '_color' → logprob: -17.375001907348633
    7. 'Colors' → logprob: -17.625001907348633
    8. '_c' → logprob: -17.750001907348633
    9. '_positions' → logprob: -17.750001907348633
    10. '_states' → logprob: -17.875001907348633

Token 396: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -2.1008713702030946e-06
    2. '=color' → logprob: -13.500001907348633
    3. '[idx' → logprob: -14.750001907348633
    4. 'color' → logprob: -15.875001907348633
    5. '[' → logprob: -16.250001907348633
    6. '```' → logprob: -18.000001907348633
    7. '[size' → logprob: -18.125001907348633
    8. ' color' → logprob: -18.125001907348633
    9. '	color' → logprob: -18.250001907348633
    10. '
' → logprob: -18.500001907348633

Token 397: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18943874537944794
    2. '[idx' → logprob: -1.8144387006759644
    3. ']=' → logprob: -5.189438819885254
    4. '[color' → logprob: -6.314438819885254
    5. 'idx' → logprob: -6.439438819885254
    6. '=' → logprob: -8.689438819885254
    7. '[' → logprob: -8.939438819885254
    8. ' =' → logprob: -9.564438819885254
    9. ')' → logprob: -9.939438819885254
    10. ' ]' → logprob: -10.189438819885254

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008233819156885147
    2. ' =' → logprob: -4.883234024047852
    3. '[idx' → logprob: -7.383234024047852
    4. '[' → logprob: -13.133234024047852
    5. ']=' → logprob: -13.883234024047852
    6. 'idx' → logprob: -14.383234024047852
    7. ')=' → logprob: -14.883234024047852
    8. ')' → logprob: -15.008234024047852
    9. ']' → logprob: -15.133234024047852
    10. ',' → logprob: -15.133234024047852

Token 399: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.8889261304575484e-06
    2. ' idx' → logprob: -12.500003814697266
    3. '-' → logprob: -16.875003814697266
    4. '[idx' → logprob: -17.125003814697266
    5. '	idx' → logprob: -17.250003814697266
    6. '(idx' → logprob: -17.500003814697266
    7. '   ' → logprob: -18.625003814697266
    8. 'index' → logprob: -19.375003814697266
    9. '_idx' → logprob: -20.625003814697266
    10. ' ' → logprob: -21.250003814697266

Token 400: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036602874752134085
    2. 'else' → logprob: -5.878660202026367
    3. ' else' → logprob: -7.753660202026367
    4. '<|end|>' → logprob: -8.378660202026367
    5. '   ' → logprob: -10.128660202026367
    6. '           ' → logprob: -10.253660202026367
    7. '
' → logprob: -10.378660202026367
    8. '<|end|>' → logprob: -10.753660202026367
    9. 'elif' → logprob: -11.003660202026367
    10. ')' → logprob: -11.253660202026367

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021843716967850924
    2. 'else' → logprob: -8.750218391418457
    3. '           ' → logprob: -10.250218391418457
    4. '```' → logprob: -11.375218391418457
    5. '   ' → logprob: -12.250218391418457
    6. ' else' → logprob: -12.875218391418457
    7. '<|end|>' → logprob: -13.250218391418457
    8. 'continue' → logprob: -14.125218391418457
    9. 'token' → logprob: -14.250218391418457
    10. 'elif' → logprob: -14.625218391418457

Token 402: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4809788167476654
    2. 'else' (adapté à ' else') → logprob: -1.1059788465499878
    3. ' else' → logprob: -2.9809787273406982
    4. 'elif' → logprob: -9.355978965759277
    5. '   ' → logprob: -9.605978965759277
    6. '	else' → logprob: -11.230978965759277
    7. '```' → logprob: -11.730978965759277
    8. ' elif' → logprob: -12.730978965759277
    9. ',' → logprob: -12.855978965759277
    10. '_else' → logprob: -13.105978965759277

Token 403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33769071102142334
    2. '           ' → logprob: -1.8376907110214233
    3. ':
' → logprob: -2.087690830230713
    4. '       ' → logprob: -6.837690830230713
    5. '<|end|>' → logprob: -7.462690830230713
    6. '<|end|>' → logprob: -7.837690830230713
    7. ' :' → logprob: -7.962690830230713
    8. '[' → logprob: -8.462690353393555
    9. '{' → logprob: -8.837690353393555
    10. ' :
' → logprob: -9.087690353393555

Token 404: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015193948522210121
    2. '       ' → logprob: -4.390193939208984
    3. '```' → logprob: -6.640193939208984
    4. '   ' → logprob: -7.390193939208984
    5. ' for' → logprob: -8.015193939208984
    6. 'For' → logprob: -8.890193939208984
    7. ' For' → logprob: -9.265193939208984
    8. '	       ' → logprob: -9.890193939208984
    9. '               ' → logprob: -10.515193939208984
    10. '#' → logprob: -10.890193939208984

Token 405: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.63692307472229
    2. 'For' → logprob: -0.88692307472229
    3. ' For' → logprob: -3.13692307472229
    4. '   ' → logprob: -5.011922836303711
    5. '       ' → logprob: -5.761922836303711
    6. ' for' → logprob: -5.886922836303711
    7. '```' → logprob: -6.261922836303711
    8. 'for' → logprob: -7.636922836303711
    9. '               ' → logprob: -7.761922836303711
    10. ' ' → logprob: -9.636922836303711

Token 406: ' Already' (ID: 72560)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.2138364166021347
    2. '           ' → logprob: -2.588836431503296
    3. ' For' → logprob: -2.588836431503296
    4. 'prev' → logprob: -4.338836193084717
    5. '   ' → logprob: -4.713836193084717
    6. '       ' → logprob: -5.213836193084717
    7. 'for' → logprob: -5.463836193084717
    8. ' for' → logprob: -5.588836193084717
    9. ' prev' → logprob: -5.838836193084717
    10. 'i' → logprob: -6.963836193084717

Token 407: ' appeared' (ID: 18030)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.6142571568489075
    2. '           ' → logprob: -1.6142570972442627
    3. ' appeared' → logprob: -3.2392570972442627
    4. 'idx' → logprob: -3.4892570972442627
    5. 'visited' → logprob: -3.7392570972442627
    6. '```' → logprob: -3.7392570972442627
    7. ')' → logprob: -4.239257335662842
    8. ':' → logprob: -4.614257335662842
    9. 'Last' → logprob: -4.739257335662842
    10. 'For' → logprob: -4.864257335662842

Token 408: ' before' (ID: 2254)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038920965045690536
    2. '[' → logprob: -4.913920879364014
    3. '               ' → logprob: -5.038920879364014
    4. '```' → logprob: -5.038920879364014
    5. '       ' → logprob: -5.163920879364014
    6. ':' → logprob: -5.288920879364014
    7. ' for' → logprob: -6.788920879364014
    8. 'For' → logprob: -6.913920879364014
    9. ')' → logprob: -7.413920879364014
    10. ',' → logprob: -7.663920879364014

Token 409: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009539559483528137
    2. '               ' → logprob: -5.259539604187012
    3. 'For' → logprob: -6.759539604187012
    4. '       ' → logprob: -7.509539604187012
    5. '```' → logprob: -7.759539604187012
    6. '   ' → logprob: -8.009539604187012
    7. ' For' → logprob: -8.009539604187012
    8. '
' → logprob: -8.134539604187012
    9. ':' → logprob: -8.259539604187012
    10. ':
' → logprob: -8.384539604187012

Token 410: ' store' (ID: 4897)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.025761494413018227
    2. '           ' → logprob: -4.150761604309082
    3. 'prev' → logprob: -5.025761604309082
    4. ' For' → logprob: -6.150761604309082
    5. 'last' → logprob: -8.275761604309082
    6. 'previous' → logprob: -8.275761604309082
    7. '   ' → logprob: -9.150761604309082
    8. 'j' → logprob: -9.525761604309082
    9. 'pos' → logprob: -9.650761604309082
    10. ' prev' → logprob: -10.275761604309082

Token 411: ' previous' (ID: 5880)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.013660700991749763
    2. 'For' → logprob: -4.763660907745361
    3. ' On' → logprob: -5.388660907745361
    4. '```' → logprob: -8.638660430908203
    5. 'previous' → logprob: -9.638660430908203
    6. 'idx' → logprob: -9.638660430908203
    7. '           ' → logprob: -10.263660430908203
    8. 'prev' → logprob: -10.513660430908203
    9. ' idx' → logprob: -10.763660430908203
    10. 'for' → logprob: -10.763660430908203

Token 412: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.48947060108184814
    2. 'On' → logprob: -1.8644706010818481
    3. ' occurrence' → logprob: -2.4894704818725586
    4. ' index' → logprob: -2.8644704818725586
    5. 'idx' → logprob: -3.3644704818725586
    6. 'appearance' → logprob: -3.6144704818725586
    7. 'occ' → logprob: -4.364470481872559
    8. '_occ' → logprob: -5.239470481872559
    9. ' appearance' → logprob: -5.739470481872559
    10. 'occur' → logprob: -5.864470481872559

Token 413: ' for' (ID: 395)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.6649028658866882
    2. '           ' → logprob: -1.664902925491333
    3. '[' → logprob: -2.414902925491333
    4. ',' → logprob: -2.539902925491333
    5. ')' → logprob: -3.664902925491333
    6. '       ' → logprob: -4.414902687072754
    7. ')
' → logprob: -4.414902687072754
    8. '```' → logprob: -4.664902687072754
    9. '               ' → logprob: -4.789902687072754
    10. ' For' → logprob: -4.914902687072754

Token 414: ' DP' (ID: 51992)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.007742674555629492
    2. 'idx' → logprob: -5.132742881774902
    3. ' For' → logprob: -6.757742881774902
    4. ' idx' → logprob: -7.757742881774902
    5. 'On' → logprob: -8.882742881774902
    6. 'i' → logprob: -10.507742881774902
    7. 'The' → logprob: -11.757742881774902
    8. '```' → logprob: -12.132742881774902
    9. 'Here' → logprob: -12.382742881774902
    10. '`' → logprob: -12.382742881774902

Token 415: ' reference' (ID: 9682)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1543063074350357
    2. 'For' → logprob: -2.529306411743164
    3. ' For' → logprob: -4.654306411743164
    4. ',' → logprob: -4.779306411743164
    5. ' =' → logprob: -5.029306411743164
    6. '=' → logprob: -5.029306411743164
    7. '       ' → logprob: -5.404306411743164
    8. ':' → logprob: -5.529306411743164
    9. '               ' → logprob: -5.529306411743164
    10. ')' → logprob: -5.654306411743164

Token 416: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010322241112589836
    2. 'For' → logprob: -5.135322093963623
    3. '   ' → logprob: -6.135322093963623
    4. '       ' → logprob: -7.010322093963623
    5. ' For' → logprob: -7.010322093963623
    6. '               ' → logprob: -8.385322570800781
    7. '                   ' → logprob: -10.260322570800781
    8. ',' → logprob: -10.385322570800781
    9. '```' → logprob: -10.510322570800781
    10. '		' → logprob: -11.260322570800781

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012673276476562023
    2. 'For' → logprob: -5.262673377990723
    3. ' For' → logprob: -6.137673377990723
    4. '   ' → logprob: -6.512673377990723
    5. '               ' → logprob: -6.887673377990723
    6. '       ' → logprob: -7.387673377990723
    7. '            
' → logprob: -7.762673377990723
    8. '```' → logprob: -7.887673377990723
    9. ')' → logprob: -8.887673377990723
    10. ',' → logprob: -9.262673377990723

Token 418: ' For' (ID: 2214)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'For' (adapté à ' For') → logprob: -0.00044437398901209235
    2. '           ' → logprob: -8.000444412231445
    3. 'prev' → logprob: -9.875444412231445
    4. 'On' → logprob: -10.875444412231445
    5. ' For' → logprob: -11.000444412231445
    6. '   ' → logprob: -11.875444412231445
    7. 'idx' → logprob: -12.750444412231445
    8. 'previous' → logprob: -13.250444412231445
    9. '               ' → logprob: -13.375444412231445
    10. 'last' → logprob: -13.500444412231445

Token 419: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -1.7432603272027336e-06
    2. 'idx' → logprob: -13.500001907348633
    3. 'I' → logprob: -15.500001907348633
    4. '_idx' → logprob: -16.500001907348633
    5. '_' → logprob: -18.375001907348633
    6. 'For' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '`' → logprob: -19.750001907348633
    9. 'Index' → logprob: -19.750001907348633
    10. '```' → logprob: -19.750001907348633

Token 420: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -3.292907877039397e-06
    2. '_Last' → logprob: -12.87500286102295
    3. '	Last' → logprob: -14.75000286102295
    4. '_last' → logprob: -16.250003814697266
    5. 'For' → logprob: -16.750003814697266
    6. 'last' → logprob: -17.250003814697266
    7. '[' → logprob: -17.500003814697266
    8. '[i' → logprob: -17.875003814697266
    9. '.Last' → logprob: -17.875003814697266
    10. '[last' → logprob: -18.750003814697266

Token 421: 'Num' (ID: 5702)
  Prédit: 'Last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -0.5233101844787598
    2. 'Num' → logprob: -0.8983101844787598
    3. 'Nums' → logprob: -9.023309707641602
    4. '	Last' → logprob: -11.023309707641602
    5. '[color' → logprob: -11.148309707641602
    6. '[' → logprob: -12.148309707641602
    7. '_Last' → logprob: -12.273309707641602
    8. '[-' → logprob: -12.398309707641602
    9. 'num' → logprob: -12.523309707641602
    10. '_num' → logprob: -13.398309707641602

Token 422: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.1318875446449965e-05
    2. '[' → logprob: -10.125041007995605
    3. '[index' → logprob: -15.250041007995605
    4. '[color' → logprob: -15.250041007995605
    5. '[col' → logprob: -16.000041961669922
    6. '```' → logprob: -16.125041961669922
    7. ' [' → logprob: -16.750041961669922
    8. '[Index' → logprob: -16.875041961669922
    9. '[val' → logprob: -17.000041961669922
    10. 'idx' → logprob: -17.125041961669922

Token 423: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05781752988696098
    2. ')' → logprob: -3.3078174591064453
    3. '=' → logprob: -4.557817459106445
    4. ']=' → logprob: -4.932817459106445
    5. ' ]' → logprob: -6.807817459106445
    6. ' =' → logprob: -8.307817459106445
    7. ')=' → logprob: -8.557817459106445
    8. ' )' → logprob: -9.057817459106445
    9. '])' → logprob: -9.307817459106445
    10. ')]' → logprob: -9.432817459106445

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078878089785576
    2. ' =' → logprob: -5.5040788650512695
    3. ')=' → logprob: -16.504079818725586
    4. '=int' → logprob: -16.754079818725586
    5. '.=' → logprob: -17.004079818725586
    6. ',' → logprob: -17.004079818725586
    7. ']=' → logprob: -17.129079818725586
    8. ')' → logprob: -17.254079818725586
    9. '=}' → logprob: -17.379079818725586
    10. '＝' → logprob: -17.629079818725586

Token 425: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.00023119196703191847
    2. ' On' → logprob: -8.37523078918457
    3. '	On' → logprob: -15.62523078918457
    4. 'on' → logprob: -15.87523078918457
    5. '   ' → logprob: -15.87523078918457
    6. '           ' → logprob: -16.50023078918457
    7. '_on' → logprob: -16.87523078918457
    8. '_On' → logprob: -17.12523078918457
    9. '       ' → logprob: -17.37523078918457
    10. ' on' → logprob: -17.37523078918457

Token 426: 'etime' (ID: 7359)
  Prédit: 'etime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etime' → logprob: -0.0005692371050827205
    2. 'time' → logprob: -7.6255693435668945
    3. 'e' → logprob: -10.250569343566895
    4. 'etimes' → logprob: -10.625569343566895
    5. 'On' → logprob: -11.625569343566895
    6. 'ETIME' → logprob: -13.125569343566895
    7. '```' → logprob: -13.250569343566895
    8. 'etype' → logprob: -13.250569343566895
    9. 'eme' → logprob: -13.625569343566895
    10. 'ertime' → logprob: -13.875569343566895

Token 427: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -9.372294698550832e-06
    2. 'colors' → logprob: -12.000009536743164
    3. '```' → logprob: -13.375009536743164
    4. '_c' → logprob: -14.125009536743164
    5. 'Colors' → logprob: -16.000009536743164
    6. '_' → logprob: -16.125009536743164
    7. '_tokens' → logprob: -16.625009536743164
    8. '_color' → logprob: -16.875009536743164
    9. '           ' → logprob: -17.000009536743164
    10. 's' → logprob: -17.250009536743164

Token 428: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -6.153795766294934e-06
    2. 'color' → logprob: -12.250005722045898
    3. '[' → logprob: -15.375005722045898
    4. '=color' → logprob: -15.625005722045898
    5. ',color' → logprob: -15.750005722045898
    6. ' color' → logprob: -15.875005722045898
    7. '(color' → logprob: -16.0000057220459
    8. '	color' → logprob: -16.5000057220459
    9. ';color' → logprob: -16.6250057220459
    10. '[
' → logprob: -16.7500057220459

Token 429: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008437863551080227
    2. ' ]' → logprob: -5.258437633514404
    3. '       ' → logprob: -7.008437633514404
    4. ')' → logprob: -7.383437633514404
    5. '<|end|>' → logprob: -7.633437633514404
    6. '[color' → logprob: -8.133438110351562
    7. '[idx' → logprob: -8.633438110351562
    8. ']+' → logprob: -8.758438110351562
    9. '   ' → logprob: -9.258438110351562
    10. '           ' → logprob: -9.258438110351562

Token 430: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9869955778121948
    2. '           ' → logprob: -0.9869955778121948
    3. '<|end|>' → logprob: -1.7369955778121948
    4. '   ' → logprob: -2.9869956970214844
    5. '```' → logprob: -4.861995697021484
    6. '    
' → logprob: -5.861995697021484
    7. '        
' → logprob: -5.986995697021484
    8. '            
' → logprob: -6.111995697021484
    9. '    ' → logprob: -6.486995697021484
    10. '\' → logprob: -6.486995697021484

Token 431: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' (adapté à ' On') → logprob: -0.25335654616355896
    2. '           ' → logprob: -1.5033565759658813
    3. ' On' → logprob: -7.378356456756592
    4. '       ' → logprob: -7.628356456756592
    5. '   ' → logprob: -8.37835693359375
    6. '               ' → logprob: -10.50335693359375
    7. '	On' → logprob: -10.62835693359375
    8. '                   ' → logprob: -11.37835693359375
    9. '```' → logprob: -11.62835693359375
    10. '
' → logprob: -13.25335693359375

Token 432: 'etime' (ID: 7359)
  Prédit: 'etime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etime' → logprob: -0.00011689399980241433
    2. 'time' → logprob: -9.375117301940918
    3. 'etimes' → logprob: -11.125117301940918
    4. 'e' → logprob: -12.500117301940918
    5. 'ETIME' → logprob: -12.500117301940918
    6. 'ertime' → logprob: -13.000117301940918
    7. 'one' → logprob: -13.375117301940918
    8. 'ntime' → logprob: -14.000117301940918
    9. 'timeout' → logprob: -14.375117301940918
    10. 'itime' → logprob: -14.375117301940918

Token 433: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -1.8624639324116288e-06
    2. 'colors' → logprob: -14.625001907348633
    3. '```' → logprob: -15.125001907348633
    4. 'Colors' → logprob: -15.375001907348633
    5. '_tokens' → logprob: -15.500001907348633
    6. '_c' → logprob: -15.875001907348633
    7. '_' → logprob: -16.000001907348633
    8. '                   ' → logprob: -17.000001907348633
    9. '                       ' → logprob: -17.125001907348633
    10. '               ' → logprob: -17.250001907348633

Token 434: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -1.1279553291387856e-05
    2. '[idx' → logprob: -11.625011444091797
    3. '=color' → logprob: -14.125011444091797
    4. '[' → logprob: -14.250011444091797
    5. 'color' → logprob: -15.375011444091797
    6. '[col' → logprob: -15.625011444091797
    7. '[token' → logprob: -16.375011444091797
    8. '[size' → logprob: -16.375011444091797
    9. '\[' → logprob: -17.000011444091797
    10. '```' → logprob: -17.375011444091797

Token 435: ']' (ID: 60)
  Prédit: '[color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -0.0024687631521373987
    2. '[idx' → logprob: -6.877468585968018
    3. ']' → logprob: -7.377468585968018
    4. '[' → logprob: -7.877468585968018
    5. '=color' → logprob: -8.377469062805176
    6. '=' → logprob: -9.877469062805176
    7. '][' → logprob: -10.627469062805176
    8. ']=' → logprob: -11.002469062805176
    9. '[
' → logprob: -11.252469062805176
    10. ')' → logprob: -11.377469062805176

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005617309361696243
    2. '[idx' → logprob: -7.750561714172363
    3. ' =' → logprob: -9.000561714172363
    4. '=
' → logprob: -12.750561714172363
    5. '=color' → logprob: -13.375561714172363
    6. 'idx' → logprob: -13.500561714172363
    7. '[' → logprob: -14.250561714172363
    8. '=

' → logprob: -14.750561714172363
    9. '[color' → logprob: -15.625561714172363
    10. '.=' → logprob: -16.00056266784668

Token 437: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.56102097814437e-05
    2. ' idx' → logprob: -10.000045776367188
    3. '[idx' → logprob: -16.500045776367188
    4. '	idx' → logprob: -17.750045776367188
    5. '(idx' → logprob: -18.625045776367188
    6. '   ' → logprob: -21.125045776367188
    7. '_idx' → logprob: -22.000045776367188
    8. '.idx' → logprob: -22.750045776367188
    9. 'Idx' → logprob: -24.000045776367188
    10. 'index' → logprob: -24.125045776367188

Token 438: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023669812828302383
    2. '<|end|>' → logprob: -4.898669719696045
    3. '    
' → logprob: -5.023669719696045
    4. '
' → logprob: -5.273669719696045
    5. '  
' → logprob: -7.023669719696045
    6. ' 
' → logprob: -7.148669719696045
    7. '       ' → logprob: -7.523669719696045
    8. ')' → logprob: -7.523669719696045
    9. '\' → logprob: -8.648670196533203
    10. '\n' → logprob: -8.773670196533203

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2802085876464844
    2. 'dp' → logprob: -1.5302085876464844
    3. 'DP' → logprob: -4.530208587646484
    4. '```' → logprob: -4.530208587646484
    5. '
' → logprob: -5.280208587646484
    6. '    
' → logprob: -7.655208587646484
    7. '``' → logprob: -8.405208587646484
    8. ' dp' → logprob: -8.780208587646484
    9. '_dp' → logprob: -9.155208587646484
    10. '\' → logprob: -9.780208587646484

Token 440: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23255249857902527
    2. '   ' → logprob: -1.9825525283813477
    3. 'DP' → logprob: -2.7325525283813477
    4. 'Dp' → logprob: -6.607552528381348
    5. '#' (adapté à ' #') → logprob: -6.857552528381348
    6. '```' → logprob: -7.482552528381348
    7. 'from' → logprob: -7.857552528381348
    8. ' dp' → logprob: -8.607552528381348
    9. 'import' → logprob: -8.732552528381348
    10. 'f' → logprob: -9.107552528381348

Token 441: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00860145129263401
    2. 'DP' → logprob: -5.133601665496826
    3. 'from' → logprob: -7.133601665496826
    4. 'ans' → logprob: -7.383601665496826
    5. '#' → logprob: -8.133601188659668
    6. '   ' → logprob: -8.508601188659668
    7. 'import' → logprob: -8.633601188659668
    8. 'D' → logprob: -9.508601188659668
    9. 'Dp' → logprob: -9.758601188659668
    10. 'res' → logprob: -10.008601188659668

Token 442: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018544137477874756
    2. '=' → logprob: -4.2685441970825195
    3. 'dp' → logprob: -5.6435441970825195
    4. 'size' → logprob: -8.76854419708252
    5. '=[' → logprob: -8.89354419708252
    6. '_dp' → logprob: -8.89354419708252
    7. '   ' → logprob: -9.14354419708252
    8. '_' → logprob: -9.76854419708252
    9. '_size' → logprob: -10.01854419708252
    10. 'from' → logprob: -11.39354419708252

Token 443: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01038370095193386
    2. ' =' → logprob: -5.010383605957031
    3. ' ]' → logprob: -7.135383605957031
    4. '][' → logprob: -7.135383605957031
    5. ']=' → logprob: -7.385383605957031
    6. '   ' → logprob: -8.135383605957031
    7. '[' → logprob: -8.635383605957031
    8. '+' → logprob: -8.760383605957031
    9. '=' → logprob: -8.760383605957031
    10. ',' → logprob: -8.760383605957031

Token 444: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12701714038848877
    2. '[' → logprob: -2.252017021179199
    3. ' ' → logprob: -5.002017021179199
    4. '1' → logprob: -5.627017021179199
    5. '[i' → logprob: -6.877017021179199
    6. ' [' → logprob: -7.252017021179199
    7. '(' → logprob: -7.377017021179199
    8. 'dp' → logprob: -8.0020170211792
    9. '=' → logprob: -8.5020170211792
    10. '[int' → logprob: -9.3770170211792

Token 445: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38835838437080383
    2. ' =' → logprob: -2.2633583545684814
    3. '[i' → logprob: -2.6383583545684814
    4. ' of' → logprob: -2.6383583545684814
    5. '=' → logprob: -3.7633583545684814
    6. 'of' → logprob: -4.0133585929870605
    7. '[
' → logprob: -4.8883585929870605
    8. '   ' → logprob: -6.0133585929870605
    9. 'def' → logprob: -6.0133585929870605
    10. ']' → logprob: -6.1383585929870605

Token 446: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.011236440390348434
    2. '_' → logprob: -5.136236667633057
    3. 'ways' → logprob: -5.386236667633057
    4. ' i' → logprob: -8.011236190795898
    5. ' possible' → logprob: -9.386236190795898
    6. ')' → logprob: -10.011236190795898
    7. '   ' → logprob: -10.011236190795898
    8. ' =' → logprob: -10.011236190795898
    9. '[i' → logprob: -10.011236190795898
    10. '[' → logprob: -10.636236190795898

Token 447: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8216860294342041
    2. '   ' → logprob: -1.196686029434204
    3. '[i' → logprob: -1.696686029434204
    4. '=' → logprob: -3.321686029434204
    5. ' to' → logprob: -3.946686029434204
    6. '[' → logprob: -5.571685791015625
    7. 'dp' → logprob: -5.571685791015625
    8. '_dp' → logprob: -5.696685791015625
    9. ')' → logprob: -6.321685791015625
    10. ' at' → logprob: -6.446685791015625

Token 448: ' arrange' (ID: 36281)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.005873332731425762
    2. ' arrange' → logprob: -6.255873203277588
    3. 'compute' → logprob: -6.380873203277588
    4. 'dp' → logprob: -7.380873203277588
    5. 'calculate' → logprob: -7.755873203277588
    6. 'i' → logprob: -8.005873680114746
    7. 'solve' → logprob: -8.505873680114746
    8. 'reach' → logprob: -8.880873680114746
    9. 'build' → logprob: -9.380873680114746
    10. 'combine' → logprob: -9.380873680114746

Token 449: ' the' (ID: 290)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18867440521717072
    2. '[i' → logprob: -2.4386744499206543
    3. '   ' → logprob: -3.4386744499206543
    4. '=' → logprob: -4.188674449920654
    5. '[' → logprob: -4.813674449920654
    6. 'dp' → logprob: -5.313674449920654
    7. ' ways' → logprob: -5.313674449920654
    8. ' i' → logprob: -5.688674449920654
    9. ' for' → logprob: -6.188674449920654
    10. ' [' → logprob: -6.313674449920654

Token 450: ' first' (ID: 1577)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.9591662883758545
    2. 'i' → logprob: -1.3341662883758545
    3. ' i' → logprob: -1.5841662883758545
    4. ' sequence' → logprob: -2.9591662883758545
    5. ' sequences' → logprob: -3.9591662883758545
    6. ' ways' → logprob: -4.459166526794434
    7. ' subse' → logprob: -4.584166526794434
    8. 'se' → logprob: -4.709166526794434
    9. 'ways' → logprob: -4.709166526794434
    10. 'elements' → logprob: -5.084166526794434

Token 451: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12715961039066315
    2. ' i' → logprob: -2.127159595489502
    3. '_i' → logprob: -9.75216007232666
    4. '`' → logprob: -10.12716007232666
    5. '[i' → logprob: -10.12716007232666
    6. '
' → logprob: -10.25216007232666
    7. '```' → logprob: -10.87716007232666
    8. '   ' → logprob: -11.12716007232666
    9. ' ' → logprob: -12.50216007232666
    10. ')' → logprob: -12.75216007232666

Token 452: ' elements' (ID: 8632)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5382589101791382
    2. '_' → logprob: -1.2882589101791382
    3. ' elements' → logprob: -3.4132590293884277
    4. ' +' → logprob: -3.7882590293884277
    5. '[i' → logprob: -3.9132590293884277
    6. 'elements' → logprob: -4.413259029388428
    7. '
' → logprob: -5.413259029388428
    8. '   ' → logprob: -5.413259029388428
    9. 'items' → logprob: -5.413259029388428
    10. 'tokens' → logprob: -5.663259029388428

Token 453: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02051514759659767
    2. '=' → logprob: -4.020514965057373
    3. '   ' → logprob: -6.770514965057373
    4. 'dp' → logprob: -7.270514965057373
    5. '[' → logprob: -9.145515441894531
    6. ',' → logprob: -9.395515441894531
    7. '_dp' → logprob: -9.520515441894531
    8. 'DP' → logprob: -9.895515441894531
    9. '=[' → logprob: -10.395515441894531
    10. ' dp' → logprob: -10.895515441894531

Token 454: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1068015843629837
    2. '   ' → logprob: -2.3568015098571777
    3. '=' → logprob: -5.981801509857178
    4. '[' → logprob: -6.731801509857178
    5. 'dp' → logprob: -7.106801509857178
    6. '
' → logprob: -7.606801509857178
    7. ',' → logprob: -7.731801509857178
    8. '```' → logprob: -8.481801986694336
    9. '_dp' → logprob: -8.606801986694336
    10. 'DP' → logprob: -8.606801986694336

Token 455: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.09634383022785187
    2. 'dp' → logprob: -2.971343755722046
    3. 'D' → logprob: -3.971343755722046
    4. ' DP' → logprob: -4.471343994140625
    5. '   ' → logprob: -5.221343994140625
    6. ' dp' → logprob: -6.096343994140625
    7. '[' → logprob: -7.471343994140625
    8. ' =' → logprob: -7.471343994140625
    9. 'Dp' → logprob: -7.471343994140625
    10. '_dp' → logprob: -8.471343994140625

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387835830450058
    2. '=' → logprob: -1.1378358602523804
    3. '[' → logprob: -7.01283597946167
    4. '=[' → logprob: -9.887835502624512
    5. '[i' → logprob: -12.887835502624512
    6. '   ' → logprob: -13.137835502624512
    7. ' =[' → logprob: -13.137835502624512
    8. '```' → logprob: -13.262835502624512
    9. ' ' → logprob: -13.637835502624512
    10. ' [' → logprob: -13.887835502624512

Token 457: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001171056181192398
    2. ' [' → logprob: -6.751171112060547
    3. '[-' → logprob: -14.251171112060547
    4. '[i' → logprob: -16.501171112060547
    5. '[N' → logprob: -16.626171112060547
    6. '   ' → logprob: -17.001171112060547
    7. '[int' → logprob: -17.626171112060547
    8. '1' → logprob: -17.876171112060547
    9. '[len' → logprob: -18.376171112060547
    10. '0' → logprob: -18.751171112060547

Token 458: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141489803791046
    2. '0' → logprob: -1.701414942741394
    3. '[' → logprob: -14.076415061950684
    4. '(' → logprob: -15.201415061950684
    5. ' ' → logprob: -15.576415061950684
    6. ']' → logprob: -16.076414108276367
    7. '```' → logprob: -16.201414108276367
    8. '{' → logprob: -16.576414108276367
    9. '
' → logprob: -17.951414108276367
    10. '   ' → logprob: -17.951414108276367

Token 459: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008552164770662785
    2. ',' → logprob: -5.258552074432373
    3. ')' → logprob: -6.883552074432373
    4. ' ]' → logprob: -7.008552074432373
    5. '   ' → logprob: -7.633552074432373
    6. '<|end|>' → logprob: -8.008552551269531
    7. '<|end|>' → logprob: -9.008552551269531
    8. ']*(' → logprob: -9.258552551269531
    9. ']+' → logprob: -10.258552551269531
    10. ' for' → logprob: -10.258552551269531

Token 460: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0609469413757324
    2. '   ' → logprob: -1.1859469413757324
    3. ']' → logprob: -2.3109469413757324
    4. ' +' → logprob: -2.5609469413757324
    5. '[' → logprob: -2.9359469413757324
    6. '<|end|>' → logprob: -3.3109469413757324
    7. '+' → logprob: -4.185946941375732
    8. ' *' → logprob: -4.435946941375732
    9. ' for' → logprob: -4.560946941375732
    10. ')' → logprob: -4.685946941375732

Token 461: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.984787902794778e-05
    2. '(' → logprob: -9.500100135803223
    3. 'N' → logprob: -11.750100135803223
    4. ' (' → logprob: -12.125100135803223
    5. '(n' → logprob: -12.500100135803223
    6. '(max' → logprob: -12.500100135803223
    7. '(len' → logprob: -13.500100135803223
    8. '   ' → logprob: -14.000100135803223
    9. '((' → logprob: -14.875100135803223
    10. '0' → logprob: -15.500100135803223

Token 462: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.13388703338569e-06
    2. '(N' → logprob: -12.375009536743164
    3. '   ' → logprob: -13.000009536743164
    4. 'len' → logprob: -13.250009536743164
    5. ' N' → logprob: -14.250009536743164
    6. '(' → logprob: -17.125009536743164
    7. '
' → logprob: -17.500009536743164
    8. ' ' → logprob: -17.625009536743164
    9. '10' → logprob: -17.750009536743164
    10. '0' → logprob: -17.875009536743164

Token 463: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000786398712079972
    2. ' +' → logprob: -7.250786304473877
    3. ')' → logprob: -9.750786781311035
    4. '+
' → logprob: -11.750786781311035
    5. '   ' → logprob: -11.875786781311035
    6. ')
' → logprob: -13.000786781311035
    7. '+)' → logprob: -14.875786781311035
    8. '
' → logprob: -15.125786781311035
    9. '```' → logprob: -15.875786781311035
    10. '1' → logprob: -16.00078582763672

Token 464: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. '2' → logprob: -11.125019073486328
    3. ' ' → logprob: -12.375019073486328
    4. '   ' → logprob: -15.000019073486328
    5. '```' → logprob: -15.375019073486328
    6. '
' → logprob: -17.875019073486328
    7. '3' → logprob: -18.125019073486328
    8. '``' → logprob: -18.375019073486328
    9. '{' → logprob: -18.875019073486328
    10. '１' → logprob: -18.937519073486328

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013288103509694338
    2. '2' → logprob: -6.626328945159912
    3. ' ' → logprob: -13.626328468322754
    4. '3' → logprob: -14.501328468322754
    5. '10' → logprob: -15.001328468322754
    6. '```' → logprob: -15.251328468322754
    7. '   ' → logprob: -15.376328468322754
    8. '{' → logprob: -16.50132942199707
    9. '
' → logprob: -17.00132942199707
    10. '``' → logprob: -17.18882942199707

Token 466: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04869183152914047
    2. ')
' → logprob: -3.048691749572754
    3. '   ' → logprob: -9.673691749572754
    4. ')
' → logprob: -10.173691749572754
    5. '),' → logprob: -14.548691749572754
    6. ']' → logprob: -14.798691749572754
    7. ')

' → logprob: -14.798691749572754
    8. ' )' → logprob: -15.298691749572754
    9. ')`' → logprob: -15.423691749572754
    10. ')`
' → logprob: -15.548691749572754

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05562463030219078
    2. 'DP' → logprob: -2.9306247234344482
    3. ' DP' → logprob: -7.305624485015869
    4. '_DP' → logprob: -10.805624961853027
    5. '[' → logprob: -10.930624961853027
    6. '```' → logprob: -11.305624961853027
    7. '  ' → logprob: -11.930624961853027
    8. '    ' → logprob: -12.055624961853027
    9. ' ' → logprob: -12.930624961853027
    10. '    
' → logprob: -13.305624961853027

Token 468: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.00022570860164705664
    2. '   ' → logprob: -8.500226020812988
    3. '```' → logprob: -11.250226020812988
    4. ' DP' → logprob: -12.000226020812988
    5. '_DP' → logprob: -13.750226020812988
    6. '`' → logprob: -14.125226020812988
    7. '\' → logprob: -14.750226020812988
    8. '[' → logprob: -15.000226020812988
    9. '       ' → logprob: -15.625226020812988
    10. 'i' → logprob: -16.250225067138672

Token 469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.1557283111615106e-05
    2. '=' → logprob: -11.125041961669922
    3. '[i' → logprob: -12.125041961669922
    4. ' [' → logprob: -12.375041961669922
    5. ' =' → logprob: -12.500041961669922
    6. '```' → logprob: -12.625041961669922
    7. '[
' → logprob: -12.875041961669922
    8. '   ' → logprob: -12.875041961669922
    9. '\[' → logprob: -14.000041961669922
    10. '=[' → logprob: -14.125041961669922

Token 470: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -12.625003814697266
    3. '۰' → logprob: -18.750003814697266
    4. '```' → logprob: -19.000003814697266
    5. '-' → logprob: -19.500003814697266
    6. '
' → logprob: -19.625003814697266
    7. ' ' → logprob: -20.125003814697266
    8. '０' → logprob: -21.125003814697266
    9. '[' → logprob: -21.187503814697266
    10. '   ' → logprob: -21.312503814697266

Token 471: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00466330349445343
    2. ']=' → logprob: -5.754663467407227
    3. ')' → logprob: -6.754663467407227
    4. '=' → logprob: -8.504663467407227
    5. ']+=' → logprob: -10.254663467407227
    6. ')]' → logprob: -10.879663467407227
    7. ')=' → logprob: -11.129663467407227
    8. '[' → logprob: -11.129663467407227
    9. ' ]' → logprob: -11.129663467407227
    10. ']
' → logprob: -12.004663467407227

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614808320999146
    2. ' =' → logprob: -4.758615016937256
    3. '[' → logprob: -15.883614540100098
    4. '=
' → logprob: -17.508615493774414
    5. '```' → logprob: -17.758615493774414
    6. '+=' → logprob: -18.008615493774414
    7. ')' → logprob: -18.383615493774414
    8. '＝' → logprob: -18.633615493774414
    9. '=}' → logprob: -18.633615493774414
    10. '<|end|>' → logprob: -18.883615493774414

Token 473: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -16.375
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.0
    6. '2' → logprob: -19.5
    7. '۱' → logprob: -19.6875
    8. '
' → logprob: -19.6875
    9. '[' → logprob: -20.25
    10. '{' → logprob: -20.4375

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.0
    3. '[' → logprob: -19.5
    4. '2' → logprob: -19.625
    5. '{' → logprob: -20.125
    6. '```' → logprob: -20.375
    7. ' ' → logprob: -21.125
    8. '
' → logprob: -21.5
    9. '

' → logprob: -21.625
    10. '۱' → logprob: -21.625

Token 475: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3180287480354309
    2. ' for' → logprob: -1.4430286884307861
    3. 'for' → logprob: -3.443028688430786
    4. '
' → logprob: -6.193028926849365
    5. '    
' → logprob: -7.193028926849365
    6. '```' → logprob: -7.568028926849365
    7. ' 
' → logprob: -7.943028926849365
    8. '	for' → logprob: -9.318028450012207
    9. '+' → logprob: -9.443028450012207
    10. '  
' → logprob: -9.943028450012207

Token 476: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9524581432342529
    2. ' for' → logprob: -1.202458143234253
    3. 'for' → logprob: -1.577458143234253
    4. '
' → logprob: -2.327458143234253
    5. '    
' → logprob: -5.202458381652832
    6. '```' → logprob: -6.952458381652832
    7. '  
' → logprob: -7.452458381652832
    8. ' 
' → logprob: -7.452458381652832
    9. '\n' → logprob: -7.827458381652832
    10. '   
' → logprob: -7.952458381652832

Token 477: ' Base' (ID: 8729)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4977990686893463
    2. 'for' → logprob: -1.122799038887024
    3. '   ' → logprob: -2.9977991580963135
    4. '0' → logprob: -5.372798919677734
    5. '```' → logprob: -5.372798919677734
    6. ')' → logprob: -5.872798919677734
    7. ' ' → logprob: -6.622798919677734
    8. '=' → logprob: -7.122798919677734
    9. ' =' → logprob: -7.747798919677734
    10. '\' → logprob: -7.997798919677734

Token 478: ' case' (ID: 1890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2877388000488281
    2. '[' → logprob: -2.287738800048828
    3. '_' → logprob: -2.537738800048828
    4. ')' → logprob: -3.912738800048828
    5. '```' → logprob: -4.162738800048828
    6. ' ' → logprob: -4.412738800048828
    7. '    ' → logprob: -5.912738800048828
    8. '  ' → logprob: -5.912738800048828
    9. '    
' → logprob: -6.412738800048828
    10. '`' → logprob: -6.537738800048828

Token 479: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2963654100894928
    2. ' for' → logprob: -1.5463653802871704
    3. 'for' → logprob: -3.29636549949646
    4. '
' → logprob: -6.046365261077881
    5. '    
' → logprob: -6.546365261077881
    6. '```' → logprob: -6.546365261077881
    7. ' 
' → logprob: -8.796365737915039
    8. '  
' → logprob: -8.921365737915039
    9. ')' → logprob: -9.046365737915039
    10. ' ' → logprob: -9.171365737915039

Token 480: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4676174223423004
    2. '   ' → logprob: -1.217617392539978
    3. 'for' → logprob: -3.3426175117492676
    4. '```' → logprob: -4.092617511749268
    5. '1' → logprob: -4.217617511749268
    6. '0' → logprob: -5.717617511749268
    7. 'DP' → logprob: -6.217617511749268
    8. ' ' → logprob: -6.842617511749268
    9. ' DP' → logprob: -6.967617511749268
    10. '    
' → logprob: -7.342617511749268

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4482271075248718
    2. 'for' → logprob: -1.3232271671295166
    3. '```' → logprob: -2.6982271671295166
    4. '0' → logprob: -4.0732269287109375
    5. 'DP' → logprob: -5.0732269287109375
    6. ' for' → logprob: -5.9482269287109375
    7. ')' → logprob: -7.0732269287109375
    8. 'dp' → logprob: -8.323226928710938
    9. '`' → logprob: -8.448226928710938
    10. '``' → logprob: -9.198226928710938

Token 482: ' way' (ID: 2006)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03468404337763786
    2. ' for' → logprob: -3.4096839427948
    3. 'for' → logprob: -7.034684181213379
    4. '    
' → logprob: -10.034684181213379
    5. '<|end|>' → logprob: -10.534684181213379
    6. '```' → logprob: -11.034684181213379
    7. '[' → logprob: -11.409684181213379
    8. ')' → logprob: -11.409684181213379
    9. ',' → logprob: -11.534684181213379
    10. '	for' → logprob: -11.909684181213379

Token 484: ' arrange' (ID: 36281)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0025108547415584326
    2. 'form' → logprob: -6.752511024475098
    3. '0' → logprob: -8.002511024475098
    4. 'choose' → logprob: -8.252511024475098
    5. ' arrange' → logprob: -8.252511024475098
    6. 'do' → logprob: -9.502511024475098
    7. 'build' → logprob: -9.627511024475098
    8. 'construct' → logprob: -9.752511024475098
    9. 'assemble' → logprob: -10.252511024475098
    10. 'solve' → logprob: -10.502511024475098

Token 485: ' zero' (ID: 12421)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04625030234456062
    2. ' for' → logprob: -3.296250343322754
    3. 'for' → logprob: -5.796250343322754
    4. '<|end|>' → logprob: -6.546250343322754
    5. '```' → logprob: -7.046250343322754
    6. ')' → logprob: -7.546250343322754
    7. ',' → logprob: -7.546250343322754
    8. '[' → logprob: -7.671250343322754
    9. ' ' → logprob: -8.046250343322754
    10. '  ' → logprob: -8.796250343322754

Token 486: ' elements' (ID: 8632)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.8965556025505066
    2. 'DP' → logprob: -1.2715556621551514
    3. '   ' → logprob: -1.8965556621551514
    4. ' element' → logprob: -3.1465556621551514
    5. 'elements' → logprob: -3.1465556621551514
    6. ' elements' → logprob: -3.3965556621551514
    7. ' DP' → logprob: -3.8965556621551514
    8. ')' → logprob: -5.396555423736572
    9. '`' → logprob: -5.896555423736572
    10. 'token' → logprob: -6.021555423736572

Token 487: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05395370349287987
    2. ' for' → logprob: -3.0539536476135254
    3. 'for' → logprob: -6.303953647613525
    4. '```' → logprob: -7.053953647613525
    5. '    
' → logprob: -7.303953647613525
    6. ')' → logprob: -7.928953647613525
    7. '<|end|>' → logprob: -8.303954124450684
    8. ' ' → logprob: -8.303954124450684
    9. ' 
' → logprob: -8.678954124450684
    10. ',' → logprob: -9.053954124450684

Token 488: 'empty' (ID: 6857)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011608157074078918
    2. ' )' → logprob: -7.376160621643066
    3. '0' → logprob: -8.001160621643066
    4. 'def' → logprob: -9.376160621643066
    5. '1' → logprob: -10.126160621643066
    6. 'empty' → logprob: -10.501160621643066
    7. ')
' → logprob: -10.876160621643066
    8. '```' → logprob: -11.376160621643066
    9. ').' → logprob: -12.876160621643066
    10. 'the' → logprob: -13.376160621643066

Token 489: ' sequence' (ID: 16281)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7829578518867493
    2. 'sequence' → logprob: -1.1579577922821045
    3. ' sequence' → logprob: -1.5329577922821045
    4. ' list' → logprob: -5.157958030700684
    5. ' )' → logprob: -6.157958030700684
    6. 'string' → logprob: -6.282958030700684
    7. ')
' → logprob: -7.032958030700684
    8. 'array' → logprob: -7.282958030700684
    9. 'list' → logprob: -7.532958030700684
    10. ' array' → logprob: -7.657958030700684

Token 490: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05762072652578354
    2. '   ' → logprob: -2.9326207637786865
    3. '
' → logprob: -6.307620525360107
    4. ')
' → logprob: -7.557620525360107
    5. '    
' → logprob: -8.682621002197266
    6. '  
' → logprob: -9.682621002197266
    7. '<|end|>' → logprob: -10.432621002197266
    8. ',' → logprob: -10.682621002197266
    9. '```' → logprob: -10.682621002197266
    10. ' )' → logprob: -11.432621002197266

Token 491: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2124677449464798
    2. '   ' → logprob: -1.7124677896499634
    3. ' for' → logprob: -4.587467670440674
    4. '```' → logprob: -7.212467670440674
    5. 'DP' → logprob: -10.212468147277832
    6. '	for' → logprob: -11.462468147277832
    7. 'For' → logprob: -11.462468147277832
    8. '``' → logprob: -12.087468147277832
    9. 'i' → logprob: -12.212468147277832
    10. 'dp' → logprob: -12.837468147277832

Token 492: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003190905088558793
    2. '   ' → logprob: -6.253190994262695
    3. ' for' → logprob: -6.753190994262695
    4. 'i' → logprob: -9.753190994262695
    5. '```' → logprob: -11.503190994262695
    6. 'prefix' → logprob: -11.753190994262695
    7. '1' → logprob: -11.878190994262695
    8. 'prev' → logprob: -12.753190994262695
    9. 'dp' → logprob: -13.753190994262695
    10. 'For' → logprob: -14.253190994262695

Token 493: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011892797192558646
    2. ' i' → logprob: -6.751189231872559
    3. '_i' → logprob: -12.001189231872559
    4. 'idx' → logprob: -12.251189231872559
    5. '   ' → logprob: -13.626189231872559
    6. '```' → logprob: -13.876189231872559
    7. 'I' → logprob: -13.876189231872559
    8. 'x' → logprob: -14.001189231872559
    9. 'pos' → logprob: -14.251189231872559
    10. '(i' → logprob: -14.251189231872559

Token 494: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023280074819922447
    2. 'in' → logprob: -3.773280143737793
    3. '	in' → logprob: -11.648280143737793
    4. '   ' → logprob: -11.898280143737793
    5. ',' → logprob: -12.398280143737793
    6. '_in' → logprob: -12.523280143737793
    7. '1' → logprob: -12.898280143737793
    8. ' ' → logprob: -13.148280143737793
    9. '```' → logprob: -13.523280143737793
    10. '+' → logprob: -13.773280143737793

Token 495: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.17463085055351257
    2. 'num' → logprob: -2.174630880355835
    3. 'x' → logprob: -3.299630880355835
    4. 'c' → logprob: -5.174630641937256
    5. 'val' → logprob: -5.799630641937256
    6. 'value' → logprob: -7.924630641937256
    7. 'col' → logprob: -8.924631118774414
    8. ' color' → logprob: -9.049631118774414
    9. 'no' → logprob: -9.174631118774414
    10. 'v' → logprob: -9.424631118774414

Token 496: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009850412607192993
    2. 'in' → logprob: -4.63485050201416
    3. '   ' → logprob: -10.38485050201416
    4. ' ' → logprob: -11.25985050201416
    5. ',' → logprob: -11.38485050201416
    6. '	in' → logprob: -11.63485050201416
    7. '_in' → logprob: -11.75985050201416
    8. ')' → logprob: -11.88485050201416
    9. '    ' → logprob: -12.13485050201416
    10. '```' → logprob: -13.13485050201416

Token 497: ' enumerate' (ID: 29671)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.5392984747886658
    2. 'enumer' → logprob: -1.0392985343933105
    3. ' enumerate' → logprob: -3.4142985343933105
    4. 'in' → logprob: -3.7892985343933105
    5. ' No' → logprob: -5.1642985343933105
    6. ' in' → logprob: -6.4142985343933105
    7. ' ' → logprob: -9.289298057556152
    8. '_no' → logprob: -10.664298057556152
    9. '_No' → logprob: -11.039298057556152
    10. '  ' → logprob: -11.164298057556152

Token 498: '(No' (ID: 136998)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.12089218944311142
    2. '(No' → logprob: -2.620892286300659
    3. ' No' → logprob: -3.245892286300659
    4. '(' → logprob: -6.37089204788208
    5. ' (' → logprob: -8.870892524719238
    6. '   ' → logprob: -9.370892524719238
    7. ')' → logprob: -9.495892524719238
    8. '_No' → logprob: -9.995892524719238
    9. ' ' → logprob: -10.745892524719238
    10. '(no' → logprob: -10.995892524719238

Token 499: 'Double' (ID: 10948)
  Prédit: 'Double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Double' → logprob: -8.41866585687967e-06
    2. 'D' → logprob: -12.125008583068848
    3. 'Dou' → logprob: -13.750008583068848
    4. 'ouble' → logprob: -13.875008583068848
    5. 'No' → logprob: -14.750008583068848
    6. '_double' → logprob: -15.625008583068848
    7. 'double' → logprob: -16.00000762939453
    8. 'Do' → logprob: -16.50000762939453
    9. 'Duplicate' → logprob: -16.87500762939453
    10. '_D' → logprob: -17.62500762939453

Token 500: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043044522404670715
    2. '):
' → logprob: -3.1680445671081543
    3. ':' → logprob: -11.293044090270996
    4. '   ' → logprob: -11.668044090270996
    5. '):
' → logprob: -11.918044090270996
    6. ')' → logprob: -12.043044090270996
    7. ']:' → logprob: -12.418044090270996
    8. ',' → logprob: -12.418044090270996
    9. '):

' → logprob: -14.168044090270996
    10. ' ):' → logprob: -14.168044090270996

Token 501: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3014179766178131
    2. '       ' → logprob: -1.4264179468154907
    3. '    
' → logprob: -4.801417827606201
    4. '        
' → logprob: -5.176417827606201
    5. ' 
' → logprob: -6.301417827606201
    6. '    ' → logprob: -7.176417827606201
    7. ':' → logprob: -7.301417827606201
    8. '[' → logprob: -7.301417827606201
    9. '     
' → logprob: -7.551417827606201
    10. ' ' → logprob: -8.30141830444336

Token 502: ' if' (ID: 538)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.06827235221862793
    2. '   ' → logprob: -3.068272352218628
    3. ' DP' → logprob: -4.068272590637207
    4. 'dp' → logprob: -6.193272590637207
    5. 'if' (adapté à ' if') → logprob: -9.068272590637207
    6. ' if' → logprob: -10.193272590637207
    7. '```' → logprob: -10.443272590637207
    8. ' dp' → logprob: -10.818272590637207
    9. 'for' → logprob: -10.818272590637207
    10. '#' → logprob: -10.943272590637207

Token 503: ' For' (ID: 2214)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.5607343316078186
    2. 'idx' → logprob: -1.6857342720031738
    3. 'For' → logprob: -1.8107342720031738
    4. 'DP' → logprob: -2.810734272003174
    5. ' color' → logprob: -4.560734272003174
    6. ' idx' → logprob: -5.435734272003174
    7. 'No' → logprob: -6.560734272003174
    8. 'On' → logprob: -7.310734272003174
    9. 'Color' → logprob: -7.560734272003174
    10. '   ' → logprob: -7.560734272003174

Token 504: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -9.901345038088039e-05
    2. 'idx' → logprob: -9.500099182128906
    3. 'I' → logprob: -11.250099182128906
    4. '_' → logprob: -12.625099182128906
    5. '_idx' → logprob: -13.000099182128906
    6. 'For' → logprob: -13.250099182128906
    7. 'Ind' → logprob: -14.250099182128906
    8. 'Ix' → logprob: -15.000099182128906
    9. 'i' → logprob: -15.125099182128906
    10. '```' → logprob: -15.125099182128906

Token 505: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -9.968312951968983e-06
    2. '	Last' → logprob: -12.875009536743164
    3. '_Last' → logprob: -12.875009536743164
    4. '_last' → logprob: -13.500009536743164
    5. '[idx' → logprob: -13.500009536743164
    6. '[' → logprob: -14.625009536743164
    7. '[i' → logprob: -14.750009536743164
    8. ' Last' → logprob: -15.250009536743164
    9. 'last' → logprob: -15.750009536743164
    10. 'For' → logprob: -15.875009536743164

Token 506: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -6.0868278524139896e-05
    2. '_num' → logprob: -10.25006103515625
    3. 'num' → logprob: -11.37506103515625
    4. 'Nums' → logprob: -11.87506103515625
    5. 'color' → logprob: -12.62506103515625
    6. '[color' → logprob: -14.12506103515625
    7. 'Last' → logprob: -14.50006103515625
    8. 'NUM' → logprob: -14.50006103515625
    9. ' Num' → logprob: -15.12506103515625
    10. '_Num' → logprob: -15.37506103515625

Token 507: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001454955490771681
    2. '[' → logprob: -8.87514591217041
    3. 'idx' → logprob: -14.00014591217041
    4. '[color' → logprob: -14.00014591217041
    5. '[col' → logprob: -14.75014591217041
    6. '[val' → logprob: -14.75014591217041
    7. ' [' → logprob: -14.75014591217041
    8. '[token' → logprob: -15.12514591217041
    9. '(idx' → logprob: -15.25014591217041
    10. '[index' → logprob: -15.37514591217041

Token 508: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17450672388076782
    2. ')' → logprob: -2.299506664276123
    3. ']==' → logprob: -3.674506664276123
    4. '==' → logprob: -3.924506664276123
    5. ' ==' → logprob: -5.299506664276123
    6. '[' → logprob: -5.799506664276123
    7. ')==' → logprob: -6.799506664276123
    8. '!=' → logprob: -6.924506664276123
    9. '==-' → logprob: -7.174506664276123
    10. ']!=' → logprob: -7.174506664276123

Token 509: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7439062595367432
    2. ' ==' → logprob: -1.1189062595367432
    3. ' !=' → logprob: -2.368906259536743
    4. '!=' → logprob: -2.743906259536743
    5. '==-' → logprob: -3.993906259536743
    6. '[' → logprob: -4.493906021118164
    7. ')' → logprob: -5.743906021118164
    8. '!=-' → logprob: -6.118906021118164
    9. '>' → logprob: -6.368906021118164
    10. '>=' → logprob: -7.243906021118164

Token 510: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.664371848164592e-05
    2. 'idx' → logprob: -11.500016212463379
    3. ' -' → logprob: -12.000016212463379
    4. '   ' → logprob: -15.875016212463379
    5. 'color' → logprob: -16.625017166137695
    6. '-index' → logprob: -17.750017166137695
    7. '-color' → logprob: -18.250017166137695
    8. '0' → logprob: -18.875017166137695
    9. ' idx' → logprob: -19.125017166137695
    10. '```' → logprob: -19.500017166137695

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '2' → logprob: -12.750004768371582
    3. '-' → logprob: -14.312504768371582
    4. '```' → logprob: -15.125004768371582
    5. 'idx' → logprob: -15.687504768371582
    6. '0' → logprob: -16.187503814697266
    7. ' ' → logprob: -16.375003814697266
    8. ' -' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '`' → logprob: -18.000003814697266

Token 512: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31411707401275635
    2. ':
' → logprob: -1.3141170740127563
    3. ' or' → logprob: -7.939116954803467
    4. '       ' → logprob: -8.314117431640625
    5. '):
' → logprob: -9.314117431640625
    6. '           ' → logprob: -9.689117431640625
    7. ' and' → logprob: -10.439117431640625
    8. '[' → logprob: -11.314117431640625
    9. '=' → logprob: -11.564117431640625
    10. ')' → logprob: -11.564117431640625

Token 513: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05279282107949257
    2. ':' → logprob: -3.42779278755188
    3. ':
' → logprob: -4.677793025970459
    4. '+' → logprob: -6.177793025970459
    5. '           ' → logprob: -6.177793025970459
    6. '```' → logprob: -6.177793025970459
    7. '[' → logprob: -7.177793025970459
    8. '   ' → logprob: -7.427793025970459
    9. ' +' → logprob: -7.802793025970459
    10. '<|end|>' → logprob: -7.927793025970459

Token 514: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.9799070954322815
    2. ' DP' → logprob: -1.1049070358276367
    3. '       ' → logprob: -1.4799070358276367
    4. '
' → logprob: -3.1049070358276367
    5. '   ' → logprob: -5.479907035827637
    6. '           ' → logprob: -5.854907035827637
    7. ' 
' → logprob: -6.104907035827637
    8. '```' → logprob: -6.354907035827637
    9. '        
' → logprob: -6.479907035827637
    10. '_DP' → logprob: -6.479907035827637

Token 515: ' This' (ID: 1328)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.07232554256916046
    2. ' DP' → logprob: -2.6973254680633545
    3. '   ' → logprob: -6.322325706481934
    4. 'D' → logprob: -8.822325706481934
    5. '       ' → logprob: -9.197325706481934
    6. 'dp' → logprob: -9.447325706481934
    7. '```' → logprob: -9.697325706481934
    8. 'for' → logprob: -10.072325706481934
    9. 'Dp' → logprob: -10.572325706481934
    10. 's' → logprob: -10.947325706481934

Token 516: ' color' (ID: 3089)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.796546220779419
    2. '   ' → logprob: -1.796546220779419
    3. 'DP' → logprob: -1.796546220779419
    4. ' is' → logprob: -2.546546220779419
    5. '       ' → logprob: -2.921546220779419
    6. ' +=' → logprob: -3.296546220779419
    7. '```' → logprob: -3.296546220779419
    8. '[' → logprob: -3.421546220779419
    9. 'token' → logprob: -3.671546220779419
    10. '
' → logprob: -3.796546220779419

Token 517: ' hasn't' (ID: 39519)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8273681402206421
    2. ' =' → logprob: -1.577368140220642
    3. ' is' → logprob: -2.5773682594299316
    4. ' +=' → logprob: -3.2023682594299316
    5. ':' → logprob: -3.3273682594299316
    6. '+=' → logprob: -3.8273682594299316
    7. ' continues' → logprob: -3.8273682594299316
    8. '   ' → logprob: -3.9523682594299316
    9. '```' → logprob: -3.9523682594299316
    10. ' DP' → logprob: -4.327368259429932

Token 518: ' appeared' (ID: 18030)
  Prédit: ' appeared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appeared' → logprob: -0.47430819272994995
    2. ' been' → logprob: -1.0993082523345947
    3. 'been' → logprob: -3.2243082523345947
    4. '```' → logprob: -6.224308013916016
    5. 'appe' → logprob: -6.349308013916016
    6. 'occur' → logprob: -8.099308013916016
    7. '   ' → logprob: -8.849308013916016
    8. 'previous' → logprob: -9.099308013916016
    9. 'appear' → logprob: -9.474308013916016
    10. ' occurred' → logprob: -9.599308013916016

Token 519: ' before' (ID: 2254)
  Prédit: ' before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.8599387407302856
    2. '       ' → logprob: -1.2349387407302856
    3. ' yet' → logprob: -2.359938621520996
    4. 'before' → logprob: -2.484938621520996
    5. 'previous' → logprob: -3.359938621520996
    6. '   ' → logprob: -3.734938621520996
    7. ' previously' → logprob: -4.109938621520996
    8. ':' → logprob: -4.609938621520996
    9. ' ' → logprob: -5.609938621520996
    10. '    ' → logprob: -5.859938621520996

Token 520: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37368378043174744
    2. ':
' → logprob: -1.2486838102340698
    3. '       ' → logprob: -3.9986836910247803
    4. '[' → logprob: -5.998683929443359
    5. '   ' → logprob: -6.373683929443359
    6. '```' → logprob: -7.123683929443359
    7. ',' → logprob: -7.248683929443359
    8. '           ' → logprob: -8.24868392944336
    9. '):
' → logprob: -8.87368392944336
    10. '+' → logprob: -9.87368392944336

Token 521: ' same' (ID: 2684)
  Prédit: ' DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' DP' → logprob: -0.8224086165428162
    2. '       ' → logprob: -0.9474086165428162
    3. 'DP' → logprob: -1.822408676147461
    4. '   ' → logprob: -5.322408676147461
    5. '```' → logprob: -5.697408676147461
    6. '_DP' → logprob: -7.072408676147461
    7. '        
' → logprob: -7.447408676147461
    8. '``' → logprob: -7.822408676147461
    9. '           ' → logprob: -8.197408676147461
    10. ' ' → logprob: -9.197408676147461

Token 522: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.245286464691162
    2. 'token' → logprob: -1.620286464691162
    3. '
' → logprob: -2.495286464691162
    4. 'DP' → logprob: -2.620286464691162
    5. '```' → logprob: -2.620286464691162
    6. '       ' → logprob: -3.245286464691162
    7. ' as' → logprob: -3.495286464691162
    8. ' line' → logprob: -3.620286464691162
    9. ' token' → logprob: -3.620286464691162
    10. 'for' → logprob: -3.745286464691162

Token 523: ' previous' (ID: 5880)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0070333778858184814
    2. ' DP' → logprob: -5.257033348083496
    3. '   ' → logprob: -6.382033348083496
    4. '```' → logprob: -9.882033348083496
    5. 'dp' → logprob: -11.757033348083496
    6. ' ' → logprob: -12.132033348083496
    7. '       ' → logprob: -12.257033348083496
    8. 'previous' → logprob: -12.382033348083496
    9. '_DP' → logprob: -12.632033348083496
    10. '2' → logprob: -12.632033348083496

Token 524: ' count' (ID: 3605)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.2163562923669815
    2. '[i' → logprob: -2.2163562774658203
    3. '[' → logprob: -3.0913562774658203
    4. ':' → logprob: -4.71635627746582
    5. '```' → logprob: -5.09135627746582
    6. 'DP' → logprob: -5.34135627746582
    7. ']' → logprob: -5.59135627746582
    8. '   ' → logprob: -5.71635627746582
    9. 'idx' → logprob: -6.09135627746582
    10. '+' → logprob: -6.71635627746582

Token 525: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7980706691741943
    2. '[' → logprob: -1.0480706691741943
    3. ':' → logprob: -2.1730706691741943
    4. ':
' → logprob: -3.0480706691741943
    5. '   ' → logprob: -4.798070907592773
    6. '[idx' → logprob: -5.673070907592773
    7. '
' → logprob: -5.798070907592773
    8. '[i' → logprob: -5.923070907592773
    9. ',' → logprob: -5.923070907592773
    10. '           ' → logprob: -6.173070907592773

Token 526: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061450498178601265
    2. ':' → logprob: -6.881145000457764
    3. '[' → logprob: -7.006145000457764
    4. '```' → logprob: -7.006145000457764
    5. '   ' → logprob: -7.256145000457764
    6. '           ' → logprob: -7.506145000457764
    7. ' +' → logprob: -7.506145000457764
    8. '+' → logprob: -7.631145000457764
    9. ' =' → logprob: -8.256145477294922
    10. ',' → logprob: -8.256145477294922

Token 527: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.3919486701488495
    2. ' DP' → logprob: -1.1419486999511719
    3. '   ' → logprob: -5.641948699951172
    4. '       ' → logprob: -6.641948699951172
    5. '_DP' → logprob: -9.391948699951172
    6. '```' → logprob: -10.141948699951172
    7. '    ' → logprob: -10.391948699951172
    8. '           ' → logprob: -10.516948699951172
    9. '``' → logprob: -11.641948699951172
    10. ' =' → logprob: -12.766948699951172

Token 528: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0009739940869621933
    2. '[' → logprob: -7.125974178314209
    3. '[i' → logprob: -9.50097370147705
    4. 'idx' → logprob: -9.50097370147705
    5. ' idx' → logprob: -12.62597370147705
    6. ' [' → logprob: -13.12597370147705
    7. '```' → logprob: -13.12597370147705
    8. '[
' → logprob: -13.37597370147705
    9. '[id' → logprob: -13.62597370147705
    10. '[index' → logprob: -13.87597370147705

Token 529: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17183394730091095
    2. ']' → logprob: -2.0468339920043945
    3. ' +' → logprob: -4.1718339920043945
    4. ']+' → logprob: -4.5468339920043945
    5. '-' → logprob: -6.1718339920043945
    6. ' ]' → logprob: -7.9218339920043945
    7. '[' → logprob: -9.921833992004395
    8. '   ' → logprob: -9.921833992004395
    9. ']+=' → logprob: -9.921833992004395
    10. '+]' → logprob: -10.171833992004395

Token 530: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -15.62500286102295
    4. '
' → logprob: -16.250001907348633
    5. '2' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '=' → logprob: -18.750001907348633
    8. ']' → logprob: -18.750001907348633
    9. '

' → logprob: -19.000001907348633
    10. '0' → logprob: -19.000001907348633

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -16.0
    4. '   ' → logprob: -18.0
    5. '2' → logprob: -18.125
    6. '
' → logprob: -18.25
    7. '=' → logprob: -18.75
    8. '0' → logprob: -19.125
    9. '１' → logprob: -19.25
    10. '۱' → logprob: -19.5

Token 532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09137631952762604
    2. '=' → logprob: -2.591376304626465
    3. ' =' → logprob: -4.716376304626465
    4. ']=' → logprob: -5.966376304626465
    5. ' ]' → logprob: -7.341376304626465
    6. ')' → logprob: -8.716376304626465
    7. ']+=' → logprob: -9.716376304626465
    8. ' +=' → logprob: -11.591376304626465
    9. '+=' → logprob: -11.966376304626465
    10. '[' → logprob: -12.591376304626465

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001931970240548253
    2. ' =' → logprob: -6.251932144165039
    3. '+=' → logprob: -12.751932144165039
    4. '=D' → logprob: -15.501932144165039
    5. ' +=' → logprob: -16.37693214416504
    6. '.=' → logprob: -17.00193214416504
    7. '   ' → logprob: -17.62693214416504
    8. '=int' → logprob: -17.75193214416504
    9. '[' → logprob: -18.25193214416504
    10. '=s' → logprob: -18.37693214416504

Token 534: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -9.77022064034827e-05
    2. ' DP' → logprob: -9.750097274780273
    3. '(' → logprob: -10.625097274780273
    4. '(D' → logprob: -11.250097274780273
    5. '   ' → logprob: -14.000097274780273
    6. '_DP' → logprob: -14.625097274780273
    7. ' (' → logprob: -15.250097274780273
    8. 'Dp' → logprob: -15.750097274780273
    9. '       ' → logprob: -16.625097274780273
    10. 'dp' → logprob: -16.750097274780273

Token 535: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.500108141452074e-05
    2. 'idx' → logprob: -10.375035285949707
    3. '[' → logprob: -12.625035285949707
    4. ' idx' → logprob: -15.000035285949707
    5. '	idx' → logprob: -17.62503433227539
    6. '(idx' → logprob: -18.12503433227539
    7. '[i' → logprob: -18.62503433227539
    8. '[index' → logprob: -19.12503433227539
    9. '```' → logprob: -19.25003433227539
    10. '   ' → logprob: -19.50003433227539

Token 536: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024544880725443363
    2. ']+' → logprob: -6.2524542808532715
    3. '+' → logprob: -8.75245475769043
    4. ']%' → logprob: -8.87745475769043
    5. ' ]' → logprob: -9.00245475769043
    6. ']
' → logprob: -9.62745475769043
    7. ')' → logprob: -11.62745475769043
    8. '   ' → logprob: -11.75245475769043
    9. '[' → logprob: -12.12745475769043
    10. '+]' → logprob: -12.50245475769043

Token 537: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8603647351264954
    2. 'else' → logprob: -0.8603647351264954
    3. '       ' → logprob: -2.4853646755218506
    4. 'elif' → logprob: -3.3603646755218506
    5. '   ' → logprob: -4.11036491394043
    6. '<|end|>' → logprob: -5.36036491394043
    7. '```' → logprob: -5.36036491394043
    8. ')' → logprob: -5.61036491394043
    9. ' elif' → logprob: -5.98536491394043
    10. '+' → logprob: -6.23536491394043

Token 538: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.044615261256694794
    2. ' else' → logprob: -3.6696152687072754
    3. '       ' → logprob: -4.294615268707275
    4. 'elif' → logprob: -5.419615268707275
    5. ' elif' → logprob: -10.294614791870117
    6. '   ' → logprob: -10.669614791870117
    7. '```' → logprob: -11.669614791870117
    8. '	else' → logprob: -12.169614791870117
    9. '           ' → logprob: -13.669614791870117
    10. ')' → logprob: -13.919614791870117

Token 539: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34670260548591614
    2. ':
' → logprob: -1.3467025756835938
    3. '[' → logprob: -3.7217025756835938
    4. '       ' → logprob: -5.846702575683594
    5. '[
' → logprob: -6.471702575683594
    6. '```' → logprob: -6.846702575683594
    7. '+' → logprob: -6.971702575683594
    8. '<|end|>' → logprob: -7.221702575683594
    9. '           ' → logprob: -8.221702575683594
    10. ' :' → logprob: -9.096702575683594

Token 540: '           ' (ID: 352)
  Prédit: ' DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DP' → logprob: -0.6573758721351624
    2. ' (' → logprob: -1.2823758125305176
    3. 'DP' → logprob: -2.5323758125305176
    4. '       ' → logprob: -3.4073758125305176
    5. '           ' → logprob: -3.5323758125305176
    6. '(' → logprob: -3.7823758125305176
    7. '(D' → logprob: -3.7823758125305176
    8. '   ' → logprob: -5.157375812530518
    9. '```' → logprob: -6.032375812530518
    10. '(
' → logprob: -6.282375812530518

Token 541: ' #' (ID: 1069)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.12936246395111084
    2. 'DP' → logprob: -2.1293625831604004
    3. '```' → logprob: -7.6293625831604
    4. '(' → logprob: -7.7543625831604
    5. ' (' → logprob: -7.7543625831604
    6. '(dp' → logprob: -8.504362106323242
    7. '   ' → logprob: -8.629362106323242
    8. '`' → logprob: -9.129362106323242
    9. ' DP' → logprob: -9.379362106323242
    10. '((' → logprob: -9.379362106323242

Token 542: ' Add' (ID: 4063)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.002698831958696246
    2. 'prev' → logprob: -6.50269889831543
    3. 'dp' → logprob: -7.75269889831543
    4. 'val' → logprob: -9.00269889831543
    5. 'left' → logprob: -9.12769889831543
    6. ' DP' → logprob: -9.12769889831543
    7. 'Dp' → logprob: -10.00269889831543
    8. 'previous' → logprob: -10.25269889831543
    9. 'temp' → logprob: -10.37769889831543
    10. 'sum' → logprob: -10.37769889831543

Token 543: ' the' (ID: 290)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2300640344619751
    2. ' DP' → logprob: -1.605064034461975
    3. '(D' → logprob: -6.3550639152526855
    4. '(' → logprob: -6.4800639152526855
    5. ' (' → logprob: -6.9800639152526855
    6. '   ' → logprob: -8.105064392089844
    7. '_DP' → logprob: -10.480064392089844
    8. 'dp' → logprob: -10.730064392089844
    9. 'Dp' → logprob: -11.480064392089844
    10. '```' → logprob: -11.480064392089844

Token 544: ' cases' (ID: 7911)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.14343878626823425
    2. ' DP' → logprob: -2.0184388160705566
    3. ' (' → logprob: -8.518438339233398
    4. ' previous' → logprob: -9.268438339233398
    5. 'previous' → logprob: -9.393438339233398
    6. '(' → logprob: -9.768438339233398
    7. '   ' → logprob: -10.143438339233398
    8. '_DP' → logprob: -10.393438339233398
    9. '```' → logprob: -10.518438339233398
    10. 'D' → logprob: -10.643438339233398

Token 545: ' by' (ID: 656)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.6634356379508972
    2. ' DP' → logprob: -1.038435697555542
    3. '[' → logprob: -2.163435697555542
    4. '           ' → logprob: -5.288435459136963
    5. '```' → logprob: -5.663435459136963
    6. '   ' → logprob: -6.413435459136963
    7. '       ' → logprob: -7.413435459136963
    8. '_DP' → logprob: -7.413435459136963
    9. '[idx' → logprob: -7.538435459136963
    10. '[
' → logprob: -7.663435459136963

Token 546: ' extending' (ID: 53271)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.024507131427526474
    2. ' DP' → logprob: -3.8995070457458496
    3. 'adding' → logprob: -6.52450704574585
    4. ' adding' → logprob: -7.89950704574585
    5. 'including' → logprob: -8.399507522583008
    6. '   ' → logprob: -8.399507522583008
    7. ' (' → logprob: -8.524507522583008
    8. '```' → logprob: -8.649507522583008
    9. '           ' → logprob: -8.899507522583008
    10. ' including' → logprob: -9.024507522583008

Token 547: ' from' (ID: 591)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2543190121650696
    2. ' DP' → logprob: -1.5043189525604248
    3. ' with' → logprob: -7.129319190979004
    4. ' the' → logprob: -7.754319190979004
    5. ' and' → logprob: -8.629319190979004
    6. '```' → logprob: -8.879319190979004
    7. '   ' → logprob: -9.004319190979004
    8. '_DP' → logprob: -9.129319190979004
    9. '`' → logprob: -9.504319190979004
    10. '           ' → logprob: -9.504319190979004

Token 548: ' the' (ID: 290)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.08012113720178604
    2. ' DP' → logprob: -2.8301210403442383
    3. 'For' → logprob: -4.080121040344238
    4. ' For' → logprob: -7.080121040344238
    5. '[' → logprob: -10.080121040344238
    6. '_DP' → logprob: -10.705121040344238
    7. 'idx' → logprob: -10.955121040344238
    8. '```' → logprob: -11.080121040344238
    9. 'Dp' → logprob: -11.330121040344238
    10. 'dp' → logprob: -11.455121040344238

Token 549: ' previous' (ID: 5880)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.004363302141427994
    2. 'DP' → logprob: -6.004363536834717
    3. ' For' → logprob: -6.379363536834717
    4. '[' → logprob: -9.379363059997559
    5. ' DP' → logprob: -10.504363059997559
    6. '`' → logprob: -10.754363059997559
    7. '```' → logprob: -11.129363059997559
    8. 'No' → logprob: -11.879363059997559
    9. 'On' → logprob: -12.129363059997559
    10. 'idx' → logprob: -12.254363059997559

Token 550: ' occurrence' (ID: 55807)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2927314341068268
    2. 'occ' → logprob: -2.542731523513794
    3. ' DP' → logprob: -3.417731523513794
    4. 'index' → logprob: -3.917731523513794
    5. 'appearance' → logprob: -4.042731285095215
    6. 'idx' → logprob: -4.042731285095215
    7. '```' → logprob: -4.042731285095215
    8. 'count' → logprob: -4.792731285095215
    9. '+' → logprob: -4.917731285095215
    10. '`' → logprob: -4.917731285095215

Token 551: '
' (ID: 198)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.6931700110435486
    2. ' DP' → logprob: -0.8181700110435486
    3. '[idx' → logprob: -3.8181700706481934
    4. '           ' → logprob: -4.443170070648193
    5. '```' → logprob: -5.193170070648193
    6. '[' → logprob: -5.193170070648193
    7. '_DP' → logprob: -5.818170070648193
    8. ' +' → logprob: -6.068170070648193
    9. ' of' → logprob: -6.443170070648193
    10. '       ' → logprob: -6.818170070648193

Token 552: '           ' (ID: 352)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.3907124698162079
    2. '[' → logprob: -2.6407124996185303
    3. '+' → logprob: -2.7657124996185303
    4. ' DP' → logprob: -2.8907124996185303
    5. ' =' → logprob: -3.3907124996185303
    6. '=' → logprob: -3.6407124996185303
    7. '```' → logprob: -3.8907124996185303
    8. '_DP' → logprob: -4.640712261199951
    9. '   ' → logprob: -5.015712261199951
    10. '+=' → logprob: -5.265712261199951

Token 553: ' last' (ID: 2174)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.008119238540530205
    2. 'DP' → logprob: -5.133119106292725
    3. ' (' → logprob: -6.758119106292725
    4. '(' → logprob: -7.008119106292725
    5. ' DP' → logprob: -10.508119583129883
    6. '(dp' → logprob: -10.633119583129883
    7. '   ' → logprob: -11.133119583129883
    8. '((' → logprob: -11.758119583129883
    9. '_DP' → logprob: -11.883119583129883
    10. '
' → logprob: -12.008119583129883

Token 554: 'Idx' (ID: 16248)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.15378308296203613
    2. '_occ' → logprob: -2.903783082962036
    3. '_index' → logprob: -4.278782844543457
    4. '_' → logprob: -4.403782844543457
    5. 'idx' → logprob: -4.653782844543457
    6. 'Idx' → logprob: -5.028782844543457
    7. '_pos' → logprob: -5.278782844543457
    8. '_oc' → logprob: -5.403782844543457
    9. '_for' → logprob: -5.403782844543457
    10. ']' → logprob: -5.528782844543457

Token 555: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9485979676246643
    2. ']' → logprob: -1.3235979080200195
    3. ' +' → logprob: -2.4485979080200195
    4. 'For' → logprob: -2.6985979080200195
    5. '[idx' → logprob: -2.6985979080200195
    6. '+' → logprob: -3.3235979080200195
    7. ')' → logprob: -3.6985979080200195
    8. '=' → logprob: -4.1985979080200195
    9. '][' → logprob: -4.4485979080200195
    10. ']+' → logprob: -4.5735979080200195

Token 556: ' For' (ID: 2214)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.3132636249065399
    2. ' For' → logprob: -1.3132636547088623
    3. '           ' → logprob: -14.313263893127441
    4. '_for' → logprob: -14.813263893127441
    5. '   ' → logprob: -14.938263893127441
    6. ' for' → logprob: -15.563263893127441
    7. '_For' → logprob: -16.688262939453125
    8. '    ' → logprob: -16.688262939453125
    9. 'for' → logprob: -16.813262939453125
    10. '               ' → logprob: -17.063262939453125

Token 557: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -4.4418171455617994e-05
    2. 'idx' → logprob: -10.250044822692871
    3. 'I' → logprob: -12.500044822692871
    4. '_idx' → logprob: -13.500044822692871
    5. 'For' → logprob: -14.250044822692871
    6. '```' → logprob: -14.250044822692871
    7. '_' → logprob: -14.625044822692871
    8. '...' → logprob: -15.375044822692871
    9. 'IDX' → logprob: -15.375044822692871
    10. 'Num' → logprob: -15.500044822692871

Token 558: 'Last' (ID: 6949)
  Prédit: 'Last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Last' → logprob: -0.0009718484943732619
    2. '_last' → logprob: -7.375971794128418
    3. 'Num' → logprob: -8.750971794128418
    4. '_Last' → logprob: -9.250971794128418
    5. 'colors' → logprob: -10.375971794128418
    6. '	Last' → logprob: -11.250971794128418
    7. 'idx' → logprob: -12.000971794128418
    8. 'Idx' → logprob: -12.250971794128418
    9. '[' → logprob: -12.500971794128418
    10. 'last' → logprob: -12.625971794128418

Token 559: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.01529268454760313
    2. '_colors' → logprob: -4.765292644500732
    3. '_num' → logprob: -5.265292644500732
    4. 'Nums' → logprob: -7.390292644500732
    5. 'color' → logprob: -8.14029312133789
    6. '[color' → logprob: -8.39029312133789
    7. '_nums' → logprob: -8.89029312133789
    8. 'colors' → logprob: -10.14029312133789
    9. '_color' → logprob: -10.14029312133789
    10. 'num' → logprob: -10.89029312133789

Token 560: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.4881879400927573e-05
    2. '[token' → logprob: -10.750035285949707
    3. 'idx' → logprob: -12.125035285949707
    4. '```' → logprob: -12.750035285949707
    5. '[color' → logprob: -13.125035285949707
    6. '[' → logprob: -13.625035285949707
    7. '[user' → logprob: -15.375035285949707
    8. ' idx' → logprob: -15.375035285949707
    9. '(idx' → logprob: -15.625035285949707
    10. '[index' → logprob: -15.875035285949707

Token 561: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1367809772491455
    2. ']
' → logprob: -2.1367809772491455
    3. ']+' → logprob: -4.636780738830566
    4. '+' → logprob: -9.511780738830566
    5. '           ' → logprob: -11.136780738830566
    6. ')' → logprob: -11.886780738830566
    7. ']
' → logprob: -12.636780738830566
    8. '       ' → logprob: -12.761780738830566
    9. '   ' → logprob: -13.136780738830566
    10. '[idx' → logprob: -13.136780738830566

Token 562: '           ' (ID: 352)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.1795710027217865
    2. ' DP' → logprob: -2.1795709133148193
    3. '```' → logprob: -3.4295709133148193
    4. '           ' → logprob: -4.929571151733398
    5. '+' → logprob: -6.054571151733398
    6. '``' → logprob: -6.054571151733398
    7. '   ' → logprob: -6.304571151733398
    8. '_DP' → logprob: -6.554571151733398
    9. '
' → logprob: -7.554571151733398
    10. ' +' → logprob: -7.679571151733398

Token 563: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.25824564695358276
    2. '(D' → logprob: -1.5082457065582275
    3. '(' → logprob: -5.883245468139648
    4. ' (' → logprob: -6.508245468139648
    5. ' DP' → logprob: -7.008245468139648
    6. 'dp' → logprob: -8.258245468139648
    7. '   ' → logprob: -8.508245468139648
    8. '(dp' → logprob: -9.133245468139648
    9. '`' → logprob: -9.258245468139648
    10. '```' → logprob: -9.383245468139648

Token 564: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.04897031560540199
    2. '[last' → logprob: -3.0489702224731445
    3. 'idx' → logprob: -8.423970222473145
    4. '[' → logprob: -9.548970222473145
    5. 'last' → logprob: -10.173970222473145
    6. '[-' → logprob: -11.923970222473145
    7. '[next' → logprob: -11.923970222473145
    8. '```' → logprob: -12.298970222473145
    9. '[len' → logprob: -12.423970222473145
    10. ' idx' → logprob: -12.923970222473145

Token 565: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0030449775513261557
    2. ']' → logprob: -6.628045082092285
    3. '[' → logprob: -7.253045082092285
    4. ']+' → logprob: -7.378045082092285
    5. ' +' → logprob: -8.128045082092285
    6. '-' → logprob: -10.878045082092285
    7. '[idx' → logprob: -11.003045082092285
    8. '```' → logprob: -11.503045082092285
    9. '+]' → logprob: -11.628045082092285
    10. '[-' → logprob: -11.878045082092285

Token 566: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.375036239624023
    3. '2' → logprob: -13.000036239624023
    4. '```' → logprob: -14.125036239624023
    5. '   ' → logprob: -14.500036239624023
    6. '
' → logprob: -15.375036239624023
    7. '`' → logprob: -16.125036239624023
    8. '0' → logprob: -16.187536239624023
    9. ')' → logprob: -16.437536239624023
    10. '``' → logprob: -16.812536239624023

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.625001907348633
    3. '```' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.250001907348633
    5. '2' → logprob: -15.250001907348633
    6. '
' → logprob: -15.750001907348633
    7. '0' → logprob: -17.000001907348633
    8. '-' → logprob: -17.312501907348633
    9. '``' → logprob: -17.437501907348633
    10. '`' → logprob: -17.625001907348633

Token 568: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00042768914136104286
    2. ' ]' → logprob: -8.62542724609375
    3. ']=' → logprob: -8.87542724609375
    4. '=' → logprob: -9.37542724609375
    5. ']+=' → logprob: -11.25042724609375
    6. ' =' → logprob: -12.00042724609375
    7. ']=(' → logprob: -13.37542724609375
    8. '   ' → logprob: -13.50042724609375
    9. ')' → logprob: -14.37542724609375
    10. '[' → logprob: -15.75042724609375

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006604921072721481
    2. ' =' → logprob: -7.375660419464111
    3. '+=' → logprob: -10.37566089630127
    4. '=(' → logprob: -13.12566089630127
    5. ' +=' → logprob: -15.12566089630127
    6. '   ' → logprob: -15.87566089630127
    7. ' ' → logprob: -16.625659942626953
    8. '%=' → logprob: -16.875659942626953
    9. '```' → logprob: -16.875659942626953
    10. ']' → logprob: -17.125659942626953

Token 570: ' (' (ID: 350)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0003131784324068576
    2. '(' → logprob: -8.375312805175781
    3. ' (' → logprob: -10.250312805175781
    4. '   ' → logprob: -10.875312805175781
    5. '(
' → logprob: -11.750312805175781
    6. '(dp' → logprob: -12.000312805175781
    7. '
' → logprob: -12.375312805175781
    8. '(P' → logprob: -12.750312805175781
    9. '((' → logprob: -12.875312805175781
    10. '(DE' → logprob: -13.875312805175781

Token 571: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.5048530030981055e-06
    2. ' DP' → logprob: -13.625001907348633
    3. 'dp' → logprob: -16.000001907348633
    4. '(D' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '_DP' → logprob: -17.375001907348633
    7. 'Dp' → logprob: -17.875001907348633
    8. '           ' → logprob: -18.875001907348633
    9. '(' → logprob: -19.000001907348633
    10. 'D' → logprob: -19.250001907348633

Token 572: '[last' (ID: 126100)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.021454166620969772
    2. '[last' → logprob: -3.896454095840454
    3. 'idx' → logprob: -7.271454334259033
    4. '[' → logprob: -8.771453857421875
    5. 'last' → logprob: -10.521453857421875
    6. '[-' → logprob: -11.771453857421875
    7. ' idx' → logprob: -11.771453857421875
    8. '	idx' → logprob: -12.646453857421875
    9. '(idx' → logprob: -12.896453857421875
    10. '[index' → logprob: -12.896453857421875

Token 573: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.00045009577297605574
    2. '+' → logprob: -8.500450134277344
    3. 'idx' → logprob: -8.625450134277344
    4. '_idx' → logprob: -10.750450134277344
    5. 'x' → logprob: -11.625450134277344
    6. ')' → logprob: -11.875450134277344
    7. '[idx' → logprob: -12.250450134277344
    8. ']' → logprob: -12.500450134277344
    9. ' +' → logprob: -12.500450134277344
    10. 'Ix' → logprob: -13.000450134277344

Token 574: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04603676125407219
    2. ' +' → logprob: -3.671036720275879
    3. ']' → logprob: -4.671036720275879
    4. '[idx' → logprob: -4.671036720275879
    5. ']+' → logprob: -7.671036720275879
    6. '[' → logprob: -8.421036720275879
    7. '+]' → logprob: -9.921036720275879
    8. 'idx' → logprob: -10.046036720275879
    9. '```' → logprob: -11.921036720275879
    10. '[next' → logprob: -12.421036720275879

Token 575: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010127831774298102
    2. ' ' → logprob: -9.375101089477539
    3. '0' → logprob: -11.125101089477539
    4. '```' → logprob: -14.750101089477539
    5. '2' → logprob: -15.125101089477539
    6. ')' → logprob: -15.375101089477539
    7. '   ' → logprob: -15.625101089477539
    8. '-' → logprob: -16.37510108947754
    9. '7' → logprob: -16.50010108947754
    10. ']' → logprob: -16.62510108947754

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -10.875020027160645
    3. '```' → logprob: -15.500020027160645
    4. ')' → logprob: -15.750020027160645
    5. '2' → logprob: -16.000019073486328
    6. '0' → logprob: -16.312519073486328
    7. '
' → logprob: -17.500019073486328
    8. '   ' → logprob: -17.812519073486328
    9. ']' → logprob: -18.125019073486328
    10. '7' → logprob: -18.437519073486328

Token 577: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2811812162399292
    2. '+' → logprob: -1.4061812162399292
    3. ')' → logprob: -11.531181335449219
    4. '*' → logprob: -11.656181335449219
    5. ' -' → logprob: -12.156181335449219
    6. ' *' → logprob: -13.281181335449219
    7. '[' → logprob: -13.906181335449219
    8. ']' → logprob: -14.031181335449219
    9. '+
' → logprob: -14.281181335449219
    10. ' +
' → logprob: -14.406181335449219

Token 578: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408807277679443
    2. ' +' → logprob: -0.9740880727767944
    3. '*' → logprob: -11.974087715148926
    4. ')' → logprob: -13.349087715148926
    5. '+
' → logprob: -13.474087715148926
    6. ' *' → logprob: -14.599087715148926
    7. '+D' → logprob: -15.349087715148926
    8. ' +
' → logprob: -15.599087715148926
    9. '```' → logprob: -15.724087715148926
    10. '   ' → logprob: -15.724087715148926

Token 579: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -4.584861744660884e-05
    2. ' DP' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. 'dp' → logprob: -16.125045776367188
    5. 'Dp' → logprob: -16.375045776367188
    6. '_DP' → logprob: -16.500045776367188
    7. 'DM' → logprob: -17.750045776367188
    8. ')' → logprob: -18.000045776367188
    9. ' ' → logprob: -18.375045776367188
    10. '           ' → logprob: -18.375045776367188

Token 580: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.030037764459848404
    2. 'idx' → logprob: -3.5300378799438477
    3. '[last' → logprob: -8.405037879943848
    4. ' idx' → logprob: -10.655037879943848
    5. '[' → logprob: -10.780037879943848
    6. 'last' → logprob: -11.655037879943848
    7. '```' → logprob: -12.780037879943848
    8. '(idx' → logprob: -12.905037879943848
    9. '	idx' → logprob: -13.655037879943848
    10. '[-' → logprob: -13.780037879943848

Token 581: '])' (ID: 4636)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36773791909217834
    2. ']' → logprob: -1.992737889289856
    3. '])' → logprob: -1.992737889289856
    4. ' +' → logprob: -4.367737770080566
    5. '[idx' → logprob: -4.992737770080566
    6. ']+' → logprob: -5.492737770080566
    7. ')' → logprob: -5.492737770080566
    8. '[' → logprob: -5.742737770080566
    9. '```' → logprob: -5.867737770080566
    10. ' ])' → logprob: -8.492737770080566

Token 582: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22692997753620148
    2. ' %' → logprob: -1.601930022239685
    3. ')' → logprob: -6.851930141448975
    4. ')%' → logprob: -7.726930141448975
    5. '%D' → logprob: -12.476929664611816
    6. '%x' → logprob: -12.851929664611816
    7. '%A' → logprob: -12.851929664611816
    8. '%B' → logprob: -13.726929664611816
    9. '%c' → logprob: -13.851929664611816
    10. '%n' → logprob: -13.976929664611816

Token 583: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001234428636962548
    2. ' MOD' → logprob: -9.000123023986816
    3. '_MOD' → logprob: -20.250123977661133
    4. '   ' → logprob: -20.750123977661133
    5. '.MOD' → logprob: -21.375123977661133
    6. '(M' → logprob: -22.250123977661133
    7. ' ' → logprob: -22.625123977661133
    8. 'MD' → logprob: -22.750123977661133
    9. 'mod' → logprob: -23.000123977661133
    10. 'MO' → logprob: -23.250123977661133

Token 584: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2102409303188324
    2. '<|end|>' → logprob: -1.9602409601211548
    3. ')' → logprob: -3.4602408409118652
    4. '    
' → logprob: -5.460240840911865
    5. '
' → logprob: -5.835240840911865
    6. '       ' → logprob: -5.835240840911865
    7. '<|end|>' → logprob: -6.210240840911865
    8. '```' → logprob: -6.585240840911865
    9. '+' → logprob: -7.210240840911865
    10. ':return' → logprob: -7.835240840911865

Token 585: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002204378368332982
    2. '   ' → logprob: -6.252204418182373
    3. '```' → logprob: -8.752203941345215
    4. 'return' → logprob: -9.252203941345215
    5. ' print' → logprob: -10.752203941345215
    6. '``' → logprob: -15.377203941345215
    7. 'for' → logprob: -16.62720489501953
    8. '	print' → logprob: -16.75220489501953
    9. '
' → logprob: -17.25220489501953
    10. ' return' → logprob: -18.25220489501953

Token 587: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.869017852295656e-06
    2. 'return' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.750006675720215
    4. ' print' → logprob: -16.00000762939453
    5. '```' → logprob: -16.12500762939453
    6. 'result' → logprob: -18.87500762939453
    7. '#print' → logprob: -19.12500762939453
    8. '``' → logprob: -20.25000762939453
    9. '
' → logprob: -20.50000762939453
    10. 'for' → logprob: -21.00000762939453

Token 588: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12846128642559052
    2. '   ' → logprob: -2.1284613609313965
    3. '(print' → logprob: -6.7534613609313965
    4. '(D' → logprob: -8.503460884094238
    5. ' print' → logprob: -9.503460884094238
    6. '(' → logprob: -9.628460884094238
    7. '```' → logprob: -11.003460884094238
    8. '    
' → logprob: -13.753460884094238
    9. '
' → logprob: -14.253460884094238
    10. '`' → logprob: -14.378460884094238

Token 589: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03822876885533333
    2. 'DP' → logprob: -3.288228750228882
    3. 'result' → logprob: -8.913228988647461
    4. '   ' → logprob: -10.788228988647461
    5. ' print' → logprob: -10.913228988647461
    6. '(D' → logprob: -12.913228988647461
    7. 'answer' → logprob: -12.913228988647461
    8. '```' → logprob: -13.038228988647461
    9. ' DP' → logprob: -13.038228988647461
    10. '
' → logprob: -13.413228988647461

Token 590: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000981243560090661
    2. '   ' → logprob: -8.125981330871582
    3. 'result' → logprob: -8.375981330871582
    4. ' print' → logprob: -8.375981330871582
    5. '```' → logprob: -8.500981330871582
    6. '(' → logprob: -12.250981330871582
    7. '`' → logprob: -12.375981330871582
    8. ' result' → logprob: -12.625981330871582
    9. '``' → logprob: -12.750981330871582
    10. '(
' → logprob: -13.875981330871582

Token 591: ' modulo' (ID: 112372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012516580754891038
    2. '   ' → logprob: -7.001251697540283
    3. '```' → logprob: -8.001251220703125
    4. ' print' → logprob: -12.251251220703125
    5. '``' → logprob: -15.501251220703125
    6. '`' → logprob: -17.876251220703125
    7. '	print' → logprob: -17.876251220703125
    8. '
' → logprob: -18.251251220703125
    9. '#print' → logprob: -20.126251220703125
    10. '    
' → logprob: -20.376251220703125

Token 592: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.005344282370060682
    2. ' MOD' → logprob: -5.255344390869141
    3. '   ' → logprob: -10.13034439086914
    4. '10' → logprob: -10.38034439086914
    5. '```' → logprob: -10.63034439086914
    6. '`' → logprob: -12.25534439086914
    7. '``' → logprob: -12.50534439086914
    8. '(M' → logprob: -12.75534439086914
    9. 'DP' → logprob: -13.50534439086914
    10. '_MOD' → logprob: -14.38034439086914

Token 593: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001272973488084972
    2. '```' → logprob: -6.751273155212402
    3. '   ' → logprob: -9.251273155212402
    4. ' print' → logprob: -12.001273155212402
    5. '``' → logprob: -14.376273155212402
    6. '`' → logprob: -17.126272201538086
    7. '
' → logprob: -17.626272201538086
    8. 'return' → logprob: -19.751272201538086
    9. '	print' → logprob: -19.751272201538086
    10. '#print' → logprob: -20.626272201538086

Token 594: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06591522693634033
    2. '```' → logprob: -2.815915107727051
    3. '   ' → logprob: -5.565915107727051
    4. ' print' → logprob: -9.69091510772705
    5. '``' → logprob: -9.94091510772705
    6. '`' → logprob: -12.69091510772705
    7. '	print' → logprob: -15.31591510772705
    8. 'return' → logprob: -15.56591510772705
    9. '#print' → logprob: -16.815916061401367
    10. '
' → logprob: -17.065916061401367

Token 595: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.56102097814437e-05
    2. '```' → logprob: -10.000045776367188
    3. ' print' → logprob: -16.000045776367188
    4. '   ' → logprob: -16.500045776367188
    5. '``' → logprob: -17.000045776367188
    6. '`' → logprob: -20.750045776367188
    7. '
' → logprob: -22.750045776367188
    8. 'return' → logprob: -23.500045776367188
    9. '    
' → logprob: -23.625045776367188
    10. '	print' → logprob: -23.750045776367188

Token 596: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0011988013284280896
    2. '(' → logprob: -6.751198768615723
    3. '((' → logprob: -10.626198768615723
    4. '(dp' → logprob: -13.001198768615723
    5. ' (' → logprob: -13.376198768615723
    6. 'DP' → logprob: -15.751198768615723
    7. '()' → logprob: -16.50119972229004
    8. '(
' → logprob: -16.75119972229004
    9. '(P' → logprob: -17.00119972229004
    10. 'D' → logprob: -17.50119972229004

Token 597: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.1782583391759545e-05
    2. ')' → logprob: -11.500031471252441
    3. '(P' → logprob: -11.875031471252441
    4. '(' → logprob: -12.625031471252441
    5. '0' → logprob: -12.875031471252441
    6. '```' → logprob: -13.750031471252441
    7. ' P' → logprob: -13.875031471252441
    8. '{' → logprob: -14.250031471252441
    9. '[' → logprob: -14.625031471252441
    10. 'PN' → logprob: -15.000031471252441

Token 598: '[N' (ID: 49776)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06202941760420799
    2. '[N' → logprob: -2.8120293617248535
    3. '[len' → logprob: -9.812029838562012
    4. '[' → logprob: -12.687029838562012
    5. '-N' → logprob: -13.437029838562012
    6. '-' → logprob: -13.437029838562012
    7. 'N' → logprob: -14.812029838562012
    8. '```' → logprob: -15.062029838562012
    9. '[n' → logprob: -15.812029838562012
    10. ')' → logprob: -15.812029838562012

Token 599: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1310054510831833
    2. ')' → logprob: -2.1310055255889893
    3. ']' → logprob: -6.13100528717041
    4. '%' → logprob: -7.13100528717041
    5. ')%' → logprob: -7.50600528717041
    6. ']%' → logprob: -7.75600528717041
    7. '))' → logprob: -9.88100528717041
    8. '})' → logprob: -10.25600528717041
    9. '%)' → logprob: -11.75600528717041
    10. ')]' → logprob: -12.38100528717041

Token 600: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.0590548703912646e-05
    2. '%' → logprob: -10.500030517578125
    3. ')%' → logprob: -13.500030517578125
    4. ')`' → logprob: -14.375030517578125
    5. '%)' → logprob: -14.750030517578125
    6. '))' → logprob: -15.625030517578125
    7. ' )' → logprob: -16.250030517578125
    8. ')}' → logprob: -16.500030517578125
    9. '```' → logprob: -16.500030517578125
    10. '),' → logprob: -17.250030517578125

Token 601: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.5491004129871726e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '(M' → logprob: -17.250045776367188
    4. '_MOD' → logprob: -18.750045776367188
    5. '(' → logprob: -19.750045776367188
    6. 'MD' → logprob: -19.875045776367188
    7. '.MOD' → logprob: -20.000045776367188
    8. 'MO' → logprob: -20.250045776367188
    9. '   ' → logprob: -21.125045776367188
    10. '```' → logprob: -21.875045776367188

Token 602: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -13.250004768371582
    3. '())' → logprob: -13.625004768371582
    4. '()' → logprob: -14.000004768371582
    5. ' )' → logprob: -15.375004768371582
    6. '))' → logprob: -15.750004768371582
    7. ')`' → logprob: -16.250003814697266
    8. '`)' → logprob: -16.875003814697266
    9. '```' → logprob: -17.500003814697266
    10. ')}' → logprob: -18.375003814697266

Token 603: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31333568692207336
    2. ' __' → logprob: -1.313335657119751
    3. '_' → logprob: -9.688335418701172
    4. '___' → logprob: -11.688335418701172
    5. 'name' → logprob: -14.063335418701172
    6. '_name' → logprob: -14.438335418701172
    7. ' ' → logprob: -14.563335418701172
    8. '```' → logprob: -14.813335418701172
    9. '/__' → logprob: -15.188335418701172
    10. ' ' → logprob: -15.313335418701172

Token 605: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0637536570429802
    2. '==' → logprob: -3.563753604888916
    3. '```' → logprob: -4.063753604888916
    4. ' ==' → logprob: -4.688753604888916
    5. '=="' → logprob: -5.813753604888916
    6. '=='' → logprob: -7.313753604888916
    7. 'if' → logprob: -7.313753604888916
    8. '__.__' → logprob: -7.438753604888916
    9. 'name' → logprob: -7.938753604888916
    10. ' __' → logprob: -8.438754081726074

Token 606: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004230004735291004
    2. '==' → logprob: -6.12923002243042
    3. '=="' → logprob: -6.50423002243042
    4. '=='' → logprob: -8.379229545593262
    5. '__.__' → logprob: -9.004229545593262
    6. ' ==' → logprob: -9.129229545593262
    7. '__('' → logprob: -10.504229545593262
    8. '___' → logprob: -11.379229545593262
    9. '__("' → logprob: -12.129229545593262
    10. '```' → logprob: -12.254229545593262

Token 607: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4881107211112976
    2. '==' → logprob: -1.2381107807159424
    3. '=="' → logprob: -2.4881107807159424
    4. '__' → logprob: -4.488110542297363
    5. '=='' → logprob: -6.363110542297363
    6. '"' → logprob: -10.113110542297363
    7. ' =="' → logprob: -10.238110542297363
    8. '==="' → logprob: -10.863110542297363
    9. '===' → logprob: -10.988110542297363
    10. '["' → logprob: -11.113110542297363

Token 608: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0052456180565059185
    2. ''' → logprob: -5.255245685577393
    3. ' "__' → logprob: -11.755245208740234
    4. '__' → logprob: -12.505245208740234
    5. '"user' → logprob: -16.505245208740234
    6. '("__' → logprob: -17.380245208740234
    7. ' '__' → logprob: -17.505245208740234
    8. '"name' → logprob: -17.505245208740234
    9. '"class' → logprob: -18.005245208740234
    10. '"_' → logprob: -18.130245208740234

Token 609: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7590128183364868
    2. 'main' → logprob: -0.7590128183364868
    3. '"' → logprob: -2.7590126991271973
    4. ''' → logprob: -8.259013175964355
    5. 'name' → logprob: -9.759013175964355
    6. '```' → logprob: -10.884013175964355
    7. '__":
' → logprob: -11.009013175964355
    8. '___' → logprob: -12.009013175964355
    9. 'python' → logprob: -12.134013175964355
    10. 'built' → logprob: -12.134013175964355

Token 610: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.025738604366779327
    2. '__' → logprob: -3.7757387161254883
    3. '__':
' → logprob: -6.025738716125488
    4. '__["' → logprob: -10.400738716125488
    5. '__:' → logprob: -11.525738716125488
    6. '():
' → logprob: -11.650738716125488
    7. '__.__' → logprob: -12.025738716125488
    8. '__.' → logprob: -12.400738716125488
    9. '__()
' → logprob: -12.650738716125488
    10. '```' → logprob: -13.150738716125488

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23791515827178955
    2. 'solve' → logprob: -1.6129151582717896
    3. '```' → logprob: -5.1129150390625
    4. ' solve' → logprob: -5.2379150390625
    5. '.solve' → logprob: -7.2379150390625
    6. '    
' → logprob: -8.8629150390625
    7. '__' → logprob: -9.9879150390625
    8. '(' → logprob: -10.1129150390625
    9. '``' → logprob: -10.8629150390625
    10. '_s' → logprob: -11.3629150390625

Token 612: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -4.320199877838604e-07
    2. ' solve' → logprob: -15.0
    3. '```' → logprob: -19.25
    4. '.solve' → logprob: -19.875
    5. 'resolve' → logprob: -20.375
    6. '   ' → logprob: -21.0
    7. 'save' → logprob: -22.5
    8. '`' → logprob: -23.375
    9. 'validate' → logprob: -24.125
    10. 'main' → logprob: -24.25

Token 613: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 611
Tokens correctement prédits (1ère position, stricte): 170
Tokens correctement prédits (1ère position, avec adaptation): 187
Tokens correctement prédits (top 10): 403
Précision stricte (1ère position): 27.82%
Précision adaptée (1ère position): 30.61%
Précision (top 10): 65.96%
================================================================================
