================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
b = a * a
b = b * 3
print(b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004484269011300057
    2. '(a' → logprob: -8.625448226928711
    3. 'a' → logprob: -9.250448226928711
    4. ' (' → logprob: -9.750448226928711
    5. ''' → logprob: -10.500448226928711
    6. '`' → logprob: -10.750448226928711
    7. '```' → logprob: -11.000448226928711
    8. '32' → logprob: -11.500448226928711
    9. '('' → logprob: -11.750448226928711
    10. '[' → logprob: -12.000448226928711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041177209466695786
    2. ')' → logprob: -3.291177272796631
    3. '()' → logprob: -6.291177272796631
    4. '())' → logprob: -7.791177272796631
    5. '(
' → logprob: -9.041176795959473
    6. '```' → logprob: -9.041176795959473
    7. '(()' → logprob: -9.291176795959473
    8. '<|end|>' → logprob: -9.791176795959473
    9. '(a' → logprob: -10.041176795959473
    10. '('' → logprob: -10.166176795959473

Token 5: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15050211548805237
    2. 'if' → logprob: -2.2755022048950195
    3. '*' → logprob: -3.5255022048950195
    4. '+
' → logprob: -6.1505022048950195
    5. '\n' → logprob: -6.1505022048950195
    6. '%' → logprob: -6.5255022048950195
    7. '#' → logprob: -7.9005022048950195
    8. '\' → logprob: -8.27550220489502
    9. '```' → logprob: -8.40050220489502
    10. '**' → logprob: -8.52550220489502

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28050553798675537
    2. '=' → logprob: -2.030505657196045
    3. '+' → logprob: -2.905505657196045
    4. ' ' → logprob: -3.030505657196045
    5. ' +=' → logprob: -5.155505657196045
    6. ')' → logprob: -6.530505657196045
    7. '+=' → logprob: -6.905505657196045
    8. ' +' → logprob: -7.280505657196045
    9. '  ' → logprob: -7.780505657196045
    10. '[' → logprob: -8.655505180358887

Token 7: ' a' (ID: 261)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01838417537510395
    2. 'int' → logprob: -4.018383979797363
    3. ' a' → logprob: -8.768383979797363
    4. 'a' → logprob: -9.643383979797363
    5. ' ' → logprob: -12.393383979797363
    6. ' input' → logprob: -12.393383979797363
    7. '=int' → logprob: -13.268383979797363
    8. '(int' → logprob: -14.143383979797363
    9. '<int' → logprob: -14.268383979797363
    10. '[int' → logprob: -14.393383979797363

Token 8: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06467451900243759
    2. ' +' → logprob: -3.0646746158599854
    3. '*' → logprob: -5.689674377441406
    4. ' ' → logprob: -5.814674377441406
    5. '<|end|>' → logprob: -5.814674377441406
    6. ')' → logprob: -6.189674377441406
    7. '%' → logprob: -6.689674377441406
    8. '>' → logprob: -7.439674377441406
    9. ' *' → logprob: -8.064674377441406
    10. '-' → logprob: -8.189674377441406

Token 9: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3171638250350952
    2. '2' → logprob: -1.3171638250350952
    3. ' a' → logprob: -6.442163944244385
    4. 'a' → logprob: -6.442163944244385
    5. 'b' → logprob: -8.442163467407227
    6. ' b' → logprob: -8.567163467407227
    7. '4' → logprob: -8.817163467407227
    8. '3' → logprob: -9.942163467407227
    9. '10' → logprob: -10.817163467407227
    10. '1' → logprob: -10.942163467407227

Token 10: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11007582396268845
    2. '+
' → logprob: -3.4850757122039795
    3. '\n' → logprob: -3.6100757122039795
    4. '*' → logprob: -3.6100757122039795
    5. '
' → logprob: -4.610075950622559
    6. '\' → logprob: -5.485075950622559
    7. '```' → logprob: -7.485075950622559
    8. '.' → logprob: -7.610075950622559
    9. '<|end|>' → logprob: -7.610075950622559
    10. 'newline' → logprob: -7.610075950622559

Token 11: 'b' (ID: 65)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010153383947908878
    2. 'p' → logprob: -5.635153293609619
    3. '\n' → logprob: -5.760153293609619
    4. '+' → logprob: -6.260153293609619
    5. 'c' → logprob: -7.260153293609619
    6. '*' → logprob: -8.885153770446777
    7. '#' → logprob: -9.135153770446777
    8. 'n' → logprob: -9.260153770446777
    9. 'b' → logprob: -9.385153770446777
    10. '\' → logprob: -9.385153770446777

Token 12: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.28375929594039917
    2. ' a' → logprob: -1.908759355545044
    3. 'b' → logprob: -3.033759355545044
    4. 'a' → logprob: -3.658759355545044
    5. ' ' → logprob: -4.033759117126465
    6. ' int' → logprob: -6.158759117126465
    7. '0' → logprob: -6.283759117126465
    8. 'int' → logprob: -7.158759117126465
    9. '+' → logprob: -7.283759117126465
    10. ' input' → logprob: -7.658759117126465

Token 14: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17626048624515533
    2. ' ' → logprob: -2.551260471343994
    3. ' +' → logprob: -2.801260471343994
    4. '<|end|>' → logprob: -4.426260471343994
    5. '**' → logprob: -5.426260471343994
    6. '*' → logprob: -6.176260471343994
    7. ' **' → logprob: -6.801260471343994
    8. ' *' → logprob: -7.426260471343994
    9. '#' → logprob: -7.426260471343994
    10. '<|end|>' → logprob: -7.926260471343994

Token 15: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17074404656887054
    2. ' a' → logprob: -2.295743942260742
    3. 'b' → logprob: -3.545743942260742
    4. '2' → logprob: -4.295743942260742
    5. ' b' → logprob: -4.545743942260742
    6. ' ' → logprob: -5.795743942260742
    7. '4' → logprob: -9.545743942260742
    8. '3' → logprob: -10.295743942260742
    9. '10' → logprob: -10.920743942260742
    10. '6' → logprob: -12.295743942260742

Token 16: '3' (ID: 18)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006895820144563913
    2. 'b' → logprob: -5.506896018981934
    3. '2' → logprob: -5.881896018981934
    4. '3' → logprob: -11.756896018981934
    5. ' a' → logprob: -11.881896018981934
    6. '4' → logprob: -12.256896018981934
    7. '10' → logprob: -12.881896018981934
    8. '5' → logprob: -14.631896018981934
    9. ' ' → logprob: -14.756896018981934
    10. '1' → logprob: -14.881896018981934

Token 17: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21406663954257965
    2. '*' → logprob: -2.339066743850708
    3. '\' → logprob: -3.089066743850708
    4. '\n' → logprob: -3.339066743850708
    5. '#' → logprob: -5.089066505432129
    6. '+
' → logprob: -6.464066505432129
    7. '**' → logprob: -6.589066505432129
    8. '-' → logprob: -6.839066505432129
    9. '```' → logprob: -7.214066505432129
    10. '
' → logprob: -7.339066505432129

Token 18: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14047923684120178
    2. '\n' → logprob: -2.640479326248169
    3. '\' → logprob: -3.640479326248169
    4. '*' → logprob: -4.39047908782959
    5. '+
' → logprob: -4.64047908782959
    6. 'b' → logprob: -5.51547908782959
    7. '#' → logprob: -6.64047908782959
    8. '
' → logprob: -6.76547908782959
    9. '**' → logprob: -6.89047908782959
    10. 'a' → logprob: -7.14047908782959

Token 19: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033671122509986162
    2. '(b' → logprob: -5.753366947174072
    3. '(a' → logprob: -8.62836742401123
    4. '('' → logprob: -12.37836742401123
    5. '()' → logprob: -12.50336742401123
    6. '("("' → logprob: -13.87836742401123
    7. '((' → logprob: -15.00336742401123
    8. '(`' → logprob: -15.37836742401123
    9. '(
' → logprob: -16.128366470336914
    10. ' (' → logprob: -16.128366470336914

Token 20: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -13.750000953674316
    3. ' )' → logprob: -16.500001907348633
    4. '')' → logprob: -16.875001907348633
    5. '`)' → logprob: -18.250001907348633
    6. ')
' → logprob: -18.500001907348633
    7. ')`' → logprob: -18.750001907348633
    8. '）' → logprob: -19.000001907348633
    9. '}' → logprob: -19.250001907348633
    10. ')))' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 18
Tokens correctement prédits (1ère position, stricte): 3
Tokens correctement prédits (1ère position, avec adaptation): 3
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 16.67%
Précision adaptée (1ère position): 16.67%
Précision (top 10): 72.22%
================================================================================
