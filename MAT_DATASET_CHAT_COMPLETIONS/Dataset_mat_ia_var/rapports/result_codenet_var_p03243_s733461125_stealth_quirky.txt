================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
I=input
l=list
_=print
s=I()
def F(x):return x[0]*3
def g(a):return int(a)+111
if len({*s})==1:_(s)
else:
    h=int(F(s))
    if int(s)>h:_(g(F(s)))
    else:_(h)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'I' (ID: 40)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'l' (ID: 75)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005386487580835819
    2. '=' → logprob: -5.6303863525390625
    3. '(
' → logprob: -7.1303863525390625
    4. '()' → logprob: -7.7553863525390625
    5. ' (' → logprob: -8.755386352539062
    6. ' =' → logprob: -9.880386352539062
    7. ',' → logprob: -10.005386352539062
    8. ')' → logprob: -10.130386352539062
    9. '"' → logprob: -10.505386352539062
    10. ''' → logprob: -10.630386352539062

Token 4: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009367500431835651
    2. 'ambda' → logprob: -5.2593674659729
    3. 'a' → logprob: -6.2593674659729
    4. ' =' → logprob: -6.7593674659729
    5. 'e' → logprob: -8.259367942810059
    6. 'i' → logprob: -8.759367942810059
    7. '(' → logprob: -8.759367942810059
    8. '=lambda' → logprob: -9.009367942810059
    9. 'en' → logprob: -9.884367942810059
    10. '=[]' → logprob: -10.009367942810059

Token 5: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002448893792461604
    2. '(
' → logprob: -9.875245094299316
    3. '(int' → logprob: -10.250245094299316
    4. '[' → logprob: -10.500245094299316
    5. ')' → logprob: -10.750245094299316
    6. '(range' → logprob: -10.750245094299316
    7. '<|end|>' → logprob: -10.875245094299316
    8. '(l' → logprob: -11.500245094299316
    9. '[int' → logprob: -11.625245094299316
    10. ',' → logprob: -11.750245094299316

Token 6: '_=' (ID: 115480)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0062805828638374805
    2. '(range' → logprob: -5.256280422210693
    3. '(map' → logprob: -8.006280899047852
    4. '(
' → logprob: -8.381280899047852
    5. '(I' → logprob: -8.881280899047852
    6. '(int' → logprob: -9.131280899047852
    7. '(lambda' → logprob: -9.131280899047852
    8. '(eval' → logprob: -10.506280899047852
    9. '(input' → logprob: -10.881280899047852
    10. ',' → logprob: -11.006280899047852

Token 7: 'print' (ID: 1598)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24277450144290924
    2. 'I' → logprob: -1.992774486541748
    3. 'int' → logprob: -3.367774486541748
    4. 'lambda' → logprob: -3.992774486541748
    5. 'input' → logprob: -4.492774486541748
    6. '[]' → logprob: -4.617774486541748
    7. 'i' → logprob: -6.367774486541748
    8. 'len' → logprob: -6.992774486541748
    9. '[int' → logprob: -7.367774486541748
    10. '0' → logprob: -8.117774963378906

Token 8: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009701796225272119
    2. '(
' → logprob: -7.375970363616943
    3. '((' → logprob: -9.125969886779785
    4. '('' → logprob: -9.500969886779785
    5. '()' → logprob: -10.625969886779785
    6. '(lambda' → logprob: -11.000969886779785
    7. '(*' → logprob: -11.250969886779785
    8. '("("' → logprob: -11.375969886779785
    9. '(len' → logprob: -11.625969886779785
    10. '([' → logprob: -11.625969886779785

Token 9: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022981634363532066
    2. '(int' → logprob: -4.272981643676758
    3. '(
' → logprob: -5.772981643676758
    4. '(I' → logprob: -5.897981643676758
    5. '(eval' → logprob: -7.397981643676758
    6. '('' → logprob: -8.022981643676758
    7. '()' → logprob: -8.397981643676758
    8. '((' → logprob: -8.522981643676758
    9. '(lambda' → logprob: -8.647981643676758
    10. '("' → logprob: -8.647981643676758

Token 10: '=' (ID: 28)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7923929691314697
    2. '=' → logprob: -1.0423929691314697
    3. '=input' → logprob: -2.0423929691314697
    4. '(input' → logprob: -3.2923929691314697
    5. ' =' → logprob: -5.042392730712891
    6. '(s' → logprob: -5.167392730712891
    7. 'tr' → logprob: -6.292392730712891
    8. '=int' → logprob: -6.667392730712891
    9. '=[]' → logprob: -6.792392730712891
    10. '('' → logprob: -6.917392730712891

Token 11: 'I' (ID: 40)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2842786908149719
    2. '''' → logprob: -1.9092786312103271
    3. 'I' → logprob: -3.659278631210327
    4. '""' → logprob: -3.784278631210327
    5. '[]' → logprob: -4.659278869628906
    6. ''' → logprob: -4.784278869628906
    7. 's' → logprob: -4.909278869628906
    8. '"' → logprob: -5.034278869628906
    9. 'int' → logprob: -5.409278869628906
    10. 'str' → logprob: -5.909278869628906

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11643962562084198
    2. '()' → logprob: -2.4914395809173584
    3. '(s' → logprob: -4.6164398193359375
    4. '<|end|>' → logprob: -5.2414398193359375
    5. '(
' → logprob: -5.4914398193359375
    6. '("")' → logprob: -5.9914398193359375
    7. '('' → logprob: -6.4914398193359375
    8. '
' → logprob: -7.4914398193359375
    9. ')' → logprob: -7.6164398193359375
    10. '()
' → logprob: -8.241439819335938

Token 13: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039341799914836884
    2. '()' → logprob: -4.164341926574707
    3. ')' → logprob: -4.789341926574707
    4. '=' → logprob: -5.164341926574707
    5. '[' → logprob: -6.289341926574707
    6. '.' → logprob: -6.414341926574707
    7. 's' → logprob: -6.539341926574707
    8. '[:]' → logprob: -6.789341926574707
    9. ':' → logprob: -7.289341926574707
    10. '(
' → logprob: -7.539341926574707

Token 14: ' F' (ID: 454)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23728293180465698
    2. ' f' → logprob: -2.3622829914093018
    3. ' s' → logprob: -2.6122829914093018
    4. 's' → logprob: -4.612282752990723
    5. ' main' → logprob: -5.112282752990723
    6. ' t' → logprob: -5.487282752990723
    7. ' l' → logprob: -5.612282752990723
    8. '_' → logprob: -5.612282752990723
    9. ' a' → logprob: -5.737282752990723
    10. 'f' → logprob: -6.237282752990723

Token 15: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4327503442764282
    2. '(s' → logprob: -1.0577503442764282
    3. '(a' → logprob: -6.182750225067139
    4. '(u' → logprob: -7.057750225067139
    5. '(x' → logprob: -8.557750701904297
    6. '(n' → logprob: -8.557750701904297
    7. '():' → logprob: -9.182750701904297
    8. 'u' → logprob: -9.807750701904297
    9. ' (' → logprob: -9.932750701904297
    10. '(l' → logprob: -10.057750701904297

Token 16: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018455786630511284
    2. ')' → logprob: -6.376845359802246
    3. ':' → logprob: -9.251845359802246
    4. ' ):' → logprob: -11.126845359802246
    5. '):
' → logprob: -11.626845359802246
    6. ',' → logprob: -11.751845359802246
    7. '=' → logprob: -12.251845359802246
    8. ''):' → logprob: -13.251845359802246
    9. '_' → logprob: -13.501845359802246
    10. ',x' → logprob: -13.751845359802246

Token 17: 'return' (ID: 1034)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5385785698890686
    2. ' return' → logprob: -1.7885785102844238
    3. ' if' → logprob: -2.163578510284424
    4. ' ' → logprob: -3.038578510284424
    5. '   ' → logprob: -3.663578510284424
    6. 'return' → logprob: -4.163578510284424
    7. 'if' → logprob: -4.288578510284424
    8. ' r' → logprob: -4.538578510284424
    9. 'i' → logprob: -5.788578510284424
    10. '	return' → logprob: -5.913578510284424

Token 18: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6792348623275757
    2. ' x' → logprob: -1.8042348623275757
    3. 'l' → logprob: -2.5542349815368652
    4. 's' → logprob: -3.1792349815368652
    5. '[' → logprob: -3.1792349815368652
    6. 'len' → logprob: -3.3042349815368652
    7. ' l' → logprob: -3.5542349815368652
    8. '[x' → logprob: -3.5542349815368652
    9. 'int' → logprob: -4.304234981536865
    10. ' s' → logprob: -4.554234981536865

Token 19: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050771839916706085
    2. '+' → logprob: -4.800771713256836
    3. 's' → logprob: -4.800771713256836
    4. '(x' → logprob: -4.800771713256836
    5. '[' → logprob: -5.175771713256836
    6. '(s' → logprob: -5.300771713256836
    7. '*' → logprob: -5.300771713256836
    8. '.' → logprob: -6.550771713256836
    9. '(
' → logprob: -6.550771713256836
    10. ')' → logprob: -6.925771713256836

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7357102632522583
    2. '-' → logprob: -1.6107102632522583
    3. '::-' → logprob: -1.8607102632522583
    4. ':' → logprob: -2.7357101440429688
    5. '::' → logprob: -3.1107101440429688
    6. ':]' → logprob: -3.4857101440429688
    7. '1' → logprob: -3.9857101440429688
    8. ']' → logprob: -6.110710144042969
    9. ' ' → logprob: -7.110710144042969
    10. ':-' → logprob: -7.485710144042969

Token 21: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3218178153038025
    2. ']==' → logprob: -1.3218178749084473
    3. ']>' → logprob: -6.071817874908447
    4. ' ]' → logprob: -6.946817874908447
    5. ']+' → logprob: -7.321817874908447
    6. ']>=' → logprob: -7.321817874908447
    7. ']!=' → logprob: -7.446817874908447
    8. ':]' → logprob: -7.571817874908447
    9. ':' → logprob: -7.696817874908447
    10. '[' → logprob: -7.696817874908447

Token 22: '3' (ID: 18)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011572344228625298
    2. '2' → logprob: -4.511572360992432
    3. 'len' → logprob: -8.386571884155273
    4. ' x' → logprob: -9.261571884155273
    5. '(x' → logprob: -9.761571884155273
    6. 's' → logprob: -10.011571884155273
    7. '(' → logprob: -10.761571884155273
    8. '3' → logprob: -11.136571884155273
    9. ' ' → logprob: -11.261571884155273
    10. '5' → logprob: -11.761571884155273

Token 23: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6807882189750671
    2. '(' → logprob: -1.930788278579712
    3. '<|end|>' → logprob: -2.180788278579712
    4. 's' → logprob: -2.555788278579712
    5. ' ' → logprob: -2.930788278579712
    6. '.' → logprob: -3.305788278579712
    7. 'x' → logprob: -3.805788278579712
    8. '[' → logprob: -4.180788040161133
    9. ')' → logprob: -4.805788040161133
    10. '*' → logprob: -4.805788040161133

Token 24: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02738875523209572
    2. 's' → logprob: -5.027388572692871
    3. '(
' → logprob: -5.027388572692871
    4. '_' → logprob: -5.402388572692871
    5. ')' → logprob: -5.652388572692871
    6. '[' → logprob: -6.402388572692871
    7. '.' → logprob: -7.527388572692871
    8. ' ' → logprob: -7.527388572692871
    9. 'x' → logprob: -8.027388572692871
    10. '*' → logprob: -8.152388572692871

Token 25: ' g' (ID: 329)
  Prédit: ' F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.3364258408546448
    2. 'F' → logprob: -1.33642578125
    3. ' G' → logprob: -4.71142578125
    4. ' ' → logprob: -5.33642578125
    5. 'G' → logprob: -5.58642578125
    6. ' main' → logprob: -6.33642578125
    7. 's' → logprob: -7.33642578125
    8. ' l' → logprob: -7.46142578125
    9. ' s' → logprob: -7.83642578125
    10. ' f' → logprob: -8.64892578125

Token 26: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.024121778085827827
    2. '(' → logprob: -3.8991217613220215
    3. '(a' → logprob: -6.2741217613220215
    4. '(s' → logprob: -6.5241217613220215
    5. '(n' → logprob: -10.14912223815918
    6. '(u' → logprob: -10.27412223815918
    7. '(i' → logprob: -10.77412223815918
    8. '(l' → logprob: -10.77412223815918
    9. '():' → logprob: -11.02412223815918
    10. ' (' → logprob: -11.14912223815918

Token 27: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12881262600421906
    2. ',' → logprob: -2.378812551498413
    3. ')' → logprob: -4.628812789916992
    4. ',a' → logprob: -4.753812789916992
    5. ',b' → logprob: -4.878812789916992
    6. '[' → logprob: -7.378812789916992
    7. ',x' → logprob: -8.503812789916992
    8. ',s' → logprob: -8.628812789916992
    9. ' ,' → logprob: -8.878812789916992
    10. 'a' → logprob: -9.003812789916992

Token 28: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.152169108390808
    2. ' a' → logprob: -2.1521692276000977
    3. 'a' → logprob: -2.4021692276000977
    4. '   ' → logprob: -2.7771692276000977
    5. 'b' → logprob: -2.7771692276000977
    6. 'return' → logprob: -2.9021692276000977
    7. ' ' → logprob: -3.0271692276000977
    8. ' for' → logprob: -3.1521692276000977
    9. ' b' → logprob: -3.4021692276000977
    10. '_' → logprob: -3.4021692276000977

Token 29: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13926300406455994
    2. ' a' → logprob: -2.2642629146575928
    3. '[' → logprob: -4.764263153076172
    4. '[a' → logprob: -5.014263153076172
    5. 'l' → logprob: -5.389263153076172
    6. ' l' → logprob: -6.264263153076172
    7. 'len' → logprob: -6.764263153076172
    8. ' [' → logprob: -6.889263153076172
    9. ' len' → logprob: -8.139263153076172
    10. 'sum' → logprob: -8.514263153076172

Token 30: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04391264542937279
    2. '(' → logprob: -3.168912649154663
    3. 'a' → logprob: -7.918912410736084
    4. '(s' → logprob: -8.543912887573242
    5. '((' → logprob: -9.293912887573242
    6. '(
' → logprob: -9.793912887573242
    7. '('' → logprob: -10.043912887573242
    8. '(x' → logprob: -10.418912887573242
    9. '(input' → logprob: -10.918912887573242
    10. '(abs' → logprob: -11.043912887573242

Token 31: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16508658230304718
    2. '[' → logprob: -1.9150866270065308
    3. '*' → logprob: -6.91508674621582
    4. ')*' → logprob: -7.29008674621582
    5. ')**' → logprob: -7.79008674621582
    6. '))' → logprob: -8.29008674621582
    7. '+' → logprob: -8.29008674621582
    8. ' )' → logprob: -8.41508674621582
    9. ')+' → logprob: -8.54008674621582
    10. ')>' → logprob: -8.66508674621582

Token 32: '111' (ID: 8780)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11599092930555344
    2. ' ' → logprob: -3.3659908771514893
    3. '2' → logprob: -3.8659908771514893
    4. '5' → logprob: -4.490991115570068
    5. '7' → logprob: -4.615991115570068
    6. '3' → logprob: -4.865991115570068
    7. '10' → logprob: -4.990991115570068
    8. 'int' → logprob: -5.365991115570068
    9. '4' → logprob: -5.990991115570068
    10. 'a' → logprob: -6.115991115570068

Token 33: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28499835729599
    2. '
' → logprob: -2.7849984169006348
    3. '_' → logprob: -3.0349984169006348
    4. ')' → logprob: -3.2849984169006348
    5. '(
' → logprob: -3.9099984169006348
    6. 's' → logprob: -4.534998416900635
    7. '=' → logprob: -4.534998416900635
    8. '+' → logprob: -5.034998416900635
    9. '\' → logprob: -5.159998416900635
    10. '*' → logprob: -5.159998416900635

Token 34: 'if' (ID: 366)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9807113409042358
    2. '_' → logprob: -1.1057113409042358
    3. ')' → logprob: -2.9807114601135254
    4. '_
' → logprob: -3.1057114601135254
    5. '(
' → logprob: -3.6057114601135254
    6. 's' → logprob: -3.9807114601135254
    7. '
' → logprob: -4.105711460113525
    8. '=' → logprob: -4.230711460113525
    9. 'n' → logprob: -4.355711460113525
    10. 'a' → logprob: -4.355711460113525

Token 35: ' len' (ID: 4631)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2717348337173462
    2. ' __' → logprob: -2.1467347145080566
    3. 's' → logprob: -2.8967347145080566
    4. ' ' → logprob: -3.2717347145080566
    5. ' _' → logprob: -4.646734714508057
    6. '__' → logprob: -4.646734714508057
    7. '_' → logprob: -5.396734714508057
    8. ' l' → logprob: -7.021734714508057
    9. ' len' → logprob: -7.021734714508057
    10. ' '' → logprob: -7.396734714508057

Token 36: '({' (ID: 3972)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.02980499155819416
    2. '(' → logprob: -3.5298049449920654
    3. ' (' → logprob: -10.404805183410645
    4. 's' → logprob: -10.904805183410645
    5. '(
' → logprob: -13.029805183410645
    6. '(l' → logprob: -14.029805183410645
    7. ' ' → logprob: -14.029805183410645
    8. '('' → logprob: -15.029805183410645
    9. '(S' → logprob: -15.279805183410645
    10. '(

' → logprob: -15.404805183410645

Token 37: '*' (ID: 9)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030124744400382042
    2. 'i' → logprob: -4.405124664306641
    3. 'c' → logprob: -4.780124664306641
    4. '*' → logprob: -5.780124664306641
    5. '*s' → logprob: -6.405124664306641
    6. 'x' → logprob: -6.530124664306641
    7. '(s' → logprob: -7.655124664306641
    8. ' s' → logprob: -7.780124664306641
    9. 'a' → logprob: -8.28012466430664
    10. '}' → logprob: -8.53012466430664

Token 38: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009537404985167086
    2. ' s' → logprob: -7.125953674316406
    3. '(s' → logprob: -9.000953674316406
    4. ' ' → logprob: -11.375953674316406
    5. 'I' → logprob: -12.500953674316406
    6. 'S' → logprob: -13.125953674316406
    7. '`s' → logprob: -13.750953674316406
    8. ''s' → logprob: -14.125953674316406
    9. '_s' → logprob: -14.250953674316406
    10. 'a' → logprob: -14.250953674316406

Token 39: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.002997316187247634
    2. ' })' → logprob: -6.002997398376465
    3. '}' → logprob: -7.752997398376465
    4. ' ' → logprob: -10.127997398376465
    5. ' }):' → logprob: -11.752997398376465
    6. ')' → logprob: -11.877997398376465
    7. '}>' → logprob: -12.377997398376465
    8. ')}' → logprob: -12.627997398376465
    9. '}))' → logprob: -12.752997398376465
    10. '-' → logprob: -12.752997398376465

Token 40: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5271496772766113
    2. '==' → logprob: -1.1521496772766113
    3. ' >' → logprob: -3.4021496772766113
    4. '<' → logprob: -3.7771496772766113
    5. ' ==' → logprob: -4.152149677276611
    6. '>=' → logprob: -4.277149677276611
    7. ' <' → logprob: -6.402149677276611
    8. ' >=' → logprob: -6.777149677276611
    9. '<|end|>' → logprob: -6.902149677276611
    10. '!=' → logprob: -6.902149677276611

Token 41: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.28065475821495056
    2. '1' → logprob: -2.0306546688079834
    3. ' ' → logprob: -2.5306546688079834
    4. '4' → logprob: -4.2806549072265625
    5. '6' → logprob: -4.7806549072265625
    6. '2' → logprob: -5.5306549072265625
    7. '5' → logprob: -5.5306549072265625
    8. 'len' → logprob: -6.5306549072265625
    9. ' len' → logprob: -6.7806549072265625
    10. '7' → logprob: -7.6556549072265625

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016262393444776535
    2. ' :' → logprob: -4.141262531280518
    3. ':
' → logprob: -9.39126205444336
    4. ' and' → logprob: -9.51626205444336
    5. ':**' → logprob: -10.76626205444336
    6. '>:' → logprob: -11.76626205444336
    7. 'and' → logprob: -12.01626205444336
    8. ' :
' → logprob: -12.26626205444336
    9. '>' → logprob: -12.39126205444336
    10. ':return' → logprob: -12.64126205444336

Token 43: '_(' (ID: 18811)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33225318789482117
    2. ' _' → logprob: -1.5822532176971436
    3. '
' → logprob: -3.9572532176971436
    4. '_
' → logprob: -4.3322529792785645
    5. ' print' → logprob: -4.3322529792785645
    6. '   ' → logprob: -4.4572529792785645
    7. 'print' → logprob: -5.0822529792785645
    8. ' ' → logprob: -5.8322529792785645
    9. ' 
' → logprob: -6.0822529792785645
    10. ' _
' → logprob: -6.2072529792785645

Token 44: 's' (ID: 82)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.694506049156189
    2. 'g' → logprob: -1.069506049156189
    3. ''' → logprob: -3.0695061683654785
    4. 's' → logprob: -3.5695061683654785
    5. '"' → logprob: -3.6945061683654785
    6. '0' → logprob: -4.1945061683654785
    7. ' F' → logprob: -4.5695061683654785
    8. ' g' → logprob: -4.8195061683654785
    9. 'l' → logprob: -4.9445061683654785
    10. '1' → logprob: -5.8195061683654785

Token 45: ')
' (ID: 446)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13181383907794952
    2. ')' → logprob: -2.2568137645721436
    3. '[' → logprob: -4.506814002990723
    4. '*)' → logprob: -6.131814002990723
    5. '))' → logprob: -6.756814002990723
    6. '+' → logprob: -6.881814002990723
    7. ')*' → logprob: -7.006814002990723
    8. ' )' → logprob: -8.006814002990723
    9. ' *' → logprob: -8.256814002990723
    10. '[::-' → logprob: -8.256814002990723

Token 46: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01969541795551777
    2. ' else' → logprob: -4.644695281982422
    3. 'elif' → logprob: -4.644695281982422
    4. '<|end|>' → logprob: -8.644695281982422
    5. ' elif' → logprob: -10.519695281982422
    6. '_else' → logprob: -11.519695281982422
    7. 'elser' → logprob: -12.019695281982422
    8. 'el' → logprob: -12.019695281982422
    9. '...' → logprob: -12.144695281982422
    10. ')' → logprob: -12.269695281982422

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005223324988037348
    2. '_:' → logprob: -6.005223274230957
    3. ':_' → logprob: -7.005223274230957
    4. ':
' → logprob: -7.130223274230957
    5. ' :' → logprob: -7.630223274230957
    6. '_' → logprob: -8.255223274230957
    7. ':def' → logprob: -9.130223274230957
    8. 'print' → logprob: -10.255223274230957
    9. ':l' → logprob: -11.255223274230957
    10. ':list' → logprob: -11.255223274230957

Token 48: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16723209619522095
    2. ' _' → logprob: -3.167232036590576
    3. '_(' → logprob: -3.667232036590576
    4. 'print' → logprob: -4.042232036590576
    5. ' print' → logprob: -4.042232036590576
    6. ' _(' → logprob: -4.542232036590576
    7. '_
' → logprob: -4.667232036590576
    8. '_:' → logprob: -4.792232036590576
    9. '_[' → logprob: -5.167232036590576
    10. ':' → logprob: -5.292232036590576

Token 49: ' h' (ID: 312)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5341063737869263
    2. 'print' → logprob: -1.4091063737869263
    3. '_(' → logprob: -2.6591062545776367
    4. '_[' → logprob: -3.6591062545776367
    5. 'for' → logprob: -3.9091062545776367
    6. ' print' → logprob: -5.034106254577637
    7. 's' → logprob: -5.034106254577637
    8. ' _' → logprob: -5.159106254577637
    9. '_
' → logprob: -5.534106254577637
    10. ' _(' → logprob: -5.534106254577637

Token 50: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7318060994148254
    2. '=s' → logprob: -0.7318060994148254
    3. '=h' → logprob: -3.9818060398101807
    4. ' =' → logprob: -5.23180627822876
    5. '=l' → logprob: -5.48180627822876
    6. '=input' → logprob: -6.48180627822876
    7. '=len' → logprob: -6.48180627822876
    8. '=int' → logprob: -6.48180627822876
    9. '(s' → logprob: -6.60680627822876
    10. '=g' → logprob: -7.48180627822876

Token 51: '(F' (ID: 12044)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.12843401730060577
    2. '(' → logprob: -3.0034339427948
    3. '(g' → logprob: -3.0034339427948
    4. '('' → logprob: -5.753434181213379
    5. '(input' → logprob: -5.753434181213379
    6. '(l' → logprob: -5.753434181213379
    7. 's' → logprob: -6.128434181213379
    8. '(max' → logprob: -6.128434181213379
    9. '(h' → logprob: -6.503434181213379
    10. '(f' → logprob: -6.503434181213379

Token 52: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006392761133611202
    2. '(l' → logprob: -5.756392955780029
    3. '(' → logprob: -6.131392955780029
    4. 's' → logprob: -7.256392955780029
    5. ')' → logprob: -9.256392478942871
    6. '(g' → logprob: -9.881392478942871
    7. '((' → logprob: -10.381392478942871
    8. ' (' → logprob: -10.381392478942871
    9. '(a' → logprob: -10.881392478942871
    10. ')(' → logprob: -11.131392478942871

Token 53: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08191194385290146
    2. '[' → logprob: -3.206912040710449
    3. ')' → logprob: -3.956912040710449
    4. '(' → logprob: -4.206912040710449
    5. '(s' → logprob: -7.206912040710449
    6. ')))' → logprob: -7.456912040710449
    7. '))+' → logprob: -7.456912040710449
    8. ')+' → logprob: -7.831912040710449
    9. '))-' → logprob: -7.831912040710449
    10. ' ))' → logprob: -8.08191204071045

Token 54: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1671102046966553
    2. '(' → logprob: -1.4171102046966553
    3. ')' → logprob: -2.1671102046966553
    4. ' ' → logprob: -2.2921102046966553
    5. '*' → logprob: -2.5421102046966553
    6. '<|end|>' → logprob: -3.4171102046966553
    7. '+
' → logprob: -4.292110443115234
    8. '-' → logprob: -4.292110443115234
    9. ' 
' → logprob: -4.417110443115234
    10. '
' → logprob: -4.917110443115234

Token 55: ' if' (ID: 538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06715495884418488
    2. '+' → logprob: -4.942154884338379
    3. '_
' → logprob: -4.942154884338379
    4. '-' → logprob: -5.067154884338379
    5. 'p' → logprob: -5.067154884338379
    6. 'if' (adapté à ' if') → logprob: -5.067154884338379
    7. 'h' → logprob: -5.442154884338379
    8. 's' → logprob: -5.692154884338379
    9. 'print' → logprob: -5.692154884338379
    10. 'n' → logprob: -6.067154884338379

Token 56: ' int' (ID: 677)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.7958239316940308
    2. ' g' → logprob: -0.7958239316940308
    3. 'h' → logprob: -3.6708240509033203
    4. ' len' → logprob: -3.7958240509033203
    5. 'g' → logprob: -3.9208240509033203
    6. ' ' → logprob: -5.17082405090332
    7. ' all' → logprob: -5.17082405090332
    8. ' s' → logprob: -5.42082405090332
    9. ' l' → logprob: -5.54582405090332
    10. ' int' → logprob: -5.54582405090332

Token 57: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4683203101158142
    2. '(g' → logprob: -1.343320369720459
    3. '(F' → logprob: -2.218320369720459
    4. '(' → logprob: -6.343320369720459
    5. '(f' → logprob: -6.968320369720459
    6. '(h' → logprob: -7.718320369720459
    7. '(G' → logprob: -7.968320369720459
    8. '(a' → logprob: -8.3433198928833
    9. '(l' → logprob: -9.4683198928833
    10. '(_' → logprob: -9.7183198928833

Token 58: ')>' (ID: 37292)
  Prédit: ')>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.647222638130188
    2. ')' → logprob: -1.272222638130188
    3. ')<' → logprob: -2.1472225189208984
    4. ')>=' → logprob: -3.3972225189208984
    5. ')<=' → logprob: -4.022222518920898
    6. '[' → logprob: -4.022222518920898
    7. '[:' → logprob: -5.897222518920898
    8. ')==' → logprob: -6.022222518920898
    9. ')%' → logprob: -6.147222518920898
    10. '[h' → logprob: -6.272222518920898

Token 59: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.020785711705684662
    2. '100' → logprob: -4.895785808563232
    3. 'g' → logprob: -5.520785808563232
    4. '999' → logprob: -6.020785808563232
    5. ' h' → logprob: -6.270785808563232
    6. '99' → logprob: -6.895785808563232
    7. ' ' → logprob: -7.270785808563232
    8. '0' → logprob: -8.270785331726074
    9. '111' → logprob: -8.270785331726074
    10. '10' → logprob: -8.520785331726074

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030980966985225677
    2. ':
' → logprob: -6.378098011016846
    3. '+' → logprob: -7.128098011016846
    4. ':h' → logprob: -8.503098487854004
    5. ' and' → logprob: -9.128098487854004
    6. '-' → logprob: -9.503098487854004
    7. ':return' → logprob: -10.253098487854004
    8. '*' → logprob: -10.753098487854004
    9. ' or' → logprob: -10.878098487854004
    10. '+h' → logprob: -11.003098487854004

Token 61: '_(' (ID: 18811)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10251028090715408
    2. ' _' → logprob: -3.1025102138519287
    3. 'print' → logprob: -4.352510452270508
    4. ' print' → logprob: -4.477510452270508
    5. '
' → logprob: -4.602510452270508
    6. '       ' → logprob: -4.977510452270508
    7. '_
' → logprob: -5.352510452270508
    8. '   ' → logprob: -5.602510452270508
    9. ' ' → logprob: -7.352510452270508
    10. '    ' → logprob: -7.852510452270508

Token 62: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07106947898864746
    2. 'int' → logprob: -3.3210694789886475
    3. 'h' → logprob: -3.8210694789886475
    4. 's' → logprob: -5.821069717407227
    5. ' g' → logprob: -6.071069717407227
    6. 'str' → logprob: -6.196069717407227
    7. 'l' → logprob: -6.696069717407227
    8. 'F' → logprob: -7.696069717407227
    9. ' int' → logprob: -8.321069717407227
    10. '   ' → logprob: -8.446069717407227

Token 63: '(F' (ID: 12044)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001959678716957569
    2. ' (' → logprob: -6.626959800720215
    3. '(' → logprob: -7.501959800720215
    4. '(h' → logprob: -10.751959800720215
    5. 's' → logprob: -11.001959800720215
    6. '('' → logprob: -11.376959800720215
    7. ' ' → logprob: -12.126959800720215
    8. '((' → logprob: -12.376959800720215
    9. ')(' → logprob: -12.501959800720215
    10. ')' → logprob: -12.751959800720215

Token 64: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003210395807400346
    2. '(' → logprob: -6.628210544586182
    3. ' (' → logprob: -7.003210544586182
    4. 's' → logprob: -7.128210544586182
    5. ')' → logprob: -9.628210067749023
    6. '('' → logprob: -10.753210067749023
    7. ')(' → logprob: -11.003210067749023
    8. ' s' → logprob: -11.253210067749023
    9. ' ' → logprob: -11.378210067749023
    10. '((' → logprob: -11.878210067749023

Token 65: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0303336251527071
    2. '))' → logprob: -4.030333518981934
    3. ')))
' → logprob: -4.905333518981934
    4. ')' → logprob: -6.280333518981934
    5. '))))' → logprob: -6.405333518981934
    6. ' ' → logprob: -8.530333518981934
    7. '))+' → logprob: -8.780333518981934
    8. ')));' → logprob: -8.780333518981934
    9. ')))

' → logprob: -8.905333518981934
    10. ')))
' → logprob: -9.405333518981934

Token 66: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.034545522183179855
    2. ' else' → logprob: -3.534545421600342
    3. ')' → logprob: -6.034545421600342
    4. '<|end|>' → logprob: -6.534545421600342
    5. 'elif' → logprob: -7.909545421600342
    6. 'e' → logprob: -8.6595458984375
    7. 's' → logprob: -9.2845458984375
    8. '()' → logprob: -9.5345458984375
    9. '   ' → logprob: -10.0345458984375
    10. '```' → logprob: -10.4095458984375

Token 67: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.030103925615549088
    2. ' else' → logprob: -3.530103921890259
    3. 'elif' → logprob: -9.03010368347168
    4. ' ' → logprob: -9.65510368347168
    5. '   ' → logprob: -9.65510368347168
    6. 'e' → logprob: -10.53010368347168
    7. '	else' → logprob: -11.28010368347168
    8. 'el' → logprob: -11.65510368347168
    9. '()' → logprob: -11.78010368347168
    10. '_else' → logprob: -11.78010368347168

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3907872438430786
    2. '_(' → logprob: -1.2657872438430786
    3. '_' → logprob: -3.515787124633789
    4. '_:' → logprob: -4.765787124633789
    5. ' _(' → logprob: -6.515787124633789
    6. ':(' → logprob: -7.640787124633789
    7. '(' → logprob: -7.890787124633789
    8. '   ' → logprob: -8.265787124633789
    9. ':_' → logprob: -8.390787124633789
    10. ' :' → logprob: -8.765787124633789

Token 69: '_(' (ID: 18811)
  Prédit: '_('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_(' → logprob: -0.3406047224998474
    2. 'h' → logprob: -1.3406047821044922
    3. '_' → logprob: -3.715604782104492
    4. 'print' → logprob: -6.590604782104492
    5. '_h' → logprob: -8.340604782104492
    6. 'int' → logprob: -8.465604782104492
    7. 's' → logprob: -9.090604782104492
    8. 'F' → logprob: -9.090604782104492
    9. '(h' → logprob: -9.090604782104492
    10. ' _(' → logprob: -9.215604782104492

Token 70: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.44366294145584106
    2. 'g' → logprob: -1.5686628818511963
    3. 'F' → logprob: -2.0686628818511963
    4. 'int' → logprob: -4.068663120269775
    5. 's' → logprob: -5.318663120269775
    6. 'str' → logprob: -7.693663120269775
    7. 'f' → logprob: -7.818663120269775
    8. ' h' → logprob: -8.568662643432617
    9. 'l' → logprob: -8.693662643432617
    10. ')' → logprob: -9.318662643432617

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.804671233519912e-05
    2. '+' → logprob: -10.12508773803711
    3. '-' → logprob: -11.25008773803711
    4. ' )' → logprob: -11.37508773803711
    5. '))' → logprob: -11.62508773803711
    6. ')
' → logprob: -11.75008773803711
    7. '+)' → logprob: -13.50008773803711
    8. '<|end|>' → logprob: -13.50008773803711
    9. ')))' → logprob: -14.25008773803711
    10. '-)' → logprob: -15.12508773803711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 27.54%
Précision adaptée (1ère position): 28.99%
Précision (top 10): 62.32%
================================================================================
