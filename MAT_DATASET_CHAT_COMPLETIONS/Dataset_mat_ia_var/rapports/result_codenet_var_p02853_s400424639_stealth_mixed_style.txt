================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calc_reward():
    x_y = input().split()
    reward = 0
    stuff = [int(x) for x in x_y]
    
    lookups = [0, 300000, 200000, 100000]
    
    if (stuff[0] in [1,2,3]):
        reward = reward + lookups[stuff[0]]
    if (stuff[1] is not None and stuff[1]>0 and stuff[1]<4):
        reward += lookups[stuff[1]]
    
    # procedurally check bonus condition
    def check_bonus(r):
        if r == 600000:
            return 1000000
        return r

    reward = check_bonus(reward)
    print(reward)
    
calc_reward()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calc' (ID: 25691)
  → Token d'amorce (pas de prédiction)

Token 2: '_reward' (ID: 88836)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005576067604124546
    2. '_' → logprob: -5.255576133728027
    3. '(:' → logprob: -9.505576133728027
    4. '(_' → logprob: -9.880576133728027
    5. '```' → logprob: -10.005576133728027
    6. ':' → logprob: -10.130576133728027
    7. '(_:' → logprob: -10.130576133728027
    8. ''' → logprob: -10.630576133728027
    9. ' (' → logprob: -10.755576133728027
    10. '"' → logprob: -12.255576133728027

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.666476309299469
    2. ':' → logprob: -1.4164762496948242
    3. '\' → logprob: -2.666476249694824
    4. '(' → logprob: -2.666476249694824
    5. '():' → logprob: -3.291476249694824
    6. '```' → logprob: -3.291476249694824
    7. '\n' → logprob: -4.541476249694824
    8. '    
' → logprob: -5.041476249694824
    9. '()' → logprob: -6.541476249694824
    10. ':return' → logprob: -6.541476249694824

Token 5: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5793973803520203
    2. '   ' → logprob: -1.079397439956665
    3. 'return' → logprob: -2.704397439956665
    4. ' ' → logprob: -4.579397201538086
    5. '(' → logprob: -5.204397201538086
    6. '    ' → logprob: -5.954397201538086
    7. '\' → logprob: -6.204397201538086
    8. '`' → logprob: -6.204397201538086
    9. ''' → logprob: -6.579397201538086
    10. '_' → logprob: -6.954397201538086

Token 6: '_y' (ID: 9410)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6046779751777649
    2. '_' → logprob: -1.2296779155731201
    3. '+' → logprob: -3.10467791557312
    4. ')' → logprob: -3.22967791557312
    5. '.' → logprob: -3.72967791557312
    6. '[' → logprob: -4.229678153991699
    7. ' =' → logprob: -4.604678153991699
    8. '*' → logprob: -4.854678153991699
    9. ',' → logprob: -5.229678153991699
    10. ' ' → logprob: -5.979678153991699

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3459702432155609
    2. '=' → logprob: -1.9709702730178833
    3. '[' → logprob: -2.3459701538085938
    4. '_' → logprob: -4.095970153808594
    5. '[]' → logprob: -4.345970153808594
    6. ')' → logprob: -4.595970153808594
    7. '[:]' → logprob: -5.595970153808594
    8. '(' → logprob: -5.845970153808594
    9. '.' → logprob: -6.095970153808594
    10. '_coords' → logprob: -6.845970153808594

Token 8: ' input' (ID: 3422)
  Prédit: ' env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' env' → logprob: -0.638319730758667
    2. ' []' → logprob: -1.763319730758667
    3. ' [' → logprob: -2.638319730758667
    4. '[]' → logprob: -2.888319730758667
    5. 'env' → logprob: -3.138319730758667
    6. ' environment' → logprob: -3.513319730758667
    7. ' np' → logprob: -4.138319969177246
    8. ' get' → logprob: -4.263319969177246
    9. ' ' → logprob: -4.388319969177246
    10. ' input' → logprob: -4.763319969177246

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011852397583425045
    2. '('' → logprob: -5.136852264404297
    3. ''' → logprob: -6.011852264404297
    4. '("("' → logprob: -6.386852264404297
    5. '"' → logprob: -6.886852264404297
    6. '(
' → logprob: -8.386852264404297
    7. '[' → logprob: -8.886852264404297
    8. 's' → logprob: -9.386852264404297
    9. '`' → logprob: -10.011852264404297
    10. '```' → logprob: -10.261852264404297

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008617527782917023
    2. 'strip' → logprob: -4.758617401123047
    3. 'replace' → logprob: -13.383617401123047
    4. 'rstrip' → logprob: -14.258617401123047
    5. ' split' → logprob: -15.008617401123047
    6. 'spl' → logprob: -15.633617401123047
    7. 'sp' → logprob: -16.258617401123047
    8. 's' → logprob: -16.258617401123047
    9. 'startswith' → logprob: -16.508617401123047
    10. 'lower' → logprob: -16.758617401123047

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026461225003004074
    2. '('' → logprob: -4.026461124420166
    3. '("("' → logprob: -5.026461124420166
    4. '()' → logprob: -6.526461124420166
    5. '(`' → logprob: -9.776461601257324
    6. '("' → logprob: -10.651461601257324
    7. '"' → logprob: -10.651461601257324
    8. '`' → logprob: -10.776461601257324
    9. '((' → logprob: -10.776461601257324
    10. ' (' → logprob: -10.776461601257324

Token 12: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05096455663442612
    2. '   ' → logprob: -4.17596435546875
    3. '.' → logprob: -4.80096435546875
    4. '```' → logprob: -5.42596435546875
    5. 'if' → logprob: -5.55096435546875
    6. '[
' → logprob: -5.55096435546875
    7. '`' → logprob: -6.30096435546875
    8. 'return' → logprob: -6.42596435546875
    9. '_' → logprob: -6.55096435546875
    10. ',' → logprob: -6.55096435546875

Token 13: ' reward' (ID: 16563)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9186477065086365
    2. 'x' → logprob: -1.0436477661132812
    3. '   ' → logprob: -2.4186477661132812
    4. 'return' → logprob: -3.7936477661132812
    5. ' if' → logprob: -3.9186477661132812
    6. 'if' → logprob: -3.9186477661132812
    7. 'r' → logprob: -4.043647766113281
    8. ' ' → logprob: -4.043647766113281
    9. '```' → logprob: -4.293647766113281
    10. ' x' → logprob: -4.543647766113281

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9174202084541321
    2. '=' → logprob: -1.5424201488494873
    3. '_' → logprob: -1.6674201488494873
    4. ' =' → logprob: -2.2924201488494873
    5. '(' → logprob: -2.9174201488494873
    6. 's' → logprob: -3.7924201488494873
    7. '[:]' → logprob: -4.542420387268066
    8. ' +=' → logprob: -6.417420387268066
    9. ')' → logprob: -6.667420387268066
    10. '(s' → logprob: -7.167420387268066

Token 15: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31537771224975586
    2. ' ' → logprob: -1.6903777122497559
    3. ' int' → logprob: -3.190377712249756
    4. 'int' → logprob: -3.440377712249756
    5. ' float' → logprob: -5.565377712249756
    6. '[int' → logprob: -5.565377712249756
    7. 'float' → logprob: -6.315377712249756
    8. ' []' → logprob: -6.815377712249756
    9. '[]' → logprob: -7.690377712249756
    10. ' [' → logprob: -7.690377712249756

Token 16: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5111649632453918
    2. 'float' → logprob: -1.761164903640747
    3. '0' → logprob: -2.011164903640747
    4. '[int' → logprob: -2.511164903640747
    5. 'sum' → logprob: -5.386165142059326
    6. 'list' → logprob: -6.511165142059326
    7. '[' → logprob: -6.636165142059326
    8. '(int' → logprob: -7.011165142059326
    9. ' int' → logprob: -7.136165142059326
    10. 'x' → logprob: -7.136165142059326

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6123238205909729
    2. '\n' → logprob: -2.112323760986328
    3. '\' → logprob: -2.362323760986328
    4. 'for' → logprob: -3.112323760986328
    5. '    
' → logprob: -3.362323760986328
    6. '
' → logprob: -3.612323760986328
    7. '[' → logprob: -3.737323760986328
    8. '```' → logprob: -3.987323760986328
    9. ' for' → logprob: -4.112323760986328
    10. ' ' → logprob: -4.112323760986328

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25885316729545593
    2. '[' → logprob: -2.5088531970977783
    3. '```' → logprob: -2.7588531970977783
    4. 'for' → logprob: -3.7588531970977783
    5. ' for' → logprob: -3.8838531970977783
    6. '_' → logprob: -4.508852958679199
    7. ' ' → logprob: -5.508852958679199
    8. '`' → logprob: -5.758852958679199
    9. '``' → logprob: -5.758852958679199
    10. '    
' → logprob: -5.883852958679199

Token 19: ' stuff' (ID: 9350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0960984230041504
    2. ' for' → logprob: -1.2210984230041504
    3. '   ' → logprob: -1.5960984230041504
    4. '```' → logprob: -2.7210984230041504
    5. '[' → logprob: -3.4710984230041504
    6. 'if' → logprob: -3.7210984230041504
    7. ' if' → logprob: -4.22109842300415
    8. 'i' → logprob: -4.34609842300415
    9. ' ' → logprob: -5.09609842300415
    10. 'x' → logprob: -5.59609842300415

Token 20: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009158450178802013
    2. '=' → logprob: -6.509158611297607
    3. ' =' → logprob: -6.509158611297607
    4. '[
' → logprob: -7.134158611297607
    5. '_' → logprob: -7.259158611297607
    6. '[:]' → logprob: -7.259158611297607
    7. '.' → logprob: -7.509158611297607
    8. '   ' → logprob: -8.00915813446045
    9. 'for' → logprob: -8.00915813446045
    10. '[]' → logprob: -8.00915813446045

Token 21: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5668722987174988
    2. ' []' → logprob: -1.3168723583221436
    3. '{}' → logprob: -2.3168723583221436
    4. 'set' → logprob: -3.8168723583221436
    5. 'x' → logprob: -4.3168721199035645
    6. ' set' → logprob: -5.0668721199035645
    7. ' {}' → logprob: -5.1918721199035645
    8. ' x' → logprob: -5.3168721199035645
    9. 'list' → logprob: -5.6918721199035645
    10. '[' → logprob: -6.0668721199035645

Token 22: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0474460124969482
    2. 'x' → logprob: -1.4224460124969482
    3. 'int' → logprob: -1.5474460124969482
    4. ']' → logprob: -1.9224460124969482
    5. '(int' → logprob: -4.422446250915527
    6. 'float' → logprob: -5.297446250915527
    7. '(x' → logprob: -5.422446250915527
    8. '[]' → logprob: -5.422446250915527
    9. '[int' → logprob: -5.547446250915527
    10. 'list' → logprob: -6.047446250915527

Token 23: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.035678066313266754
    2. '(i' → logprob: -3.4106781482696533
    3. '(' → logprob: -6.660677909851074
    4. '(s' → logprob: -8.035677909851074
    5. '(a' → logprob: -8.285677909851074
    6. '(token' → logprob: -9.160677909851074
    7. '(item' → logprob: -10.785677909851074
    8. ']' → logprob: -11.285677909851074
    9. '(value' → logprob: -11.535677909851074
    10. '(n' → logprob: -12.160677909851074

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008557165856473148
    2. '(x' → logprob: -7.750855922698975
    3. ')]' → logprob: -8.375855445861816
    4. '(i' → logprob: -9.875855445861816
    5. '(token' → logprob: -9.875855445861816
    6. ' )' → logprob: -10.625855445861816
    7. '(s' → logprob: -11.125855445861816
    8. 'token' → logprob: -11.250855445861816
    9. '(' → logprob: -11.875855445861816
    10. '(y' → logprob: -12.000855445861816

Token 25: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4395366609096527
    2. ')' → logprob: -1.939536690711975
    3. ' for' → logprob: -2.4395365715026855
    4. 'for' → logprob: -2.5645365715026855
    5. '(i' → logprob: -3.6895365715026855
    6. '(s' → logprob: -4.8145365715026855
    7. ']' → logprob: -4.8145365715026855
    8. '(y' → logprob: -6.3145365715026855
    9. '(st' → logprob: -6.6895365715026855
    10. '(token' → logprob: -6.9395365715026855

Token 26: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0036057746037840843
    2. 'x' → logprob: -5.628605842590332
    3. ' ' → logprob: -12.503605842590332
    4. '(x' → logprob: -13.628605842590332
    5. '	x' → logprob: -15.003605842590332
    6. '  ' → logprob: -15.253605842590332
    7. '_x' → logprob: -16.253604888916016
    8. ')x' → logprob: -17.003604888916016
    9. ' range' → logprob: -17.253604888916016
    10. '_' → logprob: -17.378604888916016

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006035092286765575
    2. 'in' → logprob: -5.131035327911377
    3. 'x' → logprob: -10.006034851074219
    4. ' x' → logprob: -10.631034851074219
    5. ' ' → logprob: -10.881034851074219
    6. '_' → logprob: -12.506034851074219
    7. '(x' → logprob: -12.506034851074219
    8. '_x' → logprob: -13.006034851074219
    9. '  ' → logprob: -13.381034851074219
    10. 's' → logprob: -13.881034851074219

Token 28: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06995777040719986
    2. ' x' → logprob: -2.694957733154297
    3. '(x' → logprob: -11.319957733154297
    4. ' ' → logprob: -11.819957733154297
    5. '  ' → logprob: -14.944957733154297
    6. '   ' → logprob: -15.069957733154297
    7. ']' → logprob: -15.194957733154297
    8. 'range' → logprob: -15.194957733154297
    9. '	x' → logprob: -15.194957733154297
    10. ')x' → logprob: -15.319957733154297

Token 29: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0002142650482710451
    2. '_' → logprob: -8.500214576721191
    3. '_x' → logprob: -12.250214576721191
    4. ' _' → logprob: -12.625214576721191
    5. '_s' → logprob: -13.625214576721191
    6. '_)' → logprob: -15.125214576721191
    7. 'y' → logprob: -15.250214576721191
    8. ')' → logprob: -15.625214576721191
    9. '_]' → logprob: -16.375213623046875
    10. '_i' → logprob: -16.500213623046875

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009817203972488642
    2. ')]' → logprob: -7.62598180770874
    3. '])' → logprob: -8.125981330871582
    4. ' ]' → logprob: -9.125981330871582
    5. '()]' → logprob: -9.625981330871582
    6. ')' → logprob: -12.250981330871582
    7. '])]' → logprob: -12.250981330871582
    8. ']
' → logprob: -12.750981330871582
    9. ':]' → logprob: -13.125981330871582
    10. ']]' → logprob: -13.375981330871582

Token 31: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3944244980812073
    2. '[' → logprob: -2.6444244384765625
    3. '
' → logprob: -3.1444244384765625
    4. '\n' → logprob: -3.2694244384765625
    5. '\' → logprob: -3.3944244384765625
    6. ' ' → logprob: -3.6444244384765625
    7. '```' → logprob: -4.0194244384765625
    8. 'for' → logprob: -4.2694244384765625
    9. '_' → logprob: -4.2694244384765625
    10. ' for' → logprob: -4.5194244384765625

Token 32: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8047346472740173
    2. 'for' → logprob: -1.429734706878662
    3. '   ' → logprob: -2.554734706878662
    4. 'if' → logprob: -2.554734706878662
    5. 'r' → logprob: -2.804734706878662
    6. 'n' → logprob: -3.929734706878662
    7. ' for' → logprob: -3.929734706878662
    8. ' if' → logprob: -4.054734706878662
    9. ' ' → logprob: -4.304734706878662
    10. 'f' → logprob: -4.929734706878662

Token 33: ' look' (ID: 1631)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8491953015327454
    2. 'r' → logprob: -1.2241952419281006
    3. 'f' → logprob: -2.0991952419281006
    4. 'i' → logprob: -2.7241952419281006
    5. ' for' → logprob: -3.7241952419281006
    6. '   ' → logprob: -3.8491952419281006
    7. 'n' → logprob: -3.8491952419281006
    8. ' ' → logprob: -5.22419548034668
    9. 'if' → logprob: -5.34919548034668
    10. '[' → logprob: -5.97419548034668

Token 34: 'ups' (ID: 14409)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.2955115735530853
    2. 'up' → logprob: -1.7955116033554077
    3. '_' → logprob: -3.045511484146118
    4. '_up' → logprob: -4.920511722564697
    5. '=' → logprob: -5.045511722564697
    6. 'for' → logprob: -5.170511722564697
    7. 's' → logprob: -5.295511722564697
    8. '   ' → logprob: -6.170511722564697
    9. ' =' → logprob: -6.170511722564697
    10. '(' → logprob: -6.170511722564697

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31338709592819214
    2. ' =' → logprob: -1.438387155532837
    3. '[' → logprob: -3.813387155532837
    4. '_' → logprob: -4.813386917114258
    5. '(' → logprob: -8.438386917114258
    6. '=[]' → logprob: -8.563386917114258
    7. ')' → logprob: -8.813386917114258
    8. ']' → logprob: -8.813386917114258
    9. ' ' → logprob: -9.063386917114258
    10. ',' → logprob: -9.188386917114258

Token 36: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6299842000007629
    2. '[' → logprob: -1.6299841403961182
    3. '{}' → logprob: -1.7549841403961182
    4. ' {' → logprob: -3.254984140396118
    5. '[{' → logprob: -3.629984140396118
    6. ' [' → logprob: -4.379984378814697
    7. ' {}' → logprob: -5.254984378814697
    8. '{"' → logprob: -5.504984378814697
    9. '[]' → logprob: -5.629984378814697
    10. ' [{' → logprob: -6.379984378814697

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23871533572673798
    2. '1' → logprob: -2.738715410232544
    3. '(' → logprob: -2.988715410232544
    4. '[' → logprob: -3.113715410232544
    5. '100' → logprob: -4.363715171813965
    6. '10' → logprob: -4.988715171813965
    7. '   ' → logprob: -5.363715171813965
    8. ' ' → logprob: -5.613715171813965
    9. '3' → logprob: -5.863715171813965
    10. '5' → logprob: -5.863715171813965

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056493066251277924
    2. ']' → logprob: -2.931493043899536
    3. ' ,' → logprob: -7.431493282318115
    4. ' ]' → logprob: -7.806493282318115
    5. ',
' → logprob: -8.056492805480957
    6. ']*' → logprob: -9.056492805480957
    7. '0' → logprob: -9.681492805480957
    8. ']int' → logprob: -10.056492805480957
    9. ' for' → logprob: -11.181492805480957
    10. '1' → logprob: -11.181492805480957

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4502127468585968
    2. '1' → logprob: -1.4502127170562744
    3. '10' → logprob: -3.7002127170562744
    4. '0' → logprob: -3.9502127170562744
    5. '5' → logprob: -4.3252129554748535
    6. '100' → logprob: -4.5752129554748535
    7. '3' → logprob: -4.5752129554748535
    8. '2' → logprob: -4.5752129554748535
    9. '50' → logprob: -4.8252129554748535
    10. '20' → logprob: -5.2002129554748535

Token 40: '300' (ID: 4095)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7502935528755188
    2. '0' → logprob: -1.875293493270874
    3. '10' → logprob: -2.875293493270874
    4. '5' → logprob: -3.000293493270874
    5. '100' → logprob: -3.125293493270874
    6. '2' → logprob: -3.250293493270874
    7. '3' → logprob: -3.250293493270874
    8. '50' → logprob: -3.875293493270874
    9. '4' → logprob: -4.125293731689453
    10. '20' → logprob: -4.250293731689453

Token 41: '000' (ID: 1302)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018840155098587275
    2. '0' → logprob: -6.6268839836120605
    3. ' ,' → logprob: -7.8768839836120605
    4. ']' → logprob: -9.001884460449219
    5. ',
' → logprob: -11.251884460449219
    6. '   ' → logprob: -11.501884460449219
    7. '300' → logprob: -11.751884460449219
    8. '00' → logprob: -11.876884460449219
    9. ' ' → logprob: -12.501884460449219
    10. '000' → logprob: -13.001884460449219

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006588232354260981
    2. '0' → logprob: -8.250658988952637
    3. ']' → logprob: -8.625658988952637
    4. ' ,' → logprob: -8.625658988952637
    5. ',
' → logprob: -11.000658988952637
    6. ' ]' → logprob: -11.375658988952637
    7. ',

' → logprob: -12.500658988952637
    8. '000' → logprob: -13.625658988952637
    9. '300' → logprob: -13.750658988952637
    10. ' ' → logprob: -14.250658988952637

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2073655128479004
    2. '600' → logprob: -2.8323655128479004
    3. '500' → logprob: -3.2073655128479004
    4. '700' → logprob: -3.5823655128479004
    5. '100' → logprob: -4.2073655128479
    6. '400' → logprob: -4.9573655128479
    7. '300' → logprob: -4.9573655128479
    8. '150' → logprob: -5.3323655128479
    9. '200' → logprob: -5.3323655128479
    10. '450' → logprob: -5.3323655128479

Token 44: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -1.3602715730667114
    2. '500' → logprob: -1.3602715730667114
    3. '700' → logprob: -2.110271453857422
    4. '100' → logprob: -2.485271453857422
    5. '600' → logprob: -2.485271453857422
    6. '150' → logprob: -2.860271453857422
    7. '400' → logprob: -3.110271453857422
    8. '300' → logprob: -3.485271453857422
    9. '450' → logprob: -4.360271453857422
    10. '800' → logprob: -4.860271453857422

Token 45: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03186686709523201
    2. '00' → logprob: -3.5318667888641357
    3. '0' → logprob: -6.281867027282715
    4. ',' → logprob: -8.656867027282715
    5. ']' → logprob: -9.906867027282715
    6. '001' → logprob: -12.156867027282715
    7. ' ' → logprob: -12.656867027282715
    8. '_' → logprob: -13.031867027282715
    9. '])' → logprob: -13.031867027282715
    10. '   ' → logprob: -13.281867027282715

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007144584087654948
    2. ']' → logprob: -7.875714302062988
    3. ' ,' → logprob: -9.000714302062988
    4. ',
' → logprob: -9.250714302062988
    5. '0' → logprob: -9.375714302062988
    6. ',

' → logprob: -11.625714302062988
    7. '300' → logprob: -12.250714302062988
    8. ' ]' → logprob: -12.250714302062988
    9. ' ' → logprob: -12.375714302062988
    10. '00' → logprob: -13.375714302062988

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3622297942638397
    2. '100' → logprob: -1.362229824066162
    3. '150' → logprob: -3.987229824066162
    4. '300' → logprob: -4.612229824066162
    5. '500' → logprob: -5.737229824066162
    6. '120' → logprob: -5.862229824066162
    7. '400' → logprob: -6.112229824066162
    8. '250' → logprob: -6.237229824066162
    9. '200' → logprob: -6.362229824066162
    10. '800' → logprob: -6.737229824066162

Token 48: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3178803324699402
    2. '150' → logprob: -2.067880392074585
    3. ' ' → logprob: -2.692880392074585
    4. '500' → logprob: -3.692880392074585
    5. '300' → logprob: -4.317880153656006
    6. '200' → logprob: -4.817880153656006
    7. '400' → logprob: -4.942880153656006
    8. '120' → logprob: -5.442880153656006
    9. '250' → logprob: -5.692880153656006
    10. '700' → logprob: -5.817880153656006

Token 49: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0036437876988202333
    2. '00' → logprob: -5.878643989562988
    3. '0' → logprob: -7.128643989562988
    4. ']' → logprob: -10.753643989562988
    5. ',' → logprob: -11.628643989562988
    6. '001' → logprob: -13.566143989562988
    7. ')' → logprob: -13.566143989562988
    8. '_' → logprob: -14.253643989562988
    9. '۰۰' → logprob: -14.441143989562988
    10. ' ' → logprob: -14.566143989562988

Token 50: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12786856293678284
    2. ']' → logprob: -2.12786865234375
    3. '0' → logprob: -7.25286865234375
    4. ' ]' → logprob: -8.62786865234375
    5. ' ,' → logprob: -10.50286865234375
    6. ',
' → logprob: -12.00286865234375
    7. '   ' → logprob: -12.50286865234375
    8. '1' → logprob: -12.50286865234375
    9. ',...' → logprob: -14.00286865234375
    10. ' ' → logprob: -14.00286865234375

Token 51: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20979085564613342
    2. '   ' → logprob: -2.2097909450531006
    3. '<|end|>' → logprob: -2.9597909450531006
    4. '    
' → logprob: -4.4597907066345215
    5. ' for' → logprob: -5.3347907066345215
    6. 'for' → logprob: -5.8347907066345215
    7. '```' → logprob: -6.2097907066345215
    8. '<|end|>' → logprob: -6.3347907066345215
    9. ',' → logprob: -7.5847907066345215
    10. '  
' → logprob: -7.8347907066345215

Token 52: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7081815600395203
    2. ' for' → logprob: -0.8331815600395203
    3. '   ' → logprob: -2.708181619644165
    4. ' if' → logprob: -6.458181381225586
    5. 'if' → logprob: -6.958181381225586
    6. 'f' → logprob: -7.458181381225586
    7. 'r' → logprob: -7.458181381225586
    8. 'n' → logprob: -7.583181381225586
    9. '
' → logprob: -7.583181381225586
    10. 'i' → logprob: -7.833181381225586

Token 53: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1286737620830536
    2. ' for' → logprob: -2.378673791885376
    3. '   ' → logprob: -4.378673553466797
    4. 'if' (adapté à ' if') → logprob: -5.003673553466797
    5. 'n' → logprob: -5.753673553466797
    6. ' if' → logprob: -6.378673553466797
    7. 'i' → logprob: -6.378673553466797
    8. 'f' → logprob: -7.878673553466797
    9. 'r' → logprob: -7.878673553466797
    10. ' i' → logprob: -8.878673553466797

Token 54: ' (' (ID: 350)
  Prédit: ' stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.03485686331987381
    2. ' len' → logprob: -3.5348567962646484
    3. 'stuff' → logprob: -5.534856796264648
    4. ' ' → logprob: -7.409856796264648
    5. 'len' → logprob: -7.784856796264648
    6. '   ' → logprob: -10.409856796264648
    7. ' not' → logprob: -10.909856796264648
    8. ' reward' → logprob: -11.659856796264648
    9. ' stuffs' → logprob: -11.909856796264648
    10. ' max' → logprob: -12.034856796264648

Token 55: 'stuff' (ID: 91669)
  Prédit: 'stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.39113572239875793
    2. ' stuff' → logprob: -1.2661356925964355
    3. 'len' → logprob: -3.7661356925964355
    4. ' len' → logprob: -4.2661356925964355
    5. '   ' → logprob: -5.6411356925964355
    6. ' ' → logprob: -7.8911356925964355
    7. ' reward' → logprob: -9.578636169433594
    8. 'st' → logprob: -9.703636169433594
    9. ' x' → logprob: -9.891136169433594
    10. ')' → logprob: -10.016136169433594

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001464389031752944
    2. ' [' → logprob: -7.626464366912842
    3. ' ==' → logprob: -7.626464366912842
    4. ')' → logprob: -8.37646484375
    5. '==' → logprob: -8.62646484375
    6. ' )' → logprob: -10.62646484375
    7. '[-' → logprob: -11.25146484375
    8. '   ' → logprob: -11.37646484375
    9. '[i' → logprob: -12.12646484375
    10. ' ' → logprob: -12.12646484375

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11875750124454498
    2. ' ' → logprob: -2.868757486343384
    3. '1' → logprob: -2.993757486343384
    4. '2' → logprob: -5.618757724761963
    5. '3' → logprob: -6.993757724761963
    6. ']' → logprob: -8.368757247924805
    7. '-' → logprob: -9.681257247924805
    8. '   ' → logprob: -9.868757247924805
    9. '])' → logprob: -9.931257247924805
    10. ')' → logprob: -10.556257247924805

Token 58: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3944053053855896
    2. ')' → logprob: -2.1444053649902344
    3. ' >' → logprob: -2.7694053649902344
    4. ']' → logprob: -2.8944053649902344
    5. '==' → logprob: -3.3944053649902344
    6. '>' → logprob: -3.5194053649902344
    7. ' )' → logprob: -4.394405364990234
    8. ' >=' → logprob: -5.394405364990234
    9. ' ' → logprob: -5.644405364990234
    10. ']==' → logprob: -5.894405364990234

Token 59: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32648923993110657
    2. ' >' → logprob: -2.201489210128784
    3. '==' → logprob: -2.951489210128784
    4. ')' → logprob: -3.326489210128784
    5. '>' → logprob: -3.326489210128784
    6. ' >=' → logprob: -3.326489210128784
    7. ' )' → logprob: -6.076489448547363
    8. '>=' → logprob: -6.201489448547363
    9. ' ' → logprob: -6.701489448547363
    10. ' !=' → logprob: -7.201489448547363

Token 60: ' [' (ID: 723)
  Prédit: ' look'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' look' → logprob: -0.5334332585334778
    2. ' [' → logprob: -1.908433198928833
    3. '[' → logprob: -2.283433198928833
    4. 'look' → logprob: -2.283433198928833
    5. ' range' → logprob: -3.908433198928833
    6. ' {' → logprob: -4.033433437347412
    7. ')' → logprob: -4.783433437347412
    8. ' (' → logprob: -5.033433437347412
    9. '{' → logprob: -5.408433437347412
    10. ' ' → logprob: -6.783433437347412

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014844478107988834
    2. ' ' → logprob: -5.0148444175720215
    3. '2' → logprob: -5.1398444175720215
    4. '3' → logprob: -6.5148444175720215
    5. '0' → logprob: -7.8898444175720215
    6. '   ' → logprob: -8.26484489440918
    7. '4' → logprob: -10.01484489440918
    8. '  ' → logprob: -10.13984489440918
    9. ']' → logprob: -11.20234489440918
    10. '[' → logprob: -13.01484489440918

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03809691593050957
    2. ' ,' → logprob: -3.2880969047546387
    3. ' ' → logprob: -10.788097381591797
    4. '1' → logprob: -11.413097381591797
    5. '2' → logprob: -12.038097381591797
    6. ']' → logprob: -12.538097381591797
    7. '])' → logprob: -12.538097381591797
    8. ' ])' → logprob: -12.663097381591797
    9. ',
' → logprob: -12.913097381591797
    10. ' ]' → logprob: -13.538097381591797

Token 63: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11311031132936478
    2. '2' → logprob: -2.238110303878784
    3. '3' → logprob: -8.238110542297363
    4. '4' → logprob: -11.113110542297363
    5. '  ' → logprob: -13.363110542297363
    6. '5' → logprob: -13.675610542297363
    7. '   ' → logprob: -13.925610542297363
    8. ' ' → logprob: -14.238110542297363
    9. '    ' → logprob: -14.300610542297363
    10. '7' → logprob: -14.550610542297363

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13575801253318787
    2. ']):' → logprob: -3.0107579231262207
    3. ' ,' → logprob: -3.2607579231262207
    4. '])' → logprob: -4.010757923126221
    5. ' ]' → logprob: -4.760757923126221
    6. ']' → logprob: -4.885757923126221
    7. ' ])' → logprob: -5.760757923126221
    8. ' ' → logprob: -6.885757923126221
    9. '   ' → logprob: -7.885757923126221
    10. ']):
' → logprob: -8.760758399963379

Token 65: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4741736948490143
    2. ' ' → logprob: -0.9741736650466919
    3. '4' → logprob: -10.099173545837402
    4. ',' → logprob: -10.849173545837402
    5. ' or' → logprob: -11.849173545837402
    6. '  ' → logprob: -12.474173545837402
    7. ' ]' → logprob: -12.599173545837402
    8. ' ' → logprob: -12.849173545837402
    9. ' ,' → logprob: -13.161673545837402
    10. ']' → logprob: -13.224173545837402

Token 66: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.45919904112815857
    2. '])' → logprob: -1.584199070930481
    3. ']' → logprob: -1.959199070930481
    4. ' ]' → logprob: -4.459198951721191
    5. ',' → logprob: -4.959198951721191
    6. ' ])' → logprob: -6.209198951721191
    7. ']:' → logprob: -7.334198951721191
    8. ']):
' → logprob: -8.084198951721191
    9. ' ' → logprob: -9.334198951721191
    10. '   ' → logprob: -9.459198951721191

Token 67: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02812524326145649
    2. ' and' → logprob: -4.403125286102295
    3. ':
' → logprob: -4.778125286102295
    4. '       ' → logprob: -5.653125286102295
    5. ' :' → logprob: -7.153125286102295
    6. '    ' → logprob: -7.153125286102295
    7. '):' → logprob: -7.903125286102295
    8. '<|end|>' → logprob: -8.028124809265137
    9. '   ' → logprob: -8.403124809265137
    10. ')' → logprob: -8.778124809265137

Token 68: ' reward' (ID: 16563)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40381208062171936
    2. ' reward' → logprob: -1.528812050819397
    3. 'reward' (adapté à ' reward') → logprob: -2.4038121700286865
    4. ' 
' → logprob: -4.028811931610107
    5. '
' → logprob: -6.653811931610107
    6. '       ' → logprob: -6.778811931610107
    7. '<|end|>' → logprob: -6.903811931610107
    8. '    
' → logprob: -7.403811931610107
    9. '_reward' → logprob: -7.778811931610107
    10. '\n' → logprob: -7.903811931610107

Token 69: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005189874675124884
    2. ' =' → logprob: -5.505189895629883
    3. '+=' → logprob: -6.880189895629883
    4. '=' → logprob: -9.505189895629883
    5. ' -=' → logprob: -12.005189895629883
    6. ' *=' → logprob: -14.380189895629883
    7. ' ' → logprob: -14.505189895629883
    8. '+' → logprob: -14.505189895629883
    9. ' +' → logprob: -15.380189895629883
    10. ' ' → logprob: -15.880189895629883

Token 70: ' reward' (ID: 16563)
  Prédit: ' look'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' look' → logprob: -0.009161162190139294
    2. 'look' → logprob: -5.009160995483398
    3. ' stuff' → logprob: -6.134160995483398
    4. ' lookup' → logprob: -9.009160995483398
    5. 'stuff' → logprob: -10.009160995483398
    6. ' reward' → logprob: -10.134160995483398
    7. ' ' → logprob: -10.759160995483398
    8. '300' → logprob: -11.634160995483398
    9. ' max' → logprob: -12.009160995483398
    10. '    ' → logprob: -12.134160995483398

Token 71: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08902398496866226
    2. '+' → logprob: -2.464024066925049
    3. ' ' → logprob: -9.71402359008789
    4. ' -' → logprob: -12.08902359008789
    5. ' plus' → logprob: -12.21402359008789
    6. ' +=' → logprob: -12.46402359008789
    7. '-' → logprob: -12.96402359008789
    8. ' *' → logprob: -13.83902359008789
    9. 'look' → logprob: -14.08902359008789
    10. '    ' → logprob: -14.33902359008789

Token 72: ' look' (ID: 1631)
  Prédit: ' look'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' look' → logprob: -0.0621432401239872
    2. 'look' → logprob: -2.812143325805664
    3. ' stuff' → logprob: -9.937143325805664
    4. ' ' → logprob: -10.187143325805664
    5. ' lookup' → logprob: -10.187143325805664
    6. 'stuff' → logprob: -11.312143325805664
    7. '300' → logprob: -11.562143325805664
    8. 'lookup' → logprob: -11.687143325805664
    9. '   ' → logprob: -12.749643325805664
    10. '100' → logprob: -12.812143325805664

Token 73: 'ups' (ID: 14409)
  Prédit: 'ups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ups' → logprob: -2.856408536899835e-05
    2. 'up' → logprob: -10.875028610229492
    3. ' ups' → logprob: -12.125028610229492
    4. 'u' → logprob: -13.250028610229492
    5. '   ' → logprob: -14.500028610229492
    6. '-ups' → logprob: -14.625028610229492
    7. '

' → logprob: -15.750028610229492
    8. '_' → logprob: -15.875028610229492
    9. '[' → logprob: -16.000028610229492
    10. 'ooks' → logprob: -16.000028610229492

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6550729419104755e-05
    2. ' [' → logprob: -10.375036239624023
    3. '[int' → logprob: -13.625036239624023
    4. '[(' → logprob: -14.250036239624023
    5. '   ' → logprob: -14.625036239624023
    6. '```' → logprob: -14.625036239624023
    7. '[
' → logprob: -14.750036239624023
    8. ' ' → logprob: -15.125036239624023
    9. '  ' → logprob: -15.375036239624023
    10. '[s' → logprob: -15.500036239624023

Token 75: 'stuff' (ID: 91669)
  Prédit: 'stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.0011904643615707755
    2. ' stuff' → logprob: -6.751190662384033
    3. '   ' → logprob: -11.751190185546875
    4. 'int' → logprob: -12.126190185546875
    5. '0' → logprob: -13.126190185546875
    6. ' ' → logprob: -13.751190185546875
    7. '(st' → logprob: -14.251190185546875
    8. 'st' → logprob: -14.501190185546875
    9. '1' → logprob: -14.501190185546875
    10. '  ' → logprob: -14.626190185546875

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00031973462319001555
    2. '0' → logprob: -8.625319480895996
    3. '(' → logprob: -9.125319480895996
    4. ' [' → logprob: -10.875319480895996
    5. '```' → logprob: -12.625319480895996
    6. ' ' → logprob: -12.750319480895996
    7. '[
' → logprob: -13.125319480895996
    8. '   ' → logprob: -13.500319480895996
    9. ' (' → logprob: -14.625319480895996
    10. ']' → logprob: -14.750319480895996

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -15.500005722045898
    4. '[' → logprob: -17.5000057220459
    5. '۰' → logprob: -17.6250057220459
    6. '2' → logprob: -17.6250057220459
    7. ']' → logprob: -18.0625057220459
    8. ')' → logprob: -19.0000057220459
    9. '(' → logprob: -19.2500057220459
    10. '```' → logprob: -19.5000057220459

Token 78: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16178986430168152
    2. ']]' → logprob: -1.911789894104004
    3. '])' → logprob: -7.911789894104004
    4. '])]' → logprob: -7.911789894104004
    5. ')]' → logprob: -8.036789894104004
    6. ']])' → logprob: -8.036789894104004
    7. ']]]' → logprob: -9.786789894104004
    8. ' ]]' → logprob: -10.036789894104004
    9. ' ]' → logprob: -10.911789894104004
    10. '']]' → logprob: -11.036789894104004

Token 79: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6955536007881165
    2. '\' → logprob: -1.4455535411834717
    3. '   ' → logprob: -2.1955535411834717
    4. '
' → logprob: -3.3205535411834717
    5. ':' → logprob: -3.8205535411834717
    6. '<|end|>' → logprob: -3.9455535411834717
    7. ' ' → logprob: -4.195553779602051
    8. '```' → logprob: -4.695553779602051
    9. ')' → logprob: -4.820553779602051
    10. '    
' → logprob: -5.320553779602051

Token 80: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43795326352119446
    2. '\' → logprob: -2.062953233718872
    3. '   ' → logprob: -2.687953233718872
    4. ' ' → logprob: -3.187953233718872
    5. '
' → logprob: -3.437953233718872
    6. '<|end|>' → logprob: -3.437953233718872
    7. '\r' → logprob: -4.812953472137451
    8. ':' → logprob: -5.187953472137451
    9. '' → logprob: -5.437953472137451
    10. '```' → logprob: -5.437953472137451

Token 81: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18428999185562134
    2. ' ' → logprob: -2.0592899322509766
    3. ' stuff' → logprob: -3.3092899322509766
    4. '(space' → logprob: -6.559289932250977
    5. '(st' → logprob: -6.809289932250977
    6. ' space' → logprob: -7.184289932250977
    7. '(' → logprob: -8.184289932250977
    8. '(s' → logprob: -8.559289932250977
    9. ' ' → logprob: -9.184289932250977
    10. 'stuff' → logprob: -9.684289932250977

Token 82: 'stuff' (ID: 91669)
  Prédit: ' stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.3912355303764343
    2. 'stuff' → logprob: -1.141235589981079
    3. ' (' → logprob: -6.5162353515625
    4. ' ' → logprob: -7.2662353515625
    5. ' len' → logprob: -7.3912353515625
    6. '(st' → logprob: -7.3912353515625
    7. '   ' → logprob: -8.5162353515625
    8. '  ' → logprob: -8.8912353515625
    9. 'len' → logprob: -8.8912353515625
    10. '(' → logprob: -9.0162353515625

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.625866030342877e-05
    2. ' [' → logprob: -9.875085830688477
    3. '[
' → logprob: -11.125085830688477
    4. '```' → logprob: -12.000085830688477
    5. ' ' → logprob: -12.500085830688477
    6. '0' → logprob: -12.500085830688477
    7. '[-' → logprob: -14.187585830688477
    8. '   ' → logprob: -14.250085830688477
    9. '1' → logprob: -14.562585830688477
    10. '...' → logprob: -14.750085830688477

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02291349321603775
    2. '0' → logprob: -3.8979134559631348
    3. '2' → logprob: -6.397913455963135
    4. ' ' → logprob: -7.897913455963135
    5. '3' → logprob: -8.147913932800293
    6. '-' → logprob: -11.460413932800293
    7. '[' → logprob: -12.085413932800293
    8. '(' → logprob: -12.085413932800293
    9. '4' → logprob: -12.335413932800293
    10. '
' → logprob: -12.522913932800293

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4170377850532532
    2. ' in' → logprob: -1.1670377254486084
    3. ' ]' → logprob: -3.6670377254486084
    4. ' ' → logprob: -6.1670379638671875
    5. 'in' → logprob: -7.0420379638671875
    6. ']==' → logprob: -7.4170379638671875
    7. ')' → logprob: -7.7920379638671875
    8. '])' → logprob: -10.792037963867188
    9. ' ==' → logprob: -10.917037963867188
    10. ' )' → logprob: -11.042037963867188

Token 86: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3887062966823578
    2. ' ' → logprob: -1.1387063264846802
    3. ' ==' → logprob: -7.263706207275391
    4. 'in' → logprob: -7.513706207275391
    5. ')' → logprob: -8.51370620727539
    6. '==' → logprob: -8.76370620727539
    7. ' ]' → logprob: -9.76370620727539
    8. ']' → logprob: -9.88870620727539
    9. ' )' → logprob: -9.88870620727539
    10. ' >' → logprob: -10.76370620727539

Token 87: ' not' (ID: 625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05375455692410469
    2. '1' → logprob: -4.1787543296813965
    3. ' in' → logprob: -4.1787543296813965
    4. '3' → logprob: -4.9287543296813965
    5. '2' → logprob: -5.0537543296813965
    6. ' not' → logprob: -5.5537543296813965
    7. ')' → logprob: -7.0537543296813965
    8. ' )' → logprob: -7.1787543296813965
    9. '[' → logprob: -7.3037543296813965
    10. '>' → logprob: -7.8037543296813965

Token 88: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5299584865570068
    2. ' ' → logprob: -0.9049584865570068
    3. 'None' → logprob: -5.404958724975586
    4. '0' → logprob: -6.654958724975586
    5. '1' → logprob: -7.779958724975586
    6. ' not' → logprob: -8.404958724975586
    7. '3' → logprob: -8.779958724975586
    8. '2' → logprob: -10.279958724975586
    9. ' in' → logprob: -10.404958724975586
    10. ' )' → logprob: -10.529958724975586

Token 89: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5506306290626526
    2. ')' → logprob: -1.3006305694580078
    3. '):' → logprob: -2.550630569458008
    4. ' )' → logprob: -2.925630569458008
    5. 'and' → logprob: -4.300630569458008
    6. ' ):' → logprob: -5.175630569458008
    7. ' ' → logprob: -9.800630569458008
    8. ':' → logprob: -10.675630569458008
    9. ' ' → logprob: -10.925630569458008
    10. '):
' → logprob: -10.925630569458008

Token 90: ' stuff' (ID: 9350)
  Prédit: ' stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.039763595908880234
    2. 'stuff' → logprob: -3.9147636890411377
    3. ' ' → logprob: -4.789763450622559
    4. ' len' → logprob: -5.539763450622559
    5. ' (' → logprob: -5.539763450622559
    6. '0' → logprob: -7.539763450622559
    7. ' isinstance' → logprob: -7.789763450622559
    8. '  ' → logprob: -8.289763450622559
    9. ' stuffs' → logprob: -8.539763450622559
    10. ')' → logprob: -8.789763450622559

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9862216504407115e-05
    2. '[
' → logprob: -11.000020027160645
    3. ' [' → logprob: -13.500020027160645
    4. '```' → logprob: -14.000020027160645
    5. ' ' → logprob: -15.375020027160645
    6. '0' → logprob: -16.125019073486328
    7. '>[' → logprob: -16.125019073486328
    8. '][' → logprob: -16.500019073486328
    9. '\[' → logprob: -16.750019073486328
    10. '<|end|>' → logprob: -16.750019073486328

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02180449664592743
    2. '0' → logprob: -3.8968045711517334
    3. '[' → logprob: -6.771804332733154
    4. ' ' → logprob: -9.646804809570312
    5. '2' → logprob: -10.021804809570312
    6. ']' → logprob: -13.396804809570312
    7. '   ' → logprob: -13.896804809570312
    8. '3' → logprob: -14.021804809570312
    9. '```' → logprob: -14.709304809570312
    10. '[
' → logprob: -14.896804809570312

Token 93: ']>' (ID: 54651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23627379536628723
    2. ' ]' → logprob: -2.361273765563965
    3. ' in' → logprob: -2.736273765563965
    4. ' >' → logprob: -3.986273765563965
    5. ']>' → logprob: -4.486273765563965
    6. '>' → logprob: -4.861273765563965
    7. ' ' → logprob: -5.111273765563965
    8. ')' → logprob: -5.861273765563965
    9. ' )' → logprob: -7.111273765563965
    10. 'in' → logprob: -7.361273765563965

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5244004130363464
    2. ' ' → logprob: -0.8994004130363464
    3. '1' → logprob: -6.899400234222412
    4. '2' → logprob: -8.39940071105957
    5. '=' → logprob: -10.27440071105957
    6. '3' → logprob: -12.52440071105957
    7. '  ' → logprob: -13.02440071105957
    8. '>' → logprob: -15.02440071105957
    9. ' 
' → logprob: -15.14940071105957
    10. ' -' → logprob: -15.21190071105957

Token 95: ' and' (ID: 326)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14425383508205414
    2. ')' → logprob: -2.269253730773926
    3. ' ):' → logprob: -4.144253730773926
    4. ' )' → logprob: -4.644253730773926
    5. ' and' → logprob: -5.269253730773926
    6. ':' → logprob: -9.019253730773926
    7. '):
' → logprob: -9.144253730773926
    8. 'and' → logprob: -9.644253730773926
    9. ' ):
' → logprob: -11.394253730773926
    10. '   ' → logprob: -12.269253730773926

Token 96: ' stuff' (ID: 9350)
  Prédit: ' stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.28930407762527466
    2. 'stuff' → logprob: -1.4143040180206299
    3. ' (' → logprob: -5.289304256439209
    4. ' ' → logprob: -7.164304256439209
    5. '(st' → logprob: -7.414304256439209
    6. '(' → logprob: -8.03930377960205
    7. ' len' → logprob: -8.28930377960205
    8. '   ' → logprob: -8.41430377960205
    9. '  ' → logprob: -8.66430377960205
    10. ' look' → logprob: -8.78930377960205

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '[
' → logprob: -12.375007629394531
    3. ' [' → logprob: -14.125007629394531
    4. '0' → logprob: -14.250007629394531
    5. '```' → logprob: -14.500007629394531
    6. '   ' → logprob: -15.250007629394531
    7. '][' → logprob: -15.875007629394531
    8. ' ' → logprob: -16.37500762939453
    9. ']' → logprob: -16.50000762939453
    10. '>[' → logprob: -16.87500762939453

Token 98: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.037437427788972855
    2. '1' → logprob: -3.7874374389648438
    3. ' ' → logprob: -4.662437438964844
    4. '2' → logprob: -5.412437438964844
    5. '[' → logprob: -9.287437438964844
    6. ']' → logprob: -9.537437438964844
    7. '   ' → logprob: -11.912437438964844
    8. '  ' → logprob: -12.787437438964844
    9. ')' → logprob: -13.037437438964844
    10. '3' → logprob: -13.162437438964844

Token 99: ']<' (ID: 80424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.35485443472862244
    2. ']' → logprob: -2.7298543453216553
    3. '<=' → logprob: -2.8548543453216553
    4. ' <' → logprob: -2.8548543453216553
    5. ' ]' → logprob: -3.6048543453216553
    6. ' ' → logprob: -3.8548543453216553
    7. ')' → logprob: -4.104854583740234
    8. '[' → logprob: -4.354854583740234
    9. ' in' → logprob: -4.354854583740234
    10. ' ==' → logprob: -4.979854583740234

Token 100: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008102327585220337
    2. ' ' → logprob: -4.8831024169921875
    3. '3' → logprob: -7.8831024169921875
    4. 'len' → logprob: -9.758102416992188
    5. '=' → logprob: -10.258102416992188
    6. ' len' → logprob: -11.758102416992188
    7. '5' → logprob: -11.758102416992188
    8. '  ' → logprob: -13.258102416992188
    9. '```' → logprob: -13.695602416992188
    10. ' =' → logprob: -13.945602416992188

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004410416819155216
    2. ')' → logprob: -5.879410266876221
    3. ' ):' → logprob: -7.004410266876221
    4. '):
' → logprob: -7.754410266876221
    5. ':' → logprob: -8.379410743713379
    6. ' )' → logprob: -11.129410743713379
    7. '   ' → logprob: -11.379410743713379
    8. ' and' → logprob: -12.754410743713379
    9. ' ' → logprob: -12.754410743713379
    10. ' ):
' → logprob: -12.879410743713379

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05734700337052345
    2. ')' → logprob: -4.057346820831299
    3. '   ' → logprob: -4.682346820831299
    4. ':' → logprob: -5.057346820831299
    5. ':
' → logprob: -5.182346820831299
    6. '
' → logprob: -5.807346820831299
    7. '):
' → logprob: -6.307346820831299
    8. ' reward' → logprob: -6.307346820831299
    9. '[' → logprob: -6.932346820831299
    10. ' ' → logprob: -6.932346820831299

Token 103: ' reward' (ID: 16563)
  Prédit: ' reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reward' → logprob: -0.08011364936828613
    2. 'reward' (adapté à ' reward') → logprob: -2.705113649368286
    3. '       ' → logprob: -4.830113410949707
    4. '   ' → logprob: -6.705113410949707
    5. ' ' → logprob: -8.330113410949707
    6. '    ' → logprob: -9.080113410949707
    7. ' rewards' → logprob: -9.205113410949707
    8. '.reward' → logprob: -9.330113410949707
    9. '           ' → logprob: -9.455113410949707
    10. '
' → logprob: -10.080113410949707

Token 104: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04652274772524834
    2. ' +=' → logprob: -3.171522855758667
    3. '=' → logprob: -5.671522617340088
    4. '+=' → logprob: -9.546523094177246
    5. ' ' → logprob: -13.546523094177246
    6. ' +' → logprob: -14.546523094177246
    7. '    ' → logprob: -14.921523094177246
    8. '+' → logprob: -15.421523094177246
    9. ' *=' → logprob: -15.546523094177246
    10. ' =)' → logprob: -15.671523094177246

Token 105: ' look' (ID: 1631)
  Prédit: ' look'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' look' → logprob: -0.07014372944831848
    2. 'look' → logprob: -2.695143699645996
    3. '   ' → logprob: -9.195143699645996
    4. ' ' → logprob: -10.445143699645996
    5. '300' → logprob: -10.570143699645996
    6. ' lookup' → logprob: -11.320143699645996
    7. '200' → logprob: -11.820143699645996
    8. 'lookup' → logprob: -11.945143699645996
    9. '    ' → logprob: -12.070143699645996
    10. '100' → logprob: -12.195143699645996

Token 106: 'ups' (ID: 14409)
  Prédit: 'ups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ups' → logprob: -1.9385402993066236e-05
    2. 'up' → logprob: -11.000019073486328
    3. ' ups' → logprob: -13.000019073486328
    4. '-ups' → logprob: -16.375019073486328
    5. 'ps' → logprob: -16.500019073486328
    6. '_' → logprob: -16.750019073486328
    7. 'u' → logprob: -16.750019073486328
    8. 's' → logprob: -17.250019073486328
    9. 'aps' → logprob: -17.500019073486328
    10. '   ' → logprob: -17.875019073486328

Token 107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. ' [' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.250005722045898
    4. '[
' → logprob: -15.625005722045898
    5. '(st' → logprob: -15.875005722045898
    6. ' ' → logprob: -17.5000057220459
    7. '```' → logprob: -17.5000057220459
    8. '[(' → logprob: -17.7500057220459
    9. '       ' → logprob: -18.2500057220459
    10. '  ' → logprob: -18.3750057220459

Token 108: 'stuff' (ID: 91669)
  Prédit: 'stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -2.8087270038668066e-05
    2. ' stuff' → logprob: -10.500027656555176
    3. 'staff' → logprob: -15.875027656555176
    4. '   ' → logprob: -15.875027656555176
    5. '(st' → logprob: -17.125028610229492
    6. '[' → logprob: -17.125028610229492
    7. 'Stuff' → logprob: -17.375028610229492
    8. 'stu' → logprob: -17.625028610229492
    9. 'st' → logprob: -18.125028610229492
    10. '       ' → logprob: -18.500028610229492

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.375005722045898
    3. '[
' → logprob: -14.750005722045898
    4. ']' → logprob: -15.125005722045898
    5. ' [' → logprob: -15.250005722045898
    6. '```' → logprob: -17.2500057220459
    7. '][' → logprob: -17.3750057220459
    8. ' ' → logprob: -18.2500057220459
    9. '(' → logprob: -18.5000057220459
    10. ')' → logprob: -18.8750057220459

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '[' → logprob: -16.25
    4. '   ' → logprob: -16.5
    5. ']' → logprob: -16.625
    6. '' → logprob: -17.4375
    7. '0' → logprob: -17.6875
    8. '```' → logprob: -17.875
    9. '
' → logprob: -18.0
    10. '

' → logprob: -18.375

Token 111: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4622470736503601
    2. ']]' → logprob: -1.2122471332550049
    3. '])' → logprob: -2.962247133255005
    4. ')]' → logprob: -4.087246894836426
    5. '])]' → logprob: -6.337246894836426
    6. '[' → logprob: -6.837246894836426
    7. ']])' → logprob: -7.212246894836426
    8. ']>' → logprob: -9.337246894836426
    9. ' ]]' → logprob: -9.587246894836426
    10. '   ' → logprob: -9.587246894836426

Token 112: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027342629618942738
    2. '    
' → logprob: -6.627734184265137
    3. '<|end|>' → logprob: -7.627734184265137
    4. '\n' → logprob: -8.002734184265137
    5. '\' → logprob: -9.252734184265137
    6. '
' → logprob: -9.502734184265137
    7. '[' → logprob: -9.877734184265137
    8. '    ' → logprob: -10.002734184265137
    9. ')' → logprob: -10.252734184265137
    10. '	return' → logprob: -10.377734184265137

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00470044557005167
    2. ')' → logprob: -6.504700660705566
    3. 'return' → logprob: -7.504700660705566
    4. '\n' → logprob: -7.504700660705566
    5. '    
' → logprob: -7.629700660705566
    6. '\' → logprob: -7.879700660705566
    7. ' return' → logprob: -8.004700660705566
    8. '(' → logprob: -8.379700660705566
    9. '[' → logprob: -8.879700660705566
    10. ':' → logprob: -9.254700660705566

Token 114: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22102399170398712
    2. 'return' → logprob: -1.9710240364074707
    3. ')' → logprob: -3.7210240364074707
    4. 'if' → logprob: -4.471024036407471
    5. ' return' → logprob: -4.471024036407471
    6. ' if' → logprob: -5.346024036407471
    7. '(' → logprob: -5.846024036407471
    8. '    ' → logprob: -7.346024036407471
    9. '[' → logprob: -7.596024036407471
    10. ' ' → logprob: -7.721024036407471

Token 115: ' proced' (ID: 7841)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5024722814559937
    2. 'return' → logprob: -1.1274722814559937
    3. '   ' → logprob: -3.127472400665283
    4. ' if' → logprob: -4.127472400665283
    5. 'r' → logprob: -5.252472400665283
    6. ' for' → logprob: -6.002472400665283
    7. 'if' → logprob: -7.127472400665283
    8. ' ' → logprob: -7.502472400665283
    9. ' r' → logprob: -8.252471923828125
    10. ' reward' → logprob: -8.627471923828125

Token 116: 'ur' (ID: 330)
  Prédit: 'ural'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ural' → logprob: -0.495189368724823
    2. 'ure' → logprob: -1.6201894283294678
    3. 'ur' → logprob: -1.8701894283294678
    4. 'ing' → logprob: -3.8701894283294678
    5. 'e' → logprob: -5.245189189910889
    6. 'u' → logprob: -5.745189189910889
    7. 'ed' → logprob: -6.245189189910889
    8. 'd' → logprob: -6.245189189910889
    9. 'ures' → logprob: -6.370189189910889
    10. 'ding' → logprob: -6.620189189910889

Token 117: 'ally' (ID: 2146)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.18175245821475983
    2. 'e' → logprob: -1.8067524433135986
    3. 'ally' → logprob: -6.556752681732178
    4. '   ' → logprob: -8.43175220489502
    5. 'es' → logprob: -9.05675220489502
    6. ' ' → logprob: -9.93175220489502
    7. ' e' → logprob: -10.18175220489502
    8. '...' → logprob: -10.43175220489502
    9. 'ing' → logprob: -10.93175220489502
    10. '```' → logprob: -11.05675220489502

Token 118: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.317425936460495
    2. '   ' → logprob: -1.8174259662628174
    3. ' ' → logprob: -2.6924259662628174
    4. ' return' → logprob: -4.442425727844238
    5. 'for' → logprob: -4.442425727844238
    6. ' if' → logprob: -4.817425727844238
    7. '    ' → logprob: -5.817425727844238
    8. '<|end|>' → logprob: -6.567425727844238
    9. ' while' → logprob: -6.817425727844238
    10. '  ' → logprob: -6.942425727844238

Token 119: ' bonus' (ID: 11181)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6155309677124023
    2. '   ' → logprob: -0.8655309677124023
    3. 'for' → logprob: -4.240530967712402
    4. '<|end|>' → logprob: -4.740530967712402
    5. ' if' → logprob: -4.990530967712402
    6. ' ' → logprob: -5.740530967712402
    7. '    ' → logprob: -6.615530967712402
    8. '[' → logprob: -6.615530967712402
    9. '_' → logprob: -6.990530967712402
    10. '  ' → logprob: -7.615530967712402

Token 120: ' condition' (ID: 7060)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20668922364711761
    2. ' ' → logprob: -2.3316891193389893
    3. ' for' → logprob: -3.7066891193389893
    4. ':' → logprob: -3.8316891193389893
    5. '_' → logprob: -4.331689357757568
    6. '<|end|>' → logprob: -4.706689357757568
    7. '    ' → logprob: -5.206689357757568
    8. ' 
' → logprob: -5.831689357757568
    9. '    
' → logprob: -5.956689357757568
    10. '  
' → logprob: -5.956689357757568

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43809497356414795
    2. ':' → logprob: -2.3130950927734375
    3. ' ' → logprob: -2.8130950927734375
    4. '
' → logprob: -3.3130950927734375
    5. '    
' → logprob: -3.4380950927734375
    6. '  
' → logprob: -3.5630950927734375
    7. '\' → logprob: -3.8130950927734375
    8. '<|end|>' → logprob: -4.1880950927734375
    9. ' 
' → logprob: -4.5630950927734375
    10. ' for' → logprob: -4.9380950927734375

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16726629436016083
    2. ' 
' → logprob: -3.167266368865967
    3. '<|end|>' → logprob: -3.542266368865967
    4. '  
' → logprob: -4.167266368865967
    5. '    
' → logprob: -4.167266368865967
    6. ':' → logprob: -4.417266368865967
    7. '
' → logprob: -4.417266368865967
    8. ' ' → logprob: -4.792266368865967
    9. ' if' → logprob: -5.667266368865967
    10. '[' → logprob: -5.792266368865967

Token 123: ' def' (ID: 1056)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6781079769134521
    2. '   ' → logprob: -1.9281079769134521
    3. ' if' → logprob: -2.178107976913452
    4. 'if' → logprob: -3.053107976913452
    5. ' ' → logprob: -3.428107976913452
    6. '
' → logprob: -3.428107976913452
    7. '  
' → logprob: -3.428107976913452
    8. '    
' → logprob: -3.553107976913452
    9. ' \' → logprob: -4.178108215332031
    10. ' for' → logprob: -5.053108215332031

Token 124: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.2745465934276581
    2. ' bonus' → logprob: -2.1495466232299805
    3. ' calculate' → logprob: -2.8995466232299805
    4. ' is' → logprob: -3.5245466232299805
    5. ' calc' → logprob: -4.6495466232299805
    6. ' add' → logprob: -5.1495466232299805
    7. '_bonus' → logprob: -5.2745466232299805
    8. ' _' → logprob: -5.2745466232299805
    9. ' get' → logprob: -5.7745466232299805
    10. ' ' → logprob: -6.0245466232299805

Token 125: '_bonus' (ID: 153963)
  Prédit: '_bonus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bonus' → logprob: -0.046699561178684235
    2. '_' → logprob: -3.5466995239257812
    3. '_condition' → logprob: -5.171699523925781
    4. '_b' → logprob: -5.171699523925781
    5. '_reward' → logprob: -6.421699523925781
    6. '_special' → logprob: -8.171699523925781
    7. '_extra' → logprob: -8.171699523925781
    8. '_s' → logprob: -8.296699523925781
    9. '_for' → logprob: -8.421699523925781
    10. '_st' → logprob: -8.546699523925781

Token 126: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5301748514175415
    2. '():' → logprob: -1.1551748514175415
    3. '_condition' → logprob: -2.780174732208252
    4. '_' → logprob: -3.655174732208252
    5. '(condition' → logprob: -6.655174732208252
    6. '(st' → logprob: -6.905174732208252
    7. '(x' → logprob: -7.405174732208252
    8. '(_' → logprob: -7.405174732208252
    9. '(
' → logprob: -7.905174732208252
    10. '_conditions' → logprob: -8.03017520904541

Token 127: '):
' (ID: 1883)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.0038336904253810644
    2. 'e' → logprob: -5.753833770751953
    3. 'ward' → logprob: -8.128833770751953
    4. 'ewar' → logprob: -9.628833770751953
    5. 'ewa' → logprob: -10.378833770751953
    6. 'ev' → logprob: -10.753833770751953
    7. 'ever' → logprob: -10.878833770751953
    8. 'ef' → logprob: -10.878833770751953
    9. 'ep' → logprob: -11.003833770751953
    10. 'aw' → logprob: -11.253833770751953

Token 128: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6973198056221008
    2. '       ' → logprob: -1.197319746017456
    3. '   ' → logprob: -2.697319746017456
    4. '    ' → logprob: -3.447319746017456
    5. ' ' → logprob: -3.697319746017456
    6. '):' → logprob: -3.947319746017456
    7. '_' → logprob: -4.447319984436035
    8. ')' → logprob: -5.322319984436035
    9. '<|end|>' → logprob: -5.447319984436035
    10. '(' → logprob: -5.447319984436035

Token 129: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.295304775238037
    2. ' return' → logprob: -1.420304775238037
    3. '       ' → logprob: -1.545304775238037
    4. '   ' → logprob: -1.795304775238037
    5. 'return' → logprob: -2.670304775238037
    6. 'if' (adapté à ' if') → logprob: -4.045304775238037
    7. ' for' → logprob: -4.545304775238037
    8. '    ' → logprob: -6.045304775238037
    9. ' ' → logprob: -6.170304775238037
    10. 'for' → logprob: -6.795304775238037

Token 130: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2977534830570221
    2. 'r' → logprob: -1.7977534532546997
    3. ' stuff' → logprob: -3.1727535724639893
    4. 'stuff' → logprob: -3.9227535724639893
    5. '   ' → logprob: -4.67275333404541
    6. ' reward' → logprob: -4.79775333404541
    7. ' len' → logprob: -5.79775333404541
    8. '(r' → logprob: -5.92275333404541
    9. ' (' → logprob: -6.17275333404541
    10. 'len' → logprob: -6.92275333404541

Token 131: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9345212578773499
    2. ' >' → logprob: -1.684521198272705
    3. ' ==' → logprob: -2.059521198272705
    4. '>' → logprob: -2.059521198272705
    5. '>=' → logprob: -2.559521198272705
    6. '==' → logprob: -2.559521198272705
    7. '%' → logprob: -5.559521198272705
    8. ' %' → logprob: -5.809521198272705
    9. '[' → logprob: -6.059521198272705
    10. ' ' → logprob: -6.309521198272705

Token 132: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6582017540931702
    2. '3' → logprob: -1.5332016944885254
    3. '300' → logprob: -2.0332016944885254
    4. '0' → logprob: -3.1582016944885254
    5. 'stuff' → logprob: -3.5332016944885254
    6. '1' → logprob: -4.533201694488525
    7. '100' → logprob: -4.783201694488525
    8. 'look' → logprob: -4.908201694488525
    9. 'sum' → logprob: -5.533201694488525
    10. '2' → logprob: -5.658201694488525

Token 133: '600' (ID: 6718)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4173986315727234
    2. '300' → logprob: -2.042398691177368
    3. '0' → logprob: -2.542398691177368
    4. '6' → logprob: -3.417398691177368
    5. '1' → logprob: -3.667398691177368
    6. '600' → logprob: -4.542398452758789
    7. '2' → logprob: -4.667398452758789
    8. 'stuff' → logprob: -4.667398452758789
    9. '100' → logprob: -4.792398452758789
    10. ' ' → logprob: -5.167398452758789

Token 134: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16025803983211517
    2. '00' → logprob: -1.9102580547332764
    3. '0' → logprob: -11.035258293151855
    4. ' ' → logprob: -11.285258293151855
    5. '001' → logprob: -13.660258293151855
    6. '۰۰' → logprob: -13.785258293151855
    7. '   ' → logprob: -14.347758293151855
    8. ':' → logprob: -14.910258293151855
    9. '  ' → logprob: -15.035258293151855
    10. '_' → logprob: -15.660258293151855

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00311104953289032
    2. ':
' → logprob: -6.378110885620117
    3. ':return' → logprob: -7.378110885620117
    4. ' and' → logprob: -7.753110885620117
    5. '):' → logprob: -8.378110885620117
    6. ' or' → logprob: -10.003110885620117
    7. '<|end|>' → logprob: -10.753110885620117
    8. 'and' → logprob: -11.003110885620117
    9. ' :' → logprob: -11.003110885620117
    10. ')' → logprob: -11.628110885620117

Token 136: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10735445469617844
    2. ':
' → logprob: -2.3573544025421143
    3. ':return' → logprob: -6.107354640960693
    4. '           ' → logprob: -6.232354640960693
    5. '       ' → logprob: -6.357354640960693
    6. ' and' → logprob: -7.982354640960693
    7. '<|end|>' → logprob: -8.857354164123535
    8. '):' → logprob: -9.107354164123535
    9. ' return' → logprob: -9.232354164123535
    10. ' :' → logprob: -9.607354164123535

Token 137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6227942705154419
    2. ' return' → logprob: -0.8727942705154419
    3. '
' → logprob: -3.7477941513061523
    4. '       ' → logprob: -4.622794151306152
    5. '           ' → logprob: -4.997794151306152
    6. ' reward' → logprob: -6.872794151306152
    7. '   ' → logprob: -6.997794151306152
    8. ' 
' → logprob: -6.997794151306152
    9. 'reward' → logprob: -7.372794151306152
    10. '        ' → logprob: -7.997794151306152

Token 138: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.934138834476471
    2. '300' → logprob: -1.4341387748718262
    3. ' ' → logprob: -1.6841387748718262
    4. '600' → logprob: -2.434138774871826
    5. '500' → logprob: -4.184138774871826
    6. ' True' → logprob: -4.559138774871826
    7. '200' → logprob: -4.684138774871826
    8. '"' → logprob: -4.934138774871826
    9. '150' → logprob: -4.934138774871826
    10. 'True' → logprob: -4.934138774871826

Token 139: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4294448792934418
    2. '"' → logprob: -2.1794447898864746
    3. '300' → logprob: -2.4294447898864746
    4. '500' → logprob: -3.1794447898864746
    5. '600' → logprob: -3.3044447898864746
    6. '200' → logprob: -4.304444789886475
    7. '150' → logprob: -4.304444789886475
    8. 'True' → logprob: -4.554444789886475
    9. ''' → logprob: -5.554444789886475
    10. '400' → logprob: -5.679444789886475

Token 140: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1287245899438858
    2. '00' → logprob: -2.1287245750427246
    3. '0' → logprob: -6.378724575042725
    4. '001' → logprob: -10.253725051879883
    5. '_' → logprob: -10.503725051879883
    6. ',' → logprob: -11.503725051879883
    7. '100' → logprob: -12.878725051879883
    8. ' ' → logprob: -13.003725051879883
    9. '500' → logprob: -13.066225051879883
    10. '*' → logprob: -13.191225051879883

Token 141: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33556437492370605
    2. '       ' → logprob: -1.335564374923706
    3. '<|end|>' → logprob: -4.085564613342285
    4. '   ' → logprob: -6.335564613342285
    5. '0' → logprob: -6.960564613342285
    6. '
' → logprob: -8.085564613342285
    7. '<|end|>' → logprob: -8.085564613342285
    8. ' else' → logprob: -8.210564613342285
    9. '    
' → logprob: -8.585564613342285
    10. 'return' → logprob: -8.710564613342285

Token 142: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14544865489006042
    2. '<|end|>' → logprob: -2.145448684692383
    3. '   ' → logprob: -4.770448684692383
    4. '
' → logprob: -6.145448684692383
    5. ' ' → logprob: -6.395448684692383
    6. '    ' → logprob: -6.645448684692383
    7. '\n' → logprob: -6.770448684692383
    8. '        ' → logprob: -7.145448684692383
    9. '<|end|>' → logprob: -7.895448684692383
    10. '	' → logprob: -8.020448684692383

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007981115020811558
    2. '<|end|>' → logprob: -5.382981300354004
    3. '
' → logprob: -6.757981300354004
    4. '   ' → logprob: -7.507981300354004
    5. '	' → logprob: -8.382981300354004
    6. 'return' → logprob: -8.507981300354004
    7. '    ' → logprob: -8.632981300354004
    8. ' return' → logprob: -8.757981300354004
    9. '<|end|>' → logprob: -8.882981300354004
    10. ',' → logprob: -9.132981300354004

Token 144: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1917555183172226
    2. '
' → logprob: -3.066755533218384
    3. '   ' → logprob: -3.066755533218384
    4. '<|end|>' → logprob: -3.441755533218384
    5. ' else' → logprob: -4.191755294799805
    6. 'else' → logprob: -4.941755294799805
    7. '    ' → logprob: -5.066755294799805
    8. ' ' → logprob: -5.191755294799805
    9. 'return' (adapté à ' return') → logprob: -5.316755294799805
    10. ' return' → logprob: -6.441755294799805

Token 145: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.590019702911377
    2. 'r' → logprob: -1.090019702911377
    3. '0' → logprob: -2.465019702911377
    4. ' ' → logprob: -3.715019702911377
    5. 'None' → logprob: -10.465019226074219
    6. ' None' → logprob: -10.840019226074219
    7. ' ' → logprob: -11.215019226074219
    8. ' reward' → logprob: -11.340019226074219
    9. 'reward' → logprob: -11.465019226074219
    10. '    ' → logprob: -12.340019226074219

Token 146: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15439079701900482
    2. '    
' → logprob: -2.154390811920166
    3. '
' → logprob: -3.779390811920166
    4. '  
' → logprob: -6.654390811920166
    5. ' 
' → logprob: -6.904390811920166
    6. 'return' → logprob: -7.529390811920166
    7. '	return' → logprob: -8.029390335083008
    8. '<|end|>' → logprob: -8.404390335083008
    9. ' return' → logprob: -8.529390335083008
    10. '	
' → logprob: -8.779390335083008

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17678476870059967
    2. '
' → logprob: -2.0517847537994385
    3. '    
' → logprob: -3.6767847537994385
    4. 'return' → logprob: -5.301784992218018
    5. '  
' → logprob: -6.926784992218018
    6. ' return' → logprob: -7.426784992218018
    7. ' 
' → logprob: -7.676784992218018
    8. '	return' → logprob: -7.801784992218018
    9. '' → logprob: -8.80178451538086
    10. '<|end|>' → logprob: -8.92678451538086

Token 148: ' reward' (ID: 16563)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1297319233417511
    2. '   ' → logprob: -2.1297318935394287
    3. 'reward' (adapté à ' reward') → logprob: -6.379732131958008
    4. ' return' → logprob: -7.254732131958008
    5. '    
' → logprob: -8.629732131958008
    6. 'result' → logprob: -9.629732131958008
    7. 'r' → logprob: -9.754732131958008
    8. '
' → logprob: -10.129732131958008
    9. ' reward' → logprob: -11.254732131958008
    10. ' ' → logprob: -11.379732131958008

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020555900409817696
    2. ' =' → logprob: -3.8955559730529785
    3. '<|end|>' → logprob: -11.77055549621582
    4. ',' → logprob: -13.77055549621582
    5. 'return' → logprob: -13.89555549621582
    6. ' ' → logprob: -13.89555549621582
    7. '=
' → logprob: -14.64555549621582
    8. '   ' → logprob: -15.14555549621582
    9. ')' → logprob: -15.14555549621582
    10. '+' → logprob: -15.27055549621582

Token 150: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.04300662875175476
    2. 'check' → logprob: -3.168006658554077
    3. ' ' → logprob: -12.543006896972656
    4. '	check' → logprob: -13.668006896972656
    5. '   ' → logprob: -14.293006896972656
    6. ' max' → logprob: -14.543006896972656
    7. '(check' → logprob: -14.793006896972656
    8. ' ' → logprob: -15.168006896972656
    9. '    ' → logprob: -16.043006896972656
    10. '.check' → logprob: -16.355506896972656

Token 151: '_bonus' (ID: 153963)
  Prédit: '_bonus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bonus' → logprob: -2.2961512513575144e-05
    2. '_reward' → logprob: -10.750022888183594
    3. '_b' → logprob: -13.750022888183594
    4. '_' → logprob: -15.500022888183594
    5. ' _' → logprob: -16.125022888183594
    6. '(_' → logprob: -17.500022888183594
    7. '_bug' → logprob: -17.750022888183594
    8. '_budget' → logprob: -17.750022888183594
    9. '```' → logprob: -18.000022888183594
    10. '_rewards' → logprob: -18.125022888183594

Token 152: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.002813194179907441
    2. '(' → logprob: -5.877813339233398
    3. ' (' → logprob: -12.127813339233398
    4. '(st' → logprob: -14.002813339233398
    5. '(
' → logprob: -14.252813339233398
    6. 'reward' → logprob: -15.127813339233398
    7. '(r' → logprob: -15.627813339233398
    8. '(return' → logprob: -15.752813339233398
    9. ' ' → logprob: -16.0028133392334
    10. '()' → logprob: -16.7528133392334

Token 153: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -4.4849443838757e-06
    2. 'w' → logprob: -12.875004768371582
    3. 'war' → logprob: -14.500004768371582
    4. 'word' → logprob: -15.000004768371582
    5. ' ward' → logprob: -15.125004768371582
    6. 'reward' → logprob: -15.500004768371582
    7. 'wa' → logprob: -15.750004768371582
    8. 'WARD' → logprob: -16.000003814697266
    9. 'wards' → logprob: -16.250003814697266
    10. 'ware' → logprob: -17.250003814697266

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -13.750001907348633
    4. ')return' → logprob: -15.875001907348633
    5. ')`' → logprob: -18.750001907348633
    6. ')

' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '))' → logprob: -19.250001907348633
    9. ')#' → logprob: -19.625001907348633
    10. ')}' → logprob: -19.625001907348633

Token 155: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6768860816955566
    2. '   ' → logprob: -0.8018860816955566
    3. '<|end|>' → logprob: -3.4268860816955566
    4. '\n' → logprob: -5.051886081695557
    5. '    
' → logprob: -6.301886081695557
    6. 'return' → logprob: -7.176886081695557
    7. '  
' → logprob: -7.926886081695557
    8. ' ' → logprob: -8.301885604858398
    9. ' return' → logprob: -8.426885604858398
    10. '	return' → logprob: -8.926885604858398

Token 156: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0045969802886247635
    2. 'return' → logprob: -5.504597187042236
    3. ' return' → logprob: -8.754596710205078
    4. '
' → logprob: -9.129596710205078
    5. '<|end|>' → logprob: -9.254596710205078
    6. '    
' → logprob: -9.629596710205078
    7. '	return' → logprob: -9.754596710205078
    8. 'print' (adapté à ' print') → logprob: -10.754596710205078
    9. '\n' → logprob: -12.379596710205078
    10. ' ' → logprob: -14.129596710205078

Token 157: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.008732049725949764
    2. '(' → logprob: -4.758731842041016
    3. '()' → logprob: -9.133731842041016
    4. 'reward' → logprob: -11.883731842041016
    5. '(
' → logprob: -14.008731842041016
    6. ' (' → logprob: -14.133731842041016
    7. 're' → logprob: -15.133731842041016
    8. '(f' → logprob: -15.883731842041016
    9. '('' → logprob: -16.008731842041016
    10. '(r' → logprob: -16.508731842041016

Token 158: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -4.320199877838604e-07
    2. 'w' → logprob: -15.25
    3. ' ward' → logprob: -16.875
    4. 'WARD' → logprob: -17.25
    5. 'war' → logprob: -17.5
    6. 'wards' → logprob: -17.75
    7. 'word' → logprob: -18.0
    8. 'wad' → logprob: -18.75
    9. 'wa' → logprob: -19.25
    10. 'ard' → logprob: -19.625

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.625000953674316
    3. ')
' → logprob: -17.125001907348633
    4. '))' → logprob: -18.500001907348633
    5. '()' → logprob: -18.500001907348633
    6. ')`' → logprob: -18.500001907348633
    7. '')' → logprob: -19.375001907348633
    8. '())' → logprob: -19.500001907348633
    9. '(' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.625001907348633

Token 160: '    
' (ID: 1944)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3346879482269287
    2. '<|end|>' → logprob: -2.2096879482269287
    3. ')' → logprob: -2.5846879482269287
    4. '
' → logprob: -2.8346879482269287
    5. 'newline' → logprob: -3.7096879482269287
    6. '\' → logprob: -5.709688186645508
    7. '```' → logprob: -5.709688186645508
    8. '#' → logprob: -6.459688186645508
    9. '(' → logprob: -6.584688186645508
    10. '[' → logprob: -6.584688186645508

Token 161: 'calc' (ID: 49633)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.39902156591415405
    2. ')' → logprob: -2.024021625518799
    3. '<|end|>' → logprob: -2.024021625518799
    4. 'newline' → logprob: -3.399021625518799
    5. '
' → logprob: -4.524021625518799
    6. '(' → logprob: -5.149021625518799
    7. '#' → logprob: -5.774021625518799
    8. '\' → logprob: -6.024021625518799
    9. ' ' → logprob: -6.149021625518799
    10. '[' → logprob: -6.524021625518799

Token 162: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.0015370006440207362
    2. '_' → logprob: -6.626536846160889
    3. '_rewards' → logprob: -8.501537322998047
    4. 'reward' → logprob: -13.126537322998047
    5. 'Reward' → logprob: -14.001537322998047
    6. '_aw' → logprob: -14.126537322998047
    7. ' reward' → logprob: -14.251537322998047
    8. ' _' → logprob: -14.626537322998047
    9. '()' → logprob: -14.626537322998047
    10. '_result' → logprob: -15.251537322998047

Token 163: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03406137973070145
    2. '()' → logprob: -3.4090614318847656
    3. '(
' → logprob: -8.034061431884766
    4. '()
' → logprob: -10.409061431884766
    5. '(

' → logprob: -11.284061431884766
    6. '#' → logprob: -11.409061431884766
    7. ' (' → logprob: -11.409061431884766
    8. '```' → logprob: -12.784061431884766
    9. '"' → logprob: -12.909061431884766
    10. ''' → logprob: -12.909061431884766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 161
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 46.58%
Précision adaptée (1ère position): 47.20%
Précision (top 10): 80.75%
================================================================================
