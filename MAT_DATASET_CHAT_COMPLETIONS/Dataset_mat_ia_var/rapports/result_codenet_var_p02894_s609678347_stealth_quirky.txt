================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math as M
n,l=[*map(int,input().split())]
s = (n**3-n*3+2*n)//6
t=[]
for O in range(n): t+=[int(input())*M.pi/l]
def Q(f):
  X=0
  for a in range(n):
    for b in range(a+1,n):
      X+=f(t[a]+t[b])*(n+2*(a-b))
  return X/s
print(Q(M.cos),Q(M.sin))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' M' (ID: 391)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0019568251445889473
    2. 'math' → logprob: -6.501956939697266
    3. ' m' → logprob: -8.001956939697266
    4. ' ' → logprob: -9.126956939697266
    5. ' ma' → logprob: -12.126956939697266
    6. ' ' → logprob: -13.626956939697266
    7. 'm' → logprob: -13.626956939697266
    8. '_math' → logprob: -14.001956939697266
    9. '```' → logprob: -14.501956939697266
    10. ' Math' → logprob: -14.751956939697266

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014597235713154078
    2. '\' → logprob: -9.62514591217041
    3. '```' → logprob: -10.87514591217041
    4. '\n' → logprob: -11.50014591217041
    5. 'import' → logprob: -12.00014591217041
    6. '.

' → logprob: -12.12514591217041
    7. ' .' → logprob: -12.25014591217041
    8. '\.' → logprob: -12.50014591217041
    9. '.\' → logprob: -12.50014591217041
    10. '.
' → logprob: -12.62514591217041

Token 5: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0017869214061647654
    2. '\' → logprob: -7.876786708831787
    3. '\n' → logprob: -8.251787185668945
    4. '
' → logprob: -8.626787185668945
    5. '```' → logprob: -8.626787185668945
    6. '.
' → logprob: -8.751787185668945
    7. '.

' → logprob: -9.001787185668945
    8. '
' → logprob: -9.626787185668945
    9. 'import' → logprob: -10.251787185668945
    10. '.\' → logprob: -10.501787185668945

Token 6: ',l' (ID: 45198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1262328624725342
    2. '_' → logprob: -1.1262328624725342
    3. '(' → logprob: -2.626232862472534
    4. '=' → logprob: -2.876232862472534
    5. 'u' → logprob: -2.876232862472534
    6. ',' → logprob: -3.001232862472534
    7. '**' → logprob: -3.751232862472534
    8. 'a' → logprob: -4.126233100891113
    9. ' ' → logprob: -4.251233100891113
    10. 'um' → logprob: -4.751233100891113

Token 7: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08947819471359253
    2. ' =' → logprob: -2.4644782543182373
    3. ',' → logprob: -8.089478492736816
    4. ' ' → logprob: -9.464478492736816
    5. 'e' → logprob: -9.964478492736816
    6. '_' → logprob: -10.214478492736816
    7. 'ength' → logprob: -10.714478492736816
    8. 'o' → logprob: -11.839478492736816
    9. ' ,' → logprob: -12.089478492736816
    10. ')' → logprob: -12.464478492736816

Token 8: '*' (ID: 9)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0667494684457779
    2. '0' → logprob: -3.4417495727539062
    3. '1' → logprob: -4.441749572753906
    4. '10' → logprob: -4.816749572753906
    5. 'float' → logprob: -4.941749572753906
    6. '5' → logprob: -5.941749572753906
    7. ' int' → logprob: -6.816749572753906
    8. ']int' → logprob: -8.066749572753906
    9. '2' → logprob: -8.191749572753906
    10. '3' → logprob: -8.316749572753906

Token 9: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00160627078730613
    2. 'map' → logprob: -7.126606464385986
    3. 'input' → logprob: -7.501606464385986
    4. ' range' → logprob: -8.376605987548828
    5. '(range' → logprob: -11.501605987548828
    6. 'str' → logprob: -12.751605987548828
    7. 'r' → logprob: -13.126605987548828
    8. 's' → logprob: -14.501605987548828
    9. ' map' → logprob: -14.751605987548828
    10. 'open' → logprob: -14.876605987548828

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02142277918756008
    2. '(' → logprob: -3.896422863006592
    3. '(str' → logprob: -8.146422386169434
    4. '(float' → logprob: -8.896422386169434
    5. '(eval' → logprob: -8.896422386169434
    6. 'int' → logprob: -9.271422386169434
    7. '(input' → logprob: -9.771422386169434
    8. '(abs' → logprob: -10.271422386169434
    9. '(math' → logprob: -10.396422386169434
    10. '```' → logprob: -10.771422386169434

Token 11: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.044976696372032166
    2. 'input' → logprob: -3.9199767112731934
    3. ',input' → logprob: -3.9199767112731934
    4. ',' → logprob: -6.419976711273193
    5. ')' → logprob: -6.794976711273193
    6. '(' → logprob: -6.919976711273193
    7. ' input' → logprob: -8.169976234436035
    8. '`' → logprob: -9.794976234436035
    9. '```' → logprob: -9.794976234436035
    10. '=input' → logprob: -10.044976234436035

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.14140871167182922
    2. '())' → logprob: -2.141408681869507
    3. '()' → logprob: -4.516408920288086
    4. '()]' → logprob: -5.766408920288086
    5. ')]' → logprob: -9.016408920288086
    6. ')' → logprob: -9.516408920288086
    7. '());' → logprob: -10.891408920288086
    8. '(' → logprob: -11.266408920288086
    9. '()))' → logprob: -11.266408920288086
    10. '('' → logprob: -11.516408920288086

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00014323067443910986
    2. 'strip' → logprob: -9.125143051147461
    3. 'rstrip' → logprob: -11.125143051147461
    4. ' split' → logprob: -11.625143051147461
    5. '(split' → logprob: -11.875143051147461
    6. ')' → logprob: -12.875143051147461
    7. 'spl' → logprob: -15.000143051147461
    8. '().' → logprob: -15.375143051147461
    9. 's' → logprob: -15.750143051147461
    10. '_split' → logprob: -16.62514305114746

Token 14: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16652578115463257
    2. ')]' → logprob: -2.0415258407592773
    3. '))' → logprob: -4.791525840759277
    4. '()))' → logprob: -5.041525840759277
    5. ')' → logprob: -5.166525840759277
    6. ')])' → logprob: -6.416525840759277
    7. '()]' → logprob: -7.541525840759277
    8. '()' → logprob: -7.666525840759277
    9. '(' → logprob: -8.041525840759277
    10. '('' → logprob: -9.916525840759277

Token 15: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005310012027621269
    2. ')' → logprob: -5.50531005859375
    3. ']' → logprob: -6.75531005859375
    4. ')],' → logprob: -10.88031005859375
    5. ')])' → logprob: -11.13031005859375
    6. '),' → logprob: -11.50531005859375
    7. ')]
' → logprob: -12.13031005859375
    8. '')]' → logprob: -12.63031005859375
    9. '])]' → logprob: -13.00531005859375
    10. '`]' → logprob: -13.13031005859375

Token 16: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3810652792453766
    2. 'x' → logprob: -2.5060653686523438
    3. 'h' → logprob: -2.7560653686523438
    4. 's' → logprob: -3.1310653686523438
    5. 'd' → logprob: -3.1310653686523438
    6. 'r' → logprob: -3.2560653686523438
    7. 'A' → logprob: -4.381065368652344
    8. 'p' → logprob: -4.631065368652344
    9. 'c' → logprob: -4.881065368652344
    10. 'v' → logprob: -5.381065368652344

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003533898387104273
    2. ' =' → logprob: -6.503533840179443
    3. '=input' → logprob: -7.253533840179443
    4. '.' → logprob: -7.503533840179443
    5. '=[' → logprob: -9.003534317016602
    6. '=str' → logprob: -9.128534317016602
    7. '=[]' → logprob: -9.128534317016602
    8. '.=' → logprob: -9.628534317016602
    9. 'tr' → logprob: -10.003534317016602
    10. '[' → logprob: -10.253534317016602

Token 18: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12451692670583725
    2. '[input' → logprob: -2.4995169639587402
    3. '""' → logprob: -4.49951696395874
    4. '[]' → logprob: -5.24951696395874
    5. '[' → logprob: -5.62451696395874
    6. '''' → logprob: -5.87451696395874
    7. '['' → logprob: -6.49951696395874
    8. 'list' → logprob: -6.49951696395874
    9. 'M' → logprob: -6.74951696395874
    10. '"' → logprob: -6.74951696395874

Token 19: 'n' (ID: 77)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3897559344768524
    2. 'n' → logprob: -1.2647559642791748
    3. 'M' → logprob: -3.889755964279175
    4. '2' → logprob: -4.514755725860596
    5. '(n' → logprob: -5.889755725860596
    6. '(l' → logprob: -6.764755725860596
    7. '1' → logprob: -7.014755725860596
    8. ' n' → logprob: -7.264755725860596
    9. ' l' → logprob: -7.764755725860596
    10. '4' → logprob: -7.889755725860596

Token 20: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7881456017494202
    2. '-' → logprob: -1.2881455421447754
    3. '+' → logprob: -2.6631455421447754
    4. ' *' → logprob: -3.1631455421447754
    5. '**' → logprob: -3.2881455421447754
    6. '*(' → logprob: -3.2881455421447754
    7. '*M' → logprob: -3.5381455421447754
    8. ' -' → logprob: -4.413145542144775
    9. ' +' → logprob: -4.413145542144775
    10. '/' → logprob: -5.038145542144775

Token 21: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.600811779499054
    2. '2' → logprob: -0.975811779499054
    3. '(' → logprob: -3.100811719894409
    4. 'l' → logprob: -4.100811958312988
    5. '1' → logprob: -5.225811958312988
    6. '3' → logprob: -5.850811958312988
    7. '.' → logprob: -5.850811958312988
    8. '-' → logprob: -7.100811958312988
    9. ' ' → logprob: -7.225811958312988
    10. '(l' → logprob: -9.225811958312988

Token 22: '-n' (ID: 5219)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4621436297893524
    2. ' -' → logprob: -2.087143659591675
    3. '*' → logprob: -3.087143659591675
    4. '-' → logprob: -3.212143659591675
    5. '/' → logprob: -3.337143659591675
    6. ' )' → logprob: -3.337143659591675
    7. ')**' → logprob: -3.837143659591675
    8. ')/' → logprob: -4.337143421173096
    9. ' /' → logprob: -4.462143421173096
    10. '+' → logprob: -4.587143421173096

Token 23: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1308131366968155
    2. ')**' → logprob: -3.0058131217956543
    3. ')//' → logprob: -3.5058131217956543
    4. ')/' → logprob: -3.8808131217956543
    5. ' )' → logprob: -4.380813121795654
    6. ')/(' → logprob: -5.505813121795654
    7. ')*' → logprob: -6.005813121795654
    8. '+' → logprob: -6.505813121795654
    9. '*' → logprob: -7.880813121795654
    10. '**' → logprob: -8.255813598632812

Token 24: '3' (ID: 18)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6588411927223206
    2. ')' → logprob: -1.1588411331176758
    3. '2' → logprob: -2.533841133117676
    4. 'M' → logprob: -3.158841133117676
    5. '3' → logprob: -4.283841133117676
    6. '4' → logprob: -4.783841133117676
    7. ')/' → logprob: -5.033841133117676
    8. 's' → logprob: -5.408841133117676
    9. '1' → logprob: -5.908841133117676
    10. '(' → logprob: -6.408841133117676

Token 25: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6688810586929321
    2. '*M' → logprob: -2.2938809394836426
    3. ')**' → logprob: -2.5438809394836426
    4. '+' → logprob: -2.5438809394836426
    5. ')/' → logprob: -2.7938809394836426
    6. '*l' → logprob: -2.7938809394836426
    7. '**' → logprob: -3.0438809394836426
    8. '*' → logprob: -3.7938809394836426
    9. ')*' → logprob: -5.043880939483643
    10. 'l' → logprob: -5.293880939483643

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009296519681811333
    2. '3' → logprob: -5.259296417236328
    3. 'l' → logprob: -6.509296417236328
    4. '6' → logprob: -6.634296417236328
    5. '1' → logprob: -7.259296417236328
    6. ' ' → logprob: -8.884296417236328
    7. ')' → logprob: -9.009296417236328
    8. '4' → logprob: -9.634296417236328
    9. 'math' → logprob: -9.759296417236328
    10. 'M' → logprob: -10.259296417236328

Token 27: '*n' (ID: 58470)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20423966646194458
    2. ')**' → logprob: -2.4542396068573
    3. ')*' → logprob: -3.0792396068573
    4. ' )' → logprob: -3.8292396068573
    5. ')/' → logprob: -4.079239845275879
    6. ')//' → logprob: -4.829239845275879
    7. '*M' → logprob: -5.579239845275879
    8. '*' → logprob: -6.579239845275879
    9. ')/(' → logprob: -8.079239845275879
    10. '*)' → logprob: -8.454239845275879

Token 28: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36926954984664917
    2. ')/' → logprob: -2.369269609451294
    3. ')**' → logprob: -2.369269609451294
    4. ')//' → logprob: -2.619269609451294
    5. ' )' → logprob: -3.369269609451294
    6. ')/(' → logprob: -4.744269371032715
    7. ')*' → logprob: -5.369269371032715
    8. ')*(' → logprob: -8.119269371032715
    9. '//' → logprob: -8.369269371032715
    10. '))' → logprob: -9.119269371032715

Token 29: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9981420336989686e-05
    2. '2' → logprob: -11.500020027160645
    3. '3' → logprob: -12.000020027160645
    4. ' ' → logprob: -13.125020027160645
    5. '12' → logprob: -15.375020027160645
    6. '24' → logprob: -15.375020027160645
    7. '```' → logprob: -15.625020027160645
    8. '18' → logprob: -15.750020027160645
    9. '<|end|>' → logprob: -15.750020027160645
    10. '1' → logprob: -16.125019073486328

Token 30: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14358645677566528
    2. ')' → logprob: -3.1435863971710205
    3. '+' → logprob: -3.7685863971710205
    4. '<|end|>' → logprob: -4.0185866355896
    5. '
' → logprob: -4.5185866355896
    6. '**' → logprob: -4.8935866355896
    7. '*n' → logprob: -5.0185866355896
    8. '#' → logprob: -5.3935866355896
    9. ' ' → logprob: -5.3935866355896
    10. '*l' → logprob: -6.1435866355896

Token 31: 't' (ID: 83)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10563679784536362
    2. '+' → logprob: -3.6056368350982666
    3. '*' → logprob: -3.9806368350982666
    4. 's' → logprob: -4.4806365966796875
    5. ' print' → logprob: -4.7306365966796875
    6. '
' → logprob: -4.9806365966796875
    7. ')' → logprob: -4.9806365966796875
    8. 'n' → logprob: -5.4806365966796875
    9. '#' → logprob: -5.8556365966796875
    10. 'p' → logprob: -5.8556365966796875

Token 32: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14617542922496796
    2. '=' → logprob: -2.0211753845214844
    3. ' +=' → logprob: -7.021175384521484
    4. 'imes' → logprob: -7.771175384521484
    5. ' *=' → logprob: -7.896175384521484
    6. 'o' → logprob: -8.021175384521484
    7. 's' → logprob: -8.146175384521484
    8. ' ' → logprob: -8.521175384521484
    9. 'otal' → logprob: -8.521175384521484
    10. '+' → logprob: -8.771175384521484

Token 33: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003729534102603793
    2. ' for' → logprob: -5.628729343414307
    3. 'f' → logprob: -9.253729820251465
    4. 'r' → logprob: -12.003729820251465
    5. 'l' → logprob: -12.003729820251465
    6. '[' → logprob: -12.503729820251465
    7. 'i' → logprob: -12.628729820251465
    8. '_' → logprob: -12.753729820251465
    9. 's' → logprob: -12.878729820251465
    10. 'fo' → logprob: -13.378729820251465

Token 34: ' O' (ID: 532)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15149763226509094
    2. '_' → logprob: -2.7764976024627686
    3. ' _' → logprob: -2.9014976024627686
    4. 'i' → logprob: -3.7764976024627686
    5. ' ' → logprob: -8.151497840881348
    6. '_i' → logprob: -8.651497840881348
    7. ' ' → logprob: -12.401497840881348
    8. ' x' → logprob: -12.651497840881348
    9. '  ' → logprob: -13.151497840881348
    10. '_=' → logprob: -13.526497840881348

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027267422527074814
    2. 'in' → logprob: -3.6522674560546875
    3. ' ' → logprob: -7.5272674560546875
    4. 'n' → logprob: -8.527267456054688
    5. '_' → logprob: -9.402267456054688
    6. 's' → logprob: -10.652267456054688
    7. 'f' → logprob: -10.777267456054688
    8. 'range' → logprob: -10.902267456054688
    9. ',' → logprob: -11.402267456054688
    10. 'd' → logprob: -11.652267456054688

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004419793840497732
    2. 'range' → logprob: -5.504419803619385
    3. ' ran' → logprob: -8.504419326782227
    4. ' ra' → logprob: -9.754419326782227
    5. ' r' → logprob: -10.254419326782227
    6. '[' → logprob: -11.504419326782227
    7. ' ' → logprob: -11.504419326782227
    8. 'r' → logprob: -12.129419326782227
    9. ' l' → logprob: -12.754419326782227
    10. 'ran' → logprob: -12.879419326782227

Token 37: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04923408851027489
    2. '(' → logprob: -3.04923415184021
    3. '(l' → logprob: -7.424233913421631
    4. ' (' → logprob: -10.174234390258789
    5. '(s' → logprob: -11.549234390258789
    6. '(
' → logprob: -14.924234390258789
    7. '(O' → logprob: -14.924234390258789
    8. '(N' → logprob: -15.299234390258789
    9. ' n' → logprob: -15.549234390258789
    10. 'n' → logprob: -16.04923439025879

Token 38: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006097181234508753
    2. '-' → logprob: -6.131097316741943
    3. '):
' → logprob: -6.131097316741943
    4. '+' → logprob: -6.631097316741943
    5. ' ):' → logprob: -8.006096839904785
    6. ')' → logprob: -10.131096839904785
    7. '**' → logprob: -11.756096839904785
    8. ' -' → logprob: -11.881096839904785
    9. ':' → logprob: -12.006096839904785
    10. '//' → logprob: -12.256096839904785

Token 39: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.03772011399269104
    2. ' ' → logprob: -3.787720203399658
    3. ' s' → logprob: -4.787720203399658
    4. 't' → logprob: -5.412720203399658
    5. '    ' → logprob: -7.287720203399658
    6. '   ' → logprob: -7.912720203399658
    7. '	t' → logprob: -8.4127197265625
    8. 's' → logprob: -10.0377197265625
    9. ' I' → logprob: -10.2877197265625
    10. ' ' → logprob: -10.2877197265625

Token 40: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007899036630988121
    2. '.' → logprob: -4.882898807525635
    3. '.extend' → logprob: -8.632899284362793
    4. '.app' → logprob: -10.257899284362793
    5. '.a' → logprob: -10.632899284362793
    6. '.ap' → logprob: -10.882899284362793
    7. '.push' → logprob: -12.007899284362793
    8. '.i' → logprob: -12.132899284362793
    9. '+=' → logprob: -12.507899284362793
    10. '+.' → logprob: -12.632899284362793

Token 41: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.23137417435646057
    2. '=' → logprob: -1.6063741445541382
    3. '=[]' → logprob: -5.481374263763428
    4. '=list' → logprob: -7.481374263763428
    5. '=[[' → logprob: -8.10637378692627
    6. '=['' → logprob: -8.23137378692627
    7. '=int' → logprob: -8.60637378692627
    8. '[' → logprob: -9.35637378692627
    9. '=p' → logprob: -9.85637378692627
    10. '=[
' → logprob: -9.98137378692627

Token 42: 'int' (ID: 491)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1988956928253174
    2. 'int' → logprob: -1.6988956928253174
    3. 'l' → logprob: -2.4488956928253174
    4. 'list' → logprob: -2.6988956928253174
    5. '[*' → logprob: -2.6988956928253174
    6. '[l' → logprob: -2.8238956928253174
    7. '[' → logprob: -3.0738956928253174
    8. 'input' → logprob: -3.1988956928253174
    9. 'M' → logprob: -3.3238956928253174
    10. '[M' → logprob: -3.4488956928253174

Token 43: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07010304182767868
    2. '(' → logprob: -2.6951029300689697
    3. '(
' → logprob: -9.82010269165039
    4. '(

' → logprob: -10.32010269165039
    5. 'input' → logprob: -11.44510269165039
    6. '()' → logprob: -11.44510269165039
    7. ' (' → logprob: -11.94510269165039
    8. '(O' → logprob: -12.07010269165039
    9. '(x' → logprob: -12.07010269165039
    10. '((' → logprob: -12.19510269165039

Token 44: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00029065259150229394
    2. '()' → logprob: -8.250290870666504
    3. '()]' → logprob: -11.000290870666504
    4. '(' → logprob: -12.750290870666504
    5. ' ())' → logprob: -12.875290870666504
    6. '())
' → logprob: -13.125290870666504
    7. '().' → logprob: -13.625290870666504
    8. '()))' → logprob: -13.875290870666504
    9. '()),' → logprob: -14.250290870666504
    10. '()`' → logprob: -14.500290870666504

Token 45: '*' (ID: 9)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.055177103728055954
    2. ')' → logprob: -2.9301772117614746
    3. ' )' → logprob: -9.555176734924316
    4. ']' → logprob: -9.555176734924316
    5. '+' → logprob: -10.055176734924316
    6. ')]
' → logprob: -10.430176734924316
    7. '')]' → logprob: -11.180176734924316
    8. ')])' → logprob: -11.180176734924316
    9. ')
' → logprob: -11.430176734924316
    10. '])' → logprob: -12.180176734924316

Token 46: 'M' (ID: 44)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.257110595703125
    2. 'M' → logprob: -1.757110595703125
    3. ' M' → logprob: -4.257110595703125
    4. ' l' → logprob: -4.382110595703125
    5. '2' → logprob: -4.507110595703125
    6. '(' → logprob: -5.632110595703125
    7. 'O' → logprob: -6.007110595703125
    8. '1' → logprob: -6.507110595703125
    9. ' ' → logprob: -6.757110595703125
    10. '(M' → logprob: -6.757110595703125

Token 47: '.pi' (ID: 55497)
  Prédit: '.cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.7944331169128418
    2. '.sin' → logprob: -1.0444331169128418
    3. '.sqrt' → logprob: -2.794433116912842
    4. '.factor' → logprob: -2.919433116912842
    5. '.pow' → logprob: -3.919433116912842
    6. '.pi' → logprob: -4.044433116912842
    7. '.ceil' → logprob: -4.044433116912842
    8. '.' → logprob: -4.669433116912842
    9. '.c' → logprob: -5.544433116912842
    10. '.log' → logprob: -5.669433116912842

Token 48: '/l' (ID: 16347)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004726076032966375
    2. ')' → logprob: -5.504725933074951
    3. ']' → logprob: -8.12972640991211
    4. ' )' → logprob: -8.50472640991211
    5. '/' → logprob: -10.00472640991211
    6. ')])' → logprob: -10.75472640991211
    7. ')],' → logprob: -11.00472640991211
    8. ')]
' → logprob: -11.25472640991211
    9. '')]' → logprob: -11.62972640991211
    10. '),' → logprob: -12.12972640991211

Token 49: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1634700894355774
    2. ')' → logprob: -1.9134700298309326
    3. ']' → logprob: -6.413470268249512
    4. '*' → logprob: -7.663470268249512
    5. ' )' → logprob: -7.788470268249512
    6. ')],' → logprob: -8.413470268249512
    7. ')])' → logprob: -8.913470268249512
    8. '*)' → logprob: -9.538470268249512
    9. '),' → logprob: -9.788470268249512
    10. '')]' → logprob: -10.038470268249512

Token 50: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1792207956314087
    2. '<|end|>' → logprob: -1.4292207956314087
    3. ' ' → logprob: -2.179220676422119
    4. ')' → logprob: -2.304220676422119
    5. '\n' → logprob: -2.554220676422119
    6. ' 
' → logprob: -2.804220676422119
    7. 'for' → logprob: -4.179220676422119
    8. 'n' → logprob: -4.179220676422119
    9. ']' → logprob: -4.304220676422119
    10. '  
' → logprob: -4.679220676422119

Token 51: ' Q' (ID: 1486)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.288528174161911
    2. ' s' → logprob: -3.5385282039642334
    3. ' calc' → logprob: -3.6635282039642334
    4. ' ' → logprob: -3.7885282039642334
    5. ' solve' → logprob: -3.9135282039642334
    6. ' find' → logprob: -4.538527965545654
    7. ' calculate' → logprob: -4.538527965545654
    8. ' main' → logprob: -4.663527965545654
    9. ' dist' → logprob: -4.663527965545654
    10. ' angle' → logprob: -4.788527965545654

Token 52: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0379159450531006
    2. '(x' → logprob: -1.1629159450531006
    3. '(P' → logprob: -3.0379159450531006
    4. '(i' → logprob: -3.1629159450531006
    5. '(n' → logprob: -3.2879159450531006
    6. '(s' → logprob: -3.4129159450531006
    7. '(a' → logprob: -3.6629159450531006
    8. '(u' → logprob: -3.7879159450531006
    9. '(t' → logprob: -3.9129159450531006
    10. '(p' → logprob: -4.16291618347168

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04419654980301857
    2. ',' → logprob: -3.669196605682373
    3. ',x' → logprob: -4.544196605682373
    4. '(x' → logprob: -5.919196605682373
    5. ')' → logprob: -7.419196605682373
    6. 'x' → logprob: -7.544196605682373
    7. ',f' → logprob: -7.919196605682373
    8. ',y' → logprob: -8.169196128845215
    9. ',k' → logprob: -8.169196128845215
    10. ',n' → logprob: -8.169196128845215

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06196409836411476
    2. ' 
' → logprob: -3.8119640350341797
    3. '    ' → logprob: -4.06196403503418
    4. ' return' → logprob: -4.93696403503418
    5. '   ' → logprob: -5.06196403503418
    6. 'return' → logprob: -6.43696403503418
    7. ' \' → logprob: -7.18696403503418
    8. '<|end|>' → logprob: -7.18696403503418
    9. '[' → logprob: -7.31196403503418
    10. '(' → logprob: -7.81196403503418

Token 55: ' X' (ID: 2127)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7915545701980591
    2. 'return' → logprob: -1.416554570198059
    3. ' return' → logprob: -2.2915544509887695
    4. ' ' → logprob: -2.7915544509887695
    5. 'x' → logprob: -4.2915544509887695
    6. 'f' → logprob: -4.2915544509887695
    7. ' r' → logprob: -4.2915544509887695
    8. 'i' → logprob: -4.5415544509887695
    9. 's' → logprob: -4.7915544509887695
    10. 'a' → logprob: -4.7915544509887695

Token 56: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20407317578792572
    2. ' =' → logprob: -1.954073190689087
    3. '=f' → logprob: -3.454073190689087
    4. '=int' → logprob: -5.954072952270508
    5. '=sum' → logprob: -6.454072952270508
    6. ',' → logprob: -6.829072952270508
    7. ' ' → logprob: -7.079072952270508
    8. '=s' → logprob: -7.454072952270508
    9. '=X' → logprob: -7.579072952270508
    10. ',f' → logprob: -7.579072952270508

Token 57: '0' (ID: 15)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4902466535568237
    2. '0' → logprob: -1.9902466535568237
    3. ' f' → logprob: -2.2402467727661133
    4. ' M' → logprob: -2.2402467727661133
    5. 'sum' → logprob: -2.6152467727661133
    6. ' sum' → logprob: -2.9902467727661133
    7. 's' → logprob: -3.1152467727661133
    8. 'abs' → logprob: -3.4902467727661133
    9. 'M' → logprob: -3.6152467727661133
    10. ' ' → logprob: -3.7402467727661133

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7668601870536804
    2. ' for' → logprob: -1.0168602466583252
    3. 'for' → logprob: -2.266860246658325
    4. ' f' → logprob: -3.766860246658325
    5. '<|end|>' → logprob: -3.766860246658325
    6. ' while' → logprob: -5.391860008239746
    7. ',' → logprob: -6.266860008239746
    8. 'f' → logprob: -6.391860008239746
    9. '+' → logprob: -6.391860008239746
    10. '  ' → logprob: -6.641860008239746

Token 61: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42713525891304016
    2. ' f' → logprob: -2.0521352291107178
    3. ' ' → logprob: -2.8021352291107178
    4. 'i' → logprob: -3.0521352291107178
    5. ' x' → logprob: -3.8021352291107178
    6. ' j' → logprob: -4.177135467529297
    7. 'f' → logprob: -4.552135467529297
    8. ' range' → logprob: -4.802135467529297
    9. ' e' → logprob: -5.052135467529297
    10. 'x' → logprob: -5.177135467529297

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030475636944174767
    2. 'in' → logprob: -3.655475616455078
    3. ' ' → logprob: -6.155475616455078
    4. ',' → logprob: -6.655475616455078
    5. ' ,' → logprob: -9.030475616455078
    6. 'n' → logprob: -9.655475616455078
    7. ',n' → logprob: -9.780475616455078
    8. ',f' → logprob: -9.905475616455078
    9. ',in' → logprob: -10.030475616455078
    10. ',a' → logprob: -10.030475616455078

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6541813015937805
    2. 'range' → logprob: -1.5291812419891357
    3. 'f' → logprob: -1.7791812419891357
    4. ' f' → logprob: -2.6541812419891357
    5. 's' → logprob: -4.779181480407715
    6. 't' → logprob: -4.904181480407715
    7. ' s' → logprob: -5.404181480407715
    8. ' t' → logprob: -6.154181480407715
    9. ' ' → logprob: -7.279181480407715
    10. 'Q' → logprob: -8.654181480407715

Token 64: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11733453720808029
    2. '(f' → logprob: -3.1173346042633057
    3. '(' → logprob: -3.3673346042633057
    4. '(len' → logprob: -4.367334365844727
    5. 'n' → logprob: -4.992334365844727
    6. '(l' → logprob: -5.617334365844727
    7. '(O' → logprob: -5.617334365844727
    8. 'f' → logprob: -5.867334365844727
    9. 'l' → logprob: -7.367334365844727
    10. 'len' → logprob: -7.992334365844727

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06548779457807541
    2. '):
' → logprob: -3.565487861633301
    3. '-' → logprob: -3.690487861633301
    4. ' ' → logprob: -4.815487861633301
    5. '+' → logprob: -6.940487861633301
    6. ')' → logprob: -7.940487861633301
    7. ' ):' → logprob: -8.3154878616333
    8. ' -' → logprob: -8.6904878616333
    9. ':' → logprob: -9.3154878616333
    10. '):
' → logprob: -9.9404878616333

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26038986444473267
    2. '<|end|>' → logprob: -2.260389804840088
    3. ' ' → logprob: -2.510389804840088
    4. ' X' → logprob: -4.510389804840088
    5. ' f' → logprob: -4.760389804840088
    6. '  ' → logprob: -4.885389804840088
    7. ' if' → logprob: -5.385389804840088
    8. ' s' → logprob: -6.135389804840088
    9. '+' → logprob: -6.760389804840088
    10. '       ' → logprob: -6.885389804840088

Token 67: ' for' (ID: 395)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.24030154943466187
    2. ' ' → logprob: -1.9903016090393066
    3. ' f' → logprob: -3.8653016090393066
    4. '<|end|>' → logprob: -4.115301609039307
    5. 'X' → logprob: -4.365301609039307
    6. ' if' → logprob: -4.490301609039307
    7. '   ' → logprob: -5.740301609039307
    8. ' for' → logprob: -5.865301609039307
    9. '  ' → logprob: -6.615301609039307
    10. '    ' → logprob: -6.740301609039307

Token 68: ' b' (ID: 287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32297325134277344
    2. 'a' → logprob: -1.5729732513427734
    3. ' n' → logprob: -3.4479732513427734
    4. ' ' → logprob: -4.197973251342773
    5. 'O' → logprob: -5.072973251342773
    6. ' a' → logprob: -5.697973251342773
    7. 'range' → logprob: -5.822973251342773
    8. 'l' → logprob: -5.947973251342773
    9. 'b' → logprob: -6.072973251342773
    10. 'f' → logprob: -7.072973251342773

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003189478302374482
    2. 'in' → logprob: -6.253189563751221
    3. 'range' → logprob: -7.503189563751221
    4. ' ' → logprob: -7.753189563751221
    5. ' range' → logprob: -8.878189086914062
    6. 'a' → logprob: -10.128189086914062
    7. 'n' → logprob: -10.628189086914062
    8. '(range' → logprob: -11.128189086914062
    9. ',' → logprob: -11.378189086914062
    10. '+' → logprob: -11.753189086914062

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11302068084478378
    2. ' range' → logprob: -2.238020658493042
    3. '(range' → logprob: -8.613020896911621
    4. ' ' → logprob: -11.863020896911621
    5. 'n' → logprob: -12.363020896911621
    6. '  ' → logprob: -14.113020896911621
    7. 'ange' → logprob: -14.613020896911621
    8. '	range' → logprob: -14.613020896911621
    9. 's' → logprob: -14.738020896911621
    10. 'r' → logprob: -14.863020896911621

Token 71: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01982327364385128
    2. '(a' → logprob: -4.01982307434082
    3. '(' → logprob: -7.01982307434082
    4. ' (' → logprob: -8.51982307434082
    5. ' n' → logprob: -8.64482307434082
    6. 'n' → logprob: -8.89482307434082
    7. 'a' → logprob: -9.14482307434082
    8. '(f' → logprob: -10.01982307434082
    9. ' ' → logprob: -10.01982307434082
    10. '(s' → logprob: -11.26982307434082

Token 72: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06278729438781738
    2. ',n' → logprob: -2.9377872943878174
    3. ' +' → logprob: -5.437787055969238
    4. ',' → logprob: -6.187787055969238
    5. ' ,' → logprob: -7.687787055969238
    6. ' ' → logprob: -7.937787055969238
    7. '+n' → logprob: -8.312787055969238
    8. '+,' → logprob: -9.062787055969238
    9. ',+' → logprob: -9.812787055969238
    10. '   ' → logprob: -10.187787055969238

Token 73: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5287671089172363
    2. '1' → logprob: -0.9037671089172363
    3. ' n' → logprob: -5.653767108917236
    4. ' ' → logprob: -6.403767108917236
    5. '(n' → logprob: -8.778766632080078
    6. ',n' → logprob: -9.403766632080078
    7. ',' → logprob: -9.653766632080078
    8. ')' → logprob: -10.403766632080078
    9. '+' → logprob: -10.653766632080078
    10. ')n' → logprob: -10.778766632080078

Token 74: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.10282429307699203
    2. ',' → logprob: -2.3528242111206055
    3. ' ,' → logprob: -6.1028242111206055
    4. 'n' → logprob: -8.727824211120605
    5. ' ' → logprob: -9.102824211120605
    6. '+' → logprob: -10.602824211120605
    7. '+,' → logprob: -10.727824211120605
    8. ' n' → logprob: -11.727824211120605
    9. '  ' → logprob: -11.977824211120605
    10. 'to' → logprob: -12.227824211120605

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07156189531087875
    2. '):
' → logprob: -2.696561813354492
    3. ')' → logprob: -7.196561813354492
    4. '+' → logprob: -7.946561813354492
    5. ' ):' → logprob: -8.196561813354492
    6. '):

' → logprob: -9.196561813354492
    7. ' ' → logprob: -9.571561813354492
    8. '):
' → logprob: -10.696561813354492
    9. ' ):
' → logprob: -11.071561813354492
    10. ':' → logprob: -11.571561813354492

Token 76: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4351497888565063
    2. ' ' → logprob: -1.5601497888565063
    3. '       ' → logprob: -1.6851497888565063
    4. '<|end|>' → logprob: -1.9351497888565063
    5. ':' → logprob: -2.185149669647217
    6. '     ' → logprob: -2.810149669647217
    7. ' f' → logprob: -5.185149669647217
    8. '<|end|>' → logprob: -5.310149669647217
    9. '  ' → logprob: -5.560149669647217
    10. '    ' → logprob: -5.685149669647217

Token 77: ' X' (ID: 2127)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7560054063796997
    2. ' X' → logprob: -1.5060054063796997
    3. '       ' → logprob: -2.00600528717041
    4. 'if' → logprob: -2.88100528717041
    5. ' ' → logprob: -3.00600528717041
    6. 'X' (adapté à ' X') → logprob: -3.88100528717041
    7. '   ' → logprob: -4.25600528717041
    8. ' s' → logprob: -5.25600528717041
    9. ' x' → logprob: -5.25600528717041
    10. ' Q' → logprob: -5.25600528717041

Token 78: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007390928920358419
    2. ' +=' → logprob: -5.757390975952148
    3. '+=(' → logprob: -5.757390975952148
    4. '+' → logprob: -8.132390975952148
    5. '-=' → logprob: -8.132390975952148
    6. ']+=' → logprob: -8.507390975952148
    7. '|' → logprob: -9.882390975952148
    8. '=max' → logprob: -10.257390975952148
    9. '>' → logprob: -10.257390975952148
    10. '=' → logprob: -10.382390975952148

Token 79: 'f' (ID: 69)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.1890853643417358
    2. 't' → logprob: -1.6890853643417358
    3. 'max' → logprob: -1.9390853643417358
    4. 'M' → logprob: -1.9390853643417358
    5. 's' → logprob: -2.1890854835510254
    6. '(t' → logprob: -4.189085483551025
    7. '(M' → logprob: -4.189085483551025
    8. '(s' → logprob: -4.564085483551025
    9. '1' → logprob: -4.564085483551025
    10. 'f' → logprob: -4.689085483551025

Token 80: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.3505243957042694
    2. '(O' → logprob: -2.225524425506592
    3. '(a' → logprob: -2.350524425506592
    4. '[t' → logprob: -3.100524425506592
    5. '[a' → logprob: -4.475524425506592
    6. 't' → logprob: -4.725524425506592
    7. '(abs' → logprob: -5.225524425506592
    8. '(s' → logprob: -5.475524425506592
    9. '(' → logprob: -5.850524425506592
    10. '(b' → logprob: -5.975524425506592

Token 81: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.07144413888454437
    2. '[b' → logprob: -2.696444034576416
    3. '[' → logprob: -7.071444034576416
    4. 'a' → logprob: -8.696444511413574
    5. ' [' → logprob: -8.696444511413574
    6. ')[' → logprob: -8.946444511413574
    7. ')' → logprob: -10.571444511413574
    8. 'b' → logprob: -10.821444511413574
    9. '[u' → logprob: -10.946444511413574
    10. ')a' → logprob: -11.321444511413574

Token 82: ']+' (ID: 15344)
  Prédit: ']-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.0996290072798729
    2. ']+' → logprob: -3.4746289253234863
    3. ']' → logprob: -3.7246289253234863
    4. ')-' → logprob: -3.8496289253234863
    5. '],' → logprob: -4.974628925323486
    6. '-' → logprob: -5.849628925323486
    7. ')' → logprob: -6.349628925323486
    8. ']*' → logprob: -6.474628925323486
    9. '])' → logprob: -6.599628925323486
    10. '])-' → logprob: -6.724628925323486

Token 83: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09414979070425034
    2. 'f' → logprob: -2.7191498279571533
    3. ' t' → logprob: -3.8441498279571533
    4. ' f' → logprob: -6.219149589538574
    5. ' ' → logprob: -8.219149589538574
    6. 'M' → logprob: -10.094149589538574
    7. ')t' → logprob: -10.594149589538574
    8. '+t' → logprob: -10.719149589538574
    9. ')' → logprob: -10.781649589538574
    10. '   ' → logprob: -10.844149589538574

Token 84: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.007392583414912224
    2. 'b' → logprob: -5.007392406463623
    3. '[' → logprob: -8.632392883300781
    4. '][' → logprob: -8.757392883300781
    5. '+b' → logprob: -9.257392883300781
    6. '[f' → logprob: -9.632392883300781
    7. '])' → logprob: -9.632392883300781
    8. ' ' → logprob: -10.757392883300781
    9. '[a' → logprob: -11.257392883300781
    10. '	b' → logprob: -11.507392883300781

Token 85: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19728289544582367
    2. '<=' → logprob: -3.3222827911376953
    3. '-' → logprob: -3.5722827911376953
    4. '>=' → logprob: -3.6972827911376953
    5. ')<=' → logprob: -4.572282791137695
    6. '==' → logprob: -4.697282791137695
    7. ')>=' → logprob: -4.697282791137695
    8. ' )' → logprob: -4.697282791137695
    9. '>' → logprob: -5.072282791137695
    10. '<f' → logprob: -5.572282791137695

Token 86: '*(' (ID: 14793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4944201707839966
    2. ' return' → logprob: -1.7444201707839966
    3. '
' → logprob: -1.9944201707839966
    4. '(' → logprob: -4.119420051574707
    5. '  
' → logprob: -4.494420051574707
    6. '<|end|>' → logprob: -4.619420051574707
    7. ')' → logprob: -4.744420051574707
    8. 'return' → logprob: -4.994420051574707
    9. '**' → logprob: -5.744420051574707
    10. ',' → logprob: -5.994420051574707

Token 87: 'n' (ID: 77)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7380723357200623
    2. 'n' → logprob: -2.113072395324707
    3. 'M' → logprob: -2.363072395324707
    4. 't' → logprob: -3.113072395324707
    5. 'l' → logprob: -3.113072395324707
    6. 's' → logprob: -3.238072395324707
    7. '2' → logprob: -3.238072395324707
    8. ' ' → logprob: -3.488072395324707
    9. '-' → logprob: -3.863072395324707
    10. '3' → logprob: -4.363072395324707

Token 88: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0691632553935051
    2. '-b' → logprob: -3.3191633224487305
    3. ' -' → logprob: -4.0691633224487305
    4. '**' → logprob: -5.8191633224487305
    5. '-(' → logprob: -5.9441633224487305
    6. '-a' → logprob: -6.1941633224487305
    7. '-n' → logprob: -6.1941633224487305
    8. '-l' → logprob: -6.3191633224487305
    9. '-f' → logprob: -7.1941633224487305
    10. ' ' → logprob: -8.31916332244873

Token 89: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07153991609811783
    2. '1' → logprob: -3.821539878845215
    3. '-b' → logprob: -4.071539878845215
    4. ' -' → logprob: -4.571539878845215
    5. '2' → logprob: -5.321539878845215
    6. '-n' → logprob: -5.321539878845215
    7. ' ' → logprob: -5.446539878845215
    8. 'b' → logprob: -6.571539878845215
    9. '-l' → logprob: -6.696539878845215
    10. '-(' → logprob: -7.321539878845215

Token 90: '*(' (ID: 14793)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.054715707898139954
    2. ' -' → logprob: -3.679715633392334
    3. '-f' → logprob: -4.554715633392334
    4. '-(' → logprob: -5.179715633392334
    5. '-a' → logprob: -6.054715633392334
    6. ')' → logprob: -6.179715633392334
    7. '-n' → logprob: -6.304715633392334
    8. '-b' → logprob: -6.929715633392334
    9. '*' → logprob: -7.179715633392334
    10. '*(' → logprob: -7.554715633392334

Token 91: 'a' (ID: 64)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2705292701721191
    2. '-n' → logprob: -1.5205292701721191
    3. 'a' → logprob: -2.270529270172119
    4. 'l' → logprob: -2.770529270172119
    5. 's' → logprob: -2.895529270172119
    6. '-' → logprob: -3.145529270172119
    7. 'O' → logprob: -3.645529270172119
    8. '-a' → logprob: -3.645529270172119
    9. ' ' → logprob: -4.020529270172119
    10. ' -' → logprob: -4.020529270172119

Token 92: '-b' (ID: 2118)
  Prédit: '-n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.2627931833267212
    2. '-' → logprob: -1.6377931833267212
    3. '-b' → logprob: -3.7627930641174316
    4. ' -' → logprob: -4.387793064117432
    5. '-l' → logprob: -7.887793064117432
    6. '+' → logprob: -8.51279354095459
    7. ' ' → logprob: -8.88779354095459
    8. '-m' → logprob: -9.76279354095459
    9. '-t' → logprob: -9.88779354095459
    10. '```' → logprob: -10.38779354095459

Token 93: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9245772957801819
    2. '-' → logprob: -1.299577236175537
    3. ')-' → logprob: -2.174577236175537
    4. ')' → logprob: -2.299577236175537
    5. ')**' → logprob: -2.924577236175537
    6. '+' → logprob: -3.924577236175537
    7. '-n' → logprob: -4.674577236175537
    8. ' )' → logprob: -5.424577236175537
    9. ')*' → logprob: -5.674577236175537
    10. ')*(' → logprob: -5.674577236175537

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13275021314620972
    2. ' return' → logprob: -2.5077502727508545
    3. 'return' → logprob: -4.132750034332275
    4. '
' → logprob: -4.507750034332275
    5. '+' → logprob: -5.132750034332275
    6. '  
' → logprob: -5.382750034332275
    7. ' 
' → logprob: -6.882750034332275
    8. ')' → logprob: -6.882750034332275
    9. '  ' → logprob: -7.882750034332275
    10. '**' → logprob: -8.132750511169434

Token 95: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.759660005569458
    2. ' return' → logprob: -0.759660005569458
    3. 'return' → logprob: -3.009660005569458
    4. '+' → logprob: -5.384659767150879
    5. ')' → logprob: -5.509659767150879
    6. '**' → logprob: -7.259659767150879
    7. '  ' → logprob: -7.384659767150879
    8. 'def' → logprob: -7.509659767150879
    9. '-return' → logprob: -7.634659767150879
    10. '
' → logprob: -7.884659767150879

Token 96: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.024196838960051537
    2. ' X' → logprob: -3.7741968631744385
    3. 'int' → logprob: -7.899196624755859
    4. ' ' → logprob: -8.77419662475586
    5. 'x' → logprob: -9.27419662475586
    6. 'M' → logprob: -9.39919662475586
    7. 'abs' → logprob: -9.77419662475586
    8. ' int' → logprob: -10.02419662475586
    9. 'round' → logprob: -10.14919662475586
    10. '0' → logprob: -11.39919662475586

Token 97: '/s' (ID: 5031)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06904222071170807
    2. '*' → logprob: -3.444042205810547
    3. '**' → logprob: -4.319042205810547
    4. '(
' → logprob: -4.944042205810547
    5. ' ' → logprob: -5.819042205810547
    6. ')' → logprob: -5.944042205810547
    7. '<|end|>' → logprob: -5.944042205810547
    8. '+' → logprob: -6.819042205810547
    9. '*(' → logprob: -7.069042205810547
    10. '
' → logprob: -7.194042205810547

Token 98: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007654422894120216
    2. '(lambda' → logprob: -6.132654190063477
    3. '(
' → logprob: -6.382654190063477
    4. '(f' → logprob: -6.632654190063477
    5. ')' → logprob: -6.757654190063477
    6. '(M' → logprob: -8.132654190063477
    7. ' ' → logprob: -8.507654190063477
    8. '<|end|>' → logprob: -8.757654190063477
    9. '*' → logprob: -8.882654190063477
    10. ' (' → logprob: -9.632654190063477

Token 99: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6364749073982239
    2. ')' → logprob: -0.8864749073982239
    3. '*' → logprob: -4.261475086212158
    4. ' ' → logprob: -4.386475086212158
    5. '(
' → logprob: -4.761475086212158
    6. ' (' → logprob: -4.886475086212158
    7. '<|end|>' → logprob: -5.386475086212158
    8. '+' → logprob: -6.636475086212158
    9. '
' → logprob: -6.761475086212158
    10. '#' → logprob: -7.136475086212158

Token 100: '(Q' (ID: 14437)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09124846756458282
    2. '(Q' → logprob: -2.4662485122680664
    3. '(math' → logprob: -7.216248512268066
    4. '(max' → logprob: -7.591248512268066
    5. '(sum' → logprob: -8.341248512268066
    6. '(lambda' → logprob: -8.591248512268066
    7. '('' → logprob: -8.841248512268066
    8. '("("' → logprob: -9.091248512268066
    9. '(round' → logprob: -9.466248512268066
    10. '((' → logprob: -10.091248512268066

Token 101: '(M' (ID: 6103)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.6802663207054138
    2. '(abs' → logprob: -1.6802663803100586
    3. '(lambda' → logprob: -1.9302663803100586
    4. '(M' → logprob: -2.5552663803100586
    5. '(' → logprob: -2.9302663803100586
    6. '(max' → logprob: -3.8052663803100586
    7. '(round' → logprob: -5.930266380310059
    8. ')' → logprob: -6.430266380310059
    9. '(pow' → logprob: -6.805266380310059
    10. '(min' → logprob: -6.805266380310059

Token 102: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.7137623429298401
    2. '.sin' → logprob: -1.0887622833251953
    3. 'cos' → logprob: -2.3387622833251953
    4. 'sin' → logprob: -2.8387622833251953
    5. ' cos' → logprob: -5.713762283325195
    6. 'fabs' → logprob: -5.838762283325195
    7. ' sin' → logprob: -6.213762283325195
    8. '.f' → logprob: -6.338762283325195
    9. '.ceil' → logprob: -6.588762283325195
    10. '_cos' → logprob: -6.713762283325195

Token 103: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018351279199123383
    2. ' ))' → logprob: -4.518351078033447
    3. ')' → logprob: -5.018351078033447
    4. ' )' → logprob: -7.518351078033447
    5. '))
' → logprob: -10.518351554870605
    6. ')))' → logprob: -10.768351554870605
    7. ' ' → logprob: -11.268351554870605
    8. '(' → logprob: -11.518351554870605
    9. '()))' → logprob: -11.893351554870605
    10. '),' → logprob: -11.893351554870605

Token 104: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.28523650765419006
    2. ' Q' → logprob: -1.4102364778518677
    3. ''' → logprob: -6.660236358642578
    4. ' M' → logprob: -7.035236358642578
    5. 'M' → logprob: -7.160236358642578
    6. ')' → logprob: -7.910236358642578
    7. '"' → logprob: -8.160236358642578
    8. ' ' → logprob: -9.285236358642578
    9. 'end' → logprob: -9.535236358642578
    10. ' )' → logprob: -9.785236358642578

Token 105: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.006785232108086348
    2. '(' → logprob: -5.0067853927612305
    3. ' (' → logprob: -11.00678539276123
    4. '(math' → logprob: -11.25678539276123
    5. ')' → logprob: -11.63178539276123
    6. '(Q' → logprob: -11.88178539276123
    7. '(s' → logprob: -12.13178539276123
    8. '(
' → logprob: -12.75678539276123
    9. ' ' → logprob: -13.25678539276123
    10. '.' → logprob: -13.63178539276123

Token 106: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.00011093381908722222
    2. '.cos' → logprob: -9.875110626220703
    3. '.' → logprob: -10.000110626220703
    4. '.pi' → logprob: -11.500110626220703
    5. 'sin' → logprob: -13.125110626220703
    6. '.sqrt' → logprob: -14.375110626220703
    7. '.f' → logprob: -15.000110626220703
    8. ' .' → logprob: -15.250110626220703
    9. '.s' → logprob: -15.250110626220703
    10. '.c' → logprob: -15.625110626220703

Token 107: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020566532388329506
    2. ')' → logprob: -3.895566463470459
    3. '))
' → logprob: -12.020566940307617
    4. ')))' → logprob: -12.020566940307617
    5. '),' → logprob: -12.395566940307617
    6. ' ))' → logprob: -12.520566940307617
    7. '()))' → logprob: -13.145566940307617
    8. ' )' → logprob: -14.395566940307617
    9. '())' → logprob: -14.520566940307617
    10. '()' → logprob: -14.520566940307617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 68.57%
================================================================================
