================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
n = len(s)
if s[0] == "0" or s[-1] == "1":
    print(-1)
    exit()
i = 0
invalid = False
while i < n - 1:
    if s[i] != s[n - i - 2]:
        print(-1)
        exit()
    i += 1
ans = []
now = 0
i = 0
while i < n - 1:
    if s[i] == "1":
        ans.append(str(now + 1) + " " + str(i + 2))
        now = i + 1
    else:
        ans.append(str(now + 1) + " " + str(i + 2))
    i += 1
i = 0
while i < len(ans):
    print(ans[i])
    i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012676924467086792
    2. '('' → logprob: -5.26267671585083
    3. ''' → logprob: -5.38767671585083
    4. '"' → logprob: -7.13767671585083
    5. '()' → logprob: -7.13767671585083
    6. '`' → logprob: -7.38767671585083
    7. '("("' → logprob: -8.137677192687988
    8. '```' → logprob: -9.137677192687988
    9. '(
' → logprob: -9.262677192687988
    10. '(`' → logprob: -10.512677192687988

Token 4: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025255165994167328
    2. 'if' → logprob: -4.52525520324707
    3. '+' → logprob: -5.65025520324707
    4. '.strip' → logprob: -5.77525520324707
    5. 'print' → logprob: -6.15025520324707
    6. '=' → logprob: -6.65025520324707
    7. '[' → logprob: -7.15025520324707
    8. ''' → logprob: -7.15025520324707
    9. '[::-' → logprob: -7.77525520324707
    10. ' if' → logprob: -8.27525520324707

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.714074432849884
    2. ' =' → logprob: -0.964074432849884
    3. '_' → logprob: -3.4640743732452393
    4. ' ' → logprob: -3.4640743732452393
    5. '.' → logprob: -3.9640743732452393
    6. 'e' → logprob: -4.214074611663818
    7. '[' → logprob: -4.839074611663818
    8. 't' → logprob: -5.089074611663818
    9. 'a' → logprob: -5.214074611663818
    10. 'ext' → logprob: -5.589074611663818

Token 6: ' len' (ID: 4631)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.33705857396125793
    2. 'int' → logprob: -1.5870585441589355
    3. ' len' → logprob: -2.7120585441589355
    4. 'len' → logprob: -4.4620585441589355
    5. ' ' → logprob: -6.2120585441589355
    6. '0' → logprob: -7.2120585441589355
    7. ' s' → logprob: -7.2120585441589355
    8. '1' → logprob: -9.462059020996094
    9. 's' → logprob: -9.962059020996094
    10. '10' → logprob: -10.212059020996094

Token 7: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009365935111418366
    2. '(' → logprob: -7.000936508178711
    3. 's' → logprob: -10.625936508178711
    4. '(n' → logprob: -14.250936508178711
    5. ' (' → logprob: -16.37593650817871
    6. '(
' → logprob: -16.37593650817871
    7. ' s' → logprob: -18.00093650817871
    8. '(str' → logprob: -18.37593650817871
    9. '(x' → logprob: -18.37593650817871
    10. '()' → logprob: -18.62593650817871

Token 8: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. '))' → logprob: -11.37502670288086
    3. 's' → logprob: -12.37502670288086
    4. ' )' → logprob: -12.62502670288086
    5. '[' → logprob: -12.75002670288086
    6. '`)' → logprob: -12.87502670288086
    7. '')' → logprob: -14.12502670288086
    8. '()' → logprob: -14.50002670288086
    9. ')`' → logprob: -15.62502670288086
    10. '())' → logprob: -15.75002670288086

Token 9: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5528439283370972
    2. 'i' → logprob: -1.6778439283370972
    3. 'if' → logprob: -2.5528440475463867
    4. 'f' → logprob: -2.6778440475463867
    5. 'count' → logprob: -3.3028440475463867
    6. 'd' → logprob: -4.302844047546387
    7. 'result' → logprob: -4.552844047546387
    8. 'c' → logprob: -4.552844047546387
    9. '_' → logprob: -5.802844047546387
    10. 'p' → logprob: -5.802844047546387

Token 10: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31806680560112
    2. ' s' → logprob: -1.4430668354034424
    3. ' n' → logprob: -3.4430668354034424
    4. 's' → logprob: -5.693066596984863
    5. 'n' → logprob: -7.693066596984863
    6. ''' → logprob: -8.818066596984863
    7. ' not' → logprob: -8.943066596984863
    8. ' len' → logprob: -9.818066596984863
    9. '  ' → logprob: -10.193066596984863
    10. ' ' → logprob: -10.318066596984863

Token 11: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029514357447624207
    2. '.' → logprob: -6.252951622009277
    3. '.startswith' → logprob: -8.002951622009277
    4. ' ==' → logprob: -8.252951622009277
    5. '[:]' → logprob: -9.127951622009277
    6. '==' → logprob: -9.127951622009277
    7. '[i' → logprob: -9.252951622009277
    8. '[n' → logprob: -10.877951622009277
    9. ' ' → logprob: -11.127951622009277
    10. '[]' → logprob: -11.252951622009277

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009630310814827681
    2. ' ' → logprob: -7.00096321105957
    3. 'n' → logprob: -11.00096321105957
    4. '1' → logprob: -11.62596321105957
    5. 'i' → logprob: -12.12596321105957
    6. '-' → logprob: -12.25096321105957
    7. ']' → logprob: -12.25096321105957
    8. ':' → logprob: -13.12596321105957
    9. ')' → logprob: -13.37596321105957
    10. ' :' → logprob: -14.06346321105957

Token 13: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.911899745464325
    2. ' ==' → logprob: -1.0368998050689697
    3. '=' → logprob: -1.6618998050689697
    4. '!=' → logprob: -4.536899566650391
    5. '.' → logprob: -4.661899566650391
    6. ' ' → logprob: -5.161899566650391
    7. ''' → logprob: -5.286899566650391
    8. ' !=' → logprob: -5.411899566650391
    9. '[' → logprob: -5.786899566650391
    10. '>' → logprob: -5.786899566650391

Token 14: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9380401968955994
    2. '==' → logprob: -1.3130402565002441
    3. '=' → logprob: -1.4380402565002441
    4. '!=' → logprob: -3.188040256500244
    5. ' !=' → logprob: -3.813040256500244
    6. '>' → logprob: -4.688040256500244
    7. '!' → logprob: -4.938040256500244
    8. '<' → logprob: -5.438040256500244
    9. ''' → logprob: -5.438040256500244
    10. '.' → logprob: -6.063040256500244

Token 15: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05526519939303398
    2. '"' → logprob: -4.055265426635742
    3. 's' → logprob: -4.055265426635742
    4. ''s' → logprob: -4.805265426635742
    5. ''-' → logprob: -5.555265426635742
    6. ''"' → logprob: -5.805265426635742
    7. ''a' → logprob: -6.055265426635742
    8. ''#' → logprob: -8.305265426635742
    9. '"s' → logprob: -8.555265426635742
    10. ''A' → logprob: -8.930265426635742

Token 16: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4584065079689026
    2. ''' → logprob: -1.4584064483642578
    3. ''"' → logprob: -2.708406448364258
    4. 's' → logprob: -3.208406448364258
    5. '-' → logprob: -4.833406448364258
    6. ' "' → logprob: -5.458406448364258
    7. 'a' → logprob: -5.708406448364258
    8. '0' → logprob: -6.333406448364258
    9. '[' → logprob: -6.458406448364258
    10. '(' → logprob: -6.458406448364258

Token 17: '"' (ID: 1)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.043800365179777145
    2. '"' → logprob: -3.4188003540039062
    3. ':' → logprob: -4.918800354003906
    4. '"):' → logprob: -6.043800354003906
    5. '):' → logprob: -8.668800354003906
    6. '")' → logprob: -9.293800354003906
    7. ' and' → logprob: -10.043800354003906
    8. ' ":' → logprob: -10.793800354003906
    9. ' or' → logprob: -10.918800354003906
    10. '0' → logprob: -11.168800354003906

Token 18: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009001428843475878
    2. ' :' → logprob: -7.2509002685546875
    3. ' and' → logprob: -8.625900268554688
    4. 'and' → logprob: -12.375900268554688
    5. ':
' → logprob: -13.000900268554688
    6. ' or' → logprob: -13.500900268554688
    7. '):' → logprob: -13.625900268554688
    8. '=' → logprob: -15.375900268554688
    9. ':**' → logprob: -15.500900268554688
    10. ' ' → logprob: -15.625900268554688

Token 19: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5878626108169556
    2. ' n' → logprob: -0.9628626108169556
    3. 's' → logprob: -3.462862491607666
    4. 'n' → logprob: -3.712862491607666
    5. ' not' → logprob: -5.212862491607666
    6. ' len' → logprob: -7.337862491607666
    7. ' ' → logprob: -7.587862491607666
    8. ' (' → logprob: -9.462862968444824
    9. 'len' → logprob: -9.712862968444824
    10. ' ' → logprob: -9.712862968444824

Token 20: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003603394143283367
    2. '[-' → logprob: -6.753603458404541
    3. '.count' → logprob: -7.503603458404541
    4. '.' → logprob: -7.628603458404541
    5. '[i' → logprob: -7.878603458404541
    6. '[len' → logprob: -8.003602981567383
    7. '```' → logprob: -8.378602981567383
    8. '==' → logprob: -9.253602981567383
    9. '>' → logprob: -9.503602981567383
    10. '[n' → logprob: -9.878602981567383

Token 21: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10058975219726562
    2. '"' → logprob: -2.4755897521972656
    3. ''' → logprob: -4.975589752197266
    4. ']' → logprob: -5.975589752197266
    5. ' ' → logprob: -7.225589752197266
    6. '1' → logprob: -7.600589752197266
    7. '"]' → logprob: -7.725589752197266
    8. '']' → logprob: -9.475589752197266
    9. ' "' → logprob: -9.600589752197266
    10. '`' → logprob: -10.350589752197266

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012677043676376343
    2. '==' → logprob: -5.262677192687988
    3. ' ]' → logprob: -6.137677192687988
    4. ' ==' → logprob: -6.262677192687988
    5. ')' → logprob: -6.512677192687988
    6. ']==' → logprob: -6.637677192687988
    7. ' ' → logprob: -9.012677192687988
    8. '=' → logprob: -9.012677192687988
    9. '"' → logprob: -9.262677192687988
    10. '!=' → logprob: -9.762677192687988

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35028398036956787
    2. '==' → logprob: -1.3502839803695679
    3. ' !=' → logprob: -3.6002840995788574
    4. '!=' → logprob: -5.100284099578857
    5. ' ' → logprob: -7.100284099578857
    6. '=' → logprob: -7.350284099578857
    7. '"' → logprob: -7.475284099578857
    8. ')' → logprob: -7.850284099578857
    9. ' <' → logprob: -9.2252836227417
    10. '<' → logprob: -9.8502836227417

Token 24: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008600743487477303
    2. ' "' → logprob: -4.88360071182251
    3. ''' → logprob: -7.13360071182251
    4. ' ' → logprob: -9.133601188659668
    5. '0' → logprob: -9.633601188659668
    6. ' '' → logprob: -11.258601188659668
    7. '")' → logprob: -13.258601188659668
    8. '  ' → logprob: -14.071101188659668
    9. ' ' → logprob: -14.071101188659668
    10. 's' → logprob: -14.258601188659668

Token 25: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006386925233528018
    2. '1' → logprob: -7.375638484954834
    3. '"' → logprob: -12.000638961791992
    4. ' ' → logprob: -13.500638961791992
    5. '-' → logprob: -13.750638961791992
    6. '.' → logprob: -14.375638961791992
    7. '2' → logprob: -14.813138961791992
    8. '9' → logprob: -15.063138961791992
    9. '_' → logprob: -15.250638961791992
    10. ''' → logprob: -15.438138961791992

Token 26: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.008752011694014072
    2. ':' → logprob: -5.00875186920166
    3. '"' → logprob: -6.25875186920166
    4. '"):' → logprob: -9.38375186920166
    5. '):' → logprob: -10.63375186920166
    6. ' ":' → logprob: -12.63375186920166
    7. '":
' → logprob: -13.00875186920166
    8. '':' → logprob: -13.38375186920166
    9. '"]:' → logprob: -13.88375186920166
    10. '")' → logprob: -14.25875186920166

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1983208805322647
    2. ':' → logprob: -2.0733208656311035
    3. '\n' → logprob: -3.4483208656311035
    4. 'print' → logprob: -4.6983208656311035
    5. ' print' → logprob: -4.8233208656311035
    6. ':
' → logprob: -5.9483208656311035
    7. ' ' → logprob: -7.4483208656311035
    8. '\' → logprob: -7.5733208656311035
    9. '	print' → logprob: -8.698321342468262
    10. '```' → logprob: -8.698321342468262

Token 28: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.42805176973342896
    2. ' print' → logprob: -1.3030517101287842
    3. '   ' → logprob: -3.303051710128784
    4. '\n' → logprob: -3.303051710128784
    5. ' ' → logprob: -7.303051948547363
    6. ' return' → logprob: -7.928051948547363
    7. ' pass' → logprob: -8.303051948547363
    8. '\' → logprob: -8.303051948547363
    9. '
' → logprob: -8.428051948547363
    10. ' \' → logprob: -8.428051948547363

Token 29: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004499431233853102
    2. '("' → logprob: -5.629499435424805
    3. '()' → logprob: -8.129499435424805
    4. '("("' → logprob: -8.379499435424805
    5. '(False' → logprob: -8.879499435424805
    6. '(-' → logprob: -9.129499435424805
    7. '('' → logprob: -9.629499435424805
    8. '(True' → logprob: -10.879499435424805
    9. '("")' → logprob: -11.129499435424805
    10. '(None' → logprob: -11.629499435424805

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. ')' → logprob: -14.125008583068848
    4. '2' → logprob: -15.375008583068848
    5. '0' → logprob: -17.00000762939453
    6. '```' → logprob: -17.00000762939453
    7. '9' → logprob: -17.50000762939453
    8. ' )' → logprob: -17.62500762939453
    9. '  ' → logprob: -18.37500762939453
    10. '-' → logprob: -18.62500762939453

Token 31: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -12.250004768371582
    3. '')' → logprob: -17.2500057220459
    4. ' )' → logprob: -17.2500057220459
    5. '`)' → logprob: -17.3750057220459
    6. '")' → logprob: -17.5000057220459
    7. '）' → logprob: -18.0000057220459
    8. ')`' → logprob: -18.0000057220459
    9. '))' → logprob: -18.7500057220459
    10. ')return' → logprob: -19.3750057220459

Token 32: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5903342366218567
    2. '   ' → logprob: -1.340334177017212
    3. '\n' → logprob: -2.965334177017212
    4. '
' → logprob: -3.215334177017212
    5. '```' → logprob: -3.340334177017212
    6. ')' → logprob: -3.840334177017212
    7. ' else' → logprob: -4.215334415435791
    8. 'elif' → logprob: -5.090334415435791
    9. '<|end|>' → logprob: -5.590334415435791
    10. '    
' → logprob: -5.590334415435791

Token 33: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06943832337856293
    2. '   ' → logprob: -3.1944382190704346
    3. '
' → logprob: -4.194438457489014
    4. ')' → logprob: -5.819438457489014
    5. 'elif' → logprob: -5.819438457489014
    6. '\n' → logprob: -6.194438457489014
    7. '```' → logprob: -6.444438457489014
    8. ' else' → logprob: -7.194438457489014
    9. '    
' → logprob: -8.319437980651855
    10. '\' → logprob: -8.944437980651855

Token 34: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015255718026310205
    2. '(' → logprob: -6.501525402069092
    3. '()
' → logprob: -11.00152587890625
    4. '()`' → logprob: -13.12652587890625
    5. '()\' → logprob: -13.12652587890625
    6. '()

' → logprob: -13.87652587890625
    7. '(
' → logprob: -15.00152587890625
    8. '();' → logprob: -15.25152587890625
    9. '0' → logprob: -15.37652587890625
    10. ' ()' → logprob: -15.62652587890625

Token 35: 'i' (ID: 72)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06723744422197342
    2. '\n' → logprob: -3.442237377166748
    3. '```' → logprob: -4.317237377166748
    4. ' 
' → logprob: -5.067237377166748
    5. '<|end|>' → logprob: -6.067237377166748
    6. '  
' → logprob: -6.067237377166748
    7. 'n' → logprob: -6.692237377166748
    8. ')' → logprob: -6.692237377166748
    9. '

' → logprob: -6.942237377166748
    10. '
' → logprob: -7.317237377166748

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5402073264122009
    2. 'f' → logprob: -1.1652073860168457
    3. ' =' → logprob: -2.2902073860168457
    4. 'n' → logprob: -5.540207386016846
    5. ' ' → logprob: -8.790206909179688
    6. 'nd' → logprob: -10.165206909179688
    7. ' f' → logprob: -10.415206909179688
    8. 'nt' → logprob: -10.540206909179688
    9. 's' → logprob: -11.165206909179688
    10. '0' → logprob: -11.290206909179688

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0757695734500885
    2. '1' → logprob: -2.8257696628570557
    3. ' ' → logprob: -4.825769424438477
    4. 'n' → logprob: -5.450769424438477
    5. ' n' → logprob: -7.075769424438477
    6. '-' → logprob: -8.200769424438477
    7. '2' → logprob: -8.575769424438477
    8. ' -' → logprob: -10.450769424438477
    9. 'len' → logprob: -10.825769424438477
    10. 's' → logprob: -10.950769424438477

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03606323525309563
    2. '1' → logprob: -3.5360631942749023
    3. 'n' → logprob: -5.161063194274902
    4. '-' → logprob: -8.536063194274902
    5. ' ' → logprob: -8.786063194274902
    6. '2' → logprob: -9.036063194274902
    7. 'len' → logprob: -10.036063194274902
    8. ' n' → logprob: -11.036063194274902
    9. 's' → logprob: -11.161063194274902
    10. '3' → logprob: -12.911063194274902

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008483966812491417
    2. '<|end|>' → logprob: -5.25848388671875
    3. '\n' → logprob: -6.63348388671875
    4. 'while' → logprob: -7.38348388671875
    5. ' 
' → logprob: -8.00848388671875
    6. ' while' → logprob: -8.38348388671875
    7. 'n' → logprob: -8.63348388671875
    8. '<|end|>' → logprob: -9.13348388671875
    9. '
' → logprob: -9.50848388671875
    10. ',' → logprob: -9.63348388671875

Token 40: 'invalid' (ID: 25351)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2479284256696701
    2. ' while' → logprob: -1.7479283809661865
    3. '
' → logprob: -3.4979283809661865
    4. ' 
' → logprob: -5.247928619384766
    5. 'count' → logprob: -5.872928619384766
    6. ' ' → logprob: -6.497928619384766
    7. 'n' → logprob: -6.622928619384766
    8. 'result' → logprob: -7.372928619384766
    9. '```' → logprob: -7.622928619384766
    10. '\n' → logprob: -7.872928619384766

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3751302659511566
    2. '=' → logprob: -1.750130295753479
    3. '_' → logprob: -2.3751301765441895
    4. ' ' → logprob: -3.3751301765441895
    5. ':' → logprob: -4.7501301765441895
    6. ')' → logprob: -7.3751301765441895
    7. ',' → logprob: -7.5001301765441895
    8. 's' → logprob: -8.000130653381348
    9. '   ' → logprob: -8.625130653381348
    10. '-' → logprob: -8.875130653381348

Token 42: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2981887757778168
    2. ' False' → logprob: -1.4231888055801392
    3. '0' → logprob: -4.17318868637085
    4. ' ' → logprob: -6.92318868637085
    5. ' True' → logprob: -8.548189163208008
    6. 'True' → logprob: -8.673189163208008
    7. '[]' → logprob: -9.048189163208008
    8. ' []' → logprob: -11.048189163208008
    9. '1' → logprob: -12.673189163208008
    10. '(False' → logprob: -13.673189163208008

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2703741490840912
    2. 'while' → logprob: -2.020374059677124
    3. '<|end|>' → logprob: -2.895374059677124
    4. ' while' → logprob: -3.270374059677124
    5. ':' → logprob: -5.520374298095703
    6. '\n' → logprob: -6.145374298095703
    7. ' 
' → logprob: -6.270374298095703
    8. '<|end|>' → logprob: -7.395374298095703
    9. ' ' → logprob: -8.145374298095703
    10. ',' → logprob: -8.145374298095703

Token 44: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5039755702018738
    2. 'while' → logprob: -1.5039756298065186
    3. ' while' → logprob: -2.2539756298065186
    4. ' 
' → logprob: -3.7539756298065186
    5. '<|end|>' → logprob: -3.8789756298065186
    6. ':' → logprob: -4.0039753913879395
    7. ' ' → logprob: -6.5039753913879395
    8. ':
' → logprob: -6.8789753913879395
    9. 'w' → logprob: -7.3789753913879395
    10. '\n' → logprob: -7.5039753913879395

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00978867057710886
    2. 'i' → logprob: -4.634788513183594
    3. ' True' → logprob: -11.009788513183594
    4. ' n' → logprob: -12.134788513183594
    5. ' ' → logprob: -12.384788513183594
    6. 'True' → logprob: -12.759788513183594
    7. '	i' → logprob: -13.759788513183594
    8. 'n' → logprob: -13.884788513183594
    9. '<|end|>' → logprob: -15.134788513183594
    10. '(i' → logprob: -15.384788513183594

Token 46: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0313044972717762
    2. '<' → logprob: -3.5313045978546143
    3. '<n' → logprob: -7.031304359436035
    4. ' ' → logprob: -8.156304359436035
    5. ' <=' → logprob: -8.156304359436035
    6. '<len' → logprob: -9.656304359436035
    7. '<=' → logprob: -10.906304359436035
    8. ' <
' → logprob: -13.656304359436035
    9. '+' → logprob: -13.781304359436035
    10. '<size' → logprob: -13.781304359436035

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3868727385997772
    2. 'n' → logprob: -1.1368727684020996
    3. ' ' → logprob: -13.886872291564941
    4. '	n' → logprob: -15.136872291564941
    5. 'len' → logprob: -15.761872291564941
    6. '(n' → logprob: -16.761873245239258
    7. '<n' → logprob: -16.886873245239258
    8. 's' → logprob: -16.886873245239258
    9. '_n' → logprob: -17.136873245239258
    10. ' len' → logprob: -17.261873245239258

Token 48: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002477502857800573
    2. ' and' → logprob: -8.875247955322266
    3. ':
' → logprob: -10.125247955322266
    4. ' :' → logprob: -10.250247955322266
    5. ':**' → logprob: -11.500247955322266
    6. 'and' → logprob: -11.750247955322266
    7. '+:' → logprob: -11.750247955322266
    8. '):' → logprob: -12.625247955322266
    9. '+' → logprob: -14.375247955322266
    10. '=' → logprob: -15.250247955322266

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006121210753917694
    2. '2' → logprob: -7.750612258911133
    3. ' ' → logprob: -8.625612258911133
    4. '3' → logprob: -13.500612258911133
    5. '4' → logprob: -16.250612258911133
    6. '0' → logprob: -16.563112258911133
    7. '   ' → logprob: -16.625612258911133
    8. '-' → logprob: -16.813112258911133
    9. '１' → logprob: -16.813112258911133
    10. '5' → logprob: -17.500612258911133

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006800275295972824
    2. '2' → logprob: -5.006800174713135
    3. '3' → logprob: -9.506800651550293
    4. ' ' → logprob: -12.381800651550293
    5. '4' → logprob: -12.631800651550293
    6. '5' → logprob: -14.069300651550293
    7. '10' → logprob: -15.569300651550293
    8. '-' → logprob: -15.631800651550293
    9. '6' → logprob: -15.756800651550293
    10. '`' → logprob: -15.756800651550293

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013047587708570063
    2. ':
' → logprob: -9.125130653381348
    3. ' :' → logprob: -11.875130653381348
    4. '   ' → logprob: -11.875130653381348
    5. ' and' → logprob: -12.875130653381348
    6. '):' → logprob: -13.000130653381348
    7. ':**' → logprob: -13.625130653381348
    8. ',' → logprob: -15.000130653381348
    9. ':

' → logprob: -15.750130653381348
    10. ')' → logprob: -15.875130653381348

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004869161173701286
    2. ' ' → logprob: -6.254868984222412
    3. ' if' → logprob: -6.879868984222412
    4. ':' → logprob: -7.754868984222412
    5. '  ' → logprob: -7.879868984222412
    6. '    ' → logprob: -8.00486946105957
    7. '    
' → logprob: -8.25486946105957
    8. '```' → logprob: -8.87986946105957
    9. 'if' → logprob: -9.75486946105957
    10. ' 
' → logprob: -10.00486946105957

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6969283223152161
    2. '   ' → logprob: -0.9469283223152161
    3. ' ' → logprob: -2.6969282627105713
    4. 'if' (adapté à ' if') → logprob: -3.4469282627105713
    5. '    ' → logprob: -4.69692850112915
    6. '  ' → logprob: -6.44692850112915
    7. ' i' → logprob: -6.82192850112915
    8. 'i' → logprob: -7.32192850112915
    9. ' 
' → logprob: -7.44692850112915
    10. 't' → logprob: -8.696928024291992

Token 54: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.005961272399872541
    2. 's' → logprob: -5.1309614181518555
    3. ' ' → logprob: -10.755961418151855
    4. ' not' → logprob: -12.380961418151855
    5. ' (' → logprob: -12.880961418151855
    6. '(s' → logprob: -13.880961418151855
    7. ' i' → logprob: -14.255961418151855
    8. '(' → logprob: -14.380961418151855
    9. ')' → logprob: -14.818461418151855
    10. 'i' → logprob: -15.130961418151855

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003805064770858735
    2. '[' → logprob: -8.000380516052246
    3. '==' → logprob: -10.375380516052246
    4. ' ==' → logprob: -11.500380516052246
    5. ' [' → logprob: -14.500380516052246
    6. '[...]' → logprob: -14.500380516052246
    7. 'i' → logprob: -14.625380516052246
    8. '[
' → logprob: -15.000380516052246
    9. ']' → logprob: -15.250380516052246
    10. '[j' → logprob: -15.750380516052246

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06575774401426315
    2. '==' → logprob: -3.4407577514648438
    3. ']==' → logprob: -3.6907577514648438
    4. ' ==' → logprob: -5.565757751464844
    5. ' ]' → logprob: -6.690757751464844
    6. ' ' → logprob: -7.690757751464844
    7. 'i' → logprob: -8.065757751464844
    8. '=' → logprob: -8.190757751464844
    9. ' i' → logprob: -8.940757751464844
    10. ']=='' → logprob: -9.690757751464844

Token 57: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011691815219819546
    2. ' ==' → logprob: -4.511692047119141
    3. '=' → logprob: -8.13669204711914
    4. '!=' → logprob: -8.26169204711914
    5. '==
' → logprob: -10.38669204711914
    6. ' ' → logprob: -11.51169204711914
    7. '===' → logprob: -11.63669204711914
    8. 'i' → logprob: -12.01169204711914
    9. '=='' → logprob: -12.01169204711914
    10. '>' → logprob: -12.88669204711914

Token 58: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04986995458602905
    2. ' s' → logprob: -3.049870014190674
    3. ''' → logprob: -7.424870014190674
    4. ''s' → logprob: -8.549869537353516
    5. ' '' → logprob: -8.799869537353516
    6. ' ' → logprob: -9.049869537353516
    7. '0' → logprob: -9.674869537353516
    8. '"' → logprob: -9.924869537353516
    9. '"s' → logprob: -10.174869537353516
    10. '1' → logprob: -10.799869537353516

Token 59: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010011523962020874
    2. '[' → logprob: -4.635011672973633
    3. '+' → logprob: -8.760011672973633
    4. ']' → logprob: -9.885011672973633
    5. 'i' → logprob: -10.510011672973633
    6. '1' → logprob: -11.760011672973633
    7. 's' → logprob: -12.635011672973633
    8. '```' → logprob: -13.260011672973633
    9. '[next' → logprob: -13.510011672973633
    10. '[
' → logprob: -13.510011672973633

Token 60: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04910799488425255
    2. ' -' → logprob: -3.5491080284118652
    3. '-i' → logprob: -4.174108028411865
    4. 'i' → logprob: -5.924108028411865
    5. '1' → logprob: -7.799108028411865
    6. ']' → logprob: -7.924108028411865
    7. '[i' → logprob: -9.424107551574707
    8. ' i' → logprob: -9.799107551574707
    9. ' ' → logprob: -9.924107551574707
    10. '//' → logprob: -9.924107551574707

Token 61: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12672407925128937
    2. 'i' → logprob: -2.3767240047454834
    3. ' ' → logprob: -4.0017242431640625
    4. ' i' → logprob: -5.1267242431640625
    5. '2' → logprob: -7.1267242431640625
    6. '-' → logprob: -8.126724243164062
    7. '(i' → logprob: -8.751724243164062
    8. '-i' → logprob: -8.876724243164062
    9. ' (' → logprob: -9.251724243164062
    10. '  ' → logprob: -9.376724243164062

Token 62: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33712098002433777
    2. '1' → logprob: -1.3371210098266602
    3. ' -' → logprob: -3.83712100982666
    4. ' ' → logprob: -6.58712100982666
    5. ']' → logprob: -8.08712100982666
    6. '2' → logprob: -8.46212100982666
    7. '   ' → logprob: -9.71212100982666
    8. '  ' → logprob: -10.77462100982666
    9. '```' → logprob: -11.83712100982666
    10. '3' → logprob: -12.27462100982666

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07053839415311813
    2. '2' → logprob: -2.695538282394409
    3. ' ' → logprob: -7.445538520812988
    4. ']' → logprob: -12.070538520812988
    5. '  ' → logprob: -13.070538520812988
    6. '3' → logprob: -13.133038520812988
    7. '   ' → logprob: -13.195538520812988
    8. '])' → logprob: -13.570538520812988
    9. '-' → logprob: -14.008038520812988
    10. '```' → logprob: -14.383038520812988

Token 64: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007654422894120216
    2. '2' → logprob: -4.882654190063477
    3. ' ' → logprob: -10.632654190063477
    4. 'i' → logprob: -11.507654190063477
    5. ']' → logprob: -12.632654190063477
    6. '3' → logprob: -12.820154190063477
    7. '-' → logprob: -13.570154190063477
    8. '```' → logprob: -13.945154190063477
    9. '   ' → logprob: -14.007654190063477
    10. '۱' → logprob: -14.132654190063477

Token 65: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06215589866042137
    2. ']' → logprob: -3.0621559619903564
    3. ']:
' → logprob: -5.062155723571777
    4. ' ]' → logprob: -5.437155723571777
    5. ':' → logprob: -6.437155723571777
    6. ' and' → logprob: -7.187155723571777
    7. ']:
' → logprob: -9.187155723571777
    8. 'and' → logprob: -10.062155723571777
    9. '):' → logprob: -10.312155723571777
    10. ' ' → logprob: -10.312155723571777

Token 66: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5592721104621887
    2. '       ' → logprob: -0.9342721104621887
    3. '   ' → logprob: -4.309272289276123
    4. '    ' → logprob: -4.684272289276123
    5. ':
' → logprob: -5.434272289276123
    6. ' ' → logprob: -6.184272289276123
    7. ' :' → logprob: -6.434272289276123
    8. ' and' → logprob: -6.559272289276123
    9. '):' → logprob: -7.434272289276123
    10. '        ' → logprob: -7.684272289276123

Token 67: ' print' (ID: 2123)
  Prédit: ' invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' invalid' → logprob: -0.6523276567459106
    2. 'invalid' → logprob: -0.9023276567459106
    3. '   ' → logprob: -3.152327537536621
    4. '       ' → logprob: -3.902327537536621
    5. ' break' → logprob: -5.402327537536621
    6. '           ' → logprob: -6.152327537536621
    7. 'print' (adapté à ' print') → logprob: -6.527327537536621
    8. 'break' → logprob: -7.152327537536621
    9. ' print' → logprob: -7.652327537536621
    10. '```' → logprob: -8.402327537536621

Token 68: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.048598840832710266
    2. '(' → logprob: -3.0485987663269043
    3. '-' → logprob: -12.423599243164062
    4. '(
' → logprob: -12.548599243164062
    5. '('' → logprob: -13.673599243164062
    6. ' (-' → logprob: -15.298599243164062
    7. '(False' → logprob: -15.423599243164062
    8. ' (' → logprob: -15.423599243164062
    9. '(n' → logprob: -15.423599243164062
    10. ' ' → logprob: -15.923599243164062

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -10.875025749206543
    3. '2' → logprob: -13.375025749206543
    4. ')' → logprob: -13.812525749206543
    5. '">' → logprob: -14.687525749206543
    6. '>' → logprob: -14.937525749206543
    7. 'i' → logprob: -15.000025749206543
    8. '   ' → logprob: -15.312525749206543
    9. '  ' → logprob: -15.562525749206543
    10. '```' → logprob: -15.562525749206543

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07340991497039795
    2. ')
' → logprob: -2.6984100341796875
    3. '       ' → logprob: -5.6984100341796875
    4. ')
' → logprob: -9.573410034179688
    5. '   ' → logprob: -11.323410034179688
    6. '<|end|>' → logprob: -11.823410034179688
    7. '```' → logprob: -12.073410034179688
    8. '           ' → logprob: -12.323410034179688
    9. ')return' → logprob: -12.573410034179688
    10. ')`
' → logprob: -13.073410034179688

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011715330183506012
    2. '<|end|>' → logprob: -6.876171588897705
    3. '           ' → logprob: -10.001171112060547
    4. '   ' → logprob: -10.501171112060547
    5. '<|end|>' → logprob: -11.126171112060547
    6. ')' → logprob: -11.126171112060547
    7. '```' → logprob: -11.501171112060547
    8. '
' → logprob: -11.626171112060547
    9. '        
' → logprob: -11.876171112060547
    10. ',' → logprob: -12.876171112060547

Token 72: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07735587656497955
    2. '
' → logprob: -3.3273558616638184
    3. '        
' → logprob: -4.452355861663818
    4. '```' → logprob: -4.827355861663818
    5. ' 
' → logprob: -5.077355861663818
    6. '           ' → logprob: -5.827355861663818
    7. '<|end|>' → logprob: -6.327355861663818
    8. '\n' → logprob: -6.452355861663818
    9. '   ' → logprob: -6.827355861663818
    10. ' break' → logprob: -6.952355861663818

Token 73: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007401806069537997
    2. '(' → logprob: -7.625740051269531
    3. '()
' → logprob: -8.375740051269531
    4. '()`' → logprob: -11.375740051269531
    5. '()

' → logprob: -12.750740051269531
    6. '()
' → logprob: -13.000740051269531
    7. '(
' → logprob: -13.875740051269531
    8. '())' → logprob: -14.000740051269531
    9. '();' → logprob: -14.375740051269531
    10. '()\' → logprob: -14.375740051269531

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014334732666611671
    2. '
' → logprob: -4.514334678649902
    3. '<|end|>' → logprob: -7.139334678649902
    4. '    
' → logprob: -7.389334678649902
    5. 'i' → logprob: -7.889334678649902
    6. '  ' → logprob: -8.014334678649902
    7. ' ' → logprob: -8.139334678649902
    8. ')' → logprob: -8.139334678649902
    9. '  
' → logprob: -8.639334678649902
    10. ' i' → logprob: -8.889334678649902

Token 75: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10225686430931091
    2. 'i' (adapté à ' i') → logprob: -2.4772567749023438
    3. ' i' → logprob: -4.727256774902344
    4. ' ' → logprob: -6.977256774902344
    5. '    
' → logprob: -7.102256774902344
    6. '
' → logprob: -7.102256774902344
    7. '  ' → logprob: -7.852256774902344
    8. '  
' → logprob: -8.352256774902344
    9. 'n' → logprob: -8.477256774902344
    10. '<|end|>' → logprob: -8.477256774902344

Token 76: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21359717845916748
    2. '+=' → logprob: -1.9635971784591675
    3. ' +=' → logprob: -2.963597297668457
    4. ' +' → logprob: -8.463597297668457
    5. '++' → logprob: -9.713597297668457
    6. '=' → logprob: -9.713597297668457
    7. '+++' → logprob: -12.588597297668457
    8. ' ' → logprob: -13.588597297668457
    9. '+='' → logprob: -14.088597297668457
    10. ' =' → logprob: -14.338597297668457

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010723850573413074
    2. ' ' → logprob: -9.625106811523438
    3. '2' → logprob: -10.125106811523438
    4. '3' → logprob: -14.500106811523438
    5. '   ' → logprob: -15.187606811523438
    6. '１' → logprob: -17.125106811523438
    7. '  ' → logprob: -17.250106811523438
    8. '4' → logprob: -17.687606811523438
    9. '+' → logprob: -17.750106811523438
    10. '```' → logprob: -18.000106811523438

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '2' → logprob: -11.62501335144043
    3. ' ' → logprob: -12.50001335144043
    4. '3' → logprob: -16.50001335144043
    5. '   ' → logprob: -16.56251335144043
    6. '```' → logprob: -17.50001335144043
    7. '１' → logprob: -17.62501335144043
    8. '  ' → logprob: -18.12501335144043
    9. '۱' → logprob: -18.37501335144043
    10. '+' → logprob: -18.43751335144043

Token 79: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42116791009902954
    2. '<|end|>' → logprob: -2.1711678504943848
    3. ')' → logprob: -2.2961678504943848
    4. '
' → logprob: -3.5461678504943848
    5. '0' → logprob: -3.6711678504943848
    6. '#' → logprob: -4.046167850494385
    7. '```' → logprob: -4.171167850494385
    8. 'n' → logprob: -4.296167850494385
    9. ' ' → logprob: -5.171167850494385
    10. '\n' → logprob: -5.296167850494385

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697084248065948
    2. '=' → logprob: -2.1269707679748535
    3. ':' → logprob: -10.751971244812012
    4. ' +=' → logprob: -11.876971244812012
    5. ' ' → logprob: -12.751971244812012
    6. 's' → logprob: -12.876971244812012
    7. '.' → logprob: -13.751971244812012
    8. ',' → logprob: -13.751971244812012
    9. '_' → logprob: -13.876971244812012
    10. ')' → logprob: -13.876971244812012

Token 82: ' []
' (ID: 8911)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3485710620880127
    2. ' n' → logprob: -1.4735710620880127
    3. '0' → logprob: -1.5985710620880127
    4. 'i' → logprob: -2.3485710620880127
    5. ' i' → logprob: -2.8485710620880127
    6. ' (' → logprob: -3.0985710620880127
    7. ' ' → logprob: -3.5985710620880127
    8. 's' → logprob: -3.8485710620880127
    9. '1' → logprob: -4.348570823669434
    10. ' s' → logprob: -4.473570823669434

Token 83: 'now' (ID: 6201)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4235641658306122
    2. 'count' → logprob: -2.0485641956329346
    3. 'for' → logprob: -2.5485641956329346
    4. '0' → logprob: -2.5485641956329346
    5. 'while' → logprob: -3.4235641956329346
    6. 'current' → logprob: -5.1735639572143555
    7. 'j' → logprob: -5.2985639572143555
    8. 'prev' → logprob: -6.1735639572143555
    9. 'stack' → logprob: -6.4235639572143555
    10. 'if' → logprob: -6.6735639572143555

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22579477727413177
    2. '=' → logprob: -1.600794792175293
    3. ' ' → logprob: -8.600794792175293
    4. '_' → logprob: -8.725794792175293
    5. ',' → logprob: -10.975794792175293
    6. ' +=' → logprob: -12.725794792175293
    7. 's' → logprob: -13.475794792175293
    8. '_=' → logprob: -13.600794792175293
    9. '  ' → logprob: -13.850794792175293
    10. 'a' → logprob: -13.850794792175293

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01522693783044815
    2. '1' → logprob: -5.1402268409729
    3. '"' → logprob: -6.0152268409729
    4. '""' → logprob: -6.2652268409729
    5. ' ' → logprob: -6.6402268409729
    6. 'n' → logprob: -7.5152268409729
    7. 's' → logprob: -7.5152268409729
    8. '-' → logprob: -7.7652268409729
    9. '[]' → logprob: -8.015227317810059
    10. ''' → logprob: -8.140227317810059

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04017261415719986
    2. '1' → logprob: -4.665172576904297
    3. '"' → logprob: -4.790172576904297
    4. '""' → logprob: -5.040172576904297
    5. ''' → logprob: -5.790172576904297
    6. 'n' → logprob: -6.165172576904297
    7. '''' → logprob: -6.290172576904297
    8. 's' → logprob: -6.290172576904297
    9. ''s' → logprob: -6.540172576904297
    10. '-' → logprob: -6.665172576904297

Token 87: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.241000771522522
    2. '<|end|>' → logprob: -1.866000771522522
    3. 'while' → logprob: -1.866000771522522
    4. ' while' → logprob: -2.3660006523132324
    5. ' 
' → logprob: -2.3660006523132324
    6. '+' → logprob: -2.4910006523132324
    7. '
' → logprob: -3.2410006523132324
    8. 'i' → logprob: -3.7410006523132324
    9. '0' → logprob: -3.9910006523132324
    10. 's' → logprob: -4.241000652313232

Token 88: 'i' (ID: 72)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10537022352218628
    2. 'for' → logprob: -2.355370283126831
    3. 'i' → logprob: -5.855370044708252
    4. ' while' → logprob: -7.355370044708252
    5. '0' → logprob: -7.730370044708252
    6. 'n' → logprob: -7.855370044708252
    7. '+' → logprob: -8.73037052154541
    8. '1' → logprob: -8.98037052154541
    9. 's' → logprob: -9.48037052154541
    10. 'if' → logprob: -9.60537052154541

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2646915912628174
    2. '=' → logprob: -1.6396915912628174
    3. ' +=' → logprob: -3.6396915912628174
    4. ' ' → logprob: -5.264691352844238
    5. '+' → logprob: -5.514691352844238
    6. '+=' → logprob: -5.889691352844238
    7. ' +' → logprob: -9.014691352844238
    8. '0' → logprob: -10.014691352844238
    9. '<|end|>' → logprob: -10.139691352844238
    10. '<' → logprob: -11.389691352844238

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0466417595744133
    2. '1' → logprob: -3.6716418266296387
    3. ' ' → logprob: -3.9216418266296387
    4. 'n' → logprob: -8.42164134979248
    5. '2' → logprob: -9.92164134979248
    6. ' n' → logprob: -10.54664134979248
    7. '<|end|>' → logprob: -11.29664134979248
    8. '-' → logprob: -12.67164134979248
    9. 's' → logprob: -12.79664134979248
    10. '3' → logprob: -13.54664134979248

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029017869383096695
    2. '1' → logprob: -3.654017925262451
    3. 'n' → logprob: -6.029017925262451
    4. ' ' → logprob: -8.779017448425293
    5. '2' → logprob: -9.279017448425293
    6. '-' → logprob: -10.654017448425293
    7. 's' → logprob: -11.529017448425293
    8. 'len' → logprob: -12.154017448425293
    9. ' n' → logprob: -12.841517448425293
    10. '<n' → logprob: -13.091517448425293

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1837952584028244
    2. 'n' → logprob: -1.9337952136993408
    3. '<|end|>' → logprob: -4.55879545211792
    4. ' while' → logprob: -4.80879545211792
    5. '
' → logprob: -6.68379545211792
    6. '1' → logprob: -6.93379545211792
    7. '0' → logprob: -7.30879545211792
    8. '```' → logprob: -7.68379545211792
    9. '+' → logprob: -7.93379545211792
    10. 's' → logprob: -8.183794975280762

Token 94: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12763260304927826
    2. 'i' → logprob: -2.1276326179504395
    3. ' True' → logprob: -8.502632141113281
    4. ' n' → logprob: -8.627632141113281
    5. ' now' → logprob: -9.377632141113281
    6. 'n' → logprob: -9.502632141113281
    7. 'True' → logprob: -9.877632141113281
    8. ' ' → logprob: -9.877632141113281
    9. ' s' → logprob: -10.877632141113281
    10. 'now' → logprob: -11.252632141113281

Token 95: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04692377150058746
    2. '<' → logprob: -3.296923875808716
    3. '<n' → logprob: -4.796923637390137
    4. ' ' → logprob: -7.796923637390137
    5. ' <=' → logprob: -8.921923637390137
    6. '<=' → logprob: -11.171923637390137
    7. '<len' → logprob: -11.546923637390137
    8. ' n' → logprob: -11.671923637390137
    9. 'n' → logprob: -12.046923637390137
    10. '+' → logprob: -14.421923637390137

Token 96: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024835076183080673
    2. ' n' → logprob: -6.002483367919922
    3. 'len' → logprob: -12.127483367919922
    4. ' ' → logprob: -13.627483367919922
    5. 's' → logprob: -14.752483367919922
    6. '   ' → logprob: -15.002483367919922
    7. ' len' → logprob: -16.377483367919922
    8. '	n' → logprob: -16.502483367919922
    9. '2' → logprob: -16.627483367919922
    10. '(n' → logprob: -17.127483367919922

Token 97: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04306929558515549
    2. ' and' → logprob: -3.918069362640381
    3. ':
' → logprob: -4.043069362640381
    4. '-' → logprob: -6.043069362640381
    5. 'and' → logprob: -6.418069362640381
    6. ' -' → logprob: -7.668069362640381
    7. ' :' → logprob: -9.043068885803223
    8. '):' → logprob: -10.043068885803223
    9. '   ' → logprob: -10.168068885803223
    10. ' ' → logprob: -11.543068885803223

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076773688197135925
    2. '2' → logprob: -5.1326775550842285
    3. ' ' → logprob: -6.3826775550842285
    4. '3' → logprob: -10.38267707824707
    5. '0' → logprob: -11.69517707824707
    6. '   ' → logprob: -12.07017707824707
    7. '4' → logprob: -12.94517707824707
    8. '-' → logprob: -13.32017707824707
    9. '```' → logprob: -14.07017707824707
    10. '5' → logprob: -14.38267707824707

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016228143125772476
    2. '2' → logprob: -4.141228199005127
    3. ' ' → logprob: -9.016227722167969
    4. '3' → logprob: -9.766227722167969
    5. '0' → logprob: -12.078727722167969
    6. '4' → logprob: -12.953727722167969
    7. '   ' → logprob: -13.453727722167969
    8. '5' → logprob: -14.328727722167969
    9. '6' → logprob: -14.516227722167969
    10. '7' → logprob: -14.828727722167969

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038696788251399994
    2. ':
' → logprob: -3.288696765899658
    3. ' and' → logprob: -8.038697242736816
    4. '   ' → logprob: -8.163697242736816
    5. ' :' → logprob: -11.038697242736816
    6. 'and' → logprob: -11.538697242736816
    7. ':
' → logprob: -11.913697242736816
    8. ' :
' → logprob: -12.663697242736816
    9. ':

' → logprob: -12.913697242736816
    10. '):
' → logprob: -13.038697242736816

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023020433261990547
    2. ' if' → logprob: -3.8980205059051514
    3. 'if' → logprob: -6.648020267486572
    4. ' ' → logprob: -7.273020267486572
    5. '<|end|>' → logprob: -8.52302074432373
    6. '```' → logprob: -9.52302074432373
    7. '  ' → logprob: -10.14802074432373
    8. '    
' → logprob: -10.39802074432373
    9. '       ' → logprob: -10.39802074432373
    10. '    ' → logprob: -10.64802074432373

Token 102: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.30237728357315063
    2. ' if' → logprob: -1.9273772239685059
    3. '   ' → logprob: -2.177377223968506
    4. 'c' → logprob: -7.802377223968506
    5. ' ' → logprob: -7.927377223968506
    6. 'ans' → logprob: -8.052377700805664
    7. 'i' → logprob: -8.552377700805664
    8. '```' → logprob: -8.802377700805664
    9. 's' → logprob: -8.927377700805664
    10. ' now' → logprob: -9.052377700805664

Token 103: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05765031278133392
    2. 's' → logprob: -2.932650327682495
    3. ' now' → logprob: -6.432650089263916
    4. ' ' → logprob: -7.807650089263916
    5. ' i' → logprob: -8.557650566101074
    6. 'now' → logprob: -8.557650566101074
    7. ' not' → logprob: -8.807650566101074
    8. ' (' → logprob: -10.620150566101074
    9. '(s' → logprob: -10.682650566101074
    10. '   ' → logprob: -10.870150566101074

Token 104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8219583075260743e-05
    2. '[' → logprob: -11.250038146972656
    3. 'i' → logprob: -11.750038146972656
    4. ' [' → logprob: -12.250038146972656
    5. '[s' → logprob: -12.875038146972656
    6. '==' → logprob: -13.000038146972656
    7. '```' → logprob: -13.500038146972656
    8. '][' → logprob: -13.625038146972656
    9. ']' → logprob: -13.625038146972656
    10. '[n' → logprob: -14.125038146972656

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7631572484970093
    2. '==' → logprob: -1.2631572484970093
    3. ' ==' → logprob: -1.8881572484970093
    4. ']==' → logprob: -2.513157367706299
    5. ' ' → logprob: -5.013157367706299
    6. ' ]' → logprob: -6.138157367706299
    7. '!=' → logprob: -6.388157367706299
    8. ':' → logprob: -6.388157367706299
    9. '   ' → logprob: -6.638157367706299
    10. ' !=' → logprob: -7.138157367706299

Token 106: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4337528347969055
    2. ' ==' → logprob: -1.0587527751922607
    3. ' ' → logprob: -6.93375301361084
    4. '!=' → logprob: -7.05875301361084
    5. '=' → logprob: -7.30875301361084
    6. ' !=' → logprob: -7.55875301361084
    7. ']==' → logprob: -7.80875301361084
    8. ']' → logprob: -8.05875301361084
    9. 's' → logprob: -8.18375301361084
    10. '==
' → logprob: -8.68375301361084

Token 107: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6574037671089172
    2. '"' → logprob: -1.4074037075042725
    3. ' '' → logprob: -2.1574037075042725
    4. 's' → logprob: -3.1574037075042725
    5. ' s' → logprob: -3.1574037075042725
    6. ' "' → logprob: -3.4074037075042725
    7. ' ' → logprob: -6.532403945922852
    8. '0' → logprob: -7.282403945922852
    9. ''s' → logprob: -8.032403945922852
    10. '"s' → logprob: -8.282403945922852

Token 108: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26938483119010925
    2. '1' → logprob: -1.5193848609924316
    3. 's' → logprob: -4.269384860992432
    4. '"' → logprob: -5.894384860992432
    5. ''' → logprob: -8.519384384155273
    6. ' ' → logprob: -8.769384384155273
    7. ''s' → logprob: -10.019384384155273
    8. '"s' → logprob: -10.269384384155273
    9. ' "' → logprob: -10.706884384155273
    10. '")' → logprob: -10.831884384155273

Token 109: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.6212027072906494
    2. '":
' → logprob: -1.2462027072906494
    3. '"' → logprob: -1.7462027072906494
    4. '":
' → logprob: -8.49620246887207
    5. '":

' → logprob: -8.74620246887207
    6. ' and' → logprob: -9.37120246887207
    7. ' "' → logprob: -9.49620246887207
    8. ':' → logprob: -10.12120246887207
    9. ':
' → logprob: -10.49620246887207
    10. ' ":' → logprob: -10.62120246887207

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07363949716091156
    2. '   ' → logprob: -3.323639392852783
    3. ' and' → logprob: -3.948639392852783
    4. ' now' → logprob: -5.573639392852783
    5. ':
' → logprob: -5.823639392852783
    6. ':' → logprob: -5.948639392852783
    7. '
' → logprob: -6.073639392852783
    8. 'and' → logprob: -6.198639392852783
    9. 'now' → logprob: -7.573639392852783
    10. '    ' → logprob: -8.323639869689941

Token 111: ' ans' (ID: 3345)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.20471228659152985
    2. 'now' → logprob: -2.079712390899658
    3. ' if' → logprob: -3.829712390899658
    4. '       ' → logprob: -4.079712390899658
    5. '   ' → logprob: -5.204712390899658
    6. ' ans' → logprob: -5.454712390899658
    7. '
' → logprob: -5.454712390899658
    8. 'if' → logprob: -5.704712390899658
    9. 'ans' (adapté à ' ans') → logprob: -5.829712390899658
    10. '	now' → logprob: -8.2047119140625

Token 112: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003760535968467593
    2. '.' → logprob: -5.62876033782959
    3. '.extend' → logprob: -9.87876033782959
    4. ' +=' → logprob: -10.00376033782959
    5. ' .' → logprob: -10.25376033782959
    6. '+=' → logprob: -11.25376033782959
    7. 'append' → logprob: -12.12876033782959
    8. '[-' → logprob: -13.00376033782959
    9. '.ap' → logprob: -13.25376033782959
    10. '.app' → logprob: -13.37876033782959

Token 113: '(str' (ID: 7946)
  Prédit: '(now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.0562267042696476
    2. '(' → logprob: -3.5562267303466797
    3. '(i' → logprob: -3.8062267303466797
    4. '('' → logprob: -6.43122673034668
    5. '("' → logprob: -6.93122673034668
    6. '(n' → logprob: -7.43122673034668
    7. '((' → logprob: -8.05622673034668
    8. '()' → logprob: -9.93122673034668
    9. '("("' → logprob: -9.93122673034668
    10. '(str' → logprob: -9.93122673034668

Token 114: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.015259582549333572
    2. '(i' → logprob: -4.890259742736816
    3. '(' → logprob: -5.015259742736816
    4. '(n' → logprob: -7.265259742736816
    5. '(max' → logprob: -8.890259742736816
    6. '((' → logprob: -9.765259742736816
    7. '(int' → logprob: -10.765259742736816
    8. '(len' → logprob: -11.140259742736816
    9. ')' → logprob: -11.640259742736816
    10. '[now' → logprob: -11.640259742736816

Token 115: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9112445712089539
    2. '))
' → logprob: -1.1612446308135986
    3. '+' → logprob: -1.2862446308135986
    4. ' +' → logprob: -5.0362443923950195
    5. ')' → logprob: -7.0362443923950195
    6. '+
' → logprob: -8.28624439239502
    7. '1' → logprob: -8.53624439239502
    8. '))
' → logprob: -8.66124439239502
    9. ' ))
' → logprob: -9.03624439239502
    10. ')
' → logprob: -9.28624439239502

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031390801072120667
    2. '2' → logprob: -3.656390905380249
    3. ' ' → logprob: -5.78139066696167
    4. '3' → logprob: -7.28139066696167
    5. 'i' → logprob: -7.90639066696167
    6. '(' → logprob: -8.781391143798828
    7. '(i' → logprob: -8.906391143798828
    8. 'n' → logprob: -9.156391143798828
    9. 'int' → logprob: -9.531391143798828
    10. '4' → logprob: -9.656391143798828

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01859995536506176
    2. '2' → logprob: -4.018599987030029
    3. 'i' → logprob: -8.893599510192871
    4. ' ' → logprob: -9.018599510192871
    5. 'n' → logprob: -10.143599510192871
    6. '(i' → logprob: -10.268599510192871
    7. '(' → logprob: -10.393599510192871
    8. '3' → logprob: -10.393599510192871
    9. '0' → logprob: -10.768599510192871
    10. 's' → logprob: -11.643599510192871

Token 118: ')' (ID: 8)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5327293872833252
    2. '))' → logprob: -0.9077293872833252
    3. ')' → logprob: -5.157729148864746
    4. ')
' → logprob: -5.782729148864746
    5. '))
' → logprob: -7.782729148864746
    6. '       ' → logprob: -9.282729148864746
    7. '   ' → logprob: -9.907729148864746
    8. '           ' → logprob: -10.282729148864746
    9. ' ))
' → logprob: -10.407729148864746
    10. '"))' → logprob: -10.907729148864746

Token 119: ' +' (ID: 659)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.053353771567344666
    2. ')' → logprob: -3.053353786468506
    3. '       ' → logprob: -5.803353786468506
    4. '
' → logprob: -6.928353786468506
    5. '           ' → logprob: -8.178353309631348
    6. '\n' → logprob: -8.553353309631348
    7. ' )
' → logprob: -9.303353309631348
    8. ')
' → logprob: -9.928353309631348
    9. '               ' → logprob: -10.303353309631348
    10. '+' → logprob: -10.678353309631348

Token 120: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10294012725353241
    2. ''' → logprob: -3.352940082550049
    3. '")' → logprob: -3.852940082550049
    4. '"-' → logprob: -4.102940082550049
    5. '"\' → logprob: -5.227940082550049
    6. '",' → logprob: -5.477940082550049
    7. '"+' → logprob: -5.977940082550049
    8. ''-' → logprob: -6.227940082550049
    9. '".' → logprob: -6.852940082550049
    10. ' "' → logprob: -6.852940082550049

Token 121: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7283969521522522
    2. '-' → logprob: -1.7283968925476074
    3. ')' → logprob: -1.8533968925476074
    4. '")' → logprob: -3.1033968925476074
    5. ''' → logprob: -3.7283968925476074
    6. ' )' → logprob: -3.8533968925476074
    7. ')
' → logprob: -3.9783968925476074
    8. ' ' → logprob: -4.478396892547607
    9. '\n' → logprob: -4.478396892547607
    10. ' )
' → logprob: -4.853396892547607

Token 122: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5293882489204407
    2. 'str' → logprob: -0.9043882489204407
    3. 's' → logprob: -6.529388427734375
    4. ')' → logprob: -6.529388427734375
    5. '0' → logprob: -6.779388427734375
    6. '"' → logprob: -7.404388427734375
    7. '+s' → logprob: -8.029388427734375
    8. '(str' → logprob: -8.154388427734375
    9. ' +' → logprob: -8.154388427734375
    10. '+i' → logprob: -9.279388427734375

Token 123: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.001964082010090351
    2. 's' → logprob: -7.001964092254639
    3. '"' → logprob: -7.501964092254639
    4. ' str' → logprob: -7.751964092254639
    5. '"s' → logprob: -10.12696361541748
    6. '(str' → logprob: -10.75196361541748
    7. '   ' → logprob: -13.00196361541748
    8. ' s' → logprob: -14.00196361541748
    9. ' ' → logprob: -14.12696361541748
    10. ' "' → logprob: -14.12696361541748

Token 124: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.13449060916900635
    2. '(now' → logprob: -2.134490489959717
    3. '(n' → logprob: -5.384490489959717
    4. 'i' → logprob: -6.759490489959717
    5. 'now' → logprob: -6.884490489959717
    6. '(' → logprob: -7.259490489959717
    7. 'n' → logprob: -10.634490966796875
    8. '((' → logprob: -12.134490966796875
    9. '(len' → logprob: -12.384490966796875
    10. '(ans' → logprob: -12.634490966796875

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20281778275966644
    2. ' +' → logprob: -2.702817678451538
    3. '))' → logprob: -2.827817678451538
    4. '))
' → logprob: -2.952817678451538
    5. ')' → logprob: -5.452817916870117
    6. ')
' → logprob: -7.952817916870117
    7. '+
' → logprob: -8.702817916870117
    8. '   ' → logprob: -9.077817916870117
    9. ' ))
' → logprob: -9.827817916870117
    10. '-' → logprob: -9.952817916870117

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1294100284576416
    2. '2' → logprob: -2.1294100284576416
    3. ' ' → logprob: -6.0044097900390625
    4. ')' → logprob: -12.254409790039062
    5. '   ' → logprob: -13.129409790039062
    6. '3' → logprob: -13.504409790039062
    7. '+' → logprob: -14.129409790039062
    8. '0' → logprob: -15.129409790039062
    9. '  ' → logprob: -15.191909790039062
    10. 's' → logprob: -15.441909790039062

Token 127: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16031867265701294
    2. '2' → logprob: -1.9103186130523682
    3. ' ' → logprob: -9.410318374633789
    4. '"' → logprob: -12.035318374633789
    5. '3' → logprob: -12.410318374633789
    6. '")' → logprob: -14.285318374633789
    7. '   ' → logprob: -14.535318374633789
    8. '0' → logprob: -14.660318374633789
    9. ')' → logprob: -14.785318374633789
    10. '  ' → logprob: -16.16031837463379

Token 128: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.398796945810318
    2. ')
' → logprob: -1.1487969160079956
    3. '")' → logprob: -5.023797035217285
    4. '))
' → logprob: -6.148797035217285
    5. '))' → logprob: -6.773797035217285
    6. ')")' → logprob: -6.773797035217285
    7. ')")
' → logprob: -7.648797035217285
    8. '")
' → logprob: -9.148797035217285
    9. ')`
' → logprob: -9.273797035217285
    10. ')
' → logprob: -9.398797035217285

Token 129: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3744182586669922
    2. ')
' → logprob: -1.7494182586669922
    3. '
' → logprob: -2.874418258666992
    4. '   ' → logprob: -3.749418258666992
    5. '       ' → logprob: -3.874418258666992
    6. ')' → logprob: -4.499418258666992
    7. '    
' → logprob: -4.624418258666992
    8. 'i' → logprob: -5.124418258666992
    9. '        
' → logprob: -6.249418258666992
    10. ' 
' → logprob: -6.374418258666992

Token 130: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.0013358361320570111
    2. 'i' → logprob: -7.001335620880127
    3. ' now' → logprob: -8.126336097717285
    4. 'ans' → logprob: -9.751336097717285
    5. '   ' → logprob: -10.751336097717285
    6. '
' → logprob: -11.376336097717285
    7. '       ' → logprob: -11.751336097717285
    8. '           ' → logprob: -12.001336097717285
    9. 'if' → logprob: -12.126336097717285
    10. '	now' → logprob: -12.251336097717285

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1350594162940979
    2. '+=' → logprob: -2.510059356689453
    3. ' =' → logprob: -3.260059356689453
    4. ' +=' → logprob: -5.010059356689453
    5. '+' → logprob: -11.760059356689453
    6. '=i' → logprob: -12.010059356689453
    7. '.=' → logprob: -14.385059356689453
    8. '-=' → logprob: -14.760059356689453
    9. ' ^=' → logprob: -15.510059356689453
    10. ',' → logprob: -15.635059356689453

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00022964231902733445
    2. ' i' → logprob: -8.750229835510254
    3. '0' → logprob: -9.875229835510254
    4. 'n' → logprob: -11.250229835510254
    5. '1' → logprob: -13.625229835510254
    6. '   ' → logprob: -13.875229835510254
    7. 'int' → logprob: -14.375229835510254
    8. '2' → logprob: -14.375229835510254
    9. '(i' → logprob: -14.500229835510254
    10. ' ' → logprob: -14.750229835510254

Token 133: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006726737599819899
    2. ' +' → logprob: -5.0067267417907715
    3. '+
' → logprob: -11.756726264953613
    4. '2' → logprob: -13.756726264953613
    5. '<|end|>' → logprob: -14.381726264953613
    6. '<|end|>' → logprob: -14.506726264953613
    7. '1' → logprob: -15.381726264953613
    8. ' ' → logprob: -15.631726264953613
    9. '+i' → logprob: -15.631726264953613
    10. '   ' → logprob: -15.631726264953613

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07024995982646942
    2. '1' → logprob: -2.6952500343322754
    3. ' ' → logprob: -8.070249557495117
    4. '3' → logprob: -14.820249557495117
    5. '   ' → logprob: -14.820249557495117
    6. '  ' → logprob: -17.070249557495117
    7. '0' → logprob: -17.445249557495117
    8. '    ' → logprob: -18.507749557495117
    9. '```' → logprob: -18.507749557495117
    10. '۲' → logprob: -18.945249557495117

Token 135: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25193870067596436
    2. '1' → logprob: -1.5019387006759644
    3. ' ' → logprob: -11.626938819885254
    4. '3' → logprob: -14.751938819885254
    5. '   ' → logprob: -16.064437866210938
    6. '0' → logprob: -16.314437866210938
    7. '```' → logprob: -17.251937866210938
    8. '  ' → logprob: -18.189437866210938
    9. '۲' → logprob: -18.439437866210938
    10. '+' → logprob: -18.501937866210938

Token 136: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17838548123836517
    2. '   ' → logprob: -1.9283854961395264
    3. '    
' → logprob: -4.678385257720947
    4. '\n' → logprob: -5.678385257720947
    5. 'i' → logprob: -6.053385257720947
    6. ' 
' → logprob: -6.928385257720947
    7. '  
' → logprob: -6.928385257720947
    8. '        
' → logprob: -8.553385734558105
    9. '   
' → logprob: -8.678385734558105
    10. '
' → logprob: -8.803385734558105

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03277542442083359
    2. 'i' → logprob: -3.907775402069092
    3. '
' → logprob: -4.532775402069092
    4. '    
' → logprob: -7.782775402069092
    5. ' i' → logprob: -7.782775402069092
    6. '\n' → logprob: -8.03277587890625
    7. '  
' → logprob: -10.15777587890625
    8. '	i' → logprob: -10.15777587890625
    9. ' 
' → logprob: -10.53277587890625
    10. '[i' → logprob: -10.65777587890625

Token 138: ' else' (ID: 1203)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031434930860996246
    2. ' i' → logprob: -6.378143310546875
    3. '   ' → logprob: -7.003143310546875
    4. '
' → logprob: -7.628143310546875
    5. ' 
' → logprob: -11.253143310546875
    6. '    
' → logprob: -11.503143310546875
    7. '	i' → logprob: -11.503143310546875
    8. '\n' → logprob: -12.253143310546875
    9. 'else' (adapté à ' else') → logprob: -13.253143310546875
    10. '  
' → logprob: -13.378143310546875

Token 139: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2373637855052948
    2. ':' → logprob: -1.6123638153076172
    3. '   ' → logprob: -4.487363815307617
    4. '       ' → logprob: -8.362363815307617
    5. 'i' → logprob: -9.362363815307617
    6. 'if' → logprob: -9.612363815307617
    7. ' if' → logprob: -10.112363815307617
    8. '```' → logprob: -10.237363815307617
    9. ':i' → logprob: -10.237363815307617
    10. '{
' → logprob: -10.487363815307617

Token 140: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.40836477279663086
    2. '   ' → logprob: -1.6583647727966309
    3. 'now' → logprob: -2.783364772796631
    4. ' now' → logprob: -3.533364772796631
    5. 'ans' → logprob: -3.783364772796631
    6. ' i' → logprob: -3.908364772796631
    7. '       ' → logprob: -4.908364772796631
    8. ' ans' → logprob: -6.158364772796631
    9. 'if' → logprob: -7.158364772796631
    10. '```' → logprob: -8.533365249633789

Token 141: ' ans' (ID: 3345)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.567674458026886
    2. 'now' → logprob: -1.4426743984222412
    3. 'ans' (adapté à ' ans') → logprob: -1.6926743984222412
    4. 'if' → logprob: -4.56767463684082
    5. ' now' → logprob: -7.56767463684082
    6. 'print' → logprob: -7.56767463684082
    7. 'while' → logprob: -7.94267463684082
    8. '   ' → logprob: -8.06767463684082
    9. 'pass' → logprob: -8.06767463684082
    10. ' ans' → logprob: -9.19267463684082

Token 142: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0110511165112257
    2. '.' → logprob: -4.511051177978516
    3. '.extend' → logprob: -12.886051177978516
    4. 'append' → logprob: -15.011051177978516
    5. ' .' → logprob: -15.386051177978516
    6. '.app' → logprob: -16.011051177978516
    7. '[-' → logprob: -16.636051177978516
    8. '+=' → logprob: -16.886051177978516
    9. '.Append' → logprob: -17.636051177978516
    10. '.ap' → logprob: -17.761051177978516

Token 143: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00035357745946384966
    2. '("' → logprob: -8.500353813171387
    3. '(now' → logprob: -9.875353813171387
    4. '(' → logprob: -10.250353813171387
    5. 'str' → logprob: -10.375353813171387
    6. '("("' → logprob: -11.750353813171387
    7. '('' → logprob: -12.000353813171387
    8. '(ans' → logprob: -12.125353813171387
    9. '("")' → logprob: -12.375353813171387
    10. '(s' → logprob: -13.250353813171387

Token 144: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.004988605156540871
    2. '(i' → logprob: -5.629988670349121
    3. 'now' → logprob: -6.754988670349121
    4. '(' → logprob: -8.504988670349121
    5. '[now' → logprob: -11.754988670349121
    6. '(n' → logprob: -12.004988670349121
    7. 'i' → logprob: -13.379988670349121
    8. '(str' → logprob: -13.504988670349121
    9. '0' → logprob: -14.254988670349121
    10. ' now' → logprob: -14.754988670349121

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5282700061798096
    2. ' +' → logprob: -0.9032700061798096
    3. ')' → logprob: -5.2782697677612305
    4. ' )' → logprob: -11.15326976776123
    5. '1' → logprob: -12.52826976776123
    6. ')+' → logprob: -12.90326976776123
    7. '+
' → logprob: -13.02826976776123
    8. ' ' → logprob: -13.27826976776123
    9. '0' → logprob: -13.40326976776123
    10. '+)' → logprob: -13.90326976776123

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026313038542866707
    2. ' ' → logprob: -6.002631187438965
    3. '2' → logprob: -9.252631187438965
    4. 'i' → logprob: -10.877631187438965
    5. '0' → logprob: -11.877631187438965
    6. '"' → logprob: -11.877631187438965
    7. ' i' → logprob: -12.002631187438965
    8. '
' → logprob: -12.252631187438965
    9. ')' → logprob: -12.502631187438965
    10. '(i' → logprob: -13.127631187438965

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014931005716789514
    2. ' ' → logprob: -9.000149726867676
    3. '2' → logprob: -11.125149726867676
    4. 'i' → logprob: -12.375149726867676
    5. '(i' → logprob: -12.625149726867676
    6. '+' → logprob: -13.375149726867676
    7. '0' → logprob: -14.500149726867676
    8. '(' → logprob: -15.000149726867676
    9. '"' → logprob: -15.375149726867676
    10. '   ' → logprob: -15.500149726867676

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4863922595977783
    2. '+' → logprob: -0.9863922595977783
    3. ' +' → logprob: -4.486392021179199
    4. ')+' → logprob: -6.986392021179199
    5. '+"' → logprob: -11.2363920211792
    6. '+)' → logprob: -11.6113920211792
    7. ')+"' → logprob: -11.9863920211792
    8. '+
' → logprob: -12.1113920211792
    9. '"' → logprob: -12.1113920211792
    10. ' )' → logprob: -12.3613920211792

Token 149: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04410165548324585
    2. ' +' → logprob: -3.1691017150878906
    3. '+
' → logprob: -7.669101715087891
    4. '+"' → logprob: -7.919101715087891
    5. ')' → logprob: -8.29410171508789
    6. ' +
' → logprob: -12.04410171508789
    7. '"' → logprob: -12.54410171508789
    8. '+")' → logprob: -13.41910171508789
    9. ')+' → logprob: -13.54410171508789
    10. '+)' → logprob: -13.66910171508789

Token 150: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00028421927709132433
    2. ' "' → logprob: -8.375284194946289
    3. ')' → logprob: -10.375284194946289
    4. ''' → logprob: -11.375284194946289
    5. 's' → logprob: -12.375284194946289
    6. '
' → logprob: -13.375284194946289
    7. 'str' → logprob: -13.750284194946289
    8. ' ' → logprob: -14.000284194946289
    9. '")' → logprob: -14.125284194946289
    10. 'n' → logprob: -15.000284194946289

Token 151: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.024542488157749176
    2. ' "' → logprob: -3.7745425701141357
    3. ' ' → logprob: -7.149542331695557
    4. ')' → logprob: -8.774542808532715
    5. '")' → logprob: -8.899542808532715
    6. ''' → logprob: -9.774542808532715
    7. 'i' → logprob: -10.274542808532715
    8. ' i' → logprob: -10.399542808532715
    9. 'n' → logprob: -10.899542808532715
    10. '"+"' → logprob: -11.274542808532715

Token 152: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0003811025235336274
    2. '+' → logprob: -8.500381469726562
    3. '(str' → logprob: -9.125381469726562
    4. ' str' → logprob: -9.750381469726562
    5. ' +' → logprob: -11.875381469726562
    6. '[str' → logprob: -13.000381469726562
    7. '   ' → logprob: -15.250381469726562
    8. 's' → logprob: -15.500381469726562
    9. '=str' → logprob: -15.500381469726562
    10. '$str' → logprob: -15.625381469726562

Token 153: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.011088501662015915
    2. ' str' → logprob: -5.0110883712768555
    3. 'i' → logprob: -5.6360883712768555
    4. 'now' → logprob: -7.5110883712768555
    5. 'n' → logprob: -9.511088371276855
    6. '(str' → logprob: -9.761088371276855
    7. ' i' → logprob: -9.761088371276855
    8. ' now' → logprob: -11.136088371276855
    9. 's' → logprob: -11.511088371276855
    10. '(i' → logprob: -11.761088371276855

Token 154: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1703028678894043
    2. '(now' → logprob: -2.4203028678894043
    3. 'i' → logprob: -3.1703028678894043
    4. 'now' → logprob: -4.170302867889404
    5. '(n' → logprob: -4.670302867889404
    6. 'n' → logprob: -7.545302867889404
    7. '(' → logprob: -8.670303344726562
    8. '[now' → logprob: -10.420303344726562
    9. '(s' → logprob: -10.545303344726562
    10. '0' → logprob: -10.670303344726562

Token 155: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687863945961
    2. ' +' → logprob: -1.1368786096572876
    3. ' +
' → logprob: -13.386878967285156
    4. '1' → logprob: -13.511878967285156
    5. ' ' → logprob: -13.761878967285156
    6. ')' → logprob: -14.136878967285156
    7. '2' → logprob: -14.261878967285156
    8. '+
' → logprob: -14.386878967285156
    9. '＋' → logprob: -14.636878967285156
    10. '   ' → logprob: -14.761878967285156

Token 156: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18061740696430206
    2. '1' → logprob: -1.8056174516677856
    3. ' ' → logprob: -7.055617332458496
    4. '3' → logprob: -12.305617332458496
    5. '   ' → logprob: -12.680617332458496
    6. '
' → logprob: -14.993117332458496
    7. '  ' → logprob: -15.305617332458496
    8. '+' → logprob: -15.368117332458496
    9. '```' → logprob: -15.430617332458496
    10. ')' → logprob: -15.618117332458496

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0700172409415245
    2. '1' → logprob: -2.6950173377990723
    3. ' ' → logprob: -9.570016860961914
    4. '   ' → logprob: -12.320016860961914
    5. '3' → logprob: -12.570016860961914
    6. '+' → logprob: -14.632516860961914
    7. '```' → logprob: -14.695016860961914
    8. '    ' → logprob: -14.882516860961914
    9. '  ' → logprob: -14.945016860961914
    10. '
' → logprob: -15.007516860961914

Token 158: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2563213109970093
    2. ')' → logprob: -1.5063213109970093
    3. '))
' → logprob: -5.756321430206299
    4. '))' → logprob: -7.381321430206299
    5. '   ' → logprob: -8.25632095336914
    6. '")' → logprob: -8.88132095336914
    7. ')`
' → logprob: -9.63132095336914
    8. ')")
' → logprob: -9.88132095336914
    9. ')")' → logprob: -10.50632095336914
    10. '")
' → logprob: -11.00632095336914

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18967771530151367
    2. 'i' → logprob: -1.9396777153015137
    3. '
' → logprob: -3.6896777153015137
    4. '\n' → logprob: -6.314677715301514
    5. ' i' → logprob: -7.189677715301514
    6. '    
' → logprob: -7.314677715301514
    7. ')
' → logprob: -7.814677715301514
    8. '	i' → logprob: -8.939678192138672
    9. '```' → logprob: -9.689678192138672
    10. '[i' → logprob: -9.814678192138672

Token 160: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39260756969451904
    2. 'i' (adapté à ' i') → logprob: -1.142607569694519
    3. ' i' → logprob: -5.642607688903809
    4. '
' → logprob: -6.267607688903809
    5. '\n' → logprob: -8.642607688903809
    6. '	i' → logprob: -9.892607688903809
    7. '    
' → logprob: -10.517607688903809
    8. '```' → logprob: -12.267607688903809
    9. ',i' → logprob: -12.517607688903809
    10. '  
' → logprob: -13.017607688903809

Token 161: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.33432021737098694
    2. '+' → logprob: -1.8343201875686646
    3. ' +=' → logprob: -2.084320306777954
    4. '=' → logprob: -9.959320068359375
    5. ' +' → logprob: -11.959320068359375
    6. '+="' → logprob: -13.084320068359375
    7. '+='' → logprob: -13.209320068359375
    8. '++' → logprob: -13.334320068359375
    9. ' ' → logprob: -14.584320068359375
    10. '+++' → logprob: -14.959320068359375

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.87507438659668
    4. '+' → logprob: -18.00007438659668
    5. '2' → logprob: -18.25007438659668
    6. '```' → logprob: -18.37507438659668
    7. '<|end|>' → logprob: -19.50007438659668
    8. '0' → logprob: -19.75007438659668
    9. '       ' → logprob: -20.87507438659668
    10. '  ' → logprob: -21.00007438659668

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -17.125
    4. '```' → logprob: -18.25
    5. '0' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. 'i' → logprob: -19.25
    8. '+' → logprob: -19.3125
    9. '-' → logprob: -20.25
    10. 'n' → logprob: -20.3125

Token 164: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4807979464530945
    2. 'print' → logprob: -0.9807979464530945
    3. '
' → logprob: -5.10579776763916
    4. '```' → logprob: -7.98079776763916
    5. 'if' → logprob: -8.73079776763916
    6. ' for' → logprob: -9.48079776763916
    7. 'while' → logprob: -10.60579776763916
    8. '``' → logprob: -11.23079776763916
    9. '\n' → logprob: -11.85579776763916
    10. ')
' → logprob: -12.60579776763916

Token 165: 'i' (ID: 72)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02993885986506939
    2. 'for' → logprob: -3.5299389362335205
    3. 'if' → logprob: -9.029938697814941
    4. '
' → logprob: -9.654938697814941
    5. '```' → logprob: -13.654938697814941
    6. ' for' → logprob: -13.904938697814941
    7. ' print' → logprob: -14.279938697814941
    8. 'ans' → logprob: -14.529938697814941
    9. 'while' → logprob: -14.779938697814941
    10. '``' → logprob: -15.404938697814941

Token 166: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17936855554580688
    2. '+=' → logprob: -1.929368495941162
    3. ' +=' → logprob: -4.554368495941162
    4. '=' → logprob: -5.304368495941162
    5. '+
' → logprob: -6.804368495941162
    6. ' +' → logprob: -6.929368495941162
    7. '0' → logprob: -7.554368495941162
    8. '<|end|>' → logprob: -8.17936897277832
    9. ' =' → logprob: -9.17936897277832
    10. '<' → logprob: -9.42936897277832

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01674407534301281
    2. ' ' → logprob: -4.641744136810303
    3. 'n' → logprob: -6.016744136810303
    4. 'now' → logprob: -6.266744136810303
    5. '1' → logprob: -6.391744136810303
    6. ' now' → logprob: -7.891744136810303
    7. ' n' → logprob: -8.141743659973145
    8. 'len' → logprob: -9.266743659973145
    9. 'i' → logprob: -9.641743659973145
    10. 'ans' → logprob: -10.141743659973145

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06479541212320328
    2. 'n' → logprob: -3.06479549407959
    3. 'now' → logprob: -4.31479549407959
    4. '1' → logprob: -6.18979549407959
    5. 'len' → logprob: -8.56479549407959
    6. ' ' → logprob: -8.56479549407959
    7. ' n' → logprob: -9.56479549407959
    8. ' now' → logprob: -9.93979549407959
    9. 'i' → logprob: -10.06479549407959
    10. 'ans' → logprob: -10.56479549407959

Token 169: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09556513279676437
    2. '
' → logprob: -2.5955650806427
    3. ' while' → logprob: -4.345565319061279
    4. '<|end|>' → logprob: -5.720565319061279
    5. 'n' → logprob: -9.345564842224121
    6. 'len' → logprob: -9.720564842224121
    7. 'ans' → logprob: -10.595564842224121
    8. ' 
' → logprob: -11.345564842224121
    9. '```' → logprob: -11.345564842224121
    10. ',' → logprob: -11.470564842224121

Token 170: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0016801789170131087
    2. 'print' → logprob: -7.876680374145508
    3. 'result' → logprob: -7.876680374145508
    4. 'ans' → logprob: -8.001680374145508
    5. 'stack' → logprob: -8.376680374145508
    6. 'res' → logprob: -9.251680374145508
    7. 'length' → logprob: -9.876680374145508
    8. 'for' → logprob: -10.126680374145508
    9. 'count' → logprob: -10.376680374145508
    10. 'positions' → logprob: -10.876680374145508

Token 171: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10495483875274658
    2. ' i' → logprob: -2.354954719543457
    3. 'now' → logprob: -5.979954719543457
    4. 'n' → logprob: -6.854954719543457
    5. ' now' → logprob: -7.479954719543457
    6. 'len' → logprob: -8.604954719543457
    7. ' n' → logprob: -8.854954719543457
    8. 'ans' → logprob: -9.229954719543457
    9. ' len' → logprob: -10.104954719543457
    10. 'not' → logprob: -10.854954719543457

Token 172: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03447089344263077
    2. '<' → logprob: -3.909470796585083
    3. '<n' → logprob: -4.284471035003662
    4. ' <=' → logprob: -10.534470558166504
    5. '<len' → logprob: -11.159470558166504
    6. ' <
' → logprob: -12.909470558166504
    7. '<=' → logprob: -13.284470558166504
    8. ' ' → logprob: -13.534470558166504
    9. ' n' → logprob: -13.784470558166504
    10. '<s' → logprob: -13.784470558166504

Token 173: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0038108841981738806
    2. ' n' → logprob: -6.128810882568359
    3. 'len' → logprob: -6.503810882568359
    4. '1' → logprob: -10.00381088256836
    5. '(n' → logprob: -10.25381088256836
    6. ' len' → logprob: -11.12881088256836
    7. '0' → logprob: -11.50381088256836
    8. '2' → logprob: -12.37881088256836
    9. ' ' → logprob: -12.62881088256836
    10. 'i' → logprob: -12.75381088256836

Token 174: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.398067828034982e-05
    2. '(s' → logprob: -9.62507438659668
    3. 'ans' → logprob: -11.87507438659668
    4. '(answer' → logprob: -15.12507438659668
    5. '(arr' → logprob: -15.87507438659668
    6. '(a' → logprob: -16.12507438659668
    7. '(' → logprob: -16.25007438659668
    8. '(now' → logprob: -16.25007438659668
    9. '(an' → logprob: -17.25007438659668
    10. '	ans' → logprob: -17.37507438659668

Token 175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3137363791465759
    2. '):' → logprob: -1.3137364387512207
    3. ')' → logprob: -8.313735961914062
    4. ':' → logprob: -8.938735961914062
    5. ' and' → logprob: -10.813735961914062
    6. ':
' → logprob: -10.938735961914062
    7. '   ' → logprob: -10.938735961914062
    8. '[i' → logprob: -11.563735961914062
    9. ' ):
' → logprob: -11.688735961914062
    10. ' ):' → logprob: -11.938735961914062

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08986429870128632
    2. 'print' → logprob: -2.7148642539978027
    3. ' print' → logprob: -4.464864253997803
    4. ' if' → logprob: -5.089864253997803
    5. 'if' → logprob: -6.214864253997803
    6. 'ans' → logprob: -11.214864730834961
    7. '	print' → logprob: -11.214864730834961
    8. ' ans' → logprob: -11.839864730834961
    9. '       ' → logprob: -11.839864730834961
    10. '```' → logprob: -12.089864730834961

Token 177: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03957133740186691
    2. ' print' → logprob: -3.7895712852478027
    3. 'if' → logprob: -4.539571285247803
    4. '   ' → logprob: -5.914571285247803
    5. ' if' → logprob: -6.039571285247803
    6. 'ans' → logprob: -8.039571762084961
    7. ' ans' → logprob: -10.164571762084961
    8. 'j' → logprob: -11.289571762084961
    9. 'pr' → logprob: -11.289571762084961
    10. 'for' → logprob: -11.789571762084961

Token 178: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.5094070477061905e-05
    2. 'ans' → logprob: -11.250015258789062
    3. '(' → logprob: -13.375015258789062
    4. '(*' → logprob: -15.000015258789062
    5. '("("' → logprob: -17.875015258789062
    6. '(
' → logprob: -18.125015258789062
    7. '	ans' → logprob: -18.125015258789062
    8. ' ans' → logprob: -19.000015258789062
    9. '((' → logprob: -19.125015258789062
    10. '('' → logprob: -19.375015258789062

Token 179: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. ')[' → logprob: -12.375005722045898
    3. '[' → logprob: -14.125005722045898
    4. '[
' → logprob: -14.750005722045898
    5. ')' → logprob: -15.125005722045898
    6. '][' → logprob: -16.5000057220459
    7. '```' → logprob: -17.1250057220459
    8. '
' → logprob: -17.7500057220459
    9. ' [' → logprob: -17.7500057220459
    10. '[I' → logprob: -17.8750057220459

Token 180: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.014219566248357296
    2. ')' → logprob: -4.264219760894775
    3. '))' → logprob: -10.639219284057617
    4. ']' → logprob: -11.264219284057617
    5. '])
' → logprob: -11.639219284057617
    6. '})' → logprob: -13.014219284057617
    7. ')])' → logprob: -13.014219284057617
    8. ' ])' → logprob: -13.139219284057617
    9. '[i' → logprob: -14.014219284057617
    10. ')
' → logprob: -14.389219284057617

Token 181: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08279353380203247
    2. '   ' → logprob: -2.5827934741973877
    3. 'i' → logprob: -5.832793712615967
    4. '[i' → logprob: -8.582793235778809
    5. '\n' → logprob: -8.832793235778809
    6. '  
' → logprob: -8.957793235778809
    7. '    
' → logprob: -9.082793235778809
    8. ' i' → logprob: -9.207793235778809
    9. '<|end|>' → logprob: -9.582793235778809
    10. '```' → logprob: -10.082793235778809

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00018542143516242504
    2. ' i' → logprob: -8.625185012817383
    3. '
' → logprob: -12.125185012817383
    4. '	i' → logprob: -16.625185012817383
    5. '```' → logprob: -16.750185012817383
    6. '\n' → logprob: -18.000185012817383
    7. '\' → logprob: -18.000185012817383
    8. ' 
' → logprob: -18.000185012817383
    9. '++' → logprob: -18.125185012817383
    10. '   ' → logprob: -18.125185012817383

Token 183: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01773861236870289
    2. '+' → logprob: -4.5177388191223145
    3. ' +=' → logprob: -5.0177388191223145
    4. '=' → logprob: -10.642738342285156
    5. '++' → logprob: -10.892738342285156
    6. '+="' → logprob: -13.392738342285156
    7. '+='' → logprob: -13.642738342285156
    8. '<|end|>' → logprob: -14.142738342285156
    9. 'i' → logprob: -14.267738342285156
    10. '```' → logprob: -14.892738342285156

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -18.000009536743164
    4. '   ' → logprob: -18.750009536743164
    5. '１' → logprob: -21.000009536743164
    6. '+' → logprob: -21.312509536743164
    7. '  ' → logprob: -21.500009536743164
    8. '
' → logprob: -21.625009536743164
    9. ' ' → logprob: -21.687509536743164
    10. '2' → logprob: -21.875009536743164

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.125001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '１' → logprob: -20.062501907348633
    6. '  ' → logprob: -20.437501907348633
    7. '2' → logprob: -20.687501907348633
    8. '۱' → logprob: -20.750001907348633
    9. '१' → logprob: -20.875001907348633
    10. '``' → logprob: -21.062501907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 183
Tokens correctement prédits (1ère position, stricte): 66
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 36.07%
Précision adaptée (1ère position): 38.80%
Précision (top 10): 89.07%
================================================================================
