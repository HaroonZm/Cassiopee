================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, s = open(0)
n, k = map(int, n.split())
print(min(n - 1, k * 2 + sum(i == j for i, j in zip(s, s[1:]))))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027640419080853462
    2. ' =' → logprob: -3.6526403427124023
    3. ',' → logprob: -6.652640342712402
    4. '+' → logprob: -11.152640342712402
    5. ' ' → logprob: -11.777640342712402
    6. '.' → logprob: -12.277640342712402
    7. '[' → logprob: -12.527640342712402
    8. ')' → logprob: -12.652640342712402
    9. '_' → logprob: -12.652640342712402
    10. ';' → logprob: -13.152640342712402

Token 4: ' open' (ID: 2494)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.27662038803100586
    2. 'map' → logprob: -1.7766203880310059
    3. ' input' → logprob: -3.151620388031006
    4. 'input' → logprob: -3.651620388031006
    5. '0' → logprob: -6.276620388031006
    6. ' ' → logprob: -6.526620388031006
    7. ' list' → logprob: -9.651620864868164
    8. ' int' → logprob: -9.776620864868164
    9. '10' → logprob: -9.776620864868164
    10. 'int' → logprob: -9.901620864868164

Token 5: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02383023500442505
    2. '('' → logprob: -3.7738301753997803
    3. '("("' → logprob: -8.64883041381836
    4. '("' → logprob: -8.77383041381836
    5. ''' → logprob: -9.27383041381836
    6. '"' → logprob: -9.52383041381836
    7. '(
' → logprob: -10.02383041381836
    8. '```' → logprob: -11.14883041381836
    9. '(

' → logprob: -12.39883041381836
    10. '`' → logprob: -12.77383041381836

Token 6: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5873878598213196
    2. '"' → logprob: -0.8373878598213196
    3. '0' → logprob: -6.212388038635254
    4. '')' → logprob: -6.337388038635254
    5. ''r' → logprob: -7.087388038635254
    6. ''f' → logprob: -7.087388038635254
    7. ''n' → logprob: -7.462388038635254
    8. ''s' → logprob: -7.587388038635254
    9. 'filename' → logprob: -7.587388038635254
    10. '")' → logprob: -7.587388038635254

Token 7: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0467207245528698
    2. ')' → logprob: -3.1717207431793213
    3. ',' → logprob: -5.671720504760742
    4. '.readline' → logprob: -9.046720504760742
    5. '),' → logprob: -9.796720504760742
    6. '.readlines' → logprob: -9.921720504760742
    7. '.read' → logprob: -11.671720504760742
    8. '))' → logprob: -11.796720504760742
    9. '`).' → logprob: -12.046720504760742
    10. '```' → logprob: -12.046720504760742

Token 8: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5411123633384705
    2. '.readline' → logprob: -1.0411124229431152
    3. '.read' → logprob: -2.7911124229431152
    4. '.readlines' → logprob: -5.916112422943115
    5. '.split' → logprob: -7.916112422943115
    6. 'read' → logprob: -8.666111946105957
    7. ').' → logprob: -9.041111946105957
    8. '.strip' → logprob: -9.791111946105957
    9. '().' → logprob: -11.166111946105957
    10. ')' → logprob: -11.291111946105957

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00678796274587512
    2. '.split' → logprob: -5.7567877769470215
    3. '.readline' → logprob: -5.8817877769470215
    4. '.read' → logprob: -7.8817877769470215
    5. '.strip' → logprob: -8.38178825378418
    6. ',' → logprob: -9.13178825378418
    7. '[' → logprob: -10.00678825378418
    8. '.readlines' → logprob: -11.13178825378418
    9. '.decode' → logprob: -11.50678825378418
    10. ').' → logprob: -11.75678825378418

Token 10: ' k' (ID: 372)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09266583621501923
    2. 'int' → logprob: -3.217665910720825
    3. ' s' → logprob: -4.217665672302246
    4. 'split' → logprob: -4.467665672302246
    5. ')' → logprob: -5.467665672302246
    6. '.' → logprob: -5.842665672302246
    7. 'map' → logprob: -5.967665672302246
    8. ' ' → logprob: -6.092665672302246
    9. '.split' → logprob: -6.217665672302246
    10. 'strip' → logprob: -6.342665672302246

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5576890110969543
    2. '.split' → logprob: -0.9326890110969543
    3. '.strip' → logprob: -4.057689189910889
    4. ')' → logprob: -4.932689189910889
    5. '.readline' → logprob: -5.807689189910889
    6. ').' → logprob: -6.057689189910889
    7. '=' → logprob: -6.432689189910889
    8. ',' → logprob: -6.807689189910889
    9. '().' → logprob: -8.18268871307373
    10. '.rstrip' → logprob: -8.55768871307373

Token 12: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5782538652420044
    2. ' map' → logprob: -0.8282538652420044
    3. 'open' → logprob: -7.578253746032715
    4. ' n' → logprob: -7.578253746032715
    5. ' open' → logprob: -7.828253746032715
    6. 'n' → logprob: -8.078253746032715
    7. ' ' → logprob: -8.828253746032715
    8. ' s' → logprob: -9.453253746032715
    9. '.map' → logprob: -9.578253746032715
    10. 's' → logprob: -9.578253746032715

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016641849651932716
    2. '(str' → logprob: -4.641641616821289
    3. '(' → logprob: -5.141641616821289
    4. '(lambda' → logprob: -7.266641616821289
    5. '(open' → logprob: -9.016641616821289
    6. '[int' → logprob: -9.391641616821289
    7. 'int' → logprob: -10.391641616821289
    8. 'str' → logprob: -10.516641616821289
    9. '<int' → logprob: -10.766641616821289
    10. '```' → logprob: -12.016641616821289

Token 14: ',' (ID: 11)
  Prédit: '(open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.8523126840591431
    2. ',' → logprob: -1.227312684059143
    3. ')' → logprob: -1.602312684059143
    4. 'open' → logprob: -3.2273125648498535
    5. '(' → logprob: -3.3523125648498535
    6. ' open' → logprob: -7.3523125648498535
    7. '=open' → logprob: -7.3523125648498535
    8. ' ,' → logprob: -7.4773125648498535
    9. '```' → logprob: -8.102313041687012
    10. '(input' → logprob: -8.477313041687012

Token 15: ' n' (ID: 297)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.564654529094696
    2. 'input' → logprob: -1.3146545886993408
    3. ' open' → logprob: -2.189654588699341
    4. ' input' → logprob: -3.189654588699341
    5. '(open' → logprob: -5.189654350280762
    6. ')' → logprob: -6.189654350280762
    7. 'n' → logprob: -6.939654350280762
    8. 's' → logprob: -7.439654350280762
    9. ' n' → logprob: -8.564654350280762
    10. '(input' → logprob: -9.439654350280762

Token 16: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.39171603322029114
    2. '.strip' → logprob: -1.1417160034179688
    3. '.' → logprob: -5.641716003417969
    4. '.readline' → logprob: -7.641716003417969
    5. '.rstrip' → logprob: -7.641716003417969
    6. '().' → logprob: -9.391716003417969
    7. ' .' → logprob: -9.391716003417969
    8. ')' → logprob: -9.766716003417969
    9. ').' → logprob: -10.266716003417969
    10. 'split' → logprob: -10.516716003417969

Token 17: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10364192724227905
    2. '(','' → logprob: -2.478641986846924
    3. '(',' → logprob: -4.478641986846924
    4. '(' → logprob: -6.478641986846924
    5. '("("' → logprob: -7.353641986846924
    6. '())' → logprob: -7.853641986846924
    7. '()' → logprob: -8.103641510009766
    8. ')' → logprob: -8.978641510009766
    9. '(",' → logprob: -9.228641510009766
    10. '("' → logprob: -9.478641510009766

Token 18: 'print' (ID: 1598)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6472195386886597
    2. 's' → logprob: -1.6472195386886597
    3. '.strip' → logprob: -1.6472195386886597
    4. ')' → logprob: -2.772219657897949
    5. 'n' → logprob: -5.022219657897949
    6. '.rstrip' → logprob: -5.397219657897949
    7. '.readline' → logprob: -5.397219657897949
    8. 'split' → logprob: -5.897219657897949
    9. 'rstrip' → logprob: -5.897219657897949
    10. ',' → logprob: -6.647219657897949

Token 19: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013085714308544993
    2. '(s' → logprob: -6.876308441162109
    3. '(n' → logprob: -9.75130844116211
    4. '(k' → logprob: -9.75130844116211
    5. '(len' → logprob: -10.00130844116211
    6. '('' → logprob: -10.25130844116211
    7. '()' → logprob: -10.25130844116211
    8. '((' → logprob: -11.12630844116211
    9. 's' → logprob: -11.75130844116211
    10. '("("' → logprob: -11.87630844116211

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18136544525623322
    2. '(s' → logprob: -2.056365489959717
    3. '(n' → logprob: -3.556365489959717
    4. '((' → logprob: -5.056365489959717
    5. '(k' → logprob: -5.931365489959717
    6. '()' → logprob: -9.181365013122559
    7. ')' → logprob: -9.681365013122559
    8. '(len' → logprob: -10.181365013122559
    9. '(int' → logprob: -10.431365013122559
    10. ' (' → logprob: -10.681365013122559

Token 21: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044909339398145676
    2. ' ,' → logprob: -3.6699092388153076
    3. ',k' → logprob: -5.294909477233887
    4. '+' → logprob: -5.794909477233887
    5. ' +' → logprob: -5.919909477233887
    6. '-k' → logprob: -6.044909477233887
    7. '-' → logprob: -6.169909477233887
    8. ' -' → logprob: -6.669909477233887
    9. '+k' → logprob: -7.294909477233887
    10. ')' → logprob: -8.544909477233887

Token 22: ' ' (ID: 220)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07996565848588943
    2. 'k' → logprob: -2.579965591430664
    3. ' s' → logprob: -8.204965591430664
    4. '1' → logprob: -8.204965591430664
    5. 's' → logprob: -8.704965591430664
    6. ',k' → logprob: -9.079965591430664
    7. ' ' → logprob: -9.204965591430664
    8. ',' → logprob: -9.454965591430664
    9. '(k' → logprob: -10.454965591430664
    10. '	k' → logprob: -11.454965591430664

Token 23: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03181283175945282
    2. ' k' → logprob: -3.781812906265259
    3. '1' → logprob: -4.78181266784668
    4. 's' → logprob: -9.53181266784668
    5. ' ' → logprob: -10.15681266784668
    6. 'int' → logprob: -11.78181266784668
    7. ' s' → logprob: -11.78181266784668
    8. '(k' → logprob: -12.15681266784668
    9. '2' → logprob: -12.46931266784668
    10. '	k' → logprob: -12.96931266784668

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021364787593483925
    2. ' ,' → logprob: -3.896364688873291
    3. ',k' → logprob: -7.521364688873291
    4. ')' → logprob: -8.39636516571045
    5. ',n' → logprob: -10.89636516571045
    6. ',
' → logprob: -12.02136516571045
    7. ' ' → logprob: -12.27136516571045
    8. '),' → logprob: -12.64636516571045
    9. 's' → logprob: -12.77136516571045
    10. '-' → logprob: -12.89636516571045

Token 25: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.02494698390364647
    2. 'k' → logprob: -3.774946928024292
    3. ' s' → logprob: -6.649947166442871
    4. 's' → logprob: -8.774947166442871
    5. ''' → logprob: -9.149947166442871
    6. ' ' → logprob: -9.524947166442871
    7. ' ' → logprob: -10.149947166442871
    8. '"' → logprob: -11.649947166442871
    9. ' n' → logprob: -12.274947166442871
    10. '`' → logprob: -12.524947166442871

Token 26: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47524937987327576
    2. ')' → logprob: -0.9752494096755981
    3. ' )' → logprob: -7.225249290466309
    4. ' ))' → logprob: -7.850249290466309
    5. ')))' → logprob: -10.100249290466309
    6. ' ' → logprob: -12.600249290466309
    7. '),' → logprob: -13.100249290466309
    8. '))
' → logprob: -13.475249290466309
    9. ',' → logprob: -13.725249290466309
    10. ')
' → logprob: -13.850249290466309

Token 27: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9023569226264954
    2. 's' → logprob: -1.2773568630218506
    3. ' s' → logprob: -1.6523568630218506
    4. ' ' → logprob: -2.1523568630218506
    5. '(s' → logprob: -5.65235710144043
    6. ' (' → logprob: -6.40235710144043
    7. '(n' → logprob: -7.65235710144043
    8. '(' → logprob: -7.65235710144043
    9. 'n' → logprob: -7.77735710144043
    10. ' n' → logprob: -8.02735710144043

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6888939738273621
    2. 's' → logprob: -1.6888940334320068
    3. ' s' → logprob: -1.6888940334320068
    4. ' ' → logprob: -2.063894033432007
    5. ' n' → logprob: -8.313894271850586
    6. '(s' → logprob: -8.313894271850586
    7. '(n' → logprob: -8.438894271850586
    8. ' (' → logprob: -8.438894271850586
    9. 'n' → logprob: -8.813894271850586
    10. '  ' → logprob: -9.313894271850586

Token 29: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02829989418387413
    2. ')' → logprob: -3.6532998085021973
    3. ' ))' → logprob: -6.653299808502197
    4. '+' → logprob: -7.903299808502197
    5. ' )' → logprob: -8.903300285339355
    6. ')))' → logprob: -9.278300285339355
    7. ' +' → logprob: -9.653300285339355
    8. '-' → logprob: -11.153300285339355
    9. '))
' → logprob: -11.528300285339355
    10. ' ' → logprob: -12.153300285339355

Token 30: ' sum' (ID: 4215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4747181832790375
    2. ' ' → logprob: -0.9747182130813599
    3. '2' → logprob: -8.47471809387207
    4. ' s' → logprob: -9.09971809387207
    5. '3' → logprob: -9.22471809387207
    6. ')' → logprob: -9.34971809387207
    7. 's' → logprob: -10.47471809387207
    8. ' )' → logprob: -10.59971809387207
    9. '4' → logprob: -10.84971809387207
    10. '0' → logprob: -11.22471809387207

Token 31: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15719948709011078
    2. '(s' → logprob: -2.0321993827819824
    3. '((' → logprob: -5.157199382781982
    4. '(n' → logprob: -5.282199382781982
    5. '(int' → logprob: -6.532199382781982
    6. '([' → logprob: -7.157199382781982
    7. '(-' → logprob: -8.15719985961914
    8. '(abs' → logprob: -8.28219985961914
    9. '(k' → logprob: -8.78219985961914
    10. ' (' → logprob: -8.78219985961914

Token 32: ' ==' (ID: 951)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7142115831375122
    2. '(s' → logprob: -2.5892114639282227
    3. ')' → logprob: -2.8392114639282227
    4. '(int' → logprob: -3.2142114639282227
    5. '(n' → logprob: -3.2142114639282227
    6. '(i' → logprob: -3.4642114639282227
    7. ' (' → logprob: -3.7142114639282227
    8. '[' → logprob: -3.7142114639282227
    9. '))' → logprob: -3.9642114639282227
    10. '=' → logprob: -3.9642114639282227

Token 33: ' j' (ID: 441)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.6154630780220032
    2. 's' → logprob: -1.6154630184173584
    3. ' s' → logprob: -2.2404630184173584
    4. ' '' → logprob: -2.6154630184173584
    5. ''' → logprob: -3.3654630184173584
    6. '"s' → logprob: -3.8654630184173584
    7. '"' → logprob: -5.4904632568359375
    8. ''i' → logprob: -5.8654632568359375
    9. ''o' → logprob: -5.9904632568359375
    10. ' "' → logprob: -6.2404632568359375

Token 34: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06711683422327042
    2. 'for' → logprob: -2.8171167373657227
    3. ' ' → logprob: -5.692116737365723
    4. ')' → logprob: -6.942116737365723
    5. '(' → logprob: -8.317116737365723
    6. 's' → logprob: -8.817116737365723
    7. '(s' → logprob: -9.442116737365723
    8. '))' → logprob: -9.692116737365723
    9. ' s' → logprob: -10.067116737365723
    10. ' (' → logprob: -10.317116737365723

Token 35: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08081958442926407
    2. 's' → logprob: -2.580819606781006
    3. ' range' → logprob: -6.580819606781006
    4. '(s' → logprob: -8.455819129943848
    5. 'range' → logprob: -9.205819129943848
    6. ' ' → logprob: -9.955819129943848
    7. ' zip' → logprob: -10.455819129943848
    8. '_s' → logprob: -10.955819129943848
    9. ' (' → logprob: -11.080819129943848
    10. '(' → logprob: -11.080819129943848

Token 36: ',' (ID: 11)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5530897974967957
    2. 's' → logprob: -2.0530898571014404
    3. ',' → logprob: -2.1780898571014404
    4. ' ,' → logprob: -2.1780898571014404
    5. ' ' → logprob: -3.0530898571014404
    6. ' zip' → logprob: -4.428089618682861
    7. ',s' → logprob: -6.053089618682861
    8. ' range' → logprob: -6.303089618682861
    9. ' j' → logprob: -6.428089618682861
    10. ' in' → logprob: -6.553089618682861

Token 37: ' j' (ID: 441)
  Prédit: ' zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.1009741947054863
    2. 'zip' → logprob: -2.3509740829467773
    3. 's' → logprob: -8.225974082946777
    4. '(zip' → logprob: -8.600974082946777
    5. ' s' → logprob: -8.725974082946777
    6. ' enumerate' → logprob: -9.600974082946777
    7. 'enumer' → logprob: -9.600974082946777
    8. ' ' → logprob: -11.350974082946777
    9. '  ' → logprob: -13.350974082946777
    10. '.zip' → logprob: -13.350974082946777

Token 38: ' in' (ID: 306)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.029406649991869926
    2. ' zip' → logprob: -3.6544065475463867
    3. 'zip' → logprob: -7.029406547546387
    4. '(' → logprob: -7.029406547546387
    5. '(s' → logprob: -7.029406547546387
    6. '(n' → logprob: -8.154406547546387
    7. ' in' → logprob: -8.904406547546387
    8. 's' → logprob: -12.404406547546387
    9. '.zip' → logprob: -12.404406547546387
    10. ')' → logprob: -12.904406547546387

Token 39: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.08971544355154037
    2. 'zip' → logprob: -2.4647154808044434
    3. 's' → logprob: -7.714715480804443
    4. '(zip' → logprob: -8.589715003967285
    5. ' s' → logprob: -8.964715003967285
    6. ' ' → logprob: -12.339715003967285
    7. '.zip' → logprob: -12.714715003967285
    8. ')' → logprob: -12.964715003967285
    9. 'z' → logprob: -13.964715003967285
    10. ' z' → logprob: -14.464715003967285

Token 40: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.009093951433897018
    2. '(' → logprob: -4.884093761444092
    3. '(n' → logprob: -6.759093761444092
    4. ' (' → logprob: -8.13409423828125
    5. '(
' → logprob: -12.13409423828125
    6. '((' → logprob: -12.38409423828125
    7. 's' → logprob: -12.38409423828125
    8. ')' → logprob: -12.50909423828125
    9. ' s' → logprob: -12.88409423828125
    10. '(k' → logprob: -13.00909423828125

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02236257679760456
    2. ',s' → logprob: -4.27236270904541
    3. ' ,' → logprob: -5.14736270904541
    4. ',n' → logprob: -6.89736270904541
    5. '[:-' → logprob: -7.89736270904541
    6. ' s' → logprob: -8.02236270904541
    7. ',k' → logprob: -8.39736270904541
    8. '[' → logprob: -8.64736270904541
    9. 's' → logprob: -9.52236270904541
    10. '[::-' → logprob: -10.39736270904541

Token 42: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5269079804420471
    2. ' s' → logprob: -0.9019079804420471
    3. ' reversed' → logprob: -5.776907920837402
    4. 're' → logprob: -8.776907920837402
    5. ' ' → logprob: -9.026907920837402
    6. ''s' → logprob: -9.901907920837402
    7. 't' → logprob: -10.026907920837402
    8. ')' → logprob: -10.089407920837402
    9. ' t' → logprob: -10.651907920837402
    10. '   ' → logprob: -10.714407920837402

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021259954664856195
    2. '[:-' → logprob: -6.877126216888428
    3. ')))' → logprob: -7.127126216888428
    4. '))' → logprob: -9.00212574005127
    5. '[::-' → logprob: -9.37712574005127
    6. '[:' → logprob: -10.87712574005127
    7. ')' → logprob: -11.37712574005127
    8. '))))' → logprob: -11.62712574005127
    9. '+' → logprob: -12.43962574005127
    10. ' ' → logprob: -12.50212574005127

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007405957672744989
    2. '2' → logprob: -5.507405757904053
    3. ' ' → logprob: -6.382405757904053
    4. '+' → logprob: -6.632405757904053
    5. ' n' → logprob: -9.819906234741211
    6. 'n' → logprob: -10.069906234741211
    7. '...' → logprob: -10.132406234741211
    8. '3' → logprob: -10.194906234741211
    9. '   ' → logprob: -10.319906234741211
    10. ':' → logprob: -11.444906234741211

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05837856978178024
    2. '))))' → logprob: -3.1833784580230713
    3. ')))' → logprob: -4.80837869644165
    4. '))' → logprob: -5.55837869644165
    5. ')' → logprob: -7.05837869644165
    6. ':]' → logprob: -7.55837869644165
    7. '[' → logprob: -8.058378219604492
    8. ':)' → logprob: -8.058378219604492
    9. '])))' → logprob: -8.433378219604492
    10. '```' → logprob: -8.933378219604492

Token 46: ']))' (ID: 20259)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.11705780774354935
    2. ')))' → logprob: -2.7420578002929688
    3. ')' → logprob: -3.7420578002929688
    4. '))' → logprob: -3.8670578002929688
    5. '))))
' → logprob: -7.992057800292969
    6. ' ))' → logprob: -8.367057800292969
    7. ' ' → logprob: -8.492057800292969
    8. ')))))
' → logprob: -8.867057800292969
    9. ')))),' → logprob: -8.992057800292969
    10. '))))

' → logprob: -9.617057800292969

Token 47: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038424257189035416
    2. ')' → logprob: -3.288424253463745
    3. ')))' → logprob: -8.288424491882324
    4. '))
' → logprob: -9.538424491882324
    5. '-' → logprob: -10.913424491882324
    6. ' ))' → logprob: -11.413424491882324
    7. '+' → logprob: -12.038424491882324
    8. ')
' → logprob: -12.163424491882324
    9. '),' → logprob: -12.413424491882324
    10. ' )' → logprob: -13.038424491882324


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 31.11%
Précision adaptée (1ère position): 31.11%
Précision (top 10): 64.44%
================================================================================
