================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, a, b = map(int, input().split())
mod = 10 ** 9 + 7
N = 10 ** 6
inv_t = [0, 1]
for i in range(2, N):
    inv_t.append(inv_t[mod % i] * (mod - mod // i) % mod)
ret_a = 1
for i in range(1, a + 1):
    ret_a = (ret_a * (n - i + 1) * inv_t[i]) % mod
ret_b = 1
for i in range(1, b + 1):
    ret_b = (ret_b * (n - i + 1) * inv_t[i]) % mod
x = 2
k = n
res = 1
while k > 1:
    if k % 2 != 0:
        res = res * x % mod
    x = x * x % mod
    k //= 2
res = res * x % mod
result = (res - 1 - ret_a - ret_b) % mod
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' a' (ID: 261)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0340353399515152
    2. ',' → logprob: -4.0340352058410645
    3. ' =' → logprob: -4.1590352058410645
    4. '[' → logprob: -9.659035682678223
    5. '+' → logprob: -11.034035682678223
    6. '_' → logprob: -11.659035682678223
    7. ')' → logprob: -11.659035682678223
    8. '*' → logprob: -11.909035682678223
    9. '.' → logprob: -12.284035682678223
    10. ' ' → logprob: -12.284035682678223

Token 4: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01433026883751154
    2. ' =' → logprob: -4.5143303871154785
    3. ',' → logprob: -5.7643303871154785
    4. ' ' → logprob: -10.26432991027832
    5. '_' → logprob: -10.76432991027832
    6. ')' → logprob: -10.76432991027832
    7. '.' → logprob: -10.76432991027832
    8. '[' → logprob: -10.88932991027832
    9. ';' → logprob: -12.13932991027832
    10. 'i' → logprob: -12.63932991027832

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011086373589932919
    2. ' =' → logprob: -5.011086463928223
    3. ',' → logprob: -5.511086463928223
    4. '+' → logprob: -8.886086463928223
    5. ';' → logprob: -9.636086463928223
    6. '[' → logprob: -10.886086463928223
    7. '=
' → logprob: -10.886086463928223
    8. '.' → logprob: -11.261086463928223
    9. '```' → logprob: -11.261086463928223
    10. '*' → logprob: -11.386086463928223

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4757561981678009
    2. ' ' → logprob: -1.4757561683654785
    3. 'map' → logprob: -2.8507561683654785
    4. ' map' → logprob: -2.8507561683654785
    5. '10' → logprob: -4.4757561683654785
    6. 'input' → logprob: -4.6007561683654785
    7. '1' → logprob: -5.2257561683654785
    8. ' input' → logprob: -5.3507561683654785
    9. '5' → logprob: -6.8507561683654785
    10. '42' → logprob: -8.225756645202637

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02489941567182541
    2. '<|end|>' → logprob: -4.149899482727051
    3. '```' → logprob: -5.024899482727051
    4. '(lambda' → logprob: -7.649899482727051
    5. '<|end|>' → logprob: -7.899899482727051
    6. ')' → logprob: -8.27489948272705
    7. 'user' → logprob: -8.89989948272705
    8. '[' → logprob: -9.02489948272705
    9. '(user' → logprob: -9.27489948272705
    10. '(token' → logprob: -9.39989948272705

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04520870000123978
    2. 'input' → logprob: -3.545208692550659
    3. ')' → logprob: -4.295208930969238
    4. '(' → logprob: -7.295208930969238
    5. ' input' → logprob: -7.920208930969238
    6. ',input' → logprob: -8.170208930969238
    7. '```' → logprob: -8.920208930969238
    8. '=input' → logprob: -9.795208930969238
    9. '`' → logprob: -10.170208930969238
    10. '[input' → logprob: -10.295208930969238

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16040457785129547
    2. ' input' → logprob: -1.9104045629501343
    3. '(input' → logprob: -9.035404205322266
    4. ')' → logprob: -9.785404205322266
    5. ',input' → logprob: -13.410404205322266
    6. ' ' → logprob: -13.910404205322266
    7. '=input' → logprob: -14.035404205322266
    8. '<input' → logprob: -14.660404205322266
    9. '[input' → logprob: -15.285404205322266
    10. '	input' → logprob: -15.285404205322266

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9405528903007507
    2. '(' → logprob: -1.4405529499053955
    3. '())' → logprob: -2.0655529499053955
    4. '('' → logprob: -2.8155529499053955
    5. '(()' → logprob: -2.8155529499053955
    6. ')' → logprob: -3.4405529499053955
    7. '(token' → logprob: -4.315552711486816
    8. '(""))' → logprob: -4.315552711486816
    9. '();)' → logprob: -5.065552711486816
    10. '("")' → logprob: -5.315552711486816

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015618811594322324
    2. 'strip' → logprob: -6.501562118530273
    3. 'rstrip' → logprob: -10.126562118530273
    4. ')' → logprob: -11.876562118530273
    5. ' split' → logprob: -11.876562118530273
    6. '(split' → logprob: -12.251562118530273
    7. 'spl' → logprob: -15.376562118530273
    8. '```' → logprob: -15.376562118530273
    9. 'read' → logprob: -15.751562118530273
    10. '_split' → logprob: -16.251562118530273

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014211333356797695
    2. '())' → logprob: -4.639211177825928
    3. '))' → logprob: -5.514211177825928
    4. '()' → logprob: -8.639211654663086
    5. '(' → logprob: -9.139211654663086
    6. '`)' → logprob: -9.389211654663086
    7. ')`' → logprob: -11.389211654663086
    8. '()))' → logprob: -11.514211654663086
    9. ' )' → logprob: -12.389211654663086
    10. '')' → logprob: -12.389211654663086

Token 13: 'mod' (ID: 4847)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0937402248382568
    2. 'if' → logprob: -1.0937402248382568
    3. '+' → logprob: -2.718740224838257
    4. '\n' → logprob: -3.093740224838257
    5. '```' → logprob: -3.468740224838257
    6. 'i' → logprob: -3.593740224838257
    7. ',' → logprob: -4.093740463256836
    8. '\' → logprob: -4.218740463256836
    9. '
' → logprob: -4.343740463256836
    10. 'for' → logprob: -4.468740463256836

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34544169902801514
    2. '=' → logprob: -2.2204418182373047
    3. ' ' → logprob: -2.5954418182373047
    4. ' =' → logprob: -2.5954418182373047
    5. ')' → logprob: -4.345441818237305
    6. '_space' → logprob: -5.720441818237305
    7. '<|end|>' → logprob: -5.845441818237305
    8. ',' → logprob: -5.970441818237305
    9. '%' → logprob: -6.220441818237305
    10. '_mod' → logprob: -6.595441818237305

Token 15: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0812457948923111
    2. ' ' → logprob: -2.5812458992004395
    3. '100' → logprob: -6.0812458992004395
    4. '1' → logprob: -9.706245422363281
    5. '998' → logprob: -11.956245422363281
    6. 'int' → logprob: -15.456245422363281
    7. '0' → logprob: -15.831245422363281
    8. ' ' → logprob: -16.20624542236328
    9. '(' → logprob: -16.70624542236328
    10. '109' → logprob: -16.83124542236328

Token 16: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029927168041467667
    2. '100' → logprob: -3.5299272537231445
    3. '998' → logprob: -8.904927253723145
    4. '1' → logprob: -10.154927253723145
    5. 'int' → logprob: -14.154927253723145
    6. ' ' → logprob: -14.279927253723145
    7. '(' → logprob: -14.404927253723145
    8. '`' → logprob: -17.404926300048828
    9. '```' → logprob: -17.529926300048828
    10. 'pow' → logprob: -17.654926300048828

Token 17: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.010739225894212723
    2. ' **' → logprob: -5.510739326477051
    3. ')' → logprob: -6.760739326477051
    4. '^' → logprob: -6.760739326477051
    5. '*' → logprob: -7.010739326477051
    6. ' ' → logprob: -7.510739326477051
    7. '\' → logprob: -7.885739326477051
    8. '=' → logprob: -8.01073932647705
    9. '0' → logprob: -8.01073932647705
    10. '\n' → logprob: -8.01073932647705

Token 18: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.625
    3. ' ' → logprob: -16.875
    4. '```' → logprob: -18.75
    5. '**' → logprob: -23.125
    6. '_' → logprob: -23.25
    7. '``' → logprob: -23.5
    8. '９' → logprob: -23.5
    9. '+' → logprob: -24.25
    10. '^' → logprob: -24.25

Token 19: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.125
    3. '```' → logprob: -17.875
    4. ' ' → logprob: -19.375
    5. '``' → logprob: -21.125
    6. '+' → logprob: -22.625
    7. '10' → logprob: -23.125
    8. '９' → logprob: -23.125
    9. '   ' → logprob: -23.25
    10. '18' → logprob: -23.5

Token 20: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013321757433004677
    2. '7' → logprob: -9.375133514404297
    3. ' +' → logprob: -10.000133514404297
    4. '9' → logprob: -13.625133514404297
    5. '+
' → logprob: -14.625133514404297
    6. '```' → logprob: -14.625133514404297
    7. '＋' → logprob: -14.750133514404297
    8. '+

' → logprob: -16.250133514404297
    9. '+</' → logprob: -16.625133514404297
    10. '19' → logprob: -17.625133514404297

Token 21: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '+' → logprob: -15.625000953674316
    4. '9' → logprob: -18.25
    5. '```' → logprob: -18.5
    6. '07' → logprob: -19.0
    7. '   ' → logprob: -19.625
    8. '_' → logprob: -21.125
    9. ' ' → logprob: -21.1875
    10. '  ' → logprob: -21.25

Token 22: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.875
    3. '```' → logprob: -18.375
    4. ' ' → logprob: -19.125
    5. '07' → logprob: -20.625
    6. '9' → logprob: -20.875
    7. '   ' → logprob: -21.25
    8. '``' → logprob: -22.0
    9. '７' → logprob: -22.5625
    10. '' → logprob: -22.8125

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8248809576034546
    2. '\n' → logprob: -1.0748809576034546
    3. 'result' → logprob: -2.824881076812744
    4. '\' → logprob: -3.074881076812744
    5. '' → logprob: -3.324881076812744
    6. '
' → logprob: -4.074881076812744
    7. '```' → logprob: -4.074881076812744
    8. 'n' → logprob: -4.824881076812744
    9. 'a' → logprob: -4.949881076812744
    10. 'dp' → logprob: -5.449881076812744

Token 24: 'N' (ID: 45)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5544769167900085
    2. 'result' → logprob: -1.6794769763946533
    3. 'd' → logprob: -2.9294769763946533
    4. 's' → logprob: -3.8044769763946533
    5. 'c' → logprob: -3.9294769763946533
    6. '
' → logprob: -3.9294769763946533
    7. '\' → logprob: -3.9294769763946533
    8. '' → logprob: -4.304476737976074
    9. '\n' → logprob: -4.304476737976074
    10. 'a' → logprob: -4.429476737976074

Token 25: ' =' (ID: 314)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.29905033111572266
    2. '**' → logprob: -2.1740503311157227
    3. '_' → logprob: -3.1740503311157227
    4. '-' → logprob: -3.1740503311157227
    5. '.' → logprob: -4.424050331115723
    6. '[' → logprob: -4.549050331115723
    7. '#' → logprob: -4.549050331115723
    8. '^' → logprob: -5.049050331115723
    9. '*' → logprob: -5.299050331115723
    10. '%' → logprob: -5.549050331115723

Token 26: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2177610993385315
    2. 'n' → logprob: -1.8427610397338867
    3. ' ' → logprob: -3.5927610397338867
    4. '1' → logprob: -5.967761039733887
    5. '10' → logprob: -5.967761039733887
    6. '100' → logprob: -6.217761039733887
    7. ' a' → logprob: -7.217761039733887
    8. 'a' → logprob: -7.342761039733887
    9. ' [' → logprob: -7.967761039733887
    10. '2' → logprob: -8.342761039733887

Token 27: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10746537894010544
    2. '10' → logprob: -2.3574652671813965
    3. ' n' → logprob: -5.8574652671813965
    4. '1' → logprob: -6.6074652671813965
    5. '100' → logprob: -6.7324652671813965
    6. '2' → logprob: -6.8574652671813965
    7. ' ' → logprob: -8.607465744018555
    8. 'a' → logprob: -8.857465744018555
    9. '50' → logprob: -8.982465744018555
    10. '500' → logprob: -9.982465744018555

Token 28: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7996543049812317
    2. ' **' → logprob: -0.9246543049812317
    3. '**' → logprob: -1.924654245376587
    4. ')' → logprob: -5.424654483795166
    5. ' ' → logprob: -7.049654483795166
    6. '^' → logprob: -7.549654483795166
    7. ' *' → logprob: -7.674654483795166
    8. ' **)' → logprob: -8.049654006958008
    9. ' )' → logprob: -8.174654006958008
    10. ' ^' → logprob: -8.674654006958008

Token 29: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.22255851328372955
    2. '6' → logprob: -1.7225584983825684
    3. '9' → logprob: -4.097558498382568
    4. '8' → logprob: -6.597558498382568
    5. '5' → logprob: -6.847558498382568
    6. '18' → logprob: -6.847558498382568
    7. '12' → logprob: -7.722558498382568
    8. '10' → logprob: -8.222558975219727
    9. '15' → logprob: -9.597558975219727
    10. '11' → logprob: -10.972558975219727

Token 30: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11491914838552475
    2. '7' → logprob: -2.8649191856384277
    3. '6' → logprob: -3.3649191856384277
    4. '18' → logprob: -4.364919185638428
    5. '5' → logprob: -6.364919185638428
    6. '12' → logprob: -6.739919185638428
    7. '8' → logprob: -6.989919185638428
    8. '10' → logprob: -8.11491870880127
    9. '```' → logprob: -9.61491870880127
    10. '15' → logprob: -9.86491870880127

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9960460066795349
    2. '\n' → logprob: -1.1210460662841797
    3. '\' → logprob: -2.9960460662841797
    4. 'n' → logprob: -2.9960460662841797
    5. '' → logprob: -2.9960460662841797
    6. '<|end|>' → logprob: -3.6210460662841797
    7. '```' → logprob: -3.6210460662841797
    8. ' 
' → logprob: -4.12104606628418
    9. '+' → logprob: -4.24604606628418
    10. '#' → logprob: -4.49604606628418

Token 32: 'inv' (ID: 31086)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.3474864065647125
    2. 'dp' → logprob: -1.4724863767623901
    3. 'factor' → logprob: -3.3474864959716797
    4. 'f' → logprob: -4.59748649597168
    5. 'fac' → logprob: -5.47248649597168
    6. 'facts' → logprob: -5.84748649597168
    7. 'a' → logprob: -6.09748649597168
    8. '```' → logprob: -6.59748649597168
    9. 'c' → logprob: -6.72248649597168
    10. 'max' → logprob: -7.22248649597168

Token 33: '_t' (ID: 838)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8935947418212891
    2. '_' → logprob: -1.393594741821289
    3. '=' → logprob: -1.643594741821289
    4. 's' → logprob: -2.018594741821289
    5. '[' → logprob: -5.143594741821289
    6. '_factor' → logprob: -5.893594741821289
    7. '_fact' → logprob: -6.018594741821289
    8. 'a' → logprob: -6.393594741821289
    9. '_=' → logprob: -6.768594741821289
    10. 'fact' → logprob: -7.768594741821289

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9674794673919678
    2. ' =' → logprob: -1.3424794673919678
    3. '[]' → logprob: -2.5924794673919678
    4. '[' → logprob: -2.7174794673919678
    5. 'ab' → logprob: -2.9674794673919678
    6. 'able' → logprob: -3.5924794673919678
    7. 'f' → logprob: -3.7174794673919678
    8. 's' → logprob: -4.342479705810547
    9. 'otal' → logprob: -4.467479705810547
    10. 'ables' → logprob: -4.467479705810547

Token 35: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47586214542388916
    2. ' [' → logprob: -0.9758621454238892
    3. '[n' → logprob: -6.7258620262146
    4. '[N' → logprob: -8.350862503051758
    5. '[int' → logprob: -9.475862503051758
    6. '[-' → logprob: -9.475862503051758
    7. '[a' → logprob: -10.350862503051758
    8. ' [-' → logprob: -10.600862503051758
    9. '[len' → logprob: -10.600862503051758
    10. ' ' → logprob: -10.850862503051758

Token 36: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47429507970809937
    2. '0' → logprob: -0.9742950797080994
    3. 'None' → logprob: -8.724294662475586
    4. 'pow' → logprob: -10.974294662475586
    5. ']' → logprob: -11.099294662475586
    6. '-' → logprob: -11.099294662475586
    7. ' ' → logprob: -12.599294662475586
    8. '```' → logprob: -12.974294662475586
    9. ' None' → logprob: -14.974294662475586
    10. '``' → logprob: -15.349294662475586

Token 37: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038745637983083725
    2. ',' → logprob: -3.288745641708374
    3. ']*' → logprob: -8.038745880126953
    4. ' for' → logprob: -8.538745880126953
    5. ']*(' → logprob: -8.788745880126953
    6. ',
' → logprob: -11.288745880126953
    7. 'for' → logprob: -11.538745880126953
    8. ' ]' → logprob: -12.288745880126953
    9. ')' → logprob: -12.663745880126953
    10. ',
' → logprob: -14.288745880126953

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000912774819880724
    2. ' ' → logprob: -7.000912666320801
    3. '0' → logprob: -13.6259126663208
    4. ']' → logprob: -17.000913619995117
    5. '۱' → logprob: -18.813413619995117
    6. '  ' → logprob: -19.375913619995117
    7. 'pow' → logprob: -19.563413619995117
    8. '```' → logprob: -19.875913619995117
    9. '１' → logprob: -20.125913619995117
    10. ')' → logprob: -20.250913619995117

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '500' → logprob: -16.000001907348633
    4. '0' → logprob: -17.000001907348633
    5. ']' → logprob: -17.875001907348633
    6. '```' → logprob: -19.250001907348633
    7. '100' → logprob: -19.500001907348633
    8. '۱' → logprob: -19.687501907348633
    9. ')' → logprob: -20.062501907348633
    10. '2' → logprob: -20.187501907348633

Token 40: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002879414474591613
    2. ',' → logprob: -5.877879619598389
    3. ' ]' → logprob: -10.62787914276123
    4. ']
' → logprob: -10.87787914276123
    5. ']

' → logprob: -10.87787914276123
    6. ',
' → logprob: -11.50287914276123
    7. ',

' → logprob: -14.87787914276123
    8. '2' → logprob: -15.25287914276123
    9. '],' → logprob: -15.25287914276123
    10. '']' → logprob: -15.62787914276123

Token 41: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34085366129875183
    2. '\n' → logprob: -2.840853691101074
    3. '<|end|>' → logprob: -2.840853691101074
    4. ',' → logprob: -3.090853691101074
    5. '```' → logprob: -3.590853691101074
    6. '[' → logprob: -3.715853691101074
    7. ',
' → logprob: -3.840853691101074
    8. '\' → logprob: -4.840853691101074
    9. '' → logprob: -4.965853691101074
    10. ' ' → logprob: -4.965853691101074

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07043340802192688
    2. 'i' → logprob: -2.6954333782196045
    3. ' ' → logprob: -7.695433616638184
    4. '	i' → logprob: -10.320433616638184
    5. '_' → logprob: -12.820433616638184
    6. ' _' → logprob: -13.070433616638184
    7. ' ' → logprob: -13.195433616638184
    8. '  ' → logprob: -14.570433616638184
    9. 'I' → logprob: -14.570433616638184
    10. '(i' → logprob: -15.070433616638184

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055267009884119034
    2. 'in' → logprob: -2.930267095565796
    3. ' ' → logprob: -7.930266857147217
    4. '	in' → logprob: -11.555267333984375
    5. 'n' → logprob: -12.930267333984375
    6. '  ' → logprob: -12.930267333984375
    7. 'range' → logprob: -13.055267333984375
    8. ',' → logprob: -13.555267333984375
    9. '=' → logprob: -13.930267333984375
    10. 'i' → logprob: -14.055267333984375

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759422779083252
    2. ' range' → logprob: -0.8259422779083252
    3. '	range' → logprob: -13.325942039489746
    4. '(range' → logprob: -14.075942039489746
    5. ' ' → logprob: -14.950942039489746
    6. ' xrange' → logprob: -16.450942993164062
    7. '2' → logprob: -16.575942993164062
    8. 'Range' → logprob: -18.450942993164062
    9. '_range' → logprob: -18.575942993164062
    10. '.range' → logprob: -19.200942993164062

Token 45: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3425219549390022e-05
    2. ' (' → logprob: -11.62501335144043
    3. ' ' → logprob: -12.50001335144043
    4. '2' → logprob: -14.37501335144043
    5. '(
' → logprob: -16.25001335144043
    6. ' range' → logprob: -17.75001335144043
    7. '(range' → logprob: -18.12501335144043
    8. 'range' → logprob: -18.25001335144043
    9. '```' → logprob: -19.50001335144043
    10. '[' → logprob: -19.50001335144043

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. ')' → logprob: -16.250295639038086
    4. '  ' → logprob: -17.375295639038086
    5. '۲' → logprob: -18.000295639038086
    6. '   ' → logprob: -18.125295639038086
    7. '２' → logprob: -19.000295639038086
    8. '(' → logprob: -19.312795639038086
    9. '3' → logprob: -19.375295639038086
    10. '	' → logprob: -19.437795639038086

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005015409551560879
    2. ' ,' → logprob: -5.5050153732299805
    3. ',N' → logprob: -7.0050153732299805
    4. ',n' → logprob: -11.13001537322998
    5. 'N' → logprob: -11.75501537322998
    6. ' N' → logprob: -12.50501537322998
    7. ' ' → logprob: -13.88001537322998
    8. ',
' → logprob: -14.25501537322998
    9. ',i' → logprob: -15.00501537322998
    10. '，' → logprob: -15.38001537322998

Token 48: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.029755808413028717
    2. ' N' → logprob: -3.5297558307647705
    3. '	N' → logprob: -12.779755592346191
    4. ' ' → logprob: -13.029755592346191
    5. '  ' → logprob: -16.154756546020508
    6. '   ' → logprob: -16.279756546020508
    7. ' ' → logprob: -16.779756546020508
    8. '10' → logprob: -17.154756546020508
    9. '100' → logprob: -17.779756546020508
    10. ')' → logprob: -17.779756546020508

Token 49: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889430224895477
    2. ' +' → logprob: -2.5788943767547607
    3. ' ' → logprob: -13.45389461517334
    4. '):
' → logprob: -13.57889461517334
    5. '):' → logprob: -13.70389461517334
    6. ' ' → logprob: -15.70389461517334
    7. ',' → logprob: -15.70389461517334
    8. '  ' → logprob: -15.95389461517334
    9. ')' → logprob: -16.828893661499023
    10. '1' → logprob: -16.953893661499023

Token 50: '   ' (ID: 271)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.08396835625171661
    2. 'inv' → logprob: -2.5839684009552
    3. ' (' → logprob: -5.708968162536621
    4. ' mod' → logprob: -6.958968162536621
    5. '(inv' → logprob: -7.708968162536621
    6. 'mod' → logprob: -8.833968162536621
    7. '```' → logprob: -9.583968162536621
    8. '(' → logprob: -10.458968162536621
    9. ' N' → logprob: -10.958968162536621
    10. 'in' → logprob: -11.083968162536621

Token 51: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.04302190989255905
    2. 'inv' (adapté à ' inv') → logprob: -3.1680219173431396
    3. '   ' → logprob: -11.918022155761719
    4. '(inv' → logprob: -12.418022155761719
    5. '```' → logprob: -12.793022155761719
    6. 'mod' → logprob: -13.418022155761719
    7. '_inv' → logprob: -13.543022155761719
    8. 'in' → logprob: -13.543022155761719
    9. '.inv' → logprob: -13.668022155761719
    10. ' mod' → logprob: -13.918022155761719

Token 52: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00014573395310435444
    2. '_' → logprob: -9.00014591217041
    3. '_i' → logprob: -11.12514591217041
    4. 't' → logprob: -13.00014591217041
    5. 's' → logprob: -13.12514591217041
    6. ' =' → logprob: -14.00014591217041
    7. '=' → logprob: -14.62514591217041
    8. ' ' → logprob: -14.62514591217041
    9. '[i' → logprob: -15.00014591217041
    10. ' _' → logprob: -16.000144958496094

Token 53: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005611348897218704
    2. '.' → logprob: -8.500560760498047
    3. '[' → logprob: -8.625560760498047
    4. '[i' → logprob: -9.500560760498047
    5. '.extend' → logprob: -10.250560760498047
    6. '   ' → logprob: -10.750560760498047
    7. ' ' → logprob: -11.000560760498047
    8. '=' → logprob: -11.500560760498047
    9. 'append' → logprob: -11.625560760498047
    10. ' =' → logprob: -13.250560760498047

Token 54: '(inv' (ID: 107330)
  Prédit: '(inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.03471478447318077
    2. '((' → logprob: -3.909714698791504
    3. '(mod' → logprob: -4.659714698791504
    4. 'inv' → logprob: -5.784714698791504
    5. '(' → logprob: -6.784714698791504
    6. '(in' → logprob: -8.284714698791504
    7. 'mod' → logprob: -9.534714698791504
    8. ' inv' → logprob: -10.284714698791504
    9. '(int' → logprob: -11.784714698791504
    10. ' (' → logprob: -11.784714698791504

Token 55: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0003134168218821287
    2. 't' → logprob: -8.250313758850098
    3. 'mod' → logprob: -10.500313758850098
    4. '[i' → logprob: -12.125313758850098
    5. '_i' → logprob: -12.375313758850098
    6. 'inv' → logprob: -12.750313758850098
    7. 'i' → logprob: -12.875313758850098
    8. ')' → logprob: -13.750313758850098
    9. '```' → logprob: -13.750313758850098
    10. '_s' → logprob: -14.000313758850098

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05570964515209198
    2. '[-' → logprob: -2.9307096004486084
    3. 'mod' → logprob: -7.3057098388671875
    4. '[N' → logprob: -9.305709838867188
    5. '[(' → logprob: -10.430709838867188
    6. '```' → logprob: -11.680709838867188
    7. '[i' → logprob: -12.180709838867188
    8. '-mod' → logprob: -12.805709838867188
    9. '[
' → logprob: -12.805709838867188
    10. '_mod' → logprob: -12.930709838867188

Token 57: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0012620178749784827
    2. '-mod' → logprob: -7.251262187957764
    3. ' mod' → logprob: -8.251261711120605
    4. '-' → logprob: -9.126261711120605
    5. '(mod' → logprob: -9.751261711120605
    6. '-m' → logprob: -9.751261711120605
    7. '(' → logprob: -10.126261711120605
    8. '	mod' → logprob: -11.626261711120605
    9. ' -' → logprob: -12.251261711120605
    10. ' ' → logprob: -12.251261711120605

Token 58: ' %' (ID: 1851)
  Prédit: '%i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%i' → logprob: -0.0019646743312478065
    2. '%' → logprob: -6.376964569091797
    3. ' %' → logprob: -8.251964569091797
    4. '%d' → logprob: -14.001964569091797
    5. '%n' → logprob: -14.751964569091797
    6. '%s' → logprob: -16.126964569091797
    7. '```' → logprob: -16.126964569091797
    8. 'i' → logprob: -16.126964569091797
    9. '%c' → logprob: -16.626964569091797
    10. '%e' → logprob: -17.251964569091797

Token 59: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6240566083070007e-06
    2. ' i' → logprob: -13.375001907348633
    3. '	i' → logprob: -17.875001907348633
    4. ' ' → logprob: -18.500001907348633
    5. '```' → logprob: -19.750001907348633
    6. '%i' → logprob: -20.750001907348633
    7. '   ' → logprob: -20.875001907348633
    8. ')i' → logprob: -21.250001907348633
    9. '  ' → logprob: -22.000001907348633
    10. 'mod' → logprob: -22.125001907348633

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.610702363715973e-06
    2. ']*' → logprob: -12.375009536743164
    3. '])' → logprob: -12.750009536743164
    4. ' ]' → logprob: -14.250009536743164
    5. ')' → logprob: -14.625009536743164
    6. '],' → logprob: -15.125009536743164
    7. '2' → logprob: -15.750009536743164
    8. ']
' → logprob: -16.375009536743164
    9. '0' → logprob: -16.500009536743164
    10. '1' → logprob: -16.500009536743164

Token 61: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2912115156650543
    2. ' *' → logprob: -1.916211485862732
    3. ')' → logprob: -2.4162116050720215
    4. '*i' → logprob: -5.5412116050720215
    5. '   ' → logprob: -5.6662116050720215
    6. '(' → logprob: -6.4162116050720215
    7. ' ' → logprob: -6.5412116050720215
    8. '-' → logprob: -6.9162116050720215
    9. ')*' → logprob: -6.9162116050720215
    10. '*(' → logprob: -7.2912116050720215

Token 62: ' (' (ID: 350)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.03878682106733322
    2. '(' → logprob: -3.2887868881225586
    3. ' (' → logprob: -7.288786888122559
    4. '(-' → logprob: -11.163786888122559
    5. '(pow' → logprob: -11.163786888122559
    6. '-(' → logprob: -11.663786888122559
    7. '((' → logprob: -11.788786888122559
    8. '(m' → logprob: -11.788786888122559
    9. '-' → logprob: -13.288786888122559
    10. '-mod' → logprob: -13.413786888122559

Token 63: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1599006950855255
    2. '-mod' → logprob: -2.659900665283203
    3. '(mod' → logprob: -2.659900665283203
    4. ' mod' → logprob: -4.909900665283203
    5. '	mod' → logprob: -7.784900665283203
    6. '-' → logprob: -10.409900665283203
    7. '(' → logprob: -10.909900665283203
    8. ' -' → logprob: -11.784900665283203
    9. '-(' → logprob: -11.909900665283203
    10. ' (' → logprob: -12.034900665283203

Token 64: ' -' (ID: 533)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -1.1101748943328857
    2. '-' → logprob: -1.3601748943328857
    3. '(' → logprob: -1.4851748943328857
    4. 'mod' → logprob: -2.2351748943328857
    5. '-mod' → logprob: -2.8601748943328857
    6. ' (' → logprob: -4.985175132751465
    7. ' mod' → logprob: -5.360175132751465
    8. '-m' → logprob: -5.610175132751465
    9. '-(' → logprob: -5.860175132751465
    10. ' -' → logprob: -6.110175132751465

Token 65: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005812693270854652
    2. ' mod' → logprob: -7.50058126449585
    3. '(mod' → logprob: -10.875581741333008
    4. '	mod' → logprob: -12.000581741333008
    5. '/mod' → logprob: -12.750581741333008
    6. 'div' → logprob: -16.125581741333008
    7. ' (' → logprob: -17.000581741333008
    8. '-mod' → logprob: -17.000581741333008
    9. '//' → logprob: -17.125581741333008
    10. '_mod' → logprob: -17.250581741333008

Token 66: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -2.069664333248511e-05
    2. ' //' → logprob: -11.000020980834961
    3. '/i' → logprob: -13.250020980834961
    4. '#' → logprob: -14.000020980834961
    5. '/' → logprob: -14.875020980834961
    6. '//=' → logprob: -15.000020980834961
    7. '```' → logprob: -15.500020980834961
    8. 'i' → logprob: -16.00002098083496
    9. '   ' → logprob: -17.12502098083496
    10. 'div' → logprob: -17.12502098083496

Token 67: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007119550718925893
    2. ' i' → logprob: -7.250711917877197
    3. '	i' → logprob: -13.250712394714355
    4. '   ' → logprob: -16.25071144104004
    5. '_i' → logprob: -16.62571144104004
    6. ')i' → logprob: -17.37571144104004
    7. '*i' → logprob: -18.00071144104004
    8. ',i' → logprob: -18.12571144104004
    9. '%i' → logprob: -18.37571144104004
    10. '<|end|>' → logprob: -18.62571144104004

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033445585519075394
    2. '%' → logprob: -3.6584455966949463
    3. '%i' → logprob: -5.783445358276367
    4. ' %' → logprob: -5.908445358276367
    5. ')%' → logprob: -7.658445358276367
    6. ' ' → logprob: -8.783445358276367
    7. '   ' → logprob: -8.908445358276367
    8. '%n' → logprob: -9.158445358276367
    9. '```' → logprob: -9.408445358276367
    10. '`' → logprob: -9.408445358276367

Token 69: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.42535340785980225
    2. ' %' → logprob: -1.1753534078598022
    3. ')' → logprob: -3.925353527069092
    4. '%i' → logprob: -4.300353527069092
    5. '   ' → logprob: -5.550353527069092
    6. ')%' → logprob: -8.550353050231934
    7. ' ' → logprob: -9.050353050231934
    8. '%n' → logprob: -9.925353050231934
    9. ' i' → logprob: -10.050353050231934
    10. ' mod' → logprob: -10.425353050231934

Token 70: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01815006136894226
    2. ' mod' → logprob: -4.0181498527526855
    3. '	mod' → logprob: -15.643150329589844
    4. '(mod' → logprob: -17.268150329589844
    5. ' ' → logprob: -17.643150329589844
    6. 'i' → logprob: -18.518150329589844
    7. '```' → logprob: -19.768150329589844
    8. ' мод' → logprob: -20.018150329589844
    9. ' i' → logprob: -20.018150329589844
    10. 'm' → logprob: -20.143150329589844

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. '))' → logprob: -11.125021934509277
    3. ' )' → logprob: -12.750021934509277
    4. ')
' → logprob: -13.875021934509277
    5. '`)' → logprob: -13.875021934509277
    6. '   ' → logprob: -14.250021934509277
    7. '')' → logprob: -15.000021934509277
    8. ')`' → logprob: -15.000021934509277
    9. ')i' → logprob: -15.250021934509277
    10. '）' → logprob: -15.375021934509277

Token 72: 'ret' (ID: 3431)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20624995231628418
    2. '=' → logprob: -1.7062499523162842
    3. ' ' → logprob: -6.331250190734863
    4. 'urn' → logprob: -7.081250190734863
    5. 'u' → logprob: -7.081250190734863
    6. '.' → logprob: -8.331250190734863
    7. ' +=' → logprob: -8.581250190734863
    8. '_' → logprob: -8.706250190734863
    9. '[' → logprob: -9.206250190734863
    10. 's' → logprob: -9.331250190734863

Token 74: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2542054057121277
    2. 's' → logprob: -2.3792054653167725
    3. '=' → logprob: -3.0042054653167725
    4. ' =' → logprob: -3.2542054653167725
    5. '_' → logprob: -4.004205226898193
    6. ' +=' → logprob: -5.629205226898193
    7. ' ' → logprob: -5.754205226898193
    8. ',' → logprob: -5.754205226898193
    9. '[a' → logprob: -5.879205226898193
    10. '.append' → logprob: -6.254205226898193

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9112383723258972
    2. 'a' → logprob: -1.161238431930542
    3. 'pow' → logprob: -2.161238431930542
    4. ' a' → logprob: -3.036238431930542
    5. '(a' → logprob: -3.286238431930542
    6. ' ' → logprob: -3.661238431930542
    7. ' pow' → logprob: -4.411238193511963
    8. ' (' → logprob: -4.536238193511963
    9. '(' → logprob: -4.786238193511963
    10. '0' → logprob: -4.911238193511963

Token 76: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4798447787761688
    2. 'pow' → logprob: -1.6048448085784912
    3. '1' → logprob: -1.9798448085784912
    4. '(a' → logprob: -3.604844808578491
    5. '(' → logprob: -5.354844570159912
    6. '(pow' → logprob: -5.354844570159912
    7. '0' → logprob: -6.979844570159912
    8. 'ret' → logprob: -6.979844570159912
    9. '((' → logprob: -7.104844570159912
    10. '[a' → logprob: -7.479844570159912

Token 77: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8692424893379211
    2. '+' → logprob: -1.1192424297332764
    3. '<|end|>' → logprob: -2.1192424297332764
    4. ' for' → logprob: -2.7442424297332764
    5. '*' → logprob: -4.3692426681518555
    6. ' ' → logprob: -4.6192426681518555
    7. '
' → logprob: -4.6192426681518555
    8. ')' → logprob: -5.1192426681518555
    9. '' → logprob: -5.3692426681518555
    10. '[' → logprob: -5.3692426681518555

Token 78: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2506445348262787
    2. '<|end|>' → logprob: -1.875644564628601
    3. ' for' → logprob: -3.0006444454193115
    4. '+' → logprob: -4.750644683837891
    5. '*' → logprob: -5.750644683837891
    6. '```' → logprob: -6.500644683837891
    7. '<|end|>' → logprob: -7.000644683837891
    8. '#' → logprob: -7.375644683837891
    9. '[' → logprob: -7.500644683837891
    10. ')' → logprob: -7.750644683837891

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1325448602437973
    2. 'i' → logprob: -2.507544755935669
    3. '_' → logprob: -3.757544755935669
    4. ' range' → logprob: -4.382544994354248
    5. ' _' → logprob: -5.632544994354248
    6. 'range' → logprob: -6.632544994354248
    7. ' ' → logprob: -7.132544994354248
    8. '_i' → logprob: -7.382544994354248
    9. 'a' → logprob: -8.75754451751709
    10. '_a' → logprob: -8.88254451751709

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05492493882775307
    2. 'in' → logprob: -2.929924964904785
    3. ' ' → logprob: -10.679924964904785
    4. '	in' → logprob: -12.304924964904785
    5. 'range' → logprob: -12.679924964904785
    6. ',' → logprob: -12.679924964904785
    7. 'import' → logprob: -13.304924964904785
    8. '  ' → logprob: -13.554924964904785
    9. '   ' → logprob: -13.804924964904785
    10. 'a' → logprob: -14.429924964904785

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759729146957397
    2. ' range' → logprob: -0.8259729146957397
    3. 'a' → logprob: -11.575972557067871
    4. '(range' → logprob: -11.700972557067871
    5. ' a' → logprob: -11.950972557067871
    6. '	range' → logprob: -12.325972557067871
    7. ' ' → logprob: -12.575972557067871
    8. '  ' → logprob: -15.075972557067871
    9. '   ' → logprob: -15.825972557067871
    10. 'b' → logprob: -15.950972557067871

Token 82: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1379583775997162
    2. '(range' → logprob: -2.387958288192749
    3. '(a' → logprob: -3.387958288192749
    4. ' range' → logprob: -6.012958526611328
    5. 'range' → logprob: -8.012958526611328
    6. '(n' → logprob: -8.137958526611328
    7. '(b' → logprob: -9.387958526611328
    8. '(s' → logprob: -9.762958526611328
    9. ' (' → logprob: -10.512958526611328
    10. '((' → logprob: -11.637958526611328

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6459730267524719
    2. 'a' → logprob: -0.8959730267524719
    3. 'range' → logprob: -3.020972967147827
    4. 'n' → logprob: -4.645973205566406
    5. 'b' → logprob: -5.020973205566406
    6. ' range' → logprob: -7.020973205566406
    7. '2' → logprob: -7.645973205566406
    8. ' a' → logprob: -7.645973205566406
    9. '(' → logprob: -7.770973205566406
    10. '(a' → logprob: -8.770973205566406

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030094345565885305
    2. ' ,' → logprob: -6.00300931930542
    3. ',n' → logprob: -7.75300931930542
    4. ',a' → logprob: -9.628009796142578
    5. 'a' → logprob: -10.503009796142578
    6. ' ' → logprob: -12.503009796142578
    7. ' a' → logprob: -13.253009796142578
    8. ',b' → logprob: -13.753009796142578
    9. '1' → logprob: -13.878009796142578
    10. 'n' → logprob: -14.128009796142578

Token 85: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3035946488380432
    2. ' a' → logprob: -1.5535945892333984
    3. ' n' → logprob: -3.8035945892333984
    4. 'n' → logprob: -4.303594589233398
    5. 'b' → logprob: -4.928594589233398
    6. ' b' → logprob: -4.928594589233398
    7. ' ' → logprob: -9.803594589233398
    8. '	a' → logprob: -12.553594589233398
    9. ')' → logprob: -13.803594589233398
    10. '1' → logprob: -14.053594589233398

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47409239411354065
    2. ' +' → logprob: -0.9740923643112183
    3. '):' → logprob: -12.474092483520508
    4. '):
' → logprob: -12.974092483520508
    5. ')' → logprob: -13.474092483520508
    6. '1' → logprob: -13.724092483520508
    7. ' ' → logprob: -14.099092483520508
    8. ':' → logprob: -14.099092483520508
    9. 'a' → logprob: -14.224092483520508
    10. '   ' → logprob: -14.474092483520508

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.381715774536133
    4. '2' → logprob: -16.881715774536133
    5. ')' → logprob: -16.881715774536133
    6. '+' → logprob: -17.006715774536133
    7. '  ' → logprob: -18.131715774536133
    8. 'b' → logprob: -18.131715774536133
    9. ' ' → logprob: -18.256715774536133
    10. '```' → logprob: -18.381715774536133

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '2' → logprob: -16.500036239624023
    4. 'b' → logprob: -16.875036239624023
    5. ')' → logprob: -18.000036239624023
    6. '   ' → logprob: -18.375036239624023
    7. '```' → logprob: -18.750036239624023
    8. ' b' → logprob: -19.000036239624023
    9. ' ' → logprob: -19.187536239624023
    10. 'a' → logprob: -19.250036239624023

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024993833154439926
    2. '):
' → logprob: -3.774993896484375
    3. ':' → logprob: -6.774993896484375
    4. '):
' → logprob: -8.149993896484375
    5. ')' → logprob: -8.649993896484375
    6. ' ):' → logprob: -9.524993896484375
    7. '   ' → logprob: -10.274993896484375
    8. ':
' → logprob: -11.899993896484375
    9. '*' → logprob: -12.149993896484375
    10. ' ):
' → logprob: -12.274993896484375

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025942857610061765
    2. '<|end|>' → logprob: -9.500259399414062
    3. '```' → logprob: -9.500259399414062
    4. ' ret' → logprob: -9.625259399414062
    5. '    
' → logprob: -10.625259399414062
    6. 'ret' → logprob: -11.625259399414062
    7. '   ' → logprob: -13.000259399414062
    8. '<|end|>' → logprob: -13.750259399414062
    9. '	ret' → logprob: -14.125259399414062
    10. ',' → logprob: -14.125259399414062

Token 91: ' ret' (ID: 2881)
  Prédit: ' ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.13002850115299225
    2. '   ' → logprob: -2.505028486251831
    3. 'ret' (adapté à ' ret') → logprob: -3.255028486251831
    4. '	ret' → logprob: -6.75502872467041
    5. ' ' → logprob: -8.75502872467041
    6. '```' → logprob: -8.75502872467041
    7. '<|end|>' → logprob: -9.63002872467041
    8. '(ret' → logprob: -10.63002872467041
    9. '       ' → logprob: -11.13002872467041
    10. ' ' → logprob: -11.13002872467041

Token 92: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0002599053841549903
    2. '_' → logprob: -8.375260353088379
    3. 'a' → logprob: -11.375260353088379
    4. '```' → logprob: -12.000260353088379
    5. '_=' → logprob: -12.750260353088379
    6. '*_' → logprob: -13.250260353088379
    7. '_ai' → logprob: -13.750260353088379
    8. '*' → logprob: -14.125260353088379
    9. '<|end|>' → logprob: -14.125260353088379
    10. ' _' → logprob: -14.375260353088379

Token 93: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.13628366589546204
    2. '=' → logprob: -2.2612836360931396
    3. '*' → logprob: -4.261283874511719
    4. ' *=' → logprob: -4.761283874511719
    5. ' =' → logprob: -7.886283874511719
    6. '```' → logprob: -9.636283874511719
    7. ' ' → logprob: -9.886283874511719
    8. ' ' → logprob: -11.511283874511719
    9. '**' → logprob: -11.511283874511719
    10. '	' → logprob: -12.011283874511719

Token 94: ' (' (ID: 350)
  Prédit: ' ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.6412486433982849
    2. 'ret' → logprob: -0.8912486433982849
    3. '(ret' → logprob: -3.0162487030029297
    4. ' (' → logprob: -4.26624870300293
    5. '(' → logprob: -9.14124870300293
    6. '	ret' → logprob: -10.39124870300293
    7. '$ret' → logprob: -10.64124870300293
    8. '```' → logprob: -12.01624870300293
    9. ' ' → logprob: -12.20374870300293
    10. 'rets' → logprob: -12.45374870300293

Token 95: 'ret' (ID: 3431)
  Prédit: 'ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.023372195661067963
    2. ' ret' → logprob: -3.773372173309326
    3. '(ret' → logprob: -9.148372650146484
    4. '	ret' → logprob: -11.898372650146484
    5. '   ' → logprob: -12.773372650146484
    6. '$ret' → logprob: -13.023372650146484
    7. ' ' → logprob: -13.335872650146484
    8. 'rett' → logprob: -13.335872650146484
    9. 'rets' → logprob: -14.210872650146484
    10. '  ' → logprob: -14.523372650146484

Token 96: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.749814019713085e-06
    2. 'a' → logprob: -12.250006675720215
    3. '_' → logprob: -13.875006675720215
    4. ')' → logprob: -15.625006675720215
    5. ' _' → logprob: -15.750006675720215
    6. '_ai' → logprob: -15.875006675720215
    7. '_i' → logprob: -16.00000762939453
    8. ')_' → logprob: -16.00000762939453
    9. '```' → logprob: -16.25000762939453
    10. '*_' → logprob: -16.87500762939453

Token 97: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931551098823547
    2. ' *' → logprob: -0.6931551098823547
    3. ' ' → logprob: -12.318155288696289
    4. ' ' → logprob: -12.818155288696289
    5. '**' → logprob: -14.818155288696289
    6. ' **' → logprob: -16.19315528869629
    7. '＊' → logprob: -16.44315528869629
    8. '   ' → logprob: -16.81815528869629
    9. '*i' → logprob: -17.56815528869629
    10. '```' → logprob: -17.88065528869629

Token 98: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024073142558336258
    2. ' i' → logprob: -4.274073123931885
    3. '(n' → logprob: -5.149073123931885
    4. ' (' → logprob: -6.399073123931885
    5. '(i' → logprob: -6.399073123931885
    6. 'n' → logprob: -7.649073123931885
    7. ' ' → logprob: -9.774073600769043
    8. '   ' → logprob: -10.149073600769043
    9. ' n' → logprob: -10.399073600769043
    10. '(' → logprob: -10.399073600769043

Token 99: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009879447519779205
    2. '(n' → logprob: -4.7598795890808105
    3. 'b' → logprob: -7.2598795890808105
    4. ' n' → logprob: -7.6348795890808105
    5. 'i' → logprob: -10.384879112243652
    6. ' (' → logprob: -11.134879112243652
    7. '   ' → logprob: -11.634879112243652
    8. '(b' → logprob: -12.134879112243652
    9. 'N' → logprob: -12.509879112243652
    10. ' ' → logprob: -12.759879112243652

Token 100: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25630348920822144
    2. '-' → logprob: -1.5063035488128662
    3. '+' → logprob: -5.756303310394287
    4. '-i' → logprob: -7.131303310394287
    5. ' +' → logprob: -8.006303787231445
    6. '+i' → logprob: -10.381303787231445
    7. '-
' → logprob: -11.381303787231445
    8. ' ' → logprob: -11.881303787231445
    9. ' i' → logprob: -12.256303787231445
    10. '
' → logprob: -12.381303787231445

Token 101: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.704191267490387
    2. 'a' → logprob: -1.0791912078857422
    3. ' i' → logprob: -1.9541912078857422
    4. ' a' → logprob: -3.829191207885742
    5. 'b' → logprob: -6.454191207885742
    6. ' b' → logprob: -8.079191207885742
    7. '   ' → logprob: -8.829191207885742
    8. ' (' → logprob: -9.579191207885742
    9. ' ' → logprob: -10.579191207885742
    10. '(i' → logprob: -10.579191207885742

Token 102: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0791289284825325
    2. ' +' → logprob: -2.5791289806365967
    3. ')' → logprob: -8.704129219055176
    4. '1' → logprob: -11.329129219055176
    5. '+i' → logprob: -11.329129219055176
    6. '+)' → logprob: -11.579129219055176
    7. '))' → logprob: -12.079129219055176
    8. ' ' → logprob: -12.516629219055176
    9. '+n' → logprob: -12.766629219055176
    10. 'a' → logprob: -12.829129219055176

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008074867073446512
    2. ' ' → logprob: -7.125807285308838
    3. ')' → logprob: -13.125807762145996
    4. '<|end|>' → logprob: -15.563307762145996
    5. ' )' → logprob: -15.813307762145996
    6. '`' → logprob: -16.00080680847168
    7. '2' → logprob: -16.18830680847168
    8. '```' → logprob: -16.43830680847168
    9. '   ' → logprob: -16.50080680847168
    10. '...' → logprob: -17.18830680847168

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.625009536743164
    3. ')' → logprob: -14.000009536743164
    4. '2' → logprob: -17.125009536743164
    5. '`' → logprob: -18.500009536743164
    6. '```' → logprob: -19.750009536743164
    7. '   ' → logprob: -19.875009536743164
    8. ' )' → logprob: -20.000009536743164
    9. 'a' → logprob: -20.625009536743164
    10. '"' → logprob: -20.625009536743164

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004093835595995188
    2. '))' → logprob: -5.504093647003174
    3. ')%' → logprob: -11.504094123840332
    4. ' )' → logprob: -12.254094123840332
    5. ')
' → logprob: -15.379094123840332
    6. ' ))' → logprob: -15.629094123840332
    7. ')`' → logprob: -16.129093170166016
    8. '```' → logprob: -17.129093170166016
    9. '%' → logprob: -17.379093170166016
    10. ')

' → logprob: -18.004093170166016

Token 106: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011364045785740018
    2. ' )' → logprob: -7.001136302947998
    3. '%' → logprob: -9.376136779785156
    4. ')%' → logprob: -9.876136779785156
    5. ' %' → logprob: -10.126136779785156
    6. ' *' → logprob: -10.501136779785156
    7. '*' → logprob: -12.001136779785156
    8. ' //' → logprob: -12.251136779785156
    9. '   ' → logprob: -12.376136779785156
    10. ' ' → logprob: -13.626136779785156

Token 107: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.008769973181188107
    2. ' inv' → logprob: -4.758769989013672
    3. 'pow' → logprob: -8.883769989013672
    4. ' pow' → logprob: -11.383769989013672
    5. '(inv' → logprob: -12.508769989013672
    6. '   ' → logprob: -13.633769989013672
    7. '.inv' → logprob: -16.008769989013672
    8. 'inverse' → logprob: -16.133769989013672
    9. ' ' → logprob: -16.508769989013672
    10. '_inv' → logprob: -16.633769989013672

Token 108: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.5048530030981055e-06
    2. 't' → logprob: -13.500001907348633
    3. 'a' → logprob: -17.125001907348633
    4. '[' → logprob: -18.625001907348633
    5. '_i' → logprob: -18.625001907348633
    6. '[i' → logprob: -19.250001907348633
    7. '_a' → logprob: -19.625001907348633
    8. 's' → logprob: -20.125001907348633
    9. '```' → logprob: -20.500001907348633
    10. 'b' → logprob: -20.875001907348633

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. 'i' → logprob: -12.875004768371582
    3. '[' → logprob: -13.875004768371582
    4. '(i' → logprob: -14.125004768371582
    5. '[
' → logprob: -16.125003814697266
    6. ')' → logprob: -17.125003814697266
    7. '[a' → logprob: -18.250003814697266
    8. '   ' → logprob: -18.625003814697266
    9. 'a' → logprob: -18.750003814697266
    10. '{i' → logprob: -18.750003814697266

Token 110: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001320000272244215
    2. ')%' → logprob: -7.251319885253906
    3. '%' → logprob: -7.626319885253906
    4. ' )' → logprob: -10.501319885253906
    5. '])' → logprob: -10.501319885253906
    6. ']' → logprob: -10.751319885253906
    7. '`)' → logprob: -10.876319885253906
    8. '   ' → logprob: -12.001319885253906
    9. '```' → logprob: -12.126319885253906
    10. '')' → logprob: -12.251319885253906

Token 111: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.005973946303129196
    2. ' %' → logprob: -5.130973815917969
    3. '%i' → logprob: -11.380973815917969
    4. '   ' → logprob: -11.755973815917969
    5. '%n' → logprob: -11.880973815917969
    6. ')' → logprob: -12.380973815917969
    7. ')%' → logprob: -12.880973815917969
    8. ' ' → logprob: -12.880973815917969
    9. '```' → logprob: -13.130973815917969
    10. '	' → logprob: -13.130973815917969

Token 112: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005539863486774266
    2. ' mod' → logprob: -7.500554084777832
    3. '(mod' → logprob: -13.875554084777832
    4. '	mod' → logprob: -18.750553131103516
    5. ' ' → logprob: -21.125553131103516
    6. ' мод' → logprob: -21.125553131103516
    7. '_mod' → logprob: -22.125553131103516
    8. '```' → logprob: -22.250553131103516
    9. '.mod' → logprob: -22.875553131103516
    10. 'MOD' → logprob: -23.000553131103516

Token 113: '
' (ID: 198)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.021798662841320038
    2. '
' → logprob: -4.271798610687256
    3. 'for' → logprob: -5.271798610687256
    4. '\n' → logprob: -7.521798610687256
    5. '```' → logprob: -7.521798610687256
    6. '  
' → logprob: -8.146799087524414
    7. ' ret' → logprob: -8.146799087524414
    8. 'b' → logprob: -8.521799087524414
    9. ' 
' → logprob: -9.271799087524414
    10. '    
' → logprob: -9.396799087524414

Token 114: 'ret' (ID: 3431)
  Prédit: 'ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -2.176947600673884e-05
    2. '
' → logprob: -11.625021934509277
    3. ' ret' → logprob: -12.250021934509277
    4. '```' → logprob: -13.000021934509277
    5. '  
' → logprob: -13.500021934509277
    6. '' → logprob: -13.750021934509277
    7. 'return' → logprob: -14.250021934509277
    8. ' 
' → logprob: -14.625021934509277
    9. '    
' → logprob: -14.750021934509277
    10. 'for' → logprob: -15.500021934509277

Token 115: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.032352179288864136
    2. '_b' → logprob: -3.5323522090911865
    3. '_' → logprob: -6.032351970672607
    4. '_s' → logprob: -10.282352447509766
    5. ' _' → logprob: -10.282352447509766
    6. '_c' → logprob: -10.282352447509766
    7. 'a' → logprob: -10.532352447509766
    8. '<|end|>' → logprob: -11.032352447509766
    9. '```' → logprob: -12.407352447509766
    10. ' ' → logprob: -12.407352447509766

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17988693714141846
    2. '=' → logprob: -1.8048869371414185
    3. ' ' → logprob: -8.929886817932129
    4. '_' → logprob: -12.554886817932129
    5. ' =)' → logprob: -14.054886817932129
    6. '_=' → logprob: -14.304886817932129
    7. ' _' → logprob: -14.429886817932129
    8. ')' → logprob: -14.679886817932129
    9. '<|end|>' → logprob: -14.679886817932129
    10. ' =
' → logprob: -14.804886817932129

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '(' → logprob: -16.250911712646484
    4. '   ' → logprob: -18.500911712646484
    5. '```' → logprob: -19.000911712646484
    6. '`' → logprob: -19.500911712646484
    7. 'ret' → logprob: -20.125911712646484
    8. ' (' → logprob: -20.375911712646484
    9. '１' → logprob: -20.875911712646484
    10. '  ' → logprob: -21.000911712646484

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -20.25
    4. '```' → logprob: -21.5
    5. '   ' → logprob: -21.875
    6. '`' → logprob: -22.875
    7. 'ret' → logprob: -23.0
    8. '１' → logprob: -23.75
    9. '  ' → logprob: -23.875
    10. '۱' → logprob: -24.25

Token 119: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036592145916074514
    2. ' for' → logprob: -5.628659248352051
    3. '<|end|>' → logprob: -10.25365924835205
    4. '
' → logprob: -10.87865924835205
    5. '```' → logprob: -13.12865924835205
    6. 'For' → logprob: -13.75365924835205
    7. '	for' → logprob: -15.25365924835205
    8. ' ' → logprob: -15.50365924835205
    9. '[' → logprob: -15.75365924835205
    10. '_for' → logprob: -15.75365924835205

Token 120: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.107425062713446e-06
    2. ' for' → logprob: -11.875006675720215
    3. '```' → logprob: -17.12500762939453
    4. 'For' → logprob: -18.75000762939453
    5. '	for' → logprob: -19.62500762939453
    6. '
' → logprob: -20.12500762939453
    7. '_for' → logprob: -21.75000762939453
    8. ' ' → logprob: -22.12500762939453
    9. 'from' → logprob: -22.12500762939453
    10. '(for' → logprob: -22.50000762939453

Token 121: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08004949986934662
    2. ' i' → logprob: -2.580049514770508
    3. ' in' → logprob: -7.080049514770508
    4. '(i' → logprob: -8.580049514770508
    5. 'in' → logprob: -9.330049514770508
    6. 'range' → logprob: -10.580049514770508
    7. ' range' → logprob: -11.955049514770508
    8. '(' → logprob: -12.955049514770508
    9. '<|end|>' → logprob: -13.330049514770508
    10. '(range' → logprob: -14.080049514770508

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869127333164215
    2. 'in' → logprob: -1.1369127035140991
    3. '(' → logprob: -10.88691234588623
    4. '1' → logprob: -11.76191234588623
    5. ' ' → logprob: -11.76191234588623
    6. '<|end|>' → logprob: -12.26191234588623
    7. 'range' → logprob: -14.26191234588623
    8. '	in' → logprob: -14.38691234588623
    9. '```' → logprob: -15.26191234588623
    10. 'In' → logprob: -15.51191234588623

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2103012204170227
    2. '(' → logprob: -1.710301160812378
    3. ' range' → logprob: -4.960301399230957
    4. '(range' → logprob: -6.335301399230957
    5. '1' → logprob: -9.710301399230957
    6. '	range' → logprob: -12.960301399230957
    7. '<|end|>' → logprob: -13.835301399230957
    8. '.range' → logprob: -14.835301399230957
    9. '_range' → logprob: -15.210301399230957
    10. 'in' → logprob: -15.710301399230957

Token 124: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1637164789135568e-05
    2. '1' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -16.875011444091797
    4. ' (' → logprob: -18.500011444091797
    5. 'range' → logprob: -19.125011444091797
    6. '```' → logprob: -19.125011444091797
    7. 'def' → logprob: -19.125011444091797
    8. '(
' → logprob: -20.125011444091797
    9. '<|end|>' → logprob: -20.875011444091797
    10. 'from' → logprob: -20.875011444091797

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. '(' → logprob: -9.625066757202148
    3. ' ' → logprob: -15.375066757202148
    4. '<|end|>' → logprob: -18.00006675720215
    5. 'range' → logprob: -18.37506675720215
    6. '   ' → logprob: -19.62506675720215
    7. 'b' → logprob: -20.50006675720215
    8. '[' → logprob: -20.50006675720215
    9. '```' → logprob: -20.50006675720215
    10. '{' → logprob: -20.62506675720215

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004985823179595172
    2. ',b' → logprob: -7.6254987716674805
    3. ' ,' → logprob: -12.25049877166748
    4. 'b' → logprob: -12.25049877166748
    5. ',
' → logprob: -14.37549877166748
    6. 'a' → logprob: -15.25049877166748
    7. '```' → logprob: -16.875497817993164
    8. '(b' → logprob: -17.375497817993164
    9. ' b' → logprob: -17.500497817993164
    10. ',a' → logprob: -17.625497817993164

Token 127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009117019944824278
    2. ' b' → logprob: -7.000911712646484
    3. '```' → logprob: -16.625911712646484
    4. '<|end|>' → logprob: -16.750911712646484
    5. '   ' → logprob: -17.875911712646484
    6. '(b' → logprob: -17.875911712646484
    7. '	b' → logprob: -18.625911712646484
    8. ')b' → logprob: -18.625911712646484
    9. ' ' → logprob: -19.875911712646484
    10. ' (' → logprob: -20.625911712646484

Token 128: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759404897689819
    2. '+' → logprob: -0.8259404897689819
    3. '＋' → logprob: -14.575940132141113
    4. ' +
' → logprob: -15.825940132141113
    5. '+
' → logprob: -15.950940132141113
    6. '<|end|>' → logprob: -16.32594108581543
    7. '1' → logprob: -16.95094108581543
    8. '()+' → logprob: -17.20094108581543
    9. '```' → logprob: -17.20094108581543
    10. ' ' → logprob: -17.32594108581543

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.875431060791016
    3. '+' → logprob: -10.000431060791016
    4. ' +' → logprob: -12.875431060791016
    5. 'b' → logprob: -13.625431060791016
    6. '```' → logprob: -13.750431060791016
    7. 'i' → logprob: -14.750431060791016
    8. ')' → logprob: -15.875431060791016
    9. ' ' → logprob: -15.875431060791016
    10. '   ' → logprob: -16.250431060791016

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. '+' → logprob: -11.250020980834961
    3. 'i' → logprob: -12.125020980834961
    4. ' ' → logprob: -13.375020980834961
    5. '```' → logprob: -14.500020980834961
    6. 'b' → logprob: -14.875020980834961
    7. ' +' → logprob: -15.250020980834961
    8. ' i' → logprob: -17.75002098083496
    9. ')' → logprob: -18.00002098083496
    10. '   ' → logprob: -19.00002098083496

Token 131: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20036740601062775
    2. '):' → logprob: -2.4503674507141113
    3. ':' → logprob: -2.7003674507141113
    4. ':
' → logprob: -3.5753674507141113
    5. '   ' → logprob: -9.950366973876953
    6. '):
' → logprob: -10.075366973876953
    7. '():
' → logprob: -10.950366973876953
    8. ')' → logprob: -12.075366973876953
    9. '):

' → logprob: -13.075366973876953
    10. '```' → logprob: -13.075366973876953

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011903452686965466
    2. ' ret' → logprob: -7.376190185546875
    3. 'ret' → logprob: -7.626190185546875
    4. '	ret' → logprob: -9.626190185546875
    5. '```' → logprob: -12.251190185546875
    6. '(ret' → logprob: -12.376190185546875
    7. '  ' → logprob: -14.876190185546875
    8. ' ' → logprob: -15.501190185546875
    9. '_ret' → logprob: -15.876190185546875
    10. '    
' → logprob: -16.251190185546875

Token 133: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.00020509003661572933
    2. ' ret' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.500205039978027
    4. '(ret' → logprob: -16.125205993652344
    5. '```' → logprob: -16.250205993652344
    6. '	ret' → logprob: -18.125205993652344
    7. '_ret' → logprob: -19.875205993652344
    8. '$ret' → logprob: -20.125205993652344
    9. 'rets' → logprob: -20.250205993652344
    10. ' ' → logprob: -20.875205993652344

Token 134: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.919942486798391e-05
    2. '_a' → logprob: -9.750059127807617
    3. '_' → logprob: -14.625059127807617
    4. '```' → logprob: -15.750059127807617
    5. ' _' → logprob: -16.125059127807617
    6. 'b' → logprob: -17.000059127807617
    7. 'a' → logprob: -17.875059127807617
    8. '_i' → logprob: -18.250059127807617
    9. '}_' → logprob: -18.500059127807617
    10. '_s' → logprob: -18.625059127807617

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196802109479904
    2. ' =' → logprob: -2.8119680881500244
    3. '+=' → logprob: -15.436967849731445
    4. '*=' → logprob: -16.936967849731445
    5. '=(' → logprob: -17.186967849731445
    6. '   ' → logprob: -17.311967849731445
    7. ')' → logprob: -17.686967849731445
    8. '(' → logprob: -17.811967849731445
    9. ' ' → logprob: -17.811967849731445
    10. ' +=' → logprob: -17.936967849731445

Token 136: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.582173228263855
    2. '(ret' → logprob: -0.832173228263855
    3. '(' → logprob: -5.0821733474731445
    4. ' ' → logprob: -13.957173347473145
    5. ' ' → logprob: -14.082173347473145
    6. '(rest' → logprob: -14.207173347473145
    7. '(
' → logprob: -14.207173347473145
    8. '(return' → logprob: -14.332173347473145
    9. '(r' → logprob: -14.582173347473145
    10. '   ' → logprob: -14.832173347473145

Token 137: 'ret' (ID: 3431)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.014168446883559227
    2. 'ret' → logprob: -4.2641682624816895
    3. ' ret' → logprob: -12.639168739318848
    4. '$ret' → logprob: -14.014168739318848
    5. ' (' → logprob: -14.639168739318848
    6. '	ret' → logprob: -15.389168739318848
    7. '(' → logprob: -15.639168739318848
    8. ')' → logprob: -17.51416778564453
    9. '   ' → logprob: -18.76416778564453
    10. '_ret' → logprob: -18.88916778564453

Token 138: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002560945285949856
    2. '_a' → logprob: -9.000256538391113
    3. '(' → logprob: -10.250256538391113
    4. 'b' → logprob: -10.500256538391113
    5. '*' → logprob: -10.500256538391113
    6. '(_' → logprob: -10.750256538391113
    7. '*_' → logprob: -12.000256538391113
    8. '(i' → logprob: -12.750256538391113
    9. '_' → logprob: -13.625256538391113
    10. '```' → logprob: -13.625256538391113

Token 139: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11286330223083496
    2. '*' → logprob: -2.237863302230835
    3. ')' → logprob: -10.362863540649414
    4. ' ' → logprob: -12.237863540649414
    5. ' ' → logprob: -13.362863540649414
    6. '*(' → logprob: -13.737863540649414
    7. '(' → logprob: -14.612863540649414
    8. '...' → logprob: -14.987863540649414
    9. '**' → logprob: -15.612863540649414
    10. '=' → logprob: -15.612863540649414

Token 140: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03378193452954292
    2. ' (' → logprob: -3.4087820053100586
    3. '(' → logprob: -8.908782005310059
    4. ')' → logprob: -14.783782005310059
    5. '
' → logprob: -16.283781051635742
    6. '((' → logprob: -17.033781051635742
    7. '(s' → logprob: -17.283781051635742
    8. '`' → logprob: -17.283781051635742
    9. '(nn' → logprob: -17.283781051635742
    10. ' ' → logprob: -17.533781051635742

Token 141: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31334125995635986
    2. 'n' → logprob: -1.3133412599563599
    3. ' (' → logprob: -9.93834114074707
    4. ' n' → logprob: -11.06334114074707
    5. '
' → logprob: -11.56334114074707
    6. '[n' → logprob: -13.81334114074707
    7. ')n' → logprob: -13.81334114074707
    8. '(' → logprob: -13.93834114074707
    9. '   ' → logprob: -14.56334114074707
    10. '(
' → logprob: -14.68834114074707

Token 142: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.474087655544281
    2. '-' → logprob: -0.974087655544281
    3. ' ' → logprob: -11.849087715148926
    4. '-i' → logprob: -12.974087715148926
    5. '<|end|>' → logprob: -14.974087715148926
    6. '   ' → logprob: -15.099087715148926
    7. ' ' → logprob: -15.474087715148926
    8. '  ' → logprob: -15.724087715148926
    9. '−' → logprob: -17.22408676147461
    10. '-
' → logprob: -17.34908676147461

Token 143: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007101670489646494
    2. ' i' → logprob: -7.2507100105285645
    3. '	i' → logprob: -16.500709533691406
    4. '   ' → logprob: -16.750709533691406
    5. '*i' → logprob: -17.375709533691406
    6. '(i' → logprob: -17.875709533691406
    7. '[i' → logprob: -18.000709533691406
    8. '<|end|>' → logprob: -18.125709533691406
    9. '
' → logprob: -18.625709533691406
    10. ' ' → logprob: -18.625709533691406

Token 144: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804241120815277
    2. ' +' → logprob: -3.2880423069000244
    3. '1' → logprob: -15.663042068481445
    4. '<|end|>' → logprob: -15.663042068481445
    5. '+)' → logprob: -15.913042068481445
    6. ' ' → logprob: -16.288042068481445
    7. '   ' → logprob: -16.538042068481445
    8. '+
' → logprob: -16.663042068481445
    9. '＋' → logprob: -16.788042068481445
    10. '0' → logprob: -17.163042068481445

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '+' → logprob: -15.000015258789062
    4. '   ' → logprob: -16.250015258789062
    5. '<|end|>' → logprob: -17.875015258789062
    6. ' +' → logprob: -18.125015258789062
    7. '```' → logprob: -18.625015258789062
    8. '  ' → logprob: -19.250015258789062
    9. '...' → logprob: -19.875015258789062
    10. ')' → logprob: -20.500015258789062

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '+' → logprob: -14.625001907348633
    4. '   ' → logprob: -18.125001907348633
    5. ' +' → logprob: -19.125001907348633
    6. '<|end|>' → logprob: -19.500001907348633
    7. '```' → logprob: -20.625001907348633
    8. '  ' → logprob: -21.500001907348633
    9. '0' → logprob: -21.875001907348633
    10. ')' → logprob: -22.000001907348633

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. '*' → logprob: -12.375006675720215
    3. ')*' → logprob: -13.750006675720215
    4. '   ' → logprob: -14.500006675720215
    5. ' )' → logprob: -15.000006675720215
    6. ' ' → logprob: -15.875006675720215
    7. ')
' → logprob: -17.3750057220459
    8. ' *' → logprob: -18.0000057220459
    9. ')`' → logprob: -18.3750057220459
    10. '*)' → logprob: -18.5000057220459

Token 148: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07552985101938248
    2. ' *' → logprob: -2.7005298137664795
    3. ')' → logprob: -5.200530052185059
    4. '   ' → logprob: -10.075530052185059
    5. ' ' → logprob: -11.825530052185059
    6. ')*' → logprob: -11.825530052185059
    7. ' ' → logprob: -12.325530052185059
    8. '*)' → logprob: -14.450530052185059
    9. '  ' → logprob: -14.450530052185059
    10. '`' → logprob: -14.575530052185059

Token 149: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.004080658778548241
    2. ' inv' → logprob: -5.504080772399902
    3. '(inv' → logprob: -13.004080772399902
    4. '.inv' → logprob: -18.004079818725586
    5. '   ' → logprob: -18.504079818725586
    6. '_inv' → logprob: -18.629079818725586
    7. '
' → logprob: -18.754079818725586
    8. 'inverse' → logprob: -19.254079818725586
    9. ' ' → logprob: -19.379079818725586
    10. ' ' → logprob: -21.004079818725586

Token 150: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.1008713702030946e-06
    2. 't' → logprob: -13.375001907348633
    3. '_b' → logprob: -15.375001907348633
    4. 'b' → logprob: -16.125001907348633
    5. '[i' → logprob: -16.750001907348633
    6. '[' → logprob: -17.000001907348633
    7. 'T' → logprob: -17.125001907348633
    8. '[t' → logprob: -18.000001907348633
    9. 'inv' → logprob: -18.125001907348633
    10. '\' → logprob: -18.625001907348633

Token 151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. '[b' → logprob: -15.875000953674316
    4. 'i' → logprob: -16.0
    5. '[
' → logprob: -17.5
    6. '```' → logprob: -17.75
    7. 'b' → logprob: -18.0
    8. '(i' → logprob: -19.125
    9. '
' → logprob: -19.75
    10. '[I' → logprob: -19.75

Token 152: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')%' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.125001907348633
    4. '`)' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '%)' → logprob: -17.875001907348633
    7. ')
' → logprob: -18.000001907348633
    8. '）' → logprob: -18.375001907348633
    9. '%' → logprob: -18.875001907348633
    10. '))' → logprob: -19.125001907348633

Token 153: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.016202930361032486
    2. ' %' → logprob: -4.141202926635742
    3. ')' → logprob: -9.641202926635742
    4. '```' → logprob: -10.141202926635742
    5. ')%' → logprob: -10.766202926635742
    6. '
' → logprob: -11.016202926635742
    7. '`' → logprob: -11.266202926635742
    8. ' ' → logprob: -12.516202926635742
    9. ' ' → logprob: -12.766202926635742
    10. '%
' → logprob: -13.391202926635742

Token 154: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3306015716807451e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -15.62501335144043
    4. '```' → logprob: -17.75001335144043
    5. '	mod' → logprob: -18.87501335144043
    6. 'modal' → logprob: -21.12501335144043
    7. '`' → logprob: -21.37501335144043
    8. '``' → logprob: -22.87501335144043
    9. ' мод' → logprob: -23.00001335144043
    10. '_mod' → logprob: -23.00001335144043

Token 155: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0055406163446605206
    2. 'result' → logprob: -5.38054084777832
    3. 'ret' → logprob: -7.50554084777832
    4. 'ans' → logprob: -8.38054084777832
    5. 'answer' → logprob: -9.63054084777832
    6. 'if' → logprob: -10.50554084777832
    7. '+' → logprob: -10.63054084777832
    8. 'res' → logprob: -11.63054084777832
    9. 'output' → logprob: -12.13054084777832
    10. '```' → logprob: -13.13054084777832

Token 156: 'x' (ID: 87)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006996880983933806
    2. 'result' → logprob: -7.375699520111084
    3. 'ans' → logprob: -10.750699996948242
    4. 'ret' → logprob: -10.750699996948242
    5. 'if' → logprob: -11.250699996948242
    6. 'answer' → logprob: -11.625699996948242
    7. 'return' → logprob: -13.250699996948242
    8. '+' → logprob: -13.375699996948242
    9. '```' → logprob: -13.750699996948242
    10. 'res' → logprob: -13.875699996948242

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07349341362714767
    2. ' =' → logprob: -2.698493480682373
    3. '_' → logprob: -5.823493480682373
    4. ',' → logprob: -8.698493003845215
    5. 'or' → logprob: -9.323493003845215
    6. 'r' → logprob: -9.823493003845215
    7. '=max' → logprob: -10.073493003845215
    8. 'print' → logprob: -10.198493003845215
    9. '_=' → logprob: -10.198493003845215
    10. '=a' → logprob: -10.323493003845215

Token 158: ' ' (ID: 220)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.07785534113645554
    2. '(n' → logprob: -3.952855348587036
    3. 'ret' → logprob: -4.327855110168457
    4. '((' → logprob: -4.577855110168457
    5. '(a' → logprob: -4.702855110168457
    6. '(' → logprob: -5.202855110168457
    7. '(abs' → logprob: -5.327855110168457
    8. ' (' → logprob: -5.577855110168457
    9. '(mod' → logprob: -6.452855110168457
    10. '(max' → logprob: -6.827855110168457

Token 159: '2' (ID: 17)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.0794205367565155
    2. '((' → logprob: -4.079420566558838
    3. '(a' → logprob: -4.079420566558838
    4. '(n' → logprob: -4.079420566558838
    5. 'ret' → logprob: -4.454420566558838
    6. '(abs' → logprob: -5.329420566558838
    7. 'a' → logprob: -6.079420566558838
    8. '(' → logprob: -6.579420566558838
    9. 'n' → logprob: -6.704420566558838
    10. 'abs' → logprob: -7.204420566558838

Token 160: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5346651673316956
    2. '*' → logprob: -1.2846651077270508
    3. ' *' → logprob: -2.409665107727051
    4. ' **' → logprob: -3.159665107727051
    5. '*x' → logprob: -6.159665107727051
    6. '+' → logprob: -7.284665107727051
    7. ' +' → logprob: -7.409665107727051
    8. '*a' → logprob: -8.40966510772705
    9. '*
' → logprob: -8.65966510772705
    10. '0' → logprob: -8.65966510772705

Token 161: 'k' (ID: 74)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09904357045888901
    2. '**' → logprob: -2.599043607711792
    3. 'if' → logprob: -5.099043369293213
    4. 'for' → logprob: -5.349043369293213
    5. 'while' → logprob: -5.724043369293213
    6. '+' → logprob: -6.224043369293213
    7. ' *' → logprob: -7.349043369293213
    8. '*(' → logprob: -7.599043369293213
    9. ',' → logprob: -7.724043369293213
    10. '*
' → logprob: -7.974043369293213

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4300996661186218
    2. ' =' → logprob: -1.0550997257232666
    3. ',' → logprob: -6.8050994873046875
    4. '=int' → logprob: -8.430099487304688
    5. '=input' → logprob: -11.555099487304688
    6. ' ' → logprob: -11.680099487304688
    7. 'for' → logprob: -11.930099487304688
    8. '=n' → logprob: -12.180099487304688
    9. '=k' → logprob: -12.180099487304688
    10. 'x' → logprob: -12.305099487304688

Token 163: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8018409609794617
    2. 'n' → logprob: -1.5518410205841064
    3. '(a' → logprob: -2.1768410205841064
    4. '(x' → logprob: -3.0518410205841064
    5. 'int' → logprob: -3.0518410205841064
    6. 'a' → logprob: -3.5518410205841064
    7. 'x' → logprob: -3.8018410205841064
    8. '0' → logprob: -4.051840782165527
    9. '1' → logprob: -4.176840782165527
    10. 'min' → logprob: -4.926840782165527

Token 164: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.044664166867733
    2. '+' → logprob: -4.54466438293457
    3. 'while' → logprob: -4.66966438293457
    4. ',' → logprob: -5.54466438293457
    5. 'for' → logprob: -5.54466438293457
    6. 'x' → logprob: -5.91966438293457
    7. '=' → logprob: -6.04466438293457
    8. '%' → logprob: -6.16966438293457
    9. ' -' → logprob: -6.16966438293457
    10. 'if' → logprob: -6.29466438293457

Token 165: 'res' (ID: 430)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.44460970163345337
    2. 'for' → logprob: -1.6946096420288086
    3. 'if' → logprob: -2.1946096420288086
    4. '-' → logprob: -3.8196096420288086
    5. 'result' → logprob: -4.194609642028809
    6. 'ans' → logprob: -4.319609642028809
    7. 'pow' → logprob: -5.819609642028809
    8. '**' → logprob: -6.694609642028809
    9. '+' → logprob: -6.694609642028809
    10. 'f' → logprob: -6.944609642028809

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326597929000854
    2. ' =' → logprob: -1.3132660388946533
    3. ',' → logprob: -13.438265800476074
    4. '=
' → logprob: -14.813265800476074
    5. '=

' → logprob: -14.813265800476074
    6. 's' → logprob: -15.063265800476074
    7. '＝' → logprob: -15.063265800476074
    8. ' =
' → logprob: -15.063265800476074
    9. ' ' → logprob: -15.438265800476074
    10. 'x' → logprob: -16.06326675415039

Token 167: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7166938185691833
    2. '0' → logprob: -1.9666938781738281
    3. '1' → logprob: -2.216693878173828
    4. '(ret' → logprob: -2.341693878173828
    5. ' ' → logprob: -3.216693878173828
    6. '(' → logprob: -3.216693878173828
    7. '(x' → logprob: -3.341693878173828
    8. '((' → logprob: -4.341693878173828
    9. '(k' → logprob: -4.716693878173828
    10. 'ret' → logprob: -4.966693878173828

Token 168: '1' (ID: 16)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.686944842338562
    2. '(' → logprob: -1.561944842338562
    3. '0' → logprob: -2.0619449615478516
    4. '1' → logprob: -2.5619449615478516
    5. '((' → logprob: -3.6869449615478516
    6. '(x' → logprob: -3.8119449615478516
    7. 'ret' → logprob: -4.561944961547852
    8. '(pow' → logprob: -5.061944961547852
    9. '(k' → logprob: -5.186944961547852
    10. 'pow' → logprob: -5.311944961547852

Token 169: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5304161310195923
    2. 'while' → logprob: -0.9054161310195923
    3. '*' → logprob: -5.780416011810303
    4. ' while' → logprob: -6.780416011810303
    5. '+' → logprob: -7.405416011810303
    6. ')' → logprob: -7.655416011810303
    7. ' for' → logprob: -7.655416011810303
    8. 'x' → logprob: -7.905416011810303
    9. '<|end|>' → logprob: -8.030416488647461
    10. '
' → logprob: -8.280416488647461

Token 170: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12781096994876862
    2. 'while' → logprob: -2.1278109550476074
    3. '*' → logprob: -7.502810955047607
    4. ' for' → logprob: -9.377811431884766
    5. 'x' → logprob: -9.752811431884766
    6. ' while' → logprob: -10.002811431884766
    7. '+' → logprob: -10.127811431884766
    8. 'if' → logprob: -10.752811431884766
    9. ')' → logprob: -11.377811431884766
    10. 'range' → logprob: -11.752811431884766

Token 171: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3975428640842438
    2. ' k' → logprob: -1.1475428342819214
    3. 'x' → logprob: -5.022542953491211
    4. ' x' → logprob: -5.522542953491211
    5. '(k' → logprob: -11.522542953491211
    6. ' not' → logprob: -12.647542953491211
    7. ' n' → logprob: -12.647542953491211
    8. 'n' → logprob: -12.772542953491211
    9. ' res' → logprob: -13.022542953491211
    10. 'res' → logprob: -13.147542953491211

Token 172: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01053317729383707
    2. '>=' → logprob: -4.885533332824707
    3. ' >' → logprob: -6.135533332824707
    4. '>x' → logprob: -7.510533332824707
    5. '%' → logprob: -9.260533332824707
    6. ' >=' → logprob: -10.135533332824707
    7. 'and' → logprob: -10.760533332824707
    8. '&gt' → logprob: -10.760533332824707
    9. '[' → logprob: -12.010533332824707
    10. '//' → logprob: -12.510533332824707

Token 173: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006861601024866104
    2. ' ' → logprob: -5.006861686706543
    3. '1' → logprob: -8.881861686706543
    4. 'x' → logprob: -12.006861686706543
    5. ' x' → logprob: -15.131861686706543
    6. '2' → logprob: -15.381861686706543
    7. 'a' → logprob: -15.944361686706543
    8. '   ' → logprob: -16.006860733032227
    9. ' ' → logprob: -16.444360733032227
    10. '=' → logprob: -16.756860733032227

Token 174: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003299982286989689
    2. '1' → logprob: -5.753300189971924
    3. ' ' → logprob: -9.253299713134766
    4. 'x' → logprob: -10.753299713134766
    5. '2' → logprob: -12.878299713134766
    6. 'a' → logprob: -14.253299713134766
    7. 'b' → logprob: -15.003299713134766
    8. 'k' → logprob: -15.003299713134766
    9. '3' → logprob: -15.128299713134766
    10. '```' → logprob: -15.628299713134766

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42945146560668945
    2. ':
' → logprob: -1.0544514656066895
    3. ' and' → logprob: -7.3044514656066895
    4. '   ' → logprob: -10.054450988769531
    5. 'and' → logprob: -11.804450988769531
    6. '):
' → logprob: -11.929450988769531
    7. ':
' → logprob: -12.304450988769531
    8. ' :
' → logprob: -12.679450988769531
    9. ',' → logprob: -12.929450988769531
    10. ':

' → logprob: -13.054450988769531

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17483775317668915
    2. 'res' → logprob: -1.9248377084732056
    3. 'x' → logprob: -5.424837589263916
    4. 'if' → logprob: -5.424837589263916
    5. ' res' → logprob: -6.174837589263916
    6. ' if' → logprob: -6.674837589263916
    7. 'k' → logprob: -6.924837589263916
    8. '```' → logprob: -7.299837589263916
    9. '    
' → logprob: -8.299838066101074
    10. '	res' → logprob: -8.799838066101074

Token 177: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6298121213912964
    2. 'if' (adapté à ' if') → logprob: -1.2548121213912964
    3. '   ' → logprob: -2.379812240600586
    4. 'x' → logprob: -2.629812240600586
    5. 'k' → logprob: -4.379812240600586
    6. ' if' → logprob: -6.004812240600586
    7. ' res' → logprob: -6.629812240600586
    8. 'div' → logprob: -8.754812240600586
    9. 'factor' → logprob: -8.754812240600586
    10. 'q' → logprob: -8.879812240600586

Token 178: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009385223500430584
    2. 'x' → logprob: -5.009385108947754
    3. ' k' → logprob: -6.009385108947754
    4. 'res' → logprob: -9.259385108947754
    5. ' x' → logprob: -9.884385108947754
    6. 'n' → logprob: -10.134385108947754
    7. '(k' → logprob: -11.384385108947754
    8. 'b' → logprob: -12.509385108947754
    9. ' res' → logprob: -12.634385108947754
    10. 'a' → logprob: -14.009385108947754

Token 179: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12693923711776733
    2. ' %' → logprob: -2.126939296722412
    3. '%x' → logprob: -12.001938819885254
    4. ' ' → logprob: -13.876938819885254
    5. '%i' → logprob: -13.876938819885254
    6. '==' → logprob: -14.251938819885254
    7. '```' → logprob: -14.376938819885254
    8. '%=' → logprob: -14.751938819885254
    9. '[' → logprob: -15.001938819885254
    10. '&' → logprob: -15.251938819885254

Token 180: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023356353864073753
    2. '2' → logprob: -3.7733564376831055
    3. ' x' → logprob: -9.773356437683105
    4. ' ' → logprob: -10.648356437683105
    5. 'a' → logprob: -11.273356437683105
    6. '3' → logprob: -12.023356437683105
    7. '   ' → logprob: -12.273356437683105
    8. '4' → logprob: -13.273356437683105
    9. '```' → logprob: -13.898356437683105
    10. '10' → logprob: -14.648356437683105

Token 181: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.055027954280376434
    2. '2' → logprob: -2.930027961730957
    3. 'a' → logprob: -8.930027961730957
    4. ' x' → logprob: -12.555027961730957
    5. '3' → logprob: -13.055027961730957
    6. 'b' → logprob: -13.305027961730957
    7. '4' → logprob: -13.805027961730957
    8. ' ' → logprob: -14.305027961730957
    9. '   ' → logprob: -14.555027961730957
    10. '1' → logprob: -15.055027961730957

Token 182: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00908308383077383
    2. ' ==' → logprob: -4.759083271026611
    3. '=' → logprob: -7.759083271026611
    4. '0' → logprob: -10.634082794189453
    5. '!=' → logprob: -11.509082794189453
    6. '==
' → logprob: -12.759082794189453
    7. ':' → logprob: -13.259082794189453
    8. '===' → logprob: -13.759082794189453
    9. '1' → logprob: -14.134082794189453
    10. ' ' → logprob: -15.634082794189453

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005544631858356297
    2. ' ' → logprob: -7.50055456161499
    3. '=' → logprob: -13.750554084777832
    4. 'x' → logprob: -14.875554084777832
    5. '1' → logprob: -16.50055503845215
    6. ' x' → logprob: -16.87555503845215
    7. '2' → logprob: -18.50055503845215
    8. '۰' → logprob: -19.87555503845215
    9. ' ' → logprob: -20.00055503845215
    10. '   ' → logprob: -20.62555503845215

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. 'x' → logprob: -16.250139236450195
    4. '1' → logprob: -17.625139236450195
    5. '=' → logprob: -17.875139236450195
    6. '2' → logprob: -19.000139236450195
    7. ' x' → logprob: -19.500139236450195
    8. '۰' → logprob: -21.125139236450195
    9. '```' → logprob: -21.375139236450195
    10. '٠' → logprob: -22.000139236450195

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03371278569102287
    2. ':
' → logprob: -3.408712863922119
    3. ' :' → logprob: -10.533712387084961
    4. ' and' → logprob: -10.783712387084961
    5. ' :
' → logprob: -12.283712387084961
    6. ':

' → logprob: -12.408712387084961
    7. 'and' → logprob: -13.158712387084961
    8. '):
' → logprob: -13.283712387084961
    9. 'res' → logprob: -13.658712387084961
    10. ')' → logprob: -13.783712387084961

Token 186: '       ' (ID: 309)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5440394878387451
    2. '       ' → logprob: -1.2940394878387451
    3. 'res' → logprob: -2.169039487838745
    4. '   ' → logprob: -5.044039726257324
    5. ':
' → logprob: -5.169039726257324
    6. '
' → logprob: -5.169039726257324
    7. '```' → logprob: -5.294039726257324
    8. ':' → logprob: -5.544039726257324
    9. '        
' → logprob: -6.169039726257324
    10. '	res' → logprob: -7.794039726257324

Token 187: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00028052396373823285
    2. ' res' → logprob: -8.875280380249023
    3. '   ' → logprob: -9.000280380249023
    4. '       ' → logprob: -11.625280380249023
    5. '```' → logprob: -12.250280380249023
    6. 'x' → logprob: -13.625280380249023
    7. '
' → logprob: -14.000280380249023
    8. '	res' → logprob: -14.500280380249023
    9. '    
' → logprob: -14.750280380249023
    10. '           ' → logprob: -15.500280380249023

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05277790129184723
    2. ' =' → logprob: -3.0527780055999756
    3. '*=' → logprob: -5.5527777671813965
    4. ' *=' → logprob: -8.427778244018555
    5. '*' → logprob: -9.552778244018555
    6. '```' → logprob: -11.427778244018555
    7. '＝' → logprob: -13.802778244018555
    8. ' ' → logprob: -14.302778244018555
    9. ',' → logprob: -14.427778244018555
    10. ' ' → logprob: -14.677778244018555

Token 189: ' res' (ID: 694)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0016373354010283947
    2. ' (' → logprob: -6.5016374588012695
    3. 'res' → logprob: -9.00163745880127
    4. ' res' → logprob: -12.37663745880127
    5. '(ret' → logprob: -12.62663745880127
    6. '(' → logprob: -13.00163745880127
    7. '(result' → logprob: -14.50163745880127
    8. '   ' → logprob: -14.87663745880127
    9. '```' → logprob: -15.62663745880127
    10. '(ans' → logprob: -16.001636505126953

Token 190: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08895004540681839
    2. ' *' → logprob: -2.4639501571655273
    3. '*(' → logprob: -12.088950157165527
    4. '```' → logprob: -13.713950157165527
    5. ' ' → logprob: -14.088950157165527
    6. '**' → logprob: -14.213950157165527
    7. '*x' → logprob: -14.713950157165527
    8. ' ' → logprob: -14.838950157165527
    9. '*object' → logprob: -15.088950157165527
    10. '(res' → logprob: -15.088950157165527

Token 191: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00026741522015072405
    2. 'ret' → logprob: -8.625267028808594
    3. ' x' → logprob: -9.500267028808594
    4. 'a' → logprob: -12.000267028808594
    5. '   ' → logprob: -12.875267028808594
    6. '2' → logprob: -14.125267028808594
    7. 'n' → logprob: -14.375267028808594
    8. '
' → logprob: -14.750267028808594
    9. '  ' → logprob: -14.750267028808594
    10. ' ' → logprob: -14.875267028808594

Token 192: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16022484004497528
    2. '%' → logprob: -1.9102247953414917
    3. ')' → logprob: -15.410224914550781
    4. ' %=' → logprob: -15.660224914550781
    5. '```' → logprob: -16.16022491455078
    6. '%x' → logprob: -16.91022491455078
    7. '%n' → logprob: -17.03522491455078
    8. ' ' → logprob: -17.03522491455078
    9. ' ' → logprob: -17.66022491455078
    10. ')%' → logprob: -17.66022491455078

Token 193: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.306760805164231e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -18.75001335144043
    4. '```' → logprob: -21.37501335144043
    5. '	mod' → logprob: -22.00001335144043
    6. '10' → logprob: -22.75001335144043
    7. ' ' → logprob: -22.87501335144043
    8. '100' → logprob: -23.00001335144043
    9. '   ' → logprob: -24.12501335144043
    10. '7' → logprob: -24.25001335144043

Token 194: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10631562024354935
    2. '   ' → logprob: -3.3563156127929688
    3. ' 
' → logprob: -3.6063156127929688
    4. 'x' → logprob: -4.356315612792969
    5. ' ' → logprob: -4.856315612792969
    6. 'k' → logprob: -4.981315612792969
    7. ' k' → logprob: -5.231315612792969
    8. '    
' → logprob: -6.481315612792969
    9. ' x' → logprob: -6.606315612792969
    10. '  
' → logprob: -6.731315612792969

Token 195: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.24890124797821045
    2. ' k' → logprob: -1.9989012479782104
    3. 'x' → logprob: -2.9989013671875
    4. '   ' → logprob: -3.7489013671875
    5. ' x' → logprob: -4.7489013671875
    6. ' ' → logprob: -6.4989013671875
    7. '       ' → logprob: -7.3739013671875
    8. '```' → logprob: -7.9989013671875
    9. ',' → logprob: -9.4989013671875
    10. '
' → logprob: -9.7489013671875

Token 196: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0007499480270780623
    2. 'k' → logprob: -7.2507500648498535
    3. '```' → logprob: -10.375749588012695
    4. ' x' → logprob: -12.125749588012695
    5. '   ' → logprob: -13.000749588012695
    6. '``' → logprob: -14.000749588012695
    7. ' ' → logprob: -15.125749588012695
    8. '
' → logprob: -16.750749588012695
    9. 'res' → logprob: -16.875749588012695
    10. ' k' → logprob: -17.375749588012695

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.45848218582978e-06
    2. ' =' → logprob: -13.00000286102295
    3. '*=' → logprob: -16.250001907348633
    4. '＝' → logprob: -20.125001907348633
    5. '=

' → logprob: -20.625001907348633
    6. '.=' → logprob: -21.625001907348633
    7. '%=' → logprob: -22.125001907348633
    8. '=}' → logprob: -22.250001907348633
    9. '```' → logprob: -22.750001907348633
    10. ',' → logprob: -22.875001907348633

Token 198: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004509393125772476
    2. '(x' → logprob: -5.504509449005127
    3. ' x' → logprob: -7.754509449005127
    4. '(' → logprob: -13.754508972167969
    5. ' (' → logprob: -14.004508972167969
    6. '   ' → logprob: -15.879508972167969
    7. '	x' → logprob: -17.00450897216797
    8. '```' → logprob: -17.75450897216797
    9. ' ' → logprob: -18.25450897216797
    10. '_x' → logprob: -19.37950897216797

Token 199: ' *' (ID: 425)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.46822598576545715
    2. ' *' → logprob: -1.7182259559631348
    3. '*' → logprob: -1.9682259559631348
    4. '*x' → logprob: -3.0932259559631348
    5. ' x' → logprob: -4.718225955963135
    6. '(x' → logprob: -8.343226432800293
    7. ' ' → logprob: -9.718226432800293
    8. '**' → logprob: -9.718226432800293
    9. '2' → logprob: -9.843226432800293
    10. '   ' → logprob: -9.968226432800293

Token 200: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. ' x' → logprob: -13.250001907348633
    3. '	x' → logprob: -20.625001907348633
    4. '2' → logprob: -21.625001907348633
    5. ' ' → logprob: -21.875001907348633
    6. '   ' → logprob: -23.500001907348633
    7. '$x' → logprob: -24.000001907348633
    8. '"x' → logprob: -24.250001907348633
    9. '_x' → logprob: -24.625001907348633
    10. '10' → logprob: -25.000001907348633

Token 201: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.40300360321998596
    2. '%' → logprob: -1.1530035734176636
    3. ' mod' → logprob: -5.028003692626953
    4. 'mod' → logprob: -5.153003692626953
    5. ' k' → logprob: -5.903003692626953
    6. 'k' → logprob: -7.903003692626953
    7. ' x' → logprob: -8.403003692626953
    8. ' ' → logprob: -9.028003692626953
    9. 'x' → logprob: -9.653003692626953
    10. '```' → logprob: -9.653003692626953

Token 202: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.676292231422849e-05
    2. ' mod' → logprob: -11.000017166137695
    3. '(mod' → logprob: -17.875017166137695
    4. '	mod' → logprob: -19.125017166137695
    5. '```' → logprob: -19.500017166137695
    6. ' ' → logprob: -21.875017166137695
    7. '`' → logprob: -22.625017166137695
    8. '
' → logprob: -23.250017166137695
    9. ' ' → logprob: -23.375017166137695
    10. 'moder' → logprob: -23.750017166137695

Token 203: '
' (ID: 198)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.8789383830153383e-05
    2. ' k' → logprob: -11.125019073486328
    3. '   ' → logprob: -12.750019073486328
    4. '```' → logprob: -14.250019073486328
    5. '
' → logprob: -15.250019073486328
    6. ' ' → logprob: -16.500019073486328
    7. '	k' → logprob: -16.750019073486328
    8. '``' → logprob: -17.125019073486328
    9. '[k' → logprob: -17.375019073486328
    10. ',k' → logprob: -17.375019073486328

Token 204: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009568398236297071
    2. ' k' → logprob: -7.625957012176514
    3. '   ' → logprob: -7.750957012176514
    4. '```' → logprob: -10.250956535339355
    5. '``' → logprob: -13.750956535339355
    6. '	k' → logprob: -13.750956535339355
    7. ' ' → logprob: -14.500956535339355
    8. '
' → logprob: -16.500957489013672
    9. '[k' → logprob: -16.500957489013672
    10. '[' → logprob: -16.500957489013672

Token 205: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -5.5577775128767826e-06
    2. ' k' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.3750057220459
    4. '	k' → logprob: -19.0000057220459
    5. '```' → logprob: -20.2500057220459
    6. ' ' → logprob: -20.5000057220459
    7. '/k' → logprob: -21.2500057220459
    8. '{k' → logprob: -22.1250057220459
    9. 'kx' → logprob: -22.3750057220459
    10. '
' → logprob: -22.5000057220459

Token 206: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.0007314971298910677
    2. '=' → logprob: -7.625731468200684
    3. '//' → logprob: -8.500731468200684
    4. ' //' → logprob: -10.125731468200684
    5. '/=' → logprob: -17.250732421875
    6. '>>' → logprob: -17.500732421875
    7. ' =' → logprob: -18.000732421875
    8. '#' → logprob: -18.500732421875
    9. ' ' → logprob: -19.000732421875
    10. '//
' → logprob: -19.625732421875

Token 207: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.625000953674316
    3. '=_' → logprob: -15.125000953674316
    4. '_=' → logprob: -16.25
    5. '=}' → logprob: -16.625
    6. '=
' → logprob: -17.875
    7. '=.' → logprob: -18.375
    8. '=k' → logprob: -18.375
    9. '=

' → logprob: -18.5
    10. '>=' → logprob: -19.375

Token 208: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.250059127807617
    4. '```' → logprob: -18.250059127807617
    5. '<|end|>' → logprob: -20.000059127807617
    6. '>' → logprob: -20.000059127807617
    7. '1' → logprob: -21.250059127807617
    8. '  ' → logprob: -21.375059127807617
    9. '۲' → logprob: -21.375059127807617
    10. '２' → logprob: -21.625059127807617

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.250003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '>' → logprob: -20.375003814697266
    6. '۲' → logprob: -20.875003814697266
    7. '２' → logprob: -20.875003814697266
    8. '<|end|>' → logprob: -21.000003814697266
    9. '  ' → logprob: -21.312503814697266
    10. '२' → logprob: -22.312503814697266

Token 210: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0087516784551553e-05
    2. '
' → logprob: -12.62501049041748
    3. ' print' → logprob: -12.75001049041748
    4. 'return' → logprob: -14.12501049041748
    5. 'if' → logprob: -14.37501049041748
    6. 'res' → logprob: -14.37501049041748
    7. '<|end|>' → logprob: -14.62501049041748
    8. 'while' → logprob: -14.75001049041748
    9. '```' → logprob: -14.87501049041748
    10. '*' → logprob: -15.25001049041748

Token 211: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011832444579340518
    2. 'res' → logprob: -9.750118255615234
    3. 'if' → logprob: -11.125118255615234
    4. 'n' → logprob: -11.375118255615234
    5. 'result' → logprob: -12.000118255615234
    6. '```' → logprob: -12.250118255615234
    7. '*' → logprob: -12.500118255615234
    8. 'return' → logprob: -12.750118255615234
    9. 'pow' → logprob: -13.000118255615234
    10. '+' → logprob: -13.250118255615234

Token 212: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: ' res' (ID: 694)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.044172488152980804
    2. 'res' → logprob: -3.294172525405884
    3. '(ret' → logprob: -5.419172286987305
    4. ' res' → logprob: -7.294172286987305
    5. ' (' → logprob: -7.419172286987305
    6. 'ret' → logprob: -8.419172286987305
    7. '(' → logprob: -9.294172286987305
    8. '(rest' → logprob: -10.544172286987305
    9. '((' → logprob: -10.669172286987305
    10. ' ret' → logprob: -12.169172286987305

Token 214: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4757375121116638
    2. ' %' → logprob: -0.9757375121116638
    3. ' *' → logprob: -6.725737571716309
    4. '*' → logprob: -8.100737571716309
    5. ' ' → logprob: -10.350737571716309
    6. '<|end|>' → logprob: -10.600737571716309
    7. '%n' → logprob: -10.850737571716309
    8. '**' → logprob: -10.975737571716309
    9. '%x' → logprob: -11.100737571716309
    10. ',' → logprob: -11.725737571716309

Token 215: ' x' (ID: 1215)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.4171925485134125
    2. 'ret' → logprob: -1.1671925783157349
    3. '((' → logprob: -4.792192459106445
    4. '(n' → logprob: -4.917192459106445
    5. '(a' → logprob: -5.792192459106445
    6. '(' → logprob: -5.792192459106445
    7. '(inv' → logprob: -6.417192459106445
    8. 'pow' → logprob: -6.542192459106445
    9. '2' → logprob: -6.792192459106445
    10. '(pow' → logprob: -7.042192459106445

Token 216: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.048598501831293106
    2. ' %' → logprob: -3.048598527908325
    3. ')' → logprob: -13.173598289489746
    4. ')%' → logprob: -13.173598289489746
    5. '%x' → logprob: -13.298598289489746
    6. '```' → logprob: -13.423598289489746
    7. '%n' → logprob: -13.673598289489746
    8. ' %=' → logprob: -14.173598289489746
    9. 'res' → logprob: -14.298598289489746
    10. '%=' → logprob: -14.923598289489746

Token 217: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.432518421206623e-05
    2. ' mod' → logprob: -10.0000638961792
    3. 'k' → logprob: -11.2500638961792
    4. '2' → logprob: -12.3750638961792
    5. '(mod' → logprob: -13.6250638961792
    6. 'res' → logprob: -15.7500638961792
    7. 'n' → logprob: -17.125064849853516
    8. '```' → logprob: -17.125064849853516
    9. '3' → logprob: -17.250064849853516
    10. '7' → logprob: -17.375064849853516

Token 218: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00067966926144436
    2. 'if' → logprob: -7.6256794929504395
    3. '
' → logprob: -9.875679969787598
    4. ' print' → logprob: -10.000679969787598
    5. '<|end|>' → logprob: -10.750679969787598
    6. '#' → logprob: -10.875679969787598
    7. '+' → logprob: -11.000679969787598
    8. '```' → logprob: -11.625679969787598
    9. '%' → logprob: -12.375679969787598
    10. ')' → logprob: -12.500679969787598

Token 219: 'result' (ID: 2521)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6251502633094788
    2. '_' → logprob: -1.375150203704834
    3. '=' → logprob: -1.625150203704834
    4. 's' → logprob: -4.375150203704834
    5. '_s' → logprob: -7.000150203704834
    6. ' +=' → logprob: -7.250150203704834
    7. '_=' → logprob: -8.125150680541992
    8. ')' → logprob: -9.000150680541992
    9. '[' → logprob: -9.125150680541992
    10. ' ' → logprob: -9.500150680541992

Token 221: ' (' (ID: 350)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.16888511180877686
    2. '(res' → logprob: -2.5438852310180664
    3. ' (' → logprob: -2.7938852310180664
    4. 'ret' → logprob: -4.668885231018066
    5. ' ret' → logprob: -5.543885231018066
    6. 'res' → logprob: -6.918885231018066
    7. '((' → logprob: -7.168885231018066
    8. ' res' → logprob: -8.418885231018066
    9. '(' → logprob: -9.293885231018066
    10. '(rest' → logprob: -9.418885231018066

Token 222: 'res' (ID: 430)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.1835615336894989
    2. '(ret' → logprob: -2.1835615634918213
    3. 'res' → logprob: -3.0585615634918213
    4. '(res' → logprob: -5.308561325073242
    5. '(' → logprob: -6.808561325073242
    6. ' ret' → logprob: -7.183561325073242
    7. '((' → logprob: -7.558561325073242
    8. ' (' → logprob: -8.433561325073242
    9. '2' → logprob: -8.683561325073242
    10. '1' → logprob: -9.683561325073242

Token 223: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13171342015266418
    2. '-' → logprob: -3.006713390350342
    3. ' *' → logprob: -3.381713390350342
    4. '*' → logprob: -3.631713390350342
    5. '+' → logprob: -5.006713390350342
    6. ' +' → logprob: -5.006713390350342
    7. ')' → logprob: -9.3817138671875
    8. '%' → logprob: -11.8817138671875
    9. ' ' → logprob: -11.8817138671875
    10. ' ' → logprob: -12.3817138671875

Token 224: ' ' (ID: 220)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.7252975106239319
    2. '(ret' → logprob: -0.7252975106239319
    3. ' ret' → logprob: -4.225297451019287
    4. '1' → logprob: -4.850297451019287
    5. ' (' → logprob: -4.975297451019287
    6. '(' → logprob: -6.225297451019287
    7. '((' → logprob: -8.350297927856445
    8. ' ' → logprob: -11.475297927856445
    9. '(r' → logprob: -11.850297927856445
    10. '(rest' → logprob: -12.350297927856445

Token 225: '1' (ID: 16)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.21054093539714813
    2. '(ret' → logprob: -1.7105408906936646
    3. '1' → logprob: -4.835540771484375
    4. '(' → logprob: -7.210540771484375
    5. ' ret' → logprob: -8.210540771484375
    6. '((' → logprob: -9.710540771484375
    7. ' (' → logprob: -10.210540771484375
    8. '2' → logprob: -12.335540771484375
    9. '(r' → logprob: -12.335540771484375
    10. '(n' → logprob: -12.835540771484375

Token 226: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00107389607001096
    2. '+' → logprob: -8.001073837280273
    3. '*' → logprob: -8.626073837280273
    4. ' -' → logprob: -8.876073837280273
    5. ' +' → logprob: -9.001073837280273
    6. ' *' → logprob: -9.126073837280273
    7. ' )' → logprob: -9.376073837280273
    8. '-' → logprob: -9.751073837280273
    9. ')*' → logprob: -10.501073837280273
    10. ')%' → logprob: -11.501073837280273

Token 227: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.05213436484336853
    2. '(ret' → logprob: -3.3021342754364014
    3. ' ret' → logprob: -4.3021345138549805
    4. ' (' → logprob: -8.05213451385498
    5. '(' → logprob: -9.55213451385498
    6. '((' → logprob: -9.92713451385498
    7. '(a' → logprob: -12.92713451385498
    8. 'a' → logprob: -13.30213451385498
    9. 'rets' → logprob: -13.67713451385498
    10. 'rett' → logprob: -13.92713451385498

Token 228: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00010902655776590109
    2. '_b' → logprob: -9.12510871887207
    3. 'a' → logprob: -17.25010871887207
    4. '_' → logprob: -17.87510871887207
    5. ' _' → logprob: -19.37510871887207
    6. '_x' → logprob: -20.50010871887207
    7. '}_' → logprob: -20.62510871887207
    8. ''_' → logprob: -20.87510871887207
    9. '_c' → logprob: -21.00010871887207
    10. '_s' → logprob: -21.00010871887207

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20142649114131927
    2. '-' → logprob: -1.7014265060424805
    3. '*' → logprob: -12.07642650604248
    4. '+' → logprob: -12.82642650604248
    5. ' ' → logprob: -13.07642650604248
    6. ')' → logprob: -13.45142650604248
    7. ' *' → logprob: -14.20142650604248
    8. ' ' → logprob: -15.57642650604248
    9. ' +' → logprob: -15.95142650604248
    10. '  ' → logprob: -16.576425552368164

Token 230: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.005233763717114925
    2. ' ret' → logprob: -5.2552337646484375
    3. '(ret' → logprob: -17.880233764648438
    4. '	ret' → logprob: -18.380233764648438
    5. '$ret' → logprob: -19.255233764648438
    6. 'res' → logprob: -19.755233764648438
    7. '_ret' → logprob: -20.005233764648438
    8. ' ' → logprob: -20.005233764648438
    9. '   ' → logprob: -20.380233764648438
    10. '.ret' → logprob: -21.130233764648438

Token 231: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.320199877838604e-07
    2. '_a' → logprob: -15.0
    3. '_' → logprob: -17.625
    4. ' _' → logprob: -18.375
    5. 'b' → logprob: -19.5
    6. '_c' → logprob: -21.875
    7. '__' → logprob: -21.875
    8. '```' → logprob: -21.875
    9. ''_' → logprob: -21.875
    10. '}_' → logprob: -22.0

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002084277366520837
    2. '+' → logprob: -9.375208854675293
    3. ')%' → logprob: -9.375208854675293
    4. ' )' → logprob: -10.375208854675293
    5. ' +' → logprob: -12.000208854675293
    6. '%' → logprob: -14.125208854675293
    7. '）' → logprob: -15.125208854675293
    8. '```' → logprob: -15.875208854675293
    9. '`)' → logprob: -15.875208854675293
    10. ')
' → logprob: -16.875207901000977

Token 233: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4784574806690216
    2. '%' → logprob: -1.4784574508666992
    3. ' %' → logprob: -1.9784574508666992
    4. ')%' → logprob: -4.353457450866699
    5. '
' → logprob: -6.978457450866699
    6. ' )' → logprob: -9.8534574508667
    7. '```' → logprob: -9.9784574508667
    8. '+' → logprob: -10.2284574508667
    9. '%n' → logprob: -11.6034574508667
    10. ']' → logprob: -11.8534574508667

Token 234: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019288709154352546
    2. ' mod' → logprob: -6.251928806304932
    3. '(mod' → logprob: -15.37692928314209
    4. '	mod' → logprob: -19.501928329467773
    5. '```' → logprob: -21.751928329467773
    6. '10' → logprob: -22.251928329467773
    7. ' мод' → logprob: -22.626928329467773
    8. 'MOD' → logprob: -23.001928329467773
    9. ' ' → logprob: -23.251928329467773
    10. '100' → logprob: -23.501928329467773

Token 235: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.372294698550832e-06
    2. ' print' → logprob: -12.000009536743164
    3. '
' → logprob: -13.250009536743164
    4. '<|end|>' → logprob: -14.500009536743164
    5. '```' → logprob: -14.625009536743164
    6. ')' → logprob: -15.875009536743164
    7. '#print' → logprob: -16.000009536743164
    8. '#' → logprob: -17.000009536743164
    9. 'result' → logprob: -17.125009536743164
    10. '(print' → logprob: -17.125009536743164

Token 236: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.750000953674316
    3. ' print' → logprob: -16.0
    4. 'result' → logprob: -16.0
    5. '#print' → logprob: -19.125
    6. '#' → logprob: -19.75
    7. '<|end|>' → logprob: -19.75
    8. '``' → logprob: -20.875
    9. '\' → logprob: -21.875
    10. '
' → logprob: -22.0

Token 237: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005541055579669774
    2. 'result' → logprob: -7.500554084777832
    3. '(' → logprob: -13.750554084777832
    4. '((' → logprob: -18.37555503845215
    5. '=result' → logprob: -19.12555503845215
    6. ' (' → logprob: -19.25055503845215
    7. ' result' → logprob: -19.50055503845215
    8. '[result' → logprob: -19.62555503845215
    9. ',result' → logprob: -20.00055503845215
    10. '(res' → logprob: -20.37555503845215

Token 238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -13.625003814697266
    3. '())' → logprob: -13.875003814697266
    4. ')`' → logprob: -14.500003814697266
    5. '))' → logprob: -15.000003814697266
    6. '(' → logprob: -15.750003814697266
    7. ' )' → logprob: -16.125003814697266
    8. ')
' → logprob: -16.625003814697266
    9. '`)' → logprob: -16.875003814697266
    10. '）' → logprob: -18.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 236
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 207
Précision stricte (1ère position): 32.63%
Précision adaptée (1ère position): 34.32%
Précision (top 10): 87.71%
================================================================================
