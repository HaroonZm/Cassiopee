================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Version non-conventionnelle
N = int(input())

found = False
stuff = list(range(N,1000))[::-1][::-1]
zzz = (lambda x:all(y==x[0] for y in x))

while not found:
    for thing in stuff:
        s = '{}'.format(thing)
        if zzz(s):
            OhMyGodISwear = thing
            found = True
            break

class Output:
    def magic(self): return OhMyGodISwear

printer = Output()

print(printer.magic())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Version' (ID: 10004)
  → Token d'amorce (pas de prédiction)

Token 2: ' non' (ID: 2893)
  → Token d'amorce (pas de prédiction)

Token 3: '-con' (ID: 21675)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.44228190183639526
    2. '_' → logprob: -1.31728196144104
    3. '=' → logprob: -3.06728196144104
    4. ' =' → logprob: -4.567281723022461
    5. '-' → logprob: -5.192281723022461
    6. 'a' → logprob: -5.317281723022461
    7. '#' → logprob: -5.567281723022461
    8. 's' → logprob: -5.567281723022461
    9. ' ' → logprob: -6.442281723022461
    10. 'r' → logprob: -6.442281723022461

Token 4: 'vention' (ID: 9584)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4813084006309509
    2. 'd' → logprob: -1.3563084602355957
    3. 't' → logprob: -3.4813084602355957
    4. 'nect' → logprob: -3.7313084602355957
    5. '```' → logprob: -4.356308460235596
    6. 'nection' → logprob: -4.606308460235596
    7. 'n' → logprob: -4.731308460235596
    8. 's' → logprob: -5.106308460235596
    9. '#' → logprob: -5.231308460235596
    10. 'strained' → logprob: -5.481308460235596

Token 5: 'nelle' (ID: 30805)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46324899792671204
    2. ':' → logprob: -1.5882489681243896
    3. '#' → logprob: -2.2132489681243896
    4. '=' → logprob: -3.5882489681243896
    5. '```' → logprob: -4.963249206542969
    6. ' ' → logprob: -5.338249206542969
    7. ' =' → logprob: -5.463249206542969
    8. '-' → logprob: -5.588249206542969
    9. '`' → logprob: -6.713249206542969
    10. '1' → logprob: -6.838249206542969

Token 6: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6498132944107056
    2. ':' → logprob: -1.7748132944107056
    3. 'def' → logprob: -2.399813175201416
    4. '=' → logprob: -3.024813175201416
    5. ' =' → logprob: -3.024813175201416
    6. '#' → logprob: -3.024813175201416
    7. '-' → logprob: -4.024813175201416
    8. ' ' → logprob: -4.649813175201416
    9. '\' → logprob: -5.024813175201416
    10. '```' → logprob: -5.274813175201416

Token 7: 'N' (ID: 45)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6270134449005127
    2. ':' → logprob: -1.1270134449005127
    3. 'def' → logprob: -3.6270134449005127
    4. '```' → logprob: -3.6270134449005127
    5. '#' → logprob: -3.7520134449005127
    6. ' :' → logprob: -4.252013206481934
    7. '-' → logprob: -5.002013206481934
    8. '`' → logprob: -5.002013206481934
    9. ',' → logprob: -5.502013206481934
    10. '=' → logprob: -5.752013206481934

Token 8: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.5204395651817322
    2. 'e' → logprob: -1.520439624786377
    3. 'a' → logprob: -3.270439624786377
    4. '#' → logprob: -3.270439624786377
    5. 'b' → logprob: -3.395439624786377
    6. '=' → logprob: -3.645439624786377
    7. 'on' → logprob: -4.270439624786377
    8. 'u' → logprob: -5.145439624786377
    9. ' =' → logprob: -5.520439624786377
    10. 'i' → logprob: -5.770439624786377

Token 9: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04289127141237259
    2. '10' → logprob: -3.292891263961792
    3. '5' → logprob: -6.292891502380371
    4. '20' → logprob: -7.542891502380371
    5. '100' → logprob: -7.542891502380371
    6. '42' → logprob: -7.792891502380371
    7. ' int' → logprob: -8.167891502380371
    8. 'int' → logprob: -8.292891502380371
    9. '4' → logprob: -8.667891502380371
    10. '1' → logprob: -9.042891502380371

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0080005107447505
    2. '(input' → logprob: -4.883000373840332
    3. '('' → logprob: -8.008000373840332
    4. ' (' → logprob: -10.883000373840332
    5. '("' → logprob: -11.258000373840332
    6. '()' → logprob: -11.383000373840332
    7. '(`' → logprob: -12.008000373840332
    8. 'input' → logprob: -13.008000373840332
    9. '(
' → logprob: -13.383000373840332
    10. ''' → logprob: -13.633000373840332

Token 11: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024473749101161957
    2. ')' → logprob: -4.399473667144775
    3. '()' → logprob: -4.524473667144775
    4. '())' → logprob: -7.524473667144775
    5. '(
' → logprob: -8.649474143981934
    6. '('' → logprob: -9.524474143981934
    7. '```' → logprob: -9.524474143981934
    8. '("("' → logprob: -10.274474143981934
    9. '(

' → logprob: -10.524474143981934
    10. '))' → logprob: -10.774474143981934

Token 12: 'found' (ID: 26334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7740541696548462
    2. 'for' → logprob: -1.2740541696548462
    3. 'if' → logprob: -2.6490540504455566
    4. 'i' → logprob: -3.1490540504455566
    5. ' for' → logprob: -3.1490540504455566
    6. '```' → logprob: -3.5240540504455566
    7. ' if' → logprob: -4.149054050445557
    8. 'x' → logprob: -4.274054050445557
    9. 'sum' → logprob: -5.149054050445557
    10. 'total' → logprob: -5.524054050445557

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31792300939559937
    2. ' =' → logprob: -1.5679230690002441
    3. '=' → logprob: -2.942923069000244
    4. ' ' → logprob: -4.692923069000244
    5. '_space' → logprob: -7.317923069000244
    6. '_=' → logprob: -8.317922592163086
    7. ')' → logprob: -8.567922592163086
    8. ' _' → logprob: -8.567922592163086
    9. '(' → logprob: -8.692922592163086
    10. ':' → logprob: -8.942922592163086

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.38718900084495544
    2. 'False' → logprob: -1.1371890306472778
    3. '0' → logprob: -9.012188911437988
    4. ' ' → logprob: -9.137188911437988
    5. '[]' → logprob: -10.137188911437988
    6. ' []' → logprob: -10.512188911437988
    7. '(False' → logprob: -11.762188911437988
    8. ' True' → logprob: -12.262188911437988
    9. ' None' → logprob: -12.512188911437988
    10. 'None' → logprob: -13.512188911437988

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25446146726608276
    2. ' 
' → logprob: -1.8794615268707275
    3. '<|end|>' → logprob: -4.254461288452148
    4. '```' → logprob: -4.379461288452148
    5. '' → logprob: -4.504461288452148
    6. ':' → logprob: -4.879461288452148
    7. '  
' → logprob: -5.129461288452148
    8. '\n' → logprob: -5.254461288452148
    9. ' ' → logprob: -5.629461288452148
    10. '\' → logprob: -6.004461288452148

Token 16: 'stuff' (ID: 91669)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5060506463050842
    2. '
' → logprob: -1.1310505867004395
    3. ' for' → logprob: -3.8810505867004395
    4. 'for' → logprob: -4.1310505867004395
    5. '  
' → logprob: -4.3810505867004395
    6. '\n' → logprob: -4.5060505867004395
    7. '' → logprob: -4.8810505867004395
    8. '
' → logprob: -6.1310505867004395
    9. ' ' → logprob: -6.5060505867004395
    10. '\' → logprob: -7.0060505867004395

Token 17: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7657752633094788
    2. ' =' → logprob: -1.015775203704834
    3. '=' → logprob: -1.890775203704834
    4. '_to' → logprob: -4.640775203704834
    5. '[' → logprob: -6.140775203704834
    6. '=[]' → logprob: -6.390775203704834
    7. ' ' → logprob: -6.515775203704834
    8. '_' → logprob: -6.640775203704834
    9. '_list' → logprob: -7.015775203704834
    10. '_ids' → logprob: -7.515775203704834

Token 18: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12870898842811584
    2. '[]' → logprob: -2.253709077835083
    3. ' {}' → logprob: -5.128708839416504
    4. ' set' → logprob: -5.378708839416504
    5. '{}' → logprob: -5.878708839416504
    6. ' ' → logprob: -6.753708839416504
    7. 'set' → logprob: -7.253708839416504
    8. ' [' → logprob: -8.253708839416504
    9. '[' → logprob: -9.128708839416504
    10. ' []
' → logprob: -10.503708839416504

Token 19: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016806557541713119
    2. '(st' → logprob: -6.876680850982666
    3. '(range' → logprob: -8.376680374145508
    4. '(
' → logprob: -9.001680374145508
    5. '()' → logprob: -9.126680374145508
    6. '(

' → logprob: -10.126680374145508
    7. ' (' → logprob: -10.501680374145508
    8. '(input' → logprob: -11.001680374145508
    9. '('' → logprob: -11.126680374145508
    10. '((' → logprob: -11.251680374145508

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024844540748745203
    2. '(N' → logprob: -6.002484321594238
    3. '(n' → logprob: -12.752484321594238
    4. '(
' → logprob: -12.877484321594238
    5. ' (' → logprob: -13.127484321594238
    6. ')' → logprob: -14.377484321594238
    7. '(-' → logprob: -15.127484321594238
    8. '(

' → logprob: -16.002485275268555
    9. '1' → logprob: -16.252485275268555
    10. '((' → logprob: -16.752485275268555

Token 21: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010435742326080799
    2. ',' → logprob: -5.260435581207275
    3. '+' → logprob: -6.010435581207275
    4. ' ))' → logprob: -6.510435581207275
    5. ')' → logprob: -7.010435581207275
    6. '-' → logprob: -9.385436058044434
    7. ')))' → logprob: -9.385436058044434
    8. ' +' → logprob: -9.760436058044434
    9. ' ,' → logprob: -10.260436058044434
    10. ' ' → logprob: -10.885436058044434

Token 22: '100' (ID: 1353)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5351411700248718
    2. '0' → logprob: -1.1601412296295166
    3. ' -' → logprob: -3.1601412296295166
    4. '1' → logprob: -3.7851412296295166
    5. '2' → logprob: -3.7851412296295166
    6. ' ' → logprob: -4.5351409912109375
    7. 'N' → logprob: -7.0351409912109375
    8. '10' → logprob: -7.6601409912109375
    9. '100' → logprob: -7.7851409912109375
    10. '3' → logprob: -9.285140991210938

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6914341449737549
    2. '))' → logprob: -1.4414341449737549
    3. '000' → logprob: -1.6914341449737549
    4. '00' → logprob: -2.941434144973755
    5. ',' → logprob: -4.566433906555176
    6. '1' → logprob: -5.191433906555176
    7. '+' → logprob: -5.441433906555176
    8. ')):' → logprob: -5.691433906555176
    9. ' ' → logprob: -7.941433906555176
    10. '001' → logprob: -8.316433906555176

Token 24: '))[' (ID: 101036)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011636561714112759
    2. ',' → logprob: -4.886636734008789
    3. ')' → logprob: -6.011636734008789
    4. '+' → logprob: -7.511636734008789
    5. ' ))' → logprob: -7.761636734008789
    6. ')):' → logprob: -8.511636734008789
    7. '):' → logprob: -8.636636734008789
    8. '0' → logprob: -9.761636734008789
    9. ')))' → logprob: -10.511636734008789
    10. ':' → logprob: -10.636636734008789

Token 25: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3455691933631897
    2. ':]' → logprob: -1.470569133758545
    3. '::' → logprob: -3.720569133758545
    4. ')' → logprob: -4.845569133758545
    5. ' :' → logprob: -4.970569133758545
    6. '])' → logprob: -5.220569133758545
    7. ' :]' → logprob: -5.345569133758545
    8. ']' → logprob: -5.595569133758545
    9. '0' → logprob: -6.470569133758545
    10. '::-' → logprob: -6.595569133758545

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.500004768371582
    3. '```' → logprob: -15.250004768371582
    4. ' ' → logprob: -15.375004768371582
    5. '3' → logprob: -15.500004768371582
    6. '0' → logprob: -16.3750057220459
    7. '-' → logprob: -16.7500057220459
    8. '6' → logprob: -16.8750057220459
    9. '``' → logprob: -17.2500057220459
    10. '5' → logprob: -17.2500057220459

Token 27: '][' (ID: 2696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3182997405529022
    2. ']' → logprob: -1.4432997703552246
    3. '])' → logprob: -3.3182997703552246
    4. ')]' → logprob: -8.943299293518066
    5. ')])' → logprob: -10.193299293518066
    6. ' )' → logprob: -10.693299293518066
    7. ')
' → logprob: -11.193299293518066
    8. '`)' → logprob: -11.818299293518066
    9. '）' → logprob: -12.068299293518066
    10. '))' → logprob: -12.193299293518066

Token 28: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27922824025154114
    2. ':]' → logprob: -1.9042282104492188
    3. '0' → logprob: -3.4042282104492188
    4. ']' → logprob: -3.7792282104492188
    5. '1' → logprob: -4.404228210449219
    6. ':N' → logprob: -4.904228210449219
    7. ')' → logprob: -5.529228210449219
    8. '::' → logprob: -5.654228210449219
    9. ' :' → logprob: -6.154228210449219
    10. '-' → logprob: -6.404228210449219

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38036900758743286
    2. '3' → logprob: -2.005368947982788
    3. '2' → logprob: -2.380368947982788
    4. '4' → logprob: -3.630368947982788
    5. '5' → logprob: -4.255369186401367
    6. '100' → logprob: -4.505369186401367
    7. '10' → logprob: -4.505369186401367
    8. '50' → logprob: -5.255369186401367
    9. '6' → logprob: -5.505369186401367
    10. '7' → logprob: -6.005369186401367

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034058792516589165
    2. ':]' → logprob: -8.375340461730957
    3. '])' → logprob: -10.125340461730957
    4. ' ]' → logprob: -10.375340461730957
    5. ')' → logprob: -11.125340461730957
    6. ')]' → logprob: -11.500340461730957
    7. ':' → logprob: -12.750340461730957
    8. ']
' → logprob: -13.125340461730957
    9. ' :]' → logprob: -13.500340461730957
    10. '']' → logprob: -14.125340461730957

Token 31: 'zzz' (ID: 182375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25843051075935364
    2. '.' → logprob: -2.7584304809570312
    3. '<|end|>' → logprob: -2.7584304809570312
    4. ']' → logprob: -3.3834304809570312
    5. '[:]' → logprob: -3.7584304809570312
    6. '#' → logprob: -4.758430480957031
    7. '<|end|>' → logprob: -4.883430480957031
    8. ')' → logprob: -5.508430480957031
    9. '_' → logprob: -5.633430480957031
    10. ':' → logprob: -5.633430480957031

Token 33: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8468816876411438
    2. ' ' → logprob: -1.346881628036499
    3. ' []' → logprob: -1.471881628036499
    4. '[]' → logprob: -3.846881628036499
    5. ' found' → logprob: -4.096881866455078
    6. 'stuff' → logprob: -4.096881866455078
    7. ' stuff' → logprob: -4.971881866455078
    8. 'found' → logprob: -5.721881866455078
    9. 'N' → logprob: -6.096881866455078
    10. ' N' → logprob: -6.284381866455078

Token 34: 'lambda' (ID: 35280)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.5426349639892578
    2. 'N' → logprob: -1.9176349639892578
    3. '0' → logprob: -2.792634963989258
    4. 'len' → logprob: -2.917634963989258
    5. ' stuff' → logprob: -3.792634963989258
    6. ')' → logprob: -4.042634963989258
    7. ' N' → logprob: -4.042634963989258
    8. '100' → logprob: -4.167634963989258
    9. 'i' → logprob: -4.167634963989258
    10. 'range' → logprob: -4.417634963989258

Token 35: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.36793115735054016
    2. 'x' → logprob: -1.2429311275482178
    3. ' n' → logprob: -4.867931365966797
    4. 'n' → logprob: -5.367931365966797
    5. ' i' → logprob: -6.867931365966797
    6. ' a' → logprob: -7.117931365966797
    7. 'a' → logprob: -7.367931365966797
    8. 'N' → logprob: -7.492931365966797
    9. 'i' → logprob: -7.617931365966797
    10. ' N' → logprob: -7.742931365966797

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007832442410290241
    2. ' :' → logprob: -5.0078325271606445
    3. ',' → logprob: -7.5078325271606445
    4. ':x' → logprob: -7.8828325271606445
    5. 'x' → logprob: -9.382832527160645
    6. ' x' → logprob: -9.882832527160645
    7. ',x' → logprob: -12.007832527160645
    8. ':n' → logprob: -12.007832527160645
    9. ':int' → logprob: -12.257832527160645
    10. ' ,' → logprob: -12.757832527160645

Token 37: 'all' (ID: 586)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5945345759391785
    2. 'x' → logprob: -0.8445345759391785
    3. ' ' → logprob: -6.344534397125244
    4. 'len' → logprob: -6.469534397125244
    5. 'str' → logprob: -6.469534397125244
    6. ' (' → logprob: -6.594534397125244
    7. 'sum' → logprob: -6.719534397125244
    8. ' str' → logprob: -6.969534397125244
    9. ' sum' → logprob: -7.219534397125244
    10. ' [' → logprob: -7.344534397125244

Token 38: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9577803015708923
    2. '(x' → logprob: -1.082780361175537
    3. '(i' → logprob: -1.582780361175537
    4. '((' → logprob: -3.582780361175537
    5. '([' → logprob: -4.207780361175537
    6. '(not' → logprob: -4.957780361175537
    7. '(y' → logprob: -5.457780361175537
    8. '(lambda' → logprob: -5.832780361175537
    9. '(ord' → logprob: -6.082780361175537
    10. '(c' → logprob: -6.332780361175537

Token 39: '==' (ID: 560)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.32493191957473755
    2. '%' → logprob: -1.3249318599700928
    3. '%x' → logprob: -5.574932098388672
    4. ' in' → logprob: -6.324932098388672
    5. ' for' → logprob: -6.449932098388672
    6. ' !=' → logprob: -7.074932098388672
    7. '!=' → logprob: -7.199932098388672
    8. '%i' → logprob: -7.199932098388672
    9. ' >' → logprob: -7.449932098388672
    10. ' y' → logprob: -8.199932098388672

Token 40: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06820876896381378
    2. '0' → logprob: -3.693208694458008
    3. 'z' → logprob: -4.568208694458008
    4. ' x' → logprob: -4.818208694458008
    5. 'y' → logprob: -5.193208694458008
    6. 'stuff' → logprob: -5.443208694458008
    7. '1' → logprob: -5.693208694458008
    8. 'i' → logprob: -6.568208694458008
    9. '(x' → logprob: -6.568208694458008
    10. ' ' → logprob: -7.193208694458008

Token 41: '[' (ID: 58)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3215579688549042
    2. 'for' → logprob: -1.3215579986572266
    3. ' or' → logprob: -5.321557998657227
    4. '[' → logprob: -6.571557998657227
    5. 'or' → logprob: -6.821557998657227
    6. '[-' → logprob: -8.196557998657227
    7. ')' → logprob: -8.321557998657227
    8. ' ' → logprob: -9.196557998657227
    9. '%' → logprob: -9.696557998657227
    10. '	for' → logprob: -10.446557998657227

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007207724265754223
    2. '-' → logprob: -8.000720977783203
    3. 'i' → logprob: -8.375720977783203
    4. ' ' → logprob: -10.125720977783203
    5. '[' → logprob: -10.375720977783203
    6. 'y' → logprob: -10.500720977783203
    7. 'x' → logprob: -11.188220977783203
    8. '1' → logprob: -12.000720977783203
    9. '(' → logprob: -12.125720977783203
    10. 'z' → logprob: -13.125720977783203

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016384923947043717
    2. ')' → logprob: -9.875164031982422
    3. ' ]' → logprob: -9.875164031982422
    4. 'for' → logprob: -11.000164031982422
    5. ' for' → logprob: -11.125164031982422
    6. '])' → logprob: -11.750164031982422
    7. 'x' → logprob: -12.375164031982422
    8. 'or' → logprob: -12.375164031982422
    9. 'y' → logprob: -13.000164031982422
    10. ']]' → logprob: -13.250164031982422

Token 44: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22926530241966248
    2. ' for' → logprob: -1.6042653322219849
    3. ')' → logprob: -6.104265213012695
    4. ']' → logprob: -6.854265213012695
    5. ' ' → logprob: -8.354265213012695
    6. '	for' → logprob: -9.229265213012695
    7. '[' → logprob: -9.979265213012695
    8. 'x' → logprob: -10.104265213012695
    9. '   ' → logprob: -10.604265213012695
    10. 'or' → logprob: -10.979265213012695

Token 45: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02976749837398529
    2. 'y' → logprob: -3.5297675132751465
    3. ' ' → logprob: -11.279767036437988
    4. '	y' → logprob: -12.904767036437988
    5. '  ' → logprob: -13.904767036437988
    6. '_' → logprob: -15.529767036437988
    7. ' x' → logprob: -15.779767036437988
    8. 'x' → logprob: -16.029767990112305
    9. '<|end|>' → logprob: -16.279767990112305
    10. '_y' → logprob: -16.529767990112305

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02056337706744671
    2. 'in' → logprob: -3.8955633640289307
    3. 'y' → logprob: -11.520563125610352
    4. ' y' → logprob: -12.895563125610352
    5. ' ' → logprob: -13.145563125610352
    6. 'x' → logprob: -13.145563125610352
    7. '<|end|>' → logprob: -13.770563125610352
    8. 'e' → logprob: -14.270563125610352
    9. 's' → logprob: -14.270563125610352
    10. '<|end|>' → logprob: -14.770563125610352

Token 47: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28120362758636475
    2. 'x' → logprob: -1.4062036275863647
    3. ')x' → logprob: -10.531203269958496
    4. ' ' → logprob: -12.031203269958496
    5. ')' → logprob: -12.468703269958496
    6. '[' → logprob: -12.593703269958496
    7. '	x' → logprob: -12.968703269958496
    8. '(x' → logprob: -13.156203269958496
    9. ',x' → logprob: -14.281203269958496
    10. '"x' → logprob: -14.343703269958496

Token 48: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3142451345920563
    2. '))' → logprob: -1.3142451047897339
    3. ')))' → logprob: -7.314245223999023
    4. '[' → logprob: -9.814245223999023
    5. ')])' → logprob: -10.314245223999023
    6. ' )' → logprob: -10.439245223999023
    7. '[:' → logprob: -10.689245223999023
    8. '):' → logprob: -10.689245223999023
    9. ')==' → logprob: -10.939245223999023
    10. '),' → logprob: -10.939245223999023

Token 49: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17827177047729492
    2. '[' → logprob: -2.428271770477295
    3. '(
' → logprob: -3.428271770477295
    4. ')' → logprob: -4.303271770477295
    5. '(st' → logprob: -5.178271770477295
    6. '<|end|>' → logprob: -5.303271770477295
    7. ':' → logprob: -5.928271770477295
    8. '.' → logprob: -6.303271770477295
    9. 'if' → logprob: -6.428271770477295
    10. '#' → logprob: -6.678271770477295

Token 50: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.043618250638246536
    2. ' N' → logprob: -3.6686182022094727
    3. ' found' → logprob: -4.543618202209473
    4. ' True' → logprob: -6.043618202209473
    5. 'N' → logprob: -6.418618202209473
    6. 'not' → logprob: -6.418618202209473
    7. 'found' → logprob: -7.918618202209473
    8. 'True' → logprob: -8.543618202209473
    9. ' stuff' → logprob: -9.418618202209473
    10. ' n' → logprob: -9.856118202209473

Token 51: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.5231446027755737
    2. ' found' → logprob: -0.8981446027755737
    3. '(found' → logprob: -11.898144721984863
    4. 'Found' → logprob: -12.023144721984863
    5. '	found' → logprob: -12.398144721984863
    6. ' ' → logprob: -13.273144721984863
    7. '_found' → logprob: -14.148144721984863
    8. 'stuff' → logprob: -14.273144721984863
    9. ' ' → logprob: -15.460644721984863
    10. 'N' → logprob: -16.023143768310547

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.7888184528565034e-05
    2. ' :' → logprob: -10.0000581741333
    3. ':
' → logprob: -12.1250581741333
    4. ':**' → logprob: -12.3750581741333
    5. '):' → logprob: -14.2500581741333
    6. '():' → logprob: -14.7500581741333
    7. ',:' → logprob: -14.8750581741333
    8. '>:' → logprob: -15.5000581741333
    9. ',' → logprob: -15.5000581741333
    10. ' and' → logprob: -15.7500581741333

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12293625622987747
    2. '    ' → logprob: -3.247936248779297
    3. ' for' → logprob: -3.872936248779297
    4. ' if' → logprob: -4.247936248779297
    5. '    
' → logprob: -4.372936248779297
    6. '<|end|>' → logprob: -4.872936248779297
    7. ' stuff' → logprob: -5.247936248779297
    8. 'stuff' → logprob: -5.872936248779297
    9. ' 
' → logprob: -6.247936248779297
    10. ' ' → logprob: -6.497936248779297

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8672559857368469
    2. ' stuff' → logprob: -1.1172559261322021
    3. 'stuff' → logprob: -2.367255926132202
    4. '   ' → logprob: -3.242255926132202
    5. ' if' → logprob: -3.242255926132202
    6. 'for' (adapté à ' for') → logprob: -3.742255926132202
    7. ' pass' → logprob: -3.992255926132202
    8. ' i' → logprob: -4.867256164550781
    9. ' code' → logprob: -5.804756164550781
    10. 'pass' → logprob: -5.992256164550781

Token 55: ' thing' (ID: 4435)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3905056416988373
    2. 'i' → logprob: -1.6405056715011597
    3. ' x' → logprob: -3.26550555229187
    4. 'x' → logprob: -4.015505790710449
    5. ' num' → logprob: -4.640505790710449
    6. 'n' → logprob: -4.765505790710449
    7. ' n' → logprob: -4.765505790710449
    8. 'num' → logprob: -5.015505790710449
    9. ' d' → logprob: -5.140505790710449
    10. 'd' → logprob: -5.578005790710449

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031996930483728647
    2. 'in' → logprob: -5.753199577331543
    3. 's' → logprob: -11.753199577331543
    4. ' ' → logprob: -12.003199577331543
    5. '  ' → logprob: -13.003199577331543
    6. '<|end|>' → logprob: -13.503199577331543
    7. '	in' → logprob: -14.128199577331543
    8. '<|end|>' → logprob: -14.378199577331543
    9. ',' → logprob: -14.628199577331543
    10. '   ' → logprob: -15.003199577331543

Token 57: ' stuff' (ID: 9350)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8261356353759766
    2. ' stuff' → logprob: -1.0761356353759766
    3. 'stuff' → logprob: -1.5761356353759766
    4. 'range' → logprob: -4.326135635375977
    5. ' list' → logprob: -7.826135635375977
    6. '[' → logprob: -9.013635635375977
    7. ' ' → logprob: -9.138635635375977
    8. ' reversed' → logprob: -9.201135635375977
    9. 'list' → logprob: -9.201135635375977
    10. '(range' → logprob: -9.576135635375977

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002560945285949856
    2. ':
' → logprob: -9.000256538391113
    3. ' :' → logprob: -9.250256538391113
    4. '):' → logprob: -10.625256538391113
    5. '   ' → logprob: -12.500256538391113
    6. ':**' → logprob: -13.125256538391113
    7. '<|end|>' → logprob: -13.625256538391113
    8. '>:' → logprob: -14.000256538391113
    9. ':

' → logprob: -14.500256538391113
    10. '():' → logprob: -14.500256538391113

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15138617157936096
    2. '<|end|>' → logprob: -2.651386260986328
    3. '   ' → logprob: -3.276386260986328
    4. ':
' → logprob: -4.526386260986328
    5. ' ' → logprob: -4.901386260986328
    6. ' if' → logprob: -5.526386260986328
    7. '       ' → logprob: -5.651386260986328
    8. ' :' → logprob: -6.401386260986328
    9. '<|end|>' → logprob: -6.401386260986328
    10. '    ' → logprob: -7.276386260986328

Token 60: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.031183535233139992
    2. ' ' → logprob: -4.40618371963501
    3. '    ' → logprob: -5.53118371963501
    4. ':' → logprob: -5.53118371963501
    5. '   ' → logprob: -5.90618371963501
    6. '<|end|>' → logprob: -6.03118371963501
    7. 'if' → logprob: -6.40618371963501
    8. ' for' → logprob: -6.53118371963501
    9. '       ' → logprob: -7.90618371963501
    10. ' :' → logprob: -8.156183242797852

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4500875174999237
    2. 'tr' → logprob: -1.325087547302246
    3. '=str' → logprob: -2.575087547302246
    4. '=' → logprob: -4.575087547302246
    5. 'um' → logprob: -5.450087547302246
    6. 'str' → logprob: -6.075087547302246
    7. 't' → logprob: -6.950087547302246
    8. 'tring' → logprob: -7.325087547302246
    9. 'trs' → logprob: -8.075087547302246
    10. 'quare' → logprob: -8.825087547302246

Token 62: ' '{}' (ID: 76993)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.14361391961574554
    2. ' str' → logprob: -2.018613815307617
    3. '[str' → logprob: -8.143613815307617
    4. 'bin' → logprob: -9.018613815307617
    5. '(str' → logprob: -9.143613815307617
    6. 'list' → logprob: -9.268613815307617
    7. 's' → logprob: -9.893613815307617
    8. 'input' → logprob: -9.893613815307617
    9. ' bin' → logprob: -10.518613815307617
    10. ' list' → logprob: -10.768613815307617

Token 63: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -1.269472360610962
    2. '*' → logprob: -2.269472360610962
    3. '**' → logprob: -2.519472360610962
    4. '+' → logprob: -2.519472360610962
    5. ' *' → logprob: -2.769472360610962
    6. '.format' → logprob: -2.894472360610962
    7. '***' → logprob: -3.144472360610962
    8. '%' → logprob: -3.269472360610962
    9. '{}'.' → logprob: -3.394472360610962
    10. ' %' → logprob: -3.519472360610962

Token 64: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.013604721985757351
    2. 'join' → logprob: -4.888604640960693
    3. 'z' → logprob: -5.513604640960693
    4. 'startswith' → logprob: -6.763604640960693
    5. 'count' → logprob: -7.513604640960693
    6. 'r' → logprob: -8.638605117797852
    7. 'strip' → logprob: -11.138605117797852
    8. 'isdigit' → logprob: -11.513605117797852
    9. 'str' → logprob: -11.638605117797852
    10. ' format' → logprob: -11.638605117797852

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008141548605635762
    2. '(N' → logprob: -7.875813961029053
    3. '(st' → logprob: -8.125814437866211
    4. '(str' → logprob: -9.125814437866211
    5. 'thing' → logprob: -11.000814437866211
    6. '((' → logprob: -13.000814437866211
    7. '(int' → logprob: -13.250814437866211
    8. '(s' → logprob: -13.625814437866211
    9. '(th' → logprob: -13.750814437866211
    10. '(n' → logprob: -14.125814437866211

Token 66: 'thing' (ID: 3070)
  Prédit: 'thing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thing' → logprob: -0.0005355171160772443
    2. 'str' → logprob: -8.00053596496582
    3. 'N' → logprob: -9.37553596496582
    4. 'stuff' → logprob: -9.50053596496582
    5. ')' → logprob: -10.75053596496582
    6. ' thing' → logprob: -11.87553596496582
    7. '100' → logprob: -13.62553596496582
    8. 'something' → logprob: -14.00053596496582
    9. '   ' → logprob: -14.00053596496582
    10. 'int' → logprob: -14.12553596496582

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13294674456119537
    2. ')
' → logprob: -2.132946729660034
    3. '[::-' → logprob: -6.007946968078613
    4. ')

' → logprob: -7.257946968078613
    5. ' )' → logprob: -7.382946968078613
    6. '**' → logprob: -7.757946968078613
    7. ')
' → logprob: -7.757946968078613
    8. ')[' → logprob: -8.007946968078613
    9. ').' → logprob: -8.507946968078613
    10. ' )
' → logprob: -8.632946968078613

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4863489866256714
    2. '<|end|>' → logprob: -1.4863489866256714
    3. '
' → logprob: -1.6113489866256714
    4. '[::-' → logprob: -1.9863489866256714
    5. ' if' → logprob: -2.611349105834961
    6. '        
' → logprob: -3.236349105834961
    7. '  
' → logprob: -3.736349105834961
    8. ' 
' → logprob: -3.861349105834961
    9. 'if' → logprob: -4.861349105834961
    10. '[' → logprob: -5.236349105834961

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4934905171394348
    2. 'if' (adapté à ' if') → logprob: -0.9934905171394348
    3. '       ' → logprob: -4.743490695953369
    4. 's' → logprob: -5.243490695953369
    5. ' s' → logprob: -6.743490695953369
    6. ')' → logprob: -7.493490695953369
    7. ' ' → logprob: -7.993490695953369
    8. 't' → logprob: -8.243490219116211
    9. '   ' → logprob: -8.243490219116211
    10. '        ' → logprob: -8.243490219116211

Token 70: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.003495423123240471
    2. 'z' → logprob: -6.628495216369629
    3. ' len' → logprob: -6.878495216369629
    4. 'zzz' → logprob: -7.253495216369629
    5. 'len' → logprob: -8.753495216369629
    6. 'zz' → logprob: -9.128495216369629
    7. ' s' → logprob: -9.753495216369629
    8. ' not' → logprob: -10.753495216369629
    9. '(' → logprob: -11.003495216369629
    10. ' ' → logprob: -11.253495216369629

Token 71: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.006727803498506546
    2. 'z' → logprob: -5.006727695465088
    3. 'zzz' → logprob: -11.506728172302246
    4. ' zz' → logprob: -13.256728172302246
    5. 'ZZ' → logprob: -15.256728172302246
    6. 'zza' → logprob: -15.506728172302246
    7. ' z' → logprob: -17.13172721862793
    8. '.zz' → logprob: -17.25672721862793
    9. 'zp' → logprob: -17.75672721862793
    10. 'zs' → logprob: -17.88172721862793

Token 72: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002101252321153879
    2. '(list' → logprob: -7.127101421356201
    3. '([' → logprob: -7.252101421356201
    4. 's' → logprob: -8.377100944519043
    5. '((' → logprob: -8.627100944519043
    6. '(' → logprob: -9.002100944519043
    7. ' (' → logprob: -10.627100944519043
    8. '(str' → logprob: -12.127100944519043
    9. '(int' → logprob: -12.377100944519043
    10. '(len' → logprob: -12.752100944519043

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02975187823176384
    2. ')' → logprob: -3.654751777648926
    3. '):
' → logprob: -6.654751777648926
    4. ' ):' → logprob: -6.904751777648926
    5. ')):' → logprob: -7.154751777648926
    6. ')==' → logprob: -10.029751777648926
    7. '):

' → logprob: -10.029751777648926
    8. '[' → logprob: -10.029751777648926
    9. ''):' → logprob: -10.154751777648926
    10. ' )' → logprob: -10.904751777648926

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09373555332422256
    2. ':' → logprob: -2.593735456466675
    3. ':
' → logprob: -5.343735694885254
    4. ' and' → logprob: -5.968735694885254
    5. '          ' → logprob: -6.593735694885254
    6. '==' → logprob: -7.093735694885254
    7. '               ' → logprob: -7.218735694885254
    8. '):' → logprob: -7.343735694885254
    9. '       ' → logprob: -7.468735694885254
    10. ' :' → logprob: -7.718735694885254

Token 75: ' Oh' (ID: 12458)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.6967189311981201
    2. 'found' → logprob: -0.6967189311981201
    3. '   ' → logprob: -6.196719169616699
    4. 'print' → logprob: -7.446719169616699
    5. '       ' → logprob: -8.3217191696167
    6. '           ' → logprob: -8.4467191696167
    7. ' print' → logprob: -8.8217191696167
    8. '	found' → logprob: -8.8217191696167
    9. 'Found' → logprob: -9.1967191696167
    10. '(found' → logprob: -11.3217191696167

Token 76: 'My' (ID: 5444)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.010492205619812
    2. ' =' → logprob: -1.135492205619812
    3. 'no' → logprob: -2.0104923248291016
    4. '           ' → logprob: -3.2604923248291016
    5. '_found' → logprob: -3.8854923248291016
    6. 'found' → logprob: -4.385492324829102
    7. 'No' → logprob: -4.510492324829102
    8. '=True' → logprob: -4.635492324829102
    9. '!' → logprob: -4.760492324829102
    10. '       ' → logprob: -4.885492324829102

Token 77: 'God' (ID: 34411)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9982331991195679
    2. '=' → logprob: -1.7482331991195679
    3. 'Found' → logprob: -1.7482331991195679
    4. 'found' → logprob: -2.3732333183288574
    5. '=True' → logprob: -3.1232333183288574
    6. 'No' → logprob: -3.2482333183288574
    7. 'My' → logprob: -3.6232333183288574
    8. '!' → logprob: -4.248233318328857
    9. 'True' → logprob: -4.623233318328857
    10. 'S' → logprob: -4.748233318328857

Token 78: 'IS' (ID: 2291)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07350227981805801
    2. '=' → logprob: -2.6985023021698
    3. '=True' → logprob: -6.073502063751221
    4. '=False' → logprob: -8.573502540588379
    5. '_found' → logprob: -8.698502540588379
    6. ' found' → logprob: -8.823502540588379
    7. ' ' → logprob: -8.948502540588379
    8. 'Found' → logprob: -9.073502540588379
    9. '(True' → logprob: -9.448502540588379
    10. 'found' → logprob: -9.573502540588379

Token 79: 'wear' (ID: 25991)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.9792606234550476
    2. 'FOUND' → logprob: -1.1042606830596924
    3. '_FOUND' → logprob: -2.2292606830596924
    4. '_found' → logprob: -2.9792606830596924
    5. '```' → logprob: -3.4792606830596924
    6. 'Found' → logprob: -3.6042606830596924
    7. 'DONE' → logprob: -3.9792606830596924
    8. 'T' → logprob: -5.104260444641113
    9. 'S' → logprob: -5.604260444641113
    10. 'G' → logprob: -5.729260444641113

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8419507741928101
    2. ' =' → logprob: -1.09195077419281
    3. 'Found' → logprob: -2.7169508934020996
    4. 'found' → logprob: -2.7169508934020996
    5. '(found' → logprob: -3.3419508934020996
    6. '=True' → logprob: -3.9669508934020996
    7. '(' → logprob: -4.3419508934021
    8. '(True' → logprob: -4.7169508934021
    9. '_found' → logprob: -5.5919508934021
    10. ' found' → logprob: -5.7169508934021

Token 81: ' thing' (ID: 4435)
  Prédit: ' thing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thing' → logprob: -0.6376297473907471
    2. 'thing' → logprob: -0.7626297473907471
    3. ' True' → logprob: -6.012629508972168
    4. 'True' → logprob: -6.137629508972168
    5. 'stuff' → logprob: -8.637629508972168
    6. ' stuff' → logprob: -9.262629508972168
    7. 'Thing' → logprob: -9.637629508972168
    8. 'int' → logprob: -10.637629508972168
    9. ' s' → logprob: -11.762629508972168
    10. 's' → logprob: -12.012629508972168

Token 82: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3990402817726135
    2. '
' → logprob: -1.1490402221679688
    3. '
' → logprob: -6.024040222167969
    4. '<|end|>' → logprob: -6.149040222167969
    5. ' found' → logprob: -6.524040222167969
    6. '               ' → logprob: -6.524040222167969
    7. 'found' → logprob: -6.649040222167969
    8. 'Found' → logprob: -8.024040222167969
    9. '(found' → logprob: -8.149040222167969
    10. '<|end|>' → logprob: -8.399040222167969

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04823721572756767
    2. '
' → logprob: -3.6732373237609863
    3. ' found' → logprob: -5.423237323760986
    4. '       ' → logprob: -5.673237323760986
    5. 'found' → logprob: -5.798237323760986
    6. '<|end|>' → logprob: -6.048237323760986
    7. '               ' → logprob: -6.673237323760986
    8. 'Found' → logprob: -6.923237323760986
    9. '(found' → logprob: -7.423237323760986
    10. '   ' → logprob: -7.673237323760986

Token 84: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.23026840388774872
    2. ' found' → logprob: -1.6052683591842651
    3. '           ' → logprob: -6.480268478393555
    4. 'Found' → logprob: -6.855268478393555
    5. '
' → logprob: -7.480268478393555
    6. 'break' → logprob: -7.730268478393555
    7. '	found' → logprob: -7.980268478393555
    8. '   ' → logprob: -8.230268478393555
    9. '            
' → logprob: -8.980268478393555
    10. ' break' → logprob: -9.230268478393555

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16030851006507874
    2. '=' → logprob: -1.9103084802627563
    3. '=True' → logprob: -9.535308837890625
    4. ' ' → logprob: -11.910308837890625
    5. '<|end|>' → logprob: -13.160308837890625
    6. ' |=' → logprob: -14.285308837890625
    7. ' =
' → logprob: -14.535308837890625
    8. ' True' → logprob: -14.660308837890625
    9. 's' → logprob: -14.660308837890625
    10. ' +=' → logprob: -14.785308837890625

Token 86: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.061967797577381134
    2. 'True' → logprob: -2.8119678497314453
    3. '(True' → logprob: -16.686967849731445
    4. '=True' → logprob: -17.186967849731445
    5. ' Tru' → logprob: -19.311967849731445
    6. ' ' → logprob: -20.561967849731445
    7. '.True' → logprob: -20.811967849731445
    8. ' not' → logprob: -21.061967849731445
    9. 'Tr' → logprob: -21.186967849731445
    10. ' Tr' → logprob: -22.061967849731445

Token 87: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37393414974212646
    2. '<|end|>' → logprob: -1.6239341497421265
    3. '
' → logprob: -2.373934268951416
    4. '       ' → logprob: -4.998934268951416
    5. '               ' → logprob: -5.623934268951416
    6. ' ' → logprob: -5.873934268951416
    7. '<|end|>' → logprob: -5.873934268951416
    8. ' 
' → logprob: -6.748934268951416
    9. ')' → logprob: -7.373934268951416
    10. '   ' → logprob: -7.498934268951416

Token 88: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023934293538331985
    2. ' break' → logprob: -4.273934364318848
    3. 'break' (adapté à ' break') → logprob: -4.648934364318848
    4. '	break' → logprob: -9.773934364318848
    5. '       ' → logprob: -10.273934364318848
    6. '               ' → logprob: -10.773934364318848
    7. '		' → logprob: -11.398934364318848
    8. '   ' → logprob: -11.773934364318848
    9. '            ' → logprob: -12.273934364318848
    10. '          ' → logprob: -12.773934364318848

Token 90: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' Output' (ID: 18315)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.6752445101737976
    2. ' Solution' → logprob: -2.0502445697784424
    3. ' Pal' → logprob: -2.4252445697784424
    4. ' ' → logprob: -3.0502445697784424
    5. ' Oh' → logprob: -3.3002445697784424
    6. 'Palindrome' → logprob: -3.8002445697784424
    7. ' Thing' → logprob: -3.9252445697784424
    8. ' Mon' → logprob: -4.425244331359863
    9. ' A' → logprob: -4.425244331359863
    10. ' Person' → logprob: -4.425244331359863

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001327499165199697
    2. '(' → logprob: -7.2513275146484375
    3. ':
' → logprob: -7.7513275146484375
    4. '():' → logprob: -9.876327514648438
    5. '(Output' → logprob: -10.126327514648438
    6. 'Output' → logprob: -10.876327514648438
    7. '{' → logprob: -10.876327514648438
    8. '(Exception' → logprob: -11.376327514648438
    9. '(object' → logprob: -12.001327514648438
    10. '):' → logprob: -12.126327514648438

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013740305788815022
    2. ':' → logprob: -4.513740539550781
    3. ' pass' → logprob: -7.388740539550781
    4. ' def' → logprob: -7.763740539550781
    5. ':
' → logprob: -7.763740539550781
    6. 'def' → logprob: -8.013740539550781
    7. ')' → logprob: -9.138740539550781
    8. ' ' → logprob: -9.388740539550781
    9. '    
' → logprob: -9.388740539550781
    10. 'pass' → logprob: -9.388740539550781

Token 95: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5963842868804932
    2. 'def' (adapté à ' def') → logprob: -0.8463842868804932
    3. ' pass' → logprob: -4.721384048461914
    4. '   ' → logprob: -5.096384048461914
    5. 'pass' → logprob: -5.596384048461914
    6. '@' → logprob: -7.846384048461914
    7. ' ' → logprob: -8.221384048461914
    8. ' @' → logprob: -8.471384048461914
    9. ' __' → logprob: -9.533884048461914
    10. '__' → logprob: -9.596384048461914

Token 96: ' magic' (ID: 19745)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5149275064468384
    2. 't' → logprob: -1.7649275064468384
    3. 'put' → logprob: -2.639927387237549
    4. '__' → logprob: -2.889927387237549
    5. 'init' → logprob: -3.389927387237549
    6. 'it' → logprob: -3.639927387237549
    7. ' init' → logprob: -4.389927387237549
    8. 'itialize' → logprob: -4.514927387237549
    9. '_init' → logprob: -5.514927387237549
    10. ' put' → logprob: -5.764927387237549

Token 97: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6577829122543335
    2. '(self' → logprob: -1.2827829122543335
    3. '():' → logprob: -1.6577829122543335
    4. ' (' → logprob: -5.032783031463623
    5. '   ' → logprob: -5.532783031463623
    6. '():
' → logprob: -7.157783031463623
    7. ':' → logprob: -7.532783031463623
    8. ' ' → logprob: -8.407782554626465
    9. '(s' → logprob: -8.532782554626465
    10. '(
' → logprob: -8.532782554626465

Token 98: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.156915545463562
    2. ',' → logprob: -2.1569156646728516
    3. 'self' → logprob: -3.6569156646728516
    4. ')' → logprob: -6.781915664672852
    5. '):
' → logprob: -7.531915664672852
    6. ',s' → logprob: -7.906915664672852
    7. ' ,' → logprob: -8.031915664672852
    8. ',arg' → logprob: -8.031915664672852
    9. ',self' → logprob: -8.656915664672852
    10. ' ):' → logprob: -8.906915664672852

Token 99: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000521577603649348
    2. ' return' → logprob: -9.000521659851074
    3. ' pass' → logprob: -9.375521659851074
    4. 'print' → logprob: -9.500521659851074
    5. '   ' → logprob: -10.125521659851074
    6. '    ' → logprob: -10.250521659851074
    7. 'return' → logprob: -10.375521659851074
    8. '        ' → logprob: -10.375521659851074
    9. ' print' → logprob: -10.500521659851074
    10. '        
' → logprob: -10.625521659851074

Token 100: ' Oh' (ID: 12458)
  Prédit: 'Oh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oh' → logprob: -0.14460308849811554
    2. ' Oh' → logprob: -2.6446030139923096
    3. '"Oh' → logprob: -3.0196030139923096
    4. ''' → logprob: -5.144603252410889
    5. 'str' → logprob: -5.519603252410889
    6. '"' → logprob: -6.769603252410889
    7. ' ' → logprob: -7.519603252410889
    8. '[' → logprob: -7.769603252410889
    9. 'None' → logprob: -8.01960277557373
    10. 'f' → logprob: -8.26960277557373

Token 101: 'My' (ID: 5444)
  Prédit: 'My'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'My' → logprob: -1.3856492842023727e-06
    2. 'my' → logprob: -14.875000953674316
    3. '<My' → logprob: -14.875000953674316
    4. ' My' → logprob: -15.375000953674316
    5. 'M' → logprob: -15.750000953674316
    6. '_my' → logprob: -15.875000953674316
    7. '	My' → logprob: -16.375001907348633
    8. '<|end|>' → logprob: -17.750001907348633
    9. '.My' → logprob: -18.250001907348633
    10. 'y' → logprob: -18.250001907348633

Token 102: 'God' (ID: 34411)
  Prédit: 'God'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'God' → logprob: -3.292907877039397e-06
    2. 'Gold' → logprob: -13.50000286102295
    3. 'Good' → logprob: -14.12500286102295
    4. ' God' → logprob: -14.50000286102295
    5. 'Got' → logprob: -15.00000286102295
    6. 'G' → logprob: -15.37500286102295
    7. 'Dog' → logprob: -16.250003814697266
    8. '_G' → logprob: -17.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. 'Cod' → logprob: -18.500003814697266

Token 103: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.046594321727752686
    2. 'God' → logprob: -3.4215943813323975
    3. 'Is' → logprob: -4.546594142913818
    4. 'Sw' → logprob: -6.171594142913818
    5. 'is' → logprob: -8.921594619750977
    6. 'My' → logprob: -11.921594619750977
    7. 'Sure' → logprob: -12.546594619750977
    8. 'S' → logprob: -12.546594619750977
    9. 'sw' → logprob: -12.796594619750977
    10. 's' → logprob: -13.046594619750977

Token 104: 'wear' (ID: 25991)
  Prédit: 'wear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wear' → logprob: -0.07078342884778976
    2. 'war' → logprob: -2.8207833766937256
    3. 'ware' → logprob: -6.195783615112305
    4. 'we' → logprob: -6.820783615112305
    5. 'wer' → logprob: -6.820783615112305
    6. 'ear' → logprob: -7.445783615112305
    7. 'God' → logprob: -7.570783615112305
    8. 'w' → logprob: -7.820783615112305
    9. 'waar' → logprob: -8.195783615112305
    10. 'warf' → logprob: -8.195783615112305

Token 105: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: 'printer' (ID: 144218)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5791085958480835
    2. '<|end|>' → logprob: -0.9541085958480835
    3. '#' → logprob: -3.704108715057373
    4. ' ' → logprob: -4.204108715057373
    5. '[' → logprob: -5.579108715057373
    6. '.' → logprob: -5.954108715057373
    7. '<|end|>' → logprob: -6.329108715057373
    8. ' )' → logprob: -6.829108715057373
    9. '0' → logprob: -6.954108715057373
    10. ']' → logprob: -7.329108715057373

Token 107: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035994354635477066
    2. ' =' → logprob: -3.785994291305542
    3. '=' → logprob: -4.910994529724121
    4. '().' → logprob: -5.785994529724121
    5. '.print' → logprob: -6.785994529724121
    6. '()' → logprob: -7.785994529724121
    7. '(' → logprob: -8.910994529724121
    8. '.Output' → logprob: -9.285994529724121
    9. '.pr' → logprob: -9.535994529724121
    10. '.output' → logprob: -9.660994529724121

Token 108: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.003177952254191041
    2. ' Output' → logprob: -5.753178119659424
    3. '	Output' → logprob: -15.503177642822266
    4. '(Output' → logprob: -17.628177642822266
    5. '_Output' → logprob: -18.253177642822266
    6. ' ' → logprob: -19.253177642822266
    7. 'Print' → logprob: -19.378177642822266
    8. 'Printer' → logprob: -19.753177642822266
    9. '.Output' → logprob: -20.003177642822266
    10. 'Input' → logprob: -20.128177642822266

Token 109: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44665682315826416
    2. '.' → logprob: -1.0716568231582642
    3. '().' → logprob: -4.071656703948975
    4. '<|end|>' → logprob: -8.071657180786133
    5. '()
' → logprob: -9.321657180786133
    6. '.print' → logprob: -9.946657180786133
    7. '();' → logprob: -10.071657180786133
    8. '(' → logprob: -10.071657180786133
    9. '().'' → logprob: -10.321657180786133
    10. '().__' → logprob: -10.571657180786133

Token 110: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.245724504580721e-05
    2. 'printer' → logprob: -10.625092506408691
    3. 'pr' → logprob: -10.750092506408691
    4. '.' → logprob: -11.875092506408691
    5. 'p' → logprob: -12.000092506408691
    6. 'result' → logprob: -12.125092506408691
    7. '#' → logprob: -12.500092506408691
    8. '#print' → logprob: -12.500092506408691
    9. 'prin' → logprob: -12.750092506408691
    10. '```' → logprob: -12.750092506408691

Token 111: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.0032824059017002583
    2. '(' → logprob: -5.75328254699707
    3. '()' → logprob: -9.25328254699707
    4. '(print' → logprob: -12.37828254699707
    5. '('' → logprob: -12.62828254699707
    6. '(
' → logprob: -15.12828254699707
    7. 'printer' → logprob: -15.37828254699707
    8. 'pr' → logprob: -15.50328254699707
    9. '(pl' → logprob: -15.87828254699707
    10. '("' → logprob: -16.37828254699707

Token 112: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -4.096126576769166e-05
    2. 'int' → logprob: -10.375041007995605
    3. 'n' → logprob: -12.750041007995605
    4. 'iter' → logprob: -13.125041007995605
    5. 'onter' → logprob: -13.125041007995605
    6. 'ter' → logprob: -13.625041007995605
    7. 'inte' → logprob: -15.125041007995605
    8. '_inter' → logprob: -15.375041007995605
    9. 'printer' → logprob: -15.875041007995605
    10. '#' → logprob: -16.12504005432129

Token 113: '.magic' (ID: 184047)
  Prédit: '.magic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.magic' → logprob: -0.015686368569731712
    2. '.' → logprob: -4.265686511993408
    3. '.mag' → logprob: -6.515686511993408
    4. ' .' → logprob: -11.01568603515625
    5. '.m' → logprob: -11.01568603515625
    6. ')' → logprob: -12.26568603515625
    7. ').' → logprob: -13.01568603515625
    8. '.)' → logprob: -14.01568603515625
    9. '.ma' → logprob: -15.39068603515625
    10. '.
' → logprob: -15.64068603515625

Token 114: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007207724265754223
    2. '()' → logprob: -7.250720977783203
    3. ')' → logprob: -11.750720977783203
    4. '()))' → logprob: -13.375720977783203
    5. ' ())' → logprob: -14.375720977783203
    6. '();)' → logprob: -14.750720977783203
    7. '())
' → logprob: -15.125720977783203
    8. '())

' → logprob: -16.875720977783203
    9. '().' → logprob: -17.250720977783203
    10. '()]' → logprob: -17.625720977783203


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 39.29%
Précision adaptée (1ère position): 40.18%
Précision (top 10): 67.86%
================================================================================
