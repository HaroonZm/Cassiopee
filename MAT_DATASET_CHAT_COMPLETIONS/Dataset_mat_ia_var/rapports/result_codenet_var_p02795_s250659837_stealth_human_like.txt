================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on commence par lire les entrées, c'est classique
h = int(input())
w = int(input())
n = int(input())

# Je suppose que W sert à vérifier l'espace horizontal ?
if w >= h:
    x = n // w
    if n % w != 0:
        x += 1  # rajouter un si ça tombe pas pile
    print(x)
else:
    # Parfois H est plus grand, du coup on change un peu
    y = n // h
    if n % h == 0:
        print(y)
    else:
        # Ici j'ajoute 1 si reste
        print(y+1)
# Je pense que ça devrait marcher, sinon faudra voir
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.248463973402977
    2. ' je' → logprob: -1.8734639883041382
    3. ' ' → logprob: -3.2484638690948486
    4. ' j' → logprob: -4.998464107513428
    5. ' c' → logprob: -5.498464107513428
    6. '```' → logprob: -5.873464107513428
    7. 'soir' → logprob: -6.248464107513428
    8. 'je' → logprob: -6.373464107513428
    9. ' app' → logprob: -6.748464107513428
    10. '  ' → logprob: -6.873464107513428

Token 4: ' commence' (ID: 44755)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.284489393234253
    2. ' veut' → logprob: -2.284489393234253
    3. ' va' → logprob: -2.409489393234253
    4. ' continue' → logprob: -2.534489393234253
    5. 't' → logprob: -2.659489393234253
    6. ' a' → logprob: -2.909489393234253
    7. ' y' → logprob: -3.034489393234253
    8. 's' → logprob: -3.534489393234253
    9. ' ' → logprob: -3.784489393234253
    10. 'ne' → logprob: -4.034489631652832

Token 5: ' par' (ID: 686)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8798097968101501
    2. '\n' → logprob: -1.504809856414795
    3. '#' → logprob: -1.754809856414795
    4. '!' → logprob: -2.879809856414795
    5. '\' → logprob: -3.129809856414795
    6. '
' → logprob: -3.379809856414795
    7. ':' → logprob: -4.504809856414795
    8. '<|end|>' → logprob: -4.754809856414795
    9. ',' → logprob: -4.879809856414795
    10. '.' → logprob: -5.129809856414795

Token 6: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.7282909154891968
    2. 'une' → logprob: -1.9782909154891968
    3. ' #' → logprob: -2.2282910346984863
    4. ' l' → logprob: -2.2282910346984863
    5. '```' → logprob: -2.4782910346984863
    6. ' une' → logprob: -2.9782910346984863
    7. ' la' → logprob: -2.9782910346984863
    8. '#' → logprob: -3.1032910346984863
    9. 'le' → logprob: -3.4782910346984863
    10. '_' → logprob: -3.4782910346984863

Token 7: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25194984674453735
    2. 'le' → logprob: -2.1269497871398926
    3. ' le' → logprob: -3.0019497871398926
    4. '_' → logprob: -3.7519497871398926
    5. 'l' → logprob: -5.501949787139893
    6. 'f' → logprob: -5.626949787139893
    7. '```' → logprob: -5.626949787139893
    8. '.' → logprob: -5.876949787139893
    9. ' la' → logprob: -6.126949787139893
    10. ' #' → logprob: -6.126949787139893

Token 8: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8859893679618835
    2. 'f' → logprob: -1.7609894275665283
    3. ' fichiers' → logprob: -1.7609894275665283
    4. ' données' → logprob: -2.2609894275665283
    5. ' ' → logprob: -3.3859894275665283
    6. ' data' → logprob: -3.7609894275665283
    7. 'data' → logprob: -4.010989189147949
    8. 'l' → logprob: -4.260989189147949
    9. ' fichier' → logprob: -5.385989189147949
    10. 'don' → logprob: -5.510989189147949

Token 9: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.008929374627768993
    2. 'ée' → logprob: -4.758929252624512
    3. 'é' → logprob: -8.508929252624512
    4. 'ees' → logprob: -9.383929252624512
    5. 'és' → logprob: -10.883929252624512
    6. 'es' → logprob: -13.008929252624512
    7. 'er' → logprob: -13.633929252624512
    8. 'ee' → logprob: -13.633929252624512
    9. '```' → logprob: -13.633929252624512
    10. 'è' → logprob: -14.133929252624512

Token 10: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8169220685958862
    2. '```' → logprob: -1.4419220685958862
    3. '#' → logprob: -2.066922187805176
    4. '`' → logprob: -2.816922187805176
    5. '\' → logprob: -3.191922187805176
    6. 's' → logprob: -4.066922187805176
    7. 'input' → logprob: -4.316922187805176
    8. ':' → logprob: -4.566922187805176
    9. '``' → logprob: -4.941922187805176
    10. '_' → logprob: -5.066922187805176

Token 11: ' c' (ID: 274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8906617164611816
    2. '```' → logprob: -1.8906617164611816
    3. 'inputs' → logprob: -2.0156617164611816
    4. 'input' → logprob: -2.1406617164611816
    5. 'x' → logprob: -2.2656617164611816
    6. ' ' → logprob: -2.5156617164611816
    7. '\n' → logprob: -3.0156617164611816
    8. '`' → logprob: -3.3906617164611816
    9. 's' → logprob: -3.5156617164611816
    10. '``' → logprob: -4.140661716461182

Token 12: ''est' (ID: 6616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7731770873069763
    2. 'o' → logprob: -1.523177146911621
    3. ' =' → logprob: -2.273177146911621
    4. 'a' → logprob: -2.773177146911621
    5. 'i' → logprob: -3.523177146911621
    6. 'r' → logprob: -4.273177146911621
    7. '#' → logprob: -4.398177146911621
    8. ''' → logprob: -4.523177146911621
    9. 'h' → logprob: -4.523177146911621
    10. 'on' → logprob: -4.523177146911621

Token 13: ' classique' (ID: 76895)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5035276412963867
    2. 'tout' → logprob: -2.3785276412963867
    3. 'le' → logprob: -3.0035276412963867
    4. 'une' → logprob: -3.1285276412963867
    5. ' une' → logprob: -3.5035276412963867
    6. ' l' → logprob: -3.7535276412963867
    7. 'les' → logprob: -3.7535276412963867
    8. 'la' → logprob: -4.003527641296387
    9. 'import' → logprob: -4.128527641296387
    10. ' la' → logprob: -4.378527641296387

Token 14: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4272315800189972
    2. '\n' → logprob: -2.427231550216675
    3. 'input' → logprob: -2.927231550216675
    4. '``' → logprob: -3.052231550216675
    5. '`' → logprob: -3.302231550216675
    6. 'n' → logprob: -3.677231550216675
    7. '#' → logprob: -3.802231550216675
    8. 's' → logprob: -4.052231788635254
    9. 'x' → logprob: -4.177231788635254
    10. 'inputs' → logprob: -4.677231788635254

Token 15: 'h' (ID: 71)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5477452874183655
    2. 'n' → logprob: -1.7977452278137207
    3. 'i' → logprob: -2.1727452278137207
    4. '`' → logprob: -3.0477452278137207
    5. '#' → logprob: -3.7977452278137207
    6. 'e' → logprob: -4.297745227813721
    7. '_' → logprob: -4.297745227813721
    8. '``' → logprob: -4.922745227813721
    9. 'input' → logprob: -5.422745227813721
    10. 'inputs' → logprob: -5.547745227813721

Token 16: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.389395534992218
    2. 't' → logprob: -1.2643954753875732
    3. ' =' → logprob: -4.264395713806152
    4. '=' → logprob: -4.764395713806152
    5. 'a' → logprob: -4.889395713806152
    6. 'i' → logprob: -5.514395713806152
    7. 'u' → logprob: -6.389395713806152
    8. 'tml' → logprob: -7.139395713806152
    9. '=input' → logprob: -7.389395713806152
    10. 'input' → logprob: -7.514395713806152

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5217885971069336
    2. ' input' → logprob: -1.0217885971069336
    3. 'input' → logprob: -3.5217885971069336
    4. 'int' → logprob: -4.271788597106934
    5. ' ' → logprob: -5.896788597106934
    6. ' float' → logprob: -8.646788597106934
    7. ' ' → logprob: -10.146788597106934
    8. ' "' → logprob: -10.646788597106934
    9. '0' → logprob: -11.271788597106934
    10. ' []' → logprob: -11.396788597106934

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759763121604919
    2. '(input' → logprob: -0.8259763121604919
    3. 'input' → logprob: -10.825976371765137
    4. ' (' → logprob: -12.075976371765137
    5. '()' → logprob: -12.575976371765137
    6. '(
' → logprob: -12.825976371765137
    7. '('' → logprob: -13.575976371765137
    8. '(

' → logprob: -13.575976371765137
    9. '(raw' → logprob: -14.825976371765137
    10. ' input' → logprob: -14.825976371765137

Token 19: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5465067625045776
    2. '()' → logprob: -0.9215067625045776
    3. '('' → logprob: -4.296506881713867
    4. '("("' → logprob: -5.046506881713867
    5. '())' → logprob: -6.046506881713867
    6. '(()' → logprob: -8.421506881713867
    7. '("")' → logprob: -8.671506881713867
    8. '(
' → logprob: -9.671506881713867
    9. '(""))' → logprob: -9.796506881713867
    10. '("' → logprob: -9.796506881713867

Token 20: 'w' (ID: 86)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38915035128593445
    2. ')' → logprob: -1.6391503810882568
    3. '
' → logprob: -3.014150381088257
    4. '\n' → logprob: -4.264150142669678
    5. '<|end|>' → logprob: -4.514150142669678
    6. ' 
' → logprob: -4.639150142669678
    7. '#' → logprob: -5.264150142669678
    8. 'for' → logprob: -5.264150142669678
    9. ' for' → logprob: -5.389150142669678
    10. ' )' → logprob: -5.514150142669678

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13258619606494904
    2. '=' → logprob: -2.1325862407684326
    3. ' ' → logprob: -5.8825860023498535
    4. ')' → logprob: -6.0075860023498535
    5. ' )' → logprob: -8.507586479187012
    6. '_' → logprob: -10.007586479187012
    7. ',' → logprob: -10.632586479187012
    8. '<|end|>' → logprob: -11.007586479187012
    9. '=input' → logprob: -11.132586479187012
    10. ']' → logprob: -11.507586479187012

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47407910227775574
    2. 'int' → logprob: -0.9740791320800781
    3. '=int' → logprob: -13.724079132080078
    4. '(int' → logprob: -14.974079132080078
    5. '[int' → logprob: -15.349079132080078
    6. ' ' → logprob: -15.599079132080078
    7. 'input' → logprob: -16.224079132080078
    8. ' input' → logprob: -16.599079132080078
    9. ' ' → logprob: -16.599079132080078
    10. '<int' → logprob: -16.724079132080078

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01105984952300787
    2. '(' → logprob: -4.511059761047363
    3. ' (' → logprob: -11.636059761047363
    4. '(
' → logprob: -13.636059761047363
    5. 'input' → logprob: -14.761059761047363
    6. '=input' → logprob: -14.886059761047363
    7. '(inputs' → logprob: -15.261059761047363
    8. '()' → logprob: -16.01106071472168
    9. '(

' → logprob: -16.01106071472168
    10. '<input' → logprob: -16.13606071472168

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3171408176422119
    2. '()' → logprob: -1.317140817642212
    3. ')' → logprob: -5.567140579223633
    4. ' ())' → logprob: -10.942140579223633
    5. '(' → logprob: -11.817140579223633
    6. '();)' → logprob: -12.067140579223633
    7. '()>' → logprob: -12.442140579223633
    8. '()
' → logprob: -12.442140579223633
    9. '()))' → logprob: -12.942140579223633
    10. '())
' → logprob: -13.192140579223633

Token 25: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.09934744983911514
    2. '#' → logprob: -3.8493473529815674
    3. '\' → logprob: -3.9743473529815674
    4. 'n' → logprob: -4.0993475914001465
    5. ' ' → logprob: -4.4743475914001465
    6. '
' → logprob: -4.8493475914001465
    7. ')' → logprob: -5.8493475914001465
    8. 'r' → logprob: -6.2243475914001465
    9. 'newline' → logprob: -6.2243475914001465
    10. 'for' → logprob: -6.4743475914001465

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04865776747465134
    2. '=' → logprob: -3.0486576557159424
    3. ',' → logprob: -10.423657417297363
    4. '=int' → logprob: -10.923657417297363
    5. '_' → logprob: -12.048657417297363
    6. ')' → logprob: -12.673657417297363
    7. 's' → logprob: -12.923657417297363
    8. 'b' → logprob: -13.673657417297363
    9. '<|end|>' → logprob: -14.173657417297363
    10. 'umbers' → logprob: -14.298657417297363

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14274843037128448
    2. 'int' → logprob: -2.0177483558654785
    3. '(int' → logprob: -11.392748832702637
    4. '[int' → logprob: -11.392748832702637
    5. '1' → logprob: -11.517748832702637
    6. '0' → logprob: -11.517748832702637
    7. '=int' → logprob: -11.767748832702637
    8. ' h' → logprob: -11.767748832702637
    9. ' ' → logprob: -12.017748832702637
    10. '10' → logprob: -13.392748832702637

Token 28: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04450968652963638
    2. '(' → logprob: -3.4195096492767334
    3. '()' → logprob: -4.5445098876953125
    4. '(int' → logprob: -9.794509887695312
    5. ' (' → logprob: -9.919509887695312
    6. '(x' → logprob: -11.294509887695312
    7. '()(' → logprob: -11.669509887695312
    8. '("("' → logprob: -11.794509887695312
    9. ' ()' → logprob: -12.294509887695312
    10. '(
' → logprob: -12.294509887695312

Token 29: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7700372934341431
    2. '())' → logprob: -1.145037293434143
    3. ')' → logprob: -1.520037293434143
    4. '()
' → logprob: -10.895037651062012
    5. ' ())' → logprob: -11.020037651062012
    6. '();)' → logprob: -11.020037651062012
    7. '(' → logprob: -11.145037651062012
    8. ' )' → logprob: -11.395037651062012
    9. '()]' → logprob: -13.270037651062012
    10. '())
' → logprob: -13.395037651062012

Token 30: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.280639410018921
    2. 'tiles' → logprob: -1.280639410018921
    3. 'for' → logprob: -1.905639410018921
    4. 'grid' → logprob: -2.530639410018921
    5. 'rows' → logprob: -3.405639410018921
    6. 'cells' → logprob: -3.530639410018921
    7. 'arr' → logprob: -3.905639410018921
    8. 'a' → logprob: -4.0306396484375
    9. 't' → logprob: -4.1556396484375
    10. 'matrix' → logprob: -4.2806396484375

Token 31: ' Je' (ID: 4678)
  Prédit: 'tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tiles' → logprob: -1.335289716720581
    2. ' tiles' → logprob: -2.460289716720581
    3. 'rows' → logprob: -2.710289716720581
    4. 'cells' → logprob: -2.835289716720581
    5. 'r' → logprob: -2.960289716720581
    6. 'for' → logprob: -3.085289716720581
    7. 'grid' → logprob: -3.210289716720581
    8. 'a' → logprob: -3.210289716720581
    9. ' cells' → logprob: -3.335289716720581
    10. '#' → logprob: -3.585289716720581

Token 32: ' suppose' (ID: 35968)
  Prédit: ' vais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vais' → logprob: -0.4185648262500763
    2. ' veux' → logprob: -2.668564796447754
    3. ' #' → logprob: -2.793564796447754
    4. ' pense' → logprob: -3.168564796447754
    5. ' ' → logprob: -3.418564796447754
    6. ' souhaite' → logprob: -3.668564796447754
    7. ' m' → logprob: -4.168564796447754
    8. '_' → logprob: -4.168564796447754
    9. '#' → logprob: -4.668564796447754
    10. 's' → logprob: -5.168564796447754

Token 33: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.8511338829994202
    2. ' ' → logprob: -1.3511338233947754
    3. ' #' → logprob: -2.2261338233947754
    4. ' that' → logprob: -2.9761338233947754
    5. '#' → logprob: -3.2261338233947754
    6. '_' → logprob: -3.3511338233947754
    7. ' =' → logprob: -4.351133823394775
    8. 'n' → logprob: -4.726133823394775
    9. '```' → logprob: -4.851133823394775
    10. ' ' → logprob: -5.226133823394775

Token 34: ' W' (ID: 486)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7513927221298218
    2. ' la' → logprob: -2.2513928413391113
    3. ' les' → logprob: -2.2513928413391113
    4. ' h' → logprob: -2.7513928413391113
    5. ' on' → logprob: -3.0013928413391113
    6. ' ' → logprob: -3.0013928413391113
    7. 'n' → logprob: -3.8763928413391113
    8. ' je' → logprob: -4.251392841339111
    9. ' le' → logprob: -4.251392841339111
    10. ' l' → logprob: -4.251392841339111

Token 35: ' sert' (ID: 52405)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2639002799987793
    2. ' =' → logprob: -1.2639002799987793
    3. ',' → logprob: -2.1389002799987793
    4. '<|end|>' → logprob: -2.1389002799987793
    5. '#' → logprob: -3.3889002799987793
    6. ')' → logprob: -3.6389002799987793
    7. ' ,' → logprob: -3.8889002799987793
    8. ' ' → logprob: -4.013900279998779
    9. ' #' → logprob: -4.138900279998779
    10. '%' → logprob: -4.513900279998779

Token 36: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12465449422597885
    2. ' ' → logprob: -2.374654531478882
    3. ' a' → logprob: -4.499654293060303
    4. 'à' → logprob: -5.749654293060303
    5. ' ' → logprob: -5.999654293060303
    6. ' =' → logprob: -6.374654293060303
    7. ' to' → logprob: -6.499654293060303
    8. '=' → logprob: -6.999654293060303
    9. '  ' → logprob: -7.124654293060303
    10. 'a' → logprob: -7.624654293060303

Token 37: ' vérifier' (ID: 93671)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' créer' → logprob: -1.2173793315887451
    2. ' stock' → logprob: -1.5923793315887451
    3. ' la' → logprob: -2.467379331588745
    4. 'la' → logprob: -2.717379331588745
    5. 'l' → logprob: -2.967379331588745
    6. 'r' → logprob: -3.217379331588745
    7. ' remplir' → logprob: -3.342379331588745
    8. 'stock' → logprob: -3.967379331588745
    9. 'faire' → logprob: -4.217379570007324
    10. ' compter' → logprob: -4.342379570007324

Token 38: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08918699622154236
    2. '<|end|>' → logprob: -3.589186906814575
    3. ',' → logprob: -4.214187145233154
    4. '_' → logprob: -4.464187145233154
    5. 'w' → logprob: -4.964187145233154
    6. 's' → logprob: -5.214187145233154
    7. '```' → logprob: -5.464187145233154
    8. ')' → logprob: -5.589187145233154
    9. '.' → logprob: -6.964187145233154
    10. ' la' → logprob: -6.964187145233154

Token 39: ''espace' (ID: 118124)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21641255915164948
    2. 'e' → logprob: -2.5914125442504883
    3. ''espace' → logprob: -3.0914125442504883
    4. 'es' → logprob: -3.4664125442504883
    5. ''' → logprob: -4.216412544250488
    6. '_' → logprob: -5.216412544250488
    7. 'u' → logprob: -5.341412544250488
    8. '#' → logprob: -6.466412544250488
    9. ''ensemble' → logprob: -6.591412544250488
    10. ' a' → logprob: -6.591412544250488

Token 40: ' horizontal' (ID: 25511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0691949650645256
    2. ',' → logprob: -3.944195032119751
    3. 's' → logprob: -4.194194793701172
    4. '_' → logprob: -4.819194793701172
    5. '  ' → logprob: -5.194194793701172
    6. '.' → logprob: -5.319194793701172
    7. '<|end|>' → logprob: -5.944194793701172
    8. 'u' → logprob: -6.069194793701172
    9. ' ,' → logprob: -6.069194793701172
    10. 'w' → logprob: -6.944194793701172

Token 41: ' ?
' (ID: 19740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5949993133544922
    2. 'w' → logprob: -1.7199993133544922
    3. '#' → logprob: -2.969999313354492
    4. '<|end|>' → logprob: -3.094999313354492
    5. 's' → logprob: -3.219999313354492
    6. ',' → logprob: -3.344999313354492
    7. 'n' → logprob: -3.594999313354492
    8. '.' → logprob: -4.094999313354492
    9. ')' → logprob: -4.344999313354492
    10. 'u' → logprob: -4.719999313354492

Token 42: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0713118314743042
    2. '?' → logprob: -1.8213118314743042
    3. 'w' → logprob: -1.9463118314743042
    4. '```' → logprob: -2.4463119506835938
    5. 's' → logprob: -3.0713119506835938
    6. '
' → logprob: -3.0713119506835938
    7. ',' → logprob: -3.3213119506835938
    8. ' ' → logprob: -3.4463119506835938
    9. 'x' → logprob: -4.321311950683594
    10. 'n' → logprob: -4.571311950683594

Token 43: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.07701754570007324
    2. ' h' → logprob: -2.8270175457000732
    3. ' n' → logprob: -4.827017784118652
    4. ' ' → logprob: -5.702017784118652
    5. 'w' → logprob: -5.952017784118652
    6. ' ' → logprob: -7.327017784118652
    7. 'h' → logprob: -8.577017784118652
    8. 'n' → logprob: -9.702017784118652
    9. '  ' → logprob: -10.327017784118652
    10. ' (' → logprob: -11.202017784118652

Token 44: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7769559621810913
    2. ' <' → logprob: -1.2769559621810913
    3. ' >=' → logprob: -1.5269559621810913
    4. '>' → logprob: -4.276956081390381
    5. ' <=' → logprob: -4.526956081390381
    6. ' ==' → logprob: -5.026956081390381
    7. '<' → logprob: -5.151956081390381
    8. '>=' → logprob: -5.401956081390381
    9. '==' → logprob: -6.901956081390381
    10. '<=' → logprob: -8.026955604553223

Token 45: ' h' (ID: 312)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12564997375011444
    2. 'n' → logprob: -2.375649929046631
    3. ' ' → logprob: -4.000649929046631
    4. '1' → logprob: -5.625649929046631
    5. '3' → logprob: -6.750649929046631
    6. ' h' → logprob: -6.750649929046631
    7. '2' → logprob: -8.250650405883789
    8. 'h' → logprob: -8.625650405883789
    9. '5' → logprob: -9.625650405883789
    10. '0' → logprob: -9.625650405883789

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004702345468103886
    2. ' :' → logprob: -5.379702568054199
    3. ' and' → logprob: -10.5047025680542
    4. '+:' → logprob: -11.0047025680542
    5. ':**' → logprob: -11.5047025680542
    6. '):' → logprob: -12.2547025680542
    7. ':
' → logprob: -12.2547025680542
    8. '+' → logprob: -12.6297025680542
    9. 'and' → logprob: -12.7547025680542
    10. ' *' → logprob: -13.1297025680542

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3923253118991852
    2. ':' → logprob: -2.0173254013061523
    3. ' :' → logprob: -2.3923254013061523
    4. ' ' → logprob: -2.6423254013061523
    5. ' 
' → logprob: -4.892325401306152
    6. '    
' → logprob: -5.267325401306152
    7. '    ' → logprob: -5.517325401306152
    8. '  ' → logprob: -6.017325401306152
    9. ' w' → logprob: -6.142325401306152
    10. '
' → logprob: -6.392325401306152

Token 48: ' x' (ID: 1215)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.34234708547592163
    2. 'print' → logprob: -1.5923471450805664
    3. '   ' → logprob: -3.2173471450805664
    4. ' w' → logprob: -4.217347145080566
    5. ' pass' → logprob: -5.342347145080566
    6. ' #' → logprob: -5.467347145080566
    7. ' h' → logprob: -5.842347145080566
    8. 'w' → logprob: -6.217347145080566
    9. ' for' → logprob: -6.217347145080566
    10. ' space' → logprob: -6.342347145080566

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0495225228369236
    2. ' +=' → logprob: -3.299522638320923
    3. '=' → logprob: -4.549522399902344
    4. '_' → logprob: -7.924522399902344
    5. '+=' → logprob: -9.174522399902344
    6. ',' → logprob: -9.549522399902344
    7. ' -=' → logprob: -10.049522399902344
    8. ' ==' → logprob: -10.299522399902344
    9. 'space' → logprob: -10.424522399902344
    10. '+' → logprob: -10.424522399902344

Token 50: ' n' (ID: 297)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6652186512947083
    2. 'w' → logprob: -0.9152186512947083
    3. '0' → logprob: -3.1652185916900635
    4. ' h' → logprob: -4.040218830108643
    5. ' ' → logprob: -4.540218830108643
    6. 'h' → logprob: -5.040218830108643
    7. '1' → logprob: -5.290218830108643
    8. ' n' → logprob: -7.165218830108643
    9. ' int' → logprob: -7.290218830108643
    10. 'int' → logprob: -7.415218830108643

Token 51: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.24283462762832642
    2. ' //' → logprob: -1.7428345680236816
    3. '%' → logprob: -3.7428345680236816
    4. ' ' → logprob: -4.242834568023682
    5. ' +' → logprob: -7.367834568023682
    6. '//' → logprob: -7.992834568023682
    7. ' *' → logprob: -7.992834568023682
    8. '+' → logprob: -8.36783504486084
    9. ' #' → logprob: -8.36783504486084
    10. ' /' → logprob: -8.74283504486084

Token 52: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02862744778394699
    2. 'h' → logprob: -3.778627395629883
    3. ' w' → logprob: -5.278627395629883
    4. ' h' → logprob: -8.403627395629883
    5. ' ' → logprob: -10.903627395629883
    6. '2' → logprob: -12.153627395629883
    7. '  ' → logprob: -12.341127395629883
    8. '   ' → logprob: -12.528627395629883
    9. '	w' → logprob: -13.466127395629883
    10. ' ' → logprob: -13.466127395629883

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0766087770462036
    2. '+' → logprob: -1.3266087770462036
    3. '<|end|>' → logprob: -1.7016087770462036
    4. 'else' → logprob: -2.201608657836914
    5. ' else' → logprob: -3.076608657836914
    6. ' +' → logprob: -3.576608657836914
    7. ' 
' → logprob: -4.826608657836914
    8. '+
' → logprob: -5.326608657836914
    9. ' ' → logprob: -5.576608657836914
    10. '<|end|>' → logprob: -6.451608657836914

Token 54: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.004577875137329
    2. 'else' → logprob: -1.504577875137329
    3. '<|end|>' → logprob: -1.879577875137329
    4. '+' → logprob: -2.129577875137329
    5. ' else' → logprob: -2.504577875137329
    6. ' +' → logprob: -4.25457763671875
    7. '+
' → logprob: -4.50457763671875
    8. 'if' → logprob: -4.87957763671875
    9. ' 
' → logprob: -5.37957763671875
    10. ' if' → logprob: -5.62957763671875

Token 55: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14885519444942474
    2. 'x' → logprob: -3.273855209350586
    3. ' ' → logprob: -3.398855209350586
    4. '1' → logprob: -4.398855209350586
    5. '0' → logprob: -4.648855209350586
    6. ' +' → logprob: -4.773855209350586
    7. 'y' → logprob: -4.773855209350586
    8. 'w' → logprob: -4.898855209350586
    9. 'n' → logprob: -5.398855209350586
    10. 'if' (adapté à ' if') → logprob: -6.148855209350586

Token 56: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.016166917979717255
    2. 'n' → logprob: -4.141166687011719
    3. ' x' → logprob: -10.516166687011719
    4. ' ' → logprob: -10.516166687011719
    5. ' ' → logprob: -10.641166687011719
    6. ' (' → logprob: -10.766166687011719
    7. 'x' → logprob: -11.641166687011719
    8. '(n' → logprob: -11.766166687011719
    9. ' w' → logprob: -12.016166687011719
    10. '(' → logprob: -12.766166687011719

Token 57: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.043048176914453506
    2. '%' → logprob: -3.168048143386841
    3. ' ' → logprob: -10.043047904968262
    4. ' ' → logprob: -13.168047904968262
    5. '```' → logprob: -14.418047904968262
    6. ' %=' → logprob: -14.918047904968262
    7. '%x' → logprob: -15.105547904968262
    8. '%s' → logprob: -15.230547904968262
    9. '>' → logprob: -15.355547904968262
    10. '%n' → logprob: -15.418047904968262

Token 58: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.08916640281677246
    2. 'w' → logprob: -2.4641664028167725
    3. ' ' → logprob: -8.464166641235352
    4. ' ' → logprob: -12.339166641235352
    5. '<|end|>' → logprob: -12.339166641235352
    6. '	w' → logprob: -12.589166641235352
    7. '  ' → logprob: -14.089166641235352
    8. 'x' → logprob: -14.589166641235352
    9. '_w' → logprob: -14.714166641235352
    10. ''w' → logprob: -14.714166641235352

Token 59: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1971857100725174
    2. '!=' → logprob: -2.072185754776001
    3. ':' → logprob: -3.947185754776001
    4. ' ==' → logprob: -4.197185516357422
    5. '==' → logprob: -4.572185516357422
    6. '>' → logprob: -5.322185516357422
    7. ' >' → logprob: -5.697185516357422
    8. ' :' → logprob: -9.322185516357422
    9. '=' → logprob: -11.322185516357422
    10. ' ' → logprob: -11.322185516357422

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894111216068268
    2. ' ' → logprob: -2.4639410972595215
    3. ' ' → logprob: -13.71394157409668
    4. '  ' → logprob: -15.83894157409668
    5. '   ' → logprob: -16.08894157409668
    6. '=' → logprob: -16.21394157409668
    7. '۰' → logprob: -17.21394157409668
    8. ' ' → logprob: -17.77644157409668
    9. '٠' → logprob: -18.15144157409668
    10. '  ' → logprob: -18.21394157409668

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -16.000804901123047
    4. '  ' → logprob: -17.250804901123047
    5. '۰' → logprob: -17.375804901123047
    6. ' ' → logprob: -17.688304901123047
    7. '０' → logprob: -18.125804901123047
    8. '=' → logprob: -18.250804901123047
    9. 'x' → logprob: -18.375804901123047
    10. '```' → logprob: -18.375804901123047

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023092885967344046
    2. ' :' → logprob: -6.127309322357178
    3. ':
' → logprob: -9.12730884552002
    4. '):' → logprob: -12.37730884552002
    5. ':**' → logprob: -12.62730884552002
    6. ' :
' → logprob: -13.50230884552002
    7. '<|end|>' → logprob: -13.62730884552002
    8. ' and' → logprob: -13.87730884552002
    9. '=' → logprob: -14.12730884552002
    10. '+:' → logprob: -14.62730884552002

Token 63: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7171873450279236
    2. ' x' → logprob: -0.8421873450279236
    3. '   ' → logprob: -2.7171874046325684
    4. '1' → logprob: -4.592187404632568
    5. '       ' → logprob: -6.467187404632568
    6. '+' → logprob: -6.717187404632568
    7. ':
' → logprob: -7.967187404632568
    8. ':' → logprob: -8.21718692779541
    9. '4' → logprob: -8.46718692779541
    10. ' ' → logprob: -8.46718692779541

Token 64: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.23228028416633606
    2. 'x' (adapté à ' x') → logprob: -1.6072802543640137
    3. ' ' → logprob: -5.732280254364014
    4. '1' → logprob: -5.982280254364014
    5. '   ' → logprob: -8.107280731201172
    6. '+' → logprob: -8.357280731201172
    7. '	x' → logprob: -8.732280731201172
    8. '       ' → logprob: -9.607280731201172
    9. ' +' → logprob: -9.732280731201172
    10. '
' → logprob: -9.982280731201172

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47416791319847107
    2. '+=' → logprob: -0.9741679430007935
    3. '=' → logprob: -9.599167823791504
    4. '+' → logprob: -11.099167823791504
    5. ' =' → logprob: -11.849167823791504
    6. ' +' → logprob: -15.224167823791504
    7. ']+=' → logprob: -15.224167823791504
    8. '+='' → logprob: -16.22416877746582
    9. '   ' → logprob: -16.34916877746582
    10. ' ' → logprob: -16.59916877746582

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.000045776367188
    4. ' ' → logprob: -19.875045776367188
    5. '１' → logprob: -20.437545776367188
    6. '  ' → logprob: -20.437545776367188
    7. '<|end|>' → logprob: -20.750045776367188
    8. '```' → logprob: -20.937545776367188
    9. '১' → logprob: -21.250045776367188
    10. '۱' → logprob: -21.562545776367188

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.500051498413086
    4. 'x' → logprob: -18.437551498413086
    5. '  ' → logprob: -18.500051498413086
    6. '<|end|>' → logprob: -18.687551498413086
    7. '```' → logprob: -18.812551498413086
    8. '+' → logprob: -18.875051498413086
    9. '১' → logprob: -19.187551498413086
    10. 'a' → logprob: -19.375051498413086

Token 68: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20250169932842255
    2. 'else' → logprob: -1.827501654624939
    3. '   ' → logprob: -4.9525017738342285
    4. '
' → logprob: -5.3275017738342285
    5. '<|end|>' → logprob: -5.3275017738342285
    6. '#' → logprob: -6.4525017738342285
    7. ' else' → logprob: -6.5775017738342285
    8. ' print' → logprob: -6.5775017738342285
    9. ')' → logprob: -7.8275017738342285
    10. 'x' → logprob: -8.45250129699707

Token 69: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010783927515149117
    2. 'else' → logprob: -5.135784149169922
    3. '
' → logprob: -6.135784149169922
    4. '   ' → logprob: -6.635784149169922
    5. ' print' → logprob: -7.135784149169922
    6. '#' → logprob: -8.385784149169922
    7. ')' → logprob: -9.635784149169922
    8. '\n' → logprob: -9.885784149169922
    9. '#print' → logprob: -9.885784149169922
    10. '<|end|>' → logprob: -9.885784149169922

Token 70: ' raj' (ID: 46358)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08135019987821579
    2. ' print' → logprob: -2.581350088119507
    3. 'else' → logprob: -6.706350326538086
    4. ' else' → logprob: -7.456350326538086
    5. '   ' → logprob: -7.706350326538086
    6. '#' → logprob: -9.331350326538086
    7. '#print' → logprob: -11.081350326538086
    8. '<|end|>' → logprob: -11.706350326538086
    9. '	print' → logprob: -11.831350326538086
    10. ' ' → logprob: -11.831350326538086

Token 71: 'outer' (ID: 5838)
  Prédit: 'oute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.1823711395263672
    2. 'outer' → logprob: -1.8073711395263672
    3. 'outez' → logprob: -6.557371139526367
    4. 'out' → logprob: -8.307371139526367
    5. '-' → logprob: -8.557371139526367
    6. '#' → logprob: -8.682371139526367
    7. '_outer' → logprob: -8.807371139526367
    8. '_' → logprob: -10.057371139526367
    9. '\' → logprob: -10.307371139526367
    10. ' outer' → logprob: -10.307371139526367

Token 72: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.12878182530403137
    2. ' ' → logprob: -3.128781795501709
    3. '1' → logprob: -3.378781795501709
    4. ' un' → logprob: -4.003781795501709
    5. '<|end|>' → logprob: -4.003781795501709
    6. 'une' → logprob: -5.628781795501709
    7. 'un' → logprob: -7.503781795501709
    8. '
' → logprob: -7.878781795501709
    9. ' la' → logprob: -8.628782272338867
    10. 'x' → logprob: -8.628782272338867

Token 73: ' si' (ID: 1784)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5272638201713562
    2. 'ligne' → logprob: -2.152263879776001
    3. ' ligne' → logprob: -2.527263879776001
    4. ' espace' → logprob: -3.152263879776001
    5. ' étage' → logprob: -3.402263879776001
    6. 'é' → logprob: -3.902263879776001
    7. ' ' → logprob: -4.277263641357422
    8. 'x' → logprob: -4.527263641357422
    9. 'es' → logprob: -4.902263641357422
    10. '1' → logprob: -5.152263641357422

Token 74: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' tombe' (ID: 106773)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.0146090984344482
    2. 'ne' → logprob: -1.0146090984344482
    3. 'n' → logprob: -2.3896090984344482
    4. ' n' → logprob: -2.8896090984344482
    5. ' dépasse' → logprob: -3.2646090984344482
    6. 'continue' → logprob: -3.8896090984344482
    7. ' prend' → logprob: -4.264609336853027
    8. ' continue' → logprob: -4.389609336853027
    9. 'reste' → logprob: -5.389609336853027
    10. ' ' → logprob: -5.514609336853027

Token 76: ' pas' (ID: 2173)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1919467449188232
    2. '<|end|>' → logprob: -1.9419467449188232
    3. ' else' → logprob: -2.0669467449188232
    4. ' ' → logprob: -2.8169467449188232
    5. ' dans' → logprob: -3.3169467449188232
    6. ' au' → logprob: -3.4419467449188232
    7. '#' → logprob: -3.5669467449188232
    8. 'sur' → logprob: -3.5669467449188232
    9. ' sur' → logprob: -3.8169467449188232
    10. 'dans' → logprob: -4.066946983337402

Token 77: ' pile' (ID: 39732)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8776587843894958
    2. '<|end|>' → logprob: -1.7526588439941406
    3. ' else' → logprob: -2.3776588439941406
    4. ' ' → logprob: -2.5026588439941406
    5. ' bien' → logprob: -2.8776588439941406
    6. ' juste' → logprob: -3.1276588439941406
    7. '#' → logprob: -4.252658843994141
    8. 'just' → logprob: -4.502658843994141
    9. 'au' → logprob: -4.502658843994141
    10. ' ailleurs' → logprob: -4.627658843994141

Token 78: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025703064166009426
    2. ' print' → logprob: -6.627570152282715
    3. 'else' → logprob: -7.502570152282715
    4. '
' → logprob: -7.502570152282715
    5. '#' → logprob: -10.002570152282715
    6. '<|end|>' → logprob: -10.627570152282715
    7. '#print' → logprob: -11.002570152282715
    8. ' else' → logprob: -11.502570152282715
    9. '
' → logprob: -11.627570152282715
    10. '   ' → logprob: -11.877570152282715

Token 79: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012582525610923767
    2. 'else' → logprob: -4.762582302093506
    3. ' print' → logprob: -5.762582302093506
    4. ' else' → logprob: -8.012582778930664
    5. '
' → logprob: -8.137582778930664
    6. '#' → logprob: -9.762582778930664
    7. '<|end|>' → logprob: -10.137582778930664
    8. '#print' → logprob: -10.637582778930664
    9. '   ' → logprob: -11.137582778930664
    10. '(print' → logprob: -12.012582778930664

Token 80: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.027193646878004074
    2. ' print' → logprob: -3.777193546295166
    3. 'else' → logprob: -5.652193546295166
    4. ' else' → logprob: -8.527194023132324
    5. '   ' → logprob: -9.277194023132324
    6. '
' → logprob: -10.027194023132324
    7. '#' → logprob: -10.527194023132324
    8. '#print' → logprob: -11.652194023132324
    9. 'y' → logprob: -11.902194023132324
    10. '    
' → logprob: -12.027194023132324

Token 81: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0021971215028315783
    2. '(' → logprob: -6.127197265625
    3. ' (' → logprob: -11.877197265625
    4. 'x' → logprob: -12.752197265625
    5. '((' → logprob: -13.502197265625
    6. '(
' → logprob: -15.252197265625
    7. '()' → logprob: -15.377197265625
    8. '(int' → logprob: -15.877197265625
    9. '(f' → logprob: -17.002197265625
    10. '(s' → logprob: -17.252197265625

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '))' → logprob: -17.000001907348633
    5. ')#' → logprob: -17.625001907348633
    6. '')' → logprob: -17.875001907348633
    7. ')}' → logprob: -18.250001907348633
    8. ')`' → logprob: -18.250001907348633
    9. '）' → logprob: -19.250001907348633
    10. '}' → logprob: -19.500001907348633

Token 83: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011716444045305252
    2. ':
' → logprob: -4.886716365814209
    3. '   ' → logprob: -5.511716365814209
    4. ' :' → logprob: -10.136716842651367
    5. 'x' → logprob: -11.636716842651367
    6. ':
' → logprob: -12.511716842651367
    7. 'n' → logprob: -12.761716842651367
    8. ' :
' → logprob: -12.761716842651367
    9. ')' → logprob: -14.386716842651367
    10. '  ' → logprob: -14.511716842651367

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17604388296604156
    2. 'y' → logprob: -2.92604398727417
    3. 'n' → logprob: -3.05104398727417
    4. 'h' → logprob: -3.55104398727417
    5. 'w' → logprob: -4.30104398727417
    6. 'x' → logprob: -4.67604398727417
    7. '1' → logprob: -5.92604398727417
    8. '(' → logprob: -6.42604398727417
    9. ' (' → logprob: -7.17604398727417
    10. '(n' → logprob: -7.17604398727417

Token 86: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08454351872205734
    2. 'x' → logprob: -2.709543466567993
    3. 'n' → logprob: -4.709543704986572
    4. '   ' → logprob: -6.209543704986572
    5. 'w' → logprob: -6.334543704986572
    6. ' y' → logprob: -7.584543704986572
    7. 'h' → logprob: -7.709543704986572
    8. 'print' → logprob: -7.959543704986572
    9. 'import' → logprob: -9.459543228149414
    10. '#' (adapté à ' #') → logprob: -9.584543228149414

Token 87: ' Par' (ID: 3371)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07930480688810349
    2. 'y' → logprob: -2.5793046951293945
    3. 'print' → logprob: -9.079304695129395
    4. ' x' → logprob: -9.954304695129395
    5. '#' → logprob: -10.079304695129395
    6. ' y' → logprob: -10.079304695129395
    7. 'n' → logprob: -10.079304695129395
    8. 'pass' → logprob: -10.454304695129395
    9. '   ' → logprob: -10.704304695129395
    10. 'w' → logprob: -11.079304695129395

Token 88: 'fois' (ID: 27733)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5936762690544128
    2. 'ce' → logprob: -1.5936763286590576
    3. 'else' → logprob: -2.0936763286590576
    4. 't' → logprob: -4.0936760902404785
    5. 'print' → logprob: -4.8436760902404785
    6. ' #' → logprob: -4.9686760902404785
    7. 'l' → logprob: -4.9686760902404785
    8. 'fois' → logprob: -5.0936760902404785
    9. ' else' → logprob: -5.2186760902404785
    10. 'def' → logprob: -5.2186760902404785

Token 89: ' H' (ID: 487)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.473428338766098
    2. ' x' → logprob: -1.5984283685684204
    3. '   ' → logprob: -2.723428249359131
    4. ' y' → logprob: -2.973428249359131
    5. 'y' → logprob: -3.973428249359131
    6. ' n' → logprob: -4.098428249359131
    7. 'n' → logprob: -4.348428249359131
    8. '#' → logprob: -5.598428249359131
    9. 'w' → logprob: -6.473428249359131
    10. ' #' → logprob: -7.348428249359131

Token 90: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5117474794387817
    2. 'x' → logprob: -1.7617474794387817
    3. '=' → logprob: -3.261747360229492
    4. '#' → logprob: -3.386747360229492
    5. ' ' → logprob: -3.761747360229492
    6. ' x' → logprob: -4.011747360229492
    7. ' =' → logprob: -4.011747360229492
    8. '  ' → logprob: -4.136747360229492
    9. '    ' → logprob: -4.261747360229492
    10. ' #' → logprob: -4.636747360229492

Token 91: ' plus' (ID: 2932)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -1.1436450481414795
    2. 'plus' → logprob: -1.5186450481414795
    3. 'util' → logprob: -1.6436450481414795
    4. 'le' → logprob: -3.5186450481414795
    5. 'sup' → logprob: -3.5186450481414795
    6. 'n' → logprob: -3.7686450481414795
    7. ' mieux' → logprob: -3.7686450481414795
    8. ' plus' → logprob: -3.8936450481414795
    9. 'l' → logprob: -4.393645286560059
    10. 'x' → logprob: -4.643645286560059

Token 92: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.13255372643470764
    2. 'gr' → logprob: -3.257553815841675
    3. 'pr' → logprob: -3.507553815841675
    4. 'pet' → logprob: -4.007553577423096
    5. '```' → logprob: -5.007553577423096
    6. 'utile' → logprob: -5.382553577423096
    7. 'int' → logprob: -5.507553577423096
    8. ' grand' → logprob: -5.507553577423096
    9. 'important' → logprob: -5.507553577423096
    10. 'haut' → logprob: -6.007553577423096

Token 93: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018750421702861786
    2. 'x' → logprob: -4.393750190734863
    3. ' x' → logprob: -5.768750190734863
    4. 'n' → logprob: -7.268750190734863
    5. ' n' → logprob: -7.643750190734863
    6. ',' → logprob: -7.768750190734863
    7. '  ' → logprob: -8.018750190734863
    8. '    
' → logprob: -8.393750190734863
    9. '#' → logprob: -8.893750190734863
    10. '    ' → logprob: -9.018750190734863

Token 94: ' du' (ID: 1462)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.404218465089798
    2. 'x' → logprob: -1.9042184352874756
    3. ' y' → logprob: -1.9042184352874756
    4. '   ' → logprob: -3.6542184352874756
    5. ' x' → logprob: -5.029218673706055
    6. '#' → logprob: -7.029218673706055
    7. 'm' → logprob: -8.154218673706055
    8. 'n' → logprob: -8.529218673706055
    9. ' ' → logprob: -9.029218673706055
    10. 'print' → logprob: -9.154218673706055

Token 95: ' coup' (ID: 25465)
  Prédit: ' coup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coup' → logprob: -0.10167696326971054
    2. 'c' → logprob: -2.3516769409179688
    3. '```' → logprob: -6.976676940917969
    4. ' coups' → logprob: -8.976676940917969
    5. '   ' → logprob: -9.351676940917969
    6. 'cou' → logprob: -9.601676940917969
    7. ' c' → logprob: -9.976676940917969
    8. 'co' → logprob: -10.351676940917969
    9. '#' → logprob: -11.101676940917969
    10. ' ' → logprob: -11.351676940917969

Token 96: ' on' (ID: 402)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03312491998076439
    2. ' y' → logprob: -4.283124923706055
    3. '   ' → logprob: -4.408124923706055
    4. 'x' → logprob: -5.033124923706055
    5. ' x' → logprob: -10.908124923706055
    6. '	y' → logprob: -10.908124923706055
    7. 'import' → logprob: -11.283124923706055
    8. 'n' → logprob: -11.658124923706055
    9. '```' → logprob: -12.408124923706055
    10. '#' → logprob: -12.783124923706055

Token 97: ' change' (ID: 3343)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7125896215438843
    2. 'fait' → logprob: -1.3375896215438843
    3. 'n' → logprob: -2.962589740753174
    4. '#' → logprob: -3.087589740753174
    5. ' fais' → logprob: -3.587589740753174
    6. ' fait' → logprob: -3.712589740753174
    7. ' n' → logprob: -4.212589740753174
    8. ' #' → logprob: -4.587589740753174
    9. 's' → logprob: -4.587589740753174
    10. 'vais' → logprob: -4.587589740753174

Token 98: ' un' (ID: 537)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2979520857334137
    2. 'x' → logprob: -1.4229520559310913
    3. '   ' → logprob: -4.422952175140381
    4. ' y' → logprob: -6.172952175140381
    5. 'n' → logprob: -6.297952175140381
    6. 'w' → logprob: -8.172951698303223
    7. 't' → logprob: -8.922951698303223
    8. ' x' → logprob: -8.922951698303223
    9. 'h' → logprob: -9.922951698303223
    10. 'm' → logprob: -10.172951698303223

Token 99: ' peu' (ID: 9235)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08795163780450821
    2. ' w' → logprob: -4.08795166015625
    3. 'h' → logprob: -4.21295166015625
    4. 'e' → logprob: -4.21295166015625
    5. 'x' → logprob: -4.46295166015625
    6. ' sens' → logprob: -5.08795166015625
    7. 'n' → logprob: -5.33795166015625
    8. ' h' → logprob: -5.71295166015625
    9. 'l' → logprob: -6.46295166015625
    10. 'sens' → logprob: -6.58795166015625

Token 100: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22636263072490692
    2. 'y' → logprob: -1.6013625860214233
    3. ' y' → logprob: -7.851362705230713
    4. '   ' → logprob: -8.351362228393555
    5. ' x' → logprob: -8.601362228393555
    6. 'n' → logprob: -8.976362228393555
    7. '```' → logprob: -12.851362228393555
    8. 'w' → logprob: -13.226362228393555
    9. 'm' → logprob: -13.226362228393555
    10. 'rows' → logprob: -13.601362228393555

Token 101: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48125240206718445
    2. 'y' → logprob: -0.9812524318695068
    3. '   ' → logprob: -5.481252193450928
    4. ' y' → logprob: -6.106252193450928
    5. ' x' → logprob: -7.231252193450928
    6. 'rows' → logprob: -11.731252670288086
    7. 'n' → logprob: -12.106252670288086
    8. 'lines' → logprob: -12.981252670288086
    9. '```' → logprob: -13.231252670288086
    10. 'h' → logprob: -13.481252670288086

Token 102: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3141501247882843
    2. 'y' (adapté à ' y') → logprob: -1.314150094985962
    3. ' y' → logprob: -7.564150333404541
    4. ' x' → logprob: -8.564149856567383
    5. '   ' → logprob: -8.814149856567383
    6. 'n' → logprob: -12.064149856567383
    7. 'import' → logprob: -12.189149856567383
    8. 'rows' → logprob: -12.564149856567383
    9. 'if' → logprob: -12.814149856567383
    10. '#' → logprob: -12.939149856567383

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029754308983683586
    2. '=' → logprob: -3.529754400253296
    3. 'x' → logprob: -13.654754638671875
    4. ' ' → logprob: -13.904754638671875
    5. '=n' → logprob: -14.404754638671875
    6. '   ' → logprob: -14.529754638671875
    7. 'w' → logprob: -15.529754638671875
    8. '=x' → logprob: -16.029754638671875
    9. ' x' → logprob: -16.404754638671875
    10. 'n' → logprob: -16.967254638671875

Token 104: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28116708993911743
    2. ' n' → logprob: -1.4061670303344727
    3. ' (' → logprob: -12.156167030334473
    4. ' ' → logprob: -12.531167030334473
    5. '   ' → logprob: -13.281167030334473
    6. 'h' → logprob: -13.406167030334473
    7. '(n' → logprob: -13.656167030334473
    8. 'w' → logprob: -14.156167030334473
    9. '(' → logprob: -14.281167030334473
    10. '0' → logprob: -15.156167030334473

Token 105: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0181913822889328
    2. '//' → logprob: -4.018191337585449
    3. ' ' → logprob: -10.89319133758545
    4. ' #' → logprob: -12.14319133758545
    5. 'w' → logprob: -12.51819133758545
    6. ' ' → logprob: -12.51819133758545
    7. ' /' → logprob: -12.76819133758545
    8. '#' → logprob: -13.14319133758545
    9. ' //
' → logprob: -14.14319133758545
    10. '"' → logprob: -14.58069133758545

Token 106: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.4855663721391466e-05
    2. ' h' → logprob: -11.125015258789062
    3. 'w' → logprob: -18.250015258789062
    4. '   ' → logprob: -18.375015258789062
    5. '	h' → logprob: -18.500015258789062
    6. ' ' → logprob: -20.375015258789062
    7. '<h' → logprob: -21.750015258789062
    8. '  ' → logprob: -22.250015258789062
    9. '_h' → logprob: -23.000015258789062
    10. ' ' → logprob: -23.125015258789062

Token 107: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3871304988861084
    2. '   ' → logprob: -1.1371304988861084
    3. ' if' → logprob: -8.887130737304688
    4. '
' → logprob: -9.387130737304688
    5. '```' → logprob: -11.137130737304688
    6. '	if' → logprob: -12.012130737304688
    7. '<|end|>' → logprob: -12.012130737304688
    8. '    
' → logprob: -12.387130737304688
    9. '  ' → logprob: -13.137130737304688
    10. ' ' → logprob: -13.262130737304688

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01109557319432497
    2. 'if' → logprob: -4.5110955238342285
    3. '<|end|>' → logprob: -10.511096000671387
    4. ' if' → logprob: -11.261096000671387
    5. '```' → logprob: -12.636096000671387
    6. '
' → logprob: -12.886096000671387
    7. '	if' → logprob: -13.886096000671387
    8. '       ' → logprob: -15.011096000671387
    9. '    
' → logprob: -15.511096000671387
    10. ' ' → logprob: -16.01109504699707

Token 109: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.252040833234787
    2. 'if' (adapté à ' if') → logprob: -1.5020408630371094
    3. ' if' → logprob: -9.12704086303711
    4. '       ' → logprob: -13.75204086303711
    5. ' ' → logprob: -14.25204086303711
    6. '```' → logprob: -14.50204086303711
    7. '	if' → logprob: -14.87704086303711
    8. '  ' → logprob: -15.62704086303711
    9. '
' → logprob: -16.25204086303711
    10. 'If' → logprob: -16.87704086303711

Token 110: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0336565300822258
    2. 'n' → logprob: -3.408656597137451
    3. '(n' → logprob: -12.783656120300293
    4. ' (' → logprob: -12.908656120300293
    5. '   ' → logprob: -13.408656120300293
    6. ' ' → logprob: -13.658656120300293
    7. ' ' → logprob: -13.658656120300293
    8. '	n' → logprob: -14.658656120300293
    9. ' y' → logprob: -15.096156120300293
    10. '(' → logprob: -16.28365707397461

Token 111: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2014189064502716
    2. '%' → logprob: -1.7014188766479492
    3. ' ' → logprob: -12.95141887664795
    4. ' ' → logprob: -13.07641887664795
    5. 'h' → logprob: -14.95141887664795
    6. 'y' → logprob: -15.70141887664795
    7. '```' → logprob: -15.82641887664795
    8. ' y' → logprob: -15.95141887664795
    9. '   ' → logprob: -16.451419830322266
    10. '%s' → logprob: -17.076419830322266

Token 112: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.16022604703903198
    2. ' h' → logprob: -1.9102261066436768
    3. '   ' → logprob: -14.285225868225098
    4. '	h' → logprob: -14.535225868225098
    5. ' ' → logprob: -14.660225868225098
    6. '  ' → logprob: -16.910226821899414
    7. '<|end|>' → logprob: -17.035226821899414
    8. ' ' → logprob: -17.410226821899414
    9. '_h' → logprob: -17.660226821899414
    10. '>' → logprob: -17.785226821899414

Token 113: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.47408756613731384
    2. ' !=' → logprob: -0.9740875959396362
    3. '()!=' → logprob: -11.849087715148926
    4. ')!=' → logprob: -13.724087715148926
    5. ':' → logprob: -14.224087715148926
    6. '   ' → logprob: -14.724087715148926
    7. '>' → logprob: -15.224087715148926
    8. '```' → logprob: -15.349087715148926
    9. '!='' → logprob: -15.974087715148926
    10. '!==' → logprob: -15.974087715148926

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009761521592736244
    2. ' ' → logprob: -4.634761333465576
    3. '1' → logprob: -13.384761810302734
    4. '   ' → logprob: -13.884761810302734
    5. 'not' → logprob: -13.884761810302734
    6. '!=' → logprob: -14.134761810302734
    7. '>' → logprob: -14.759761810302734
    8. '!' → logprob: -15.634761810302734
    9. ' not' → logprob: -15.759761810302734
    10. ' ' → logprob: -15.884761810302734

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035238542477600276
    2. ' ' → logprob: -8.00035285949707
    3. '1' → logprob: -11.50035285949707
    4. 'not' → logprob: -13.75035285949707
    5. '!=' → logprob: -13.87535285949707
    6. '   ' → logprob: -13.87535285949707
    7. '!' → logprob: -14.00035285949707
    8. '>' → logprob: -14.37535285949707
    9. '```' → logprob: -14.37535285949707
    10. ':' → logprob: -15.00035285949707

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20648890733718872
    2. ':
' → logprob: -1.706488847732544
    3. '       ' → logprob: -5.331489086151123
    4. '   ' → logprob: -8.581488609313965
    5. '):
' → logprob: -11.956488609313965
    6. ':

' → logprob: -12.081488609313965
    7. ':
' → logprob: -12.581488609313965
    8. ' y' → logprob: -12.706488609313965
    9. '==' → logprob: -12.831488609313965
    10. ' :' → logprob: -12.956488609313965

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4301360249519348
    2. '   ' → logprob: -1.05513596534729
    3. 'y' → logprob: -7.305136203765869
    4. ' y' → logprob: -7.305136203765869
    5. 'else' → logprob: -10.805135726928711
    6. '	y' → logprob: -11.055135726928711
    7. ':' → logprob: -11.180135726928711
    8. ':
' → logprob: -11.555135726928711
    9. 'print' → logprob: -12.055135726928711
    10. '      ' → logprob: -12.055135726928711

Token 118: ' print' (ID: 2123)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04926665499806404
    2. 'print' (adapté à ' print') → logprob: -3.0492665767669678
    3. '   ' → logprob: -7.924266815185547
    4. ' y' → logprob: -8.174266815185547
    5. ' print' → logprob: -11.049266815185547
    6. '       ' → logprob: -11.424266815185547
    7. 'x' → logprob: -12.424266815185547
    8. '	y' → logprob: -13.674266815185547
    9. 'pass' → logprob: -13.924266815185547
    10. '```' → logprob: -14.049266815185547

Token 119: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.05490913987159729
    2. 'y' → logprob: -2.9299092292785645
    3. '(' → logprob: -10.804908752441406
    4. ' y' → logprob: -13.179908752441406
    5. '(x' → logprob: -13.304908752441406
    6. ' (' → logprob: -14.054908752441406
    7. '(
' → logprob: -14.554908752441406
    8. 'x' → logprob: -14.929908752441406
    9. ''y' → logprob: -14.929908752441406
    10. '(n' → logprob: -15.304908752441406

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1819506585597992
    2. ')
' → logprob: -2.181950569152832
    3. '   ' → logprob: -2.931950569152832
    4. '+' → logprob: -9.181950569152832
    5. ' )' → logprob: -9.306950569152832
    6. ' )
' → logprob: -10.681950569152832
    7. ')
' → logprob: -11.806950569152832
    8. '       ' → logprob: -12.056950569152832
    9. 'else' → logprob: -13.056950569152832
    10. ' +' → logprob: -13.056950569152832

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31333935260772705
    2. 'else' → logprob: -1.313339352607727
    3. ' else' → logprob: -9.563339233398438
    4. '       ' → logprob: -12.188339233398438
    5. 'elif' → logprob: -13.688339233398438
    6. '	else' → logprob: -14.688339233398438
    7. '```' → logprob: -15.688339233398438
    8. ' ' → logprob: -16.188339233398438
    9. '  ' → logprob: -16.313339233398438
    10. '}else' → logprob: -16.938339233398438

Token 122: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0003811025235336274
    2. ' else' → logprob: -8.000381469726562
    3. '   ' → logprob: -10.000381469726562
    4. 'elif' → logprob: -15.750381469726562
    5. '	else' → logprob: -17.000381469726562
    6. ' ' → logprob: -17.750381469726562
    7. '```' → logprob: -18.625381469726562
    8. '  ' → logprob: -19.000381469726562
    9. '       ' → logprob: -19.250381469726562
    10. ')' → logprob: -19.500381469726562

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2290664166212082
    2. '       ' → logprob: -1.6040663719177246
    3. ':
' → logprob: -5.729066371917725
    4. '   ' → logprob: -7.854066371917725
    5. ' :' → logprob: -13.104066848754883
    6. '    ' → logprob: -13.979066848754883
    7. ':
' → logprob: -14.104066848754883
    8. '     ' → logprob: -14.229066848754883
    9. '      ' → logprob: -14.604066848754883
    10. '(' → logprob: -14.604066848754883

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008249306119978428
    2. 'print' → logprob: -5.008249282836914
    3. '   ' → logprob: -7.008249282836914
    4. ' print' → logprob: -7.383249282836914
    5. '     ' → logprob: -12.883249282836914
    6. '           ' → logprob: -13.633249282836914
    7. '    ' → logprob: -14.383249282836914
    8. '```' → logprob: -14.383249282836914
    9. '	print' → logprob: -14.758249282836914
    10. '
' → logprob: -14.758249282836914

Token 125: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004141072859056294
    2. ' print' → logprob: -8.37541389465332
    3. '       ' → logprob: -8.62541389465332
    4. '   ' → logprob: -12.62541389465332
    5. 'y' → logprob: -14.62541389465332
    6. '	print' → logprob: -16.00041389465332
    7. ' y' → logprob: -16.50041389465332
    8. ' ' → logprob: -17.37541389465332
    9. '```' → logprob: -18.75041389465332
    10. '  ' → logprob: -18.87541389465332

Token 126: ' Ici' (ID: 145754)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005353770684450865
    2. ' print' → logprob: -5.255353927612305
    3. '   ' → logprob: -9.505353927612305
    4. '       ' → logprob: -10.505353927612305
    5. 'y' → logprob: -11.630353927612305
    6. ' y' → logprob: -11.880353927612305
    7. ' ' → logprob: -13.755353927612305
    8. '  ' → logprob: -14.880353927612305
    9. '	print' → logprob: -15.005353927612305
    10. '    ' → logprob: -15.755353927612305

Token 127: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013548527844250202
    2. '   ' → logprob: -4.763548374176025
    3. 'print' → logprob: -5.763548374176025
    4. ' print' → logprob: -6.888548374176025
    5. '           ' → logprob: -7.388548374176025
    6. ':' → logprob: -9.513548851013184
    7. '    ' → logprob: -11.138548851013184
    8. '     ' → logprob: -11.263548851013184
    9. '      ' → logprob: -12.138548851013184
    10. '        ' → logprob: -12.263548851013184

Token 128: ''aj' (ID: 116735)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45482316613197327
    2. '    ' → logprob: -2.0798232555389404
    3. 'print' → logprob: -2.3298232555389404
    4. '       ' → logprob: -3.2048232555389404
    5. 'e' → logprob: -3.3298232555389404
    6. '     ' → logprob: -4.329823017120361
    7. '  ' → logprob: -4.579823017120361
    8. ' print' → logprob: -4.954823017120361
    9. '      ' → logprob: -5.204823017120361
    10. ' +=' → logprob: -5.329823017120361

Token 129: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -3.130576806142926e-05
    2. 'outer' → logprob: -10.500031471252441
    3. 'outez' → logprob: -13.625031471252441
    4. 'out' → logprob: -14.125031471252441
    5. 'o' → logprob: -14.375031471252441
    6. '#' → logprob: -14.750031471252441
    7. 'outes' → logprob: -15.000031471252441
    8. '
' → logprob: -16.375030517578125
    9. 'uste' → logprob: -16.625030517578125
    10. 'ou' → logprob: -16.875030517578125

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017694108188152313
    2. ' ' → logprob: -5.017693996429443
    3. 'y' → logprob: -5.017693996429443
    4. ' y' → logprob: -5.517693996429443
    5. '   ' → logprob: -8.517694473266602
    6. 'print' → logprob: -10.267694473266602
    7. 'un' → logprob: -11.892694473266602
    8. '(y' → logprob: -11.892694473266602
    9. ' un' → logprob: -12.392694473266602
    10. ' one' → logprob: -12.392694473266602

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002209973521530628
    2. 'y' → logprob: -6.2522101402282715
    3. 'un' → logprob: -8.627209663391113
    4. 'une' → logprob: -10.127209663391113
    5. ' ' → logprob: -10.502209663391113
    6. '   ' → logprob: -11.502209663391113
    7. 'print' → logprob: -11.502209663391113
    8. ' y' → logprob: -11.502209663391113
    9. 'n' → logprob: -14.252209663391113
    10. 'x' → logprob: -14.377209663391113

Token 132: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09370440244674683
    2. 'print' → logprob: -2.4687044620513916
    3. '           ' → logprob: -5.7187042236328125
    4. '   ' → logprob: -7.2187042236328125
    5. '
' → logprob: -8.468704223632812
    6. ' print' → logprob: -8.468704223632812
    7. ')' → logprob: -9.468704223632812
    8. '```' → logprob: -9.593704223632812
    9. ')
' → logprob: -9.718704223632812
    10. '        ' → logprob: -10.968704223632812

Token 133: ' reste' (ID: 26769)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7476302981376648
    2. ' n' → logprob: -1.2476303577423096
    3. 'n' → logprob: -1.6226303577423096
    4. 'y' → logprob: -4.1226301193237305
    5. 'not' → logprob: -5.1226301193237305
    6. '(n' → logprob: -5.2476301193237305
    7. ' not' → logprob: -5.6226301193237305
    8. ' on' → logprob: -6.3726301193237305
    9. ' ' → logprob: -6.6226301193237305
    10. ' (' → logprob: -6.7476301193237305

Token 134: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012858292320743203
    2. 'print' → logprob: -7.376286029815674
    3. '   ' → logprob: -7.626286029815674
    4. '           ' → logprob: -9.001285552978516
    5. ' print' → logprob: -10.876285552978516
    6. '
' → logprob: -11.876285552978516
    7. ' y' → logprob: -11.876285552978516
    8. '      ' → logprob: -12.751285552978516
    9. '     ' → logprob: -13.001285552978516
    10. '    ' → logprob: -13.251285552978516

Token 136: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.026707788929343224
    2. ' print' → logprob: -4.276707649230957
    3. '       ' → logprob: -4.401707649230957
    4. '   ' → logprob: -8.526707649230957
    5. ' y' → logprob: -13.151707649230957
    6. '           ' → logprob: -13.276707649230957
    7. '	print' → logprob: -13.401707649230957
    8. '    ' → logprob: -13.526707649230957
    9. ' ' → logprob: -13.651707649230957
    10. '        ' → logprob: -13.651707649230957

Token 137: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.166338137816638e-05
    2. '(' → logprob: -10.375031471252441
    3. 'y' → logprob: -14.750031471252441
    4. '((' → logprob: -17.375032424926758
    5. ' (' → logprob: -18.500032424926758
    6. '(
' → logprob: -18.500032424926758
    7. '(x' → logprob: -18.875032424926758
    8. ' y' → logprob: -19.250032424926758
    9. '()' → logprob: -19.250032424926758
    10. '(z' → logprob: -21.250032424926758

Token 138: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029777804389595985
    2. ' +' → logprob: -3.529777765274048
    3. ')' → logprob: -10.529777526855469
    4. '+)' → logprob: -15.154777526855469
    5. ')+' → logprob: -15.529777526855469
    6. '   ' → logprob: -16.52977752685547
    7. '+
' → logprob: -17.27977752685547
    8. ' ' → logprob: -18.27977752685547
    9. '()+' → logprob: -18.65477752685547
    10. '1' → logprob: -18.77977752685547

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '```' → logprob: -18.375001907348633
    5. ')' → logprob: -20.000001907348633
    6. '`' → logprob: -21.625001907348633
    7. '
' → logprob: -21.875001907348633
    8. '  ' → logprob: -22.125001907348633
    9. '１' → logprob: -22.750001907348633
    10. '       ' → logprob: -22.875001907348633

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.500000953674316
    4. ' )' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.250001907348633
    6. ')#' → logprob: -17.875001907348633
    7. ')}' → logprob: -18.750001907348633
    8. '`)' → logprob: -19.000001907348633
    9. ')")' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 141: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' Je' (ID: 4678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' pense' (ID: 29077)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' ça' (ID: 13590)
  Prédit: ' rien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rien' → logprob: -0.7004364132881165
    2. ' ' → logprob: -0.9504364132881165
    3. ' #' → logprob: -3.9504363536834717
    4. '#' → logprob: -3.9504363536834717
    5. '<|end|>' → logprob: -4.575436592102051
    6. ' ' → logprob: -4.575436592102051
    7. ' nothing' → logprob: -5.075436592102051
    8. ' code' → logprob: -5.325436592102051
    9. ' la' → logprob: -5.325436592102051
    10. ' ce' → logprob: -5.450436592102051

Token 146: ' devrait' (ID: 52773)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6351171731948853
    2. ' continue' → logprob: -1.6351171731948853
    3. '<|end|>' → logprob: -1.8851171731948853
    4. ' s' → logprob: -2.2601170539855957
    5. ' fonctionne' → logprob: -2.2601170539855957
    6. '#' → logprob: -3.5101170539855957
    7. 'continue' → logprob: -3.6351170539855957
    8. ' ' → logprob: -4.010117053985596
    9. '```' → logprob: -4.135117053985596
    10. 'f' → logprob: -4.260117053985596

Token 147: ' marcher' (ID: 171848)
  Prédit: ' fonctionner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctionner' → logprob: -0.26357829570770264
    2. 'fonction' → logprob: -1.8885782957077026
    3. 'faire' → logprob: -3.388578414916992
    4. ' suff' → logprob: -4.388578414916992
    5. ' marcher' → logprob: -4.638578414916992
    6. 's' → logprob: -4.888578414916992
    7. 'f' → logprob: -5.388578414916992
    8. 'être' → logprob: -5.638578414916992
    9. ' ' → logprob: -6.513578414916992
    10. '#' → logprob: -6.638578414916992

Token 148: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' sinon' (ID: 52915)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' faudra' (ID: 88501)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' voir' (ID: 20611)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.934381365776062
    2. ' tester' → logprob: -1.309381365776062
    3. 'aj' → logprob: -2.4343814849853516
    4. 'tester' → logprob: -2.9343814849853516
    5. 'ré' → logprob: -3.0593814849853516
    6. 're' → logprob: -3.9343814849853516
    7. 'contin' → logprob: -4.434381484985352
    8. ' essayer' → logprob: -4.559381484985352
    9. ' continuer' → logprob: -4.684381484985352
    10. 'ess' → logprob: -4.809381484985352


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 149
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 27.52%
Précision adaptée (1ère position): 29.53%
Précision (top 10): 57.72%
================================================================================
