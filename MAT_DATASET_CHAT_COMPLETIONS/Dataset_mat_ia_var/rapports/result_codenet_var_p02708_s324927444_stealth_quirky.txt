================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
M=10**9+7
exec("x,y=map(int,input().split())\nz=0\nfor Q in range(y,x+2):\n P=Q*(Q-1)//2\n S=x*(x+1)//2-(x-Q)*(x-Q+1)//2\n z=(z+S+1-P)%M\nprint(z)")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'M' (ID: 44)
  → Token d'amorce (pas de prédiction)

Token 1: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 2: '10' (ID: 702)
  → Token d'amorce (pas de prédiction)

Token 3: '**' (ID: 410)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3382841646671295
    2. '*' → logprob: -1.3382841348648071
    3. '\' → logprob: -5.088284015655518
    4. '\n' → logprob: -5.088284015655518
    5. '#' → logprob: -5.338284015655518
    6. '=' → logprob: -6.463284015655518
    7. '**' → logprob: -6.713284015655518
    8. ' ' → logprob: -7.213284015655518
    9. ';' → logprob: -7.463284015655518
    10. ' +' → logprob: -7.463284015655518

Token 4: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.013880567625164986
    2. '3' → logprob: -4.888880729675293
    3. '9' → logprob: -5.263880729675293
    4. '-' → logprob: -7.013880729675293
    5. '2' → logprob: -10.138880729675293
    6. '7' → logprob: -10.138880729675293
    7. ' ' → logprob: -10.388880729675293
    8. '```' → logprob: -10.513880729675293
    9. '8' → logprob: -10.888880729675293
    10. '0' → logprob: -11.638880729675293

Token 5: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003401451976969838
    2. ' ' → logprob: -6.878401279449463
    3. ' +' → logprob: -7.003401279449463
    4. '*' → logprob: -7.378401279449463
    5. '-' → logprob: -8.128401756286621
    6. '**' → logprob: -9.003401756286621
    7. ',' → logprob: -9.253401756286621
    8. '```' → logprob: -9.378401756286621
    9. '.' → logprob: -9.753401756286621
    10. '#' → logprob: -10.128401756286621

Token 6: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.981667537620524e-06
    2. '+' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '```' → logprob: -15.875001907348633
    5. '07' → logprob: -16.375001907348633
    6. '9' → logprob: -16.875001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '17' → logprob: -18.437501907348633
    9. '37' → logprob: -19.375001907348633
    10. '' → logprob: -19.437501907348633

Token 7: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2742961645126343
    2. ',' → logprob: -3.024296283721924
    3. '\' → logprob: -3.024296283721924
    4. '```' → logprob: -3.274296283721924
    5. '#' → logprob: -3.524296283721924
    6. '**' → logprob: -4.024296283721924
    7. '\n' → logprob: -4.149296283721924
    8. '<|end|>' → logprob: -4.524296283721924
    9. ' ' → logprob: -4.774296283721924
    10. ')' → logprob: -5.274296283721924

Token 8: 'exec' (ID: 31592)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4430921077728271
    2. '\n' → logprob: -1.4430921077728271
    3. '
' → logprob: -1.5680921077728271
    4. '*' → logprob: -1.5680921077728271
    5. '#' → logprob: -3.068092107772827
    6. ',' → logprob: -3.943092107772827
    7. '' → logprob: -4.568092346191406
    8. '(' → logprob: -5.068092346191406
    9. ' 
' → logprob: -5.818092346191406
    10. '```' → logprob: -5.943092346191406

Token 9: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005117177031934261
    2. '('' → logprob: -5.630116939544678
    3. '("("' → logprob: -7.005116939544678
    4. '("' → logprob: -8.005117416381836
    5. '("""' → logprob: -8.755117416381836
    6. '(open' → logprob: -10.005117416381836
    7. '(eval' → logprob: -11.505117416381836
    8. '(
' → logprob: -11.505117416381836
    9. ' (' → logprob: -11.630117416381836
    10. '(**' → logprob: -12.005117416381836

Token 10: 'x' (ID: 87)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.4781092405319214
    2. 'i' → logprob: -1.4781092405319214
    3. 'f' → logprob: -2.478109359741211
    4. 'p' → logprob: -2.603109359741211
    5. ''' → logprob: -2.853109359741211
    6. ''i' → logprob: -2.853109359741211
    7. 'r' → logprob: -2.978109359741211
    8. '_' → logprob: -3.228109359741211
    9. 'a' → logprob: -3.478109359741211
    10. 'n' → logprob: -3.853109359741211

Token 11: ',y' (ID: 16103)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22182349860668182
    2. '+' → logprob: -2.5968234539031982
    3. '")' → logprob: -2.9718234539031982
    4. '**' → logprob: -3.8468234539031982
    5. ')' → logprob: -4.096823692321777
    6. '[x' → logprob: -4.471823692321777
    7. '*' → logprob: -5.096823692321777
    8. ' =' → logprob: -5.971823692321777
    9. '=' → logprob: -6.096823692321777
    10. '+")' → logprob: -6.721823692321777

Token 12: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008182021789252758
    2. ' =' → logprob: -5.383182048797607
    3. ')=' → logprob: -5.758182048797607
    4. '=input' → logprob: -9.13318157196045
    5. '="' → logprob: -9.50818157196045
    6. ')' → logprob: -10.00818157196045
    7. '")' → logprob: -10.00818157196045
    8. ')="' → logprob: -10.25818157196045
    9. ',' → logprob: -10.38318157196045
    10. '=x' → logprob: -11.38318157196045

Token 13: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3592350482940674
    2. 'input' → logprob: -1.8592350482940674
    3. ' map' → logprob: -2.1092350482940674
    4. '1' → logprob: -4.609234809875488
    5. ' input' → logprob: -4.859234809875488
    6. '0' → logprob: -5.609234809875488
    7. ' ' → logprob: -6.984234809875488
    8. '10' → logprob: -7.734234809875488
    9. '2' → logprob: -7.859234809875488
    10. '5' → logprob: -8.109234809875488

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3621951639652252
    2. '(str' → logprob: -1.7371951341629028
    3. '(int' → logprob: -2.7371952533721924
    4. '<|end|>' → logprob: -3.4871952533721924
    5. '(input' → logprob: -4.612195014953613
    6. '(lambda' → logprob: -4.612195014953613
    7. '(eval' → logprob: -5.612195014953613
    8. '(chr' → logprob: -5.862195014953613
    9. '")' → logprob: -6.112195014953613
    10. '<|end|>' → logprob: -7.487195014953613

Token 15: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010907399468123913
    2. 'input' → logprob: -4.760907173156738
    3. '(' → logprob: -6.385907173156738
    4. ',input' → logprob: -7.760907173156738
    5. ' input' → logprob: -9.760907173156738
    6. '(eval' → logprob: -11.135907173156738
    7. '```' → logprob: -11.135907173156738
    8. '(data' → logprob: -11.385907173156738
    9. '=input' → logprob: -11.635907173156738
    10. '")' → logprob: -11.635907173156738

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6799505949020386
    2. '())' → logprob: -0.8049505949020386
    3. '()' → logprob: -3.804950714111328
    4. '()))' → logprob: -4.054950714111328
    5. ')' → logprob: -5.304950714111328
    6. '()));' → logprob: -7.554950714111328
    7. '());' → logprob: -8.179950714111328
    8. '))' → logprob: -8.429950714111328
    9. '(' → logprob: -8.554950714111328
    10. '()),' → logprob: -9.679950714111328

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00022094044834375381
    2. 'rstrip' → logprob: -9.875221252441406
    3. ')' → logprob: -10.000221252441406
    4. '(split' → logprob: -10.500221252441406
    5. '())' → logprob: -10.625221252441406
    6. 'strip' → logprob: -11.000221252441406
    7. '().' → logprob: -11.000221252441406
    8. ' split' → logprob: -11.000221252441406
    9. '()' → logprob: -11.750221252441406
    10. '```' → logprob: -12.000221252441406

Token 18: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28928205370903015
    2. '()))' → logprob: -1.4142820835113525
    3. '("' → logprob: -5.789281845092773
    4. '))' → logprob: -6.414281845092773
    5. '()' → logprob: -6.664281845092773
    6. ')' → logprob: -6.914281845092773
    7. '('' → logprob: -7.914281845092773
    8. '"))' → logprob: -8.289281845092773
    9. '(' → logprob: -8.539281845092773
    10. '")' → logprob: -9.289281845092773

Token 19: '\' (ID: 59)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.45717909932136536
    2. ')")' → logprob: -1.332179069519043
    3. ')' → logprob: -2.332179069519043
    4. '\n' → logprob: -5.457179069519043
    5. ')\' → logprob: -7.082179069519043
    6. ')")
' → logprob: -8.582179069519043
    7. '))' → logprob: -8.707179069519043
    8. ' )' → logprob: -9.707179069519043
    9. ')"' → logprob: -9.832179069519043
    10. ')
' → logprob: -9.832179069519043

Token 20: 'nz' (ID: 117614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25307217240333557
    2. '\n' → logprob: -2.0030722618103027
    3. ' )' → logprob: -3.2530722618103027
    4. '")' → logprob: -3.7530722618103027
    5. '
' → logprob: -4.378072261810303
    6. '\' → logprob: -5.628072261810303
    7. '"' → logprob: -6.003072261810303
    8. ')
' → logprob: -6.628072261810303
    9. ')\' → logprob: -6.753072261810303
    10. '"\' → logprob: -6.753072261810303

Token 21: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002507047727704048
    2. '=int' → logprob: -6.877507209777832
    3. '=z' → logprob: -7.627507209777832
    4. '+=' → logprob: -7.752507209777832
    5. '=input' → logprob: -8.752507209777832
    6. '=len' → logprob: -9.627507209777832
    7. '=x' → logprob: -9.877507209777832
    8. ' =' → logprob: -10.002507209777832
    9. '=sum' → logprob: -10.127507209777832
    10. '=data' → logprob: -10.502507209777832

Token 22: '0' (ID: 15)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6127761006355286
    2. 'x' → logprob: -0.8627761006355286
    3. '0' → logprob: -4.987776279449463
    4. 'pow' → logprob: -5.112776279449463
    5. '1' → logprob: -5.237776279449463
    6. '(' → logprob: -5.362776279449463
    7. '"' → logprob: -5.987776279449463
    8. 'max' → logprob: -6.612776279449463
    9. '"x' → logprob: -6.862776279449463
    10. '[x' → logprob: -6.987776279449463

Token 23: '\n' (ID: 3392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4496612548828125
    2. '\n' → logprob: -1.3246612548828125
    3. ' for' → logprob: -2.5746612548828125
    4. '
' → logprob: -4.0746612548828125
    5. 'x' → logprob: -7.4496612548828125
    6. ')' → logprob: -7.6996612548828125
    7. '' → logprob: -7.8246612548828125
    8. '\' → logprob: -7.9496612548828125
    9. 'n' → logprob: -8.324661254882812
    10. 'z' → logprob: -8.949661254882812

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12727801501750946
    2. ' for' → logprob: -2.1272780895233154
    3. 'f' → logprob: -9.377278327941895
    4. 'x' → logprob: -9.502278327941895
    5. ' ' → logprob: -10.002278327941895
    6. ')' → logprob: -10.127278327941895
    7. 'r' → logprob: -10.502278327941895
    8. 'n' → logprob: -10.877278327941895
    9. ' ```' → logprob: -12.127278327941895
    10. ' f' → logprob: -12.252278327941895

Token 25: ' Q' (ID: 1486)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7712963223457336
    2. '_' → logprob: -1.1462962627410889
    3. ' i' → logprob: -1.7712962627410889
    4. ' ' → logprob: -3.146296262741089
    5. 'i' → logprob: -5.146296501159668
    6. ' range' → logprob: -8.021296501159668
    7. '_i' → logprob: -8.271296501159668
    8. 'range' → logprob: -9.396296501159668
    9. ' x' → logprob: -10.021296501159668
    10. ' in' → logprob: -10.396296501159668

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026781370863318443
    2. 'in' → logprob: -3.7767813205718994
    3. ' ' → logprob: -5.7767815589904785
    4. 'n' → logprob: -8.52678108215332
    5. 'range' → logprob: -9.77678108215332
    6. ',' → logprob: -10.40178108215332
    7. ' _' → logprob: -10.65178108215332
    8. '  ' → logprob: -10.77678108215332
    9. ' i' → logprob: -11.27678108215332
    10. '_' → logprob: -11.33928108215332

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4748575985431671
    2. 'range' → logprob: -0.9748575687408447
    3. '[' → logprob: -8.849857330322266
    4. ' ' → logprob: -8.849857330322266
    5. ' map' → logprob: -9.474857330322266
    6. 'map' → logprob: -9.724857330322266
    7. 'r' → logprob: -10.099857330322266
    8. 'input' → logprob: -10.349857330322266
    9. 'rang' → logprob: -10.349857330322266
    10. 'ra' → logprob: -10.412357330322266

Token 28: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06464054435491562
    2. '(x' → logprob: -2.814640522003174
    3. '(Q' → logprob: -6.564640522003174
    4. '(M' → logprob: -7.439640522003174
    5. '(n' → logprob: -7.564640522003174
    6. ' (' → logprob: -9.939640998840332
    7. '(y' → logprob: -10.564640998840332
    8. '(int' → logprob: -10.689640998840332
    9. '(s' → logprob: -11.189640998840332
    10. '(
' → logprob: -11.564640998840332

Token 29: ',x' (ID: 29748)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002556519117206335
    2. ')' → logprob: -6.627556324005127
    3. '+' → logprob: -7.502556324005127
    4. ':' → logprob: -8.127556800842285
    5. ' ):' → logprob: -8.377556800842285
    6. '):
' → logprob: -9.877556800842285
    7. '**' → logprob: -10.627556800842285
    8. '>' → logprob: -10.877556800842285
    9. ',' → logprob: -11.127556800842285
    10. '":' → logprob: -12.252556800842285

Token 30: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11798687279224396
    2. ',' → logprob: -2.9929869174957275
    3. '-' → logprob: -3.6179869174957275
    4. ',-' → logprob: -4.117986679077148
    5. ' +' → logprob: -4.492986679077148
    6. '):' → logprob: -5.492986679077148
    7. ',+' → logprob: -7.117986679077148
    8. ' -' → logprob: -7.492986679077148
    9. ' ,' → logprob: -8.492986679077148
    10. ')' → logprob: -8.867986679077148

Token 31: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004008793330285698
    2. ' ' → logprob: -7.875401020050049
    3. '2' → logprob: -11.75040054321289
    4. 'y' → logprob: -13.06290054321289
    5. '```' → logprob: -13.62540054321289
    6. '10' → logprob: -14.12540054321289
    7. '11' → logprob: -14.12540054321289
    8. '   ' → logprob: -14.25040054321289
    9. '`' → logprob: -14.31290054321289
    10. '  ' → logprob: -14.37540054321289

Token 32: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007343469187617302
    2. ')' → logprob: -5.382343292236328
    3. ' ):' → logprob: -6.632343292236328
    4. '):
' → logprob: -7.632343292236328
    5. ':' → logprob: -8.257343292236328
    6. '+' → logprob: -9.257343292236328
    7. '-' → logprob: -9.757343292236328
    8. ',' → logprob: -9.757343292236328
    9. '**' → logprob: -10.007343292236328
    10. '```' → logprob: -10.132343292236328

Token 33: '\' (ID: 59)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6311221718788147
    2. ' z' → logprob: -1.13112211227417
    3. '    ' → logprob: -2.75612211227417
    4. ' 
' → logprob: -3.75612211227417
    5. 'z' → logprob: -4.00612211227417
    6. ' \' → logprob: -4.50612211227417
    7. ' if' → logprob: -4.50612211227417
    8. '   ' → logprob: -5.38112211227417
    9. '<|end|>' → logprob: -5.63112211227417
    10. ' n' → logprob: -7.13112211227417

Token 34: 'n' (ID: 77)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.384721964597702
    2. ' z' → logprob: -1.8847219944000244
    3. '   ' → logprob: -3.1347219944000244
    4. ' if' → logprob: -3.2597219944000244
    5. 'z' → logprob: -3.6347219944000244
    6. '<|end|>' → logprob: -3.8847219944000244
    7. '    ' → logprob: -4.134721755981445
    8. '0' → logprob: -6.134721755981445
    9. ' \' → logprob: -6.259721755981445
    10. '  ' → logprob: -6.259721755981445

Token 35: ' P' (ID: 398)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6471186876296997
    2. ' if' → logprob: -1.3971186876296997
    3. ' z' → logprob: -2.02211856842041
    4. '   ' → logprob: -3.14711856842041
    5. 'z' → logprob: -4.14711856842041
    6. '    ' → logprob: -4.52211856842041
    7. ' x' → logprob: -5.39711856842041
    8. ' s' → logprob: -5.64711856842041
    9. ' for' → logprob: -5.77211856842041
    10. 's' → logprob: -6.52211856842041

Token 36: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4789543151855469
    2. ' ' → logprob: -1.9789543151855469
    3. ' =' → logprob: -2.228954315185547
    4. 'r' → logprob: -2.478954315185547
    5. '   ' → logprob: -5.103954315185547
    6. '  ' → logprob: -5.353954315185547
    7. 'y' → logprob: -5.353954315185547
    8. '+=' → logprob: -5.353954315185547
    9. ' +=' → logprob: -5.603954315185547
    10. ',' → logprob: -5.728954315185547

Token 37: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5112712383270264
    2. ' Q' → logprob: -1.7612712383270264
    3. 'x' → logprob: -2.8862712383270264
    4. '(Q' → logprob: -3.0112712383270264
    5. '1' → logprob: -3.5112712383270264
    6. ' (' → logprob: -3.8862712383270264
    7. '(' → logprob: -4.5112714767456055
    8. '(x' → logprob: -4.6362714767456055
    9. 'pow' → logprob: -4.6362714767456055
    10. ' x' → logprob: -5.1362714767456055

Token 38: '*(' (ID: 14793)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2842666804790497
    2. '-' → logprob: -1.909266710281372
    3. ' %' → logprob: -3.534266710281372
    4. '+' → logprob: -3.784266710281372
    5. '*' → logprob: -3.784266710281372
    6. '**' → logprob: -4.784266471862793
    7. '//' → logprob: -5.034266471862793
    8. ' ' → logprob: -6.034266471862793
    9. ' *' → logprob: -6.659266471862793
    10. ' -' → logprob: -6.784266471862793

Token 39: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.03474242240190506
    2. '(Q' → logprob: -4.28474235534668
    3. 'P' → logprob: -4.40974235534668
    4. 'x' → logprob: -5.90974235534668
    5. ' Q' → logprob: -6.53474235534668
    6. 'M' → logprob: -6.78474235534668
    7. '2' → logprob: -7.03474235534668
    8. '-' → logprob: -7.78474235534668
    9. '(P' → logprob: -8.03474235534668
    10. '1' → logprob: -8.53474235534668

Token 40: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008357244543731213
    2. '+' → logprob: -5.258357048034668
    3. ' -' → logprob: -6.133357048034668
    4. '1' → logprob: -7.633357048034668
    5. '<|end|>' → logprob: -8.258357048034668
    6. ')' → logprob: -9.883357048034668
    7. ')-' → logprob: -10.258357048034668
    8. ' +' → logprob: -10.383357048034668
    9. ' ' → logprob: -10.883357048034668
    10. '-)' → logprob: -11.258357048034668

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024215869780164212
    2. ' ' → logprob: -8.750242233276367
    3. ')' → logprob: -10.125242233276367
    4. '2' → logprob: -11.500242233276367
    5. '<|end|>' → logprob: -11.625242233276367
    6. '```' → logprob: -12.812742233276367
    7. '3' → logprob: -12.875242233276367
    8. '...' → logprob: -13.000242233276367
    9. '`' → logprob: -13.625242233276367
    10. '')' → logprob: -13.750242233276367

Token 42: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06971876323223114
    2. ' //' → logprob: -3.319718837738037
    3. ')//' → logprob: -3.819718837738037
    4. ')' → logprob: -4.819718837738037
    5. ' )' → logprob: -7.319718837738037
    6. '*' → logprob: -9.319718360900879
    7. '```' → logprob: -9.444718360900879
    8. ' ' → logprob: -9.944718360900879
    9. '<|end|>' → logprob: -10.069718360900879
    10. '>//' → logprob: -10.319718360900879

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.3213025744771585e-05
    2. ' ' → logprob: -10.500033378601074
    3. '1' → logprob: -12.500033378601074
    4. '4' → logprob: -13.500033378601074
    5. '```' → logprob: -15.125033378601074
    6. '

' → logprob: -16.750032424926758
    7. ')' → logprob: -16.875032424926758
    8. '<|end|>' → logprob: -17.187532424926758
    9. '3' → logprob: -17.437532424926758
    10. '  ' → logprob: -18.250032424926758

Token 44: '\n' (ID: 3392)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30520564317703247
    2. '<|end|>' → logprob: -1.6802055835723877
    3. ')' → logprob: -3.3052055835723877
    4. '-' → logprob: -5.055205821990967
    5. ' +' → logprob: -5.055205821990967
    6. '*' → logprob: -5.180205821990967
    7. 'z' → logprob: -5.430205821990967
    8. '+
' → logprob: -5.680205821990967
    9. ' ' → logprob: -5.805205821990967
    10. '
' → logprob: -6.305205821990967

Token 45: ' S' (ID: 336)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7939562797546387
    2. ' ' → logprob: -1.9189562797546387
    3. ' if' → logprob: -1.9189562797546387
    4. '<|end|>' → logprob: -2.4189562797546387
    5. ' +' → logprob: -3.4189562797546387
    6. ')' → logprob: -3.6689562797546387
    7. 'if' → logprob: -3.7939562797546387
    8. ' )' → logprob: -4.168956279754639
    9. ' z' → logprob: -4.793956279754639
    10. '\n' → logprob: -4.918956279754639

Token 46: '=x' (ID: 56980)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7266491651535034
    2. '=' → logprob: -1.4766491651535034
    3. '+' → logprob: -1.6016491651535034
    4. ' +=' → logprob: -3.101649284362793
    5. ' =' → logprob: -3.351649284362793
    6. ' +' → logprob: -6.226649284362793
    7. '<|end|>' → logprob: -7.601649284362793
    8. '-' → logprob: -7.851649284362793
    9. ',' → logprob: -7.851649284362793
    10. '%' → logprob: -7.976649284362793

Token 47: '*(' (ID: 14793)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7496408820152283
    2. '-' → logprob: -0.8746408820152283
    3. ' -' → logprob: -2.749640941619873
    4. '-P' → logprob: -3.374640941619873
    5. '-n' → logprob: -5.249640941619873
    6. ' +' → logprob: -6.374640941619873
    7. '-S' → logprob: -6.749640941619873
    8. '*' → logprob: -7.124640941619873
    9. '-Q' → logprob: -7.249640941619873
    10. '-M' → logprob: -7.749640941619873

Token 48: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08831249177455902
    2. '(x' → logprob: -3.0883123874664307
    3. 'Q' → logprob: -4.46331262588501
    4. 'S' → logprob: -4.58831262588501
    5. ' x' → logprob: -5.83831262588501
    6. 'M' → logprob: -6.21331262588501
    7. 'P' → logprob: -6.21331262588501
    8. ' (' → logprob: -6.33831262588501
    9. ')' → logprob: -6.46331262588501
    10. '(Q' → logprob: -6.58831262588501

Token 49: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48261335492134094
    2. '+' → logprob: -0.9826133251190186
    3. '1' → logprob: -5.482613563537598
    4. ' -' → logprob: -6.357613563537598
    5. ' +' → logprob: -6.607613563537598
    6. ')' → logprob: -7.357613563537598
    7. '<|end|>' → logprob: -9.107613563537598
    8. ')-' → logprob: -9.232613563537598
    9. ')+' → logprob: -9.482613563537598
    10. '+)' → logprob: -9.857613563537598

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032795488368719816
    2. '2' → logprob: -6.253279685974121
    3. ' ' → logprob: -6.753279685974121
    4. '3' → logprob: -9.628279685974121
    5. '0' → logprob: -10.378279685974121
    6. '-' → logprob: -10.878279685974121
    7. 'x' → logprob: -11.315779685974121
    8. '4' → logprob: -12.003279685974121
    9. '```' → logprob: -12.003279685974121
    10. ')' → logprob: -12.003279685974121

Token 51: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0974678099155426
    2. ')' → logprob: -2.9724678993225098
    3. '//' → logprob: -3.3474678993225098
    4. '")' → logprob: -5.72246789932251
    5. ' )' → logprob: -6.97246789932251
    6. '"' → logprob: -7.34746789932251
    7. '')' → logprob: -7.47246789932251
    8. '```' → logprob: -8.222467422485352
    9. '`)' → logprob: -8.472467422485352
    10. '">//' → logprob: -8.972467422485352

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023810577113181353
    2. ' ' → logprob: -8.375238418579102
    3. '<|end|>' → logprob: -12.625238418579102
    4. '1' → logprob: -13.000238418579102
    5. '  ' → logprob: -15.437738418579102
    6. '۲' → logprob: -15.562738418579102
    7. '```' → logprob: -15.562738418579102
    8. ')' → logprob: -15.687738418579102
    9. '    ' → logprob: -16.0002384185791
    10. '   ' → logprob: -16.0002384185791

Token 53: '-(' (ID: 18825)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15514656901359558
    2. '<|end|>' → logprob: -2.530146598815918
    3. ' -' → logprob: -3.655146598815918
    4. '-P' → logprob: -3.905146598815918
    5. '+' → logprob: -4.780146598815918
    6. ')' → logprob: -5.780146598815918
    7. '*' → logprob: -6.280146598815918
    8. '-n' → logprob: -6.530146598815918
    9. '-Q' → logprob: -7.405146598815918
    10. '<|end|>' → logprob: -8.030146598815918

Token 54: 'x' (ID: 87)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.004483412019908428
    2. ' P' → logprob: -6.004483222961426
    3. 'Q' → logprob: -6.629483222961426
    4. '(P' → logprob: -7.629483222961426
    5. 'x' → logprob: -9.379483222961426
    6. 'y' → logprob: -10.129483222961426
    7. 'S' → logprob: -10.629483222961426
    8. 'z' → logprob: -11.754483222961426
    9. '(x' → logprob: -12.004483222961426
    10. '(Q' → logprob: -12.129483222961426

Token 55: '-Q' (ID: 50456)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4808236062526703
    2. '-' → logprob: -1.9808236360549927
    3. '-P' → logprob: -2.230823516845703
    4. '-Q' → logprob: -3.105823516845703
    5. ' -' → logprob: -3.855823516845703
    6. '*' → logprob: -4.480823516845703
    7. '*(' → logprob: -4.730823516845703
    8. ' +' → logprob: -4.730823516845703
    9. ')' → logprob: -5.105823516845703
    10. ' )' → logprob: -5.355823516845703

Token 56: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34708163142204285
    2. '+' → logprob: -1.3470816612243652
    3. '-' → logprob: -4.722081661224365
    4. ')**' → logprob: -4.972081661224365
    5. '<|end|>' → logprob: -5.347081661224365
    6. ')*' → logprob: -5.722081661224365
    7. ')+' → logprob: -6.347081661224365
    8. ' )' → logprob: -6.597081661224365
    9. ')-' → logprob: -6.722081661224365
    10. ')*(' → logprob: -6.722081661224365

Token 57: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7805445194244385
    2. '(x' → logprob: -1.0305445194244385
    3. ' x' → logprob: -2.2805445194244385
    4. ' (' → logprob: -2.7805445194244385
    5. 'Q' → logprob: -5.030544281005859
    6. '(' → logprob: -5.280544281005859
    7. '(Q' → logprob: -6.155544281005859
    8. ' ' → logprob: -6.280544281005859
    9. ' Q' → logprob: -6.280544281005859
    10. '((' → logprob: -6.780544281005859

Token 58: '-Q' (ID: 50456)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003060303395614028
    2. '<|end|>' → logprob: -6.628060340881348
    3. '-' → logprob: -7.003060340881348
    4. '-Q' → logprob: -7.878060340881348
    5. ' +' → logprob: -8.128060340881348
    6. '<|end|>' → logprob: -9.503060340881348
    7. ')' → logprob: -11.690560340881348
    8. '```' → logprob: -12.128060340881348
    9. ')+' → logprob: -12.253060340881348
    10. ' -' → logprob: -12.253060340881348

Token 59: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007447021082043648
    2. '1' → logprob: -5.507447242736816
    3. ' +' → logprob: -6.507447242736816
    4. ')' → logprob: -7.132447242736816
    5. '-' → logprob: -7.507447242736816
    6. '+)' → logprob: -8.132447242736816
    7. ')+' → logprob: -9.757447242736816
    8. ' ' → logprob: -10.632447242736816
    9. '   ' → logprob: -11.069947242736816
    10. '+)/' → logprob: -11.132447242736816

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044103997061029077
    2. '2' → logprob: -8.12544059753418
    3. ' ' → logprob: -9.12544059753418
    4. ')' → logprob: -11.62544059753418
    5. '3' → logprob: -11.62544059753418
    6. '<|end|>' → logprob: -11.75044059753418
    7. '```' → logprob: -12.75044059753418
    8. '0' → logprob: -13.50044059753418
    9. '7' → logprob: -13.68794059753418
    10. '<|end|>' → logprob: -13.87544059753418

Token 61: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.10196065902709961
    2. '//' → logprob: -3.1019606590270996
    3. ')' → logprob: -3.3519606590270996
    4. '<|end|>' → logprob: -4.6019606590271
    5. '">//' → logprob: -5.4769606590271
    6. '```' → logprob: -7.3519606590271
    7. '']//' → logprob: -7.6019606590271
    8. '<|end|>' → logprob: -7.7269606590271
    9. ' )' → logprob: -7.9769606590271
    10. '>//' → logprob: -8.476961135864258

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001698094274615869
    2. '1' → logprob: -9.37516975402832
    3. ' ' → logprob: -9.75016975402832
    4. '```' → logprob: -11.56266975402832
    5. ')' → logprob: -11.68766975402832
    6. '3' → logprob: -13.81266975402832
    7. '<|end|>' → logprob: -13.87516975402832
    8. '   ' → logprob: -14.68766975402832
    9. '۲' → logprob: -15.00016975402832
    10. '  ' → logprob: -15.12516975402832

Token 63: '\n' (ID: 3392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' z' (ID: 579)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '=(' (ID: 9893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01668042130768299
    2. ' +=' → logprob: -4.5166802406311035
    3. '=' → logprob: -5.7666802406311035
    4. '=z' → logprob: -6.3916802406311035
    5. '+=(' → logprob: -7.8916802406311035
    6. ' =' → logprob: -8.641680717468262
    7. ']+=' → logprob: -9.516680717468262
    8. '+' → logprob: -9.641680717468262
    9. '%=' → logprob: -10.266680717468262
    10. '+='' → logprob: -10.391680717468262

Token 66: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.010117624886333942
    2. ' z' → logprob: -4.760117530822754
    3. '(z' → logprob: -6.635117530822754
    4. ''z' → logprob: -9.635117530822754
    5. ' (' → logprob: -10.385117530822754
    6. '	z' → logprob: -10.510117530822754
    7. '```' → logprob: -10.885117530822754
    8. '   ' → logprob: -11.510117530822754
    9. '*z' → logprob: -12.260117530822754
    10. '(' → logprob: -12.447617530822754

Token 67: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005228889058344066
    2. ' +' → logprob: -7.875523090362549
    3. '+p' → logprob: -10.00052261352539
    4. '+(' → logprob: -11.00052261352539
    5. '+
' → logprob: -11.37552261352539
    6. '+A' → logprob: -11.37552261352539
    7. '+C' → logprob: -11.50052261352539
    8. '+

' → logprob: -11.62552261352539
    9. '+x' → logprob: -11.87552261352539
    10. ' plus' → logprob: -12.37552261352539

Token 68: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7596959471702576
    2. 'P' → logprob: -1.0096960067749023
    3. 'pow' → logprob: -2.8846960067749023
    4. ' S' → logprob: -3.3846960067749023
    5. ' P' → logprob: -3.3846960067749023
    6. '(P' → logprob: -4.009696006774902
    7. '(S' → logprob: -4.884696006774902
    8. 'x' → logprob: -5.509696006774902
    9. ' pow' → logprob: -5.759696006774902
    10. 'z' → logprob: -6.009696006774902

Token 69: '+' (ID: 10)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0054645054042339325
    2. ' *' → logprob: -6.005464553833008
    3. '%' → logprob: -7.505464553833008
    4. '*z' → logprob: -7.505464553833008
    5. '-P' → logprob: -7.630464553833008
    6. ')' → logprob: -8.255464553833008
    7. '*y' → logprob: -8.630464553833008
    8. '*f' → logprob: -8.755464553833008
    9. '*(' → logprob: -9.130464553833008
    10. '*p' → logprob: -9.380464553833008

Token 70: '1' (ID: 16)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.11487866193056107
    2. ' P' → logprob: -2.2398786544799805
    3. 'M' → logprob: -7.6148786544799805
    4. 'Q' → logprob: -8.11487865447998
    5. 'x' → logprob: -8.48987865447998
    6. '(P' → logprob: -8.48987865447998
    7. '"' → logprob: -8.73987865447998
    8. ''' → logprob: -9.36487865447998
    9. ' (' → logprob: -9.61487865447998
    10. ' M' → logprob: -9.73987865447998

Token 71: '-P' (ID: 10316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10476957261562347
    2. ')%' → logprob: -2.729769468307495
    3. ' )' → logprob: -4.479769706726074
    4. '-P' → logprob: -4.729769706726074
    5. '*' → logprob: -5.729769706726074
    6. '+' → logprob: -5.729769706726074
    7. '-' → logprob: -5.979769706726074
    8. '0' → logprob: -7.354769706726074
    9. '-z' → logprob: -7.354769706726074
    10. '%' → logprob: -7.354769706726074

Token 72: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.6450601816177368
    2. ')' → logprob: -0.7700601816177368
    3. ' )' → logprob: -4.520060062408447
    4. '%' → logprob: -6.770060062408447
    5. '*' → logprob: -9.645060539245605
    6. ')
' → logprob: -9.770060539245605
    7. '**' → logprob: -10.645060539245605
    8. ')**' → logprob: -10.645060539245605
    9. '```' → logprob: -10.645060539245605
    10. ' %' → logprob: -10.770060539245605

Token 73: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01252730842679739
    2. ' M' → logprob: -4.3875274658203125
    3. '(M' → logprob: -11.637527465820312
    4. ' ' → logprob: -13.012527465820312
    5. '`' → logprob: -13.387527465820312
    6. ')' → logprob: -14.012527465820312
    7. ' (' → logprob: -14.137527465820312
    8. 'm' → logprob: -14.387527465820312
    9. '```' → logprob: -14.762527465820312
    10. '(' → logprob: -15.137527465820312

Token 74: '\n' (ID: 3392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06819919496774673
    2. '\n' → logprob: -3.1931991577148438
    3. '
' → logprob: -4.443199157714844
    4. '<|end|>' → logprob: -4.943199157714844
    5. ')
' → logprob: -6.443199157714844
    6. '\' → logprob: -6.943199157714844
    7. '")' → logprob: -7.318199157714844
    8. '' → logprob: -7.693199157714844
    9. ' )' → logprob: -7.943199157714844
    10. ' ' → logprob: -8.068199157714844

Token 75: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003544835839420557
    2. '")' → logprob: -6.378544807434082
    3. ' )' → logprob: -7.003544807434082
    4. '<|end|>' → logprob: -8.128544807434082
    5. '')' → logprob: -8.503544807434082
    6. ')
' → logprob: -9.753544807434082
    7. '
' → logprob: -9.753544807434082
    8. '```' → logprob: -9.878544807434082
    9. 'print' → logprob: -10.128544807434082
    10. '`)' → logprob: -10.128544807434082

Token 76: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.16130565106868744
    2. '(' → logprob: -1.9113056659698486
    3. ' (' → logprob: -7.7863054275512695
    4. 'z' → logprob: -8.03630542755127
    5. '(x' → logprob: -8.91130542755127
    6. '('' → logprob: -9.16130542755127
    7. '()' → logprob: -10.66130542755127
    8. ' z' → logprob: -10.91130542755127
    9. '("' → logprob: -11.53630542755127
    10. '((' → logprob: -11.66130542755127

Token 77: ')")' (ID: 174847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9875325708417222e-05
    2. '))' → logprob: -11.250029563903809
    3. ' )' → logprob: -11.875029563903809
    4. '")' → logprob: -12.875029563903809
    5. '')' → logprob: -13.125029563903809
    6. ')
' → logprob: -13.500029563903809
    7. '`)' → logprob: -13.625029563903809
    8. ')")' → logprob: -14.625029563903809
    9. ')`' → logprob: -14.625029563903809
    10. '```' → logprob: -14.875029563903809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 45.33%
Précision adaptée (1ère position): 45.33%
Précision (top 10): 70.67%
================================================================================
