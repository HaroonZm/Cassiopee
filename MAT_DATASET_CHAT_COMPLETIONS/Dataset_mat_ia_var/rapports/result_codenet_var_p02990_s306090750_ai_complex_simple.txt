================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

N, K = map(int, input().split())

def C(n, k):
    try:
        num = reduce(mul, range(n, n - k, -1), 1)
        den = reduce(mul, range(1, k + 1), 1)
        return num // den
    except:
        return 0

M = 10**9 + 7
lst = list(map(lambda i: C(N - K + 1, i) % M if i <= N - K + 1 else 0, range(1, K + 1)))
print('\n'.join(map(str, lst)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005409015342593193
    2. '(lambda' → logprob: -5.880409240722656
    3. ' (' → logprob: -6.755409240722656
    4. '.' → logprob: -7.880409240722656
    5. ',' → logprob: -8.505409240722656
    6. ' ' → logprob: -8.880409240722656
    7. '\' → logprob: -8.880409240722656
    8. ''' → logprob: -9.005409240722656
    9. '(space' → logprob: -9.505409240722656
    10. '```' → logprob: -9.630409240722656

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31903505325317383
    2. ' import' → logprob: -1.9440350532531738
    3. 'add' → logprob: -2.444035053253174
    4. ' ' → logprob: -4.069035053253174
    5. ' mul' → logprob: -4.194035053253174
    6. 'import' → logprob: -4.819035053253174
    7. 'mul' → logprob: -6.194035053253174
    8. ' item' → logprob: -8.694034576416016
    9. 'item' → logprob: -9.569034576416016
    10. ' ad' → logprob: -9.819034576416016

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7582562565803528
    2. '\' → logprob: -2.008256196975708
    3. '\n' → logprob: -2.008256196975708
    4. '(
' → logprob: -2.383256196975708
    5. '*' → logprob: -2.633256196975708
    6. ',' → logprob: -3.133256196975708
    7. '`' → logprob: -4.383256435394287
    8. 'def' → logprob: -4.633256435394287
    9. '#' → logprob: -4.883256435394287
    10. '```' → logprob: -5.758256435394287

Token 10: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06361429393291473
    2. '(
' → logprob: -3.3136143684387207
    3. 'def' → logprob: -4.563614368438721
    4. '#' → logprob: -5.313614368438721
    5. '\' → logprob: -5.563614368438721
    6. 'a' → logprob: -6.813614368438721
    7. ',' → logprob: -6.938614368438721
    8. 'result' → logprob: -7.313614368438721
    9. '`' → logprob: -7.438614368438721
    10. '*' → logprob: -8.063613891601562

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6901640892028809
    2. '=' → logprob: -0.9401640892028809
    3. ' ' → logprob: -2.690164089202881
    4. ',' → logprob: -4.065164089202881
    5. '_' → logprob: -4.940164089202881
    6. '  ' → logprob: -5.440164089202881
    7. ')' → logprob: -5.940164089202881
    8. '.' → logprob: -6.065164089202881
    9. 'u' → logprob: -6.315164089202881
    10. ' ,' → logprob: -6.440164089202881

Token 12: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4595925509929657
    2. 'K' → logprob: -1.959592580795288
    3. ' ' → logprob: -2.334592580795288
    4. ' M' → logprob: -3.334592580795288
    5. 'input' → logprob: -4.084592342376709
    6. 'M' → logprob: -4.334592342376709
    7. '  ' → logprob: -4.459592342376709
    8. ' =' → logprob: -4.584592342376709
    9. ''' → logprob: -5.334592342376709
    10. ' k' → logprob: -5.584592342376709

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804459050297737
    2. '=' → logprob: -3.2880446910858154
    3. ',' → logprob: -13.163044929504395
    4. ' =
' → logprob: -14.788044929504395
    5. ')' → logprob: -15.413044929504395
    6. '<|end|>' → logprob: -16.163043975830078
    7. ' ' → logprob: -16.413043975830078
    8. '=

' → logprob: -16.788043975830078
    9. ' =
' → logprob: -16.913043975830078
    10. '=int' → logprob: -17.163043975830078

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.21080856025218964
    2. 'map' → logprob: -1.710808515548706
    3. ' ' → logprob: -4.960808753967285
    4. '10' → logprob: -6.960808753967285
    5. 'int' → logprob: -7.960808753967285
    6. ' int' → logprob: -8.335808753967285
    7. '5' → logprob: -8.585808753967285
    8. ' input' → logprob: -8.835808753967285
    9. 'input' → logprob: -8.960808753967285
    10. '0' → logprob: -8.960808753967285

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10326678305864334
    2. '(' → logprob: -2.353266716003418
    3. '(lambda' → logprob: -6.353266716003418
    4. '(str' → logprob: -6.978266716003418
    5. '(input' → logprob: -8.728266716003418
    6. 'int' → logprob: -8.728266716003418
    7. '[int' → logprob: -11.353266716003418
    8. 'input' → logprob: -11.978266716003418
    9. '<int' → logprob: -11.978266716003418
    10. '()' → logprob: -11.978266716003418

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022614714689552784
    2. '(' → logprob: -6.377261638641357
    3. ')' → logprob: -8.1272611618042
    4. ',input' → logprob: -9.5022611618042
    5. ' ,' → logprob: -10.0022611618042
    6. ',int' → logprob: -10.2522611618042
    7. '<|end|>' → logprob: -10.6272611618042
    8. '(),' → logprob: -10.8772611618042
    9. '`,' → logprob: -11.7522611618042
    10. '(int' → logprob: -12.0022611618042

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031790214125066996
    2. ' input' → logprob: -5.75317907333374
    3. '(input' → logprob: -14.378178596496582
    4. ')' → logprob: -15.253178596496582
    5. 'str' → logprob: -16.1281795501709
    6. 'int' → logprob: -16.2531795501709
    7. ',input' → logprob: -16.2531795501709
    8. ' ' → logprob: -16.6281795501709
    9. '=input' → logprob: -17.0031795501709
    10. 'range' → logprob: -17.2531795501709

Token 18: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39121344685554504
    2. '())' → logprob: -1.7662134170532227
    3. '().' → logprob: -2.6412134170532227
    4. '()' → logprob: -3.1412134170532227
    5. '(' → logprob: -3.7662134170532227
    6. '('' → logprob: -4.516213417053223
    7. '(),' → logprob: -6.516213417053223
    8. ',' → logprob: -7.766213417053223
    9. '(',' → logprob: -8.266213417053223
    10. '(','' → logprob: -8.266213417053223

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000561969296541065
    2. 'strip' → logprob: -7.5005621910095215
    3. 'rstrip' → logprob: -12.250561714172363
    4. ' split' → logprob: -13.125561714172363
    5. ')' → logprob: -13.375561714172363
    6. '(split' → logprob: -15.000561714172363
    7. 'spl' → logprob: -15.875561714172363
    8. 'read' → logprob: -16.37556266784668
    9. 'isdigit' → logprob: -17.87556266784668
    10. 'startswith' → logprob: -18.25056266784668

Token 20: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009430267964489758
    2. '))' → logprob: -7.000943183898926
    3. '),' → logprob: -11.750943183898926
    4. '`)' → logprob: -12.250943183898926
    5. '())' → logprob: -12.375943183898926
    6. '()' → logprob: -12.375943183898926
    7. ')`' → logprob: -12.625943183898926
    8. '')' → logprob: -13.125943183898926
    9. ')")' → logprob: -13.375943183898926
    10. '(' → logprob: -14.375943183898926

Token 21: 'def' (ID: 1314)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.1530587673187256
    2. 'result' → logprob: -1.7780587673187256
    3. 'factor' → logprob: -1.7780587673187256
    4. 'if' → logprob: -2.5280587673187256
    5. 'nums' → logprob: -3.0280587673187256
    6. 'arr' → logprob: -3.1530587673187256
    7. 'numbers' → logprob: -3.4030587673187256
    8. 'comb' → logprob: -4.028059005737305
    9. 'lst' → logprob: -4.278059005737305
    10. 'print' → logprob: -4.403059005737305

Token 22: ' C' (ID: 363)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.7128964066505432
    2. ' comb' → logprob: -1.4628963470458984
    3. ' combination' → logprob: -2.0878963470458984
    4. ' n' → logprob: -2.8378963470458984
    5. ' combinations' → logprob: -3.5878963470458984
    6. ' ' → logprob: -4.337896347045898
    7. ' choose' → logprob: -4.462896347045898
    8. ' combine' → logprob: -4.462896347045898
    9. ' cmb' → logprob: -4.962896347045898
    10. ' fact' → logprob: -5.712896347045898

Token 23: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5878419280052185
    2. '(n' → logprob: -0.8378419280052185
    3. '_n' → logprob: -5.212841987609863
    4. '_' → logprob: -5.337841987609863
    5. 'omb' → logprob: -7.587841987609863
    6. 'n' → logprob: -8.337841987609863
    7. '(N' → logprob: -8.712841987609863
    8. '(\' → logprob: -8.962841987609863
    9. '(_' → logprob: -9.212841987609863
    10. 'alculate' → logprob: -9.337841987609863

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005144290626049042
    2. ',k' → logprob: -8.125514030456543
    3. ' ,' → logprob: -8.875514030456543
    4. ',r' → logprob: -10.000514030456543
    5. ',n' → logprob: -10.625514030456543
    6. ',i' → logprob: -12.750514030456543
    7. ',j' → logprob: -13.625514030456543
    8. ',K' → logprob: -14.375514030456543
    9. ',)' → logprob: -14.500514030456543
    10. ',m' → logprob: -14.500514030456543

Token 25: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008506429381668568
    2. 'r' → logprob: -5.2585062980651855
    3. ' k' → logprob: -5.7585062980651855
    4. ' r' → logprob: -9.383506774902344
    5. ' ' → logprob: -10.633506774902344
    6. '  ' → logprob: -14.008506774902344
    7. 'm' → logprob: -14.883506774902344
    8. ' ' → logprob: -14.883506774902344
    9. '   ' → logprob: -15.008506774902344
    10. 'n' → logprob: -15.133506774902344

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009231308358721435
    2. ')' → logprob: -7.000923156738281
    3. '):
' → logprob: -11.750923156738281
    4. ' ):' → logprob: -13.000923156738281
    5. ':' → logprob: -14.875923156738281
    6. ''):' → logprob: -14.875923156738281
    7. '):
' → logprob: -15.500923156738281
    8. ')):' → logprob: -16.25092315673828
    9. ')：' → logprob: -16.37592315673828
    10. '}:' → logprob: -16.87592315673828

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7397032380104065
    2. ' ' → logprob: -1.8647031784057617
    3. ' return' → logprob: -2.3647031784057617
    4. '):' → logprob: -2.6147031784057617
    5. ':' → logprob: -2.7397031784057617
    6. ')' → logprob: -3.3647031784057617
    7. '    ' → logprob: -3.8647031784057617
    8. ' :' → logprob: -4.114703178405762
    9. ' (' → logprob: -4.489703178405762
    10. '(' → logprob: -4.614703178405762

Token 28: ' try' (ID: 2075)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6402851343154907
    2. ' if' → logprob: -1.3902851343154907
    3. 'return' → logprob: -2.015285015106201
    4. 'if' → logprob: -3.015285015106201
    5. '   ' → logprob: -3.640285015106201
    6. ')' → logprob: -5.140285015106201
    7. ' ' → logprob: -6.390285015106201
    8. 'r' → logprob: -7.015285015106201
    9. 'n' → logprob: -7.265285015106201
    10. 'factor' → logprob: -7.265285015106201

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014253562549129128
    2. ':
' → logprob: -7.126425266265869
    3. ':return' → logprob: -7.626425266265869
    4. '):' → logprob: -10.251425743103027
    5. ' :' → logprob: -10.251425743103027
    6. '   ' → logprob: -10.626425743103027
    7. '<|end|>' → logprob: -11.126425743103027
    8. '       ' → logprob: -11.876425743103027
    9. '    ' → logprob: -12.376425743103027
    10. ' return' → logprob: -13.376425743103027

Token 30: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5960386395454407
    2. ' return' → logprob: -1.596038579940796
    3. '   ' → logprob: -1.846038579940796
    4. '       ' → logprob: -2.721038579940796
    5. ':' → logprob: -4.971038818359375
    6. 'return' → logprob: -5.846038818359375
    7. ' ' → logprob: -6.096038818359375
    8. ':return' → logprob: -6.346038818359375
    9. ' if' → logprob: -6.721038818359375
    10. '1' → logprob: -6.721038818359375

Token 31: ' num' (ID: 2269)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05242377519607544
    2. '   ' → logprob: -3.4274237155914307
    3. 'return' → logprob: -4.05242395401001
    4. ':return' → logprob: -7.80242395401001
    5. '    ' → logprob: -8.177423477172852
    6. '       ' → logprob: -9.427423477172852
    7. '{return' → logprob: -9.427423477172852
    8. '```' → logprob: -9.427423477172852
    9. ' if' → logprob: -9.552423477172852
    10. '	return' → logprob: -10.427423477172852

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39682701230049133
    2. '=' → logprob: -1.146826982498169
    3. 'ERATOR' → logprob: -4.771827220916748
    4. '   ' → logprob: -7.396827220916748
    5. 's' → logprob: -7.896827220916748
    6. 'umerator' → logprob: -8.89682674407959
    7. 'er' → logprob: -9.27182674407959
    8. '    ' → logprob: -9.39682674407959
    9. 'inator' → logprob: -10.02182674407959
    10. 'érateur' → logprob: -11.39682674407959

Token 33: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.4759679138660431
    2. ' reduce' → logprob: -0.9759678840637207
    3. 'factor' → logprob: -7.850967884063721
    4. '    ' → logprob: -8.100968360900879
    5. ' factorial' → logprob: -8.725968360900879
    6. '   ' → logprob: -8.725968360900879
    7. 'range' → logprob: -9.725968360900879
    8. ' ' → logprob: -9.975968360900879
    9. '.reduce' → logprob: -10.038468360900879
    10. ' n' → logprob: -10.038468360900879

Token 34: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5800435543060303
    2. '(m' → logprob: -0.8300435543060303
    3. '(lambda' → logprob: -5.580043792724609
    4. '(operator' → logprob: -8.45504379272461
    5. '(mu' → logprob: -10.33004379272461
    6. '(
' → logprob: -10.45504379272461
    7. 'mul' → logprob: -10.45504379272461
    8. '_mul' → logprob: -12.58004379272461
    9. '(mult' → logprob: -12.70504379272461
    10. ' (' → logprob: -12.95504379272461

Token 35: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.981667537620524e-06
    2. ' ul' → logprob: -14.125001907348633
    3. '<ul' → logprob: -14.750001907348633
    4. 'ult' → logprob: -14.875001907348633
    5. 'mul' → logprob: -16.125001907348633
    6. 'ultiply' → logprob: -16.250001907348633
    7. 'u' → logprob: -16.500001907348633
    8. '.ul' → logprob: -16.750001907348633
    9. 'ул' → logprob: -17.125001907348633
    10. '-ul' → logprob: -17.375001907348633

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.123899558791891e-05
    2. ',[' → logprob: -10.25007152557373
    3. ' ,' → logprob: -10.37507152557373
    4. 'lambda' → logprob: -13.87507152557373
    5. '```' → logprob: -14.37507152557373
    6. '*,' → logprob: -14.87507152557373
    7. ',*' → logprob: -14.87507152557373
    8. 'range' → logprob: -15.25007152557373
    9. ',
' → logprob: -15.37507152557373
    10. ',(' → logprob: -15.50007152557373

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7396534085273743
    2. 'range' → logprob: -0.7396534085273743
    3. '(range' → logprob: -3.1146533489227295
    4. '[' → logprob: -7.489653587341309
    5. '	range' → logprob: -8.114653587341309
    6. ' [' → logprob: -9.614653587341309
    7. ')' → logprob: -10.114653587341309
    8. ' xrange' → logprob: -10.614653587341309
    9. '.range' → logprob: -10.989653587341309
    10. ' (' → logprob: -11.739653587341309

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018163522705435753
    2. '(' → logprob: -4.018163681030273
    3. '(k' → logprob: -11.893163681030273
    4. '(N' → logprob: -12.893163681030273
    5. ' (' → logprob: -13.393163681030273
    6. ')(' → logprob: -14.643163681030273
    7. '((' → logprob: -14.893163681030273
    8. ')' → logprob: -14.893163681030273
    9. '(
' → logprob: -15.393163681030273
    10. '(max' → logprob: -15.518163681030273

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6079795360565186
    2. '-k' → logprob: -0.8579795360565186
    3. ' -' → logprob: -3.8579795360565186
    4. '-n' → logprob: -5.482979774475098
    5. ' ,' → logprob: -6.357979774475098
    6. '-' → logprob: -6.482979774475098
    7. 'n' → logprob: -6.732979774475098
    8. ' n' → logprob: -7.232979774475098
    9. 'k' → logprob: -7.607979774475098
    10. ',n' → logprob: -8.357979774475098

Token 40: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015089125372469425
    2. ' n' → logprob: -6.626508712768555
    3. '(n' → logprob: -8.751508712768555
    4. 'k' → logprob: -11.376508712768555
    5. ')n' → logprob: -12.376508712768555
    6. '   ' → logprob: -12.501508712768555
    7. ',' → logprob: -13.751508712768555
    8. ',n' → logprob: -14.376508712768555
    9. '	n' → logprob: -14.501508712768555
    10. '{' → logprob: -14.751508712768555

Token 41: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.040114324539899826
    2. '-' → logprob: -3.665114402770996
    3. ' -' → logprob: -4.290114402770996
    4. 'k' → logprob: -11.915114402770996
    5. ' ' → logprob: -12.415114402770996
    6. '-K' → logprob: -13.415114402770996
    7. '   ' → logprob: -13.540114402770996
    8. ' k' → logprob: -14.040114402770996
    9. '-max' → logprob: -15.665114402770996
    10. '-
' → logprob: -15.915114402770996

Token 42: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003305784775875509
    2. ' k' → logprob: -8.250330924987793
    3. '-k' → logprob: -9.875330924987793
    4. '   ' → logprob: -12.125330924987793
    5. ' -' → logprob: -12.625330924987793
    6. '+k' → logprob: -12.625330924987793
    7. ' ' → logprob: -13.375330924987793
    8. '-' → logprob: -13.500330924987793
    9. '  ' → logprob: -14.375330924987793
    10. '	k' → logprob: -14.750330924987793

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009356398368254304
    2. ',-' → logprob: -7.0009355545043945
    3. ' ,' → logprob: -10.875935554504395
    4. '-' → logprob: -13.125935554504395
    5. ' ,-' → logprob: -13.375935554504395
    6. '+' → logprob: -14.750935554504395
    7. ',
' → logprob: -14.750935554504395
    8. '```' → logprob: -15.250935554504395
    9. '   ' → logprob: -15.500935554504395
    10. ',None' → logprob: -15.875935554504395

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0789741724729538
    2. ' -' → logprob: -2.5789742469787598
    3. ' ' → logprob: -10.578973770141602
    4. '1' → logprob: -10.828973770141602
    5. '<|end|>' → logprob: -11.453973770141602
    6. '0' → logprob: -11.578973770141602
    7. '-step' → logprob: -12.828973770141602
    8. ')' → logprob: -12.828973770141602
    9. '```' → logprob: -12.953973770141602
    10. '   ' → logprob: -13.578973770141602

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.500001907348633
    5. ')' → logprob: -17.625001907348633
    6. '１' → logprob: -18.812501907348633
    7. '  ' → logprob: -19.625001907348633
    8. '<|end|>' → logprob: -19.687501907348633
    9. ',' → logprob: -19.875001907348633
    10. '
' → logprob: -19.875001907348633

Token 46: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006890134885907173
    2. ')' → logprob: -5.006890296936035
    3. '))' → logprob: -9.006890296936035
    4. ' ),' → logprob: -10.006890296936035
    5. ' ' → logprob: -13.131890296936035
    6. '   ' → logprob: -14.006890296936035
    7. '```' → logprob: -14.631890296936035
    8. '1' → logprob: -14.881890296936035
    9. ',' → logprob: -14.881890296936035
    10. ' )' → logprob: -15.006890296936035

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008056987426243722
    2. ' ' → logprob: -7.125805854797363
    3. '   ' → logprob: -14.500805854797363
    4. ')' → logprob: -14.625805854797363
    5. '  ' → logprob: -15.750805854797363
    6. '```' → logprob: -17.375804901123047
    7. ' ' → logprob: -17.750804901123047
    8. '<|end|>' → logprob: -18.000804901123047
    9. '    ' → logprob: -18.250804901123047
    10. '۱' → logprob: -18.313304901123047

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.000019073486328
    4. ')' → logprob: -17.250019073486328
    5. '  ' → logprob: -18.500019073486328
    6. '۱' → logprob: -18.937519073486328
    7. '```' → logprob: -19.062519073486328
    8. '`' → logprob: -19.250019073486328
    9. 'int' → logprob: -19.625019073486328
    10. '' → logprob: -19.750019073486328

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001486535300500691
    2. '   ' → logprob: -6.876486301422119
    3. ')
' → logprob: -7.876486301422119
    4. '       ' → logprob: -10.251486778259277
    5. ' )' → logprob: -10.751486778259277
    6. ')
' → logprob: -12.001486778259277
    7. '):' → logprob: -12.626486778259277
    8. ',' → logprob: -13.876486778259277
    9. '),' → logprob: -14.376486778259277
    10. ' ' → logprob: -14.501486778259277

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5877901911735535
    2. ')' → logprob: -0.8377901911735535
    3. '       ' → logprob: -5.337790012359619
    4. '<|end|>' → logprob: -5.837790012359619
    5. ':' → logprob: -7.212790012359619
    6. ' ' → logprob: -7.212790012359619
    7. '):' → logprob: -7.462790012359619
    8. '/' → logprob: -7.962790012359619
    9. '*' → logprob: -8.087790489196777
    10. '    ' → logprob: -8.212790489196777

Token 51: ' den' (ID: 1786)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034211664460599422
    2. '   ' → logprob: -6.503421306610107
    3. 'return' → logprob: -8.25342082977295
    4. ')' → logprob: -8.37842082977295
    5. '/' → logprob: -8.37842082977295
    6. 'num' → logprob: -8.37842082977295
    7. '        
' → logprob: -8.62842082977295
    8. 'except' → logprob: -8.75342082977295
    9. ' /' → logprob: -9.12842082977295
    10. 'div' → logprob: -9.25342082977295

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023407360538840294
    2. ' =' → logprob: -3.773407459259033
    3. 'ominator' → logprob: -9.023406982421875
    4. ' ' → logprob: -11.273406982421875
    5. 'om' → logprob: -11.523406982421875
    6. '   ' → logprob: -11.648406982421875
    7. '*=' → logprob: -13.523406982421875
    8. '  ' → logprob: -13.523406982421875
    9. '    ' → logprob: -13.773406982421875
    10. 'umerator' → logprob: -14.023406982421875

Token 53: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.04865799471735954
    2. ' reduce' → logprob: -3.0486578941345215
    3. '1' → logprob: -11.29865837097168
    4. '.reduce' → logprob: -11.42365837097168
    5. ' ' → logprob: -11.67365837097168
    6. 'factor' → logprob: -12.04865837097168
    7. 'mul' → logprob: -12.42365837097168
    8. 'redu' → logprob: -12.42365837097168
    9. '_reduce' → logprob: -12.42365837097168
    10. '    ' → logprob: -12.54865837097168

Token 54: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0022481500636786222
    2. '(' → logprob: -6.127248287200928
    3. 'mul' → logprob: -10.00224781036377
    4. '(mult' → logprob: -11.50224781036377
    5. '(operator' → logprob: -13.25224781036377
    6. '_mul' → logprob: -13.37724781036377
    7. '(lambda' → logprob: -14.37724781036377
    8. ')' → logprob: -14.62724781036377
    9. '<|end|>' → logprob: -14.62724781036377
    10. ' (' → logprob: -14.87724781036377

Token 55: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.023277508094906807
    2. 'mul' → logprob: -3.773277521133423
    3. '(m' → logprob: -10.773277282714844
    4. ' mul' → logprob: -12.648277282714844
    5. 'ulm' → logprob: -13.023277282714844
    6. '_mul' → logprob: -13.773277282714844
    7. '.mul' → logprob: -14.023277282714844
    8. 'ult' → logprob: -14.273277282714844
    9. '<ul' → logprob: -14.648277282714844
    10. 'um' → logprob: -14.773277282714844

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011586773907765746
    2. ',m' → logprob: -7.001158714294434
    3. '(m' → logprob: -9.251158714294434
    4. 'mul' → logprob: -10.001158714294434
    5. '(' → logprob: -10.126158714294434
    6. '(mult' → logprob: -10.251158714294434
    7. 'multip' → logprob: -10.876158714294434
    8. ' ,' → logprob: -12.251158714294434
    9. '(range' → logprob: -13.126158714294434
    10. 'multiply' → logprob: -13.876158714294434

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06229345500469208
    2. 'range' → logprob: -2.812293529510498
    3. '(range' → logprob: -8.31229305267334
    4. '	range' → logprob: -9.68729305267334
    5. ')' → logprob: -12.06229305267334
    6. ' xrange' → logprob: -12.31229305267334
    7. '<|end|>' → logprob: -12.31229305267334
    8. ' ' → logprob: -13.18729305267334
    9. ',' → logprob: -14.93729305267334
    10. '.range' → logprob: -15.06229305267334

Token 58: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.04859066382050514
    2. '(' → logprob: -3.048590660095215
    3. ' (' → logprob: -13.423590660095215
    4. ')(' → logprob: -14.298590660095215
    5. 'k' → logprob: -14.798590660095215
    6. '1' → logprob: -14.798590660095215
    7. ')' → logprob: -16.04859161376953
    8. '<|end|>' → logprob: -16.04859161376953
    9. '(K' → logprob: -16.42359161376953
    10. '(n' → logprob: -17.17359161376953

Token 59: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.422046959400177
    2. '(k' → logprob: -1.2970468997955322
    3. '1' → logprob: -3.1720468997955322
    4. '(' → logprob: -3.5470468997955322
    5. ' k' → logprob: -10.047046661376953
    6. ')' → logprob: -10.172046661376953
    7. '2' → logprob: -10.297046661376953
    8. '	k' → logprob: -10.422046661376953
    9. '{k' → logprob: -10.922046661376953
    10. ',k' → logprob: -11.547046661376953

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007106767036020756
    2. ',k' → logprob: -5.007106781005859
    3. ' ,' → logprob: -7.882106781005859
    4. 'k' → logprob: -11.50710678100586
    5. ',K' → logprob: -13.50710678100586
    6. ' k' → logprob: -14.38210678100586
    7. '(k' → logprob: -14.63210678100586
    8. ',
' → logprob: -14.88210678100586
    9. '   ' → logprob: -14.88210678100586
    10. ' ' → logprob: -16.00710678100586

Token 61: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001805606996640563
    2. ' k' → logprob: -6.376805782318115
    3. 'K' → logprob: -9.376805305480957
    4. '<|end|>' → logprob: -11.376805305480957
    5. '{k' → logprob: -13.501805305480957
    6. ' K' → logprob: -13.501805305480957
    7. ',' → logprob: -14.001805305480957
    8. '	k' → logprob: -14.126805305480957
    9. ',k' → logprob: -14.376805305480957
    10. '<|end|>' → logprob: -14.501805305480957

Token 62: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193271040916443
    2. ' +' → logprob: -1.5019327402114868
    3. ',' → logprob: -13.251933097839355
    4. ' ' → logprob: -13.876933097839355
    5. '```' → logprob: -15.626933097839355
    6. '),' → logprob: -15.751933097839355
    7. '+,' → logprob: -16.12693214416504
    8. '1' → logprob: -16.37693214416504
    9. '   ' → logprob: -16.50193214416504
    10. '+k' → logprob: -16.62693214416504

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001033999491482973
    2. ' ' → logprob: -6.876033782958984
    3. '```' → logprob: -14.501033782958984
    4. '   ' → logprob: -15.626033782958984
    5. '+' → logprob: -15.876033782958984
    6. ')' → logprob: -16.126033782958984
    7. '  ' → logprob: -16.251033782958984
    8. '),' → logprob: -16.251033782958984
    9. ',' → logprob: -17.688533782958984
    10. '))' → logprob: -17.938533782958984

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -16.0000057220459
    4. ')' → logprob: -18.0000057220459
    5. '+' → logprob: -18.2500057220459
    6. '１' → logprob: -19.1875057220459
    7. '   ' → logprob: -19.1875057220459
    8. '``' → logprob: -19.3125057220459
    9. '۱' → logprob: -19.5625057220459
    10. '),' → logprob: -19.8750057220459

Token 65: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0002836232597474009
    2. '))' → logprob: -8.625283241271973
    3. ' ),' → logprob: -10.125283241271973
    4. '   ' → logprob: -10.375283241271973
    5. ')' → logprob: -10.750283241271973
    6. '       ' → logprob: -12.375283241271973
    7. '```' → logprob: -13.625283241271973
    8. ')),' → logprob: -13.875283241271973
    9. ')))' → logprob: -13.875283241271973
    10. '+' → logprob: -14.000283241271973

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026444390416145325
    2. ' ' → logprob: -3.651444435119629
    3. ')' → logprob: -8.901444435119629
    4. ' )' → logprob: -12.401444435119629
    5. '   ' → logprob: -13.901444435119629
    6. '),' → logprob: -14.651444435119629
    7. '  ' → logprob: -15.338944435119629
    8. ' ' → logprob: -15.338944435119629
    9. '```' → logprob: -15.338944435119629
    10. '))' → logprob: -15.526444435119629

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.114600834436715e-05
    2. ')' → logprob: -9.375091552734375
    3. ' ' → logprob: -12.125091552734375
    4. '),' → logprob: -15.375091552734375
    5. '   ' → logprob: -16.000091552734375
    6. '```' → logprob: -16.000091552734375
    7. '))' → logprob: -16.500091552734375
    8. ')>' → logprob: -17.250091552734375
    9. '  ' → logprob: -17.375091552734375
    10. '<|end|>' → logprob: -17.750091552734375

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012513005640357733
    2. ')
' → logprob: -6.751251220703125
    3. '   ' → logprob: -10.001251220703125
    4. '       ' → logprob: -10.876251220703125
    5. ')
' → logprob: -11.251251220703125
    6. ' )' → logprob: -13.376251220703125
    7. ')

' → logprob: -14.251251220703125
    8. '))' → logprob: -15.126251220703125
    9. ')return' → logprob: -15.251251220703125
    10. ')\' → logprob: -16.001251220703125

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06900649517774582
    2. ')' → logprob: -2.8190064430236816
    3. '   ' → logprob: -5.069006443023682
    4. '<|end|>' → logprob: -8.44400691986084
    5. '           ' → logprob: -9.44400691986084
    6. ' return' → logprob: -9.81900691986084
    7. '):' → logprob: -9.81900691986084
    8. '):
' → logprob: -9.81900691986084
    9. ' except' → logprob: -10.06900691986084
    10. ')
' → logprob: -10.19400691986084

Token 70: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00905626267194748
    2. ' return' → logprob: -5.009056091308594
    3. 'return' (adapté à ' return') → logprob: -6.134056091308594
    4. ')' → logprob: -9.634056091308594
    5. '   ' → logprob: -9.634056091308594
    6. '	return' → logprob: -11.134056091308594
    7. ':return' → logprob: -12.134056091308594
    8. '<|end|>' → logprob: -12.134056091308594
    9. '           ' → logprob: -12.509056091308594
    10. '	' → logprob: -13.134056091308594

Token 71: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.06197911128401756
    2. 'num' → logprob: -2.811979055404663
    3. ' int' → logprob: -11.561979293823242
    4. 'int' → logprob: -13.811979293823242
    5. '(num' → logprob: -14.811979293823242
    6. ' ' → logprob: -15.186979293823242
    7. '	num' → logprob: -16.061979293823242
    8. '<num' → logprob: -17.561979293823242
    9. ',num' → logprob: -17.686979293823242
    10. ' ' → logprob: -17.811979293823242

Token 72: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.026646729558706284
    2. '//' → logprob: -3.651646614074707
    3. ' /' → logprob: -8.651646614074707
    4. ' ' → logprob: -9.651646614074707
    5. '/' → logprob: -10.026646614074707
    6. ' ' → logprob: -10.401646614074707
    7. '   ' → logprob: -10.901646614074707
    8. ')' → logprob: -12.651646614074707
    9. '    ' → logprob: -13.151646614074707
    10. '  ' → logprob: -13.401646614074707

Token 73: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.01416398212313652
    2. ' den' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.889163970947266
    4. '   ' → logprob: -16.639163970947266
    5. '  ' → logprob: -17.514163970947266
    6. ' ' → logprob: -17.889163970947266
    7. 'def' → logprob: -18.264163970947266
    8. 'd' → logprob: -18.889163970947266
    9. 'det' → logprob: -19.014163970947266
    10. '	' → logprob: -19.326663970947266

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00551856542006135
    2. ' except' → logprob: -5.630518436431885
    3. 'except' → logprob: -6.380518436431885
    4. '	except' → logprob: -9.130518913269043
    5. '<|end|>' → logprob: -9.255518913269043
    6. '<|end|>' → logprob: -11.380518913269043
    7. '       ' → logprob: -12.880518913269043
    8. ',' → logprob: -14.130518913269043
    9. '    
' → logprob: -14.380518913269043
    10. '
' → logprob: -14.380518913269043

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001545810722745955
    2. ' except' → logprob: -6.6265459060668945
    3. 'except' → logprob: -8.626545906066895
    4. '	except' → logprob: -10.251545906066895
    5. '<|end|>' → logprob: -12.626545906066895
    6. '       ' → logprob: -14.626545906066895
    7. '```' → logprob: -15.251545906066895
    8. '<|end|>' → logprob: -15.376545906066895
    9. '    
' → logprob: -15.626545906066895
    10. ',' → logprob: -16.126544952392578

Token 76: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.478744238615036
    2. 'except' (adapté à ' except') → logprob: -1.3537442684173584
    3. ' except' → logprob: -2.1037442684173584
    4. '	except' → logprob: -9.478744506835938
    5. 'return' → logprob: -9.603744506835938
    6. '       ' → logprob: -11.603744506835938
    7. ' return' → logprob: -11.978744506835938
    8. ' ' → logprob: -12.478744506835938
    9. '
' → logprob: -13.978744506835938
    10. '    
' → logprob: -14.103744506835938

Token 77: ':
' (ID: 734)
  Prédit: 'Zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Zero' → logprob: -0.5762210488319397
    2. ' Zero' → logprob: -0.8262210488319397
    3. '(' → logprob: -8.576221466064453
    4. 'Exception' → logprob: -10.326221466064453
    5. 'Overflow' → logprob: -10.701221466064453
    6. '(Index' → logprob: -11.951221466064453
    7. 'Index' → logprob: -12.326221466064453
    8. '(Exception' → logprob: -12.326221466064453
    9. ' Overflow' → logprob: -12.451221466064453
    10. '(Type' → logprob: -12.576221466064453

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2546684741973877
    2. '       ' → logprob: -1.8796684741973877
    3. ' return' → logprob: -3.1296684741973877
    4. '0' → logprob: -3.7546684741973877
    5. 'return' → logprob: -5.879668235778809
    6. ' ' → logprob: -7.004668235778809
    7. '    ' → logprob: -8.254668235778809
    8. ':return' → logprob: -8.254668235778809
    9. ' None' → logprob: -8.379668235778809
    10. ' Zero' → logprob: -8.629668235778809

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22838804125785828
    2. ' return' → logprob: -2.2283880710601807
    3. '0' → logprob: -2.3533880710601807
    4. '   ' → logprob: -7.228387832641602
    5. '1' → logprob: -7.978387832641602
    6. 'None' → logprob: -8.728387832641602
    7. ' None' → logprob: -9.228387832641602
    8. ' ' → logprob: -9.478387832641602
    9. ':return' → logprob: -11.103387832641602
    10. '```' → logprob: -12.603387832641602

Token 80: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32629111409187317
    2. '0' → logprob: -1.3262910842895508
    3. ' None' → logprob: -4.701291084289551
    4. 'None' → logprob: -5.576291084289551
    5. '1' → logprob: -9.95129108428955
    6. ' ' → logprob: -11.82629108428955
    7. '  ' → logprob: -12.20129108428955
    8. '   ' → logprob: -12.51379108428955
    9. 'False' → logprob: -13.45129108428955
    10. ' -' → logprob: -13.63879108428955

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012130453251302242
    2. 'None' → logprob: -9.375121116638184
    3. ' ' → logprob: -10.375121116638184
    4. '1' → logprob: -12.250121116638184
    5. '-' → logprob: -15.375121116638184
    6. ' None' → logprob: -16.0001220703125
    7. '"' → logprob: -17.0001220703125
    8. 'False' → logprob: -17.2501220703125
    9. '   ' → logprob: -17.8751220703125
    10. 'Value' → logprob: -18.0001220703125

Token 82: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: 'M' (ID: 44)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18578536808490753
    2. 'result' → logprob: -2.1857852935791016
    3. 'if' → logprob: -4.185785293579102
    4. 'n' → logprob: -4.435785293579102
    5. 'C' → logprob: -4.810785293579102
    6. 'for' → logprob: -5.310785293579102
    7. 'answer' → logprob: -5.310785293579102
    8. 'c' → logprob: -6.185785293579102
    9. 'x' → logprob: -6.935785293579102
    10. 'a' → logprob: -6.935785293579102

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48904260993003845
    2. '=' → logprob: -1.4890426397323608
    3. '[' → logprob: -2.2390425205230713
    4. ',' → logprob: -3.2390425205230713
    5. '_' → logprob: -5.61404275894165
    6. '.' → logprob: -5.73904275894165
    7. 'A' → logprob: -7.11404275894165
    8. 'a' → logprob: -7.23904275894165
    9. ' ' → logprob: -7.36404275894165
    10. ')' → logprob: -7.61404275894165

Token 85: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.3112550973892212
    2. 'int' → logprob: -1.6862550973892212
    3. ' K' → logprob: -1.9362550973892212
    4. ' int' → logprob: -2.6862549781799316
    5. 'C' → logprob: -2.9362549781799316
    6. 'N' → logprob: -3.0612549781799316
    7. '10' → logprob: -3.1862549781799316
    8. ' ' → logprob: -3.6862549781799316
    9. 'min' → logprob: -3.8112549781799316
    10. '0' → logprob: -3.9362549781799316

Token 86: '10' (ID: 702)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.2838385105133057
    2. 'C' → logprob: -1.4088385105133057
    3. 'int' → logprob: -1.5338385105133057
    4. 'min' → logprob: -1.9088385105133057
    5. 'N' → logprob: -2.7838385105133057
    6. '10' → logprob: -4.158838272094727
    7. 'max' → logprob: -4.283838272094727
    8. 'sum' → logprob: -5.658838272094727
    9. 'map' → logprob: -5.783838272094727
    10. '100' → logprob: -5.908838272094727

Token 87: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007997198961675167
    2. ' **' → logprob: -5.757997035980225
    3. '*' → logprob: -5.882997035980225
    4. '0' → logprob: -7.007997035980225
    5. '#' → logprob: -8.132997512817383
    6. '+' → logprob: -8.632997512817383
    7. ',' → logprob: -9.132997512817383
    8. 'K' → logprob: -9.507997512817383
    9. ')' → logprob: -9.507997512817383
    10. '<|end|>' → logprob: -9.757997512817383

Token 88: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0003763343847822398
    2. '18' → logprob: -8.50037670135498
    3. '6' → logprob: -9.50037670135498
    4. '7' → logprob: -10.37537670135498
    5. '8' → logprob: -10.75037670135498
    6. '12' → logprob: -11.37537670135498
    7. '10' → logprob: -11.50037670135498
    8. '15' → logprob: -11.62537670135498
    9. '5' → logprob: -11.75037670135498
    10. '11' → logprob: -13.75037670135498

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001245112856850028
    2. ' +' → logprob: -6.876245021820068
    3. '7' → logprob: -8.876245498657227
    4. '+
' → logprob: -10.376245498657227
    5. 'plus' → logprob: -10.876245498657227
    6. '+

' → logprob: -11.501245498657227
    7. ' plus' → logprob: -13.001245498657227
    8. 'PLUS' → logprob: -13.501245498657227
    9. 'Plus' → logprob: -13.751245498657227
    10. '```' → logprob: -14.126245498657227

Token 90: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. '+' → logprob: -15.0
    3. '```' → logprob: -17.5
    4. '07' → logprob: -18.25
    5. ' ' → logprob: -18.375
    6. '9' → logprob: -19.0
    7. '' → logprob: -20.125
    8. '87' → logprob: -20.1875
    9. '   ' → logprob: -20.1875
    10. '

' → logprob: -20.375

Token 91: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.25
    3. '```' → logprob: -19.25
    4. '07' → logprob: -19.875
    5. '

' → logprob: -20.875
    6. '9' → logprob: -20.875
    7. ' ' → logprob: -21.0
    8. '   ' → logprob: -21.25
    9. '' → logprob: -21.3125
    10. '７' → logprob: -21.9375

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'lst' (ID: 65430)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12200865149497986
    2. 'answer' → logprob: -3.6220085620880127
    3. 'C' → logprob: -4.247008800506592
    4. 'count' → logprob: -4.497008800506592
    5. 'dp' → logprob: -4.747008800506592
    6. 'res' → logprob: -4.997008800506592
    7. 'print' → logprob: -5.122008800506592
    8. 'for' → logprob: -5.372008800506592
    9. 'ans' → logprob: -5.372008800506592
    10. 'def' → logprob: -5.372008800506592

Token 94: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4145781099796295
    2. ' =' → logprob: -1.6645780801773071
    3. '_' → logprob: -2.6645781993865967
    4. '=' → logprob: -2.9145781993865967
    5. '[]' → logprob: -4.664577960968018
    6. '(' → logprob: -5.039577960968018
    7. '[:]' → logprob: -5.414577960968018
    8. '.' → logprob: -7.039577960968018
    9. ' ' → logprob: -7.164577960968018
    10. 's' → logprob: -7.289577960968018

Token 95: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.5160436630249023
    2. '[list' → logprob: -1.5160436630249023
    3. ' [' → logprob: -1.7660436630249023
    4. '[' → logprob: -1.8910436630249023
    5. 'list' → logprob: -2.0160436630249023
    6. ' list' → logprob: -2.8910436630249023
    7. ' []' → logprob: -3.2660436630249023
    8. '[input' → logprob: -4.766043663024902
    9. '[int' → logprob: -5.891043663024902
    10. '[len' → logprob: -9.016043663024902

Token 96: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01923162303864956
    2. '(' → logprob: -4.019231796264648
    3. '(range' → logprob: -7.769231796264648
    4. '(int' → logprob: -7.894231796264648
    5. '(input' → logprob: -8.394231796264648
    6. '()' → logprob: -9.894231796264648
    7. '(filter' → logprob: -13.394231796264648
    8. '(i' → logprob: -13.769231796264648
    9. 'map' → logprob: -13.894231796264648
    10. '(
' → logprob: -14.269231796264648

Token 97: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018280261429026723
    2. '(' → logprob: -8.75018310546875
    3. 'int' → logprob: -11.25018310546875
    4. ')' → logprob: -12.87518310546875
    5. ',int' → logprob: -12.87518310546875
    6. '[int' → logprob: -13.62518310546875
    7. '=int' → logprob: -13.75018310546875
    8. '<int' → logprob: -13.75018310546875
    9. '(input' → logprob: -13.75018310546875
    10. ']int' → logprob: -14.12518310546875

Token 98: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03588303178548813
    2. ' x' → logprob: -3.4108829498291016
    3. 'int' → logprob: -6.160882949829102
    4. ' int' → logprob: -9.285882949829102
    5. ':int' → logprob: -11.160882949829102
    6. 'a' → logprob: -12.410882949829102
    7. ':' → logprob: -12.910882949829102
    8. 's' → logprob: -13.285882949829102
    9. '(int' → logprob: -13.535882949829102
    10. 'f' → logprob: -13.660882949829102

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006252858322113752
    2. ':int' → logprob: -5.881252765655518
    3. ' :' → logprob: -6.006252765655518
    4. ':i' → logprob: -7.631252765655518
    5. ',' → logprob: -8.256253242492676
    6. 'int' → logprob: -9.756253242492676
    7. ',int' → logprob: -10.256253242492676
    8. ' i' → logprob: -10.756253242492676
    9. ',i' → logprob: -11.006253242492676
    10. '=int' → logprob: -11.381253242492676

Token 100: ' C' (ID: 363)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33359044790267944
    2. ' int' → logprob: -1.4585905075073242
    3. '(int' → logprob: -3.958590507507324
    4. ' i' → logprob: -4.458590507507324
    5. 'i' → logprob: -4.583590507507324
    6. '(i' → logprob: -5.708590507507324
    7. ' (' → logprob: -6.083590507507324
    8. ' C' → logprob: -7.083590507507324
    9. 'C' → logprob: -7.333590507507324
    10. ' lambda' → logprob: -7.333590507507324

Token 101: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3592677116394043
    2. '(K' → logprob: -1.2342677116394043
    3. '(i' → logprob: -4.734267711639404
    4. '(' → logprob: -6.359267711639404
    5. '(int' → logprob: -8.609268188476562
    6. ',K' → logprob: -11.359268188476562
    7. ')' → logprob: -11.734268188476562
    8. '(n' → logprob: -12.109268188476562
    9. 'K' → logprob: -12.234268188476562
    10. '(I' → logprob: -12.359268188476562

Token 102: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10395434498786926
    2. ',i' → logprob: -2.478954315185547
    3. ' ,' → logprob: -4.603954315185547
    4. '-' → logprob: -6.103954315185547
    5. ' -' → logprob: -6.728954315185547
    6. ',K' → logprob: -7.728954315185547
    7. '(i' → logprob: -8.478954315185547
    8. ' i' → logprob: -8.728954315185547
    9. ',N' → logprob: -8.728954315185547
    10. '-i' → logprob: -8.853954315185547

Token 103: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7257081866264343
    2. 'i' → logprob: -0.7257081866264343
    3. ' i' → logprob: -3.975708246231079
    4. 'K' → logprob: -4.4757080078125
    5. ' ' → logprob: -7.1007080078125
    6. ' K' → logprob: -7.7257080078125
    7. '2' → logprob: -8.1007080078125
    8. '(' → logprob: -9.3507080078125
    9. '(i' → logprob: -9.9757080078125
    10. ',' → logprob: -10.2257080078125

Token 104: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03549044206738472
    2. ',i' → logprob: -3.5354905128479004
    3. ' ,' → logprob: -6.2854905128479
    4. ',K' → logprob: -6.9104905128479
    5. ',N' → logprob: -7.0354905128479
    6. '-' → logprob: -7.6604905128479
    7. '(i' → logprob: -7.6604905128479
    8. ',k' → logprob: -8.535490036010742
    9. '+i' → logprob: -8.660490036010742
    10. ',n' → logprob: -9.035490036010742

Token 105: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25968384742736816
    2. ' i' → logprob: -2.009683847427368
    3. '1' → logprob: -2.384683847427368
    4. ' ' → logprob: -6.009683609008789
    5. 'K' → logprob: -10.259683609008789
    6. ' K' → logprob: -10.884683609008789
    7. '2' → logprob: -11.697183609008789
    8. 'N' → logprob: -12.197183609008789
    9. ',' → logprob: -12.947183609008789
    10. ')' → logprob: -13.009683609008789

Token 106: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05107353627681732
    2. '1' → logprob: -3.0510735511779785
    3. ' i' → logprob: -6.0510735511779785
    4. ' ' → logprob: -9.67607307434082
    5. 'K' → logprob: -10.67607307434082
    6. '2' → logprob: -11.17607307434082
    7. 'N' → logprob: -11.92607307434082
    8. '   ' → logprob: -13.05107307434082
    9. '(i' → logprob: -13.30107307434082
    10. 'int' → logprob: -13.61357307434082

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03534821420907974
    2. ',i' → logprob: -4.035348415374756
    3. '(i' → logprob: -4.160348415374756
    4. ' ,' → logprob: -7.160348415374756
    5. '(' → logprob: -8.035347938537598
    6. ',N' → logprob: -8.660347938537598
    7. '(N' → logprob: -9.660347938537598
    8. ',n' → logprob: -10.035347938537598
    9. '(n' → logprob: -10.410347938537598
    10. '+i' → logprob: -11.910347938537598

Token 108: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006921153981238604
    2. ' i' → logprob: -5.006921291351318
    3. 'K' → logprob: -9.63192081451416
    4. 'N' → logprob: -9.75692081451416
    5. 'int' → logprob: -10.00692081451416
    6. '   ' → logprob: -11.50692081451416
    7. ' ' → logprob: -12.00692081451416
    8. '1' → logprob: -12.13192081451416
    9. ' K' → logprob: -12.38192081451416
    10. '(i' → logprob: -12.88192081451416

Token 109: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035590888001024723
    2. ' ,' → logprob: -6.003559112548828
    3. '),' → logprob: -7.628559112548828
    4. ',N' → logprob: -8.128559112548828
    5. ',K' → logprob: -8.628559112548828
    6. '(N' → logprob: -11.253559112548828
    7. ',n' → logprob: -11.253559112548828
    8. '   ' → logprob: -11.378559112548828
    9. ',i' → logprob: -11.628559112548828
    10. ')))' → logprob: -11.753559112548828

Token 110: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08572667092084885
    2. 'range' → logprob: -2.710726737976074
    3. '(range' → logprob: -4.210726737976074
    4. ' range' → logprob: -7.210726737976074
    5. ' ,' → logprob: -10.710726737976074
    6. 'for' → logprob: -11.085726737976074
    7. ')' → logprob: -11.210726737976074
    8. '),' → logprob: -11.585726737976074
    9. '))' → logprob: -11.710726737976074
    10. ',N' → logprob: -11.835726737976074

Token 111: ' M' (ID: 391)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.1866763830184937
    2. '(i' → logprob: -1.4366763830184937
    3. 'i' → logprob: -1.6866763830184937
    4. 'M' → logprob: -2.311676502227783
    5. ' (' → logprob: -2.936676502227783
    6. '(N' → logprob: -3.186676502227783
    7. '(' → logprob: -3.436676502227783
    8. ' ' → logprob: -4.811676502227783
    9. 'K' → logprob: -5.061676502227783
    10. ' i' → logprob: -5.186676502227783

Token 112: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042054426739923656
    2. ',K' → logprob: -8.750420570373535
    3. ',N' → logprob: -8.875420570373535
    4. ' ,' → logprob: -9.750420570373535
    5. ',i' → logprob: -10.375420570373535
    6. ',k' → logprob: -11.875420570373535
    7. ',n' → logprob: -12.000420570373535
    8. ',int' → logprob: -12.625420570373535
    9. '))' → logprob: -13.250420570373535
    10. ',input' → logprob: -13.250420570373535

Token 113: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7630525827407837
    2. ' i' → logprob: -0.7630525827407837
    3. '0' → logprob: -3.013052463531494
    4. ' ' → logprob: -4.263052463531494
    5. '1' → logprob: -5.513052463531494
    6. '  ' → logprob: -10.138052940368652
    7. '(i' → logprob: -10.138052940368652
    8. 'K' → logprob: -10.263052940368652
    9. ' isinstance' → logprob: -10.763052940368652
    10. ' (' → logprob: -10.763052940368652

Token 114: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.26178857684135437
    2. '<=' → logprob: -1.7617886066436768
    3. ' >=' → logprob: -3.2617886066436768
    4. '>=' → logprob: -4.386788368225098
    5. ' in' → logprob: -5.261788368225098
    6. ' ' → logprob: -7.261788368225098
    7. '==' → logprob: -7.636788368225098
    8. ' else' → logprob: -8.136788368225098
    9. ' ==' → logprob: -8.136788368225098
    10. '<|end|>' → logprob: -8.261788368225098

Token 115: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7000766396522522
    2. 'N' → logprob: -0.7000766396522522
    3. ' K' → logprob: -5.825076580047607
    4. ' N' → logprob: -6.075076580047607
    5. 'min' → logprob: -6.825076580047607
    6. 'len' → logprob: -8.700077056884766
    7. '(N' → logprob: -9.075077056884766
    8. ' ' → logprob: -9.325077056884766
    9. ' min' → logprob: -9.325077056884766
    10. 'max' → logprob: -10.325077056884766

Token 116: ' -' (ID: 533)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.43606340885162354
    2. ' -' → logprob: -1.6860634088516235
    3. ' else' → logprob: -2.311063289642334
    4. '-' → logprob: -3.186063289642334
    5. 'else' → logprob: -3.936063289642334
    6. 'and' → logprob: -5.436063289642334
    7. ' and' → logprob: -6.436063289642334
    8. 'K' → logprob: -6.811063289642334
    9. '+' → logprob: -7.686063289642334
    10. ' ' → logprob: -8.061063766479492

Token 117: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00035048185964114964
    2. 'i' → logprob: -9.000350952148438
    3. '1' → logprob: -9.875350952148438
    4. ' K' → logprob: -10.125350952148438
    5. '(K' → logprob: -10.250350952148438
    6. '(' → logprob: -10.500350952148438
    7. '(i' → logprob: -11.000350952148438
    8. 'N' → logprob: -11.000350952148438
    9. '2' → logprob: -11.375350952148438
    10. ' ' → logprob: -11.500350952148438

Token 118: ' +' (ID: 659)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08224327117204666
    2. 'else' → logprob: -2.8322432041168213
    3. '+' → logprob: -4.2072434425354
    4. ' and' → logprob: -5.9572434425354
    5. 'and' → logprob: -6.4572434425354
    6. ' +' → logprob: -7.0822434425354
    7. ' ' → logprob: -9.082242965698242
    8. ')' → logprob: -11.519742965698242
    9. ',' → logprob: -11.582242965698242
    10. '-' → logprob: -11.644742965698242

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10383390635251999
    2. 'i' → logprob: -2.3538339138031006
    3. 'K' → logprob: -6.8538336753845215
    4. ' ' → logprob: -6.8538336753845215
    5. '0' → logprob: -7.2288336753845215
    6. ' i' → logprob: -7.3538336753845215
    7. '2' → logprob: -9.97883415222168
    8. 'N' → logprob: -10.47883415222168
    9. ' K' → logprob: -10.97883415222168
    10. 'len' → logprob: -11.22883415222168

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014391618315130472
    2. '0' → logprob: -7.001439094543457
    3. ' ' → logprob: -7.751439094543457
    4. 'i' → logprob: -9.751439094543457
    5. '2' → logprob: -10.751439094543457
    6. '   ' → logprob: -12.813939094543457
    7. '3' → logprob: -13.126439094543457
    8. 'K' → logprob: -13.501439094543457
    9. '```' → logprob: -13.626439094543457
    10. '10' → logprob: -14.126439094543457

Token 121: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4775368869304657
    2. 'else' → logprob: -0.9775369167327881
    3. ',' → logprob: -5.727536678314209
    4. ')' → logprob: -8.852537155151367
    5. '),' → logprob: -11.602537155151367
    6. ' and' → logprob: -11.852537155151367
    7. '```' → logprob: -11.852537155151367
    8. '   ' → logprob: -12.227537155151367
    9. ' ' → logprob: -12.602537155151367
    10. '0' → logprob: -12.727537155151367

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007616087328642607
    2. ' ' → logprob: -4.88261604309082
    3. '1' → logprob: -12.75761604309082
    4. '   ' → logprob: -12.88261604309082
    5. '  ' → logprob: -14.57011604309082
    6. '(' → logprob: -15.00761604309082
    7. 'C' → logprob: -15.07011604309082
    8. ',' → logprob: -15.19511604309082
    9. ')' → logprob: -15.32011604309082
    10. '[' → logprob: -15.32011604309082

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002817597473040223
    2. ' ' → logprob: -5.877817630767822
    3. '1' → logprob: -12.752817153930664
    4. '   ' → logprob: -13.315317153930664
    5. 'None' → logprob: -14.190317153930664
    6. '  ' → logprob: -14.627817153930664
    7. ')' → logprob: -14.690317153930664
    8. '(' → logprob: -14.877817153930664
    9. '           ' → logprob: -15.190317153930664
    10. ',' → logprob: -15.252817153930664

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010521204239921644
    2. 'range' → logprob: -10.250104904174805
    3. ',list' → logprob: -10.750104904174805
    4. ' ,' → logprob: -10.875104904174805
    5. ',N' → logprob: -11.625104904174805
    6. ',l' → logprob: -11.750104904174805
    7. ',n' → logprob: -13.000104904174805
    8. ',input' → logprob: -13.500104904174805
    9. '(range' → logprob: -13.750104904174805
    10. 'lst' → logprob: -13.875104904174805

Token 125: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815006136894226
    2. ' range' → logprob: -4.0181498527526855
    3. '(range' → logprob: -15.643150329589844
    4. '	range' → logprob: -18.768150329589844
    5. '   ' → logprob: -19.393150329589844
    6. 'Range' → logprob: -20.268150329589844
    7. ' ' → logprob: -20.393150329589844
    8. 're' → logprob: -21.768150329589844
    9. '  ' → logprob: -21.893150329589844
    10. '[' → logprob: -22.143150329589844

Token 126: '(' (ID: 7)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.009260734543204308
    2. '(' → logprob: -4.759260654449463
    3. '(N' → logprob: -7.384260654449463
    4. '(k' → logprob: -11.134261131286621
    5. '((' → logprob: -12.259261131286621
    6. '(M' → logprob: -13.509261131286621
    7. '0' → logprob: -14.134261131286621
    8. 'K' → logprob: -14.259261131286621
    9. '(C' → logprob: -14.634261131286621
    10. '(
' → logprob: -14.634261131286621

Token 127: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004671376198530197
    2. 'N' → logprob: -5.754671573638916
    3. '0' → logprob: -6.754671573638916
    4. ' K' → logprob: -8.254671096801758
    5. '(K' → logprob: -10.504671096801758
    6. '(' → logprob: -11.254671096801758
    7. '1' → logprob: -11.754671096801758
    8. ' ' → logprob: -12.629671096801758
    9. '(N' → logprob: -13.004671096801758
    10. ' N' → logprob: -13.629671096801758

Token 128: ',' (ID: 11)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.5474414229393005
    2. ',' → logprob: -0.9224414229393005
    3. ',K' → logprob: -4.172441482543945
    4. '(N' → logprob: -5.297441482543945
    5. '(' → logprob: -5.922441482543945
    6. ' ,' → logprob: -7.172441482543945
    7. 'K' → logprob: -9.547441482543945
    8. ' (' → logprob: -10.547441482543945
    9. ',(' → logprob: -11.297441482543945
    10. ',N' → logprob: -11.672441482543945

Token 129: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.008410315960645676
    2. ' K' → logprob: -5.133410453796387
    3. 'N' → logprob: -6.008410453796387
    4. ' N' → logprob: -11.258410453796387
    5. ' ' → logprob: -13.383410453796387
    6. ',' → logprob: -14.133410453796387
    7. ',K' → logprob: -14.133410453796387
    8. '(K' → logprob: -14.508410453796387
    9. 'k' → logprob: -14.758410453796387
    10. '	K' → logprob: -14.883410453796387

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14267732203006744
    2. ' +' → logprob: -2.0176773071289062
    3. '+
' → logprob: -14.767677307128906
    4. '1' → logprob: -14.767677307128906
    5. ' ' → logprob: -15.142677307128906
    6. '2' → logprob: -15.392677307128906
    7. '))' → logprob: -15.517677307128906
    8. ')))' → logprob: -16.017677307128906
    9. ' +
' → logprob: -16.017677307128906
    10. ',' → logprob: -16.142677307128906

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003154432924930006
    2. ' ' → logprob: -8.25031566619873
    3. '2' → logprob: -9.87531566619873
    4. '+' → logprob: -13.62531566619873
    5. '   ' → logprob: -14.87531566619873
    6. '```' → logprob: -15.62531566619873
    7. 'K' → logprob: -15.68781566619873
    8. '(' → logprob: -15.93781566619873
    9. '  ' → logprob: -16.187814712524414
    10. '
' → logprob: -16.625314712524414

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013393278641160578
    2. '2' → logprob: -9.250133514404297
    3. ' ' → logprob: -10.250133514404297
    4. '+' → logprob: -14.625133514404297
    5. '   ' → logprob: -15.125133514404297
    6. '```' → logprob: -15.625133514404297
    7. '3' → logprob: -15.687633514404297
    8. '
' → logprob: -15.750133514404297
    9. '(' → logprob: -16.062633514404297
    10. 'K' → logprob: -16.562633514404297

Token 133: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08091975003480911
    2. ')))' → logprob: -2.5809197425842285
    3. ')' → logprob: -6.2059197425842285
    4. '))))' → logprob: -11.830920219421387
    5. '),' → logprob: -13.705920219421387
    6. '))
' → logprob: -14.580920219421387
    7. ' ))' → logprob: -15.080920219421387
    8. ')));' → logprob: -15.330920219421387
    9. ']))' → logprob: -15.830920219421387
    10. ')),' → logprob: -15.955920219421387

Token 134: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16005492210388184
    2. '+' → logprob: -3.285054922103882
    3. 'print' → logprob: -3.410054922103882
    4. '[' → logprob: -3.785054922103882
    5. '<|end|>' → logprob: -4.035055160522461
    6. '
' → logprob: -4.535055160522461
    7. 'for' → logprob: -4.910055160522461
    8. 'lst' → logprob: -5.285055160522461
    9. ']' → logprob: -5.785055160522461
    10. '+
' → logprob: -6.410055160522461

Token 135: '('\' (ID: 24345)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.2276124805212021
    2. '(lst' → logprob: -1.7276124954223633
    3. '(' → logprob: -3.7276124954223633
    4. '(len' → logprob: -6.852612495422363
    5. '(max' → logprob: -8.102612495422363
    6. '(min' → logprob: -8.977612495422363
    7. '([' → logprob: -9.477612495422363
    8. '(*' → logprob: -9.602612495422363
    9. 'sum' → logprob: -10.102612495422363
    10. '(f' → logprob: -10.477612495422363

Token 136: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002110051456838846
    2. ''' → logprob: -6.877110004425049
    3. 't' → logprob: -7.877110004425049
    4. 's' → logprob: -8.752110481262207
    5. ' ' → logprob: -8.877110481262207
    6. 'u' → logprob: -9.502110481262207
    7. ',' → logprob: -9.502110481262207
    8. 'sum' → logprob: -9.502110481262207
    9. 'x' → logprob: -9.752110481262207
    10. '(' → logprob: -10.377110481262207

Token 137: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.06419893354177475
    2. '.join' → logprob: -3.8141989707946777
    3. 'join' → logprob: -3.8141989707946777
    4. '''.' → logprob: -4.564198970794678
    5. ''\' → logprob: -5.564198970794678
    6. '.' → logprob: -6.564198970794678
    7. '".' → logprob: -6.939198970794678
    8. 'print' → logprob: -7.314198970794678
    9. ')' → logprob: -7.814198970794678
    10. ''' → logprob: -8.81419849395752

Token 138: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1472419600977446e-06
    2. 'print' → logprob: -14.750000953674316
    3. 'jo' → logprob: -15.125000953674316
    4. 'j' → logprob: -15.500000953674316
    5. ' join' → logprob: -16.625001907348633
    6. '```' → logprob: -17.500001907348633
    7. '(join' → logprob: -17.750001907348633
    8. 'strip' → logprob: -18.500001907348633
    9. 'sep' → logprob: -18.875001907348633
    10. 'start' → logprob: -19.250001907348633

Token 139: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005556552205234766
    2. 'map' → logprob: -7.750555515289307
    3. '(str' → logprob: -9.000555992126465
    4. '(list' → logprob: -13.625555992126465
    5. 'str' → logprob: -15.500555992126465
    6. '(' → logprob: -16.25055503845215
    7. ' map' → logprob: -16.50055503845215
    8. '([' → logprob: -17.62555503845215
    9. 'list' → logprob: -17.87555503845215
    10. ',map' → logprob: -18.62555503845215

Token 140: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0015052208909764886
    2. 'str' → logprob: -6.501505374908447
    3. '(' → logprob: -13.501504898071289
    4. '```' → logprob: -14.376504898071289
    5. '=str' → logprob: -15.126504898071289
    6. ')' → logprob: -15.751504898071289
    7. '[str' → logprob: -16.12650489807129
    8. '	str' → logprob: -16.12650489807129
    9. '(lambda' → logprob: -16.75150489807129
    10. ' str' → logprob: -17.00150489807129

Token 141: ',' (ID: 11)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0005723327049054205
    2. ',' → logprob: -7.500572204589844
    3. 'lst' → logprob: -11.375572204589844
    4. '(' → logprob: -13.125572204589844
    5. ',l' → logprob: -13.125572204589844
    6. '(l' → logprob: -13.750572204589844
    7. '(ls' → logprob: -13.875572204589844
    8. ',(' → logprob: -14.250572204589844
    9. ' (' → logprob: -14.250572204589844
    10. ' lst' → logprob: -15.875572204589844

Token 142: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.00977686420083046
    2. ' lst' → logprob: -4.634777069091797
    3. '(lst' → logprob: -10.884777069091797
    4. '[' → logprob: -14.009777069091797
    5. 'list' → logprob: -14.634777069091797
    6. '.lst' → logprob: -15.509777069091797
    7. '[l' → logprob: -15.634777069091797
    8. 'l' → logprob: -16.009777069091797
    9. '_lst' → logprob: -16.134777069091797
    10. ' ' → logprob: -16.634777069091797

Token 143: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018223809078335762
    2. ')))' → logprob: -4.018223762512207
    3. ')' → logprob: -9.518223762512207
    4. '))))' → logprob: -15.268223762512207
    5. '))
' → logprob: -15.893223762512207
    6. '()))' → logprob: -16.893224716186523
    7. '}))' → logprob: -17.143224716186523
    8. ']))' → logprob: -17.768224716186523
    9. ' ))' → logprob: -17.893224716186523
    10. ')));' → logprob: -18.143224716186523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 141
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 116
Précision stricte (1ère position): 36.88%
Précision adaptée (1ère position): 37.59%
Précision (top 10): 82.27%
================================================================================
