================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()
li = []
answer = 0
temp = ''
i = 0
while i < len(s):
    if temp == s[i]:
        i += 1
        continue
    else:
        temp = s[i]
        answer += 1
        i += 1
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0437571220099926
    2. ')' → logprob: -3.418757200241089
    3. '()' → logprob: -4.79375696182251
    4. '())' → logprob: -7.04375696182251
    5. '(
' → logprob: -8.543757438659668
    6. '```' → logprob: -9.043757438659668
    7. '(()' → logprob: -9.293757438659668
    8. '("("' → logprob: -9.543757438659668
    9. '('' → logprob: -9.793757438659668
    10. '`' → logprob: -10.043757438659668

Token 5: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1426990032196045
    2. ' =' → logprob: -1.2676990032196045
    3. '=' → logprob: -1.8926990032196045
    4. 'tr' → logprob: -2.3926990032196045
    5. '.' → logprob: -2.7676990032196045
    6. '[' → logprob: -3.0176990032196045
    7. 't' → logprob: -4.267699241638184
    8. 'trip' → logprob: -5.642699241638184
    9. 'u' → logprob: -5.767699241638184
    10. '[i' → logprob: -5.892699241638184

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6952923536300659
    2. ' input' → logprob: -0.6952923536300659
    3. '"' → logprob: -7.5702924728393555
    4. '""' → logprob: -7.5702924728393555
    5. ''' → logprob: -8.195292472839355
    6. ' ' → logprob: -8.570292472839355
    7. '''' → logprob: -9.070292472839355
    8. ' "' → logprob: -9.070292472839355
    9. ' '' → logprob: -9.945292472839355
    10. '0' → logprob: -10.195292472839355

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004293391946703196
    2. ''' → logprob: -6.379293441772461
    3. '('' → logprob: -6.629293441772461
    4. '()' → logprob: -7.879293441772461
    5. ')' → logprob: -8.254293441772461
    6. '"' → logprob: -8.754293441772461
    7. '(
' → logprob: -9.004293441772461
    8. '`' → logprob: -9.254293441772461
    9. '```' → logprob: -9.504293441772461
    10. '("("' → logprob: -10.129293441772461

Token 9: 'li' (ID: 1307)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0583573579788208
    2. 'if' → logprob: -1.1833573579788208
    3. 'for' → logprob: -1.6833573579788208
    4. 'f' → logprob: -2.8083572387695312
    5. 'count' → logprob: -2.8083572387695312
    6. 'c' → logprob: -4.433357238769531
    7. '_' → logprob: -5.183357238769531
    8. 'sum' → logprob: -5.683357238769531
    9. 'result' → logprob: -5.808357238769531
    10. 'd' → logprob: -5.933357238769531

Token 10: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.013484422117471695
    2. 's' → logprob: -4.388484477996826
    3. 'n' → logprob: -8.138484001159668
    4. '.append' → logprob: -8.513484001159668
    5. ' =' → logprob: -8.513484001159668
    6. '=' → logprob: -9.138484001159668
    7. 'sts' → logprob: -9.763484001159668
    8. 't' → logprob: -10.388484001159668
    9. '.' → logprob: -10.763484001159668
    10. 'ne' → logprob: -10.888484001159668

Token 11: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.22612200677394867
    2. 'list' → logprob: -2.2261219024658203
    3. ' []' → logprob: -2.7261219024658203
    4. 's' → logprob: -3.9761219024658203
    5. ' list' → logprob: -5.10112190246582
    6. '[s' → logprob: -6.22612190246582
    7. '[list' → logprob: -6.97612190246582
    8. '[' → logprob: -7.35112190246582
    9. ' s' → logprob: -8.22612190246582
    10. ' [' → logprob: -8.97612190246582

Token 12: 'answer' (ID: 17021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016856512520462275
    2. ' for' → logprob: -7.001685619354248
    3. 'f' → logprob: -7.626685619354248
    4. 'i' → logprob: -8.376686096191406
    5. '```' → logprob: -11.001686096191406
    6. 'fo' → logprob: -11.501686096191406
    7. '=' → logprob: -11.876686096191406
    8. 'd' → logprob: -12.626686096191406
    9. 'if' → logprob: -12.751686096191406
    10. ' ' → logprob: -12.876686096191406

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0158894062042236
    2. '.' → logprob: -1.1408894062042236
    3. '=' → logprob: -1.6408894062042236
    4. '.append' → logprob: -2.1408894062042236
    5. '_' → logprob: -5.3908891677856445
    6. '.=' → logprob: -7.0158891677856445
    7. ' +=' → logprob: -7.7658891677856445
    8. 's' → logprob: -8.140889167785645
    9. '.extend' → logprob: -8.390889167785645
    10. '[' → logprob: -8.515889167785645

Token 14: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08591967821121216
    2. ' ' → logprob: -2.9609196186065674
    3. '[]' → logprob: -4.2109198570251465
    4. ' []' → logprob: -4.3359198570251465
    5. '"' → logprob: -6.3359198570251465
    6. ''' → logprob: -7.7109198570251465
    7. '[' → logprob: -8.710919380187988
    8. '""' → logprob: -9.460919380187988
    9. 's' → logprob: -10.210919380187988
    10. ' ""' → logprob: -11.085919380187988

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25645866990089417
    2. '[]' → logprob: -2.0064587593078613
    3. '""' → logprob: -2.8814587593078613
    4. '''' → logprob: -3.7564587593078613
    5. '"' → logprob: -5.131458759307861
    6. '[' → logprob: -5.256458759307861
    7. ''' → logprob: -7.506458759307861
    8. '-' → logprob: -9.381458282470703
    9. ''s' → logprob: -9.631458282470703
    10. 'set' → logprob: -9.881458282470703

Token 16: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14523868262767792
    2. ' for' → logprob: -2.0202386379241943
    3. ' ' → logprob: -6.145238876342773
    4. '
' → logprob: -8.770238876342773
    5. '<|end|>' → logprob: -9.270238876342773
    6. '\n' → logprob: -9.395238876342773
    7. ' 
' → logprob: -10.895238876342773
    8. '' → logprob: -10.895238876342773
    9. 'i' → logprob: -11.145238876342773
    10. '\' → logprob: -12.520238876342773

Token 17: 'temp' (ID: 7340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003472633252386004
    2. ' for' → logprob: -8.000347137451172
    3. 'f' → logprob: -12.125347137451172
    4. 'i' → logprob: -12.625347137451172
    5. '
' → logprob: -14.000347137451172
    6. '=' → logprob: -14.125347137451172
    7. '```' → logprob: -14.625347137451172
    8. '\n' → logprob: -14.875347137451172
    9. ' ' → logprob: -15.750347137451172
    10. 'For' → logprob: -16.500347137451172

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26164817810058594
    2. ' =' → logprob: -1.636648178100586
    3. '=' → logprob: -3.511648178100586
    4. ' _' → logprob: -5.511648178100586
    5. '_val' → logprob: -8.011648178100586
    6. '_=' → logprob: -8.261648178100586
    7. ' ' → logprob: -8.761648178100586
    8. ')' → logprob: -8.886648178100586
    9. ' +=' → logprob: -9.011648178100586
    10. '_count' → logprob: -9.886648178100586

Token 19: ' ''
' (ID: 25366)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025959672406315804
    2. '""' → logprob: -4.900959491729736
    3. '[]' → logprob: -5.400959491729736
    4. '1' → logprob: -5.400959491729736
    5. '''' → logprob: -5.525959491729736
    6. ' ' → logprob: -5.650959491729736
    7. 's' → logprob: -7.275959491729736
    8. '"' → logprob: -8.150959968566895
    9. ' []' → logprob: -8.650959968566895
    10. '[' → logprob: -8.775959968566895

Token 20: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005007279687561095
    2. ' for' → logprob: -7.625500679016113
    3. 'i' → logprob: -11.875500679016113
    4. 'f' → logprob: -12.500500679016113
    5. '```' → logprob: -14.125500679016113
    6. '\n' → logprob: -15.125500679016113
    7. '<|end|>' → logprob: -15.625500679016113
    8. 'n' → logprob: -15.750500679016113
    9. '
' → logprob: -15.750500679016113
    10. ')' → logprob: -16.00050163269043

Token 21: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.24956557154655457
    2. 'n' → logprob: -1.999565601348877
    3. '=' → logprob: -2.999565601348877
    4. 's' → logprob: -4.499565601348877
    5. '+' → logprob: -4.749565601348877
    6. ' =' → logprob: -5.249565601348877
    7. 'nd' → logprob: -5.749565601348877
    8. ' ' → logprob: -6.124565601348877
    9. '[' → logprob: -6.249565601348877
    10. ' n' → logprob: -7.374565601348877

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12696129083633423
    2. ' ' → logprob: -2.1269612312316895
    3. '1' → logprob: -10.376961708068848
    4. 'n' → logprob: -13.876961708068848
    5. ' n' → logprob: -14.626961708068848
    6. ' ' → logprob: -15.626961708068848
    7. '2' → logprob: -15.876961708068848
    8. '6' → logprob: -17.06446075439453
    9. 'i' → logprob: -17.25196075439453
    10. ' 
' → logprob: -17.62696075439453

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001351306913420558
    2. ' ' → logprob: -6.626351356506348
    3. '1' → logprob: -10.626351356506348
    4. 'n' → logprob: -14.251351356506348
    5. '2' → logprob: -14.626351356506348
    6. 'i' → logprob: -17.25135040283203
    7. ' n' → logprob: -17.75135040283203
    8. ')' → logprob: -18.00135040283203
    9. '3' → logprob: -18.25135040283203
    10. '-' → logprob: -18.50135040283203

Token 24: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04579221457242966
    2. ' while' → logprob: -3.4207921028137207
    3. 'w' → logprob: -5.295792102813721
    4. ' ' → logprob: -5.795792102813721
    5. '<|end|>' → logprob: -6.170792102813721
    6. ':' → logprob: -7.420792102813721
    7. 'n' → logprob: -8.545792579650879
    8. ',' → logprob: -8.670792579650879
    9. '
' → logprob: -9.045792579650879
    10. 'While' → logprob: -9.170792579650879

Token 25: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21878767013549805
    2. 'w' → logprob: -2.218787670135498
    3. ' while' → logprob: -2.718787670135498
    4. ' ' → logprob: -3.968787670135498
    5. ',' → logprob: -7.593787670135498
    6. '
' → logprob: -7.718787670135498
    7. 'n' → logprob: -7.718787670135498
    8. '<|end|>' → logprob: -8.343788146972656
    9. 'wh' → logprob: -8.718788146972656
    10. ' w' → logprob: -8.968788146972656

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011185755021870136
    2. 'i' → logprob: -4.511185646057129
    3. ' ' → logprob: -9.136185646057129
    4. ' n' → logprob: -11.511185646057129
    5. ' True' → logprob: -12.011185646057129
    6. ' ' → logprob: -12.261185646057129
    7. '(i' → logprob: -12.886185646057129
    8. 'n' → logprob: -13.136185646057129
    9. '	i' → logprob: -13.261185646057129
    10. 'True' → logprob: -14.136185646057129

Token 27: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07924743741750717
    2. '<' → logprob: -2.57924747467041
    3. ' <=' → logprob: -8.32924747467041
    4. ' ' → logprob: -9.70424747467041
    5. '<=' → logprob: -10.20424747467041
    6. '<len' → logprob: -11.45424747467041
    7. '<n' → logprob: -12.20424747467041
    8. '<size' → logprob: -14.70424747467041
    9. ' <
' → logprob: -14.82924747467041
    10. 's' → logprob: -14.95424747467041

Token 28: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12694711983203888
    2. 'n' → logprob: -2.1269471645355225
    3. ' ' → logprob: -11.751947402954102
    4. ' len' → logprob: -11.876947402954102
    5. 'len' → logprob: -12.376947402954102
    6. ' ' → logprob: -17.7519474029541
    7. '	n' → logprob: -17.7519474029541
    8. '(n' → logprob: -19.1269474029541
    9. 'length' → logprob: -19.8769474029541
    10. '  ' → logprob: -19.8769474029541

Token 29: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.000958031858317554
    2. '(' → logprob: -7.00095796585083
    3. 's' → logprob: -10.000958442687988
    4. ' s' → logprob: -14.375958442687988
    5. ' (' → logprob: -14.625958442687988
    6. '(
' → logprob: -16.500957489013672
    7. '(n' → logprob: -17.375957489013672
    8. '(S' → logprob: -18.000957489013672
    9. '('' → logprob: -18.250957489013672
    10. ' ' → logprob: -18.500957489013672

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37801337242126465
    2. ')' → logprob: -1.5030133724212646
    3. ' and' → logprob: -2.5030133724212646
    4. '):
' → logprob: -4.753013610839844
    5. 'and' → logprob: -6.503013610839844
    6. ':' → logprob: -8.503013610839844
    7. ' ):' → logprob: -9.503013610839844
    8. ' )' → logprob: -10.628013610839844
    9. '):

' → logprob: -11.003013610839844
    10. ' ' → logprob: -11.253013610839844

Token 31: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.026059789583086967
    2. 'if' → logprob: -3.901059865951538
    3. '   ' → logprob: -5.276059627532959
    4. ' ' → logprob: -8.151060104370117
    5. '    ' → logprob: -10.026060104370117
    6. '```' → logprob: -11.026060104370117
    7. '	if' → logprob: -11.151060104370117
    8. ' 
' → logprob: -12.776060104370117
    9. '    
' → logprob: -12.776060104370117
    10. ' c' → logprob: -13.026060104370117

Token 32: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5299471616744995
    2. ' if' → logprob: -0.9049471616744995
    3. 'c' → logprob: -6.154947280883789
    4. 's' → logprob: -6.154947280883789
    5. '   ' → logprob: -6.904947280883789
    6. ''' → logprob: -7.654947280883789
    7. ' ' → logprob: -7.779947280883789
    8. 'ch' → logprob: -8.904947280883789
    9. '```' → logprob: -8.904947280883789
    10. ' c' → logprob: -9.279947280883789

Token 33: ' temp' (ID: 5484)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03831309825181961
    2. 's' → logprob: -3.288313150405884
    3. ' ' → logprob: -8.288312911987305
    4. ' not' → logprob: -11.413312911987305
    5. '(s' → logprob: -13.538312911987305
    6. ' '' → logprob: -13.788312911987305
    7. ' ' → logprob: -13.788312911987305
    8. ' i' → logprob: -14.413312911987305
    9. 'not' → logprob: -14.413312911987305
    10. '  ' → logprob: -14.538312911987305

Token 34: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.787752091884613
    2. '==' → logprob: -1.5377521514892578
    3. ' +' → logprob: -1.6627521514892578
    4. ' ==' → logprob: -2.162752151489258
    5. ' and' → logprob: -4.037752151489258
    6. ' !=' → logprob: -5.912752151489258
    7. 'and' → logprob: -6.162752151489258
    8. '!=' → logprob: -6.537752151489258
    9. ' or' → logprob: -7.287752151489258
    10. '+=' → logprob: -7.787752151489258

Token 35: ' s' (ID: 265)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.5944846272468567
    2. ''' → logprob: -1.469484567642212
    3. 's' → logprob: -2.094484567642212
    4. ' ''' → logprob: -2.969484567642212
    5. ' s' → logprob: -3.844484567642212
    6. ''s' → logprob: -4.844484806060791
    7. ' '' → logprob: -5.094484806060791
    8. '""' → logprob: -5.719484806060791
    9. ' ' → logprob: -6.094484806060791
    10. '"' → logprob: -6.594484806060791

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. '[j' → logprob: -15.62500286102295
    4. '[:' → logprob: -17.000001907348633
    5. ' ' → logprob: -17.875001907348633
    6. '[n' → logprob: -19.000001907348633
    7. '[index' → logprob: -19.000001907348633
    8. '```' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.125001907348633
    10. 'i' → logprob: -19.625001907348633

Token 37: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30665165185928345
    2. ':' → logprob: -1.9316515922546387
    3. '':' → logprob: -3.3066515922546387
    4. ' ' → logprob: -4.181651592254639
    5. ''):' → logprob: -4.306651592254639
    6. '):
' → logprob: -4.556651592254639
    7. ']:' → logprob: -4.681651592254639
    8. ' or' → logprob: -4.931651592254639
    9. ')' → logprob: -5.181651592254639
    10. ' ):' → logprob: -5.431651592254639

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05260486528277397
    2. 'i' → logprob: -3.552604913711548
    3. ' i' → logprob: -4.302604675292969
    4. '    ' → logprob: -5.927604675292969
    5. '   ' → logprob: -6.427604675292969
    6. ' ' → logprob: -7.052604675292969
    7. '+' → logprob: -7.177604675292969
    8. '        ' → logprob: -7.552604675292969
    9. ':' → logprob: -8.052604675292969
    10. '      ' → logprob: -8.177604675292969

Token 39: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.5039587020874023
    2. 'answer' → logprob: -1.8789587020874023
    3. ' i' → logprob: -2.6289587020874023
    4. '   ' → logprob: -2.6289587020874023
    5. 'temp' → logprob: -3.1289587020874023
    6. ' answer' → logprob: -3.5039587020874023
    7. ' temp' → logprob: -4.378958702087402
    8. '       ' → logprob: -4.878958702087402
    9. 'li' → logprob: -6.378958702087402
    10. '    ' → logprob: -7.253958702087402

Token 40: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.43556690216064453
    2. ' +=' → logprob: -1.1855669021606445
    3. '+' → logprob: -3.0605669021606445
    4. '=' → logprob: -7.6855669021606445
    5. ' ' → logprob: -9.810566902160645
    6. '<|end|>' → logprob: -9.810566902160645
    7. ' +' → logprob: -10.060566902160645
    8. ')' → logprob: -11.435566902160645
    9. ' =' → logprob: -11.935566902160645
    10. '++' → logprob: -11.935566902160645

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.114600834436715e-05
    2. ' ' → logprob: -9.625091552734375
    3. '2' → logprob: -10.625091552734375
    4. '   ' → logprob: -14.625091552734375
    5. '3' → logprob: -15.375091552734375
    6. '  ' → logprob: -17.125091552734375
    7. '```' → logprob: -17.125091552734375
    8. '4' → logprob: -18.000091552734375
    9. '6' → logprob: -18.187591552734375
    10. '0' → logprob: -18.312591552734375

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.864272967912257e-05
    2. '2' → logprob: -9.500088691711426
    3. ' ' → logprob: -11.250088691711426
    4. '3' → logprob: -15.125088691711426
    5. '0' → logprob: -16.12508773803711
    6. '   ' → logprob: -16.25008773803711
    7. '```' → logprob: -16.25008773803711
    8. '  ' → logprob: -17.68758773803711
    9. '+' → logprob: -17.81258773803711
    10. '１' → logprob: -17.93758773803711

Token 43: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0205202866345644
    2. '   ' → logprob: -4.270520210266113
    3. '+' → logprob: -6.770520210266113
    4. '
' → logprob: -6.895520210266113
    5. 'continue' → logprob: -7.145520210266113
    6. ' ' → logprob: -7.395520210266113
    7. ' continue' → logprob: -7.395520210266113
    8. '           ' → logprob: -7.645520210266113
    9. 'else' → logprob: -7.895520210266113
    10. ' else' → logprob: -8.145520210266113

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.655430793762207
    2. '   ' → logprob: -1.280430793762207
    3. 'else' → logprob: -1.655430793762207
    4. ' else' → logprob: -4.780430793762207
    5. 'i' → logprob: -6.905430793762207
    6. 'elif' → logprob: -7.280430793762207
    7. '           ' → logprob: -7.655430793762207
    8. '+' → logprob: -8.155430793762207
    9. '```' → logprob: -8.530430793762207
    10. 'continue' → logprob: -8.530430793762207

Token 45: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5489237904548645
    2. 'continue' (adapté à ' continue') → logprob: -1.1739237308502197
    3. '   ' → logprob: -2.2989237308502197
    4. ' continue' → logprob: -4.673923969268799
    5. 'else' → logprob: -6.298923969268799
    6. '```' → logprob: -6.923923969268799
    7. 'i' → logprob: -8.54892349243164
    8. '           ' → logprob: -8.92392349243164
    9. 'temp' → logprob: -9.29892349243164
    10. 'elif' → logprob: -9.42392349243164

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015131485648453236
    2. 'else' → logprob: -4.51513147354126
    3. 'elif' → logprob: -6.01513147354126
    4. ' else' → logprob: -6.89013147354126
    5. 'li' → logprob: -8.640131950378418
    6. 'if' → logprob: -9.140131950378418
    7. '    
' → logprob: -9.390131950378418
    8. 'temp' → logprob: -9.390131950378418
    9. ' if' → logprob: -10.390131950378418
    10. ' elif' → logprob: -10.515131950378418

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016728483140468597
    2. 'else' → logprob: -4.641728401184082
    3. 'i' → logprob: -5.891728401184082
    4. 'elif' → logprob: -6.391728401184082
    5. 'if' → logprob: -7.016728401184082
    6. '    
' → logprob: -7.516728401184082
    7. ' else' → logprob: -7.766728401184082
    8. 's' → logprob: -9.016728401184082
    9. ')' → logprob: -9.516728401184082
    10. '```' → logprob: -9.641728401184082

Token 48: ' else' (ID: 1203)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5542313456535339
    2. '   ' → logprob: -1.4292314052581787
    3. 'else' (adapté à ' else') → logprob: -2.6792314052581787
    4. 'if' → logprob: -3.1792314052581787
    5. 't' → logprob: -4.3042311668396
    6. ' temp' → logprob: -4.3042311668396
    7. ' if' → logprob: -4.4292311668396
    8. 'elif' → logprob: -4.4292311668396
    9. 'li' → logprob: -4.6792311668396
    10. ' else' → logprob: -5.3042311668396

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00115796213503927
    2. ':
' → logprob: -7.501157760620117
    3. '       ' → logprob: -7.626157760620117
    4. '   ' → logprob: -9.251157760620117
    5. ' :' → logprob: -11.751157760620117
    6. ',' → logprob: -12.001157760620117
    7. '    ' → logprob: -12.751157760620117
    8. '):' → logprob: -14.251157760620117
    9. '[' → logprob: -14.626157760620117
    10. ':
' → logprob: -14.626157760620117

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5642134547233582
    2. 'temp' → logprob: -1.564213514328003
    3. ' temp' → logprob: -1.939213514328003
    4. '   ' → logprob: -2.564213514328003
    5. '```' → logprob: -8.064213752746582
    6. '    ' → logprob: -8.314213752746582
    7. '	temp' → logprob: -9.064213752746582
    8. '   ' → logprob: -9.689213752746582
    9. ' ' → logprob: -10.314213752746582
    10. '    ' → logprob: -10.439213752746582

Token 51: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.06312534213066101
    2. ' temp' → logprob: -2.8131253719329834
    3. '       ' → logprob: -7.188125133514404
    4. '   ' → logprob: -8.188125610351562
    5. ' if' → logprob: -10.313125610351562
    6. 'if' → logprob: -10.438125610351562
    7. 'li' → logprob: -10.688125610351562
    8. '```' → logprob: -11.563125610351562
    9. '	temp' → logprob: -11.563125610351562
    10. '    ' → logprob: -12.813125610351562

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048794474452733994
    2. '=' → logprob: -3.2987945079803467
    3. ' +=' → logprob: -4.548794269561768
    4. '+=' → logprob: -9.298794746398926
    5. ' ' → logprob: -10.798794746398926
    6. ' ==' → logprob: -13.923794746398926
    7. '+' → logprob: -14.048794746398926
    8. ' +' → logprob: -14.923794746398926
    9. ' .=' → logprob: -15.173794746398926
    10. '+='' → logprob: -15.548794746398926

Token 53: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22542499005794525
    2. ' s' → logprob: -1.6004250049591064
    3. ' ' → logprob: -11.850424766540527
    4. ''s' → logprob: -13.475424766540527
    5. ' ' → logprob: -14.350424766540527
    6. ''' → logprob: -14.350424766540527
    7. '(s' → logprob: -14.475424766540527
    8. '	s' → logprob: -14.725424766540527
    9. '`s' → logprob: -14.975424766540527
    10. '_s' → logprob: -15.787924766540527

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.75000286102295
    3. '[I' → logprob: -17.250003814697266
    4. 'i' → logprob: -17.750003814697266
    5. '[
' → logprob: -18.000003814697266
    6. ' [' → logprob: -18.250003814697266
    7. '```' → logprob: -18.625003814697266
    8. '[j' → logprob: -18.625003814697266
    9. '[int' → logprob: -19.000003814697266
    10. '[input' → logprob: -19.500003814697266

Token 55: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006989103741943836
    2. ']
' → logprob: -5.256989002227783
    3. '']' → logprob: -6.381989002227783
    4. ' ]' → logprob: -10.381989479064941
    5. '']
' → logprob: -12.131989479064941
    6. '[i' → logprob: -12.256989479064941
    7. '"]' → logprob: -12.506989479064941
    8. ']
' → logprob: -12.506989479064941
    9. '   ' → logprob: -13.006989479064941
    10. ')' → logprob: -13.256989479064941

Token 56: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3931402266025543
    2. '   ' → logprob: -1.393140196800232
    3. 'j' → logprob: -3.6431403160095215
    4. 'li' → logprob: -4.0181403160095215
    5. ' count' → logprob: -4.2681403160095215
    6. 'i' → logprob: -5.0181403160095215
    7. 'cnt' → logprob: -5.8931403160095215
    8. '+' → logprob: -6.8931403160095215
    9. '       ' → logprob: -6.8931403160095215
    10. ')' → logprob: -7.0181403160095215

Token 57: ' answer' (ID: 6052)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.07843216508626938
    2. 'count' → logprob: -2.953432083129883
    3. 'answer' (adapté à ' answer') → logprob: -4.703432083129883
    4. 'j' → logprob: -4.953432083129883
    5. 'i' → logprob: -5.578432083129883
    6. 'cnt' → logprob: -6.453432083129883
    7. ' li' → logprob: -7.453432083129883
    8. '   ' → logprob: -7.953432083129883
    9. 'if' → logprob: -8.953432083129883
    10. 'while' → logprob: -9.203432083129883

Token 58: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.062311939895153046
    2. '+=' → logprob: -2.812311887741089
    3. '+' → logprob: -8.062312126159668
    4. ' =' → logprob: -11.812312126159668
    5. '=' → logprob: -11.937312126159668
    6. '<|end|>' → logprob: -12.187312126159668
    7. '+='' → logprob: -12.312312126159668
    8. ']+=' → logprob: -13.437312126159668
    9. ' +' → logprob: -13.562312126159668
    10. ' ' → logprob: -13.937312126159668

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00976741872727871
    2. ' ' → logprob: -4.634767532348633
    3. 'li' → logprob: -11.759767532348633
    4. 's' → logprob: -13.759767532348633
    5. ' li' → logprob: -13.884767532348633
    6. '2' → logprob: -14.384767532348633
    7. ' s' → logprob: -15.384767532348633
    8. 'len' → logprob: -15.884767532348633
    9. 'n' → logprob: -16.259767532348633
    10. '<li' → logprob: -16.259767532348633

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. '2' → logprob: -12.50001049041748
    3. 'li' → logprob: -12.50001049041748
    4. ' ' → logprob: -13.12501049041748
    5. 's' → logprob: -14.75001049041748
    6. 'int' → logprob: -15.12501049041748
    7. '10' → logprob: -15.50001049041748
    8. 'len' → logprob: -15.62501049041748
    9. '<li' → logprob: -16.125011444091797
    10. '0' → logprob: -16.375011444091797

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0500212237238884
    2. 'i' → logprob: -3.175021171569824
    3. ' i' → logprob: -5.300021171569824
    4. '```' → logprob: -7.425021171569824
    5. '[i' → logprob: -7.550021171569824
    6. '	i' → logprob: -8.175021171569824
    7. '       ' → logprob: -8.425021171569824
    8. '<|end|>' → logprob: -8.550021171569824
    9. ')' → logprob: -10.550021171569824
    10. '<|end|>' → logprob: -10.800021171569824

Token 62: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3511074483394623
    2. '   ' → logprob: -1.2261074781417847
    3. ' i' → logprob: -6.101107597351074
    4. '```' → logprob: -8.726107597351074
    5. '       ' → logprob: -9.476107597351074
    6. '[i' → logprob: -9.851107597351074
    7. '	i' → logprob: -9.976107597351074
    8. '<|end|>' → logprob: -10.226107597351074
    9. ')i' → logprob: -12.101107597351074
    10. ',i' → logprob: -12.226107597351074

Token 63: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00317391031421721
    2. '   ' → logprob: -6.753173828125
    3. 'while' → logprob: -7.003173828125
    4. 'li' → logprob: -7.253173828125
    5. ' i' → logprob: -8.003173828125
    6. '```' → logprob: -11.128173828125
    7. ' while' → logprob: -11.378173828125
    8. 'for' → logprob: -11.878173828125
    9. 'if' → logprob: -12.503173828125
    10. 's' → logprob: -12.753173828125

Token 64: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5823808312416077
    2. '+' → logprob: -0.8323808312416077
    3. ' +=' → logprob: -5.082380771636963
    4. '++' → logprob: -8.832381248474121
    5. '<|end|>' → logprob: -10.832381248474121
    6. '+='' → logprob: -11.207381248474121
    7. '=' → logprob: -11.457381248474121
    8. '+++' → logprob: -11.582381248474121
    9. '+="' → logprob: -11.957381248474121
    10. ' ' → logprob: -12.832381248474121

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005133562372066081
    2. '2' → logprob: -8.625513076782227
    3. ' ' → logprob: -8.625513076782227
    4. '4' → logprob: -9.875513076782227
    5. '3' → logprob: -10.000513076782227
    6. '7' → logprob: -11.000513076782227
    7. '6' → logprob: -11.125513076782227
    8. '5' → logprob: -11.125513076782227
    9. '10' → logprob: -12.625513076782227
    10. '8' → logprob: -13.250513076782227

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003013809327967465
    2. '2' → logprob: -8.500301361083984
    3. '3' → logprob: -10.125301361083984
    4. '4' → logprob: -10.750301361083984
    5. '5' → logprob: -11.125301361083984
    6. '7' → logprob: -11.875301361083984
    7. '10' → logprob: -12.125301361083984
    8. ' ' → logprob: -12.625301361083984
    9. '6' → logprob: -12.875301361083984
    10. '8' → logprob: -14.687801361083984

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '(answer' (ID: 78433)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761763453483582
    2. '(answer' → logprob: -0.8261763453483582
    3. '('' → logprob: -9.326176643371582
    4. '()' → logprob: -9.326176643371582
    5. '(ans' → logprob: -10.451176643371582
    6. '(len' → logprob: -11.826176643371582
    7. '((' → logprob: -12.076176643371582
    8. '(s' → logprob: -12.576176643371582
    9. '("("' → logprob: -12.826176643371582
    10. '(sum' → logprob: -13.451176643371582

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.25
    3. ')
' → logprob: -17.5
    4. ')`' → logprob: -17.625
    5. '))' → logprob: -17.75
    6. '')' → logprob: -19.125
    7. '`)' → logprob: -19.375
    8. '```' → logprob: -20.0
    9. ')}' → logprob: -20.375
    10. '),' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 68
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 27.94%
Précision adaptée (1ère position): 33.82%
Précision (top 10): 79.41%
================================================================================
