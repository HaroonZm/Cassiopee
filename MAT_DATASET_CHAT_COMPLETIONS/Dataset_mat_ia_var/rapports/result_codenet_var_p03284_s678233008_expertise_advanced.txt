================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print(int((n := int((s := input().split())[0])) % (k := int(s[1])) != 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '(int' (ID: 2742)
  → Token d'amorce (pas de prédiction)

Token 2: '((' (ID: 2054)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.7011687755584717
    2. 'input' → logprob: -1.7011687755584717
    3. '5' → logprob: -1.9511687755584717
    4. '1' → logprob: -2.0761687755584717
    5. '2' → logprob: -2.5761687755584717
    6. '100' → logprob: -2.9511687755584717
    7. '4' → logprob: -3.3261687755584717
    8. '10' → logprob: -3.4511687755584717
    9. ' ' → logprob: -3.8261687755584717
    10. '(' → logprob: -4.201169013977051

Token 4: ' :=' (ID: 3405)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.045466501265764236
    2. '**' → logprob: -3.545466423034668
    3. ')' → logprob: -5.295466423034668
    4. ' +' → logprob: -5.295466423034668
    5. '-' → logprob: -5.920466423034668
    6. '/' → logprob: -6.920466423034668
    7. '*' → logprob: -7.045466423034668
    8. '+n' → logprob: -8.670466423034668
    9. ' **' → logprob: -8.920466423034668
    10. '))' → logprob: -9.170466423034668

Token 5: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05135918781161308
    2. ' input' → logprob: -3.426359176635742
    3. 'int' → logprob: -5.051359176635742
    4. '5' → logprob: -6.176359176635742
    5. '10' → logprob: -6.176359176635742
    6. '1' → logprob: -6.676359176635742
    7. ' int' → logprob: -6.676359176635742
    8. ' ' → logprob: -7.051359176635742
    9. 'n' → logprob: -7.426359176635742
    10. '(input' → logprob: -7.676359176635742

Token 6: '((' (ID: 2054)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.038323063403367996
    2. '(' → logprob: -3.538323163986206
    3. '('' → logprob: -4.913322925567627
    4. 'input' → logprob: -7.163322925567627
    5. '((' → logprob: -9.788323402404785
    6. '()' → logprob: -10.038323402404785
    7. '()))' → logprob: -10.163323402404785
    8. ''' → logprob: -10.288323402404785
    9. '("' → logprob: -10.663323402404785
    10. '(
' → logprob: -10.663323402404785

Token 7: 's' (ID: 82)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002517753979191184
    2. '(input' → logprob: -6.7525177001953125
    3. ' input' → logprob: -7.0025177001953125
    4. 'n' → logprob: -9.127517700195312
    5. ')' → logprob: -9.502517700195312
    6. ' ' → logprob: -9.752517700195312
    7. '(' → logprob: -10.627517700195312
    8. '<input' → logprob: -10.627517700195312
    9. ''' → logprob: -10.752517700195312
    10. '))' → logprob: -11.127517700195312

Token 8: ' :=' (ID: 3405)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3612815737724304
    2. '(input' → logprob: -1.2362816333770752
    3. ')' → logprob: -4.736281394958496
    4. '=input' → logprob: -6.611281394958496
    5. '(' → logprob: -6.986281394958496
    6. ' input' → logprob: -7.111281394958496
    7. '+' → logprob: -8.986281394958496
    8. ')))' → logprob: -9.361281394958496
    9. ' )' → logprob: -9.486281394958496
    10. '))' → logprob: -9.736281394958496

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0017496729269623756
    2. ' input' → logprob: -6.376749515533447
    3. '(input' → logprob: -10.251749992370605
    4. ' ' → logprob: -12.751749992370605
    5. 's' → logprob: -13.001749992370605
    6. '<input' → logprob: -13.376749992370605
    7. ''' → logprob: -14.251749992370605
    8. ')' → logprob: -14.501749992370605
    9. '   ' → logprob: -14.501749992370605
    10. 'open' → logprob: -14.626749992370605

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7220171093940735
    2. '('' → logprob: -1.5970170497894287
    3. '())' → logprob: -1.8470170497894287
    4. '())))' → logprob: -2.5970170497894287
    5. '()))' → logprob: -3.3470170497894287
    6. '("("' → logprob: -4.097017288208008
    7. '(' → logprob: -4.347017288208008
    8. '("' → logprob: -5.347017288208008
    9. '())).' → logprob: -5.972017288208008
    10. '(""))' → logprob: -6.597017288208008

Token 11: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.05847853049635887
    2. 'rstrip' → logprob: -3.058478593826294
    3. 'replace' → logprob: -5.308478355407715
    4. 'split' → logprob: -5.433478355407715
    5. 'isdigit' → logprob: -8.558478355407715
    6. 'r' → logprob: -8.933478355407715
    7. ' strip' → logprob: -9.683478355407715
    8. 'find' → logprob: -10.183478355407715
    9. ')' → logprob: -10.308478355407715
    10. 'read' → logprob: -10.558478355407715

Token 12: '())[' (ID: 166443)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.008507614023983479
    2. '("("' → logprob: -5.00850772857666
    3. '(' → logprob: -7.25850772857666
    4. '("' → logprob: -7.88350772857666
    5. ''' → logprob: -8.25850772857666
    6. '())' → logprob: -9.13350772857666
    7. '())))' → logprob: -9.13350772857666
    8. '()' → logprob: -9.25850772857666
    9. '()))' → logprob: -10.38350772857666
    10. '"' → logprob: -10.38350772857666

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05614646151661873
    2. '-' → logprob: -3.0561463832855225
    3. '1' → logprob: -4.931146621704102
    4. '2' → logprob: -8.931146621704102
    5. ' ' → logprob: -9.556146621704102
    6. '3' → logprob: -10.056146621704102
    7. ' -' → logprob: -10.931146621704102
    8. 'len' → logprob: -11.056146621704102
    9. '(' → logprob: -12.306146621704102
    10. 'index' → logprob: -12.431146621704102

Token 14: ']))' (ID: 20259)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.7623372077941895
    2. ')' → logprob: -1.1373372077941895
    3. '+' → logprob: -2.5123372077941895
    4. '))' → logprob: -3.2623372077941895
    5. '[' → logprob: -3.5123372077941895
    6. '))))' → logprob: -3.8873372077941895
    7. '])))' → logprob: -4.3873372077941895
    8. ')+' → logprob: -4.6373372077941895
    9. ']))' → logprob: -4.7623372077941895
    10. ']' → logprob: -5.6373372077941895

Token 15: ' %' (ID: 1851)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20647628605365753
    2. '))' → logprob: -2.4564762115478516
    3. ')' → logprob: -3.0814762115478516
    4. '-' → logprob: -3.4564762115478516
    5. '*' → logprob: -5.081476211547852
    6. '),' → logprob: -5.581476211547852
    7. ')+' → logprob: -6.081476211547852
    8. ' +' → logprob: -6.206476211547852
    9. ' -' → logprob: -6.331476211547852
    10. '[' → logprob: -6.706476211547852

Token 16: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31010007858276367
    2. '100' → logprob: -2.4351000785827637
    3. '10' → logprob: -2.9351000785827637
    4. ' n' → logprob: -3.3101000785827637
    5. '2' → logprob: -3.4351000785827637
    6. ' ' → logprob: -4.185100078582764
    7. '(n' → logprob: -4.310100078582764
    8. '256' → logprob: -5.185100078582764
    9. '3' → logprob: -5.310100078582764
    10. '26' → logprob: -5.810100078582764

Token 17: 'k' (ID: 74)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42117393016815186
    2. '10' → logprob: -1.9211739301681519
    3. '100' → logprob: -2.2961740493774414
    4. '2' → logprob: -3.0461740493774414
    5. '26' → logprob: -5.046174049377441
    6. 's' → logprob: -5.046174049377441
    7. 'm' → logprob: -5.671174049377441
    8. '3' → logprob: -5.671174049377441
    9. '1' → logprob: -5.796174049377441
    10. '5' → logprob: -5.796174049377441

Token 18: ' :=' (ID: 3405)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33112236857414246
    2. '))' → logprob: -2.081122398376465
    3. '**' → logprob: -2.706122398376465
    4. ')' → logprob: -3.331122398376465
    5. '-' → logprob: -4.081122398376465
    6. ')))' → logprob: -4.331122398376465
    7. ' +' → logprob: -4.456122398376465
    8. ')+' → logprob: -5.831122398376465
    9. ' **' → logprob: -6.581122398376465
    10. ' ' → logprob: -6.831122398376465

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0655018091201782
    2. 'n' → logprob: -1.1905018091201782
    3. '(int' → logprob: -1.8155018091201782
    4. '(n' → logprob: -2.9405016899108887
    5. ' n' → logprob: -3.4405016899108887
    6. '10' → logprob: -3.6905016899108887
    7. ' int' → logprob: -3.6905016899108887
    8. ' ' → logprob: -4.315501689910889
    9. '100' → logprob: -4.565501689910889
    10. ' (' → logprob: -4.690501689910889

Token 20: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.29042378067970276
    2. '((' → logprob: -1.9154237508773804
    3. '(' → logprob: -2.29042387008667
    4. '(n' → logprob: -5.79042387008667
    5. '('' → logprob: -8.415423393249512
    6. '()' → logprob: -9.415423393249512
    7. ' (' → logprob: -10.665423393249512
    8. 's' → logprob: -10.665423393249512
    9. '(input' → logprob: -10.790423393249512
    10. '(k' → logprob: -11.165423393249512

Token 21: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4021237802808173e-05
    2. ' [' → logprob: -12.625014305114746
    3. '[-' → logprob: -13.000014305114746
    4. ')' → logprob: -13.125014305114746
    5. '(' → logprob: -13.375014305114746
    6. '1' → logprob: -13.375014305114746
    7. '[
' → logprob: -14.250014305114746
    8. '```' → logprob: -14.500014305114746
    9. '[len' → logprob: -14.750014305114746
    10. ''[' → logprob: -14.875014305114746

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005767432739958167
    2. '0' → logprob: -8.125576972961426
    3. ' ' → logprob: -9.125576972961426
    4. '2' → logprob: -9.625576972961426
    5. '-' → logprob: -10.000576972961426
    6. '[' → logprob: -10.625576972961426
    7. '```' → logprob: -11.500576972961426
    8. ']' → logprob: -12.000576972961426
    9. '(' → logprob: -12.438076972961426
    10. ')' → logprob: -13.063076972961426

Token 23: ']))' (ID: 20259)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.831719160079956
    2. ')))' → logprob: -0.956719160079956
    3. '))' → logprob: -2.456719160079956
    4. ')' → logprob: -3.081719160079956
    5. '])))' → logprob: -3.456719160079956
    6. ']))' → logprob: -4.331719398498535
    7. ')]' → logprob: -6.706719398498535
    8. ']' → logprob: -6.831719398498535
    9. '[' → logprob: -7.331719398498535
    10. ' ' → logprob: -8.081719398498535

Token 24: ' !=' (ID: 1666)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.35055306553840637
    2. ')' → logprob: -1.225553035736084
    3. ')))' → logprob: -6.725553035736084
    4. '**' → logprob: -8.475553512573242
    5. '%' → logprob: -8.975553512573242
    6. ''))' → logprob: -9.350553512573242
    7. '),' → logprob: -9.475553512573242
    8. '+' → logprob: -9.600553512573242
    9. ' ))' → logprob: -9.725553512573242
    10. ')%' → logprob: -10.100553512573242

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07035485655069351
    2. ' ' → logprob: -2.69535493850708
    3. ' n' → logprob: -8.445354461669922
    4. 'n' → logprob: -9.070354461669922
    5. 'k' → logprob: -10.570354461669922
    6. ' k' → logprob: -11.195354461669922
    7. '1' → logprob: -11.320354461669922
    8. '(n' → logprob: -11.570354461669922
    9. ' ' → logprob: -11.695354461669922
    10. ' (' → logprob: -12.070354461669922

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009334942442364991
    2. ' ' → logprob: -7.000933647155762
    3. 'n' → logprob: -11.500933647155762
    4. '(n' → logprob: -12.500933647155762
    5. 'k' → logprob: -12.625933647155762
    6. '1' → logprob: -13.375933647155762
    7. ' n' → logprob: -14.000933647155762
    8. '(' → logprob: -14.750933647155762
    9. ' (' → logprob: -15.000933647155762
    10. 's' → logprob: -15.563433647155762

Token 27: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22563610970973969
    2. '))' → logprob: -1.6006361246109009
    3. ')))' → logprob: -8.97563648223877
    4. ')+' → logprob: -10.35063648223877
    5. '),' → logprob: -10.97563648223877
    6. ' )' → logprob: -11.47563648223877
    7. ' ' → logprob: -11.85063648223877
    8. ' ))' → logprob: -12.60063648223877
    9. '')' → logprob: -12.72563648223877
    10. ')
' → logprob: -12.85063648223877


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 25
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 20.00%
Précision adaptée (1ère position): 20.00%
Précision (top 10): 56.00%
================================================================================
