================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_pairs(n, m):
    """
    Calcule le nombre de paires possibles dans une grille n x m selon les règles suivantes :
    - Si n ou m vaut 1, le nombre de paires est le nombre de connexions possibles sur la ligne/colonne.
    - Sinon, c'est la somme des connexions horizontales et verticales dans la grille.

    Args:
        n (int): Le nombre de lignes de la grille.
        m (int): Le nombre de colonnes de la grille.

    Returns:
        int: Le nombre total de paires selon les règles ci-dessus.
    """
    # Si la grille a une seule ligne
    if n == 1:
        if m == 1:
            # Il n'y a qu'une seule case, donc pas de paire possible
            return 0
        else:
            # Sur une seule ligne de m cases, on compte les paires distinctes possibles
            return int(m * (m - 1) / 2)
    else:
        # Si la grille a une seule colonne
        if m == 1:
            # Une seule colonne de n cases : paires le long de la colonne
            return int(n * (n - 1) / 2)
        else:
            # Sinon, grille avec au moins 2 lignes et colonnes :
            # On additionne les paires sur chaque ligne et colonne
            return int((n * (n - 1) + m * (m - 1)) / 2)

def main():
    """
    Fonction principale. Lit deux entiers depuis l'entrée standard,
    calcule et affiche le nombre de paires possibles dans une grille de taille n x m.
    """
    # Lecture de deux entiers séparés par un espace
    n, m = map(int, input().split())
    # Calcul du résultat avec la fonction dédiée
    result = calculate_pairs(n, m)
    # Affichage du résultat final
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_pairs' (ID: 90005)
  → Token d'amorce (pas de prédiction)

Token 3: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04408431798219681
    2. '_' → logprob: -3.169084310531616
    3. '(_' → logprob: -8.419084548950195
    4. '```' → logprob: -8.669084548950195
    5. '_pairs' → logprob: -9.044084548950195
    6. '():' → logprob: -9.169084548950195
    7. ' (' → logprob: -10.044084548950195
    8. 'def' → logprob: -10.044084548950195
    9. ':' → logprob: -10.294084548950195
    10. '(_:' → logprob: -10.669084548950195

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12845949828624725
    2. ')' → logprob: -2.2534594535827637
    3. ',' → logprob: -4.378459453582764
    4. ':' → logprob: -6.378459453582764
    5. '[' → logprob: -8.128459930419922
    6. '(' → logprob: -8.628459930419922
    7. '*' → logprob: -8.753459930419922
    8. '```' → logprob: -8.878459930419922
    9. '_' → logprob: -9.003459930419922
    10. ' ' → logprob: -9.503459930419922

Token 5: ' m' (ID: 284)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6728190779685974
    2. ' m' → logprob: -1.0478191375732422
    3. 'k' → logprob: -3.672819137573242
    4. 'm' → logprob: -3.797819137573242
    5. ' pairs' → logprob: -3.797819137573242
    6. ')' → logprob: -3.922819137573242
    7. ' )' → logprob: -4.297819137573242
    8. ' a' → logprob: -4.547819137573242
    9. ' array' → logprob: -5.922819137573242
    10. 'a' → logprob: -5.922819137573242

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006277148146182299
    2. ')' → logprob: -5.756277084350586
    3. ':' → logprob: -6.131277084350586
    4. ',' → logprob: -7.506277084350586
    5. '```' → logprob: -8.756277084350586
    6. ''):' → logprob: -9.506277084350586
    7. '):
' → logprob: -9.756277084350586
    8. '**' → logprob: -11.381277084350586
    9. '`:' → logprob: -11.631277084350586
    10. '*' → logprob: -11.756277084350586

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006611637771129608
    2. '```' → logprob: -5.7566118240356445
    3. '   ' → logprob: -6.0066118240356445
    4. ':
' → logprob: -7.5066118240356445
    5. '():' → logprob: -8.506611824035645
    6. '":' → logprob: -10.131611824035645
    7. '`:' → logprob: -10.256611824035645
    8. '':' → logprob: -10.256611824035645
    9. '``' → logprob: -11.006611824035645
    10. '    
' → logprob: -11.256611824035645

Token 8: ' """
' (ID: 7037)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.25716453790664673
    2. '   ' → logprob: -2.757164478302002
    3. '\n' → logprob: -3.257164478302002
    4. '\' → logprob: -3.257164478302002
    5. '       ' → logprob: -4.007164478302002
    6. '`' → logprob: -4.132164478302002
    7. ':' → logprob: -4.132164478302002
    8. ''' → logprob: -5.257164478302002
    9. '``' → logprob: -5.257164478302002
    10. ' 
' → logprob: -5.632164478302002

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.807642936706543
    2. '   ' → logprob: -1.807642936706543
    3. '\n' → logprob: -2.182642936706543
    4. '"""' → logprob: -2.307642936706543
    5. ' """' → logprob: -3.682642936706543
    6. ''' → logprob: -3.807642936706543
    7. 'r' → logprob: -4.057642936706543
    8. 'n' → logprob: -4.182642936706543
    9. '"' → logprob: -4.182642936706543
    10. ' """
' → logprob: -4.432642936706543

Token 10: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.5725118517875671
    2. '"""' → logprob: -1.697511911392212
    3. 'Count' → logprob: -2.072511911392212
    4. 'Calcul' → logprob: -3.072511911392212
    5. 'Returns' → logprob: -3.572511911392212
    6. 'Return' → logprob: -4.447511672973633
    7. 'Counts' → logprob: -4.822511672973633
    8. 'C' → logprob: -4.947511672973633
    9. '"""
' → logprob: -5.447511672973633
    10. ''''' → logprob: -5.572511672973633

Token 11: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.0009436229011043906
    2. 'cul' → logprob: -7.375943660736084
    3. 'cula' → logprob: -8.750943183898926
    4. 'c' → logprob: -8.875943183898926
    5. 'cu' → logprob: -11.625943183898926
    6. '   ' → logprob: -13.125943183898926
    7. 'culated' → logprob: -13.125943183898926
    8. 'culator' → logprob: -13.375943183898926
    9. 'cular' → logprob: -13.625943183898926
    10. '```' → logprob: -14.000943183898926

Token 12: ' le' (ID: 505)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.3657005727291107
    2. 't' → logprob: -1.365700602531433
    3. 's' → logprob: -3.1157004833221436
    4. '   ' → logprob: -5.865700721740723
    5. 'tes' → logprob: -7.615700721740723
    6. 'late' → logprob: -7.865700721740723
    7. '```' → logprob: -7.990700721740723
    8. 'm' → logprob: -8.240700721740723
    9. 'ate' → logprob: -8.490700721740723
    10. 'd' → logprob: -8.490700721740723

Token 13: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.611133337020874
    2. ' nombre' → logprob: -0.861133337020874
    3. 'r' → logprob: -3.486133337020874
    4. 'nombre' → logprob: -6.611133575439453
    5. ' ' → logprob: -7.361133575439453
    6. '   ' → logprob: -7.486133575439453
    7. ' nombres' → logprob: -7.611133575439453
    8. ' s' → logprob: -8.111133575439453
    9. ' Nombre' → logprob: -8.861133575439453
    10. ' ' → logprob: -9.361133575439453

Token 14: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6262310743331909
    2. ' de' → logprob: -1.001231074333191
    3. ' d' → logprob: -3.5012311935424805
    4. '  ' → logprob: -3.6262311935424805
    5. ' des' → logprob: -4.3762311935424805
    6. '_' → logprob: -4.5012311935424805
    7. 's' → logprob: -5.0012311935424805
    8. ')' → logprob: -6.3762311935424805
    9. 'd' → logprob: -7.0012311935424805
    10. '   ' → logprob: -7.1262311935424805

Token 15: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3905664384365082
    2. ' p' → logprob: -1.2655664682388306
    3. 'p' → logprob: -4.640566349029541
    4. ' pairs' → logprob: -4.890566349029541
    5. 's' → logprob: -5.015566349029541
    6. '_' → logprob: -5.140566349029541
    7. ' espaces' → logprob: -5.390566349029541
    8. ' ' → logprob: -5.765566349029541
    9. '```' → logprob: -7.140566349029541
    10. '_pairs' → logprob: -7.515566349029541

Token 16: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023318035528063774
    2. 'r' → logprob: -5.023317813873291
    3. 'airs' → logprob: -5.273317813873291
    4. 'u' → logprob: -5.773317813873291
    5. ' ' → logprob: -6.273317813873291
    6. 'aires' → logprob: -6.523317813873291
    7. 'air' → logprob: -6.898317813873291
    8. 's' → logprob: -7.023317813873291
    9. ' a' → logprob: -7.773317813873291
    10. ')' → logprob: -7.898317813873291

Token 17: ' possibles' (ID: 97753)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5752291679382324
    2. '_' → logprob: -1.7002291679382324
    3. ''' → logprob: -2.0752291679382324
    4. '(' → logprob: -2.8252291679382324
    5. ' (' → logprob: -4.075229167938232
    6. ')' → logprob: -4.575229167938232
    7. '```' → logprob: -4.575229167938232
    8. '"' → logprob: -4.700229167938232
    9. ' de' → logprob: -4.950229167938232
    10. '`' → logprob: -5.575229167938232

Token 18: ' dans' (ID: 2671)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7825455069541931
    2. '`' → logprob: -1.907545566558838
    3. '```' → logprob: -2.032545566558838
    4. '   ' → logprob: -2.532545566558838
    5. ' ' → logprob: -2.907545566558838
    6. '\' → logprob: -3.532545566558838
    7. '"' → logprob: -3.532545566558838
    8. '(' → logprob: -4.157545566558838
    9. ' (' → logprob: -4.532545566558838
    10. ' de' → logprob: -5.157545566558838

Token 19: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7030391097068787
    2. ' un' → logprob: -1.5780391693115234
    3. ' n' → logprob: -1.7030391693115234
    4. ' une' → logprob: -2.7030391693115234
    5. ' la' → logprob: -3.7030391693115234
    6. ' le' → logprob: -5.078039169311523
    7. ' les' → logprob: -5.328039169311523
    8. 'n' → logprob: -5.828039169311523
    9. '   ' → logprob: -5.953039169311523
    10. '```' → logprob: -6.578039169311523

Token 20: ' grille' (ID: 99153)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1447596698999405
    2. ' chaine' → logprob: -2.3947596549987793
    3. ' phrase' → logprob: -4.269759654998779
    4. '   ' → logprob: -4.769759654998779
    5. ' liste' → logprob: -4.894759654998779
    6. ' ' → logprob: -5.269759654998779
    7. 'chaine' → logprob: -5.769759654998779
    8. ' string' → logprob: -6.269759654998779
    9. ' chain' → logprob: -6.894759654998779
    10. ' paire' → logprob: -7.394759654998779

Token 21: ' n' (ID: 297)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8948730826377869
    2. '   ' → logprob: -1.1448731422424316
    3. ' ' → logprob: -3.2698731422424316
    4. '\n' → logprob: -3.2698731422424316
    5. '_' → logprob: -3.3948731422424316
    6. ',' → logprob: -3.6448731422424316
    7. ' \' → logprob: -3.7698731422424316
    8. ' de' → logprob: -3.8948731422424316
    9. 'def' → logprob: -4.269873142242432
    10. '```' → logprob: -4.269873142242432

Token 22: ' x' (ID: 1215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8714832067489624
    2. 'u' → logprob: -1.2464832067489624
    3. '_' → logprob: -2.496483325958252
    4. '   ' → logprob: -2.746483325958252
    5. ' ' → logprob: -2.996483325958252
    6. 'e' → logprob: -3.371483325958252
    7. '-' → logprob: -4.121483325958252
    8. ',' → logprob: -4.871483325958252
    9. ')' → logprob: -4.996483325958252
    10. '`' → logprob: -5.246483325958252

Token 23: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3488137125968933
    2. 'm' → logprob: -1.223813772201538
    3. ' ' → logprob: -8.598814010620117
    4. '   ' → logprob: -10.223814010620117
    5. ' n' → logprob: -10.223814010620117
    6. '```' → logprob: -10.348814010620117
    7. 'n' → logprob: -10.473814010620117
    8. ' ' → logprob: -10.598814010620117
    9. '	m' → logprob: -12.348814010620117
    10. '_m' → logprob: -12.348814010620117

Token 24: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13042020797729492
    2. '```' → logprob: -3.630420207977295
    3. '\n' → logprob: -3.880420207977295
    4. ')' → logprob: -4.130420207977295
    5. '\' → logprob: -4.505420207977295
    6. '
' → logprob: -4.755420207977295
    7. '    
' → logprob: -5.005420207977295
    8. '"""
' → logprob: -5.130420207977295
    9. ':' → logprob: -5.630420207977295
    10. '.' → logprob: -5.880420207977295

Token 25: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3098016381263733
    2. ' le' → logprob: -1.9348015785217285
    3. ' les' → logprob: -3.0598015785217285
    4. ' ' → logprob: -3.9348015785217285
    5. ' l' → logprob: -4.0598015785217285
    6. '```' → logprob: -4.1848015785217285
    7. ' des' → logprob: -5.9348015785217285
    8. 'le' → logprob: -6.0598015785217285
    9. 'l' → logprob: -6.0598015785217285
    10. ' ' → logprob: -6.4348015785217285

Token 26: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.4433680772781372
    2. 'r' → logprob: -2.4433679580688477
    3. ' contraintes' → logprob: -2.5683679580688477
    4. ' lignes' → logprob: -2.8183679580688477
    5. ' espaces' → logprob: -3.1933679580688477
    6. ' critères' → logprob: -4.193367958068848
    7. ' conditions' → logprob: -5.068367958068848
    8. '   ' → logprob: -5.193367958068848
    9. ' différentes' → logprob: -5.318367958068848
    10. ' ' → logprob: -5.443367958068848

Token 27: ' suivantes' (ID: 106173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.192988634109497
    2. '```' → logprob: -1.317988634109497
    3. ' ' → logprob: -2.817988634109497
    4. '\n' → logprob: -2.942988634109497
    5. ''' → logprob: -2.942988634109497
    6. '\' → logprob: -3.192988634109497
    7. '.' → logprob: -3.442988634109497
    8. 'def' → logprob: -3.567988634109497
    9. '`' → logprob: -3.817988634109497
    10. '    ' → logprob: -4.067988395690918

Token 28: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4887092113494873
    2. ' :' → logprob: -1.8637092113494873
    3. '   ' → logprob: -1.9887092113494873
    4. '.' → logprob: -3.4887092113494873
    5. '\n' → logprob: -4.113709449768066
    6. ',' → logprob: -4.613709449768066
    7. ' ' → logprob: -4.613709449768066
    8. '\' → logprob: -4.863709449768066
    9. '```' → logprob: -5.238709449768066
    10. '  
' → logprob: -5.863709449768066

Token 29: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32797396183013916
    2. '  
' → logprob: -2.8279738426208496
    3. ' 
' → logprob: -2.8279738426208496
    4. '\' → logprob: -2.9529738426208496
    5. ' ' → logprob: -4.07797384262085
    6. '```' → logprob: -4.07797384262085
    7. '   ' → logprob: -4.20297384262085
    8. '"""
' → logprob: -4.32797384262085
    9. '    
' → logprob: -4.57797384262085
    10. '     
' → logprob: -4.95297384262085

Token 30: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4237421751022339
    2. '\n' → logprob: -1.5487421751022339
    3. '\' → logprob: -3.9237422943115234
    4. '    ' → logprob: -3.9237422943115234
    5. ' ' → logprob: -4.298742294311523
    6. '"""' → logprob: -4.298742294311523
    7. '    
' → logprob: -4.423742294311523
    8. ' 
' → logprob: -4.548742294311523
    9. '  
' → logprob: -5.298742294311523
    10. ' """
' → logprob: -5.548742294311523

Token 31: ' Si' (ID: 7832)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.3974103927612305
    2. ' chaque' → logprob: -2.0224103927612305
    3. ' """' → logprob: -2.2724103927612305
    4. ' Le' → logprob: -2.2724103927612305
    5. ' la' → logprob: -2.8974103927612305
    6. ' on' → logprob: -3.0224103927612305
    7. ' Chaque' → logprob: -3.0224103927612305
    8. ' espaces' → logprob: -3.2724103927612305
    9. ' il' → logprob: -3.5224103927612305
    10. ' les' → logprob: -4.0224103927612305

Token 32: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0840512216091156
    2. ' m' → logprob: -3.4590511322021484
    3. 'n' → logprob: -3.8340511322021484
    4. ' l' → logprob: -4.209051132202148
    5. ' la' → logprob: -5.459051132202148
    6. ' ' → logprob: -6.459051132202148
    7. ' ' → logprob: -6.584051132202148
    8. ' (' → logprob: -7.084051132202148
    9. 'm' → logprob: -7.084051132202148
    10. ' `' → logprob: -7.459051132202148

Token 33: ' ou' (ID: 2031)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0310977697372437
    2. ' <' → logprob: -1.7810977697372437
    3. ' ==' → logprob: -1.9060977697372437
    4. ' ' → logprob: -2.281097888946533
    5. ' >' → logprob: -2.531097888946533
    6. '==' → logprob: -3.281097888946533
    7. '<=' → logprob: -3.406097888946533
    8. ' >=' → logprob: -3.906097888946533
    9. '=' → logprob: -4.531097888946533
    10. '>' → logprob: -4.531097888946533

Token 34: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.00982255581766367
    2. 'm' → logprob: -4.634822368621826
    3. ' ' → logprob: -10.134822845458984
    4. '  ' → logprob: -11.884822845458984
    5. ' ' → logprob: -12.259822845458984
    6. '   ' → logprob: -12.634822845458984
    7. '```' → logprob: -12.634822845458984
    8. '_m' → logprob: -13.697322845458984
    9. '	m' → logprob: -14.134822845458984
    10. '1' → logprob: -14.259822845458984

Token 35: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5296176671981812
    2. ' est' → logprob: -1.1546176671981812
    3. ' vaut' → logprob: -3.0296177864074707
    4. '==' → logprob: -3.9046177864074707
    5. ' <=' → logprob: -4.154617786407471
    6. ' <' → logprob: -5.404617786407471
    7. ' is' → logprob: -6.404617786407471
    8. 'est' → logprob: -6.404617786407471
    9. ' sont' → logprob: -6.654617786407471
    10. ' ' → logprob: -7.404617786407471

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48372870683670044
    2. '1' → logprob: -0.9837287068367004
    3. '0' → logprob: -4.733728885650635
    4. '2' → logprob: -8.608728408813477
    5. '```' → logprob: -8.733728408813477
    6. '   ' → logprob: -8.858728408813477
    7. '  ' → logprob: -9.233728408813477
    8. ' égal' → logprob: -10.733728408813477
    9. ' inférieur' → logprob: -10.796228408813477
    10. ' ' → logprob: -10.858728408813477

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08597972244024277
    2. '0' → logprob: -3.085979700088501
    3. ' ' → logprob: -3.335979700088501
    4. '```' → logprob: -7.58597993850708
    5. '2' → logprob: -8.460979461669922
    6. 'un' → logprob: -9.523479461669922
    7. '   ' → logprob: -9.960979461669922
    8. '  ' → logprob: -9.960979461669922
    9. '-' → logprob: -10.460979461669922
    10. 'moins' → logprob: -10.523479461669922

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03347083181142807
    2. ':' → logprob: -3.783470869064331
    3. ' ,' → logprob: -4.783470630645752
    4. ' :' → logprob: -6.408470630645752
    5. '.' → logprob: -10.03347110748291
    6. ',
' → logprob: -10.03347110748291
    7. '   ' → logprob: -11.15847110748291
    8. ':return' → logprob: -11.53347110748291
    9. ' ' → logprob: -11.78347110748291
    10. ' ' → logprob: -11.90847110748291

Token 39: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6092696785926819
    2. ' on' → logprob: -2.109269618988037
    3. ' return' → logprob: -2.109269618988037
    4. '    ' → logprob: -2.484269618988037
    5. ' ' → logprob: -3.484269618988037
    6. ' la' → logprob: -3.984269618988037
    7. ' il' → logprob: -4.234269618988037
    8. ' ' → logprob: -4.484269618988037
    9. ' le' → logprob: -4.609269618988037
    10. ' retourne' → logprob: -4.609269618988037

Token 40: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0915401503443718
    2. ' code' → logprob: -3.9665400981903076
    3. ' ' → logprob: -4.091540336608887
    4. ' maximum' → logprob: -4.716540336608887
    5. ' n' → logprob: -5.216540336608887
    6. 'nombre' → logprob: -5.466540336608887
    7. '   ' → logprob: -5.716540336608887
    8. 'n' → logprob: -5.716540336608887
    9. ' espace' → logprob: -5.716540336608887
    10. ' ' → logprob: -5.841540336608887

Token 41: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7333088517189026
    2. ' d' → logprob: -1.7333087921142578
    3. '  ' → logprob: -1.8583087921142578
    4. '_' → logprob: -2.108308792114258
    5. ' ' → logprob: -3.858308792114258
    6. 'de' → logprob: -4.858308792114258
    7. '_de' → logprob: -5.358308792114258
    8. ' ' → logprob: -5.733308792114258
    9. 'd' → logprob: -5.858308792114258
    10. ')' → logprob: -5.983308792114258

Token 42: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10245982557535172
    2. 'p' → logprob: -2.7274599075317383
    3. ' ' → logprob: -3.8524599075317383
    4. ' pairs' → logprob: -5.227459907531738
    5. ' espaces' → logprob: -7.539959907531738
    6. 'pairs' → logprob: -7.539959907531738
    7. '_' → logprob: -7.664959907531738
    8. ' cases' → logprob: -7.789959907531738
    9. '```' → logprob: -7.789959907531738
    10. '0' → logprob: -7.852459907531738

Token 43: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008785889949649572
    2. 'aires' → logprob: -7.500878810882568
    3. 'airs' → logprob: -9.87587833404541
    4. 'i' → logprob: -10.00087833404541
    5. 'ai' → logprob: -10.12587833404541
    6. 'aire' → logprob: -10.62587833404541
    7. ' a' → logprob: -10.75087833404541
    8. 'r' → logprob: -10.87587833404541
    9. 'air' → logprob: -11.12587833404541
    10. ''a' → logprob: -11.31337833404541

Token 44: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3192114531993866
    2. ' ' → logprob: -1.944211483001709
    3. ' =' → logprob: -3.444211483001709
    4. '  ' → logprob: -3.444211483001709
    5. ' vaut' → logprob: -4.444211483001709
    6. 's' → logprob: -4.569211483001709
    7. ' s' → logprob: -4.944211483001709
    8. ' possible' → logprob: -5.694211483001709
    9. 'es' → logprob: -5.819211483001709
    10. 'est' → logprob: -5.944211483001709

Token 45: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5420642495155334
    2. '0' → logprob: -0.9170642495155334
    3. ' n' → logprob: -5.417064189910889
    4. ' nul' → logprob: -5.417064189910889
    5. '   ' → logprob: -5.542064189910889
    6. ' zero' → logprob: -6.292064189910889
    7. ' zéro' → logprob: -6.417064189910889
    8. 'n' → logprob: -8.167064666748047
    9. '```' → logprob: -8.167064666748047
    10. ' égal' → logprob: -8.167064666748047

Token 46: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.47959479689598083
    2. ' maximum' → logprob: -1.3545948266983032
    3. 'nombre' → logprob: -3.1045947074890137
    4. ' minimum' → logprob: -3.9795947074890137
    5. ' max' → logprob: -4.229594707489014
    6. 'maximum' → logprob: -4.354594707489014
    7. ' produit' → logprob: -4.729594707489014
    8. '   ' → logprob: -4.854594707489014
    9. 'max' → logprob: -5.479594707489014
    10. 'minimum' → logprob: -5.729594707489014

Token 47: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7377220988273621
    2. ' de' → logprob: -0.8627220988273621
    3. ' total' → logprob: -2.987722158432007
    4. '_' → logprob: -4.112721920013428
    5. 'total' → logprob: -4.987721920013428
    6. 'de' → logprob: -5.737721920013428
    7. 'd' → logprob: -5.737721920013428
    8. '  ' → logprob: -5.862721920013428
    9. '_total' → logprob: -5.862721920013428
    10. ' ' → logprob: -6.237721920013428

Token 48: ' connex' (ID: 154480)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.7531763911247253
    2. 'élé' → logprob: -1.5031764507293701
    3. ' cases' → logprob: -2.50317645072937
    4. ' p' → logprob: -3.25317645072937
    5. ' cellules' → logprob: -3.25317645072937
    6. '```' → logprob: -3.37817645072937
    7. ' éléments' → logprob: -3.62817645072937
    8. ' espaces' → logprob: -4.628176212310791
    9. 'cell' → logprob: -4.878176212310791
    10. ' points' → logprob: -5.003176212310791

Token 49: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.020446468144655228
    2. 'i' → logprob: -4.895446300506592
    3. 'ections' → logprob: -5.270446300506592
    4. 'ion' → logprob: -5.395446300506592
    5. 'ect' → logprob: -7.520446300506592
    6. 'e' → logprob: -7.770446300506592
    7. '```' → logprob: -8.39544677734375
    8. 'a' → logprob: -8.64544677734375
    9. ' ions' → logprob: -8.64544677734375
    10. 'ects' → logprob: -8.89544677734375

Token 50: ' possibles' (ID: 97753)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.6207592487335205
    2. ' possible' → logprob: -1.2457592487335205
    3. 'possible' → logprob: -3.4957592487335205
    4. ' possibles' → logprob: -3.4957592487335205
    5. '_possible' → logprob: -3.9957592487335205
    6. ' between' → logprob: -4.120759010314941
    7. '```' → logprob: -4.370759010314941
    8. '_' → logprob: -4.495759010314941
    9. 'entre' → logprob: -4.870759010314941
    10. ' d' → logprob: -5.370759010314941

Token 51: ' sur' (ID: 1512)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.1105419471859932
    2. ' ' → logprob: -4.110541820526123
    3. '   ' → logprob: -4.110541820526123
    4. ' between' → logprob: -4.235541820526123
    5. ',' → logprob: -4.485541820526123
    6. '.' → logprob: -4.610541820526123
    7. ' dans' → logprob: -4.985541820526123
    8. 'entre' → logprob: -5.110541820526123
    9. '```' → logprob: -5.610541820526123
    10. '\' → logprob: -5.860541820526123

Token 52: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2573268413543701
    2. ' la' → logprob: -1.7573268413543701
    3. 'une' → logprob: -4.007327079772949
    4. ' n' → logprob: -4.382327079772949
    5. ' ' → logprob: -5.132327079772949
    6. ' l' → logprob: -5.507327079772949
    7. ' les' → logprob: -5.632327079772949
    8. 'l' → logprob: -6.257327079772949
    9. 'la' → logprob: -6.507327079772949
    10. 'n' → logprob: -7.257327079772949

Token 53: ' ligne' (ID: 19583)
  Prédit: ' grille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.7062053680419922
    2. ' ligne' → logprob: -1.2062053680419922
    3. ' même' → logprob: -1.9562053680419922
    4. 'ligne' → logprob: -3.206205368041992
    5. ' première' → logprob: -4.706205368041992
    6. 'gr' → logprob: -5.206205368041992
    7. ' lignes' → logprob: -6.456205368041992
    8. 'prem' → logprob: -6.706205368041992
    9. ' ' → logprob: -6.831205368041992
    10. ' ' → logprob: -7.331205368041992

Token 54: '/' (ID: 14)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030652301385998726
    2. ',' → logprob: -5.2806525230407715
    3. '\' → logprob: -5.2806525230407715
    4. ' or' → logprob: -5.5306525230407715
    5. '   ' → logprob: -5.5306525230407715
    6. '(s' → logprob: -5.7806525230407715
    7. ' ou' → logprob: -6.7806525230407715
    8. ')' → logprob: -6.9056525230407715
    9. '\n' → logprob: -6.9056525230407715
    10. ' ' → logprob: -7.0306525230407715

Token 55: 'col' (ID: 1798)
  Prédit: ' colonne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colonne' → logprob: -0.3019242286682129
    2. 'col' → logprob: -1.551924228668213
    3. ' ou' → logprob: -4.051924228668213
    4. 'ou' → logprob: -4.301924228668213
    5. 'ligne' → logprob: -5.051924228668213
    6. ' ' → logprob: -5.801924228668213
    7. ' col' → logprob: -7.051924228668213
    8. ' ligne' → logprob: -7.176924228668213
    9. '_col' → logprob: -7.176924228668213
    10. ' colon' → logprob: -7.176924228668213

Token 56: 'onne' (ID: 25335)
  Prédit: 'onne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.15896369516849518
    2. 'e' → logprob: -2.533963680267334
    3. 'o' → logprob: -2.783963680267334
    4. 'ne' → logprob: -6.908963680267334
    5. 'onn' → logprob: -7.033963680267334
    6. 'u' → logprob: -7.158963680267334
    7. 'n' → logprob: -7.283963680267334
    8. 'onnes' → logprob: -7.283963680267334
    9. 'on' → logprob: -7.783963680267334
    10. '```' → logprob: -7.908963680267334

Token 57: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10046739876270294
    2. 's' → logprob: -3.7254674434661865
    3. '\' → logprob: -3.8504674434661865
    4. ',' → logprob: -4.225467205047607
    5. '\n' → logprob: -4.725467205047607
    6. '```' → logprob: -5.350467205047607
    7. ''' → logprob: -5.600467205047607
    8. '.' → logprob: -5.975467205047607
    9. 'n' → logprob: -6.225467205047607
    10. '    
' → logprob: -6.225467205047607

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6162341833114624
    2. '\n' → logprob: -1.8662341833114624
    3. ':' → logprob: -2.116234302520752
    4. '\' → logprob: -2.241234302520752
    5. '```' → logprob: -4.116234302520752
    6. ' 
' → logprob: -4.366234302520752
    7. 'n' → logprob: -4.616234302520752
    8. ')' → logprob: -4.616234302520752
    9. ':
' → logprob: -5.491234302520752
    10. ',' → logprob: -5.616234302520752

Token 59: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006723891478031874
    2. '\' → logprob: -5.881723880767822
    3. '\n' → logprob: -6.506723880767822
    4. '    ' → logprob: -7.506723880767822
    5. '```' → logprob: -7.881723880767822
    6. 'n' → logprob: -8.00672435760498
    7. ')' → logprob: -8.50672435760498
    8. '    
' → logprob: -8.75672435760498
    9. '"""' → logprob: -9.00672435760498
    10. '`' → logprob: -9.13172435760498

Token 60: ' Sinon' (ID: 154924)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7714950442314148
    2. '   ' → logprob: -0.8964950442314148
    3. ' elif' → logprob: -3.3964951038360596
    4. ' ' → logprob: -3.7714951038360596
    5. ' return' → logprob: -3.8964951038360596
    6. 'if' → logprob: -4.1464948654174805
    7. ' Si' → logprob: -4.7714948654174805
    8. ' else' → logprob: -4.7714948654174805
    9. 's' → logprob: -5.6464948654174805
    10. ' s' → logprob: -5.8964948654174805

Token 61: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8319534063339233
    2. ',' → logprob: -1.2069534063339233
    3. ':' → logprob: -2.081953525543213
    4. ' :' → logprob: -3.456953525543213
    5. ' ' → logprob: -3.706953525543213
    6. ' ,' → logprob: -3.956953525543213
    7. '    ' → logprob: -4.581953525543213
    8. '```' → logprob: -4.706953525543213
    9. ':
' → logprob: -4.831953525543213
    10. ' ' → logprob: -4.831953525543213

Token 62: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2510562241077423
    2. ' ' → logprob: -2.37605619430542
    3. '  ' → logprob: -2.75105619430542
    4. '   ' → logprob: -3.50105619430542
    5. ' return' → logprob: -4.12605619430542
    6. '   ' → logprob: -4.50105619430542
    7. '    ' → logprob: -5.62605619430542
    8. ' n' → logprob: -7.62605619430542
    9. ' ' → logprob: -7.75105619430542
    10. ' retourne' → logprob: -7.75105619430542

Token 63: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9938442707061768
    2. ''' → logprob: -1.1188442707061768
    3. 'a' → logprob: -1.2438442707061768
    4. ''est' → logprob: -5.243844032287598
    5. ''a' → logprob: -5.743844032287598
    6. 'o' → logprob: -6.493844032287598
    7. ''e' → logprob: -6.868844032287598
    8. 'al' → logprob: -7.243844032287598
    9. ' '' → logprob: -7.243844032287598
    10. ''''' → logprob: -7.493844032287598

Token 64: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7376571893692017
    2. ' le' → logprob: -1.2376571893692017
    3. ' (' → logprob: -1.8626571893692017
    4. 'n' → logprob: -3.237657070159912
    5. ' la' → logprob: -4.112657070159912
    6. ' l' → logprob: -4.862657070159912
    7. '(n' → logprob: -6.112657070159912
    8. 'le' → logprob: -6.112657070159912
    9. '(' → logprob: -6.487657070159912
    10. ' un' → logprob: -6.612657070159912

Token 65: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.25961533188819885
    2. 's' → logprob: -1.5096153020858765
    3. ' multiplication' → logprob: -5.759615421295166
    4. '   ' → logprob: -6.634615421295166
    5. ' quantité' → logprob: -7.509615421295166
    6. ' som' → logprob: -8.134614944458008
    7. ' sum' → logprob: -8.259614944458008
    8. ' surface' → logprob: -8.759614944458008
    9. ' ' → logprob: -8.884614944458008
    10. 'multip' → logprob: -9.009614944458008

Token 66: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.001723488443531096
    2. 'des' → logprob: -7.001723289489746
    3. ' de' → logprob: -7.376723289489746
    4. ' du' → logprob: -10.251723289489746
    5. 'de' → logprob: -10.251723289489746
    6. ' ' → logprob: -10.626723289489746
    7. '    ' → logprob: -10.751723289489746
    8. '_des' → logprob: -11.251723289489746
    9. ' d' → logprob: -11.626723289489746
    10. '   ' → logprob: -11.626723289489746

Token 67: ' connex' (ID: 154480)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3342006504535675
    2. ' nombres' → logprob: -2.459200620651245
    3. ' n' → logprob: -2.959200620651245
    4. ' ' → logprob: -3.709200620651245
    5. ' connex' → logprob: -3.834200620651245
    6. ' nombre' → logprob: -3.959200620651245
    7. 'n' → logprob: -4.584200859069824
    8. ' connections' → logprob: -4.959200859069824
    9. ' espaces' → logprob: -4.959200859069824
    10. 'p' → logprob: -5.084200859069824

Token 68: 'ions' (ID: 756)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.48190486431121826
    2. 't' → logprob: -1.7319048643112183
    3. 'ections' → logprob: -2.106904983520508
    4. 'tes' → logprob: -2.606904983520508
    5. 'ations' → logprob: -6.106904983520508
    6. 'e' → logprob: -6.106904983520508
    7. 'ctions' → logprob: -7.106904983520508
    8. 'tion' → logprob: -7.356904983520508
    9. 'utions' → logprob: -7.481904983520508
    10. 'ions' → logprob: -7.981904983520508

Token 69: ' horizont' (ID: 69308)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.706325352191925
    2. ' possibles' → logprob: -1.5813252925872803
    3. '_possible' → logprob: -2.4563252925872803
    4. 'possible' → logprob: -3.0813252925872803
    5. ' horizont' → logprob: -3.0813252925872803
    6. ' entre' → logprob: -3.2063252925872803
    7. '_' → logprob: -3.9563252925872803
    8. ' horizontal' → logprob: -4.831325531005859
    9. '   ' → logprob: -5.206325531005859
    10. ' between' → logprob: -5.331325531005859

Token 70: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.14765499532222748
    2. 'es' → logprob: -2.0226550102233887
    3. 'a' → logprob: -5.522655010223389
    4. 'e' → logprob: -8.02265453338623
    5. 'al' → logprob: -8.14765453338623
    6. '   ' → logprob: -9.27265453338623
    7. 'ale' → logprob: -9.27265453338623
    8. 'aux' → logprob: -10.27265453338623
    9. 'aires' → logprob: -10.27265453338623
    10. '```' → logprob: -10.89765453338623

Token 71: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6524312496185303
    2. '+' → logprob: -1.1524312496185303
    3. '   ' → logprob: -2.6524312496185303
    4. ' ' → logprob: -3.6524312496185303
    5. ',' → logprob: -4.652431488037109
    6. ' et' → logprob: -4.652431488037109
    7. 'def' → logprob: -4.902431488037109
    8. ' ,' → logprob: -5.027431488037109
    9. ')' → logprob: -5.152431488037109
    10. '```' → logprob: -5.527431488037109

Token 72: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.058410611003637314
    2. 'vertical' → logprob: -2.93341064453125
    3. 'vert' → logprob: -6.55841064453125
    4. ' verticale' → logprob: -6.93341064453125
    5. ' vert' → logprob: -8.05841064453125
    6. ' les' → logprob: -8.30841064453125
    7. ' des' → logprob: -8.93341064453125
    8. '_vertical' → logprob: -9.18341064453125
    9. '```' → logprob: -10.05841064453125
    10. ' ' → logprob: -10.18341064453125

Token 73: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0013820211170241237
    2. 'e' → logprob: -6.626381874084473
    3. '```' → logprob: -10.751381874084473
    4. 's' → logprob: -11.001381874084473
    5. 'les' → logprob: -11.626381874084473
    6. '   ' → logprob: -14.126381874084473
    7. 'esp' → logprob: -14.376381874084473
    8. '

' → logprob: -14.501381874084473
    9. ''es' → logprob: -14.501381874084473
    10. '	es' → logprob: -14.688881874084473

Token 74: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6024775505065918
    2. '   ' → logprob: -0.8524775505065918
    3. '\n' → logprob: -5.227477550506592
    4. '
' → logprob: -5.477477550506592
    5. ':
' → logprob: -5.477477550506592
    6. ' :' → logprob: -5.727477550506592
    7. '\' → logprob: -6.102477550506592
    8. 'n' → logprob: -6.102477550506592
    9. '    
' → logprob: -6.602477550506592
    10. '```' → logprob: -6.727477550506592

Token 75: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1378009170293808
    2. 'la' → logprob: -2.262800931930542
    3. 'une' → logprob: -4.512800693511963
    4. ' une' → logprob: -5.262800693511963
    5. ' ' → logprob: -5.637800693511963
    6. 'l' → logprob: -6.637800693511963
    7. '```' → logprob: -7.012800693511963
    8. 'le' → logprob: -7.512800693511963
    9. ' ' → logprob: -7.887800693511963
    10. ' toute' → logprob: -8.137801170349121

Token 76: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.18040671944618225
    2. 'gr' → logprob: -1.8054066896438599
    3. 'grid' → logprob: -8.68040657043457
    4. ' gr' → logprob: -8.93040657043457
    5. '   ' → logprob: -9.68040657043457
    6. 'ligne' → logprob: -9.80540657043457
    7. ' grid' → logprob: -10.18040657043457
    8. '```' → logprob: -10.43040657043457
    9. ' ' → logprob: -10.99290657043457
    10. 'mat' → logprob: -11.05540657043457

Token 77: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32716596126556396
    2. '   ' → logprob: -1.452165961265564
    3. '\n' → logprob: -4.0771660804748535
    4. ':
' → logprob: -4.3271660804748535
    5. '\' → logprob: -5.4521660804748535
    6. ' :' → logprob: -5.7021660804748535
    7. '
' → logprob: -6.0771660804748535
    8. '```' → logprob: -6.8271660804748535
    9. '    
' → logprob: -7.2021660804748535
    10. ' 
' → logprob: -7.7021660804748535

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07824401557445526
    2. '```' → logprob: -3.0782439708709717
    3. '"""' → logprob: -3.7032439708709717
    4. '
' → logprob: -6.328244209289551
    5. '"""
' → logprob: -7.578244209289551
    6. '"' → logprob: -7.828244209289551
    7. ')' → logprob: -7.828244209289551
    8. '\n' → logprob: -7.953244209289551
    9. '    
' → logprob: -8.45324420928955
    10. '`' → logprob: -8.70324420928955

Token 79: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036722470074892044
    2. '"""' → logprob: -3.536722421646118
    3. '```' → logprob: -5.411722660064697
    4. '
' → logprob: -7.036722660064697
    5. ')' → logprob: -8.036722183227539
    6. '    ' → logprob: -8.411722183227539
    7. '"' → logprob: -8.536722183227539
    8. ' """' → logprob: -9.036722183227539
    9. '    
' → logprob: -9.036722183227539
    10. '\n' → logprob: -9.036722183227539

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26827511191368103
    2. ' :' → logprob: -1.6432751417160034
    3. ',' → logprob: -3.893275022506714
    4. '):' → logprob: -5.393275260925293
    5. '   ' → logprob: -5.643275260925293
    6. ')' → logprob: -5.768275260925293
    7. ' ):' → logprob: -6.268275260925293
    8. ' ,' → logprob: -6.893275260925293
    9. '[' → logprob: -6.893275260925293
    10. '```' → logprob: -6.893275260925293

Token 81: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.058055344969034195
    2. 'n' → logprob: -3.1830554008483887
    3. '   ' → logprob: -4.683055400848389
    4. '    ' → logprob: -5.308055400848389
    5. '```' → logprob: -7.808055400848389
    6. ' 
' → logprob: -9.43305492401123
    7. '	n' → logprob: -9.43305492401123
    8. ' ' → logprob: -10.30805492401123
    9. '(n' → logprob: -10.55805492401123
    10. '    
' → logprob: -10.68305492401123

Token 82: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0020703254267573357
    2. '   ' → logprob: -6.502070426940918
    3. ' n' → logprob: -7.502070426940918
    4. 'self' → logprob: -11.377070426940918
    5. '```' → logprob: -13.377070426940918
    6. '       ' → logprob: -13.752070426940918
    7. '	n' → logprob: -14.502070426940918
    8. 'int' → logprob: -14.627070426940918
    9. '`' → logprob: -14.877070426940918
    10. ' ' → logprob: -15.752070426940918

Token 83: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036184657365083694
    2. ' ,' → logprob: -4.161184787750244
    3. ' (' → logprob: -4.411184787750244
    4. ':' → logprob: -5.661184787750244
    5. ':int' → logprob: -6.661184787750244
    6. '(int' → logprob: -6.911184787750244
    7. ',int' → logprob: -7.161184787750244
    8. 'int' → logprob: -7.536184787750244
    9. ' int' → logprob: -8.411184310913086
    10. ' :' → logprob: -8.411184310913086

Token 84: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01605220139026642
    2. ' int' → logprob: -4.14105224609375
    3. 'i' → logprob: -11.39105224609375
    4. '   ' → logprob: -13.64105224609375
    5. ' i' → logprob: -13.76605224609375
    6. 'in' → logprob: -13.76605224609375
    7. 'n' → logprob: -14.39105224609375
    8. '```' → logprob: -14.76605224609375
    9. '    ' → logprob: -15.01605224609375
    10. ')' → logprob: -15.01605224609375

Token 85: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09749452024698257
    2. ')' → logprob: -2.472494602203369
    3. ',' → logprob: -4.972494602203369
    4. '<|end|>' → logprob: -7.222494602203369
    5. ' ):' → logprob: -7.597494602203369
    6. '):
' → logprob: -8.972494125366211
    7. ':' → logprob: -9.722494125366211
    8. ' )' → logprob: -10.097494125366211
    9. ' ' → logprob: -10.347494125366211
    10. '),' → logprob: -11.097494125366211

Token 86: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.2711821496486664
    2. 'Le' → logprob: -1.5211821794509888
    3. ' La' → logprob: -5.146182060241699
    4. 'La' → logprob: -5.521182060241699
    5. ' le' → logprob: -5.646182060241699
    6. 'Nombre' → logprob: -5.771182060241699
    7. ' Nombre' → logprob: -6.646182060241699
    8. ' nombre' → logprob: -7.021182060241699
    9. ' la' → logprob: -9.6461820602417
    10. 'The' → logprob: -9.6461820602417

Token 87: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.22568348050117493
    2. 'nombre' → logprob: -1.6006834506988525
    3. ' nombres' → logprob: -8.975683212280273
    4. 'n' → logprob: -9.725683212280273
    5. ' ' → logprob: -10.725683212280273
    6. '   ' → logprob: -11.350683212280273
    7. 'nb' → logprob: -11.600683212280273
    8. 'Nombre' → logprob: -11.975683212280273
    9. ' n' → logprob: -12.225683212280273
    10. ' nom' → logprob: -12.350683212280273

Token 88: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2195810079574585
    2. ' de' → logprob: -1.9695810079574585
    3. ' ' → logprob: -2.969581127166748
    4. 'de' → logprob: -5.844581127166748
    5. 'd' → logprob: -6.094581127166748
    6. '_' → logprob: -8.71958065032959
    7. '  ' → logprob: -8.71958065032959
    8. ' total' → logprob: -9.09458065032959
    9. ' des' → logprob: -9.21958065032959
    10. ' maximum' → logprob: -9.59458065032959

Token 89: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09477866441011429
    2. ' lignes' → logprob: -2.4697787761688232
    3. ' ' → logprob: -5.844778537750244
    4. 'ligne' → logprob: -7.719778537750244
    5. ' l' → logprob: -7.844778537750244
    6. ' ' → logprob: -7.969778537750244
    7. ' colon' → logprob: -8.219779014587402
    8. ' rang' → logprob: -8.219779014587402
    9. 'colon' → logprob: -8.469779014587402
    10. ' ligne' → logprob: -8.969779014587402

Token 90: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18853174149990082
    2. ',' → logprob: -2.0635316371917725
    3. '<|end|>' → logprob: -3.4385316371917725
    4. '   ' → logprob: -4.938531875610352
    5. '),' → logprob: -6.313531875610352
    6. ' ,' → logprob: -6.938531875610352
    7. ',
' → logprob: -7.063531875610352
    8. '<|end|>' → logprob: -7.438531875610352
    9. '```' → logprob: -7.813531875610352
    10. ' )' → logprob: -8.563531875610352

Token 91: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.019742749631404877
    2. 'la' → logprob: -4.019742965698242
    3. 'l' → logprob: -7.144742965698242
    4. '<|end|>' → logprob: -8.519742965698242
    5. ' l' → logprob: -8.894742965698242
    6. ' ' → logprob: -9.019742965698242
    7. 'n' → logprob: -10.019742965698242
    8. '```' → logprob: -10.394742965698242
    9. ' the' → logprob: -10.519742965698242
    10. 'gr' → logprob: -10.644742965698242

Token 92: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.38819918036460876
    2. 'gr' → logprob: -1.1381992101669312
    3. ' gr' → logprob: -7.388199329376221
    4. 'grid' → logprob: -8.263198852539062
    5. ' grid' → logprob: -8.888198852539062
    6. ' ' → logprob: -9.263198852539062
    7. '   ' → logprob: -9.513198852539062
    8. ' ' → logprob: -10.263198852539062
    9. '```' → logprob: -10.388198852539062
    10. 'ligne' → logprob: -11.388198852539062

Token 93: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6450703144073486
    2. ')' → logprob: -1.0200703144073486
    3. '   ' → logprob: -2.6450703144073486
    4. ',
' → logprob: -3.5200703144073486
    5. '```' → logprob: -5.2700700759887695
    6. '):' → logprob: -6.1450700759887695
    7. '<|end|>' → logprob: -6.2700700759887695
    8. 'n' → logprob: -7.1450700759887695
    9. '),' → logprob: -7.2700700759887695
    10. ' ,' → logprob: -7.3950700759887695

Token 94: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5076718926429749
    2. '       ' → logprob: -1.13267183303833
    3. '    ' → logprob: -3.88267183303833
    4. 'm' → logprob: -4.00767183303833
    5. '```' → logprob: -4.00767183303833
    6. ')' → logprob: -5.25767183303833
    7. ' ' → logprob: -5.50767183303833
    8. ' m' → logprob: -6.38267183303833
    9. ''' → logprob: -6.75767183303833
    10. '  ' → logprob: -6.88267183303833

Token 95: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.1602422147989273
    2. ' m' → logprob: -1.9102421998977661
    3. '       ' → logprob: -12.160242080688477
    4. '   ' → logprob: -12.285242080688477
    5. ' ' → logprob: -12.910242080688477
    6. ' ' → logprob: -13.035242080688477
    7. '    ' → logprob: -13.785242080688477
    8. '```' → logprob: -13.910242080688477
    9. ',' → logprob: -14.910242080688477
    10. 'n' → logprob: -15.035242080688477

Token 96: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0008271370315924287
    2. '(int' → logprob: -7.250827312469482
    3. ':int' → logprob: -10.000826835632324
    4. ':' → logprob: -10.250826835632324
    5. ')' → logprob: -11.125826835632324
    6. ' :' → logprob: -11.375826835632324
    7. '```' → logprob: -12.250826835632324
    8. '<int' → logprob: -13.750826835632324
    9. '   ' → logprob: -13.750826835632324
    10. ' ' → logprob: -14.125826835632324

Token 97: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '(int' → logprob: -18.128177642822266
    4. ':int' → logprob: -19.253177642822266
    5. '=int' → logprob: -19.753177642822266
    6. '[int' → logprob: -20.003177642822266
    7. ')' → logprob: -20.378177642822266
    8. '<int' → logprob: -20.503177642822266
    9. '   ' → logprob: -21.378177642822266
    10. '```' → logprob: -21.503177642822266

Token 98: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022918060421943665
    2. ')' → logprob: -6.752291679382324
    3. ':' → logprob: -7.627291679382324
    4. 'int' → logprob: -8.002291679382324
    5. ':int' → logprob: -8.627291679382324
    6. '(int' → logprob: -9.627291679382324
    7. '[int' → logprob: -11.252291679382324
    8. '```' → logprob: -11.502291679382324
    9. ' ):' → logprob: -11.627291679382324
    10. '):
' → logprob: -11.627291679382324

Token 99: ' Le' (ID: 2018)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0012936893617734313
    2. 'int' → logprob: -6.876293659210205
    3. '(int' → logprob: -9.376294136047363
    4. ' Le' → logprob: -9.501294136047363
    5. ' le' → logprob: -10.376294136047363
    6. ' l' → logprob: -10.501294136047363
    7. '   ' → logprob: -11.126294136047363
    8. '    ' → logprob: -11.251294136047363
    9. ' (' → logprob: -12.501294136047363
    10. ' L' → logprob: -12.876294136047363

Token 100: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.31436285376548767
    2. 'nombre' → logprob: -1.31436288356781
    3. ' nombres' → logprob: -6.9393630027771
    4. ' ' → logprob: -9.689362525939941
    5. '   ' → logprob: -10.314362525939941
    6. 'n' → logprob: -11.189362525939941
    7. ' colon' → logprob: -12.439362525939941
    8. 'Nombre' → logprob: -12.939362525939941
    9. ' n' → logprob: -13.189362525939941
    10. ' number' → logprob: -13.314362525939941

Token 101: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09566187858581543
    2. ' d' → logprob: -2.7206618785858154
    3. 'de' → logprob: -3.8456618785858154
    4. 'd' → logprob: -6.3456621170043945
    5. ' ' → logprob: -7.3456621170043945
    6. '_de' → logprob: -7.7206621170043945
    7. ' des' → logprob: -7.8456621170043945
    8. ')' → logprob: -8.595662117004395
    9. ' ' → logprob: -8.720662117004395
    10. '_d' → logprob: -9.220662117004395

Token 102: ' colon' (ID: 20947)
  Prédit: ' colon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colon' → logprob: -0.634747326374054
    2. 'colon' → logprob: -0.759747326374054
    3. 'l' → logprob: -7.259747505187988
    4. 'col' → logprob: -7.509747505187988
    5. ' lignes' → logprob: -8.509747505187988
    6. 'columns' → logprob: -8.509747505187988
    7. 'cols' → logprob: -9.134747505187988
    8. 'int' → logprob: -9.134747505187988
    9. '```' → logprob: -9.509747505187988
    10. ' int' → logprob: -10.384747505187988

Token 103: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.005033086519688368
    2. 'es' → logprob: -5.630033016204834
    3. 'n' → logprob: -7.505033016204834
    4. 'nées' → logprob: -7.755033016204834
    5. ')' → logprob: -9.005033493041992
    6. 'niers' → logprob: -9.380033493041992
    7. '```' → logprob: -9.380033493041992
    8. 's' → logprob: -9.505033493041992
    9. 'ne' → logprob: -10.380033493041992
    10. '   ' → logprob: -11.630033493041992

Token 104: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10984718054533005
    2. ')' → logprob: -2.609847068786621
    3. '   ' → logprob: -3.609847068786621
    4. '):
' → logprob: -5.734847068786621
    5. '"):' → logprob: -9.984847068786621
    6. ' ):' → logprob: -10.234847068786621
    7. '```' → logprob: -10.484847068786621
    8. ''):' → logprob: -10.609847068786621
    9. ':' → logprob: -11.359847068786621
    10. '"""' → logprob: -11.859847068786621

Token 105: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16469991207122803
    2. 'la' → logprob: -1.914699912071228
    3. 'l' → logprob: -6.414700031280518
    4. ' grille' → logprob: -6.539700031280518
    5. 'gr' → logprob: -7.414700031280518
    6. ')' → logprob: -8.03969955444336
    7. ' ' → logprob: -8.16469955444336
    8. '   ' → logprob: -10.41469955444336
    9. 'n' → logprob: -10.66469955444336
    10. 'm' → logprob: -10.66469955444336

Token 106: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.31395211815834045
    2. 'gr' → logprob: -1.313952088356018
    3. ' gr' → logprob: -7.9389519691467285
    4. ' ' → logprob: -8.938952445983887
    5. 'ligne' → logprob: -9.688952445983887
    6. 'grid' → logprob: -10.063952445983887
    7. ' ligne' → logprob: -10.438952445983887
    8. ' grid' → logprob: -10.688952445983887
    9. '   ' → logprob: -10.813952445983887
    10. '_gr' → logprob: -11.813952445983887

Token 107: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14468663930892944
    2. '):
' → logprob: -2.644686698913574
    3. ')' → logprob: -3.144686698913574
    4. '   ' → logprob: -3.894686698913574
    5. '```' → logprob: -9.394686698913574
    6. ':' → logprob: -10.394686698913574
    7. ',' → logprob: -10.519686698913574
    8. ' ):' → logprob: -11.019686698913574
    9. '):
' → logprob: -11.269686698913574
    10. ')
' → logprob: -11.269686698913574

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22288697957992554
    2. '"""' → logprob: -1.7228870391845703
    3. '"""
' → logprob: -3.9728870391845703
    4. ')' → logprob: -6.84788703918457
    5. ' """' → logprob: -7.47288703918457
    6. ' """
' → logprob: -7.84788703918457
    7. 'Returns' → logprob: -8.22288703918457
    8. '""' → logprob: -10.22288703918457
    9. '```' → logprob: -10.59788703918457
    10. '    ' → logprob: -11.09788703918457

Token 109: ' Returns' (ID: 9609)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.27036821842193604
    2. 'Returns' (adapté à ' Returns') → logprob: -1.770368218421936
    3. '   ' → logprob: -3.3953680992126465
    4. '"""' → logprob: -3.5203680992126465
    5. 'return' → logprob: -6.6453680992126465
    6. 'returns' → logprob: -7.1453680992126465
    7. ' """
' → logprob: -7.8953680992126465
    8. ' Returns' → logprob: -8.270368576049805
    9. '```' → logprob: -8.395368576049805
    10. '""' → logprob: -8.770368576049805

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32064276933670044
    2. ' :' → logprob: -1.6956427097320557
    3. ' int' → logprob: -3.4456427097320557
    4. '   ' → logprob: -3.5706427097320557
    5. '):' → logprob: -5.195642948150635
    6. ')' → logprob: -5.570642948150635
    7. '```' → logprob: -5.570642948150635
    8. 'int' → logprob: -5.695642948150635
    9. ':int' → logprob: -6.070642948150635
    10. '    ' → logprob: -6.195642948150635

Token 111: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12384403496980667
    2. ' int' → logprob: -2.4988441467285156
    3. 'n' → logprob: -3.9988441467285156
    4. '   ' → logprob: -4.498844146728516
    5. '    ' → logprob: -5.748844146728516
    6. 'int' → logprob: -7.373844146728516
    7. ' ' → logprob: -8.123844146728516
    8. '```' → logprob: -8.248844146728516
    9. ' 
' → logprob: -8.748844146728516
    10. ' (' → logprob: -9.373844146728516

Token 112: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0004338877333793789
    2. ' int' → logprob: -7.750433921813965
    3. '   ' → logprob: -12.750433921813965
    4. '```' → logprob: -15.375433921813965
    5. '       ' → logprob: -17.12543296813965
    6. '(int' → logprob: -17.25043296813965
    7. '
' → logprob: -17.62543296813965
    8. '[int' → logprob: -18.87543296813965
    9. '`' → logprob: -19.75043296813965
    10. '	int' → logprob: -20.12543296813965

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006496397312730551
    2. ' :' → logprob: -5.506496429443359
    3. ':
' → logprob: -6.631496429443359
    4. '   ' → logprob: -7.881496429443359
    5. '```' → logprob: -8.13149642944336
    6. ' ' → logprob: -9.75649642944336
    7. ' 
' → logprob: -10.00649642944336
    8. ')' → logprob: -10.13149642944336
    9. '):' → logprob: -10.50649642944336
    10. ' :
' → logprob: -10.50649642944336

Token 114: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.04477507621049881
    2. ' le' → logprob: -3.9197750091552734
    3. ' n' → logprob: -4.169775009155273
    4. 'Le' → logprob: -5.669775009155273
    5. '   ' → logprob: -5.794775009155273
    6. ' La' → logprob: -7.169775009155273
    7. ' (' → logprob: -7.544775009155273
    8. ' nombre' → logprob: -8.044775009155273
    9. '(n' → logprob: -8.919775009155273
    10. ' return' → logprob: -9.169775009155273

Token 115: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0007338665891438723
    2. 'nombre' → logprob: -7.500733852386475
    3. ' ' → logprob: -9.250734329223633
    4. '   ' → logprob: -9.500734329223633
    5. ' nombres' → logprob: -12.125734329223633
    6. '  ' → logprob: -13.625734329223633
    7. '    ' → logprob: -13.750734329223633
    8. ' nb' → logprob: -15.000734329223633
    9. ' nombr' → logprob: -15.000734329223633
    10. ' ' → logprob: -15.125734329223633

Token 116: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.008651445619761944
    2. '_' → logprob: -5.508651256561279
    3. ' ' → logprob: -6.508651256561279
    4. ' total' → logprob: -6.633651256561279
    5. ' d' → logprob: -7.508651256561279
    6. '_de' → logprob: -7.758651256561279
    7. ' ' → logprob: -8.383651733398438
    8. 'de' → logprob: -8.633651733398438
    9. '_total' → logprob: -9.508651733398438
    10. '    ' → logprob: -10.258651733398438

Token 117: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.029753733426332474
    2. ' d' → logprob: -4.404753684997559
    3. '_' → logprob: -5.029753684997559
    4. ' des' → logprob: -5.404753684997559
    5. ' ' → logprob: -5.654753684997559
    6. ')' → logprob: -7.279753684997559
    7. ' )' → logprob: -7.904753684997559
    8. '<|end|>' → logprob: -8.029753684997559
    9. '_de' → logprob: -8.779753684997559
    10. 'de' → logprob: -8.904753684997559

Token 118: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.05625520646572113
    2. 'p' → logprob: -2.9312551021575928
    3. ' pairs' → logprob: -7.306255340576172
    4. ' ' → logprob: -7.806255340576172
    5. ' connections' → logprob: -9.931255340576172
    6. ' ' → logprob: -9.931255340576172
    7. ' connex' → logprob: -9.931255340576172
    8. ' espaces' → logprob: -10.181255340576172
    9. 'pairs' → logprob: -10.556255340576172
    10. '	p' → logprob: -11.431255340576172

Token 119: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.10731099545955658
    2. 'a' → logprob: -3.3573110103607178
    3. 'airs' → logprob: -3.7323110103607178
    4. 'air' → logprob: -3.8573110103607178
    5. 'ai' → logprob: -3.8573110103607178
    6. 'aire' → logprob: -8.357311248779297
    7. ' a' → logprob: -8.982311248779297
    8. 'ares' → logprob: -9.732311248779297
    9. 'ar' → logprob: -10.107311248779297
    10. '_' → logprob: -10.482311248779297

Token 120: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08662883192300797
    2. ' ' → logprob: -3.8366289138793945
    3. ':' → logprob: -4.2116289138793945
    4. ' 
' → logprob: -4.4616289138793945
    5. '_possible' → logprob: -5.0866289138793945
    6. ' possible' → logprob: -5.2116289138793945
    7. '  
' → logprob: -5.2116289138793945
    8. '    
' → logprob: -5.7116289138793945
    9. 'possible' → logprob: -5.7116289138793945
    10. '  ' → logprob: -6.4616289138793945

Token 121: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9618446230888367
    2. ' n' → logprob: -1.3368446826934814
    3. ' les' → logprob: -1.9618446826934814
    4. '"' → logprob: -2.5868446826934814
    5. ''' → logprob: -3.3368446826934814
    6. ' l' → logprob: -3.4618446826934814
    7. '   ' → logprob: -3.7118446826934814
    8. ' "' → logprob: -4.711844444274902
    9. ' ' → logprob: -4.961844444274902
    10. ' le' → logprob: -4.961844444274902

Token 122: ' règles' (ID: 67042)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.45850643515586853
    2. ' règles' → logprob: -1.083506464958191
    3. ' critères' → logprob: -4.7085065841674805
    4. 'conn' → logprob: -5.4585065841674805
    5. ' conditions' → logprob: -5.7085065841674805
    6. ' ' → logprob: -5.7085065841674805
    7. ' r' → logprob: -5.9585065841674805
    8. ' crit' → logprob: -6.8335065841674805
    9. 'conditions' → logprob: -6.8335065841674805
    10. '   ' → logprob: -7.0835065841674805

Token 123: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05245261266827583
    2. ':' → logprob: -3.427452564239502
    3. ':
' → logprob: -4.677452564239502
    4. '\n' → logprob: -6.302452564239502
    5. ' calcul' → logprob: -6.302452564239502
    6. '       ' → logprob: -6.677452564239502
    7. '    
' → logprob: -6.927452564239502
    8. '):' → logprob: -7.427452564239502
    9. ' :' → logprob: -7.552452564239502
    10. '):
' → logprob: -8.42745304107666

Token 124: '-dessus' (ID: 74812)
  Prédit: '-dessus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dessus' → logprob: -0.7969334721565247
    2. 't' → logprob: -1.5469334125518799
    3. '-' → logprob: -2.29693341255188
    4. 'd' → logprob: -2.67193341255188
    5. 'nées' → logprob: -3.42193341255188
    6. 'tes' → logprob: -3.67193341255188
    7. '-dessous' → logprob: -4.046933650970459
    8. '   ' → logprob: -4.796933650970459
    9. 'te' → logprob: -4.796933650970459
    10. 'tu' → logprob: -5.046933650970459

Token 125: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17372506856918335
    2. '   ' → logprob: -2.423725128173828
    3. ':
' → logprob: -2.673725128173828
    4. '):' → logprob: -7.423725128173828
    5. '
' → logprob: -7.798725128173828
    6. '):
' → logprob: -8.173725128173828
    7. ')' → logprob: -8.673725128173828
    8. '\n' → logprob: -8.798725128173828
    9. '    
' → logprob: -9.548725128173828
    10. '```' → logprob: -9.798725128173828

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03203728795051575
    2. '"""' → logprob: -3.9070372581481934
    3. '
' → logprob: -4.782037258148193
    4. '    
' → logprob: -6.657037258148193
    5. '"""
' → logprob: -7.282037258148193
    6. '\n' → logprob: -8.157037734985352
    7. '```' → logprob: -8.282037734985352
    8. '""' → logprob: -8.907037734985352
    9. '    ' → logprob: -9.157037734985352
    10. ':' → logprob: -9.782037734985352

Token 127: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6584793925285339
    2. '"""' → logprob: -0.7834793925285339
    3. ')' → logprob: -4.9084792137146
    4. '"""
' (adapté à ' """
') → logprob: -5.4084792137146
    5. '"' → logprob: -5.5334792137146
    6. '
' → logprob: -5.7834792137146
    7. '""' → logprob: -5.9084792137146
    8. '```' → logprob: -6.4084792137146
    9. ':' → logprob: -6.9084792137146
    10. ' """' → logprob: -8.033479690551758

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071640582755208015
    2. '
' → logprob: -5.632164001464844
    3. '    
' → logprob: -6.132164001464844
    4. ' 
' → logprob: -7.007164001464844
    5. '\n' → logprob: -8.882164001464844
    6. '    ' → logprob: -9.007164001464844
    7. ' if' → logprob: -9.632164001464844
    8. 'if' → logprob: -10.007164001464844
    9. '     
' → logprob: -10.507164001464844
    10. '\' → logprob: -11.007164001464844

Token 129: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015771172475069761
    2. ' if' → logprob: -6.501576900482178
    3. '   ' → logprob: -9.501577377319336
    4. '```' → logprob: -17.001577377319336
    5. 'return' → logprob: -17.501577377319336
    6. 'i' → logprob: -18.251577377319336
    7. 'If' → logprob: -18.876577377319336
    8. '	if' → logprob: -19.001577377319336
    9. 'ifs' → logprob: -20.501577377319336
    10. ' ' → logprob: -20.501577377319336

Token 130: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4743858575820923
    2. 'if' → logprob: -0.9743858575820923
    3. '   ' → logprob: -8.099386215209961
    4. '```' → logprob: -13.599386215209961
    5. 'calcul' → logprob: -13.974386215209961
    6. 'n' → logprob: -14.099386215209961
    7. ' ' → logprob: -15.224386215209961
    8. 's' → logprob: -15.349386215209961
    9. ' ' → logprob: -15.349386215209961
    10. 'return' → logprob: -15.599386215209961

Token 131: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01815052703022957
    2. 'n' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.393150329589844
    4. '	n' → logprob: -15.768150329589844
    5. ' (' → logprob: -16.143150329589844
    6. '(n' → logprob: -16.268150329589844
    7. ' ' → logprob: -16.518150329589844
    8. '1' → logprob: -19.018150329589844
    9. '   ' → logprob: -19.080650329589844
    10. ' not' → logprob: -19.393150329589844

Token 132: ' grille' (ID: 99153)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858884960412979
    2. ' n' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.173588752746582
    4. '1' → logprob: -15.798588752746582
    5. '	n' → logprob: -15.923588752746582
    6. 'm' → logprob: -16.1735897064209
    7. '(n' → logprob: -16.1735897064209
    8. ' ' → logprob: -16.7985897064209
    9. 'min' → logprob: -16.9235897064209
    10. 's' → logprob: -17.0485897064209

Token 133: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1497808694839478
    2. ' a' → logprob: -1.2747808694839478
    3. 'a' → logprob: -1.3997808694839478
    4. ' n' → logprob: -2.524780750274658
    5. 'est' → logprob: -3.149780750274658
    6. ' ==' → logprob: -4.399780750274658
    7. ' est' → logprob: -4.774780750274658
    8. '==' → logprob: -5.774780750274658
    9. '1' → logprob: -6.149780750274658
    10. 'ha' → logprob: -6.524780750274658

Token 134: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0010052919387817
    2. '1' → logprob: -1.2510052919387817
    3. ' n' → logprob: -1.3760052919387817
    4. 'n' → logprob: -2.626005172729492
    5. ' une' → logprob: -4.251005172729492
    6. ' un' → logprob: -5.626005172729492
    7. 'une' → logprob: -5.876005172729492
    8. 'un' → logprob: -7.501005172729492
    9. ' soit' → logprob: -10.501005172729492
    10. '   ' → logprob: -11.001005172729492

Token 135: ' seule' (ID: 41983)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.0546979904174805
    2. ' ou' → logprob: -1.0546979904174805
    3. ' ligne' → logprob: -2.4296979904174805
    4. 'ligne' → logprob: -2.6796979904174805
    5. '1' → logprob: -3.0546979904174805
    6. ' dimension' → logprob: -3.5546979904174805
    7. 'dimension' → logprob: -4.0546979904174805
    8. ' de' → logprob: -4.4296979904174805
    9. ' ' → logprob: -4.5546979904174805
    10. ' largeur' → logprob: -5.3046979904174805

Token 136: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.1293518990278244
    2. 'ligne' → logprob: -2.129351854324341
    3. ' dimension' → logprob: -6.50435209274292
    4. ' ' → logprob: -8.129351615905762
    5. '   ' → logprob: -8.379351615905762
    6. 'dimension' → logprob: -8.504351615905762
    7. 'l' → logprob: -10.254351615905762
    8. ' colonne' → logprob: -10.879351615905762
    9. ' rang' → logprob: -11.004351615905762
    10. ' lignes' → logprob: -11.379351615905762

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0330067053437233
    2. ' ou' → logprob: -3.9080066680908203
    3. ' or' → logprob: -4.53300666809082
    4. ' ' → logprob: -7.65800666809082
    5. ',' → logprob: -8.40800666809082
    6. ':' → logprob: -8.40800666809082
    7. '    ' → logprob: -8.53300666809082
    8. '  ' → logprob: -8.65800666809082
    9. 'ou' → logprob: -9.65800666809082
    10. ' if' → logprob: -9.78300666809082

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008645339403301477
    2. ' ou' → logprob: -7.750864505767822
    3. ' or' → logprob: -8.25086498260498
    4. ',' → logprob: -9.75086498260498
    5. ':' → logprob: -10.37586498260498
    6. ' if' → logprob: -10.50086498260498
    7. '    ' → logprob: -11.37586498260498
    8. 'if' → logprob: -11.37586498260498
    9. '    
' → logprob: -11.62586498260498
    10. '  ' → logprob: -11.87586498260498

Token 139: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22705328464508057
    2. ' if' → logprob: -2.227053165435791
    3. 'if' (adapté à ' if') → logprob: -2.352053165435791
    4. '    
' → logprob: -10.10205364227295
    5. '    ' → logprob: -10.72705364227295
    6. '  ' → logprob: -11.22705364227295
    7. ' ' → logprob: -11.72705364227295
    8. '   ' → logprob: -12.72705364227295
    9. '	if' → logprob: -12.97705364227295
    10. ' 
' → logprob: -13.22705364227295

Token 140: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0007100477814674377
    2. 'n' → logprob: -7.2507100105285645
    3. ' ' → logprob: -16.625709533691406
    4. ' ' → logprob: -17.625709533691406
    5. '	n' → logprob: -18.250709533691406
    6. '1' → logprob: -19.500709533691406
    7. ' (' → logprob: -20.125709533691406
    8. '(n' → logprob: -20.375709533691406
    9. '_n' → logprob: -21.125709533691406
    10. ' 
' → logprob: -22.250709533691406

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.013081998564302921
    2. '==' → logprob: -4.388082027435303
    3. ' <=' → logprob: -7.513082027435303
    4. ' ' → logprob: -11.263081550598145
    5. '<=' → logprob: -11.888081550598145
    6. ' ' → logprob: -13.263081550598145
    7. '1' → logprob: -13.513081550598145
    8. ' *' → logprob: -13.888081550598145
    9. '=' → logprob: -14.263081550598145
    10. ' or' → logprob: -14.388081550598145

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488273501396179
    2. ' ' → logprob: -2.929882764816284
    3. ' ' → logprob: -15.429883003234863
    4. '   ' → logprob: -16.179882049560547
    5. '0' → logprob: -16.429882049560547
    6. '  ' → logprob: -17.054882049560547
    7. '```' → logprob: -17.429882049560547
    8. '2' → logprob: -20.242382049560547
    9. '	' → logprob: -20.304882049560547
    10. '<|end|>' → logprob: -20.367382049560547

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.875059127807617
    4. '0' → logprob: -15.875059127807617
    5. '<|end|>' → logprob: -17.000059127807617
    6. '```' → logprob: -17.125059127807617
    7. '  ' → logprob: -18.000059127807617
    8. '
' → logprob: -19.437559127807617
    9. '    ' → logprob: -20.375059127807617
    10. '[' → logprob: -20.500059127807617

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012629371136426926
    2. ' or' → logprob: -4.887629508972168
    3. ' :' → logprob: -5.762629508972168
    4. ':
' → logprob: -6.512629508972168
    5. ' and' → logprob: -8.262629508972168
    6. '   ' → logprob: -9.637629508972168
    7. ' :
' → logprob: -10.887629508972168
    8. 'or' → logprob: -11.387629508972168
    9. 'and' → logprob: -11.387629508972168
    10. ':return' → logprob: -11.762629508972168

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19737213850021362
    2. ':' → logprob: -1.9473721981048584
    3. '   ' → logprob: -3.4473721981048584
    4. ':
' → logprob: -6.197371959686279
    5. ' return' → logprob: -6.947371959686279
    6. '    ' → logprob: -7.822371959686279
    7. ':return' → logprob: -7.947371959686279
    8. 'return' → logprob: -8.072372436523438
    9. ' :' → logprob: -8.697372436523438
    10. ' 
' → logprob: -9.822372436523438

Token 146: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1172274574637413
    2. ' return' → logprob: -2.242227554321289
    3. '       ' → logprob: -5.742227554321289
    4. '   ' → logprob: -6.742227554321289
    5. '    ' → logprob: -12.617227554321289
    6. '	return' → logprob: -13.617227554321289
    7. 'ret' → logprob: -14.742227554321289
    8. '        
' → logprob: -14.867227554321289
    9. ' ' → logprob: -14.992227554321289
    10. '     ' → logprob: -15.242227554321289

Token 147: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.575941801071167
    2. 'm' → logprob: -0.825941801071167
    3. ' n' → logprob: -13.950942039489746
    4. 'n' → logprob: -14.075942039489746
    5. ' ' → logprob: -15.325942039489746
    6. '1' → logprob: -16.32594108581543
    7. '	m' → logprob: -16.57594108581543
    8. ' ' → logprob: -16.70094108581543
    9. '   ' → logprob: -16.82594108581543
    10. ')m' → logprob: -16.82594108581543

Token 148: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3242395520210266
    2. '>' → logprob: -1.3242394924163818
    3. ' <=' → logprob: -5.324239730834961
    4. '==' → logprob: -6.324239730834961
    5. ' ==' → logprob: -6.949239730834961
    6. '<=' → logprob: -6.949239730834961
    7. ' <' → logprob: -7.074239730834961
    8. ' ' → logprob: -7.074239730834961
    9. '<' → logprob: -7.824239730834961
    10. ' >=' → logprob: -9.199239730834961

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038041153457015753
    2. ' ' → logprob: -5.7538042068481445
    3. '0' → logprob: -7.3788042068481445
    4. '   ' → logprob: -13.753804206848145
    5. '  ' → logprob: -14.878804206848145
    6. '    ' → logprob: -15.816304206848145
    7. '2' → logprob: -16.191303253173828
    8. '
' → logprob: -18.003803253173828
    9. '     ' → logprob: -18.066303253173828
    10. '１' → logprob: -18.316303253173828

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008347623515874147
    2. ' ' → logprob: -7.250834941864014
    3. '0' → logprob: -9.000834465026855
    4. '   ' → logprob: -13.875834465026855
    5. '  ' → logprob: -15.250834465026855
    6. '    ' → logprob: -16.875835418701172
    7. '2' → logprob: -17.125835418701172
    8. '
' → logprob: -17.563335418701172
    9. '     ' → logprob: -18.188335418701172
    10. '```' → logprob: -18.313335418701172

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2560434937477112
    2. ':
' → logprob: -1.6310434341430664
    3. ':return' → logprob: -4.256043434143066
    4. ' :' → logprob: -4.881043434143066
    5. ' :
' → logprob: -5.381043434143066
    6. '           ' → logprob: -6.381043434143066
    7. '       ' → logprob: -6.506043434143066
    8. '   ' → logprob: -8.756043434143066
    9. ' return' → logprob: -9.256043434143066
    10. 'return' → logprob: -9.631043434143066

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008945208042860031
    2. '0' → logprob: -4.883944988250732
    3. 'return' → logprob: -6.758944988250732
    4. ' return' → logprob: -9.25894546508789
    5. '
' → logprob: -10.38394546508789
    6. '1' → logprob: -11.13394546508789
    7. '       ' → logprob: -11.38394546508789
    8. ':' → logprob: -11.75894546508789
    9. ':
' → logprob: -12.00894546508789
    10. ':return' → logprob: -13.13394546508789

Token 153: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08722114562988281
    2. '0' → logprob: -2.587221145629883
    3. ' return' → logprob: -4.837221145629883
    4. '           ' → logprob: -8.087221145629883
    5. '       ' → logprob: -10.212221145629883
    6. '1' → logprob: -11.087221145629883
    7. ' ' → logprob: -12.587221145629883
    8. '   ' → logprob: -13.587221145629883
    9. '
' → logprob: -13.837221145629883
    10. 'ret' → logprob: -14.337221145629883

Token 154: ' Il' (ID: 5329)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09979905933141708
    2. ' return' → logprob: -2.599799156188965
    3. '0' → logprob: -4.099799156188965
    4. '           ' → logprob: -5.849799156188965
    5. '       ' → logprob: -6.849799156188965
    6. '   ' → logprob: -9.474799156188965
    7. ' ' → logprob: -9.849799156188965
    8. 'ret' → logprob: -10.974799156188965
    9. '1' → logprob: -11.224799156188965
    10. '               ' → logprob: -12.349799156188965

Token 155: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03346426039934158
    2. 'n' → logprob: -3.783464193344116
    3. ' return' → logprob: -4.783464431762695
    4. 'return' → logprob: -6.658464431762695
    5. ' y' → logprob: -9.033464431762695
    6. 's' → logprob: -9.283464431762695
    7. '   ' → logprob: -9.408464431762695
    8. ' s' → logprob: -9.783464431762695
    9. ' retourne' → logprob: -9.908464431762695
    10. ' ' → logprob: -10.908464431762695

Token 156: ''y' (ID: 27913)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.8193263411521912
    2. 'y' → logprob: -0.9443263411521912
    3. ' n' → logprob: -2.319326400756836
    4. 'n' → logprob: -2.819326400756836
    5. ''y' → logprob: -4.569326400756836
    6. '   ' → logprob: -6.569326400756836
    7. 'ya' → logprob: -8.069326400756836
    8. 'a' → logprob: -9.944326400756836
    9. '       ' → logprob: -10.319326400756836
    10. '    ' → logprob: -10.444326400756836

Token 157: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01113530807197094
    2. ' a' → logprob: -4.511135101318359
    3. ''a' → logprob: -9.51113510131836
    4. '   ' → logprob: -12.26113510131836
    5. ' ' → logprob: -12.76113510131836
    6. '	a' → logprob: -12.88613510131836
    7. 'avait' → logprob: -14.13613510131836
    8. '  ' → logprob: -14.51113510131836
    9. 'y' → logprob: -14.76113510131836
    10. '_a' → logprob: -15.38613510131836

Token 158: ' qu' (ID: 474)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6442123055458069
    2. ' aucune' → logprob: -1.269212245941162
    3. 'auc' → logprob: -2.019212245941162
    4. ' pas' → logprob: -3.269212245941162
    5. ' aucun' → logprob: -4.019212245941162
    6. '0' → logprob: -5.394212245941162
    7. '```' → logprob: -8.76921272277832
    8. ' ' → logprob: -9.39421272277832
    9. ' ' → logprob: -9.51921272277832
    10. 'ucune' → logprob: -10.26921272277832

Token 159: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2503689527511597
    2. ''un' → logprob: -1.6253689527511597
    3. 'auc' → logprob: -1.7503689527511597
    4. 'une' → logprob: -2.000369071960449
    5. ''une' → logprob: -2.125369071960449
    6. 'un' → logprob: -3.250369071960449
    7. 'pas' → logprob: -4.125369071960449
    8. ''au' → logprob: -4.875369071960449
    9. 'e' → logprob: -5.125369071960449
    10. 'au' → logprob: -5.250369071960449

Token 160: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.8745017647743225
    2. ' case' → logprob: -1.3745017051696777
    3. ' cellule' → logprob: -1.3745017051696777
    4. 'case' → logprob: -2.8745017051696777
    5. ' seul' → logprob: -4.874501705169678
    6. 'se' → logprob: -5.499501705169678
    7. ' paire' → logprob: -6.249501705169678
    8. ' ' → logprob: -6.499501705169678
    9. ' unité' → logprob: -6.624501705169678
    10. 'cell' → logprob: -6.624501705169678

Token 161: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.9019227027893066
    2. ' case' → logprob: -1.0269227027893066
    3. ' cellule' → logprob: -1.5269227027893066
    4. 'cell' → logprob: -4.026922702789307
    5. ' cell' → logprob: -7.026922702789307
    6. 'cel' → logprob: -9.401922225952148
    7. ' ' → logprob: -10.651922225952148
    8. 'c' → logprob: -11.651922225952148
    9. ' paire' → logprob: -12.026922225952148
    10. 'élé' → logprob: -12.151922225952148

Token 162: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11009345948696136
    2. '           ' → logprob: -2.360093355178833
    3. 'return' → logprob: -4.985093593597412
    4. '0' → logprob: -6.610093593597412
    5. '
' → logprob: -6.860093593597412
    6. ' return' → logprob: -8.110093116760254
    7. '               ' → logprob: -8.610093116760254
    8. ',' → logprob: -10.235093116760254
    9. '   ' → logprob: -10.985093116760254
    10. '        
' → logprob: -11.485093116760254

Token 163: ' donc' (ID: 14206)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5547297596931458
    2. 'return' → logprob: -0.9297297596931458
    3. '           ' → logprob: -3.929729700088501
    4. '       ' → logprob: -4.80472993850708
    5. '0' → logprob: -6.17972993850708
    6. ' ' → logprob: -6.92972993850708
    7. ' ' → logprob: -9.804729461669922
    8. '               ' → logprob: -10.179729461669922
    9. ' retourner' → logprob: -10.554729461669922
    10. '	return' → logprob: -10.804729461669922

Token 164: ' pas' (ID: 2173)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -11.000025749206543
    3. 'return' → logprob: -11.750025749206543
    4. '   ' → logprob: -14.625025749206543
    5. '           ' → logprob: -15.875025749206543
    6. '       ' → logprob: -16.250024795532227
    7. ' return' → logprob: -16.500024795532227
    8. 'auc' → logprob: -18.500024795532227
    9. 'ret' → logprob: -18.875024795532227
    10. '               ' → logprob: -19.750024795532227

Token 165: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1429896205663681
    2. 'de' → logprob: -2.0179896354675293
    3. '_de' → logprob: -8.767989158630371
    4. 'd' → logprob: -9.142989158630371
    5. ' ' → logprob: -10.642989158630371
    6. ' d' → logprob: -12.017989158630371
    7. 's' → logprob: -12.267989158630371
    8. 'def' → logprob: -12.267989158630371
    9. '   ' → logprob: -12.892989158630371
    10. ' ' → logprob: -12.892989158630371

Token 166: ' paire' (ID: 148856)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6625611186027527
    2. 'p' → logprob: -0.7875611186027527
    3. ' paire' → logprob: -3.9125611782073975
    4. 'pairs' → logprob: -5.787560939788818
    5. 'pair' → logprob: -6.162560939788818
    6. 'pa' → logprob: -6.162560939788818
    7. ' pairs' → logprob: -6.662560939788818
    8. ' pair' → logprob: -8.162561416625977
    9. 'connexion' → logprob: -8.912561416625977
    10. ' connexion' → logprob: -9.287561416625977

Token 167: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06459707766771317
    2. '0' → logprob: -2.9395971298217773
    3. 'return' → logprob: -5.814597129821777
    4. '
' → logprob: -5.939597129821777
    5. '           ' → logprob: -6.439597129821777
    6. ' return' → logprob: -7.189597129821777
    7. ' 
' → logprob: -7.314597129821777
    8. '        
' → logprob: -8.314597129821777
    9. ',' → logprob: -8.439597129821777
    10. '   ' → logprob: -8.689597129821777

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002262663561850786
    2. '
' → logprob: -6.252262592315674
    3. 'return' → logprob: -8.877263069152832
    4. '           ' → logprob: -9.377263069152832
    5. '0' → logprob: -9.752263069152832
    6. '        
' → logprob: -11.127263069152832
    7. ' return' → logprob: -11.752263069152832
    8. ',' → logprob: -12.127263069152832
    9. ' 
' → logprob: -12.252263069152832
    10. '   ' → logprob: -12.627263069152832

Token 169: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04016929492354393
    2. '
' → logprob: -3.2901692390441895
    3. '0' → logprob: -6.6651692390441895
    4. '           ' → logprob: -7.4151692390441895
    5. 'return' → logprob: -8.790169715881348
    6. '1' → logprob: -10.790169715881348
    7. '   ' → logprob: -11.040169715881348
    8. ' 
' → logprob: -11.290169715881348
    9. ' return' → logprob: -11.665169715881348
    10. '\n' → logprob: -11.665169715881348

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06588666141033173
    2. '0' → logprob: -2.8158867359161377
    3. ' return' → logprob: -5.565886497497559
    4. '           ' → logprob: -9.565886497497559
    5. '       ' → logprob: -11.565886497497559
    6. ' ' → logprob: -12.815886497497559
    7. '   ' → logprob: -12.940886497497559
    8. 'ret' → logprob: -14.940886497497559
    9. '               ' → logprob: -16.315887451171875
    10. '1' → logprob: -16.315887451171875

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.12907886505127
    4. '   ' → logprob: -18.004077911376953
    5. '۰' → logprob: -20.629077911376953
    6. '1' → logprob: -20.816577911376953
    7. '  ' → logprob: -20.941577911376953
    8. '	' → logprob: -21.066577911376953
    9. ' 
' → logprob: -21.191577911376953
    10. '000' → logprob: -21.254077911376953

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -20.375
    4. '000' → logprob: -21.75
    5. '０' → logprob: -21.875
    6. '00' → logprob: -22.125
    7. '1' → logprob: -22.125
    8. ' ' → logprob: -22.125
    9. '   ' → logprob: -22.6875
    10. '٠' → logprob: -22.9375

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42914772033691406
    2. '       ' → logprob: -1.054147720336914
    3. '        
' → logprob: -8.304147720336914
    4. ' 
' → logprob: -9.429147720336914
    5. '    
' → logprob: -9.679147720336914
    6. '
' → logprob: -11.054147720336914
    7. '   ' → logprob: -11.304147720336914
    8. '  
' → logprob: -11.679147720336914
    9. 'elif' → logprob: -11.804147720336914
    10. '       
' → logprob: -13.054147720336914

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021238872781395912
    2. '
' → logprob: -3.8962388038635254
    3. '        
' → logprob: -7.896238803863525
    4. ' 
' → logprob: -8.771239280700684
    5. '    
' → logprob: -9.146239280700684
    6. '   ' → logprob: -10.271239280700684
    7. '  
' → logprob: -11.896239280700684
    8. '       
' → logprob: -12.396239280700684
    9. '   
' → logprob: -12.896239280700684
    10. '            
' → logprob: -13.146239280700684

Token 175: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009755735285580158
    2. 'return' → logprob: -5.884755611419678
    3. 'else' (adapté à ' else') → logprob: -6.134755611419678
    4. ' else' → logprob: -6.384755611419678
    5. '
' → logprob: -6.759755611419678
    6. '   ' → logprob: -7.134755611419678
    7. ' return' → logprob: -7.634755611419678
    8. '        
' → logprob: -7.759755611419678
    9. '    
' → logprob: -9.259756088256836
    10. ' 
' → logprob: -9.884756088256836

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1508597731590271
    2. '           ' → logprob: -2.150859832763672
    3. ':
' → logprob: -4.150859832763672
    4. '       ' → logprob: -5.650859832763672
    5. ' :' → logprob: -5.650859832763672
    6. ' :
' → logprob: -7.650859832763672
    7. ':return' → logprob: -9.400859832763672
    8. 'return' → logprob: -9.400859832763672
    9. ' return' → logprob: -9.525859832763672
    10. '   ' → logprob: -10.150859832763672

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5216825604438782
    2. ' return' → logprob: -1.3966825008392334
    3. 'return' → logprob: -2.0216825008392334
    4. '       ' → logprob: -3.7716825008392334
    5. ' m' → logprob: -6.5216827392578125
    6. ' (' → logprob: -7.5216827392578125
    7. 'm' → logprob: -7.5216827392578125
    8. '        ' → logprob: -7.5216827392578125
    9. '            ' → logprob: -9.021682739257812
    10. '(m' → logprob: -9.646682739257812

Token 178: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16209816932678223
    2. 'return' → logprob: -1.9120981693267822
    3. '           ' → logprob: -6.412097930908203
    4. '       ' → logprob: -8.412097930908203
    5. '               ' → logprob: -12.912097930908203
    6. '   ' → logprob: -13.287097930908203
    7. '            ' → logprob: -13.537097930908203
    8. ' ' → logprob: -14.162097930908203
    9. '        ' → logprob: -14.287097930908203
    10. '    ' → logprob: -15.287097930908203

Token 179: ' Sur' (ID: 9568)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20327189564704895
    2. 'return' → logprob: -1.9532718658447266
    3. '       ' → logprob: -3.2032718658447266
    4. '           ' → logprob: -6.703271865844727
    5. '   ' → logprob: -8.578271865844727
    6. ' ' → logprob: -10.578271865844727
    7. ' ' → logprob: -10.703271865844727
    8. '        ' → logprob: -10.953271865844727
    9. '    ' → logprob: -12.453271865844727
    10. '	return' → logprob: -12.578271865844727

Token 180: ' une' (ID: 2463)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.008127516135573387
    2. ' (' → logprob: -5.383127689361572
    3. 'm' → logprob: -5.758127689361572
    4. '(m' → logprob: -8.383127212524414
    5. '(' → logprob: -10.383127212524414
    6. ' ' → logprob: -10.883127212524414
    7. '1' → logprob: -11.008127212524414
    8. ' ' → logprob: -11.133127212524414
    9. ' la' → logprob: -11.633127212524414
    10. ' une' → logprob: -12.133127212524414

Token 181: ' seule' (ID: 41983)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.4504896402359009
    2. ' ligne' → logprob: -1.0754896402359009
    3. ' seule' → logprob: -4.450489521026611
    4. ' ' → logprob: -5.575489521026611
    5. ' ' → logprob: -6.700489521026611
    6. 'l' → logprob: -7.200489521026611
    7. '   ' → logprob: -7.825489521026611
    8. 'm' → logprob: -7.825489521026611
    9. 'gr' → logprob: -7.825489521026611
    10. 'range' → logprob: -7.825489521026611

Token 182: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.11588115245103836
    2. 'ligne' → logprob: -2.3658812046051025
    3. ' ' → logprob: -4.365880966186523
    4. ' ' → logprob: -6.615880966186523
    5. '   ' → logprob: -6.865880966186523
    6. ' line' → logprob: -9.115880966186523
    7. ' colonne' → logprob: -9.490880966186523
    8. 'l' → logprob: -9.740880966186523
    9. ' rang' → logprob: -9.990880966186523
    10. ' lign' → logprob: -10.865880966186523

Token 183: ' de' (ID: 334)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6172153949737549
    2. ',' → logprob: -1.7422153949737549
    3. 'return' → logprob: -1.8672153949737549
    4. '           ' → logprob: -2.117215394973755
    5. '       ' → logprob: -4.992215156555176
    6. ' ,' → logprob: -5.867215156555176
    7. ' (' → logprob: -7.742215156555176
    8. '   ' → logprob: -8.617215156555176
    9. ' m' → logprob: -9.867215156555176
    10. '               ' → logprob: -10.242215156555176

Token 184: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.16251704096794128
    2. 'm' → logprob: -1.9125170707702637
    3. ' (' → logprob: -8.037516593933105
    4. ' ' → logprob: -8.037516593933105
    5. ' la' → logprob: -8.537516593933105
    6. ' longueur' → logprob: -8.537516593933105
    7. '(m' → logprob: -8.662516593933105
    8. 'col' → logprob: -9.287516593933105
    9. ' length' → logprob: -9.287516593933105
    10. 'c' → logprob: -9.412516593933105

Token 185: ' cases' (ID: 7911)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6801161170005798
    2. ' -' → logprob: -0.8051161170005798
    3. ' cases' → logprob: -3.5551161766052246
    4. 'cases' → logprob: -4.930116176605225
    5. ' ' → logprob: -5.805116176605225
    6. ' case' → logprob: -6.305116176605225
    7. ' cellules' → logprob: -6.305116176605225
    8. ' cells' → logprob: -6.805116176605225
    9. 'cells' → logprob: -7.680116176605225
    10. ' ' → logprob: -7.680116176605225

Token 186: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4018664062023163
    2. ',' → logprob: -1.2768664360046387
    3. ' (' → logprob: -3.7768664360046387
    4. ' return' → logprob: -4.276866436004639
    5. ' ,' → logprob: -5.401866436004639
    6. '       ' → logprob: -5.651866436004639
    7. 'return' → logprob: -6.151866436004639
    8. '-' → logprob: -7.151866436004639
    9. '   ' → logprob: -7.401866436004639
    10. ' ' → logprob: -7.651866436004639

Token 187: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31016430258750916
    2. 'return' → logprob: -2.435164213180542
    3. ' m' → logprob: -2.685164213180542
    4. ' il' → logprob: -3.060164213180542
    5. ' le' → logprob: -3.060164213180542
    6. ' la' → logprob: -5.810164451599121
    7. '   ' → logprob: -5.935164451599121
    8. 'm' → logprob: -5.935164451599121
    9. ' on' → logprob: -6.435164451599121
    10. ' n' → logprob: -6.560164451599121

Token 188: ' compte' (ID: 19657)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5713639259338379
    2. ' have' → logprob: -2.196363925933838
    3. 'a' → logprob: -2.446363925933838
    4. ' trouve' → logprob: -2.571363925933838
    5. ' peux' → logprob: -3.446363925933838
    6. ' return' → logprob: -3.696363925933838
    7. '_' → logprob: -3.946363925933838
    8. ' ' → logprob: -4.196363925933838
    9. ' ' → logprob: -4.696363925933838
    10. 'tr' → logprob: -4.821363925933838

Token 189: ' les' (ID: 1341)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.022982103750109673
    2. 'm' → logprob: -4.772982120513916
    3. ' les' → logprob: -5.022982120513916
    4. ' (' → logprob: -5.147982120513916
    5. ' ' → logprob: -6.772982120513916
    6. '(m' → logprob: -8.397981643676758
    7. 'les' → logprob: -9.147981643676758
    8. ' des' → logprob: -9.897981643676758
    9. ' "' → logprob: -10.022981643676758
    10. ' l' → logprob: -10.147981643676758

Token 190: ' p' (ID: 275)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.01629699394106865
    2. 'm' → logprob: -4.266296863555908
    3. ' p' → logprob: -6.891296863555908
    4. ' espaces' → logprob: -7.641296863555908
    5. ' (' → logprob: -8.141297340393066
    6. ' ' → logprob: -9.141297340393066
    7. '(m' → logprob: -9.516297340393066
    8. ' connex' → logprob: -10.016297340393066
    9. ' pairs' → logprob: -10.641297340393066
    10. 'p' → logprob: -10.766297340393066

Token 191: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0842667669057846
    2. 'airs' → logprob: -3.7092666625976562
    3. 'a' → logprob: -3.9592666625976562
    4. '_' → logprob: -4.709266662597656
    5. '-' → logprob: -4.709266662597656
    6. 'ai' → logprob: -5.709266662597656
    7. 'oints' → logprob: -6.334266662597656
    8. 'air' → logprob: -6.334266662597656
    9. 'i' → logprob: -6.584266662597656
    10. 'r' → logprob: -6.959266662597656

Token 192: ' distinct' (ID: 16913)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.11919523030519485
    2. ' (' → logprob: -2.9941952228546143
    3. 'm' → logprob: -3.4941952228546143
    4. '(m' → logprob: -3.6191952228546143
    5. ' ' → logprob: -6.369195461273193
    6. ' de' → logprob: -6.994195461273193
    7. '(' → logprob: -7.494195461273193
    8. '   ' → logprob: -8.244194984436035
    9. '           ' → logprob: -8.369194984436035
    10. '    ' → logprob: -8.369194984436035

Token 193: 'es' (ID: 268)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6034294962882996
    2. '_' → logprob: -1.3534295558929443
    3. ' entre' → logprob: -2.4784295558929443
    4. ' _' → logprob: -3.6034295558929443
    5. ' -' → logprob: -4.228429317474365
    6. '-' → logprob: -4.603429317474365
    7. 'es' → logprob: -4.728429317474365
    8. ' m' → logprob: -4.978429317474365
    9. ' (' → logprob: -5.103429317474365
    10. 's' → logprob: -5.103429317474365

Token 194: ' possibles' (ID: 97753)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.7974380850791931
    2. 'm' → logprob: -1.672438144683838
    3. '(m' → logprob: -2.047438144683838
    4. ' de' → logprob: -2.172438144683838
    5. ' (' → logprob: -3.172438144683838
    6. ' possibles' → logprob: -3.422438144683838
    7. ' entre' → logprob: -4.297438144683838
    8. 'de' → logprob: -4.422438144683838
    9. ' possible' → logprob: -4.672438144683838
    10. 'possible' → logprob: -6.297438144683838

Token 195: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6862064003944397
    2. ' m' → logprob: -1.811206340789795
    3. ' return' → logprob: -2.311206340789795
    4. '           ' → logprob: -2.561206340789795
    5. ' *' → logprob: -3.186206340789795
    6. ',' → logprob: -3.811206340789795
    7. 'return' → logprob: -3.811206340789795
    8. 'm' → logprob: -4.561206340789795
    9. ' =' → logprob: -4.686206340789795
    10. ' ' → logprob: -4.811206340789795

Token 196: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6632980108261108
    2. ' (' → logprob: -1.4132980108261108
    3. '           ' → logprob: -1.7882980108261108
    4. 'return' → logprob: -3.4132981300354004
    5. '   ' → logprob: -4.4132981300354
    6. ' m' → logprob: -4.6632981300354
    7. '       ' → logprob: -5.4132981300354
    8. ' 
' → logprob: -5.5382981300354
    9. '    ' → logprob: -5.7882981300354
    10. ' for' → logprob: -6.4132981300354

Token 197: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47543367743492126
    2. 'return' (adapté à ' return') → logprob: -0.9754337072372437
    3. ' m' → logprob: -7.350433826446533
    4. '           ' → logprob: -8.350433349609375
    5. '   ' → logprob: -8.475433349609375
    6. 'm' → logprob: -8.725433349609375
    7. '       ' → logprob: -10.850433349609375
    8. '
' → logprob: -10.975433349609375
    9. ' (' → logprob: -11.100433349609375
    10. '    ' → logprob: -11.850433349609375

Token 198: ' int' (ID: 677)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4364807605743408
    2. 'm' → logprob: -1.0614807605743408
    3. ' (' → logprob: -5.186480522155762
    4. '(m' → logprob: -6.186480522155762
    5. '(' → logprob: -9.436480522155762
    6. ' sum' → logprob: -12.436480522155762
    7. ' ' → logprob: -12.936480522155762
    8. '1' → logprob: -12.936480522155762
    9. '((' → logprob: -13.061480522155762
    10. 'sum' → logprob: -13.186480522155762

Token 199: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3611568808555603
    2. '((' → logprob: -1.236156940460205
    3. '(' → logprob: -4.861156940460205
    4. '(((' → logprob: -5.361156940460205
    5. '((((' → logprob: -9.736156463623047
    6. '(math' → logprob: -10.486156463623047
    7. '(round' → logprob: -10.861156463623047
    8. '("' → logprob: -11.361156463623047
    9. '(pow' → logprob: -11.611156463623047
    10. '('' → logprob: -11.986156463623047

Token 200: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4964171051979065
    2. '*(' → logprob: -1.1214170455932617
    3. ' *' → logprob: -2.7464170455932617
    4. ')' → logprob: -7.746417045593262
    5. ' *(' → logprob: -8.246417045593262
    6. '(m' → logprob: -8.246417045593262
    7. '-' → logprob: -8.496417045593262
    8. ' ' → logprob: -9.871417045593262
    9. '/' → logprob: -10.621417045593262
    10. ' -' → logprob: -11.121417045593262

Token 201: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.26644715666770935
    2. '(m' → logprob: -1.5164471864700317
    3. '(n' → logprob: -4.266447067260742
    4. ' ' → logprob: -8.766447067260742
    5. '(' → logprob: -8.891447067260742
    6. '1' → logprob: -10.391447067260742
    7. '(math' → logprob: -11.141447067260742
    8. '2' → logprob: -11.641447067260742
    9. '(M' → logprob: -11.766447067260742
    10. '0' → logprob: -11.891447067260742

Token 202: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1454886496067047
    2. ' (' → logprob: -2.145488739013672
    3. 'm' → logprob: -4.020488739013672
    4. ' m' → logprob: -7.895488739013672
    5. ' ' → logprob: -10.395488739013672
    6. '(' → logprob: -10.770488739013672
    7. '1' → logprob: -12.395488739013672
    8. '  ' → logprob: -12.770488739013672
    9. '   ' → logprob: -13.020488739013672
    10. ')' → logprob: -13.457988739013672

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5231359601020813
    2. ' -' → logprob: -0.8981359601020813
    3. ' ' → logprob: -12.398136138916016
    4. ')' → logprob: -12.523136138916016
    5. ' )' → logprob: -12.523136138916016
    6. '1' → logprob: -14.148136138916016
    7. ' ' → logprob: -16.148136138916016
    8. '```' → logprob: -16.398136138916016
    9. '+' → logprob: -16.710636138916016
    10. '  ' → logprob: -16.898136138916016

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005235291086137295
    2. ' ' → logprob: -5.255235195159912
    3. ')' → logprob: -14.00523567199707
    4. '<|end|>' → logprob: -15.13023567199707
    5. '2' → logprob: -16.19273567199707
    6. '  ' → logprob: -16.56773567199707
    7. '   ' → logprob: -16.63023567199707
    8. ' )' → logprob: -16.69273567199707
    9. '```' → logprob: -17.50523567199707
    10. '۱' → logprob: -18.25523567199707

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.727905979962088e-05
    2. ' ' → logprob: -10.00004768371582
    3. '2' → logprob: -14.56254768371582
    4. '   ' → logprob: -15.00004768371582
    5. '
' → logprob: -15.43754768371582
    6. ')' → logprob: -15.56254768371582
    7. '```' → logprob: -16.00004768371582
    8. '3' → logprob: -16.37504768371582
    9. '  ' → logprob: -16.62504768371582
    10. '    ' → logprob: -16.75004768371582

Token 206: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01677866093814373
    2. ' )' → logprob: -5.016778469085693
    3. '/' → logprob: -5.391778469085693
    4. ' /' → logprob: -5.766778469085693
    5. ')/' → logprob: -6.141778469085693
    6. ' ' → logprob: -9.766778945922852
    7. '))' → logprob: -9.891778945922852
    8. '   ' → logprob: -10.641778945922852
    9. ')//' → logprob: -10.766778945922852
    10. ' //' → logprob: -12.016778945922852

Token 207: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5786610841751099
    2. ' /' → logprob: -0.8286610841751099
    3. ')' → logprob: -6.20366096496582
    4. ' //' → logprob: -7.45366096496582
    5. ' )' → logprob: -9.95366096496582
    6. '//' → logprob: -10.20366096496582
    7. ' ' → logprob: -11.20366096496582
    8. ' ' → logprob: -11.57866096496582
    9. '   ' → logprob: -12.20366096496582
    10. ')/' → logprob: -13.57866096496582

Token 208: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05489514768123627
    2. ' ' → logprob: -2.9298951625823975
    3. '1' → logprob: -11.429895401000977
    4. '
' → logprob: -15.242395401000977
    5. ')' → logprob: -15.304895401000977
    6. '۲' → logprob: -15.867395401000977
    7. '3' → logprob: -15.929895401000977
    8. ' ' → logprob: -15.929895401000977
    9. '  ' → logprob: -15.992395401000977
    10. '4' → logprob: -16.117395401000977

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001067227916792035
    2. ' ' → logprob: -6.876067161560059
    3. '1' → logprob: -10.376067161560059
    4. '
' → logprob: -14.001067161560059
    5. ')' → logprob: -14.251067161560059
    6. '```' → logprob: -15.126067161560059
    7. '4' → logprob: -15.438567161560059
    8. '

' → logprob: -15.813567161560059
    9. '۲' → logprob: -15.876067161560059
    10. '3' → logprob: -16.188568115234375

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014883324911352247
    2. ' )' → logprob: -8.87514877319336
    3. ')
' → logprob: -12.37514877319336
    4. '   ' → logprob: -12.50014877319336
    5. '       ' → logprob: -14.75014877319336
    6. '')' → logprob: -15.12514877319336
    7. ' ' → logprob: -15.87514877319336
    8. '))' → logprob: -16.00014877319336
    9. '")' → logprob: -16.62514877319336
    10. ')return' → logprob: -17.25014877319336

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012239314615726471
    2. '
' → logprob: -4.887239456176758
    3. '    
' → logprob: -5.637239456176758
    4. 'elif' → logprob: -7.262239456176758
    5. '\n' → logprob: -8.512239456176758
    6. ' elif' → logprob: -10.262239456176758
    7. ' 
' → logprob: -11.262239456176758
    8. '   
' → logprob: -11.262239456176758
    9. 'n' → logprob: -11.387239456176758
    10. '<|end|>' → logprob: -11.387239456176758

Token 212: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4907124638557434
    2. '   ' → logprob: -0.9907124638557434
    3. ' elif' → logprob: -4.365712642669678
    4. '
' → logprob: -6.365712642669678
    5. 'if' → logprob: -6.490712642669678
    6. '    
' → logprob: -8.11571216583252
    7. 'else' (adapté à ' else') → logprob: -8.61571216583252
    8. ' if' → logprob: -10.24071216583252
    9. '```' → logprob: -11.36571216583252
    10. ' else' → logprob: -11.74071216583252

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008821024559438229
    2. ':
' → logprob: -5.0088210105896
    3. '   ' → logprob: -6.8838210105896
    4. ' :' → logprob: -7.3838210105896
    5. ' if' → logprob: -7.8838210105896
    6. 'if' → logprob: -10.133821487426758
    7. ' :
' → logprob: -10.383821487426758
    8. '       ' → logprob: -12.508821487426758
    9. '    ' → logprob: -13.258821487426758
    10. ',' → logprob: -13.758821487426758

Token 214: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1595642864704132
    2. 'if' → logprob: -2.409564256668091
    3. ' if' → logprob: -2.909564256668091
    4. '       ' → logprob: -5.78456449508667
    5. '    ' → logprob: -10.159564018249512
    6. '   ' → logprob: -11.159564018249512
    7. '	if' → logprob: -13.409564018249512
    8. ' ' → logprob: -14.909564018249512
    9. '```' → logprob: -15.034564018249512
    10. '     ' → logprob: -15.159564018249512

Token 215: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019905785098671913
    2. ' if' → logprob: -4.8949055671691895
    3. '   ' → logprob: -5.0199055671691895
    4. '#' (adapté à ' #') → logprob: -5.8949055671691895
    5. 'return' → logprob: -5.8949055671691895
    6. '       ' → logprob: -9.769906044006348
    7. ' return' → logprob: -10.644906044006348
    8. ' #' → logprob: -11.144906044006348
    9. '    ' → logprob: -12.519906044006348
    10. ' ' → logprob: -12.769906044006348

Token 216: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2495102882385254
    2. ' if' → logprob: -1.6245102882385254
    3. '   ' → logprob: -4.499510288238525
    4. 'return' → logprob: -4.999510288238525
    5. '#' → logprob: -6.124510288238525
    6. ' return' → logprob: -6.374510288238525
    7. 'horizontal' → logprob: -7.374510288238525
    8. 'Si' → logprob: -7.999510288238525
    9. '       ' → logprob: -7.999510288238525
    10. ' Si' → logprob: -8.749509811401367

Token 217: ' la' (ID: 557)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0009630310814827681
    2. 'm' → logprob: -7.12596321105957
    3. ' n' → logprob: -8.87596321105957
    4. ' ' → logprob: -11.75096321105957
    5. '   ' → logprob: -11.75096321105957
    6. ' ' → logprob: -13.75096321105957
    7. '  ' → logprob: -14.37596321105957
    8. ' isinstance' → logprob: -14.75096321105957
    9. 'n' → logprob: -15.00096321105957
    10. '    ' → logprob: -15.18846321105957

Token 218: ' grille' (ID: 99153)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.14311039447784424
    2. 'm' → logprob: -2.0181102752685547
    3. ' n' → logprob: -8.518110275268555
    4. ' ' → logprob: -9.518110275268555
    5. ' grille' → logprob: -10.018110275268555
    6. 'n' → logprob: -10.268110275268555
    7. '   ' → logprob: -10.518110275268555
    8. '  ' → logprob: -11.705610275268555
    9. ' grid' → logprob: -11.893110275268555
    10. ' ' → logprob: -11.893110275268555

Token 219: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.021941890940070152
    2. 'a' → logprob: -4.646941661834717
    3. ' m' → logprob: -5.896941661834717
    4. ' has' → logprob: -6.021941661834717
    5. ' n' → logprob: -6.271941661834717
    6. 'm' → logprob: -6.396941661834717
    7. '   ' → logprob: -6.646941661834717
    8. ' ' → logprob: -6.896941661834717
    9. ' ==' → logprob: -7.771941661834717
    10. ' est' → logprob: -8.271942138671875

Token 220: ' une' (ID: 2463)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10357367992401123
    2. 'm' → logprob: -2.353573799133301
    3. ' une' → logprob: -6.478573799133301
    4. ' plus' → logprob: -7.728573799133301
    5. ' ' → logprob: -7.978573799133301
    6. ' un' → logprob: -7.978573799133301
    7. ' plusieurs' → logprob: -7.978573799133301
    8. '   ' → logprob: -8.7285737991333
    9. 'plus' → logprob: -9.7285737991333
    10. '1' → logprob: -10.3535737991333

Token 221: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.38412442803382874
    2. ' ou' → logprob: -2.509124517440796
    3. ' colonne' → logprob: -2.634124517440796
    4. 'm' → logprob: -3.259124517440796
    5. 'se' → logprob: -3.384124517440796
    6. 'single' → logprob: -3.759124517440796
    7. 'col' → logprob: -3.759124517440796
    8. ' single' → logprob: -4.009124279022217
    9. 'ou' → logprob: -5.009124279022217
    10. ' or' → logprob: -5.634124279022217

Token 222: ' colonne' (ID: 148275)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12906987965106964
    2. ' m' → logprob: -3.1290698051452637
    3. ' colonne' → logprob: -3.3790698051452637
    4. ' ligne' → logprob: -4.129069805145264
    5. 'ligne' → logprob: -4.379069805145264
    6. 'col' → logprob: -4.379069805145264
    7. ' colon' → logprob: -7.504069805145264
    8. ' col' → logprob: -7.629069805145264
    9. '   ' → logprob: -8.254070281982422
    10. 'colon' → logprob: -8.379070281982422

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2983657419681549
    2. ' if' → logprob: -2.048365831375122
    3. 'if' → logprob: -2.048365831375122
    4. 'elif' → logprob: -10.298365592956543
    5. ' and' → logprob: -11.548365592956543
    6. ':' → logprob: -12.048365592956543
    7. '  ' → logprob: -12.048365592956543
    8. '    ' → logprob: -12.173365592956543
    9. ' ' → logprob: -12.298365592956543
    10. ' elif' → logprob: -12.673365592956543

Token 224: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6035534143447876
    2. '   ' → logprob: -0.8535534143447876
    3. ' if' → logprob: -3.603553295135498
    4. 'elif' → logprob: -12.228553771972656
    5. '```' → logprob: -13.228553771972656
    6. '       ' → logprob: -13.853553771972656
    7. '  ' → logprob: -14.353553771972656
    8. ' ' → logprob: -14.478553771972656
    9. '    ' → logprob: -15.103553771972656
    10. '	if' → logprob: -15.478553771972656

Token 225: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004067202680744231
    2. ' if' → logprob: -8.000406265258789
    3. '   ' → logprob: -9.750406265258789
    4. 'elif' → logprob: -11.250406265258789
    5. '```' → logprob: -18.12540626525879
    6. '       ' → logprob: -19.75040626525879
    7. '	if' → logprob: -20.12540626525879
    8. ' elif' → logprob: -20.75040626525879
    9. 'return' → logprob: -21.00040626525879
    10. ' ' → logprob: -21.12540626525879

Token 226: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3868715465068817
    2. 'm' → logprob: -1.136871576309204
    3. ' n' → logprob: -15.386871337890625
    4. '   ' → logprob: -15.761871337890625
    5. 'n' → logprob: -16.636871337890625
    6. '    ' → logprob: -16.636871337890625
    7. ' ' → logprob: -17.136871337890625
    8. ' ' → logprob: -18.386871337890625
    9. '	m' → logprob: -18.511871337890625
    10. '1' → logprob: -18.886871337890625

Token 227: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018151111900806427
    2. '==' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.26815128326416
    4. ' ' → logprob: -15.26815128326416
    5. '=' → logprob: -15.89315128326416
    6. '1' → logprob: -16.893150329589844
    7. '==
' → logprob: -16.893150329589844
    8. '   ' → logprob: -17.018150329589844
    9. ' ==
' → logprob: -17.143150329589844
    10. ' =' → logprob: -17.518150329589844

Token 228: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246875032782555
    2. ' ' → logprob: -3.7732467651367188
    3. '   ' → logprob: -13.773246765136719
    4. '0' → logprob: -15.523246765136719
    5. '  ' → logprob: -17.14824676513672
    6. '```' → logprob: -17.58574676513672
    7. '<|end|>' → logprob: -18.77324676513672
    8. 'def' → logprob: -18.96074676513672
    9. '    ' → logprob: -19.14824676513672
    10. 's' → logprob: -19.46074676513672

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.37500762939453
    4. 'def' → logprob: -16.87500762939453
    5. '<|end|>' → logprob: -17.50000762939453
    6. '```' → logprob: -18.12500762939453
    7. '0' → logprob: -19.12500762939453
    8. '[' → logprob: -19.56250762939453
    9. '  ' → logprob: -19.93750762939453
    10. 's' → logprob: -20.18750762939453

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05795466527342796
    2. ':
' → logprob: -3.0579545497894287
    3. '       ' → logprob: -4.682954788208008
    4. ':return' → logprob: -10.557954788208008
    5. '   ' → logprob: -10.932954788208008
    6. '           ' → logprob: -11.557954788208008
    7. ' :' → logprob: -11.807954788208008
    8. ' :
' → logprob: -12.807954788208008
    9. ':

' → logprob: -12.932954788208008
    10. ':
' → logprob: -13.182954788208008

Token 231: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031425125780515373
    2. 'return' → logprob: -8.500314712524414
    3. '           ' → logprob: -9.375314712524414
    4. ' return' → logprob: -11.500314712524414
    5. '   ' → logprob: -11.750314712524414
    6. ':
' → logprob: -13.125314712524414
    7. ':' → logprob: -13.250314712524414
    8. '
' → logprob: -13.500314712524414
    9. '	' → logprob: -14.125314712524414
    10. '	   ' → logprob: -14.875314712524414

Token 232: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08187548816204071
    2. '       ' → logprob: -2.7068755626678467
    3. ' return' → logprob: -4.581875324249268
    4. '           ' → logprob: -6.456875324249268
    5. '   ' → logprob: -9.956875801086426
    6. '               ' → logprob: -11.581875801086426
    7. '	return' → logprob: -13.331875801086426
    8. '      ' → logprob: -14.081875801086426
    9. '     ' → logprob: -14.456875801086426
    10. '
' → logprob: -14.706875801086426

Token 233: ' Une' (ID: 19758)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02124074473977089
    2. ' return' → logprob: -3.896240711212158
    3. '       ' → logprob: -8.021241188049316
    4. '           ' → logprob: -8.271241188049316
    5. 'ret' → logprob: -9.896241188049316
    6. '   ' → logprob: -10.396241188049316
    7. 'eturn' → logprob: -11.146241188049316
    8. '#' → logprob: -12.021241188049316
    9. ' retour' → logprob: -12.896241188049316
    10. '```' → logprob: -13.021241188049316

Token 234: ' seule' (ID: 41983)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.49556609988212585
    2. 'return' → logprob: -1.2455661296844482
    3. 'int' → logprob: -3.7455661296844482
    4. ' int' → logprob: -4.620565891265869
    5. '   ' → logprob: -4.870565891265869
    6. 'n' → logprob: -4.995565891265869
    7. 'eturn' → logprob: -5.495565891265869
    8. ' lignes' → logprob: -5.620565891265869
    9. 'rray' → logprob: -5.620565891265869
    10. ' ligne' → logprob: -5.620565891265869

Token 235: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.6783483028411865
    2. 'ligne' → logprob: -0.9283483028411865
    3. 'return' → logprob: -3.1783483028411865
    4. ' colonne' → logprob: -3.3033483028411865
    5. ' return' → logprob: -5.053348541259766
    6. ' ligne' → logprob: -5.178348541259766
    7. '#' → logprob: -5.803348541259766
    8. '   ' → logprob: -6.928348541259766
    9. 'colon' → logprob: -7.428348541259766
    10. 'column' → logprob: -7.803348541259766

Token 236: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2892557978630066
    2. '       ' → logprob: -1.5392558574676514
    3. 'return' → logprob: -3.4142558574676514
    4. ' return' → logprob: -5.789255619049072
    5. '
' → logprob: -7.789255619049072
    6. '   ' → logprob: -8.91425609588623
    7. ',' → logprob: -10.66425609588623
    8. '               ' → logprob: -10.78925609588623
    9. '
' → logprob: -11.41425609588623
    10. '		' → logprob: -11.66425609588623

Token 237: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023291366174817085
    2. ' n' → logprob: -3.7732913494110107
    3. 'int' → logprob: -10.14829158782959
    4. '   ' → logprob: -13.14829158782959
    5. 'return' → logprob: -13.64829158782959
    6. ' int' → logprob: -14.02329158782959
    7. ' ' → logprob: -14.39829158782959
    8. 'nt' → logprob: -15.39829158782959
    9. '	n' → logprob: -15.39829158782959
    10. '    ' → logprob: -15.52329158782959

Token 238: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.5933923125267029
    2. 'cases' → logprob: -0.8433923125267029
    3. ' lignes' → logprob: -4.593392372131348
    4. ' case' → logprob: -5.843392372131348
    5. 'case' → logprob: -6.843392372131348
    6. ' lines' → logprob: -7.343392372131348
    7. ' ' → logprob: -7.343392372131348
    8. ' cas' → logprob: -7.968392372131348
    9. 'lines' → logprob: -8.218392372131348
    10. 'cas' → logprob: -8.343392372131348

Token 239: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050281889736652374
    2. 'return' → logprob: -3.5502820014953613
    3. '       ' → logprob: -4.175282001495361
    4. ' return' → logprob: -5.925282001495361
    5. '
' → logprob: -6.300282001495361
    6. ',' → logprob: -8.425281524658203
    7. '   ' → logprob: -9.800281524658203
    8. '               ' → logprob: -9.800281524658203
    9. '	       ' → logprob: -10.550281524658203
    10. '		' → logprob: -10.800281524658203

Token 240: ' p' (ID: 275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06254376471042633
    2. ' return' → logprob: -2.8125438690185547
    3. '           ' → logprob: -7.562543869018555
    4. '       ' → logprob: -10.312543869018555
    5. 'ret' → logprob: -11.437543869018555
    6. '   ' → logprob: -11.562543869018555
    7. '	return' → logprob: -14.187543869018555
    8. ' retour' → logprob: -14.937543869018555
    9. ' ' → logprob: -15.062543869018555
    10. '               ' → logprob: -15.062543869018555

Token 241: 'aires' (ID: 8507)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2359333038330078
    2. ' return' → logprob: -2.360933303833008
    3. 'airs' → logprob: -3.485933303833008
    4. 'r' → logprob: -3.735933303833008
    5. 'air' → logprob: -3.860933303833008
    6. 'aires' → logprob: -3.860933303833008
    7. 'ar' → logprob: -4.860933303833008
    8. 'aire' → logprob: -5.485933303833008
    9. 'rend' → logprob: -6.985933303833008
    10. ' =' → logprob: -7.485933303833008

Token 242: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8582922220230103
    2. ' possibles' → logprob: -1.1082922220230103
    3. '=' → logprob: -1.9832922220230103
    4. ' possible' → logprob: -2.6082921028137207
    5. ' distinct' → logprob: -3.8582921028137207
    6. ' int' → logprob: -5.858292102813721
    7. '=int' → logprob: -6.233292102813721
    8. ' ' → logprob: -6.358292102813721
    9. ' return' → logprob: -6.608292102813721
    10. 'distinct' → logprob: -6.733292102813721

Token 243: ' long' (ID: 1701)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02271643653512001
    2. 'ng' → logprob: -5.022716522216797
    3. 'nombre' → logprob: -5.022716522216797
    4. 'n' → logprob: -6.272716522216797
    5. '=' → logprob: -6.397716522216797
    6. ' nombre' → logprob: -6.897716522216797
    7. 'return' → logprob: -7.022716522216797
    8. 'nt' → logprob: -7.147716522216797
    9. 'long' → logprob: -7.272716522216797
    10. ' =' → logprob: -7.647716522216797

Token 244: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.015368289314210415
    2. 'de' → logprob: -4.515368461608887
    3. ' des' → logprob: -5.765368461608887
    4. '   ' → logprob: -8.140368461608887
    5. ' d' → logprob: -8.140368461608887
    6. 'd' → logprob: -8.515368461608887
    7. 'des' → logprob: -9.015368461608887
    8. ' n' → logprob: -9.390368461608887
    9. ' vertical' → logprob: -10.015368461608887
    10. 'n' → logprob: -10.265368461608887

Token 245: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4655574560165405
    2. 'la' → logprob: -1.0905574560165405
    3. 'l' → logprob: -3.59055757522583
    4. 'n' → logprob: -5.71555757522583
    5. 'int' → logprob: -6.09055757522583
    6. ' n' → logprob: -6.59055757522583
    7. ' l' → logprob: -7.21555757522583
    8. ' int' → logprob: -8.965557098388672
    9. 'une' → logprob: -9.090557098388672
    10. ' ' → logprob: -9.090557098388672

Token 246: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.1527673304080963
    2. ' colonne' → logprob: -2.4027674198150635
    3. 'ligne' → logprob: -3.4027674198150635
    4. 'n' → logprob: -5.402767181396484
    5. 'vertical' → logprob: -5.902767181396484
    6. 'colon' → logprob: -6.027767181396484
    7. 'axe' → logprob: -6.152767181396484
    8. ' ligne' → logprob: -6.277767181396484
    9. 'column' → logprob: -7.027767181396484
    10. ' vertical' → logprob: -7.277767181396484

Token 247: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5742987990379333
    2. ' return' → logprob: -1.4492988586425781
    3. 'return' → logprob: -1.9492988586425781
    4. '       ' → logprob: -2.824298858642578
    5. '   ' → logprob: -8.449298858642578
    6. '
' → logprob: -9.199298858642578
    7. 'eturn' → logprob: -10.574298858642578
    8. ',' → logprob: -10.949298858642578
    9. '               ' → logprob: -11.074298858642578
    10. ':return' → logprob: -11.074298858642578

Token 248: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.840201735496521
    2. '           ' → logprob: -0.840201735496521
    3. 'return' → logprob: -2.3402018547058105
    4. ' return' → logprob: -3.2152018547058105
    5. '               ' → logprob: -8.340201377868652
    6. '   ' → logprob: -9.965201377868652
    7. '	return' → logprob: -13.340201377868652
    8. '```' → logprob: -13.340201377868652
    9. '	       ' → logprob: -13.590201377868652
    10. '
' → logprob: -13.715201377868652

Token 249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0052428836934268475
    2. ' return' → logprob: -5.255242824554443
    3. '           ' → logprob: -12.255243301391602
    4. '       ' → logprob: -12.880243301391602
    5. '   ' → logprob: -13.505243301391602
    6. 'ret' → logprob: -15.255243301391602
    7. '	return' → logprob: -17.0052433013916
    8. 'eturn' → logprob: -17.1302433013916
    9. ' ' → logprob: -17.2552433013916
    10. '               ' → logprob: -18.3802433013916

Token 250: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.313317209482193
    2. ' int' → logprob: -1.3133171796798706
    3. ' n' → logprob: -10.18831729888916
    4. 'n' → logprob: -11.81331729888916
    5. '(int' → logprob: -11.93831729888916
    6. '   ' → logprob: -13.31331729888916
    7. '	int' → logprob: -14.18831729888916
    8. ' ' → logprob: -14.18831729888916
    9. '  ' → logprob: -15.43831729888916
    10. '<int' → logprob: -15.93831729888916

Token 251: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.043078898685053e-05
    2. 'n' → logprob: -10.000090599060059
    3. '(' → logprob: -10.125090599060059
    4. ' n' → logprob: -12.500090599060059
    5. ' (' → logprob: -14.125090599060059
    6. '((' → logprob: -15.000090599060059
    7. '	n' → logprob: -18.000089645385742
    8. '   ' → logprob: -19.625089645385742
    9. '(
' → logprob: -20.000089645385742
    10. '_n' → logprob: -20.000089645385742

Token 252: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07907969504594803
    2. '*' → logprob: -2.5790796279907227
    3. '*(' → logprob: -8.579079627990723
    4. '(n' → logprob: -13.954079627990723
    5. ' ' → logprob: -14.329079627990723
    6. ' *(' → logprob: -15.204079627990723
    7. ' (' → logprob: -17.07908058166504
    8. ' ' → logprob: -17.07908058166504
    9. '**' → logprob: -17.70408058166504
    10. '(' → logprob: -18.57908058166504

Token 253: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31326788663864136
    2. '(n' → logprob: -1.3132679462432861
    3. '(' → logprob: -12.063267707824707
    4. ' ' → logprob: -15.563267707824707
    5. '(m' → logprob: -16.688268661499023
    6. '   ' → logprob: -17.438268661499023
    7. '*(' → logprob: -17.688268661499023
    8. '  ' → logprob: -17.813268661499023
    9. '
' → logprob: -18.063268661499023
    10. ')' → logprob: -18.188268661499023

Token 254: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47798773646354675
    2. 'n' → logprob: -0.9779877662658691
    3. ' (' → logprob: -5.602987766265869
    4. ' n' → logprob: -8.477987289428711
    5. '(' → logprob: -12.602987289428711
    6. '[n' → logprob: -13.852987289428711
    7. '   ' → logprob: -13.977987289428711
    8. ')n' → logprob: -14.602987289428711
    9. '	n' → logprob: -14.852987289428711
    10. ')' → logprob: -14.977987289428711

Token 255: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0789254829287529
    2. '-' → logprob: -2.578925371170044
    3. ' ' → logprob: -10.328925132751465
    4. '   ' → logprob: -13.203925132751465
    5. '  ' → logprob: -14.828925132751465
    6. 's' → logprob: -15.703925132751465
    7. '1' → logprob: -15.828925132751465
    8. '    ' → logprob: -15.953925132751465
    9. '<|end|>' → logprob: -16.64142608642578
    10. '```' → logprob: -16.82892608642578

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002476724097505212
    2. ' ' → logprob: -6.002476692199707
    3. '<|end|>' → logprob: -14.502476692199707
    4. '   ' → logprob: -15.127476692199707
    5. ')' → logprob: -16.002477645874023
    6. '```' → logprob: -16.502477645874023
    7. '...' → logprob: -17.564977645874023
    8. '  ' → logprob: -17.689977645874023
    9. '    ' → logprob: -17.689977645874023
    10. '2' → logprob: -17.939977645874023

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -17.875003814697266
    4. ')' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.000003814697266
    6. '```' → logprob: -18.000003814697266
    7. '
' → logprob: -18.750003814697266
    8. '    ' → logprob: -19.750003814697266
    9. '2' → logprob: -19.875003814697266
    10. '  ' → logprob: -20.125003814697266

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.505352795124054
    2. '/' → logprob: -1.6303527355194092
    3. ' /' → logprob: -1.6303527355194092
    4. ')/' → logprob: -5.880352973937988
    5. ' )' → logprob: -6.755352973937988
    6. '   ' → logprob: -7.630352973937988
    7. '()' → logprob: -8.505352973937988
    8. '    ' → logprob: -9.130352973937988
    9. '           ' → logprob: -9.505352973937988
    10. '```' → logprob: -10.255352973937988

Token 259: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.17976871132850647
    2. '/' → logprob: -1.804768681526184
    3. ')' → logprob: -11.554768562316895
    4. ' ' → logprob: -12.429768562316895
    5. ')/' → logprob: -12.679768562316895
    6. '   ' → logprob: -13.304768562316895
    7. '           ' → logprob: -13.304768562316895
    8. '    ' → logprob: -13.929768562316895
    9. ' ' → logprob: -14.429768562316895
    10. '       ' → logprob: -15.054768562316895

Token 260: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.750179290771484
    4. '
' → logprob: -17.125179290771484
    5. '```' → logprob: -17.625179290771484
    6. '  ' → logprob: -18.500179290771484
    7. '1' → logprob: -19.000179290771484
    8. ')' → logprob: -19.000179290771484
    9. '<|end|>' → logprob: -19.375179290771484
    10. '۲' → logprob: -19.500179290771484

Token 261: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.62500762939453
    4. ')' → logprob: -17.87500762939453
    5. '```' → logprob: -17.87500762939453
    6. '
' → logprob: -18.37500762939453
    7. '<|end|>' → logprob: -18.37500762939453
    8. '1' → logprob: -18.50000762939453
    9. '  ' → logprob: -19.50000762939453
    10. '۲' → logprob: -19.81250762939453

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. ')
' → logprob: -10.750028610229492
    3. ' )' → logprob: -12.375028610229492
    4. '   ' → logprob: -12.750028610229492
    5. '       ' → logprob: -15.125028610229492
    6. '))' → logprob: -17.500028610229492
    7. ')return' → logprob: -17.750028610229492
    8. '}' → logprob: -18.250028610229492
    9. ' ' → logprob: -18.750028610229492
    10. ')}' → logprob: -18.875028610229492

Token 263: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6946858167648315
    2. '       ' → logprob: -0.6946858167648315
    3. 'else' → logprob: -6.569685935974121
    4. ' else' → logprob: -9.319685935974121
    5. '
' → logprob: -10.694685935974121
    6. '    
' → logprob: -11.444685935974121
    7. '	' → logprob: -12.694685935974121
    8. '        
' → logprob: -12.819685935974121
    9. 'elif' → logprob: -13.694685935974121
    10. ')' → logprob: -14.069685935974121

Token 264: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13806097209453583
    2. 'else' (adapté à ' else') → logprob: -2.138061046600342
    3. ' else' → logprob: -4.513061046600342
    4. '       ' → logprob: -9.888060569763184
    5. '	else' → logprob: -10.888060569763184
    6. '
' → logprob: -11.013060569763184
    7. '    
' → logprob: -11.638060569763184
    8. '  ' → logprob: -12.138060569763184
    9. 'elif' → logprob: -13.138060569763184
    10. '    ' → logprob: -14.138060569763184

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11460359394550323
    2. ':
' → logprob: -2.8646035194396973
    3. '       ' → logprob: -2.9896035194396973
    4. '           ' → logprob: -7.739603519439697
    5. '
' → logprob: -7.739603519439697
    6. '   ' → logprob: -9.614603996276855
    7. ' :' → logprob: -11.989603996276855
    8. ':return' → logprob: -12.364603996276855
    9. '        
' → logprob: -12.739603996276855
    10. ' :
' → logprob: -13.114603996276855

Token 266: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02171398513019085
    2. 'return' → logprob: -4.271714210510254
    3. ' return' → logprob: -5.021714210510254
    4. '   ' → logprob: -7.021714210510254
    5. '           ' → logprob: -10.521714210510254
    6. '#' → logprob: -12.646714210510254
    7. '      ' → logprob: -13.021714210510254
    8. ' #' → logprob: -13.896714210510254
    9. '        ' → logprob: -14.521714210510254
    10. '```' → logprob: -14.521714210510254

Token 267: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3061860501766205
    2. '#' (adapté à ' #') → logprob: -1.8061860799789429
    3. ' return' → logprob: -2.4311859607696533
    4. ' #' → logprob: -5.431186199188232
    5. '           ' → logprob: -5.556186199188232
    6. '   ' → logprob: -6.181186199188232
    7. '       ' → logprob: -7.056186199188232
    8. 'horizontal' → logprob: -8.181185722351074
    9. ' horizontal' → logprob: -10.056185722351074
    10. ' ' → logprob: -11.806185722351074

Token 268: ' Sinon' (ID: 154924)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6137999892234802
    2. 'return' → logprob: -0.8637999892234802
    3. '#' → logprob: -3.613800048828125
    4. ' #' → logprob: -5.238800048828125
    5. ' horizontal' → logprob: -6.613800048828125
    6. 'horizontal' → logprob: -6.613800048828125
    7. '           ' → logprob: -6.738800048828125
    8. '   ' → logprob: -7.488800048828125
    9. '       ' → logprob: -8.613800048828125
    10. ' horizont' → logprob: -9.488800048828125

Token 269: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13231346011161804
    2. '           ' → logprob: -2.2573134899139404
    3. '       ' → logprob: -4.632313251495361
    4. 'return' → logprob: -4.882313251495361
    5. '               ' → logprob: -7.132313251495361
    6. '   ' → logprob: -7.257313251495361
    7. '            ' → logprob: -8.63231372833252
    8. '
' → logprob: -9.25731372833252
    9. ' ' → logprob: -9.75731372833252
    10. '    ' → logprob: -10.75731372833252

Token 270: ' grille' (ID: 99153)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1597793996334076
    2. 'return' → logprob: -2.0347793102264404
    3. '#' → logprob: -4.6597795486450195
    4. ' #' → logprob: -5.0347795486450195
    5. ' horizontal' → logprob: -7.7847795486450195
    6. '   ' → logprob: -8.40977954864502
    7. '           ' → logprob: -8.53477954864502
    8. 'horizontal' → logprob: -9.78477954864502
    9. ' horizont' → logprob: -10.90977954864502
    10. '       ' → logprob: -11.65977954864502

Token 271: ' avec' (ID: 3937)
  Prédit: ' horizont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' horizont' → logprob: -0.8980141878128052
    2. '   ' → logprob: -1.8980141878128052
    3. 'h' → logprob: -2.7730140686035156
    4. '_h' → logprob: -2.8980140686035156
    5. ' horizontal' → logprob: -3.0230140686035156
    6. ' =' → logprob: -3.3980140686035156
    7. ':' → logprob: -3.3980140686035156
    8. ' n' → logprob: -3.6480140686035156
    9. ' de' → logprob: -3.8980140686035156
    10. 'horizontal' → logprob: -4.148014068603516

Token 272: ' au' (ID: 2791)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21103493869304657
    2. ' n' → logprob: -2.4610350131988525
    3. '(n' → logprob: -2.4610350131988525
    4. ' des' → logprob: -5.461034774780273
    5. ' (' → logprob: -5.836034774780273
    6. ' au' → logprob: -5.961034774780273
    7. '(' → logprob: -6.211034774780273
    8. 'horizontal' → logprob: -7.086034774780273
    9. 'les' → logprob: -7.211034774780273
    10. 'au' → logprob: -7.211034774780273

Token 273: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0028861870523542166
    2. ' moins' → logprob: -6.2528862953186035
    3. 'mo' → logprob: -7.1278862953186035
    4. '   ' → logprob: -9.877885818481445
    5. 'm' → logprob: -10.377885818481445
    6. 'menos' → logprob: -10.752885818481445
    7. '-mo' → logprob: -11.002885818481445
    8. '```' → logprob: -11.377885818481445
    9. '-' → logprob: -11.877885818481445
    10. 'minus' → logprob: -12.127885818481445

Token 274: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0796375423669815
    2. ' ' → logprob: -3.3296375274658203
    3. ' deux' → logprob: -3.3296375274658203
    4. 'de' → logprob: -5.32963752746582
    5. 'n' → logprob: -10.07963752746582
    6. ' n' → logprob: -11.20463752746582
    7. ' une' → logprob: -11.32963752746582
    8. 'une' → logprob: -12.07963752746582
    9. '```' → logprob: -12.32963752746582
    10. ' two' → logprob: -12.45463752746582

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011836374178528786
    2. 'de' → logprob: -4.511836528778076
    3. ' deux' → logprob: -7.761836528778076
    4. ' ' → logprob: -8.011836051940918
    5. 'une' → logprob: -11.511836051940918
    6. '```' → logprob: -12.136836051940918
    7. '(' → logprob: -12.386836051940918
    8. '1' → logprob: -12.511836051940918
    9. 'n' → logprob: -13.261836051940918
    10. '   ' → logprob: -13.511836051940918

Token 276: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.0044303592294454575
    2. ' lines' → logprob: -6.004430294036865
    3. ' n' → logprob: -7.504430294036865
    4. 'l' → logprob: -7.754430294036865
    5. 'n' → logprob: -8.129430770874023
    6. ' cases' → logprob: -8.379430770874023
    7. ' ' → logprob: -9.379430770874023
    8. ' ligne' → logprob: -9.504430770874023
    9. ' l' → logprob: -9.629430770874023
    10. ' linhas' → logprob: -10.004430770874023

Token 277: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03645595163106918
    2. '   ' → logprob: -3.9114558696746826
    3. '       ' → logprob: -4.411456108093262
    4. 'return' → logprob: -6.536456108093262
    5. ' return' → logprob: -6.536456108093262
    6. '               ' → logprob: -8.286456108093262
    7. '    ' → logprob: -9.536456108093262
    8. '            ' → logprob: -9.661456108093262
    9. '```' → logprob: -9.661456108093262
    10. ' and' → logprob: -9.911456108093262

Token 278: ' colon' (ID: 20947)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005666394717991352
    2. 'colon' → logprob: -5.880666255950928
    3. 'au' → logprob: -6.755666255950928
    4. ' ' → logprob: -6.755666255950928
    5. 'de' → logprob: -8.505666732788086
    6. ' au' → logprob: -9.005666732788086
    7. ' colon' → logprob: -9.630666732788086
    8. 'col' → logprob: -10.130666732788086
    9. ' deux' → logprob: -10.380666732788086
    10. 'cols' → logprob: -10.380666732788086

Token 279: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.0029539279639720917
    2. 'es' → logprob: -5.877954006195068
    3. 'n' → logprob: -9.37795352935791
    4. 'ne' → logprob: -11.12795352935791
    5. '```' → logprob: -11.25295352935791
    6. 'les' → logprob: -11.50295352935791
    7. 'onnes' → logprob: -11.87795352935791
    8. 'ies' → logprob: -12.00295352935791
    9. '   ' → logprob: -12.87795352935791
    10. 'cols' → logprob: -13.87795352935791

Token 280: ' :
' (ID: 10039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5427015423774719
    2. '           ' → logprob: -0.9177015423774719
    3. ' return' → logprob: -4.792701721191406
    4. 'return' → logprob: -4.917701721191406
    5. '               ' → logprob: -6.292701721191406
    6. '
' → logprob: -6.792701721191406
    7. '   ' → logprob: -7.292701721191406
    8. '```' → logprob: -10.667701721191406
    9. '            
' → logprob: -11.042701721191406
    10. '
' → logprob: -11.167701721191406

Token 281: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.003707766532898
    2. 'return' → logprob: -1.128707766532898
    3. '           ' → logprob: -1.253707766532898
    4. '       ' → logprob: -3.7537078857421875
    5. '   ' → logprob: -7.0037078857421875
    6. '               ' → logprob: -8.753707885742188
    7. 'horizontal' → logprob: -11.003707885742188
    8. '```' → logprob: -11.128707885742188
    9. '	return' → logprob: -11.753707885742188
    10. ' ' → logprob: -12.003707885742188

Token 282: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08157887309789658
    2. ' return' → logprob: -2.7065789699554443
    3. '           ' → logprob: -4.831578731536865
    4. 'horizontal' → logprob: -5.956578731536865
    5. '       ' → logprob: -7.706578731536865
    6. '   ' → logprob: -8.206579208374023
    7. ' horizontal' → logprob: -8.581579208374023
    8. '#' (adapté à ' #') → logprob: -10.956579208374023
    9. '               ' → logprob: -11.206579208374023
    10. '```' → logprob: -11.331579208374023

Token 283: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0951131135225296
    2. ' return' → logprob: -2.4701130390167236
    3. 'horizontal' → logprob: -5.470113277435303
    4. '   ' → logprob: -6.970113277435303
    5. ' horizontal' → logprob: -7.470113277435303
    6. '           ' → logprob: -8.220112800598145
    7. ' horizont' → logprob: -10.220112800598145
    8. 'h' → logprob: -10.470112800598145
    9. '       ' → logprob: -10.720112800598145
    10. ' horiz' → logprob: -10.970112800598145

Token 284: ' addition' (ID: 5856)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2605847120285034
    2. ' return' → logprob: -1.8855847120285034
    3. 'ret' → logprob: -3.385584831237793
    4. ' retourne' → logprob: -4.010584831237793
    5. 'continue' → logprob: -6.010584831237793
    6. 'eturn' → logprob: -6.135584831237793
    7. 'r' → logprob: -6.510584831237793
    8. ' calc' → logprob: -6.510584831237793
    9. 'rev' → logprob: -6.635584831237793
    10. '   ' → logprob: -6.760584831237793

Token 285: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.03435789793729782
    2. 'e' → logprob: -3.409357786178589
    3. '   ' → logprob: -8.034358024597168
    4. ' des' → logprob: -8.784358024597168
    5. 'n' → logprob: -9.409358024597168
    6. 'nne' → logprob: -9.534358024597168
    7. 'ner' → logprob: -11.284358024597168
    8. 'de' → logprob: -11.659358024597168
    9. ' ne' → logprob: -11.659358024597168
    10. ' de' → logprob: -12.284358024597168

Token 286: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.19668065011501312
    2. ' (' → logprob: -2.0716805458068848
    3. '(n' → logprob: -3.5716805458068848
    4. 'n' → logprob: -4.071680545806885
    5. '(' → logprob: -5.946680545806885
    6. ' les' → logprob: -6.571680545806885
    7. '   ' → logprob: -7.196680545806885
    8. '((' → logprob: -7.571680545806885
    9. ' m' → logprob: -7.946680545806885
    10. ' horizontal' → logprob: -7.946680545806885

Token 287: ' p' (ID: 275)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9711989760398865
    2. ' n' → logprob: -1.0961990356445312
    3. 'n' → logprob: -2.0961990356445312
    4. ' (' → logprob: -3.0961990356445312
    5. 'connections' → logprob: -3.7211990356445312
    6. ' pairs' → logprob: -3.8461990356445312
    7. ' p' → logprob: -3.8461990356445312
    8. 'conn' → logprob: -3.9711990356445312
    9. 'pairs' → logprob: -4.721199035644531
    10. ' connex' → logprob: -5.346199035644531

Token 288: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.1151852086186409
    2. 'airs' → logprob: -2.990185260772705
    3. 'air' → logprob: -3.365185260772705
    4. 'a' → logprob: -4.115185260772705
    5. 'ai' → logprob: -5.615185260772705
    6. 'aire' → logprob: -7.490185260772705
    7. 'r' → logprob: -8.115184783935547
    8. 'ar' → logprob: -8.115184783935547
    9. '_' → logprob: -8.552684783935547
    10. '-' → logprob: -8.990184783935547

Token 289: ' sur' (ID: 1512)
  Prédit: ' horizont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' horizont' → logprob: -0.49333029985427856
    2. 'h' → logprob: -2.368330240249634
    3. '   ' → logprob: -2.743330240249634
    4. '(' → logprob: -2.868330240249634
    5. '(n' → logprob: -3.118330240249634
    6. ' possibles' → logprob: -3.368330240249634
    7. ' horizontal' → logprob: -4.118330478668213
    8. 'horizontal' → logprob: -4.118330478668213
    9. ' horiz' → logprob: -4.493330478668213
    10. ' possible' → logprob: -5.118330478668213

Token 290: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.274400919675827
    2. 'les' → logprob: -2.1494009494781494
    3. ' toutes' → logprob: -3.0244009494781494
    4. ' n' → logprob: -3.3994009494781494
    5. ' la' → logprob: -4.39940071105957
    6. 'n' → logprob: -4.89940071105957
    7. ' l' → logprob: -5.52440071105957
    8. ' chaque' → logprob: -5.77440071105957
    9. 'l' → logprob: -5.89940071105957
    10. 't' → logprob: -6.77440071105957

Token 291: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.1311970055103302
    2. ' ligne' → logprob: -2.256196975708008
    3. 'range' → logprob: -4.756196975708008
    4. 'l' → logprob: -5.881196975708008
    5. ' range' → logprob: -6.006196975708008
    6. 'n' → logprob: -7.256196975708008
    7. 'rang' → logprob: -7.256196975708008
    8. ' lignes' → logprob: -7.881196975708008
    9. 'case' → logprob: -8.006196975708008
    10. ' n' → logprob: -8.131196975708008

Token 292: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8062161803245544
    2. '   ' → logprob: -1.1812162399291992
    3. '*' → logprob: -1.8062162399291992
    4. '           ' → logprob: -3.181216239929199
    5. '       ' → logprob: -4.056216239929199
    6. ' n' → logprob: -4.681216239929199
    7. '*(' → logprob: -6.056216239929199
    8. ' (' → logprob: -6.306216239929199
    9. '(n' → logprob: -6.306216239929199
    10. ' ' → logprob: -6.681216239929199

Token 293: ' colonne' (ID: 148275)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.6070128083229065
    2. 'les' → logprob: -1.3570127487182617
    3. 'col' → logprob: -2.9820127487182617
    4. 'sur' → logprob: -2.9820127487182617
    5. ' les' → logprob: -3.2320127487182617
    6. ' sur' → logprob: -3.7320127487182617
    7. '       ' → logprob: -5.107012748718262
    8. ' colonne' → logprob: -5.107012748718262
    9. '   ' → logprob: -5.232012748718262
    10. 'colon' → logprob: -5.357012748718262

Token 294: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5362938642501831
    2. '
' → logprob: -0.9112938642501831
    3. '       ' → logprob: -5.286293983459473
    4. '   ' → logprob: -5.411293983459473
    5. 'return' → logprob: -6.911293983459473
    6. '\n' → logprob: -7.536293983459473
    7. '            
' → logprob: -7.661293983459473
    8. ' return' → logprob: -7.786293983459473
    9. '  
' → logprob: -8.036293983459473
    10. '    
' → logprob: -8.161293983459473

Token 295: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13833922147750854
    2. '           ' → logprob: -2.5133392810821533
    3. '   ' → logprob: -3.1383392810821533
    4. '
' → logprob: -6.388339042663574
    5. 'return' → logprob: -6.388339042663574
    6. ' return' → logprob: -6.638339042663574
    7. '```' → logprob: -9.888339042663574
    8. '    
' → logprob: -10.763339042663574
    9. '               ' → logprob: -10.763339042663574
    10. '    ' → logprob: -11.013339042663574

Token 296: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05067155882716179
    2. 'horizontal' → logprob: -3.0506715774536133
    3. ' return' → logprob: -7.175671577453613
    4. '   ' → logprob: -7.425671577453613
    5. 'total' → logprob: -8.675671577453613
    6. '           ' → logprob: -8.675671577453613
    7. 'pairs' → logprob: -8.925671577453613
    8. ' horizontal' → logprob: -9.175671577453613
    9. 'h' → logprob: -9.425671577453613
    10. '       ' → logprob: -10.675671577453613

Token 297: ' int' (ID: 677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7559024691581726
    2. '(n' → logprob: -1.5059025287628174
    3. ' n' → logprob: -1.5059025287628174
    4. ' (' → logprob: -3.3809025287628174
    5. 'int' → logprob: -3.3809025287628174
    6. ' int' → logprob: -4.880902290344238
    7. '(int' → logprob: -5.255902290344238
    8. '((' → logprob: -5.505902290344238
    9. '   ' → logprob: -7.255902290344238
    10. '(' → logprob: -7.380902290344238

Token 298: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11781831085681915
    2. '((' → logprob: -2.3678183555603027
    3. 'n' → logprob: -4.117818355560303
    4. '(((' → logprob: -7.492818355560303
    5. '(' → logprob: -7.617818355560303
    6. ' n' → logprob: -9.867817878723145
    7. '(m' → logprob: -9.992817878723145
    8. ' (' → logprob: -11.117817878723145
    9. '(
' → logprob: -12.242817878723145
    10. '   ' → logprob: -12.992817878723145

Token 299: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0021044600289314985
    2. '(n' → logprob: -6.25210428237915
    3. 'm' → logprob: -9.002104759216309
    4. ' n' → logprob: -10.252104759216309
    5. '(m' → logprob: -11.377104759216309
    6. '   ' → logprob: -13.252104759216309
    7. '((' → logprob: -13.752104759216309
    8. ' (' → logprob: -14.002104759216309
    9. '(' → logprob: -14.502104759216309
    10. 'nm' → logprob: -14.627104759216309

Token 300: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1765042245388031
    2. '*' → logprob: -1.9265042543411255
    3. '*(' → logprob: -4.176504135131836
    4. ')' → logprob: -7.676504135131836
    5. '-' → logprob: -9.551504135131836
    6. ' -' → logprob: -9.551504135131836
    7. '*m' → logprob: -9.676504135131836
    8. ' *(' → logprob: -9.801504135131836
    9. ' ' → logprob: -10.551504135131836
    10. ' )' → logprob: -10.926504135131836

Token 301: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.21417586505413055
    2. ' (' → logprob: -1.714175820350647
    3. 'm' → logprob: -4.464175701141357
    4. ' m' → logprob: -7.464175701141357
    5. '(' → logprob: -8.089176177978516
    6. '(n' → logprob: -8.714176177978516
    7. ')' → logprob: -10.714176177978516
    8. '   ' → logprob: -10.714176177978516
    9. ' ' → logprob: -10.964176177978516
    10. '2' → logprob: -11.839176177978516

Token 302: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0022573103196918964
    2. '(m' → logprob: -6.127257347106934
    3. ' m' → logprob: -10.127257347106934
    4. '   ' → logprob: -11.002257347106934
    5. ' (' → logprob: -11.502257347106934
    6. 'n' → logprob: -12.877257347106934
    7. '           ' → logprob: -14.502257347106934
    8. '    ' → logprob: -14.877257347106934
    9. '       ' → logprob: -15.002257347106934
    10. '	m' → logprob: -15.002257347106934

Token 303: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3172103464603424
    2. ' -' → logprob: -1.31721031665802
    3. '1' → logprob: -5.6922101974487305
    4. ' ' → logprob: -7.9422101974487305
    5. ')' → logprob: -9.06721019744873
    6. '   ' → logprob: -10.06721019744873
    7. '*' → logprob: -10.69221019744873
    8. ' )' → logprob: -12.06721019744873
    9. 'm' → logprob: -12.19221019744873
    10. '  ' → logprob: -12.44221019744873

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.750006675720215
    3. ')' → logprob: -13.000006675720215
    4. '2' → logprob: -14.875006675720215
    5. 'm' → logprob: -15.687506675720215
    6. '
' → logprob: -15.937506675720215
    7. '<|end|>' → logprob: -16.1875057220459
    8. '   ' → logprob: -16.4375057220459
    9. '...' → logprob: -16.4375057220459
    10. '```' → logprob: -16.5625057220459

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. 'm' → logprob: -12.500009536743164
    3. ' ' → logprob: -13.000009536743164
    4. '2' → logprob: -13.875009536743164
    5. ')' → logprob: -14.625009536743164
    6. '
' → logprob: -14.687509536743164
    7. '   ' → logprob: -15.437509536743164
    8. '```' → logprob: -15.875009536743164
    9. '(' → logprob: -16.125009536743164
    10. '3' → logprob: -16.250009536743164

Token 306: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011901757679879665
    2. ' )' → logprob: -4.88690185546875
    3. ')/' → logprob: -6.13690185546875
    4. ' *' → logprob: -7.26190185546875
    5. ' /' → logprob: -7.76190185546875
    6. '*' → logprob: -7.76190185546875
    7. '   ' → logprob: -8.01190185546875
    8. '/' → logprob: -8.88690185546875
    9. ' ' → logprob: -10.01190185546875
    10. ')*' → logprob: -10.88690185546875

Token 307: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4735834300518036
    2. ')' → logprob: -1.223583459854126
    3. '*' → logprob: -2.598583459854126
    4. ' /' → logprob: -5.348583221435547
    5. ' )' → logprob: -6.223583221435547
    6. '/' → logprob: -7.098583221435547
    7. ')*' → logprob: -7.848583221435547
    8. ' ' → logprob: -8.098583221435547
    9. ')/' → logprob: -9.098583221435547
    10. ' //' → logprob: -9.098583221435547

Token 308: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10431505739688873
    2. 'm' → logprob: -2.3543150424957275
    3. ' (' → logprob: -5.729315280914307
    4. '(m' → logprob: -8.104314804077148
    5. ' n' → logprob: -8.354314804077148
    6. '   ' → logprob: -8.979314804077148
    7. '    ' → logprob: -9.729314804077148
    8. '(n' → logprob: -10.479314804077148
    9. '(' → logprob: -10.854314804077148
    10. ' ' → logprob: -10.979314804077148

Token 309: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28125473856925964
    2. '*' → logprob: -1.406254768371582
    3. ')' → logprob: -9.781254768371582
    4. ' ' → logprob: -10.781254768371582
    5. '*(' → logprob: -11.406254768371582
    6. '   ' → logprob: -11.781254768371582
    7. ' ' → logprob: -12.781254768371582
    8. '    ' → logprob: -13.281254768371582
    9. '  ' → logprob: -13.781254768371582
    10. '"' → logprob: -14.781254768371582

Token 310: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.47417837381362915
    2. ' (' → logprob: -0.9741783738136292
    3. '(' → logprob: -9.974178314208984
    4. '(n' → logprob: -10.099178314208984
    5. 'm' → logprob: -12.974178314208984
    6. ')' → logprob: -12.974178314208984
    7. '           ' → logprob: -13.349178314208984
    8. '   ' → logprob: -13.474178314208984
    9. ' ' → logprob: -13.599178314208984
    10. '<|end|>' → logprob: -13.974178314208984

Token 311: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.126521035796031e-05
    2. ' m' → logprob: -9.375091552734375
    3. '(m' → logprob: -12.250091552734375
    4. '   ' → logprob: -13.750091552734375
    5. '           ' → logprob: -15.500091552734375
    6. ')m' → logprob: -16.375091552734375
    7. '	m' → logprob: -16.375091552734375
    8. ')' → logprob: -16.750091552734375
    9. '```' → logprob: -16.750091552734375
    10. ' (' → logprob: -17.000091552734375

Token 312: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12695886194705963
    2. ' -' → logprob: -2.1269588470458984
    3. ' ' → logprob: -11.376958847045898
    4. '1' → logprob: -11.626958847045898
    5. ')' → logprob: -11.751958847045898
    6. '   ' → logprob: -13.126958847045898
    7. '```' → logprob: -16.0019588470459
    8. 's' → logprob: -16.2519588470459
    9. '0' → logprob: -16.2519588470459
    10. '  ' → logprob: -16.5019588470459

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ')' → logprob: -12.750006675720215
    3. ' ' → logprob: -12.750006675720215
    4. '2' → logprob: -15.375006675720215
    5. '   ' → logprob: -15.500006675720215
    6. '<|end|>' → logprob: -16.00000762939453
    7. '```' → logprob: -16.50000762939453
    8. 'def' → logprob: -16.50000762939453
    9. '           ' → logprob: -16.62500762939453
    10. '<|end|>' → logprob: -17.37500762939453

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. ' ' → logprob: -11.750018119812012
    3. ')' → logprob: -12.687518119812012
    4. '```' → logprob: -13.312518119812012
    5. '2' → logprob: -13.437518119812012
    6. '   ' → logprob: -13.562518119812012
    7. '11' → logprob: -14.937518119812012
    8. '۱' → logprob: -15.437518119812012
    9. 'int' → logprob: -15.875018119812012
    10. 'def' → logprob: -16.062519073486328

Token 315: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024096666311379522
    2. ' )' → logprob: -8.62524127960205
    3. ')/' → logprob: -10.12524127960205
    4. '))' → logprob: -11.00024127960205
    5. '   ' → logprob: -13.25024127960205
    6. '()' → logprob: -13.50024127960205
    7. '())' → logprob: -14.75024127960205
    8. ')
' → logprob: -15.50024127960205
    9. '')' → logprob: -15.75024127960205
    10. '）' → logprob: -15.75024127960205

Token 316: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3454393446445465
    2. ')' → logprob: -1.4704393148422241
    3. ' /' → logprob: -2.8454394340515137
    4. '   ' → logprob: -6.095439434051514
    5. ')/' → logprob: -7.470439434051514
    6. ' )' → logprob: -7.595439434051514
    7. ' //' → logprob: -7.970439434051514
    8. '//' → logprob: -8.095438957214355
    9. ' ' → logprob: -10.220438957214355
    10. ' ' → logprob: -10.470438957214355

Token 317: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007115975022315979
    2. ' ' → logprob: -7.250711441040039
    3. ')' → logprob: -13.750711441040039
    4. '1' → logprob: -14.500711441040039
    5. '```' → logprob: -17.25071144104004
    6. '   ' → logprob: -17.50071144104004
    7. ' )' → logprob: -17.68821144104004
    8. '3' → logprob: -18.06321144104004
    9. '4' → logprob: -18.31321144104004
    10. '
' → logprob: -18.43821144104004

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -14.000007629394531
    4. ')' → logprob: -15.812507629394531
    5. '   ' → logprob: -17.06250762939453
    6. '
' → logprob: -17.31250762939453
    7. '```' → logprob: -17.31250762939453
    8. '۲' → logprob: -17.37500762939453
    9. '  ' → logprob: -18.00000762939453
    10. '4' → logprob: -18.31250762939453

Token 319: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ' )' → logprob: -12.000009536743164
    3. ')
' → logprob: -13.500009536743164
    4. '   ' → logprob: -13.625009536743164
    5. '))' → logprob: -15.250009536743164
    6. ')return' → logprob: -17.250009536743164
    7. '*' → logprob: -17.750009536743164
    8. ' ' → logprob: -18.000009536743164
    9. '}' → logprob: -18.250009536743164
    10. '       ' → logprob: -18.625009536743164

Token 320: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6080417037010193
    2. ' calculate' → logprob: -1.483041763305664
    3. ' count' → logprob: -2.108041763305664
    4. ' find' → logprob: -3.733041763305664
    5. ' test' → logprob: -3.983041763305664
    6. ' sum' → logprob: -4.733041763305664
    7. ' is' → logprob: -4.983041763305664
    8. ' compute' → logprob: -4.983041763305664
    9. ' factorial' → logprob: -5.358041763305664
    10. ' pair' → logprob: -5.733041763305664

Token 322: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4333348274230957
    2. '(' → logprob: -1.1833348274230957
    3. '_' → logprob: -3.1833348274230957
    4. '()' → logprob: -5.808334827423096
    5. '()>' → logprob: -8.933334350585938
    6. ' (' → logprob: -9.183334350585938
    7. ':' → logprob: -9.183334350585938
    8. '_:' → logprob: -9.433334350585938
    9. '(_)' → logprob: -9.558334350585938
    10. '(_' → logprob: -9.933334350585938

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06387992203235626
    2. 'n' → logprob: -3.31387996673584
    3. ' n' → logprob: -3.68887996673584
    4. '(n' → logprob: -7.93887996673584
    5. '	n' → logprob: -9.93887996673584
    6. 'import' → logprob: -10.31387996673584
    7. '```' → logprob: -10.81387996673584
    8. 'input' → logprob: -12.18887996673584
    9. '    
' → logprob: -12.18887996673584
    10. ' import' → logprob: -12.56387996673584

Token 324: ' """
' (ID: 7037)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.48742878437042236
    2. 'n' → logprob: -0.9874287843704224
    3. '   ' → logprob: -4.487428665161133
    4. ' for' → logprob: -6.362428665161133
    5. ' print' → logprob: -9.487428665161133
    6. ' import' → logprob: -9.612428665161133
    7. 'for' → logprob: -10.237428665161133
    8. 'import' → logprob: -10.237428665161133
    9. ' while' → logprob: -11.362428665161133
    10. 'print' → logprob: -11.362428665161133

Token 325: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011279708705842495
    2. '   ' → logprob: -5.011279582977295
    3. ' n' → logprob: -6.386279582977295
    4. '#' → logprob: -6.511279582977295
    5. 'print' → logprob: -7.386279582977295
    6. 'for' → logprob: -7.886279582977295
    7. 'result' → logprob: -9.511280059814453
    8. 'import' → logprob: -9.636280059814453
    9. 'if' → logprob: -9.886280059814453
    10. ' for' → logprob: -10.386280059814453

Token 326: ' Fonction' (ID: 189149)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1221344470977783
    2. 'n' → logprob: -1.4971344470977783
    3. '   ' → logprob: -2.1221344470977783
    4. '#' → logprob: -2.1221344470977783
    5. 'print' → logprob: -2.3721344470977783
    6. 'Calcul' → logprob: -2.8721344470977783
    7. ' print' → logprob: -3.8721344470977783
    8. ' test' → logprob: -5.122134208679199
    9. 'test' → logprob: -5.747134208679199
    10. 'def' → logprob: -5.747134208679199

Token 327: ' principale' (ID: 68926)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9172132611274719
    2. ' principale' → logprob: -1.0422132015228271
    3. 'def' → logprob: -3.042213201522827
    4. ' main' → logprob: -3.167213201522827
    5. ' test' → logprob: -3.292213201522827
    6. '   ' → logprob: -3.417213201522827
    7. ' calculate' → logprob: -3.792213201522827
    8. ' to' → logprob: -4.167213439941406
    9. ' d' → logprob: -4.417213439941406
    10. ' def' → logprob: -4.542213439941406

Token 328: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1711982786655426
    2. '():' → logprob: -2.2961983680725098
    3. ':' → logprob: -3.4211983680725098
    4. 'def' → logprob: -4.67119836807251
    5. '()' → logprob: -4.92119836807251
    6. ' :' → logprob: -6.04619836807251
    7. '():
' → logprob: -6.17119836807251
    8. '    
' → logprob: -7.29619836807251
    9. '(' → logprob: -7.29619836807251
    10. ' ' → logprob: -8.296197891235352

Token 329: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031990181654691696
    2. '    
' → logprob: -3.7819902896881104
    3. ' 
' → logprob: -5.656990051269531
    4. '    ' → logprob: -6.656990051269531
    5. 'def' → logprob: -6.781990051269531
    6. '
' → logprob: -7.281990051269531
    7. '\' → logprob: -7.406990051269531
    8. '\n' → logprob: -7.781990051269531
    9. '     
' → logprob: -8.406990051269531
    10. 'n' → logprob: -9.156990051269531

Token 330: ' deux' (ID: 10301)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04588647559285164
    2. '   ' → logprob: -3.795886516571045
    3. ' les' → logprob: -4.295886516571045
    4. '():' → logprob: -5.795886516571045
    5. ' la' → logprob: -6.045886516571045
    6. ' le' → logprob: -7.295886516571045
    7. 'import' → logprob: -7.420886516571045
    8. ' des' → logprob: -7.920886516571045
    9. ' ()' → logprob: -7.920886516571045
    10. ':' → logprob: -8.045886039733887

Token 331: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.0338263064622879
    2. ' integers' → logprob: -4.2838263511657715
    3. 'ent' → logprob: -4.5338263511657715
    4. ' nombres' → logprob: -4.7838263511657715
    5. 'inte' → logprob: -9.533825874328613
    6. ' entier' → logprob: -9.658825874328613
    7. 'n' → logprob: -10.033825874328613
    8. 'nombre' → logprob: -10.408825874328613
    9. ' numbers' → logprob: -10.533825874328613
    10. ' valeurs' → logprob: -10.658825874328613

Token 332: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.18347997963428497
    2. 'rees' → logprob: -1.8084800243377686
    3. 'r' → logprob: -7.1834797859191895
    4. 'ier' → logprob: -7.1834797859191895
    5. 'ries' → logprob: -7.1834797859191895
    6. 'ree' → logprob: -7.6834797859191895
    7. 'ières' → logprob: -8.183480262756348
    8. 'rée' → logprob: -8.183480262756348
    9. 'ées' → logprob: -9.308480262756348
    10. 'ieres' → logprob: -9.433480262756348

Token 333: ' depuis' (ID: 16277)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20339854061603546
    2. 'n' → logprob: -1.953398585319519
    3. ',' → logprob: -4.453398704528809
    4. ' ' → logprob: -4.703398704528809
    5. '(n' → logprob: -4.703398704528809
    6. ' (' → logprob: -5.703398704528809
    7. ' ,' → logprob: -6.578398704528809
    8. ' sépar' → logprob: -6.828398704528809
    9. ' )' → logprob: -6.953398704528809
    10. ' en' → logprob: -7.328398704528809

Token 334: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.899612307548523
    2. ' input' → logprob: -1.149612307548523
    3. ' l' → logprob: -1.774612307548523
    4. 'input' → logprob: -2.2746124267578125
    5. ' la' → logprob: -6.2746124267578125
    6. 'la' → logprob: -6.6496124267578125
    7. '   ' → logprob: -8.274612426757812
    8. 'une' → logprob: -8.649612426757812
    9. 'entrée' → logprob: -9.649612426757812
    10. ' stdin' → logprob: -9.649612426757812

Token 335: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.04656928405165672
    2. 'input' → logprob: -3.671569347381592
    3. 'entrée' → logprob: -4.671569347381592
    4. 'a' → logprob: -5.046569347381592
    5. ''' → logprob: -6.046569347381592
    6. 'e' → logprob: -6.421569347381592
    7. 'es' → logprob: -9.671568870544434
    8. ''utilisateur' → logprob: -9.921568870544434
    9. '’entrée' → logprob: -10.171568870544434
    10. ''ent' → logprob: -10.296568870544434

Token 336: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.08573783934116364
    2. 'standard' → logprob: -3.710737943649292
    3. ' utilisateur' → logprob: -3.960737943649292
    4. '()' → logprob: -4.085737705230713
    5. ',' → logprob: -4.335737705230713
    6. ' ' → logprob: -5.710737705230713
    7. '   ' → logprob: -6.210737705230713
    8. ' ,' → logprob: -7.085737705230713
    9. ' user' → logprob: -7.585737705230713
    10. 'user' → logprob: -8.460738182067871

Token 337: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017472494393587112
    2. '   ' → logprob: -4.767472267150879
    3. ' ,' → logprob: -4.892472267150879
    4. '.' → logprob: -7.642472267150879
    5. ' et' → logprob: -7.767472267150879
    6. ' ' → logprob: -9.517472267150879
    7. ' (' → logprob: -9.642472267150879
    8. '()' → logprob: -9.892472267150879
    9. ',
' → logprob: -10.017472267150879
    10. '(),' → logprob: -10.142472267150879

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17674989998340607
    2. ' puis' → logprob: -2.4267499446868896
    3. ' les' → logprob: -2.8017499446868896
    4. ' et' → logprob: -5.0517497062683105
    5. ' calculates' → logprob: -6.0517497062683105
    6. ' calculate' → logprob: -7.6767497062683105
    7. ',' → logprob: -7.6767497062683105
    8. 'p' → logprob: -8.051750183105469
    9. ' calc' → logprob: -8.051750183105469
    10. ' appelle' → logprob: -8.301750183105469

Token 339: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06997900456190109
    2. ' n' → logprob: -3.319978952407837
    3. ' puis' → logprob: -4.819979190826416
    4. ' les' → logprob: -5.194979190826416
    5. '    ' → logprob: -5.944979190826416
    6. ' et' → logprob: -6.194979190826416
    7. 'n' → logprob: -6.319979190826416
    8. ' continue' → logprob: -6.694979190826416
    9. ' calculates' → logprob: -6.694979190826416
    10. 'def' → logprob: -6.819979190826416

Token 340: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0005871102912351489
    2. 'ul' → logprob: -7.625586986541748
    3. 'ulé' → logprob: -9.875587463378906
    4. 'ure' → logprob: -11.125587463378906
    5. 'cule' → logprob: -11.250587463378906
    6. 'ère' → logprob: -12.125587463378906
    7. 'u' → logprob: -12.500587463378906
    8. 'ulate' → logprob: -13.000587463378906
    9. '   ' → logprob: -13.375587463378906
    10. 'ules' → logprob: -13.875587463378906

Token 341: ' et' (ID: 859)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.814844012260437
    2. ' les' → logprob: -1.189844012260437
    3. ' et' → logprob: -1.564844012260437
    4. '   ' → logprob: -4.314844131469727
    5. ' la' → logprob: -4.939844131469727
    6. '<|end|>' → logprob: -5.064844131469727
    7. ' ' → logprob: -5.314844131469727
    8. '_' → logprob: -5.939844131469727
    9. 'les' → logprob: -6.814844131469727
    10. '  ' → logprob: -7.064844131469727

Token 342: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.04669307917356491
    2. ' print' → logprob: -3.5466930866241455
    3. ' imprime' → logprob: -4.546692848205566
    4. 'print' → logprob: -5.796692848205566
    5. ' les' → logprob: -6.796692848205566
    6. 'aff' → logprob: -6.796692848205566
    7. '   ' → logprob: -7.546692848205566
    8. ' affich' → logprob: -8.921692848205566
    9. ' afficher' → logprob: -9.296692848205566
    10. ' prints' → logprob: -10.171692848205566

Token 343: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.1760111004114151
    2. '(' → logprob: -1.926011085510254
    3. ' la' → logprob: -4.301011085510254
    4. ' les' → logprob: -7.176011085510254
    5. '()' → logprob: -8.051011085510254
    6. '(
' → logprob: -8.176011085510254
    7. 'le' → logprob: -9.051011085510254
    8. '("' → logprob: -9.051011085510254
    9. '   ' → logprob: -9.801011085510254
    10. '(len' → logprob: -9.801011085510254

Token 344: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.026379842311143875
    2. ' nombre' → logprob: -3.6513798236846924
    3. 'rés' → logprob: -10.276379585266113
    4. 'result' → logprob: -10.901379585266113
    5. ' résultat' → logprob: -10.901379585266113
    6. '_nombre' → logprob: -12.776379585266113
    7. ' nombres' → logprob: -13.526379585266113
    8. 'nb' → logprob: -14.276379585266113
    9. 'Nombre' → logprob: -14.276379585266113
    10. 'n' → logprob: -14.401379585266113

Token 345: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03824642673134804
    2. ' total' → logprob: -3.4132463932037354
    3. ' d' → logprob: -5.9132466316223145
    4. '_' → logprob: -7.9132466316223145
    5. 'de' → logprob: -8.038246154785156
    6. ' ' → logprob: -8.288246154785156
    7. 'total' → logprob: -8.288246154785156
    8. '  ' → logprob: -8.913246154785156
    9. '_total' → logprob: -9.163246154785156
    10. ' des' → logprob: -9.288246154785156

Token 346: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.08933135122060776
    2. 'p' → logprob: -2.4643313884735107
    3. ' pairs' → logprob: -8.21433162689209
    4. 'pairs' → logprob: -9.33933162689209
    5. ' ' → logprob: -11.08933162689209
    6. 'pa' → logprob: -12.33933162689209
    7. ' paire' → logprob: -13.08933162689209
    8. '	p' → logprob: -13.08933162689209
    9. 'pair' → logprob: -13.33933162689209
    10. '_pairs' → logprob: -13.46433162689209

Token 347: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0020912576001137495
    2. 'a' → logprob: -6.752091407775879
    3. 'airs' → logprob: -7.377091407775879
    4. 'air' → logprob: -9.002091407775879
    5. 'ai' → logprob: -9.127091407775879
    6. '_' → logprob: -11.377091407775879
    7. ' a' → logprob: -11.502091407775879
    8. 'aire' → logprob: -11.627091407775879
    9. 'ares' → logprob: -12.252091407775879
    10. ' p' → logprob: -12.502091407775879

Token 348: ' possibles' (ID: 97753)
  Prédit: ' possibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.5802972912788391
    2. ' possible' → logprob: -0.9552972912788391
    3. 'possible' → logprob: -3.5802972316741943
    4. '(' → logprob: -4.080297470092773
    5. 'poss' → logprob: -5.205297470092773
    6. '   ' → logprob: -6.205297470092773
    7. '()' → logprob: -7.330297470092773
    8. '_possible' → logprob: -7.455297470092773
    9. 'Possible' → logprob: -8.205297470092773
    10. ' posibles' → logprob: -8.205297470092773

Token 349: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02459658868610859
    2. '.' → logprob: -4.649596691131592
    3. '(n' → logprob: -5.024596691131592
    4. ' entre' → logprob: -5.899596691131592
    5. ' dans' → logprob: -6.649596691131592
    6. '    
' → logprob: -7.399596691131592
    7. ' ' → logprob: -7.524596691131592
    8. ' en' → logprob: -7.524596691131592
    9. '(' → logprob: -7.774596691131592
    10. 'dans' → logprob: -8.024596214294434

Token 350: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5950433611869812
    2. ' une' → logprob: -1.220043420791626
    3. 'la' → logprob: -2.470043420791626
    4. 'une' → logprob: -2.845043420791626
    5. 'l' → logprob: -5.595043182373047
    6. '   ' → logprob: -6.095043182373047
    7. ' n' → logprob: -6.220043182373047
    8. 'n' → logprob: -6.970043182373047
    9. ' ' → logprob: -7.845043182373047
    10. ' un' → logprob: -8.470043182373047

Token 351: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.4322901666164398
    2. ' grille' → logprob: -1.0572901964187622
    3. 'n' → logprob: -6.932290077209473
    4. ' gr' → logprob: -7.432290077209473
    5. 'grid' → logprob: -7.557290077209473
    6. ' n' → logprob: -7.807290077209473
    7. ' ' → logprob: -8.057290077209473
    8. 'ligne' → logprob: -8.557290077209473
    9. ' grid' → logprob: -9.182290077209473
    10. '   ' → logprob: -9.807290077209473

Token 352: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.060973357409238815
    2. ' de' → logprob: -3.8109734058380127
    3. '   ' → logprob: -3.9359734058380127
    4. ' ' → logprob: -4.810973167419434
    5. 'n' → logprob: -5.435973167419434
    6. '(n' → logprob: -5.810973167419434
    7. ' selon' → logprob: -7.935973167419434
    8. ' ,' → logprob: -7.935973167419434
    9. ',' → logprob: -8.060973167419434
    10. ' (' → logprob: -8.435973167419434

Token 353: ' taille' (ID: 41644)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3581416606903076
    2. ' ' → logprob: -2.1081416606903076
    3. 'n' → logprob: -2.2331416606903076
    4. ' taille' → logprob: -2.8581416606903076
    5. ' dimensions' → logprob: -5.358141899108887
    6. ' tailles' → logprob: -5.858141899108887
    7. 'dimensions' → logprob: -6.608141899108887
    8. 'tail' → logprob: -6.858141899108887
    9. ' size' → logprob: -7.358141899108887
    10. ' deux' → logprob: -7.608141899108887

Token 354: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007302763871848583
    2. 'n' → logprob: -5.007302761077881
    3. ' ' → logprob: -7.757302761077881
    4. ' ' → logprob: -9.507303237915039
    5. '"' → logprob: -10.507303237915039
    6. '(n' → logprob: -11.132303237915039
    7. ' nx' → logprob: -11.632303237915039
    8. ''' → logprob: -12.257303237915039
    9. '1' → logprob: -12.507303237915039
    10. ' de' → logprob: -12.507303237915039

Token 355: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.010791475884616375
    2. ' ' → logprob: -4.760791301727295
    3. 'x' → logprob: -6.760791301727295
    4. ',' → logprob: -7.635791301727295
    5. '   ' → logprob: -7.760791301727295
    6. ' ,' → logprob: -10.260791778564453
    7. ' ×' → logprob: -10.385791778564453
    8. ' et' → logprob: -11.635791778564453
    9. '  ' → logprob: -12.135791778564453
    10. '*' → logprob: -12.135791778564453

Token 356: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5759437084197998
    2. ' m' → logprob: -0.8259437084197998
    3. ' ' → logprob: -12.700943946838379
    4. ' ' → logprob: -14.700943946838379
    5. '   ' → logprob: -14.825943946838379
    6. '	m' → logprob: -15.075943946838379
    7. '```' → logprob: -16.825942993164062
    8. ' м' → logprob: -17.888442993164062
    9. '_m' → logprob: -18.138442993164062
    10. 'м' → logprob: -18.200942993164062

Token 357: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01999950408935547
    2. ')' → logprob: -4.6449995040893555
    3. '.' → logprob: -4.7699995040893555
    4. ' ' → logprob: -7.6449995040893555
    5. ',' → logprob: -7.8949995040893555
    6. '
' → logprob: -8.519999504089355
    7. '):' → logprob: -8.894999504089355
    8. ' )' → logprob: -9.394999504089355
    9. ')
' → logprob: -9.769999504089355
    10. ').' → logprob: -9.769999504089355

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040183294913731515
    2. '    
' → logprob: -8.125401496887207
    3. 'import' → logprob: -10.000401496887207
    4. '
' → logprob: -10.125401496887207
    5. '    ' → logprob: -11.625401496887207
    6. 'def' → logprob: -12.500401496887207
    7. '```' → logprob: -12.750401496887207
    8. 'n' → logprob: -13.000401496887207
    9. '"""' → logprob: -14.625401496887207
    10. ' 
' → logprob: -15.000401496887207

Token 359: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005707289092242718
    2. '    
' → logprob: -5.755707263946533
    3. '
' → logprob: -6.130707263946533
    4. 'n' → logprob: -8.630707740783691
    5. '\n' → logprob: -10.255707740783691
    6. '  
' → logprob: -10.505707740783691
    7. '```' → logprob: -10.505707740783691
    8. '   
' → logprob: -10.630707740783691
    9. 'import' → logprob: -11.505707740783691
    10. '\' → logprob: -11.630707740783691

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015616427408531308
    2. 'n' → logprob: -6.501561641693115
    3. ' n' → logprob: -10.001562118530273
    4. '	n' → logprob: -11.751562118530273
    5. 'import' → logprob: -12.126562118530273
    6. 'try' → logprob: -15.251562118530273
    7. '
' → logprob: -15.751562118530273
    8. '   ' → logprob: -15.751562118530273
    9. '```' → logprob: -16.376562118530273
    10. '    
' → logprob: -17.001562118530273

Token 361: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009002620354294777
    2. ' n' → logprob: -7.2509002685546875
    3. 'import' → logprob: -9.125900268554688
    4. '   ' → logprob: -9.500900268554688
    5. 'try' → logprob: -12.000900268554688
    6. '```' → logprob: -15.625900268554688
    7. '    
' → logprob: -15.875900268554688
    8. ' import' → logprob: -16.000900268554688
    9. '	n' → logprob: -16.875900268554688
    10. ' try' → logprob: -17.500900268554688

Token 362: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017174329608678818
    2. ' n' → logprob: -4.142174243927002
    3. 'import' → logprob: -7.017174243927002
    4. 'line' → logprob: -9.26717472076416
    5. 'inputs' → logprob: -10.39217472076416
    6. '   ' → logprob: -10.51717472076416
    7. 'try' → logprob: -11.26717472076416
    8. ' import' → logprob: -11.26717472076416
    9. ' line' → logprob: -11.26717472076416
    10. 'values' → logprob: -11.39217472076416

Token 363: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0710844993591309
    2. '   ' → logprob: -1.0710844993591309
    3. ' n' → logprob: -1.1960844993591309
    4. '(n' → logprob: -5.196084499359131
    5. ' des' → logprob: -5.571084499359131
    6. '    
' → logprob: -6.696084499359131
    7. '()' → logprob: -7.071084499359131
    8. '	n' → logprob: -8.571084976196289
    9. 'import' → logprob: -9.321084976196289
    10. ' de' → logprob: -9.446084976196289

Token 364: ' deux' (ID: 10301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4299620985984802
    2. ' n' → logprob: -1.054962158203125
    3. 'l' → logprob: -7.804962158203125
    4. 'input' → logprob: -8.304962158203125
    5. ' la' → logprob: -9.054962158203125
    6. 'line' → logprob: -9.554962158203125
    7. ' line' → logprob: -9.679962158203125
    8. ' input' → logprob: -9.804962158203125
    9. '   ' → logprob: -9.929962158203125
    10. ' deux' → logprob: -9.929962158203125

Token 365: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.3941761553287506
    2. 'n' → logprob: -2.1441762447357178
    3. ' n' → logprob: -2.1441762447357178
    4. 'ent' → logprob: -2.7691762447357178
    5. ' integers' → logprob: -4.019176006317139
    6. ' nombres' → logprob: -5.019176006317139
    7. 'inte' → logprob: -6.894176006317139
    8. ' ' → logprob: -6.894176006317139
    9. ' valeurs' → logprob: -7.394176006317139
    10. ' lignes' → logprob: -7.644176006317139

Token 366: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -5.2166411478538066e-05
    2. 'r' → logprob: -10.750052452087402
    3. 'ier' → logprob: -11.625052452087402
    4. 'ières' → logprob: -11.875052452087402
    5. 'ers' → logprob: -12.125052452087402
    6. '   ' → logprob: -13.000052452087402
    7. 'er' → logprob: -13.750052452087402
    8. 'i' → logprob: -13.750052452087402
    9. 't' → logprob: -14.000052452087402
    10. 'rees' → logprob: -14.125052452087402

Token 367: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3170534074306488
    2. ' n' → logprob: -1.3170534372329712
    3. '   ' → logprob: -5.692053318023682
    4. '(n' → logprob: -9.19205379486084
    5. '    
' → logprob: -9.31705379486084
    6. ' line' → logprob: -9.44205379486084
    7. ' 
' → logprob: -10.44205379486084
    8. ' (' → logprob: -10.81705379486084
    9. '	n' → logprob: -11.06705379486084
    10. '
' → logprob: -11.19205379486084

Token 368: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03146450221538544
    2. 'é' → logprob: -3.5314645767211914
    3. ' par' → logprob: -7.531464576721191
    4. 'par' → logprob: -7.656464576721191
    5. 'es' → logprob: -8.156464576721191
    6. 'e' → logprob: -8.781464576721191
    7. 'er' → logprob: -9.656464576721191
    8. 'ée' → logprob: -9.781464576721191
    9. 'ées' → logprob: -9.781464576721191
    10. 'É' → logprob: -11.031464576721191

Token 369: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.18633109331130981
    2. 'par' → logprob: -2.311331033706665
    3. '()' → logprob: -2.936331033706665
    4. 'e' → logprob: -4.811331272125244
    5. '   ' → logprob: -6.186331272125244
    6. 'n' → logprob: -6.436331272125244
    7. ',' → logprob: -6.811331272125244
    8. ' by' → logprob: -7.186331272125244
    9. 'es' → logprob: -7.311331272125244
    10. ')' → logprob: -7.311331272125244

Token 370: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1676894724369049
    2. 'un' → logprob: -2.292689561843872
    3. ' une' → logprob: -4.042689323425293
    4. ' espace' → logprob: -4.042689323425293
    5. ' ' → logprob: -5.417689323425293
    6. 'space' → logprob: -5.917689323425293
    7. ' l' → logprob: -6.292689323425293
    8. ' ' → logprob: -6.292689323425293
    9. 'l' → logprob: -6.417689323425293
    10. 'une' → logprob: -6.542689323425293

Token 371: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.2965603768825531
    2. ''espace' → logprob: -1.7965604066848755
    3. 'es' → logprob: -3.171560287475586
    4. 'space' → logprob: -3.671560287475586
    5. ' space' → logprob: -4.796560287475586
    6. '’espace' → logprob: -5.421560287475586
    7. ' ' → logprob: -5.546560287475586
    8. ''' → logprob: -5.796560287475586
    9. 'esp' → logprob: -6.796560287475586
    10. ' espaces' → logprob: -7.421560287475586

Token 372: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029985010623931885
    2. ' n' → logprob: -4.029984951019287
    3. '   ' → logprob: -4.654984951019287
    4. ' line' → logprob: -6.779984951019287
    5. 'input' → logprob: -8.154985427856445
    6. 'line' → logprob: -8.404985427856445
    7. '    
' → logprob: -9.029985427856445
    8. '
' → logprob: -9.154985427856445
    9. '  
' → logprob: -9.779985427856445
    10. '(n' → logprob: -9.779985427856445

Token 373: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07195776700973511
    2. '   ' → logprob: -2.82195782661438
    3. ' n' → logprob: -4.696957588195801
    4. 'line' → logprob: -8.0719575881958
    5. ' line' → logprob: -8.1969575881958
    6. 'input' → logprob: -9.1969575881958
    7. '    
' → logprob: -9.4469575881958
    8. 'ligne' → logprob: -11.1969575881958
    9. '	n' → logprob: -11.9469575881958
    10. '
' → logprob: -12.4469575881958

Token 374: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011623364873230457
    2. ' n' → logprob: -4.511623382568359
    3. 'line' → logprob: -7.886623382568359
    4. '   ' → logprob: -9.26162338256836
    5. ' line' → logprob: -9.63662338256836
    6. 'input' → logprob: -11.01162338256836
    7. 'ligne' → logprob: -11.13662338256836
    8. 'user' → logprob: -13.26162338256836
    9. ' ligne' → logprob: -13.26162338256836
    10. 'inputs' → logprob: -13.38662338256836

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ',m' → logprob: -11.750011444091797
    3. ' ,' → logprob: -12.625011444091797
    4. 'm' → logprob: -15.750011444091797
    5. ',
' → logprob: -17.125011444091797
    6. 's' → logprob: -18.125011444091797
    7. ',n' → logprob: -18.125011444091797
    8. '_,' → logprob: -18.750011444091797
    9. ',s' → logprob: -19.250011444091797
    10. ' =' → logprob: -19.250011444091797

Token 376: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.07890433073043823
    2. 'm' → logprob: -2.578904390335083
    3. ' ' → logprob: -11.578904151916504
    4. ' =' → logprob: -13.328904151916504
    5. '=' → logprob: -13.828904151916504
    6. ' ' → logprob: -14.203904151916504
    7. '  ' → logprob: -14.828904151916504
    8. '	m' → logprob: -15.078904151916504
    9. 'space' → logprob: -15.328904151916504
    10. '=m' → logprob: -15.578904151916504

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488555505871773
    2. '=' → logprob: -2.9298856258392334
    3. ')' → logprob: -13.554885864257812
    4. '=input' → logprob: -13.679885864257812
    5. '=int' → logprob: -15.554885864257812
    6. ')=' → logprob: -15.929885864257812
    7. ',' → logprob: -16.179885864257812
    8. ' ' → logprob: -16.429885864257812
    9. ' =
' → logprob: -16.804885864257812
    10. ' ' → logprob: -17.054885864257812

Token 378: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01815205067396164
    2. 'map' → logprob: -4.018152236938477
    3. ' ' → logprob: -13.893152236938477
    4. '	map' → logprob: -14.643152236938477
    5. ' ' → logprob: -15.393152236938477
    6. '[' → logprob: -15.768152236938477
    7. ' [' → logprob: -16.268152236938477
    8. '(map' → logprob: -16.268152236938477
    9. ' input' → logprob: -16.268152236938477
    10. ' list' → logprob: -16.518152236938477

Token 379: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009231308358721435
    2. '(' → logprob: -7.000923156738281
    3. 'int' → logprob: -12.000923156738281
    4. '(input' → logprob: -12.250923156738281
    5. '(str' → logprob: -15.125923156738281
    6. ' (' → logprob: -15.375923156738281
    7. '=int' → logprob: -17.00092315673828
    8. ' int' → logprob: -17.25092315673828
    9. '[int' → logprob: -17.25092315673828
    10. '(
' → logprob: -17.50092315673828

Token 380: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6983942985534668
    2. '(input' → logprob: -0.6983942985534668
    3. ',input' → logprob: -6.198394298553467
    4. ' input' → logprob: -6.448394298553467
    5. ')' → logprob: -7.073394298553467
    6. '(' → logprob: -7.323394298553467
    7. '   ' → logprob: -9.698394775390625
    8. ',' → logprob: -11.198394775390625
    9. '=input' → logprob: -11.198394775390625
    10. '	input' → logprob: -12.073394775390625

Token 381: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. '(input' → logprob: -17.883615493774414
    4. '	input' → logprob: -19.008615493774414
    5. '   ' → logprob: -19.133615493774414
    6. ' ' → logprob: -19.633615493774414
    7. '=input' → logprob: -19.883615493774414
    8. ')' → logprob: -20.383615493774414
    9. '<input' → logprob: -20.383615493774414
    10. ',input' → logprob: -20.383615493774414

Token 382: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3306015716807451e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -15.87501335144043
    4. '(' → logprob: -16.75001335144043
    5. '()
' → logprob: -17.75001335144043
    6. '("").' → logprob: -19.37501335144043
    7. '("' → logprob: -20.12501335144043
    8. '())' → logprob: -20.25001335144043
    9. '().
' → logprob: -20.62501335144043
    10. '.split' → logprob: -21.12501335144043

Token 383: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002476135268807411
    2. 'strip' → logprob: -6.002476215362549
    3. ' split' → logprob: -15.37747573852539
    4. '(split' → logprob: -15.87747573852539
    5. 'rstrip' → logprob: -16.25247573852539
    6. '().' → logprob: -17.25247573852539
    7. 'spl' → logprob: -17.62747573852539
    8. 'read' → logprob: -18.87747573852539
    9. '.split' → logprob: -19.00247573852539
    10. '_split' → logprob: -19.00247573852539

Token 384: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007959235459566116
    2. '()))' → logprob: -5.382959365844727
    3. '()' → logprob: -5.882959365844727
    4. ')' → logprob: -7.632959365844727
    5. '))' → logprob: -10.382959365844727
    6. '(' → logprob: -10.632959365844727
    7. '('' → logprob: -12.632959365844727
    8. ' ())' → logprob: -13.132959365844727
    9. '())
' → logprob: -14.507959365844727
    10. '()))
' → logprob: -14.632959365844727

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014566082507371902
    2. 'print' → logprob: -4.889565944671631
    3. 'result' → logprob: -5.139565944671631
    4. '    
' → logprob: -7.639565944671631
    5. '
' → logprob: -8.389566421508789
    6. 'pairs' → logprob: -9.139566421508789
    7. ' result' → logprob: -9.514566421508789
    8. ' print' → logprob: -9.764566421508789
    9. '```' → logprob: -10.264566421508789
    10. '  
' → logprob: -10.514566421508789

Token 386: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4383543133735657
    2. '   ' → logprob: -1.563354253768921
    3. ' result' → logprob: -2.438354253768921
    4. 'pairs' → logprob: -3.438354253768921
    5. ' pairs' → logprob: -4.3133544921875
    6. 'print' → logprob: -4.5633544921875
    7. ' print' → logprob: -6.8133544921875
    8. ' p' → logprob: -8.5633544921875
    9. '
' → logprob: -8.5633544921875
    10. 'p' → logprob: -8.8133544921875

Token 387: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07707558572292328
    2. 'pairs' → logprob: -3.202075481414795
    3. 'result' → logprob: -3.452075481414795
    4. ' print' → logprob: -6.952075481414795
    5. 'p' → logprob: -7.577075481414795
    6. ' pairs' → logprob: -8.452075958251953
    7. ' result' → logprob: -9.202075958251953
    8. ' p' → logprob: -11.202075958251953
    9. 'res' → logprob: -11.577075958251953
    10. 'results' → logprob: -12.577075958251953

Token 388: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1972229927778244
    2. 'result' → logprob: -2.197222948074341
    3. '_pairs' → logprob: -3.572222948074341
    4. ' des' → logprob: -3.947222948074341
    5. ' result' → logprob: -4.69722318649292
    6. '<|end|>' → logprob: -5.69722318649292
    7. 'pairs' → logprob: -5.82222318649292
    8. ' pairs' → logprob: -6.82222318649292
    9. 'des' → logprob: -6.82222318649292
    10. '_result' → logprob: -6.94722318649292

Token 389: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5905824303627014
    2. 'pairs' → logprob: -0.8405824303627014
    3. 'print' → logprob: -4.340582370758057
    4. ' result' → logprob: -6.840582370758057
    5. ' pairs' → logprob: -8.340582847595215
    6. 'calculate' → logprob: -8.965582847595215
    7. 'p' → logprob: -10.215582847595215
    8. 'count' → logprob: -11.840582847595215
    9. 'total' → logprob: -12.090582847595215
    10. 'nombre' → logprob: -12.340582847595215

Token 390: ' avec' (ID: 3937)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.49655455350875854
    2. ' result' → logprob: -1.3715546131134033
    3. '   ' → logprob: -1.9965546131134033
    4. '	result' → logprob: -7.621554374694824
    5. ' pairs' → logprob: -8.246554374694824
    6. ' resultat' → logprob: -8.746554374694824
    7. '_result' → logprob: -8.871554374694824
    8. ' résultat' → logprob: -8.996554374694824
    9. '    
' → logprob: -9.121554374694824
    10. '<|end|>' → logprob: -9.371554374694824

Token 391: ' la' (ID: 557)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.01884823478758335
    2. 'print' → logprob: -4.018848419189453
    3. ' calculate' → logprob: -7.268848419189453
    4. ' print' → logprob: -13.768848419189453
    5. '.calculate' → logprob: -17.268848419189453
    6. 'alculate' → logprob: -17.268848419189453
    7. 'calcul' → logprob: -17.893848419189453
    8. '   ' → logprob: -18.518848419189453
    9. 'calc' → logprob: -19.143848419189453
    10. 'Calculate' → logprob: -19.518848419189453

Token 392: ' fonction' (ID: 17610)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -7.755678961984813e-05
    2. ' calculate' → logprob: -9.500077247619629
    3. 'print' → logprob: -13.875077247619629
    4. 'calcul' → logprob: -14.000077247619629
    5. 'result' → logprob: -14.375077247619629
    6. 'calc' → logprob: -16.250078201293945
    7. '.calculate' → logprob: -16.625078201293945
    8. 'cal' → logprob: -16.750078201293945
    9. 'compute' → logprob: -17.125078201293945
    10. 'alculate' → logprob: -17.250078201293945

Token 393: ' dédiée' (ID: 183679)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.3234323263168335
    2. ' calculate' → logprob: -1.5734323263168335
    3. 'result' → logprob: -3.073432445526123
    4. ' result' → logprob: -3.948432445526123
    5. 'pairs' → logprob: -6.448432445526123
    6. 'print' → logprob: -6.948432445526123
    7. ' pairs' → logprob: -7.573432445526123
    8. '   ' → logprob: -8.948431968688965
    9. ' resultat' → logprob: -9.573431968688965
    10. '_pairs' → logprob: -9.698431968688965

Token 394: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7613912224769592
    2. 'result' → logprob: -0.8863912224769592
    3. ' result' → logprob: -2.1363911628723145
    4. 'print' → logprob: -6.6363911628723145
    5. ' print' → logprob: -7.7613911628723145
    6. '    
' → logprob: -8.261391639709473
    7. '	result' → logprob: -9.011391639709473
    8. ' resultat' → logprob: -9.136391639709473
    9. '
' → logprob: -9.386391639709473
    10. '<|end|>' → logprob: -9.761391639709473

Token 395: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.22312848269939423
    2. 'result' → logprob: -1.7231284379959106
    3. '   ' → logprob: -3.8481285572052
    4. ' resultat' → logprob: -9.348128318786621
    5. ' résultat' → logprob: -10.473128318786621
    6. ' resultado' → logprob: -11.223128318786621
    7. ' print' → logprob: -11.848128318786621
    8. ' res' → logprob: -12.223128318786621
    9. '_result' → logprob: -12.348128318786621
    10. '	result' → logprob: -12.598128318786621

Token 396: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.06263020634651184
    2. ' result' → logprob: -2.8126301765441895
    3. 'print' → logprob: -7.5626301765441895
    4. 'pairs' → logprob: -9.937630653381348
    5. '   ' → logprob: -10.437630653381348
    6. ' print' → logprob: -10.562630653381348
    7. 'res' → logprob: -10.937630653381348
    8. ' resultat' → logprob: -11.187630653381348
    9. ' pairs' → logprob: -12.812630653381348
    10. ' résultat' → logprob: -13.562630653381348

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144200325012207
    2. '=' → logprob: -1.701442003250122
    3. ')' → logprob: -10.951441764831543
    4. '_' → logprob: -12.076441764831543
    5. '   ' → logprob: -13.701441764831543
    6. '  ' → logprob: -14.076441764831543
    7. ',' → logprob: -14.201441764831543
    8. 's' → logprob: -14.701441764831543
    9. ' ' → logprob: -14.701441764831543
    10. ' =
' → logprob: -14.826441764831543

Token 398: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.004078401252627373
    2. ' calculate' → logprob: -5.504078388214111
    3. '.calculate' → logprob: -19.504077911376953
    4. 'compute' → logprob: -21.504077911376953
    5. 'alculate' → logprob: -21.629077911376953
    6. 'calc' → logprob: -21.629077911376953
    7. 'calcul' → logprob: -21.629077911376953
    8. '   ' → logprob: -22.379077911376953
    9. 'Calculate' → logprob: -22.879077911376953
    10. 'cal' → logprob: -23.129077911376953

Token 399: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -12.625003814697266
    3. '_p' → logprob: -15.125003814697266
    4. ' _' → logprob: -16.000003814697266
    5. '_pair' → logprob: -17.125003814697266
    6. '_parts' → logprob: -18.000003814697266
    7. 'pairs' → logprob: -18.125003814697266
    8. '_par' → logprob: -19.125003814697266
    9. '```' → logprob: -19.250003814697266
    10. '_pa' → logprob: -19.250003814697266

Token 400: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.333223139634356e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -13.125033378601074
    4. '(
' → logprob: -17.250032424926758
    5. '(m' → logprob: -18.625032424926758
    6. '((' → logprob: -20.125032424926758
    7. ' ' → logprob: -20.250032424926758
    8. '(s' → logprob: -21.000032424926758
    9. '```' → logprob: -21.250032424926758
    10. '(N' → logprob: -21.625032424926758

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ',m' → logprob: -12.000009536743164
    3. ' ,' → logprob: -12.625009536743164
    4. ',
' → logprob: -15.500009536743164
    5. 'm' → logprob: -19.750009536743164
    6. '‌,' → logprob: -19.875009536743164
    7. ',

' → logprob: -20.125009536743164
    8. '   ' → logprob: -20.250009536743164
    9. ')' → logprob: -21.125009536743164
    10. ',n' → logprob: -21.375009536743164

Token 402: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078401252627373
    2. ' m' → logprob: -5.504078388214111
    3. ')m' → logprob: -21.379077911376953
    4. ')' → logprob: -22.879077911376953
    5. '	m' → logprob: -23.004077911376953
    6. ' м' → logprob: -23.879077911376953
    7. 'м' → logprob: -24.129077911376953
    8. ' ' → logprob: -24.129077911376953
    9. '_m' → logprob: -24.754077911376953
    10. '   ' → logprob: -24.879077911376953

Token 403: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005536287208087742
    2. ')
' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.000554084777832
    4. ')
' → logprob: -15.625554084777832
    5. ' )' → logprob: -15.750554084777832
    6. ')`' → logprob: -16.875553131103516
    7. ')

' → logprob: -17.750553131103516
    8. ')`
' → logprob: -18.500553131103516
    9. ' ' → logprob: -18.875553131103516
    10. '),' → logprob: -18.875553131103516

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024013672024011612
    2. 'print' → logprob: -3.7740137577056885
    3. '
' → logprob: -7.649013519287109
    4. ' print' → logprob: -8.52401351928711
    5. '    
' → logprob: -9.39901351928711
    6. '```' → logprob: -11.89901351928711
    7. '  
' → logprob: -13.77401351928711
    8. '	print' → logprob: -14.02401351928711
    9. ' 
' → logprob: -14.77401351928711
    10. '
' → logprob: -15.64901351928711

Token 405: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07291553169488907
    2. '   ' → logprob: -2.822915554046631
    3. ' print' → logprob: -4.572915554046631
    4. '
' → logprob: -7.572915554046631
    5. '```' → logprob: -10.197915077209473
    6. '    
' → logprob: -11.822915077209473
    7. '	print' → logprob: -14.572915077209473
    8. '  
' → logprob: -15.322915077209473
    9. ' 
' → logprob: -15.447915077209473
    10. '\n' → logprob: -16.19791603088379

Token 406: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.676292231422849e-05
    2. ' print' → logprob: -11.000017166137695
    3. '   ' → logprob: -21.625017166137695
    4. '```' → logprob: -24.625017166137695
    5. 'Print' → logprob: -25.250017166137695
    6. 'pr' → logprob: -25.875017166137695
    7. '	print' → logprob: -26.625017166137695
    8. 'prin' → logprob: -26.875017166137695
    9. 'printf' → logprob: -27.500017166137695
    10. '#print' → logprob: -27.625017166137695

Token 407: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.21218574047088623
    2. 'icher' → logprob: -1.7121857404708862
    3. 'ich' → logprob: -4.587185859680176
    4. 'ic' → logprob: -8.337185859680176
    5. 'ichage' → logprob: -8.587185859680176
    6. '   ' → logprob: -9.712185859680176
    7. 'print' → logprob: -10.587185859680176
    8. 'cher' → logprob: -11.962185859680176
    9. '#' → logprob: -12.337185859680176
    10. 'er' → logprob: -12.837185859680176

Token 408: ' du' (ID: 1462)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5760113000869751
    2. '(' → logprob: -0.8260113000869751
    3. '(f' → logprob: -10.076011657714844
    4. '   ' → logprob: -11.451011657714844
    5. 'result' → logprob: -12.201011657714844
    6. '(results' → logprob: -12.951011657714844
    7. '(output' → logprob: -13.076011657714844
    8. '(
' → logprob: -13.076011657714844
    9. '(print' → logprob: -13.451011657714844
    10. '("' → logprob: -13.701011657714844

Token 409: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0009114635176956654
    2. ' result' → logprob: -7.000911235809326
    3. '(result' → logprob: -17.500911712646484
    4. 'res' → logprob: -18.250911712646484
    5. 'results' → logprob: -19.375911712646484
    6. ' resultat' → logprob: -19.500911712646484
    7. 'resultado' → logprob: -20.125911712646484
    8. 'f' → logprob: -21.125911712646484
    9. 'r' → logprob: -21.250911712646484
    10. '"' → logprob: -21.250911712646484

Token 410: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005056333262473345
    2. '(' → logprob: -5.380056381225586
    3. 'print' → logprob: -8.380056381225586
    4. '()' → logprob: -10.005056381225586
    5. '(result' → logprob: -10.005056381225586
    6. ' print' → logprob: -10.380056381225586
    7. '(print' → logprob: -10.755056381225586
    8. '    
' → logprob: -10.880056381225586
    9. '\' → logprob: -11.505056381225586
    10. '("\' → logprob: -12.380056381225586

Token 411: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055972322821617126
    2. 'print' → logprob: -3.8059723377227783
    3. '
' → logprob: -3.9309723377227783
    4. '(' → logprob: -4.805972099304199
    5. '(print' → logprob: -6.180972099304199
    6. ' print' → logprob: -6.680972099304199
    7. '(result' → logprob: -7.805972099304199
    8. '    
' → logprob: -8.9309720993042
    9. '(
' → logprob: -9.0559720993042
    10. '```' → logprob: -9.3059720993042

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1802082359790802
    2. 'print' → logprob: -1.9302082061767578
    3. ' print' → logprob: -3.930208206176758
    4. '
' → logprob: -8.930208206176758
    5. '```' → logprob: -11.555208206176758
    6. '    
' → logprob: -13.180208206176758
    7. '(print' → logprob: -14.055208206176758
    8. '	print' → logprob: -14.180208206176758
    9. '.print' → logprob: -16.055208206176758
    10. '  ' → logprob: -16.055208206176758

Token 413: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00033558503491804004
    2. ' print' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.500335693359375
    4. 'pr' → logprob: -20.875335693359375
    5. '```' → logprob: -20.875335693359375
    6. 'prin' → logprob: -23.000335693359375
    7. '	print' → logprob: -23.250335693359375
    8. 'p' → logprob: -23.875335693359375
    9. '.print' → logprob: -24.125335693359375
    10. '
' → logprob: -24.375335693359375

Token 414: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.008615988306701183
    2. '(' → logprob: -4.758615970611572
    3. '(res' → logprob: -15.00861644744873
    4. '(resultado' → logprob: -15.13361644744873
    5. '(results' → logprob: -15.50861644744873
    6. '(f' → logprob: -15.63361644744873
    7. ' (' → logprob: -15.63361644744873
    8. '()' → logprob: -15.88361644744873
    9. 'result' → logprob: -16.633615493774414
    10. '(
' → logprob: -17.133615493774414

Token 415: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -15.75
    3. ')`' → logprob: -18.25
    4. '()' → logprob: -18.375
    5. '())' → logprob: -18.875
    6. '))' → logprob: -19.125
    7. '')' → logprob: -19.25
    8. '`)' → logprob: -19.75
    9. ')
' → logprob: -19.75
    10. '")' → logprob: -20.75

Token 416: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.1093578804284334e-05
    2. 'main' → logprob: -10.125051498413086
    3. ' if' → logprob: -12.125051498413086
    4. '
' → logprob: -12.375051498413086
    5. '#' → logprob: -14.000051498413086
    6. '```' → logprob: -15.125051498413086
    7. '<|end|>' → logprob: -15.750051498413086
    8. '\n' → logprob: -17.125051498413086
    9. '  
' → logprob: -17.875051498413086
    10. '\' → logprob: -18.000051498413086

Token 417: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016512172296643257
    2. '__' → logprob: -4.141512393951416
    3. ' ' → logprob: -7.891512393951416
    4. '_' → logprob: -9.641511917114258
    5. '_name' → logprob: -11.141511917114258
    6. ' _' → logprob: -12.016511917114258
    7. ' ' → logprob: -12.391511917114258
    8. ' ' → logprob: -12.766511917114258
    9. '___' → logprob: -13.141511917114258
    10. '​' → logprob: -13.266511917114258

Token 418: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10069948434829712
    2. ' ==' → logprob: -2.7256994247436523
    3. ' __' → logprob: -3.7256994247436523
    4. '==' → logprob: -5.350699424743652
    5. '_' → logprob: -7.475699424743652
    6. 'name' → logprob: -8.725699424743652
    7. '[' → logprob: -8.850699424743652
    8. ' _' → logprob: -9.725699424743652
    9. '.__' → logprob: -9.850699424743652
    10. '=="' → logprob: -9.850699424743652

Token 419: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9361264946837764e-07
    2. '==' → logprob: -16.125
    3. ' ==' → logprob: -16.75
    4. '__.__' → logprob: -17.0
    5. ' __' → logprob: -18.375
    6. '___' → logprob: -19.0
    7. '__.' → logprob: -19.625
    8. '_' → logprob: -20.0
    9. '__
' → logprob: -20.25
    10. '____' → logprob: -20.375

Token 420: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2998224198818207
    2. '==' → logprob: -2.0498223304748535
    3. ' ==' → logprob: -2.0498223304748535
    4. '=="' → logprob: -6.5498223304748535
    5. '_' → logprob: -9.924822807312012
    6. '=='' → logprob: -10.299822807312012
    7. '=' → logprob: -11.299822807312012
    8. '"' → logprob: -12.674822807312012
    9. '___' → logprob: -13.299822807312012
    10. '===' → logprob: -13.674822807312012

Token 421: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008662786334753036
    2. ''' → logprob: -4.758662700653076
    3. ' "__' → logprob: -10.008663177490234
    4. '__' → logprob: -12.883663177490234
    5. ' '__' → logprob: -14.758663177490234
    6. '"name' → logprob: -16.008663177490234
    7. '"user' → logprob: -16.508663177490234
    8. '"_' → logprob: -17.258663177490234
    9. '("__' → logprob: -18.008663177490234
    10. '"class' → logprob: -18.008663177490234

Token 422: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005548207554966211
    2. '__' → logprob: -7.500555038452148
    3. '_main' → logprob: -13.875555038452148
    4. 'name' → logprob: -14.250555038452148
    5. ' main' → logprob: -16.00055503845215
    6. '"' → logprob: -16.62555503845215
    7. '-main' → logprob: -17.87555503845215
    8. 'python' → logprob: -18.25055503845215
    9. '主' → logprob: -19.00055503845215
    10. '__":
' → logprob: -19.00055503845215

Token 423: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07890741527080536
    2. '__' → logprob: -2.5789074897766113
    3. '__':
' → logprob: -10.953907012939453
    4. '__["' → logprob: -16.578907012939453
    5. ' "__' → logprob: -17.078907012939453
    6. '__",' → logprob: -17.078907012939453
    7. '"' → logprob: -17.328907012939453
    8. '__:' → logprob: -17.828907012939453
    9. '__("' → logprob: -17.953907012939453
    10. '__
' → logprob: -18.328907012939453

Token 424: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07231368124485016
    2. 'main' → logprob: -2.6973137855529785
    3. '__' → logprob: -6.9473137855529785
    4. ' __' → logprob: -7.0723137855529785
    5. '   ' → logprob: -8.19731330871582
    6. '	main' → logprob: -8.57231330871582
    7. '"' → logprob: -9.94731330871582
    8. '_main' → logprob: -10.82231330871582
    9. ' ' → logprob: -11.69731330871582
    10. ' ' → logprob: -11.82231330871582

Token 425: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.3132876753807068
    2. ' main' → logprob: -1.3132877349853516
    3. '	main' → logprob: -10.813287734985352
    4. '   ' → logprob: -12.063287734985352
    5. '_main' → logprob: -16.93828773498535
    6. '(main' → logprob: -17.68828773498535
    7. '.main' → logprob: -18.81328773498535
    8. ' ' → logprob: -18.93828773498535
    9. 'Main' → logprob: -20.56328773498535
    10. ' ' → logprob: -20.93828773498535

Token 426: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 424
Tokens correctement prédits (1ère position, stricte): 148
Tokens correctement prédits (1ère position, avec adaptation): 159
Tokens correctement prédits (top 10): 315
Précision stricte (1ère position): 34.91%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 74.29%
================================================================================
