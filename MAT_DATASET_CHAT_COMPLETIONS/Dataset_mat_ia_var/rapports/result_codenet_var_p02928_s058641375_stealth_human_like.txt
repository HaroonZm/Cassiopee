================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, allons-y, voilà comment je ferais, c'est plus lisible, peut-être?
import collections

def main():
    # On récupère les valeurs de n et k de l'entrée standard
    try:
        n_k = input().split()
        n = int(n_k[0])
        k = int(n_k[1])
    except:
        print("Erreur lors de la lecture de n et k")
        return

    # Liste avec les valeurs de a
    a_raw = input().split()
    a = []
    for val in a_raw:
        try:
            a.append(int(val))
        except:
            a.append(0) # C'est peut-être pas terrible mais bon

    # Je vais calculer les paires strictement croissantes
    count = 0
    for i in range(n):
        for j in range(i):
            if a[j] < a[i]:
                count += 1
    # k fois parce que... c'est comme ça
    r = k * count

    # Compter les doublons dans a (pour enlever les paires égales)
    cnt = collections.Counter(a)
    s = 0
    for x in cnt.values():
        s += x * (x-1) // 2
    total_pairs = n * (n-1) // 2
    # Ajout de la partie combinatoire
    r += k*(k-1)//2 * (total_pairs - s)

    # Modulo, comme d'hab
    print(r % (10**9 + 7))

# Un peu old school mais ça marche
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' allons' (ID: 97647)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38941624760627747
    2. 'jour' → logprob: -1.264416217803955
    3. '```' → logprob: -3.889416217803955
    4. '  ' → logprob: -5.639416217803955
    5. ' app' → logprob: -6.014416217803955
    6. '   ' → logprob: -6.014416217803955
    7. 'soir' → logprob: -6.014416217803955
    8. ' j' → logprob: -6.889416217803955
    9. ' je' → logprob: -6.889416217803955
    10. 'jours' → logprob: -7.014416217803955

Token 4: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13747535645961761
    2. 'y' → logprob: -2.5124752521514893
    3. '-y' → logprob: -3.5124752521514893
    4. '_' → logprob: -4.512475490570068
    5. ' y' → logprob: -5.387475490570068
    6. '```' → logprob: -7.137475490570068
    7. '_y' → logprob: -7.512475490570068
    8. '#' → logprob: -9.01247501373291
    9. ' ' → logprob: -9.01247501373291
    10. '-nous' → logprob: -9.38747501373291

Token 5: ',' (ID: 11)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.6438388228416443
    2. '<|end|>' → logprob: -1.893838882446289
    3. '```' → logprob: -1.893838882446289
    4. '#' → logprob: -2.143838882446289
    5. '\n' → logprob: -4.268838882446289
    6. ' !' → logprob: -4.393838882446289
    7. ' ' → logprob: -4.518838882446289
    8. '\' → logprob: -5.643838882446289
    9. '<|end|>' → logprob: -6.018838882446289
    10. '
' → logprob: -6.268838882446289

Token 6: ' voilà' (ID: 77612)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7926763892173767
    2. '!' → logprob: -1.1676764488220215
    3. ' !' → logprob: -2.5426764488220215
    4. '```' → logprob: -2.9176764488220215
    5. '#' → logprob: -3.4176764488220215
    6. ',' → logprob: -4.1676764488220215
    7. ' ,' → logprob: -4.7926764488220215
    8. '\' → logprob: -4.7926764488220215
    9. '  ' → logprob: -4.9176764488220215
    10. ' ' → logprob: -5.0426764488220215

Token 7: ' comment' (ID: 5375)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.5526354312896729
    2. '```' → logprob: -1.6776354312896729
    3. '\n' → logprob: -2.177635431289673
    4. '<|end|>' → logprob: -3.052635431289673
    5. ',' → logprob: -4.177635192871094
    6. '#' → logprob: -4.177635192871094
    7. ':' → logprob: -4.302635192871094
    8. '\' → logprob: -4.802635192871094
    9. '.' → logprob: -4.802635192871094
    10. ' !' → logprob: -5.302635192871094

Token 8: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14539669454097748
    2. ' on' → logprob: -3.3953967094421387
    3. ' je' → logprob: -3.7703967094421387
    4. ' ' → logprob: -4.145396709442139
    5. ' faire' → logprob: -5.020396709442139
    6. '```' → logprob: -5.020396709442139
    7. 'faire' → logprob: -5.145396709442139
    8. ' créer' → logprob: -5.270396709442139
    9. '_' → logprob: -5.395396709442139
    10. 'é' → logprob: -5.895396709442139

Token 9: ' fer' (ID: 8510)
  Prédit: 'fer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fer' → logprob: -1.183799147605896
    2. 'fait' → logprob: -1.933799147605896
    3. ' fer' → logprob: -2.1837992668151855
    4. 'f' → logprob: -2.3087992668151855
    5. ' fais' → logprob: -2.6837992668151855
    6. 'vais' → logprob: -2.9337992668151855
    7. 's' → logprob: -3.5587992668151855
    8. 'code' → logprob: -3.5587992668151855
    9. 'le' → logprob: -3.6837992668151855
    10. '```' → logprob: -3.9337992668151855

Token 10: 'ais' (ID: 1873)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14378388226032257
    2. ' :' → logprob: -2.6437838077545166
    3. '.' → logprob: -3.6437838077545166
    4. '```' → logprob: -4.393784046173096
    5. '!' → logprob: -5.268784046173096
    6. '#' → logprob: -5.393784046173096
    7. 's' → logprob: -5.393784046173096
    8. '_' → logprob: -5.893784046173096
    9. ',' → logprob: -6.518784046173096
    10. '`' → logprob: -6.893784046173096

Token 11: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051373790949583054
    2. '```' → logprob: -3.3013737201690674
    3. ' :' → logprob: -5.3013739585876465
    4. '#' → logprob: -5.5513739585876465
    5. '`' → logprob: -6.5513739585876465
    6. '.' → logprob: -7.0513739585876465
    7. ',' → logprob: -7.1763739585876465
    8. '!' → logprob: -7.3013739585876465
    9. '\' → logprob: -8.676373481750488
    10. '``' → logprob: -8.801373481750488

Token 12: ' c' (ID: 274)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7539352178573608
    2. ' :' → logprob: -1.7539352178573608
    3. ' ```' → logprob: -2.1289353370666504
    4. ':' → logprob: -2.1289353370666504
    5. '`' → logprob: -2.8789353370666504
    6. ' ' → logprob: -3.8789353370666504
    7. '.' → logprob: -4.12893533706665
    8. '#' → logprob: -5.37893533706665
    9. ' `' → logprob: -5.62893533706665
    10. ',' → logprob: -6.12893533706665

Token 13: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2959781885147095
    2. 'e' → logprob: -2.17097806930542
    3. ''e' → logprob: -3.04597806930542
    4. ''est' → logprob: -3.92097806930542
    5. ''''' → logprob: -3.92097806930542
    6. 'o' → logprob: -4.17097806930542
    7. ''o' → logprob: -4.92097806930542
    8. ' '' → logprob: -5.42097806930542
    9. 'omme' → logprob: -5.67097806930542
    10. ''a' → logprob: -5.67097806930542

Token 14: ' plus' (ID: 2932)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.721930980682373
    2. ':' → logprob: -1.846930980682373
    3. '```' → logprob: -1.846930980682373
    4. '.' → logprob: -2.346930980682373
    5. 'possible' → logprob: -2.846930980682373
    6. ' ```' → logprob: -2.971930980682373
    7. ' que' → logprob: -3.096930980682373
    8. 'que' → logprob: -3.721930980682373
    9. '   ' → logprob: -3.721930980682373
    10. ' ' → logprob: -3.846930980682373

Token 15: ' lis' (ID: 20784)
  Prédit: ' simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simple' → logprob: -0.10781199485063553
    2. ' facile' → logprob: -3.10781192779541
    3. 'simple' → logprob: -3.48281192779541
    4. ' une' → logprob: -5.23281192779541
    5. '```' → logprob: -5.60781192779541
    6. ':' → logprob: -6.10781192779541
    7. ' sûr' → logprob: -6.85781192779541
    8. ' clair' → logprob: -6.85781192779541
    9. ' précis' → logprob: -7.10781192779541
    10. 'clair' → logprob: -7.23281192779541

Token 16: 'ible' (ID: 1430)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.018462341278791428
    2. 'bre' → logprob: -4.893462181091309
    3. 'b' → logprob: -5.268462181091309
    4. 'bles' → logprob: -5.768462181091309
    5. '```' → logprob: -6.518462181091309
    6. 'ible' → logprob: -7.393462181091309
    7. 'bres' → logprob: -8.643462181091309
    8. '#' → logprob: -9.143462181091309
    9. 'br' → logprob: -11.143462181091309
    10. '``' → logprob: -11.143462181091309

Token 17: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06550297886133194
    2. '```' → logprob: -3.315502882003784
    3. ' :' → logprob: -4.315503120422363
    4. '.' → logprob: -5.065503120422363
    5. '\n' → logprob: -5.815503120422363
    6. '\' → logprob: -6.565503120422363
    7. ',' → logprob: -7.065503120422363
    8. '#' → logprob: -7.440503120422363
    9. '`' → logprob: -7.565503120422363
    10. ' ' → logprob: -8.565503120422363

Token 18: ' peut' (ID: 9216)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0962165594100952
    2. '\n' → logprob: -1.2212165594100952
    3. ' :' → logprob: -2.0962166786193848
    4. '\' → logprob: -2.3462166786193848
    5. ':' → logprob: -2.4712166786193848
    6. ' ```' → logprob: -3.8462166786193848
    7. ' ' → logprob: -4.471216678619385
    8. '  
' → logprob: -4.846216678619385
    9. ' ' → logprob: -5.346216678619385
    10. ' \' → logprob: -5.471216678619385

Token 19: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.4347282946109772
    2. ' ' → logprob: -2.5597283840179443
    3. '-être' → logprob: -2.6847283840179443
    4. ' ê' → logprob: -2.9347283840179443
    5. ' être' → logprob: -3.1847283840179443
    6. '-' → logprob: -3.3097283840179443
    7. 'êt' → logprob: -3.5597283840179443
    8. 'ê' → logprob: -4.184728145599365
    9. '_' → logprob: -4.309728145599365
    10. 'etre' → logprob: -4.934728145599365

Token 20: '?
' (ID: 3901)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09149087220430374
    2. '```' → logprob: -2.7164909839630127
    3. ' :' → logprob: -5.091490745544434
    4. '#' → logprob: -5.716490745544434
    5. '.' → logprob: -5.841490745544434
    6. '\n' → logprob: -5.966490745544434
    7. '\' → logprob: -5.966490745544434
    8. ',' → logprob: -6.841490745544434
    9. '`' → logprob: -6.841490745544434
    10. '
' → logprob: -8.091490745544434

Token 21: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4430854916572571
    2. ':' → logprob: -1.5680854320526123
    3. '\n' → logprob: -2.5680854320526123
    4. '\' → logprob: -3.4430854320526123
    5. '`' → logprob: -4.693085670471191
    6. ' :' → logprob: -5.318085670471191
    7. '``' → logprob: -5.318085670471191
    8. '.' → logprob: -5.443085670471191
    9. '  
' → logprob: -5.568085670471191
    10. '
' → logprob: -5.943085670471191

Token 22: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.36050695180892944
    2. ' pandas' → logprob: -1.7355070114135742
    3. ' numpy' → logprob: -2.735507011413574
    4. ' ' → logprob: -2.860507011413574
    5. ' sys' → logprob: -6.360507011413574
    6. ' requests' → logprob: -7.360507011413574
    7. ' json' → logprob: -7.610507011413574
    8. ' random' → logprob: -7.735507011413574
    9. ' math' → logprob: -8.110507011413574
    10. ' csv' → logprob: -9.110507011413574

Token 23: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01150811742991209
    2. ' .' → logprob: -5.136507987976074
    3. '.
' → logprob: -6.386507987976074
    4. '.Counter' → logprob: -7.511507987976074
    5. '
' → logprob: -7.636507987976074
    6. '' → logprob: -8.136507987976074
    7. '_' → logprob: -8.136507987976074
    8. '.

' → logprob: -8.136507987976074
    9. 'newline' → logprob: -8.136507987976074
    10. 'import' → logprob: -8.261507987976074

Token 24: 'def' (ID: 1314)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.5772759318351746
    2. 'deque' → logprob: -1.9522759914398193
    3. 'default' → logprob: -3.0772759914398193
    4. '.' → logprob: -3.0772759914398193
    5. '.Counter' → logprob: -3.0772759914398193
    6. 'def' → logprob: -3.5772759914398193
    7. 'Ordered' → logprob: -3.8272759914398193
    8. '_' → logprob: -3.8272759914398193
    9. '```' → logprob: -4.20227575302124
    10. 'Deque' → logprob: -4.45227575302124

Token 25: ' main' (ID: 2758)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.08291883766651154
    2. ' defaultdict' → logprob: -3.082918882369995
    3. ' counter' → logprob: -3.832918882369995
    4. '_counter' → logprob: -4.707918643951416
    5. 'Counter' → logprob: -6.832918643951416
    6. ' deque' → logprob: -7.207918643951416
    7. ' ' → logprob: -7.832918643951416
    8. ' collections' → logprob: -7.957918643951416
    9. ' default' → logprob: -8.707919120788574
    10. '_' → logprob: -9.582919120788574

Token 26: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014233439229428768
    2. ':' → logprob: -5.264233589172363
    3. '():' → logprob: -5.389233589172363
    4. '(:' → logprob: -5.889233589172363
    5. ' (' → logprob: -6.639233589172363
    6. '_' → logprob: -9.014233589172363
    7. ' :' → logprob: -10.139233589172363
    8. '(
' → logprob: -10.389233589172363
    9. ' ():' → logprob: -10.389233589172363
    10. '(":' → logprob: -10.639233589172363

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5274448990821838
    2. ' Counter' → logprob: -1.652444839477539
    3. '    ' → logprob: -2.152444839477539
    4. ' ' → logprob: -3.652444839477539
    5. ' counter' → logprob: -3.902444839477539
    6. ' defaultdict' → logprob: -4.152444839477539
    7. 'Counter' → logprob: -4.402444839477539
    8. '    
' → logprob: -5.277444839477539
    9. ' deque' → logprob: -5.652444839477539
    10. ' collections' → logprob: -5.777444839477539

Token 28: ' #' (ID: 1069)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.8402922749519348
    2. '   ' → logprob: -1.21529221534729
    3. 'counter' → logprob: -2.46529221534729
    4. 'deque' → logprob: -3.21529221534729
    5. ' deque' → logprob: -3.59029221534729
    6. ' Counter' → logprob: -3.59029221534729
    7. ' defaultdict' → logprob: -3.96529221534729
    8. 'de' → logprob: -4.090292453765869
    9. 'Counter' → logprob: -4.215292453765869
    10. 'collections' → logprob: -4.840292453765869

Token 29: ' On' (ID: 2160)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.17793776094913483
    2. '   ' → logprob: -3.1779377460479736
    3. 'counter' → logprob: -3.8029377460479736
    4. ' fruits' → logprob: -3.8029377460479736
    5. ' word' → logprob: -4.302937984466553
    6. ' Counter' → logprob: -4.427937984466553
    7. ' words' → logprob: -4.552937984466553
    8. ' data' → logprob: -4.802937984466553
    9. 'Counter' → logprob: -5.052937984466553
    10. ' lines' → logprob: -5.552937984466553

Token 30: ' récup' (ID: 62856)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03989602252840996
    2. '   ' → logprob: -3.914896011352539
    3. '_counter' → logprob: -4.914896011352539
    4. '=' → logprob: -6.039896011352539
    5. ':' → logprob: -6.539896011352539
    6. ' ' → logprob: -6.789896011352539
    7. '_' → logprob: -6.789896011352539
    8. ' est' → logprob: -7.289896011352539
    9. ' :' → logprob: -7.664896011352539
    10. ' a' → logprob: -8.164896011352539

Token 31: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.012088810093700886
    2. 'è' → logprob: -5.137088775634766
    3. '\' → logprob: -6.012088775634766
    4. '`' → logprob: -6.637088775634766
    5. '[' → logprob: -7.387088775634766
    6. '_' → logprob: -7.637088775634766
    7. 'ére' → logprob: -8.637088775634766
    8. '#' → logprob: -8.887088775634766
    9. 'èr' → logprob: -9.137088775634766
    10. '"' → logprob: -9.262088775634766

Token 32: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021999619901180267
    2. ' les' → logprob: -4.771999835968018
    3. ' l' → logprob: -5.396999835968018
    4. ' la' → logprob: -5.771999835968018
    5. '_' → logprob: -6.771999835968018
    6. ' le' → logprob: -6.896999835968018
    7. '    ' → logprob: -7.146999835968018
    8. '   ' → logprob: -7.521999835968018
    9. ' =' → logprob: -7.771999835968018
    10. ' data' → logprob: -8.52199935913086

Token 33: ' valeurs' (ID: 73668)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -1.2512924671173096
    2. ' mots' → logprob: -1.2512924671173096
    3. ' data' → logprob: -1.3762924671173096
    4. ' lines' → logprob: -3.6262924671173096
    5. ' nombres' → logprob: -4.0012922286987305
    6. 'd' → logprob: -4.1262922286987305
    7. ' lignes' → logprob: -4.1262922286987305
    8. ' scores' → logprob: -5.0012922286987305
    9. ' éléments' → logprob: -5.0012922286987305
    10. ' items' → logprob: -5.2512922286987305

Token 34: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45206165313720703
    2. '   ' → logprob: -1.577061653137207
    3. '    ' → logprob: -2.827061653137207
    4. ' =' → logprob: -4.202061653137207
    5. ' de' → logprob: -4.577061653137207
    6. ' d' → logprob: -4.952061653137207
    7. '_' → logprob: -4.952061653137207
    8. ' des' → logprob: -5.077061653137207
    9. 'values' → logprob: -5.077061653137207
    10. 'data' → logprob: -5.577061653137207

Token 35: ' n' (ID: 297)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.6697419881820679
    2. ' input' → logprob: -2.1697421073913574
    3. 'la' → logprob: -2.2947421073913574
    4. 'a' → logprob: -2.6697421073913574
    5. 'l' → logprob: -2.6697421073913574
    6. 'd' → logprob: -2.7947421073913574
    7. 'counter' → logprob: -3.0447421073913574
    8. ' counter' → logprob: -3.1697421073913574
    9. ' data' → logprob: -3.4197421073913574
    10. 'input' → logprob: -3.5447421073913574

Token 36: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7617855668067932
    2. ' ' → logprob: -1.6367855072021484
    3. ',' → logprob: -2.2617855072021484
    4. '   ' → logprob: -2.7617855072021484
    5. 'umer' → logprob: -2.7617855072021484
    6. ' ,' → logprob: -3.3867855072021484
    7. '_' → logprob: -3.5117855072021484
    8. ' et' → logprob: -4.011785507202148
    9. '    ' → logprob: -5.261785507202148
    10. ' )' → logprob: -5.636785507202148

Token 37: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.915181577205658
    2. ' k' → logprob: -1.0401816368103027
    3. 'm' → logprob: -2.6651816368103027
    4. 'k' → logprob: -2.9151816368103027
    5. ' ' → logprob: -3.0401816368103027
    6. ' t' → logprob: -4.790181636810303
    7. ' de' → logprob: -4.790181636810303
    8. ' l' → logprob: -4.790181636810303
    9. ' la' → logprob: -5.165181636810303
    10. ' d' → logprob: -5.165181636810303

Token 38: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4980166256427765
    2. '   ' → logprob: -1.373016595840454
    3. 'n' → logprob: -2.748016595840454
    4. '  ' → logprob: -4.123016834259033
    5. '    
' → logprob: -4.498016834259033
    6. '  
' → logprob: -4.998016834259033
    7. ':' → logprob: -5.123016834259033
    8. ' ' → logprob: -5.123016834259033
    9. '   
' → logprob: -5.248016834259033
    10. ',' → logprob: -5.373016834259033

Token 39: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.07240017503499985
    2. 'l' → logprob: -3.3224000930786133
    3. ' la' → logprob: -4.322400093078613
    4. ' ' → logprob: -4.947400093078613
    5. ' input' → logprob: -5.322400093078613
    6. 'user' → logprob: -6.197400093078613
    7. ' user' → logprob: -6.572400093078613
    8. 'input' → logprob: -6.697400093078613
    9. '_' → logprob: -7.447400093078613
    10. '=input' → logprob: -7.447400093078613

Token 40: ''entrée' (ID: 115820)
  Prédit: ''utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.5143749713897705
    2. ''entrée' → logprob: -1.6393749713897705
    3. ''' → logprob: -2.5143749713897705
    4. 'a' → logprob: -2.8893749713897705
    5. 'input' → logprob: -3.0143749713897705
    6. 'entrée' → logprob: -4.514374732971191
    7. 'é' → logprob: -5.764374732971191
    8. 'e' → logprob: -6.014374732971191
    9. 'u' → logprob: -6.764374732971191
    10. ' input' → logprob: -7.014374732971191

Token 41: ' standard' (ID: 7024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08968646079301834
    2. 'n' → logprob: -3.464686393737793
    3. ',' → logprob: -4.714686393737793
    4. ' =' → logprob: -4.964686393737793
    5. ':' → logprob: -5.214686393737793
    6. ' )' → logprob: -5.464686393737793
    7. ' ,' → logprob: -5.714686393737793
    8. ' :' → logprob: -5.964686393737793
    9. '   ' → logprob: -5.964686393737793
    10. 'input' → logprob: -6.089686393737793

Token 42: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4906206429004669
    2. '   ' → logprob: -1.9906206130981445
    3. ' ' → logprob: -2.1156206130981445
    4. ':' → logprob: -3.1156206130981445
    5. ',' → logprob: -4.2406206130981445
    6. '    
' → logprob: -4.6156206130981445
    7. ' :' → logprob: -4.7406206130981445
    8. '   
' → logprob: -4.7406206130981445
    9. ' ,' → logprob: -4.9906206130981445
    10. ' n' → logprob: -5.3656206130981445

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08252178132534027
    2. 'n' → logprob: -2.707521677017212
    3. '    
' → logprob: -4.832521915435791
    4. ' ' → logprob: -6.457521915435791
    5. '   
' → logprob: -7.457521915435791
    6. '    ' → logprob: -7.832521915435791
    7. '
' → logprob: -7.957521915435791
    8. '  ' → logprob: -8.082521438598633
    9. ' n' → logprob: -8.207521438598633
    10. '  
' → logprob: -8.332521438598633

Token 44: ' try' (ID: 2075)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2766880989074707
    2. ' n' → logprob: -1.7766880989074707
    3. ' ' → logprob: -2.6516880989074707
    4. 'a' → logprob: -8.276687622070312
    5. '   ' → logprob: -8.276687622070312
    6. ' 
' → logprob: -8.276687622070312
    7. ' (' → logprob: -8.401687622070312
    8. 's' → logprob: -8.401687622070312
    9. '(n' → logprob: -8.901687622070312
    10. 'x' → logprob: -9.651687622070312

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018174059689044952
    2. ' :' → logprob: -4.018174171447754
    3. ':
' → logprob: -11.768174171447754
    4. '):' → logprob: -12.518174171447754
    5. '<|end|>' → logprob: -12.768174171447754
    6. '   ' → logprob: -13.143174171447754
    7. ' :
' → logprob: -13.643174171447754
    8. ' ' → logprob: -14.018174171447754
    9. ',' → logprob: -14.143174171447754
    10. ' except' → logprob: -14.393174171447754

Token 46: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6021757125854492
    2. ':' → logprob: -2.102175712585449
    3. '   ' → logprob: -2.352175712585449
    4. '    ' → logprob: -2.602175712585449
    5. ' :' → logprob: -2.602175712585449
    6. 'n' → logprob: -2.727175712585449
    7. '       ' → logprob: -4.477175712585449
    8. ' ' → logprob: -5.227175712585449
    9. '    
' → logprob: -7.477175712585449
    10. '	n' → logprob: -7.602175712585449

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17977657914161682
    2. 'n' (adapté à ' n') → logprob: -1.8047765493392944
    3. '   ' → logprob: -11.304776191711426
    4. '(n' → logprob: -12.054776191711426
    5. '    ' → logprob: -12.929776191711426
    6. '	n' → logprob: -12.929776191711426
    7. ' line' → logprob: -13.179776191711426
    8. ' (' → logprob: -13.554776191711426
    9. '_n' → logprob: -13.679776191711426
    10. ' ' → logprob: -14.554776191711426

Token 48: '_k' (ID: 11637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3718041479587555
    2. ' ,' → logprob: -1.871804118156433
    3. ' =' → logprob: -1.996804118156433
    4. ' ' → logprob: -3.9968042373657227
    5. '=' → logprob: -6.371804237365723
    6. '_' → logprob: -8.496804237365723
    7. ')' → logprob: -8.746804237365723
    8. ' )' → logprob: -8.996804237365723
    9. '_space' → logprob: -9.121804237365723
    10. '_input' → logprob: -10.371804237365723

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056863345205784
    2. '=' → logprob: -3.895568609237671
    3. '_input' → logprob: -11.77056884765625
    4. '=input' → logprob: -12.14556884765625
    5. ' ' → logprob: -12.64556884765625
    6. 'input' → logprob: -12.77056884765625
    7. 's' → logprob: -13.02056884765625
    8. ',' → logprob: -13.64556884765625
    9. ')' → logprob: -14.14556884765625
    10. '_str' → logprob: -14.39556884765625

Token 50: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5765045285224915
    2. 'input' → logprob: -0.8265045285224915
    3. 'list' → logprob: -8.076504707336426
    4. ' list' → logprob: -8.326504707336426
    5. '   ' → logprob: -12.951504707336426
    6. ' ' → logprob: -13.576504707336426
    7. 'int' → logprob: -13.576504707336426
    8. '[' → logprob: -13.576504707336426
    9. '[input' → logprob: -13.951504707336426
    10. ' tuple' → logprob: -14.076504707336426

Token 51: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2971894443035126
    2. '(' → logprob: -1.422189474105835
    3. '('' → logprob: -4.672189235687256
    4. '().' → logprob: -5.422189235687256
    5. '("' → logprob: -7.047189235687256
    6. '("")' → logprob: -7.547189235687256
    7. '("("' → logprob: -7.547189235687256
    8. ' ()' → logprob: -9.797189712524414
    9. '())' → logprob: -10.172189712524414
    10. ')' → logprob: -11.172189712524414

Token 52: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12693220376968384
    2. 'strip' → logprob: -2.126932144165039
    3. 'rstrip' → logprob: -12.501932144165039
    4. ' split' → logprob: -15.001932144165039
    5. 'spl' → logprob: -16.37693214416504
    6. ' strip' → logprob: -17.87693214416504
    7. 'replace' → logprob: -18.25193214416504
    8. 'str' → logprob: -18.37693214416504
    9. 's' → logprob: -18.50193214416504
    10. '(split' → logprob: -19.50193214416504

Token 53: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24747397005558014
    2. '('' → logprob: -1.997473955154419
    3. '()' → logprob: -2.497473955154419
    4. '("("' → logprob: -6.747474193572998
    5. '("' → logprob: -10.99747371673584
    6. '(
' → logprob: -11.37247371673584
    7. ')' → logprob: -11.87247371673584
    8. '(

' → logprob: -11.99747371673584
    9. '(`' → logprob: -12.12247371673584
    10. '(',' → logprob: -12.24747371673584

Token 54: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061433084309101105
    2. ' ' → logprob: -3.8114330768585205
    3. '[n' → logprob: -4.8114333152771
    4. ')' → logprob: -4.9364333152771
    5. '<|end|>' → logprob: -4.9364333152771
    6. '   ' → logprob: -5.0614333152771
    7. '    ' → logprob: -5.8114333152771
    8. '       ' → logprob: -6.6864333152771
    9. '  ' → logprob: -7.1864333152771
    10. '[
' → logprob: -7.4364333152771

Token 55: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.018761301413178444
    2. ' n' → logprob: -4.518761157989502
    3. ' ' → logprob: -5.143761157989502
    4. '    ' → logprob: -7.643761157989502
    5. ')' → logprob: -7.893761157989502
    6. '[' → logprob: -8.51876163482666
    7. 'if' → logprob: -8.89376163482666
    8. '       ' → logprob: -9.14376163482666
    9. '        ' → logprob: -9.39376163482666
    10. '   ' → logprob: -9.51876163482666

Token 56: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034677013754844666
    2. ' =' → logprob: -4.034677028656006
    3. '=' → logprob: -5.034677028656006
    4. ' ,' → logprob: -5.159677028656006
    5. '<|end|>' → logprob: -6.784677028656006
    6. ')' → logprob: -6.909677028656006
    7. ' ' → logprob: -7.409677028656006
    8. '_' → logprob: -7.909677028656006
    9. '=int' → logprob: -8.784676551818848
    10. ',n' → logprob: -8.784676551818848

Token 57: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1269291490316391
    2. 'int' → logprob: -2.1269290447235107
    3. '=int' → logprob: -15.12692928314209
    4. '[int' → logprob: -15.12692928314209
    5. '  ' → logprob: -16.126928329467773
    6. ' ' → logprob: -16.251928329467773
    7. '	int' → logprob: -16.251928329467773
    8. '(int' → logprob: -16.626928329467773
    9. ' n' → logprob: -17.001928329467773
    10. '<int' → logprob: -17.626928329467773

Token 58: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47407999634742737
    2. '(' → logprob: -0.974079966545105
    3. ' (' → logprob: -13.224080085754395
    4. '('' → logprob: -14.224080085754395
    5. '(
' → logprob: -15.849080085754395
    6. '(

' → logprob: -16.224079132080078
    7. '()' → logprob: -16.349079132080078
    8. '("' → logprob: -17.099079132080078
    9. ' ' → logprob: -17.849079132080078
    10. '((' → logprob: -17.849079132080078

Token 59: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00012284684635233134
    2. '[' → logprob: -9.125123023986816
    3. ')' → logprob: -11.500123023986816
    4. '[_' → logprob: -13.625123023986816
    5. '[k' → logprob: -13.750123023986816
    6. '_n' → logprob: -14.375123023986816
    7. ' _' → logprob: -14.750123023986816
    8. ' )' → logprob: -15.125123023986816
    9. '[n' → logprob: -15.875123023986816
    10. 'k' → logprob: -16.7501220703125

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.375001907348633
    3. ')' → logprob: -15.000001907348633
    4. ' ' → logprob: -16.000001907348633
    5. '[
' → logprob: -16.500001907348633
    6. '0' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '1' → logprob: -18.375001907348633
    9. '  ' → logprob: -19.000001907348633
    10. ')[' → logprob: -19.125001907348633

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '1' → logprob: -15.12523078918457
    4. '   ' → logprob: -17.75023078918457
    5. ')' → logprob: -18.12523078918457
    6. '  ' → logprob: -18.37523078918457
    7. ']' → logprob: -19.00023078918457
    8. ' ' → logprob: -19.62523078918457
    9. '])' → logprob: -20.06273078918457
    10. '[' → logprob: -20.37523078918457

Token 62: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008166544139385223
    2. '])
' → logprob: -7.875816822052002
    3. ')' → logprob: -8.500816345214844
    4. ' ])' → logprob: -8.875816345214844
    5. ']' → logprob: -9.625816345214844
    6. ''])' → logprob: -11.125816345214844
    7. '   ' → logprob: -12.500816345214844
    8. ' ' → logprob: -13.375816345214844
    9. '],' → logprob: -13.875816345214844
    10. '])
' → logprob: -14.000816345214844

Token 63: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26859742403030396
    2. ' k' → logprob: -1.5185973644256592
    3. 'k' (adapté à ' k') → logprob: -4.143597602844238
    4. '    ' → logprob: -8.393597602844238
    5. ' 
' → logprob: -9.268597602844238
    6. ' ' → logprob: -9.393597602844238
    7. '<|end|>' → logprob: -9.643597602844238
    8. '  ' → logprob: -10.018597602844238
    9. ' )' → logprob: -10.268597602844238
    10. ')' → logprob: -10.893597602844238

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023265859112143517
    2. '=' → logprob: -3.773265838623047
    3. ' ' → logprob: -11.148265838623047
    4. ')' → logprob: -12.523265838623047
    5. '=int' → logprob: -14.023265838623047
    6. ' )' → logprob: -14.273265838623047
    7. ' =)' → logprob: -15.023265838623047
    8. ' ' → logprob: -15.273265838623047
    9. '_' → logprob: -16.648265838623047
    10. ' =
' → logprob: -16.898265838623047

Token 66: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10020732134580612
    2. 'int' → logprob: -2.3502073287963867
    3. ' n' → logprob: -15.475207328796387
    4. '=int' → logprob: -15.475207328796387
    5. '(int' → logprob: -16.35020637512207
    6. ' ' → logprob: -16.97520637512207
    7. '[int' → logprob: -16.97520637512207
    8. '<int' → logprob: -17.35020637512207
    9. '	int' → logprob: -17.60020637512207
    10. ' ' → logprob: -17.60020637512207

Token 67: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014342490583658218
    2. '(' → logprob: -4.264342308044434
    3. ' (' → logprob: -8.639342308044434
    4. '(k' → logprob: -13.514342308044434
    5. ')' → logprob: -16.01434326171875
    6. '(
' → logprob: -16.26434326171875
    7. ' ' → logprob: -16.26434326171875
    8. '('' → logprob: -16.38934326171875
    9. ' )' → logprob: -17.26434326171875
    10. ' n' → logprob: -17.26434326171875

Token 68: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.8624639324116288e-06
    2. ' _' → logprob: -14.375001907348633
    3. 'k' → logprob: -15.375001907348633
    4. ')' → logprob: -15.375001907348633
    5. '[' → logprob: -15.625001907348633
    6. '_' → logprob: -15.750001907348633
    7. ' )' → logprob: -15.875001907348633
    8. '_n' → logprob: -16.125001907348633
    9. ')_' → logprob: -16.625001907348633
    10. '])' → logprob: -17.250001907348633

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006672830786556005
    2. '1' → logprob: -7.750667095184326
    3. ')' → logprob: -9.500667572021484
    4. ' ' → logprob: -9.750667572021484
    5. ' [' → logprob: -10.000667572021484
    6. '   ' → logprob: -11.250667572021484
    7. ')[' → logprob: -11.500667572021484
    8. '(' → logprob: -11.750667572021484
    9. '])' → logprob: -12.250667572021484
    10. '][' → logprob: -12.625667572021484

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018530222587287426
    2. ' ' → logprob: -8.875185012817383
    3. '])' → logprob: -10.125185012817383
    4. '0' → logprob: -12.750185012817383
    5. ' ])' → logprob: -14.125185012817383
    6. ']' → logprob: -14.375185012817383
    7. ')' → logprob: -15.500185012817383
    8. '   ' → logprob: -15.750185012817383
    9. '2' → logprob: -15.750185012817383
    10. '  ' → logprob: -16.000185012817383

Token 71: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4034345187828876e-05
    2. ')
' → logprob: -11.37502384185791
    3. '])' → logprob: -11.62502384185791
    4. '))' → logprob: -13.37502384185791
    5. ' )' → logprob: -14.12502384185791
    6. ']' → logprob: -14.50002384185791
    7. '）' → logprob: -15.37502384185791
    8. '   ' → logprob: -16.000024795532227
    9. '})' → logprob: -16.375024795532227
    10. ')])' → logprob: -16.750024795532227

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5108784437179565
    2. ')' → logprob: -1.3858784437179565
    3. '
' → logprob: -2.760878562927246
    4. '       ' → logprob: -2.760878562927246
    5. '    
' → logprob: -5.010878562927246
    6. '\n' → logprob: -5.010878562927246
    7. '<|end|>' → logprob: -6.135878562927246
    8. '        
' → logprob: -6.385878562927246
    9. 'except' → logprob: -6.885878562927246
    10. '    ' → logprob: -7.135878562927246

Token 73: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0252678394317627
    2. ')' → logprob: -1.5252678394317627
    3. '\n' → logprob: -1.6502678394317627
    4. '
' → logprob: -2.6502678394317627
    5. '    
' → logprob: -2.6502678394317627
    6. '<|end|>' → logprob: -3.7752678394317627
    7. ':' → logprob: -4.150267601013184
    8. '\' → logprob: -4.275267601013184
    9. '```' → logprob: -4.775267601013184
    10. ' 
' → logprob: -5.025267601013184

Token 74: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6259587407112122
    2. ' Value' → logprob: -1.0009586811065674
    3. ' Exception' → logprob: -3.5009586811065674
    4. ':' → logprob: -3.7509586811065674
    5. '(Value' → logprob: -4.2509589195251465
    6. ' EOF' → logprob: -4.6259589195251465
    7. ' ' → logprob: -5.1259589195251465
    8. '(Exception' → logprob: -5.1259589195251465
    9. 'Value' → logprob: -5.2509589195251465
    10. '(' → logprob: -7.0009589195251465

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014680624008178711
    2. '    ' → logprob: -4.639680862426758
    3. '   ' → logprob: -6.139680862426758
    4. ' ' → logprob: -6.639680862426758
    5. '        ' → logprob: -8.014680862426758
    6. '     ' → logprob: -8.514680862426758
    7. '<|end|>' → logprob: -8.514680862426758
    8. '           ' → logprob: -9.264680862426758
    9. ' ' → logprob: -9.389680862426758
    10. ':' → logprob: -9.639680862426758

Token 76: ' print' (ID: 2123)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.23378048837184906
    2. ' return' → logprob: -2.2337803840637207
    3. ' ' → logprob: -3.3587803840637207
    4. '   ' → logprob: -4.108780384063721
    5. '       ' → logprob: -4.483780384063721
    6. '     
' → logprob: -4.483780384063721
    7. 'return' → logprob: -4.608780384063721
    8. ' 
' → logprob: -4.858780384063721
    9. ' pass' → logprob: -5.358780384063721
    10. '    
' → logprob: -7.108780384063721

Token 77: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029115043580532074
    2. '("' → logprob: -6.002911567687988
    3. '("")' → logprob: -8.627911567687988
    4. '('' → logprob: -9.002911567687988
    5. '()' → logprob: -9.127911567687988
    6. '("("' → logprob: -11.627911567687988
    7. '(""' → logprob: -11.877911567687988
    8. '("""' → logprob: -12.127911567687988
    9. '(None' → logprob: -13.627911567687988
    10. '(False' → logprob: -14.752911567687988

Token 78: 'Erreur' (ID: 155968)
  Prédit: 'Erreur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Erreur' → logprob: -0.9006603360176086
    2. 'Entr' → logprob: -1.6506602764129639
    3. 'Vale' → logprob: -2.025660276412964
    4. 'Invalid' → logprob: -2.400660276412964
    5. ' Vale' → logprob: -3.025660276412964
    6. 'Usage' → logprob: -3.275660276412964
    7. 'Input' → logprob: -3.775660276412964
    8. ' Entr' → logprob: -4.025660514831543
    9. 'Nombre' → logprob: -4.650660514831543
    10. 'Value' → logprob: -5.150660514831543

Token 79: ' lors' (ID: 15456)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5811082124710083
    2. ' :' → logprob: -0.8311082124710083
    3. ' lors' → logprob: -6.331108093261719
    4. ' ' → logprob: -6.456108093261719
    5. ' ")' → logprob: -7.331108093261719
    6. ' d' → logprob: -8.331108093261719
    7. ' dans' → logprob: -8.331108093261719
    8. '")' → logprob: -8.456108093261719
    9. ' de' → logprob: -8.456108093261719
    10. ' ' → logprob: -8.956108093261719

Token 80: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0028335300739854574
    2. 'de' → logprob: -5.877833366394043
    3. ' ' → logprob: -11.127833366394043
    4. ' du' → logprob: -11.502833366394043
    5. ' ' → logprob: -13.252833366394043
    6. ' d' → logprob: -14.377833366394043
    7. 'du' → logprob: -14.752833366394043
    8. ' la' → logprob: -15.877833366394043
    9. '_de' → logprob: -16.00283432006836
    10. 'd' → logprob: -16.12783432006836

Token 81: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.00633092550560832
    2. 'la' → logprob: -5.506330966949463
    3. ' l' → logprob: -6.381330966949463
    4. 'l' → logprob: -7.631330966949463
    5. ' ' → logprob: -10.381330490112305
    6. ' lecture' → logprob: -11.006330490112305
    7. ' ' → logprob: -11.881330490112305
    8. 'lecture' → logprob: -12.506330490112305
    9. '_la' → logprob: -12.631330490112305
    10. ' input' → logprob: -13.006330490112305

Token 82: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.028166387230157852
    2. ' sais' → logprob: -4.6531662940979
    3. ' récupération' → logprob: -4.7781662940979
    4. 'lecture' → logprob: -5.0281662940979
    5. ' ' → logprob: -6.1531662940979
    6. ' conversion' → logprob: -7.6531662940979
    7. 's' → logprob: -8.278166770935059
    8. 'entrée' → logprob: -9.028166770935059
    9. 'r' → logprob: -9.403166770935059
    10. ' réception' → logprob: -9.778166770935059

Token 83: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6379101872444153
    2. ' des' → logprob: -0.7629101872444153
    3. ' ' → logprob: -6.51291036605835
    4. 'de' → logprob: -6.63791036605835
    5. '")' → logprob: -7.26291036605835
    6. ' d' → logprob: -7.51291036605835
    7. ' ")' → logprob: -8.262909889221191
    8. ' ' → logprob: -8.262909889221191
    9. 'des' → logprob: -8.262909889221191
    10. ' )' → logprob: -9.012909889221191

Token 84: ' n' (ID: 297)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.016290776431560516
    2. ' ' → logprob: -4.391290664672852
    3. 'l' → logprob: -6.266290664672852
    4. ' la' → logprob: -7.141290664672852
    5. ' n' → logprob: -7.266290664672852
    6. ' ' → logprob: -8.891290664672852
    7. ' input' → logprob: -9.516290664672852
    8. ' les' → logprob: -10.266290664672852
    9. '	l' → logprob: -10.266290664672852
    10. 's' → logprob: -10.391290664672852

Token 85: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.20547601580619812
    2. ' ' → logprob: -2.4554760456085205
    3. 'et' → logprob: -2.7054760456085205
    4. '_k' → logprob: -5.205475807189941
    5. ' ou' → logprob: -5.330475807189941
    6. ' ' → logprob: -5.455475807189941
    7. '_' → logprob: -5.705475807189941
    8. ',' → logprob: -5.705475807189941
    9. ')' → logprob: -6.080475807189941
    10. 'k' → logprob: -6.205475807189941

Token 86: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.013642827048897743
    2. 'k' → logprob: -4.38864278793335
    3. ' ' → logprob: -6.88864278793335
    4. ' ' → logprob: -9.138643264770508
    5. '_k' → logprob: -13.638643264770508
    6. '	k' → logprob: -13.763643264770508
    7. '  ' → logprob: -13.763643264770508
    8. ' к' → logprob: -15.326143264770508
    9. '```' → logprob: -15.576143264770508
    10. ' ' → logprob: -15.701143264770508

Token 87: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.009809567593038082
    2. ')")' → logprob: -5.134809494018555
    3. ')' → logprob: -6.259809494018555
    4. '")
' → logprob: -6.634809494018555
    5. '"' → logprob: -8.259809494018555
    6. '.")' → logprob: -9.009809494018555
    7. ')")
' → logprob: -9.134809494018555
    8. '\")' → logprob: -10.259809494018555
    9. '\"' → logprob: -10.634809494018555
    10. ':' → logprob: -11.009809494018555

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5945014953613281
    2. '   ' → logprob: -0.8445014953613281
    3. '
' → logprob: -5.219501495361328
    4. ')' → logprob: -5.469501495361328
    5. '    
' → logprob: -5.469501495361328
    6. '<|end|>' → logprob: -6.219501495361328
    7. '    ' → logprob: -7.219501495361328
    8. '        
' → logprob: -8.094501495361328
    9. '\n' → logprob: -8.094501495361328
    10. ':' → logprob: -8.344501495361328

Token 89: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31356799602508545
    2. ' return' → logprob: -1.3135679960250854
    3. '   ' → logprob: -8.188568115234375
    4. '	return' → logprob: -11.063568115234375
    5. ' ' → logprob: -13.063568115234375
    6. '    
' → logprob: -13.063568115234375
    7. '    ' → logprob: -13.438568115234375
    8. 're' → logprob: -13.688568115234375
    9. ' 
' → logprob: -13.813568115234375
    10. 'eturn' → logprob: -13.813568115234375

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006953822914510965
    2. '    
' → logprob: -6.006953716278076
    3. ' 
' → logprob: -6.006953716278076
    4. '' → logprob: -6.881953716278076
    5. '

' → logprob: -8.256954193115234
    6. '   ' → logprob: -8.256954193115234
    7. '  
' → logprob: -9.131954193115234
    8. '\n' → logprob: -9.256954193115234
    9. '   
' → logprob: -9.881954193115234
    10. 'n' → logprob: -10.381954193115234

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01879487931728363
    2. ' 
' → logprob: -4.643795013427734
    3. '    
' → logprob: -5.393795013427734
    4. '   ' → logprob: -6.518795013427734
    5. '  
' → logprob: -6.893795013427734
    6. '\n' → logprob: -7.143795013427734
    7. 'n' → logprob: -8.018795013427734
    8. '' → logprob: -8.268795013427734
    9. '   
' → logprob: -8.893795013427734
    10. '\' → logprob: -9.018795013427734

Token 92: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.4744211435317993
    2. '   ' → logprob: -1.5994211435317993
    3. '#' (adapté à ' #') → logprob: -1.9744211435317993
    4. 'n' → logprob: -1.9744211435317993
    5. 'l' → logprob: -2.3494210243225098
    6. ' lines' → logprob: -3.0994210243225098
    7. 'lines' → logprob: -3.5994210243225098
    8. 'd' → logprob: -3.9744210243225098
    9. 'a' → logprob: -4.22442102432251
    10. 'values' → logprob: -4.47442102432251

Token 93: ' Liste' (ID: 61030)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5195878744125366
    2. ' lines' → logprob: -2.144587993621826
    3. 'values' → logprob: -2.269587993621826
    4. '#' → logprob: -2.894587993621826
    5. 'arr' → logprob: -3.519587993621826
    6. 'data' → logprob: -3.769587993621826
    7. 'lst' → logprob: -4.144587993621826
    8. '   ' → logprob: -4.769587993621826
    9. 'numbers' → logprob: -5.144587993621826
    10. 'freq' → logprob: -5.394587993621826

Token 94: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4166020154953003
    2. ' des' → logprob: -1.6666020154953003
    3. '_' → logprob: -1.7916020154953003
    4. ' =' → logprob: -2.04160213470459
    5. ' ' → logprob: -2.66660213470459
    6. '   ' → logprob: -2.66660213470459
    7. 'des' → logprob: -3.66660213470459
    8. '<|end|>' → logprob: -3.79160213470459
    9. 'es' → logprob: -4.66660213470459
    10. 'a' → logprob: -5.04160213470459

Token 95: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9015939235687256
    2. '_' → logprob: -2.0265939235687256
    3. ' la' → logprob: -2.2765939235687256
    4. 'collections' → logprob: -2.4015939235687256
    5. ' n' → logprob: -3.1515939235687256
    6. '[]' → logprob: -3.2765939235687256
    7. 'les' → logprob: -3.5265939235687256
    8. ' toutes' → logprob: -3.6515939235687256
    9. ' collections' → logprob: -3.6515939235687256
    10. 'n' → logprob: -3.7765939235687256

Token 96: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.7399064302444458
    2. ' nombres' → logprob: -1.8649064302444458
    3. 'élé' → logprob: -2.4899063110351562
    4. ' notes' → logprob: -3.1149063110351562
    5. ' scores' → logprob: -3.3649063110351562
    6. 'val' → logprob: -3.4899063110351562
    7. ' éléments' → logprob: -3.6149063110351562
    8. ' données' → logprob: -3.6149063110351562
    9. '_' → logprob: -4.114906311035156
    10. ' ent' → logprob: -4.489906311035156

Token 97: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9949698448181152
    2. ' des' → logprob: -1.1199698448181152
    3. ' ' → logprob: -2.4949698448181152
    4. 'values' → logprob: -3.1199698448181152
    5. ' =' → logprob: -3.3699698448181152
    6. 's' → logprob: -3.7449698448181152
    7. '<|end|>' → logprob: -4.619969844818115
    8. 'des' → logprob: -4.619969844818115
    9. '    ' → logprob: -4.744969844818115
    10. '[]' → logprob: -4.744969844818115

Token 98: ' a' (ID: 261)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3318287134170532
    2. ' input' → logprob: -1.4568287134170532
    3. 'input' → logprob: -1.8318287134170532
    4. 'a' → logprob: -2.2068285942077637
    5. ' la' → logprob: -2.4568285942077637
    6. 'l' → logprob: -3.8318285942077637
    7. 'scores' → logprob: -3.8318285942077637
    8. ' scores' → logprob: -4.081828594207764
    9. 'n' → logprob: -4.706828594207764
    10. ' n' → logprob: -4.831828594207764

Token 99: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026321083307266235
    2. '_' → logprob: -4.901320934295654
    3. '=' → logprob: -5.151320934295654
    4. 's' → logprob: -5.776320934295654
    5. '   ' → logprob: -5.901320934295654
    6. '=[]' → logprob: -5.901320934295654
    7. '[]' → logprob: -6.776320934295654
    8. 'a' → logprob: -7.276320934295654
    9. ' ' → logprob: -7.901320934295654
    10. '.append' → logprob: -8.401321411132812

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04387887194752693
    2. 'a' → logprob: -3.1688787937164307
    3. ' a' → logprob: -7.29387903213501
    4. '    
' → logprob: -8.918878555297852
    5. '    ' → logprob: -11.293878555297852
    6. '  ' → logprob: -11.293878555297852
    7. ' ' → logprob: -11.918878555297852
    8. 's' → logprob: -12.543878555297852
    9. 'n' → logprob: -12.668878555297852
    10. '[' → logprob: -12.668878555297852

Token 101: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1811857521533966
    2. ' a' → logprob: -1.8061857223510742
    3. '   ' → logprob: -6.681185722351074
    4. ' values' → logprob: -9.681185722351074
    5. 'values' → logprob: -9.931185722351074
    6. ' lines' → logprob: -10.556185722351074
    7. '	a' → logprob: -11.056185722351074
    8. ' ' → logprob: -12.181185722351074
    9. 's' → logprob: -12.681185722351074
    10. '    ' → logprob: -13.056185722351074

Token 102: '_raw' (ID: 36128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145446062088013
    2. '=' → logprob: -1.7014544010162354
    3. '=[]' → logprob: -10.701454162597656
    4. '_' → logprob: -11.701454162597656
    5. 's' → logprob: -12.326454162597656
    6. '[]' → logprob: -13.576454162597656
    7. ' ' → logprob: -14.326454162597656
    8. '[:]' → logprob: -14.326454162597656
    9. 'a' → logprob: -14.576454162597656
    10. '[' → logprob: -14.701454162597656

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933397054672241
    2. ' =' → logprob: -0.6933397054672241
    3. '=[]' → logprob: -9.318339347839355
    4. '_' → logprob: -9.943339347839355
    5. 's' → logprob: -11.318339347839355
    6. ')' → logprob: -11.568339347839355
    7. 'a' → logprob: -11.943339347839355
    8. ',' → logprob: -12.068339347839355
    9. '=input' → logprob: -12.443339347839355
    10. '[]' → logprob: -12.943339347839355

Token 104: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.26371192932128906
    2. 'input' → logprob: -1.513711929321289
    3. ' []' → logprob: -4.763711929321289
    4. '[]' → logprob: -6.138711929321289
    5. ' [' → logprob: -7.513711929321289
    6. ' list' → logprob: -8.763711929321289
    7. '[input' → logprob: -8.763711929321289
    8. 'list' → logprob: -9.263711929321289
    9. ' ' → logprob: -10.263711929321289
    10. '[' → logprob: -10.888711929321289

Token 105: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00958597008138895
    2. '().' → logprob: -5.134585857391357
    3. '(' → logprob: -5.634585857391357
    4. '())' → logprob: -10.884586334228516
    5. '()
' → logprob: -11.634586334228516
    6. ' ()' → logprob: -11.759586334228516
    7. ')' → logprob: -12.009586334228516
    8. '('' → logprob: -12.134586334228516
    9. '()

' → logprob: -12.134586334228516
    10. '("("' → logprob: -12.259586334228516

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031886440701782703
    2. 'strip' → logprob: -5.753188610076904
    3. 'rstrip' → logprob: -11.503189086914062
    4. ' split' → logprob: -14.128189086914062
    5. 'spl' → logprob: -16.378189086914062
    6. '(split' → logprob: -17.128189086914062
    7. 'plit' → logprob: -19.128189086914062
    8. 's' → logprob: -19.503189086914062
    9. 'replace' → logprob: -19.503189086914062
    10. ' strip' → logprob: -19.628189086914062

Token 107: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000724229437764734
    2. '(' → logprob: -7.2507243156433105
    3. '()
' → logprob: -11.375723838806152
    4. '()]' → logprob: -14.250723838806152
    5. ' ()' → logprob: -14.375723838806152
    6. '()

' → logprob: -14.500723838806152
    7. ')' → logprob: -15.250723838806152
    8. '(
' → logprob: -15.875723838806152
    9. '<|end|>' → logprob: -15.875723838806152
    10. '()\' → logprob: -16.25072479248047

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0863506942987442
    2. '<|end|>' → logprob: -3.086350679397583
    3. 'a' → logprob: -3.586350679397583
    4. ' a' → logprob: -5.586350917816162
    5. '    
' → logprob: -6.336350917816162
    6. ' ' → logprob: -6.461350917816162
    7. '  ' → logprob: -7.461350917816162
    8. '
' → logprob: -7.711350917816162
    9. '    ' → logprob: -7.711350917816162
    10. '<|end|>' → logprob: -8.336350440979004

Token 109: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.005494141485542059
    2. ' a' → logprob: -5.880494117736816
    3. '   ' → logprob: -6.255494117736816
    4. 'if' → logprob: -7.505494117736816
    5. ' if' → logprob: -8.755494117736816
    6. ' ' → logprob: -11.380494117736816
    7. '#' → logprob: -11.505494117736816
    8. '    
' → logprob: -11.630494117736816
    9. '    ' → logprob: -11.880494117736816
    10. 'try' → logprob: -12.380494117736816

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14445699751377106
    2. '=' → logprob: -2.6444571018218994
    3. '_' → logprob: -2.7694571018218994
    4. '_raw' → logprob: -7.39445686340332
    5. '=[]' → logprob: -9.39445686340332
    6. '_=' → logprob: -10.26945686340332
    7. '[:]' → logprob: -11.51945686340332
    8. ' _' → logprob: -12.64445686340332
    9. 'raw' → logprob: -12.76945686340332
    10. 's' → logprob: -13.14445686340332

Token 111: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.184295654296875
    2. ' [' → logprob: -1.934295654296875
    3. '[list' → logprob: -4.434295654296875
    4. 'list' → logprob: -4.559295654296875
    5. '[' → logprob: -6.559295654296875
    6. '[a' → logprob: -11.184295654296875
    7. ' []' → logprob: -12.059295654296875
    8. ' ' → logprob: -12.559295654296875
    9. '[]' → logprob: -12.934295654296875
    10. '[len' → logprob: -13.184295654296875

Token 112: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7796111106872559
    2. ' for' → logprob: -1.1546111106872559
    3. '   ' → logprob: -1.7796111106872559
    4. '<|end|>' → logprob: -3.529611110687256
    5. ' ' → logprob: -3.654611110687256
    6. '	for' → logprob: -7.279611110687256
    7. '  ' → logprob: -7.654611110687256
    8. '    
' → logprob: -8.029611587524414
    9. ' 
' → logprob: -8.154611587524414
    10. '    ' → logprob: -8.654611587524414

Token 113: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018152287229895592
    2. ' for' → logprob: -4.018152236938477
    3. '   ' → logprob: -13.518152236938477
    4. '	for' → logprob: -14.018152236938477
    5. ' ' → logprob: -16.768152236938477
    6. '    ' → logprob: -16.768152236938477
    7. ' 
' → logprob: -17.018152236938477
    8. '    
' → logprob: -17.643152236938477
    9. '  ' → logprob: -17.768152236938477
    10. '<|end|>' → logprob: -18.643152236938477

Token 114: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.9025076031684875
    2. ' x' → logprob: -1.4025075435638428
    3. 'x' → logprob: -1.7775075435638428
    4. 'val' → logprob: -2.0275075435638428
    5. ' value' → logprob: -4.402507781982422
    6. ' v' → logprob: -4.777507781982422
    7. ' i' → logprob: -4.902507781982422
    8. 'value' → logprob: -5.027507781982422
    9. 'v' → logprob: -5.152507781982422
    10. 'i' → logprob: -5.402507781982422

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0035861756186932325
    2. ' ' → logprob: -6.003586292266846
    3. 'in' → logprob: -7.378586292266846
    4. 'u' → logprob: -8.503585815429688
    5. 'e' → logprob: -9.753585815429688
    6. 'ue' → logprob: -9.878585815429688
    7. '   ' → logprob: -10.128585815429688
    8. '  ' → logprob: -10.628585815429688
    9. 'o' → logprob: -10.878585815429688
    10. '_' → logprob: -11.128585815429688

Token 116: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931495666503906
    2. ' a' → logprob: -0.6931495666503906
    3. '	a' → logprob: -13.44314956665039
    4. '_a' → logprob: -15.31814956665039
    5. ' ' → logprob: -15.81814956665039
    6. '    ' → logprob: -16.69314956665039
    7. '   ' → logprob: -17.06814956665039
    8. '#a' → logprob: -17.06814956665039
    9. '(a' → logprob: -17.19314956665039
    10. ')a' → logprob: -17.31814956665039

Token 117: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.250008583068848
    3. 'raw' → logprob: -12.750008583068848
    4. '_RAW' → logprob: -15.250008583068848
    5. 'Raw' → logprob: -16.37500762939453
    6. ' raw' → logprob: -17.12500762939453
    7. ' _' → logprob: -18.00000762939453
    8. '	raw' → logprob: -18.12500762939453
    9. '[' → logprob: -18.37500762939453
    10. '   ' → logprob: -18.37500762939453

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017455116612836719
    2. ' :' → logprob: -6.501745700836182
    3. ':
' → logprob: -8.751745223999023
    4. '):' → logprob: -9.876745223999023
    5. ':int' → logprob: -10.876745223999023
    6. '<|end|>' → logprob: -12.126745223999023
    7. ')' → logprob: -13.001745223999023
    8. '<|end|>' → logprob: -13.751745223999023
    9. ',' → logprob: -14.001745223999023
    10. ' :
' → logprob: -14.001745223999023

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011252003721892834
    2. ' a' → logprob: -5.511251926422119
    3. ' ' → logprob: -6.261251926422119
    4. 'a' → logprob: -6.261251926422119
    5. '   ' → logprob: -6.761251926422119
    6. '    ' → logprob: -7.511251926422119
    7. 'int' → logprob: -7.761251926422119
    8. ' ' → logprob: -8.261252403259277
    9. ' int' → logprob: -8.636252403259277
    10. ',' → logprob: -9.011252403259277

Token 120: ' try' (ID: 2075)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7005448341369629
    2. 'a' → logprob: -0.8255448341369629
    3. '       ' → logprob: -3.075544834136963
    4. '    ' → logprob: -5.200544834136963
    5. 'try' (adapté à ' try') → logprob: -5.200544834136963
    6. '   ' → logprob: -5.700544834136963
    7. ' try' → logprob: -5.700544834136963
    8. ' 
' → logprob: -7.075544834136963
    9. '    
' → logprob: -8.575544357299805
    10. '        ' → logprob: -8.825544357299805

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12978459894657135
    2. '           ' → logprob: -2.12978458404541
    3. ' :' → logprob: -6.12978458404541
    4. ':
' → logprob: -7.50478458404541
    5. '<|end|>' → logprob: -10.25478458404541
    6. '            ' → logprob: -10.87978458404541
    7. '          ' → logprob: -11.25478458404541
    8. ',' → logprob: -11.37978458404541
    9. '   ' → logprob: -11.75478458404541
    10. ' :
' → logprob: -12.12978458404541

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011427151912357658
    2. ':' → logprob: -10.375114440917969
    3. '<|end|>' → logprob: -10.500114440917969
    4. ' a' → logprob: -11.750114440917969
    5. '          ' → logprob: -11.875114440917969
    6. 'a' → logprob: -12.000114440917969
    7. '       ' → logprob: -12.375114440917969
    8. '	       ' → logprob: -12.500114440917969
    9. '   ' → logprob: -12.500114440917969
    10. '               ' → logprob: -12.625114440917969

Token 123: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.026620255783200264
    2. 'a' (adapté à ' a') → logprob: -3.6516201496124268
    3. '           ' → logprob: -8.651619911193848
    4. '               ' → logprob: -9.026619911193848
    5. '   ' → logprob: -11.401619911193848
    6. ' ' → logprob: -12.276619911193848
    7. ' ' → logprob: -13.651619911193848
    8. '	a' → logprob: -13.651619911193848
    9. ' val' → logprob: -14.276619911193848
    10. 'v' → logprob: -14.401619911193848

Token 124: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003849133790936321
    2. '.' → logprob: -7.87538480758667
    3. '.app' → logprob: -12.875385284423828
    4. ' .' → logprob: -13.250385284423828
    5. 'append' → logprob: -15.375385284423828
    6. '.extend' → logprob: -16.125385284423828
    7. '.ap' → logprob: -16.500385284423828
    8. '.Append' → logprob: -17.250385284423828
    9. '_append' → logprob: -17.500385284423828
    10. '_val' → logprob: -17.750385284423828

Token 125: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005241344682872295
    2. '(' → logprob: -5.255241394042969
    3. ' int' → logprob: -13.130241394042969
    4. ' (' → logprob: -13.505241394042969
    5. 'int' → logprob: -13.505241394042969
    6. '(in' → logprob: -13.505241394042969
    7. '(
' → logprob: -13.755241394042969
    8. '(i' → logprob: -15.380241394042969
    9. '=int' → logprob: -16.63024139404297
    10. '<int' → logprob: -17.25524139404297

Token 126: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.1002669632434845
    2. '(' → logprob: -2.350266933441162
    3. ')' → logprob: -10.60026741027832
    4. ' (' → logprob: -11.35026741027832
    5. '(
' → logprob: -11.47526741027832
    6. ' val' → logprob: -12.22526741027832
    7. ' )' → logprob: -12.97526741027832
    8. 'val' → logprob: -13.22526741027832
    9. ',val' → logprob: -14.22526741027832
    10. '(

' → logprob: -14.22526741027832

Token 127: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004263589158654213
    2. ')' → logprob: -5.504263401031494
    3. '))
' → logprob: -9.379263877868652
    4. ' ))' → logprob: -9.629263877868652
    5. ')))' → logprob: -10.754263877868652
    6. '()))' → logprob: -12.129263877868652
    7. '   ' → logprob: -13.004263877868652
    8. ' ' → logprob: -13.254263877868652
    9. '))

' → logprob: -14.254263877868652
    10. ' )' → logprob: -14.254263877868652

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03541334718465805
    2. ' except' → logprob: -3.9104132652282715
    3. ')' → logprob: -5.0354132652282715
    4. 'except' → logprob: -5.1604132652282715
    5. '<|end|>' → logprob: -6.6604132652282715
    6. '	except' → logprob: -7.6604132652282715
    7. '
' → logprob: -8.03541374206543
    8. ' )' → logprob: -8.66041374206543
    9. '   ' → logprob: -9.78541374206543
    10. ')
' → logprob: -9.91041374206543

Token 129: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.3603971600532532
    2. 'except' (adapté à ' except') → logprob: -1.8603971004486084
    3. '   ' → logprob: -2.1103971004486084
    4. '       ' → logprob: -3.7353971004486084
    5. '	except' → logprob: -6.3603973388671875
    6. '    
' → logprob: -8.985397338867188
    7. ':
' → logprob: -10.735397338867188
    8. '    ' → logprob: -11.110397338867188
    9. '
' → logprob: -11.485397338867188
    10. ' ' → logprob: -11.860397338867188

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012983977794647217
    2. '<|end|>' → logprob: -4.887983798980713
    3. ' Value' → logprob: -5.637983798980713
    4. ' :' → logprob: -7.387983798980713
    5. ' ' → logprob: -8.012984275817871
    6. ':
' → logprob: -8.387984275817871
    7. ' Index' → logprob: -8.512984275817871
    8. '(Value' → logprob: -8.512984275817871
    9. '<|end|>' → logprob: -9.262984275817871
    10. ' Exception' → logprob: -10.762984275817871

Token 131: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.211808979511261
    2. ' pass' → logprob: -2.836808919906616
    3. ':
' → logprob: -3.086808919906616
    4. ' Value' → logprob: -3.211808919906616
    5. '   ' → logprob: -4.086809158325195
    6. 'Value' → logprob: -4.461809158325195
    7. '<|end|>' → logprob: -4.586809158325195
    8. ' ' → logprob: -6.211809158325195
    9. '	Value' → logprob: -6.711809158325195
    10. '    ' → logprob: -7.086809158325195

Token 132: ' a' (ID: 261)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.730405867099762
    2. ' print' → logprob: -1.1054058074951172
    3. ' return' → logprob: -2.105405807495117
    4. 'print' → logprob: -3.605405807495117
    5. ' continue' → logprob: -4.230405807495117
    6. '           ' → logprob: -4.855405807495117
    7. '       ' → logprob: -5.355405807495117
    8. 'return' → logprob: -5.355405807495117
    9. 'pass' → logprob: -5.480405807495117
    10. '   ' → logprob: -6.855405807495117

Token 133: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07147210836410522
    2. '.' → logprob: -2.69647216796875
    3. '.pop' → logprob: -8.07147216796875
    4. ' pass' → logprob: -8.19647216796875
    5. ' .' → logprob: -8.57147216796875
    6. '.remove' → logprob: -9.32147216796875
    7. '=' → logprob: -9.44647216796875
    8. '.clear' → logprob: -9.57147216796875
    9. 'pass' → logprob: -9.57147216796875
    10. '<|end|>' → logprob: -9.82147216796875

Token 134: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013270351104438305
    2. '0' → logprob: -4.388270378112793
    3. '(None' → logprob: -7.388270378112793
    4. '(-' → logprob: -9.138270378112793
    5. 'None' → logprob: -10.513270378112793
    6. '(val' → logprob: -12.763270378112793
    7. '(int' → logprob: -13.263270378112793
    8. 'a' → logprob: -14.388270378112793
    9. 'val' → logprob: -14.388270378112793
    10. ' ' → logprob: -14.888270378112793

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006712094182148576
    2. ' ' → logprob: -7.62567138671875
    3. '-' → logprob: -9.12567138671875
    4. 'None' → logprob: -10.00067138671875
    5. 'val' → logprob: -11.12567138671875
    6. ' None' → logprob: -12.50067138671875
    7. ' -' → logprob: -12.87567138671875
    8. ')' → logprob: -13.00067138671875
    9. '1' → logprob: -13.37567138671875
    10. 'a' → logprob: -14.18817138671875

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001777960715116933
    2. ')
' → logprob: -8.750177383422852
    3. ' )' → logprob: -11.250177383422852
    4. '<|end|>' → logprob: -12.375177383422852
    5. '
' → logprob: -13.875177383422852
    6. ')

' → logprob: -15.125177383422852
    7. ' ' → logprob: -15.375177383422852
    8. '   ' → logprob: -15.750177383422852
    9. ')return' → logprob: -16.12517738342285
    10. ')#' → logprob: -16.50017738342285

Token 137: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' C' (ID: 363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3077131509780884
    2. 'e' → logprob: -1.3077131509780884
    3. ''' → logprob: -2.182713031768799
    4. 'ont' → logprob: -2.307713031768799
    5. ''est' → logprob: -2.807713031768799
    6. 'omme' → logprob: -3.432713031768799
    7. 'es' → logprob: -3.557713031768799
    8. '#' → logprob: -3.557713031768799
    9. ' '' → logprob: -3.932713031768799
    10. ''a' → logprob: -4.557713031768799

Token 140: ' peut' (ID: 9216)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4806780219078064
    2. 'une' → logprob: -1.9806780815124512
    3. 'tout' → logprob: -3.105678081512451
    4. ' un' → logprob: -3.230678081512451
    5. 'la' → logprob: -3.480678081512451
    6. 'un' → logprob: -3.855678081512451
    7. 'le' → logprob: -4.230678081512451
    8. ' le' → logprob: -4.355678081512451
    9. 'pas' → logprob: -4.730678081512451
    10. 'au' → logprob: -4.980678081512451

Token 141: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.436042845249176
    2. '-être' → logprob: -1.0610427856445312
    3. 'etre' → logprob: -6.186042785644531
    4. 'tre' → logprob: -6.186042785644531
    5. '-' → logprob: -6.811042785644531
    6. 't' → logprob: -7.436042785644531
    7. 'ètre' → logprob: -7.436042785644531
    8. ''être' → logprob: -7.811042785644531
    9. '#' → logprob: -8.936042785644531
    10. 'êt' → logprob: -8.936042785644531

Token 142: ' pas' (ID: 2173)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8762297034263611
    2. 'pas' → logprob: -1.7512297630310059
    3. 'un' → logprob: -1.8762297630310059
    4. ' une' → logprob: -2.501229763031006
    5. ' mieux' → logprob: -2.876229763031006
    6. 'le' → logprob: -2.876229763031006
    7. ' un' → logprob: -4.376229763031006
    8. ' pas' → logprob: -5.001229763031006
    9. 'par' → logprob: -5.376229763031006
    10. 'm' → logprob: -5.626229763031006

Token 143: ' terrible' (ID: 28380)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.47286054491996765
    2. ' une' → logprob: -2.47286057472229
    3. ' la' → logprob: -2.59786057472229
    4. 'le' → logprob: -2.97286057472229
    5. 'une' → logprob: -3.34786057472229
    6. ' parfait' → logprob: -3.34786057472229
    7. 'l' → logprob: -3.47286057472229
    8. 'ce' → logprob: -4.722860336303711
    9. ' idéal' → logprob: -4.722860336303711
    10. ' le' → logprob: -4.847860336303711

Token 144: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' bon' (ID: 4846)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5092211365699768
    2. ' ça' → logprob: -1.884221076965332
    3. ' c' → logprob: -2.384221076965332
    4. ' au' → logprob: -3.134221076965332
    5. ' on' → logprob: -3.134221076965332
    6. ' pas' → logprob: -4.259221076965332
    7. ' a' → logprob: -4.884221076965332
    8. ' je' → logprob: -4.884221076965332
    9. ' voilà' → logprob: -4.884221076965332
    10. ' cela' → logprob: -5.259221076965332

Token 146: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6100682616233826
    2. '<|end|>' → logprob: -1.2350683212280273
    3. '   ' → logprob: -2.4850683212280273
    4. '    
' → logprob: -3.4850683212280273
    5. ' 
' → logprob: -3.6100683212280273
    6. ' ' → logprob: -4.735068321228027
    7. '  
' → logprob: -5.360068321228027
    8. ')' → logprob: -5.610068321228027
    9. '<|end|>' → logprob: -5.610068321228027
    10. '   
' → logprob: -7.610068321228027

Token 148: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3581942319869995
    2. '
' → logprob: -2.108194351196289
    3. '    
' → logprob: -2.858194351196289
    4. '#' (adapté à ' #') → logprob: -3.233194351196289
    5. ' if' → logprob: -3.483194351196289
    6. 'if' → logprob: -3.608194351196289
    7. ' #' → logprob: -4.858194351196289
    8. ' 
' → logprob: -5.233194351196289
    9. '   
' → logprob: -5.733194351196289
    10. '  
' → logprob: -6.483194351196289

Token 149: ' Je' (ID: 4678)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6956960558891296
    2. 'counter' → logprob: -1.5706961154937744
    3. ' if' → logprob: -2.0706961154937744
    4. 'count' → logprob: -3.0706961154937744
    5. '#' → logprob: -3.3206961154937744
    6. 'freq' → logprob: -3.3206961154937744
    7. 'counts' → logprob: -4.445695877075195
    8. ' counter' → logprob: -4.570695877075195
    9. '   ' → logprob: -5.070695877075195
    10. 'comp' → logprob: -5.570695877075195

Token 150: ' vais' (ID: 42975)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' freq' → logprob: -1.3729816675186157
    2. ' counter' → logprob: -1.8729816675186157
    3. ' counts' → logprob: -1.8729816675186157
    4. ' #' → logprob: -2.372981548309326
    5. ' count' → logprob: -2.622981548309326
    6. ' ' → logprob: -2.622981548309326
    7. ' if' → logprob: -3.247981548309326
    8. 'count' → logprob: -3.497981548309326
    9. 'freq' → logprob: -3.997981548309326
    10. ' frequency' → logprob: -4.122981548309326

Token 151: ' calcul' (ID: 7559)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.448175847530365
    2. ' continuer' → logprob: -1.5731759071350098
    3. ' compter' → logprob: -2.9481759071350098
    4. ' créer' → logprob: -3.3231759071350098
    5. ' calcul' → logprob: -4.82317590713501
    6. ' ' → logprob: -4.94817590713501
    7. 'util' → logprob: -5.07317590713501
    8. ' vérifier' → logprob: -5.44817590713501
    9. ' essayer' → logprob: -5.57317590713501
    10. ' analyser' → logprob: -5.57317590713501

Token 152: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0002541872672736645
    2. 'ate' → logprob: -8.37525463104248
    3. 'e' → logprob: -10.75025463104248
    4. 'collections' → logprob: -13.75025463104248
    5. 'uer' → logprob: -14.62525463104248
    6. 'ater' → logprob: -15.50025463104248
    7. '#' → logprob: -17.000253677368164
    8. '   ' → logprob: -17.000253677368164
    9. '```' → logprob: -17.000253677368164
    10. 'user' → logprob: -17.125253677368164

Token 153: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17696186900138855
    2. ' les' → logprob: -2.301961898803711
    3. ' frequencies' → logprob: -3.926961898803711
    4. ' ' → logprob: -4.176961898803711
    5. ' le' → logprob: -5.426961898803711
    6. ' counter' → logprob: -5.801961898803711
    7. 'les' → logprob: -6.426961898803711
    8. 's' → logprob: -6.676961898803711
    9. ' counts' → logprob: -6.676961898803711
    10. '<|end|>' → logprob: -6.676961898803711

Token 154: ' p' (ID: 275)
  Prédit: ' fré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fré' → logprob: -0.41794881224632263
    2. 'fr' → logprob: -3.2929487228393555
    3. 'freq' → logprob: -3.6679487228393555
    4. ' occurrences' → logprob: -3.7929487228393555
    5. ' compte' → logprob: -3.9179487228393555
    6. ' frequencies' → logprob: -4.0429487228393555
    7. 'com' → logprob: -4.1679487228393555
    8. 's' → logprob: -4.4179487228393555
    9. ' indices' → logprob: -4.4179487228393555
    10. ' counts' → logprob: -4.5429487228393555

Token 155: 'aires' (ID: 8507)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.5013643503189087
    2. 'refix' → logprob: -1.7513643503189087
    3. 'r' → logprob: -2.001364231109619
    4. 'lus' → logprob: -2.126364231109619
    5. 'ro' → logprob: -3.126364231109619
    6. 'ar' → logprob: -3.251364231109619
    7. 'airs' → logprob: -3.251364231109619
    8. 'aires' → logprob: -3.251364231109619
    9. 'ré' → logprob: -3.501364231109619
    10. 'ermut' → logprob: -4.001364231109619

Token 156: ' strict' (ID: 12035)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.921047031879425
    2. ' (' → logprob: -1.7960469722747803
    3. ' ,' → logprob: -2.2960469722747803
    4. ' pairs' → logprob: -2.5460469722747803
    5. ' =' → logprob: -2.7960469722747803
    6. ',' → logprob: -3.0460469722747803
    7. '<|end|>' → logprob: -3.5460469722747803
    8. '_pairs' → logprob: -3.9210469722747803
    9. ' frequencies' → logprob: -4.296047210693359
    10. ' de' → logprob: -4.296047210693359

Token 157: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.5846005082130432
    2. 'es' → logprob: -0.8346005082130432
    3. 'e' → logprob: -5.334600448608398
    4. 'ements' → logprob: -6.959600448608398
    5. 'emen' → logprob: -7.459600448608398
    6. 'em' → logprob: -8.209600448608398
    7. 'ment' → logprob: -8.334600448608398
    8. 'emment' → logprob: -8.459600448608398
    9. 'emente' → logprob: -8.584600448608398
    10. 'ément' → logprob: -8.709600448608398

Token 158: ' cro' (ID: 11270)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.2783403396606445
    2. 'cro' → logprob: -1.6533403396606445
    3. 'de' → logprob: -2.1533403396606445
    4. 'sup' → logprob: -2.9033403396606445
    5. ' increasing' → logprob: -3.2783403396606445
    6. ' cro' → logprob: -3.6533403396606445
    7. 'distinct' → logprob: -3.6533403396606445
    8. 'in' → logprob: -3.7783403396606445
    9. ' sup' → logprob: -3.9033403396606445
    10. 's' → logprob: -4.1533403396606445

Token 159: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.04892513528466225
    2. 'issante' → logprob: -3.7989251613616943
    3. 'is' → logprob: -4.173924922943115
    4. 'i' → logprob: -6.298924922943115
    5. 'issant' → logprob: -6.298924922943115
    6. 'issants' → logprob: -6.423924922943115
    7. '
' → logprob: -7.673924922943115
    8. '#' → logprob: -7.923924922943115
    9. 'issent' → logprob: -7.923924922943115
    10. '{' → logprob: -8.673925399780273

Token 160: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.005841115023940802
    2. 'entes' → logprob: -5.380841255187988
    3. 'es' → logprob: -8.005841255187988
    4. 'ant' → logprob: -8.380841255187988
    5. 'ante' → logprob: -8.755841255187988
    6. '#' → logprob: -9.630841255187988
    7. 'ing' → logprob: -10.005841255187988
    8. 'ants' → logprob: -10.130841255187988
    9. 'ent' → logprob: -10.505841255187988
    10. '*' → logprob: -10.755841255187988

Token 161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03378884866833687
    2. ',' → logprob: -4.408788681030273
    3. '<|end|>' → logprob: -4.908788681030273
    4. '    ' → logprob: -5.283788681030273
    5. ' ,' → logprob: -5.533788681030273
    6. ' ' → logprob: -6.908788681030273
    7. '    
' → logprob: -7.033788681030273
    8. '.' → logprob: -7.408788681030273
    9. '  ' → logprob: -7.658788681030273
    10. ' (' → logprob: -8.408788681030273

Token 162: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03801693022251129
    2. ' ,' → logprob: -4.7880167961120605
    3. ',' → logprob: -5.0380167961120605
    4. '   ' → logprob: -5.0380167961120605
    5. '<|end|>' → logprob: -5.4130167961120605
    6. '    ' → logprob: -5.7880167961120605
    7. '  ' → logprob: -6.2880167961120605
    8. '[' → logprob: -7.0380167961120605
    9. '_' → logprob: -7.1630167961120605
    10. ' 
' → logprob: -7.1630167961120605

Token 163: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7664753794670105
    2. ' ' → logprob: -1.5164754390716553
    3. ' pairs' → logprob: -3.0164754390716553
    4. ' counter' → logprob: -3.2664754390716553
    5. ',' → logprob: -3.7664754390716553
    6. 'count' (adapté à ' count') → logprob: -4.016475200653076
    7. 's' → logprob: -4.141475200653076
    8. 'n' → logprob: -4.266475200653076
    9. ' counts' → logprob: -4.266475200653076
    10. ' 
' → logprob: -4.391475200653076

Token 164: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3454543650150299
    2. '_pairs' → logprob: -1.7204543352127075
    3. 's' → logprob: -3.095454454421997
    4. ' =' → logprob: -3.345454454421997
    5. '=' → logprob: -3.470454454421997
    6. '_p' → logprob: -8.220454216003418
    7. 'es' → logprob: -8.470454216003418
    8. ',' → logprob: -8.845454216003418
    9. ')' → logprob: -9.345454216003418
    10. '_=' → logprob: -9.470454216003418

Token 165: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05033936724066734
    2. ' ' → logprob: -3.175339460372925
    3. 'collections' → logprob: -5.050339221954346
    4. ' collections' → logprob: -7.050339221954346
    5. '[' → logprob: -11.425339698791504
    6. '   ' → logprob: -11.425339698791504
    7. '  ' → logprob: -12.050339698791504
    8. ' [' → logprob: -13.050339698791504
    9. 'sum' → logprob: -13.800339698791504
    10. '    ' → logprob: -13.862839698791504

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04360341280698776
    2. 'collections' → logprob: -3.1686034202575684
    3. ' ' → logprob: -7.543603420257568
    4. '[' → logprob: -10.66860294342041
    5. ' collections' → logprob: -10.66860294342041
    6. 'sum' → logprob: -11.54360294342041
    7. '[]' → logprob: -12.41860294342041
    8. '{' → logprob: -12.79360294342041
    9. '{}' → logprob: -12.91860294342041
    10. '   ' → logprob: -13.29360294342041

Token 167: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06904789060354233
    2. ' for' → logprob: -2.8190479278564453
    3. 'n' → logprob: -5.444047927856445
    4. 'i' → logprob: -6.569047927856445
    5. 'a' → logprob: -7.944047927856445
    6. 'collections' → logprob: -7.944047927856445
    7. '   ' → logprob: -8.819047927856445
    8. ' ' → logprob: -9.069047927856445
    9. ' i' → logprob: -9.444047927856445
    10. ')' → logprob: -9.944047927856445

Token 170: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02632874622941017
    2. 'i' → logprob: -3.6513288021087646
    3. '	i' → logprob: -11.401329040527344
    4. '<|end|>' → logprob: -12.026329040527344
    5. '_i' → logprob: -12.651329040527344
    6. ' ' → logprob: -12.776329040527344
    7. 'range' → logprob: -14.151329040527344
    8. ' ' → logprob: -14.526329040527344
    9. '<|end|>' → logprob: -14.651329040527344
    10. '_' → logprob: -14.651329040527344

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0020619959104806185
    2. ' ' → logprob: -6.37706184387207
    3. 'in' → logprob: -8.37706184387207
    4. ' range' → logprob: -9.50206184387207
    5. 'range' → logprob: -10.37706184387207
    6. '+' → logprob: -11.37706184387207
    7. '  ' → logprob: -12.12706184387207
    8. ' i' → logprob: -13.62706184387207
    9. ')' → logprob: -13.75206184387207
    10. '   ' → logprob: -14.00206184387207

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.126935675740242
    2. ' range' → logprob: -2.1269357204437256
    3. 'a' → logprob: -12.751935958862305
    4. '	range' → logprob: -13.251935958862305
    5. '   ' → logprob: -14.251935958862305
    6. '(range' → logprob: -14.501935958862305
    7. ' ' → logprob: -14.626935958862305
    8. ')' → logprob: -15.376935958862305
    9. ' a' → logprob: -16.001935958862305
    10. '  ' → logprob: -16.001935958862305

Token 173: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07976710051298141
    2. '(' → logprob: -2.5797669887542725
    3. '(len' → logprob: -7.079767227172852
    4. '(k' → logprob: -10.704767227172852
    5. ' (' → logprob: -11.454767227172852
    6. '(
' → logprob: -13.829767227172852
    7. '(l' → logprob: -15.579767227172852
    8. '(length' → logprob: -15.579767227172852
    9. ' n' → logprob: -15.954767227172852
    10. '(i' → logprob: -16.57976722717285

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1783178597688675
    2. '-' → logprob: -2.1783177852630615
    3. ' -' → logprob: -3.4283177852630615
    4. '):
' → logprob: -4.303318023681641
    5. ' ):' → logprob: -6.053318023681641
    6. ')' → logprob: -6.428318023681641
    7. ' ' → logprob: -9.80331802368164
    8. ' ):
' → logprob: -10.67831802368164
    9. '   ' → logprob: -10.80331802368164
    10. '):

' → logprob: -11.17831802368164

Token 175: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2852550745010376
    2. 'for' (adapté à ' for') → logprob: -1.4102550745010376
    3. '   ' → logprob: -5.535254955291748
    4. '	for' → logprob: -9.910255432128906
    5. '    ' → logprob: -10.035255432128906
    6. '       ' → logprob: -10.535255432128906
    7. '<|end|>' → logprob: -11.160255432128906
    8. ' ' → logprob: -12.535255432128906
    9. 'j' → logprob: -12.660255432128906
    10. 'range' → logprob: -13.035255432128906

Token 177: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6326545476913452
    2. 'j' → logprob: -0.7576545476913452
    3. '_j' → logprob: -10.882654190063477
    4. 'range' → logprob: -11.382654190063477
    5. '	j' → logprob: -11.507654190063477
    6. ' range' → logprob: -12.257654190063477
    7. '<|end|>' → logprob: -12.507654190063477
    8. '   ' → logprob: -13.257654190063477
    9. ' ' → logprob: -13.757654190063477
    10. '  ' → logprob: -14.257654190063477

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01649622432887554
    2. ' i' → logprob: -4.266496181488037
    3. ' ' → logprob: -6.891496181488037
    4. 'in' → logprob: -7.516496181488037
    5. '=i' → logprob: -7.891496181488037
    6. ' =' → logprob: -9.266496658325195
    7. '=' → logprob: -9.516496658325195
    8. '(i' → logprob: -9.891496658325195
    9. '<|end|>' → logprob: -9.891496658325195
    10. 'i' → logprob: -10.391496658325195

Token 179: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.349417507648468
    2. 'range' → logprob: -1.2244174480438232
    3. '(range' → logprob: -7.349417686462402
    4. ' i' → logprob: -8.599417686462402
    5. 'i' → logprob: -9.474417686462402
    6. '<|end|>' → logprob: -10.724417686462402
    7. ' ' → logprob: -11.099417686462402
    8. ' xrange' → logprob: -11.849417686462402
    9. '	range' → logprob: -11.849417686462402
    10. '(i' → logprob: -12.474417686462402

Token 180: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005159787251614034
    2. '(n' → logprob: -8.125515937805176
    3. '(' → logprob: -8.750515937805176
    4. 'i' → logprob: -10.125515937805176
    5. ' i' → logprob: -11.875515937805176
    6. '(j' → logprob: -12.375515937805176
    7. ' (' → logprob: -12.375515937805176
    8. 'n' → logprob: -13.000515937805176
    9. '(
' → logprob: -13.625515937805176
    10. ')' → logprob: -14.500515937805176

Token 181: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05491207167506218
    2. ' +' → logprob: -2.9299120903015137
    3. '+
' → logprob: -11.804911613464355
    4. '1' → logprob: -11.929911613464355
    5. '+i' → logprob: -12.304911613464355
    6. '+j' → logprob: -12.804911613464355
    7. '+k' → logprob: -12.804911613464355
    8. ' +
' → logprob: -13.304911613464355
    9. '+)' → logprob: -14.054911613464355
    10. '   ' → logprob: -14.054911613464355

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5718896389007568
    2. '<|end|>' → logprob: -1.4468896389007568
    3. '       ' → logprob: -2.821889638900757
    4. ' if' → logprob: -2.946889638900757
    5. ' ' → logprob: -3.071889638900757
    6. 'if' → logprob: -4.571889877319336
    7. '+' → logprob: -4.571889877319336
    8. '               ' → logprob: -5.571889877319336
    9. '   ' → logprob: -6.071889877319336
    10. ':' → logprob: -6.071889877319336

Token 183: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48732155561447144
    2. 'if' (adapté à ' if') → logprob: -1.6123216152191162
    3. ' ' → logprob: -1.7373216152191162
    4. '           ' → logprob: -6.237321376800537
    5. '               ' → logprob: -6.362321376800537
    6. '            ' → logprob: -6.487321376800537
    7. '<|end|>' → logprob: -6.612321376800537
    8. ' )' → logprob: -7.362321376800537
    9. '+' → logprob: -7.487321376800537
    10. ')' → logprob: -7.612321376800537

Token 184: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.22544649243354797
    2. 'a' → logprob: -1.6004464626312256
    3. '	a' → logprob: -10.975446701049805
    4. ')' → logprob: -12.975446701049805
    5. ' ' → logprob: -13.100446701049805
    6. '(a' → logprob: -13.350446701049805
    7. ')a' → logprob: -13.350446701049805
    8. '>a' → logprob: -13.350446701049805
    9. '   ' → logprob: -13.600446701049805
    10. '_a' → logprob: -13.725446701049805

Token 185: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0789681077003479
    2. '[i' → logprob: -2.578968048095703
    3. '[' → logprob: -10.203968048095703
    4. '[a' → logprob: -10.453968048095703
    5. 'j' → logprob: -11.828968048095703
    6. 'i' → logprob: -13.328968048095703
    7. 'a' → logprob: -14.578968048095703
    8. ' [' → logprob: -14.703968048095703
    9. ']' → logprob: -14.953968048095703
    10. '[
' → logprob: -15.078968048095703

Token 186: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5129108428955078
    2. ']' → logprob: -1.2629108428955078
    3. '<' → logprob: -2.262910842895508
    4. ' ' → logprob: -5.387910842895508
    5. '[' → logprob: -5.637910842895508
    6. '>' → logprob: -6.387910842895508
    7. '[i' → logprob: -6.637910842895508
    8. ']<' → logprob: -6.887910842895508
    9. ' >' → logprob: -7.387910842895508
    10. ' ]' → logprob: -7.887910842895508

Token 187: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18060895800590515
    2. '<' → logprob: -1.8056089878082275
    3. ' ' → logprob: -7.930608749389648
    4. '<|end|>' → logprob: -8.680608749389648
    5. ' >' → logprob: -9.430608749389648
    6. '[' → logprob: -9.805608749389648
    7. '>' → logprob: -9.930608749389648
    8. 'a' → logprob: -10.805608749389648
    9. '<int' → logprob: -10.930608749389648
    10. ')' → logprob: -11.055608749389648

Token 188: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.474097341299057
    2. 'a' → logprob: -0.9740973711013794
    3. '	a' → logprob: -11.84909725189209
    4. ' ' → logprob: -12.34909725189209
    5. 'k' → logprob: -13.34909725189209
    6. '_a' → logprob: -13.34909725189209
    7. '[a' → logprob: -14.34909725189209
    8. ')' → logprob: -14.47409725189209
    9. '[' → logprob: -14.59909725189209
    10. ' ' → logprob: -14.66159725189209

Token 189: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -11.500019073486328
    3. 'i' → logprob: -12.500019073486328
    4. '[j' → logprob: -12.625019073486328
    5. ' [' → logprob: -14.375019073486328
    6. ' i' → logprob: -15.375019073486328
    7. '[
' → logprob: -15.375019073486328
    8. '[a' → logprob: -15.750019073486328
    9. ']' → logprob: -16.000019073486328
    10. '```' → logprob: -16.125019073486328

Token 190: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20312361419200897
    2. ']:' → logprob: -2.7031235694885254
    3. ']' → logprob: -2.8281235694885254
    4. 'and' → logprob: -3.2031235694885254
    5. '):' → logprob: -4.453123569488525
    6. ':' → logprob: -6.578123569488525
    7. ' ]' → logprob: -6.828123569488525
    8. ')' → logprob: -6.953123569488525
    9. ' ):' → logprob: -7.703123569488525
    10. '<|end|>' → logprob: -8.203124046325684

Token 191: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35652148723602295
    2. '               ' → logprob: -1.356521487236023
    3. 'and' → logprob: -3.4815216064453125
    4. 'count' → logprob: -4.8565216064453125
    5. ' count' → logprob: -6.3565216064453125
    6. ':
' → logprob: -7.1065216064453125
    7. '           ' → logprob: -7.9815216064453125
    8. ':' → logprob: -8.356521606445312
    9. '	count' → logprob: -8.981521606445312
    10. '			' → logprob: -9.106521606445312

Token 192: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.010153145529329777
    2. ' count' → logprob: -4.760153293609619
    3. '               ' → logprob: -6.885153293609619
    4. '                   ' → logprob: -8.010152816772461
    5. '	count' → logprob: -8.760152816772461
    6. '           ' → logprob: -11.885152816772461
    7. '                ' → logprob: -12.760152816772461
    8. 'if' → logprob: -13.135152816772461
    9. '
' → logprob: -13.135152816772461
    10. '   ' → logprob: -13.510152816772461

Token 193: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002849806100130081
    2. '+=' → logprob: -5.877849578857422
    3. ' ' → logprob: -10.877849578857422
    4. '<|end|>' → logprob: -11.252849578857422
    5. '+' → logprob: -11.627849578857422
    6. ' +' → logprob: -13.127849578857422
    7. '.' → logprob: -15.127849578857422
    8. ' =' → logprob: -15.252849578857422
    9. '++' → logprob: -15.377849578857422
    10. '    ' → logprob: -15.377849578857422

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015680687502026558
    2. ' ' → logprob: -6.501567840576172
    3. 'k' → logprob: -9.751567840576172
    4. ' k' → logprob: -12.001567840576172
    5. '   ' → logprob: -14.126567840576172
    6. 'a' → logprob: -15.376567840576172
    7. '           ' → logprob: -16.126567840576172
    8. '```' → logprob: -16.376567840576172
    9. '       ' → logprob: -17.126567840576172
    10. '  ' → logprob: -17.314067840576172

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022654302301816642
    2. 'k' → logprob: -8.875226974487305
    3. ' ' → logprob: -9.375226974487305
    4. 'a' → logprob: -14.125226974487305
    5. ' k' → logprob: -14.500226974487305
    6. '   ' → logprob: -14.750226974487305
    7. '```' → logprob: -16.625226974487305
    8. '           ' → logprob: -17.437726974487305
    9. '  ' → logprob: -17.687726974487305
    10. '100' → logprob: -18.062726974487305

Token 196: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5631077885627747
    2. '<|end|>' → logprob: -0.9381077885627747
    3. '   ' → logprob: -4.438107967376709
    4. '\n' → logprob: -4.813107967376709
    5. '<|end|>' → logprob: -4.938107967376709
    6. '    
' → logprob: -5.688107967376709
    7. ' 
' → logprob: -6.188107967376709
    8. '  
' → logprob: -6.313107967376709
    9. 'newline' → logprob: -7.563107967376709
    10. ')' → logprob: -7.688107967376709

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049301937222480774
    2. '
' → logprob: -3.674301862716675
    3. 'print' → logprob: -4.049302101135254
    4. '    
' → logprob: -6.299302101135254
    5. ' print' → logprob: -7.424302101135254
    6. 'return' → logprob: -7.424302101135254
    7. ')' → logprob: -7.799302101135254
    8. ' return' → logprob: -8.049302101135254
    9. '       ' → logprob: -8.174302101135254
    10. '  
' → logprob: -8.424302101135254

Token 198: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5744910836219788
    2. '   ' → logprob: -0.9494910836219788
    3. '<|end|>' → logprob: -4.324491024017334
    4. '    
' → logprob: -4.699491024017334
    5. '\n' → logprob: -4.699491024017334
    6. '  
' → logprob: -5.199491024017334
    7. ' 
' → logprob: -5.949491024017334
    8. 'print' → logprob: -6.324491024017334
    9. '\' → logprob: -6.574491024017334
    10. ' ' → logprob: -6.574491024017334

Token 199: ' k' (ID: 372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3448975682258606
    2. '   ' → logprob: -1.4698975086212158
    3. ' print' → logprob: -2.844897508621216
    4. 'return' → logprob: -6.844897747039795
    5. '    
' → logprob: -7.219897747039795
    6. ' return' → logprob: -7.469897747039795
    7. '
' → logprob: -7.844897747039795
    8. ' ' → logprob: -8.594897270202637
    9. ' if' → logprob: -8.594897270202637
    10. ' 
' → logprob: -9.344897270202637

Token 200: ' fois' (ID: 14697)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.595980167388916
    2. ' =' → logprob: -1.595980167388916
    3. '%' → logprob: -1.845980167388916
    4. ' ==' → logprob: -1.970980167388916
    5. ' -=' → logprob: -2.720980167388916
    6. ' <=' → logprob: -3.345980167388916
    7. ' ' → logprob: -3.470980167388916
    8. '==' → logprob: -3.595980167388916
    9. ' %' → logprob: -3.845980167388916
    10. ' %=' → logprob: -3.845980167388916

Token 201: ' parce' (ID: 27146)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6775795221328735
    2. ' for' → logprob: -2.052579402923584
    3. '<|end|>' → logprob: -2.177579402923584
    4. 'for' → logprob: -2.302579402923584
    5. '*' → logprob: -2.677579402923584
    6. ' 
' → logprob: -3.677579402923584
    7. '   ' → logprob: -3.802579402923584
    8. ' ' → logprob: -5.177579402923584
    9. '    
' → logprob: -5.302579402923584
    10. '  
' → logprob: -5.552579402923584

Token 202: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.031213402748108
    2. ' que' → logprob: -1.281213402748108
    3. '    ' → logprob: -2.1562132835388184
    4. ' de' → logprob: -2.2812132835388184
    5. '#' → logprob: -3.4062132835388184
    6. ' k' → logprob: -4.156213283538818
    7. ' for' → logprob: -4.281213283538818
    8. ' qu' → logprob: -4.656213283538818
    9. ' du' → logprob: -4.906213283538818
    10. ' of' → logprob: -5.031213283538818

Token 203: '...' (ID: 1008)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.42495954036712646
    2. ' count' → logprob: -1.4249595403671265
    3. 'count' → logprob: -3.549959659576416
    4. ' n' → logprob: -3.674959659576416
    5. ' (' → logprob: -4.049959659576416
    6. ' for' → logprob: -5.174959659576416
    7. ' range' → logprob: -5.299959659576416
    8. 'k' → logprob: -5.674959659576416
    9. ' ' → logprob: -6.049959659576416
    10. ' True' → logprob: -6.049959659576416

Token 204: ' c' (ID: 274)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.224002718925476
    2. '
' → logprob: -1.474002718925476
    3. ' for' → logprob: -2.0990028381347656
    4. 'return' → logprob: -2.3490028381347656
    5. ' 
' → logprob: -2.5990028381347656
    6. 'print' → logprob: -2.5990028381347656
    7. '   ' → logprob: -3.3490028381347656
    8. ' print' → logprob: -4.099002838134766
    9. 'for' → logprob: -4.099002838134766
    10. '<|end|>' → logprob: -4.099002838134766

Token 205: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.11809217929840088
    2. ''' → logprob: -2.6180920600891113
    3. 'e' → logprob: -4.743092060089111
    4. '#' → logprob: -5.243092060089111
    5. ''s' → logprob: -5.368092060089111
    6. ''''' → logprob: -5.368092060089111
    7. ' '' → logprob: -6.493092060089111
    8. '`' → logprob: -6.493092060089111
    9. 'a' → logprob: -6.868092060089111
    10. '   ' → logprob: -6.868092060089111

Token 206: ' comme' (ID: 7971)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.480118066072464
    2. 'k' → logprob: -0.9801180362701416
    3. ' une' → logprob: -7.480118274688721
    4. ' la' → logprob: -7.730118274688721
    5. 'tout' → logprob: -7.855118274688721
    6. '```' → logprob: -8.230117797851562
    7. ' tout' → logprob: -8.355117797851562
    8. 'for' → logprob: -8.355117797851562
    9. 'exact' → logprob: -8.355117797851562
    10. ' exactement' → logprob: -8.355117797851562

Token 207: ' ça' (ID: 13590)
  Prédit: ' ça'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -0.09965480118989944
    2. 'ça' → logprob: -2.5996549129486084
    3. ' ca' → logprob: -4.974654674530029
    4. ' k' → logprob: -5.849654674530029
    5. ' cela' → logprob: -5.849654674530029
    6. ' une' → logprob: -6.224654674530029
    7. 'cela' → logprob: -6.224654674530029
    8. 'ca' → logprob: -6.349654674530029
    9. 'une' → logprob: -7.224654674530029
    10. ' ceci' → logprob: -8.349655151367188

Token 208: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2952450215816498
    2. '
' → logprob: -1.6702450513839722
    3. '    
' → logprob: -4.295245170593262
    4. '\n' → logprob: -4.295245170593262
    5. '*' → logprob: -4.920245170593262
    6. 'for' → logprob: -5.045245170593262
    7. ' 
' → logprob: -5.295245170593262
    8. '  
' → logprob: -5.420245170593262
    9. 'return' → logprob: -5.545245170593262
    10. ' for' → logprob: -5.920245170593262

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049773432314395905
    2. 'print' → logprob: -3.4247734546661377
    3. '
' → logprob: -5.049773216247559
    4. ' print' → logprob: -5.424773216247559
    5. ' return' → logprob: -6.174773216247559
    6. 'return' → logprob: -6.799773216247559
    7. '    
' → logprob: -7.174773216247559
    8. ' for' → logprob: -7.674773216247559
    9. '```' → logprob: -8.424773216247559
    10. '  
' → logprob: -9.049773216247559

Token 210: ' r' (ID: 428)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2369784116744995
    2. '   ' → logprob: -1.4869784116744995
    3. 'for' → logprob: -1.9869784116744995
    4. ' return' → logprob: -2.486978530883789
    5. 'return' → logprob: -2.486978530883789
    6. 'print' → logprob: -2.486978530883789
    7. '
' → logprob: -3.111978530883789
    8. 'count' → logprob: -3.861978530883789
    9. ' 
' → logprob: -4.986978530883789
    10. ' print' → logprob: -4.986978530883789

Token 211: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4557800590991974
    2. 'eturn' → logprob: -1.205780029296875
    3. 'ange' → logprob: -3.080780029296875
    4. ' =' → logprob: -5.205780029296875
    5. 'es' → logprob: -5.580780029296875
    6. 'a' → logprob: -5.580780029296875
    7. '=' → logprob: -5.830780029296875
    8. 'et' → logprob: -6.205780029296875
    9. ' ' → logprob: -6.580780029296875
    10. 'ef' → logprob: -7.830780029296875

Token 212: ' k' (ID: 372)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.049233514815568924
    2. 'count' → logprob: -3.0492334365844727
    3. ' k' → logprob: -7.424233436584473
    4. 'k' → logprob: -10.299233436584473
    5. ' ' → logprob: -11.424233436584473
    6. '	count' → logprob: -13.299233436584473
    7. ' ' → logprob: -14.299233436584473
    8. '(count' → logprob: -14.674233436584473
    9. ' counts' → logprob: -14.799233436584473
    10. '   ' → logprob: -15.174233436584473

Token 213: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020657042041420937
    2. '*' → logprob: -3.8956570625305176
    3. ' *
' → logprob: -10.52065658569336
    4. '<|end|>' → logprob: -10.64565658569336
    5. '**' → logprob: -10.89565658569336
    6. ' **' → logprob: -11.27065658569336
    7. ' ' → logprob: -11.77065658569336
    8. '*r' → logprob: -11.77065658569336
    9. ' ' → logprob: -13.14565658569336
    10. '*k' → logprob: -13.27065658569336

Token 214: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03804275393486023
    2. ' count' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.538043022155762
    4. '(count' → logprob: -15.163043022155762
    5. 'c' → logprob: -15.663043022155762
    6. '	count' → logprob: -16.163042068481445
    7. '[count' → logprob: -16.538042068481445
    8. '   ' → logprob: -17.413042068481445
    9. 'int' → logprob: -17.413042068481445
    10. '<count' → logprob: -17.413042068481445

Token 215: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14076250791549683
    2. 'print' → logprob: -2.2657625675201416
    3. '
' → logprob: -3.6407625675201416
    4. '    
' → logprob: -7.1407623291015625
    5. '<|end|>' → logprob: -8.140762329101562
    6. ' print' → logprob: -8.765762329101562
    7. '	print' → logprob: -10.515762329101562
    8. '```' → logprob: -11.390762329101562
    9. '  
' → logprob: -11.515762329101562
    10. '       ' → logprob: -12.265762329101562

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15227852761745453
    2. '
' → logprob: -2.152278423309326
    3. 'print' → logprob: -3.902278423309326
    4. '    
' → logprob: -6.277278423309326
    5. '<|end|>' → logprob: -6.277278423309326
    6. 'return' → logprob: -8.152278900146484
    7. ' print' → logprob: -8.652278900146484
    8. '  
' → logprob: -9.277278900146484
    9. '  ' → logprob: -9.652278900146484
    10. ' 
' → logprob: -9.652278900146484

Token 217: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20481546223163605
    2. '   ' → logprob: -1.7048155069351196
    3. '
' → logprob: -6.82981538772583
    4. 'if' → logprob: -7.45481538772583
    5. '    
' → logprob: -7.57981538772583
    6. 'for' → logprob: -8.204815864562988
    7. ' print' → logprob: -8.204815864562988
    8. 'return' → logprob: -8.454815864562988
    9. '#' (adapté à ' #') → logprob: -8.579815864562988
    10. '#print' → logprob: -10.204815864562988

Token 218: ' Comp' (ID: 5211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006000132765620947
    2. '   ' → logprob: -5.50600004196167
    3. 'return' → logprob: -6.75600004196167
    4. ' print' → logprob: -7.50600004196167
    5. 'if' → logprob: -9.381000518798828
    6. 'r' → logprob: -10.381000518798828
    7. 'for' → logprob: -10.631000518798828
    8. '#' → logprob: -11.006000518798828
    9. 'pr' → logprob: -11.381000518798828
    10. '#print' → logprob: -11.756000518798828

Token 219: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.3133445680141449
    2. 'ections' → logprob: -2.4383444786071777
    3. 'ort' → logprob: -2.9383444786071777
    4. 'r' → logprob: -3.9383444786071777
    5. 'ect' → logprob: -4.188344478607178
    6. 'teur' → logprob: -4.188344478607178
    7. 'orter' → logprob: -4.438344478607178
    8. 'te' → logprob: -4.438344478607178
    9. 'ounter' → logprob: -4.938344478607178
    10. 'orts' → logprob: -5.188344478607178

Token 220: ' les' (ID: 1341)
  Prédit: ' frequencies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frequencies' → logprob: -1.5276433229446411
    2. ' les' → logprob: -2.1526432037353516
    3. 'freq' → logprob: -2.1526432037353516
    4. '_freq' → logprob: -2.7776432037353516
    5. 's' → logprob: -2.9026432037353516
    6. ' freq' → logprob: -2.9026432037353516
    7. '_' → logprob: -3.0276432037353516
    8. ' =' → logprob: -3.0276432037353516
    9. 'a' → logprob: -3.6526432037353516
    10. ' occurrences' → logprob: -3.7776432037353516

Token 221: ' doubl' (ID: 127992)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1435520648956299
    2. 'val' → logprob: -1.7685520648956299
    3. ' a' → logprob: -2.51855206489563
    4. 'elements' → logprob: -2.51855206489563
    5. ' elements' → logprob: -3.01855206489563
    6. 'occ' → logprob: -3.01855206489563
    7. 'pairs' → logprob: -3.01855206489563
    8. ' occurrences' → logprob: -3.39355206489563
    9. 'élé' → logprob: -3.51855206489563
    10. ' p' → logprob: -3.51855206489563

Token 222: 'ons' (ID: 1808)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.36939001083374023
    2. 'és' → logprob: -1.6193900108337402
    3. 'ons' → logprob: -2.3693900108337402
    4. 'ages' → logprob: -4.86939001083374
    5. 'é' → logprob: -5.36939001083374
    6. 'e' → logprob: -6.36939001083374
    7. 'iques' → logprob: -7.36939001083374
    8. 'ic' → logprob: -7.74439001083374
    9. 'ections' → logprob: -7.86939001083374
    10. 'ications' → logprob: -8.119390487670898

Token 223: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.126603364944458
    2. 'counter' → logprob: -1.501603364944458
    3. 'freq' → logprob: -2.001603364944458
    4. 'counts' → logprob: -2.626603364944458
    5. 'a' → logprob: -2.876603364944458
    6. 'count' → logprob: -3.876603364944458
    7. ' =' → logprob: -3.876603364944458
    8. ' counter' → logprob: -3.876603364944458
    9. 'c' → logprob: -4.001603126525879
    10. ',' → logprob: -4.376603126525879

Token 224: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16061128675937653
    2. ' a' → logprob: -1.9106112718582153
    3. 'collections' → logprob: -9.035611152648926
    4. ' la' → logprob: -9.285611152648926
    5. ' collections' → logprob: -9.660611152648926
    6. 'r' → logprob: -10.910611152648926
    7. '`' → logprob: -11.285611152648926
    8. 'l' → logprob: -11.285611152648926
    9. 'la' → logprob: -11.660611152648926
    10. ' the' → logprob: -11.910611152648926

Token 225: ' (' (ID: 350)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.022824928164482117
    2. 'counts' → logprob: -5.022824764251709
    3. '   ' → logprob: -5.147824764251709
    4. 'c' → logprob: -5.772824764251709
    5. ' counter' → logprob: -6.147824764251709
    6. 'freq' → logprob: -6.272824764251709
    7. 'count' → logprob: -6.772824764251709
    8. 'a' → logprob: -6.897824764251709
    9. 'comp' → logprob: -8.147825241088867
    10. '_counter' → logprob: -9.147825241088867

Token 226: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4327549636363983
    2. 'counter' → logprob: -1.4327549934387207
    3. 'a' → logprob: -3.4327549934387207
    4. 'freq' → logprob: -3.5577549934387207
    5. ')
' → logprob: -4.057754993438721
    6. 'counts' → logprob: -4.932754993438721
    7. ' )' → logprob: -5.057754993438721
    8. ' counter' → logprob: -5.932754993438721
    9. 'count' → logprob: -5.932754993438721
    10. 'c' → logprob: -5.932754993438721

Token 227: ' enlever' (ID: 196982)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7594038248062134
    2. 'i' → logprob: -1.8844038248062134
    3. ' val' → logprob: -2.009403705596924
    4. ' la' → logprob: -2.884403705596924
    5. ' les' → logprob: -3.134403705596924
    6. 'val' → logprob: -3.509403705596924
    7. ' x' → logprob: -3.884403705596924
    8. ' l' → logprob: -4.759403705596924
    9. 'l' → logprob: -4.884403705596924
    10. ' le' → logprob: -5.009403705596924

Token 228: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14447475969791412
    2. ' la' → logprob: -3.269474744796753
    3. 'les' → logprob: -3.769474744796753
    4. ' des' → logprob: -4.269474983215332
    5. ')' → logprob: -4.519474983215332
    6. ' ' → logprob: -4.519474983215332
    7. ' le' → logprob: -4.894474983215332
    8. ' )' → logprob: -5.144474983215332
    9. ' l' → logprob: -5.394474983215332
    10. ' ceux' → logprob: -5.394474983215332

Token 229: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.633612871170044
    2. ' pairs' → logprob: -1.883612871170044
    3. ' doubl' → logprob: -1.883612871170044
    4. ' éléments' → logprob: -3.758612871170044
    5. ' valeurs' → logprob: -4.133612632751465
    6. ' duplicates' → logprob: -4.133612632751465
    7. 'p' → logprob: -4.133612632751465
    8. ' espaces' → logprob: -4.633612632751465
    9. 'pairs' → logprob: -4.758612632751465
    10. 'd' → logprob: -4.883612632751465

Token 230: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9715551137924194
    2. 'aires' → logprob: -1.2215551137924194
    3. 'airs' → logprob: -1.9715551137924194
    4. 'ar' → logprob: -2.971555233001709
    5. 'air' → logprob: -3.221555233001709
    6. 'r' → logprob: -3.596555233001709
    7. ')' → logprob: -4.096555233001709
    8. 'ai' → logprob: -5.159055233001709
    9. 'aire' → logprob: -5.909055233001709
    10. 'e' → logprob: -6.096555233001709

Token 231: ' ég' (ID: 33150)
  Prédit: ' ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ident' → logprob: -1.5530097484588623
    2. ' ég' → logprob: -1.5530097484588623
    3. ')' → logprob: -2.4280097484588623
    4. ' )' → logprob: -2.5530097484588623
    5. ' de' → logprob: -2.6780097484588623
    6. ' strict' → logprob: -2.6780097484588623
    7. '   ' → logprob: -3.1780097484588623
    8. 'strict' → logprob: -3.4280097484588623
    9. ' ' → logprob: -3.6780097484588623
    10. ' qui' → logprob: -4.053009986877441

Token 232: 'ales' (ID: 3459)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.18288883566856384
    2. 'ales' → logprob: -2.0578887462615967
    3. 'al' → logprob: -3.5578887462615967
    4. 'a' → logprob: -4.932888984680176
    5. 'ale' → logprob: -5.932888984680176
    6. '```' → logprob: -7.557888984680176
    7. 'als' → logprob: -9.932888984680176
    8. '}' → logprob: -10.182888984680176
    9. '``' → logprob: -10.182888984680176
    10. 'alis' → logprob: -10.182888984680176

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005022651981562376
    2. ' )' → logprob: -5.6300225257873535
    3. '   ' → logprob: -7.3800225257873535
    4. ')
' → logprob: -7.6300225257873535
    5. 'a' → logprob: -8.880023002624512
    6. '')' → logprob: -10.255023002624512
    7. '")' → logprob: -10.630023002624512
    8. '`)' → logprob: -10.755023002624512
    9. ' ' → logprob: -11.005023002624512
    10. ',' → logprob: -11.130023002624512

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12630632519721985
    2. 'counter' → logprob: -2.7513062953948975
    3. 'duplicates' → logprob: -3.8763062953948975
    4. 'd' → logprob: -4.501306533813477
    5. 'counts' → logprob: -4.876306533813477
    6. ' counter' → logprob: -5.251306533813477
    7. 'a' → logprob: -6.501306533813477
    8. 'freq' → logprob: -6.626306533813477
    9. '    
' → logprob: -6.751306533813477
    10. 'c' → logprob: -6.876306533813477

Token 235: ' cnt' (ID: 27340)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.2620362639427185
    2. 'freq' → logprob: -2.6370363235473633
    3. 'duplicates' → logprob: -2.6370363235473633
    4. ' counter' → logprob: -3.5120363235473633
    5. 'counts' → logprob: -4.012036323547363
    6. 'c' → logprob: -4.512036323547363
    7. 'd' → logprob: -4.512036323547363
    8. ' duplicates' → logprob: -5.637036323547363
    9. 'dup' → logprob: -5.762036323547363
    10. 'count' → logprob: -6.137036323547363

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4936766028404236
    2. 'er' → logprob: -1.7436766624450684
    3. ' =' → logprob: -2.1186766624450684
    4. 'r' → logprob: -3.1186766624450684
    5. 's' → logprob: -3.4936766624450684
    6. 'rs' → logprob: -4.368676662445068
    7. 'ers' → logprob: -5.368676662445068
    8. 'eurs' → logprob: -7.118676662445068
    9. 'uer' → logprob: -7.243676662445068
    10. 'a' → logprob: -8.36867618560791

Token 237: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.038048144429922104
    2. ' collections' → logprob: -3.288048028945923
    3. 'collection' → logprob: -12.288047790527344
    4. 'counter' → logprob: -14.163047790527344
    5. '.collections' → logprob: -15.038047790527344
    6. ' collection' → logprob: -15.663047790527344
    7. 'Collections' → logprob: -15.663047790527344
    8. ' ' → logprob: -15.788047790527344
    9. 'collect' → logprob: -15.788047790527344
    10. '(collection' → logprob: -16.163047790527344

Token 238: '.Counter' (ID: 175403)
  Prédit: '.Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -7.672236824873835e-05
    2. '.' → logprob: -9.625076293945312
    3. 'Counter' → logprob: -11.625076293945312
    4. ' Counter' → logprob: -14.125076293945312
    5. 'import' → logprob: -14.250076293945312
    6. '.counter' → logprob: -15.375076293945312
    7. '.Count' → logprob: -16.750076293945312
    8. '_counter' → logprob: -17.000076293945312
    9. '.C' → logprob: -17.375076293945312
    10. ' .' → logprob: -18.375076293945312

Token 239: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2842308680992573e-05
    2. '(' → logprob: -11.375022888183594
    3. 'a' → logprob: -11.500022888183594
    4. ' (' → logprob: -14.875022888183594
    5. '(
' → logprob: -15.000022888183594
    6. '[a' → logprob: -15.875022888183594
    7. '(ai' → logprob: -16.625022888183594
    8. '()' → logprob: -16.750022888183594
    9. ' a' → logprob: -17.000022888183594
    10. '(A' → logprob: -17.250022888183594

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002613358374219388
    2. ')
' → logprob: -8.500261306762695
    3. ')a' → logprob: -10.500261306762695
    4. ' )' → logprob: -11.375261306762695
    5. ')

' → logprob: -12.000261306762695
    6. 'a' → logprob: -12.875261306762695
    7. '[a' → logprob: -13.000261306762695
    8. ')
' → logprob: -13.250261306762695
    9. '(a' → logprob: -13.500261306762695
    10. '   ' → logprob: -13.625261306762695

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054168637841939926
    2. '
' → logprob: -3.304168701171875
    3. '    
' → logprob: -4.304168701171875
    4. ' for' → logprob: -7.054168701171875
    5. '<|end|>' → logprob: -7.054168701171875
    6. 'for' → logprob: -7.679168701171875
    7. '  
' → logprob: -9.054168701171875
    8. '   
' → logprob: -9.554168701171875
    9. ' 
' → logprob: -10.179168701171875
    10. '        
' → logprob: -11.429168701171875

Token 242: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6148297190666199
    2. ' for' → logprob: -1.1148297786712646
    3. '   ' → logprob: -2.3648297786712646
    4. 'duplicates' → logprob: -4.1148295402526855
    5. 'result' → logprob: -5.2398295402526855
    6. 'equal' → logprob: -5.3648295402526855
    7. ' duplicates' → logprob: -5.6148295402526855
    8. 'res' → logprob: -6.7398295402526855
    9. 'total' → logprob: -7.2398295402526855
    10. 'diff' → logprob: -7.3648295402526855

Token 243: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.08129998296499252
    2. 'ub' → logprob: -3.5813000202178955
    3. ' =' → logprob: -3.7063000202178955
    4. 'ame' → logprob: -4.331299781799316
    5. 'upp' → logprob: -5.706299781799316
    6. '=' → logprob: -6.081299781799316
    7. 'up' → logprob: -6.456299781799316
    8. 'u' → logprob: -6.956299781799316
    9. 'tr' → logprob: -7.331299781799316
    10. 'ames' → logprob: -7.956299781799316

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002731763292104006
    2. ' ' → logprob: -6.002731800079346
    3. 'sum' → logprob: -8.502731323242188
    4. ' sum' → logprob: -9.877731323242188
    5. '   ' → logprob: -13.377731323242188
    6. '  ' → logprob: -15.877731323242188
    7. '1' → logprob: -16.502731323242188
    8. '=' → logprob: -17.252731323242188
    9. 'k' → logprob: -17.752731323242188
    10. '(' → logprob: -18.065231323242188

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00412363838404417
    2. 'sum' → logprob: -5.504123687744141
    3. ' ' → logprob: -10.37912368774414
    4. ' sum' → logprob: -11.50412368774414
    5. '   ' → logprob: -13.00412368774414
    6. '1' → logprob: -14.62912368774414
    7. 's' → logprob: -15.75412368774414
    8. 'k' → logprob: -15.87912368774414
    9. '[' → logprob: -16.06662368774414
    10. '  ' → logprob: -16.37912368774414

Token 246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44694793224334717
    2. '   ' → logprob: -1.0719479322433472
    3. 'for' → logprob: -4.321948051452637
    4. ' for' → logprob: -5.571948051452637
    5. '    
' → logprob: -7.321948051452637
    6. '<|end|>' → logprob: -9.071948051452637
    7. '  
' → logprob: -9.696948051452637
    8. ' ' → logprob: -10.196948051452637
    9. ' 
' → logprob: -10.321948051452637
    10. '  ' → logprob: -10.696948051452637

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6107956767082214
    2. 'for' → logprob: -1.4857957363128662
    3. ' for' → logprob: -1.8607957363128662
    4. '
' → logprob: -2.610795736312866
    5. '    
' → logprob: -7.610795497894287
    6. ' ' → logprob: -7.735795497894287
    7. '<|end|>' → logprob: -8.360795974731445
    8. '  ' → logprob: -8.735795974731445
    9. '  
' → logprob: -8.735795974731445
    10. ' 
' → logprob: -9.485795974731445

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001129602751461789
    2. ' for' → logprob: -9.125112533569336
    3. '   ' → logprob: -12.750112533569336
    4. '
' → logprob: -14.375112533569336
    5. ' ' → logprob: -15.500112533569336
    6. 'values' → logprob: -15.750112533569336
    7. 'or' → logprob: -16.500112533569336
    8. '0' → logprob: -17.500112533569336
    9. '    
' → logprob: -17.625112533569336
    10. '	for' → logprob: -17.875112533569336

Token 249: ' x' (ID: 1215)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3211817741394043
    2. 'v' → logprob: -1.6961817741394043
    3. ' val' → logprob: -1.6961817741394043
    4. 'x' → logprob: -2.3211817741394043
    5. 'value' → logprob: -2.4461817741394043
    6. 'key' → logprob: -3.0711817741394043
    7. ' v' → logprob: -3.0711817741394043
    8. ' key' → logprob: -3.1961817741394043
    9. ' x' → logprob: -3.5711817741394043
    10. ' value' → logprob: -4.196181774139404

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16426707804203033
    2. 'in' → logprob: -1.9142670631408691
    3. ',' → logprob: -5.539267063140869
    4. ',count' → logprob: -10.039267539978027
    5. ' ,' → logprob: -10.914267539978027
    6. ' ' → logprob: -11.539267539978027
    7. '   ' → logprob: -11.789267539978027
    8. 'count' → logprob: -12.164267539978027
    9. '	in' → logprob: -12.664267539978027
    10. ',val' → logprob: -13.289267539978027

Token 251: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0298821572214365
    2. ' cnt' → logprob: -3.5298821926116943
    3. 'count' → logprob: -10.279882431030273
    4. '[cnt' → logprob: -10.279882431030273
    5. '(cnt' → logprob: -11.029882431030273
    6. 'range' → logprob: -11.154882431030273
    7. '	cnt' → logprob: -11.279882431030273
    8. ' range' → logprob: -12.154882431030273
    9. 'ct' → logprob: -12.654882431030273
    10. '   ' → logprob: -13.154882431030273

Token 252: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.09023414552211761
    2. 'values' → logprob: -2.5902340412139893
    3. ':' → logprob: -4.840234279632568
    4. '.' → logprob: -7.340234279632568
    5. ' values' → logprob: -7.340234279632568
    6. '.keys' → logprob: -7.590234279632568
    7. 's' → logprob: -7.840234279632568
    8. '_values' → logprob: -8.59023380279541
    9. ':
' → logprob: -8.71523380279541
    10. '<|end|>' → logprob: -8.71523380279541

Token 253: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002497183158993721
    2. '():
' → logprob: -6.00249719619751
    3. '()' → logprob: -11.377496719360352
    4. ':' → logprob: -11.877496719360352
    5. ' ():' → logprob: -13.252496719360352
    6. '():
' → logprob: -14.002496719360352
    7. '(' → logprob: -15.252496719360352
    8. '):' → logprob: -15.877496719360352
    9. '()>' → logprob: -16.50249671936035
    10. '():

' → logprob: -16.62749671936035

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008524502627551556
    2. '<|end|>' → logprob: -5.383524417877197
    3. ' s' → logprob: -5.883524417877197
    4. ' if' → logprob: -7.633524417877197
    5. 's' → logprob: -8.633524894714355
    6. ' ' → logprob: -9.258524894714355
    7. '   ' → logprob: -9.383524894714355
    8. '
' → logprob: -10.008524894714355
    9. 'if' → logprob: -10.258524894714355
    10. '<|end|>' → logprob: -10.383524894714355

Token 255: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6900098323822021
    2. ' s' → logprob: -1.3150098323822021
    3. ' if' → logprob: -2.065009832382202
    4. 's' (adapté à ' s') → logprob: -2.565009832382202
    5. 'if' → logprob: -4.190010070800781
    6. '   ' → logprob: -5.065010070800781
    7. '    ' → logprob: -5.565010070800781
    8. ' ' → logprob: -8.315010070800781
    9. ' x' → logprob: -8.315010070800781
    10. '        ' → logprob: -8.940010070800781

Token 256: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023500990122556686
    2. ' +=' → logprob: -3.773500919342041
    3. '*=' → logprob: -9.3985013961792
    4. '+=(' → logprob: -9.7735013961792
    5. '   ' → logprob: -9.8985013961792
    6. '+' → logprob: -10.7735013961792
    7. '*' → logprob: -11.1485013961792
    8. ']+=' → logprob: -12.0235013961792
    9. '  ' → logprob: -12.2735013961792
    10. '	' → logprob: -12.5235013961792

Token 257: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012911371886730194
    2. ' x' → logprob: -4.387911319732666
    3. '(x' → logprob: -8.012911796569824
    4. ' (' → logprob: -10.137911796569824
    5. '(' → logprob: -10.512911796569824
    6. ' ' → logprob: -13.387911796569824
    7. '   ' → logprob: -13.887911796569824
    8. 'k' → logprob: -14.512911796569824
    9. '  ' → logprob: -15.137911796569824
    10. '	x' → logprob: -15.637911796569824

Token 258: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25605088472366333
    2. '*' → logprob: -1.5060508251190186
    3. '*(' → logprob: -5.506051063537598
    4. '*x' → logprob: -10.506051063537598
    5. ' ' → logprob: -11.381051063537598
    6. '**' → logprob: -12.131051063537598
    7. '   ' → logprob: -13.131051063537598
    8. '  ' → logprob: -13.881051063537598
    9. '*s' → logprob: -14.256051063537598
    10. ' *(' → logprob: -14.381051063537598

Token 259: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10991787910461426
    2. 'x' → logprob: -2.4849178791046143
    3. ' (' → logprob: -3.9849178791046143
    4. '(' → logprob: -6.484917640686035
    5. ' x' → logprob: -7.484917640686035
    6. ' ' → logprob: -11.109917640686035
    7. '(k' → logprob: -11.234917640686035
    8. '(
' → logprob: -11.859917640686035
    9. '(n' → logprob: -11.984917640686035
    10. '   ' → logprob: -12.297417640686035

Token 260: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00031377444975078106
    2. '(x' → logprob: -8.500313758850098
    3. ' x' → logprob: -9.125313758850098
    4. '	x' → logprob: -15.125313758850098
    5. '{x' → logprob: -15.500313758850098
    6. '-' → logprob: -15.500313758850098
    7. ' ' → logprob: -15.625313758850098
    8. ' (' → logprob: -15.750313758850098
    9. '   ' → logprob: -16.500314712524414
    10. '"x' → logprob: -16.875314712524414

Token 261: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12694711983203888
    2. ' -' → logprob: -2.1269471645355225
    3. ' ' → logprob: -11.001947402954102
    4. '  ' → logprob: -14.001947402954102
    5. '1' → logprob: -14.251947402954102
    6. '<|end|>' → logprob: -14.876947402954102
    7. '   ' → logprob: -15.626947402954102
    8. ' ' → logprob: -15.751947402954102
    9. '```' → logprob: -15.876947402954102
    10. '–' → logprob: -16.8769474029541

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.750014305114746
    4. ')' → logprob: -14.875014305114746
    5. '<|end|>' → logprob: -16.00001335144043
    6. '```' → logprob: -16.87501335144043
    7. '  ' → logprob: -17.12501335144043
    8. '    ' → logprob: -17.25001335144043
    9. '<|end|>' → logprob: -18.56251335144043
    10. '
' → logprob: -18.68751335144043

Token 263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042549751698970795
    2. ' )' → logprob: -3.4175498485565186
    3. ')//' → logprob: -4.9175496101379395
    4. ' //' → logprob: -6.5425496101379395
    5. '//' → logprob: -9.167550086975098
    6. ')
' → logprob: -14.292550086975098
    7. ' )
' → logprob: -14.417550086975098
    8. ' ' → logprob: -15.417550086975098
    9. '   ' → logprob: -15.542550086975098
    10. ' ' → logprob: -16.41754913330078

Token 264: ' //' (ID: 602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16338282823562622
    2. '
' → logprob: -1.9133827686309814
    3. '    
' → logprob: -6.2883830070495605
    4. '<|end|>' → logprob: -7.5383830070495605
    5. '

' → logprob: -8.788382530212402
    6. '
' → logprob: -9.038382530212402
    7. ')' → logprob: -9.538382530212402
    8. '  
' → logprob: -9.538382530212402
    9. '   
' → logprob: -9.788382530212402
    10. ' 
' → logprob: -9.913382530212402

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -14.375066757202148
    4. '   ' → logprob: -16.62506675720215
    5. '<|end|>' → logprob: -17.00006675720215
    6. '
' → logprob: -17.12506675720215
    7. '۲' → logprob: -18.12506675720215
    8. '```' → logprob: -18.12506675720215
    9. '  ' → logprob: -18.56256675720215
    10. '.' → logprob: -18.68756675720215

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.375006675720215
    3. '1' → logprob: -13.125006675720215
    4. '
' → logprob: -17.6250057220459
    5. '   ' → logprob: -17.7500057220459
    6. '```' → logprob: -18.3750057220459
    7. '۲' → logprob: -18.4375057220459
    8. '22' → logprob: -19.2500057220459
    9. '２' → logprob: -20.0000057220459
    10. '3' → logprob: -20.1875057220459

Token 267: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02505161613225937
    2. '

' → logprob: -4.275051593780518
    3. '   ' → logprob: -5.025051593780518
    4. '    
' → logprob: -6.400051593780518
    5. '<|end|>' → logprob: -6.400051593780518
    6. '
' → logprob: -8.150052070617676
    7. '
    
' → logprob: -8.650052070617676
    8. '


' → logprob: -9.400052070617676
    9. '  
' → logprob: -9.525052070617676
    10. '<|end|>' → logprob: -10.025052070617676

Token 268: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0031803252641111612
    2. '   ' → logprob: -6.128180503845215
    3. '

' → logprob: -7.378180503845215
    4. '
' → logprob: -8.753180503845215
    5. '    
' → logprob: -9.003180503845215
    6. '<|end|>' → logprob: -10.003180503845215
    7. '  
' → logprob: -11.378180503845215
    8. 'return' → logprob: -11.628180503845215
    9. ' 
' → logprob: -12.378180503845215
    10. '
    
' → logprob: -12.503180503845215

Token 269: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5441106557846069
    2. '
' → logprob: -0.9191106557846069
    3. 'print' → logprob: -4.5441107749938965
    4. '    
' → logprob: -5.1691107749938965
    5. '<|end|>' → logprob: -6.5441107749938965
    6. 'return' → logprob: -7.1691107749938965
    7. '#' → logprob: -7.6691107749938965
    8. ' print' → logprob: -8.419110298156738
    9. 'r' → logprob: -8.419110298156738
    10. '

' → logprob: -8.544110298156738

Token 270: '_pairs' (ID: 90005)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10267789661884308
    2. '=' → logprob: -2.477677822113037
    3. '_' → logprob: -4.352677822113037
    4. ' +=' → logprob: -7.852677822113037
    5. 's' → logprob: -8.352678298950195
    6. ' ' → logprob: -10.727678298950195
    7. ' _' → logprob: -10.852678298950195
    8. '+=' → logprob: -10.977678298950195
    9. '_=' → logprob: -10.977678298950195
    10. 'r' → logprob: -11.227678298950195

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002837207168340683
    2. '=' → logprob: -5.877837181091309
    3. ' +=' → logprob: -10.377837181091309
    4. ' ' → logprob: -14.502837181091309
    5. ' ' → logprob: -15.502837181091309
    6. '_' → logprob: -15.877837181091309
    7. '+=' → logprob: -16.252838134765625
    8. ' =
' → logprob: -16.377838134765625
    9. 's' → logprob: -16.627838134765625
    10. ' =)' → logprob: -17.377838134765625

Token 272: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5879871845245361
    2. ' r' → logprob: -1.2129871845245361
    3. ' n' → logprob: -2.337987184524536
    4. 'n' → logprob: -3.212987184524536
    5. 'count' → logprob: -5.337986946105957
    6. ' count' → logprob: -5.837986946105957
    7. ' k' → logprob: -7.337986946105957
    8. '   ' → logprob: -7.587986946105957
    9. 'k' → logprob: -7.587986946105957
    10. ' (' → logprob: -7.837986946105957

Token 273: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10096945613622665
    2. '*' → logprob: -2.3509695529937744
    3. '**' → logprob: -7.850969314575195
    4. '*(' → logprob: -7.975969314575195
    5. ' **' → logprob: -10.850969314575195
    6. '*n' → logprob: -12.725969314575195
    7. '<|end|>' → logprob: -13.225969314575195
    8. '2' → logprob: -13.600969314575195
    9. '*r' → logprob: -14.350969314575195
    10. ' ' → logprob: -14.475969314575195

Token 274: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48928239941596985
    2. '(n' → logprob: -0.9892823696136475
    3. ' (' → logprob: -4.739282608032227
    4. ' n' → logprob: -5.739282608032227
    5. '(' → logprob: -6.489282608032227
    6. 'k' → logprob: -6.739282608032227
    7. '(k' → logprob: -8.364282608032227
    8. 'total' → logprob: -9.614282608032227
    9. ' ' → logprob: -10.926782608032227
    10. '(total' → logprob: -11.239282608032227

Token 275: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015598179015796632
    2. ' n' → logprob: -9.37515640258789
    3. '(n' → logprob: -9.62515640258789
    4. 'k' → logprob: -13.37515640258789
    5. '	n' → logprob: -14.25015640258789
    6. '(' → logprob: -14.37515640258789
    7. '-' → logprob: -14.87515640258789
    8. ' (' → logprob: -15.00015640258789
    9. '_n' → logprob: -15.00015640258789
    10. ' ' → logprob: -15.12515640258789

Token 276: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011174913495779037
    2. ' -' → logprob: -4.51117467880249
    3. '1' → logprob: -9.011175155639648
    4. ' ' → logprob: -12.886175155639648
    5. '   ' → logprob: -13.386175155639648
    6. ')' → logprob: -14.761175155639648
    7. '```' → logprob: -15.136175155639648
    8. '  ' → logprob: -16.26117515563965
    9. '
' → logprob: -16.51117515563965
    10. '+' → logprob: -16.88617515563965

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.718606891809031e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.500066757202148
    4. '```' → logprob: -15.875066757202148
    5. ')' → logprob: -16.06256675720215
    6. '  ' → logprob: -16.75006675720215
    7. '2' → logprob: -16.93756675720215
    8. '<|end|>' → logprob: -17.18756675720215
    9. '
' → logprob: -17.31256675720215
    10. '...' → logprob: -17.31256675720215

Token 278: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023850491270422935
    2. ' )' → logprob: -4.023850440979004
    3. ')//' → logprob: -5.773850440979004
    4. ' //' → logprob: -6.023850440979004
    5. '//' → logprob: -8.773850440979004
    6. ' ' → logprob: -14.898850440979004
    7. '   ' → logprob: -15.273850440979004
    8. ')
' → logprob: -15.398850440979004
    9. '```' → logprob: -15.648850440979004
    10. '")' → logprob: -15.773850440979004

Token 279: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.38691848516464233
    2. ' //' → logprob: -1.136918544769287
    3. '```' → logprob: -11.636918067932129
    4. ' ' → logprob: -11.761918067932129
    5. '   ' → logprob: -11.886918067932129
    6. ')' → logprob: -11.886918067932129
    7. ')//' → logprob: -12.136918067932129
    8. '
' → logprob: -12.636918067932129
    9. '<|end|>' → logprob: -13.136918067932129
    10. '#' → logprob: -13.386918067932129

Token 280: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '1' → logprob: -15.875006675720215
    4. '۲' → logprob: -19.75000762939453
    5. '```' → logprob: -19.87500762939453
    6. '   ' → logprob: -20.31250762939453
    7. '２' → logprob: -20.87500762939453
    8. '
' → logprob: -20.87500762939453
    9. '  ' → logprob: -21.06250762939453
    10. '' → logprob: -21.75000762939453

Token 281: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.56233171664644e-05
    2. '1' → logprob: -10.000055313110352
    3. ' ' → logprob: -11.500055313110352
    4. '   ' → logprob: -17.68755531311035
    5. '```' → logprob: -18.00005531311035
    6. '
' → logprob: -19.18755531311035
    7. '' → logprob: -19.31255531311035
    8. '  ' → logprob: -19.31255531311035
    9. '0' → logprob: -19.75005531311035
    10. '{' → logprob: -20.00005531311035

Token 282: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9322858452796936
    2. '   ' → logprob: -0.9322858452796936
    3. '<|end|>' → logprob: -1.6822857856750488
    4. '    
' → logprob: -4.807285785675049
    5. ')' → logprob: -5.057285785675049
    6. ' if' → logprob: -5.432285785675049
    7. '  
' → logprob: -6.432285785675049
    8. 'if' → logprob: -6.682285785675049
    9. '<|end|>' → logprob: -6.682285785675049
    10. ' ' → logprob: -7.182285785675049

Token 283: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47572919726371765
    2. '   ' → logprob: -1.47572922706604
    3. '\n' → logprob: -2.47572922706604
    4. '<|end|>' → logprob: -3.10072922706604
    5. '    
' → logprob: -4.350728988647461
    6. '\' → logprob: -5.975728988647461
    7. '  
' → logprob: -6.350728988647461
    8. ')' → logprob: -7.350728988647461
    9. ' 
' → logprob: -7.600728988647461
    10. '+
' → logprob: -8.225728988647461

Token 284: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42697805166244507
    2. 'result' → logprob: -1.6769781112670898
    3. '   ' → logprob: -3.05197811126709
    4. 'r' → logprob: -3.55197811126709
    5. ' print' → logprob: -3.55197811126709
    6. 'if' → logprob: -4.17697811126709
    7. 'res' → logprob: -4.55197811126709
    8. 'diff' → logprob: -4.80197811126709
    9. ' result' → logprob: -5.42697811126709
    10. ' if' → logprob: -5.67697811126709

Token 285: ' Aj' (ID: 28294)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0663586854934692
    2. 'result' → logprob: -1.3163586854934692
    3. 'print' → logprob: -1.3163586854934692
    4. 'res' → logprob: -3.8163585662841797
    5. 'total' → logprob: -4.44135856628418
    6. 'answer' → logprob: -4.56635856628418
    7. 'diff' → logprob: -4.69135856628418
    8. ' result' → logprob: -4.81635856628418
    9. '   ' → logprob: -4.94135856628418
    10. 's' → logprob: -5.06635856628418

Token 286: 'out' (ID: 468)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.02124563790857792
    2. 'out' → logprob: -4.77124547958374
    3. 'outez' → logprob: -5.39624547958374
    4. 'oute' → logprob: -5.64624547958374
    5. 'uster' → logprob: -5.89624547958374
    6. 'ust' → logprob: -6.89624547958374
    7. '#' → logprob: -7.89624547958374
    8. 'uste' → logprob: -9.146245956420898
    9. '_outer' → logprob: -10.271245956420898
    10. '   ' → logprob: -10.271245956420898

Token 287: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7881087064743042
    2. ' de' → logprob: -2.6631088256835938
    3. 'total' → logprob: -2.7881088256835938
    4. 'r' → logprob: -2.9131088256835938
    5. ' total' → logprob: -2.9131088256835938
    6. ' d' → logprob: -2.9131088256835938
    7. '   ' → logprob: -3.0381088256835938
    8. ':' → logprob: -3.2881088256835938
    9. ' +=' → logprob: -3.5381088256835938
    10. ' r' → logprob: -4.163108825683594

Token 288: ' la' (ID: 557)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.22170937061309814
    2. 'r' → logprob: -2.5967092514038086
    3. ' s' → logprob: -2.5967092514038086
    4. ' (' → logprob: -3.8467092514038086
    5. ' k' → logprob: -4.221709251403809
    6. 's' → logprob: -5.471709251403809
    7. '(' → logprob: -6.346709251403809
    8. 'k' → logprob: -6.596709251403809
    9. ' total' → logprob: -6.596709251403809
    10. ' ' → logprob: -6.721709251403809

Token 289: ' partie' (ID: 22139)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.43001699447631836
    2. 's' → logprob: -2.3050169944763184
    3. ' r' → logprob: -2.3050169944763184
    4. 'r' → logprob: -2.4300169944763184
    5. ' (' → logprob: -4.055016994476318
    6. ' k' → logprob: -4.930016994476318
    7. ' total' → logprob: -4.930016994476318
    8. '"' → logprob: -5.305016994476318
    9. '(s' → logprob: -5.930016994476318
    10. 'k' → logprob: -6.055016994476318

Token 290: ' combin' (ID: 25307)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5957680940628052
    2. ' s' → logprob: -1.4707680940628052
    3. 'r' → logprob: -2.2207679748535156
    4. ' k' → logprob: -3.3457679748535156
    5. ' (' → logprob: -3.5957679748535156
    6. 's' → logprob: -4.470767974853516
    7. '   ' → logprob: -5.220767974853516
    8. ' +' → logprob: -5.345767974853516
    9. '+' → logprob: -5.470767974853516
    10. 'k' → logprob: -5.595767974853516

Token 291: 'atoire' (ID: 41651)
  Prédit: 'atoire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoire' → logprob: -0.03992397338151932
    2. 'a' → logprob: -4.164924144744873
    3. '[' → logprob: -5.289924144744873
    4. 'aison' → logprob: -5.789924144744873
    5. 'atoires' → logprob: -6.164924144744873
    6. '(' → logprob: -6.289924144744873
    7. 'ato' → logprob: -6.664924144744873
    8. '{' → logprob: -7.039924144744873
    9. '```' → logprob: -7.164924144744873
    10. 'e' → logprob: -7.164924144744873

Token 292: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12598277628421783
    2. '
' → logprob: -3.1259827613830566
    3. 'result' → logprob: -4.000982761383057
    4. 'r' → logprob: -4.125982761383057
    5. ' for' → logprob: -4.500982761383057
    6. 'for' → logprob: -4.750982761383057
    7. ' r' → logprob: -5.500982761383057
    8. 'total' → logprob: -5.625982761383057
    9. 'print' → logprob: -6.000982761383057
    10. '+' → logprob: -6.375982761383057

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0814251899719238
    2. ' for' → logprob: -1.4564251899719238
    3. ' r' → logprob: -1.8314251899719238
    4. '
' → logprob: -2.456425189971924
    5. 'r' → logprob: -2.956425189971924
    6. '+' → logprob: -3.331425189971924
    7. '+
' → logprob: -3.831425189971924
    8. ' +' → logprob: -4.581425189971924
    9. 'for' → logprob: -4.706425189971924
    10. ' 
' → logprob: -5.081425189971924

Token 294: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.5410893559455872
    2. ' r' → logprob: -2.0410892963409424
    3. 'for' → logprob: -2.2910892963409424
    4. ' for' → logprob: -2.6660892963409424
    5. 'total' → logprob: -2.7910892963409424
    6. ' total' → logprob: -3.6660892963409424
    7. 'result' → logprob: -5.0410895347595215
    8. 'if' → logprob: -5.5410895347595215
    9. ' if' → logprob: -5.7910895347595215
    10. 'res' → logprob: -6.0410895347595215

Token 295: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0023235564585775137
    2. '+=' → logprob: -6.127323627471924
    3. ' =' → logprob: -9.627323150634766
    4. ' +' → logprob: -10.002323150634766
    5. '+' → logprob: -10.877323150634766
    6. ' -=' → logprob: -12.752323150634766
    7. ' *=' → logprob: -13.127323150634766
    8. '=' → logprob: -13.377323150634766
    9. ' ' → logprob: -13.502323150634766
    10. ' ' → logprob: -16.002323150634766

Token 296: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28694549202919006
    2. ' k' → logprob: -1.4119454622268677
    3. ' (' → logprob: -6.161945343017578
    4. '(k' → logprob: -6.911945343017578
    5. ' ' → logprob: -7.661945343017578
    6. '2' → logprob: -8.036945343017578
    7. '   ' → logprob: -8.036945343017578
    8. '  ' → logprob: -8.286945343017578
    9. '(' → logprob: -8.411945343017578
    10. ' r' → logprob: -8.536945343017578

Token 297: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2465670257806778
    2. '*' → logprob: -1.7465670108795166
    3. '*(' → logprob: -3.2465670108795166
    4. '*k' → logprob: -5.496567249298096
    5. '**' → logprob: -7.121567249298096
    6. '(k' → logprob: -9.246566772460938
    7. ' *(' → logprob: -9.996566772460938
    8. '*((' → logprob: -10.371566772460938
    9. ' ' → logprob: -10.496566772460938
    10. '```' → logprob: -10.621566772460938

Token 298: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0444108285009861
    2. '(k' → logprob: -3.1694109439849854
    3. '*(' → logprob: -7.794410705566406
    4. ' (' → logprob: -8.919410705566406
    5. '*k' → logprob: -9.044410705566406
    6. '-' → logprob: -9.294410705566406
    7. 'n' → logprob: -9.294410705566406
    8. '*' → logprob: -9.419410705566406
    9. ' k' → logprob: -9.419410705566406
    10. '
' → logprob: -9.544410705566406

Token 299: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028060602489858866
    2. ' -' → logprob: -5.877806186676025
    3. '1' → logprob: -14.627805709838867
    4. '−' → logprob: -15.002805709838867
    5. ')' → logprob: -15.252805709838867
    6. '```' → logprob: -16.502805709838867
    7. '–' → logprob: -17.252805709838867
    8. '
' → logprob: -17.377805709838867
    9. '   ' → logprob: -17.377805709838867
    10. ' ' → logprob: -17.627805709838867

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -11.000020027160645
    3. ')' → logprob: -13.125020027160645
    4. '   ' → logprob: -14.250020027160645
    5. '<|end|>' → logprob: -15.875020027160645
    6. '
' → logprob: -16.18752098083496
    7. '```' → logprob: -16.18752098083496
    8. '  ' → logprob: -16.62502098083496
    9. ' )' → logprob: -17.37502098083496
    10. '۱' → logprob: -17.50002098083496

Token 301: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.42653027176856995
    2. ')' → logprob: -1.5515302419662476
    3. ')//' → logprob: -2.051530361175537
    4. ' //' → logprob: -5.051530361175537
    5. ' )' → logprob: -8.301529884338379
    6. '*' → logprob: -9.676529884338379
    7. ')*' → logprob: -9.926529884338379
    8. ' ' → logprob: -12.926529884338379
    9. '   ' → logprob: -13.426529884338379
    10. ')/' → logprob: -14.301529884338379

Token 302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.709308167453855e-05
    2. '1' → logprob: -9.625086784362793
    3. ' ' → logprob: -10.875086784362793
    4. '
' → logprob: -14.562586784362793
    5. '   ' → logprob: -15.062586784362793
    6. '```' → logprob: -15.437586784362793
    7. '  ' → logprob: -15.562586784362793
    8. ')' → logprob: -15.687586784362793
    9. '

' → logprob: -16.37508773803711
    10. '=' → logprob: -16.93758773803711

Token 303: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03373456373810768
    2. '*' → logprob: -3.4087345600128174
    3. '*(' → logprob: -10.283734321594238
    4. ' ' → logprob: -11.283734321594238
    5. '*n' → logprob: -11.408734321594238
    6. '*r' → logprob: -11.908734321594238
    7. '*num' → logprob: -12.408734321594238
    8. '   ' → logprob: -12.783734321594238
    9. '<|end|>' → logprob: -12.783734321594238
    10. ')' → logprob: -13.283734321594238

Token 304: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011213571764528751
    2. ' count' → logprob: -4.761213779449463
    3. '(count' → logprob: -6.636213779449463
    4. 'total' → logprob: -6.761213779449463
    5. ' total' → logprob: -10.136213302612305
    6. ' (' → logprob: -10.261213302612305
    7. '   ' → logprob: -11.386213302612305
    8. ' ' → logprob: -12.261213302612305
    9. 'sum' → logprob: -12.261213302612305
    10. '(total' → logprob: -12.261213302612305

Token 305: 'total' (ID: 9577)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.014307470060884953
    2. 'total' → logprob: -5.014307498931885
    3. ' count' → logprob: -5.389307498931885
    4. '(count' → logprob: -7.014307498931885
    5. '2' → logprob: -7.264307498931885
    6. ')' → logprob: -7.889307498931885
    7. 'n' → logprob: -8.139307022094727
    8. ' ' → logprob: -8.889307022094727
    9. '   ' → logprob: -8.889307022094727
    10. ' total' → logprob: -9.264307022094727

Token 306: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.2664456789934775e-06
    2. 'pairs' → logprob: -14.250000953674316
    3. 'Pairs' → logprob: -15.500000953674316
    4. '_' → logprob: -16.125001907348633
    5. ')' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.250001907348633
    8. '-_' → logprob: -17.375001907348633
    9. ' _' → logprob: -17.625001907348633
    10. ' -' → logprob: -18.125001907348633

Token 307: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.015660550445318222
    2. '-' → logprob: -4.265660762786865
    3. ')' → logprob: -6.640660762786865
    4. ' )' → logprob: -9.140660285949707
    5. ' ' → logprob: -10.140660285949707
    6. '*' → logprob: -11.515660285949707
    7. '    ' → logprob: -11.640660285949707
    8. '   ' → logprob: -11.890660285949707
    9. ' *' → logprob: -12.390660285949707
    10. ' -
' → logprob: -13.015660285949707

Token 308: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4741230010986328
    2. ' s' → logprob: -0.9741230010986328
    3. ' ' → logprob: -10.724123001098633
    4. 'count' → logprob: -11.849123001098633
    5. '   ' → logprob: -12.349123001098633
    6. '  ' → logprob: -13.099123001098633
    7. ' count' → logprob: -13.224123001098633
    8. ')' → logprob: -13.349123001098633
    9. 'sum' → logprob: -13.349123001098633
    10. 'r' → logprob: -14.161623001098633

Token 309: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013381359167397022
    2. ')
' → logprob: -9.000133514404297
    3. ' )' → logprob: -11.750133514404297
    4. '   ' → logprob: -13.750133514404297
    5. ')

' → logprob: -14.500133514404297
    6. '))' → logprob: -14.875133514404297
    7. ')return' → logprob: -15.875133514404297
    8. ')
' → logprob: -16.375133514404297
    9. ')#' → logprob: -16.625133514404297
    10. '*' → logprob: -17.000133514404297

Token 310: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20273075997829437
    2. 'print' → logprob: -1.7027307748794556
    3. 'return' → logprob: -6.702730655670166
    4. '    
' → logprob: -10.077731132507324
    5. ' print' → logprob: -10.452731132507324
    6. '
' → logprob: -11.202731132507324
    7. ' return' → logprob: -13.077731132507324
    8. '	print' → logprob: -14.202731132507324
    9. '   
' → logprob: -14.702731132507324
    10. '  
' → logprob: -15.202731132507324

Token 312: ' Mod' (ID: 7191)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.039025530219078064
    2. ' print' → logprob: -3.7890255451202393
    3. 'return' → logprob: -4.53902530670166
    4. '   ' → logprob: -6.16402530670166
    5. 'if' → logprob: -6.41402530670166
    6. ' return' → logprob: -7.16402530670166
    7. ' if' → logprob: -7.78902530670166
    8. 'for' → logprob: -11.66402530670166
    9. ' ' → logprob: -12.16402530670166
    10. 'r' → logprob: -12.16402530670166

Token 313: 'ulo' (ID: 5953)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6676627397537231
    2. 'ULO' → logprob: -1.7926627397537231
    3. 'ulo' → logprob: -2.0426626205444336
    4. ' =' → logprob: -3.2926626205444336
    5. '7' → logprob: -3.4176626205444336
    6. '   ' → logprob: -3.6676626205444336
    7. '100' → logprob: -4.167662620544434
    8. '409' → logprob: -4.542662620544434
    9. ' r' → logprob: -4.792662620544434
    10. 'ule' → logprob: -4.792662620544434

Token 314: ',' (ID: 11)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.24412542581558228
    2. ' r' → logprob: -2.6191253662109375
    3. '   ' → logprob: -2.7441253662109375
    4. 'r' → logprob: -3.7441253662109375
    5. '%' → logprob: -3.9941253662109375
    6. ' %=' → logprob: -4.2441253662109375
    7. ' %
' → logprob: -4.8691253662109375
    8. ' ' → logprob: -5.4941253662109375
    9. ' (' → logprob: -5.7441253662109375
    10. '10' → logprob: -6.7441253662109375

Token 315: ' comme' (ID: 7971)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05230499058961868
    2. ' ' → logprob: -3.177304983139038
    3. '100' → logprob: -4.927305221557617
    4. '   ' → logprob: -6.427305221557617
    5. 'r' → logprob: -8.302305221557617
    6. ' r' → logprob: -9.052305221557617
    7. '998' → logprob: -10.927305221557617
    8. '1' → logprob: -11.802305221557617
    9. ' MOD' → logprob: -13.052305221557617
    10. 'MOD' → logprob: -13.302305221557617

Token 316: ' d' (ID: 272)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03458915650844574
    2. ' ' → logprob: -3.4095890522003174
    3. 'r' → logprob: -7.6595892906188965
    4. '100' → logprob: -7.9095892906188965
    5. ' r' → logprob: -9.784588813781738
    6. '1' → logprob: -10.784588813781738
    7. '998' → logprob: -12.034588813781738
    8. '   ' → logprob: -12.284588813781738
    9. '109' → logprob: -12.409588813781738
    10. '(' → logprob: -12.784588813781738

Token 317: ''hab' (ID: 99653)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.48619771003723145
    2. '100' → logprob: -2.3611977100372314
    3. ' =' → logprob: -2.9861977100372314
    4. 'éf' → logprob: -2.9861977100372314
    5. 'ef' → logprob: -3.3611977100372314
    6. 'é' → logprob: -4.111197471618652
    7. '=' → logprob: -4.236197471618652
    8. '1' → logprob: -4.236197471618652
    9. ' ' → logprob: -4.361197471618652
    10. '%' → logprob: -4.361197471618652

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23602613806724548
    2. ' r' → logprob: -2.2360260486602783
    3. ' ' → logprob: -3.2360260486602783
    4. 'r' → logprob: -3.7360260486602783
    5. ' 
' → logprob: -4.861026287078857
    6. '%' → logprob: -4.986026287078857
    7. ' %' → logprob: -4.986026287078857
    8. '\n' → logprob: -4.986026287078857
    9. '    
' → logprob: -5.486026287078857
    10. '  
' → logprob: -6.861026287078857

Token 319: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9293258190155029
    2. '%' → logprob: -1.179325819015503
    3. ' ' → logprob: -2.054325819015503
    4. '   ' → logprob: -2.429325819015503
    5. '10' → logprob: -4.054326057434082
    6. ' r' → logprob: -4.429326057434082
    7. 'r' → logprob: -4.554326057434082
    8. ' %
' → logprob: -4.554326057434082
    9. ' 
' → logprob: -4.804326057434082
    10. '\n' → logprob: -5.179326057434082

Token 320: ' print' (ID: 2123)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0845838338136673
    2. ' %' → logprob: -3.4595837593078613
    3. 'r' → logprob: -4.209583759307861
    4. '%' → logprob: -4.334583759307861
    5. ' r' → logprob: -4.834583759307861
    6. '100' → logprob: -5.084583759307861
    7. '   ' → logprob: -5.209583759307861
    8. ')' → logprob: -7.584583759307861
    9. ' %=' → logprob: -7.959583759307861
    10. 'mod' → logprob: -8.45958423614502

Token 321: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03019935078918934
    2. '(r' → logprob: -3.5301992893218994
    3. '((' → logprob: -8.28019905090332
    4. ' (' → logprob: -8.90519905090332
    5. '("' → logprob: -10.78019905090332
    6. '()' → logprob: -11.15519905090332
    7. '(pow' → logprob: -11.78019905090332
    8. '(
' → logprob: -12.03019905090332
    9. '('' → logprob: -12.40519905090332
    10. '(re' → logprob: -13.03019905090332

Token 322: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.008951232768595219
    2. '%' → logprob: -4.758951187133789
    3. ')' → logprob: -8.133951187133789
    4. ' )' → logprob: -10.633951187133789
    5. ' ' → logprob: -11.258951187133789
    6. ' ' → logprob: -12.383951187133789
    7. ' %)' → logprob: -13.758951187133789
    8. ')%' → logprob: -14.133951187133789
    9. '%c' → logprob: -16.00895118713379
    10. '%n' → logprob: -16.75895118713379

Token 323: ' (' (ID: 350)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.052797794342041016
    2. '(' → logprob: -3.552797794342041
    3. '10' → logprob: -3.927797794342041
    4. '998' → logprob: -5.802797794342041
    5. ' (' → logprob: -10.427797317504883
    6. ' ' → logprob: -10.552797317504883
    7. '1' → logprob: -11.302797317504883
    8. '((' → logprob: -12.427797317504883
    9. '(int' → logprob: -12.802797317504883
    10. '   ' → logprob: -14.427797317504883

Token 324: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00193280098028481
    2. '100' → logprob: -6.251932621002197
    3. '(' → logprob: -13.126933097839355
    4. '998' → logprob: -13.501933097839355
    5. '1' → logprob: -14.126933097839355
    6. ' ' → logprob: -16.75193214416504
    7. 'int' → logprob: -17.12693214416504
    8. '１０' → logprob: -18.87693214416504
    9. '   ' → logprob: -19.62693214416504
    10. '109' → logprob: -20.37693214416504

Token 325: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.38971269130706787
    2. '9' → logprob: -1.1397126913070679
    3. '09' → logprob: -5.889712810516357
    4. ' ' → logprob: -10.5147123336792
    5. '```' → logprob: -11.1397123336792
    6. '_' → logprob: -11.7647123336792
    7. '+' → logprob: -12.1397123336792
    8. '000' → logprob: -12.2647123336792
    9. '009' → logprob: -12.8897123336792
    10. '*' → logprob: -12.8897123336792

Token 326: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.875
    3. ' ' → logprob: -16.25
    4. '+' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. '   ' → logprob: -19.875
    7. '  ' → logprob: -21.75
    8. '10' → logprob: -21.75
    9. '1' → logprob: -21.875
    10. '
' → logprob: -21.875

Token 327: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033784625702537596
    2. ' +' → logprob: -8.000337600708008
    3. '7' → logprob: -13.000337600708008
    4. '+
' → logprob: -16.625337600708008
    5. ' plus' → logprob: -18.750337600708008
    6. '＋' → logprob: -18.875337600708008
    7. ')+' → logprob: -19.000337600708008
    8. '```' → logprob: -19.250337600708008
    9. ' ' → logprob: -19.750337600708008
    10. '9' → logprob: -20.500337600708008

Token 328: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -20.875
    4. '+' → logprob: -21.0
    5. '```' → logprob: -21.75
    6. '07' → logprob: -22.0
    7. '9' → logprob: -23.125
    8. ' ' → logprob: -23.625
    9. '  ' → logprob: -23.75
    10. '
' → logprob: -23.75

Token 329: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '07' → logprob: -21.0
    4. '+' → logprob: -21.25
    5. '```' → logprob: -21.5
    6. '   ' → logprob: -22.0
    7. '9' → logprob: -22.75
    8. '
' → logprob: -23.0
    9. '７' → logprob: -23.875
    10. '

' → logprob: -24.375

Token 330: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005582740413956344
    2. '))' → logprob: -7.500558376312256
    3. ' )' → logprob: -12.375557899475098
    4. ')
' → logprob: -13.875557899475098
    5. ')`' → logprob: -16.250558853149414
    6. ')))' → logprob: -16.375558853149414
    7. ')")' → logprob: -17.750558853149414
    8. ')#' → logprob: -18.125558853149414
    9. ')}' → logprob: -18.250558853149414
    10. ')

' → logprob: -18.875558853149414

Token 331: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: ' Un' (ID: 1367)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7919813990592957
    2. '<|end|>' → logprob: -0.9169813990592957
    3. '\n' → logprob: -2.2919814586639404
    4. 'main' → logprob: -4.041981220245361
    5. 'if' → logprob: -4.541981220245361
    6. ' main' → logprob: -5.041981220245361
    7. '(main' → logprob: -5.416981220245361
    8. ')' → logprob: -6.041981220245361
    9. '#' → logprob: -7.166981220245361
    10. '```' → logprob: -7.166981220245361

Token 333: ' peu' (ID: 9235)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004135112394578755
    2. 'f' → logprob: -9.00041389465332
    3. ' if' → logprob: -9.62541389465332
    4. '
' → logprob: -10.12541389465332
    5. 'main' → logprob: -10.25041389465332
    6. '_' → logprob: -10.62541389465332
    7. '```' → logprob: -10.75041389465332
    8. '#' → logprob: -10.75041389465332
    9. 'i' → logprob: -11.00041389465332
    10. '<|end|>' → logprob: -11.50041389465332

Token 334: ' old' (ID: 2890)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' school' (ID: 3474)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03692182898521423
    2. '_' → logprob: -4.036921977996826
    3. ' if' → logprob: -4.786921977996826
    4. 'main' → logprob: -5.661921977996826
    5. ' main' → logprob: -6.161921977996826
    6. '()' → logprob: -6.286921977996826
    7. '_main' → logprob: -6.661921977996826
    8. '#' → logprob: -8.286921501159668
    9. '__' → logprob: -8.411921501159668
    10. '```' → logprob: -8.911921501159668

Token 336: ' mais' (ID: 2899)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13802316784858704
    2. '
' → logprob: -2.5130231380462646
    3. 'main' → logprob: -3.1380231380462646
    4. '<|end|>' → logprob: -5.513023376464844
    5. '```' → logprob: -8.888023376464844
    6. '\n' → logprob: -9.013023376464844
    7. ' if' → logprob: -9.638023376464844
    8. '

' → logprob: -10.388023376464844
    9. '  
' → logprob: -10.388023376464844
    10. '(main' → logprob: -10.388023376464844

Token 337: ' ça' (ID: 13590)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10022328048944473
    2. 'main' → logprob: -2.3502233028411865
    3. '
' → logprob: -11.725223541259766
    4. '(main' → logprob: -12.600223541259766
    5. ' if' → logprob: -12.975223541259766
    6. ' main' → logprob: -13.100223541259766
    7. '```' → logprob: -14.850223541259766
    8. '__' → logprob: -15.350223541259766
    9. '#' → logprob: -16.100223541259766
    10. '\
' → logprob: -16.725223541259766

Token 338: ' marche' (ID: 58191)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4796946942806244
    2. '
' → logprob: -0.9796947240829468
    3. '<|end|>' → logprob: -5.604694843292236
    4. ' if' → logprob: -7.229694843292236
    5. '\n' → logprob: -7.854694843292236
    6. '

' → logprob: -8.104694366455078
    7. '  
' → logprob: -8.479694366455078
    8. 'main' → logprob: -8.979694366455078
    9. ' 
' → logprob: -9.854694366455078
    10. '    
' → logprob: -10.354694366455078

Token 339: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0442664660513401
    2. 'if' → logprob: -3.54426646232605
    3. '<|end|>' → logprob: -4.669266700744629
    4. 'main' → logprob: -5.419266700744629
    5. '```' → logprob: -8.919266700744629
    6. '

' → logprob: -9.044266700744629
    7. '\n' → logprob: -9.169266700744629
    8. ' main' → logprob: -9.544266700744629
    9. ' if' → logprob: -10.419266700744629
    10. '(main' → logprob: -10.669266700744629

Token 340: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005665683187544346
    2. 'main' → logprob: -5.2556657791137695
    3. '
' → logprob: -7.7556657791137695
    4. ' if' → logprob: -13.38066577911377
    5. '```' → logprob: -14.25566577911377
    6. '

' → logprob: -15.00566577911377
    7. '    
' → logprob: -15.38066577911377
    8. '<|end|>' → logprob: -15.88066577911377
    9. '  
' → logprob: -16.005664825439453
    10. '\n' → logprob: -16.005664825439453

Token 341: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26286038756370544
    2. '<|end|>' → logprob: -1.5128604173660278
    3. '
' → logprob: -5.137860298156738
    4. '\n' → logprob: -6.387860298156738
    5. '```' → logprob: -6.887860298156738
    6. '#' → logprob: -7.262860298156738
    7. '()' → logprob: -7.512860298156738
    8. '<|end|>' → logprob: -7.762860298156738
    9. '(' → logprob: -8.762860298156738
    10. '\' → logprob: -8.887860298156738


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 339
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 36.58%
Précision adaptée (1ère position): 39.23%
Précision (top 10): 70.50%
================================================================================
