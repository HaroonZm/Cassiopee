================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Honnêtement, ce code fait des trucs mathématiques avec des séquences...
mod = 1000000007
n, k = map(int, input().split())
root_n = int(n**0.5)
Num = [0] * (root_n + 1)
for j in range(root_n, 0, -1):
    Num[j] = j  # bon, là on fait un assignement direct
    Num.append(n // j)  # ajoute on ne sait quoi à la suite, chelou mais OK

ln = len(Num)
for kk in range(1, ln):
    # on ajuste la "queue" en soustrayant le précédent à chaque fois
    Num[-kk] = Num[-kk] - Num[-kk - 1]

DP = [[0] * ln for __ in range(k)]
DP[0] = Num[:]
for level in range(1, k):
    running = 0
    # on boucle (on commence à 1, c'est louche mais bon, c'est le code de base)
    for mm in range(1, ln):
        running += DP[level - 1][mm]
        if running >= mod:  # modulo par sécurité, ça overflow vite sinon
            running -= mod
        DP[level][-mm] = (running * Num[-mm]) % mod  # on compresse vers l'arrière

res = 0
for thing in DP[-1][1:]:
    res += thing
    res %= mod

print(res)  # on espère que ça marche, la logique est un peu loufoque
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' H' (ID: 487)
  → Token d'amorce (pas de prédiction)

Token 2: 'onn' (ID: 9525)
  → Token d'amorce (pas de prédiction)

Token 3: 'êtement' (ID: 140744)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.7274951338768005
    2. 'e' → logprob: -1.3524951934814453
    3. 't' → logprob: -2.8524951934814453
    4. 'a' → logprob: -2.9774951934814453
    5. 'esty' → logprob: -3.4774951934814453
    6. 'estly' → logprob: -3.4774951934814453
    7. '#' → logprob: -3.9774951934814453
    8. 'ey' → logprob: -4.102495193481445
    9. 'es' → logprob: -4.727495193481445
    10. 'g' → logprob: -5.102495193481445

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026975206565111876
    2. '#' → logprob: -7.127697467803955
    3. ' ,' → logprob: -8.002697944641113
    4. ',
' → logprob: -8.377697944641113
    5. ',#' → logprob: -8.502697944641113
    6. ':' → logprob: -8.752697944641113
    7. '```' → logprob: -8.752697944641113
    8. ' je' → logprob: -9.127697944641113
    9. '?' → logprob: -9.502697944641113
    10. '.' → logprob: -9.502697944641113

Token 5: ' ce' (ID: 2357)
  Prédit: ' je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' je' → logprob: -0.04315013810992241
    2. ' c' → logprob: -4.293149948120117
    3. ' ' → logprob: -4.918149948120117
    4. 'je' → logprob: -5.168149948120117
    5. ' il' → logprob: -5.793149948120117
    6. ' ce' → logprob: -6.043149948120117
    7. '#' → logprob: -6.168149948120117
    8. ' #' → logprob: -6.293149948120117
    9. ' ça' → logprob: -6.668149948120117
    10. ' cela' → logprob: -6.918149948120117

Token 6: ' code' (ID: 3490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.985052764415741
    2. ' code' → logprob: -1.1100528240203857
    3. ' n' → logprob: -2.6100528240203857
    4. 'n' → logprob: -2.9850528240203857
    5. ' #' → logprob: -3.2350528240203857
    6. ' ' → logprob: -3.4850528240203857
    7. ' que' → logprob: -3.7350528240203857
    8. '#' → logprob: -4.485052585601807
    9. 's' → logprob: -4.485052585601807
    10. 'code' → logprob: -4.485052585601807

Token 7: ' fait' (ID: 7473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5148950219154358
    2. ' est' → logprob: -2.014894962310791
    3. '```' → logprob: -2.764894962310791
    4. ' n' → logprob: -3.389894962310791
    5. '#' → logprob: -3.389894962310791
    6. 'n' → logprob: -4.014894962310791
    7. ' ```' → logprob: -4.014894962310791
    8. ':' → logprob: -4.264894962310791
    9. 'est' → logprob: -4.764894962310791
    10. ',' → logprob: -4.764894962310791

Token 8: ' des' (ID: 731)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.284169316291809
    2. 'r' → logprob: -1.534169316291809
    3. 'un' → logprob: -2.2841691970825195
    4. ' ' → logprob: -3.0341691970825195
    5. 'v' → logprob: -3.1591691970825195
    6. ' ' → logprob: -3.1591691970825195
    7. 'n' → logprob: -3.4091691970825195
    8. 'p' → logprob: -3.6591691970825195
    9. 'exact' → logprob: -4.0341691970825195
    10. 's' → logprob: -4.0341691970825195

Token 9: ' trucs' (ID: 151878)
  Prédit: ' choses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choses' → logprob: -0.693007230758667
    2. 'calcul' → logprob: -2.193007230758667
    3. 'tr' → logprob: -2.443007230758667
    4. 'mer' → logprob: -2.693007230758667
    5. ' trucs' → logprob: -3.068007230758667
    6. '```' → logprob: -3.568007230758667
    7. 'v' → logprob: -3.693007230758667
    8. 'cho' → logprob: -3.818007230758667
    9. 'er' → logprob: -3.818007230758667
    10. ' mer' → logprob: -4.193007469177246

Token 10: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6644954681396484
    2. ',' → logprob: -2.0394954681396484
    3. ' ' → logprob: -2.0394954681396484
    4. '#' → logprob: -2.5394954681396484
    5. '```' → logprob: -2.9144954681396484
    6. ':' → logprob: -3.4144954681396484
    7. 's' → logprob: -5.039495468139648
    8. '!' → logprob: -5.289495468139648
    9. '
' → logprob: -5.539495468139648
    10. '_' → logprob: -5.539495468139648

Token 11: 'ématiques' (ID: 114734)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7832902669906616
    2. 'é' → logprob: -1.0332902669906616
    3. 'ématiques' → logprob: -2.533290386199951
    4. 'ématique' → logprob: -3.658290386199951
    5. '_' → logprob: -4.158290386199951
    6. '```' → logprob: -4.158290386199951
    7. '.' → logprob: -4.408290386199951
    8. 's' → logprob: -4.658290386199951
    9. ' ' → logprob: -5.158290386199951
    10. '`' → logprob: -5.283290386199951

Token 12: ' avec' (ID: 3937)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4634053707122803
    2. '.' → logprob: -1.7134053707122803
    3. ',' → logprob: -2.2134053707122803
    4. '```' → logprob: -3.8384053707122803
    5. ':' → logprob: -4.338405609130859
    6. '\' → logprob: -4.838405609130859
    7. '_' → logprob: -4.963405609130859
    8. '
' → logprob: -5.463405609130859
    9. 'import' → logprob: -5.588405609130859
    10. '!' → logprob: -5.588405609130859

Token 13: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.10148343443870544
    2. 'des' → logprob: -3.8514833450317383
    3. ' les' → logprob: -3.8514833450317383
    4. ' ' → logprob: -4.726483345031738
    5. ' pandas' → logprob: -4.726483345031738
    6. ' la' → logprob: -5.351483345031738
    7. ' numpy' → logprob: -5.726483345031738
    8. 'a' → logprob: -5.726483345031738
    9. '+' → logprob: -5.851483345031738
    10. ' l' → logprob: -6.226483345031738

Token 14: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10962370783090591
    2. '_' → logprob: -3.359623670578003
    3. ' nombres' → logprob: -4.359623908996582
    4. ' ' → logprob: -4.484623908996582
    5. 'esp' → logprob: -5.359623908996582
    6. '   ' → logprob: -5.359623908996582
    7. ' espaces' → logprob: -5.484623908996582
    8. '  ' → logprob: -5.609623908996582
    9. 'n' → logprob: -5.734623908996582
    10. '```' → logprob: -5.859623908996582

Token 15: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.03870159760117531
    2. 'q' → logprob: -3.9137015342712402
    3. 'quence' → logprob: -4.78870153427124
    4. 'ries' → logprob: -5.91370153427124
    5. 'qu' → logprob: -6.66370153427124
    6. '#' → logprob: -6.78870153427124
    7. 'rie' → logprob: -7.16370153427124
    8. '```' → logprob: -7.28870153427124
    9. 't' → logprob: -7.53870153427124
    10. 'quent' → logprob: -7.66370153427124

Token 16: '...
' (ID: 4908)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.6878182888031006
    2. '.' → logprob: -1.8128182888031006
    3. '#' → logprob: -2.0628182888031006
    4. '_' → logprob: -2.1878182888031006
    5. ',' → logprob: -2.4378182888031006
    6. 'e' → logprob: -2.9378182888031006
    7. ':' → logprob: -2.9378182888031006
    8. '`' → logprob: -3.1878182888031006
    9. 'i' → logprob: -3.1878182888031006
    10. 'import' → logprob: -3.6878182888031006

Token 17: 'mod' (ID: 4847)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3662840127944946
    2. '```' → logprob: -1.6162840127944946
    3. ':' → logprob: -2.241283893585205
    4. '_' → logprob: -2.741283893585205
    5. ',' → logprob: -3.116283893585205
    6. '`' → logprob: -3.241283893585205
    7. ' ' → logprob: -3.241283893585205
    8. '\' → logprob: -3.491283893585205
    9. 'n' → logprob: -3.491283893585205
    10. '[' → logprob: -3.491283893585205

Token 18: ' =' (ID: 314)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.006470936816185713
    2. 'e' → logprob: -5.756471157073975
    3. 'u' → logprob: -6.381471157073975
    4. 'èle' → logprob: -7.006471157073975
    5. 'ules' → logprob: -8.256470680236816
    6. '```' → logprob: -9.006470680236816
    7. ' =' → logprob: -9.256470680236816
    8. 'é' → logprob: -9.506470680236816
    9. 'è' → logprob: -10.131470680236816
    10. 'import' → logprob: -11.131470680236816

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8960613012313843
    2. ' lambda' → logprob: -1.5210613012313843
    3. ' [' → logprob: -1.8960613012313843
    4. ' []' → logprob: -2.271061420440674
    5. ' __' → logprob: -2.896061420440674
    6. ' nn' → logprob: -3.896061420440674
    7. ' torch' → logprob: -4.521061420440674
    8. 'lambda' → logprob: -4.646061420440674
    9. ' "' → logprob: -5.771061420440674
    10. ' math' → logprob: -5.896061420440674

Token 20: '100' (ID: 1353)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2891044616699219
    2. '[]' → logprob: -2.414104461669922
    3. '[' → logprob: -3.039104461669922
    4. 'math' → logprob: -3.664104461669922
    5. '[int' → logprob: -3.664104461669922
    6. 'torch' → logprob: -4.164104461669922
    7. 'sum' → logprob: -4.789104461669922
    8. 'int' → logprob: -5.289104461669922
    9. 'range' → logprob: -5.414104461669922
    10. ' lambda' → logprob: -5.414104461669922

Token 21: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.004144288133829832
    2. '9' → logprob: -5.629144191741943
    3. '007' → logprob: -9.004144668579102
    4. '009' → logprob: -9.129144668579102
    5. '09' → logprob: -9.379144668579102
    6. '```' → logprob: -9.504144668579102
    7. '7' → logprob: -10.004144668579102
    8. '07' → logprob: -10.879144668579102
    9. '0' → logprob: -10.879144668579102
    10. '_' → logprob: -11.004144668579102

Token 22: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.13004358112812042
    2. '007' → logprob: -2.1300435066223145
    3. '7' → logprob: -6.0050435066223145
    4. '19' → logprob: -7.5050435066223145
    5. '3' → logprob: -10.005043983459473
    6. '```' → logprob: -10.880043983459473
    7. '003' → logprob: -11.255043983459473
    8. '019' → logprob: -11.505043983459473
    9. '07' → logprob: -13.380043983459473
    10. '001' → logprob: -13.505043983459473

Token 23: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.941850526549388e-06
    2. '07' → logprob: -12.000007629394531
    3. '+' → logprob: -14.500007629394531
    4. '9' → logprob: -14.750007629394531
    5. '```' → logprob: -15.000007629394531
    6. ' ' → logprob: -15.750007629394531
    7. '007' → logprob: -16.62500762939453
    8. '0' → logprob: -16.87500762939453
    9. '``' → logprob: -17.00000762939453
    10. '

' → logprob: -17.25000762939453

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8923026323318481
    2. '\n' → logprob: -1.6423026323318481
    3. '#' → logprob: -2.6423025131225586
    4. 'def' → logprob: -2.7673025131225586
    5. '' → logprob: -3.1423025131225586
    6. '\' → logprob: -3.1423025131225586
    7. 'n' → logprob: -3.2673025131225586
    8. ',' → logprob: -3.5173025131225586
    9. ' 
' → logprob: -3.8923025131225586
    10. '*' → logprob: -4.142302513122559

Token 25: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4986571669578552
    2. 'def' → logprob: -1.6236572265625
    3. '

' → logprob: -2.9986572265625
    4. '\n' → logprob: -2.9986572265625
    5. 'n' → logprob: -3.4986572265625
    6. '' → logprob: -3.4986572265625
    7. '\' → logprob: -4.7486572265625
    8. '
' → logprob: -4.9986572265625
    9. ' 

' → logprob: -5.4986572265625
    10. '#' → logprob: -5.6236572265625

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032529314048588276
    2. '=' → logprob: -6.003252983093262
    3. ' ' → logprob: -7.253252983093262
    4. ',' → logprob: -10.503252983093262
    5. ' ,' → logprob: -12.128252983093262
    6. ')' → logprob: -12.253252983093262
    7. '.' → logprob: -12.378252983093262
    8. 's' → logprob: -12.503252983093262
    9. ' +=' → logprob: -12.503252983093262
    10. ' =
' → logprob: -12.878252983093262

Token 27: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5548041462898254
    2. 'k' → logprob: -1.6798040866851807
    3. ' m' → logprob: -2.1798040866851807
    4. 'm' → logprob: -2.8048040866851807
    5. ' ' → logprob: -3.0548040866851807
    6. ' =' → logprob: -4.55480432510376
    7. '=' → logprob: -6.30480432510376
    8. 'a' → logprob: -6.80480432510376
    9. ' a' → logprob: -7.17980432510376
    10. 'x' → logprob: -7.30480432510376

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026371359825134277
    2. '=' → logprob: -3.651371479034424
    3. ',' → logprob: -10.026371002197266
    4. ' ' → logprob: -10.651371002197266
    5. ' =
' → logprob: -13.526371002197266
    6. ' ,' → logprob: -14.151371002197266
    7. '=int' → logprob: -14.776371002197266
    8. '=input' → logprob: -15.776371002197266
    9. ' =
' → logprob: -16.026371002197266
    10. ')' → logprob: -16.151371002197266

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.047129854559898376
    2. 'map' → logprob: -3.4221298694610596
    3. ' input' → logprob: -4.9221296310424805
    4. ' ' → logprob: -5.5471296310424805
    5. 'input' → logprob: -7.0471296310424805
    6. ' int' → logprob: -7.2971296310424805
    7. '0' → logprob: -8.54712963104248
    8. ' list' → logprob: -8.67212963104248
    9. 'int' → logprob: -8.67212963104248
    10. '10' → logprob: -9.54712963104248

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18256747722625732
    2. '(' → logprob: -1.8075674772262573
    3. '(str' → logprob: -6.057567596435547
    4. '(input' → logprob: -8.557567596435547
    5. 'int' → logprob: -9.182567596435547
    6. '(lambda' → logprob: -9.307567596435547
    7. '(
' → logprob: -10.432567596435547
    8. 'input' → logprob: -11.307567596435547
    9. '()' → logprob: -11.932567596435547
    10. '[int' → logprob: -12.057567596435547

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05866684764623642
    2. 'input' → logprob: -3.058666944503784
    3. '(' → logprob: -5.308666706085205
    4. ',input' → logprob: -5.558666706085205
    5. ' input' → logprob: -7.308666706085205
    6. ')' → logprob: -8.183667182922363
    7. ',' → logprob: -8.558667182922363
    8. '=input' → logprob: -9.808667182922363
    9. '<input' → logprob: -11.683667182922363
    10. '[input' → logprob: -11.808667182922363

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38691169023513794
    2. ' input' → logprob: -1.1369116306304932
    3. ')' → logprob: -10.261911392211914
    4. ' )' → logprob: -13.136911392211914
    5. '=input' → logprob: -13.886911392211914
    6. '(input' → logprob: -14.011911392211914
    7. ' ' → logprob: -14.261911392211914
    8. ',input' → logprob: -14.386911392211914
    9. '	input' → logprob: -14.511911392211914
    10. '<input' → logprob: -16.761911392211914

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008715623058378696
    2. '()' → logprob: -5.383715629577637
    3. '())' → logprob: -5.508715629577637
    4. '(' → logprob: -11.508715629577637
    5. ')' → logprob: -11.883715629577637
    6. '());' → logprob: -12.008715629577637
    7. '()[' → logprob: -13.383715629577637
    8. '()`' → logprob: -13.383715629577637
    9. '(),' → logprob: -13.508715629577637
    10. '()>' → logprob: -13.633715629577637

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007115975022315979
    2. 'strip' → logprob: -7.250711441040039
    3. 'rstrip' → logprob: -14.250711441040039
    4. ' split' → logprob: -14.500711441040039
    5. ')' → logprob: -14.625711441040039
    6. '(split' → logprob: -15.875711441040039
    7. 'read' → logprob: -16.87571144104004
    8. 'plit' → logprob: -17.87571144104004
    9. 'spl' → logprob: -18.12571144104004
    10. 'startswith' → logprob: -18.87571144104004

Token 35: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1865287721157074
    2. '())' → logprob: -2.0615286827087402
    3. '))' → logprob: -3.4365286827087402
    4. '('' → logprob: -5.18652868270874
    5. '(' → logprob: -5.93652868270874
    6. '()' → logprob: -6.43652868270874
    7. '()))' → logprob: -8.186529159545898
    8. '')' → logprob: -8.186529159545898
    9. '(','' → logprob: -9.186529159545898
    10. '`)' → logprob: -9.811529159545898

Token 36: 'root' (ID: 5488)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07029429078102112
    2. ' 
' → logprob: -3.8202943801879883
    3. 'a' → logprob: -3.9452943801879883
    4. '\n' → logprob: -4.945294380187988
    5. '
' → logprob: -5.445294380187988
    6. 'n' → logprob: -5.820294380187988
    7. 'def' → logprob: -6.070294380187988
    8. '' → logprob: -6.695294380187988
    9. 'result' → logprob: -6.695294380187988
    10. '  
' → logprob: -6.945294380187988

Token 37: '_n' (ID: 2170)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2925420105457306
    2. 's' → logprob: -2.042541980743408
    3. '_' → logprob: -2.542541980743408
    4. '=' → logprob: -3.167541980743408
    5. ' ' → logprob: -6.417541980743408
    6. '_s' → logprob: -7.542541980743408
    7. ' _' → logprob: -8.417542457580566
    8. '_=' → logprob: -8.667542457580566
    9. '.' → logprob: -9.542542457580566
    10. ')' → logprob: -9.667542457580566

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12253378331661224
    2. '=' → logprob: -2.2475337982177734
    3. 't' → logprob: -5.622533798217773
    4. '_' → logprob: -5.872533798217773
    5. '=int' → logprob: -6.997533798217773
    6. '```' → logprob: -8.122533798217773
    7. 's' → logprob: -8.372533798217773
    8. '=root' → logprob: -8.372533798217773
    9. '**' → logprob: -8.622533798217773
    10. '2' → logprob: -8.747533798217773

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3605171740055084
    2. 'int' → logprob: -1.360517144203186
    3. ' n' → logprob: -3.3605172634124756
    4. 'n' → logprob: -4.4855170249938965
    5. '(int' → logprob: -9.235517501831055
    6. '	int' → logprob: -10.610517501831055
    7. 'pow' → logprob: -11.610517501831055
    8. ' ' → logprob: -11.610517501831055
    9. 'round' → logprob: -12.235517501831055
    10. '[int' → logprob: -12.360517501831055

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006050262600183487
    2. '(' → logprob: -5.131050109863281
    3. '(s' → logprob: -10.131050109863281
    4. 'n' → logprob: -10.506050109863281
    5. '(round' → logprob: -10.881050109863281
    6. '(len' → logprob: -11.006050109863281
    7. '**' → logprob: -12.131050109863281
    8. '(pow' → logprob: -12.256050109863281
    9. '```' → logprob: -13.631050109863281
    10. ' (' → logprob: -13.756050109863281

Token 41: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0003386806638445705
    2. ' **' → logprob: -8.000338554382324
    3. '**
' → logprob: -14.250338554382324
    4. '*' → logprob: -14.250338554382324
    5. '**

' → logprob: -14.500338554382324
    6. ')**' → logprob: -14.625338554382324
    7. '**
' → logprob: -14.875338554382324
    8. ''s' → logprob: -15.875338554382324
    9. ')' → logprob: -16.00033950805664
    10. '```' → logprob: -16.56283950805664

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004486653197091073
    2. ' ' → logprob: -8.000448226928711
    3. '(' → logprob: -9.250448226928711
    4. '.' → logprob: -11.000448226928711
    5. ' (' → logprob: -15.625448226928711
    6. ' ' → logprob: -16.12544822692871
    7. '-' → logprob: -17.62544822692871
    8. ' .' → logprob: -17.62544822692871
    9. '{' → logprob: -17.87544822692871
    10. '   ' → logprob: -18.12544822692871

Token 43: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.625001907348633
    3. '5' → logprob: -15.125001907348633
    4. '1' → logprob: -15.250001907348633
    5. '-' → logprob: -16.000001907348633
    6. ' .' → logprob: -16.125001907348633
    7. '2' → logprob: -16.375001907348633
    8. '3' → logprob: -17.000001907348633
    9. ' ' → logprob: -17.000001907348633
    10. '6' → logprob: -17.375001907348633

Token 44: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.5577775128767826e-06
    2. '25' → logprob: -13.562505722045898
    3. '```' → logprob: -14.437505722045898
    4. '0' → logprob: -14.562505722045898
    5. '4' → logprob: -14.812505722045898
    6. '.' → logprob: -15.125005722045898
    7. '05' → logprob: -15.187505722045898
    8. '   ' → logprob: -15.312505722045898
    9. '499' → logprob: -16.1250057220459
    10. 'five' → logprob: -16.1250057220459

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047952806926332414
    2. ')+' → logprob: -8.125479698181152
    3. ' )' → logprob: -8.625479698181152
    4. '+' → logprob: -13.375479698181152
    5. '))' → logprob: -13.375479698181152
    6. '),' → logprob: -15.125479698181152
    7. ' +' → logprob: -15.750479698181152
    8. ')
' → logprob: -16.250478744506836
    9. '+)' → logprob: -16.250478744506836
    10. ')`' → logprob: -16.750478744506836

Token 46: 'Num' (ID: 5702)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8010392785072327
    2. '+' → logprob: -2.176039218902588
    3. 'for' → logprob: -2.551039218902588
    4. '*' → logprob: -2.926039218902588
    5. '#' → logprob: -2.926039218902588
    6. '\n' → logprob: -3.301039218902588
    7. ')' → logprob: -3.801039218902588
    8. ' 
' → logprob: -3.801039218902588
    9. '' → logprob: -3.926039218902588
    10. 'n' → logprob: -4.051039218902588

Token 47: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9843907356262207
    2. 'ber' → logprob: -0.9843907356262207
    3. 'er' → logprob: -2.3593907356262207
    4. 'bers' → logprob: -3.3593907356262207
    5. '_' → logprob: -4.109390735626221
    6. '_sequences' → logprob: -4.234390735626221
    7. '_tokens' → logprob: -4.484390735626221
    8. '_seq' → logprob: -4.609390735626221
    9. '=' → logprob: -4.734390735626221
    10. '_counts' → logprob: -4.984390735626221

Token 48: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7494747638702393
    2. '[' → logprob: -1.1244747638702393
    3. '[n' → logprob: -1.8744747638702393
    4. '[root' → logprob: -3.3744747638702393
    5. '[k' → logprob: -5.37447452545166
    6. '(n' → logprob: -5.62447452545166
    7. '0' → logprob: -6.87447452545166
    8. 'n' → logprob: -6.87447452545166
    9. '(' → logprob: -7.12447452545166
    10. '[min' → logprob: -7.24947452545166

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.044323477894067764
    2. '1' → logprob: -3.169323444366455
    3. ']' → logprob: -7.544323444366455
    4. 'i' → logprob: -8.044323921203613
    5. ' ' → logprob: -8.169323921203613
    6. '(' → logprob: -9.794323921203613
    7. '-' → logprob: -10.419323921203613
    8. 'n' → logprob: -10.669323921203613
    9. ' i' → logprob: -11.794323921203613
    10. 'False' → logprob: -11.794323921203613

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16103453934192657
    2. ']*(' → logprob: -1.9110345840454102
    3. ']*' → logprob: -7.16103458404541
    4. ' for' → logprob: -10.66103458404541
    5. 'for' → logprob: -12.28603458404541
    6. ' ]' → logprob: -12.53603458404541
    7. ']+' → logprob: -13.41103458404541
    8. '](' → logprob: -15.66103458404541
    9. ')]' → logprob: -15.78603458404541
    10. ',' → logprob: -15.91103458404541

Token 51: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22417232394218445
    2. '*' → logprob: -2.224172353744507
    3. '+' → logprob: -3.224172353744507
    4. ']' → logprob: -3.974172353744507
    5. ' *' → logprob: -4.474172115325928
    6. ' ' → logprob: -5.599172115325928
    7. ']*(' → logprob: -5.599172115325928
    8. '0' → logprob: -5.849172115325928
    9. ')' → logprob: -5.849172115325928
    10. ' for' → logprob: -5.974172115325928

Token 52: ' (' (ID: 350)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.30388790369033813
    2. '(' → logprob: -1.9288878440856934
    3. '(n' → logprob: -2.1788878440856934
    4. '((' → logprob: -5.928887844085693
    5. '(k' → logprob: -7.428887844085693
    6. ' (' → logprob: -8.803888320922852
    7. '(max' → logprob: -9.303888320922852
    8. '[root' → logprob: -10.678888320922852
    9. '/root' → logprob: -11.178888320922852
    10. 'root' → logprob: -11.678888320922852

Token 53: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.012907485477626324
    2. '(root' → logprob: -5.1379075050354
    3. '2' → logprob: -5.8879075050354
    4. ' root' → logprob: -6.1379075050354
    5. 'n' → logprob: -6.7629075050354
    6. '(' → logprob: -7.7629075050354
    7. '(n' → logprob: -8.637907028198242
    8. ' (' → logprob: -9.762907028198242
    9. ' ' → logprob: -10.262907028198242
    10. '[root' → logprob: -10.762907028198242

Token 54: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.500005722045898
    3. '+' → logprob: -13.375005722045898
    4. ' _' → logprob: -16.1250057220459
    5. '_i' → logprob: -17.5000057220459
    6. '+n' → logprob: -18.2500057220459
    7. '-_' → logprob: -18.3750057220459
    8. '_k' → logprob: -18.7500057220459
    9. ')_' → logprob: -18.8750057220459
    10. '_s' → logprob: -18.8750057220459

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20148934423923492
    2. ' +' → logprob: -1.7014893293380737
    3. ' ' → logprob: -9.576489448547363
    4. ' ' → logprob: -12.701489448547363
    5. ' plus' → logprob: -13.826489448547363
    6. ')' → logprob: -14.326489448547363
    7. '2' → logprob: -14.326489448547363
    8. '+
' → logprob: -15.576489448547363
    9. '＋' → logprob: -15.576489448547363
    10. '1' → logprob: -15.701489448547363

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03167356550693512
    2. '1' → logprob: -3.6566736698150635
    3. ' ' → logprob: -5.281673431396484
    4. '10' → logprob: -8.781673431396484
    5. '3' → logprob: -9.656673431396484
    6. '5' → logprob: -10.156673431396484
    7. '7' → logprob: -11.656673431396484
    8. '  ' → logprob: -13.031673431396484
    9. '11' → logprob: -13.656673431396484
    10. '12' → logprob: -14.094173431396484

Token 57: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14308993518352509
    2. '1' → logprob: -2.018090009689331
    3. ' ' → logprob: -8.14309024810791
    4. '10' → logprob: -9.39309024810791
    5. '5' → logprob: -11.01809024810791
    6. '3' → logprob: -11.26809024810791
    7. '7' → logprob: -12.01809024810791
    8. '11' → logprob: -13.95559024810791
    9. '  ' → logprob: -14.14309024810791
    10. '12' → logprob: -14.33059024810791

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037490393151529133
    2. ' )' → logprob: -8.125374794006348
    3. '+' → logprob: -9.625374794006348
    4. ')
' → logprob: -11.875374794006348
    5. ' +' → logprob: -14.125374794006348
    6. ')

' → logprob: -14.250374794006348
    7. '))' → logprob: -14.250374794006348
    8. '1' → logprob: -14.375374794006348
    9. ']' → logprob: -14.750374794006348
    10. '),' → logprob: -14.875374794006348

Token 59: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3924441337585449
    2. ' for' → logprob: -1.642444133758545
    3. ' ' → logprob: -3.392444133758545
    4. ')' → logprob: -3.392444133758545
    5. 'i' → logprob: -3.642444133758545
    6. '[' → logprob: -4.392444133758545
    7. '#' → logprob: -5.392444133758545
    8. 's' → logprob: -5.392444133758545
    9. '<|end|>' → logprob: -6.142444133758545
    10. ' 
' → logprob: -6.267444133758545

Token 60: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007480975706130266
    2. ' ' → logprob: -5.257481098175049
    3. 'i' → logprob: -6.257481098175049
    4. ' _' → logprob: -8.13248062133789
    5. '_' → logprob: -10.75748062133789
    6. ' ' → logprob: -12.63248062133789
    7. '  ' → logprob: -12.88248062133789
    8. '	i' → logprob: -12.88248062133789
    9. ' r' → logprob: -14.00748062133789
    10. '_i' → logprob: -14.13248062133789

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020748591050505638
    2. 'in' → logprob: -3.8957486152648926
    3. ' ' → logprob: -8.770748138427734
    4. '1' → logprob: -11.395748138427734
    5. '	in' → logprob: -12.520748138427734
    6. ',' → logprob: -12.645748138427734
    7. ' ' → logprob: -12.770748138427734
    8. 'n' → logprob: -12.895748138427734
    9. 'In' → logprob: -12.895748138427734
    10. 'range' → logprob: -13.020748138427734

Token 62: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022971272468567
    2. 'range' → logprob: -1.9102296829223633
    3. ' ' → logprob: -13.035229682922363
    4. '	range' → logprob: -13.160229682922363
    5. '(range' → logprob: -14.660229682922363
    6. ' xrange' → logprob: -15.285229682922363
    7. ' in' → logprob: -15.660229682922363
    8. ')' → logprob: -15.785229682922363
    9. '1' → logprob: -16.16023063659668
    10. '_' → logprob: -16.53523063659668

Token 63: '(root' (ID: 17410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004329341172706336
    2. '(root' → logprob: -7.750432968139648
    3. ' (' → logprob: -13.750432968139648
    4. '1' → logprob: -14.125432968139648
    5. '(
' → logprob: -15.625432968139648
    6. ' ' → logprob: -16.12543296813965
    7. '(len' → logprob: -16.25043296813965
    8. '[root' → logprob: -17.00043296813965
    9. 'root' → logprob: -17.12543296813965
    10. '(n' → logprob: -17.62543296813965

Token 64: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.093505099765025e-05
    2. '_' → logprob: -11.750020980834961
    3. '_j' → logprob: -12.750020980834961
    4. '_i' → logprob: -12.750020980834961
    5. '+' → logprob: -13.125020980834961
    6. '_k' → logprob: -13.375020980834961
    7. '_s' → logprob: -14.000020980834961
    8. ' _' → logprob: -14.750020980834961
    9. '-_' → logprob: -14.750020980834961
    10. 'n' → logprob: -15.250020980834961

Token 65: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5794503092765808
    2. ' +' → logprob: -0.8294503092765808
    3. ' ' → logprob: -6.7044501304626465
    4. '):' → logprob: -6.8294501304626465
    5. ',' → logprob: -7.5794501304626465
    6. '1' → logprob: -8.079450607299805
    7. ' ,' → logprob: -9.329450607299805
    8. ')' → logprob: -9.704450607299805
    9. '):
' → logprob: -9.954450607299805
    10. '   ' → logprob: -10.079450607299805

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6350404024124146
    2. ' ' → logprob: -1.1350404024124146
    3. '-' → logprob: -2.135040283203125
    4. ' -' → logprob: -3.510040283203125
    5. '1' → logprob: -7.635040283203125
    6. ' n' → logprob: -11.260040283203125
    7. 'n' → logprob: -11.510040283203125
    8. '```' → logprob: -11.885040283203125
    9. '	' → logprob: -12.635040283203125
    10. ')' → logprob: -12.760040283203125

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10612694919109344
    2. '-' → logprob: -2.3561270236968994
    3. ' ' → logprob: -5.35612678527832
    4. ' -' → logprob: -7.23112678527832
    5. '1' → logprob: -7.73112678527832
    6. '```' → logprob: -12.60612678527832
    7. '  ' → logprob: -13.10612678527832
    8. '	' → logprob: -13.29362678527832
    9. '   ' → logprob: -13.41862678527832
    10. '−' → logprob: -13.73112678527832

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004506900440901518
    2. ' ,' → logprob: -5.879507064819336
    3. '-' → logprob: -6.754507064819336
    4. ',-' → logprob: -8.379507064819336
    5. ' -' → logprob: -8.754507064819336
    6. '+' → logprob: -9.254507064819336
    7. '0' → logprob: -10.754507064819336
    8. ' ' → logprob: -11.379507064819336
    9. ' ,-' → logprob: -12.129507064819336
    10. '-,' → logprob: -12.254507064819336

Token 69: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12694533169269562
    2. ' -' → logprob: -2.1269452571868896
    3. ' ' → logprob: -11.376945495605469
    4. '	' → logprob: -12.876945495605469
    5. '0' → logprob: -14.251945495605469
    6. '```' → logprob: -14.251945495605469
    7. ',-' → logprob: -15.001945495605469
    8. '   ' → logprob: -15.126945495605469
    9. ')' → logprob: -15.376945495605469
    10. '  ' → logprob: -15.501945495605469

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12915463745594025
    2. '-' → logprob: -2.129154682159424
    3. ' -' → logprob: -6.129154682159424
    4. ' ' → logprob: -11.004154205322266
    5. ')' → logprob: -11.129154205322266
    6. ',-' → logprob: -12.379154205322266
    7. '```' → logprob: -12.629154205322266
    8. '-)' → logprob: -12.879154205322266
    9. '−' → logprob: -14.129154205322266
    10. ')-' → logprob: -14.254154205322266

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24260391294956207
    2. '-' → logprob: -1.6176038980484009
    3. ' ):' → logprob: -4.617603778839111
    4. ',' → logprob: -5.242603778839111
    5. ' -' → logprob: -6.742603778839111
    6. '):
' → logprob: -8.36760425567627
    7. '):-' → logprob: -8.49260425567627
    8. ',-' → logprob: -8.86760425567627
    9. ')' → logprob: -9.36760425567627
    10. ':' → logprob: -11.74260425567627

Token 72: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08857797086238861
    2. ' :' → logprob: -2.71357798576355
    3. ':' → logprob: -4.463577747344971
    4. '   ' → logprob: -6.088577747344971
    5. ')' → logprob: -7.088577747344971
    6. ' :
' → logprob: -7.088577747344971
    7. ' ' → logprob: -7.213577747344971
    8. '  ' → logprob: -7.338577747344971
    9. '    ' → logprob: -8.213578224182129
    10. '<|end|>' → logprob: -8.463578224182129

Token 73: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' (adapté à ' Num') → logprob: -0.3599756062030792
    2. ' Num' → logprob: -1.3599755764007568
    3. 'j' → logprob: -4.359975814819336
    4. '(' → logprob: -5.234975814819336
    5. ' j' → logprob: -5.234975814819336
    6. 'n' → logprob: -5.484975814819336
    7. ' if' → logprob: -5.734975814819336
    8. ' (' → logprob: -5.859975814819336
    9. 'num' → logprob: -6.359975814819336
    10. 'k' → logprob: -6.609975814819336

Token 74: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.007638105191290379
    2. '[' → logprob: -4.882637977600098
    3. '[i' → logprob: -11.757637977600098
    4. ' [' → logprob: -12.632637977600098
    5. '```' → logprob: -12.632637977600098
    6. '[:]' → logprob: -13.007637977600098
    7. '[js' → logprob: -13.257637977600098
    8. '[n' → logprob: -13.507637977600098
    9. '[
' → logprob: -13.882637977600098
    10. '[k' → logprob: -14.132637977600098

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004251846577972174
    2. ']=' → logprob: -5.879251956939697
    3. '=' → logprob: -7.129251956939697
    4. ')' → logprob: -7.629251956939697
    5. ' ]' → logprob: -9.379251480102539
    6. ' =' → logprob: -9.754251480102539
    7. ')=' → logprob: -11.879251480102539
    8. '[' → logprob: -13.129251480102539
    9. ']+=' → logprob: -13.754251480102539
    10. ' ' → logprob: -13.879251480102539

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20148886740207672
    2. ' =' → logprob: -1.7014888525009155
    3. ' +=' → logprob: -10.326488494873047
    4. '+=' → logprob: -10.451488494873047
    5. '=int' → logprob: -12.451488494873047
    6. ')' → logprob: -13.201488494873047
    7. ' ' → logprob: -13.326488494873047
    8. '=

' → logprob: -14.076488494873047
    9. ')=' → logprob: -14.201488494873047
    10. '+' → logprob: -14.701488494873047

Token 77: ' j' (ID: 441)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1913577765226364
    2. '(n' → logprob: -2.0663578510284424
    3. ' (' → logprob: -4.316357612609863
    4. ' n' → logprob: -4.441357612609863
    5. 'k' → logprob: -4.941357612609863
    6. '(' → logprob: -5.066357612609863
    7. '(k' → logprob: -5.816357612609863
    8. 'min' → logprob: -6.441357612609863
    9. 'mod' → logprob: -6.941357612609863
    10. '((' → logprob: -7.066357612609863

Token 78: ' ' (ID: 220)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38289549946784973
    2. ' *' → logprob: -1.8828954696655273
    3. '+' → logprob: -2.8828954696655273
    4. '<|end|>' → logprob: -3.2578954696655273
    5. '*j' → logprob: -3.3828954696655273
    6. '**' → logprob: -3.6328954696655273
    7. ' +' → logprob: -5.632895469665527
    8. '-' → logprob: -6.507895469665527
    9. '```' → logprob: -6.632895469665527
    10. '*(' → logprob: -6.882895469665527

Token 79: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18861693143844604
    2. '*j' → logprob: -2.563616991043091
    3. '**' → logprob: -3.313616991043091
    4. '+' → logprob: -3.438616991043091
    5. ' *' → logprob: -3.938616991043091
    6. '<|end|>' → logprob: -6.188616752624512
    7. '-' → logprob: -7.438616752624512
    8. '*(' → logprob: -7.438616752624512
    9. 'j' → logprob: -7.438616752624512
    10. '*k' → logprob: -7.438616752624512

Token 80: ' bon' (ID: 4846)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7064014077186584
    2. ' +' → logprob: -2.0814013481140137
    3. ' *' → logprob: -2.2064013481140137
    4. '<|end|>' → logprob: -2.4564013481140137
    5. '*' → logprob: -2.5814013481140137
    6. ' ' → logprob: -3.3314013481140137
    7. '-' → logprob: -3.5814013481140137
    8. '**' → logprob: -3.9564013481140137
    9. '<|end|>' → logprob: -4.956401348114014
    10. '
' → logprob: -5.831401348114014

Token 82: ' là' (ID: 8052)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.1662700176239014
    2. ' j' → logprob: -1.2912700176239014
    3. '*' → logprob: -1.9162700176239014
    4. 'j' → logprob: -2.6662700176239014
    5. ' ' → logprob: -2.6662700176239014
    6. '*j' → logprob: -3.2912700176239014
    7. 'n' → logprob: -4.2912702560424805
    8. ' n' → logprob: -4.4162702560424805
    9. ' mod' → logprob: -4.6662702560424805
    10. ')' → logprob: -4.6662702560424805

Token 83: ' on' (ID: 402)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.991719663143158
    2. '*' → logprob: -1.6167197227478027
    3. '+' → logprob: -1.6167197227478027
    4. ' +' → logprob: -1.6167197227478027
    5. ' ' → logprob: -4.741719722747803
    6. '**' → logprob: -5.366719722747803
    7. ' -' → logprob: -5.616719722747803
    8. '-' → logprob: -5.866719722747803
    9. '*j' → logprob: -5.866719722747803
    10. '%' → logprob: -6.241719722747803

Token 84: ' fait' (ID: 7473)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.47053062915802
    2. '<|end|>' → logprob: -1.97053062915802
    3. ' a' → logprob: -2.5955305099487305
    4. ' ' → logprob: -2.7205305099487305
    5. ' peut' → logprob: -2.7205305099487305
    6. '+' → logprob: -2.7205305099487305
    7. ' j' → logprob: -2.8455305099487305
    8. 'a' → logprob: -3.0955305099487305
    9. 'j' → logprob: -3.4705305099487305
    10. ' *' → logprob: -3.8455305099487305

Token 85: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7239218950271606
    2. '<|end|>' → logprob: -1.5989218950271606
    3. 'un' → logprob: -2.848921775817871
    4. 'quoi' → logprob: -2.973921775817871
    5. ' quoi' → logprob: -3.723921775817871
    6. 'something' → logprob: -3.723921775817871
    7. 'j' → logprob: -4.098921775817871
    8. 'le' → logprob: -4.348921775817871
    9. ' quelque' → logprob: -4.473921775817871
    10. 'une' → logprob: -4.598921775817871

Token 86: ' assign' (ID: 14975)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.6718183755874634
    2. '+' → logprob: -2.171818256378174
    3. ' ' → logprob: -2.296818256378174
    4. ' peu' → logprob: -2.671818256378174
    5. '`' → logprob: -2.921818256378174
    6. 's' → logprob: -3.171818256378174
    7. 'plus' → logprob: -3.171818256378174
    8. '   ' → logprob: -3.421818256378174
    9. ' plus' → logprob: -3.671818256378174
    10. '*' → logprob: -3.671818256378174

Token 87: 'ement' (ID: 962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.04653799533844
    2. ' ' → logprob: -2.0465378761291504
    3. 'ment' → logprob: -2.0465378761291504
    4. 'er' → logprob: -2.5465378761291504
    5. 'm' → logprob: -2.5465378761291504
    6. '=' → logprob: -2.5465378761291504
    7. '*' → logprob: -3.0465378761291504
    8. '+' → logprob: -4.04653787612915
    9. 'ement' → logprob: -4.17153787612915
    10. '#' → logprob: -4.67153787612915

Token 88: ' direct' (ID: 2823)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7466826438903809
    2. '<|end|>' → logprob: -1.7466826438903809
    3. '*' → logprob: -2.246682643890381
    4. ' ' → logprob: -2.746682643890381
    5. '\n' → logprob: -2.746682643890381
    6. ')' → logprob: -3.246682643890381
    7. '#' → logprob: -3.746682643890381
    8. '   ' → logprob: -4.621682643890381
    9. '.' → logprob: -4.996682643890381
    10. ',' → logprob: -4.996682643890381

Token 89: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6006354093551636
    2. '<|end|>' → logprob: -1.6006354093551636
    3. '+' → logprob: -2.600635528564453
    4. '\n' → logprob: -3.350635528564453
    5. '*' → logprob: -3.350635528564453
    6. '\' → logprob: -3.600635528564453
    7. '[' → logprob: -4.350635528564453
    8. '#' → logprob: -4.850635528564453
    9. '   ' → logprob: -5.100635528564453
    10. ')' → logprob: -5.225635528564453

Token 90: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' Num' (ID: 33827)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1431627869606018
    2. '[j' → logprob: -2.018162727355957
    3. '[]' → logprob: -9.143162727355957
    4. ']' → logprob: -9.768162727355957
    5. '[:]' → logprob: -10.018162727355957
    6. '[
' → logprob: -10.268162727355957
    7. '[...]' → logprob: -10.268162727355957
    8. '[i' → logprob: -10.393162727355957
    9. '```' → logprob: -10.643162727355957
    10. '[n' → logprob: -10.893162727355957

Token 93: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1321214884519577
    2. '(j' → logprob: -2.2571215629577637
    3. '(root' → logprob: -4.632121562957764
    4. '(n' → logprob: -5.007121562957764
    5. '((' → logprob: -6.382121562957764
    6. '(k' → logprob: -8.132121086120605
    7. '()' → logprob: -8.257121086120605
    8. '(len' → logprob: -9.632121086120605
    9. '(-' → logprob: -10.257121086120605
    10. '(num' → logprob: -10.257121086120605

Token 94: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.01608457788825035
    2. ' //' → logprob: -4.141084671020508
    3. '/j' → logprob: -11.266084671020508
    4. '#' → logprob: -11.391084671020508
    5. 'j' → logprob: -11.891084671020508
    6. ' ' → logprob: -12.391084671020508
    7. '/' → logprob: -12.391084671020508
    8. '//
' → logprob: -12.641084671020508
    9. ' ' → logprob: -13.016084671020508
    10. ' //
' → logprob: -13.516084671020508

Token 95: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013366704806685448
    2. ' j' → logprob: -6.626336574554443
    3. '(' → logprob: -12.126337051391602
    4. '(j' → logprob: -12.626337051391602
    5. '	j' → logprob: -14.376337051391602
    6. ' (' → logprob: -14.626337051391602
    7. ' ' → logprob: -14.626337051391602
    8. '   ' → logprob: -15.126337051391602
    9. ')' → logprob: -16.7513370513916
    10. 'Num' → logprob: -16.7513370513916

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.953082341467962e-05
    2. ' )' → logprob: -10.375039100646973
    3. '))' → logprob: -12.500039100646973
    4. ')`' → logprob: -13.500039100646973
    5. ')
' → logprob: -13.625039100646973
    6. '`)' → logprob: -14.875039100646973
    7. '   ' → logprob: -15.250039100646973
    8. ' ' → logprob: -15.625039100646973
    9. ')

' → logprob: -16.12504005432129
    10. '')' → logprob: -16.37504005432129

Token 97: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' ajoute' (ID: 91611)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22534525394439697
    2. '<|end|>' → logprob: -1.850345253944397
    3. ' 
' → logprob: -4.600345134735107
    4. 'n' → logprob: -5.100345134735107
    5. '<|end|>' → logprob: -5.100345134735107
    6. ')' → logprob: -5.350345134735107
    7. '(n' → logprob: -5.850345134735107
    8. '
' → logprob: -5.975345134735107
    9. '(' → logprob: -6.600345134735107
    10. ' n' → logprob: -6.725345134735107

Token 101: ' ne' (ID: 453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.538918673992157
    2. '<|end|>' → logprob: -1.7889187335968018
    3. ' un' → logprob: -3.1639187335968018
    4. 'n' → logprob: -3.2889187335968018
    5. ' une' → logprob: -3.6639187335968018
    6. 's' → logprob: -3.6639187335968018
    7. 'r' → logprob: -4.288918495178223
    8. ' a' → logprob: -4.788918495178223
    9. ' ' → logprob: -5.038918495178223
    10. ' des' → logprob: -5.038918495178223

Token 102: ' sait' (ID: 52101)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.5035319328308105
    2. ' pas' → logprob: -2.0035319328308105
    3. 'pas' → logprob: -3.3785319328308105
    4. ' append' → logprob: -3.5035319328308105
    5. '_append' → logprob: -3.6285319328308105
    6. ' a' → logprob: -3.7535319328308105
    7. 'pe' → logprob: -4.1285319328308105
    8. 'a' → logprob: -4.1285319328308105
    9. 'append' → logprob: -4.1285319328308105
    10. ' peux' → logprob: -4.3785319328308105

Token 103: ' quoi' (ID: 33399)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.1843351125717163
    2. ' pas' → logprob: -1.8093351125717163
    3. ' rien' → logprob: -6.434335231781006
    4. 'r' → logprob: -7.059335231781006
    5. 'quoi' → logprob: -7.309335231781006
    6. ' quoi' → logprob: -7.559335231781006
    7. '_pas' → logprob: -8.059334754943848
    8. ' jamais' → logprob: -8.184334754943848
    9. '```' → logprob: -9.059334754943848
    10. 'p' → logprob: -9.684334754943848

Token 104: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' la' (ID: 557)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -1.1130855083465576
    2. ' la' → logprob: -1.2380855083465576
    3. ' Num' → logprob: -2.1130855083465576
    4. 'la' → logprob: -2.1130855083465576
    5. ' ' → logprob: -2.7380855083465576
    6. 'l' → logprob: -3.3630855083465576
    7. '`' → logprob: -4.113085746765137
    8. ' ' → logprob: -5.488085746765137
    9. '[' → logprob: -6.113085746765137
    10. '[]' → logprob: -6.488085746765137

Token 106: ' suite' (ID: 13800)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.5695632100105286
    2. ' liste' → logprob: -1.4445631504058838
    3. 'liste' → logprob: -2.069563150405884
    4. 'm' → logprob: -2.944563150405884
    5. 'list' → logprob: -4.819563388824463
    6. ' list' → logprob: -5.569563388824463
    7. 'Liste' → logprob: -6.319563388824463
    8. 'Num' → logprob: -6.569563388824463
    9. '```' → logprob: -7.444563388824463
    10. 'Même' → logprob: -7.694563388824463

Token 107: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' che' (ID: 1378)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: 'lou' (ID: 133128)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.4468237161636353
    2. '#' → logprob: -1.6968237161636353
    3. '```' → logprob: -1.6968237161636353
    4. 'vron' → logprob: -2.0718235969543457
    5. 'r' → logprob: -2.9468235969543457
    6. '<|end|>' → logprob: -3.1968235969543457
    7. 'min' → logprob: -3.5718235969543457
    8. 'rop' → logprob: -4.196823596954346
    9. 'val' → logprob: -4.696823596954346
    10. 'rof' → logprob: -4.696823596954346

Token 110: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' OK' (ID: 11339)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8848824501037598
    2. '<|end|>' → logprob: -1.0098824501037598
    3. ')' → logprob: -2.2598824501037598
    4. 'n' → logprob: -3.7598824501037598
    5. '[]' → logprob: -4.50988245010376
    6. '<|end|>' → logprob: -4.75988245010376
    7. '0' → logprob: -4.88488245010376
    8. '```' → logprob: -4.88488245010376
    9. 'None' → logprob: -5.13488245010376
    10. '...' → logprob: -5.25988245010376

Token 112: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: 'ln' (ID: 2943)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7886286973953247
    2. 'um' → logprob: -1.1636286973953247
    3. '=' → logprob: -2.163628578186035
    4. 'g' → logprob: -2.663628578186035
    5. '_num' → logprob: -4.288628578186035
    6. '=len' → logprob: -4.538628578186035
    7. 'en' → logprob: -4.913628578186035
    8. 'n' → logprob: -6.413628578186035
    9. 'Num' → logprob: -6.413628578186035
    10. '_' → logprob: -6.413628578186035

Token 115: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7270694375038147
    2. ' len' → logprob: -1.60206937789917
    3. ' root' → logprob: -2.35206937789917
    4. 'root' → logprob: -2.47706937789917
    5. '[root' → logprob: -3.10206937789917
    6. '(root' → logprob: -3.72706937789917
    7. '[' → logprob: -3.85206937789917
    8. ' [' → logprob: -3.85206937789917
    9. '[len' → logprob: -4.97706937789917
    10. '(len' → logprob: -5.10206937789917

Token 116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.35706390615087e-05
    2. '(num' → logprob: -11.500033378601074
    3. '(root' → logprob: -12.250033378601074
    4. ' (' → logprob: -12.375033378601074
    5. 'Num' → logprob: -12.500033378601074
    6. '(Number' → logprob: -12.750033378601074
    7. '(
' → logprob: -13.375033378601074
    8. '(N' → logprob: -13.375033378601074
    9. '(NUM' → logprob: -14.000033378601074
    10. '(nums' → logprob: -14.000033378601074

Token 117: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0008077251841314137
    2. ' Num' → logprob: -7.125807762145996
    3. 'Nums' → logprob: -13.000807762145996
    4. '(' → logprob: -15.125807762145996
    5. '_Num' → logprob: -15.250807762145996
    6. 'num' → logprob: -15.500807762145996
    7. ' ' → logprob: -16.12580680847168
    8. ')' → logprob: -17.00080680847168
    9. '	' → logprob: -17.12580680847168
    10. 'Nu' → logprob: -17.37580680847168

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015705463010817766
    2. ' )' → logprob: -8.875157356262207
    3. ')
' → logprob: -11.250157356262207
    4. ')-' → logprob: -13.625157356262207
    5. '))' → logprob: -14.500157356262207
    6. '[' → logprob: -14.750157356262207
    7. '）' → logprob: -15.125157356262207
    8. ')#' → logprob: -15.250157356262207
    9. ')`' → logprob: -15.375157356262207
    10. ')

' → logprob: -15.625157356262207

Token 119: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5176243185997009
    2. 'dp' → logprob: -1.1426243782043457
    3. 'f' → logprob: -3.5176243782043457
    4. 'res' → logprob: -4.642624378204346
    5. 'sum' → logprob: -4.892624378204346
    6. 'i' → logprob: -5.267624378204346
    7. 'F' → logprob: -5.392624378204346
    8. 'DP' → logprob: -5.392624378204346
    9. 's' → logprob: -5.892624378204346
    10. 'result' → logprob: -5.892624378204346

Token 120: ' kk' (ID: 76595)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013635300099849701
    2. ' j' → logprob: -4.638635158538818
    3. ' _' → logprob: -6.513635158538818
    4. ' ' → logprob: -6.638635158538818
    5. 'i' → logprob: -7.138635158538818
    6. '_' → logprob: -9.013635635375977
    7. ' ' → logprob: -10.138635635375977
    8. ' l' → logprob: -10.388635635375977
    9. ' k' → logprob: -10.638635635375977
    10. 'j' → logprob: -10.638635635375977

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22596482932567596
    2. 'in' → logprob: -1.6009647846221924
    3. ' ' → logprob: -7.8509650230407715
    4. '1' → logprob: -9.975964546203613
    5. 'n' → logprob: -10.850964546203613
    6. ' ' → logprob: -10.975964546203613
    7. 'range' → logprob: -11.725964546203613
    8. ',' → logprob: -11.850964546203613
    9. '  ' → logprob: -11.850964546203613
    10. '	in' → logprob: -11.975964546203613

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018154388293623924
    2. ' range' → logprob: -4.018154621124268
    3. 'Num' → logprob: -13.26815414428711
    4. '(range' → logprob: -14.14315414428711
    5. ' ' → logprob: -14.64315414428711
    6. 'Range' → logprob: -15.01815414428711
    7. '	range' → logprob: -15.01815414428711
    8. '[' → logprob: -15.01815414428711
    9. '   ' → logprob: -15.39315414428711
    10. 'num' → logprob: -16.01815414428711

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12740910053253174
    2. '(k' → logprob: -2.127408981323242
    3. '(l' → logprob: -8.252408981323242
    4. '(root' → logprob: -8.627408981323242
    5. '(len' → logprob: -11.127408981323242
    6. '(n' → logprob: -11.752408981323242
    7. 'ln' → logprob: -12.002408981323242
    8. '1' → logprob: -12.377408981323242
    9. 'k' → logprob: -13.127408981323242
    10. '(kn' → logprob: -13.252408981323242

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43224960565567017
    2. 'ln' → logprob: -1.5572495460510254
    3. 'k' → logprob: -2.3072495460510254
    4. '2' → logprob: -3.3072495460510254
    5. 'root' → logprob: -5.932249546051025
    6. 'len' → logprob: -7.432249546051025
    7. '0' → logprob: -8.307250022888184
    8. '(' → logprob: -8.557250022888184
    9. ' ' → logprob: -9.432250022888184
    10. '(k' → logprob: -9.932250022888184

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005941121373325586
    2. ' ,' → logprob: -5.130940914154053
    3. '+' → logprob: -12.630941390991211
    4. 'ln' → logprob: -12.755941390991211
    5. ',len' → logprob: -13.630941390991211
    6. ',n' → logprob: -13.755941390991211
    7. '   ' → logprob: -14.130941390991211
    8. ' ' → logprob: -14.505941390991211
    9. ' +' → logprob: -14.505941390991211
    10. ',k' → logprob: -15.005941390991211

Token 126: ' ln' (ID: 68859)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.09143245220184326
    2. 'k' → logprob: -2.466432571411133
    3. 'root' → logprob: -6.591432571411133
    4. 'len' → logprob: -7.716432571411133
    5. ' ln' → logprob: -8.216432571411133
    6. ' k' → logprob: -8.341432571411133
    7. 'lk' → logprob: -9.716432571411133
    8. 'kn' → logprob: -9.966432571411133
    9. 'l' → logprob: -10.841432571411133
    10. ' root' → logprob: -11.716432571411133

Token 127: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.474229097366333
    2. '):' → logprob: -0.974229097366333
    3. ' ):' → logprob: -9.599228858947754
    4. ' ):
' → logprob: -10.224228858947754
    5. ')' → logprob: -10.474228858947754
    6. '-' → logprob: -11.724228858947754
    7. ':' → logprob: -12.599228858947754
    8. '):
' → logprob: -13.224228858947754
    9. '+' → logprob: -13.224228858947754
    10. '):

' → logprob: -13.349228858947754

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016107931733131409
    2. ' Num' → logprob: -7.12661075592041
    3. 'Num' → logprob: -8.87661075592041
    4. '    
' → logprob: -9.12661075592041
    5. '   ' → logprob: -9.12661075592041
    6. '    ' → logprob: -9.12661075592041
    7. '       ' → logprob: -9.50161075592041
    8. ' if' → logprob: -10.37661075592041
    9. ' for' → logprob: -10.37661075592041
    10. ' num' → logprob: -10.50161075592041

Token 129: ' #' (ID: 1069)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.13571222126483917
    2. '   ' → logprob: -3.385712146759033
    3. 'for' → logprob: -3.385712146759033
    4. 'if' → logprob: -3.760712146759033
    5. 'num' → logprob: -4.260712146759033
    6. 'val' → logprob: -5.260712146759033
    7. ' Num' → logprob: -5.385712146759033
    8. 'pass' → logprob: -5.885712146759033
    9. ' for' → logprob: -6.135712146759033
    10. 'x' → logprob: -6.635712146759033

Token 130: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6340269446372986
    2. 'for' → logprob: -1.3840270042419434
    3. ' if' → logprob: -3.5090270042419434
    4. '   ' → logprob: -3.5090270042419434
    5. 'if' → logprob: -3.6340270042419434
    6. ' Num' → logprob: -3.6340270042419434
    7. ' i' → logprob: -4.009027004241943
    8. ' val' → logprob: -4.259027004241943
    9. 'Num' → logprob: -4.384027004241943
    10. 'i' → logprob: -4.759027004241943

Token 131: ' ajuste' (ID: 94049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9769060015678406
    2. '   ' → logprob: -1.1019060611724854
    3. 'for' → logprob: -2.2269060611724854
    4. ' =' → logprob: -3.2269060611724854
    5. '=' → logprob: -3.3519060611724854
    6. ' ' → logprob: -3.8519060611724854
    7. ' if' → logprob: -3.8519060611724854
    8. ' s' → logprob: -3.9769060611724854
    9. ' Num' → logprob: -3.9769060611724854
    10. 'if' → logprob: -4.726905822753906

Token 132: ' la' (ID: 557)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.8240610957145691
    2. '   ' → logprob: -0.9490610957145691
    3. ' Num' → logprob: -2.199061155319214
    4. ' for' → logprob: -3.324061155319214
    5. 'for' → logprob: -4.949060916900635
    6. '  ' → logprob: -5.199060916900635
    7. '(' → logprob: -5.824060916900635
    8. '       ' → logprob: -6.574060916900635
    9. ' ' → logprob: -6.824060916900635
    10. '_num' → logprob: -6.949060916900635

Token 133: ' "' (ID: 392)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.011655994690954685
    2. ' Num' → logprob: -4.761655807495117
    3. 'num' → logprob: -6.636655807495117
    4. 'if' → logprob: -7.261655807495117
    5. ' ' → logprob: -8.261655807495117
    6. '   ' → logprob: -8.386655807495117
    7. 'for' → logprob: -8.511655807495117
    8. ' if' → logprob: -9.261655807495117
    9. '  ' → logprob: -10.011655807495117
    10. 'value' → logprob: -10.136655807495117

Token 134: 'queue' (ID: 9409)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.004073770716786385
    2. ' Num' → logprob: -6.004073619842529
    3. 'num' → logprob: -7.004073619842529
    4. 'for' → logprob: -7.879073619842529
    5. ' ' → logprob: -9.379074096679688
    6. 'value' → logprob: -9.754074096679688
    7. ' for' → logprob: -10.254074096679688
    8. 'val' → logprob: -10.629074096679688
    9. 'if' → logprob: -11.129074096679688
    10. 'Val' → logprob: -11.754074096679688

Token 135: '"' (ID: 1)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5276381969451904
    2. ')' → logprob: -1.9026381969451904
    3. '   ' → logprob: -2.1526381969451904
    4. ',' → logprob: -2.6526381969451904
    5. ' ,' → logprob: -2.7776381969451904
    6. ' :' → logprob: -2.7776381969451904
    7. '[' → logprob: -2.7776381969451904
    8. 'Num' → logprob: -2.9026381969451904
    9. ' de' → logprob: -3.2776381969451904
    10. ']' → logprob: -3.6526381969451904

Token 136: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06669338047504425
    2. ':' → logprob: -3.9416933059692383
    3. ' =' → logprob: -4.191693305969238
    4. ' for' → logprob: -5.316693305969238
    5. ' :' → logprob: -5.691693305969238
    6. ' Num' → logprob: -5.816693305969238
    7. 'Num' → logprob: -5.816693305969238
    8. '=' → logprob: -6.066693305969238
    9. 'for' → logprob: -6.066693305969238
    10. ',' → logprob: -6.441693305969238

Token 137: ' sou' (ID: 4069)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20270156860351562
    2. 'for' → logprob: -2.0777015686035156
    3. ' range' → logprob: -3.0777015686035156
    4. 'Num' → logprob: -5.452701568603516
    5. ' for' → logprob: -6.077701568603516
    6. '   ' → logprob: -6.452701568603516
    7. 'lambda' → logprob: -7.202701568603516
    8. 'fonction' → logprob: -7.327701568603516
    9. '```' → logprob: -7.702701568603516
    10. 'ln' → logprob: -8.202701568603516

Token 138: 'str' (ID: 689)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.6001399159431458
    2. 'tr' → logprob: -2.100139856338501
    3. 'str' → logprob: -2.100139856338501
    4. 'tra' → logprob: -2.225139856338501
    5. '1' → logprob: -3.350139856338501
    6. '```' → logprob: -4.47514009475708
    7. 'straction' → logprob: -4.47514009475708
    8. 'tract' → logprob: -4.60014009475708
    9. 'plement' → logprob: -5.72514009475708
    10. 'vant' → logprob: -5.72514009475708

Token 139: 'ayant' (ID: 130896)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tract' → logprob: -1.088368535041809
    2. '   ' → logprob: -1.588368535041809
    3. 'act' → logprob: -2.0883684158325195
    4. 'tr' → logprob: -2.8383684158325195
    5. '```' → logprob: -2.8383684158325195
    6. '(' → logprob: -2.9633684158325195
    7. 'tra' → logprob: -3.4633684158325195
    8. 'ct' → logprob: -3.8383684158325195
    9. 'stract' → logprob: -3.8383684158325195
    10. 'ant' → logprob: -4.3383684158325195

Token 140: ' le' (ID: 505)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.2192768156528473
    2. ' Num' → logprob: -1.969276785850525
    3. '1' → logprob: -3.2192769050598145
    4. '   ' → logprob: -5.2192769050598145
    5. ')' → logprob: -5.9692769050598145
    6. ',' → logprob: -6.3442769050598145
    7. 'kk' → logprob: -6.3442769050598145
    8. ' ' → logprob: -6.4692769050598145
    9. ' kk' → logprob: -6.8442769050598145
    10. '(' → logprob: -7.3442769050598145

Token 141: ' précédent' (ID: 128462)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.02443663217127323
    2. ' Num' → logprob: -4.3994364738464355
    3. 'kk' → logprob: -4.7744364738464355
    4. '1' → logprob: -6.3994364738464355
    5. ' kk' → logprob: -7.8994364738464355
    6. 'num' → logprob: -8.024436950683594
    7. 'ln' → logprob: -8.524436950683594
    8. '(' → logprob: -8.774436950683594
    9. '   ' → logprob: -9.024436950683594
    10. 'k' → logprob: -9.024436950683594

Token 142: ' à' (ID: 1221)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.7803529500961304
    2. '   ' → logprob: -0.9053529500961304
    3. ':' → logprob: -3.03035306930542
    4. ' Num' → logprob: -3.28035306930542
    5. ',' → logprob: -3.40535306930542
    6. '=' → logprob: -5.90535306930542
    7. ' =' → logprob: -5.90535306930542
    8. ' :' → logprob: -6.28035306930542
    9. '_num' → logprob: -6.40535306930542
    10. ' for' → logprob: -7.03035306930542

Token 143: ' chaque' (ID: 21194)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.01788441091775894
    2. ' Num' → logprob: -4.767884254455566
    3. 'ln' → logprob: -5.142884254455566
    4. '   ' → logprob: -7.142884254455566
    5. 'num' → logprob: -7.267884254455566
    6. 'la' → logprob: -7.392884254455566
    7. 'l' → logprob: -7.642884254455566
    8. ' ' → logprob: -8.142884254455566
    9. 'le' → logprob: -8.767884254455566
    10. '  ' → logprob: -10.017884254455566

Token 144: ' fois' (ID: 14697)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kk' → logprob: -1.1552966833114624
    2. 'element' → logprob: -1.4052966833114624
    3. '[' → logprob: -1.7802966833114624
    4. 'Num' → logprob: -2.405296802520752
    5. 'élé' → logprob: -2.530296802520752
    6. ']' → logprob: -4.030296802520752
    7. ' kk' → logprob: -4.405296802520752
    8. 'elem' → logprob: -4.530296802520752
    9. 'num' → logprob: -4.655296802520752
    10. ' élément' → logprob: -4.780296802520752

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004926685243844986
    2. 'Num' → logprob: -6.004926681518555
    3. ' Num' → logprob: -6.129926681518555
    4. ',' → logprob: -9.379926681518555
    5. '       ' → logprob: -9.629926681518555
    6. ':' → logprob: -10.629926681518555
    7. '   ' → logprob: -10.879926681518555
    8. '_num' → logprob: -10.879926681518555
    9. '```' → logprob: -11.504926681518555
    10. 'num' → logprob: -11.629926681518555

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003960736095905304
    2. ' Num' → logprob: -6.378960609436035
    3. 'Num' → logprob: -7.128960609436035
    4. ',' → logprob: -8.253960609436035
    5. ' for' → logprob: -8.378960609436035
    6. '       ' → logprob: -8.878960609436035
    7. '    ' → logprob: -8.878960609436035
    8. '<|end|>' → logprob: -9.003960609436035
    9. 'num' → logprob: -9.503960609436035
    10. '  ' → logprob: -9.503960609436035

Token 147: ' Num' (ID: 33827)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3105177879333496
    2. 'Num' (adapté à ' Num') → logprob: -1.4355177879333496
    3. ' Num' → logprob: -3.5605177879333496
    4. 'num' → logprob: -8.685518264770508
    5. '	' → logprob: -9.935518264770508
    6. '   ' → logprob: -10.060518264770508
    7. '_num' → logprob: -10.185518264770508
    8. ' num' → logprob: -10.310518264770508
    9. ' for' → logprob: -10.560518264770508
    10. '    ' → logprob: -10.560518264770508

Token 148: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '[j' → logprob: -13.000007629394531
    3. '```' → logprob: -14.125007629394531
    4. '[k' → logprob: -14.250007629394531
    5. '[num' → logprob: -14.375007629394531
    6. '\[' → logprob: -14.750007629394531
    7. ' [' → logprob: -15.000007629394531
    8. '<|end|>' → logprob: -15.125007629394531
    9. '<|end|>' → logprob: -15.500007629394531
    10. '[js' → logprob: -15.875007629394531

Token 149: 'kk' (ID: 8701)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09220490604639053
    2. 'kk' → logprob: -2.4672048091888428
    3. '(' → logprob: -5.842205047607422
    4. ' kk' → logprob: -8.592205047607422
    5. ']' → logprob: -8.967205047607422
    6. ' ' → logprob: -11.592205047607422
    7. 'ln' → logprob: -12.092205047607422
    8. ' (' → logprob: -12.217205047607422
    9. '(k' → logprob: -12.342205047607422
    10. '-' → logprob: -12.842205047607422

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014036978245712817
    2. ' ]' → logprob: -10.000140190124512
    3. '-' → logprob: -10.125140190124512
    4. ']-' → logprob: -10.500140190124512
    5. ']=' → logprob: -10.625140190124512
    6. ' -' → logprob: -13.875140190124512
    7. ']+=' → logprob: -14.750140190124512
    8. '`]' → logprob: -15.250140190124512
    9. ']]' → logprob: -15.375140190124512
    10. ']
' → logprob: -15.375140190124512

Token 151: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.13178949058055878
    2. '-=' → logprob: -2.256789445877075
    3. '=' → logprob: -4.631789684295654
    4. '-' → logprob: -5.381789684295654
    5. ' -' → logprob: -5.506789684295654
    6. '+=' → logprob: -8.881789207458496
    7. ' =' → logprob: -9.256789207458496
    8. ' ' → logprob: -9.881789207458496
    9. ' +=' → logprob: -10.381789207458496
    10. ']' → logprob: -10.881789207458496

Token 152: ' Num' (ID: 33827)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2269889861345291
    2. 'Num' → logprob: -1.6019890308380127
    3. ' Num' → logprob: -7.226988792419434
    4. ' (' → logprob: -7.226988792419434
    5. '((' → logprob: -10.601988792419434
    6. 'num' → logprob: -10.976988792419434
    7. '(num' → logprob: -11.226988792419434
    8. 'Nums' → logprob: -11.226988792419434
    9. '(int' → logprob: -12.101988792419434
    10. ' ' → logprob: -12.101988792419434

Token 153: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.8126592193730175e-05
    2. '[' → logprob: -10.2500581741333
    3. '`' → logprob: -11.7500581741333
    4. '```' → logprob: -12.3750581741333
    5. '][-' → logprob: -13.0000581741333
    6. '   ' → logprob: -13.6250581741333
    7. ' [-' → logprob: -13.8750581741333
    8. '[:-' → logprob: -14.0625581741333
    9. '2' → logprob: -14.3125581741333
    10. 's' → logprob: -14.8125581741333

Token 154: 'kk' (ID: 8701)
  Prédit: 'kk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.0003166353271808475
    2. '(' → logprob: -8.125316619873047
    3. ' kk' → logprob: -11.250316619873047
    4. 'k' → logprob: -13.000316619873047
    5. '   ' → logprob: -13.500316619873047
    6. '(k' → logprob: -13.500316619873047
    7. '1' → logprob: -14.125316619873047
    8. ' (' → logprob: -14.375316619873047
    9. 'kkkk' → logprob: -14.750316619873047
    10. 'ck' → logprob: -15.250316619873047

Token 155: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002631238894537091
    2. '-' → logprob: -8.625263214111328
    3. ' ]' → logprob: -9.750263214111328
    4. ']-' → logprob: -11.125263214111328
    5. ' -' → logprob: -12.000263214111328
    6. '`]' → logprob: -13.500263214111328
    7. '+' → logprob: -13.875263214111328
    8. '']' → logprob: -14.750263214111328
    9. '1' → logprob: -15.000263214111328
    10. 's' → logprob: -15.875263214111328

Token 156: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5763808488845825
    2. ' -' → logprob: -0.8263808488845825
    3. ' ' → logprob: -8.951380729675293
    4. '−' → logprob: -9.701380729675293
    5. ')' → logprob: -9.951380729675293
    6. '   ' → logprob: -10.076380729675293
    7. '```' → logprob: -10.451380729675293
    8. '`' → logprob: -10.576380729675293
    9. ']' → logprob: -10.701380729675293
    10. 'minus' → logprob: -11.451380729675293

Token 157: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0004402055055834353
    2. ' Num' → logprob: -7.8754401206970215
    3. 'num' → logprob: -10.00044059753418
    4. '1' → logprob: -12.00044059753418
    5. '   ' → logprob: -12.25044059753418
    6. 'k' → logprob: -13.87544059753418
    7. '(' → logprob: -14.25044059753418
    8. ' ' → logprob: -14.25044059753418
    9. 'Nums' → logprob: -15.00044059753418
    10. '  ' → logprob: -15.25044059753418

Token 158: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.4285862057004124e-05
    2. '[' → logprob: -10.37503433227539
    3. '-' → logprob: -14.12503433227539
    4. '(-' → logprob: -14.37503433227539
    5. '`' → logprob: -14.87503433227539
    6. '```' → logprob: -15.12503433227539
    7. '...' → logprob: -15.50003433227539
    8. '   ' → logprob: -15.75003433227539
    9. '1' → logprob: -16.37503433227539
    10. ' [-' → logprob: -16.50003433227539

Token 159: 'kk' (ID: 8701)
  Prédit: 'kk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.31683918833732605
    2. '(' → logprob: -1.3168392181396484
    3. '-' → logprob: -6.691839218139648
    4. '(-' → logprob: -6.941839218139648
    5. ' kk' → logprob: -7.566839218139648
    6. '-(' → logprob: -7.816839218139648
    7. '1' → logprob: -8.316839218139648
    8. '-k' → logprob: -10.316839218139648
    9. ' (' → logprob: -10.316839218139648
    10. '(k' → logprob: -10.441839218139648

Token 160: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0026006263215094805
    2. '1' → logprob: -6.37760066986084
    3. ' -' → logprob: -7.37760066986084
    4. '+' → logprob: -8.25260066986084
    5. ' ' → logprob: -12.62760066986084
    6. '-
' → logprob: -13.00260066986084
    7. '```' → logprob: -13.50260066986084
    8. ']' → logprob: -14.12760066986084
    9. '(' → logprob: -14.25260066986084
    10. '[' → logprob: -14.37760066986084

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.000015258789062
    4. ']' → logprob: -19.625015258789062
    5. '```' → logprob: -19.875015258789062
    6. '  ' → logprob: -20.125015258789062
    7. '１' → logprob: -20.500015258789062
    8. '}' → logprob: -20.750015258789062
    9. '2' → logprob: -20.875015258789062
    10. '`' → logprob: -21.562515258789062

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.625024795532227
    3. ']' → logprob: -14.875024795532227
    4. '   ' → logprob: -16.000024795532227
    5. '```' → logprob: -16.187524795532227
    6. '
' → logprob: -16.875024795532227
    7. '`' → logprob: -16.937524795532227
    8. '  ' → logprob: -16.937524795532227
    9. '2' → logprob: -17.062524795532227
    10. ' ' → logprob: -17.437524795532227

Token 163: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16547389328479767
    2. ']' → logprob: -1.9154739379882812
    3. '])' → logprob: -5.290473937988281
    4. ' )' → logprob: -9.290473937988281
    5. ')]' → logprob: -9.665473937988281
    6. ' ]' → logprob: -11.415473937988281
    7. '<|end|>' → logprob: -11.790473937988281
    8. ')
' → logprob: -12.165473937988281
    9. '   ' → logprob: -12.540473937988281
    10. '[' → logprob: -13.415473937988281

Token 164: 'DP' (ID: 16851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3069016933441162
    2. ' ' → logprob: -1.6819016933441162
    3. ':' → logprob: -3.806901693344116
    4. '<|end|>' → logprob: -4.056901931762695
    5. ',' → logprob: -4.806901931762695
    6. '#' → logprob: -4.931901931762695
    7. '(' → logprob: -5.181901931762695
    8. '_' → logprob: -5.431901931762695
    9. '[' → logprob: -5.681901931762695
    10. '+' → logprob: -6.681901931762695

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2500178813934326
    2. '[' → logprob: -1.6250178813934326
    3. '=' → logprob: -4.250018119812012
    4. '_' → logprob: -5.125018119812012
    5. '1' → logprob: -6.625018119812012
    6. '2' → logprob: -7.500018119812012
    7. ' [' → logprob: -7.625018119812012
    8. ' ' → logprob: -7.750018119812012
    9. '=[' → logprob: -8.125018119812012
    10. '0' → logprob: -8.750018119812012

Token 166: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0367094911634922
    2. ' [' → logprob: -3.7867095470428467
    3. '[[' → logprob: -4.411709308624268
    4. ' [[' → logprob: -7.161709308624268
    5. '[k' → logprob: -8.411709785461426
    6. '[n' → logprob: -9.286709785461426
    7. '[num' → logprob: -9.911709785461426
    8. '[-' → logprob: -10.036709785461426
    9. '[len' → logprob: -11.411709785461426
    10. '0' → logprob: -12.036709785461426

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001940040965564549
    2. ' ' → logprob: -8.87519359588623
    3. '[' → logprob: -10.37519359588623
    4. '-' → logprob: -12.00019359588623
    5. '(' → logprob: -12.00019359588623
    6. 'False' → logprob: -12.75019359588623
    7. '1' → logprob: -13.37519359588623
    8. 'k' → logprob: -13.62519359588623
    9. ' [' → logprob: -13.75019359588623
    10. '[n' → logprob: -14.37519359588623

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08736643940210342
    2. ' for' → logprob: -3.3373663425445557
    3. ']*(' → logprob: -3.3373663425445557
    4. ']*' → logprob: -4.962366580963135
    5. 'for' → logprob: -5.212366580963135
    6. ' ]' → logprob: -9.462366104125977
    7. ']+' → logprob: -9.587366104125977
    8. '][' → logprob: -13.712366104125977
    9. ')' → logprob: -13.837366104125977
    10. ' ' → logprob: -13.962366104125977

Token 169: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6453045010566711
    2. ' for' → logprob: -1.3953044414520264
    3. ']' → logprob: -1.7703044414520264
    4. ']*(' → logprob: -3.0203044414520264
    5. ']*' → logprob: -4.7703046798706055
    6. ']+' → logprob: -9.770304679870605
    7. '*' → logprob: -10.145304679870605
    8. ',' → logprob: -10.520304679870605
    9. '*(' → logprob: -10.645304679870605
    10. ' ]' → logprob: -10.895304679870605

Token 170: ' ln' (ID: 68859)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.030956225469708443
    2. '(root' → logprob: -4.155956268310547
    3. '(' → logprob: -4.655956268310547
    4. '(n' → logprob: -5.530956268310547
    5. ' (' → logprob: -7.155956268310547
    6. '(len' → logprob: -8.280956268310547
    7. '(kn' → logprob: -9.280956268310547
    8. '(K' → logprob: -9.905956268310547
    9. '((' → logprob: -10.030956268310547
    10. 'k' → logprob: -10.530956268310547

Token 171: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06202639266848564
    2. 'for' → logprob: -2.8120265007019043
    3. ']' → logprob: -10.312026023864746
    4. ' ' → logprob: -11.062026023864746
    5. ' ]' → logprob: -12.437026023864746
    6. ')' → logprob: -12.687026023864746
    7. '   ' → logprob: -14.437026023864746
    8. '	for' → logprob: -14.562026023864746
    9. '[' → logprob: -15.312026023864746
    10. '```' → logprob: -15.562026023864746

Token 172: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06787746399641037
    2. ' range' → logprob: -2.8178775310516357
    3. ' _' → logprob: -5.317877292633057
    4. 'range' → logprob: -7.192877292633057
    5. '_range' → logprob: -8.567877769470215
    6. ' in' → logprob: -10.442877769470215
    7. ' i' → logprob: -11.567877769470215
    8. ' ' → logprob: -12.067877769470215
    9. '(range' → logprob: -14.567877769470215
    10. 'Range' → logprob: -14.692877769470215

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4694357216358185
    2. 'in' → logprob: -1.469435691833496
    3. '_' → logprob: -2.219435691833496
    4. 'range' → logprob: -4.094435691833496
    5. ' range' → logprob: -4.219435691833496
    6. '_range' → logprob: -6.469435691833496
    7. ' ' → logprob: -6.719435691833496
    8. '_in' → logprob: -7.344435691833496
    9. ' _' → logprob: -7.594435691833496
    10. 'i' → logprob: -8.594435691833496

Token 174: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692883610725403
    2. ' range' → logprob: -2.1269288063049316
    3. '[' → logprob: -14.37692928314209
    4. '	range' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.876928329467773
    6. '(range' → logprob: -17.251928329467773
    7. 'Range' → logprob: -17.376928329467773
    8. 'rang' → logprob: -18.501928329467773
    9. '_' → logprob: -18.751928329467773
    10. '_range' → logprob: -18.751928329467773

Token 175: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014187601394951344
    2. '2' → logprob: -4.389187812805176
    3. 'ln' → logprob: -6.639187812805176
    4. '(k' → logprob: -9.264187812805176
    5. 'range' → logprob: -9.389187812805176
    6. '(range' → logprob: -9.639187812805176
    7. '(n' → logprob: -10.389187812805176
    8. '3' → logprob: -10.764187812805176
    9. ' (' → logprob: -10.889187812805176
    10. '(l' → logprob: -11.389187812805176

Token 176: ')]
' (ID: 11587)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012999980710446835
    2. ')]' → logprob: -4.388000011444092
    3. ' +' → logprob: -7.638000011444092
    4. '2' → logprob: -12.762999534606934
    5. '+
' → logprob: -13.262999534606934
    6. '1' → logprob: -13.387999534606934
    7. ')' → logprob: -14.387999534606934
    8. ')]
' → logprob: -14.387999534606934
    9. ')][' → logprob: -15.387999534606934
    10. '```' → logprob: -15.887999534606934

Token 177: 'DP' (ID: 16851)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5709827542304993
    2. ')' → logprob: -1.4459826946258545
    3. ']' → logprob: -2.4459826946258545
    4. ' for' → logprob: -3.3209826946258545
    5. '<|end|>' → logprob: -3.9459826946258545
    6. '[' → logprob: -4.070982933044434
    7. 'DP' → logprob: -4.445982933044434
    8. ' ' → logprob: -4.945982933044434
    9. '   ' → logprob: -5.320982933044434
    10. ' ]' → logprob: -5.695982933044434

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.994086627149954e-05
    2. '][' → logprob: -10.500080108642578
    3. '[
' → logprob: -11.375080108642578
    4. '0' → logprob: -11.750080108642578
    5. ')[' → logprob: -11.875080108642578
    6. '[-' → logprob: -12.250080108642578
    7. '<|end|>' → logprob: -12.250080108642578
    8. '
' → logprob: -12.500080108642578
    9. '```' → logprob: -13.250080108642578
    10. '\[' → logprob: -13.250080108642578

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. '1' → logprob: -10.375035285949707
    3. ' ' → logprob: -13.000035285949707
    4. '[' → logprob: -13.250035285949707
    5. '-' → logprob: -16.125036239624023
    6. '2' → logprob: -17.000036239624023
    7. '```' → logprob: -17.375036239624023
    8. '=' → logprob: -17.750036239624023
    9. '#' → logprob: -18.062536239624023
    10. '   ' → logprob: -18.125036239624023

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43230190873146057
    2. '][' → logprob: -1.0573018789291382
    3. '[' → logprob: -6.307301998138428
    4. ']=' → logprob: -6.932301998138428
    5. '][:' → logprob: -7.557301998138428
    6. ' ]' → logprob: -9.55730152130127
    7. ' ][' → logprob: -9.68230152130127
    8. '=' → logprob: -10.30730152130127
    9. '1' → logprob: -10.43230152130127
    10. '][-' → logprob: -10.55730152130127

Token 181: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40113112330436707
    2. '=' → logprob: -1.4011311531066895
    3. ' =' → logprob: -3.1511311531066895
    4. '[:]' → logprob: -3.2761311531066895
    5. '=[' → logprob: -6.5261311531066895
    6. '[:' → logprob: -7.0261311531066895
    7. '[-' → logprob: -7.2761311531066895
    8. ']' → logprob: -9.026130676269531
    9. ',' → logprob: -9.651130676269531
    10. '[:-' → logprob: -10.026130676269531

Token 182: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.03613452985882759
    2. '[' → logprob: -3.4111344814300537
    3. ' Num' → logprob: -6.036134719848633
    4. ' [' → logprob: -10.286134719848633
    5. 'num' → logprob: -10.411134719848633
    6. 'Nums' → logprob: -11.161134719848633
    7. 'list' → logprob: -12.786134719848633
    8. '[(' → logprob: -13.161134719848633
    9. '[num' → logprob: -13.286134719848633
    10. '[:' → logprob: -13.536134719848633

Token 183: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010092071170220152
    2. ' ]' → logprob: -9.375101089477539
    3. 'ln' → logprob: -12.000101089477539
    4. '()]' → logprob: -12.125101089477539
    5. ']
' → logprob: -13.625101089477539
    6. ']()' → logprob: -14.250101089477539
    7. ')]' → logprob: -14.375101089477539
    8. ']

' → logprob: -14.625101089477539
    9. '(' → logprob: -14.750101089477539
    10. ')' → logprob: -14.875101089477539

Token 185: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03539424017071724
    2. ' for' → logprob: -3.7853941917419434
    3. ')' → logprob: -4.785394191741943
    4. '<|end|>' → logprob: -6.160394191741943
    5. ' ' → logprob: -7.410394191741943
    6. '	for' → logprob: -8.035394668579102
    7. '   ' → logprob: -8.535394668579102
    8. ']' → logprob: -8.785394668579102
    9. '+' → logprob: -9.535394668579102
    10. '(' → logprob: -10.535394668579102

Token 186: ' level' (ID: 3211)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20905809104442596
    2. ' kk' → logprob: -2.4590580463409424
    3. 'i' → logprob: -2.7090580463409424
    4. ' ki' → logprob: -4.2090582847595215
    5. 'kk' → logprob: -5.7090582847595215
    6. ' k' → logprob: -6.0840582847595215
    7. ' x' → logprob: -6.0840582847595215
    8. ' _' → logprob: -6.3340582847595215
    9. ' step' → logprob: -6.7090582847595215
    10. '_' → logprob: -6.9590582847595215

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2271496057510376
    2. 'in' → logprob: -1.6021496057510376
    3. ' ' → logprob: -6.602149486541748
    4. '1' → logprob: -8.477149963378906
    5. '_' → logprob: -9.727149963378906
    6. ' ' → logprob: -10.727149963378906
    7. 'i' → logprob: -11.227149963378906
    8. ' i' → logprob: -11.227149963378906
    9. '	in' → logprob: -11.602149963378906
    10. '0' → logprob: -11.977149963378906

Token 188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889705896377563
    2. ' range' → logprob: -2.578896999359131
    3. ' in' → logprob: -12.328897476196289
    4. 'in' → logprob: -13.703897476196289
    5. ' ' → logprob: -14.203897476196289
    6. '1' → logprob: -14.578897476196289
    7. '(range' → logprob: -15.453897476196289
    8. '	range' → logprob: -16.70389747619629
    9. 'k' → logprob: -16.95389747619629
    10. 'ran' → logprob: -17.07889747619629

Token 189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005234356038272381
    2. '1' → logprob: -5.255234241485596
    3. ' (' → logprob: -15.505234718322754
    4. '(k' → logprob: -15.505234718322754
    5. '2' → logprob: -16.005233764648438
    6. ' ' → logprob: -17.380233764648438
    7. ',' → logprob: -18.005233764648438
    8. 'k' → logprob: -18.255233764648438
    9. '(
' → logprob: -18.255233764648438
    10. '[' → logprob: -19.255233764648438

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'k' → logprob: -14.750003814697266
    4. '2' → logprob: -15.125003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '(' → logprob: -19.750003814697266
    7. ' k' → logprob: -20.250003814697266
    8. '0' → logprob: -20.375003814697266
    9. '
' → logprob: -20.750003814697266
    10. 'n' → logprob: -21.000003814697266

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008819266804493964
    2. ',k' → logprob: -7.125882148742676
    3. ' ,' → logprob: -9.500882148742676
    4. '(k' → logprob: -13.250882148742676
    5. 'k' → logprob: -14.250882148742676
    6. ' k' → logprob: -15.750882148742676
    7. ',n' → logprob: -16.25088119506836
    8. '(' → logprob: -16.75088119506836
    9. ',len' → logprob: -17.87588119506836
    10. '   ' → logprob: -19.12588119506836

Token 192: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001234428636962548
    2. ' k' → logprob: -9.000123023986816
    3. '	k' → logprob: -20.125123977661133
    4. '   ' → logprob: -21.875123977661133
    5. '
' → logprob: -22.375123977661133
    6. ' ' → logprob: -23.375123977661133
    7. 'kx' → logprob: -23.750123977661133
    8. '  ' → logprob: -24.500123977661133
    9. '{k' → logprob: -24.500123977661133
    10. ',k' → logprob: -24.750123977661133

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133571147918701
    2. '):
' → logprob: -1.3133571147918701
    3. '):
' → logprob: -10.18835735321045
    4. ' ):' → logprob: -10.18835735321045
    5. ':' → logprob: -11.56335735321045
    6. ' ):
' → logprob: -12.18835735321045
    7. '+' → logprob: -12.68835735321045
    8. ')' → logprob: -13.81335735321045
    9. '):

' → logprob: -14.31335735321045
    10. ':
' → logprob: -15.06335735321045

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027157211676239967
    2. ' for' → logprob: -3.9021573066711426
    3. 'for' → logprob: -5.027157306671143
    4. '	for' → logprob: -10.902156829833984
    5. '    
' → logprob: -11.652156829833984
    6. '   ' → logprob: -12.777156829833984
    7. '```' → logprob: -13.902156829833984
    8. ' ind' → logprob: -14.027156829833984
    9. ' ' → logprob: -14.277156829833984
    10. ' i' → logprob: -14.277156829833984

Token 195: ' running' (ID: 6788)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033927254378795624
    2. 'prefix' → logprob: -4.5339274406433105
    3. 'cum' → logprob: -4.9089274406433105
    4. ' for' → logprob: -5.1589274406433105
    5. 'acc' → logprob: -6.4089274406433105
    6. 'curr' → logprob: -6.5339274406433105
    7. 'sum' → logprob: -6.6589274406433105
    8. 'cur' → logprob: -6.6589274406433105
    9. '   ' → logprob: -7.0339274406433105
    10. 's' → logprob: -7.0339274406433105

Token 196: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.02105608396232128
    2. '_' → logprob: -4.021056175231934
    3. '_total' → logprob: -6.521056175231934
    4. ' =' → logprob: -7.146056175231934
    5. '=' → logprob: -7.771056175231934
    6. 'sum' → logprob: -8.646056175231934
    7. 'Sum' → logprob: -11.396056175231934
    8. '_=' → logprob: -11.396056175231934
    9. '_s' → logprob: -11.896056175231934
    10. '_tot' → logprob: -13.146056175231934

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030332093592733145
    2. '[' → logprob: -6.25303316116333
    3. ' ' → logprob: -6.87803316116333
    4. 'DP' → logprob: -10.378033638000488
    5. ' [' → logprob: -10.753033638000488
    6. '1' → logprob: -11.753033638000488
    7. 'Num' → logprob: -13.378033638000488
    8. '[]' → logprob: -13.628033638000488
    9. '[int' → logprob: -13.628033638000488
    10. '(' → logprob: -14.065533638000488

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021242110524326563
    2. '[' → logprob: -6.252124309539795
    3. 'DP' → logprob: -8.752123832702637
    4. ' ' → logprob: -11.002123832702637
    5. '1' → logprob: -11.502123832702637
    6. '(' → logprob: -13.252123832702637
    7. ' [' → logprob: -13.377123832702637
    8. '[int' → logprob: -13.752123832702637
    9. 'Num' → logprob: -14.127123832702637
    10. 'running' → logprob: -14.252123832702637

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13768936693668365
    2. '
' → logprob: -3.0126893520355225
    3. ' for' → logprob: -3.6376893520355225
    4. '	for' → logprob: -4.012689590454102
    5. '<|end|>' → logprob: -4.387689590454102
    6. 'for' → logprob: -4.762689590454102
    7. '	
' → logprob: -5.637689590454102
    8. '    
' → logprob: -5.887689590454102
    9. ' ' → logprob: -6.262689590454102
    10. ' 
' → logprob: -6.387689590454102

Token 200: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5475233197212219
    2. 'for' → logprob: -1.0475232601165771
    3. '   ' → logprob: -2.797523260116577
    4. '	for' → logprob: -4.797523498535156
    5. '<|end|>' → logprob: -7.297523498535156
    6. ')' → logprob: -8.047523498535156
    7. ',' → logprob: -8.047523498535156
    8. ' ' → logprob: -8.922523498535156
    9. '
' → logprob: -10.047523498535156
    10. '  ' → logprob: -11.172523498535156

Token 201: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008657476864755154
    2. ' for' → logprob: -4.758657455444336
    3. 'range' → logprob: -11.133657455444336
    4. 'i' → logprob: -11.758657455444336
    5. 'j' → logprob: -12.008657455444336
    6. '   ' → logprob: -12.258657455444336
    7. '0' → logprob: -13.008657455444336
    8. '	for' → logprob: -13.008657455444336
    9. ')' → logprob: -13.508657455444336
    10. 'level' → logprob: -14.133657455444336

Token 202: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029940243810415268
    2. ' for' → logprob: -4.029940128326416
    3. 'i' → logprob: -4.654940128326416
    4. 'j' → logprob: -6.279940128326416
    5. ' i' → logprob: -9.029940605163574
    6. 'idx' → logprob: -9.279940605163574
    7. ' j' → logprob: -10.654940605163574
    8. '_' → logprob: -11.154940605163574
    9. 'ln' → logprob: -11.404940605163574
    10. 'range' → logprob: -11.529940605163574

Token 203: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6349369287490845
    2. 'for' → logprob: -0.7599369287490845
    3. ' range' → logprob: -6.634936809539795
    4. 'range' → logprob: -7.884936809539795
    5. ' ' → logprob: -8.134937286376953
    6. '   ' → logprob: -8.634937286376953
    7. ' in' → logprob: -10.259937286376953
    8. ')' → logprob: -10.259937286376953
    9. 'r' → logprob: -11.009937286376953
    10. '    ' → logprob: -11.509937286376953

Token 204: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09798187762498856
    2. 'for' → logprob: -2.5979819297790527
    3. ' in' → logprob: -4.472981929779053
    4. ' over' → logprob: -5.347981929779053
    5. '   ' → logprob: -6.847981929779053
    6. ',' → logprob: -7.472981929779053
    7. '<|end|>' → logprob: -8.097981452941895
    8. 'in' → logprob: -8.347981452941895
    9. ' through' → logprob: -9.097981452941895
    10. '	for' → logprob: -9.347981452941895

Token 205: 'on' (ID: 263)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.7059788107872009
    2. 'for' → logprob: -1.2059788703918457
    3. ' for' → logprob: -2.0809788703918457
    4. ' in' → logprob: -3.7059788703918457
    5. 'in' → logprob: -4.205978870391846
    6. ' ln' → logprob: -4.205978870391846
    7. ')' → logprob: -4.830978870391846
    8. 'range' → logprob: -5.205978870391846
    9. ' range' → logprob: -5.955978870391846
    10. 'j' → logprob: -5.955978870391846

Token 206: ' commence' (ID: 44755)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34806254506111145
    2. 'for' → logprob: -1.848062515258789
    3. ' in' → logprob: -2.723062515258789
    4. ' range' → logprob: -3.098062515258789
    5. ' ' → logprob: -5.223062515258789
    6. ')' → logprob: -5.223062515258789
    7. 'range' → logprob: -5.223062515258789
    8. 'in' → logprob: -5.723062515258789
    9. '   ' → logprob: -6.348062515258789
    10. '=' → logprob: -7.598062515258789

Token 207: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0568675994873047
    2. 'from' → logprob: -1.0568675994873047
    3. '   ' → logprob: -2.3068675994873047
    4. 'in' → logprob: -2.8068675994873047
    5. ' from' → logprob: -3.3068675994873047
    6. ' at' → logprob: -3.6818675994873047
    7. 'for' → logprob: -3.8068675994873047
    8. ')' → logprob: -4.056867599487305
    9. ',' → logprob: -4.306867599487305
    10. 'at' → logprob: -4.681867599487305

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02348596602678299
    2. '0' → logprob: -4.023486137390137
    3. 'ln' → logprob: -5.398486137390137
    4. 'root' → logprob: -8.023486137390137
    5. ' ' → logprob: -8.523486137390137
    6. 'range' → logprob: -9.523486137390137
    7. 'len' → logprob: -9.648486137390137
    8. '-' → logprob: -10.398486137390137
    9. '(' → logprob: -10.898486137390137
    10. '   ' → logprob: -11.273486137390137

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008213711902499199
    2. '0' → logprob: -5.008213520050049
    3. 'ln' → logprob: -6.633213520050049
    4. 'root' → logprob: -9.758213996887207
    5. 'range' → logprob: -11.133213996887207
    6. ' ' → logprob: -11.258213996887207
    7. 'len' → logprob: -11.258213996887207
    8. '(' → logprob: -11.258213996887207
    9. '   ' → logprob: -11.383213996887207
    10. '-' → logprob: -11.633213996887207

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02436066046357155
    2. ')' → logprob: -4.399360656738281
    3. 'for' → logprob: -5.524360656738281
    4. ';' → logprob: -6.149360656738281
    5. '   ' → logprob: -6.524360656738281
    6. ' for' → logprob: -6.899360656738281
    7. ' in' → logprob: -7.149360656738281
    8. ',j' → logprob: -7.149360656738281
    9. ' ,' → logprob: -7.774360656738281
    10. 'in' → logprob: -8.399360656738281

Token 211: ' c' (ID: 274)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.5827951431274414
    2. ')' → logprob: -1.5827951431274414
    3. ' ln' → logprob: -1.5827951431274414
    4. ' )' → logprob: -3.8327951431274414
    5. ' for' → logprob: -6.332795143127441
    6. '1' → logprob: -6.332795143127441
    7. ' len' → logprob: -6.707795143127441
    8. ',' → logprob: -7.082795143127441
    9. ' ' → logprob: -7.082795143127441
    10. 'len' → logprob: -7.582795143127441

Token 212: ''est' (ID: 6616)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41268160939216614
    2. 'n' → logprob: -2.4126815795898438
    3. '=' → logprob: -2.4126815795898438
    4. ')' → logprob: -2.6626815795898438
    5. '1' → logprob: -3.7876815795898438
    6. ' in' → logprob: -3.7876815795898438
    7. 'for' → logprob: -4.162681579589844
    8. '   ' → logprob: -5.287681579589844
    9. '+' → logprob: -5.787681579589844
    10. 'in' → logprob: -5.787681579589844

Token 213: ' lou' (ID: 26849)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004231666214764118
    2. '0' → logprob: -6.2542314529418945
    3. '   ' → logprob: -6.6292314529418945
    4. 'ln' → logprob: -7.8792314529418945
    5. ' ' → logprob: -8.379231452941895
    6. ')' → logprob: -9.129231452941895
    7. 'root' → logprob: -9.379231452941895
    8. '       ' → logprob: -10.254231452941895
    9. 'len' → logprob: -10.879231452941895
    10. '           ' → logprob: -11.129231452941895

Token 214: 'che' (ID: 926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7841892838478088
    2. '=' → logprob: -1.909189224243164
    3. ',' → logprob: -2.034189224243164
    4. '1' → logprob: -3.284189224243164
    5. '       ' → logprob: -3.284189224243164
    6. ')' → logprob: -3.659189224243164
    7. '+' → logprob: -3.659189224243164
    8. 'range' → logprob: -3.784189224243164
    9. 'n' → logprob: -4.034189224243164
    10. '    ' → logprob: -4.409189224243164

Token 215: ' mais' (ID: 2899)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11571551859378815
    2. '   ' → logprob: -2.490715503692627
    3. ')' → logprob: -4.115715503692627
    4. 'for' → logprob: -5.865715503692627
    5. ' for' → logprob: -6.115715503692627
    6. ';' → logprob: -6.490715503692627
    7. ' ,' → logprob: -7.115715503692627
    8. ' in' → logprob: -7.240715503692627
    9. '):' → logprob: -7.490715503692627
    10. '):
' → logprob: -7.865715503692627

Token 216: ' bon' (ID: 4846)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8541699051856995
    2. 'ln' → logprob: -1.1041698455810547
    3. ')' → logprob: -1.7291698455810547
    4. ' ln' → logprob: -3.7291698455810547
    5. ' )' → logprob: -3.9791698455810547
    6. '   ' → logprob: -5.104169845581055
    7. '0' → logprob: -5.729169845581055
    8. 'True' → logprob: -5.979169845581055
    9. 'root' → logprob: -6.229169845581055
    10. ' ' → logprob: -6.479169845581055

Token 217: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24535337090492249
    2. '   ' → logprob: -2.2453534603118896
    3. ',' → logprob: -2.9953534603118896
    4. '):' → logprob: -3.7453534603118896
    5. ' for' → logprob: -3.9953534603118896
    6. 'for' → logprob: -4.9953532218933105
    7. '):
' → logprob: -5.2453532218933105
    8. ' )' → logprob: -5.6203532218933105
    9. ')
' → logprob: -7.3703532218933105
    10. ' ,' → logprob: -7.4953532218933105

Token 218: ' c' (ID: 274)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.48741641640663147
    2. '1' → logprob: -1.612416386604309
    3. '   ' → logprob: -2.6124165058135986
    4. ' ln' → logprob: -2.6124165058135986
    5. ')' → logprob: -4.2374162673950195
    6. ' ' → logprob: -4.7374162673950195
    7. ' for' → logprob: -5.4874162673950195
    8. 'for' → logprob: -5.7374162673950195
    9. 'len' → logprob: -6.6124162673950195
    10. '    ' → logprob: -6.6124162673950195

Token 219: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5254586935043335
    2. '   ' → logprob: -1.4004586935043335
    3. 'for' → logprob: -3.650458812713623
    4. 'ont' → logprob: -3.900458812713623
    5. '```' → logprob: -4.275458812713623
    6. 'e' → logprob: -4.400458812713623
    7. '  ' → logprob: -4.900458812713623
    8. 'ar' → logprob: -4.900458812713623
    9. 'a' → logprob: -5.025458812713623
    10. 'on' → logprob: -5.150458812713623

Token 220: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03566357493400574
    2. 'ln' → logprob: -3.535663604736328
    3. 'root' → logprob: -5.910663604736328
    4. '0' → logprob: -6.535663604736328
    5. '   ' → logprob: -7.035663604736328
    6. 'range' → logprob: -8.160663604736328
    7. ' ' → logprob: -8.910663604736328
    8. 'len' → logprob: -9.535663604736328
    9. ' ln' → logprob: -10.035663604736328
    10. '           ' → logprob: -10.035663604736328

Token 221: ' code' (ID: 3490)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.5868068933486938
    2. '1' → logprob: -0.8368068933486938
    3. 'root' → logprob: -4.836806774139404
    4. '0' → logprob: -6.461806774139404
    5. 'len' → logprob: -7.211806774139404
    6. '```' → logprob: -8.961807250976562
    7. ' ln' → logprob: -8.961807250976562
    8. '   ' → logprob: -9.836807250976562
    9. '
' → logprob: -10.086807250976562
    10. ' ' → logprob: -10.461807250976562

Token 222: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7043693661689758
    2. '):' → logprob: -1.329369306564331
    3. ')' → logprob: -2.329369306564331
    4. ' for' → logprob: -3.329369306564331
    5. 'for' → logprob: -3.454369306564331
    6. ' in' → logprob: -3.454369306564331
    7. ',' → logprob: -4.45436954498291
    8. 'in' → logprob: -4.95436954498291
    9. '):
' → logprob: -5.07936954498291
    10. ':' → logprob: -5.32936954498291

Token 223: ' base' (ID: 3611)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9718019962310791
    2. 'root' → logprob: -1.471801996231079
    3. 'ln' → logprob: -1.721801996231079
    4. '1' → logprob: -2.096801996231079
    5. 'level' → logprob: -2.721801996231079
    6. 'len' → logprob: -5.3468017578125
    7. 'Num' → logprob: -5.3468017578125
    8. 'num' → logprob: -5.9718017578125
    9. '   ' → logprob: -6.2218017578125
    10. 'la' → logprob: -6.4718017578125

Token 224: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08275435119867325
    2. ')' → logprob: -3.582754373550415
    3. ' for' → logprob: -3.957754373550415
    4. '):' → logprob: -4.332754135131836
    5. ',' → logprob: -4.832754135131836
    6. 'for' → logprob: -5.207754135131836
    7. ':' → logprob: -6.082754135131836
    8. '):
' → logprob: -6.582754135131836
    9. ' ' → logprob: -7.082754135131836
    10. '  ' → logprob: -8.082754135131836

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14226007461547852
    2. ' for' → logprob: -2.1422600746154785
    3. 'for' → logprob: -4.2672600746154785
    4. '	for' → logprob: -7.0172600746154785
    5. ')' → logprob: -9.01725959777832
    6. ',' → logprob: -10.14225959777832
    7. '   ' → logprob: -10.64225959777832
    8. ' in' → logprob: -10.76725959777832
    9. ' i' → logprob: -10.89225959777832
    10. '<|end|>' → logprob: -11.26725959777832

Token 226: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5845392346382141
    2. 'for' (adapté à ' for') → logprob: -0.8345392346382141
    3. '   ' → logprob: -4.959539413452148
    4. ' range' → logprob: -6.834539413452148
    5. 'range' → logprob: -7.834539413452148
    6. ' in' → logprob: -10.084539413452148
    7. ' ' → logprob: -11.459539413452148
    8. '1' → logprob: -11.959539413452148
    9. '	for' → logprob: -11.959539413452148
    10. ')' → logprob: -13.084539413452148

Token 227: ' mm' (ID: 8957)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.330064594745636
    2. 'j' → logprob: -2.205064535140991
    3. ' i' → logprob: -2.330064535140991
    4. ' j' → logprob: -3.705064535140991
    5. 'x' → logprob: -4.08006477355957
    6. 'idx' → logprob: -4.70506477355957
    7. ' idx' → logprob: -4.95506477355957
    8. ' x' → logprob: -5.83006477355957
    9. 'l' → logprob: -6.20506477355957
    10. 'num' → logprob: -6.58006477355957

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20153750479221344
    2. 'in' → logprob: -1.7015374898910522
    3. ' ' → logprob: -9.701537132263184
    4. '1' → logprob: -10.076537132263184
    5. ',' → logprob: -11.701537132263184
    6. 'import' → logprob: -12.451537132263184
    7. 'range' → logprob: -12.576537132263184
    8. '  ' → logprob: -13.951537132263184
    9. '(' → logprob: -14.201537132263184
    10. '   ' → logprob: -14.201537132263184

Token 229: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2521410882472992
    2. 'range' → logprob: -1.5021411180496216
    3. '(range' → logprob: -8.752140998840332
    4. ' in' → logprob: -10.627140998840332
    5. ' ' → logprob: -11.377140998840332
    6. '(' → logprob: -12.002140998840332
    7. '1' → logprob: -12.502140998840332
    8. 'in' → logprob: -12.627140998840332
    9. '	range' → logprob: -13.877140998840332
    10. '[' → logprob: -14.127140998840332

Token 230: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.392202976712724e-06
    2. '1' → logprob: -12.750006675720215
    3. '(len' → logprob: -13.625006675720215
    4. '(l' → logprob: -14.125006675720215
    5. 'ln' → logprob: -14.250006675720215
    6. '(ll' → logprob: -15.000006675720215
    7. ' (' → logprob: -15.500006675720215
    8. '(-' → logprob: -15.750006675720215
    9. '(
' → logprob: -17.1250057220459
    10. '(root' → logprob: -17.3750057220459

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012577584944665432
    2. 'ln' → logprob: -4.387577533721924
    3. '2' → logprob: -10.512578010559082
    4. '0' → logprob: -10.637578010559082
    5. 'len' → logprob: -12.012578010559082
    6. '(' → logprob: -12.637578010559082
    7. 'll' → logprob: -13.512578010559082
    8. ' ' → logprob: -13.762578010559082
    9. '   ' → logprob: -13.887578010559082
    10. 'root' → logprob: -14.262578010559082

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.68022444692906e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',len' → logprob: -13.875046730041504
    4. '   ' → logprob: -15.500046730041504
    5. 'ln' → logprob: -16.87504768371582
    6. ',ll' → logprob: -17.00004768371582
    7. ',
' → logprob: -17.25004768371582
    8. '(),' → logprob: -17.25004768371582
    9. '(' → logprob: -17.50004768371582
    10. ' ' → logprob: -17.62504768371582

Token 233: ' ln' (ID: 68859)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.0007144584087654948
    2. ' ln' → logprob: -7.250714302062988
    3. 'len' → logprob: -12.375714302062988
    4. '   ' → logprob: -15.250714302062988
    5. 'll' → logprob: -17.875715255737305
    6. '_ln' → logprob: -18.000715255737305
    7. ' ' → logprob: -18.500715255737305
    8. 'Ln' → logprob: -18.500715255737305
    9. '       ' → logprob: -19.250715255737305
    10. '-ln' → logprob: -19.250715255737305

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28119391202926636
    2. '):
' → logprob: -1.4061939716339111
    3. '   ' → logprob: -10.656193733215332
    4. ':' → logprob: -12.281193733215332
    5. '):
' → logprob: -12.281193733215332
    6. '):

' → logprob: -12.781193733215332
    7. ')' → logprob: -13.031193733215332
    8. ' ):' → logprob: -13.406193733215332
    9. '```' → logprob: -14.281193733215332
    10. '+' → logprob: -14.406193733215332

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002997120900545269
    2. ')' → logprob: -9.500299453735352
    3. ',' → logprob: -9.750299453735352
    4. '   ' → logprob: -10.250299453735352
    5. '	' → logprob: -10.375299453735352
    6. '	   ' → logprob: -11.125299453735352
    7. '<|end|>' → logprob: -11.375299453735352
    8. ':' → logprob: -11.500299453735352
    9. '):
' → logprob: -11.500299453735352
    10. '        
' → logprob: -11.625299453735352

Token 236: ' running' (ID: 6788)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.13550840318202972
    2. '       ' → logprob: -2.6355082988739014
    3. ' DP' → logprob: -3.7605082988739014
    4. ' running' → logprob: -4.7605085372924805
    5. 'running' (adapté à ' running') → logprob: -5.0105085372924805
    6. 'dp' → logprob: -5.6355085372924805
    7. '           ' → logprob: -6.0105085372924805
    8. ')' → logprob: -6.1355085372924805
    9. 'while' → logprob: -6.7605085372924805
    10. '+' → logprob: -6.7605085372924805

Token 237: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.015141698531806469
    2. '=' → logprob: -4.515141487121582
    3. ' +=' → logprob: -5.515141487121582
    4. ' =' → logprob: -9.765141487121582
    5. '+=(' → logprob: -14.015141487121582
    6. '+' → logprob: -14.390141487121582
    7. '%=' → logprob: -14.765141487121582
    8. '*=' → logprob: -15.015141487121582
    9. '   ' → logprob: -15.390141487121582
    10. '-=' → logprob: -15.515141487121582

Token 238: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0037390298675745726
    2. 'Num' → logprob: -5.628738880157471
    3. '(' → logprob: -9.378739356994629
    4. ' DP' → logprob: -10.128739356994629
    5. '   ' → logprob: -12.003739356994629
    6. '(D' → logprob: -12.878739356994629
    7. 'Dp' → logprob: -13.503739356994629
    8. 'num' → logprob: -13.878739356994629
    9. ' Num' → logprob: -14.003739356994629
    10. '_DP' → logprob: -14.128739356994629

Token 239: '[level' (ID: 164831)
  Prédit: '[level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[level' → logprob: -2.5776860184123507e-06
    2. 'level' → logprob: -13.25000286102295
    3. '```' → logprob: -15.37500286102295
    4. '[-' → logprob: -16.000001907348633
    5. '[' → logprob: -16.125001907348633
    6. '[layer' → logprob: -16.125001907348633
    7. '(level' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.500001907348633
    9. '	level' → logprob: -17.375001907348633
    10. '[
' → logprob: -18.375001907348633

Token 240: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09364567697048187
    2. '-' → logprob: -2.5936455726623535
    3. '[' → logprob: -4.7186455726623535
    4. ' -' → logprob: -5.3436455726623535
    5. '   ' → logprob: -7.8436455726623535
    6. '[m' → logprob: -8.343646049499512
    7. '[level' → logprob: -9.468646049499512
    8. ']' → logprob: -9.593646049499512
    9. ' ][' → logprob: -9.968646049499512
    10. '][-' → logprob: -10.843646049499512

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. ' ' → logprob: -10.375033378601074
    3. '   ' → logprob: -14.375033378601074
    4. '```' → logprob: -15.250033378601074
    5. '[' → logprob: -15.375033378601074
    6. '
' → logprob: -15.500033378601074
    7. '][' → logprob: -15.937533378601074
    8. ']' → logprob: -17.062532424926758
    9. '`' → logprob: -17.062532424926758
    10. '  ' → logprob: -17.125032424926758

Token 242: '1' (ID: 16)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.006115540862083435
    2. '1' → logprob: -5.631115436553955
    3. '[' → logprob: -6.506115436553955
    4. '(mm' → logprob: -7.381115436553955
    5. ' mm' → logprob: -8.381115913391113
    6. '   ' → logprob: -9.756115913391113
    7. '][' → logprob: -10.256115913391113
    8. ':mm' → logprob: -11.131115913391113
    9. '[m' → logprob: -12.006115913391113
    10. ' ' → logprob: -12.006115913391113

Token 243: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12987002730369568
    2. '[' → logprob: -2.1298699378967285
    3. 'mm' → logprob: -7.2548699378967285
    4. '[-' → logprob: -7.5048699378967285
    5. '][-' → logprob: -7.6298699378967285
    6. ')[' → logprob: -8.504870414733887
    7. '(mm' → logprob: -8.504870414733887
    8. ' ][' → logprob: -8.754870414733887
    9. '[m' → logprob: -9.004870414733887
    10. ':mm' → logprob: -9.254870414733887

Token 244: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.006104524713009596
    2. 'Num' → logprob: -5.131104469299316
    3. ' mm' → logprob: -10.131104469299316
    4. 'mmm' → logprob: -10.256104469299316
    5. 'num' → logprob: -10.506104469299316
    6. '[' → logprob: -11.256104469299316
    7. '-mm' → logprob: -11.256104469299316
    8. '(mm' → logprob: -11.756104469299316
    9. 'MM' → logprob: -12.131104469299316
    10. 'm' → logprob: -12.131104469299316

Token 245: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010041086934506893
    2. ']*' → logprob: -7.126004219055176
    3. ' ]' → logprob: -9.001004219055176
    4. ' *' → logprob: -10.251004219055176
    5. ']%' → logprob: -11.376004219055176
    6. ']
' → logprob: -11.501004219055176
    7. '*' → logprob: -11.501004219055176
    8. '   ' → logprob: -12.876004219055176
    9. '])' → logprob: -13.501004219055176
    10. ')' → logprob: -13.626004219055176

Token 246: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7525611519813538
    2. ' %' → logprob: -0.7525611519813538
    3. '       ' → logprob: -3.377561092376709
    4. ' *' → logprob: -4.377561092376709
    5. '
' → logprob: -4.877561092376709
    6. '*' → logprob: -6.377561092376709
    7. ')' → logprob: -7.627561092376709
    8. '        
' → logprob: -7.627561092376709
    9. ' 
' → logprob: -8.502561569213867
    10. '<|end|>' → logprob: -9.002561569213867

Token 247: ' if' (ID: 538)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.009895505383610725
    2. ' DP' → logprob: -5.634895324707031
    3. ')' → logprob: -5.759895324707031
    4. 'if' (adapté à ' if') → logprob: -6.634895324707031
    5. 'running' → logprob: -7.634895324707031
    6. '*' → logprob: -8.009895324707031
    7. '       ' → logprob: -8.134895324707031
    8. ' if' → logprob: -8.259895324707031
    9. ' running' → logprob: -8.759895324707031
    10. '%' → logprob: -9.509895324707031

Token 248: ' running' (ID: 6788)
  Prédit: 'running'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'running' → logprob: -0.6577476263046265
    2. ' running' → logprob: -0.7827476263046265
    3. 'Num' → logprob: -4.657747745513916
    4. ' Num' → logprob: -4.657747745513916
    5. 'mm' → logprob: -5.657747745513916
    6. ' mm' → logprob: -6.907747745513916
    7. 'mod' → logprob: -8.782747268676758
    8. '(mm' → logprob: -9.282747268676758
    9. 'DP' → logprob: -9.407747268676758
    10. 'num' → logprob: -9.407747268676758

Token 249: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7739927768707275
    2. '%' → logprob: -1.3989927768707275
    3. ' >=' → logprob: -1.5239927768707275
    4. ' %' → logprob: -3.6489927768707275
    5. ' %=' → logprob: -4.023992538452148
    6. '>' → logprob: -4.273992538452148
    7. '%=' → logprob: -4.273992538452148
    8. ' >' → logprob: -6.148992538452148
    9. '<' → logprob: -10.398992538452148
    10. '=' → logprob: -10.648992538452148

Token 250: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.615255839889869e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.50009536743164
    4. '	mod' → logprob: -19.12509536743164
    5. '100' → logprob: -19.50009536743164
    6. ' ' → logprob: -19.50009536743164
    7. 'm' → logprob: -20.37509536743164
    8. '(mod' → logprob: -20.37509536743164
    9. '
' → logprob: -20.87509536743164
    10. '           ' → logprob: -21.37509536743164

Token 251: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38716763257980347
    2. ':
' → logprob: -1.1371676921844482
    3. '       ' → logprob: -9.262167930603027
    4. ' :
' → logprob: -9.637167930603027
    5. ' :' → logprob: -9.762167930603027
    6. ' running' → logprob: -10.637167930603027
    7. '           ' → logprob: -10.887167930603027
    8. ':return' → logprob: -11.387167930603027
    9. '   ' → logprob: -11.637167930603027
    10. 'running' → logprob: -12.387167930603027

Token 252: ' ' (ID: 220)
  Prédit: ' running'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' running' → logprob: -0.00627939822152257
    2. 'running' → logprob: -5.381279468536377
    3. '           ' → logprob: -6.506279468536377
    4. '	       ' → logprob: -9.631278991699219
    5. '.running' → logprob: -10.256278991699219
    6. 'Running' → logprob: -10.881278991699219
    7. ' ' → logprob: -11.381278991699219
    8. '       ' → logprob: -11.506278991699219
    9. '```' → logprob: -11.756278991699219
    10. '_running' → logprob: -12.631278991699219

Token 253: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3407594561576843
    2. '       ' → logprob: -1.840759515762329
    3. 'running' → logprob: -2.215759515762329
    4. ' running' → logprob: -3.965759515762329
    5. '	       ' → logprob: -7.09075927734375
    6. '               ' → logprob: -7.34075927734375
    7. '   ' → logprob: -8.21575927734375
    8. '```' → logprob: -9.21575927734375
    9. '_running' → logprob: -9.71575927734375
    10. '.running' → logprob: -10.21575927734375

Token 254: ' modulo' (ID: 112372)
  Prédit: 'running'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'running' → logprob: -0.5648155212402344
    2. ' running' → logprob: -0.9398155212402344
    3. '           ' → logprob: -3.3148155212402344
    4. '       ' → logprob: -5.439815521240234
    5. '.running' → logprob: -9.564815521240234
    6. '   ' → logprob: -10.314815521240234
    7. '               ' → logprob: -11.189815521240234
    8. '_running' → logprob: -11.439815521240234
    9. '```' → logprob: -12.064815521240234
    10. '	       ' → logprob: -12.439815521240234

Token 255: ' par' (ID: 686)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08579933643341064
    2. '       ' → logprob: -2.585799217224121
    3. ' running' → logprob: -5.710799217224121
    4. ':' → logprob: -6.210799217224121
    5. 'running' → logprob: -6.835799217224121
    6. '               ' → logprob: -8.835799217224121
    7. '	       ' → logprob: -8.960799217224121
    8. ':
' → logprob: -9.960799217224121
    9. '.running' → logprob: -10.210799217224121
    10. ',' → logprob: -10.460799217224121

Token 256: ' sécurité' (ID: 32375)
  Prédit: 'running'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'running' → logprob: -0.2446037232875824
    2. ' running' → logprob: -1.8696037530899048
    3. 'mod' → logprob: -2.8696036338806152
    4. '       ' → logprob: -5.744603633880615
    5. ' mod' → logprob: -6.494603633880615
    6. '=' → logprob: -7.244603633880615
    7. '```' → logprob: -8.994604110717773
    8. ' =' → logprob: -9.369604110717773
    9. '   ' → logprob: -9.494604110717773
    10. '	mod' → logprob: -9.619604110717773

Token 257: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035965023562312126
    2. '       ' → logprob: -5.753596305847168
    3. '	       ' → logprob: -8.253596305847168
    4. '               ' → logprob: -9.503596305847168
    5. ' running' → logprob: -10.003596305847168
    6. ',' → logprob: -11.503596305847168
    7. '		' → logprob: -12.253596305847168
    8. ':' → logprob: -12.628596305847168
    9. 'running' → logprob: -12.628596305847168
    10. '   ' → logprob: -12.753596305847168

Token 258: ' ça' (ID: 13590)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.704065213445574e-05
    2. '       ' → logprob: -10.625046730041504
    3. '               ' → logprob: -11.250046730041504
    4. '	       ' → logprob: -12.375046730041504
    5. '   ' → logprob: -13.000046730041504
    6. ' running' → logprob: -13.500046730041504
    7. 'running' → logprob: -14.375046730041504
    8. '          ' → logprob: -15.125046730041504
    9. '		' → logprob: -16.00004768371582
    10. '```' → logprob: -16.00004768371582

Token 259: ' overflow' (ID: 28614)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.26963430643081665
    2. '       ' → logprob: -1.7696342468261719
    3. ' running' → logprob: -3.394634246826172
    4. ':' → logprob: -4.769634246826172
    5. 'running' → logprob: -4.769634246826172
    6. '           ' → logprob: -4.894634246826172
    7. ' -=' → logprob: -5.269634246826172
    8. '-' → logprob: -6.394634246826172
    9. '=' → logprob: -8.144634246826172
    10. '-running' → logprob: -8.394634246826172

Token 260: ' vite' (ID: 38682)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0854889154434204
    2. '       ' → logprob: -1.0854889154434204
    3. '           ' → logprob: -1.2104889154434204
    4. ':
' → logprob: -3.710488796234131
    5. ' :' → logprob: -7.960488796234131
    6. ',' → logprob: -8.085489273071289
    7. ' running' → logprob: -8.710489273071289
    8. '	       ' → logprob: -8.710489273071289
    9. ' =' → logprob: -8.960489273071289
    10. '               ' → logprob: -8.960489273071289

Token 261: ' sinon' (ID: 52915)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015633940347470343
    2. '       ' → logprob: -9.37515640258789
    3. '               ' → logprob: -10.12515640258789
    4. '	       ' → logprob: -11.62515640258789
    5. ':' → logprob: -11.75015640258789
    6. ' running' → logprob: -12.00015640258789
    7. ',' → logprob: -12.50015640258789
    8. '          ' → logprob: -14.00015640258789
    9. '   ' → logprob: -14.12515640258789
    10. '```' → logprob: -14.12515640258789

Token 262: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31968754529953003
    2. ':' → logprob: -1.3196876049041748
    3. ':
' → logprob: -6.319687366485596
    4. ' :' → logprob: -6.694687366485596
    5. '       ' → logprob: -7.069687366485596
    6. ' =' → logprob: -7.069687366485596
    7. '=' → logprob: -7.819687366485596
    8. '	       ' → logprob: -7.944687366485596
    9. ',' → logprob: -8.444687843322754
    10. '               ' → logprob: -9.194687843322754

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030593499541282654
    2. '	       ' → logprob: -6.503059387207031
    3. ' running' → logprob: -6.878059387207031
    4. '       ' → logprob: -8.128059387207031
    5. '```' → logprob: -9.753059387207031
    6. '		' → logprob: -9.878059387207031
    7. 'running' → logprob: -10.378059387207031
    8. ',' → logprob: -11.003059387207031
    9. '               ' → logprob: -11.503059387207031
    10. '<|end|>' → logprob: -11.628059387207031

Token 264: ' running' (ID: 6788)
  Prédit: 'running'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'running' (adapté à ' running') → logprob: -0.10279751569032669
    2. ' running' → logprob: -2.352797508239746
    3. '       ' → logprob: -6.602797508239746
    4. '           ' → logprob: -6.727797508239746
    5. '   ' → logprob: -11.102797508239746
    6. '_running' → logprob: -11.852797508239746
    7. '.running' → logprob: -12.352797508239746
    8. 'Running' → logprob: -13.352797508239746
    9. '```' → logprob: -13.602797508239746
    10. '               ' → logprob: -13.852797508239746

Token 265: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0020709214732050896
    2. ' -=' → logprob: -6.252070903778076
    3. '-' → logprob: -8.877071380615234
    4. '%=' → logprob: -13.002071380615234
    5. '=' → logprob: -14.752071380615234
    6. ' -' → logprob: -16.627071380615234
    7. '+=' → logprob: -16.877071380615234
    8. ' %=' → logprob: -19.502071380615234
    9. ' ' → logprob: -19.627071380615234
    10. '%-' → logprob: -20.252071380615234

Token 266: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.704273118884885e-07
    2. ' mod' → logprob: -14.250000953674316
    3. '(mod' → logprob: -19.25
    4. '	mod' → logprob: -20.375
    5. 'MOD' → logprob: -23.125
    6. 'moder' → logprob: -23.125
    7. 'modal' → logprob: -23.5
    8. '```' → logprob: -23.875
    9. '.mod' → logprob: -24.25
    10. '           ' → logprob: -25.0

Token 267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.968934758333489e-05
    2. '   ' → logprob: -10.250069618225098
    3. '<|end|>' → logprob: -11.000069618225098
    4. ',' → logprob: -11.875069618225098
    5. '           ' → logprob: -12.625069618225098
    6. '        
' → logprob: -13.125069618225098
    7. ')' → logprob: -13.625069618225098
    8. '      ' → logprob: -13.875069618225098
    9. '	' → logprob: -14.750069618225098
    10. '```' → logprob: -15.000069618225098

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004979863297194242
    2. 'DP' → logprob: -8.875497817993164
    3. '	' → logprob: -9.000497817993164
    4. '   ' → logprob: -9.750497817993164
    5. ' DP' → logprob: -10.125497817993164
    6. '<|end|>' → logprob: -10.250497817993164
    7. ')' → logprob: -10.500497817993164
    8. ',' → logprob: -10.750497817993164
    9. '```' → logprob: -11.250497817993164
    10. ' ' → logprob: -11.625497817993164

Token 269: ' DP' (ID: 51992)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005426085088402033
    2. '   ' → logprob: -5.505425930023193
    3. 'DP' (adapté à ' DP') → logprob: -6.630425930023193
    4. '           ' → logprob: -11.005426406860352
    5. ' DP' → logprob: -12.130426406860352
    6. '	' → logprob: -14.005426406860352
    7. '      ' → logprob: -14.255426406860352
    8. '	   ' → logprob: -14.380426406860352
    9. '     ' → logprob: -14.630426406860352
    10. ' ' → logprob: -14.755426406860352

Token 270: '[level' (ID: 164831)
  Prédit: '[level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[level' → logprob: -6.704273118884885e-07
    2. '[line' → logprob: -15.125000953674316
    3. '[layer' → logprob: -15.500000953674316
    4. '[' → logprob: -16.0
    5. '[state' → logprob: -18.0
    6. '[size' → logprob: -18.125
    7. '```' → logprob: -18.625
    8. '(level' → logprob: -19.125
    9. '	level' → logprob: -19.25
    10. 'level' → logprob: -19.25

Token 271: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007528312969952822
    2. '[' → logprob: -5.132528305053711
    3. ']' → logprob: -6.757528305053711
    4. ')[' → logprob: -8.632528305053711
    5. ' ][' → logprob: -9.382528305053711
    6. '[m' → logprob: -9.757528305053711
    7. '   ' → logprob: -10.507528305053711
    8. '[mem' → logprob: -10.632528305053711
    9. '       ' → logprob: -11.882528305053711
    10. '```' → logprob: -12.007528305053711

Token 272: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -5.3358446166384965e-05
    2. ' mm' → logprob: -10.375053405761719
    3. 'kk' → logprob: -11.625053405761719
    4. '-mm' → logprob: -12.375053405761719
    5. '(mm' → logprob: -12.625053405761719
    6. '   ' → logprob: -12.750053405761719
    7. '_mm' → logprob: -14.000053405761719
    8. '1' → logprob: -14.125053405761719
    9. 'mmm' → logprob: -14.750053405761719
    10. '(' → logprob: -15.250053405761719

Token 273: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015158153837546706
    2. '=' → logprob: -6.751515865325928
    3. ']=' → logprob: -8.25151538848877
    4. ']+=' → logprob: -9.75151538848877
    5. ' ]' → logprob: -11.12651538848877
    6. ' =' → logprob: -11.75151538848877
    7. '+=' → logprob: -13.00151538848877
    8. ' +=' → logprob: -14.50151538848877
    9. ']+' → logprob: -15.12651538848877
    10. '[' → logprob: -15.37651538848877

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01157575286924839
    2. ' =' → logprob: -4.511575698852539
    3. '+=' → logprob: -7.636575698852539
    4. ' +=' → logprob: -10.011575698852539
    5. '[' → logprob: -17.13657569885254
    6. '-=' → logprob: -17.13657569885254
    7. '.=' → logprob: -17.13657569885254
    8. '%=' → logprob: -17.26157569885254
    9. ']+=' → logprob: -17.38657569885254
    10. ' ' → logprob: -17.38657569885254

Token 275: ' (' (ID: 350)
  Prédit: 'running'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'running' → logprob: -0.018573159351944923
    2. ' running' → logprob: -4.01857328414917
    3. '(r' → logprob: -8.143572807312012
    4. 'r' → logprob: -9.268572807312012
    5. 'run' → logprob: -11.143572807312012
    6. ' (' → logprob: -11.268572807312012
    7. '(' → logprob: -12.268572807312012
    8. '   ' → logprob: -13.518572807312012
    9. ' ' → logprob: -13.893572807312012
    10. ' ' → logprob: -14.643572807312012

Token 276: 'running' (ID: 61557)
  Prédit: 'running'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'running' → logprob: -0.24243862926959991
    2. 'DP' → logprob: -1.6174386739730835
    3. ' running' → logprob: -4.492438793182373
    4. ' DP' → logprob: -5.867438793182373
    5. '   ' → logprob: -7.117438793182373
    6. '(D' → logprob: -7.742438793182373
    7. 'Num' → logprob: -7.867438793182373
    8. 'r' → logprob: -7.992438793182373
    9. '(r' → logprob: -8.617438316345215
    10. '(' → logprob: -8.742438316345215

Token 277: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2180178463459015
    2. ' +' → logprob: -2.343017816543579
    3. '*' → logprob: -2.843017816543579
    4. ')' → logprob: -3.968017816543579
    5. '+' → logprob: -4.218018054962158
    6. ' )' → logprob: -5.218018054962158
    7. ')%' → logprob: -6.968018054962158
    8. '%' → logprob: -7.468018054962158
    9. ' %' → logprob: -7.718018054962158
    10. ' -' → logprob: -7.968018054962158

Token 278: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.018374338746070862
    2. 'mm' → logprob: -4.143374443054199
    3. 'DP' → logprob: -6.893374443054199
    4. ' Num' → logprob: -7.393374443054199
    5. 'num' → logprob: -8.6433744430542
    6. '(' → logprob: -9.1433744430542
    7. 'ln' → logprob: -9.1433744430542
    8. '   ' → logprob: -9.6433744430542
    9. 'MM' → logprob: -10.2683744430542
    10. '-' → logprob: -10.8933744430542

Token 279: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002649119414854795
    2. '[' → logprob: -8.250265121459961
    3. 'mm' → logprob: -13.750265121459961
    4. '	' → logprob: -14.125265121459961
    5. '[m' → logprob: -14.250265121459961
    6. '   ' → logprob: -15.625265121459961
    7. '-mm' → logprob: -15.750265121459961
    8. '(mm' → logprob: -16.00026512145996
    9. '_mm' → logprob: -16.12526512145996
    10. '```' → logprob: -16.12526512145996

Token 280: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.00016194197814911604
    2. ' mm' → logprob: -9.375162124633789
    3. '-mm' → logprob: -9.625162124633789
    4. '(mm' → logprob: -12.625162124633789
    5. ':mm' → logprob: -13.375162124633789
    6. 'm' → logprob: -13.750162124633789
    7. '   ' → logprob: -14.000162124633789
    8. '_mm' → logprob: -14.125162124633789
    9. '[' → logprob: -14.375162124633789
    10. 'kk' → logprob: -14.375162124633789

Token 281: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020168805494904518
    2. ')%' → logprob: -4.520168781280518
    3. ' )' → logprob: -4.895168781280518
    4. '])' → logprob: -6.770168781280518
    5. ']' → logprob: -8.895169258117676
    6. '-' → logprob: -9.520169258117676
    7. '   ' → logprob: -9.770169258117676
    8. '+' → logprob: -10.270169258117676
    9. '[' → logprob: -10.270169258117676
    10. '[j' → logprob: -11.145169258117676

Token 282: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03376522287726402
    2. ' %' → logprob: -3.4087653160095215
    3. ')%' → logprob: -9.408764839172363
    4. ')' → logprob: -10.783764839172363
    5. ' %=' → logprob: -12.158764839172363
    6. '
' → logprob: -12.783764839172363
    7. '%
' → logprob: -12.783764839172363
    8. '%=' → logprob: -13.283764839172363
    9. ' ' → logprob: -13.783764839172363
    10. '<|end|>' → logprob: -14.908764839172363

Token 283: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.935296834039036e-06
    2. ' mod' → logprob: -12.75000286102295
    3. '(mod' → logprob: -17.875003814697266
    4. '	mod' → logprob: -22.125003814697266
    5. '100' → logprob: -22.500003814697266
    6. '
' → logprob: -22.750003814697266
    7. '```' → logprob: -22.875003814697266
    8. '   ' → logprob: -23.625003814697266
    9. 'MOD' → logprob: -24.875003814697266
    10. 'moder' → logprob: -25.250003814697266

Token 284: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.473599910736084
    2. '\n' → logprob: -1.473599910736084
    3. ')' → logprob: -2.473599910736084
    4. '<|end|>' → logprob: -3.348599910736084
    5. '[' → logprob: -5.473599910736084
    6. '   ' → logprob: -5.598599910736084
    7. '    
' → logprob: -5.848599910736084
    8. ' 
' → logprob: -5.973599910736084
    9. ']' → logprob: -5.973599910736084
    10. 'return' → logprob: -6.348599910736084

Token 286: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2122374325990677
    2. '<|end|>' → logprob: -1.7122374773025513
    3. '```' → logprob: -5.337237358093262
    4. '+' → logprob: -6.462237358093262
    5. ']' → logprob: -6.837237358093262
    6. '#' → logprob: -7.462237358093262
    7. '...' → logprob: -7.962237358093262
    8. '(' → logprob: -7.962237358093262
    9. '
' → logprob: -8.087237358093262
    10. '_' → logprob: -8.587237358093262

Token 287: ' comp' (ID: 1050)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4568312466144562
    2. '-' → logprob: -1.9568312168121338
    3. '=' → logprob: -3.206831216812134
    4. ')' → logprob: -3.206831216812134
    5. '[' → logprob: -3.706831216812134
    6. '#' → logprob: -3.831831216812134
    7. '```' → logprob: -4.081831455230713
    8. ' ' → logprob: -4.206831455230713
    9. ' ]' → logprob: -4.831831455230713
    10. '.' → logprob: -4.956831455230713

Token 288: 'resse' (ID: 15994)
  Prédit: 'lete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lete' → logprob: -0.27623438835144043
    2. 'ute' → logprob: -1.6512343883514404
    3. '[]' → logprob: -4.6512346267700195
    4. 'ose' → logprob: -5.1512346267700195
    5. 'lé' → logprob: -5.1512346267700195
    6. '*' → logprob: -5.4012346267700195
    7. '[' → logprob: -5.4012346267700195
    8. '[-' → logprob: -5.5262346267700195
    9. '=' → logprob: -5.7762346267700195
    10. '[i' → logprob: -6.4012346267700195

Token 289: ' vers' (ID: 3640)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' l' (ID: 305)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.6127173900604248
    2. '-mm' → logprob: -0.9877173900604248
    3. ' -' → logprob: -3.612717390060425
    4. '-le' → logprob: -3.737717390060425
    5. '-m' → logprob: -4.362717628479004
    6. '-MM' → logprob: -5.362717628479004
    7. '-' → logprob: -5.487717628479004
    8. '-left' → logprob: -5.487717628479004
    9. '0' → logprob: -6.487717628479004
    10. '-end' → logprob: -6.862717628479004

Token 291: ''ar' (ID: 54307)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6008007526397705
    2. 'e' → logprob: -1.9758007526397705
    3. 'fin' → logprob: -2.3508007526397705
    4. 'eft' → logprob: -2.7258007526397705
    5. 'right' → logprob: -3.1008007526397705
    6. '-' → logprob: -3.6008007526397705
    7. 'end' → logprob: -4.225800514221191
    8. 'a' → logprob: -4.600800514221191
    9. '```' → logprob: -5.350800514221191
    10. '0' → logprob: -5.475800514221191

Token 292: 'rière' (ID: 34908)
  Prédit: 'rière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rière' → logprob: -0.5193887948989868
    2. 'r' → logprob: -1.1443887948989868
    3. 'ri' → logprob: -2.8943886756896973
    4. 'ière' → logprob: -4.644388675689697
    5. 'rie' → logprob: -5.394388675689697
    6. '```' → logprob: -5.394388675689697
    7. 'rive' → logprob: -5.644388675689697
    8. 'riere' → logprob: -6.019388675689697
    9. 'i' → logprob: -6.519388675689697
    10. 'ray' → logprob: -7.144388675689697

Token 293: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: 'res' (ID: 430)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.2575909495353699
    2. ' =' → logprob: -1.7575910091400146
    3. 'ults' → logprob: -3.5075910091400146
    4. '=' → logprob: -4.2575907707214355
    5. 'ultat' → logprob: -5.3825907707214355
    6. '[' → logprob: -6.1325907707214355
    7. 'ULT' → logprob: -6.1325907707214355
    8. 'ault' → logprob: -7.0075907707214355
    9. ' ' → logprob: -8.757591247558594
    10. 'ulta' → logprob: -9.132591247558594

Token 296: ' ' (ID: 220)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.3870397210121155
    2. ' DP' → logprob: -1.1370396614074707
    3. '(' → logprob: -10.137040138244629
    4. '0' → logprob: -10.137040138244629
    5. ' (' → logprob: -10.137040138244629
    6. '(D' → logprob: -10.262040138244629
    7. ' ' → logprob: -12.387040138244629
    8. 'sum' → logprob: -12.887040138244629
    9. '_DP' → logprob: -12.887040138244629
    10. ' sum' → logprob: -13.137040138244629

Token 297: '0' (ID: 15)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0004932218580506742
    2. 'sum' → logprob: -8.500493049621582
    3. '(D' → logprob: -8.750493049621582
    4. ' DP' → logprob: -9.750493049621582
    5. '(' → logprob: -9.875493049621582
    6. '0' → logprob: -11.500493049621582
    7. '(sum' → logprob: -11.875493049621582
    8. ' (' → logprob: -13.625493049621582
    9. 'Dp' → logprob: -14.500493049621582
    10. 'dp' → logprob: -14.875493049621582

Token 298: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.77627644513268e-06
    2. ' for' → logprob: -11.750008583068848
    3. '```' → logprob: -14.125008583068848
    4. '<|end|>' → logprob: -16.875009536743164
    5. '
' → logprob: -17.125009536743164
    6. 'res' → logprob: -17.625009536743164
    7. '	for' → logprob: -18.375009536743164
    8. ')' → logprob: -19.000009536743164
    9. '``' → logprob: -19.250009536743164
    10. '[' → logprob: -21.250009536743164

Token 299: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.625
    3. '```' → logprob: -17.875
    4. 'res' → logprob: -19.125
    5. '	for' → logprob: -21.125
    6. 'print' → logprob: -22.5
    7. 'i' → logprob: -23.25
    8. '
' → logprob: -23.5
    9. '``' → logprob: -23.625
    10. 'For' → logprob: -23.625

Token 300: ' thing' (ID: 4435)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04473792016506195
    2. 'mm' → logprob: -3.4197378158569336
    3. ' i' → logprob: -5.419737815856934
    4. 'x' → logprob: -6.169737815856934
    5. 'val' → logprob: -6.794737815856934
    6. 'ii' → logprob: -6.919737815856934
    7. 'level' → logprob: -7.044737815856934
    8. 'idx' → logprob: -7.919737815856934
    9. ' mm' → logprob: -8.044737815856934
    10. 'xx' → logprob: -8.669737815856934

Token 301: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31352537870407104
    2. 'in' → logprob: -1.3135254383087158
    3. ',' → logprob: -8.688525199890137
    4. 'i' → logprob: -10.688525199890137
    5. ' ' → logprob: -11.063525199890137
    6. 'idx' → logprob: -11.438525199890137
    7. 'index' → logprob: -11.688525199890137
    8. '   ' → logprob: -12.313525199890137
    9. '```' → logprob: -12.438525199890137
    10. ' i' → logprob: -12.688525199890137

Token 302: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.005300873890519142
    2. ' DP' → logprob: -5.255300998687744
    3. 'range' → logprob: -10.005300521850586
    4. ' range' → logprob: -10.755300521850586
    5. 'D' → logprob: -15.505300521850586
    6. '_DP' → logprob: -16.005300521850586
    7. ' ' → logprob: -16.255300521850586
    8. 're' → logprob: -16.630300521850586
    9. 'dp' → logprob: -17.505300521850586
    10. '   ' → logprob: -17.630300521850586

Token 303: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.003780720056965947
    2. '[' → logprob: -5.628780841827393
    3. '[k' → logprob: -8.628780364990234
    4. '[K' → logprob: -14.753780364990234
    5. '[level' → logprob: -14.753780364990234
    6. '0' → logprob: -15.003780364990234
    7. '-' → logprob: -15.128780364990234
    8. '   ' → logprob: -16.503780364990234
    9. '][-' → logprob: -17.378780364990234
    10. '[
' → logprob: -17.503780364990234

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. '-' → logprob: -10.625027656555176
    3. '0' → logprob: -14.250027656555176
    4. '[-' → logprob: -14.375027656555176
    5. '```' → logprob: -14.625027656555176
    6. '[' → logprob: -14.875027656555176
    7. '
' → logprob: -15.500027656555176
    8. ' ' → logprob: -15.625027656555176
    9. '2' → logprob: -15.937527656555176
    10. '(' → logprob: -16.37502670288086

Token 305: '][' (ID: 2696)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6004036664962769
    2. ':' → logprob: -0.8504036664962769
    3. ']:
' → logprob: -4.350403785705566
    4. '[' → logprob: -5.350403785705566
    5. ':
' → logprob: -5.350403785705566
    6. '>:' → logprob: -7.225403785705566
    7. '):' → logprob: -7.975403785705566
    8. '[:-' → logprob: -8.975403785705566
    9. '):
' → logprob: -9.225403785705566
    10. '[:' → logprob: -9.350403785705566

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025657136575318873
    2. 'range' → logprob: -9.125256538391113
    3. ':' → logprob: -9.250256538391113
    4. '::-' → logprob: -10.875256538391113
    5. ':]' → logprob: -11.500256538391113
    6. '-' → logprob: -11.750256538391113
    7. '
' → logprob: -12.625256538391113
    8. ':-' → logprob: -13.000256538391113
    9. ']:' → logprob: -13.000256538391113
    10. '::' → logprob: -13.625256538391113

Token 307: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.061054359131958e-06
    2. ':]' → logprob: -11.875007629394531
    3. ']:' → logprob: -14.250007629394531
    4. ':-' → logprob: -16.00000762939453
    5. '_:' → logprob: -16.12500762939453
    6. '::' → logprob: -16.75000762939453
    7. ':].' → logprob: -17.00000762939453
    8. ':],' → logprob: -17.25000762939453
    9. ' :' → logprob: -17.50000762939453
    10. '+:' → logprob: -17.50000762939453

Token 308: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.012320567853748798
    2. ']:' → logprob: -4.512320518493652
    3. ':
' → logprob: -6.887320518493652
    4. ':' → logprob: -8.387320518493652
    5. ']:
' → logprob: -11.887320518493652
    6. '   ' → logprob: -12.137320518493652
    7. ']' → logprob: -12.512320518493652
    8. '):
' → logprob: -12.637320518493652
    9. '():
' → logprob: -13.512320518493652
    10. ']:

' → logprob: -14.387320518493652

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03029857762157917
    2. ' res' → logprob: -3.5302984714508057
    3. 'res' → logprob: -7.655298709869385
    4. '	res' → logprob: -10.655298233032227
    5. '```' → logprob: -11.280298233032227
    6. '   ' → logprob: -11.405298233032227
    7. '<|end|>' → logprob: -12.030298233032227
    8. '    
' → logprob: -12.030298233032227
    9. '
' → logprob: -12.905298233032227
    10. ',' → logprob: -13.155298233032227

Token 310: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5839399695396423
    2. ' res' → logprob: -0.8339399695396423
    3. '   ' → logprob: -4.833940029144287
    4. '	res' → logprob: -11.583939552307129
    5. '```' → logprob: -12.708939552307129
    6. '(res' → logprob: -15.083939552307129
    7. '``' → logprob: -15.458939552307129
    8. '_res' → logprob: -15.458939552307129
    9. ' ' → logprob: -15.958939552307129
    10. '  ' → logprob: -16.458940505981445

Token 311: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006277294596657157
    2. ' +=' → logprob: -7.500627517700195
    3. '=' → logprob: -9.625627517700195
    4. ']+=' → logprob: -12.375627517700195
    5. '+=(' → logprob: -13.250627517700195
    6. '+' → logprob: -13.500627517700195
    7. '%=' → logprob: -14.000627517700195
    8. '   ' → logprob: -15.625627517700195
    9. '+='' → logprob: -15.875627517700195
    10. ' =' → logprob: -16.000627517700195

Token 312: ' thing' (ID: 4435)
  Prédit: 'thing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thing' → logprob: -0.004078401252627373
    2. ' thing' → logprob: -5.504078388214111
    3. 'Thing' → logprob: -18.879077911376953
    4. '(' → logprob: -19.004077911376953
    5. 'things' → logprob: -19.129077911376953
    6. 'res' → logprob: -19.629077911376953
    7. '```' → logprob: -20.254077911376953
    8. 'something' → logprob: -20.879077911376953
    9. '   ' → logprob: -20.879077911376953
    10. 'THING' → logprob: -21.254077911376953

Token 313: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0936608836054802
    2. ' %' → logprob: -2.718660831451416
    3. ' %=' → logprob: -3.968660831451416
    4. '
' → logprob: -5.968660831451416
    5. ' res' → logprob: -7.718660831451416
    6. '<|end|>' → logprob: -7.718660831451416
    7. ' 
' → logprob: -8.093661308288574
    8. '%=' → logprob: -8.093661308288574
    9. 'res' → logprob: -8.343661308288574
    10. '   ' → logprob: -9.843661308288574

Token 314: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.010636030696332455
    2. ' res' → logprob: -4.635635852813721
    3. '```' → logprob: -7.510635852813721
    4. 'if' → logprob: -8.635636329650879
    5. '%' → logprob: -9.010636329650879
    6. ' 
' → logprob: -11.635636329650879
    7. '
' → logprob: -12.010636329650879
    8. ' if' → logprob: -12.510636329650879
    9. 'mod' → logprob: -13.260636329650879
    10. '``' → logprob: -13.260636329650879

Token 315: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1450100690126419
    2. ' if' → logprob: -2.395009994506836
    3. 'res' (adapté à ' res') → logprob: -3.145009994506836
    4. ' res' → logprob: -7.270009994506836
    5. '   ' → logprob: -10.520009994506836
    6. '```' → logprob: -11.020009994506836
    7. ' 
' → logprob: -11.895009994506836
    8. '    
' → logprob: -14.645009994506836
    9. '	if' → logprob: -15.395009994506836
    10. '
' → logprob: -15.395009994506836

Token 316: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.14429284632205963
    2. '%' → logprob: -2.3942928314208984
    3. ' %=' → logprob: -3.1442928314208984
    4. ' %' → logprob: -11.144292831420898
    5. '=' → logprob: -11.644292831420898
    6. '```' → logprob: -13.144292831420898
    7. ')' → logprob: -13.394292831420898
    8. '   ' → logprob: -13.644292831420898
    9. ' ' → logprob: -13.644292831420898
    10. ')%' → logprob: -14.769292831420898

Token 317: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.8624639324116288e-06
    2. ' mod' → logprob: -13.250001907348633
    3. '(mod' → logprob: -19.625001907348633
    4. '100' → logprob: -21.875001907348633
    5. '	mod' → logprob: -21.875001907348633
    6. '```' → logprob: -23.875001907348633
    7. 'MOD' → logprob: -24.625001907348633
    8. 'mods' → logprob: -25.375001907348633
    9. ' мод' → logprob: -25.750001907348633
    10. '_mod' → logprob: -26.125001907348633

Token 318: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.750000953674316
    3. ' print' → logprob: -16.5
    4. 'return' → logprob: -18.875
    5. '#print' → logprob: -19.25
    6. 'pr' → logprob: -20.25
    7. '
' → logprob: -20.375
    8. '#' → logprob: -20.5
    9. '``' → logprob: -21.375
    10. '  
' → logprob: -22.25

Token 319: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. ' print' → logprob: -17.625
    4. 'pr' → logprob: -19.375
    5. '#print' → logprob: -20.875
    6. 'prin' → logprob: -21.625
    7. '-print' → logprob: -23.0
    8. '#' → logprob: -23.25
    9. '(print' → logprob: -23.375
    10. 'return' → logprob: -23.625

Token 320: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.014171971939504147
    2. '(' → logprob: -4.264172077178955
    3. 'res' → logprob: -12.514171600341797
    4. '()' → logprob: -13.139171600341797
    5. ' (' → logprob: -13.889171600341797
    6. '(
' → logprob: -14.389171600341797
    7. '(f' → logprob: -14.764171600341797
    8. '('' → logprob: -15.389171600341797
    9. '(result' → logprob: -16.014171600341797
    10. '((' → logprob: -16.264171600341797

Token 321: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -10.625028610229492
    3. '()' → logprob: -12.875028610229492
    4. ' )' → logprob: -14.000028610229492
    5. ')`' → logprob: -15.125028610229492
    6. '))' → logprob: -15.250028610229492
    7. '())' → logprob: -15.750028610229492
    8. '#' → logprob: -15.875028610229492
    9. ')
' → logprob: -15.875028610229492
    10. '*' → logprob: -17.000028610229492

Token 322: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017961101606488228
    2. '<|end|>' → logprob: -4.392961025238037
    3. ']' → logprob: -6.392961025238037
    4. '[' → logprob: -6.517961025238037
    5. '```' → logprob: -7.142961025238037
    6. '#' → logprob: -7.267961025238037
    7. '}' → logprob: -7.392961025238037
    8. '
' → logprob: -10.017961502075195
    9. '<|end|>' → logprob: -10.767961502075195
    10. '\' → logprob: -10.892961502075195

Token 323: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04413313791155815
    2. '<|end|>' → logprob: -3.169133186340332
    3. '```' → logprob: -7.419133186340332
    4. '#' → logprob: -8.169133186340332
    5. '<|end|>' → logprob: -9.544133186340332
    6. '}' → logprob: -9.919133186340332
    7. '
' → logprob: -9.919133186340332
    8. '[' → logprob: -10.794133186340332
    9. ']' → logprob: -11.044133186340332
    10. ' )' → logprob: -12.169133186340332

Token 324: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.356234610080719
    2. '<|end|>' → logprob: -1.2312345504760742
    3. '```' → logprob: -5.606234550476074
    4. '
' → logprob: -6.231234550476074
    5. '#' → logprob: -7.231234550476074
    6. '}' → logprob: -7.856234550476074
    7. '<|end|>' → logprob: -8.106234550476074
    8. ']' → logprob: -8.356234550476074
    9. ' ' → logprob: -8.981234550476074
    10. '\n' → logprob: -9.231234550476074

Token 325: ' esp' (ID: 7461)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: 'ère' (ID: 4346)
  Prédit: 'érant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érant' → logprob: -1.300347089767456
    2. 'ère' → logprob: -1.675347089767456
    3. 'rée' → logprob: -1.675347089767456
    4. 'r' → logprob: -2.300347089767456
    5. 'éré' → logprob: -2.675347089767456
    6. 'érance' → logprob: -3.050347089767456
    7. 'ré' → logprob: -3.550347089767456
    8. 'oir' → logprob: -3.800347089767456
    9. 'érer' → logprob: -4.050347328186035
    10. 'érons' → logprob: -4.175347328186035

Token 327: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' ça' (ID: 13590)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8900354504585266
    2. 'cela' → logprob: -1.1400353908538818
    3. '#' → logprob: -2.640035390853882
    4. 'que' → logprob: -2.890035390853882
    5. 'ça' → logprob: -3.265035390853882
    6. 'ce' → logprob: -3.640035390853882
    7. 'tout' → logprob: -4.265035629272461
    8. 'la' → logprob: -4.515035629272461
    9. '<|end|>' → logprob: -4.640035629272461
    10. 'c' → logprob: -4.765035629272461

Token 329: ' marche' (ID: 58191)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.17983245849609375
    2. ' fonctionne' → logprob: -2.9298324584960938
    3. 'mar' → logprob: -3.1798324584960938
    4. 'don' → logprob: -4.054832458496094
    5. ' marche' → logprob: -4.179832458496094
    6. 'march' → logprob: -4.929832458496094
    7. 'aff' → logprob: -4.929832458496094
    8. 'f' → logprob: -6.179832458496094
    9. '   ' → logprob: -6.179832458496094
    10. 'print' → logprob: -6.304832458496094

Token 330: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7137091159820557
    2. '<|end|>' → logprob: -0.7137091159820557
    3. '```' → logprob: -5.088708877563477
    4. '#' → logprob: -5.588708877563477
    5. ']' → logprob: -5.713708877563477
    6. '}' → logprob: -5.963708877563477
    7. '[' → logprob: -6.463708877563477
    8. '
' → logprob: -6.463708877563477
    9. '<|end|>' → logprob: -6.963708877563477
    10. ' ' → logprob: -8.963708877563477

Token 331: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: ' logique' (ID: 115350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' un' (ID: 537)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.14433154463768005
    2. 'bien' → logprob: -3.019331455230713
    3. 'just' → logprob: -3.269331455230713
    4. 'bonne' → logprob: -3.644331455230713
    5. 'bon' → logprob: -4.894331455230713
    6. '#' → logprob: -5.519331455230713
    7. 'log' → logprob: -6.519331455230713
    8. ' correcte' → logprob: -6.519331455230713
    9. ' correct' → logprob: -6.644331455230713
    10. 'clair' → logprob: -6.894331455230713

Token 335: ' peu' (ID: 9235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2127428948879242
    2. 'pe' → logprob: -2.712742805480957
    3. 'correct' → logprob: -3.837742805480957
    4. 'log' → logprob: -3.962742805480957
    5. '#' → logprob: -4.962742805480957
    6. 'complete' → logprob: -4.962742805480957
    7. 'bon' → logprob: -5.337742805480957
    8. 'bonne' → logprob: -5.337742805480957
    9. 'multip' → logprob: -5.462742805480957
    10. 'bit' → logprob: -5.712742805480957

Token 336: ' lou' (ID: 26849)
  Prédit: 'clair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clair' → logprob: -0.4251088500022888
    2. 'correct' → logprob: -1.8001089096069336
    3. 'com' → logprob: -2.5501089096069336
    4. 'diff' → logprob: -3.1751089096069336
    5. 'b' → logprob: -3.8001089096069336
    6. '#' → logprob: -4.425108909606934
    7. 'cl' → logprob: -4.800108909606934
    8. 'bien' → logprob: -5.925108909606934
    9. 'complex' → logprob: -6.050108909606934
    10. '```' → logprob: -6.175108909606934

Token 337: 'fo' (ID: 1070)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9950847625732422
    2. 'che' → logprob: -1.8700847625732422
    3. 'd' → logprob: -2.120084762573242
    4. 'te' → logprob: -2.370084762573242
    5. 't' → logprob: -2.745084762573242
    6. 'ge' → logprob: -3.495084762573242
    7. 'se' → logprob: -3.620084762573242
    8. 'tte' → logprob: -3.870084762573242
    9. 'c' → logprob: -4.495084762573242
    10. 'ze' → logprob: -4.495084762573242

Token 338: 'que' (ID: 1126)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03081313520669937
    2. 't' → logprob: -4.155813217163086
    3. 'x' → logprob: -4.780813217163086
    4. ')' → logprob: -5.905813217163086
    5. 'te' → logprob: -7.030813217163086
    6. 'y' → logprob: -7.280813217163086
    7. 'xe' → logprob: -7.905813217163086
    8. 'ie' → logprob: -8.030813217163086
    9. '!' → logprob: -8.655813217163086
    10. 'n' → logprob: -8.780813217163086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 336
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 107
Tokens correctement prédits (top 10): 202
Précision stricte (1ère position): 30.95%
Précision adaptée (1ère position): 31.85%
Précision (top 10): 60.12%
================================================================================
