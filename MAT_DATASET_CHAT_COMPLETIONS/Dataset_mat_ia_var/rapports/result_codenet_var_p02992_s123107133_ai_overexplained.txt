================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition d'une constante mod représentant un grand nombre premier, utilisé pour prendre les résultats "modulo" cette valeur afin d'éviter le dépassement d'entier.
mod = 1000000007

# Lecture de deux entiers depuis l'entrée standard séparés par un espace, assignés à n et k respectivement.
# 'map' applique int à chaque élément produit par 'input().split()', convertissant les chaînes en entiers.
n, k = map(int, input().split())

# Calcul de la racine carrée entière de n, puis conversion explicite en entier pour s'assurer que la variable s est de type int.
s = int(n ** 0.5)

# Création d'une liste 'Num' remplie de zéros, de longueur s+1. Cette liste va stocker certains valeurs intermédiaires.
Num = [0] * (s + 1)

# Boucle for allant de 's' jusqu'à 1 (inclus), en décrémentant de 1 à chaque itération (marche arrière).
for i in range(s, 0, -1):
    # L'élément à l'indice 'i' de la liste 'Num' est assigné à la valeur 'i' lui-même.
    Num[i] = i
    # Ajoute à la fin de la liste Num la valeur entière de n divisé par i (division entière)
    Num.append(n // i)

# La variable 'l' reçoit la longueur actuelle de la liste 'Num', qui est maintenant plus grande que s+1.
l = len(Num)

# Boucle for qui commence à l'indice 1 jusqu'à l-1 inclus (car range s'arrête avant l).
for i in range(1, l):
    # L'élément de Num en partant de la fin (-i) est diminué par la valeur précédente Num[-i-1].
    # Cela met à jour Num pour représenter la différence cumulée entre les éléments successifs.
    Num[-i] = Num[-i] - Num[-i - 1]

# Création d'une nouvelle liste 'DP' (tableau dynamique), une liste à deux dimensions de taille k * l, initialisée à zéro.
# Chaque élément de 'DP' est une sous-liste contenant 'l' zéros.
DP = [[0] * l for _ in range(k)]

# Affectation de la première ligne de 'DP' à être une copie de Num. Cette opération se fait pour ne pas lier DP[0] et Num.
DP[0] = Num[:]

# Boucle principale dynamique pour remplir tout DP sauf la première ligne.
for i in range(1, k):
    # Initialisation d'une variable temporaire à zéro, qui servira à stocker des accumulations partielles.
    tmp = 0
    # Parcours les indices de 1 à l-1 inclus. Notez que DP et Num utilisent l comme taille.
    for j in range(1, l):
        # Ajoute à tmp la valeur de DP à l'étape précédente (i-1) pour le même indice j.
        tmp += DP[i - 1][j]
        # Fait un modulo mod pour rester dans la plage des entiers acceptables.
        tmp %= mod
        # Met à jour la valeur de DP à la ligne courante (i) et à l'indice '-j' (partant de la fin de la liste) 
        # Multipliant tmp par Num[-j], avec une réduction modulo mod.
        DP[i][-j] = (tmp * Num[-j]) % mod

# Initialisation de la variable de résultat final à zéro.
ans = 0

# Parcourt les éléments de la dernière ligne du tableau DP (DP[-1]), sauf le premier élément ([1:])
for i in DP[-1][1:]:
    # Ajoute chaque élément à la variable de résultat ans.
    ans += i
    # Prend le résultat modulo mod pour éviter le dépassement.
    ans %= mod

# Affiche la réponse finale, qui est le résultat du calcul.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.20061489939689636
    2. 'ition' → logprob: -1.8256149291992188
    3. 't' → logprob: -4.200614929199219
    4. 'it' → logprob: -6.700614929199219
    5. 'i' → logprob: -7.325614929199219
    6. 'tion' → logprob: -7.325614929199219
    7. 'er' → logprob: -7.825614929199219
    8. '#' → logprob: -7.950614929199219
    9. 'ation' → logprob: -7.950614929199219
    10. 'ine' → logprob: -8.575614929199219

Token 4: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23234444856643677
    2. ' :' → logprob: -2.982344388961792
    3. 's' → logprob: -3.107344388961792
    4. '_' → logprob: -3.482344388961792
    5. ' ' → logprob: -3.607344388961792
    6. '```' → logprob: -4.107344627380371
    7. ' d' → logprob: -4.857344627380371
    8. '=' → logprob: -4.982344627380371
    9. '(' → logprob: -5.107344627380371
    10. ' de' → logprob: -5.357344627380371

Token 5: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0670139417052269
    2. 'e' → logprob: -3.31701397895813
    3. '_' → logprob: -4.317013740539551
    4. ''un' → logprob: -4.567013740539551
    5. ''une' → logprob: -6.692013740539551
    6. 'é' → logprob: -6.942013740539551
    7. 'u' → logprob: -6.942013740539551
    8. ''espace' → logprob: -7.567013740539551
    9. ''e' → logprob: -8.31701374053955
    10. 'es' → logprob: -8.69201374053955

Token 6: ' constante' (ID: 49652)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.18871141970157623
    2. ' fonction' → logprob: -2.813711404800415
    3. 'classe' → logprob: -3.063711404800415
    4. ' ' → logprob: -3.813711404800415
    5. 'class' → logprob: -4.063711643218994
    6. 'function' → logprob: -4.688711643218994
    7. ' classe' → logprob: -5.313711643218994
    8. ' function' → logprob: -5.813711643218994
    9. 'fon' → logprob: -5.813711643218994
    10. 'f' → logprob: -6.563711643218994

Token 7: ' mod' (ID: 1812)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6509506106376648
    2. 'CON' → logprob: -0.7759506106376648
    3. '_' → logprob: -5.5259504318237305
    4. 'PI' → logprob: -5.6509504318237305
    5. 'E' → logprob: -5.9009504318237305
    6. 'CONST' → logprob: -6.0259504318237305
    7. 'CO' → logprob: -7.1509504318237305
    8. 'MY' → logprob: -7.4009504318237305
    9. 'const' → logprob: -7.9009504318237305
    10. 'A' → logprob: -7.9009504318237305

Token 8: ' représentant' (ID: 136122)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0134046077728271
    2. '=' → logprob: -1.2634046077728271
    3. ' =' → logprob: -2.138404607772827
    4. '_' → logprob: -2.513404607772827
    5. 'ule' → logprob: -3.138404607772827
    6. 'èle' → logprob: -3.638404607772827
    7. 'é' → logprob: -4.138404846191406
    8. '`' → logprob: -4.263404846191406
    9. 'u' → logprob: -4.638404846191406
    10. 'space' → logprob: -5.013404846191406

Token 9: ' un' (ID: 537)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.1427251100540161
    2. 'é' → logprob: -1.8927251100540161
    3. ' la' → logprob: -2.1427249908447266
    4. ' une' → logprob: -2.2677249908447266
    5. 'e' → logprob: -2.7677249908447266
    6. ' ' → logprob: -3.5177249908447266
    7. ' un' → logprob: -3.5177249908447266
    8. 'le' → logprob: -3.6427249908447266
    9. ' le' → logprob: -3.7677249908447266
    10. '_' → logprob: -3.8927249908447266

Token 10: ' grand' (ID: 6363)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.8060882687568665
    2. ' module' → logprob: -1.3060882091522217
    3. ' modulo' → logprob: -2.1810882091522217
    4. ' entier' → logprob: -2.6810882091522217
    5. ' ' → logprob: -4.056088447570801
    6. '_' → logprob: -4.306088447570801
    7. 'é' → logprob: -4.431088447570801
    8. 'e' → logprob: -4.806088447570801
    9. ' modulus' → logprob: -5.056088447570801
    10. ' space' → logprob: -5.306088447570801

Token 11: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.023654326796531677
    2. 'u' → logprob: -4.148654460906982
    3. ' e' → logprob: -5.898654460906982
    4. 'é' → logprob: -5.898654460906982
    5. 'ule' → logprob: -7.398654460906982
    6. ' espace' → logprob: -8.148653984069824
    7. '```' → logprob: -8.773653984069824
    8. ' ' → logprob: -8.773653984069824
    9. 'es' → logprob: -9.148653984069824
    10. ' u' → logprob: -9.273653984069824

Token 12: ' premier' (ID: 15506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4380229711532593
    2. '=' → logprob: -2.313023090362549
    3. '_mod' → logprob: -2.563023090362549
    4. ' =' → logprob: -2.938023090362549
    5. '_' → logprob: -3.813023090362549
    6. ':' → logprob: -3.813023090362549
    7. 'mod' → logprob: -4.188023090362549
    8. '`' → logprob: -4.313023090362549
    9. 'm' → logprob: -4.813023090362549
    10. 'M' → logprob: -4.938023090362549

Token 13: ',' (ID: 11)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1205607652664185
    2. 'mod' → logprob: -1.6205607652664185
    3. '_mod' → logprob: -2.245560646057129
    4. '_' → logprob: -2.245560646057129
    5. 'MOD' → logprob: -2.495560646057129
    6. '=' → logprob: -2.870560646057129
    7. 'M' → logprob: -3.495560646057129
    8. '_MOD' → logprob: -3.870560646057129
    9. '```' → logprob: -3.870560646057129
    10. ' =' → logprob: -4.370560646057129

Token 14: ' utilisé' (ID: 53138)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1561113595962524
    2. ' =' → logprob: -1.5311113595962524
    3. '_' → logprob: -2.031111240386963
    4. '```' → logprob: -2.156111240386963
    5. ',' → logprob: -2.906111240386963
    6. '=' → logprob: -3.156111240386963
    7. 's' → logprob: -4.031111240386963
    8. ' ```' → logprob: -4.281111240386963
    9. '`' → logprob: -4.531111240386963
    10. '\' → logprob: -4.656111240386963

Token 15: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04696756973862648
    2. '```' → logprob: -4.671967506408691
    3. '=' → logprob: -4.796967506408691
    4. '_mod' → logprob: -5.171967506408691
    5. ' ' → logprob: -5.546967506408691
    6. ' =' → logprob: -5.671967506408691
    7. '_a' → logprob: -5.796967506408691
    8. 's' → logprob: -6.421967506408691
    9. 'e' → logprob: -6.421967506408691
    10. ' _' → logprob: -7.046967506408691

Token 16: ' prendre' (ID: 24257)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4811774790287018
    2. ' la' → logprob: -2.231177568435669
    3. ' les' → logprob: -2.231177568435669
    4. 'le' → logprob: -3.231177568435669
    5. ' mod' → logprob: -3.481177568435669
    6. ' modulo' → logprob: -4.60617733001709
    7. ' l' → logprob: -4.73117733001709
    8. ' calcul' → logprob: -4.85617733001709
    9. 'mod' → logprob: -4.98117733001709
    10. 'les' → logprob: -5.10617733001709

Token 17: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25913432240486145
    2. ' ' → logprob: -1.634134292602539
    3. '_mod' → logprob: -4.759134292602539
    4. 'mod' → logprob: -5.134134292602539
    5. ' _' → logprob: -5.759134292602539
    6. ' modulo' → logprob: -6.259134292602539
    7. ' la' → logprob: -6.384134292602539
    8. ' ' → logprob: -6.509134292602539
    9. '```' → logprob: -6.759134292602539
    10. 's' → logprob: -6.884134292602539

Token 18: ' résultats' (ID: 48985)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2073900699615479
    2. 'mod' → logprob: -1.3323900699615479
    3. ' modulo' → logprob: -1.3323900699615479
    4. '_' → logprob: -3.082390069961548
    5. ' ' → logprob: -3.207390069961548
    6. ' mod' → logprob: -3.582390069961548
    7. ' modulus' → logprob: -3.957390069961548
    8. '%' → logprob: -4.457389831542969
    9. '  ' → logprob: -4.957389831542969
    10. ' modular' → logprob: -5.457389831542969

Token 19: ' "' (ID: 392)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20255319774150848
    2. '_mod' → logprob: -2.7025532722473145
    3. 'mod' → logprob: -3.5775532722473145
    4. ' modulo' → logprob: -3.9525532722473145
    5. ' =' → logprob: -4.5775532722473145
    6. ',' → logprob: -4.7025532722473145
    7. '=' → logprob: -4.9525532722473145
    8. ' ' → logprob: -4.9525532722473145
    9. '```' → logprob: -4.9525532722473145
    10. ' _' → logprob: -5.4525532722473145

Token 20: 'mod' (ID: 4847)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.013781814835965633
    2. 'mod' → logprob: -4.888782024383545
    3. ' mod' → logprob: -5.638782024383545
    4. '_mod' → logprob: -6.888782024383545
    5. ' modulus' → logprob: -7.388782024383545
    6. '%' → logprob: -8.388781547546387
    7. ' en' → logprob: -8.513781547546387
    8. ' modular' → logprob: -9.013781547546387
    9. '_' → logprob: -9.138781547546387
    10. ' à' → logprob: -9.263781547546387

Token 21: 'ulo' (ID: 5953)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.8525277376174927
    2. 'ulo' → logprob: -1.4775277376174927
    3. 'ulaire' → logprob: -1.7275277376174927
    4. ' ' → logprob: -3.352527618408203
    5. ' ' → logprob: -3.477527618408203
    6. 'èle' → logprob: -3.977527618408203
    7. 'ulé' → logprob: -4.852527618408203
    8. 'é' → logprob: -4.977527618408203
    9. '```' → logprob: -5.102527618408203
    10. 'u' → logprob: -5.352527618408203

Token 22: '"' (ID: 1)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7325496077537537
    2. ' ' → logprob: -1.3575496673583984
    3. ' space' → logprob: -2.6075496673583984
    4. ' a' → logprob: -3.1075496673583984
    5. 'ulaire' → logprob: -3.8575496673583984
    6. 'ulo' → logprob: -4.357549667358398
    7. ' )' → logprob: -4.482549667358398
    8. '```' → logprob: -4.857549667358398
    9. ' ' → logprob: -5.107549667358398
    10. ' `' → logprob: -5.107549667358398

Token 23: ' cette' (ID: 7696)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6350423097610474
    2. '=' → logprob: -1.8850423097610474
    3. ' =' → logprob: -2.385042190551758
    4. ':' → logprob: -3.010042190551758
    5. ' ' → logprob: -3.385042190551758
    6. '\' → logprob: -3.510042190551758
    7. '```' → logprob: -3.760042190551758
    8. ',' → logprob: -4.260042190551758
    9. ' :' → logprob: -4.510042190551758
    10. '_mod' → logprob: -4.635042190551758

Token 24: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4787805378437042
    2. '_' → logprob: -1.6037805080413818
    3. ' _' → logprob: -2.853780508041382
    4. '.' → logprob: -3.478780508041382
    5. '```' → logprob: -4.603780746459961
    6. ' ```' → logprob: -4.728780746459961
    7. ' space' → logprob: -4.853780746459961
    8. ' ' → logprob: -4.978780746459961
    9. ' constante' → logprob: -5.103780746459961
    10. ' espace' → logprob: -5.603780746459961

Token 25: ' afin' (ID: 22217)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8313438296318054
    2. ':' → logprob: -1.8313438892364502
    3. '=' → logprob: -1.8313438892364502
    4. '```' → logprob: -2.58134388923645
    5. ',' → logprob: -3.45634388923645
    6. 'm' → logprob: -3.58134388923645
    7. '\' → logprob: -3.70634388923645
    8. ' =' → logprob: -4.081343650817871
    9. '#' → logprob: -4.206343650817871
    10. ' ' → logprob: -4.456343650817871

Token 26: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7419887185096741
    2. ' ' → logprob: -0.7419887185096741
    3. 's' → logprob: -4.241988658905029
    4. ' ' → logprob: -4.241988658905029
    5. ' de' → logprob: -5.241988658905029
    6. ' d' → logprob: -5.491988658905029
    7. '  ' → logprob: -6.241988658905029
    8. ''' → logprob: -6.991988658905029
    9. ' _' → logprob: -7.116988658905029
    10. '=' → logprob: -7.491988658905029

Token 27: ''év' (ID: 114425)
  Prédit: ''év'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''év' → logprob: -0.03703130781650543
    2. ''assurer' → logprob: -3.787031412124634
    3. ''' → logprob: -4.912031173706055
    4. '’éviter' → logprob: -6.412031173706055
    5. 'e' → logprob: -6.537031173706055
    6. ''é' → logprob: -6.662031173706055
    7. ''obtenir' → logprob: -7.412031173706055
    8. ''avoir' → logprob: -8.037031173706055
    9. ''effect' → logprob: -8.037031173706055
    10. ''emp' → logprob: -8.287031173706055

Token 28: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.22695516049861908
    2. 'érer' → logprob: -1.7269551753997803
    3. 'é' → logprob: -4.476954936981201
    4. 'ér' → logprob: -5.726954936981201
    5. 'alu' → logprob: -6.726954936981201
    6. 'ite' → logprob: -6.726954936981201
    7. 'én' → logprob: -6.726954936981201
    8. 'er' → logprob: -7.101954936981201
    9. 'a' → logprob: -7.226954936981201
    10. 'ider' → logprob: -7.476954936981201

Token 29: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.45962807536125183
    2. ' ' → logprob: -1.9596281051635742
    3. ' des' → logprob: -2.334628105163574
    4. ' overflow' → logprob: -3.209628105163574
    5. ' l' → logprob: -3.459628105163574
    6. 's' → logprob: -4.084628105163574
    7. 'les' → logprob: -4.459628105163574
    8. ' ' → logprob: -4.584628105163574
    9. 'l' → logprob: -5.834628105163574
    10. ' toute' → logprob: -6.209628105163574

Token 30: ' dépasse' (ID: 165701)
  Prédit: ' déb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déb' → logprob: -0.3266332745552063
    2. ' dépasse' → logprob: -1.3266332149505615
    3. ' overflow' → logprob: -5.201633453369141
    4. 's' → logprob: -5.326633453369141
    5. ' ' → logprob: -7.326633453369141
    6. 'overflow' → logprob: -7.451633453369141
    7. 'dé' → logprob: -7.451633453369141
    8. ' risque' → logprob: -7.951633453369141
    9. 'd' → logprob: -8.45163345336914
    10. ' problème' → logprob: -8.70163345336914

Token 31: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0018301078816875815
    2. 'm' → logprob: -6.376830101013184
    3. 'ments' → logprob: -9.376830101013184
    4. '```' → logprob: -11.376830101013184
    5. '   ' → logprob: -11.876830101013184
    6. ' ment' → logprob: -11.876830101013184
    7. 'mentation' → logprob: -12.126830101013184
    8. '#' → logprob: -12.626830101013184
    9. 'ement' → logprob: -12.751830101013184
    10. '-' → logprob: -13.876830101013184

Token 32: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015293745324015617
    2. ' ' → logprob: -5.390293598175049
    3. ' _' → logprob: -5.640293598175049
    4. '=' → logprob: -6.015293598175049
    5. ' de' → logprob: -6.765293598175049
    6. 's' → logprob: -7.015293598175049
    7. ' =' → logprob: -7.640293598175049
    8. '_space' → logprob: -7.640293598175049
    9. 'u' → logprob: -8.390294075012207
    10. '\' → logprob: -8.515294075012207

Token 33: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.19615104794502258
    2. ''ent' → logprob: -1.8211510181427002
    3. 'e' → logprob: -4.946151256561279
    4. '’ent' → logprob: -5.071151256561279
    5. 'int' → logprob: -6.696151256561279
    6. ''int' → logprob: -7.821151256561279
    7. '```' → logprob: -8.571150779724121
    8. ''' → logprob: -8.696150779724121
    9. 'inte' → logprob: -9.196150779724121
    10. ''intégr' → logprob: -9.321150779724121

Token 34: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.03361688181757927
    2. 'iers' → logprob: -3.533616781234741
    3. 'ropy' → logprob: -6.15861701965332
    4. 'rop' → logprob: -6.65861701965332
    5. 'ière' → logprob: -9.03361701965332
    6. '```' → logprob: -9.65861701965332
    7. 'ité' → logprob: -9.78361701965332
    8. 'e' → logprob: -9.78361701965332
    9. 'ières' → logprob: -10.78361701965332
    10. 'er' → logprob: -10.90861701965332

Token 35: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9208146333694458
    2. ':' → logprob: -2.1708145141601562
    3. ',' → logprob: -2.4208145141601562
    4. '```' → logprob: -2.4208145141601562
    5. '=' → logprob: -2.5458145141601562
    6. '.' → logprob: -2.9208145141601562
    7. '_mod' → logprob: -3.4208145141601562
    8. '\' → logprob: -3.6708145141601562
    9. 's' → logprob: -3.6708145141601562
    10. '#' → logprob: -3.9208145141601562

Token 36: 'mod' (ID: 4847)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.951043963432312
    2. ':' → logprob: -1.451043963432312
    3. '=' → logprob: -2.2010440826416016
    4. 'mod' → logprob: -2.7010440826416016
    5. ',' → logprob: -3.4510440826416016
    6. '```' → logprob: -3.7010440826416016
    7. '_mod' → logprob: -3.8260440826416016
    8. 'm' → logprob: -3.9510440826416016
    9. 'MOD' → logprob: -3.9510440826416016
    10. '.' → logprob: -3.9510440826416016

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017548752948641777
    2. ' ' → logprob: -4.642548561096191
    3. '=' → logprob: -4.892548561096191
    4. '_' → logprob: -8.767548561096191
    5. 'space' → logprob: -10.892548561096191
    6. '  ' → logprob: -11.017548561096191
    7. '_space' → logprob: -11.142548561096191
    8. ' ,' → logprob: -12.017548561096191
    9. ' =)' → logprob: -12.017548561096191
    10. ',' → logprob: -12.142548561096191

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018638335168361664
    2. '10' → logprob: -4.0186381340026855
    3. '100' → logprob: -7.6436381340026855
    4. '1' → logprob: -12.268638610839844
    5. ' ' → logprob: -12.518638610839844
    6. ' int' → logprob: -14.893638610839844
    7. 'int' → logprob: -15.393638610839844
    8. ' (' → logprob: -16.268638610839844
    9. '998' → logprob: -17.268638610839844
    10. ' ' → logprob: -17.393638610839844

Token 39: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.027086099609732628
    2. '100' → logprob: -3.652086019515991
    3. ' ' → logprob: -7.27708625793457
    4. '1' → logprob: -9.40208625793457
    5. '998' → logprob: -12.02708625793457
    6. 'int' → logprob: -12.40208625793457
    7. '(' → logprob: -13.90208625793457
    8. '101' → logprob: -15.65208625793457
    9. '109' → logprob: -15.65208625793457
    10. ' ' → logprob: -16.15208625793457

Token 40: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -6.873571692267433e-05
    2. '9' → logprob: -9.750068664550781
    3. '09' → logprob: -12.250068664550781
    4. '_' → logprob: -13.000068664550781
    5. '07' → logprob: -14.250068664550781
    6. '009' → logprob: -14.250068664550781
    7. '007' → logprob: -14.625068664550781
    8. '003' → logprob: -14.875068664550781
    9. '+' → logprob: -15.000068664550781
    10. ' ' → logprob: -15.250068664550781

Token 41: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0016574477776885033
    2. '7' → logprob: -6.751657485961914
    3. '3' → logprob: -8.126657485961914
    4. '007' → logprob: -9.001657485961914
    5. '+' → logprob: -10.501657485961914
    6. '19' → logprob: -10.751657485961914
    7. '07' → logprob: -11.626657485961914
    8. '9' → logprob: -12.751657485961914
    9. '003' → logprob: -12.876657485961914
    10. '```' → logprob: -13.251657485961914

Token 42: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00011856284982059151
    2. '9' → logprob: -9.875118255615234
    3. '07' → logprob: -10.375118255615234
    4. '007' → logprob: -11.250118255615234
    5. '+' → logprob: -11.375118255615234
    6. '000' → logprob: -11.500118255615234
    7. ' ' → logprob: -14.625118255615234
    8. '19' → logprob: -14.750118255615234
    9. ' +' → logprob: -15.625118255615234
    10. '0' → logprob: -15.750118255615234

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6264249086380005
    2. '<|end|>' → logprob: -1.5014249086380005
    3. ' ' → logprob: -2.751424789428711
    4. '\n' → logprob: -3.001424789428711
    5. ' 
' → logprob: -3.376424789428711
    6. '\' → logprob: -3.626424789428711
    7. '' → logprob: -4.001424789428711
    8. ' 

' → logprob: -4.251424789428711
    9. '

' → logprob: -4.376424789428711
    10. '```' → logprob: -4.876424789428711

Token 44: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3821476101875305
    2. '\n' → logprob: -2.0071475505828857
    3. '<|end|>' → logprob: -2.5071475505828857
    4. '\' → logprob: -3.7571475505828857
    5. '*' → logprob: -4.007147789001465
    6. ' 
' → logprob: -4.257147789001465
    7. '#' → logprob: -4.257147789001465
    8. '' → logprob: -4.507147789001465
    9. '

' → logprob: -5.507147789001465
    10. '```' → logprob: -5.757147789001465

Token 45: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08187108486890793
    2. ' def' → logprob: -3.0818710327148438
    3. 'def' → logprob: -3.9568710327148438
    4. ' ```' → logprob: -5.456871032714844
    5. ' #' → logprob: -5.831871032714844
    6. ' `' → logprob: -6.206871032714844
    7. ' ' → logprob: -6.581871032714844
    8. ' )' → logprob: -8.206871032714844
    9. ' a' → logprob: -8.206871032714844
    10. ' ]' → logprob: -8.456871032714844

Token 46: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01987949013710022
    2. '_' → logprob: -4.519879341125488
    3. ' des' → logprob: -6.519879341125488
    4. 's' → logprob: -6.644879341125488
    5. ' )' → logprob: -6.894879341125488
    6. ' de' → logprob: -6.894879341125488
    7. ')' → logprob: -7.644879341125488
    8. '<|end|>' → logprob: -7.894879341125488
    9. ' d' → logprob: -8.019879341125488
    10. '<|end|>' → logprob: -8.269879341125488

Token 47: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4016790986061096
    2. ' l' → logprob: -1.4016790390014648
    3. 'l' → logprob: -3.401679039001465
    4. ' ' → logprob: -3.401679039001465
    5. 'la' → logprob: -4.901679039001465
    6. 's' → logprob: -5.776679039001465
    7. ' n' → logprob: -6.526679039001465
    8. ' input' → logprob: -6.651679039001465
    9. '_' → logprob: -6.776679039001465
    10. ' ' → logprob: -7.151679039001465

Token 48: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024210833944380283
    2. ' nombres' → logprob: -6.627420902252197
    3. ' ent' → logprob: -7.877420902252197
    4. ' integers' → logprob: -8.127421379089355
    5. '  ' → logprob: -9.002421379089355
    6. ' espaces' → logprob: -9.752421379089355
    7. ' variables' → logprob: -10.377421379089355
    8. ' valeurs' → logprob: -10.377421379089355
    9. ' ,' → logprob: -11.002421379089355
    10. ' lignes' → logprob: -11.127421379089355

Token 49: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.04842508211731911
    2. 'ières' → logprob: -3.9234251976013184
    3. 'r' → logprob: -4.298425197601318
    4. 't' → logprob: -5.048425197601318
    5. 'i' → logprob: -5.298425197601318
    6. 'ri' → logprob: -6.798425197601318
    7. 'ires' → logprob: -8.29842472076416
    8. '#' → logprob: -8.92342472076416
    9. 'rés' → logprob: -9.42342472076416
    10. 'ries' → logprob: -9.54842472076416

Token 50: ' depuis' (ID: 16277)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3341805040836334
    2. ' ,' → logprob: -2.2091805934906006
    3. ' a' → logprob: -2.7091805934906006
    4. ',' → logprob: -3.0841805934906006
    5. ' ' → logprob: -3.5841805934906006
    6. ' n' → logprob: -3.9591805934906006
    7. 'n' → logprob: -4.7091803550720215
    8. 's' → logprob: -6.3341803550720215
    9. ' `' → logprob: -6.9591803550720215
    10. ' )' → logprob: -7.7091803550720215

Token 51: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7059047818183899
    2. ' l' → logprob: -1.2059047222137451
    3. ' ' → logprob: -2.330904722213745
    4. 'input' → logprob: -3.080904722213745
    5. ' la' → logprob: -3.330904722213745
    6. 'l' → logprob: -3.705904722213745
    7. 'la' → logprob: -6.955904960632324
    8. ' une' → logprob: -7.080904960632324
    9. ' ' → logprob: -7.955904960632324
    10. ' stdin' → logprob: -8.705904960632324

Token 52: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42198875546455383
    2. ''' → logprob: -1.9219887256622314
    3. ''entrée' → logprob: -1.9219887256622314
    4. 'input' → logprob: -3.5469887256622314
    5. ' input' → logprob: -4.7969889640808105
    6. 'e' → logprob: -5.1719889640808105
    7. 'u' → logprob: -5.6719889640808105
    8. ''utilisateur' → logprob: -5.9219889640808105
    9. 'entrée' → logprob: -6.9219889640808105
    10. 'i' → logprob: -7.6719889640808105

Token 53: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7443776726722717
    2. 'n' → logprob: -0.7443776726722717
    3. 'x' → logprob: -3.744377613067627
    4. ' a' → logprob: -4.994377613067627
    5. 's' → logprob: -5.244377613067627
    6. ' n' → logprob: -5.244377613067627
    7. 'num' → logprob: -6.494377613067627
    8. ',' → logprob: -6.744377613067627
    9. ' `' → logprob: -7.369377613067627
    10. '```' → logprob: -7.369377613067627

Token 54: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04152298346161842
    2. 'a' → logprob: -4.041522979736328
    3. ' n' → logprob: -4.541522979736328
    4. '\n' → logprob: -5.041522979736328
    5. '```' → logprob: -6.166522979736328
    6. 's' → logprob: -7.166522979736328
    7. ',' → logprob: -7.291522979736328
    8. '\' → logprob: -7.416522979736328
    9. 'x' → logprob: -7.541522979736328
    10. ' a' → logprob: -8.291522979736328

Token 55: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5804381370544434
    2. 'és' → logprob: -0.8304381370544434
    3. 'ée' → logprob: -5.455438137054443
    4. 'ès' → logprob: -9.955438613891602
    5. 'è' → logprob: -10.205438613891602
    6. 'ées' → logprob: -10.330438613891602
    7. 'ateur' → logprob: -10.455438613891602
    8. 'e' → logprob: -11.205438613891602
    9. 'É' → logprob: -11.955438613891602
    10. ',' → logprob: -12.080438613891602

Token 56: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.21008585393428802
    2. 'par' → logprob: -1.7100858688354492
    3. '_par' → logprob: -5.210085868835449
    4. ' d' → logprob: -6.835085868835449
    5. ',' → logprob: -7.835085868835449
    6. '```' → logprob: -8.46008586883545
    7. '  ' → logprob: -8.83508586883545
    8. 'd' → logprob: -8.96008586883545
    9. '_' → logprob: -9.08508586883545
    10. ' by' → logprob: -9.21008586883545

Token 57: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.908046543598175
    2. ' une' → logprob: -1.1580464839935303
    3. ' ' → logprob: -2.4080464839935303
    4. 'un' → logprob: -2.9080464839935303
    5. 'space' → logprob: -3.4080464839935303
    6. 'l' → logprob: -4.033046722412109
    7. ''un' → logprob: -4.408046722412109
    8. 'une' → logprob: -4.533046722412109
    9. ''une' → logprob: -4.783046722412109
    10. ''' → logprob: -4.783046722412109

Token 58: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.03848011791706085
    2. ' ' → logprob: -4.538480281829834
    3. 'es' → logprob: -4.663480281829834
    4. ''espace' → logprob: -5.288480281829834
    5. ' space' → logprob: -5.538480281829834
    6. 'space' → logprob: -6.038480281829834
    7. ' espaces' → logprob: -6.288480281829834
    8. '_' → logprob: -6.663480281829834
    9. 'esp' → logprob: -6.788480281829834
    10. '’espace' → logprob: -7.913480281829834

Token 59: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023928819224238396
    2. 'n' → logprob: -3.8989288806915283
    3. 'x' → logprob: -6.398928642272949
    4. ' a' → logprob: -6.898928642272949
    5. 'A' → logprob: -7.398928642272949
    6. ',' → logprob: -10.14892864227295
    7. '```' → logprob: -11.14892864227295
    8. ' n' → logprob: -11.27392864227295
    9. 'N' → logprob: -12.77392864227295
    10. '\n' → logprob: -13.02392864227295

Token 60: ' assign' (ID: 14975)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6325929760932922
    2. 'a' → logprob: -1.6325929164886475
    3. ' x' → logprob: -1.6325929164886475
    4. 'x' → logprob: -3.7575929164886475
    5. ' input' → logprob: -4.382593154907227
    6. ' n' → logprob: -4.632593154907227
    7. 'n' → logprob: -4.632593154907227
    8. ' ' → logprob: -4.632593154907227
    9. 'input' → logprob: -5.757593154907227
    10. ' line' → logprob: -6.632593154907227

Token 61: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.21186897158622742
    2. '=' → logprob: -2.33686900138855
    3. 'ment' → logprob: -3.96186900138855
    4. 'e' → logprob: -4.211868762969971
    5. 'ement' → logprob: -4.461868762969971
    6. ' =' → logprob: -4.586868762969971
    7. 'é' → logprob: -4.711868762969971
    8. 'er' → logprob: -4.711868762969971
    9. 's' → logprob: -5.336868762969971
    10. 'ant' → logprob: -5.336868762969971

Token 62: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1838768869638443
    2. ' ' → logprob: -2.3088769912719727
    3. ' a' → logprob: -2.8088769912719727
    4. ' au' → logprob: -6.058876991271973
    5. 'a' → logprob: -6.308876991271973
    6. ' aux' → logprob: -6.558876991271973
    7. ' =' → logprob: -7.183876991271973
    8. ' to' → logprob: -7.683876991271973
    9. 'à' → logprob: -7.683876991271973
    10. 's' → logprob: -8.558876991271973

Token 63: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6338471174240112
    2. ' a' → logprob: -0.8838471174240112
    3. ' n' → logprob: -3.133847236633301
    4. 'n' → logprob: -4.883847236633301
    5. 'x' → logprob: -6.133847236633301
    6. ' x' → logprob: -6.133847236633301
    7. ' `' → logprob: -8.3838472366333
    8. 'A' → logprob: -8.8838472366333
    9. ' ' → logprob: -9.2588472366333
    10. ' A' → logprob: -9.6338472366333

Token 64: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002031657611951232
    2. ',n' → logprob: -6.2520318031311035
    3. ' ,' → logprob: -9.502031326293945
    4. 'et' → logprob: -11.377031326293945
    5. 'n' → logprob: -12.127031326293945
    6. 's' → logprob: -13.627031326293945
    7. ',a' → logprob: -13.752031326293945
    8. ',e' → logprob: -14.002031326293945
    9. ',m' → logprob: -14.002031326293945
    10. ',j' → logprob: -14.127031326293945

Token 65: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.45871254801750183
    2. ' k' → logprob: -1.4587125778198242
    3. 'm' → logprob: -2.333712577819824
    4. 'k' → logprob: -3.458712577819824
    5. ' p' → logprob: -5.458712577819824
    6. ' ' → logprob: -7.458712577819824
    7. ' s' → logprob: -7.958712577819824
    8. 's' → logprob: -8.333712577819824
    9. 'p' → logprob: -8.333712577819824
    10. ' d' → logprob: -8.458712577819824

Token 66: ' respect' (ID: 5618)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00032259183353744447
    2. ',' → logprob: -8.500322341918945
    3. ' n' → logprob: -9.375322341918945
    4. ',n' → logprob: -12.125322341918945
    5. ' =' → logprob: -12.250322341918945
    6. '=' → logprob: -12.500322341918945
    7. 'input' → logprob: -12.500322341918945
    8. '

' → logprob: -12.875322341918945
    9. 's' → logprob: -13.125322341918945
    10. 'i' → logprob: -13.500322341918945

Token 67: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.039235781878232956
    2. 'ect' → logprob: -3.414235830307007
    3. 'ively' → logprob: -6.164235591888428
    4. 'pect' → logprob: -7.664235591888428
    5. 'u' → logprob: -7.789235591888428
    6. 'ing' → logprob: -7.914235591888428
    7. 'ément' → logprob: -8.164236068725586
    8. 'ativement' → logprob: -8.164236068725586
    9. 'ected' → logprob: -8.539236068725586
    10. 'ement' → logprob: -8.914236068725586

Token 68: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00013727048644796014
    2. ' n' → logprob: -9.500137329101562
    3. ',' → logprob: -10.250137329101562
    4. '
' → logprob: -12.000137329101562
    5. '=' → logprob: -12.625137329101562
    6. ' =' → logprob: -12.875137329101562
    7. 'input' → logprob: -13.000137329101562
    8. ' 
' → logprob: -13.375137329101562
    9. '

' → logprob: -13.625137329101562
    10. ',n' → logprob: -13.625137329101562

Token 69: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00597667321562767
    2. ' n' → logprob: -5.130976676940918
    3. '
' → logprob: -10.130976676940918
    4. '
' → logprob: -12.505976676940918
    5. ' 
' → logprob: -14.130976676940918
    6. '\n' → logprob: -14.130976676940918
    7. '```' → logprob: -14.380976676940918
    8. 'input' → logprob: -14.630976676940918
    9. ',' → logprob: -15.130976676940918
    10. '(n' → logprob: -15.255976676940918

Token 70: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043005142360925674
    2. ' n' → logprob: -3.1680052280426025
    3. '```' → logprob: -13.793004989624023
    4. 'input' → logprob: -14.043004989624023
    5. '
' → logprob: -14.293004989624023
    6. '
' → logprob: -14.543004989624023
    7. ' 
' → logprob: -14.543004989624023
    8. '(n' → logprob: -14.793004989624023
    9. '\n' → logprob: -15.168004989624023
    10. ' ' → logprob: -15.668004989624023

Token 71: 'map' (ID: 3726)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04355970397591591
    2. ' n' → logprob: -3.1685597896575928
    3. 'input' → logprob: -7.918559551239014
    4. ' ' → logprob: -9.543560028076172
    5. ' =' → logprob: -10.668560028076172
    6. ' input' → logprob: -11.168560028076172
    7. 'data' → logprob: -11.918560028076172
    8. 's' → logprob: -12.356060028076172
    9. 'a' → logprob: -12.418560028076172
    10. '=' → logprob: -12.481060028076172

Token 72: ''' (ID: 6)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02354406751692295
    2. '(' → logprob: -3.7735440731048584
    3. '(str' → logprob: -8.398544311523438
    4. '=int' → logprob: -11.273544311523438
    5. '<int' → logprob: -11.273544311523438
    6. '(
' → logprob: -11.398544311523438
    7. '(list' → logprob: -11.398544311523438
    8. 'int' → logprob: -11.773544311523438
    9. '(eval' → logprob: -12.148544311523438
    10. '[int' → logprob: -13.023544311523438

Token 73: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6345223784446716
    2. '(int' → logprob: -0.7595223784446716
    3. '(lambda' → logprob: -6.634522438049316
    4. '(str' → logprob: -8.384522438049316
    5. '(list' → logprob: -9.259522438049316
    6. 'int' → logprob: -9.384522438049316
    7. '(input' → logprob: -10.509522438049316
    8. '=int' → logprob: -10.634522438049316
    9. '(float' → logprob: -10.884522438049316
    10. '(
' → logprob: -11.009522438049316

Token 74: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.13991762697696686
    2. '(' → logprob: -2.1399176120758057
    3. 'int' → logprob: -4.514917850494385
    4. ' int' → logprob: -6.389917850494385
    5. '(str' → logprob: -9.764917373657227
    6. '```' → logprob: -9.889917373657227
    7. '	int' → logprob: -10.389917373657227
    8. '(
' → logprob: -10.764917373657227
    9. '(lambda' → logprob: -10.889917373657227
    10. '=int' → logprob: -11.264917373657227

Token 75: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6213520169258118
    2. '(lambda' → logprob: -1.996351957321167
    3. ',' → logprob: -2.246351957321167
    4. '()' → logprob: -2.371351957321167
    5. '(int' → logprob: -3.621351957321167
    6. 's' → logprob: -3.996351957321167
    7. '```' → logprob: -3.996351957321167
    8. '<|end|>' → logprob: -3.996351957321167
    9. ')' → logprob: -4.621352195739746
    10. '(str' → logprob: -5.121352195739746

Token 76: ' chaque' (ID: 21194)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4927680194377899
    2. 'input' → logprob: -0.9927680492401123
    3. 'l' → logprob: -4.992767810821533
    4. ' l' → logprob: -5.367767810821533
    5. 'la' → logprob: -5.617767810821533
    6. ' la' → logprob: -5.867767810821533
    7. '(input' → logprob: -7.867767810821533
    8. ' ' → logprob: -9.492768287658691
    9. ' (' → logprob: -10.867768287658691
    10. 'map' → logprob: -10.992768287658691

Token 77: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3711235523223877
    2. ' élément' → logprob: -2.4961235523223877
    3. 'input' → logprob: -2.6211235523223877
    4. '(input' → logprob: -3.4961235523223877
    5. 'element' → logprob: -3.6211235523223877
    6. '(' → logprob: -3.8711235523223877
    7. 'entrée' → logprob: -3.8711235523223877
    8. ' input' → logprob: -4.246123313903809
    9. ' element' → logprob: -4.746123313903809
    10. 'token' → logprob: -4.996123313903809

Token 78: ' produit' (ID: 29429)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6105949878692627
    2. '(input' → logprob: -0.9855949878692627
    3. 'input' → logprob: -3.4855949878692627
    4. '(
' → logprob: -4.360594749450684
    5. ' input' → logprob: -4.610594749450684
    6. ' de' → logprob: -5.360594749450684
    7. 's' → logprob: -5.485594749450684
    8. ' du' → logprob: -5.610594749450684
    9. ',' → logprob: -5.735594749450684
    10. ' (' → logprob: -6.235594749450684

Token 79: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2255074679851532
    2. '(' → logprob: -2.7255074977874756
    3. 'par' → logprob: -2.7255074977874756
    4. '(par' → logprob: -3.6005074977874756
    5. 's' → logprob: -4.2255072593688965
    6. '(e' → logprob: -4.4755072593688965
    7. 'e' → logprob: -6.2255072593688965
    8. '(p' → logprob: -6.3505072593688965
    9. '(s' → logprob: -6.3505072593688965
    10. '(input' → logprob: -6.3505072593688965

Token 80: ' '' (ID: 461)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3133489489555359
    2. 'input' → logprob: -1.3133490085601807
    3. ' l' → logprob: -9.938348770141602
    4. 'l' → logprob: -10.313348770141602
    5. '(input' → logprob: -13.188348770141602
    6. '	input' → logprob: -14.313348770141602
    7. '=input' → logprob: -14.313348770141602
    8. ' la' → logprob: -14.438348770141602
    9. '```' → logprob: -14.438348770141602
    10. ' ' → logprob: -14.438348770141602

Token 81: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023252584040164948
    2. ' input' → logprob: -3.773252487182617
    3. '(input' → logprob: -12.148252487182617
    4. '=input' → logprob: -14.148252487182617
    5. '<input' → logprob: -14.648252487182617
    6. '	input' → logprob: -15.648252487182617
    7. '```' → logprob: -15.773252487182617
    8. ',input' → logprob: -16.148252487182617
    9. '[input' → logprob: -17.148252487182617
    10. 's' → logprob: -17.523252487182617

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012152367271482944
    2. '()' → logprob: -6.87621545791626
    3. '(' → logprob: -8.751214981079102
    4. '('').' → logprob: -11.751214981079102
    5. ' ().' → logprob: -12.876214981079102
    6. 'split' → logprob: -13.126214981079102
    7. '("").' → logprob: -13.501214981079102
    8. '('' → logprob: -13.626214981079102
    9. '().'' → logprob: -13.626214981079102
    10. '(split' → logprob: -14.001214981079102

Token 83: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02128402516245842
    2. '().' → logprob: -4.771284103393555
    3. ' split' → logprob: -5.146284103393555
    4. '()' → logprob: -6.396284103393555
    5. '(' → logprob: -6.521284103393555
    6. ')' → logprob: -7.146284103393555
    7. 'strip' → logprob: -7.146284103393555
    8. 'n' → logprob: -7.271284103393555
    9. '(split' → logprob: -7.896284103393555
    10. 'spl' → logprob: -8.896284103393555

Token 84: '()',' (ID: 149113)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007241460494697094
    2. '())' → logprob: -5.382241249084473
    3. '(' → logprob: -6.257241249084473
    4. '('' → logprob: -8.007241249084473
    5. ')' → logprob: -9.007241249084473
    6. '()`' → logprob: -9.132241249084473
    7. '()"' → logprob: -10.257241249084473
    8. '()
' → logprob: -11.007241249084473
    9. '()]' → logprob: -11.257241249084473
    10. '().' → logprob: -11.882241249084473

Token 85: ' convert' (ID: 8452)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13686081767082214
    2. ' n' → logprob: -2.1368608474731445
    3. ')' → logprob: -5.7618608474731445
    4. ' ce' → logprob: -6.1368608474731445
    5. '*' → logprob: -6.3868608474731445
    6. ' and' → logprob: -8.011860847473145
    7. ',' → logprob: -8.136860847473145
    8. '()' → logprob: -8.386860847473145
    9. '`' → logprob: -8.761860847473145
    10. ' puis' → logprob: -8.761860847473145

Token 86: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.23171699047088623
    2. 'i' → logprob: -2.106717109680176
    3. 'is' → logprob: -2.606717109680176
    4. 'it' → logprob: -5.481717109680176
    5. '```' → logprob: -5.731717109680176
    6. 'issent' → logprob: -6.856717109680176
    7. 'isseur' → logprob: -7.731717109680176
    8. 'iss' → logprob: -7.856717109680176
    9. ' is' → logprob: -8.231717109680176
    10. 'issez' → logprob: -8.356717109680176

Token 87: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.781743049621582
    2. ' la' → logprob: -0.906743049621582
    3. 'les' → logprob: -3.781743049621582
    4. ' input' → logprob: -3.781743049621582
    5. '()' → logprob: -4.281743049621582
    6. ' en' → logprob: -4.281743049621582
    7. ' ' → logprob: -4.531743049621582
    8. ' l' → logprob: -4.906743049621582
    9. 'l' → logprob: -5.031743049621582
    10. ' le' → logprob: -5.031743049621582

Token 88: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.7524840831756592
    2. ' ' → logprob: -2.752484083175659
    3. 'cha' → logprob: -2.752484083175659
    4. ' chaîne' → logprob: -2.877484083175659
    5. 'chaine' → logprob: -3.002484083175659
    6. ' les' → logprob: -3.127484083175659
    7. 'les' → logprob: -3.377484083175659
    8. ' input' → logprob: -3.627484083175659
    9. ' la' → logprob: -3.627484083175659
    10. ' strings' → logprob: -4.002484321594238

Token 89: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.01759689673781395
    2. 'en' → logprob: -4.26759672164917
    3. ' de' → logprob: -6.89259672164917
    4. ' into' → logprob: -7.26759672164917
    5. ' ' → logprob: -7.51759672164917
    6. ' input' → logprob: -8.392597198486328
    7. ')' → logprob: -9.017597198486328
    8. ''en' → logprob: -9.017597198486328
    9. '```' → logprob: -9.142597198486328
    10. 'de' → logprob: -9.392597198486328

Token 90: ' ent' (ID: 1121)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3262370228767395
    2. ' ent' → logprob: -1.5762369632720947
    3. ' integers' → logprob: -3.0762369632720947
    4. 'ent' → logprob: -4.326237201690674
    5. ' int' → logprob: -4.701237201690674
    6. 'des' → logprob: -7.076237201690674
    7. 'int' → logprob: -7.076237201690674
    8. ' nombres' → logprob: -7.326237201690674
    9. 'inte' → logprob: -7.701237201690674
    10. ' entier' → logprob: -8.451236724853516

Token 91: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -4.4894986785948277e-05
    2. 'i' → logprob: -10.125044822692871
    3. 'ières' → logprob: -12.750044822692871
    4. 't' → logprob: -14.750044822692871
    5. 'ière' → logprob: -15.125044822692871
    6. 'ti' → logprob: -15.250044822692871
    7. 'ers' → logprob: -15.625044822692871
    8. 'ier' → logprob: -15.625044822692871
    9. '```' → logprob: -15.875044822692871
    10. 'eurs' → logprob: -16.500045776367188

Token 92: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002529052784666419
    2. '.' → logprob: -7.377529144287109
    3. '(n' → logprob: -7.377529144287109
    4. ',' → logprob: -7.877529144287109
    5. ' n' → logprob: -8.12752914428711
    6. ')n' → logprob: -8.25252914428711
    7. ')' → logprob: -8.62752914428711
    8. ',n' → logprob: -10.00252914428711
    9. ':' → logprob: -10.50252914428711
    10. '```' → logprob: -11.37752914428711

Token 93: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0051475390791893005
    2. '
' → logprob: -5.380147457122803
    3. '\n' → logprob: -8.755147933959961
    4. '```' → logprob: -8.755147933959961
    5. '
' → logprob: -9.505147933959961
    6. ' n' → logprob: -9.630147933959961
    7. '\' → logprob: -10.505147933959961
    8. '  
' → logprob: -11.630147933959961
    9. '(n' → logprob: -11.630147933959961
    10. ' 
' → logprob: -11.880147933959961

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.598092684522271e-05
    2. ',k' → logprob: -10.000056266784668
    3. ' ,' → logprob: -11.500056266784668
    4. 'k' → logprob: -15.125056266784668
    5. ',n' → logprob: -16.00005531311035
    6. '‌,' → logprob: -17.75005531311035
    7. ',K' → logprob: -17.87505531311035
    8. ',
' → logprob: -18.75005531311035
    9. ',b' → logprob: -19.62505531311035
    10. '，' → logprob: -19.75005531311035

Token 95: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2519545555114746
    2. 'k' → logprob: -1.5019545555114746
    3. ' ' → logprob: -11.376955032348633
    4. ' ' → logprob: -11.376955032348633
    5. '	k' → logprob: -13.751955032348633
    6. ' ' → logprob: -14.126955032348633
    7. ' к' → logprob: -14.626955032348633
    8. '<|end|>' → logprob: -16.626955032348633
    9. '=k' → logprob: -16.751955032348633
    10. ' ‌' → logprob: -16.876955032348633

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269301027059555
    2. '=' → logprob: -2.126929998397827
    3. ',' → logprob: -14.001930236816406
    4. ' =
' → logprob: -15.001930236816406
    5. ')' → logprob: -15.626930236816406
    6. '＝' → logprob: -16.126930236816406
    7. '=int' → logprob: -16.126930236816406
    8. '<|end|>' → logprob: -16.376930236816406
    9. '=
' → logprob: -16.876930236816406
    10. '=input' → logprob: -16.876930236816406

Token 97: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10021281987428665
    2. 'map' → logprob: -2.350212812423706
    3. '	map' → logprob: -12.850213050842285
    4. ' ' → logprob: -12.975213050842285
    5. ' ' → logprob: -14.975213050842285
    6. 'm' → logprob: -15.225213050842285
    7. ' list' → logprob: -15.600213050842285
    8. '  ' → logprob: -15.725213050842285
    9. '   ' → logprob: -15.850213050842285
    10. 'list' → logprob: -15.975213050842285

Token 98: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012569697573781013
    2. '(' → logprob: -4.387569904327393
    3. '(input' → logprob: -10.137569427490234
    4. '(
' → logprob: -12.137569427490234
    5. ' (' → logprob: -12.137569427490234
    6. 'int' → logprob: -12.762569427490234
    7. '<int' → logprob: -13.137569427490234
    8. '(str' → logprob: -13.262569427490234
    9. '(lambda' → logprob: -13.637569427490234
    10. '[int' → logprob: -14.012569427490234

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4786521792411804
    2. ',input' → logprob: -1.1036522388458252
    3. '(input' → logprob: -3.353652238845825
    4. 'input' → logprob: -4.853652000427246
    5. ')' → logprob: -5.603652000427246
    6. ' ,' → logprob: -6.728652000427246
    7. ' input' → logprob: -7.103652000427246
    8. ' (' → logprob: -8.978652000427246
    9. '(' → logprob: -9.228652000427246
    10. '=input' → logprob: -10.853652000427246

Token 100: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020915418863297
    2. ' input' → logprob: -2.3502092361450195
    3. '(input' → logprob: -13.47520923614502
    4. ')' → logprob: -13.97520923614502
    5. '=input' → logprob: -16.100208282470703
    6. ' ' → logprob: -16.475208282470703
    7. '	input' → logprob: -17.225208282470703
    8. '<input' → logprob: -17.600208282470703
    9. '   ' → logprob: -17.975208282470703
    10. ',input' → logprob: -17.975208282470703

Token 101: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002627662615850568
    2. '()' → logprob: -8.250263214111328
    3. '())' → logprob: -14.125263214111328
    4. ' ().' → logprob: -15.250263214111328
    5. ')' → logprob: -15.375263214111328
    6. '()).' → logprob: -16.625263214111328
    7. '(' → logprob: -17.000263214111328
    8. '().__' → logprob: -17.875263214111328
    9. '()[' → logprob: -18.500263214111328
    10. ').' → logprob: -18.750263214111328

Token 102: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.91732100979425e-05
    2. ')' → logprob: -10.375039100646973
    3. ' split' → logprob: -12.250039100646973
    4. 'strip' → logprob: -13.250039100646973
    5. ').' → logprob: -14.500039100646973
    6. '().' → logprob: -15.375039100646973
    7. '(split' → logprob: -15.500039100646973
    8. '.split' → logprob: -16.12504005432129
    9. 'plit' → logprob: -16.62504005432129
    10. '```' → logprob: -16.75004005432129

Token 103: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.016397498548030853
    2. ')' → logprob: -4.266397476196289
    3. '()' → logprob: -6.141397476196289
    4. '()))' → logprob: -10.266397476196289
    5. '))' → logprob: -10.891397476196289
    6. '())
' → logprob: -11.266397476196289
    7. ' ())' → logprob: -11.891397476196289
    8. '(' → logprob: -12.891397476196289
    9. '());' → logprob: -13.641397476196289
    10. '())

' → logprob: -14.266397476196289

Token 104: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2473134994506836
    2. '#' → logprob: -2.2473134994506836
    3. 'a' → logprob: -3.8723134994506836
    4. ')' → logprob: -3.8723134994506836
    5. '
' → logprob: -3.9973134994506836
    6. 'def' → logprob: -5.122313499450684
    7. 'dp' → logprob: -5.122313499450684
    8. '<|end|>' → logprob: -5.247313499450684
    9. '\n' → logprob: -5.372313499450684
    10. 'result' → logprob: -5.372313499450684

Token 105: ' Calcul' (ID: 57243)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41821080446243286
    2. 'def' → logprob: -1.543210744857788
    3. 'result' → logprob: -2.543210744857788
    4. ' dp' → logprob: -4.418210983276367
    5. 'fact' → logprob: -4.543210983276367
    6. 'factor' → logprob: -5.043210983276367
    7. '#' → logprob: -5.168210983276367
    8. ' result' → logprob: -5.293210983276367
    9. 'res' → logprob: -5.418210983276367
    10. ' def' → logprob: -7.043210983276367

Token 106: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9190353751182556
    2. 'fact' → logprob: -1.4190354347229004
    3. ' =' → logprob: -1.9190354347229004
    4. 'factor' → logprob: -2.2940354347229004
    5. 'result' → logprob: -3.4190354347229004
    6. '_factor' → logprob: -3.9190354347229004
    7. 'f' → logprob: -4.7940354347229
    8. 'def' → logprob: -4.7940354347229
    9. '#' → logprob: -4.9190354347229
    10. 's' → logprob: -5.2940354347229

Token 107: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.36238402128219604
    2. ' pow' → logprob: -2.362384080886841
    3. ' la' → logprob: -3.237384080886841
    4. '1' → logprob: -3.362384080886841
    5. ' (' → logprob: -3.987384080886841
    6. '(' → logprob: -3.987384080886841
    7. ' k' → logprob: -4.362383842468262
    8. 'fact' → logprob: -4.487383842468262
    9. '(n' → logprob: -4.612383842468262
    10. ' ' → logprob: -4.612383842468262

Token 108: ' rac' (ID: 12334)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.35480836033821106
    2. 'pu' → logprob: -2.3548083305358887
    3. 'fact' → logprob: -2.3548083305358887
    4. 'comb' → logprob: -3.3548083305358887
    5. ' puissance' → logprob: -4.104808330535889
    6. ' combinaison' → logprob: -4.854808330535889
    7. ' fact' → logprob: -4.854808330535889
    8. 'val' → logprob: -5.229808330535889
    9. 's' → logprob: -5.229808330535889
    10. ' factor' → logprob: -5.479808330535889

Token 109: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.002620966173708439
    2. '#' → logprob: -7.252621173858643
    3. '```' → logprob: -7.377621173858643
    4. 'e' → logprob: -8.377620697021484
    5. 'ïne' → logprob: -8.377620697021484
    6. 'c' → logprob: -8.627620697021484
    7. 't' → logprob: -8.877620697021484
    8. '``' → logprob: -9.502620697021484
    9. '**' → logprob: -10.127620697021484
    10. '`' → logprob: -10.252620697021484

Token 110: ' carr' (ID: 18321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10985102504491806
    2. '_square' → logprob: -3.359851121902466
    3. '_c' → logprob: -3.609851121902466
    4. '_car' → logprob: -4.859850883483887
    5. 'sqrt' → logprob: -5.234850883483887
    6. '_s' → logprob: -5.234850883483887
    7. '_cube' → logprob: -5.984850883483887
    8. 'car' → logprob: -5.984850883483887
    9. 's' → logprob: -6.109850883483887
    10. '```' → logprob: -6.109850883483887

Token 111: 'ée' (ID: 2894)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0018687831470742822
    2. 'ïne' → logprob: -7.001868724822998
    3. 'îne' → logprob: -7.751868724822998
    4. '```' → logprob: -9.001869201660156
    5. 'ale' → logprob: -9.626869201660156
    6. 'ène' → logprob: -9.751869201660156
    7. 'iné' → logprob: -9.751869201660156
    8. 'p' → logprob: -9.751869201660156
    9. '2' → logprob: -10.751869201660156
    10. 'é' → logprob: -10.876869201660156

Token 112: ' entière' (ID: 61583)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.595613956451416
    2. '(n' → logprob: -1.345613956451416
    3. 'import' → logprob: -2.220613956451416
    4. 'n' → logprob: -2.970613956451416
    5. 's' → logprob: -4.845613956451416
    6. '(int' → logprob: -5.595613956451416
    7. 'int' → logprob: -5.845613956451416
    8. ' (' → logprob: -5.970613956451416
    9. '()' → logprob: -6.220613956451416
    10. ')' → logprob: -6.595613956451416

Token 113: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40107184648513794
    2. '(n' → logprob: -2.276071786880493
    3. ' de' → logprob: -2.651071786880493
    4. 'de' → logprob: -2.776071786880493
    5. 'int' → logprob: -3.651071786880493
    6. '(' → logprob: -3.901071786880493
    7. 'import' → logprob: -4.276072025299072
    8. 's' → logprob: -4.526072025299072
    9. '_' → logprob: -4.901072025299072
    10. ' n' → logprob: -5.901072025299072

Token 114: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2014402449131012
    2. 'n' → logprob: -1.7014402151107788
    3. ' k' → logprob: -11.32643985748291
    4. ' ' → logprob: -11.57643985748291
    5. '(n' → logprob: -13.07643985748291
    6. 'k' → logprob: -13.20143985748291
    7. ' int' → logprob: -14.32643985748291
    8. ' ' → logprob: -14.82643985748291
    9. 'int' → logprob: -15.07643985748291
    10. '	n' → logprob: -15.45143985748291

Token 115: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.013407262973487377
    2. 'i' → logprob: -4.888407230377197
    3. 'root' → logprob: -7.013407230377197
    4. 'x' → logprob: -7.138407230377197
    5. 'ans' → logprob: -7.263407230377197
    6. 'from' → logprob: -7.263407230377197
    7. 'r' → logprob: -7.388407230377197
    8. ' import' → logprob: -7.513407230377197
    9. 'sqrt' → logprob: -8.013407707214355
    10. 'int' → logprob: -8.013407707214355

Token 116: ' puis' (ID: 18766)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11245259642601013
    2. 'i' → logprob: -3.112452507019043
    3. ' import' → logprob: -4.112452507019043
    4. 'import' → logprob: -4.487452507019043
    5. ' x' → logprob: -4.612452507019043
    6. ' ' → logprob: -4.987452507019043
    7. ' n' → logprob: -5.862452507019043
    8. ' int' → logprob: -5.987452507019043
    9. 'int' → logprob: -5.987452507019043
    10. 'x' → logprob: -6.362452507019043

Token 117: ' conversion' (ID: 22165)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6867764592170715
    2. ' +' → logprob: -1.8117763996124268
    3. 'int' → logprob: -2.5617763996124268
    4. 'k' → logprob: -2.6867763996124268
    5. ' k' → logprob: -3.4367763996124268
    6. 'n' → logprob: -3.9367763996124268
    7. ' ' → logprob: -3.9367763996124268
    8. 'import' → logprob: -4.061776638031006
    9. ' n' → logprob: -4.311776638031006
    10. ':' → logprob: -4.811776638031006

Token 118: ' explic' (ID: 20781)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5361862182617188
    2. 'en' → logprob: -2.1611862182617188
    3. 'import' → logprob: -2.1611862182617188
    4. 'int' → logprob: -2.2861862182617188
    5. ' de' → logprob: -3.7861862182617188
    6. '(int' → logprob: -4.161186218261719
    7. '(' → logprob: -4.411186218261719
    8. '(n' → logprob: -4.536186218261719
    9. ' int' → logprob: -5.536186218261719
    10. 'n' → logprob: -5.536186218261719

Token 119: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0010424555512145162
    2. 'it' → logprob: -6.876042366027832
    3. 'ic' → logprob: -13.251042366027832
    4. 'icit' → logprob: -13.501042366027832
    5. '```' → logprob: -13.626042366027832
    6. 'cite' → logprob: -13.876042366027832
    7. ' ite' → logprob: -14.251042366027832
    8. 'ète' → logprob: -14.251042366027832
    9. '`' → logprob: -14.626042366027832
    10. 'itte' → logprob: -14.876042366027832

Token 120: ' en' (ID: 469)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8928450345993042
    2. ' en' → logprob: -1.2678450345993042
    3. '(int' → logprob: -1.7678450345993042
    4. 'en' → logprob: -2.5178451538085938
    5. '(' → logprob: -4.142845153808594
    6. ' int' → logprob: -4.392845153808594
    7. '=int' → logprob: -4.517845153808594
    8. 'import' → logprob: -4.767845153808594
    9. '(n' → logprob: -5.142845153808594
    10. 'n' → logprob: -6.642845153808594

Token 121: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20147308707237244
    2. ' int' → logprob: -1.7014731168746948
    3. 'float' → logprob: -10.326473236083984
    4. ' float' → logprob: -10.701473236083984
    5. '=int' → logprob: -12.951473236083984
    6. '(int' → logprob: -14.576473236083984
    7. 'ent' → logprob: -14.951473236083984
    8. '```' → logprob: -15.201473236083984
    9. 'n' → logprob: -15.451473236083984
    10. ' entier' → logprob: -15.576473236083984

Token 122: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17559732496738434
    2. 'root' → logprob: -2.9255974292755127
    3. 'r' → logprob: -3.0505974292755127
    4. 'sqrt' → logprob: -3.6755974292755127
    5. 'int' → logprob: -3.9255974292755127
    6. 's' → logprob: -5.300597190856934
    7. ' import' → logprob: -5.925597190856934
    8. 'result' → logprob: -6.800597190856934
    9. '(int' → logprob: -6.925597190856934
    10. 'res' → logprob: -7.050597190856934

Token 123: ' s' (ID: 265)
  Prédit: ' garantir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' garantir' → logprob: -0.624226450920105
    2. ' s' → logprob: -1.999226450920105
    3. ' assurer' → logprob: -2.3742265701293945
    4. ' pouvoir' → logprob: -2.7492265701293945
    5. ' int' → logprob: -3.4992265701293945
    6. '_' → logprob: -3.6242265701293945
    7. ' éviter' → logprob: -3.8742265701293945
    8. ' n' → logprob: -3.8742265701293945
    9. ' continuer' → logprob: -3.9992265701293945
    10. ' utiliser' → logprob: -4.2492265701293945

Token 124: ''assurer' (ID: 193756)
  Prédit: ''assurer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''assurer' → logprob: -0.10083314031362534
    2. 'qrt' → logprob: -2.9758331775665283
    3. '’assurer' → logprob: -3.7258331775665283
    4. 'n' → logprob: -5.475832939147949
    5. ''ass' → logprob: -5.975832939147949
    6. '```' → logprob: -6.100832939147949
    7. 'e' → logprob: -6.225832939147949
    8. '`' → logprob: -6.600832939147949
    9. 'tr' → logprob: -6.725832939147949
    10. ' assurer' → logprob: -6.975832939147949

Token 125: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2652556896209717
    2. ' de' → logprob: -1.7652556896209717
    3. '(n' → logprob: -2.2652556896209717
    4. ' que' → logprob: -2.5152556896209717
    5. 'n' → logprob: -2.7652556896209717
    6. '(' → logprob: -2.7652556896209717
    7. '()' → logprob: -2.8902556896209717
    8. 'import' → logprob: -3.0152556896209717
    9. ' )' → logprob: -3.7652556896209717
    10. ' n' → logprob: -3.8902556896209717

Token 126: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7552599906921387
    2. 'sqrt' → logprob: -2.3802599906921387
    3. 'type' → logprob: -2.5052599906921387
    4. 'la' → logprob: -3.0052599906921387
    5. 'result' → logprob: -3.2552599906921387
    6. 'int' → logprob: -3.5052599906921387
    7. 'une' → logprob: -3.6302599906921387
    8. 'r' → logprob: -3.7552599906921387
    9. ' type' → logprob: -4.130259990692139
    10. 's' → logprob: -4.130259990692139

Token 127: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8940272927284241
    2. ' result' → logprob: -1.1440272331237793
    3. ' valeur' → logprob: -3.2690272331237793
    4. 'import' → logprob: -3.3940272331237793
    5. 'type' → logprob: -3.3940272331237793
    6. ' type' → logprob: -3.5190272331237793
    7. 'n' → logprob: -3.8940272331237793
    8. ')' → logprob: -4.019027233123779
    9. 'value' → logprob: -4.144027233123779
    10. 'rés' → logprob: -4.269027233123779

Token 128: ' s' (ID: 265)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.2876684665679932
    2. ' n' → logprob: -1.5376684665679932
    3. 'result' → logprob: -2.412668466567993
    4. ' est' → logprob: -2.537668466567993
    5. 'sqrt' → logprob: -2.537668466567993
    6. 'n' → logprob: -2.662668466567993
    7. 's' → logprob: -3.037668466567993
    8. ' =' → logprob: -3.037668466567993
    9. ' sqrt' → logprob: -3.662668466567993
    10. ' s' → logprob: -4.537668228149414

Token 129: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18266351521015167
    2. '=' → logprob: -2.1826634407043457
    3. 'qrt' → logprob: -3.3076634407043457
    4. '=int' → logprob: -4.932663440704346
    5. '=s' → logprob: -5.057663440704346
    6. '=n' → logprob: -6.807663440704346
    7. 'n' → logprob: -7.182663440704346
    8. 'q' → logprob: -7.307663440704346
    9. 'qr' → logprob: -8.307663917541504
    10. '```' → logprob: -8.557663917541504

Token 130: ' de' (ID: 334)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22532136738300323
    2. ' int' → logprob: -1.7253214120864868
    3. 'n' → logprob: -5.725321292877197
    4. '=int' → logprob: -5.725321292877197
    5. 's' → logprob: -5.850321292877197
    6. ' n' → logprob: -6.225321292877197
    7. 'floor' → logprob: -6.350321292877197
    8. '=' → logprob: -6.475321292877197
    9. 'strict' → logprob: -6.475321292877197
    10. ' bien' → logprob: -7.350321292877197

Token 131: ' type' (ID: 1490)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06020796298980713
    2. ' int' → logprob: -3.1852078437805176
    3. 'type' → logprob: -4.560207843780518
    4. ' type' → logprob: -5.060207843780518
    5. '=int' → logprob: -8.935208320617676
    6. 'n' → logprob: -10.310208320617676
    7. '<int' → logprob: -10.560208320617676
    8. 'ent' → logprob: -10.685208320617676
    9. ' integer' → logprob: -11.810208320617676
    10. 's' → logprob: -12.060208320617676

Token 132: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03805858641862869
    2. ' int' → logprob: -3.2880585193634033
    3. 'float' → logprob: -12.038058280944824
    4. 's' → logprob: -12.163058280944824
    5. '```' → logprob: -12.663058280944824
    6. '(int' → logprob: -13.663058280944824
    7. '=int' → logprob: -14.038058280944824
    8. ' float' → logprob: -15.413058280944824
    9. ' s' → logprob: -15.413058280944824
    10. 'n' → logprob: -15.788058280944824

Token 133: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1804760843515396
    2. 'import' → logprob: -1.8054760694503784
    3. ' s' → logprob: -7.555476188659668
    4. ' import' → logprob: -9.305476188659668
    5. ',' → logprob: -10.055476188659668
    6. ':' → logprob: -10.805476188659668
    7. 'from' → logprob: -11.055476188659668
    8. '.' → logprob: -11.680476188659668
    9. ' =' → logprob: -12.055476188659668
    10. '```' → logprob: -12.305476188659668

Token 134: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11521866917610168
    2. 'import' → logprob: -2.3652186393737793
    3. ' s' → logprob: -4.240218639373779
    4. ' import' → logprob: -7.740218639373779
    5. '```' → logprob: -10.615219116210938
    6. 'from' → logprob: -11.240219116210938
    7. 'int' → logprob: -12.365219116210938
    8. ' from' → logprob: -12.365219116210938
    9. ' 
' → logprob: -13.240219116210938
    10. ' ' → logprob: -13.490219116210938

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014397531747818
    2. '=' → logprob: -1.7014397382736206
    3. '=int' → logprob: -10.57643985748291
    4. ' ' → logprob: -14.82643985748291
    5. 's' → logprob: -15.70143985748291
    6. '=s' → logprob: -15.82643985748291
    7. ' ' → logprob: -16.326438903808594
    8. 'int' → logprob: -16.326438903808594
    9. 'import' → logprob: -16.326438903808594
    10. '＝' → logprob: -17.076438903808594

Token 136: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47408273816108704
    2. ' int' → logprob: -0.9740827083587646
    3. '	int' → logprob: -12.849082946777344
    4. ' ' → logprob: -13.349082946777344
    5. '(int' → logprob: -14.099082946777344
    6. ' ' → logprob: -14.849082946777344
    7. '=int' → logprob: -15.974082946777344
    8. '  ' → logprob: -16.849082946777344
    9. '```' → logprob: -16.849082946777344
    10. '[int' → logprob: -17.099082946777344

Token 137: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04355046525597572
    2. '(' → logprob: -3.793550491333008
    3. '(s' → logprob: -3.918550491333008
    4. '((' → logprob: -9.668550491333008
    5. '(len' → logprob: -9.918550491333008
    6. '(int' → logprob: -10.043550491333008
    7. '(pow' → logprob: -10.668550491333008
    8. '(input' → logprob: -10.793550491333008
    9. '(
' → logprob: -11.543550491333008
    10. ' (' → logprob: -11.543550491333008

Token 138: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.002507047727704048
    2. ' **' → logprob: -6.002507209777832
    3. '.sqrt' → logprob: -11.627507209777832
    4. ')' → logprob: -11.752507209777832
    5. ')**' → logprob: -11.752507209777832
    6. '*' → logprob: -13.127507209777832
    7. '.' → logprob: -13.752507209777832
    8. 'import' → logprob: -13.877507209777832
    9. ''s' → logprob: -14.127507209777832
    10. '**
' → logprob: -14.752507209777832

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004624272231012583
    2. ' ' → logprob: -5.379624366760254
    3. '(' → logprob: -12.629624366760254
    4. '.' → logprob: -14.254624366760254
    5. ' ' → logprob: -15.754624366760254
    6. ' (' → logprob: -17.879623413085938
    7. '  ' → logprob: -19.254623413085938
    8. '   ' → logprob: -19.629623413085938
    9. ' .' → logprob: -19.754623413085938
    10. '    ' → logprob: -19.879623413085938

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.074907287256792e-05
    2. '(' → logprob: -10.00006103515625
    3. ' ' → logprob: -11.25006103515625
    4. '.' → logprob: -13.00006103515625
    5. '{' → logprob: -17.62506103515625
    6. ' ' → logprob: -18.75006103515625
    7. ' (' → logprob: -18.87506103515625
    8. '   ' → logprob: -19.00006103515625
    9. '=' → logprob: -19.62506103515625
    10. '-' → logprob: -20.12506103515625

Token 141: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.45848218582978e-06
    2. '2' → logprob: -13.75000286102295
    3. '5' → logprob: -14.50000286102295
    4. ' .' → logprob: -15.37500286102295
    5. '0' → logprob: -15.62500286102295
    6. '1' → logprob: -16.125001907348633
    7. '3' → logprob: -16.125001907348633
    8. '6' → logprob: -17.375001907348633
    9. ' ' → logprob: -17.500001907348633
    10. '4' → logprob: -17.500001907348633

Token 142: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.3125
    3. '0' → logprob: -17.75
    4. '.' → logprob: -17.8125
    5. '4' → logprob: -17.875
    6. '6' → logprob: -18.9375
    7. 'cin' → logprob: -19.125
    8. '**' → logprob: -19.25
    9. '   ' → logprob: -19.25
    10. '7' → logprob: -19.375

Token 143: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -12.500004768371582
    3. '))' → logprob: -14.875004768371582
    4. ')
' → logprob: -16.375003814697266
    5. ')+' → logprob: -16.375003814697266
    6. '),' → logprob: -16.625003814697266
    7. ')`' → logprob: -17.250003814697266
    8. '+' → logprob: -17.375003814697266
    9. ' ' → logprob: -18.125003814697266
    10. ')

' → logprob: -18.125003814697266

Token 144: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4184457063674927
    2. 'n' → logprob: -1.4184457063674927
    3. '#' → logprob: -1.6684457063674927
    4. '+' → logprob: -2.293445587158203
    5. '<|end|>' → logprob: -2.668445587158203
    6. ' ' → logprob: -3.418445587158203
    7. ' 
' → logprob: -4.043445587158203
    8. '
' → logprob: -4.293445587158203
    9. '\n' → logprob: -4.418445587158203
    10. '*' → logprob: -4.418445587158203

Token 145: ' Cré' (ID: 109203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0789612531661987
    2. 'for' → logprob: -1.3289612531661987
    3. 'result' → logprob: -1.7039612531661987
    4. 'fact' → logprob: -2.8289613723754883
    5. 'dp' → logprob: -3.0789613723754883
    6. 'res' → logprob: -3.2039613723754883
    7. '#' → logprob: -4.203961372375488
    8. 'count' → logprob: -4.328961372375488
    9. 'print' → logprob: -4.453961372375488
    10. 'factor' → logprob: -4.828961372375488

Token 146: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.008318938314914703
    2. 'er' → logprob: -5.883318901062012
    3. '#' → logprob: -6.258318901062012
    4. 'd' → logprob: -6.633318901062012
    5. 'a' → logprob: -7.258318901062012
    6. 'tion' → logprob: -8.383318901062012
    7. 'at' → logprob: -8.508318901062012
    8. 'neau' → logprob: -8.633318901062012
    9. '```' → logprob: -8.883318901062012
    10. 'e' → logprob: -9.258318901062012

Token 147: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2691139876842499
    2. '(' → logprob: -1.7691140174865723
    3. 'd' → logprob: -3.3941140174865723
    4. 's' → logprob: -4.019114017486572
    5. '[' → logprob: -5.769114017486572
    6. ' ' → logprob: -5.769114017486572
    7. '(
' → logprob: -6.269114017486572
    8. ' (' → logprob: -6.394114017486572
    9. '[]' → logprob: -6.894114017486572
    10. '([]' → logprob: -7.644114017486572

Token 148: ''une' (ID: 13337)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0635837316513062
    2. 'une' → logprob: -2.0635838508605957
    3. 'a' → logprob: -2.1885838508605957
    4. ' une' → logprob: -2.4385838508605957
    5. ' un' → logprob: -2.4385838508605957
    6. ' []' → logprob: -2.5635838508605957
    7. ''une' → logprob: -3.0635838508605957
    8. '[' → logprob: -3.3135838508605957
    9. '_' → logprob: -3.6885838508605957
    10. ''un' → logprob: -4.688583850860596

Token 149: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9538094997406006
    2. 'range' → logprob: -1.3288094997406006
    3. 'list' → logprob: -2.2038094997406006
    4. '[' → logprob: -2.3288094997406006
    5. ' liste' → logprob: -2.7038094997406006
    6. ' [' → logprob: -4.32880973815918
    7. 'lst' → logprob: -4.57880973815918
    8. '[]' → logprob: -4.82880973815918
    9. ' range' → logprob: -4.82880973815918
    10. ' list' → logprob: -4.95380973815918

Token 150: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3263514041900635
    2. ' d' → logprob: -1.7013514041900635
    3. 's' → logprob: -2.0763514041900635
    4. '[' → logprob: -2.3263514041900635
    5. 'de' → logprob: -2.9513514041900635
    6. ' de' → logprob: -3.0763514041900635
    7. ' =' → logprob: -3.2013514041900635
    8. 'dp' → logprob: -3.5763514041900635
    9. ' des' → logprob: -3.7013514041900635
    10. 'range' → logprob: -4.451351165771484

Token 151: 'Num' (ID: 5702)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49652087688446045
    2. 'div' → logprob: -2.74652099609375
    3. ' dp' → logprob: -2.87152099609375
    4. '[' → logprob: -3.37152099609375
    5. 'res' → logprob: -3.49652099609375
    6. 'freq' → logprob: -3.49652099609375
    7. 'result' → logprob: -3.87152099609375
    8. 'counts' → logprob: -3.99652099609375
    9. 'count' → logprob: -4.37152099609375
    10. 'range' → logprob: -4.49652099609375

Token 152: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010096261277794838
    2. '_list' → logprob: -5.260096073150635
    3. 'bers' → logprob: -6.135096073150635
    4. 'ber' → logprob: -7.385096073150635
    5. 'ers' → logprob: -8.010096549987793
    6. 'éros' → logprob: -8.260096549987793
    7. ' =' → logprob: -8.510096549987793
    8. '=' → logprob: -8.885096549987793
    9. '```' → logprob: -8.885096549987793
    10. 'list' → logprob: -8.885096549987793

Token 153: ' rempl' (ID: 66326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040793899446725845
    2. '=' → logprob: -3.2907938957214355
    3. '[' → logprob: -6.6657938957214355
    4. '=[' → logprob: -8.165794372558594
    5. 's' → logprob: -8.290794372558594
    6. '=[]' → logprob: -8.290794372558594
    7. '[]' → logprob: -9.165794372558594
    8. '(' → logprob: -9.415794372558594
    9. '[num' → logprob: -9.415794372558594
    10. ',' → logprob: -9.790794372558594

Token 154: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7593784928321838
    2. 'ée' → logprob: -1.884378433227539
    3. ']' → logprob: -2.009378433227539
    4. '([' → logprob: -2.384378433227539
    5. '[' → logprob: -3.009378433227539
    6. '=[' → logprob: -3.884378433227539
    7. '(' → logprob: -4.259378433227539
    8. ' de' → logprob: -4.884378433227539
    9. ' =' → logprob: -5.009378433227539
    10. 'ue' → logprob: -5.009378433227539

Token 155: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4329547584056854
    2. '[' → logprob: -2.057954788208008
    3. '(' → logprob: -2.557954788208008
    4. '([' → logprob: -2.932954788208008
    5. 's' → logprob: -3.557954788208008
    6. '[n' → logprob: -3.682954788208008
    7. 'de' → logprob: -4.182954788208008
    8. '[num' → logprob: -4.557954788208008
    9. '(n' → logprob: -5.557954788208008
    10. '[s' → logprob: -6.432954788208008

Token 156: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5399031639099121
    2. '[' → logprob: -1.414903163909912
    3. '[s' → logprob: -2.664903163909912
    4. '[n' → logprob: -2.789903163909912
    5. 'n' → logprob: -4.789903163909912
    6. 's' → logprob: -4.914903163909912
    7. ' [' → logprob: -5.039903163909912
    8. '(s' → logprob: -5.289903163909912
    9. '[k' → logprob: -5.414903163909912
    10. ' ' → logprob: -5.914903163909912

Token 157: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.06445390731096268
    2. 'éro' → logprob: -3.1894538402557373
    3. 'eros' → logprob: -5.064454078674316
    4. 'ro' → logprob: -5.314454078674316
    5. '[' → logprob: -5.564454078674316
    6. 'ero' → logprob: -6.064454078674316
    7. 'e' → logprob: -7.439454078674316
    8. '#' → logprob: -7.939454078674316
    9. 'é' → logprob: -7.939454078674316
    10. '`' → logprob: -8.064454078674316

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0244849920272827
    2. '(' → logprob: -1.7744849920272827
    3. '(s' → logprob: -1.8994849920272827
    4. '[' → logprob: -2.2744851112365723
    5. 's' → logprob: -2.5244851112365723
    6. '([' → logprob: -2.7744851112365723
    7. '(n' → logprob: -3.6494851112365723
    8. '[n' → logprob: -4.149485111236572
    9. '[s' → logprob: -5.024485111236572
    10. ' =' → logprob: -5.149485111236572

Token 159: ' de' (ID: 334)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.42857927083969116
    2. '[' → logprob: -1.178579330444336
    3. '[n' → logprob: -3.928579330444336
    4. ' n' → logprob: -5.178579330444336
    5. ' s' → logprob: -5.178579330444336
    6. '[s' → logprob: -5.553579330444336
    7. '[num' → logprob: -5.803579330444336
    8. 's' → logprob: -7.053579330444336
    9. ' size' → logprob: -7.303579330444336
    10. ' num' → logprob: -8.053579330444336

Token 160: ' longueur' (ID: 104613)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.11599452048540115
    2. ' taille' → logprob: -2.740994453430176
    3. ' longueur' → logprob: -3.615994453430176
    4. 'length' → logprob: -4.615994453430176
    5. 'long' → logprob: -5.615994453430176
    6. 'n' → logprob: -6.490994453430176
    7. 'len' → logprob: -7.240994453430176
    8. 't' → logprob: -7.365994453430176
    9. 'size' → logprob: -7.615994453430176
    10. ' length' → logprob: -8.115994453430176

Token 161: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0934796929359436
    2. 's' → logprob: -2.593479633331299
    3. ' n' → logprob: -4.468479633331299
    4. 'n' → logprob: -6.468479633331299
    5. ' (' → logprob: -7.343479633331299
    6. '(s' → logprob: -8.218480110168457
    7. ' k' → logprob: -8.593480110168457
    8. '(' → logprob: -8.718480110168457
    9. 'k' → logprob: -9.593480110168457
    10. '(n' → logprob: -9.718480110168457

Token 162: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1427435725927353
    2. ' +' → logprob: -2.0177435874938965
    3. 's' → logprob: -10.767743110656738
    4. ')' → logprob: -11.017743110656738
    5. '+s' → logprob: -11.017743110656738
    6. '+[' → logprob: -12.767743110656738
    7. '+n' → logprob: -12.892743110656738
    8. ']' → logprob: -12.892743110656738
    9. '[' → logprob: -13.142743110656738
    10. ' s' → logprob: -14.017743110656738

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035677615087479353
    2. '2' → logprob: -5.753567695617676
    3. ' ' → logprob: -7.878567695617676
    4. '+' → logprob: -11.878567695617676
    5. ' ' → logprob: -13.753567695617676
    6. '10' → logprob: -14.753567695617676
    7. ' +' → logprob: -15.003567695617676
    8. 's' → logprob: -15.003567695617676
    9. '11' → logprob: -15.191067695617676
    10. '3' → logprob: -15.253567695617676

Token 164: '.' (ID: 13)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.3235006332397461
    2. '[' → logprob: -1.448500633239746
    3. ']' → logprob: -4.323500633239746
    4. 'num' → logprob: -4.948500633239746
    5. ' =' → logprob: -5.198500633239746
    6. ' Num' → logprob: -5.698500633239746
    7. ',' → logprob: -5.823500633239746
    8. ')' → logprob: -5.823500633239746
    9. '=' → logprob: -5.948500633239746
    10. 's' → logprob: -7.198500633239746

Token 165: ' Cette' (ID: 27383)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.010299931280314922
    2. ' Num' → logprob: -4.760300159454346
    3. ' =' → logprob: -6.510300159454346
    4. '[' → logprob: -9.760299682617188
    5. 'num' → logprob: -9.885299682617188
    6. '=' → logprob: -10.135299682617188
    7. '_Num' → logprob: -11.385299682617188
    8. ',' → logprob: -11.635299682617188
    9. 'Nums' → logprob: -12.260299682617188
    10. '_num' → logprob: -12.260299682617188

Token 166: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5315126180648804
    2. ' liste' → logprob: -1.6565126180648804
    3. 'liste' → logprob: -2.65651273727417
    4. ' [' → logprob: -3.28151273727417
    5. ' list' → logprob: -3.28151273727417
    6. 's' → logprob: -3.78151273727417
    7. 'Liste' → logprob: -4.40651273727417
    8. '[]' → logprob: -5.03151273727417
    9. 'list' → logprob: -5.15651273727417
    10. 'Num' → logprob: -5.78151273727417

Token 167: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1648794710636139
    2. '=' → logprob: -2.039879560470581
    3. '<|end|>' → logprob: -4.289879322052002
    4. ')' → logprob: -5.914879322052002
    5. 's' → logprob: -6.164879322052002
    6. '[' → logprob: -7.039879322052002
    7. ' ' → logprob: -8.03987979888916
    8. '[]' → logprob: -8.16487979888916
    9. ' est' → logprob: -8.53987979888916
    10. ']' → logprob: -8.66487979888916

Token 168: ' stock' (ID: 6546)
  Prédit: ' servir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.05241664871573448
    2. ' stock' → logprob: -3.6774165630340576
    3. 'serv' → logprob: -4.302416801452637
    4. 'stock' → logprob: -5.427416801452637
    5. ' conten' → logprob: -6.427416801452637
    6. ' compter' → logprob: -6.802416801452637
    7. ' représ' → logprob: -6.927416801452637
    8. 'être' → logprob: -7.302416801452637
    9. 'conten' → logprob: -7.302416801452637
    10. '[' → logprob: -7.802416801452637

Token 169: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0008478637901134789
    2. 'e' → logprob: -8.125847816467285
    3. ' des' → logprob: -8.625847816467285
    4. 'uler' → logprob: -9.625847816467285
    5. 's' → logprob: -9.750847816467285
    6. ' ' → logprob: -10.500847816467285
    7. 'érer' → logprob: -10.750847816467285
    8. ')' → logprob: -11.000847816467285
    9. 'ée' → logprob: -11.125847816467285
    10. ' les' → logprob: -11.375847816467285

Token 170: ' certains' (ID: 30681)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23545251786708832
    2. ' les' → logprob: -1.9854525327682495
    3. 'des' → logprob: -3.11045241355896
    4. '<|end|>' → logprob: -4.610452651977539
    5. 'les' → logprob: -4.985452651977539
    6. 's' → logprob: -5.235452651977539
    7. ' ' → logprob: -6.360452651977539
    8. '0' → logprob: -6.985452651977539
    9. '[' → logprob: -7.360452651977539
    10. ' le' → logprob: -7.610452651977539

Token 171: ' valeurs' (ID: 73668)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.2656722366809845
    2. 's' → logprob: -2.890672206878662
    3. 'com' → logprob: -3.015672206878662
    4. 'counts' → logprob: -3.015672206878662
    5. ' résultats' → logprob: -4.015672206878662
    6. 'nombre' → logprob: -4.515672206878662
    7. 'indices' → logprob: -4.515672206878662
    8. ' counts' → logprob: -4.515672206878662
    9. ' compt' → logprob: -5.265672206878662
    10. 'coeff' → logprob: -5.515672206878662

Token 172: ' interm' (ID: 120489)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2416605949401855
    2. ' =' → logprob: -1.3666605949401855
    3. 's' → logprob: -1.9916605949401855
    4. 'num' → logprob: -2.4916605949401855
    5. ')' → logprob: -3.4916605949401855
    6. '_num' → logprob: -3.4916605949401855
    7. ' Num' → logprob: -3.6166605949401855
    8. ' ' → logprob: -3.7416605949401855
    9. ',' → logprob: -4.1166605949401855
    10. ']' → logprob: -4.2416605949401855

Token 173: 'édia' (ID: 49296)
  Prédit: 'édia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'édia' → logprob: -0.07838389277458191
    2. 'édi' → logprob: -3.0783839225769043
    3. 'édiaire' → logprob: -3.7033839225769043
    4. 'medi' → logprob: -6.703383922576904
    5. 'édit' → logprob: -7.453383922576904
    6. 'edi' → logprob: -7.703383922576904
    7. 'mediate' → logprob: -7.828383922576904
    8. 'im' → logprob: -8.078383445739746
    9. 'edia' → logprob: -8.203383445739746
    10. '```' → logprob: -8.328383445739746

Token 174: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.023923702538013458
    2. 'res' → logprob: -3.773923635482788
    3. 'ries' → logprob: -8.898923873901367
    4. 't' → logprob: -9.273923873901367
    5. 'r' → logprob: -9.273923873901367
    6. 'ire' → logprob: -9.648923873901367
    7. 'es' → logprob: -9.898923873901367
    8. 're' → logprob: -9.898923873901367
    9. '```' → logprob: -10.148923873901367
    10. 's' → logprob: -10.273923873901367

Token 175: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7593472599983215
    2. ',' → logprob: -1.3843472003936768
    3. 's' → logprob: -2.6343472003936768
    4. '[]' → logprob: -3.2593472003936768
    5. ']' → logprob: -3.6343472003936768
    6. '.' → logprob: -3.6343472003936768
    7. 'num' → logprob: -3.8843472003936768
    8. '[num' → logprob: -3.8843472003936768
    9. ')' → logprob: -4.009347438812256
    10. '(' → logprob: -4.634347438812256

Token 176: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -2.3795937522663735e-05
    2. ' Num' → logprob: -11.37502384185791
    3. 'num' → logprob: -11.62502384185791
    4. 'Nums' → logprob: -13.50002384185791
    5. '[' → logprob: -14.25002384185791
    6. '_num' → logprob: -15.00002384185791
    7. '_Num' → logprob: -15.00002384185791
    8. 's' → logprob: -16.125022888183594
    9. '```' → logprob: -16.125022888183594
    10. 'NUM' → logprob: -16.250022888183594

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740915596485138
    2. '=' → logprob: -0.9740915298461914
    3. '=[' → logprob: -12.224091529846191
    4. '[' → logprob: -12.474091529846191
    5. ' =[' → logprob: -12.974091529846191
    6. ' ' → logprob: -13.724091529846191
    7. ']' → logprob: -14.474091529846191
    8. ')' → logprob: -14.474091529846191
    9. 's' → logprob: -15.099091529846191
    10. '＝' → logprob: -15.474091529846191

Token 178: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048808660358190536
    2. ' [' → logprob: -3.0488085746765137
    3. '[s' → logprob: -8.423809051513672
    4. '[n' → logprob: -13.923809051513672
    5. '0' → logprob: -15.423809051513672
    6. '[k' → logprob: -15.923809051513672
    7. '[num' → logprob: -16.548809051513672
    8. ' ' → logprob: -16.798809051513672
    9. 's' → logprob: -16.923809051513672
    10. '[int' → logprob: -17.048809051513672

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '00' → logprob: -18.062551498413086
    4. '۰' → logprob: -18.062551498413086
    5. '   ' → logprob: -18.250051498413086
    6. ',' → logprob: -18.375051498413086
    7. '(' → logprob: -18.562551498413086
    8. '
' → logprob: -18.687551498413086
    9. '000' → logprob: -18.750051498413086
    10. ']' → logprob: -18.750051498413086

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001519325451226905
    2. ']*(' → logprob: -9.375151634216309
    3. ' for' → logprob: -10.500151634216309
    4. ']*' → logprob: -10.750151634216309
    5. ' ]' → logprob: -11.500151634216309
    6. 'for' → logprob: -11.875151634216309
    7. ']+' → logprob: -14.500151634216309
    8. ')' → logprob: -15.250151634216309
    9. 's' → logprob: -17.500152587890625
    10. '(s' → logprob: -17.750152587890625

Token 181: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1466360241174698
    2. ' for' → logprob: -2.6466360092163086
    3. ']*(' → logprob: -3.0216360092163086
    4. 'for' → logprob: -4.646636009216309
    5. ']*' → logprob: -5.646636009216309
    6. '*' → logprob: -6.271636009216309
    7. '*(' → logprob: -7.021636009216309
    8. ' *' → logprob: -8.146636009216309
    9. '0' → logprob: -9.021636009216309
    10. ',' → logprob: -9.271636009216309

Token 182: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001114106344175525
    2. ' (' → logprob: -9.12511157989502
    3. '(' → logprob: -13.00011157989502
    4. '((' → logprob: -16.125110626220703
    5. 's' → logprob: -17.000110626220703
    6. '(S' → logprob: -18.375110626220703
    7. ' ' → logprob: -19.500110626220703
    8. '(
' → logprob: -19.625110626220703
    9. ' s' → logprob: -20.375110626220703
    10. '   ' → logprob: -20.375110626220703

Token 183: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00017767686222214252
    2. ' s' → logprob: -8.750177383422852
    3. '(s' → logprob: -10.875177383422852
    4. ' (' → logprob: -16.25017738342285
    5. '   ' → logprob: -16.37517738342285
    6. ')' → logprob: -17.87517738342285
    7. '{s' → logprob: -17.87517738342285
    8. '(' → logprob: -18.00017738342285
    9. ' ' → logprob: -18.12517738342285
    10. '
' → logprob: -18.75017738342285

Token 184: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012809180771000683
    2. ' +' → logprob: -9.000127792358398
    3. '+
' → logprob: -12.875127792358398
    4. '1' → logprob: -13.250127792358398
    5. ' plus' → logprob: -16.1251277923584
    6. ')+' → logprob: -17.3751277923584
    7. 'plus' → logprob: -17.5001277923584
    8. '＋' → logprob: -17.5001277923584
    9. '```' → logprob: -18.1251277923584
    10. '()+' → logprob: -18.2501277923584

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018208740220870823
    2. ' ' → logprob: -8.625182151794434
    3. '2' → logprob: -13.250182151794434
    4. '```' → logprob: -14.625182151794434
    5. '   ' → logprob: -15.625182151794434
    6. '
' → logprob: -17.250181198120117
    7. '7' → logprob: -17.500181198120117
    8. '[' → logprob: -17.687681198120117
    9. ')' → logprob: -17.750181198120117
    10. '  ' → logprob: -18.437681198120117

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.894790981779806e-05
    2. ' ' → logprob: -10.250048637390137
    3. '2' → logprob: -11.250048637390137
    4. '7' → logprob: -16.125049591064453
    5. '```' → logprob: -16.125049591064453
    6. '10' → logprob: -17.125049591064453
    7. '11' → logprob: -17.562549591064453
    8. '   ' → logprob: -17.625049591064453
    9. '
' → logprob: -17.875049591064453
    10. '  ' → logprob: -18.625049591064453

Token 187: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -12.250008583068848
    3. ')
' → logprob: -12.875008583068848
    4. ')

' → logprob: -14.875008583068848
    5. '+' → logprob: -16.00000762939453
    6. ')#' → logprob: -16.62500762939453
    7. ']' → logprob: -16.75000762939453
    8. '#' → logprob: -17.12500762939453
    9. '```' → logprob: -17.37500762939453
    10. '),' → logprob: -17.50000762939453

Token 188: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2638511061668396
    2. '#' → logprob: -2.0138511657714844
    3. ')' → logprob: -2.8888511657714844
    4. 'i' → logprob: -4.513851165771484
    5. '[' → logprob: -4.763851165771484
    6. ' for' → logprob: -5.138851165771484
    7. '(' → logprob: -5.388851165771484
    8. ']' → logprob: -5.888851165771484
    9. '<|end|>' → logprob: -5.888851165771484
    10. '+' → logprob: -6.263851165771484

Token 189: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006595384911634028
    2. 'i' → logprob: -8.000659942626953
    3. 'def' → logprob: -8.625659942626953
    4. '#' → logprob: -10.250659942626953
    5. 'num' → logprob: -10.375659942626953
    6. 'result' → logprob: -11.250659942626953
    7. 'sum' → logprob: -11.250659942626953
    8. 'Num' → logprob: -11.875659942626953
    9. 'j' → logprob: -12.000659942626953
    10. ' for' → logprob: -12.375659942626953

Token 190: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.00779080530628562
    2. 'c' → logprob: -4.882791042327881
    3. 'clé' → logprob: -9.632790565490723
    4. 'cl' → logprob: -10.257790565490723
    5. 'for' → logprob: -10.382790565490723
    6. 'cler' → logprob: -11.507790565490723
    7. 't' → logprob: -11.507790565490723
    8. 'cles' → logprob: -11.507790565490723
    9. '```' → logprob: -12.257790565490723
    10. 'n' → logprob: -12.257790565490723

Token 191: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.386979877948761
    2. ' for' → logprob: -1.1369798183441162
    3. 'i' → logprob: -10.636980056762695
    4. ' i' → logprob: -10.761980056762695
    5. ':' → logprob: -10.761980056762695
    6. '
' → logprob: -11.511980056762695
    7. '_' → logprob: -11.636980056762695
    8. 's' → logprob: -12.011980056762695
    9. 'range' → logprob: -13.261980056762695
    10. '=' → logprob: -13.261980056762695

Token 192: ' allant' (ID: 122150)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11619608849287033
    2. 'i' → logprob: -2.2411961555480957
    3. '_' → logprob: -5.991196155548096
    4. ' _' → logprob: -7.366196155548096
    5. ' for' → logprob: -8.741195678710938
    6. ' ' → logprob: -10.366195678710938
    7. ' ' → logprob: -10.491195678710938
    8. 'for' → logprob: -11.616195678710938
    9. '	i' → logprob: -13.366195678710938
    10. '_i' → logprob: -13.616195678710938

Token 193: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10308314114809036
    2. 'i' → logprob: -2.3530831336975098
    3. '_' → logprob: -5.97808313369751
    4. ' de' → logprob: -8.353083610534668
    5. ' ' → logprob: -10.353083610534668
    6. ' _' → logprob: -10.478083610534668
    7. 'de' → logprob: -11.728083610534668
    8. ' ' → logprob: -11.853083610534668
    9. '_i' → logprob: -12.478083610534668
    10. ')' → logprob: -12.853083610534668

Token 194: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02416658215224743
    2. 'i' → logprob: -4.274166584014893
    3. '0' → logprob: -5.274166584014893
    4. ' ' → logprob: -5.774166584014893
    5. ' i' → logprob: -6.899166584014893
    6. 's' → logprob: -7.399166584014893
    7. '2' → logprob: -10.524166107177734
    8. ' s' → logprob: -10.649166107177734
    9. '_' → logprob: -11.524166107177734
    10. 'k' → logprob: -12.149166107177734

Token 195: 's' (ID: 82)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014548459090292454
    2. '0' → logprob: -4.639548301696777
    3. 'i' → logprob: -5.639548301696777
    4. 's' → logprob: -7.014548301696777
    5. ' ' → logprob: -8.514548301696777
    6. 'k' → logprob: -10.389548301696777
    7. ' i' → logprob: -10.389548301696777
    8. '2' → logprob: -10.639548301696777
    9. 'n' → logprob: -11.889548301696777
    10. 'l' → logprob: -11.952048301696777

Token 196: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4033258259296417
    2. ' +' → logprob: -1.1533257961273193
    3. ',' → logprob: -4.403326034545898
    4. ' ,' → logprob: -7.153326034545898
    5. ' down' → logprob: -7.403326034545898
    6. 's' → logprob: -7.403326034545898
    7. 'down' → logprob: -7.528326034545898
    8. ')' → logprob: -8.028326034545898
    9. ' -' → logprob: -8.278326034545898
    10. ' ' → logprob: -8.278326034545898

Token 197: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08856368064880371
    2. '+' → logprob: -3.2135636806488037
    3. ' ,' → logprob: -4.088563919067383
    4. ' down' → logprob: -4.338563919067383
    5. ' à' → logprob: -5.338563919067383
    6. 'down' → logprob: -5.838563919067383
    7. ' ' → logprob: -6.213563919067383
    8. '-' → logprob: -6.713563919067383
    9. ' +' → logprob: -7.213563919067383
    10. ' au' → logprob: -7.338563919067383

Token 198: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.37008219957351685
    2. 'u' → logprob: -1.870082139968872
    3. 'e' → logprob: -3.120082139968872
    4. ''au' → logprob: -3.245082139968872
    5. ''en' → logprob: -3.995082139968872
    6. '’à' → logprob: -3.995082139968872
    7. 'à' → logprob: -4.870082378387451
    8. 'au' → logprob: -5.120082378387451
    9. ' à' → logprob: -5.370082378387451
    10. 'a' → logprob: -6.245082378387451

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09984467923641205
    2. ' ' → logprob: -2.5998446941375732
    3. '1' → logprob: -3.9748446941375732
    4. '-' → logprob: -6.599844455718994
    5. ' -' → logprob: -7.474844455718994
    6. '2' → logprob: -11.724844932556152
    7. '```' → logprob: -12.099844932556152
    8. '
' → logprob: -12.224844932556152
    9. 'n' → logprob: -13.849844932556152
    10. 'k' → logprob: -14.037344932556152

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3730621635913849
    2. '0' → logprob: -1.2480621337890625
    3. ' ' → logprob: -3.7480621337890625
    4. '-' → logprob: -7.6230621337890625
    5. ' -' → logprob: -8.873062133789062
    6. '2' → logprob: -9.998062133789062
    7. '```' → logprob: -10.123062133789062
    8. 'n' → logprob: -11.498062133789062
    9. '
' → logprob: -12.123062133789062
    10. 'k' → logprob: -12.498062133789062

Token 201: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007077055983245373
    2. ' ,' → logprob: -5.007077217102051
    3. '[::-' → logprob: -9.13207721710205
    4. '(' → logprob: -9.63207721710205
    5. ',-' → logprob: -10.13207721710205
    6. ',
' → logprob: -10.38207721710205
    7. ' ' → logprob: -10.75707721710205
    8. '(reverse' → logprob: -11.00707721710205
    9. 's' → logprob: -11.25707721710205
    10. ' in' → logprob: -11.88207721710205

Token 202: 'in' (ID: 258)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010517011396586895
    2. ' ,' → logprob: -4.885517120361328
    3. '-' → logprob: -6.635517120361328
    4. '0' → logprob: -7.885517120361328
    5. 's' → logprob: -7.885517120361328
    6. ' -' → logprob: -8.010517120361328
    7. ',-' → logprob: -8.260517120361328
    8. ' ' → logprob: -9.635517120361328
    9. '),' → logprob: -9.760517120361328
    10. '1' → logprob: -10.010517120361328

Token 203: 'clus' (ID: 4085)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023667363449931145
    2. ' ,' → logprob: -3.773667335510254
    3. ',-' → logprob: -9.273667335510254
    4. 's' → logprob: -9.773667335510254
    5. 'n' → logprob: -10.273667335510254
    6. '-' → logprob: -10.773667335510254
    7. '0' → logprob: -10.898667335510254
    8. '+' → logprob: -10.898667335510254
    9. ' ' → logprob: -11.398667335510254
    10. '1' → logprob: -11.398667335510254

Token 204: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010328111238777637
    2. ' ,' → logprob: -7.001032829284668
    3. 's' → logprob: -9.751032829284668
    4. '),' → logprob: -10.626032829284668
    5. ',-' → logprob: -11.751032829284668
    6. '0' → logprob: -12.376032829284668
    7. '-' → logprob: -12.876032829284668
    8. ')' → logprob: -13.126032829284668
    9. ' ' → logprob: -13.126032829284668
    10. '1' → logprob: -13.251032829284668

Token 205: ' en' (ID: 469)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03644779324531555
    2. '-' → logprob: -4.036448001861572
    3. ' ' → logprob: -4.286448001861572
    4. '0' → logprob: -5.911448001861572
    5. ',' → logprob: -7.161448001861572
    6. ' ,' → logprob: -8.286447525024414
    7. 's' → logprob: -9.036447525024414
    8. ' s' → logprob: -9.286447525024414
    9. ' step' → logprob: -9.536447525024414
    10. '```' → logprob: -9.536447525024414

Token 206: ' décr' (ID: 123041)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.5895847082138062
    2. 'reverse' → logprob: -1.0895847082138062
    3. 're' → logprob: -3.4645848274230957
    4. ' recul' → logprob: -3.8395848274230957
    5. '-' → logprob: -4.589584827423096
    6. ' ' → logprob: -4.714584827423096
    7. ' -' → logprob: -4.839584827423096
    8. 'descending' → logprob: -5.339584827423096
    9. ' decrement' → logprob: -5.589584827423096
    10. 'r' → logprob: -5.714584827423096

Token 207: 'ément' (ID: 17645)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.9261904358863831
    2. 'c' → logprob: -1.8011903762817383
    3. 'cre' → logprob: -2.0511903762817383
    4. 'crement' → logprob: -2.4261903762817383
    5. 'creasing' → logprob: -2.4261903762817383
    6. 'sc' → logprob: -2.6761903762817383
    7. 'ré' → logprob: -4.426190376281738
    8. 'range' → logprob: -4.676190376281738
    9. 'cré' → logprob: -4.926190376281738
    10. 're' → logprob: -5.051190376281738

Token 208: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.4140021800994873
    2. 't' → logprob: -1.5390021800994873
    3. 'aire' → logprob: -2.1640021800994873
    4. ',' → logprob: -2.2890021800994873
    5. 's' → logprob: -2.2890021800994873
    6. '=-' → logprob: -2.9140021800994873
    7. 'er' → logprob: -3.1640021800994873
    8. '=' → logprob: -3.1640021800994873
    9. '-' → logprob: -3.7890021800994873
    10. 'e' → logprob: -3.9140021800994873

Token 209: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0914019346237183
    2. ',' → logprob: -1.5914019346237183
    3. ' -' → logprob: -1.7164019346237183
    4. '-' → logprob: -1.9664019346237183
    5. ' ' → logprob: -2.841402053833008
    6. ' i' → logprob: -4.091402053833008
    7. ' ,' → logprob: -4.841402053833008
    8. ' de' → logprob: -4.966402053833008
    9. 'i' → logprob: -4.966402053833008
    10. '=' → logprob: -5.091402053833008

Token 210: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.058981552720069885
    2. ' -' → logprob: -3.1839816570281982
    3. '1' → logprob: -4.183981418609619
    4. ' ' → logprob: -7.433981418609619
    5. 's' → logprob: -10.933981895446777
    6. ' ' → logprob: -13.058981895446777
    7. ')' → logprob: -13.746481895446777
    8. '```' → logprob: -14.058981895446777
    9. ',' → logprob: -14.183981895446777
    10. ' s' → logprob: -14.433981895446777

Token 211: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05536411702632904
    2. '1' → logprob: -2.9303641319274902
    3. ' -' → logprob: -7.68036413192749
    4. ' ' → logprob: -11.180363655090332
    5. '```' → logprob: -12.680363655090332
    6. '
' → logprob: -14.180363655090332
    7. 's' → logprob: -14.555363655090332
    8. '   ' → logprob: -15.430363655090332
    9. '−' → logprob: -15.430363655090332
    10. '  ' → logprob: -15.992863655090332

Token 212: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059704676270484924
    2. ' for' → logprob: -3.5597047805786133
    3. 'for' → logprob: -4.434704780578613
    4. ' in' → logprob: -4.809704780578613
    5. '[::-' → logprob: -5.809704780578613
    6. ':' → logprob: -6.184704780578613
    7. ' ,' → logprob: -6.684704780578613
    8. 'range' → logprob: -7.059704780578613
    9. 'in' → logprob: -7.434704780578613
    10. '(range' → logprob: -7.559704780578613

Token 213: ' chaque' (ID: 21194)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6758843064308167
    2. 'pas' → logprob: -1.1758842468261719
    3. 'step' → logprob: -2.550884246826172
    4. '-step' → logprob: -3.175884246826172
    5. '1' → logprob: -4.175884246826172
    6. ' -' → logprob: -4.550884246826172
    7. ' step' → logprob: -4.675884246826172
    8. ' pas' → logprob: -5.050884246826172
    9. 'steps' → logprob: -5.175884246826172
    10. 'l' → logprob: -5.425884246826172

Token 214: ' it' (ID: 480)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.687688946723938
    2. 'i' → logprob: -1.437688946723938
    3. ' i' → logprob: -2.4376888275146484
    4. 'step' → logprob: -2.8126888275146484
    5. ' pas' → logprob: -3.0626888275146484
    6. ' step' → logprob: -3.5626888275146484
    7. '-' → logprob: -4.687688827514648
    8. 's' → logprob: -4.937688827514648
    9. '1' → logprob: -5.437688827514648
    10. 'range' → logprob: -5.437688827514648

Token 215: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7839986681938171
    2. 'i' → logprob: -1.658998727798462
    3. 's' → logprob: -2.158998727798462
    4. 'rès' → logprob: -2.658998727798462
    5. ',' → logprob: -3.158998727798462
    6. 'r' → logprob: -3.158998727798462
    7. '#' → logprob: -4.158998489379883
    8. 'range' → logprob: -4.408998489379883
    9. 'in' → logprob: -5.158998489379883
    10. 'u' → logprob: -5.408998489379883

Token 216: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9642597436904907
    2. 'for' → logprob: -1.0892597436904907
    3. ' for' → logprob: -1.9642597436904907
    4. ':' → logprob: -2.214259624481201
    5. '[::-' → logprob: -4.214259624481201
    6. ':
' → logprob: -4.964259624481201
    7. '(range' → logprob: -5.089259624481201
    8. 'range' → logprob: -6.339259624481201
    9. ',
' → logprob: -7.714259624481201
    10. '```' → logprob: -7.964259624481201

Token 217: 'mar' (ID: 8185)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7302200198173523
    2. ' for' → logprob: -2.105220079421997
    3. ' range' → logprob: -2.230220079421997
    4. 'for' → logprob: -2.355220079421997
    5. ')' → logprob: -2.480220079421997
    6. 'range' → logprob: -2.855220079421997
    7. ' s' → logprob: -3.855220079421997
    8. ' ,' → logprob: -4.605219841003418
    9. ' ' → logprob: -5.480219841003418
    10. 's' → logprob: -5.730219841003418

Token 218: 'che' (ID: 926)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ge' → logprob: -1.2760895490646362
    2. 's' → logprob: -2.276089668273926
    3. 'nge' → logprob: -2.651089668273926
    4. 'g' → logprob: -2.901089668273926
    5. '   ' → logprob: -3.151089668273926
    6. ' s' → logprob: -3.151089668273926
    7. ',' → logprob: -3.151089668273926
    8. 'ng' → logprob: -3.401089668273926
    9. 'x' → logprob: -3.526089668273926
    10. 'j' → logprob: -3.776089668273926

Token 219: ' arrière' (ID: 100451)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18852414190769196
    2. '=' → logprob: -2.4385242462158203
    3. '-' → logprob: -3.5635242462158203
    4. 'down' → logprob: -4.06352424621582
    5. ' -' → logprob: -4.68852424621582
    6. ' ,' → logprob: -4.81352424621582
    7. ' ' → logprob: -4.93852424621582
    8. ' down' → logprob: -5.93852424621582
    9. ')' → logprob: -6.06352424621582
    10. 'own' → logprob: -6.31352424621582

Token 220: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003178273618686944
    2. ' ,' → logprob: -9.500317573547363
    3. 'for' → logprob: -10.000317573547363
    4. '[::-' → logprob: -10.000317573547363
    5. '):' → logprob: -10.500317573547363
    6. ':' → logprob: -11.000317573547363
    7. ')' → logprob: -11.250317573547363
    8. 'range' → logprob: -11.250317573547363
    9. 's' → logprob: -11.250317573547363
    10. '(reverse' → logprob: -11.625317573547363

Token 221: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028517094906419516
    2. ' for' → logprob: -5.877851486206055
    3. '
' → logprob: -10.252851486206055
    4. 'range' → logprob: -11.752851486206055
    5. ',' → logprob: -13.752851486206055
    6. '```' → logprob: -13.877851486206055
    7. ':' → logprob: -14.377851486206055
    8. ')' → logprob: -15.002851486206055
    9. '' → logprob: -15.627851486206055
    10. ' 
' → logprob: -15.877851486206055

Token 222: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22555866837501526
    2. 'i' → logprob: -1.6005586385726929
    3. ' s' → logprob: -9.725558280944824
    4. ' x' → logprob: -10.475558280944824
    5. 's' → logprob: -11.100558280944824
    6. 'x' → logprob: -11.100558280944824
    7. ' ' → logprob: -11.225558280944824
    8. '	i' → logprob: -12.475558280944824
    9. ' v' → logprob: -12.850558280944824
    10. ' ' → logprob: -13.725558280944824

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012766849249601364
    2. 'in' → logprob: -4.3877668380737305
    3. 's' → logprob: -8.88776683807373
    4. ' ' → logprob: -9.26276683807373
    5. ' i' → logprob: -11.88776683807373
    6. 'range' → logprob: -12.51276683807373
    7. '   ' → logprob: -13.13776683807373
    8. '  ' → logprob: -13.38776683807373
    9. 'n' → logprob: -13.76276683807373
    10. 'd' → logprob: -13.76276683807373

Token 224: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6525129079818726
    2. 'range' → logprob: -0.7775129079818726
    3. 's' → logprob: -4.277513027191162
    4. ' s' → logprob: -5.152513027191162
    5. ' reversed' → logprob: -10.527512550354004
    6. ' ' → logprob: -11.152512550354004
    7. 're' → logprob: -12.277512550354004
    8. '	range' → logprob: -13.277512550354004
    9. 'rang' → logprob: -13.527512550354004
    10. 'reverse' → logprob: -13.527512550354004

Token 225: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.64970643306151e-05
    2. '(' → logprob: -9.375086784362793
    3. '(i' → logprob: -13.625086784362793
    4. ' (' → logprob: -15.125086784362793
    5. 's' → logprob: -16.000085830688477
    6. ',' → logprob: -19.000085830688477
    7. '(
' → logprob: -19.750085830688477
    8. '((' → logprob: -19.750085830688477
    9. '(start' → logprob: -20.000085830688477
    10. '(S' → logprob: -20.250085830688477

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. ' ,' → logprob: -10.625025749206543
    3. '1' → logprob: -15.125025749206543
    4. ',
' → logprob: -15.250025749206543
    5. ',i' → logprob: -15.250025749206543
    6. 's' → logprob: -15.500025749206543
    7. ',s' → logprob: -16.250024795532227
    8. '0' → logprob: -17.000024795532227
    9. 'i' → logprob: -17.375024795532227
    10. ' ' → logprob: -18.875024795532227

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006267757853493094
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.625627517700195
    4. '
' → logprob: -16.875627517700195
    5. '  ' → logprob: -16.875627517700195
    6. '1' → logprob: -17.125627517700195
    7. '```' → logprob: -17.250627517700195
    8. '  
' → logprob: -17.750627517700195
    9. '-' → logprob: -18.125627517700195
    10. ' ' → logprob: -18.625627517700195

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '1' → logprob: -15.375004768371582
    4. '```' → logprob: -17.1250057220459
    5. '-' → logprob: -17.7500057220459
    6. '۰' → logprob: -18.5625057220459
    7. '   ' → logprob: -18.6250057220459
    8. '
' → logprob: -18.8125057220459
    9. '	' → logprob: -19.1250057220459
    10. '`' → logprob: -19.3125057220459

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07180178910493851
    2. '-' → logprob: -2.6968019008636475
    3. ' -' → logprob: -6.446801662445068
    4. ' ,' → logprob: -8.696802139282227
    5. '-,' → logprob: -10.071802139282227
    6. ',-' → logprob: -10.321802139282227
    7. '0' → logprob: -10.571802139282227
    8. ',
' → logprob: -12.446802139282227
    9. ' ' → logprob: -12.821802139282227
    10. '   ' → logprob: -13.071802139282227

Token 230: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001170225441455841
    2. ' -' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.751171112060547
    4. '   ' → logprob: -18.751171112060547
    5. '−' → logprob: -19.376171112060547
    6. '```' → logprob: -19.376171112060547
    7. '	' → logprob: -19.751171112060547
    8. '  ' → logprob: -20.501171112060547
    9. '-step' → logprob: -20.876171112060547
    10. '-
' → logprob: -21.251171112060547

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038266051560640335
    2. '-' → logprob: -3.2882659435272217
    3. ' -' → logprob: -8.4132661819458
    4. ' ' → logprob: -13.1632661819458
    5. ')' → logprob: -14.9132661819458
    6. ',' → logprob: -15.2882661819458
    7. '```' → logprob: -16.038265228271484
    8. '   ' → logprob: -16.288265228271484
    9. ',-' → logprob: -17.288265228271484
    10. '):
' → logprob: -17.538265228271484

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018553424160927534
    2. '):
' → logprob: -6.501855373382568
    3. ',' → logprob: -9.12685489654541
    4. ' ):' → logprob: -9.12685489654541
    5. '-' → logprob: -9.50185489654541
    6. ')' → logprob: -10.37685489654541
    7. ':' → logprob: -11.25185489654541
    8. '):-' → logprob: -11.75185489654541
    9. '):
' → logprob: -12.75185489654541
    10. ' -' → logprob: -13.00185489654541

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1568737030029297
    2. ' Num' → logprob: -1.2818737030029297
    3. ' ' → logprob: -1.9068737030029297
    4. ' i' → logprob: -2.0318737030029297
    5. 'Num' → logprob: -2.5318737030029297
    6. '    ' → logprob: -4.53187370300293
    7. ' num' → logprob: -5.15687370300293
    8. ' ' → logprob: -5.15687370300293
    9. '  ' → logprob: -5.65687370300293
    10. 'num' → logprob: -5.90687370300293

Token 234: ' #' (ID: 1069)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.36426424980163574
    2. ' Num' → logprob: -1.3642642498016357
    3. '   ' → logprob: -4.239264488220215
    4. 'num' → logprob: -4.614264488220215
    5. 'if' → logprob: -5.364264488220215
    6. 'x' → logprob: -5.864264488220215
    7. ' ' → logprob: -5.989264488220215
    8. 'val' → logprob: -6.114264488220215
    9. 't' → logprob: -6.239264488220215
    10. ' num' → logprob: -6.364264488220215

Token 235: ' L' (ID: 451)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.04036383703351021
    2. 'val' → logprob: -4.540363788604736
    3. 'if' → logprob: -4.790363788604736
    4. 'num' → logprob: -4.790363788604736
    5. 'x' → logprob: -5.540363788604736
    6. 'v' → logprob: -5.915363788604736
    7. 'count' → logprob: -6.790363788604736
    8. 'div' → logprob: -7.040363788604736
    9. ' Num' → logprob: -7.165363788604736
    10. 'value' → logprob: -7.665363788604736

Token 236: ''' (ID: 6)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Num' → logprob: -0.896622359752655
    2. ' i' → logprob: -1.6466224193572998
    3. 'e' → logprob: -1.8966224193572998
    4. '   ' → logprob: -2.5216224193573
    5. ' ' → logprob: -3.0216224193573
    6. 'i' → logprob: -3.1466224193573
    7. 'Num' → logprob: -3.6466224193573
    8. ' num' → logprob: -4.646622180938721
    9. 'a' → logprob: -5.271622180938721
    10. '#' → logprob: -5.521622180938721

Token 237: 'élé' (ID: 15228)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.1580023765563965
    2. 'i' → logprob: -1.9080023765563965
    3. 'Num' → logprob: -1.9080023765563965
    4. ' val' → logprob: -2.9080023765563965
    5. ' i' → logprob: -2.9080023765563965
    6. ' num' → logprob: -3.0330023765563965
    7. ' ' → logprob: -3.2830023765563965
    8. 'val' → logprob: -3.4080023765563965
    9. ' Num' → logprob: -3.4080023765563965
    10. '   ' → logprob: -3.5330023765563965

Token 238: 'ment' (ID: 508)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1165143251419067
    2. 'Num' → logprob: -1.6165143251419067
    3. 'i' → logprob: -2.116514205932617
    4. 'e' → logprob: -2.366514205932617
    5. 'iste' → logprob: -2.991514205932617
    6. '#' → logprob: -3.366514205932617
    7. '   ' → logprob: -3.491514205932617
    8. 'num' → logprob: -3.616514205932617
    9. 'ève' → logprob: -3.866514205932617
    10. ' i' → logprob: -4.116514205932617

Token 239: ' à' (ID: 1221)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Num' → logprob: -0.8393286466598511
    2. '[i' → logprob: -1.589328646659851
    3. 'Num' → logprob: -2.4643287658691406
    4. '[' → logprob: -2.5893287658691406
    5. ' i' → logprob: -2.5893287658691406
    6. ' ' → logprob: -2.5893287658691406
    7. ' [' → logprob: -3.2143287658691406
    8. '   ' → logprob: -5.589328765869141
    9. ' ' → logprob: -5.964328765869141
    10. ' num' → logprob: -6.839328765869141

Token 240: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10187357664108276
    2. ' i' → logprob: -2.9768736362457275
    3. 'Num' → logprob: -3.2268736362457275
    4. ' Num' → logprob: -5.601873397827148
    5. '[i' → logprob: -6.851873397827148
    6. 's' → logprob: -7.601873397827148
    7. 'num' → logprob: -7.601873397827148
    8. '[' → logprob: -9.101873397827148
    9. ' s' → logprob: -9.351873397827148
    10. '(i' → logprob: -9.914373397827148

Token 241: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12132593989372253
    2. '[i' → logprob: -2.371325969696045
    3. ' i' → logprob: -3.996325969696045
    4. '[' → logprob: -6.746325969696045
    5. ''i' → logprob: -8.121325492858887
    6. '   ' → logprob: -8.496325492858887
    7. '`' → logprob: -8.621325492858887
    8. 'Num' → logprob: -8.871325492858887
    9. '_i' → logprob: -9.371325492858887
    10. 'a' → logprob: -9.746325492858887

Token 242: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.018835941329598427
    2. 'ice' → logprob: -4.01883602142334
    3. 'i' → logprob: -8.01883602142334
    4. 'dex' → logprob: -8.51883602142334
    5. 'x' → logprob: -10.01883602142334
    6. 'é' → logprob: -10.51883602142334
    7. 'ices' → logprob: -10.76883602142334
    8. '#' → logprob: -11.01883602142334
    9. 'e' → logprob: -11.51883602142334
    10. '[' → logprob: -11.89383602142334

Token 243: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1569584459066391
    2. ' i' → logprob: -2.0319583415985107
    3. '[i' → logprob: -4.28195858001709
    4. 's' → logprob: -9.40695858001709
    5. ' [' → logprob: -9.40695858001709
    6. '[' → logprob: -9.53195858001709
    7. 'Num' → logprob: -9.65695858001709
    8. ' Num' → logprob: -11.15695858001709
    9. ' s' → logprob: -11.40695858001709
    10. '   ' → logprob: -11.78195858001709

Token 244: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.3676733690081164e-05
    2. ' i' → logprob: -10.75002384185791
    3. '   ' → logprob: -14.25002384185791
    4. 's' → logprob: -14.75002384185791
    5. '[i' → logprob: -14.75002384185791
    6. '
' → logprob: -15.50002384185791
    7. ' ' → logprob: -16.250022888183594
    8. '```' → logprob: -16.750022888183594
    9. '[' → logprob: -16.875022888183594
    10. '	i' → logprob: -17.250022888183594

Token 245: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005625854711979628
    2. ''' → logprob: -5.5056257247924805
    3. ']=' → logprob: -6.8806257247924805
    4. '']' → logprob: -8.50562572479248
    5. ' ]' → logprob: -9.00562572479248
    6. '-' → logprob: -10.00562572479248
    7. ']'' → logprob: -10.38062572479248
    8. ' =' → logprob: -10.50562572479248
    9. '=' → logprob: -10.50562572479248
    10. 's' → logprob: -11.63062572479248

Token 246: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4289924204349518
    2. '=' → logprob: -1.0539923906326294
    3. ' ' → logprob: -9.05399227142334
    4. ']' → logprob: -9.30399227142334
    5. ']=' → logprob: -10.55399227142334
    6. '=i' → logprob: -10.80399227142334
    7. '=int' → logprob: -12.30399227142334
    8. ')' → logprob: -12.30399227142334
    9. ' ' → logprob: -12.42899227142334
    10. ' =
' → logprob: -12.42899227142334

Token 247: ' la' (ID: 557)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0002314303710591048
    2. ' Num' → logprob: -8.375231742858887
    3. 'num' → logprob: -15.000231742858887
    4. '_Num' → logprob: -15.500231742858887
    5. 'Nums' → logprob: -15.625231742858887
    6. ' ' → logprob: -17.12523078918457
    7. '_num' → logprob: -17.25023078918457
    8. '`' → logprob: -17.25023078918457
    9. 'Numer' → logprob: -17.75023078918457
    10. '[' → logprob: -17.87523078918457

Token 248: ' liste' (ID: 31719)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -1.2233183042553719e-05
    2. ' Num' → logprob: -11.750012397766113
    3. 'num' → logprob: -12.500012397766113
    4. 'Nums' → logprob: -15.125012397766113
    5. '_num' → logprob: -17.000011444091797
    6. 'i' → logprob: -17.000011444091797
    7. '_Num' → logprob: -17.125011444091797
    8. '```' → logprob: -17.250011444091797
    9. ' ' → logprob: -17.375011444091797
    10. '`' → logprob: -17.375011444091797

Token 249: ' '' (ID: 461)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.3496115207672119
    2. ' Num' → logprob: -1.224611520767212
    3. ' ' → logprob: -7.724611282348633
    4. ' =' → logprob: -8.974611282348633
    5. '   ' → logprob: -9.099611282348633
    6. ' num' → logprob: -9.724611282348633
    7. '`' → logprob: -9.849611282348633
    8. '  ' → logprob: -9.849611282348633
    9. ' i' → logprob: -10.099611282348633
    10. ' ' → logprob: -10.224611282348633

Token 250: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0001681405701674521
    2. ' Num' → logprob: -8.750167846679688
    3. 'num' → logprob: -11.750167846679688
    4. 'Nums' → logprob: -14.625167846679688
    5. ' ' → logprob: -15.000167846679688
    6. '   ' → logprob: -15.500167846679688
    7. '  ' → logprob: -16.000167846679688
    8. 'i' → logprob: -16.125167846679688
    9. '_Num' → logprob: -16.250167846679688
    10. 'Nu' → logprob: -16.500167846679688

Token 251: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029109124094247818
    2. ']=' → logprob: -4.654109001159668
    3. '[i' → logprob: -5.029109001159668
    4. '']' → logprob: -5.779109001159668
    5. ' =' → logprob: -5.904109001159668
    6. ' ]' → logprob: -5.904109001159668
    7. ''' → logprob: -6.779109001159668
    8. '=' → logprob: -7.154109001159668
    9. ' ' → logprob: -7.279109001159668
    10. '   ' → logprob: -8.029109001159668

Token 252: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6940760016441345
    2. ' =' → logprob: -0.6940760016441345
    3. '=i' → logprob: -7.944076061248779
    4. ' +=' → logprob: -8.194075584411621
    5. '[i' → logprob: -9.069075584411621
    6. '+=' → logprob: -9.569075584411621
    7. ' ' → logprob: -9.944075584411621
    8. ']' → logprob: -10.694075584411621
    9. '[' → logprob: -11.319075584411621
    10. ']=' → logprob: -11.694075584411621

Token 253: ' assign' (ID: 14975)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.799629271030426
    2. '=' → logprob: -1.2996292114257812
    3. ' i' → logprob: -1.6746292114257812
    4. 'i' → logprob: -3.1746292114257812
    5. ' n' → logprob: -4.299629211425781
    6. 'n' → logprob: -4.424629211425781
    7. ' (' → logprob: -4.424629211425781
    8. ' ' → logprob: -6.424629211425781
    9. '=i' → logprob: -6.424629211425781
    10. ' mod' → logprob: -6.549629211425781

Token 254: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.405434787273407
    2. '=' → logprob: -1.1554348468780518
    3. ' =' → logprob: -4.530434608459473
    4. '[i' → logprob: -5.530434608459473
    5. '[' → logprob: -7.030434608459473
    6. 'ée' → logprob: -7.280434608459473
    7. '   ' → logprob: -7.405434608459473
    8. ']=' → logprob: -8.655434608459473
    9. '=i' → logprob: -8.655434608459473
    10. 'd' → logprob: -8.780434608459473

Token 255: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027755796909332275
    2. ' =' → logprob: -3.7777557373046875
    3. '=i' → logprob: -5.7777557373046875
    4. 'n' → logprob: -7.7777557373046875
    5. ' i' → logprob: -7.9027557373046875
    6. '=n' → logprob: -8.277755737304688
    7. 'i' → logprob: -9.527755737304688
    8. ',' → logprob: -9.652755737304688
    9. '=num' → logprob: -10.152755737304688
    10. ' n' → logprob: -10.527755737304688

Token 256: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4672648012638092
    2. '(n' → logprob: -1.7172647714614868
    3. ' n' → logprob: -1.9672647714614868
    4. ' (' → logprob: -3.3422648906707764
    5. '(i' → logprob: -5.092264652252197
    6. 'i' → logprob: -6.092264652252197
    7. '(s' → logprob: -6.217264652252197
    8. 'mod' → logprob: -6.342264652252197
    9. ' i' → logprob: -6.842264652252197
    10. '(' → logprob: -6.967264652252197

Token 257: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39367666840553284
    2. '(n' → logprob: -1.3936766386032104
    3. 'i' → logprob: -3.8936767578125
    4. ' n' → logprob: -4.1436767578125
    5. 'mod' → logprob: -4.3936767578125
    6. ' (' → logprob: -4.6436767578125
    7. '(i' → logprob: -4.8936767578125
    8. 'pow' → logprob: -5.2686767578125
    9. '((' → logprob: -6.6436767578125
    10. ' i' → logprob: -6.7686767578125

Token 258: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9246776103973389
    2. ' (' → logprob: -1.1746776103973389
    3. ' n' → logprob: -2.424677610397339
    4. '(n' → logprob: -2.424677610397339
    5. '(i' → logprob: -3.299677610397339
    6. ' i' → logprob: -3.549677610397339
    7. 'i' → logprob: -3.674677610397339
    8. '(s' → logprob: -5.049677848815918
    9. '((' → logprob: -5.424677848815918
    10. 'mod' → logprob: -5.424677848815918

Token 259: 'i' (ID: 72)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15301553905010223
    2. '(n' → logprob: -2.028015613555908
    3. ' n' → logprob: -5.153015613555908
    4. ' (' → logprob: -6.778015613555908
    5. '((' → logprob: -6.778015613555908
    6. 'k' → logprob: -7.028015613555908
    7. 'mod' → logprob: -8.02801513671875
    8. '(k' → logprob: -8.27801513671875
    9. 'num' → logprob: -8.52801513671875
    10. '(i' → logprob: -9.02801513671875

Token 260: ''' (ID: 6)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38042107224464417
    2. '*' → logprob: -1.3804210424423218
    3. '*i' → logprob: -2.8804211616516113
    4. '**' → logprob: -5.380421161651611
    5. ' ' → logprob: -5.755421161651611
    6. '2' → logprob: -8.630420684814453
    7. ' i' → logprob: -9.130420684814453
    8. ' +' → logprob: -9.130420684814453
    9. '+' → logprob: -9.130420684814453
    10. ')' → logprob: -9.380420684814453

Token 261: ' lui' (ID: 10623)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.4159749746322632
    2. ' *' → logprob: -1.4159749746322632
    3. '<|end|>' → logprob: -3.1659750938415527
    4. '**' → logprob: -3.6659750938415527
    5. '*' → logprob: -3.9159750938415527
    6. ' **' → logprob: -5.915975093841553
    7. ' ' → logprob: -6.290975093841553
    8. '```' → logprob: -7.290975093841553
    9. '   ' → logprob: -7.415975093841553
    10. '*num' → logprob: -7.415975093841553

Token 262: '-même' (ID: 41085)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.3712902367115021
    2. '*' → logprob: -2.2462902069091797
    3. ' *' → logprob: -2.2462902069091797
    4. ' ' → logprob: -3.9962902069091797
    5. '*num' → logprob: -4.37129020690918
    6. ' i' → logprob: -4.74629020690918
    7. '%' → logprob: -4.87129020690918
    8. 'i' → logprob: -4.87129020690918
    9. '```' → logprob: -5.37129020690918
    10. '**' → logprob: -5.37129020690918

Token 263: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19219177961349487
    2. 'Num' → logprob: -2.5671918392181396
    3. 'i' → logprob: -3.5671918392181396
    4. ' i' → logprob: -3.8171918392181396
    5. '[i' → logprob: -3.9421918392181396
    6. ' Num' → logprob: -4.4421916007995605
    7. '```' → logprob: -5.9421916007995605
    8. ' =' → logprob: -6.1921916007995605
    9. '*i' → logprob: -6.5671916007995605
    10. '    
' → logprob: -6.6921916007995605

Token 265: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' (adapté à ' Num') → logprob: -0.48476237058639526
    2. 'i' → logprob: -1.10976243019104
    3. ' i' → logprob: -3.35976243019104
    4. ' Num' → logprob: -3.98476243019104
    5. '   ' → logprob: -7.109762191772461
    6. ' ' → logprob: -9.234762191772461
    7. 'num' → logprob: -9.484762191772461
    8. '[i' → logprob: -10.109762191772461
    9. ' =' → logprob: -10.359762191772461
    10. '=' → logprob: -11.234762191772461

Token 266: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028309114277362823
    2. '[' → logprob: -5.877830982208252
    3. ' [' → logprob: -10.627830505371094
    4. '[I' → logprob: -14.502830505371094
    5. '=' → logprob: -15.002830505371094
    6. '```' → logprob: -15.002830505371094
    7. '[
' → logprob: -15.627830505371094
    8. ']' → logprob: -16.502830505371094
    9. '[:]' → logprob: -16.627830505371094
    10. '\[' → logprob: -17.002830505371094

Token 267: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8165902495384216
    2. ']' → logprob: -1.0665903091430664
    3. '=' → logprob: -1.5665903091430664
    4. ']=' → logprob: -5.941590309143066
    5. ')' → logprob: -6.316590309143066
    6. '=i' → logprob: -7.566590309143066
    7. ' ]' → logprob: -9.566590309143066
    8. ')=' → logprob: -10.066590309143066
    9. ' ' → logprob: -10.316590309143066
    10. ',' → logprob: -12.066590309143066

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868762254714966
    2. ' =' → logprob: -1.1368762254714966
    3. '=i' → logprob: -12.511876106262207
    4. ' ' → logprob: -15.136876106262207
    5. '=int' → logprob: -15.261876106262207
    6. ' =
' → logprob: -15.636876106262207
    7. '＝' → logprob: -15.886876106262207
    8. ' ' → logprob: -16.136877059936523
    9. '=

' → logprob: -16.261877059936523
    10. '=
' → logprob: -16.636877059936523

Token 269: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003293924732133746
    2. ' i' → logprob: -5.753293991088867
    3. 'n' → logprob: -9.253293991088867
    4. ' ' → logprob: -12.628293991088867
    5. '100' → logprob: -12.753293991088867
    6. 'mod' → logprob: -12.878293991088867
    7. 'k' → logprob: -13.003293991088867
    8. 'int' → logprob: -13.378293991088867
    9. '	i' → logprob: -13.628293991088867
    10. '   ' → logprob: -13.628293991088867

Token 270: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' Aj' (ID: 28294)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.5176622867584229
    2. 'if' → logprob: -1.1426622867584229
    3. 'for' → logprob: -3.017662286758423
    4. ' if' → logprob: -4.142662048339844
    5. 'num' → logprob: -5.017662048339844
    6. ' Num' → logprob: -5.392662048339844
    7. ' for' → logprob: -5.892662048339844
    8. 'while' → logprob: -6.017662048339844
    9. '   ' → logprob: -6.392662048339844
    10. 'i' → logprob: -7.892662048339844

Token 274: 'oute' (ID: 3509)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.18438637256622314
    2. 'outer' → logprob: -1.9343863725662231
    3. 'outez' → logprob: -4.809386253356934
    4. 'oute' → logprob: -5.184386253356934
    5. '+=' → logprob: -6.059386253356934
    6. '+' → logprob: -6.059386253356934
    7. '```' → logprob: -6.934386253356934
    8. 'd' → logprob: -7.184386253356934
    9. '#' → logprob: -7.184386253356934
    10. 'for' → logprob: -7.684386253356934

Token 275: ' à' (ID: 1221)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Num' → logprob: -0.36012715101242065
    2. 'Num' → logprob: -1.3601272106170654
    3. '*' → logprob: -4.860126972198486
    4. ' i' → logprob: -4.985126972198486
    5. ' (' → logprob: -4.985126972198486
    6. ' +=' → logprob: -5.110126972198486
    7. ' =' → logprob: -5.860126972198486
    8. ' ' → logprob: -5.985126972198486
    9. ' *' → logprob: -6.360126972198486
    10. ' num' → logprob: -6.610126972198486

Token 276: ' la' (ID: 557)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.5243873596191406
    2. ' Num' → logprob: -0.8993873596191406
    3. ' (' → logprob: -8.02438735961914
    4. ' i' → logprob: -8.14938735961914
    5. ' ' → logprob: -8.64938735961914
    6. 'num' → logprob: -9.02438735961914
    7. ' num' → logprob: -9.02438735961914
    8. '(' → logprob: -9.02438735961914
    9. 'i' → logprob: -10.52438735961914
    10. ' s' → logprob: -11.27438735961914

Token 277: ' fin' (ID: 2131)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.03838593512773514
    2. ' Num' → logprob: -3.2883858680725098
    3. 'i' → logprob: -8.788386344909668
    4. 'num' → logprob: -9.038386344909668
    5. ' i' → logprob: -10.038386344909668
    6. ' num' → logprob: -11.538386344909668
    7. ' ' → logprob: -12.538386344909668
    8. '   ' → logprob: -13.038386344909668
    9. '_num' → logprob: -13.413386344909668
    10. 'Nums' → logprob: -13.413386344909668

Token 278: ' de' (ID: 334)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.23191753029823303
    2. ' Num' → logprob: -1.6069175004959106
    3. 'num' → logprob: -6.481917381286621
    4. ' ' → logprob: -6.981917381286621
    5. ' num' → logprob: -7.231917381286621
    6. '(' → logprob: -7.481917381286621
    7. '[' → logprob: -7.731917381286621
    8. '[]' → logprob: -7.856917381286621
    9. '   ' → logprob: -8.606917381286621
    10. ' (' → logprob: -8.731917381286621

Token 279: ' la' (ID: 557)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0025128775741904974
    2. ' Num' → logprob: -6.0025129318237305
    3. 'num' → logprob: -11.00251293182373
    4. 'Nums' → logprob: -12.25251293182373
    5. 'List' → logprob: -12.62751293182373
    6. '[' → logprob: -12.62751293182373
    7. '_Num' → logprob: -12.75251293182373
    8. ' ' → logprob: -13.62751293182373
    9. '_num' → logprob: -14.25251293182373
    10. 's' → logprob: -14.62751293182373

Token 280: ' liste' (ID: 31719)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0023989591281861067
    2. ' Num' → logprob: -6.12739896774292
    3. 'num' → logprob: -9.002398490905762
    4. 'List' → logprob: -10.377398490905762
    5. ' list' → logprob: -11.127398490905762
    6. 'list' → logprob: -11.252398490905762
    7. '[' → logprob: -12.002398490905762
    8. ' num' → logprob: -12.502398490905762
    9. ' ' → logprob: -12.627398490905762
    10. '_num' → logprob: -12.627398490905762

Token 281: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.11291579157114029
    2. ' Num' → logprob: -2.2379157543182373
    3. 'num' → logprob: -9.987915992736816
    4. ' ' → logprob: -11.362915992736816
    5. '[' → logprob: -11.737915992736816
    6. ' num' → logprob: -12.112915992736816
    7. 'Nums' → logprob: -12.237915992736816
    8. '_Num' → logprob: -12.737915992736816
    9. '_num' → logprob: -12.862915992736816
    10. '   ' → logprob: -13.237915992736816

Token 282: ' la' (ID: 557)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06996277719736099
    2. 'Num' → logprob: -2.819962739944458
    3. ' Num' → logprob: -5.194962978363037
    4. '.extend' → logprob: -6.444962978363037
    5. ' +=' → logprob: -8.694962501525879
    6. '.' → logprob: -8.819962501525879
    7. 'num' → logprob: -9.194962501525879
    8. '   ' → logprob: -9.569962501525879
    9. ',' → logprob: -9.569962501525879
    10. 'append' → logprob: -10.069962501525879

Token 283: ' valeur' (ID: 41664)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Num' → logprob: -0.6217777132987976
    2. 'Num' → logprob: -1.4967777729034424
    3. ' s' → logprob: -2.7467777729034424
    4. 'i' → logprob: -3.1217777729034424
    5. 's' → logprob: -3.1217777729034424
    6. ' i' → logprob: -3.4967777729034424
    7. ' n' → logprob: -3.8717777729034424
    8. 'n' → logprob: -3.8717777729034424
    9. 'num' → logprob: -5.371777534484863
    10. ' ' → logprob: -5.621777534484863

Token 284: ' entière' (ID: 61583)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Num' → logprob: -0.5483996272087097
    2. 'Num' → logprob: -1.0483996868133545
    3. ' s' → logprob: -3.7983996868133545
    4. 's' → logprob: -4.298399448394775
    5. ' num' → logprob: -4.923399448394775
    6. 'num' → logprob: -5.048399448394775
    7. ' i' → logprob: -5.173399448394775
    8. ' n' → logprob: -5.423399448394775
    9. 'n' → logprob: -5.673399448394775
    10. 'i' → logprob: -5.798399448394775

Token 285: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6157231330871582
    2. '(' → logprob: -1.6157231330871582
    3. '(i' → logprob: -2.615723133087158
    4. 'Num' → logprob: -3.115723133087158
    5. ' (' → logprob: -3.365723133087158
    6. '(s' → logprob: -3.490723133087158
    7. '((' → logprob: -3.865723133087158
    8. ' Num' → logprob: -3.990723133087158
    9. 'n' → logprob: -4.240723133087158
    10. 's' → logprob: -4.865723133087158

Token 286: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12083218991756439
    2. ' n' → logprob: -2.2458322048187256
    3. '(n' → logprob: -5.1208319664001465
    4. ' (' → logprob: -6.8708319664001465
    5. 'num' → logprob: -7.8708319664001465
    6. ' ' → logprob: -8.370832443237305
    7. '(' → logprob: -8.370832443237305
    8. ' num' → logprob: -11.120832443237305
    9. ' ' → logprob: -11.120832443237305
    10. '100' → logprob: -11.495832443237305

Token 287: ' div' (ID: 4223)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20154306292533875
    2. ' //' → logprob: -1.7015430927276611
    3. ' ' → logprob: -9.451542854309082
    4. ' ' → logprob: -10.826542854309082
    5. '#' → logprob: -11.326542854309082
    6. 'n' → logprob: -11.826542854309082
    7. '/' → logprob: -12.951542854309082
    8. '```' → logprob: -12.951542854309082
    9. '   ' → logprob: -13.451542854309082
    10. '/n' → logprob: -13.576542854309082

Token 288: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.5428042411804199
    2. '//' → logprob: -1.54280424118042
    3. '#' → logprob: -2.54280424118042
    4. 'ision' → logprob: -3.04280424118042
    5. 'n' → logprob: -3.91780424118042
    6. 'i' → logprob: -4.54280424118042
    7. ' (' → logprob: -4.91780424118042
    8. '(n' → logprob: -5.04280424118042
    9. ' //' → logprob: -5.16780424118042
    10. 'isible' → logprob: -5.41780424118042

Token 289: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04737477749586105
    2. ' (' → logprob: -4.422374725341797
    3. ' n' → logprob: -4.797374725341797
    4. '#' → logprob: -4.922374725341797
    5. '//' → logprob: -4.922374725341797
    6. 'i' → logprob: -5.172374725341797
    7. '(n' → logprob: -5.797374725341797
    8. '(' → logprob: -6.672374725341797
    9. ' //' → logprob: -8.297374725341797
    10. 'j' → logprob: -8.422374725341797

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028393494430929422
    2. ' i' → logprob: -5.8778395652771
    3. '   ' → logprob: -11.127839088439941
    4. ' ' → logprob: -11.127839088439941
    5. '	i' → logprob: -12.877839088439941
    6. '  ' → logprob: -14.127839088439941
    7. ' ' → logprob: -14.252839088439941
    8. 'n' → logprob: -15.252839088439941
    9. '(i' → logprob: -15.627839088439941
    10. '    ' → logprob: -15.877839088439941

Token 291: ' (' (ID: 350)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.13757583498954773
    2. ' Num' → logprob: -3.01257586479187
    3. ',' → logprob: -3.38757586479187
    4. '   ' → logprob: -3.38757586479187
    5. '.append' → logprob: -5.137575626373291
    6. '+' → logprob: -6.887575626373291
    7. 'num' → logprob: -6.887575626373291
    8. ',
' → logprob: -7.012575626373291
    9. ')' → logprob: -7.637575626373291
    10. '_num' → logprob: -7.887575626373291

Token 292: 'division' (ID: 50596)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3694485127925873
    2. ' n' → logprob: -1.2444485425949097
    3. ')' → logprob: -5.619448661804199
    4. ' (' → logprob: -5.744448661804199
    5. 'i' → logprob: -5.994448661804199
    6. 'int' → logprob: -5.994448661804199
    7. ' i' → logprob: -6.119448661804199
    8. ' )' → logprob: -6.119448661804199
    9. '(n' → logprob: -6.869448661804199
    10. ' ' → logprob: -7.369448661804199

Token 293: ' entière' (ID: 61583)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6589263677597046
    2. '//' → logprob: -0.9089263677597046
    3. 'n' → logprob: -3.783926486968994
    4. ')' → logprob: -3.908926486968994
    5. ' entière' → logprob: -4.158926486968994
    6. ' ' → logprob: -4.783926486968994
    7. 'integer' → logprob: -5.533926486968994
    8. ' integer' → logprob: -6.283926486968994
    9. ' )' → logprob: -6.408926486968994
    10. '#' → logprob: -6.658926486968994

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015842553228139877
    2. ' )' → logprob: -5.015842437744141
    3. '))' → logprob: -5.390842437744141
    4. '),' → logprob: -6.515842437744141
    5. '//' → logprob: -6.765842437744141
    6. ',' → logprob: -7.515842437744141
    7. ')//' → logprob: -8.76584243774414
    8. ' ' → logprob: -8.76584243774414
    9. ' //' → logprob: -9.01584243774414
    10. ')
' → logprob: -9.26584243774414

Token 295: '   ' (ID: 271)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.14040382206439972
    2. ' Num' → logprob: -2.3904037475585938
    3. '   ' → logprob: -3.2654037475585938
    4. 'num' → logprob: -8.015403747558594
    5. '.append' → logprob: -8.265403747558594
    6. ',' → logprob: -8.640403747558594
    7. ' ' → logprob: -9.140403747558594
    8. '  ' → logprob: -9.765403747558594
    9. '+' → logprob: -10.265403747558594
    10. '[' → logprob: -10.265403747558594

Token 296: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' (adapté à ' Num') → logprob: -0.03840566799044609
    2. ' Num' → logprob: -3.288405656814575
    3. '   ' → logprob: -8.538405418395996
    4. 'num' → logprob: -9.038405418395996
    5. ' num' → logprob: -11.413405418395996
    6. ' ' → logprob: -11.413405418395996
    7. '_Num' → logprob: -12.413405418395996
    8. 'Nums' → logprob: -12.788405418395996
    9. '
' → logprob: -12.913405418395996
    10. '.Num' → logprob: -13.038405418395996

Token 297: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005241821985691786
    2. '.' → logprob: -5.255241870880127
    3. '.extend' → logprob: -12.005241394042969
    4. '[i' → logprob: -14.505241394042969
    5. '.app' → logprob: -14.755241394042969
    6. ' .' → logprob: -15.380241394042969
    7. '.ap' → logprob: -15.630241394042969
    8. 'append' → logprob: -15.630241394042969
    9. '.i' → logprob: -16.25524139404297
    10. ').' → logprob: -16.50524139404297

Token 298: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005288454121910036
    2. '(' → logprob: -7.750528812408447
    3. '(int' → logprob: -9.250529289245605
    4. 'n' → logprob: -13.625529289245605
    5. '((' → logprob: -14.125529289245605
    6. ' (' → logprob: -16.50052833557129
    7. '(
' → logprob: -17.25052833557129
    8. ' n' → logprob: -17.75052833557129
    9. 'int' → logprob: -18.37552833557129
    10. '	n' → logprob: -18.87552833557129

Token 299: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5762342810630798
    2. '//' → logprob: -0.8262342810630798
    3. ' ' → logprob: -8.451233863830566
    4. '#' → logprob: -10.326233863830566
    5. ' ' → logprob: -10.951233863830566
    6. ' //
' → logprob: -11.576233863830566
    7. '   ' → logprob: -11.826233863830566
    8. ' #' → logprob: -12.951233863830566
    9. '//
' → logprob: -12.951233863830566
    10. '
' → logprob: -13.451233863830566

Token 300: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.518582762917504e-05
    2. ' i' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.500085830688477
    4. ' ' → logprob: -16.625085830688477
    5. '	i' → logprob: -16.625085830688477
    6. ')' → logprob: -17.125085830688477
    7. ')i' → logprob: -17.625085830688477
    8. '<|end|>' → logprob: -17.875085830688477
    9. '(i' → logprob: -18.125085830688477
    10. '
' → logprob: -18.875085830688477

Token 301: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ' )' → logprob: -12.125014305114746
    3. ')
' → logprob: -12.375014305114746
    4. '))' → logprob: -12.750014305114746
    5. ')i' → logprob: -14.500014305114746
    6. '   ' → logprob: -15.125014305114746
    7. ')#' → logprob: -16.00001335144043
    8. ')`' → logprob: -16.12501335144043
    9. '[i' → logprob: -16.25001335144043
    10. ')}' → logprob: -16.87501335144043

Token 302: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4678424298763275
    2. 'sum' → logprob: -2.7178423404693604
    3. '#' → logprob: -2.8428423404693604
    4. 'result' → logprob: -2.9678423404693604
    5. 'res' → logprob: -3.2178423404693604
    6. 'print' → logprob: -3.3428423404693604
    7. 'total' → logprob: -3.8428423404693604
    8. 'num' → logprob: -3.8428423404693604
    9. 'm' → logprob: -4.5928425788879395
    10. 'Num' → logprob: -4.5928425788879395

Token 304: ' variable' (ID: 11076)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42235231399536133
    2. 'for' → logprob: -1.5473523139953613
    3. 'Num' → logprob: -3.5473523139953613
    4. 's' → logprob: -3.9223523139953613
    5. 'sum' → logprob: -4.297352313995361
    6. 'num' → logprob: -4.297352313995361
    7. 'n' → logprob: -4.672352313995361
    8. 'm' → logprob: -5.172352313995361
    9. ' for' → logprob: -5.297352313995361
    10. 'i' → logprob: -5.672352313995361

Token 305: ' '' (ID: 461)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.3969082832336426
    2. '#' → logprob: -1.7719082832336426
    3. 'for' → logprob: -2.0219082832336426
    4. 'total' → logprob: -2.2719082832336426
    5. 'result' → logprob: -2.3969082832336426
    6. 'max' → logprob: -2.7719082832336426
    7. 'num' → logprob: -3.0219082832336426
    8. 'res' → logprob: -3.7719082832336426
    9. 'print' → logprob: -4.396908283233643
    10. 'm' → logprob: -4.646908283233643

Token 306: 'l' (ID: 75)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2317193746566772
    2. 'ans' → logprob: -2.106719493865967
    3. 'result' → logprob: -2.356719493865967
    4. 'dp' → logprob: -2.606719493865967
    5. 'Num' → logprob: -2.731719493865967
    6. 'answer' → logprob: -3.231719493865967
    7. 'm' → logprob: -3.356719493865967
    8. 'num' → logprob: -3.731719493865967
    9. 'sum' → logprob: -3.856719493865967
    10. 'f' → logprob: -4.231719493865967

Token 307: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34037116169929504
    2. '=' → logprob: -2.2153711318969727
    3. 'e' → logprob: -3.2153711318969727
    4. 'en' → logprob: -3.4653711318969727
    5. ',' → logprob: -3.5903711318969727
    6. 'eft' → logprob: -3.5903711318969727
    7. 'l' → logprob: -3.9653711318969727
    8. 'ist' → logprob: -4.590371131896973
    9. 's' → logprob: -5.215371131896973
    10. 'et' → logprob: -5.840371131896973

Token 308: ' reçoit' (ID: 151051)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023299168795347214
    2. ' =' → logprob: -3.773299217224121
    3. ',' → logprob: -10.273299217224121
    4. '=len' → logprob: -11.023299217224121
    5. '=l' → logprob: -13.648299217224121
    6. 'l' → logprob: -14.648299217224121
    7. 's' → logprob: -14.773299217224121
    8. '=
' → logprob: -14.898299217224121
    9. '=

' → logprob: -16.148298263549805
    10. '=int' → logprob: -16.773298263549805

Token 309: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7445406317710876
    2. 'len' → logprob: -0.8695406317710876
    3. '0' → logprob: -2.6195406913757324
    4. 's' → logprob: -3.6195406913757324
    5. 'l' → logprob: -6.119540691375732
    6. 'Num' → logprob: -6.994540691375732
    7. ' len' → logprob: -7.119540691375732
    8. '2' → logprob: -7.494540691375732
    9. '[' → logprob: -7.494540691375732
    10. 'i' → logprob: -8.119540214538574

Token 310: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008167600259184837
    2. 's' → logprob: -5.758167743682861
    3. '0' → logprob: -6.508167743682861
    4. 'l' → logprob: -6.508167743682861
    5. '2' → logprob: -7.133167743682861
    6. '1' → logprob: -7.883167743682861
    7. '(len' → logprob: -8.758167266845703
    8. 'length' → logprob: -9.133167266845703
    9. '=len' → logprob: -9.633167266845703
    10. '[' → logprob: -9.883167266845703

Token 311: ' actuelle' (ID: 104951)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.16394434869289398
    2. 'l' → logprob: -2.1639442443847656
    3. '(' → logprob: -3.5389442443847656
    4. 'of' → logprob: -5.538944244384766
    5. '=' → logprob: -6.038944244384766
    6. ' =' → logprob: -8.163944244384766
    7. 's' → logprob: -8.663944244384766
    8. 'L' → logprob: -8.913944244384766
    9. '(l' → logprob: -9.663944244384766
    10. '_num' → logprob: -9.788944244384766

Token 312: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.18993043899536133
    2. '(' → logprob: -2.4399304389953613
    3. 'Num' → logprob: -2.5649304389953613
    4. ' de' → logprob: -4.939930438995361
    5. 'of' → logprob: -7.189930438995361
    6. 'l' → logprob: -8.439929962158203
    7. '#' → logprob: -8.564929962158203
    8. ' Num' → logprob: -9.314929962158203
    9. ' of' → logprob: -9.564929962158203
    10. ' (' → logprob: -9.564929962158203

Token 313: ' la' (ID: 557)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.00015908108616713434
    2. ' Num' → logprob: -8.75015926361084
    3. 'num' → logprob: -15.37515926361084
    4. 'Nums' → logprob: -15.50015926361084
    5. '_Num' → logprob: -18.250158309936523
    6. '(' → logprob: -18.500158309936523
    7. ' ' → logprob: -18.500158309936523
    8. 'List' → logprob: -18.625158309936523
    9. 'Numer' → logprob: -19.000158309936523
    10. ' ' → logprob: -19.250158309936523

Token 314: ' liste' (ID: 31719)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.000493937055580318
    2. ' Num' → logprob: -7.625494003295898
    3. 'num' → logprob: -12.875494003295898
    4. 'Nums' → logprob: -13.625494003295898
    5. 'List' → logprob: -13.875494003295898
    6. '_Num' → logprob: -14.875494003295898
    7. '[' → logprob: -15.500494003295898
    8. ' ' → logprob: -16.1254940032959
    9. '#' → logprob: -16.5004940032959
    10. ' ' → logprob: -16.6254940032959

Token 315: ' '' (ID: 461)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.001635547261685133
    2. '(' → logprob: -6.501635551452637
    3. 'l' → logprob: -9.251635551452637
    4. ' Num' → logprob: -10.751635551452637
    5. 'Len' → logprob: -12.001635551452637
    6. 'L' → logprob: -12.501635551452637
    7. 'Nums' → logprob: -12.751635551452637
    8. 'num' → logprob: -13.501635551452637
    9. '_Num' → logprob: -14.126635551452637
    10. '_num' → logprob: -15.626635551452637

Token 316: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -1.2664456789934775e-06
    2. ' Num' → logprob: -13.750000953674316
    3. 'num' → logprob: -15.875000953674316
    4. '[' → logprob: -17.625001907348633
    5. '(' → logprob: -17.750001907348633
    6. 'Nums' → logprob: -18.000001907348633
    7. '```' → logprob: -19.125001907348633
    8. '`' → logprob: -20.000001907348633
    9. '
' → logprob: -20.000001907348633
    10. 'NUM' → logprob: -20.750001907348633

Token 317: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5607272982597351
    2. 'l' → logprob: -0.9357272982597351
    3. ' l' → logprob: -4.560727119445801
    4. '#' → logprob: -5.185727119445801
    5. ',' → logprob: -5.935727119445801
    6. '+' → logprob: -6.060727119445801
    7. ',l' → logprob: -6.060727119445801
    8. '-l' → logprob: -6.310727119445801
    9. '+l' → logprob: -6.685727119445801
    10. ']' → logprob: -6.810727119445801

Token 318: ' qui' (ID: 2780)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0013410773826763034
    2. ' l' → logprob: -6.626340866088867
    3. '
' → logprob: -12.251340866088867
    4. '```' → logprob: -12.501340866088867
    5. '#' → logprob: -13.001340866088867
    6. ' 
' → logprob: -13.626340866088867
    7. '	l' → logprob: -13.876340866088867
    8. ')' → logprob: -14.626340866088867
    9. 'len' → logprob: -14.751340866088867
    10. ' ' → logprob: -15.376340866088867

Token 319: ' est' (ID: 893)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4444429278373718
    2. 'est' → logprob: -1.6944429874420166
    3. ' est' → logprob: -2.9444429874420166
    4. 's' → logprob: -3.5694429874420166
    5. 'len' → logprob: -3.9444429874420166
    6. '<|end|>' → logprob: -4.1944427490234375
    7. '#' → logprob: -4.8194427490234375
    8. 'maint' → logprob: -4.8194427490234375
    9. 'n' → logprob: -4.9444427490234375
    10. '```' → logprob: -5.1944427490234375

Token 320: ' maintenant' (ID: 35735)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005118065746501088
    2. ' len' → logprob: -7.625511646270752
    3. '2' → logprob: -11.37551212310791
    4. 'l' → logprob: -11.62551212310791
    5. '(len' → logprob: -13.62551212310791
    6. 's' → logprob: -14.12551212310791
    7. '	len' → logprob: -14.87551212310791
    8. '   ' → logprob: -14.87551212310791
    9. ' ' → logprob: -15.37551212310791
    10. '  ' → logprob: -16.625511169433594

Token 321: ' plus' (ID: 2932)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.007757577113807201
    2. ' len' → logprob: -4.882757663726807
    3. 'l' → logprob: -9.007757186889648
    4. '(len' → logprob: -11.632757186889648
    5. '	len' → logprob: -12.007757186889648
    6. '   ' → logprob: -12.382757186889648
    7. '=len' → logprob: -12.507757186889648
    8. '```' → logprob: -13.007757186889648
    9. ' ' → logprob: -14.132757186889648
    10. '2' → logprob: -14.257757186889648

Token 322: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.9118932485580444
    2. 'grand' → logprob: -1.2868932485580444
    3. 'que' → logprob: -2.036893367767334
    4. 'long' → logprob: -2.161893367767334
    5. '>' → logprob: -3.786893367767334
    6. 'import' → logprob: -4.286893367767334
    7. 'de' → logprob: -4.536893367767334
    8. 'du' → logprob: -4.661893367767334
    9. 'large' → logprob: -5.536893367767334
    10. '```' → logprob: -5.661893367767334

Token 323: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03694319352507591
    2. 'len' → logprob: -3.411943197250366
    3. ' s' → logprob: -5.911942958831787
    4. ' len' → logprob: -8.536943435668945
    5. '(s' → logprob: -9.161943435668945
    6. '2' → logprob: -9.536943435668945
    7. 'l' → logprob: -9.786943435668945
    8. '0' → logprob: -10.411943435668945
    9. 'Num' → logprob: -10.536943435668945
    10. 'initial' → logprob: -10.536943435668945

Token 325: '+' (ID: 10)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08999285846948624
    2. '+' → logprob: -3.0899927616119385
    3. ' =' → logprob: -3.5899927616119385
    4. '=len' → logprob: -4.964993000030518
    5. 'l' → logprob: -5.839993000030518
    6. '+=' → logprob: -6.339993000030518
    7. 'en' → logprob: -7.339993000030518
    8. '=l' → logprob: -8.83999252319336
    9. ' +' → logprob: -8.96499252319336
    10. 'ength' → logprob: -9.58999252319336

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012606780976057053
    2. '+' → logprob: -4.387606620788574
    3. 's' → logprob: -10.262606620788574
    4. 'len' → logprob: -10.762606620788574
    5. 'l' → logprob: -11.262606620788574
    6. '2' → logprob: -11.762606620788574
    7. '```' → logprob: -12.887606620788574
    8. '11' → logprob: -13.262606620788574
    9. '=' → logprob: -13.262606620788574
    10. ' +' → logprob: -13.387606620788574

Token 327: '.
' (ID: 558)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015867470065131783
    2. '=' → logprob: -7.0015869140625
    3. ' =' → logprob: -7.3765869140625
    4. '=l' → logprob: -10.2515869140625
    5. '
' → logprob: -12.7515869140625
    6. ' l' → logprob: -12.7515869140625
    7. ',' → logprob: -12.7515869140625
    8. '.' → logprob: -13.6265869140625
    9. '_l' → logprob: -13.6265869140625
    10. ',l' → logprob: -14.1265869140625

Token 328: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -13.375001907348633
    3. ' l' → logprob: -15.375001907348633
    4. 'for' → logprob: -17.250001907348633
    5. 'len' → logprob: -17.375001907348633
    6. 'Num' → logprob: -18.250001907348633
    7. '`' → logprob: -18.250001907348633
    8. '[' → logprob: -19.125001907348633
    9. 'num' → logprob: -19.375001907348633
    10. '
' → logprob: -19.625001907348633

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023258404806256294
    2. ' =' → logprob: -3.7732584476470947
    3. '=len' → logprob: -11.273258209228516
    4. '=int' → logprob: -16.398258209228516
    5. '＝' → logprob: -16.398258209228516
    6. ',' → logprob: -16.898258209228516
    7. '=num' → logprob: -17.273258209228516
    8. '=
' → logprob: -17.773258209228516
    9. '=

' → logprob: -17.773258209228516
    10. '=size' → logprob: -18.023258209228516

Token 330: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.5491004129871726e-05
    2. ' len' → logprob: -10.000045776367188
    3. '(len' → logprob: -18.250045776367188
    4. 'l' → logprob: -20.125045776367188
    5. '	len' → logprob: -21.000045776367188
    6. '[len' → logprob: -21.250045776367188
    7. '=len' → logprob: -22.500045776367188
    8. '   ' → logprob: -23.125045776367188
    9. ',len' → logprob: -23.375045776367188
    10. 'le' → logprob: -23.375045776367188

Token 331: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. 'Num' → logprob: -14.250000953674316
    3. ' (' → logprob: -16.625
    4. '(num' → logprob: -17.0
    5. '(NUM' → logprob: -17.125
    6. '(
' → logprob: -18.0
    7. '(Number' → logprob: -18.0
    8. '(N' → logprob: -18.25
    9. ' Num' → logprob: -19.5
    10. '_Num' → logprob: -20.75

Token 332: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0005539863486774266
    2. '(' → logprob: -7.500554084777832
    3. ' Num' → logprob: -13.875554084777832
    4. 'Nums' → logprob: -17.125553131103516
    5. 'num' → logprob: -17.250553131103516
    6. ')' → logprob: -17.250553131103516
    7. '_Num' → logprob: -17.875553131103516
    8. 'NUM' → logprob: -18.375553131103516
    9. '_num' → logprob: -20.250553131103516
    10. '.Num' → logprob: -21.250553131103516

Token 333: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.875001907348633
    4. ')#' → logprob: -16.750001907348633
    5. ')

' → logprob: -17.250001907348633
    6. '))' → logprob: -17.375001907348633
    7. ')-' → logprob: -18.000001907348633
    8. '#' → logprob: -18.375001907348633
    9. '),' → logprob: -18.500001907348633
    10. ')`' → logprob: -18.625001907348633

Token 334: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27088943123817444
    2. '#' → logprob: -3.0208895206451416
    3. 'sum' → logprob: -3.2708895206451416
    4. 'dp' → logprob: -3.5208895206451416
    5. 'i' → logprob: -3.7708895206451416
    6. 'Num' → logprob: -4.0208892822265625
    7. 'res' → logprob: -4.2708892822265625
    8. 'max' → logprob: -4.5208892822265625
    9. 'result' → logprob: -4.6458892822265625
    10. 'total' → logprob: -5.0208892822265625

Token 335: ' Bou' (ID: 33816)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5126184821128845
    2. 'Sum' → logprob: -2.6376185417175293
    3. 'DP' → logprob: -3.0126185417175293
    4. 'f' → logprob: -3.3876185417175293
    5. 'sum' → logprob: -3.3876185417175293
    6. 'F' → logprob: -3.5126185417175293
    7. 'Ans' → logprob: -3.8876185417175293
    8. 'ans' → logprob: -4.012618541717529
    9. 'Num' → logprob: -4.137618541717529
    10. 'G' → logprob: -4.512618541717529

Token 336: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.01303116325289011
    2. 'clé' → logprob: -5.138031005859375
    3. 'c' → logprob: -5.388031005859375
    4. 'cl' → logprob: -6.763031005859375
    5. 'for' → logprob: -7.638031005859375
    6. '#' → logprob: -7.763031005859375
    7. 'cles' → logprob: -8.263031005859375
    8. '```' → logprob: -9.638031005859375
    9. 't' → logprob: -10.638031005859375
    10. 'cler' → logprob: -11.013031005859375

Token 337: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005943018011748791
    2. ' for' → logprob: -5.1309428215026855
    3. 'i' → logprob: -11.630943298339844
    4. '#' → logprob: -12.880943298339844
    5. '```' → logprob: -14.005943298339844
    6. '	for' → logprob: -14.505943298339844
    7. '   ' → logprob: -15.005943298339844
    8. ' i' → logprob: -15.505943298339844
    9. 'range' → logprob: -15.505943298339844
    10. '=' → logprob: -15.630943298339844

Token 338: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19805003702640533
    2. 'i' → logprob: -1.8230500221252441
    3. ' for' → logprob: -4.073050022125244
    4. '_' → logprob: -7.448050022125244
    5. ' i' → logprob: -8.073050498962402
    6. 'range' → logprob: -9.573050498962402
    7. 'in' → logprob: -10.323050498962402
    8. '```' → logprob: -10.698050498962402
    9. ' in' → logprob: -10.948050498962402
    10. 'l' → logprob: -11.073050498962402

Token 339: ' commence' (ID: 44755)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04994094371795654
    2. ' i' → logprob: -3.424941062927246
    3. 'for' → logprob: -4.299941062927246
    4. ' for' → logprob: -6.174941062927246
    5. '_' → logprob: -8.174941062927246
    6. 'j' → logprob: -10.049941062927246
    7. 'range' → logprob: -10.049941062927246
    8. ' range' → logprob: -10.174941062927246
    9. ' _' → logprob: -10.549941062927246
    10. ' j' → logprob: -11.549941062927246

Token 340: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029392985627055168
    2. '_' → logprob: -4.279393196105957
    3. '(i' → logprob: -4.654393196105957
    4. '(' → logprob: -6.154393196105957
    5. 'for' → logprob: -6.279393196105957
    6. 'from' → logprob: -7.654393196105957
    7. 'l' → logprob: -7.654393196105957
    8. 'j' → logprob: -8.654393196105957
    9. ' i' → logprob: -9.279393196105957
    10. '_i' → logprob: -9.404393196105957

Token 341: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08864092826843262
    2. '1' → logprob: -2.8386409282684326
    3. '0' → logprob: -4.588641166687012
    4. 'i' → logprob: -5.088641166687012
    5. 's' → logprob: -5.338641166687012
    6. '2' → logprob: -5.838641166687012
    7. 'range' → logprob: -6.838641166687012
    8. 'len' → logprob: -7.838641166687012
    9. '(l' → logprob: -7.963641166687012
    10. '(' → logprob: -9.338641166687012

Token 342: ''ind' (ID: 82245)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003604344092309475
    2. ' -' → logprob: -5.628604412078857
    3. 'l' → logprob: -13.5036039352417
    4. 'range' → logprob: -14.5036039352417
    5. 'for' → logprob: -14.6286039352417
    6. '-l' → logprob: -15.2536039352417
    7. '-range' → logprob: -15.3786039352417
    8. '#' → logprob: -15.5036039352417
    9. 'en' → logprob: -15.6286039352417
    10. '1' → logprob: -15.8786039352417

Token 343: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00013011827832087874
    2. 'ice' → logprob: -9.125129699707031
    3. '-' → logprob: -11.250129699707031
    4. 'ices' → logprob: -12.125129699707031
    5. 'e' → logprob: -14.250129699707031
    6. 'dex' → logprob: -14.500129699707031
    7. 'x' → logprob: -14.875129699707031
    8. 'é' → logprob: -15.000129699707031
    9. '#' → logprob: -15.500129699707031
    10. 'exe' → logprob: -15.875129699707031

Token 344: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4135407507419586
    2. 's' → logprob: -1.2885407209396362
    3. '(s' → logprob: -3.788540840148926
    4. '1' → logprob: -4.038540840148926
    5. '(l' → logprob: -4.663540840148926
    6. '0' → logprob: -5.663540840148926
    7. '2' → logprob: -5.663540840148926
    8. '-' → logprob: -5.663540840148926
    9. '(' → logprob: -6.163540840148926
    10. 'range' → logprob: -8.663540840148926

Token 345: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16065414249897003
    2. '1' → logprob: -2.910654067993164
    3. 's' → logprob: -3.160654067993164
    4. '2' → logprob: -3.160654067993164
    5. '0' → logprob: -5.785654067993164
    6. '(l' → logprob: -5.910654067993164
    7. '(s' → logprob: -6.285654067993164
    8. '(' → logprob: -6.785654067993164
    9. 'range' → logprob: -9.660654067993164
    10. 'i' → logprob: -9.660654067993164

Token 346: ' jusqu' (ID: 21961)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010997953824698925
    2. ' for' → logprob: -4.760997772216797
    3. ',' → logprob: -6.760997772216797
    4. 'in' → logprob: -6.885997772216797
    5. ' in' → logprob: -9.260997772216797
    6. 'range' → logprob: -9.635997772216797
    7. '```' → logprob: -11.135997772216797
    8. '
' → logprob: -11.885997772216797
    9. 'and' → logprob: -11.885997772216797
    10. '(range' → logprob: -13.635997772216797

Token 347: ''à' (ID: 33688)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.17541688680648804
    2. '(' → logprob: -2.300416946411133
    3. ',' → logprob: -3.300416946411133
    4. 'à' → logprob: -4.425416946411133
    5. 'l' → logprob: -5.300416946411133
    6. ''à' → logprob: -6.050416946411133
    7. ' à' → logprob: -6.300416946411133
    8. 'a' → logprob: -6.925416946411133
    9. ',l' → logprob: -7.175416946411133
    10. '’à' → logprob: -8.675416946411133

Token 348: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.4987974029500037e-05
    2. ' l' → logprob: -11.125024795532227
    3. 'len' → logprob: -11.500024795532227
    4. '	l' → logprob: -16.875024795532227
    5. 's' → logprob: -17.250024795532227
    6. '(l' → logprob: -17.875024795532227
    7. '1' → logprob: -18.250024795532227
    8. '   ' → logprob: -18.250024795532227
    9. 'range' → logprob: -18.250024795532227
    10. ',' → logprob: -18.500024795532227

Token 349: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4189649522304535
    2. 'l' → logprob: -1.4189649820327759
    3. ' l' → logprob: -3.2939648628234863
    4. '(l' → logprob: -4.168964862823486
    5. '-' → logprob: -4.418964862823486
    6. ',l' → logprob: -4.918964862823486
    7. 'en' → logprob: -5.043964862823486
    8. '+' → logprob: -5.168964862823486
    9. ')' → logprob: -5.418964862823486
    10. '=l' → logprob: -6.043964862823486

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038813117425888777
    2. 'l' → logprob: -5.628881454467773
    3. ')' → logprob: -8.503881454467773
    4. ' ' → logprob: -10.753881454467773
    5. ',' → logprob: -11.253881454467773
    6. '-' → logprob: -11.378881454467773
    7. ' l' → logprob: -11.628881454467773
    8. '2' → logprob: -11.753881454467773
    9. '(' → logprob: -11.878881454467773
    10. '):' → logprob: -12.878881454467773

Token 351: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09633344411849976
    2. ':' → logprob: -2.7213335037231445
    3. ' for' → logprob: -3.8463335037231445
    4. ',' → logprob: -5.8463335037231445
    5. ':
' → logprob: -6.8463335037231445
    6. 'range' → logprob: -7.4713335037231445
    7. 'in' → logprob: -9.971333503723145
    8. '(range' → logprob: -10.471333503723145
    9. ' in' → logprob: -11.096333503723145
    10. ' range' → logprob: -11.221333503723145

Token 352: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008120091515593231
    2. ' for' → logprob: -7.12581205368042
    3. 'range' → logprob: -12.875811576843262
    4. '```' → logprob: -13.375811576843262
    5. ':' → logprob: -13.500811576843262
    6. ',' → logprob: -13.750811576843262
    7. 'in' → logprob: -14.875811576843262
    8. '
' → logprob: -14.875811576843262
    9. ')' → logprob: -15.625811576843262
    10. ':
' → logprob: -16.500812530517578

Token 353: 'car' (ID: 6830)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.37636706233024597
    2. 'for' → logprob: -1.3763670921325684
    3. '):' → logprob: -3.8763670921325684
    4. 'range' → logprob: -3.8763670921325684
    5. ')' → logprob: -4.751367092132568
    6. ',' → logprob: -5.751367092132568
    7. ' for' → logprob: -6.251367092132568
    8. '1' → logprob: -6.376367092132568
    9. ' l' → logprob: -6.501367092132568
    10. '):
' → logprob: -6.626367092132568

Token 354: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20222730934619904
    2. 'range' → logprob: -1.8272273540496826
    3. ' in' → logprob: -4.4522271156311035
    4. ' l' → logprob: -4.8272271156311035
    5. 'l' → logprob: -6.7022271156311035
    6. ')' → logprob: -7.0772271156311035
    7. ' len' → logprob: -9.452227592468262
    8. 'in' → logprob: -9.452227592468262
    9. ' )' → logprob: -9.577227592468262
    10. ' ' → logprob: -9.702227592468262

Token 355: ' s' (ID: 265)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008452449692413211
    2. ',' → logprob: -7.500845432281494
    3. '1' → logprob: -9.125844955444336
    4. '(l' → logprob: -9.875844955444336
    5. '(start' → logprob: -10.125844955444336
    6. ')' → logprob: -10.625844955444336
    7. '```' → logprob: -11.000844955444336
    8. ' (' → logprob: -11.250844955444336
    9. ')(' → logprob: -11.750844955444336
    10. 'start' → logprob: -12.000844955444336

Token 356: ''arr' (ID: 49695)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.884764552116394
    2. '(' → logprob: -1.134764552116394
    3. '(l' → logprob: -2.0097646713256836
    4. '=l' → logprob: -2.3847646713256836
    5. '=(' → logprob: -4.259764671325684
    6. ' =' → logprob: -4.509764671325684
    7. 'l' → logprob: -5.634764671325684
    8. 'range' → logprob: -5.884764671325684
    9. '=start' → logprob: -6.259764671325684
    10. '1' → logprob: -6.509764671325684

Token 357: 'ête' (ID: 16808)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.31486883759498596
    2. 'op' → logprob: -1.3148688077926636
    3. '(top' → logprob: -7.689868927001953
    4. '(l' → logprob: -7.939868927001953
    5. 'e' → logprob: -9.314868927001953
    6. 'etop' → logprob: -9.439868927001953
    7. '[top' → logprob: -9.689868927001953
    8. 'range' → logprob: -9.689868927001953
    9. 'p' → logprob: -9.939868927001953
    10. '```' → logprob: -10.064868927001953

Token 358: ' avant' (ID: 13339)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04613727703690529
    2. ',' → logprob: -4.17113733291626
    3. '1' → logprob: -4.79613733291626
    4. 'at' → logprob: -4.92113733291626
    5. '(l' → logprob: -5.42113733291626
    6. 'l' → logprob: -5.54613733291626
    7. 'à' → logprob: -5.79613733291626
    8. 'au' → logprob: -7.42113733291626
    9. '=' → logprob: -7.54613733291626
    10. 'range' → logprob: -7.92113733291626

Token 359: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00045724798110313714
    2. ' l' → logprob: -7.875457286834717
    3. ',' → logprob: -9.500456809997559
    4. ')' → logprob: -14.125456809997559
    5. ',l' → logprob: -14.125456809997559
    6. '(l' → logprob: -15.000456809997559
    7. '),' → logprob: -15.750456809997559
    8. ' ,' → logprob: -16.000457763671875
    9. '```' → logprob: -16.000457763671875
    10. '   ' → logprob: -16.625457763671875

Token 360: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4771656095981598
    2. '):
' → logprob: -0.9771655797958374
    3. ')' → logprob: -6.102165699005127
    4. ',' → logprob: -7.977165699005127
    5. ':' → logprob: -8.477165222167969
    6. '),' → logprob: -9.852165222167969
    7. '):
' → logprob: -9.977165222167969
    8. '(' → logprob: -9.977165222167969
    9. '):

' → logprob: -10.102165222167969
    10. 'for' → logprob: -10.352165222167969

Token 361: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020273735281080008
    2. ' for' → logprob: -6.25202751159668
    3. 'range' → logprob: -9.25202751159668
    4. '```' → logprob: -13.62702751159668
    5. 'in' → logprob: -14.25202751159668
    6. ' range' → logprob: -14.87702751159668
    7. ' in' → logprob: -15.75202751159668
    8. ',' → logprob: -16.12702751159668
    9. '1' → logprob: -16.12702751159668
    10. '(range' → logprob: -16.62702751159668

Token 362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005241937469691038
    2. ' i' → logprob: -5.505241870880127
    3. 'j' → logprob: -7.005241870880127
    4. 'x' → logprob: -8.505242347717285
    5. ' j' → logprob: -11.630242347717285
    6. 'k' → logprob: -12.130242347717285
    7. '_i' → logprob: -12.380242347717285
    8. 'd' → logprob: -12.505242347717285
    9. '	i' → logprob: -12.630242347717285
    10. '   ' → logprob: -12.880242347717285

Token 363: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5235832929611206
    2. 'in' → logprob: -0.8985832929611206
    3. '1' → logprob: -8.02358341217041
    4. '(' → logprob: -9.52358341217041
    5. ' ' → logprob: -10.89858341217041
    6. '=' → logprob: -11.64858341217041
    7. ',' → logprob: -12.14858341217041
    8. ' =' → logprob: -12.27358341217041
    9. 'import' → logprob: -12.39858341217041
    10. '2' → logprob: -12.77358341217041

Token 364: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06897168606519699
    2. ' range' → logprob: -2.818971633911133
    3. '1' → logprob: -5.193971633911133
    4. 'in' → logprob: -6.818971633911133
    5. ' in' → logprob: -8.568971633911133
    6. ' ' → logprob: -9.068971633911133
    7. '(' → logprob: -10.693971633911133
    8. '   ' → logprob: -12.568971633911133
    9. '(range' → logprob: -13.068971633911133
    10. '  ' → logprob: -13.818971633911133

Token 365: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28116339445114136
    2. '1' → logprob: -1.4061634540557861
    3. ',' → logprob: -12.406163215637207
    4. ' ' → logprob: -12.531163215637207
    5. ' (' → logprob: -13.406163215637207
    6. '2' → logprob: -13.406163215637207
    7. '(
' → logprob: -14.156163215637207
    8. '[' → logprob: -14.281163215637207
    9. '   ' → logprob: -15.156163215637207
    10. '.' → logprob: -15.656163215637207

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4272752852994017e-05
    2. ' ' → logprob: -11.12502384185791
    3. 'l' → logprob: -12.00002384185791
    4. '2' → logprob: -13.50002384185791
    5. '   ' → logprob: -14.00002384185791
    6. '(' → logprob: -14.87502384185791
    7. 's' → logprob: -15.81252384185791
    8. 'len' → logprob: -16.000024795532227
    9. '```' → logprob: -16.375024795532227
    10. '
' → logprob: -16.375024795532227

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019901065388694406
    2. ',l' → logprob: -8.875199317932129
    3. ' ,' → logprob: -9.750199317932129
    4. '+' → logprob: -14.750199317932129
    5. 'l' → logprob: -15.500199317932129
    6. ',len' → logprob: -16.250198364257812
    7. ' l' → logprob: -16.250198364257812
    8. ' +' → logprob: -17.375198364257812
    9. ',
' → logprob: -17.625198364257812
    10. '1' → logprob: -17.875198364257812

Token 368: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0564331205387134e-05
    2. ' l' → logprob: -11.50001049041748
    3. '	l' → logprob: -15.50001049041748
    4. '   ' → logprob: -15.62501049041748
    5. 's' → logprob: -17.000011444091797
    6. 'len' → logprob: -17.500011444091797
    7. ' ' → logprob: -19.375011444091797
    8. ',l' → logprob: -19.500011444091797
    9. '
' → logprob: -20.500011444091797
    10. ',' → logprob: -20.500011444091797

Token 369: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02676721289753914
    2. '):
' → logprob: -3.6517672538757324
    3. ',' → logprob: -7.901767253875732
    4. ' ):' → logprob: -9.901766777038574
    5. ')' → logprob: -11.026766777038574
    6. ':' → logprob: -11.401766777038574
    7. '-' → logprob: -11.526766777038574
    8. '):
' → logprob: -12.901766777038574
    9. '):

' → logprob: -13.276766777038574
    10. ' ):
' → logprob: -14.151766777038574

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033120885491371155
    2. 'Num' → logprob: -3.78312087059021
    3. 'if' → logprob: -5.033121109008789
    4. ':' → logprob: -6.408121109008789
    5. 'for' → logprob: -8.033121109008789
    6. 'num' → logprob: -8.033121109008789
    7. ' if' → logprob: -8.283121109008789
    8. 'print' → logprob: -8.783121109008789
    9. ' Num' → logprob: -8.908121109008789
    10. '#' → logprob: -9.158121109008789

Token 371: ' #' (ID: 1069)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0037801240105181932
    2. '   ' → logprob: -5.878779888153076
    3. 'if' → logprob: -7.378779888153076
    4. 'num' → logprob: -8.503780364990234
    5. ' Num' → logprob: -9.128780364990234
    6. 'print' → logprob: -11.503780364990234
    7. ' ' → logprob: -11.878780364990234
    8. '  ' → logprob: -12.378780364990234
    9. '#' (adapté à ' #') → logprob: -12.628780364990234
    10. '_num' → logprob: -13.128780364990234

Token 372: ' L' (ID: 451)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.003122936934232712
    2. 'if' → logprob: -6.503122806549072
    3. 'num' → logprob: -7.003122806549072
    4. 'pass' → logprob: -7.628122806549072
    5. 'print' → logprob: -9.12812328338623
    6. '   ' → logprob: -9.87812328338623
    7. '#' → logprob: -11.12812328338623
    8. ' Num' → logprob: -11.50312328338623
    9. 'assert' → logprob: -12.62812328338623
    10. 'for' → logprob: -12.75312328338623

Token 373: ''' (ID: 6)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.37898164987564087
    2. 'um' → logprob: -1.378981590270996
    3. 'if' → logprob: -3.253981590270996
    4. '   ' → logprob: -5.003981590270996
    5. ' ' → logprob: -5.253981590270996
    6. ' Num' → logprob: -5.628981590270996
    7. '#' → logprob: -6.003981590270996
    8. 'num' → logprob: -6.503981590270996
    9. ' if' → logprob: -7.253981590270996
    10. 'for' → logprob: -7.253981590270996

Token 374: 'élé' (ID: 15228)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -8.745069499127567e-05
    2. 'num' → logprob: -9.75008773803711
    3. 'if' → logprob: -11.62508773803711
    4. '   ' → logprob: -12.12508773803711
    5. '#' → logprob: -12.50008773803711
    6. ' Num' → logprob: -12.75008773803711
    7. 'i' → logprob: -13.25008773803711
    8. '_num' → logprob: -13.75008773803711
    9. '=' → logprob: -14.00008773803711
    10. 'for' → logprob: -14.37508773803711

Token 375: 'ment' (ID: 508)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.5441890358924866
    2. '#' → logprob: -1.4191889762878418
    3. 'ment' → logprob: -2.419188976287842
    4. 'm' → logprob: -2.544188976287842
    5. '   ' → logprob: -6.044188976287842
    6. '=' → logprob: -6.294188976287842
    7. 'i' → logprob: -6.919188976287842
    8. 'num' → logprob: -7.169188976287842
    9. 'ement' → logprob: -7.419188976287842
    10. '[' → logprob: -7.669188976287842

Token 376: ' de' (ID: 334)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.2875039875507355
    2. '=' → logprob: -2.162503957748413
    3. ' =' → logprob: -2.412503957748413
    4. '#' → logprob: -4.162504196166992
    5. 'i' → logprob: -5.037504196166992
    6. '[' → logprob: -5.162504196166992
    7. '[i' → logprob: -5.162504196166992
    8. 'num' → logprob: -5.787504196166992
    9. ' i' → logprob: -6.787504196166992
    10. '   ' → logprob: -6.912504196166992

Token 377: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -8.792751032160595e-05
    2. ' Num' → logprob: -9.62508773803711
    3. 'num' → logprob: -10.75008773803711
    4. '_Num' → logprob: -16.62508773803711
    5. '_num' → logprob: -16.75008773803711
    6. ' ' → logprob: -17.00008773803711
    7. 'Nums' → logprob: -17.00008773803711
    8. 'i' → logprob: -17.12508773803711
    9. 'Numer' → logprob: -17.25008773803711
    10. 'NUM' → logprob: -18.12508773803711

Token 378: ' en' (ID: 469)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020592445798683912
    2. '[' → logprob: -8.625205993652344
    3. '[num' → logprob: -11.625205993652344
    4. '[j' → logprob: -12.875205993652344
    5. '   ' → logprob: -12.875205993652344
    6. '#' → logprob: -13.250205993652344
    7. 'i' → logprob: -13.375205993652344
    8. 's' → logprob: -13.625205993652344
    9. '```' → logprob: -13.750205993652344
    10. '
' → logprob: -14.000205993652344

Token 379: ' part' (ID: 997)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027978265658020973
    2. '[i' → logprob: -3.6529781818389893
    3. ' i' → logprob: -6.652978420257568
    4. 'position' → logprob: -8.77797794342041
    5. 'indice' → logprob: -9.15297794342041
    6. '[' → logprob: -10.15297794342041
    7. 'Num' → logprob: -10.77797794342041
    8. 'index' → logprob: -11.02797794342041
    9. 'num' → logprob: -11.52797794342041
    10. '```' → logprob: -12.02797794342041

Token 380: 'ant' (ID: 493)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3939507007598877
    2. 'i' → logprob: -1.2689507007598877
    3. 'ière' → logprob: -3.3939507007598877
    4. 'éro' → logprob: -6.268950462341309
    5. 'érieur' → logprob: -6.268950462341309
    6. 'ières' → logprob: -6.893950462341309
    7. 'ier' → logprob: -7.018950462341309
    8. '```' → logprob: -7.393950462341309
    9. '=i' → logprob: -7.893950462341309
    10. ' i' → logprob: -8.018950462341309

Token 381: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09322364628314972
    2. 'de' → logprob: -3.0932235717773438
    3. 'i' → logprob: -3.3432235717773438
    4. ' de' → logprob: -5.468223571777344
    5. '[' → logprob: -6.593223571777344
    6. '#' → logprob: -6.718223571777344
    7. ' i' → logprob: -7.343223571777344
    8. 'from' → logprob: -8.093223571777344
    9. '   ' → logprob: -8.968223571777344
    10. '=i' → logprob: -9.468223571777344

Token 382: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028943294659256935
    2. '0' → logprob: -4.028943061828613
    3. '1' → logprob: -4.653943061828613
    4. ' i' → logprob: -7.528943061828613
    5. 'l' → logprob: -8.653943061828613
    6. '2' → logprob: -8.903943061828613
    7. 'index' → logprob: -9.028943061828613
    8. 'la' → logprob: -9.653943061828613
    9. ' ' → logprob: -10.028943061828613
    10. '#' → logprob: -10.778943061828613

Token 383: ' fin' (ID: 2131)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02427351474761963
    2. '-i' → logprob: -4.39927339553833
    3. '-end' → logprob: -5.02427339553833
    4. 'end' → logprob: -6.64927339553833
    5. '-' → logprob: -6.89927339553833
    6. '0' → logprob: -7.27427339553833
    7. '-l' → logprob: -7.64927339553833
    8. 'fin' → logprob: -7.77427339553833
    9. '1' → logprob: -8.274273872375488
    10. ' i' → logprob: -8.274273872375488

Token 384: ' (-' (ID: 21382)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.9405953288078308
    2. '-i' → logprob: -1.4405953884124756
    3. '[i' → logprob: -1.8155953884124756
    4. '-' → logprob: -2.5655953884124756
    5. ' -' → logprob: -2.9405953884124756
    6. '[' → logprob: -3.0655953884124756
    7. '   ' → logprob: -4.6905951499938965
    8. ']' → logprob: -5.1905951499938965
    9. ')' → logprob: -5.4405951499938965
    10. 'i' → logprob: -5.5655951499938965

Token 385: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.643152740551159e-05
    2. '1' → logprob: -10.500036239624023
    3. ' i' → logprob: -11.750036239624023
    4. '(i' → logprob: -15.375036239624023
    5. '   ' → logprob: -15.500036239624023
    6. ')' → logprob: -15.625036239624023
    7. '[i' → logprob: -16.250036239624023
    8. '```' → logprob: -16.375036239624023
    9. '
' → logprob: -16.500036239624023
    10. '(' → logprob: -16.625036239624023

Token 386: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6520538926124573
    2. ']' → logprob: -1.0270538330078125
    3. '])' → logprob: -2.1520538330078125
    4. ')]' → logprob: -5.5270538330078125
    5. '-' → logprob: -7.9020538330078125
    6. ' )' → logprob: -9.152053833007812
    7. ')])' → logprob: -10.027053833007812
    8. ')
' → logprob: -10.277053833007812
    9. ')`' → logprob: -11.027053833007812
    10. '-)' → logprob: -11.152053833007812

Token 387: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17808634042739868
    2. '-' → logprob: -2.553086280822754
    3. ']+=' → logprob: -2.553086280822754
    4. ']=' → logprob: -6.303086280822754
    5. ' -' → logprob: -6.428086280822754
    6. '-=' → logprob: -6.553086280822754
    7. '+=' → logprob: -7.053086280822754
    8. '#' → logprob: -7.553086280822754
    9. ']+' → logprob: -8.428086280822754
    10. ')' → logprob: -8.678086280822754

Token 388: ' diminu' (ID: 80939)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6567392945289612
    2. '=' → logprob: -1.9067392349243164
    3. ' +=' → logprob: -1.9067392349243164
    4. ' =' → logprob: -3.0317392349243164
    5. ' Num' → logprob: -3.4067392349243164
    6. ' ' → logprob: -3.6567392349243164
    7. 'Num' → logprob: -4.031739234924316
    8. '   ' → logprob: -4.656739234924316
    9. ')' → logprob: -4.906739234924316
    10. '*=' → logprob: -5.031739234924316

Token 389: 'é' (ID: 377)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8632815480232239
    2. ' de' → logprob: -0.9882815480232239
    3. 'é' → logprob: -2.113281488418579
    4. 'd' → logprob: -3.238281488418579
    5. ' d' → logprob: -3.988281488418579
    6. 'u' → logprob: -4.488281726837158
    7. '=' → logprob: -5.738281726837158
    8. 'ed' → logprob: -5.988281726837158
    9. 'e' → logprob: -6.113281726837158
    10. 'ée' → logprob: -6.488281726837158

Token 390: ' par' (ID: 686)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1340220868587494
    2. '=' → logprob: -2.5090219974517822
    3. '-=' → logprob: -4.509022235870361
    4. 'de' → logprob: -4.634022235870361
    5. ' d' → logprob: -5.009022235870361
    6. ' -=' → logprob: -5.134022235870361
    7. ',' → logprob: -5.259022235870361
    8. '+=' → logprob: -6.509022235870361
    9. ' =' → logprob: -7.259022235870361
    10. '1' → logprob: -7.634022235870361

Token 391: ' la' (ID: 557)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.11489300429821014
    2. 'k' → logprob: -3.1148929595947266
    3. '(' → logprob: -3.4898929595947266
    4. '1' → logprob: -3.7398929595947266
    5. '(i' → logprob: -5.739892959594727
    6. 'i' → logprob: -5.989892959594727
    7. ' Num' → logprob: -6.489892959594727
    8. '(k' → logprob: -6.739892959594727
    9. 'num' → logprob: -7.614892959594727
    10. ' (' → logprob: -7.989892959594727

Token 392: ' valeur' (ID: 41664)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0184533279389143
    2. '(' → logprob: -5.018453121185303
    3. 'k' → logprob: -5.268453121185303
    4. ' Num' → logprob: -5.268453121185303
    5. '1' → logprob: -7.643453121185303
    6. ' (' → logprob: -8.018453598022461
    7. 'num' → logprob: -8.393453598022461
    8. '(k' → logprob: -8.893453598022461
    9. '0' → logprob: -10.393453598022461
    10. '   ' → logprob: -10.643453598022461

Token 393: ' précédente' (ID: 177319)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.09691301733255386
    2. 'k' → logprob: -3.0969130992889404
    3. ' Num' → logprob: -3.8469130992889404
    4. 'i' → logprob: -5.346912860870361
    5. '   ' → logprob: -5.721912860870361
    6. '(' → logprob: -5.846912860870361
    7. ' of' → logprob: -5.846912860870361
    8. ' k' → logprob: -6.346912860870361
    9. '#' → logprob: -6.596912860870361
    10. ' i' → logprob: -6.971912860870361

Token 394: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.23598453402519226
    2. ' Num' → logprob: -1.7359845638275146
    3. '(-' → logprob: -4.3609843254089355
    4. '   ' → logprob: -5.6109843254089355
    5. ' (-' → logprob: -5.6109843254089355
    6. ' of' → logprob: -5.8609843254089355
    7. '(' → logprob: -6.4859843254089355
    8. ' i' → logprob: -6.4859843254089355
    9. '[-' → logprob: -6.9859843254089355
    10. '[' → logprob: -6.9859843254089355

Token 395: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.380904672667384e-05
    2. '   ' → logprob: -11.250033378601074
    3. '[' → logprob: -11.375033378601074
    4. ' [-' → logprob: -11.875033378601074
    5. ' ' → logprob: -14.250033378601074
    6. '  ' → logprob: -14.375033378601074
    7. '[i' → logprob: -15.125033378601074
    8. ' -' → logprob: -16.12503433227539
    9. '```' → logprob: -16.12503433227539
    10. '-' → logprob: -16.37503433227539

Token 396: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00796373188495636
    2. '(i' → logprob: -4.88296365737915
    3. ' i' → logprob: -8.757964134216309
    4. '1' → logprob: -9.882964134216309
    5. '[i' → logprob: -9.882964134216309
    6. ' (' → logprob: -10.007964134216309
    7. '(' → logprob: -11.007964134216309
    8. '   ' → logprob: -11.257964134216309
    9. '{i' → logprob: -12.382964134216309
    10. '```' → logprob: -12.632964134216309

Token 397: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2502102255821228
    2. ']' → logprob: -1.8752102851867676
    3. ' -' → logprob: -2.7502102851867676
    4. '-i' → logprob: -6.250210285186768
    5. ' ]' → logprob: -7.250210285186768
    6. '+' → logprob: -7.250210285186768
    7. ']-' → logprob: -8.62520980834961
    8. ' ' → logprob: -9.00020980834961
    9. '+i' → logprob: -9.62520980834961
    10. '[-' → logprob: -10.12520980834961

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ']' → logprob: -12.125008583068848
    3. ' ' → logprob: -12.875008583068848
    4. 'i' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.62500762939453
    6. '```' → logprob: -16.87500762939453
    7. '#' → logprob: -17.75000762939453
    8. '
' → logprob: -18.00000762939453
    9. ' ' → logprob: -18.12500762939453
    10. '2' → logprob: -18.12500762939453

Token 399: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07912871241569519
    2. '])' → logprob: -2.5791287422180176
    3. ' ]' → logprob: -9.32912826538086
    4. '],' → logprob: -9.95412826538086
    5. ')' → logprob: -10.45412826538086
    6. ']+' → logprob: -10.95412826538086
    7. ' ])' → logprob: -11.07912826538086
    8. '].' → logprob: -11.32912826538086
    9. ']);' → logprob: -12.32912826538086
    10. ']
' → logprob: -12.57912826538086

Token 400: '   ' (ID: 271)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.38528579473495483
    2. '=' → logprob: -2.1352858543395996
    3. '-' → logprob: -2.2602858543395996
    4. 'Num' → logprob: -3.0102858543395996
    5. ' -=' → logprob: -3.3852858543395996
    6. '   ' → logprob: -5.0102858543396
    7. ']' → logprob: -6.5102858543396
    8. '[' → logprob: -6.5102858543396
    9. ':' → logprob: -7.1352858543396
    10. '[-' → logprob: -7.2602858543396

Token 401: ' #' (ID: 1069)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.06218043342232704
    2. ' Num' → logprob: -2.812180519104004
    3. '=' → logprob: -9.187180519104004
    4. 'num' → logprob: -10.187180519104004
    5. ' =' → logprob: -10.562180519104004
    6. ' num' → logprob: -11.062180519104004
    7. '_num' → logprob: -11.312180519104004
    8. '   ' → logprob: -11.812180519104004
    9. '_Num' → logprob: -12.562180519104004
    10. 'Nums' → logprob: -13.187180519104004

Token 402: ' Cela' (ID: 44403)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.008648606948554516
    2. ' Num' → logprob: -4.75864839553833
    3. 'num' → logprob: -11.258648872375488
    4. '_num' → logprob: -12.383648872375488
    5. '-num' → logprob: -12.508648872375488
    6. '   ' → logprob: -13.008648872375488
    7. ' ' → logprob: -13.133648872375488
    8. '-' → logprob: -13.133648872375488
    9. '_Num' → logprob: -13.258648872375488
    10. ' num' → logprob: -13.633648872375488

Token 403: ' met' (ID: 1421)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4525464177131653
    2. '-=' → logprob: -1.3275463581085205
    3. '=' → logprob: -3.2025463581085205
    4. ')' → logprob: -3.7025463581085205
    5. '+=' → logprob: -4.8275465965271
    6. ']+=' → logprob: -5.4525465965271
    7. ']' → logprob: -5.5775465965271
    8. '>' → logprob: -5.7025465965271
    9. '-' → logprob: -5.9525465965271
    10. '#' → logprob: -5.9525465965271

Token 404: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8011625409126282
    2. 'à' → logprob: -1.4261624813079834
    3. '-à' → logprob: -2.1761624813079834
    4. '-' → logprob: -2.5511624813079834
    5. 'Num' → logprob: -3.1761624813079834
    6. '#' → logprob: -3.5511624813079834
    7. 'a' → logprob: -4.9261627197265625
    8. ']' → logprob: -4.9261627197265625
    9. '```' → logprob: -5.5511627197265625
    10. '[-' → logprob: -5.8011627197265625

Token 405: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.21415939927101135
    2. ' jour' → logprob: -1.964159369468689
    3. 'Jour' → logprob: -4.3391594886779785
    4. '1' → logprob: -4.7141594886779785
    5. '-' → logprob: -4.8391594886779785
    6. '#' → logprob: -5.5891594886779785
    7. 'j' → logprob: -5.7141594886779785
    8. 'Num' → logprob: -5.7141594886779785
    9. 'num' → logprob: -5.8391594886779785
    10. ']' → logprob: -6.3391594886779785

Token 406: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.12694017589092255
    2. ' Num' → logprob: -2.1269402503967285
    3. 'num' → logprob: -12.12693977355957
    4. ' ' → logprob: -13.00193977355957
    5. '_num' → logprob: -13.62693977355957
    6. '_Num' → logprob: -13.75193977355957
    7. '-num' → logprob: -13.87693977355957
    8. 'Nums' → logprob: -14.62693977355957
    9. ' num' → logprob: -15.12693977355957
    10. '-' → logprob: -15.50193977355957

Token 407: ' pour' (ID: 1930)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.1160349458805285e-05
    2. '   ' → logprob: -12.375011444091797
    3. '[' → logprob: -13.000011444091797
    4. '[:-' → logprob: -13.250011444091797
    5. '[i' → logprob: -13.750011444091797
    6. ' [-' → logprob: -14.000011444091797
    7. '```' → logprob: -15.375011444091797
    8. '][-' → logprob: -15.750011444091797
    9. '=' → logprob: -16.125011444091797
    10. '
' → logprob: -16.375011444091797

Token 408: ' représ' (ID: 31534)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.10247735679149628
    2. ' Num' → logprob: -2.6024773120880127
    3. '-num' → logprob: -5.477477550506592
    4. 'num' → logprob: -5.602477550506592
    5. '[-' → logprob: -5.727477550506592
    6. '```' → logprob: -5.977477550506592
    7. '_num' → logprob: -6.602477550506592
    8. '[' → logprob: -6.602477550506592
    9. ' ' → logprob: -6.977477550506592
    10. '-' → logprob: -6.977477550506592

Token 409: 'enter' (ID: 3547)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.8589559197425842
    2. 'enter' → logprob: -1.4839558601379395
    3. 'er' → logprob: -1.9839558601379395
    4. '[-' → logprob: -2.7339558601379395
    5. 'endre' → logprob: -2.9839558601379395
    6. 'uer' → logprob: -4.3589558601379395
    7. '[' → logprob: -4.6089558601379395
    8. 're' → logprob: -4.6089558601379395
    9. '[]' → logprob: -4.6089558601379395
    10. 'uire' → logprob: -4.8589558601379395

Token 410: ' la' (ID: 557)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Num' → logprob: -0.2930903136730194
    2. 'Num' → logprob: -1.7930903434753418
    3. ' une' → logprob: -2.918090343475342
    4. ' un' → logprob: -3.793090343475342
    5. ' cumulative' → logprob: -6.293090343475342
    6. ' ' → logprob: -6.543090343475342
    7. 'une' → logprob: -7.168090343475342
    8. ' a' → logprob: -7.168090343475342
    9. ' la' → logprob: -7.168090343475342
    10. ' le' → logprob: -7.293090343475342

Token 411: ' différence' (ID: 79196)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Num' → logprob: -0.5297247767448425
    2. ' nombre' → logprob: -1.4047248363494873
    3. ' cumulative' → logprob: -3.1547248363494873
    4. 'Num' → logprob: -3.9047248363494873
    5. 's' → logprob: -4.154724597930908
    6. ' cumul' → logprob: -4.279724597930908
    7. ' suffix' → logprob: -4.404724597930908
    8. ' somme' → logprob: -4.904724597930908
    9. 'diff' → logprob: -5.154724597930908
    10. ' espace' → logprob: -5.154724597930908

Token 412: ' cumul' (ID: 163119)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.791542649269104
    2. ' Num' → logprob: -1.166542649269104
    3. '[' → logprob: -2.1665425300598145
    4. '   ' → logprob: -3.0415425300598145
    5. '[-' → logprob: -4.0415425300598145
    6. '_num' → logprob: -4.2915425300598145
    7. '[i' → logprob: -4.9165425300598145
    8. '=' → logprob: -5.0415425300598145
    9. ' =' → logprob: -5.2915425300598145
    10. '[num' → logprob: -5.4165425300598145

Token 413: 'ée' (ID: 2894)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.1556335687637329
    2. 'ée' → logprob: -2.5306334495544434
    3. 'ulative' → logprob: -3.1556334495544434
    4. '[' → logprob: -4.780633449554443
    5. 'Num' → logprob: -5.405633449554443
    6. '[-' → logprob: -6.155633449554443
    7. '-' → logprob: -6.155633449554443
    8. 'utive' → logprob: -6.655633449554443
    9. '[i' → logprob: -7.280633449554443
    10. ' Num' → logprob: -7.280633449554443

Token 414: ' entre' (ID: 3853)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7548171877861023
    2. '   ' → logprob: -1.754817247390747
    3. ')' → logprob: -1.879817247390747
    4. '[i' → logprob: -2.629817247390747
    5. ']' → logprob: -2.754817247390747
    6. 'Num' → logprob: -3.629817247390747
    7. ' Num' → logprob: -4.129817008972168
    8. '[-' → logprob: -4.629817008972168
    9. '[num' → logprob: -5.629817008972168
    10. ',' → logprob: -6.504817008972168

Token 415: ' les' (ID: 1341)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.6714677810668945
    2. 'de' → logprob: -1.1714677810668945
    3. 'les' → logprob: -2.2964677810668945
    4. 'élé' → logprob: -3.6714677810668945
    5. 'ces' → logprob: -4.1714677810668945
    6. ' les' → logprob: -4.5464677810668945
    7. ' Num' → logprob: -4.5464677810668945
    8. ' deux' → logprob: -5.4214677810668945
    9. 'num' → logprob: -6.0464677810668945
    10. 'l' → logprob: -6.2964677810668945

Token 416: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.18733328580856323
    2. 'élé' → logprob: -2.312333345413208
    3. ' elements' → logprob: -3.187333345413208
    4. ' Num' → logprob: -5.187333106994629
    5. ' deux' → logprob: -5.187333106994629
    6. ' ' → logprob: -5.437333106994629
    7. ' nombres' → logprob: -5.812333106994629
    8. 'elements' → logprob: -6.187333106994629
    9. ' valeurs' → logprob: -6.187333106994629
    10. ' adjacent' → logprob: -6.437333106994629

Token 417: ' success' (ID: 3505)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6142032742500305
    2. '[-' → logprob: -1.7392032146453857
    3. '   ' → logprob: -1.8642032146453857
    4. '[' → logprob: -2.9892032146453857
    5. '[i' → logprob: -3.3642032146453857
    6. '=' → logprob: -4.614203453063965
    7. ')' → logprob: -4.864203453063965
    8. ':' → logprob: -5.614203453063965
    9. 'Num' → logprob: -5.739203453063965
    10. ',' → logprob: -6.114203453063965

Token 418: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.002490522339940071
    2. 'if' → logprob: -6.252490520477295
    3. 'Num' → logprob: -8.002490997314453
    4. 'i' → logprob: -9.377490997314453
    5. 'num' → logprob: -10.377490997314453
    6. '#' → logprob: -10.377490997314453
    7. ' Num' → logprob: -11.252490997314453
    8. 'ivement' → logprob: -11.502490997314453
    9. '   ' → logprob: -11.752490997314453
    10. 'aux' → logprob: -12.252490997314453

Token 419: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26574596762657166
    2. 'Num' → logprob: -2.3907458782196045
    3. ']' → logprob: -2.5157458782196045
    4. '[-' → logprob: -3.8907458782196045
    5. '[' → logprob: -4.390746116638184
    6. ' Num' → logprob: -4.765746116638184
    7. ':' → logprob: -5.265746116638184
    8. '[i' → logprob: -5.640746116638184
    9. ',' → logprob: -6.140746116638184
    10. ')' → logprob: -6.265746116638184

Token 420: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.789347767829895
    2. '=' → logprob: -1.789347767829895
    3. '   ' → logprob: -1.914347767829895
    4. ' =' → logprob: -2.1643476486206055
    5. 'Num' → logprob: -2.9143476486206055
    6. ' Num' → logprob: -3.9143476486206055
    7. ')' → logprob: -4.7893476486206055
    8. ' :' → logprob: -4.9143476486206055
    9. '):' → logprob: -5.4143476486206055
    10. '[' → logprob: -5.5393476486206055

Token 421: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' (adapté à ' Num') → logprob: -0.233687162399292
    2. '   ' → logprob: -1.983687162399292
    3. ' Num' → logprob: -2.858687162399292
    4. ':' → logprob: -5.858687400817871
    5. '-' → logprob: -5.983687400817871
    6. ')' → logprob: -6.233687400817871
    7. '=' → logprob: -6.733687400817871
    8. 'num' → logprob: -6.733687400817871
    9. '[' → logprob: -7.358687400817871
    10. '-num' → logprob: -7.483687400817871

Token 422: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.816093228830141e-06
    2. '[i' → logprob: -13.12500286102295
    3. '[' → logprob: -14.75000286102295
    4. ' [-' → logprob: -15.87500286102295
    5. '   ' → logprob: -16.375001907348633
    6. '][-' → logprob: -16.875001907348633
    7. '[len' → logprob: -18.000001907348633
    8. '```' → logprob: -18.125001907348633
    9. '[:-' → logprob: -18.500001907348633
    10. '[
' → logprob: -19.625001907348633

Token 423: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.1689596148207784e-05
    2. '1' → logprob: -10.000051498413086
    3. ' i' → logprob: -12.375051498413086
    4. '(i' → logprob: -14.375051498413086
    5. '```' → logprob: -14.875051498413086
    6. '   ' → logprob: -15.250051498413086
    7. '
' → logprob: -16.250051498413086
    8. '(' → logprob: -16.250051498413086
    9. ',i' → logprob: -16.562551498413086
    10. ' ' → logprob: -16.687551498413086

Token 424: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006182490848004818
    2. '-' → logprob: -5.131182670593262
    3. ']-' → logprob: -9.256182670593262
    4. ']=' → logprob: -9.381182670593262
    5. ' ]' → logprob: -10.006182670593262
    6. ' -' → logprob: -11.881182670593262
    7. '-=' → logprob: -11.881182670593262
    8. '=' → logprob: -12.631182670593262
    9. ']+=' → logprob: -12.631182670593262
    10. '[' → logprob: -13.131182670593262

Token 425: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.04882035776972771
    2. ' -=' → logprob: -3.1738202571868896
    3. '=' → logprob: -5.298820495605469
    4. '-' → logprob: -7.173820495605469
    5. '+=' → logprob: -10.298820495605469
    6. ' -' → logprob: -13.048820495605469
    7. ' ' → logprob: -13.548820495605469
    8. ' =' → logprob: -14.173820495605469
    9. '```' → logprob: -14.798820495605469
    10. '*=' → logprob: -14.923820495605469

Token 426: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.00248338864184916
    2. ' Num' → logprob: -6.002483367919922
    3. 'Nums' → logprob: -13.252483367919922
    4. ' ' → logprob: -13.627483367919922
    5. '   ' → logprob: -13.627483367919922
    6. 'num' → logprob: -13.627483367919922
    7. '(' → logprob: -14.502483367919922
    8. ' ' → logprob: -14.627483367919922
    9. 'NUM' → logprob: -15.002483367919922
    10. '  ' → logprob: -15.252483367919922

Token 427: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '...' → logprob: -16.375001907348633
    5. '[
' → logprob: -16.375001907348633
    6. '][-' → logprob: -16.625001907348633
    7. '
' → logprob: -17.375001907348633
    8. '#' → logprob: -17.500001907348633
    9. '```' → logprob: -17.500001907348633
    10. '-' → logprob: -17.875001907348633

Token 428: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1637164789135568e-05
    2. '1' → logprob: -12.000011444091797
    3. ' i' → logprob: -13.250011444091797
    4. '-i' → logprob: -13.875011444091797
    5. '(i' → logprob: -14.500011444091797
    6. '[i' → logprob: -14.875011444091797
    7. '(' → logprob: -14.875011444091797
    8. '```' → logprob: -15.125011444091797
    9. ']' → logprob: -15.500011444091797
    10. ''i' → logprob: -15.625011444091797

Token 429: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033710349816828966
    2. ']-' → logprob: -6.378371238708496
    3. '-' → logprob: -6.503371238708496
    4. '-i' → logprob: -9.003371238708496
    5. '[-' → logprob: -10.878371238708496
    6. '][-' → logprob: -12.128371238708496
    7. '[i' → logprob: -12.503371238708496
    8. ' -' → logprob: -12.753371238708496
    9. ' ]' → logprob: -12.878371238708496
    10. '[' → logprob: -12.878371238708496

Token 430: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029763683676719666
    2. ' -' → logprob: -3.529763698577881
    3. '-num' → logprob: -11.279763221740723
    4. '-N' → logprob: -15.279763221740723
    5. '-
' → logprob: -15.904763221740723
    6. 'Num' → logprob: -17.15476417541504
    7. ' ' → logprob: -17.40476417541504
    8. '-​' → logprob: -17.40476417541504
    9. ' Num' → logprob: -17.90476417541504
    10. '−' → logprob: -18.02976417541504

Token 431: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0002991160727106035
    2. ' Num' → logprob: -8.125299453735352
    3. '   ' → logprob: -13.750299453735352
    4. ' ' → logprob: -13.875299453735352
    5. 'num' → logprob: -14.250299453735352
    6. '  ' → logprob: -15.875299453735352
    7. 'Nums' → logprob: -16.25029945373535
    8. '_Num' → logprob: -17.00029945373535
    9. '	' → logprob: -17.37529945373535
    10. 'NUM' → logprob: -17.75029945373535

Token 432: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.625003814697266
    3. ' [-' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.000003814697266
    5. '[
' → logprob: -16.625003814697266
    6. '...' → logprob: -17.750003814697266
    7. '][-' → logprob: -17.875003814697266
    8. '
' → logprob: -18.625003814697266
    9. '	' → logprob: -18.750003814697266
    10. '[:-' → logprob: -19.000003814697266

Token 433: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7120533811976202e-05
    2. '-i' → logprob: -11.750017166137695
    3. ' i' → logprob: -12.500017166137695
    4. '1' → logprob: -12.625017166137695
    5. '(i' → logprob: -13.875017166137695
    6. '-' → logprob: -14.250017166137695
    7. '{i' → logprob: -16.375017166137695
    8. '(-' → logprob: -16.500017166137695
    9. '[i' → logprob: -16.875017166137695
    10. '	i' → logprob: -17.375017166137695

Token 434: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001097417771234177
    2. ' -' → logprob: -9.125109672546387
    3. '1' → logprob: -14.125109672546387
    4. ']-' → logprob: -17.500110626220703
    5. '[-' → logprob: -17.750110626220703
    6. ']' → logprob: -17.750110626220703
    7. '[' → logprob: -18.125110626220703
    8. '[i' → logprob: -18.375110626220703
    9. '-i' → logprob: -18.375110626220703
    10. ' ' → logprob: -18.375110626220703

Token 435: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.875001907348633
    4. '  ' → logprob: -20.875001907348633
    5. '```' → logprob: -20.875001907348633
    6. '#' → logprob: -21.750001907348633
    7. '۱' → logprob: -22.312501907348633
    8. '}' → logprob: -22.375001907348633
    9. '１' → logprob: -22.437501907348633
    10. ']' → logprob: -22.500001907348633

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.562503814697266
    4. ']' → logprob: -18.750003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '
' → logprob: -19.750003814697266
    7. '2' → logprob: -20.125003814697266
    8. '#' → logprob: -20.125003814697266
    9. '-' → logprob: -20.250003814697266
    10. '}' → logprob: -20.375003814697266

Token 437: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029879838228225708
    2. ']' → logprob: -3.5298798084259033
    3. '<|end|>' → logprob: -9.904879570007324
    4. '])' → logprob: -10.279879570007324
    5. ')]' → logprob: -10.904879570007324
    6. '   ' → logprob: -11.779879570007324
    7. ' )' → logprob: -11.779879570007324
    8. '}' → logprob: -12.404879570007324
    9. ')
' → logprob: -13.154879570007324
    10. '```' → logprob: -13.654879570007324

Token 438: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5464622974395752
    2. 'result' → logprob: -2.046462297439575
    3. 'res' → logprob: -2.171462297439575
    4. 'dp' → logprob: -2.296462297439575
    5. 'if' → logprob: -3.921462297439575
    6. '#' → logprob: -4.171462059020996
    7. 'answer' → logprob: -4.296462059020996
    8. 'k' → logprob: -4.796462059020996
    9. 'ans' → logprob: -5.171462059020996
    10. 'f' → logprob: -6.421462059020996

Token 440: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.01523492019623518
    2. '#' → logprob: -4.64023494720459
    3. 'ate' → logprob: -6.51523494720459
    4. 'er' → logprob: -6.51523494720459
    5. 'for' → logprob: -7.51523494720459
    6. 'e' → logprob: -7.64023494720459
    7. 'at' → logprob: -8.01523494720459
    8. 'tion' → logprob: -8.39023494720459
    9. '```' → logprob: -8.89023494720459
    10. 'd' → logprob: -8.89023494720459

Token 441: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031007081270217896
    2. 'def' → logprob: -6.503100872039795
    3. ' d' → logprob: -6.628100872039795
    4. '#' → logprob: -8.878100395202637
    5. 'de' → logprob: -9.128100395202637
    6. 'of' → logprob: -11.503100395202637
    7. '[' → logprob: -12.253100395202637
    8. ' of' → logprob: -12.253100395202637
    9. 'a' → logprob: -13.753100395202637
    10. '=' → logprob: -13.878100395202637

Token 442: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.16574260592460632
    2. ''un' → logprob: -2.5407426357269287
    3. 'e' → logprob: -3.4157426357269287
    4. 'une' → logprob: -3.5407426357269287
    5. 'a' → logprob: -5.41574239730835
    6. 'u' → logprob: -6.29074239730835
    7. '#' → logprob: -6.41574239730835
    8. '=' → logprob: -7.66574239730835
    9. ' =' → logprob: -7.79074239730835
    10. '['' → logprob: -8.040742874145508

Token 443: ' nouvelle' (ID: 24562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09011509269475937
    2. 'def' → logprob: -3.2151150703430176
    3. 'dict' → logprob: -4.715115070343018
    4. 'liste' → logprob: -4.840115070343018
    5. 'list' → logprob: -4.965115070343018
    6. 'fact' → logprob: -5.340115070343018
    7. 'table' → logprob: -5.840115070343018
    8. 'result' → logprob: -6.590115070343018
    9. 'factor' → logprob: -6.590115070343018
    10. 'fonction' → logprob: -6.715115070343018

Token 444: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.8122129440307617
    2. 'list' → logprob: -2.3122129440307617
    3. 'dict' → logprob: -2.4372129440307617
    4. '[' → logprob: -2.5622129440307617
    5. '#' → logprob: -2.6872129440307617
    6. 'variable' → logprob: -3.5622129440307617
    7. 'range' → logprob: -3.5622129440307617
    8. 's' → logprob: -4.062212944030762
    9. 'Num' → logprob: -4.062212944030762
    10. ' liste' → logprob: -4.187212944030762

Token 445: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5616145133972168
    2. 'DP' → logprob: -1.9366145133972168
    3. 'Dp' → logprob: -2.936614513397217
    4. ' dp' → logprob: -3.436614513397217
    5. 'Ans' → logprob: -3.811614513397217
    6. 'Diff' → logprob: -4.186614513397217
    7. 'F' → logprob: -4.311614513397217
    8. 'res' → logprob: -4.311614513397217
    9. 'Sum' → logprob: -4.311614513397217
    10. ' DP' → logprob: -4.311614513397217

Token 446: 'DP' (ID: 16851)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19985565543174744
    2. 'DP' → logprob: -3.1998555660247803
    3. 'res' → logprob: -3.6998555660247803
    4. 'f' → logprob: -4.449855804443359
    5. 'Ans' → logprob: -4.449855804443359
    6. 'F' → logprob: -4.574855804443359
    7. 'Dp' → logprob: -4.699855804443359
    8. 'Res' → logprob: -4.824855804443359
    9. 'ans' → logprob: -4.824855804443359
    10. 'ways' → logprob: -4.949855804443359

Token 447: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012715296819806099
    2. '=' → logprob: -4.3877153396606445
    3. ']' → logprob: -9.387715339660645
    4. '=[' → logprob: -9.887715339660645
    5. '[' → logprob: -11.012715339660645
    6. ' =[' → logprob: -11.012715339660645
    7. '1' → logprob: -11.637715339660645
    8. '=[]' → logprob: -12.262715339660645
    9. '0' → logprob: -12.387715339660645
    10. ')' → logprob: -12.637715339660645

Token 448: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20151644945144653
    2. ' =' → logprob: -1.7015163898468018
    3. 'DP' → logprob: -9.701516151428223
    4. '=[' → logprob: -10.201516151428223
    5. '[' → logprob: -13.076516151428223
    6. 'dp' → logprob: -13.701516151428223
    7. '=[]' → logprob: -14.826516151428223
    8. '_DP' → logprob: -15.201516151428223
    9. '=[]
' → logprob: -15.826516151428223
    10. ']' → logprob: -15.951516151428223

Token 449: 'table' (ID: 4202)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018137017032131553
    2. ' [' → logprob: -6.376813888549805
    3. ')' → logprob: -9.626813888549805
    4. '0' → logprob: -10.876813888549805
    5. '[-' → logprob: -12.376813888549805
    6. '[n' → logprob: -12.501813888549805
    7. '[k' → logprob: -12.876813888549805
    8. ' =' → logprob: -13.001813888549805
    9. '=[' → logprob: -13.126813888549805
    10. ']' → logprob: -13.251813888549805

Token 450: 'au' (ID: 753)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07253842800855637
    2. 'au' → logprob: -3.197538375854492
    3. '[]' → logprob: -4.072538375854492
    4. '```' → logprob: -6.072538375854492
    5. ')' → logprob: -6.197538375854492
    6. '[
' → logprob: -6.572538375854492
    7. ' =' → logprob: -6.572538375854492
    8. 'DP' → logprob: -6.572538375854492
    9. '[]
' → logprob: -7.322538375854492
    10. '['' → logprob: -7.572538375854492

Token 451: ' dynamique' (ID: 98708)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09685717523097992
    2. '=' → logprob: -2.4718570709228516
    3. '=[' → logprob: -5.346857070922852
    4. '[' → logprob: -6.846857070922852
    5. ']' → logprob: -6.846857070922852
    6. ')' → logprob: -8.096857070922852
    7. 'de' → logprob: -8.346857070922852
    8. '=[]' → logprob: -8.596857070922852
    9. ' de' → logprob: -9.846857070922852
    10. 'size' → logprob: -10.346857070922852

Token 452: '),' (ID: 936)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10121070593595505
    2. '=' → logprob: -3.226210594177246
    3. ')' → logprob: -3.851210594177246
    4. '[' → logprob: -4.351210594177246
    5. ']' → logprob: -4.476210594177246
    6. '=[' → logprob: -4.976210594177246
    7. ',' → logprob: -5.726210594177246
    8. '(' → logprob: -8.976210594177246
    9. ' [' → logprob: -9.226210594177246
    10. '```' → logprob: -9.226210594177246

Token 453: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006738342344760895
    2. ' [' → logprob: -5.006738185882568
    3. '[k' → logprob: -11.381738662719727
    4. '[n' → logprob: -12.881738662719727
    5. '[-' → logprob: -13.006738662719727
    6. '[s' → logprob: -13.256738662719727
    7. 'DP' → logprob: -13.381738662719727
    8. '[num' → logprob: -13.631738662719727
    9. ' DP' → logprob: -14.756738662719727
    10. '[size' → logprob: -14.756738662719727

Token 454: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010157865472137928
    2. ' [' → logprob: -5.010158061981201
    3. '=[' → logprob: -6.635158061981201
    4. ' =' → logprob: -7.635158061981201
    5. '*' → logprob: -8.010157585144043
    6. '[]' → logprob: -8.010157585144043
    7. '[s' → logprob: -8.010157585144043
    8. '[n' → logprob: -9.260157585144043
    9. 's' → logprob: -10.010157585144043
    10. ']' → logprob: -10.010157585144043

Token 455: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03657640889286995
    2. ' de' → logprob: -3.661576509475708
    3. ' [' → logprob: -5.786576271057129
    4. ' =' → logprob: -5.786576271057129
    5. ' of' → logprob: -6.911576271057129
    6. '=[' → logprob: -7.286576271057129
    7. 'de' → logprob: -7.661576271057129
    8. 'DP' → logprob: -7.786576271057129
    9. '```' → logprob: -8.286576271057129
    10. '=' → logprob: -8.411576271057129

Token 456: ' deux' (ID: 10301)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005847262218594551
    2. '0' → logprob: -8.375584602355957
    3. ' [' → logprob: -9.000584602355957
    4. '[n' → logprob: -9.250584602355957
    5. '[s' → logprob: -10.500584602355957
    6. '[l' → logprob: -10.750584602355957
    7. '[]' → logprob: -10.875584602355957
    8. 'len' → logprob: -11.250584602355957
    9. '[k' → logprob: -11.375584602355957
    10. '[-' → logprob: -11.625584602355957

Token 457: ' dimensions' (ID: 23995)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04750483110547066
    2. 'dimensions' → logprob: -3.1725049018859863
    3. '[]' → logprob: -6.672504901885986
    4. 'dim' → logprob: -6.797504901885986
    5. '```' → logprob: -7.547504901885986
    6. '[N' → logprob: -8.172504425048828
    7. ' dimensions' → logprob: -8.297504425048828
    8. '[n' → logprob: -8.422504425048828
    9. '[D' → logprob: -8.797504425048828
    10. ' [' → logprob: -9.047504425048828

Token 458: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17926882207393646
    2. 'DP' → logprob: -2.0542688369750977
    3. '=' → logprob: -3.6792688369750977
    4. '=[[' → logprob: -5.554268836975098
    5. '=[' → logprob: -6.554268836975098
    6. '[' → logprob: -6.554268836975098
    7. '[[' → logprob: -6.804268836975098
    8. ' of' → logprob: -7.554268836975098
    9. ']' → logprob: -7.554268836975098
    10. ' DP' → logprob: -7.929268836975098

Token 459: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4969921410083771
    2. '[[' → logprob: -0.9969921112060547
    3. '0' → logprob: -3.9969921112060547
    4. '[s' → logprob: -6.496992111206055
    5. ' [' → logprob: -6.621992111206055
    6. ' [[' → logprob: -7.246992111206055
    7. '[k' → logprob: -7.746992111206055
    8. '[n' → logprob: -9.246992111206055
    9. '[(' → logprob: -10.121992111206055
    10. '(' → logprob: -10.121992111206055

Token 460: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.725023627281189
    2. '(s' → logprob: -1.350023627281189
    3. '[s' → logprob: -2.4750237464904785
    4. '(k' → logprob: -3.1000237464904785
    5. '[k' → logprob: -3.6000237464904785
    6. '[(' → logprob: -3.6000237464904785
    7. '[' → logprob: -3.9750237464904785
    8. '[[' → logprob: -4.4750237464904785
    9. '(' → logprob: -4.8500237464904785
    10. '2' → logprob: -5.2250237464904785

Token 461: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04356096312403679
    2. ' +' → logprob: -3.1685609817504883
    3. 's' → logprob: -9.293560981750488
    4. '```' → logprob: -9.793560981750488
    5. '
' → logprob: -9.918560981750488
    6. ',' → logprob: -9.918560981750488
    7. '[s' → logprob: -10.043560981750488
    8. '[' → logprob: -10.168560981750488
    9. '+
' → logprob: -10.293560981750488
    10. 'x' → logprob: -10.418560981750488

Token 462: ' l' (ID: 305)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3439990282058716
    2. '(l' → logprob: -1.7189990282058716
    3. ' (' → logprob: -2.468998908996582
    4. '(k' → logprob: -4.968998908996582
    5. 'l' → logprob: -5.218998908996582
    6. '[l' → logprob: -5.343998908996582
    7. '[s' → logprob: -5.343998908996582
    8. '(' → logprob: -6.593998908996582
    9. '(len' → logprob: -6.593998908996582
    10. ' [' → logprob: -7.718998908996582

Token 463: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2815794348716736
    2. 'DP' → logprob: -1.6565794944763184
    3. '=' → logprob: -3.1565794944763184
    4. '=[[' → logprob: -5.906579494476318
    5. '[[' → logprob: -6.031579494476318
    6. ']' → logprob: -6.031579494476318
    7. ' DP' → logprob: -6.531579494476318
    8. '=[' → logprob: -7.031579494476318
    9. '[' → logprob: -7.281579494476318
    10. ',' → logprob: -7.406579494476318

Token 464: ' initial' (ID: 4871)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.007528431713581085
    2. ' [[' → logprob: -5.007528305053711
    3. '[' → logprob: -7.257528305053711
    4. 'DP' → logprob: -9.882528305053711
    5. '0' → logprob: -10.257528305053711
    6. ' [' → logprob: -11.507528305053711
    7. '[
' → logprob: -12.757528305053711
    8. 'dp' → logprob: -13.257528305053711
    9. ' DP' → logprob: -13.507528305053711
    10. '([[' → logprob: -13.632528305053711

Token 465: 'isée' (ID: 59331)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.48114416003227234
    2. 'isée' → logprob: -0.9811441898345947
    3. '[[' → logprob: -5.731143951416016
    4. 'isé' → logprob: -6.481143951416016
    5. '[' → logprob: -6.856143951416016
    6. 'is' → logprob: -8.106143951416016
    7. 'isées' → logprob: -8.606143951416016
    8. 'iz' → logprob: -8.856143951416016
    9. ' DP' → logprob: -9.356143951416016
    10. 'iser' → logprob: -9.481143951416016

Token 466: ' à' (ID: 1221)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.3605854511260986
    2. '=[[' → logprob: -1.3605854511260986
    3. ' =' → logprob: -1.9855854511260986
    4. '=' → logprob: -2.1105854511260986
    5. ' avec' → logprob: -2.2355854511260986
    6. 'avec' → logprob: -3.7355854511260986
    7. ' with' → logprob: -3.7355854511260986
    8. 'with' → logprob: -3.8605854511260986
    9. '([[' → logprob: -3.8605854511260986
    10. '0' → logprob: -4.8605852127075195

Token 467: ' zéro' (ID: 182040)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.009747706353664398
    2. '0' → logprob: -4.759747505187988
    3. '[' → logprob: -7.009747505187988
    4. ' [[' → logprob: -8.384747505187988
    5. ' [' → logprob: -15.009747505187988
    6. '[
' → logprob: -15.509747505187988
    7. ' ' → logprob: -15.509747505187988
    8. '([[' → logprob: -15.634747505187988
    9. '[['' → logprob: -15.884747505187988
    10. '[(' → logprob: -17.259748458862305

Token 468: '.
' (ID: 558)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.018446190282702446
    2. ' =' → logprob: -4.14344596862793
    3. '=' → logprob: -6.39344596862793
    4. '[[' → logprob: -8.14344596862793
    5. ' DP' → logprob: -8.39344596862793
    6. ']' → logprob: -9.64344596862793
    7. '=[[' → logprob: -10.26844596862793
    8. 'dp' → logprob: -10.26844596862793
    9. '[' → logprob: -10.39344596862793
    10. '_DP' → logprob: -11.26844596862793

Token 469: '#' (ID: 2)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -5.676981345459353e-06
    2. ' DP' → logprob: -12.750005722045898
    3. 'dp' → logprob: -13.000005722045898
    4. '[[' → logprob: -14.875005722045898
    5. '_DP' → logprob: -16.7500057220459
    6. '[' → logprob: -16.8750057220459
    7. ' =' → logprob: -19.2500057220459
    8. 'Dp' → logprob: -20.0000057220459
    9. '0' → logprob: -20.5000057220459
    10. '_dp' → logprob: -20.5000057220459

Token 470: ' Chaque' (ID: 94758)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -3.128163257315464e-07
    2. ' DP' → logprob: -15.75
    3. 'dp' → logprob: -16.0
    4. '_DP' → logprob: -18.375
    5. '[[' → logprob: -18.75
    6. '[' → logprob: -19.5
    7. '```' → logprob: -21.875
    8. 'D' → logprob: -21.875
    9. 'Dp' → logprob: -22.125
    10. '0' → logprob: -22.75

Token 471: ' élément' (ID: 99627)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4698103368282318
    2. ' [' → logprob: -1.0948103666305542
    3. '[
' → logprob: -3.5948102474212646
    4. ' [
' → logprob: -5.094810485839844
    5. '[k' → logprob: -6.094810485839844
    6. ' row' → logprob: -7.219810485839844
    7. '[i' → logprob: -7.469810485839844
    8. 'DP' → logprob: -7.844810485839844
    9. ']' → logprob: -8.094810485839844
    10. ' ligne' → logprob: -8.219810485839844

Token 472: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12984155118465424
    2. '=' → logprob: -2.2548415660858154
    3. '=[' → logprob: -4.879841327667236
    4. '[' → logprob: -5.129841327667236
    5. ' est' → logprob: -6.629841327667236
    6. ' de' → logprob: -7.629841327667236
    7. 'DP' → logprob: -7.879841327667236
    8. '=[[' → logprob: -8.004841804504395
    9. ' is' → logprob: -8.629841804504395
    10. '0' → logprob: -9.254841804504395

Token 473: ' '' (ID: 461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002187141450121999
    2. ' [' → logprob: -6.377187252044678
    3. '[[' → logprob: -8.62718677520752
    4. '[k' → logprob: -8.75218677520752
    5. '0' → logprob: -9.12718677520752
    6. 'k' → logprob: -11.00218677520752
    7. 'DP' → logprob: -11.25218677520752
    8. '([' → logprob: -12.25218677520752
    9. ' DP' → logprob: -14.37718677520752
    10. 'l' → logprob: -14.62718677520752

Token 474: 'DP' (ID: 16851)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008002164773643017
    2. '[k' → logprob: -5.633002281188965
    3. 'k' → logprob: -6.008002281188965
    4. ' [' → logprob: -7.758002281188965
    5. 'range' → logprob: -7.758002281188965
    6. '[[' → logprob: -8.133002281188965
    7. 'l' → logprob: -8.258002281188965
    8. '0' → logprob: -8.758002281188965
    9. '[l' → logprob: -9.133002281188965
    10. 'DP' → logprob: -9.133002281188965

Token 475: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1333446204662323
    2. '=' → logprob: -2.1333446502685547
    3. '=[' → logprob: -6.008344650268555
    4. '[' → logprob: -6.633344650268555
    5. ']' → logprob: -6.883344650268555
    6. '=[[' → logprob: -8.258344650268555
    7. ''' → logprob: -8.383344650268555
    8. '[k' → logprob: -8.508344650268555
    9. '`' → logprob: -8.758344650268555
    10. '.append' → logprob: -8.883344650268555

Token 476: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5253178477287292
    2. '=' → logprob: -0.9003178477287292
    3. ' est' → logprob: -6.400317668914795
    4. '=[' → logprob: -7.900317668914795
    5. '[' → logprob: -9.525318145751953
    6. ' is' → logprob: -11.025318145751953
    7. ' ' → logprob: -11.525318145751953
    8. 'is' → logprob: -11.525318145751953
    9. 's' → logprob: -11.900318145751953
    10. ' =[' → logprob: -11.900318145751953

Token 477: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0233044121414423
    2. ' [' → logprob: -3.7733044624328613
    3. '0' → logprob: -9.773303985595703
    4. '[[' → logprob: -14.523303985595703
    5. '[
' → logprob: -14.773303985595703
    6. '([' → logprob: -15.398303985595703
    7. ' ' → logprob: -15.523303985595703
    8. '[k' → logprob: -16.023303985595703
    9. '[]' → logprob: -16.648303985595703
    10. '   ' → logprob: -16.773303985595703

Token 478: ' sous' (ID: 14487)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002560792025178671
    2. ' [' → logprob: -6.002560615539551
    3. '0' → logprob: -9.62756061553955
    4. '[k' → logprob: -11.37756061553955
    5. '[
' → logprob: -12.87756061553955
    6. 'list' → logprob: -13.12756061553955
    7. '[n' → logprob: -14.25256061553955
    8. '[i' → logprob: -15.25256061553955
    9. '[[' → logprob: -15.25256061553955
    10. 'k' → logprob: -15.37756061553955

Token 479: '-l' (ID: 2887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006080006714910269
    2. '[k' → logprob: -5.381080150604248
    3. ' [' → logprob: -7.506080150604248
    4. '[l' → logprob: -7.881080150604248
    5. '[n' → logprob: -8.25607967376709
    6. '[len' → logprob: -9.63107967376709
    7. '[i' → logprob: -10.00607967376709
    8. '[j' → logprob: -10.00607967376709
    9. '[
' → logprob: -10.25607967376709
    10. '[num' → logprob: -10.25607967376709

Token 480: 'iste' (ID: 4872)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06443390250205994
    2. 'ist' → logprob: -3.5644338130950928
    3. 'iste' → logprob: -3.8144338130950928
    4. '[i' → logprob: -5.189434051513672
    5. '[l' → logprob: -6.189434051513672
    6. '[k' → logprob: -6.689434051513672
    7. '[len' → logprob: -6.939434051513672
    8. '[int' → logprob: -8.064434051513672
    9. '[n' → logprob: -8.189434051513672
    10. '[]' → logprob: -8.314434051513672

Token 481: ' contenant' (ID: 131049)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5818817019462585
    2. '([' → logprob: -1.5818817615509033
    3. ' =' → logprob: -2.3318817615509033
    4. '=[' → logprob: -2.8318817615509033
    5. ' [' → logprob: -3.4568817615509033
    6. '[k' → logprob: -4.206881523132324
    7. '=' → logprob: -4.831881523132324
    8. '(' → logprob: -5.206881523132324
    9. ' of' → logprob: -5.456881523132324
    10. '[l' → logprob: -5.956881523132324

Token 482: ' '' (ID: 461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24071431159973145
    2. '[l' → logprob: -2.2407143115997314
    3. 'l' → logprob: -2.6157143115997314
    4. ' [' → logprob: -3.9907143115997314
    5. '0' → logprob: -4.240714073181152
    6. ' l' → logprob: -6.490714073181152
    7. ' ' → logprob: -11.115714073181152
    8. '[m' → logprob: -13.365714073181152
    9. '[j' → logprob: -13.365714073181152
    10. '[k' → logprob: -13.365714073181152

Token 483: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19854609668254852
    2. '[' → logprob: -2.3235461711883545
    3. '0' → logprob: -2.5735461711883545
    4. '[l' → logprob: -5.448545932769775
    5. ' l' → logprob: -6.948545932769775
    6. ' [' → logprob: -7.448545932769775
    7. ' ' → logprob: -10.823546409606934
    8. 'len' → logprob: -11.823546409606934
    9. '	l' → logprob: -13.323546409606934
    10. '```' → logprob: -13.448546409606934

Token 484: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029985470697283745
    2. ']' → logprob: -4.404985427856445
    3. '*[' → logprob: -4.529985427856445
    4. ' [' → logprob: -6.029985427856445
    5. '0' → logprob: -6.904985427856445
    6. ')' → logprob: -6.904985427856445
    7. ' zeros' → logprob: -7.404985427856445
    8. 'zeros' → logprob: -7.904985427856445
    9. '][' → logprob: -8.279985427856445
    10. '```' → logprob: -8.279985427856445

Token 485: ' z' (ID: 579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004696645773947239
    2. '0' → logprob: -6.004696846008301
    3. ' [' → logprob: -6.254696846008301
    4. ' zeros' → logprob: -8.7546968460083
    5. 'zeros' → logprob: -10.0046968460083
    6. '[l' → logprob: -10.1296968460083
    7. ' elements' → logprob: -10.7546968460083
    8. ' l' → logprob: -12.0046968460083
    9. 'elements' → logprob: -12.1296968460083
    10. 'l' → logprob: -12.5046968460083

Token 486: 'éros' (ID: 120888)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04754529893398285
    2. 'ero' → logprob: -4.047545433044434
    3. 'éro' → logprob: -4.547545433044434
    4. '0' → logprob: -4.547545433044434
    5. 'éros' → logprob: -5.172545433044434
    6. 'eros' → logprob: -6.297545433044434
    7. '```' → logprob: -9.797545433044434
    8. '[o' → logprob: -10.047545433044434
    9. ' [' → logprob: -10.547545433044434
    10. '[z' → logprob: -10.797545433044434

Token 487: '.
' (ID: 558)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.21468764543533325
    2. ' =' → logprob: -2.4646875858306885
    3. 'for' → logprob: -2.7146875858306885
    4. '=' → logprob: -4.589687824249268
    5. '[' → logprob: -4.714687824249268
    6. ' for' → logprob: -4.964687824249268
    7. ']' → logprob: -5.339687824249268
    8. ',' → logprob: -5.839687824249268
    9. ' DP' → logprob: -5.839687824249268
    10. 'dp' → logprob: -6.839687824249268

Token 488: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.6240566083070007e-06
    2. ' DP' → logprob: -14.000001907348633
    3. 'dp' → logprob: -14.750001907348633
    4. '[' → logprob: -15.000001907348633
    5. '_DP' → logprob: -17.750001907348633
    6. '[[' → logprob: -18.500001907348633
    7. 'D' → logprob: -19.375001907348633
    8. '[
' → logprob: -19.625001907348633
    9. '```' → logprob: -20.250001907348633
    10. 'Dp' → logprob: -21.750001907348633

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687291741371155
    2. ' =' → logprob: -1.1368728876113892
    3. '=[' → logprob: -13.636873245239258
    4. '[' → logprob: -15.261873245239258
    5. '=[[' → logprob: -15.761873245239258
    6. ' =[' → logprob: -16.386873245239258
    7. '＝' → logprob: -16.886873245239258
    8. '=[]' → logprob: -17.011873245239258
    9. ' ' → logprob: -17.136873245239258
    10. ' ' → logprob: -17.386873245239258

Token 490: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -3.166338137816638e-05
    2. '[' → logprob: -10.750031471252441
    3. ' [[' → logprob: -11.500031471252441
    4. '0' → logprob: -17.750032424926758
    5. '[
' → logprob: -18.750032424926758
    6. '([[' → logprob: -19.250032424926758
    7. ' [' → logprob: -21.000032424926758
    8. '[k' → logprob: -21.250032424926758
    9. '[['' → logprob: -22.125032424926758
    10. '[]' → logprob: -22.625032424926758

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -20.25
    4. '   ' → logprob: -20.875
    5. '00' → logprob: -22.0
    6. '
' → logprob: -22.0
    7. ' ' → logprob: -22.125
    8. '000' → logprob: -22.375
    9. '  ' → logprob: -22.375
    10. '[' → logprob: -22.75

Token 492: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07146323472261429
    2. ']*' → logprob: -3.1964633464813232
    3. ' for' → logprob: -3.8214633464813232
    4. 'for' → logprob: -5.446463108062744
    5. ']*(' → logprob: -6.446463108062744
    6. ' ]' → logprob: -9.071463584899902
    7. ']+' → logprob: -9.696463584899902
    8. '0' → logprob: -9.696463584899902
    9. '*' → logprob: -11.446463584899902
    10. ')' → logprob: -12.446463584899902

Token 493: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20348763465881348
    2. 'for' → logprob: -1.7034876346588135
    3. ']' → logprob: -7.078487396240234
    4. ' *' → logprob: -8.078487396240234
    5. '*' → logprob: -8.328487396240234
    6. ']*' → logprob: -8.828487396240234
    7. '(l' → logprob: -8.953487396240234
    8. ']*(' → logprob: -9.078487396240234
    9. ' l' → logprob: -9.828487396240234
    10. ' (' → logprob: -10.078487396240234

Token 494: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.231182826217264e-05
    2. '(l' → logprob: -9.625072479248047
    3. ' l' → logprob: -12.000072479248047
    4. '(' → logprob: -17.500072479248047
    5. ' (' → logprob: -18.125072479248047
    6. '	l' → logprob: -19.000072479248047
    7. 'len' → logprob: -19.875072479248047
    8. '```' → logprob: -20.500072479248047
    9. '[l' → logprob: -20.750072479248047
    10. ' ' → logprob: -20.875072479248047

Token 495: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3133336007595062
    2. ' for' → logprob: -1.3133336305618286
    3. ']' → logprob: -9.563333511352539
    4. ')' → logprob: -14.188333511352539
    5. '	for' → logprob: -14.688333511352539
    6. ' ' → logprob: -15.313333511352539
    7. ' ]' → logprob: -15.938333511352539
    8. '   ' → logprob: -16.93833351135254
    9. '<|end|>' → logprob: -17.06333351135254
    10. '```' → logprob: -18.06333351135254

Token 496: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014272337779402733
    2. ' _' → logprob: -4.264272212982178
    3. '_range' → logprob: -9.764272689819336
    4. '_i' → logprob: -10.389272689819336
    5. '_k' → logprob: -11.389272689819336
    6. '_j' → logprob: -12.764272689819336
    7. '_=' → logprob: -13.389272689819336
    8. ' i' → logprob: -13.514272689819336
    9. '_in' → logprob: -14.139272689819336
    10. ' range' → logprob: -14.514272689819336

Token 497: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3008294105529785
    2. 'in' → logprob: -1.8008294105529785
    3. 'range' → logprob: -2.4258294105529785
    4. '_' → logprob: -5.8008294105529785
    5. ' range' → logprob: -5.8008294105529785
    6. ' ' → logprob: -9.42582893371582
    7. ' _' → logprob: -9.67582893371582
    8. 'k' → logprob: -11.42582893371582
    9. '_range' → logprob: -11.80082893371582
    10. '  ' → logprob: -12.05082893371582

Token 498: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015024791937321424
    2. ' range' → logprob: -6.501502513885498
    3. '_' → logprob: -16.626502990722656
    4. 'r' → logprob: -17.626502990722656
    5. ' ' → logprob: -18.001502990722656
    6. '	range' → logprob: -18.126502990722656
    7. 'rang' → logprob: -18.626502990722656
    8. '(range' → logprob: -19.126502990722656
    9. 'ra' → logprob: -19.251502990722656
    10. '_range' → logprob: -19.501502990722656

Token 499: '(k' (ID: 12125)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.49506598711013794
    2. 'k' → logprob: -0.9950659871101379
    3. ' range' → logprob: -4.370066165924072
    4. '(k' → logprob: -4.870066165924072
    5. ' k' → logprob: -8.370065689086914
    6. '(range' → logprob: -8.495065689086914
    7. '(' → logprob: -12.370065689086914
    8. ' (' → logprob: -12.620065689086914
    9. '   ' → logprob: -14.370065689086914
    10. '	range' → logprob: -14.370065689086914

Token 500: ')]

' (ID: 56882)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0029238720890134573
    2. ' +' → logprob: -6.127923965454102
    3. ')]' → logprob: -7.252923965454102
    4. ')' → logprob: -11.502923965454102
    5. '+
' → logprob: -11.627923965454102
    6. ')])' → logprob: -12.252923965454102
    7. ')][' → logprob: -13.002923965454102
    8. ')],' → logprob: -14.127923965454102
    9. '1' → logprob: -14.127923965454102
    10. '+)' → logprob: -14.252923965454102

Token 501: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19432474672794342
    2. 'DP' → logprob: -2.1943247318267822
    3. ' for' → logprob: -3.5693247318267822
    4. '[' → logprob: -3.9443247318267822
    5. '<|end|>' → logprob: -5.069324970245361
    6. ')' → logprob: -5.444324970245361
    7. ']' → logprob: -5.944324970245361
    8. '#' → logprob: -6.444324970245361
    9. '```' → logprob: -6.819324970245361
    10. ' DP' → logprob: -7.819324970245361

Token 502: ' Affect' (ID: 190087)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.004120430909097195
    2. 'for' → logprob: -5.504120349884033
    3. 'dp' → logprob: -10.754120826721191
    4. '#' → logprob: -11.379120826721191
    5. '```' → logprob: -12.629120826721191
    6. ' DP' → logprob: -13.004120826721191
    7. 'i' → logprob: -13.254120826721191
    8. 'num' → logprob: -14.879120826721191
    9. ' for' → logprob: -15.504120826721191
    10. '_DP' → logprob: -15.754120826721191

Token 503: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.23667655885219574
    2. 'er' → logprob: -2.6116764545440674
    3. 'ion' → logprob: -2.8616764545440674
    4. 'a' → logprob: -3.4866764545440674
    5. '[' → logprob: -3.7366764545440674
    6. 'ant' → logprob: -3.7366764545440674
    7. '[
' → logprob: -7.7366766929626465
    8. '```' → logprob: -8.236676216125488
    9. 'é' → logprob: -8.486676216125488
    10. '#' → logprob: -8.736676216125488

Token 504: ' de' (ID: 334)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.00034023032640106976
    2. '[' → logprob: -8.500340461730957
    3. ' DP' → logprob: -9.125340461730957
    4. 'for' → logprob: -11.000340461730957
    5. '0' → logprob: -12.625340461730957
    6. 's' → logprob: -13.250340461730957
    7. '_DP' → logprob: -13.375340461730957
    8. 'dp' → logprob: -13.750340461730957
    9. '=' → logprob: -14.125340461730957
    10. 'Dp' → logprob: -14.125340461730957

Token 505: ' la' (ID: 557)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.04031963273882866
    2. '1' → logprob: -3.7903196811676025
    3. '0' → logprob: -4.665319442749023
    4. 'for' → logprob: -6.040319442749023
    5. ' DP' → logprob: -6.415319442749023
    6. '[' → logprob: -6.540319442749023
    7. 'i' → logprob: -6.540319442749023
    8. ' ' → logprob: -9.165319442749023
    9. 'dp' → logprob: -9.540319442749023
    10. 'Num' → logprob: -9.790319442749023

Token 506: ' première' (ID: 23423)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.033069562166929245
    2. 'for' → logprob: -3.533069610595703
    3. '0' → logprob: -6.533069610595703
    4. ' DP' → logprob: -7.408069610595703
    5. '1' → logprob: -7.533069610595703
    6. 'i' → logprob: -8.408069610595703
    7. ' for' → logprob: -8.783069610595703
    8. 's' → logprob: -9.033069610595703
    9. '[' → logprob: -9.158069610595703
    10. 'dp' → logprob: -10.658069610595703

Token 507: ' ligne' (ID: 19583)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11734587699174881
    2. 'DP' → logprob: -2.2423458099365234
    3. ' DP' → logprob: -5.992345809936523
    4. '0' → logprob: -6.617345809936523
    5. ' [' → logprob: -8.492345809936523
    6. 'for' → logprob: -8.867345809936523
    7. 'range' → logprob: -9.492345809936523
    8. ' ' → logprob: -9.617345809936523
    9. 'dp' → logprob: -10.117345809936523
    10. '[-' → logprob: -10.617345809936523

Token 508: ' de' (ID: 334)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.05528641119599342
    2. 'for' → logprob: -3.430286407470703
    3. '[' → logprob: -4.180286407470703
    4. ' DP' → logprob: -6.555286407470703
    5. '=' → logprob: -6.680286407470703
    6. ' =' → logprob: -6.930286407470703
    7. 'dp' → logprob: -7.055286407470703
    8. ' for' → logprob: -7.180286407470703
    9. ' of' → logprob: -8.555286407470703
    10. '_DP' → logprob: -9.180286407470703

Token 509: ' '' (ID: 461)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0003357006062287837
    2. ' DP' → logprob: -8.000335693359375
    3. 'dp' → logprob: -16.500335693359375
    4. '_DP' → logprob: -16.750335693359375
    5. 'Num' → logprob: -17.500335693359375
    6. 'D' → logprob: -18.875335693359375
    7. 'Dp' → logprob: -19.000335693359375
    8. 'num' → logprob: -19.875335693359375
    9. '[' → logprob: -20.750335693359375
    10. '0' → logprob: -21.500335693359375

Token 510: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -9.13388703338569e-06
    2. ' DP' → logprob: -11.625009536743164
    3. 'dp' → logprob: -16.750009536743164
    4. '_DP' → logprob: -17.750009536743164
    5. 'D' → logprob: -18.375009536743164
    6. 'Num' → logprob: -18.750009536743164
    7. 'Dp' → logprob: -18.750009536743164
    8. '[' → logprob: -19.250009536743164
    9. '`' → logprob: -20.250009536743164
    10. 'num' → logprob: -20.375009536743164

Token 511: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2060731053352356
    2. 'DP' → logprob: -1.7060730457305908
    3. ' DP' → logprob: -5.95607328414917
    4. '][' → logprob: -7.20607328414917
    5. ' =' → logprob: -7.70607328414917
    6. ']' → logprob: -8.206072807312012
    7. '=' → logprob: -8.581072807312012
    8. ' [' → logprob: -8.581072807312012
    9. '_DP' → logprob: -9.831072807312012
    10. ',' → logprob: -9.956072807312012

Token 512: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6599534153938293
    2. 'DP' → logprob: -0.9099534153938293
    3. '=' → logprob: -3.0349533557891846
    4. ' =' → logprob: -3.5349533557891846
    5. 'for' → logprob: -6.534953594207764
    6. ' DP' → logprob: -6.784953594207764
    7. ' for' → logprob: -8.659953117370605
    8. ',' → logprob: -8.659953117370605
    9. '[:' → logprob: -9.284953117370605
    10. 'dp' → logprob: -9.534953117370605

Token 513: ' être' (ID: 9104)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.1842486560344696
    2. '[' → logprob: -1.809248685836792
    3. ' Num' → logprob: -5.684248447418213
    4. ' [' → logprob: -7.934248447418213
    5. 'DP' → logprob: -8.059248924255371
    6. 'num' → logprob: -9.059248924255371
    7. 'Nums' → logprob: -9.309248924255371
    8. 'list' → logprob: -10.059248924255371
    9. '1' → logprob: -10.184248924255371
    10. '[num' → logprob: -10.934248924255371

Token 514: ' une' (ID: 2463)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.14227889478206635
    2. '[' → logprob: -2.1422789096832275
    3. ' Num' → logprob: -4.267278671264648
    4. ' [' → logprob: -7.392278671264648
    5. 'list' → logprob: -9.017278671264648
    6. 'num' → logprob: -9.142278671264648
    7. 'Nums' → logprob: -9.267278671264648
    8. 'DP' → logprob: -9.267278671264648
    9. '1' → logprob: -10.267278671264648
    10. ' ' → logprob: -10.517278671264648

Token 515: ' copie' (ID: 134141)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0030542423482984304
    2. '[' → logprob: -6.003054141998291
    3. 'list' → logprob: -8.37805461883545
    4. ' Num' → logprob: -8.50305461883545
    5. 'num' → logprob: -9.25305461883545
    6. 'Nums' → logprob: -11.00305461883545
    7. 'DP' → logprob: -11.12805461883545
    8. 'NUM' → logprob: -13.00305461883545
    9. 'List' → logprob: -13.00305461883545
    10. 'copy' → logprob: -13.50305461883545

Token 516: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002525245537981391
    2. 'Num' → logprob: -6.002525329589844
    3. ' (' → logprob: -10.502525329589844
    4. ' Num' → logprob: -11.752525329589844
    5. 'of' → logprob: -12.252525329589844
    6. ' of' → logprob: -12.502525329589844
    7. '(num' → logprob: -13.252525329589844
    8. 'num' → logprob: -14.002525329589844
    9. '(D' → logprob: -14.377525329589844
    10. '   ' → logprob: -14.627525329589844

Token 517: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.000565541791729629
    2. ' Num' → logprob: -7.500565528869629
    3. 'num' → logprob: -11.625565528869629
    4. '[' → logprob: -13.625565528869629
    5. 'Nums' → logprob: -13.875565528869629
    6. '(' → logprob: -14.250565528869629
    7. 'NUM' → logprob: -15.750565528869629
    8. '_Num' → logprob: -16.000566482543945
    9. '_num' → logprob: -16.125566482543945
    10. 'Numer' → logprob: -16.875566482543945

Token 518: '.' (ID: 13)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.534062922000885
    2. 'DP' → logprob: -1.0340628623962402
    3. ' =' → logprob: -3.1590628623962402
    4. '=' → logprob: -5.03406286239624
    5. '[:]' → logprob: -5.40906286239624
    6. 'Num' → logprob: -6.28406286239624
    7. '[:' → logprob: -6.78406286239624
    8. ' DP' → logprob: -7.15906286239624
    9. '(' → logprob: -7.78406286239624
    10. '_DP' → logprob: -8.659063339233398

Token 519: ' Cette' (ID: 27383)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -3.292907877039397e-06
    2. ' DP' → logprob: -12.75000286102295
    3. 'dp' → logprob: -15.50000286102295
    4. '_DP' → logprob: -16.875003814697266
    5. '```' → logprob: -18.500003814697266
    6. '=' → logprob: -18.625003814697266
    7. '[' → logprob: -19.000003814697266
    8. ']' → logprob: -19.125003814697266
    9. '
' → logprob: -19.500003814697266
    10. 'Dp' → logprob: -19.625003814697266

Token 520: ' opération' (ID: 86023)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0006911090458743274
    2. ' DP' → logprob: -7.875690937042236
    3. '[' → logprob: -8.750691413879395
    4. 'dp' → logprob: -9.625691413879395
    5. '_DP' → logprob: -10.375691413879395
    6. '[:]' → logprob: -11.250691413879395
    7. 'for' → logprob: -11.375691413879395
    8. 'copy' → logprob: -11.500691413879395
    9. 'Dp' → logprob: -12.375691413879395
    10. 's' → logprob: -12.500691413879395

Token 521: ' se' (ID: 458)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3104783594608307
    2. '[:]' → logprob: -1.6854783296585083
    3. 'DP' → logprob: -2.810478448867798
    4. 's' → logprob: -5.060478210449219
    5. ']' → logprob: -5.935478210449219
    6. '.copy' → logprob: -6.310478210449219
    7. '[i' → logprob: -6.310478210449219
    8. '[:' → logprob: -6.685478210449219
    9. ' DP' → logprob: -6.810478210449219
    10. '#' → logprob: -6.810478210449219

Token 522: ' fait' (ID: 7473)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.10621485859155655
    2. '[:]' → logprob: -2.856214761734009
    3. '[:' → logprob: -3.981214761734009
    4. '=' → logprob: -4.606215000152588
    5. '[' → logprob: -4.856215000152588
    6. 'dp' → logprob: -5.856215000152588
    7. ' DP' → logprob: -7.106215000152588
    8. '#' → logprob: -7.356215000152588
    9. 'for' → logprob: -7.981215000152588
    10. '[]' → logprob: -8.60621452331543

Token 523: ' pour' (ID: 1930)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2526685297489166
    2. '[:]' → logprob: -2.002668619155884
    3. ' DP' → logprob: -2.627668619155884
    4. ' directement' → logprob: -5.877668380737305
    5. 'dp' → logprob: -6.002668380737305
    6. ' via' → logprob: -6.252668380737305
    7. '[:' → logprob: -6.377668380737305
    8. ' par' → logprob: -6.877668380737305
    9. '.copy' → logprob: -7.002668380737305
    10. ',' → logprob: -7.377668380737305

Token 524: ' ne' (ID: 453)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0633605569601059
    2. 'i' → logprob: -2.8133604526519775
    3. ' DP' → logprob: -7.313360691070557
    4. ' i' → logprob: -7.563360691070557
    5. '_' → logprob: -9.063360214233398
    6. 'l' → logprob: -10.563360214233398
    7. 'k' → logprob: -10.688360214233398
    8. '_DP' → logprob: -11.438360214233398
    9. 't' → logprob: -12.563360214233398
    10. ' ' → logprob: -12.688360214233398

Token 525: ' pas' (ID: 2173)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.607906699180603
    2. 'pas' → logprob: -0.857906699180603
    3. ' pas' → logprob: -3.6079068183898926
    4. ' DP' → logprob: -6.107906818389893
    5. 'Pas' → logprob: -6.732906818389893
    6. '_pas' → logprob: -8.357906341552734
    7. '[:]' → logprob: -9.107906341552734
    8. ' not' → logprob: -9.107906341552734
    9. 'dp' → logprob: -9.357906341552734
    10. '   ' → logprob: -9.732906341552734

Token 526: ' l' (ID: 305)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.6695861220359802
    2. 'modifier' → logprob: -0.9195861220359802
    3. 'ré' → logprob: -3.544586181640625
    4. 'mod' → logprob: -3.919586181640625
    5. ' DP' → logprob: -4.669586181640625
    6. 'l' → logprob: -4.919586181640625
    7. 'import' → logprob: -5.669586181640625
    8. ' modifier' → logprob: -5.919586181640625
    9. 'faire' → logprob: -6.294586181640625
    10. 'aff' → logprob: -6.419586181640625

Token 527: 'ier' (ID: 905)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.276025652885437
    2. ' DP' → logprob: -2.2760257720947266
    3. 'modifier' → logprob: -3.4010257720947266
    4. 'e' → logprob: -3.6510257720947266
    5. 'alter' → logprob: -4.651025772094727
    6. 'ier' → logprob: -4.651025772094727
    7. 'o' → logprob: -5.276025772094727
    8. 'modify' → logprob: -5.401025772094727
    9. ''alt' → logprob: -5.526025772094727
    10. 'é' → logprob: -5.526025772094727

Token 528: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.023923467844724655
    2. 'Num' → logprob: -4.273923397064209
    3. ' DP' → logprob: -5.523923397064209
    4. 'l' → logprob: -5.773923397064209
    5. 'la' → logprob: -6.398923397064209
    6. ' Num' → logprob: -8.398923873901367
    7. '[' → logprob: -8.898923873901367
    8. 'le' → logprob: -9.023923873901367
    9. ' la' → logprob: -9.148923873901367
    10. 'les' → logprob: -9.148923873901367

Token 529: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038991993642412126
    2. '[k' → logprob: -7.87539005279541
    3. '0' → logprob: -11.87539005279541
    4. '[-' → logprob: -13.25039005279541
    5. '```' → logprob: -15.87539005279541
    6. ' [' → logprob: -16.000389099121094
    7. '=' → logprob: -16.125389099121094
    8. '
' → logprob: -16.125389099121094
    9. '[i' → logprob: -16.375389099121094
    10. 'k' → logprob: -16.500389099121094

Token 530: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018197819590568542
    2. '[' → logprob: -4.018198013305664
    3. ' ' → logprob: -10.643198013305664
    4. '1' → logprob: -11.143198013305664
    5. '=' → logprob: -12.268198013305664
    6. '   ' → logprob: -13.768198013305664
    7. '-' → logprob: -14.393198013305664
    8. ' =' → logprob: -14.393198013305664
    9. ' [' → logprob: -14.643198013305664
    10. '```' → logprob: -14.643198013305664

Token 531: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16635359823703766
    2. ']' → logprob: -1.9163535833358765
    3. '[:]' → logprob: -5.791353702545166
    4. '[i' → logprob: -7.166353702545166
    5. ']=' → logprob: -7.291353702545166
    6. ',' → logprob: -7.791353702545166
    7. '][' → logprob: -7.916353702545166
    8. '[:' → logprob: -9.166353225708008
    9. '=' → logprob: -9.166353225708008
    10. '   ' → logprob: -9.291353225708008

Token 532: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5568978786468506
    2. '=' → logprob: -1.0568978786468506
    3. '[' → logprob: -2.8068978786468506
    4. '[:]' → logprob: -4.43189811706543
    5. ' à' → logprob: -6.05689811706543
    6. 'DP' → logprob: -6.80689811706543
    7. ' ' → logprob: -6.93189811706543
    8. 'Num' → logprob: -7.68189811706543
    9. '.' → logprob: -8.05689811706543
    10. '[i' → logprob: -8.43189811706543

Token 533: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0009158630855381489
    2. ' Num' → logprob: -7.000916004180908
    3. 'num' → logprob: -12.75091552734375
    4. '#' → logprob: -14.62591552734375
    5. '_Num' → logprob: -14.87591552734375
    6. '_num' → logprob: -15.87591552734375
    7. 'Number' → logprob: -16.00091552734375
    8. 'Numero' → logprob: -16.25091552734375
    9. 'Nums' → logprob: -16.62591552734375
    10. ' ' → logprob: -16.75091552734375

Token 534: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5946418046951294
    2. ' =' → logprob: -1.7196418046951294
    3. 'DP' → logprob: -1.8446418046951294
    4. '[' → logprob: -2.84464168548584
    5. '[:]' → logprob: -3.09464168548584
    6. ' DP' → logprob: -6.21964168548584
    7. '.copy' → logprob: -6.59464168548584
    8. '.' → logprob: -6.71964168548584
    9. '[:' → logprob: -6.96964168548584
    10. 's' → logprob: -7.59464168548584

Token 535: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -9.088346359931165e-07
    2. 'dp' → logprob: -14.625000953674316
    3. ' DP' → logprob: -15.125000953674316
    4. '_DP' → logprob: -16.75
    5. '[' → logprob: -17.125
    6. 'Dp' → logprob: -18.0
    7. '```' → logprob: -18.375
    8. 'for' → logprob: -18.625
    9. '=' → logprob: -18.875
    10. '#' → logprob: -19.5

Token 536: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '=' → logprob: -13.37500286102295
    3. '][' → logprob: -14.50000286102295
    4. ' =' → logprob: -15.25000286102295
    5. ' [' → logprob: -15.62500286102295
    6. '0' → logprob: -16.000003814697266
    7. '=[' → logprob: -16.125003814697266
    8. '```' → logprob: -16.250003814697266
    9. '\[' → logprob: -16.500003814697266
    10. ')[' → logprob: -16.750003814697266

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '=' → logprob: -17.5
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -19.375
    7. '1' → logprob: -19.5
    8. '```' → logprob: -19.875
    9. ']' → logprob: -20.0
    10. '][' → logprob: -20.5

Token 538: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017362393555231392
    2. ']=' → logprob: -8.750173568725586
    3. ' ]' → logprob: -11.125173568725586
    4. '=' → logprob: -14.875173568725586
    5. '[:]' → logprob: -17.000173568725586
    6. '[' → logprob: -18.375173568725586
    7. ' =' → logprob: -18.750173568725586
    8. '[:' → logprob: -19.500173568725586
    9. ']
' → logprob: -19.625173568725586
    10. '']' → logprob: -20.000173568725586

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132753074169159
    2. '=' → logprob: -1.3132753372192383
    3. '[:]' → logprob: -11.563275337219238
    4. '[' → logprob: -12.938275337219238
    5. '=num' → logprob: -14.813275337219238
    6. ']' → logprob: -14.938275337219238
    7. ',' → logprob: -15.688275337219238
    8. ')' → logprob: -16.063274383544922
    9. '=[' → logprob: -16.188274383544922
    10. '[num' → logprob: -16.438274383544922

Token 540: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -6.392202976712724e-06
    2. ' Num' → logprob: -12.000006675720215
    3. 'num' → logprob: -15.625006675720215
    4. 'Nums' → logprob: -18.0000057220459
    5. 'NUM' → logprob: -19.6250057220459
    6. 'list' → logprob: -19.6250057220459
    7. 'List' → logprob: -20.1250057220459
    8. '_num' → logprob: -20.7500057220459
    9. '_Num' → logprob: -21.2500057220459
    10. '.Num' → logprob: -21.6250057220459

Token 541: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 542: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.2729995988775045e-06
    2. ')' → logprob: -12.750006675720215
    3. ' ]' → logprob: -13.125006675720215
    4. 'l' → logprob: -14.500006675720215
    5. ']
' → logprob: -14.750006675720215
    6. ']

' → logprob: -15.250006675720215
    7. ')]' → logprob: -15.750006675720215
    8. '].' → logprob: -17.0000057220459
    9. '])' → logprob: -17.6250057220459
    10. '](' → logprob: -17.6250057220459

Token 543: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8299981355667114
    2. '<|end|>' → logprob: -1.2049981355667114
    3. '+' → logprob: -2.329998016357422
    4. ')' → logprob: -2.954998016357422
    5. '(' → logprob: -3.079998016357422
    6. '[' → logprob: -3.704998016357422
    7. ' for' → logprob: -4.454998016357422
    8. ' ' → logprob: -4.454998016357422
    9. '#' → logprob: -4.829998016357422
    10. ']' → logprob: -5.579998016357422

Token 544: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. 'from' → logprob: -16.625
    3. ' for' → logprob: -16.875
    4. '#' → logprob: -18.875
    5. '```' → logprob: -19.625
    6. 'import' → logprob: -21.625
    7. '	for' → logprob: -22.0
    8. '
' → logprob: -22.375
    9. 'i' → logprob: -22.625
    10. 'mod' → logprob: -22.75

Token 545: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.3947598934173584
    2. 'c' → logprob: -1.1447598934173584
    3. 'for' → logprob: -5.3947601318359375
    4. 'cl' → logprob: -5.8947601318359375
    5. 'cles' → logprob: -8.269760131835938
    6. 'clé' → logprob: -8.644760131835938
    7. 't' → logprob: -10.019760131835938
    8. 'cler' → logprob: -11.144760131835938
    9. 'f' → logprob: -11.519760131835938
    10. 'n' → logprob: -11.644760131835938

Token 546: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023279955610632896
    2. ' for' → logprob: -3.773279905319214
    3. 'i' → logprob: -10.773280143737793
    4. 'range' → logprob: -12.648280143737793
    5. '_' → logprob: -12.773280143737793
    6. ' i' → logprob: -13.023280143737793
    7. '_for' → logprob: -13.398280143737793
    8. 'k' → logprob: -13.648280143737793
    9. ' range' → logprob: -14.648280143737793
    10. 'in' → logprob: -14.648280143737793

Token 547: ' dynamique' (ID: 98708)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.297462171758525e-05
    2. ' for' → logprob: -10.375033378601074
    3. '
' → logprob: -14.000033378601074
    4. '```' → logprob: -14.000033378601074
    5. 'range' → logprob: -17.625032424926758
    6. '``' → logprob: -17.875032424926758
    7. '#' → logprob: -18.750032424926758
    8. ':' → logprob: -19.125032424926758
    9. '	for' → logprob: -19.250032424926758
    10. 'k' → logprob: -19.375032424926758

Token 548: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005729287513531744
    2. ' for' → logprob: -7.50057315826416
    3. '
' → logprob: -10.87557315826416
    4. '```' → logprob: -14.75057315826416
    5. 'range' → logprob: -15.87557315826416
    6. ':' → logprob: -16.000572204589844
    7. 'i' → logprob: -16.625572204589844
    8. '	for' → logprob: -17.125572204589844
    9. 'k' → logprob: -17.250572204589844
    10. 'or' → logprob: -17.375572204589844

Token 549: ' remplir' (ID: 113625)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1429395079612732
    2. 'range' → logprob: -2.267939567565918
    3. 'x' → logprob: -5.267939567565918
    4. ' range' → logprob: -5.267939567565918
    5. ' i' → logprob: -5.392939567565918
    6. 'k' → logprob: -5.892939567565918
    7. 'j' → logprob: -6.017939567565918
    8. 'r' → logprob: -6.142939567565918
    9. 'for' → logprob: -6.767939567565918
    10. 'kk' → logprob: -7.267939567565918

Token 550: ' tout' (ID: 5501)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09960398077964783
    2. ' range' → logprob: -2.8496038913726807
    3. 'k' → logprob: -3.4746038913726807
    4. 'i' → logprob: -5.97460412979126
    5. 'for' → logprob: -5.97460412979126
    6. 'r' → logprob: -7.84960412979126
    7. ' k' → logprob: -8.349603652954102
    8. ' for' → logprob: -9.724603652954102
    9. '```' → logprob: -9.849603652954102
    10. ' i' → logprob: -10.099603652954102

Token 551: ' DP' (ID: 51992)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07458820939064026
    2. ' range' → logprob: -2.9495882987976074
    3. 'k' → logprob: -3.9495882987976074
    4. 'i' → logprob: -9.07458782196045
    5. ' k' → logprob: -9.32458782196045
    6. 'for' → logprob: -10.69958782196045
    7. 'r' → logprob: -12.07458782196045
    8. '_range' → logprob: -12.32458782196045
    9. 'j' → logprob: -12.57458782196045
    10. '```' → logprob: -12.82458782196045

Token 552: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032954670023173094
    2. 'range' → logprob: -5.753295421600342
    3. ' for' → logprob: -9.2532958984375
    4. ' range' → logprob: -12.2532958984375
    5. 'in' → logprob: -12.2532958984375
    6. '
' → logprob: -12.5032958984375
    7. '```' → logprob: -12.5032958984375
    8. '(range' → logprob: -12.6282958984375
    9. '_range' → logprob: -14.7532958984375
    10. ':' → logprob: -15.2532958984375

Token 553: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5057226419448853
    2. ' range' → logprob: -1.5057226419448853
    3. '1' → logprob: -2.7557225227355957
    4. 'i' → logprob: -3.6307225227355957
    5. 'k' → logprob: -3.6307225227355957
    6. 'for' → logprob: -3.8807225227355957
    7. ' la' → logprob: -4.255722522735596
    8. 'la' → logprob: -5.005722522735596
    9. ' for' → logprob: -5.505722522735596
    10. ' i' → logprob: -5.630722522735596

Token 554: ' première' (ID: 23423)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00179203599691391
    2. 'first' → logprob: -7.251791954040527
    3. '1' → logprob: -7.626791954040527
    4. ' première' → logprob: -8.751791954040527
    5. 'for' → logprob: -9.251791954040527
    6. ' first' → logprob: -9.376791954040527
    7. 'prem' → logprob: -9.501791954040527
    8. ' ' → logprob: -9.626791954040527
    9. 'last' → logprob: -10.251791954040527
    10. 'range' → logprob: -10.376791954040527

Token 555: ' ligne' (ID: 19583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15975207090377808
    2. 'range' → logprob: -2.159752130508423
    3. ' range' → logprob: -4.534751892089844
    4. ' for' → logprob: -4.784751892089844
    5. '(' → logprob: -5.659751892089844
    6. '1' → logprob: -5.784751892089844
    7. '(range' → logprob: -6.284751892089844
    8. '(k' → logprob: -6.409751892089844
    9. 'i' → logprob: -6.659751892089844
    10. 'k' → logprob: -7.159751892089844

Token 556: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004606975708156824
    2. ' for' → logprob: -7.750460624694824
    3. ':' → logprob: -10.875460624694824
    4. '```' → logprob: -11.875460624694824
    5. 'range' → logprob: -12.875460624694824
    6. '
' → logprob: -14.125460624694824
    7. ':
' → logprob: -15.000460624694824
    8. '	for' → logprob: -15.500460624694824
    9. '(range' → logprob: -16.87546157836914
    10. 'in' → logprob: -17.00046157836914

Token 557: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.061054359131958e-06
    2. ' for' → logprob: -11.750007629394531
    3. '```' → logprob: -16.00000762939453
    4. '	for' → logprob: -20.37500762939453
    5. '
' → logprob: -20.75000762939453
    6. 'range' → logprob: -21.87500762939453
    7. '``' → logprob: -22.25000762939453
    8. '   ' → logprob: -22.50000762939453
    9. 'i' → logprob: -22.50000762939453
    10. 'from' → logprob: -23.37500762939453

Token 558: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2558528184890747
    2. 'j' → logprob: -2.505852699279785
    3. ' i' → logprob: -2.755852699279785
    4. 'x' → logprob: -3.130852699279785
    5. ' j' → logprob: -4.380852699279785
    6. ' x' → logprob: -4.755852699279785
    7. 't' → logprob: -6.130852699279785
    8. 'a' → logprob: -6.630852699279785
    9. 'm' → logprob: -6.880852699279785
    10. 'd' → logprob: -6.880852699279785

Token 559: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862494766712189
    2. 'in' → logprob: -3.0486249923706055
    3. '1' → logprob: -11.173624992370605
    4. ' ' → logprob: -11.423624992370605
    5. '	in' → logprob: -12.048624992370605
    6. '   ' → logprob: -13.673624992370605
    7. 'range' → logprob: -14.048624992370605
    8. 'In' → logprob: -14.173624992370605
    9. '0' → logprob: -14.423624992370605
    10. '  ' → logprob: -14.548624992370605

Token 560: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602301150560379
    2. ' range' → logprob: -1.9102301597595215
    3. ' in' → logprob: -12.285229682922363
    4. '1' → logprob: -14.160229682922363
    5. 'in' → logprob: -14.660229682922363
    6. '(range' → logprob: -16.28523063659668
    7. ' ' → logprob: -16.53523063659668
    8. '	range' → logprob: -17.66023063659668
    9. ' xrange' → logprob: -19.53523063659668
    10. '   ' → logprob: -19.78523063659668

Token 561: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815006136894226
    2. '(' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.018150329589844
    4. ' (' → logprob: -17.518150329589844
    5. ',' → logprob: -17.893150329589844
    6. '[' → logprob: -18.143150329589844
    7. '
' → logprob: -18.393150329589844
    8. ')' → logprob: -19.643150329589844
    9. '(
' → logprob: -19.893150329589844
    10. '#' → logprob: -20.393150329589844

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.5
    4. '(' → logprob: -21.125
    5. '```' → logprob: -22.0
    6. '
' → logprob: -22.125
    7. '１' → logprob: -22.125
    8. '۱' → logprob: -22.25
    9. '0' → logprob: -22.75
    10. '2' → logprob: -23.1875

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035155098885297775
    2. ',k' → logprob: -8.125351905822754
    3. ' ,' → logprob: -9.875351905822754
    4. 'k' → logprob: -12.500351905822754
    5. ' k' → logprob: -14.875351905822754
    6. '(k' → logprob: -17.125350952148438
    7. '1' → logprob: -18.125350952148438
    8. ',n' → logprob: -18.875350952148438
    9. '   ' → logprob: -19.625350952148438
    10. ',
' → logprob: -19.750350952148438

Token 564: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. ' k' → logprob: -11.50001049041748
    3. '	k' → logprob: -19.250009536743164
    4. '   ' → logprob: -22.375009536743164
    5. '{k' → logprob: -23.000009536743164
    6. '
' → logprob: -23.875009536743164
    7. 'к' → logprob: -24.500009536743164
    8. 'kx' → logprob: -24.625009536743164
    9. ',k' → logprob: -24.750009536743164
    10. '=k' → logprob: -25.125009536743164

Token 565: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20254570245742798
    2. '):
' → logprob: -1.7025456428527832
    3. ':' → logprob: -7.077545642852783
    4. '+' → logprob: -9.327546119689941
    5. '):
' → logprob: -9.327546119689941
    6. ',' → logprob: -9.952546119689941
    7. ')' → logprob: -10.327546119689941
    8. ' ):' → logprob: -11.827546119689941
    9. ':
' → logprob: -12.077546119689941
    10. '   ' → logprob: -12.577546119689941

Token 566: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2751491963863373
    2. '   ' → logprob: -1.5251492261886597
    3. ' for' → logprob: -3.77514910697937
    4. '	for' → logprob: -11.27514934539795
    5. ' ' → logprob: -12.15014934539795
    6. '  ' → logprob: -14.52514934539795
    7. '```' → logprob: -14.90014934539795
    8. '       ' → logprob: -16.900148391723633
    9. '   ' → logprob: -17.525148391723633
    10. '    ' → logprob: -17.650148391723633

Token 567: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001766097266227007
    2. 'prefix' → logprob: -7.251766204833984
    3. '   ' → logprob: -8.001766204833984
    4. 'j' → logprob: -8.126766204833984
    5. ' for' → logprob: -8.501766204833984
    6. 'cum' → logprob: -10.251766204833984
    7. 'temp' → logprob: -10.626766204833984
    8. 'sum' → logprob: -10.751766204833984
    9. 'prev' → logprob: -10.876766204833984
    10. 'dp' → logprob: -11.001766204833984

Token 568: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04354052618145943
    2. 'prefix' → logprob: -4.2935404777526855
    3. 'j' → logprob: -5.0435404777526855
    4. 'cur' → logprob: -5.4185404777526855
    5. 'sum' → logprob: -5.6685404777526855
    6. 'c' → logprob: -6.1685404777526855
    7. 'cum' → logprob: -6.6685404777526855
    8. 'p' → logprob: -6.7935404777526855
    9. 'pre' → logprob: -6.7935404777526855
    10. 'acc' → logprob: -6.9185404777526855

Token 569: 'isation' (ID: 6993)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3059472143650055
    2. 'for' → logprob: -3.0559473037719727
    3. 'j' → logprob: -3.3059473037719727
    4. 'cum' → logprob: -3.6809473037719727
    5. '=' → logprob: -3.8059473037719727
    6. 'max' → logprob: -4.430947303771973
    7. 'DP' → logprob: -4.555947303771973
    8. 'm' → logprob: -4.680947303771973
    9. 'acc' → logprob: -4.680947303771973
    10. 'prev' → logprob: -5.055947303771973

Token 570: ' d' (ID: 272)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.7544580698013306
    2. 'c' → logprob: -2.004457950592041
    3. 'cur' → logprob: -2.004457950592041
    4. 'j' → logprob: -2.129457950592041
    5. 'prefix' → logprob: -2.379457950592041
    6. 'cum' → logprob: -2.379457950592041
    7. 'acc' → logprob: -2.504457950592041
    8. 's' → logprob: -3.129457950592041
    9. 'curr' → logprob: -4.004457950592041
    10. 'sm' → logprob: -4.004457950592041

Token 571: ''une' (ID: 13337)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9401190876960754
    2. 'j' → logprob: -1.1901190280914307
    3. ' j' → logprob: -1.5651190280914307
    4. '1' → logprob: -4.19011926651001
    5. ' ' → logprob: -4.19011926651001
    6. '=' → logprob: -4.31511926651001
    7. 's' → logprob: -4.69011926651001
    8. 'sum' → logprob: -5.19011926651001
    9. ' =' → logprob: -5.56511926651001
    10. '[' → logprob: -5.56511926651001

Token 572: ' variable' (ID: 11076)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6737956404685974
    2. 'cur' → logprob: -2.423795700073242
    3. 'c' → logprob: -2.798795700073242
    4. 'sum' → logprob: -2.923795700073242
    5. 'curr' → logprob: -3.173795700073242
    6. 'tmp' → logprob: -3.548795700073242
    7. 'ptr' → logprob: -3.548795700073242
    8. 'prefix' → logprob: -3.673795700073242
    9. 's' → logprob: -3.798795700073242
    10. 'p' → logprob: -3.923795700073242

Token 573: ' tempora' (ID: 117509)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6378812789916992
    2. 'sum' → logprob: -2.137881278991699
    3. 'cur' → logprob: -2.512881278991699
    4. 's' → logprob: -3.262881278991699
    5. 'c' → logprob: -3.512881278991699
    6. 'p' → logprob: -3.512881278991699
    7. 'acc' → logprob: -3.887881278991699
    8. 'sm' → logprob: -4.012881278991699
    9. 'prefix' → logprob: -4.387881278991699
    10. 'now' → logprob: -4.387881278991699

Token 574: 'ire' (ID: 594)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6027307510375977
    2. ' =' → logprob: -1.8527307510375977
    3. 'temp' → logprob: -2.2277307510375977
    4. 'tmp' → logprob: -2.8527307510375977
    5. 'sum' → logprob: -2.9777307510375977
    6. 's' → logprob: -3.3527307510375977
    7. '_sum' → logprob: -4.727730751037598
    8. 'total' → logprob: -5.602730751037598
    9. 'y' → logprob: -5.602730751037598
    10. ' s' → logprob: -5.727730751037598

Token 575: ' à' (ID: 1221)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7387279868125916
    2. 'tmp' → logprob: -0.8637279868125916
    3. 'sum' → logprob: -3.1137280464172363
    4. 'cur' → logprob: -4.738728046417236
    5. 'total' → logprob: -4.738728046417236
    6. 's' → logprob: -4.863728046417236
    7. 'acc' → logprob: -5.113728046417236
    8. 't' → logprob: -5.113728046417236
    9. 'cum' → logprob: -5.238728046417236
    10. 'tot' → logprob: -5.363728046417236

Token 576: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001979378139367327
    2. ' ' → logprob: -9.000198364257812
    3. 'DP' → logprob: -10.250198364257812
    4. '[' → logprob: -10.875198364257812
    5. 'Num' → logprob: -11.875198364257812
    6. 'num' → logprob: -12.250198364257812
    7. 'dp' → logprob: -13.750198364257812
    8. '1' → logprob: -13.750198364257812
    9. 'l' → logprob: -14.250198364257812
    10. 'sum' → logprob: -14.250198364257812

Token 577: ',' (ID: 11)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.7163454294204712
    2. 'temp' → logprob: -1.0913454294204712
    3. '   ' → logprob: -2.0913453102111816
    4. 'sum' → logprob: -3.5913453102111816
    5. 't' → logprob: -5.091345310211182
    6. 's' → logprob: -5.341345310211182
    7. 'total' → logprob: -5.591345310211182
    8. ' tmp' → logprob: -6.466345310211182
    9. 'cum' → logprob: -6.591345310211182
    10. 'tot' → logprob: -6.966345310211182

Token 578: ' qui' (ID: 2780)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6423331499099731
    2. 'tmp' → logprob: -0.8923331499099731
    3. 'sum' → logprob: -3.8923330307006836
    4. ' tmp' → logprob: -4.392333030700684
    5. ' temp' → logprob: -4.517333030700684
    6. 't' → logprob: -5.392333030700684
    7. 'total' → logprob: -5.767333030700684
    8. 's' → logprob: -6.267333030700684
    9. 'tot' → logprob: -6.517333030700684
    10. 'cur' → logprob: -6.642333030700684

Token 579: ' serv' (ID: 2096)
  Prédit: ' accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accum' → logprob: -0.2212400734424591
    2. 's' → logprob: -2.5962400436401367
    3. 'acc' → logprob: -3.4712400436401367
    4. ' s' → logprob: -4.096240043640137
    5. 'sera' → logprob: -4.221240043640137
    6. '=' → logprob: -4.346240043640137
    7. ' cum' → logprob: -5.096240043640137
    8. 'c' → logprob: -5.346240043640137
    9. 'cum' → logprob: -5.721240043640137
    10. 'su' → logprob: -5.846240043640137

Token 580: 'ira' (ID: 2633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7371639609336853
    2. 'era' → logprob: -0.8621639609336853
    3. 'ra' → logprob: -3.11216402053833
    4. 'e' → logprob: -3.11216402053833
    5. 'ent' → logprob: -5.23716402053833
    6. 'er' → logprob: -5.48716402053833
    7. 'ait' → logprob: -7.48716402053833
    8. 't' → logprob: -8.987163543701172
    9. '#' → logprob: -9.987163543701172
    10. 'ant' → logprob: -10.987163543701172

Token 581: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9367058873176575
    2. ' à' → logprob: -1.9367058277130127
    3. 'de' → logprob: -2.0617058277130127
    4. 'a' → logprob: -2.4367058277130127
    5. 'temp' → logprob: -2.5617058277130127
    6. ' de' → logprob: -3.1867058277130127
    7. 'tmp' → logprob: -3.1867058277130127
    8. '=' → logprob: -3.3117058277130127
    9. 'as' → logprob: -4.936706066131592
    10. 'au' → logprob: -4.936706066131592

Token 582: ' stock' (ID: 6546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002945489948615432
    2. ' ' → logprob: -5.877945423126221
    3. 'acc' → logprob: -10.502945899963379
    4. 'DP' → logprob: -10.877945899963379
    5. 'temp' → logprob: -11.002945899963379
    6. 'sum' → logprob: -11.127945899963379
    7. 's' → logprob: -11.627945899963379
    8. 'tmp' → logprob: -11.752945899963379
    9. 'dp' → logprob: -12.002945899963379
    10. 'Num' → logprob: -12.252945899963379

Token 583: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.01926600933074951
    2. 'e' → logprob: -4.894266128540039
    3. 'ée' → logprob: -6.394266128540039
    4. 'temp' → logprob: -6.394266128540039
    5. 't' → logprob: -6.519266128540039
    6. '   ' → logprob: -6.644266128540039
    7. 'tmp' → logprob: -6.644266128540039
    8. 'u' → logprob: -7.394266128540039
    9. 'sum' → logprob: -7.519266128540039
    10. '0' → logprob: -7.644266128540039

Token 584: ' des' (ID: 731)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.529902994632721
    2. '0' → logprob: -1.2799029350280762
    3. 'tmp' → logprob: -2.279902935028076
    4. 'acc' → logprob: -5.154902935028076
    5. 'total' → logprob: -5.154902935028076
    6. 'cur' → logprob: -5.279902935028076
    7. 's' → logprob: -5.404902935028076
    8. 't' → logprob: -6.279902935028076
    9. 'DP' → logprob: -6.654902935028076
    10. 'curr' → logprob: -7.029902935028076

Token 585: ' accum' (ID: 23148)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03525662422180176
    2. 'acc' → logprob: -4.785256385803223
    3. ' ' → logprob: -4.910256385803223
    4. 'temp' → logprob: -4.910256385803223
    5. 'sum' → logprob: -5.660256385803223
    6. 'total' → logprob: -5.910256385803223
    7. 'tmp' → logprob: -6.285256385803223
    8. 's' → logprob: -6.785256385803223
    9. 'cum' → logprob: -7.660256385803223
    10. ' total' → logprob: -7.910256385803223

Token 586: 'ulations' (ID: 14571)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.21568866074085236
    2. 'umul' → logprob: -2.090688705444336
    3. 'umulate' → logprob: -2.965688705444336
    4. 'ulé' → logprob: -4.840688705444336
    5. 'ul' → logprob: -5.965688705444336
    6. 'ulate' → logprob: -6.465688705444336
    7. 'u' → logprob: -6.590688705444336
    8. 'mul' → logprob: -6.840688705444336
    9. 'ulated' → logprob: -7.090688705444336
    10. 'ulat' → logprob: -7.215688705444336

Token 587: ' parti' (ID: 37271)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2674262523651123
    2. 'tmp' → logprob: -2.1424262523651123
    3. '   ' → logprob: -2.3924262523651123
    4. 'acc' → logprob: -5.142426490783691
    5. 'sum' → logprob: -5.392426490783691
    6. ' temp' → logprob: -5.767426490783691
    7. 'total' → logprob: -6.017426490783691
    8. '=' → logprob: -6.142426490783691
    9. 'cur' → logprob: -6.517426490783691
    10. 't' → logprob: -6.642426490783691

Token 588: 'elles' (ID: 8500)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.4407051205635071
    2. 'é' → logprob: -1.5657050609588623
    3. 'l' → logprob: -3.1907050609588623
    4. 'al' → logprob: -3.3157050609588623
    5. 'ales' → logprob: -4.315705299377441
    6. 'el' → logprob: -4.440705299377441
    7. 'ée' → logprob: -5.065705299377441
    8. 'nées' → logprob: -5.065705299377441
    9. 'elles' → logprob: -5.190705299377441
    10. 'es' → logprob: -5.565705299377441

Token 589: '.
' (ID: 558)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.4583721160888672
    2. 'tmp' → logprob: -1.3333721160888672
    3. '   ' → logprob: -2.583372116088867
    4. ' temp' → logprob: -5.083372116088867
    5. '=' → logprob: -5.208372116088867
    6. 'sum' → logprob: -5.583372116088867
    7. 'total' → logprob: -5.708372116088867
    8. ' tmp' → logprob: -5.833372116088867
    9. ' =' → logprob: -6.333372116088867
    10. 't' → logprob: -6.708372116088867

Token 590: '   ' (ID: 271)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.620039701461792
    2. 'tmp' → logprob: -1.120039701461792
    3. '   ' → logprob: -2.870039701461792
    4. 'sum' → logprob: -3.745039701461792
    5. 't' → logprob: -4.370039939880371
    6. ' temp' → logprob: -4.495039939880371
    7. ' tmp' → logprob: -4.745039939880371
    8. 's' → logprob: -5.120039939880371
    9. 'total' → logprob: -5.495039939880371
    10. 'acc' → logprob: -6.620039939880371

Token 591: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.6531718969345093
    2. 'temp' → logprob: -0.7781718969345093
    3. 't' → logprob: -5.278172016143799
    4. 'cur' → logprob: -5.278172016143799
    5. 'sum' → logprob: -5.778172016143799
    6. 'total' → logprob: -6.903172016143799
    7. 'acc' → logprob: -6.903172016143799
    8. 'tot' → logprob: -7.278172016143799
    9. 's' → logprob: -7.403172016143799
    10. 'tem' → logprob: -7.653172016143799

Token 592: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759404897689819
    2. '=' → logprob: -0.8259404897689819
    3. ' ' → logprob: -14.700940132141113
    4. ',' → logprob: -15.200940132141113
    5. ' +=' → logprob: -15.950940132141113
    6. '+=' → logprob: -16.32594108581543
    7. '  ' → logprob: -16.45094108581543
    8. '   ' → logprob: -16.82594108581543
    9. ' ' → logprob: -17.20094108581543
    10. '	' → logprob: -17.57594108581543

Token 593: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031825865153223276
    2. ' ' → logprob: -5.753182411193848
    3. '[' → logprob: -12.878182411193848
    4. '   ' → logprob: -15.065682411193848
    5. '(' → logprob: -15.128182411193848
    6. 'num' → logprob: -15.690682411193848
    7. 'mod' → logprob: -15.690682411193848
    8. ' [' → logprob: -15.690682411193848
    9. '۰' → logprob: -15.940682411193848
    10. ' ' → logprob: -16.003183364868164

Token 594: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001217813478433527
    2. ' ' → logprob: -9.1251220703125
    3. '[' → logprob: -12.1251220703125
    4. 'DP' → logprob: -12.3751220703125
    5. 'num' → logprob: -14.8751220703125
    6. '(' → logprob: -14.8751220703125
    7. 'int' → logprob: -15.0001220703125
    8. 'Num' → logprob: -15.3126220703125
    9. 'mod' → logprob: -15.5626220703125
    10. 'sum' → logprob: -15.6251220703125

Token 595: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5465254187583923
    2. ' for' → logprob: -1.546525478363037
    3. '<|end|>' → logprob: -1.796525478363037
    4. 'for' → logprob: -3.421525478363037
    5. ')' → logprob: -5.421525478363037
    6. ' ' → logprob: -6.546525478363037
    7. '
' → logprob: -6.671525478363037
    8. '	for' → logprob: -7.296525478363037
    9. '<|end|>' → logprob: -7.671525478363037
    10. '  ' → logprob: -8.296525001525879

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29191261529922485
    2. ' for' → logprob: -1.79191255569458
    3. 'for' → logprob: -2.79191255569458
    4. '<|end|>' → logprob: -4.41691255569458
    5. '[' → logprob: -5.04191255569458
    6. '	for' → logprob: -6.16691255569458
    7. '[i' → logprob: -6.54191255569458
    8. ' ' → logprob: -7.79191255569458
    9. '```' → logprob: -7.91691255569458
    10. '    ' → logprob: -7.91691255569458

Token 597: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059839069843292236
    2. ' for' → logprob: -3.1848390102386475
    3. '   ' → logprob: -4.184839248657227
    4. '	for' → logprob: -6.559839248657227
    5. ' ' → logprob: -10.809839248657227
    6. '<|end|>' → logprob: -10.934839248657227
    7. '[' → logprob: -11.684839248657227
    8. '  ' → logprob: -12.434839248657227
    9. '```' → logprob: -13.059839248657227
    10. 'range' → logprob: -13.809839248657227

Token 598: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.394135612528771e-05
    2. 'j' → logprob: -10.500043869018555
    3. ' for' → logprob: -11.125043869018555
    4. '   ' → logprob: -14.250043869018555
    5. 'l' → logprob: -15.500043869018555
    6. 'range' → logprob: -15.750043869018555
    7. '```' → logprob: -15.875043869018555
    8. '#' → logprob: -16.000043869018555
    9. '	for' → logprob: -16.750043869018555
    10. 'from' → logprob: -17.125043869018555

Token 599: 'ours' (ID: 2327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04574017971754074
    2. 'ge' → logprob: -3.6707401275634766
    3. 'or' → logprob: -5.045740127563477
    4. ' for' → logprob: -5.795740127563477
    5. 'ur' → logprob: -5.920740127563477
    6. 'ange' → logprob: -6.045740127563477
    7. 'age' → logprob: -6.670740127563477
    8. 'our' → logprob: -7.170740127563477
    9. 'eur' → logprob: -7.545740127563477
    10. 'range' → logprob: -7.545740127563477

Token 600: ' les' (ID: 1341)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7518356442451477
    2. 'for' → logprob: -1.251835584640503
    3. 'in' → logprob: -1.751835584640503
    4. '(range' → logprob: -3.376835584640503
    5. 'range' → logprob: -4.001835823059082
    6. ' for' → logprob: -4.751835823059082
    7. ' range' → logprob: -5.001835823059082
    8. '(' → logprob: -8.001835823059082
    9. '(l' → logprob: -8.251835823059082
    10. '(j' → logprob: -8.751835823059082

Token 601: ' indices' (ID: 30378)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016541369259357452
    2. ' range' → logprob: -4.141541481018066
    3. 'l' → logprob: -8.016541481018066
    4. 'j' → logprob: -8.891541481018066
    5. 're' → logprob: -11.516541481018066
    6. '(range' → logprob: -11.641541481018066
    7. 'DP' → logprob: -12.391541481018066
    8. ' l' → logprob: -13.141541481018066
    9. ' j' → logprob: -13.266541481018066
    10. '```' → logprob: -13.391541481018066

Token 602: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.112078070640564
    2. 'range' → logprob: -1.362078070640564
    3. 'in' → logprob: -1.737078070640564
    4. ' in' → logprob: -1.862078070640564
    5. ' range' → logprob: -3.2370781898498535
    6. ' for' → logprob: -3.8620781898498535
    7. '(range' → logprob: -4.7370781898498535
    8. 'j' → logprob: -5.3620781898498535
    9. '(l' → logprob: -5.6120781898498535
    10. 'l' → logprob: -6.1120781898498535

Token 603: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009770493023097515
    2. ' range' → logprob: -4.634770393371582
    3. 'l' → logprob: -11.384770393371582
    4. 're' → logprob: -13.509770393371582
    5. '(range' → logprob: -13.884770393371582
    6. 'len' → logprob: -16.0097713470459
    7. 'DP' → logprob: -16.1347713470459
    8. 'Num' → logprob: -16.3847713470459
    9. ' l' → logprob: -16.5097713470459
    10. ' ' → logprob: -16.7597713470459

Token 604: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.125210297293961e-05
    2. ' range' → logprob: -9.625081062316895
    3. 'l' → logprob: -11.875081062316895
    4. 're' → logprob: -12.625081062316895
    5. 'Num' → logprob: -13.000081062316895
    6. '(range' → logprob: -13.625081062316895
    7. 'num' → logprob: -14.750081062316895
    8. 'DP' → logprob: -15.875081062316895
    9. 'r' → logprob: -16.00008201599121
    10. 'enumer' → logprob: -16.00008201599121

Token 605: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023466866463422775
    2. ',l' → logprob: -3.8984668254852295
    3. ' ,' → logprob: -6.898467063903809
    4. 'to' → logprob: -7.398467063903809
    5. '(l' → logprob: -8.023467063903809
    6. 'range' → logprob: -8.023467063903809
    7. ' to' → logprob: -9.148467063903809
    8. ',len' → logprob: -9.273467063903809
    9. 'l' → logprob: -9.398467063903809
    10. ' l' → logprob: -9.523467063903809

Token 606: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00012154294381616637
    2. 'len' → logprob: -9.250121116638184
    3. ' l' → logprob: -10.875121116638184
    4. 'range' → logprob: -12.625121116638184
    5. '(l' → logprob: -13.250121116638184
    6. 's' → logprob: -14.625121116638184
    7. '   ' → logprob: -14.750121116638184
    8. '1' → logprob: -16.5001220703125
    9. '	l' → logprob: -16.6251220703125
    10. '(' → logprob: -16.8751220703125

Token 607: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36681824922561646
    2. '-' → logprob: -1.4918181896209717
    3. '):
' → logprob: -3.3668181896209717
    4. ' -' → logprob: -4.116818428039551
    5. ':' → logprob: -4.866818428039551
    6. '<|end|>' → logprob: -5.116818428039551
    7. ')' → logprob: -5.241818428039551
    8. 'range' → logprob: -6.241818428039551
    9. ',' → logprob: -6.241818428039551
    10. '   ' → logprob: -6.366818428039551

Token 608: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.025519467890262604
    2. '1' → logprob: -3.775519371032715
    3. ' l' → logprob: -7.525519371032715
    4. ')' → logprob: -8.025519371032715
    5. 'len' → logprob: -8.150519371032715
    6. '(' → logprob: -8.400519371032715
    7. '<|end|>' → logprob: -8.650519371032715
    8. '(l' → logprob: -8.900519371032715
    9. 'range' → logprob: -9.525519371032715
    10. '-' → logprob: -9.775519371032715

Token 609: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15199992060661316
    2. ' for' → logprob: -2.5269999504089355
    3. ':' → logprob: -3.9019999504089355
    4. '(' → logprob: -4.7769999504089355
    5. '(range' → logprob: -4.7769999504089355
    6. '   ' → logprob: -4.9019999504089355
    7. 'range' → logprob: -5.0269999504089355
    8. ',' → logprob: -5.7769999504089355
    9. ' range' → logprob: -6.0269999504089355
    10. ')' → logprob: -6.2769999504089355

Token 610: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43528616428375244
    2. ' for' → logprob: -1.1852861642837524
    3. '(' → logprob: -4.435286045074463
    4. '(range' → logprob: -4.560286045074463
    5. ')' → logprob: -5.185286045074463
    6. ' range' → logprob: -5.310286045074463
    7. ' in' → logprob: -5.560286045074463
    8. 'range' → logprob: -5.560286045074463
    9. ',' → logprob: -5.810286045074463
    10. 'in' → logprob: -6.560286045074463

Token 611: ' Note' (ID: 12225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.035108499228954315
    2. ' for' → logprob: -3.6601085662841797
    3. 'range' → logprob: -4.91010856628418
    4. ' range' → logprob: -7.28510856628418
    5. '```' → logprob: -8.16010856628418
    6. '(range' → logprob: -9.28510856628418
    7. 'in' → logprob: -9.28510856628418
    8. ' in' → logprob: -9.78510856628418
    9. '   ' → logprob: -9.78510856628418
    10. ')' → logprob: -10.03510856628418

Token 612: 'z' (ID: 89)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9117681384086609
    2. 'in' → logprob: -1.7867681980133057
    3. '   ' → logprob: -1.9117681980133057
    4. 'for' → logprob: -1.9117681980133057
    5. '(range' → logprob: -3.1617681980133057
    6. ' for' → logprob: -4.036767959594727
    7. '=' → logprob: -4.161767959594727
    8. '(' → logprob: -4.536767959594727
    9. ' range' → logprob: -4.536767959594727
    10. 'range' → logprob: -4.911767959594727

Token 613: ' que' (ID: 661)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.812411904335022
    2. 'range' → logprob: -0.937411904335022
    3. 'for' → logprob: -3.3124117851257324
    4. ')' → logprob: -3.3124117851257324
    5. '(' → logprob: -3.5624117851257324
    6. '(range' → logprob: -4.062411785125732
    7. ' for' → logprob: -4.437411785125732
    8. ' (' → logprob: -4.937411785125732
    9. ' l' → logprob: -5.187411785125732
    10. '1' → logprob: -5.437411785125732

Token 614: ' DP' (ID: 51992)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12923885881900787
    2. 'range' → logprob: -2.2542388439178467
    3. ' range' → logprob: -5.254239082336426
    4. ' l' → logprob: -5.379239082336426
    5. 'for' → logprob: -6.129239082336426
    6. 's' → logprob: -6.254239082336426
    7. 'len' → logprob: -6.379239082336426
    8. '   ' → logprob: -8.379239082336426
    9. ')' → logprob: -9.129239082336426
    10. ' for' → logprob: -9.629239082336426

Token 615: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6755023002624512
    2. '[' → logprob: -1.0505023002624512
    3. 'for' → logprob: -3.300502300262451
    4. 'i' → logprob: -3.800502300262451
    5. 'range' → logprob: -3.800502300262451
    6. ' range' → logprob: -4.175502300262451
    7. ')' → logprob: -4.925502300262451
    8. ' for' → logprob: -4.925502300262451
    9. '```' → logprob: -5.675502300262451
    10. '[j' → logprob: -5.675502300262451

Token 616: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.1236599013209343
    2. 'DP' → logprob: -3.24865984916687
    3. ' Num' → logprob: -3.62365984916687
    4. ' range' → logprob: -3.74865984916687
    5. 'range' → logprob: -4.248660087585449
    6. 'len' → logprob: -5.748660087585449
    7. '   ' → logprob: -6.123660087585449
    8. ' DP' → logprob: -6.248660087585449
    9. 'for' → logprob: -6.623660087585449
    10. 'num' → logprob: -6.998660087585449

Token 617: ' utilisent' (ID: 151905)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2999352216720581
    2. '[i' → logprob: -2.0499353408813477
    3. '   ' → logprob: -3.6749353408813477
    4. '[-' → logprob: -3.9249353408813477
    5. '[l' → logprob: -3.9249353408813477
    6. ')' → logprob: -4.924935340881348
    7. ':' → logprob: -5.049935340881348
    8. '[j' → logprob: -5.049935340881348
    9. ' are' → logprob: -5.174935340881348
    10. 'for' → logprob: -5.299935340881348

Token 618: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018233763054013252
    2. ' range' → logprob: -4.018233776092529
    3. 'l' → logprob: -10.893233299255371
    4. 'len' → logprob: -10.893233299255371
    5. '   ' → logprob: -11.393233299255371
    6. '1' → logprob: -11.518233299255371
    7. 're' → logprob: -12.018233299255371
    8. 'reverse' → logprob: -12.768233299255371
    9. '(range' → logprob: -12.768233299255371
    10. ' ' → logprob: -13.143233299255371

Token 619: ' comme' (ID: 7971)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17722898721694946
    2. ' range' → logprob: -2.1772289276123047
    3. 'en' → logprob: -3.4272289276123047
    4. '[' → logprob: -4.427228927612305
    5. 'ange' → logprob: -6.677228927612305
    6. 'e' → logprob: -6.927228927612305
    7. '   ' → logprob: -7.302228927612305
    8. ')' → logprob: -8.177228927612305
    9. '```' → logprob: -8.177228927612305
    10. '1' → logprob: -8.302228927612305

Token 620: ' taille' (ID: 41644)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00594610208645463
    2. 'len' → logprob: -5.630946159362793
    3. ' range' → logprob: -6.130946159362793
    4. '   ' → logprob: -9.880946159362793
    5. ')' → logprob: -10.755946159362793
    6. '```' → logprob: -10.755946159362793
    7. 'l' → logprob: -10.880946159362793
    8. 'rang' → logprob: -11.505946159362793
    9. 'index' → logprob: -11.630946159362793
    10. ' ' → logprob: -12.130946159362793

Token 621: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5618488788604736
    2. '   ' → logprob: -1.4368488788604736
    3. ' for' → logprob: -1.8118488788604736
    4. ':' → logprob: -4.1868486404418945
    5. ')' → logprob: -5.1868486404418945
    6. '):' → logprob: -5.8118486404418945
    7. ',' → logprob: -6.1868486404418945
    8. '):
' → logprob: -7.1868486404418945
    9. ':
' → logprob: -7.9368486404418945
    10. 'range' → logprob: -7.9368486404418945

Token 622: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003627627622336149
    2. 'range' → logprob: -6.253627777099609
    3. ' for' → logprob: -6.503627777099609
    4. '   ' → logprob: -8.87862777709961
    5. '```' → logprob: -10.12862777709961
    6. ' range' → logprob: -11.75362777709961
    7. 'i' → logprob: -12.75362777709961
    8. '(range' → logprob: -13.00362777709961
    9. '
' → logprob: -13.25362777709961
    10. 'in' → logprob: -13.62862777709961

Token 623: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016748257912695408
    2. 'range' → logprob: -6.626674652099609
    3. ' for' → logprob: -8.00167465209961
    4. ' range' → logprob: -11.75167465209961
    5. '   ' → logprob: -12.25167465209961
    6. '```' → logprob: -14.62667465209961
    7. 'in' → logprob: -15.12667465209961
    8. ' ' → logprob: -15.75167465209961
    9. 'from' → logprob: -16.00167465209961
    10. 'i' → logprob: -16.87667465209961

Token 624: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03958073630928993
    2. ' j' → logprob: -3.289580821990967
    3. 'x' → logprob: -6.914580821990967
    4. 'i' → logprob: -8.039580345153809
    5. 'v' → logprob: -9.664580345153809
    6. ' x' → logprob: -10.539580345153809
    7. 'k' → logprob: -11.414580345153809
    8. 'idx' → logprob: -11.477080345153809
    9. '   ' → logprob: -11.602080345153809
    10. 'a' → logprob: -11.602080345153809

Token 625: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1799267679452896
    2. 'in' → logprob: -1.8049267530441284
    3. '(' → logprob: -10.179926872253418
    4. ')' → logprob: -10.179926872253418
    5. '1' → logprob: -10.179926872253418
    6. ' ' → logprob: -10.554926872253418
    7. 'import' → logprob: -11.679926872253418
    8. '   ' → logprob: -12.054926872253418
    9. 'range' → logprob: -12.054926872253418
    10. '0' → logprob: -13.054926872253418

Token 626: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002186307217925787
    2. ' range' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.50218677520752
    4. '(range' → logprob: -15.50218677520752
    5. 'l' → logprob: -16.002185821533203
    6. ' ' → logprob: -16.627185821533203
    7. '1' → logprob: -16.627185821533203
    8. '[' → logprob: -16.752185821533203
    9. 'in' → logprob: -17.877185821533203
    10. 're' → logprob: -17.877185821533203

Token 627: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0508868508040905
    2. '(l' → logprob: -3.050886869430542
    3. '1' → logprob: -6.175886631011963
    4. 'l' → logprob: -9.175887107849121
    5. '(j' → logprob: -9.300887107849121
    6. '(s' → logprob: -11.300887107849121
    7. ' (' → logprob: -12.675887107849121
    8. '(len' → logprob: -12.925887107849121
    9. 'j' → logprob: -14.050887107849121
    10. '(i' → logprob: -14.050887107849121

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02997089922428131
    2. 'l' → logprob: -3.52997088432312
    3. '0' → logprob: -8.6549711227417
    4. ' ' → logprob: -10.9049711227417
    5. ' l' → logprob: -11.4049711227417
    6. 's' → logprob: -11.5299711227417
    7. 'j' → logprob: -13.5299711227417
    8. '   ' → logprob: -13.5299711227417
    9. '(' → logprob: -14.0299711227417
    10. '2' → logprob: -14.0924711227417

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001174747827462852
    2. ',l' → logprob: -6.7511749267578125
    3. ' ,' → logprob: -12.376174926757812
    4. ',j' → logprob: -15.876174926757812
    5. 'l' → logprob: -16.376174926757812
    6. '   ' → logprob: -16.751174926757812
    7. ',len' → logprob: -18.001174926757812
    8. ',
' → logprob: -18.251174926757812
    9. ' l' → logprob: -18.626174926757812
    10. '1' → logprob: -19.751174926757812

Token 630: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005537479883059859
    2. ' l' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.500554084777832
    4. '	l' → logprob: -16.500553131103516
    5. ' ' → logprob: -16.750553131103516
    6. 'len' → logprob: -17.000553131103516
    7. '    ' → logprob: -18.250553131103516
    8. ')' → logprob: -18.375553131103516
    9. '       ' → logprob: -19.125553131103516
    10. ' ' → logprob: -19.250553131103516

Token 631: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005268265027552843
    2. '):
' → logprob: -5.255268096923828
    3. ')' → logprob: -11.505268096923828
    4. ',' → logprob: -12.130268096923828
    5. ' ):' → logprob: -12.130268096923828
    6. ':' → logprob: -12.255268096923828
    7. '   ' → logprob: -12.755268096923828
    8. '):

' → logprob: -12.880268096923828
    9. '):
' → logprob: -13.755268096923828
    10. '+' → logprob: -14.505268096923828

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002856497303582728
    2. '   ' → logprob: -8.625286102294922
    3. 'tmp' → logprob: -10.125286102294922
    4. '```' → logprob: -10.750286102294922
    5. ' tmp' → logprob: -11.125286102294922
    6. '[' → logprob: -12.625286102294922
    7. ',' → logprob: -12.750286102294922
    8. '	' → logprob: -12.750286102294922
    9. '      ' → logprob: -13.250286102294922
    10. ' ' → logprob: -13.250286102294922

Token 633: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.026415014639496803
    2. '       ' → logprob: -3.7764151096343994
    3. ' tmp' → logprob: -5.77641487121582
    4. '	tmp' → logprob: -10.40141487121582
    5. '   ' → logprob: -11.27641487121582
    6. '(tmp' → logprob: -11.52641487121582
    7. '[tmp' → logprob: -13.02641487121582
    8. 'temp' → logprob: -13.27641487121582
    9. '```' → logprob: -13.40141487121582
    10. '_tmp' → logprob: -13.52641487121582

Token 634: ' Aj' (ID: 28294)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.7120533811976202e-05
    2. '   ' → logprob: -12.250017166137695
    3. ' tmp' → logprob: -12.250017166137695
    4. '       ' → logprob: -12.250017166137695
    5. '	tmp' → logprob: -13.500017166137695
    6. 'if' → logprob: -14.250017166137695
    7. 'temp' → logprob: -15.375017166137695
    8. '           ' → logprob: -16.500017166137695
    9. '
' → logprob: -16.625017166137695
    10. '$tmp' → logprob: -16.750017166137695

Token 635: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.6273458003997803
    2. 'out' → logprob: -1.1273458003997803
    3. 'outez' → logprob: -2.0023458003997803
    4. 'outer' → logprob: -5.627346038818359
    5. 'tmp' → logprob: -6.502346038818359
    6. '#' → logprob: -7.877346038818359
    7. '=' → logprob: -8.00234603881836
    8. '+=' → logprob: -8.00234603881836
    9. '   ' → logprob: -8.37734603881836
    10. '[' → logprob: -8.50234603881836

Token 636: ' à' (ID: 1221)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.030102189630270004
    2. ' DP' → logprob: -3.655102252960205
    3. 'tmp' → logprob: -5.655102252960205
    4. ' tmp' → logprob: -8.905101776123047
    5. 'dp' → logprob: -9.280101776123047
    6. '       ' → logprob: -10.655101776123047
    7. '(D' → logprob: -11.405101776123047
    8. 'Dp' → logprob: -11.405101776123047
    9. '(tmp' → logprob: -11.780101776123047
    10. '   ' → logprob: -12.280101776123047

Token 637: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.07205548882484436
    2. 'DP' → logprob: -2.6970555782318115
    3. ' tmp' → logprob: -6.322055339813232
    4. ' DP' → logprob: -8.32205581665039
    5. 'dp' → logprob: -10.07205581665039
    6. '(tmp' → logprob: -11.19705581665039
    7. '   ' → logprob: -11.44705581665039
    8. '	tmp' → logprob: -12.82205581665039
    9. '       ' → logprob: -13.19705581665039
    10. 'Tmp' → logprob: -13.44705581665039

Token 638: ' la' (ID: 557)
  Prédit: ' DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' DP' → logprob: -0.6956694722175598
    2. 'DP' → logprob: -0.8206694722175598
    3. ' +=' → logprob: -2.945669412612915
    4. '+=' → logprob: -4.945669651031494
    5. ' tmp' → logprob: -8.195669174194336
    6. '   ' → logprob: -8.320669174194336
    7. 'tmp' → logprob: -8.570669174194336
    8. ' =' → logprob: -8.570669174194336
    9. '=' → logprob: -8.820669174194336
    10. ' dp' → logprob: -9.445669174194336

Token 639: ' valeur' (ID: 41664)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.005950364284217358
    2. ' DP' → logprob: -5.130950450897217
    3. '(D' → logprob: -12.130949974060059
    4. 'dp' → logprob: -12.255949974060059
    5. '(' → logprob: -12.380949974060059
    6. ' (' → logprob: -12.755949974060059
    7. 'Dp' → logprob: -13.505949974060059
    8. '   ' → logprob: -14.130949974060059
    9. '_DP' → logprob: -14.130949974060059
    10. 'tmp' → logprob: -14.505949974060059

Token 640: ' de' (ID: 334)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.016530465334653854
    2. ' DP' → logprob: -4.141530513763428
    3. 'tmp' → logprob: -8.76653003692627
    4. '       ' → logprob: -8.76653003692627
    5. '(D' → logprob: -9.76653003692627
    6. ' (' → logprob: -9.89153003692627
    7. 'dp' → logprob: -10.89153003692627
    8. '(' → logprob: -11.51653003692627
    9. '(tmp' → logprob: -11.64153003692627
    10. ' tmp' → logprob: -11.89153003692627

Token 641: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0002666999935172498
    2. ' DP' → logprob: -8.250267028808594
    3. 'dp' → logprob: -13.000267028808594
    4. '   ' → logprob: -13.375267028808594
    5. 'Dp' → logprob: -14.125267028808594
    6. 'tmp' → logprob: -15.250267028808594
    7. '       ' → logprob: -15.625267028808594
    8. '_DP' → logprob: -16.000267028808594
    9. 'D' → logprob: -16.625267028808594
    10. 'DJ' → logprob: -16.750267028808594

Token 642: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[j' → logprob: -14.125001907348633
    3. 'i' → logprob: -14.375001907348633
    4. '[' → logprob: -15.500001907348633
    5. '```' → logprob: -16.125001907348633
    6. ' [' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '(i' → logprob: -18.125001907348633
    9. '[I' → logprob: -18.375001907348633
    10. '[
' → logprob: -18.500001907348633

Token 643: ' l' (ID: 305)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04895498603582382
    2. 'i' → logprob: -3.048954963684082
    3. ' i' → logprob: -9.173954963684082
    4. '[j' → logprob: -9.673954963684082
    5. 'DP' → logprob: -9.798954963684082
    6. '
' → logprob: -10.173954963684082
    7. '[' → logprob: -10.423954963684082
    8. 'j' → logprob: -10.798954963684082
    9. '```' → logprob: -11.673954963684082
    10. ' [' → logprob: -11.798954963684082

Token 644: ''ét' (ID: 23771)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.034328874200582504
    2. 'i' → logprob: -3.4093289375305176
    3. '[' → logprob: -7.909328937530518
    4. '[j' → logprob: -8.65932846069336
    5. ' i' → logprob: -10.53432846069336
    6. '   ' → logprob: -11.03432846069336
    7. 'j' → logprob: -11.15932846069336
    8. '
' → logprob: -11.15932846069336
    9. ' [' → logprob: -11.15932846069336
    10. '][' → logprob: -11.53432846069336

Token 645: 'ape' (ID: 2480)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4228858947753906
    2. '[j' → logprob: -1.2978858947753906
    3. 'i' → logprob: -3.2978858947753906
    4. '[i' → logprob: -4.297885894775391
    5. '-' → logprob: -4.547885894775391
    6. '-i' → logprob: -5.672885894775391
    7. '-j' → logprob: -6.047885894775391
    8. '[-' → logprob: -6.297885894775391
    9. '[' → logprob: -6.797885894775391
    10. 'e' → logprob: -8.29788589477539

Token 646: ' précédente' (ID: 177319)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6940498352050781
    2. '[i' → logprob: -0.6940498352050781
    3. ' i' → logprob: -7.819049835205078
    4. '   ' → logprob: -9.194049835205078
    5. '```' → logprob: -9.194049835205078
    6. 'DP' → logprob: -9.319049835205078
    7. '[' → logprob: -10.319049835205078
    8. '[j' → logprob: -10.319049835205078
    9. '
' → logprob: -10.569049835205078
    10. '       ' → logprob: -10.694049835205078

Token 647: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005145400762557983
    2. 'DP' → logprob: -6.00514554977417
    3. '[' → logprob: -7.13014554977417
    4. 'i' → logprob: -7.25514554977417
    5. '[j' → logprob: -7.50514554977417
    6. 'tmp' → logprob: -8.505145072937012
    7. ' [' → logprob: -9.130145072937012
    8. '[tmp' → logprob: -9.255145072937012
    9. ' i' → logprob: -9.755145072937012
    10. ' DP' → logprob: -10.130145072937012

Token 648: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008810923318378627
    2. '[i' → logprob: -7.750881195068359
    3. ' i' → logprob: -7.750881195068359
    4. '   ' → logprob: -11.62588119506836
    5. 'j' → logprob: -13.12588119506836
    6. '
' → logprob: -13.25088119506836
    7. '(i' → logprob: -13.37588119506836
    8. '       ' → logprob: -13.50088119506836
    9. '```' → logprob: -13.75088119506836
    10. ')' → logprob: -14.00088119506836

Token 649: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.024273749440908432
    2. ' -' → logprob: -3.774273633956909
    3. '][' → logprob: -7.149273872375488
    4. '[i' → logprob: -9.399273872375488
    5. ')[' → logprob: -10.274273872375488
    6. ')' → logprob: -10.524273872375488
    7. '[j' → logprob: -10.524273872375488
    8. '[' → logprob: -10.774273872375488
    9. '   ' → logprob: -11.774273872375488
    10. ' [' → logprob: -12.149273872375488

Token 650: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.054054901003837585
    2. '][' → logprob: -4.1790547370910645
    3. ' j' → logprob: -4.1790547370910645
    4. '-' → logprob: -4.8040547370910645
    5. '[j' → logprob: -4.8040547370910645
    6. '1' → logprob: -6.3040547370910645
    7. ' -' → logprob: -7.0540547370910645
    8. '   ' → logprob: -7.1790547370910645
    9. ' ' → logprob: -7.4290547370910645
    10. 'i' → logprob: -7.9290547370910645

Token 651: ')' (ID: 8)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05707017332315445
    2. '-' → logprob: -3.682070255279541
    3. '[j' → logprob: -3.932070255279541
    4. ')[' → logprob: -5.807070255279541
    5. ',' → logprob: -5.932070255279541
    6. ')' → logprob: -6.932070255279541
    7. ' ][' → logprob: -7.182070255279541
    8. '[i' → logprob: -7.307070255279541
    9. '[' → logprob: -7.432070255279541
    10. '   ' → logprob: -7.807070255279541

Token 652: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007460976950824261
    2. '[j' → logprob: -5.257461071014404
    3. '[' → logprob: -7.257461071014404
    4. 'i' → logprob: -7.507461071014404
    5. 'tmp' → logprob: -7.757461071014404
    6. '[tmp' → logprob: -8.382460594177246
    7. '][' → logprob: -9.007460594177246
    8. ' [' → logprob: -9.007460594177246
    9. '   ' → logprob: -11.007460594177246
    10. '
' → logprob: -11.257460594177246

Token 653: ' le' (ID: 505)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005392124294303358
    2. ' j' → logprob: -7.875539302825928
    3. '[j' → logprob: -8.87553882598877
    4. '   ' → logprob: -11.50053882598877
    5. '       ' → logprob: -13.12553882598877
    6. '
' → logprob: -13.12553882598877
    7. '	j' → logprob: -14.25053882598877
    8. '(j' → logprob: -14.37553882598877
    9. ' ' → logprob: -14.62553882598877
    10. ',j' → logprob: -15.00053882598877

Token 654: ' même' (ID: 9679)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000251326389843598
    2. ' j' → logprob: -8.500251770019531
    3. '[j' → logprob: -10.625251770019531
    4. '   ' → logprob: -11.875251770019531
    5. '
' → logprob: -12.875251770019531
    6. '```' → logprob: -13.000251770019531
    7. 'Num' → logprob: -13.375251770019531
    8. '[-' → logprob: -13.500251770019531
    9. '-j' → logprob: -13.500251770019531
    10. '-' → logprob: -14.125251770019531

Token 655: ' indice' (ID: 90848)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00045188379590399563
    2. ' j' → logprob: -7.750452041625977
    3. '   ' → logprob: -11.750452041625977
    4. 'index' → logprob: -11.875452041625977
    5. '
' → logprob: -12.625452041625977
    6. '[j' → logprob: -13.625452041625977
    7. '       ' → logprob: -15.250452041625977
    8. ')' → logprob: -15.250452041625977
    9. ' index' → logprob: -15.500452041625977
    10. ' ' → logprob: -15.750452041625977

Token 656: ' j' (ID: 441)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.23447208106517792
    2. 'j' → logprob: -1.6094720363616943
    3. '][' → logprob: -5.484472274780273
    4. '
' → logprob: -7.109472274780273
    5. '[' → logprob: -7.234472274780273
    6. '```' → logprob: -7.359472274780273
    7. ' j' → logprob: -7.484472274780273
    8. '       ' → logprob: -7.734472274780273
    9. 'DP' → logprob: -7.859472274780273
    10. ' [' → logprob: -7.859472274780273

Token 657: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14319118857383728
    2. '[tmp' → logprob: -3.14319109916687
    3. '[j' → logprob: -3.26819109916687
    4. '[i' → logprob: -3.76819109916687
    5. ']' → logprob: -3.89319109916687
    6. '][' → logprob: -5.643191337585449
    7. '       ' → logprob: -6.768191337585449
    8. '   ' → logprob: -7.768191337585449
    9. '+' → logprob: -7.768191337585449
    10. ')' → logprob: -7.768191337585449

Token 658: '       ' (ID: 309)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.0968563556671143
    2. '+' → logprob: -1.3468563556671143
    3. '+=' → logprob: -1.7218563556671143
    4. ' +=' → logprob: -2.0968563556671143
    5. '[tmp' → logprob: -3.3468563556671143
    6. ' +' → logprob: -3.5968563556671143
    7. ' tmp' → logprob: -3.8468563556671143
    8. '(tmp' → logprob: -4.971856117248535
    9. '=' → logprob: -5.596856117248535
    10. '[' → logprob: -5.846856117248535

Token 659: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.13262002170085907
    2. 'DP' → logprob: -2.757620096206665
    3. ' tmp' → logprob: -2.882620096206665
    4. ' DP' → logprob: -5.382619857788086
    5. '(tmp' → logprob: -9.132619857788086
    6. 'dp' → logprob: -10.757619857788086
    7. '       ' → logprob: -11.007619857788086
    8. '   ' → logprob: -11.382619857788086
    9. ' dp' → logprob: -12.882619857788086
    10. ' (' → logprob: -13.257619857788086

Token 660: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2021910846233368
    2. ' +=' → logprob: -1.7021911144256592
    3. '=' → logprob: -7.32719087600708
    4. ' =' → logprob: -9.202191352844238
    5. '+' → logprob: -11.077191352844238
    6. '   ' → logprob: -13.077191352844238
    7. ']+=' → logprob: -13.827191352844238
    8. '%=' → logprob: -15.327191352844238
    9. '+=(' → logprob: -15.327191352844238
    10. ' +' → logprob: -17.202190399169922

Token 661: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -4.320199877838604e-07
    2. ' DP' → logprob: -15.0
    3. 'dp' → logprob: -18.625
    4. '   ' → logprob: -18.625
    5. '       ' → logprob: -21.0
    6. 'Dp' → logprob: -22.0
    7. 'DJ' → logprob: -22.25
    8. '_DP' → logprob: -22.875
    9. 'D' → logprob: -23.75
    10. 'DM' → logprob: -24.0

Token 662: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. 'i' → logprob: -12.500004768371582
    3. '[
' → logprob: -14.875004768371582
    4. '[j' → logprob: -15.000004768371582
    5. '[' → logprob: -15.250004768371582
    6. '```' → logprob: -15.875004768371582
    7. ' [' → logprob: -16.7500057220459
    8. '(i' → logprob: -17.0000057220459
    9. '[I' → logprob: -17.3750057220459
    10. '\[' → logprob: -17.3750057220459

Token 663: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007329129730351269
    2. ' -' → logprob: -7.250732898712158
    3. '[' → logprob: -11.250733375549316
    4. '[-' → logprob: -11.875733375549316
    5. '][' → logprob: -13.500733375549316
    6. '[i' → logprob: -14.125733375549316
    7. '][-' → logprob: -15.250733375549316
    8. '[j' → logprob: -15.375733375549316
    9. '   ' → logprob: -16.250732421875
    10. '#' → logprob: -17.250732421875

Token 664: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007943779928609729
    2. ' ' → logprob: -7.625794410705566
    3. '0' → logprob: -8.375794410705566
    4. 'j' → logprob: -9.625794410705566
    5. ' j' → logprob: -12.500794410705566
    6. '   ' → logprob: -12.875794410705566
    7. '][' → logprob: -13.125794410705566
    8. '[j' → logprob: -13.875794410705566
    9. '  ' → logprob: -15.750794410705566
    10. '```' → logprob: -16.25079345703125

Token 665: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'j' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '
' → logprob: -17.625001907348633
    6. '0' → logprob: -18.375001907348633
    7. '```' → logprob: -18.750001907348633
    8. '2' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.250001907348633
    10. '       ' → logprob: -20.500001907348633

Token 666: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003838071832433343
    2. '[j' → logprob: -5.628838062286377
    3. ']' → logprob: -8.753838539123535
    4. ' ][' → logprob: -9.503838539123535
    5. '[' → logprob: -13.128838539123535
    6. '   ' → logprob: -14.003838539123535
    7. ',j' → logprob: -14.628838539123535
    8. 'j' → logprob: -14.753838539123535
    9. '"][' → logprob: -15.003838539123535
    10. '       ' → logprob: -15.003838539123535

Token 667: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0325924449716695e-05
    2. ' j' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.75001049041748
    4. '	j' → logprob: -18.125009536743164
    5. '[j' → logprob: -18.625009536743164
    6. '$j' → logprob: -19.125009536743164
    7. '```' → logprob: -20.000009536743164
    8. '       ' → logprob: -20.125009536743164
    9. '
' → logprob: -20.250009536743164
    10. '0' → logprob: -20.375009536743164

Token 668: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003345122095197439
    2. ' ]' → logprob: -8.250334739685059
    3. ']%' → logprob: -10.375334739685059
    4. '<|end|>' → logprob: -10.750334739685059
    5. ']
' → logprob: -11.375334739685059
    6. ']*' → logprob: -12.375334739685059
    7. '   ' → logprob: -13.500334739685059
    8. '       ' → logprob: -13.500334739685059
    9. ']

' → logprob: -15.125334739685059
    10. ']
' → logprob: -15.250334739685059

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6606478691101074
    2. '<|end|>' → logprob: -0.7856478691101074
    3. '        
' → logprob: -4.660647869110107
    4. '[' → logprob: -5.410647869110107
    5. '   ' → logprob: -5.660647869110107
    6. '```' → logprob: -5.785647869110107
    7. ')' → logprob: -6.285647869110107
    8. '    
' → logprob: -7.285647869110107
    9. ' 
' → logprob: -7.535647869110107
    10. '        ' → logprob: -7.785647869110107

Token 670: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 671: ' F' (ID: 454)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.005073891021311283
    2. 'tmp' → logprob: -5.5050740242004395
    3. 'if' → logprob: -7.2550740242004395
    4. '       ' → logprob: -8.880073547363281
    5. ' DP' → logprob: -9.255073547363281
    6. 'while' → logprob: -10.255073547363281
    7. '   ' → logprob: -11.255073547363281
    8. 'dp' → logprob: -13.630073547363281
    9. '           ' → logprob: -13.880073547363281
    10. ' if' → logprob: -14.255073547363281

Token 672: 'ait' (ID: 1271)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.05134253203868866
    2. ' DP' → logprob: -3.301342487335205
    3. '       ' → logprob: -6.176342487335205
    4. '   ' → logprob: -6.176342487335205
    5. '=' → logprob: -6.551342487335205
    6. 'P' → logprob: -6.801342487335205
    7. 'or' → logprob: -6.926342487335205
    8. '```' → logprob: -7.051342487335205
    9. ' ' → logprob: -7.176342487335205
    10. '_DP' → logprob: -7.176342487335205

Token 673: ' un' (ID: 537)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.016758963465690613
    2. ' tmp' → logprob: -4.266758918762207
    3. '(tmp' → logprob: -6.641758918762207
    4. '[tmp' → logprob: -7.141758918762207
    5. '	tmp' → logprob: -8.141758918762207
    6. '$tmp' → logprob: -9.391758918762207
    7. '   ' → logprob: -9.641758918762207
    8. ',tmp' → logprob: -10.391758918762207
    9. '/tmp' → logprob: -11.891758918762207
    10. '_tmp' → logprob: -12.141758918762207

Token 674: ' modulo' (ID: 112372)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1516095995903015
    2. '(tmp' → logprob: -2.1516096591949463
    3. ' tmp' → logprob: -4.026609420776367
    4. 'mod' → logprob: -6.151609420776367
    5. '[tmp' → logprob: -6.901609420776367
    6. '%' → logprob: -7.401609420776367
    7. 'DP' → logprob: -7.526609420776367
    8. ' (' → logprob: -7.776609420776367
    9. '(' → logprob: -8.026609420776367
    10. '```' → logprob: -8.401609420776367

Token 675: ' mod' (ID: 1812)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.4272255301475525
    2. '(mod' → logprob: -1.9272255897521973
    3. ' (' → logprob: -2.8022255897521973
    4. 'tmp' → logprob: -3.3022255897521973
    5. ' mod' → logprob: -3.3022255897521973
    6. 'mod' → logprob: -3.5522255897521973
    7. ' tmp' → logprob: -4.052225589752197
    8. '(' → logprob: -4.177225589752197
    9. ' (%)' → logprob: -5.552225589752197
    10. ' %=' → logprob: -7.427225589752197

Token 676: ' pour' (ID: 1930)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.19049380719661713
    2. 'tmp' → logprob: -2.4404938220977783
    3. '       ' → logprob: -3.4404938220977783
    4. ' tmp' → logprob: -3.5654938220977783
    5. ',' → logprob: -5.315493583679199
    6. '[tmp' → logprob: -5.315493583679199
    7. '=' → logprob: -6.065493583679199
    8. ' =' → logprob: -6.065493583679199
    9. '(' → logprob: -6.440493583679199
    10. ' (' → logprob: -6.940493583679199

Token 677: ' rester' (ID: 54655)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6934251189231873
    2. 'tmp' → logprob: -0.6934251189231873
    3. '(tmp' → logprob: -9.568425178527832
    4. '	tmp' → logprob: -10.068425178527832
    5. '/tmp' → logprob: -10.193425178527832
    6. 'temp' → logprob: -10.318425178527832
    7. '[tmp' → logprob: -10.318425178527832
    8. ' temp' → logprob: -11.443425178527832
    9. ' mod' → logprob: -11.818425178527832
    10. 'mod' → logprob: -11.943425178527832

Token 678: ' dans' (ID: 2671)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.05607173219323158
    2. ' tmp' → logprob: -3.5560717582702637
    3. '(tmp' → logprob: -4.431071758270264
    4. 'mod' → logprob: -4.806071758270264
    5. '[tmp' → logprob: -5.931071758270264
    6. ' mod' → logprob: -7.306071758270264
    7. '<|end|>' → logprob: -7.306071758270264
    8. '/tmp' → logprob: -7.681071758270264
    9. '_tmp' → logprob: -8.181071281433105
    10. '$tmp' → logprob: -8.556071281433105

Token 679: ' la' (ID: 557)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4741043746471405
    2. 'mod' → logprob: -0.9741044044494629
    3. '(mod' → logprob: -11.224103927612305
    4. '100' → logprob: -12.474103927612305
    5. ' modulo' → logprob: -12.724103927612305
    6. 'tmp' → logprob: -13.099103927612305
    7. '	mod' → logprob: -13.974103927612305
    8. ' ' → logprob: -14.349103927612305
    9. ' tmp' → logprob: -14.349103927612305
    10. ' ' → logprob: -14.474103927612305

Token 680: ' plage' (ID: 78241)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06202146038413048
    2. ' mod' → logprob: -2.812021493911743
    3. '100' → logprob: -10.187021255493164
    4. '```' → logprob: -11.812021255493164
    5. '(mod' → logprob: -13.312021255493164
    6. ' modulo' → logprob: -13.437021255493164
    7. ' ' → logprob: -13.562021255493164
    8. '%' → logprob: -14.437021255493164
    9. ' modulus' → logprob: -14.562021255493164
    10. '999' → logprob: -14.562021255493164

Token 681: ' des' (ID: 731)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.8857438564300537
    2. ' mod' → logprob: -1.6357438564300537
    3. ' tmp' → logprob: -2.2607438564300537
    4. 'tmp' → logprob: -2.2607438564300537
    5. '<|end|>' → logprob: -2.5107438564300537
    6. ' (' → logprob: -3.7607438564300537
    7. ')' → logprob: -4.010744094848633
    8. 'mod' → logprob: -4.135744094848633
    9. '(mod' → logprob: -4.885744094848633
    10. '       ' → logprob: -5.010744094848633

Token 682: ' ent' (ID: 1121)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6354446411132812
    2. 'mod' → logprob: -0.7604446411132812
    3. '100' → logprob: -6.010444641113281
    4. ' ' → logprob: -8.135444641113281
    5. ' modulo' → logprob: -9.635444641113281
    6. '(mod' → logprob: -12.260444641113281
    7. '10' → logprob: -12.385444641113281
    8. ' modul' → logprob: -12.510444641113281
    9. '999' → logprob: -12.760444641113281
    10. '```' → logprob: -13.260444641113281

Token 683: 'iers' (ID: 11012)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.232235848903656
    2. 'mod' → logprob: -1.7322359085083008
    3. 'iers' → logprob: -3.857235908508301
    4. ' mod' → logprob: -5.232235908508301
    5. 'er' → logprob: -6.107235908508301
    6. '(mod' → logprob: -7.107235908508301
    7. '```' → logprob: -8.6072359085083
    8. 'ière' → logprob: -8.7322359085083
    9. 'ières' → logprob: -9.2322359085083
    10. 'ieres' → logprob: -9.9822359085083

Token 684: ' accept' (ID: 5923)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 685: 'ables' (ID: 3232)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.038548145443201065
    2. 'er' → logprob: -3.913548231124878
    3. 'iers' → logprob: -5.038547992706299
    4. '   ' → logprob: -5.788547992706299
    5. '       ' → logprob: -6.288547992706299
    6. 'mod' → logprob: -7.038547992706299
    7. ' =' → logprob: -7.038547992706299
    8. '=' → logprob: -7.163547992706299
    9. ' mod' → logprob: -7.413547992706299
    10. 'ière' → logprob: -7.788547992706299

Token 686: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.368532419204712
    2. '(tmp' → logprob: -1.368532419204712
    3. '<|end|>' → logprob: -1.493532419204712
    4. '%' → logprob: -1.993532419204712
    5. 'tmp' → logprob: -3.743532419204712
    6. '.' → logprob: -4.118532180786133
    7. ' tmp' → logprob: -4.243532180786133
    8. ',' → logprob: -4.743532180786133
    9. '```' → logprob: -4.868532180786133
    10. ')' → logprob: -4.993532180786133

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1999468207359314
    2. '%' → logprob: -1.8249468803405762
    3. ')' → logprob: -5.324946880340576
    4. '        
' → logprob: -5.699946880340576
    5. '<|end|>' → logprob: -5.699946880340576
    6. '=' → logprob: -6.449946880340576
    7. '   ' → logprob: -6.449946880340576
    8. '```' → logprob: -7.074946880340576
    9. '\n' → logprob: -7.324946880340576
    10. ' =' → logprob: -7.324946880340576

Token 688: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.14741800725460052
    2. ' tmp' → logprob: -2.0224180221557617
    3. '(tmp' → logprob: -5.522418022155762
    4. '[tmp' → logprob: -7.772418022155762
    5. ' %=' → logprob: -9.397418022155762
    6. ' =' → logprob: -10.147418022155762
    7. '$tmp' → logprob: -10.272418022155762
    8. '	tmp' → logprob: -10.397418022155762
    9. '/tmp' → logprob: -10.397418022155762
    10. '=' → logprob: -10.897418022155762

Token 689: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.2016538381576538
    2. ' %=' → logprob: -1.7016538381576538
    3. '%' → logprob: -8.451653480529785
    4. '=' → logprob: -10.576653480529785
    5. ' =' → logprob: -14.201653480529785
    6. ' ' → logprob: -14.951653480529785
    7. ' %' → logprob: -15.451653480529785
    8. ')' → logprob: -16.4516544342041
    9. ')%' → logprob: -16.8266544342041
    10. '	' → logprob: -17.4516544342041

Token 690: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004307884373702109
    2. ' mod' → logprob: -7.750430583953857
    3. '(mod' → logprob: -16.500431060791016
    4. '100' → logprob: -17.375431060791016
    5. '	mod' → logprob: -20.000431060791016
    6. ' ' → logprob: -21.500431060791016
    7. ' мод' → logprob: -23.500431060791016
    8. '.mod' → logprob: -24.125431060791016
    9. '_mod' → logprob: -24.250431060791016
    10. 'MOD' → logprob: -24.250431060791016

Token 691: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013194942846894264
    2. 'DP' → logprob: -4.888195037841797
    3. '   ' → logprob: -5.763195037841797
    4. ' DP' → logprob: -7.263195037841797
    5. ')' → logprob: -7.513195037841797
    6. '<|end|>' → logprob: -7.888195037841797
    7. '        
' → logprob: -8.513195037841797
    8. '```' → logprob: -8.763195037841797
    9. ',' → logprob: -9.388195037841797
    10. '           ' → logprob: -9.888195037841797

Token 692: '       ' (ID: 309)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.08385073393583298
    2. '       ' → logprob: -2.583850622177124
    3. '   ' → logprob: -5.458850860595703
    4. ' DP' → logprob: -7.708850860595703
    5. '```' → logprob: -8.458850860595703
    6. '_DP' → logprob: -11.458850860595703
    7. '           ' → logprob: -11.583850860595703
    8. '``' → logprob: -12.958850860595703
    9. '#' → logprob: -13.333850860595703
    10. '	' → logprob: -14.208850860595703

Token 693: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.014381739310920238
    2. '       ' → logprob: -4.2643818855285645
    3. '   ' → logprob: -8.889381408691406
    4. '```' → logprob: -10.139381408691406
    5. ' DP' → logprob: -10.889381408691406
    6. '           ' → logprob: -11.889381408691406
    7. 'if' → logprob: -12.014381408691406
    8. 'dp' → logprob: -12.639381408691406
    9. '#' (adapté à ' #') → logprob: -13.389381408691406
    10. '``' → logprob: -13.514381408691406

Token 694: ' Met' (ID: 7227)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -3.128163257315464e-07
    2. ' DP' → logprob: -15.125
    3. '       ' → logprob: -18.625
    4. '   ' → logprob: -18.75
    5. 'dp' → logprob: -18.75
    6. 'DJ' → logprob: -19.125
    7. '_DP' → logprob: -20.875
    8. '#' → logprob: -21.125
    9. 'if' → logprob: -21.75
    10. '           ' → logprob: -22.0

Token 695: ' à' (ID: 1221)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.01252813171595335
    2. ' à' → logprob: -5.137527942657471
    3. ' DP' → logprob: -5.637527942657471
    4. '```' → logprob: -7.137527942657471
    5. 'DJ' → logprob: -7.262527942657471
    6. '   ' → logprob: -7.262527942657471
    7. '[' → logprob: -8.637528419494629
    8. 'à' → logprob: -8.762528419494629
    9. '#' → logprob: -8.887528419494629
    10. '       ' → logprob: -9.262528419494629

Token 696: ' jour' (ID: 8379)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.07930128276348114
    2. 'jour' → logprob: -2.579301357269287
    3. ' jour' → logprob: -8.579300880432129
    4. 'Jour' → logprob: -9.454300880432129
    5. ' DP' → logprob: -9.704300880432129
    6. '```' → logprob: -10.329300880432129
    7. 'j' → logprob: -10.954300880432129
    8. 'DJ' → logprob: -11.204300880432129
    9. 'jours' → logprob: -11.579300880432129
    10. '_DP' → logprob: -12.329300880432129

Token 697: ' la' (ID: 557)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -2.1008713702030946e-06
    2. ' DP' → logprob: -13.250001907348633
    3. '       ' → logprob: -15.875001907348633
    4. 'DJ' → logprob: -15.875001907348633
    5. 'dp' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '_DP' → logprob: -18.875001907348633
    8. 'D' → logprob: -20.500001907348633
    9. 'Dp' → logprob: -20.625001907348633
    10. '```' → logprob: -20.625001907348633

Token 698: ' valeur' (ID: 41664)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.9361264946837764e-07
    2. ' DP' → logprob: -16.25
    3. 'dp' → logprob: -18.625
    4. '```' → logprob: -18.75
    5. '...' → logprob: -19.25
    6. 'D' → logprob: -19.625
    7. 'code' → logprob: -19.625
    8. 'DJ' → logprob: -19.75
    9. 'DC' → logprob: -20.25
    10. '_DP' → logprob: -20.25

Token 699: ' de' (ID: 334)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0015755676431581378
    2. '[' → logprob: -7.501575469970703
    3. ' DP' → logprob: -7.626575469970703
    4. '       ' → logprob: -7.751575469970703
    5. '_DP' → logprob: -10.376575469970703
    6. 'DJ' → logprob: -10.876575469970703
    7. 'dp' → logprob: -11.001575469970703
    8. '   ' → logprob: -11.376575469970703
    9. '```' → logprob: -12.001575469970703
    10. '[i' → logprob: -12.751575469970703

Token 700: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -4.246537173457909e-06
    2. ' DP' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.000003814697266
    4. ' ' → logprob: -19.125003814697266
    5. 'dp' → logprob: -20.250003814697266
    6. '_DP' → logprob: -20.250003814697266
    7. 'DJ' → logprob: -20.625003814697266
    8. '```' → logprob: -20.875003814697266
    9. '`' → logprob: -21.125003814697266
    10. 'D' → logprob: -21.875003814697266

Token 701: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. 'i' → logprob: -14.00000286102295
    3. '[' → logprob: -14.12500286102295
    4. '[j' → logprob: -15.37500286102295
    5. '```' → logprob: -15.37500286102295
    6. ' [' → logprob: -15.62500286102295
    7. '[I' → logprob: -16.500001907348633
    8. '[
' → logprob: -17.000001907348633
    9. ' i' → logprob: -17.375001907348633
    10. '(i' → logprob: -17.625001907348633

Token 702: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028474634513258934
    2. '[i' → logprob: -3.6534745693206787
    3. ' i' → logprob: -6.153474807739258
    4. 'DP' → logprob: -10.528474807739258
    5. '```' → logprob: -11.653474807739258
    6. ' [' → logprob: -13.028474807739258
    7. 'l' → logprob: -13.528474807739258
    8. '	i' → logprob: -13.528474807739258
    9. '`' → logprob: -13.903474807739258
    10. '(i' → logprob: -14.153474807739258

Token 703: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04290201514959335
    2. '[i' → logprob: -3.9179019927978516
    3. 'ligne' → logprob: -3.9179019927978516
    4. 'position' → logprob: -6.542901992797852
    5. '```' → logprob: -8.292901992797852
    6. 'indice' → logprob: -8.917901992797852
    7. ' i' → logprob: -9.292901992797852
    8. 'token' → logprob: -9.542901992797852
    9. ' ligne' → logprob: -9.917901992797852
    10. 'l' → logprob: -10.542901992797852

Token 704: ' cour' (ID: 2871)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00423403549939394
    2. '[i' → logprob: -5.6292338371276855
    3. ' i' → logprob: -7.3792338371276855
    4. '```' → logprob: -11.629234313964844
    5. '   ' → logprob: -15.254234313964844
    6. '`' → logprob: -16.004234313964844
    7. ' [' → logprob: -16.129234313964844
    8. '[' → logprob: -16.129234313964844
    9. '	i' → logprob: -16.254234313964844
    10. '``' → logprob: -16.629234313964844

Token 705: 'ante' (ID: 2116)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.8768366575241089
    2. 'ente' → logprob: -2.1268367767333984
    3. '[i' → logprob: -2.1268367767333984
    4. ' j' → logprob: -2.2518367767333984
    5. 'j' → logprob: -2.7518367767333984
    6. '[' → logprob: -3.2518367767333984
    7. 'ée' → logprob: -3.3768367767333984
    8. 'ur' → logprob: -3.7518367767333984
    9. 'ance' → logprob: -4.126836776733398
    10. 'i' → logprob: -4.501836776733398

Token 706: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000511091377120465
    2. 'i' → logprob: -7.625511169433594
    3. ' i' → logprob: -11.500511169433594
    4. '```' → logprob: -12.500511169433594
    5. '[j' → logprob: -13.000511169433594
    6. '[' → logprob: -13.000511169433594
    7. '   ' → logprob: -13.500511169433594
    8. ' [' → logprob: -13.500511169433594
    9. ',i' → logprob: -14.125511169433594
    10. '(i' → logprob: -14.875511169433594

Token 707: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.339278580620885e-06
    2. ' i' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '[i' → logprob: -19.625001907348633
    5. '	i' → logprob: -20.500001907348633
    6. '```' → logprob: -20.500001907348633
    7. ')' → logprob: -21.000001907348633
    8. ')i' → logprob: -21.750001907348633
    9. ' ' → logprob: -22.375001907348633
    10. '  ' → logprob: -22.875001907348633

Token 708: ')' (ID: 8)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04927709698677063
    2. '[j' → logprob: -3.4242770671844482
    3. ')[' → logprob: -4.799277305603027
    4. ')' → logprob: -5.924277305603027
    5. '[' → logprob: -6.424277305603027
    6. ',' → logprob: -7.174277305603027
    7. ',j' → logprob: -7.174277305603027
    8. '[i' → logprob: -7.424277305603027
    9. ']' → logprob: -7.924277305603027
    10. ' ][' → logprob: -8.924277305603027

Token 709: ' et' (ID: 859)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00013893934374209493
    2. '][' → logprob: -9.875139236450195
    3. '[i' → logprob: -10.375139236450195
    4. ',j' → logprob: -11.000139236450195
    5. '[' → logprob: -11.125139236450195
    6. '```' → logprob: -11.500139236450195
    7. 'j' → logprob: -12.000139236450195
    8. '   ' → logprob: -13.125139236450195
    9. ' [' → logprob: -13.125139236450195
    10. ',' → logprob: -13.250139236450195

Token 710: ' à' (ID: 1221)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.31328487396240234
    2. ' j' → logprob: -1.3132848739624023
    3. '   ' → logprob: -11.188284873962402
    4. ' ' → logprob: -12.188284873962402
    5. '	j' → logprob: -13.438284873962402
    6. '[j' → logprob: -13.688284873962402
    7. '```' → logprob: -14.813284873962402
    8. '    ' → logprob: -15.063284873962402
    9. '$j' → logprob: -15.438284873962402
    10. '  ' → logprob: -15.563284873962402

Token 711: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011048528365790844
    2. ' j' → logprob: -4.511048316955566
    3. '[j' → logprob: -14.511048316955566
    4. '   ' → logprob: -16.386049270629883
    5. '	j' → logprob: -16.511049270629883
    6. ' ' → logprob: -16.761049270629883
    7. '```' → logprob: -16.886049270629883
    8. ',j' → logprob: -17.511049270629883
    9. '
' → logprob: -17.636049270629883
    10. '$j' → logprob: -17.886049270629883

Token 712: ''ind' (ID: 82245)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007252985378727317
    2. ' j' → logprob: -7.250725269317627
    3. '	j' → logprob: -11.750725746154785
    4. '[j' → logprob: -12.000725746154785
    5. '   ' → logprob: -14.625725746154785
    6. '][' → logprob: -15.625725746154785
    7. ',j' → logprob: -15.875725746154785
    8. ' ' → logprob: -16.12572479248047
    9. '```' → logprob: -16.12572479248047
    10. '       ' → logprob: -16.37572479248047

Token 713: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.006735265254974365
    2. 'ice' → logprob: -5.006735324859619
    3. 'e' → logprob: -12.006734848022461
    4. 'j' → logprob: -12.006734848022461
    5. 'ce' → logprob: -13.256734848022461
    6. 'x' → logprob: -13.506734848022461
    7. 'i' → logprob: -13.756734848022461
    8. 'dex' → logprob: -13.756734848022461
    9. 'index' → logprob: -14.256734848022461
    10. 'exe' → logprob: -14.381734848022461

Token 714: ' '-' (ID: 17489)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12701934576034546
    2. ' j' → logprob: -2.1270194053649902
    3. '[j' → logprob: -9.377018928527832
    4. '```' → logprob: -13.252018928527832
    5. '   ' → logprob: -13.502018928527832
    6. '$j' → logprob: -13.877018928527832
    7. ' ' → logprob: -14.002018928527832
    8. '	j' → logprob: -14.627018928527832
    9. ' ' → logprob: -14.752018928527832
    10. ',j' → logprob: -15.627018928527832

Token 715: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.008129963040119e-06
    2. ' j' → logprob: -12.500003814697266
    3. '-j' → logprob: -15.875003814697266
    4. '(j' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '(' → logprob: -17.750003814697266
    7. '$j' → logprob: -17.750003814697266
    8. '	j' → logprob: -18.250003814697266
    9. '_j' → logprob: -18.625003814697266
    10. '```' → logprob: -19.000003814697266

Token 716: ''' (ID: 6)
  Prédit: '][-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.004885638598352671
    2. '][' → logprob: -6.004885673522949
    3. '[-' → logprob: -6.129885673522949
    4. ']' → logprob: -8.50488567352295
    5. '   ' → logprob: -12.00488567352295
    6. '-' → logprob: -12.12988567352295
    7. '-j' → logprob: -12.50488567352295
    8. '[j' → logprob: -13.25488567352295
    9. ',' → logprob: -13.62988567352295
    10. '][]' → logprob: -13.62988567352295

Token 717: ' (' (ID: 350)
  Prédit: '][-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.5609734654426575
    2. '][' → logprob: -1.5609734058380127
    3. '[-' → logprob: -1.6859734058380127
    4. '[i' → logprob: -4.560973644256592
    5. ']' → logprob: -4.810973644256592
    6. '[j' → logprob: -5.560973644256592
    7. 'DP' → logprob: -5.810973644256592
    8. '[' → logprob: -5.935973644256592
    9. '   ' → logprob: -7.060973644256592
    10. '=' → logprob: -7.185973644256592

Token 718: 'part' (ID: 5815)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2594594657421112
    2. '-i' → logprob: -2.0094594955444336
    3. '-j' → logprob: -2.3844594955444336
    4. '-l' → logprob: -6.259459495544434
    5. '   ' → logprob: -9.384459495544434
    6. '-k' → logprob: -9.759459495544434
    7. '-' → logprob: -9.759459495544434
    8. 'i' → logprob: -9.759459495544434
    9. ' i' → logprob: -10.384459495544434
    10. '[-' → logprob: -10.384459495544434

Token 719: 'ant' (ID: 493)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3810190260410309
    2. '-' → logprob: -1.8810189962387085
    3. '   ' → logprob: -2.756019115447998
    4. '][-' → logprob: -3.006019115447998
    5. ']' → logprob: -4.256019115447998
    6. '=-' → logprob: -4.506019115447998
    7. ' -' → logprob: -5.131019115447998
    8. '-num' → logprob: -5.256019115447998
    9. '       ' → logprob: -5.631019115447998
    10. ']-' → logprob: -5.881019115447998

Token 720: ' de' (ID: 334)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.2255278825759888
    2. '1' → logprob: -1.3505278825759888
    3. '-j' → logprob: -1.6005278825759888
    4. 'from' → logprob: -2.850527763366699
    5. '=j' → logprob: -2.850527763366699
    6. 'j' → logprob: -3.350527763366699
    7. '[-' → logprob: -3.975527763366699
    8. ' from' → logprob: -4.100527763366699
    9. '=-' → logprob: -4.100527763366699
    10. ' j' → logprob: -4.475527763366699

Token 721: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.694424033164978
    2. '-j' → logprob: -0.944424033164978
    3. ' -' → logprob: -2.3194241523742676
    4. '-' → logprob: -4.944424152374268
    5. '1' → logprob: -5.569424152374268
    6. ' j' → logprob: -6.819424152374268
    7. '-i' → logprob: -7.694424152374268
    8. ' ' → logprob: -8.31942367553711
    9. 'i' → logprob: -8.44442367553711
    10. '   ' → logprob: -8.44442367553711

Token 722: ' fin' (ID: 2131)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015951994573697448
    2. '-j' → logprob: -6.6265950202941895
    3. ' j' → logprob: -9.001595497131348
    4. 'l' → logprob: -9.376595497131348
    5. '1' → logprob: -10.001595497131348
    6. '-' → logprob: -12.251595497131348
    7. '$j' → logprob: -12.876595497131348
    8. 'end' → logprob: -13.376595497131348
    9. '-end' → logprob: -13.376595497131348
    10. ' -' → logprob: -13.501595497131348

Token 723: ' de' (ID: 334)
  Prédit: '][-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.21736223995685577
    2. ')' → logprob: -2.46736216545105
    3. '][' → logprob: -3.59236216545105
    4. ',' → logprob: -3.71736216545105
    5. ')][' → logprob: -3.96736216545105
    6. ']' → logprob: -4.092362403869629
    7. '   ' → logprob: -4.967362403869629
    8. '[-' → logprob: -5.092362403869629
    9. ')[' → logprob: -5.592362403869629
    10. ')]' → logprob: -6.342362403869629

Token 724: ' la' (ID: 557)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.29098600149154663
    2. ' DP' → logprob: -1.9159860610961914
    3. 'Num' → logprob: -2.4159860610961914
    4. 'l' → logprob: -4.790986061096191
    5. ' Num' → logprob: -5.290986061096191
    6. ')' → logprob: -6.540986061096191
    7. '1' → logprob: -7.790986061096191
    8. ' l' → logprob: -7.915986061096191
    9. ' ' → logprob: -9.290986061096191
    10. ']' → logprob: -9.415986061096191

Token 725: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.46746864914894104
    2. 'list' → logprob: -1.0924686193466187
    3. 'DP' → logprob: -3.342468738555908
    4. ' liste' → logprob: -6.717468738555908
    5. ' list' → logprob: -7.842468738555908
    6. ' DP' → logprob: -8.46746826171875
    7. 'Liste' → logprob: -8.46746826171875
    8. 'l' → logprob: -8.71746826171875
    9. ']' → logprob: -9.34246826171875
    10. 'Num' → logprob: -9.46746826171875

Token 726: ')' (ID: 8)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.4139810800552368
    2. '][-' → logprob: -1.6639810800552368
    3. ')[' → logprob: -1.9139810800552368
    4. '[i' → logprob: -2.0389809608459473
    5. ')' → logprob: -2.4139809608459473
    6. '   ' → logprob: -2.5389809608459473
    7. ',' → logprob: -3.0389809608459473
    8. '[-' → logprob: -3.1639809608459473
    9. ')][' → logprob: -4.288980960845947
    10. ',i' → logprob: -5.788980960845947

Token 727: ' 
' (ID: 793)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07095955312252045
    2. '[i' → logprob: -3.6959595680236816
    3. '   ' → logprob: -3.9459595680236816
    4. 'DP' → logprob: -4.320959568023682
    5. '][-' → logprob: -4.695959568023682
    6. '][' → logprob: -6.695959568023682
    7. '[' → logprob: -8.445959091186523
    8. '```' → logprob: -8.945959091186523
    9. '[j' → logprob: -9.445959091186523
    10. ']' → logprob: -9.445959091186523

Token 728: '       ' (ID: 309)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.11876986920833588
    2. '][-' → logprob: -2.618769884109497
    3. '   ' → logprob: -3.368769884109497
    4. 'DP' → logprob: -5.993769645690918
    5. '][' → logprob: -7.118769645690918
    6. ']' → logprob: -7.868769645690918
    7. '       ' → logprob: -8.368769645690918
    8. '```' → logprob: -8.743769645690918
    9. '[' → logprob: -8.993769645690918
    10. '[j' → logprob: -9.493769645690918

Token 729: ' #' (ID: 1069)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.43200820684432983
    2. 'DP' → logprob: -1.4320082664489746
    3. '[-' → logprob: -2.3070082664489746
    4. '[' → logprob: -6.057008266448975
    5. '][' → logprob: -6.057008266448975
    6. '][-' → logprob: -6.182008266448975
    7. '   ' → logprob: -6.557008266448975
    8. ' DP' → logprob: -6.557008266448975
    9. '[j' → logprob: -7.682008266448975
    10. 'Dp' → logprob: -8.182007789611816

Token 730: ' Multip' (ID: 52811)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.562982439994812
    2. 'DP' → logprob: -1.062982439994812
    3. '[' → logprob: -3.4379825592041016
    4. '[i' → logprob: -3.4379825592041016
    5. '[j' → logprob: -5.062982559204102
    6. '   ' → logprob: -5.562982559204102
    7. '][' → logprob: -5.687982559204102
    8. '][-' → logprob: -6.187982559204102
    9. ']' → logprob: -6.687982559204102
    10. ' DP' → logprob: -6.812982559204102

Token 731: 'li' (ID: 1307)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.04512028023600578
    2. 'lié' → logprob: -3.7951202392578125
    3. 'li' → logprob: -5.1701202392578125
    4. 'lying' → logprob: -5.6701202392578125
    5. 'y' → logprob: -6.1701202392578125
    6. 'lique' → logprob: -6.5451202392578125
    7. '[' → logprob: -6.7951202392578125
    8. 'tmp' → logprob: -6.7951202392578125
    9. '[tmp' → logprob: -7.2951202392578125
    10. '=' → logprob: -7.2951202392578125

Token 732: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7787759900093079
    2. 'é' → logprob: -1.403775930404663
    3. 'er' → logprob: -2.153775930404663
    4. 'ant' → logprob: -2.653775930404663
    5. 'ée' → logprob: -3.028775930404663
    6. 'par' → logprob: -4.153776168823242
    7. 'es' → logprob: -4.278776168823242
    8. '=' → logprob: -5.528776168823242
    9. 'ue' → logprob: -6.028776168823242
    10. 'ed' → logprob: -6.153776168823242

Token 733: ' tmp' (ID: 8919)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.27853482961654663
    2. ' DP' → logprob: -1.5285348892211914
    3. '   ' → logprob: -5.403534889221191
    4. '=' → logprob: -5.778534889221191
    5. 'mod' → logprob: -5.903534889221191
    6. 'tmp' → logprob: -5.903534889221191
    7. '1' → logprob: -6.278534889221191
    8. ' =' → logprob: -6.653534889221191
    9. ' tmp' → logprob: -6.903534889221191
    10. '       ' → logprob: -7.278534889221191

Token 734: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.49994760751724243
    2. ' *' → logprob: -0.9999476075172424
    3. ',' → logprob: -4.374947547912598
    4. ' by' → logprob: -5.999947547912598
    5. '=' → logprob: -6.124947547912598
    6. '*=' → logprob: -6.374947547912598
    7. '   ' → logprob: -6.749947547912598
    8. ' *=' → logprob: -6.749947547912598
    9. 'DP' → logprob: -7.124947547912598
    10. ' DP' → logprob: -7.249947547912598

Token 735: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.007809612434357405
    2. ' Num' → logprob: -5.632809638977051
    3. 'k' → logprob: -6.382809638977051
    4. 'num' → logprob: -7.257809638977051
    5. '(' → logprob: -8.00780963897705
    6. 'j' → logprob: -8.13280963897705
    7. 'DP' → logprob: -8.13280963897705
    8. '2' → logprob: -8.38280963897705
    9. 'i' → logprob: -8.50780963897705
    10. '   ' → logprob: -9.25780963897705

Token 736: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.186122770188376e-05
    2. '[' → logprob: -10.125091552734375
    3. '[i' → logprob: -11.125091552734375
    4. '[j' → logprob: -11.375091552734375
    5. '```' → logprob: -11.750091552734375
    6. '   ' → logprob: -11.875091552734375
    7. '][-' → logprob: -13.125091552734375
    8. '[len' → logprob: -13.875091552734375
    9. '[
' → logprob: -13.875091552734375
    10. ' [-' → logprob: -13.875091552734375

Token 737: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0445127372804563e-05
    2. '1' → logprob: -12.25001049041748
    3. ' j' → logprob: -12.62501049041748
    4. 'i' → logprob: -14.00001049041748
    5. '(j' → logprob: -15.00001049041748
    6. '-j' → logprob: -15.25001049041748
    7. '   ' → logprob: -15.37501049041748
    8. '	j' → logprob: -15.75001049041748
    9. '(' → logprob: -15.87501049041748
    10. '$j' → logprob: -16.250009536743164

Token 738: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003380068577826023
    2. ']%' → logprob: -6.378380298614502
    3. '[j' → logprob: -7.003380298614502
    4. '])' → logprob: -8.128379821777344
    5. '[-' → logprob: -9.003379821777344
    6. '],' → logprob: -9.128379821777344
    7. '-' → logprob: -9.253379821777344
    8. '[i' → logprob: -10.003379821777344
    9. ' ]' → logprob: -10.753379821777344
    10. '[' → logprob: -11.003379821777344

Token 739: ' avec' (ID: 3937)
  Prédit: ' Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Num' → logprob: -1.412676453590393
    2. ' tmp' → logprob: -1.912676453590393
    3. '%' → logprob: -2.1626763343811035
    4. ' *' → logprob: -2.2876763343811035
    5. '*' → logprob: -2.5376763343811035
    6. 'tmp' → logprob: -2.9126763343811035
    7. ' DP' → logprob: -2.9126763343811035
    8. 'Num' → logprob: -3.0376763343811035
    9. 'DP' → logprob: -3.6626763343811035
    10. ')' → logprob: -3.6626763343811035

Token 740: ' une' (ID: 2463)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.678689181804657
    2. 'DP' → logprob: -1.5536892414093018
    3. 'tmp' → logprob: -2.6786892414093018
    4. 'mod' → logprob: -2.9286892414093018
    5. ' Num' → logprob: -3.1786892414093018
    6. ' tmp' → logprob: -3.4286892414093018
    7. ' DP' → logprob: -3.5536892414093018
    8. ')' → logprob: -3.9286892414093018
    9. ' mod' → logprob: -4.178689002990723
    10. '(tmp' → logprob: -5.803689002990723

Token 741: ' réduction' (ID: 89072)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.621522843837738
    2. 'space' → logprob: -0.871522843837738
    3. '%' → logprob: -4.621522903442383
    4. ' mod' → logprob: -4.621522903442383
    5. ' space' → logprob: -5.371522903442383
    6. '*' → logprob: -5.746522903442383
    7. ' espace' → logprob: -6.121522903442383
    8. ' ' → logprob: -6.246522903442383
    9. 'multip' → logprob: -6.246522903442383
    10. '```' → logprob: -6.246522903442383

Token 742: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3883161544799805
    2. '=' → logprob: -1.6383161544799805
    3. ' %=' → logprob: -2.0133161544799805
    4. '(tmp' → logprob: -2.5133161544799805
    5. ' =' → logprob: -2.6383161544799805
    6. ' (' → logprob: -2.6383161544799805
    7. '(mod' → logprob: -3.2633161544799805
    8. ' mod' → logprob: -3.2633161544799805
    9. 'tmp' → logprob: -3.5133161544799805
    10. '(' → logprob: -3.5133161544799805

Token 743: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10972434282302856
    2. '(mod' → logprob: -3.109724283218384
    3. ' mod' → logprob: -3.609724283218384
    4. '=' → logprob: -3.984724283218384
    5. ' (' → logprob: -5.109724521636963
    6. ' =' → logprob: -5.859724521636963
    7. ' %=' → logprob: -6.734724521636963
    8. '(' → logprob: -6.859724521636963
    9. '`' → logprob: -7.609724521636963
    10. ')' → logprob: -7.859724521636963

Token 744: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8743608593940735
    2. '[i' → logprob: -1.1243607997894287
    3. ' =' → logprob: -2.3743607997894287
    4. 'DP' → logprob: -2.7493607997894287
    5. '=' → logprob: -3.3743607997894287
    6. '[j' → logprob: -3.6243607997894287
    7. '   ' → logprob: -3.9993607997894287
    8. ']' → logprob: -4.874361038208008
    9. ' DP' → logprob: -5.374361038208008
    10. ')' → logprob: -6.374361038208008

Token 745: '       ' (ID: 309)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.684695839881897
    2. '=' → logprob: -1.809695839881897
    3. '[j' → logprob: -2.4346957206726074
    4. '[' → logprob: -2.5596957206726074
    5. '[i' → logprob: -2.6846957206726074
    6. 'DP' → logprob: -2.9346957206726074
    7. ' =' → logprob: -3.1846957206726074
    8. '```' → logprob: -7.434695720672607
    9. '[num' → logprob: -7.559695720672607
    10. ' DP' → logprob: -7.684695720672607

Token 746: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.00027897433028556406
    2. '       ' → logprob: -9.000279426574707
    3. '=' → logprob: -9.625279426574707
    4. ' DP' → logprob: -10.125279426574707
    5. '   ' → logprob: -10.375279426574707
    6. '[' → logprob: -11.875279426574707
    7. '_DP' → logprob: -12.250279426574707
    8. ' =' → logprob: -12.875279426574707
    9. 'dp' → logprob: -14.375279426574707
    10. ')' → logprob: -14.375279426574707

Token 747: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. ' [' → logprob: -16.125
    4. '[I' → logprob: -16.5
    5. '[j' → logprob: -16.625
    6. '```' → logprob: -18.0
    7. '[int' → logprob: -18.125
    8. 'i' → logprob: -18.625
    9. '[
' → logprob: -19.25
    10. '][' → logprob: -19.5

Token 748: '][-' (ID: 162298)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5268374681472778
    2. '][-' → logprob: -0.9018374681472778
    3. '][' → logprob: -5.901837348937988
    4. ']' → logprob: -7.776837348937988
    5. '   ' → logprob: -7.776837348937988
    6. '[' → logprob: -9.776837348937988
    7. ' [-' → logprob: -10.901837348937988
    8. ' ' → logprob: -11.151837348937988
    9. '       ' → logprob: -11.526837348937988
    10. '  ' → logprob: -12.026837348937988

Token 749: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.696889623621246e-06
    2. ' j' → logprob: -12.87500286102295
    3. '	j' → logprob: -17.000001907348633
    4. '$j' → logprob: -17.375001907348633
    5. ':j' → logprob: -17.750001907348633
    6. '[j' → logprob: -18.625001907348633
    7. '1' → logprob: -18.625001907348633
    8. '(j' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '=j' → logprob: -19.375001907348633

Token 750: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014073710888624191
    2. '=' → logprob: -4.764073848724365
    3. ']=' → logprob: -5.514073848724365
    4. ' =' → logprob: -7.264073848724365
    5. ']+=' → logprob: -7.639073848724365
    6. ' ]' → logprob: -9.014073371887207
    7. ']=(' → logprob: -9.264073371887207
    8. ')' → logprob: -11.889073371887207
    9. '+=' → logprob: -12.139073371887207
    10. ' +=' → logprob: -13.514073371887207

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015264409012161195
    2. ' =' → logprob: -9.125152587890625
    3. '+=' → logprob: -10.125152587890625
    4. '=(' → logprob: -13.125152587890625
    5. '%=' → logprob: -13.375152587890625
    6. '=((' → logprob: -18.000152587890625
    7. '=

' → logprob: -18.000152587890625
    8. ' +=' → logprob: -18.500152587890625
    9. '*=' → logprob: -18.500152587890625
    10. '.=' → logprob: -18.500152587890625

Token 752: ' (' (ID: 350)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.12880121171474457
    2. 'tmp' → logprob: -2.128801107406616
    3. ' tmp' → logprob: -6.503801345825195
    4. ' (' → logprob: -8.253801345825195
    5. '[tmp' → logprob: -9.753801345825195
    6. '/tmp' → logprob: -11.003801345825195
    7. '(t' → logprob: -11.378801345825195
    8. '	tmp' → logprob: -11.628801345825195
    9. '$tmp' → logprob: -11.878801345825195
    10. ',tmp' → logprob: -12.378801345825195

Token 753: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0001855406299000606
    2. ' tmp' → logprob: -8.7501859664917
    3. '       ' → logprob: -11.7501859664917
    4. '(tmp' → logprob: -11.7501859664917
    5. 'DP' → logprob: -12.7501859664917
    6. '	tmp' → logprob: -13.1251859664917
    7. '   ' → logprob: -13.1251859664917
    8. 'Tmp' → logprob: -13.7501859664917
    9. '           ' → logprob: -14.0001859664917
    10. 'num' → logprob: -14.3751859664917

Token 754: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10020806640386581
    2. '*' → logprob: -2.350208044052124
    3. '%' → logprob: -14.475208282470703
    4. ' ' → logprob: -14.850208282470703
    5. ' ' → logprob: -15.725208282470703
    6. ')' → logprob: -15.725208282470703
    7. '*num' → logprob: -16.225208282470703
    8. '**' → logprob: -16.850208282470703
    9. '   ' → logprob: -17.350208282470703
    10. '*object' → logprob: -17.975208282470703

Token 755: ' Num' (ID: 33827)
  Prédit: 'Num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.00410143518820405
    2. ' Num' → logprob: -5.504101276397705
    3. 'num' → logprob: -11.004101753234863
    4. '_num' → logprob: -13.754101753234863
    5. ' num' → logprob: -14.004101753234863
    6. '_Num' → logprob: -14.004101753234863
    7. 'DP' → logprob: -14.129101753234863
    8. 'Nums' → logprob: -14.254101753234863
    9. ' ' → logprob: -14.379101753234863
    10. '   ' → logprob: -14.879101753234863

Token 756: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. '[
' → logprob: -17.25
    4. '   ' → logprob: -17.5
    5. '][-' → logprob: -18.875
    6. 's' → logprob: -19.5
    7. '#' → logprob: -19.5
    8. '[:-' → logprob: -19.625
    9. ' [-' → logprob: -19.75
    10. '```' → logprob: -19.75

Token 757: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.941850526549388e-06
    2. ' j' → logprob: -12.125007629394531
    3. '-j' → logprob: -13.750007629394531
    4. '	j' → logprob: -14.625007629394531
    5. '1' → logprob: -15.125007629394531
    6. '[j' → logprob: -15.500007629394531
    7. '   ' → logprob: -15.875007629394531
    8. '```' → logprob: -16.25000762939453
    9. 'i' → logprob: -16.62500762939453
    10. '_j' → logprob: -17.12500762939453

Token 758: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2020472139120102
    2. '])' → logprob: -1.7020472288131714
    3. ']' → logprob: -8.452047348022461
    4. ' )' → logprob: -9.077047348022461
    5. ')%' → logprob: -9.077047348022461
    6. '-' → logprob: -9.202047348022461
    7. '[j' → logprob: -10.452047348022461
    8. '[' → logprob: -11.077047348022461
    9. '})' → logprob: -11.952047348022461
    10. '%)' → logprob: -12.077047348022461

Token 759: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -9.567575034452602e-05
    2. ' %' → logprob: -9.37509536743164
    3. ')%' → logprob: -12.12509536743164
    4. '%=' → logprob: -12.62509536743164
    5. ')' → logprob: -13.62509536743164
    6. ' %=' → logprob: -14.37509536743164
    7. '%m' → logprob: -16.25009536743164
    8. '%)' → logprob: -16.62509536743164
    9. '%i' → logprob: -17.00009536743164
    10. '%n' → logprob: -17.37509536743164

Token 760: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10020904988050461
    2. ' mod' → logprob: -2.3502089977264404
    3. '(mod' → logprob: -12.97520923614502
    4. '	mod' → logprob: -16.850208282470703
    5. ' ' → logprob: -17.975208282470703
    6. ' modul' → logprob: -19.475208282470703
    7. ' ' → logprob: -19.600208282470703
    8. '```' → logprob: -19.725208282470703
    9. ' мод' → logprob: -19.975208282470703
    10. '
' → logprob: -20.725208282470703

Token 761: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 762: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 763: ' Initial' (ID: 9209)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014302528463304043
    2. 'result' → logprob: -4.389302730560303
    3. 'for' → logprob: -6.639302730560303
    4. '#' → logprob: -8.514302253723145
    5. 'answer' → logprob: -8.889302253723145
    6. 'k' → logprob: -10.014302253723145
    7. 'res' → logprob: -10.389302253723145
    8. 'return' → logprob: -10.639302253723145
    9. 'total' → logprob: -11.389302253723145
    10. '```' → logprob: -12.014302253723145

Token 764: 'isation' (ID: 6993)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3188246488571167
    2. 'print' → logprob: -1.5688246488571167
    3. 'isation' → logprob: -3.3188247680664062
    4. '#' → logprob: -4.568824768066406
    5. '_result' → logprob: -5.318824768066406
    6. 'ization' → logprob: -5.693824768066406
    7. 'value' → logprob: -6.068824768066406
    8. 'val' → logprob: -6.318824768066406
    9. 'res' → logprob: -7.068824768066406
    10. 'final' → logprob: -7.068824768066406

Token 765: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04294758290052414
    2. 'res' → logprob: -3.79294753074646
    3. 'ans' → logprob: -4.417947769165039
    4. 'answer' → logprob: -4.917947769165039
    5. 'rés' → logprob: -10.167947769165039
    6. 'ret' → logprob: -10.792947769165039
    7. ' result' → logprob: -10.792947769165039
    8. 's' → logprob: -11.042947769165039
    9. 'r' → logprob: -11.292947769165039
    10. 'sum' → logprob: -12.292947769165039

Token 766: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04089163616299629
    2. 'res' → logprob: -3.540891647338867
    3. 'ans' → logprob: -4.915891647338867
    4. '0' → logprob: -5.915891647338867
    5. 'answer' → logprob: -7.165891647338867
    6. 'rés' → logprob: -8.790891647338867
    7. 'total' → logprob: -10.290891647338867
    8. ' result' → logprob: -10.415891647338867
    9. 'tmp' → logprob: -10.915891647338867
    10. 'ret' → logprob: -11.165891647338867

Token 767: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2822408974170685
    2. 'res' → logprob: -1.532240867614746
    3. 'ans' → logprob: -3.907240867614746
    4. 'answer' → logprob: -5.032240867614746
    5. 'rés' → logprob: -5.907240867614746
    6. 'ret' → logprob: -8.532240867614746
    7. 'total' → logprob: -9.657240867614746
    8. 'print' → logprob: -9.907240867614746
    9. 'ré' → logprob: -9.907240867614746
    10. 'r' → logprob: -9.907240867614746

Token 768: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8964035511016846
    2. 'result' → logprob: -1.0214035511016846
    3. 'res' → logprob: -1.8964035511016846
    4. 'answer' → logprob: -2.5214035511016846
    5. 'ret' → logprob: -7.1464033126831055
    6. 'rés' → logprob: -7.8964033126831055
    7. 'r' → logprob: -9.771403312683105
    8. ' ans' → logprob: -10.146403312683105
    9. 'Ans' → logprob: -10.146403312683105
    10. 'ré' → logprob: -10.271403312683105

Token 769: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.42172086238861084
    2. 'rés' → logprob: -1.6717208623886108
    3. 'ré' → logprob: -2.1717209815979004
    4. 'res' → logprob: -3.4217209815979004
    5. 'answer' → logprob: -5.1717209815979
    6. 'ans' → logprob: -6.5467209815979
    7. 's' → logprob: -6.7967209815979
    8. 'r' → logprob: -7.4217209815979
    9. 're' → logprob: -7.9217209815979
    10. 'ret' → logprob: -9.046720504760742

Token 770: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.26343414187431335
    2. 'res' → logprob: -1.5134341716766357
    3. 'ans' → logprob: -4.513433933258057
    4. 'answer' → logprob: -8.138434410095215
    5. 'rés' → logprob: -9.013434410095215
    6. 'ret' → logprob: -10.013434410095215
    7. '```' → logprob: -11.888434410095215
    8. 'r' → logprob: -13.013434410095215
    9. 'rez' → logprob: -13.388434410095215
    10. 'Ans' → logprob: -13.763434410095215

Token 771: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10757307708263397
    2. 'res' → logprob: -2.3575730323791504
    3. 'ans' → logprob: -4.98257303237915
    4. 'answer' → logprob: -7.73257303237915
    5. 'rés' → logprob: -11.107573509216309
    6. '
' → logprob: -11.482573509216309
    7. 'ret' → logprob: -11.857573509216309
    8. '```' → logprob: -12.732573509216309
    9. ' result' → logprob: -12.857573509216309
    10. 'final' → logprob: -13.357573509216309

Token 772: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006114243995398283
    2. 'DP' → logprob: -5.1311140060424805
    3. '1' → logprob: -9.50611400604248
    4. ' ' → logprob: -9.88111400604248
    5. '(' → logprob: -10.75611400604248
    6. 'mod' → logprob: -11.00611400604248
    7. 'dp' → logprob: -11.63111400604248
    8. ' DP' → logprob: -12.25611400604248
    9. 'ans' → logprob: -12.88111400604248
    10. 'sum' → logprob: -14.00611400604248

Token 773: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4306882321834564
    2. 'res' → logprob: -1.1806882619857788
    3. 'ans' → logprob: -3.1806881427764893
    4. 'answer' → logprob: -6.930688381195068
    5. 'ret' → logprob: -8.68068790435791
    6. 'r' → logprob: -10.55568790435791
    7. '```' → logprob: -10.55568790435791
    8. '
' → logprob: -10.93068790435791
    9. 'Ans' → logprob: -11.30568790435791
    10. 'rés' → logprob: -11.30568790435791

Token 774: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21365533769130707
    2. 'res' → logprob: -1.8386553525924683
    3. 'ans' → logprob: -3.4636552333831787
    4. 'answer' → logprob: -6.463655471801758
    5. 'ret' → logprob: -7.838655471801758
    6. 'r' → logprob: -11.213655471801758
    7. 'rez' → logprob: -11.713655471801758
    8. 'rés' → logprob: -11.713655471801758
    9. 're' → logprob: -12.088655471801758
    10. 'Ans' → logprob: -12.088655471801758

Token 775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059287971816957
    2. '=' → logprob: -5.130928993225098
    3. ' ' → logprob: -16.25592803955078
    4. ' ' → logprob: -16.75592803955078
    5. ',' → logprob: -17.63092803955078
    6. '_' → logprob: -17.75592803955078
    7. ' +=' → logprob: -18.88092803955078
    8. 's' → logprob: -19.00592803955078
    9. ' =)' → logprob: -19.00592803955078
    10. ')' → logprob: -19.13092803955078

Token 776: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. ' ' → logprob: -17.875139236450195
    4. '۰' → logprob: -18.937639236450195
    5. 'mod' → logprob: -19.125139236450195
    6. '```' → logprob: -19.312639236450195
    7. '   ' → logprob: -19.437639236450195
    8. '00' → logprob: -19.937639236450195
    9. '000' → logprob: -20.000139236450195
    10. '(' → logprob: -20.125139236450195

Token 777: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '(' → logprob: -18.75
    4. '۰' → logprob: -19.0
    5. 'mod' → logprob: -19.625
    6. 'int' → logprob: -19.9375
    7. '```' → logprob: -20.0625
    8. '[' → logprob: -20.9375
    9. 'ans' → logprob: -21.375
    10. '０' → logprob: -21.5625

Token 778: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.5014188799541444e-05
    2. ' for' → logprob: -10.625044822692871
    3. '<|end|>' → logprob: -10.875044822692871
    4. '```' → logprob: -13.625044822692871
    5. '#' → logprob: -15.125044822692871
    6. '
' → logprob: -16.375045776367188
    7. ')' → logprob: -16.750045776367188
    8. '	for' → logprob: -17.750045776367188
    9. 'For' → logprob: -17.750045776367188
    10. '+' → logprob: -17.875045776367188

Token 779: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.981667537620524e-06
    2. ' for' → logprob: -13.375001907348633
    3. '```' → logprob: -15.250001907348633
    4. '#' → logprob: -16.375001907348633
    5. 'ans' → logprob: -17.875001907348633
    6. 'i' → logprob: -19.125001907348633
    7. '	for' → logprob: -19.375001907348633
    8. ')' → logprob: -20.750001907348633
    9. '<|end|>' → logprob: -20.875001907348633
    10. 'n' → logprob: -20.875001907348633

Token 780: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -12.375004768371582
    3. '#' → logprob: -16.125003814697266
    4. ' for' → logprob: -16.250003814697266
    5. 'i' → logprob: -17.125003814697266
    6. 'ans' → logprob: -18.250003814697266
    7. 'j' → logprob: -19.125003814697266
    8. 'from' → logprob: -19.250003814697266
    9. '``' → logprob: -19.500003814697266
    10. 'range' → logprob: -19.625003814697266

Token 781: 'ourt' (ID: 38600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009829992428421974
    2. ' for' → logprob: -5.009829998016357
    3. 'i' → logprob: -6.009829998016357
    4. 'range' → logprob: -7.884829998016357
    5. ' range' → logprob: -9.3848295211792
    6. 'or' → logprob: -10.0098295211792
    7. 'in' → logprob: -10.1348295211792
    8. 'ange' → logprob: -10.1348295211792
    9. 'ge' → logprob: -10.7598295211792
    10. ' i' → logprob: -11.2598295211792

Token 782: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.058688875287771225
    2. ' range' → logprob: -3.1836888790130615
    3. 'for' → logprob: -4.183688640594482
    4. 'i' → logprob: -8.93368911743164
    5. 'j' → logprob: -9.18368911743164
    6. ' for' → logprob: -9.93368911743164
    7. 'in' → logprob: -10.93368911743164
    8. ' j' → logprob: -11.93368911743164
    9. '(range' → logprob: -12.43368911743164
    10. 'l' → logprob: -12.93368911743164

Token 783: ' éléments' (ID: 57375)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003297440707683563
    2. ' range' → logprob: -8.375329971313477
    3. 'DP' → logprob: -9.375329971313477
    4. 'Num' → logprob: -12.375329971313477
    5. 'for' → logprob: -12.750329971313477
    6. 'j' → logprob: -12.875329971313477
    7. 'i' → logprob: -13.625329971313477
    8. '(range' → logprob: -14.125329971313477
    9. 'num' → logprob: -14.250329971313477
    10. 're' → logprob: -14.750329971313477

Token 784: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3791985511779785
    2. ' in' → logprob: -1.6291985511779785
    3. 'for' → logprob: -2.2541985511779785
    4. 'range' → logprob: -4.5041985511779785
    5. ' range' → logprob: -6.2541985511779785
    6. ' for' → logprob: -6.8791985511779785
    7. 'i' → logprob: -8.12919807434082
    8. '(range' → logprob: -9.37919807434082
    9. 'j' → logprob: -10.25419807434082
    10. ' j' → logprob: -10.50419807434082

Token 785: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16064703464508057
    2. 'DP' → logprob: -1.9106470346450806
    3. 'Num' → logprob: -8.28564739227295
    4. ' range' → logprob: -9.03564739227295
    5. 'Range' → logprob: -11.16064739227295
    6. 'num' → logprob: -11.41064739227295
    7. 'dp' → logprob: -11.66064739227295
    8. ' DP' → logprob: -12.41064739227295
    9. '(range' → logprob: -12.66064739227295
    10. 'for' → logprob: -13.03564739227295

Token 786: ' dernière' (ID: 39497)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11404919624328613
    2. 'DP' → logprob: -2.239049196243286
    3. 'Num' → logprob: -7.239048957824707
    4. ' range' → logprob: -7.739048957824707
    5. 'for' → logprob: -10.489048957824707
    6. 'num' → logprob: -11.614048957824707
    7. 'dp' → logprob: -11.864048957824707
    8. 'Range' → logprob: -11.989048957824707
    9. ' DP' → logprob: -12.114048957824707
    10. '(range' → logprob: -12.239048957824707

Token 787: ' ligne' (ID: 19583)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06476647406816483
    2. 'DP' → logprob: -2.8147664070129395
    3. ' range' → logprob: -6.5647664070129395
    4. 'ligne' → logprob: -7.1897664070129395
    5. 'for' → logprob: -8.314766883850098
    6. ' DP' → logprob: -8.939766883850098
    7. 'row' → logprob: -9.189766883850098
    8. '[-' → logprob: -9.314766883850098
    9. 'rang' → logprob: -10.939766883850098
    10. 'line' → logprob: -11.564766883850098

Token 788: ' du' (ID: 1462)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.11816103011369705
    2. 'for' → logprob: -2.6181609630584717
    3. 'range' → logprob: -3.6181609630584717
    4. 'in' → logprob: -4.993161201477051
    5. 'of' → logprob: -6.618161201477051
    6. ' of' → logprob: -6.868161201477051
    7. '(D' → logprob: -7.493161201477051
    8. ' in' → logprob: -7.618161201477051
    9. ' range' → logprob: -7.743161201477051
    10. ' for' → logprob: -8.36816120147705

Token 789: ' tableau' (ID: 67053)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.7432603272027336e-06
    2. ' DP' → logprob: -13.375001907348633
    3. 'range' → logprob: -15.625001907348633
    4. 'for' → logprob: -17.750001907348633
    5. '_DP' → logprob: -18.250001907348633
    6. 'dp' → logprob: -19.250001907348633
    7. ' range' → logprob: -19.625001907348633
    8. '[' → logprob: -19.750001907348633
    9. 'D' → logprob: -20.375001907348633
    10. '`' → logprob: -20.750001907348633

Token 790: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.006061163265258074
    2. 'for' → logprob: -5.13106107711792
    3. 'range' → logprob: -9.256061553955078
    4. ' DP' → logprob: -10.881061553955078
    5. ' for' → logprob: -11.506061553955078
    6. '```' → logprob: -13.256061553955078
    7. '`' → logprob: -13.631061553955078
    8. ' range' → logprob: -13.881061553955078
    9. '_DP' → logprob: -14.256061553955078
    10. 'in' → logprob: -14.381061553955078

Token 791: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001973361475393176
    2. 'in' → logprob: -6.6269731521606445
    3. ':' → logprob: -8.501973152160645
    4. 'range' → logprob: -8.751973152160645
    5. ' for' → logprob: -8.876973152160645
    6. '[-' → logprob: -9.251973152160645
    7. 'DP' → logprob: -10.626973152160645
    8. ')' → logprob: -11.626973152160645
    9. ':
' → logprob: -12.251973152160645
    10. ' in' → logprob: -13.001973152160645

Token 792: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2854205071926117
    2. 'range' → logprob: -1.410420536994934
    3. 'for' → logprob: -5.5354204177856445
    4. ' range' → logprob: -8.410420417785645
    5. ' DP' → logprob: -9.660420417785645
    6. 'enumer' → logprob: -11.785420417785645
    7. 'dp' → logprob: -11.910420417785645
    8. ')' → logprob: -12.785420417785645
    9. '[-' → logprob: -13.285420417785645
    10. '`' → logprob: -13.660420417785645

Token 793: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.062048349529504776
    2. '[k' → logprob: -2.8120484352111816
    3. 'k' → logprob: -10.687047958374023
    4. '[' → logprob: -11.312047958374023
    5. '[i' → logprob: -11.562047958374023
    6. '-' → logprob: -11.812047958374023
    7. '```' → logprob: -11.937047958374023
    8. '][-' → logprob: -12.312047958374023
    9. ')' → logprob: -12.937047958374023
    10. '(k' → logprob: -13.062047958374023

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '-' → logprob: -12.625005722045898
    3. ' ' → logprob: -14.000005722045898
    4. '0' → logprob: -14.625005722045898
    5. '
' → logprob: -15.250005722045898
    6. '```' → logprob: -15.500005722045898
    7. 'k' → logprob: -15.875005722045898
    8. '#' → logprob: -15.937505722045898
    9. 'j' → logprob: -16.3125057220459
    10. '2' → logprob: -16.6250057220459

Token 795: ']),' (ID: 19560)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13226677477359772
    2. '):
' → logprob: -2.1322667598724365
    3. ')' → logprob: -5.382266998291016
    4. '):
' → logprob: -8.507266998291016
    5. ']):' → logprob: -8.882266998291016
    6. ',' → logprob: -9.382266998291016
    7. ' ):' → logprob: -9.382266998291016
    8. ':' → logprob: -9.632266998291016
    9. '):

' → logprob: -10.382266998291016
    10. '[' → logprob: -10.632266998291016

Token 796: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004641949664801359
    2. ' for' → logprob: -5.379642009735107
    3. ')' → logprob: -12.12964153289795
    4. '
' → logprob: -12.25464153289795
    5. '```' → logprob: -12.37964153289795
    6. 'range' → logprob: -12.50464153289795
    7. '   ' → logprob: -13.37964153289795
    8. '#' → logprob: -14.37964153289795
    9. ':' → logprob: -15.25464153289795
    10. '):
' → logprob: -15.62964153289795

Token 797: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.33001708984375
    2. 'DP' → logprob: -1.95501708984375
    3. '0' → logprob: -2.08001708984375
    4. 'la' → logprob: -2.33001708984375
    5. 'for' → logprob: -2.33001708984375
    6. 'le' → logprob: -2.70501708984375
    7. 'l' → logprob: -2.95501708984375
    8. ' le' → logprob: -3.33001708984375
    9. ' for' → logprob: -3.45501708984375
    10. ' DP' → logprob: -3.83001708984375

Token 798: ' premier' (ID: 15506)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.19155336916446686
    2. 'prem' → logprob: -2.0665533542633057
    3. '0' → logprob: -3.8165533542633057
    4. ' premier' → logprob: -4.566553592681885
    5. ' dernier' → logprob: -5.316553592681885
    6. 'last' → logprob: -5.566553592681885
    7. '[' → logprob: -6.316553592681885
    8. 'der' → logprob: -6.316553592681885
    9. 'Dern' → logprob: -6.941553592681885
    10. '1' → logprob: -7.816553592681885

Token 799: ' élément' (ID: 99627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5736281871795654
    2. '(' → logprob: -1.5736281871795654
    3. ',' → logprob: -1.9486281871795654
    4. '[' → logprob: -3.5736281871795654
    5. ']' → logprob: -4.5736284255981445
    6. 'in' → logprob: -4.8236284255981445
    7. ':' → logprob: -4.9486284255981445
    8. ' for' → logprob: -5.0736284255981445
    9. 'ans' → logprob: -5.0736284255981445
    10. 'element' → logprob: -5.5736284255981445

Token 800: ' ([' (ID: 31338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03161916136741638
    2. '[' → logprob: -4.031619071960449
    3. 'in' → logprob: -5.031619071960449
    4. ',' → logprob: -5.656619071960449
    5. ' for' → logprob: -5.906619071960449
    6. ' in' → logprob: -8.28161907196045
    7. ':' → logprob: -8.78161907196045
    8. '(' → logprob: -9.28161907196045
    9. '```' → logprob: -10.15661907196045
    10. ':
' → logprob: -10.53161907196045

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014030802994966507
    2. ':' → logprob: -4.764030933380127
    3. '0' → logprob: -5.264030933380127
    4. ':]' → logprob: -8.764030456542969
    5. '```' → logprob: -11.014030456542969
    6. ':-' → logprob: -11.264030456542969
    7. ' :' → logprob: -11.389030456542969
    8. ' ' → logprob: -11.889030456542969
    9. ':])
' → logprob: -12.514030456542969
    10. ':)' → logprob: -12.514030456542969

Token 802: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003571535926312208
    2. ':]' → logprob: -8.500357627868652
    3. ':],' → logprob: -8.875357627868652
    4. ':])
' → logprob: -12.000357627868652
    5. ':].' → logprob: -12.125357627868652
    6. ':)' → logprob: -14.125357627868652
    7. ',' → logprob: -14.500357627868652
    8. ' :' → logprob: -14.875357627868652
    9. '])' → logprob: -15.750357627868652
    10. ':-' → logprob: -16.000356674194336

Token 803: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008723941282369196
    2. ' for' → logprob: -7.250872611999512
    3. '```' → logprob: -9.500872611999512
    4. ':' → logprob: -9.625872611999512
    5. ':
' → logprob: -11.000872611999512
    6. '   ' → logprob: -12.875872611999512
    7. ',' → logprob: -14.500872611999512
    8. '[' → logprob: -14.500872611999512
    9. '	for' → logprob: -15.000872611999512
    10. '
' → logprob: -15.000872611999512

Token 804: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043958261609077454
    2. 'val' → logprob: -4.1689581871032715
    3. 'num' → logprob: -4.7939581871032715
    4. 'v' → logprob: -5.0439581871032715
    5. ' x' → logprob: -5.1689581871032715
    6. 'i' → logprob: -5.5439581871032715
    7. 'j' → logprob: -6.5439581871032715
    8. ' val' → logprob: -7.5439581871032715
    9. 'value' → logprob: -7.7939581871032715
    10. 'ans' → logprob: -8.16895866394043

Token 805: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3486137092113495
    2. ' in' → logprob: -1.2236137390136719
    3. ',' → logprob: -9.223613739013672
    4. '   ' → logprob: -10.848613739013672
    5. '(' → logprob: -11.223613739013672
    6. ')' → logprob: -11.973613739013672
    7. '```' → logprob: -11.973613739013672
    8. ' ' → logprob: -12.223613739013672
    9. '1' → logprob: -12.473613739013672
    10. '(in' → logprob: -13.098613739013672

Token 806: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.017758404836058617
    2. ' DP' → logprob: -4.267758369445801
    3. 'range' → logprob: -6.017758369445801
    4. ' range' → logprob: -6.767758369445801
    5. 'dp' → logprob: -13.1427583694458
    6. 'enumer' → logprob: -14.6427583694458
    7. ' ' → logprob: -15.0177583694458
    8. 'list' → logprob: -15.8927583694458
    9. '_DP' → logprob: -16.142759323120117
    10. 'D' → logprob: -16.392759323120117

Token 807: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.6405310816480778e-05
    2. '][-' → logprob: -12.000016212463379
    3. '-' → logprob: -12.250016212463379
    4. '[' → logprob: -12.750016212463379
    5. '   ' → logprob: -13.250016212463379
    6. ' [-' → logprob: -15.125016212463379
    7. '```' → logprob: -15.875016212463379
    8. '[
' → logprob: -16.750017166137695
    9. '[i' → logprob: -16.750017166137695
    10. ' ' → logprob: -17.000017166137695

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. 'range' → logprob: -11.25002670288086
    3. ' ' → logprob: -11.50002670288086
    4. '(' → logprob: -12.75002670288086
    5. '   ' → logprob: -14.37502670288086
    6. '[' → logprob: -15.75002670288086
    7. '```' → logprob: -16.62502670288086
    8. '  ' → logprob: -17.00002670288086
    9. '
' → logprob: -17.25002670288086
    10. 'slice' → logprob: -17.25002670288086

Token 809: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014099215157330036
    2. '1' → logprob: -5.13909912109375
    3. '][' → logprob: -5.26409912109375
    4. ',' → logprob: -6.01409912109375
    5. ':' → logprob: -8.63909912109375
    6. '(' → logprob: -8.88909912109375
    7. '   ' → logprob: -9.63909912109375
    8. ' in' → logprob: -10.13909912109375
    9. ' [' → logprob: -10.63909912109375
    10. '):
' → logprob: -10.88909912109375

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -20.375
    4. 'range' → logprob: -20.75
    5. '```' → logprob: -22.375
    6. '１' → logprob: -22.75
    7. '۱' → logprob: -23.0
    8. ':' → logprob: -23.25
    9. '  ' → logprob: -23.5
    10. '(' → logprob: -24.0

Token 811: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00122844276484102
    2. ':]' → logprob: -6.751228332519531
    3. ']:' → logprob: -10.251228332519531
    4. ':],' → logprob: -10.876228332519531
    5. ':].' → logprob: -12.876228332519531
    6. ':i' → logprob: -15.001228332519531
    7. ' :' → logprob: -15.126228332519531
    8. ':j' → logprob: -15.501228332519531
    9. '：' → logprob: -15.626228332519531
    10. ',:' → logprob: -16.50122833251953

Token 812: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10435200482606888
    2. ':
' → logprob: -2.3543519973754883
    3. ']:' → logprob: -6.104351997375488
    4. '):' → logprob: -7.479351997375488
    5. '):
' → logprob: -7.604351997375488
    6. '   ' → logprob: -7.854351997375488
    7. ']:
' → logprob: -8.229351997375488
    8. ':
' → logprob: -9.354351997375488
    9. ' :' → logprob: -10.479351997375488
    10. ']' → logprob: -10.854351997375488

Token 813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003741767955943942
    2. 'ans' → logprob: -5.62874174118042
    3. ' ans' → logprob: -9.253742218017578
    4. '```' → logprob: -10.753742218017578
    5. '	ans' → logprob: -10.878742218017578
    6. '(ans' → logprob: -12.753742218017578
    7. 'mod' → logprob: -13.503742218017578
    8. '
' → logprob: -14.378742218017578
    9. '       ' → logprob: -14.878742218017578
    10. '   ' → logprob: -15.628742218017578

Token 814: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.584239938296378e-06
    2. '(ans' → logprob: -12.000007629394531
    3. ' ans' → logprob: -13.750007629394531
    4. '   ' → logprob: -15.250007629394531
    5. '	ans' → logprob: -17.12500762939453
    6. '```' → logprob: -17.62500762939453
    7. '(' → logprob: -19.75000762939453
    8. '_ans' → logprob: -20.25000762939453
    9. 'mod' → logprob: -20.50000762939453
    10. 'answer' → logprob: -20.87500762939453

Token 815: ' Aj' (ID: 28294)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.320199877838604e-07
    2. ' ans' → logprob: -15.875
    3. '(ans' → logprob: -15.875
    4. '   ' → logprob: -16.5
    5. '	ans' → logprob: -19.0
    6. '
' → logprob: -21.5
    7. 'ann' → logprob: -21.875
    8. 'answer' → logprob: -22.375
    9. 'ANS' → logprob: -23.125
    10. '_ans' → logprob: -23.5

Token 816: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.11366929113864899
    2. 'out' → logprob: -2.3636693954467773
    3. 'outez' → logprob: -4.863669395446777
    4. 'ans' → logprob: -5.488669395446777
    5. 'outer' → logprob: -6.863669395446777
    6. 'outes' → logprob: -9.113669395446777
    7. 'uste' → logprob: -9.113669395446777
    8. 'ute' → logprob: -10.113669395446777
    9. '   ' → logprob: -10.363669395446777
    10. '=' → logprob: -10.363669395446777

Token 817: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00790636520832777
    2. 'ans' → logprob: -5.007906436920166
    3. ' i' → logprob: -6.882906436920166
    4. '(i' → logprob: -9.757905960083008
    5. ' ans' → logprob: -10.257905960083008
    6. '   ' → logprob: -10.257905960083008
    7. '(ans' → logprob: -10.632905960083008
    8. ' (' → logprob: -11.882905960083008
    9. '(' → logprob: -12.132905960083008
    10. '
' → logprob: -14.507905960083008

Token 818: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001837487448938191
    2. ' i' → logprob: -6.501837253570557
    3. 'ans' → logprob: -8.626837730407715
    4. '(i' → logprob: -9.001837730407715
    5. ' (' → logprob: -10.751837730407715
    6. '(' → logprob: -11.751837730407715
    7. '(ans' → logprob: -13.126837730407715
    8. '
' → logprob: -14.376837730407715
    9. ' ans' → logprob: -14.501837730407715
    10. '(
' → logprob: -15.626837730407715

Token 819: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06982292979955673
    2. '   ' → logprob: -3.4448230266571045
    3. '(ans' → logprob: -3.9448230266571045
    4. ' ans' → logprob: -4.944822788238525
    5. 'i' → logprob: -5.194822788238525
    6. ' i' → logprob: -6.569822788238525
    7. '+=' → logprob: -7.569822788238525
    8. '=' → logprob: -7.819822788238525
    9. '
' → logprob: -8.569823265075684
    10. '	ans' → logprob: -8.569823265075684

Token 820: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -17.0
    3. '(ans' → logprob: -21.375
    4. '	ans' → logprob: -22.25
    5. 'i' → logprob: -22.75
    6. 'answer' → logprob: -23.5
    7. '
' → logprob: -23.875
    8. '_ans' → logprob: -25.25
    9. 'a' → logprob: -25.625
    10. '   ' → logprob: -25.875

Token 821: ' variable' (ID: 11076)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -17.25
    3. 'answer' → logprob: -17.75
    4. '(ans' → logprob: -18.5
    5. '	ans' → logprob: -21.5
    6. '
' → logprob: -22.625
    7. '_ans' → logprob: -22.875
    8. 'result' → logprob: -23.75
    9. '```' → logprob: -24.375
    10. 'i' → logprob: -24.5

Token 822: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.816093228830141e-06
    2. ' ans' → logprob: -13.12500286102295
    3. '(ans' → logprob: -14.25000286102295
    4. '```' → logprob: -15.87500286102295
    5. '
' → logprob: -17.875001907348633
    6. 'answer' → logprob: -18.375001907348633
    7. '	ans' → logprob: -18.625001907348633
    8. 'ann' → logprob: -19.000001907348633
    9. '`' → logprob: -19.875001907348633
    10. 'anst' → logprob: -20.125001907348633

Token 823: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.250000953674316
    3. '(ans' → logprob: -17.375
    4. 'answer' → logprob: -19.625
    5. '	ans' → logprob: -20.125
    6. 'i' → logprob: -20.5
    7. '
' → logprob: -20.75
    8. 'ann' → logprob: -21.625
    9. '```' → logprob: -22.25
    10. '_ans' → logprob: -22.5

Token 824: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.012323504313826561
    2. ' ans' → logprob: -4.512323379516602
    3. '(ans' → logprob: -7.262323379516602
    4. '+=' → logprob: -8.012323379516602
    5. ' +=' → logprob: -8.762323379516602
    6. '   ' → logprob: -10.137323379516602
    7. '
' → logprob: -11.262323379516602
    8. '	ans' → logprob: -11.512323379516602
    9. '```' → logprob: -12.137323379516602
    10. 'mod' → logprob: -12.137323379516602

Token 825: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31553709506988525
    2. 'ans' → logprob: -1.3155370950698853
    3. ' ans' → logprob: -6.690536975860596
    4. '	ans' → logprob: -7.815536975860596
    5. '(ans' → logprob: -8.315537452697754
    6. '
' → logprob: -8.315537452697754
    7. '```' → logprob: -9.565537452697754
    8. 'mod' → logprob: -10.190537452697754
    9. '+=' → logprob: -11.440537452697754
    10. '_ans' → logprob: -12.315537452697754

Token 826: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02574848383665085
    2. '   ' → logprob: -3.7757484912872314
    3. ' ans' → logprob: -6.025748252868652
    4. '```' → logprob: -9.775748252868652
    5. '	ans' → logprob: -11.025748252868652
    6. '(ans' → logprob: -11.775748252868652
    7. '``' → logprob: -12.900748252868652
    8. '
' → logprob: -15.150748252868652
    9. '_ans' → logprob: -15.275748252868652
    10. 'anst' → logprob: -16.27574920654297

Token 827: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -4.320199877838604e-07
    2. '(ans' → logprob: -15.5
    3. ' ans' → logprob: -15.75
    4. '```' → logprob: -19.375
    5. '	ans' → logprob: -19.75
    6. '   ' → logprob: -20.625
    7. 'anst' → logprob: -20.75
    8. 'answer' → logprob: -21.25
    9. '_ans' → logprob: -21.375
    10. '
' → logprob: -21.5

Token 828: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012982677668333054
    2. ' +=' → logprob: -4.7629828453063965
    3. '=' → logprob: -6.1379828453063965
    4. '%=' → logprob: -6.1379828453063965
    5. ' =' → logprob: -10.762982368469238
    6. ' %=' → logprob: -11.512982368469238
    7. '   ' → logprob: -12.012982368469238
    8. '+=(' → logprob: -14.012982368469238
    9. ']+=' → logprob: -14.137982368469238
    10. '+' → logprob: -14.762982368469238

Token 829: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -22.375335693359375
    4. '(i' → logprob: -23.375335693359375
    5. ' ' → logprob: -26.375335693359375
    6. '_i' → logprob: -26.500335693359375
    7. '{i' → logprob: -26.625335693359375
    8. '   ' → logprob: -27.000335693359375
    9. 'int' → logprob: -27.500335693359375
    10. 'ans' → logprob: -27.500335693359375

Token 830: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7079164981842041
    2. '
' → logprob: -1.082916498184204
    3. ' ans' → logprob: -2.582916498184204
    4. 'ans' → logprob: -3.207916498184204
    5. ' %' → logprob: -3.582916498184204
    6. '   ' → logprob: -4.582916259765625
    7. ' %=' → logprob: -5.832916259765625
    8. '<|end|>' → logprob: -5.832916259765625
    9. '```' → logprob: -5.957916259765625
    10. 'mod' → logprob: -6.332916259765625

Token 831: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07061304897069931
    2. ' %=' → logprob: -3.320613145828247
    3. ' %' → logprob: -4.320612907409668
    4. '
' → logprob: -4.445612907409668
    5. 'ans' → logprob: -6.195612907409668
    6. ' ans' → logprob: -6.445612907409668
    7. '```' → logprob: -6.445612907409668
    8. '%=' → logprob: -6.945612907409668
    9. ')%' → logprob: -8.070612907409668
    10. '%
' → logprob: -8.945612907409668

Token 832: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08643444627523422
    2. ' ans' → logprob: -2.5864343643188477
    3. 'mod' → logprob: -5.461434364318848
    4. '(ans' → logprob: -7.086434364318848
    5. '%' → logprob: -7.211434364318848
    6. '```' → logprob: -7.961434364318848
    7. '
' → logprob: -8.086434364318848
    8. '	ans' → logprob: -8.086434364318848
    9. ' mod' → logprob: -8.461434364318848
    10. '   ' → logprob: -8.461434364318848

Token 833: ' Pr' (ID: 2284)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00015920029545668513
    2. ' ans' → logprob: -8.75015926361084
    3. 'mod' → logprob: -14.87515926361084
    4. '	ans' → logprob: -16.000158309936523
    5. '(ans' → logprob: -16.125158309936523
    6. '```' → logprob: -16.500158309936523
    7. 'answer' → logprob: -18.250158309936523
    8. '_ans' → logprob: -18.375158309936523
    9. '=' → logprob: -18.500158309936523
    10. '   ' → logprob: -18.625158309936523

Token 834: 'end' (ID: 419)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04554406926035881
    2. '#' → logprob: -4.420544147491455
    3. 'mod' → logprob: -4.920544147491455
    4. 'int' → logprob: -4.920544147491455
    5. 'e' → logprob: -5.045544147491455
    6. 'es' → logprob: -5.670544147491455
    7. '(ans' → logprob: -5.795544147491455
    8. ' ans' → logprob: -6.920544147491455
    9. '%' → logprob: -7.295544147491455
    10. '	ans' → logprob: -7.670544147491455

Token 835: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16037015616893768
    2. ' ans' → logprob: -1.910370111465454
    3. 'mod' → logprob: -9.285369873046875
    4. ' mod' → logprob: -10.535369873046875
    5. '(ans' → logprob: -10.660369873046875
    6. '	ans' → logprob: -13.035369873046875
    7. '%' → logprob: -14.285369873046875
    8. '_ans' → logprob: -15.410369873046875
    9. '=' → logprob: -17.160369873046875
    10. '```' → logprob: -17.285369873046875

Token 836: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06306344270706177
    2. 'mod' → logprob: -2.813063383102417
    3. '%' → logprob: -7.313063621520996
    4. ' ans' → logprob: -7.938063621520996
    5. ' mod' → logprob: -9.563063621520996
    6. '(ans' → logprob: -14.438063621520996
    7. '	ans' → logprob: -15.438063621520996
    8. ' %' → logprob: -16.18806266784668
    9. 'answer' → logprob: -16.31306266784668
    10. '```' → logprob: -16.81306266784668

Token 837: ' modulo' (ID: 112372)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.17223261296749115
    2. '%=' → logprob: -2.4222326278686523
    3. '%' → logprob: -2.6722326278686523
    4. ' %' → logprob: -7.922232627868652
    5. 'ans' → logprob: -11.422232627868652
    6. 'mod' → logprob: -11.422232627868652
    7. ' ans' → logprob: -12.422232627868652
    8. '=' → logprob: -12.797232627868652
    9. ')%' → logprob: -13.922232627868652
    10. '```' → logprob: -14.297232627868652

Token 838: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004315036640036851
    2. '(mod' → logprob: -8.000431060791016
    3. ' mod' → logprob: -9.250431060791016
    4. '	mod' → logprob: -18.625431060791016
    5. '_mod' → logprob: -20.500431060791016
    6. '(' → logprob: -20.750431060791016
    7. '
' → logprob: -21.500431060791016
    8. 'MOD' → logprob: -21.875431060791016
    9. '.mod' → logprob: -21.875431060791016
    10. '/mod' → logprob: -22.250431060791016

Token 839: ' pour' (ID: 1930)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5417388081550598
    2. '   ' → logprob: -1.666738748550415
    3. ' ans' → logprob: -2.291738748550415
    4. '
' → logprob: -2.541738748550415
    5. '(ans' → logprob: -3.666738748550415
    6. '%' → logprob: -4.166738986968994
    7. '	ans' → logprob: -5.666738986968994
    8. '    
' → logprob: -6.416738986968994
    9. '```' → logprob: -6.916738986968994
    10. ' %=' → logprob: -7.416738986968994

Token 840: ' éviter' (ID: 64013)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3133300244808197
    2. ' ans' → logprob: -1.313330054283142
    3. '(ans' → logprob: -9.813329696655273
    4. 'mod' → logprob: -12.188329696655273
    5. '	ans' → logprob: -12.938329696655273
    6. ' mod' → logprob: -13.188329696655273
    7. '_ans' → logprob: -13.313329696655273
    8. 'maint' → logprob: -14.063329696655273
    9. 'rest' → logprob: -15.313329696655273
    10. '```' → logprob: -15.313329696655273

Token 841: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20782840251922607
    2. 'mod' → logprob: -2.3328285217285156
    3. ' ans' → logprob: -2.5828285217285156
    4. ' mod' → logprob: -4.207828521728516
    5. '(ans' → logprob: -8.832828521728516
    6. '```' → logprob: -10.707828521728516
    7. '(mod' → logprob: -11.582828521728516
    8. '100' → logprob: -12.457828521728516
    9. ' ' → logprob: -12.707828521728516
    10. ' ' → logprob: -13.332828521728516

Token 842: ' dépasse' (ID: 165701)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.16615048050880432
    2. 'ans' → logprob: -2.2911505699157715
    3. ' overflow' → logprob: -3.4161505699157715
    4. ' mod' → logprob: -4.4161505699157715
    5. 'mod' → logprob: -5.6661505699157715
    6. '```' → logprob: -6.6661505699157715
    7. 'overflow' → logprob: -7.0411505699157715
    8. '=' → logprob: -7.7911505699157715
    9. ' ' → logprob: -8.291150093078613
    10. ' =' → logprob: -8.541150093078613

Token 843: 'ment' (ID: 508)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4556584060192108
    2. 'ent' → logprob: -1.8306584358215332
    3. 'mod' → logprob: -2.830658435821533
    4. 'ement' → logprob: -2.955658435821533
    5. 'ment' → logprob: -3.580658435821533
    6. 'ant' → logprob: -3.955658435821533
    7. 'pas' → logprob: -4.455658435821533
    8. 'f' → logprob: -4.705658435821533
    9. '(ans' → logprob: -5.205658435821533
    10. 's' → logprob: -6.455658435821533

Token 844: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.843643844127655
    2. 'mod' → logprob: -1.3436439037322998
    3. '(ans' → logprob: -1.3436439037322998
    4. '(mod' → logprob: -3.0936439037323
    5. ' ans' → logprob: -6.218643665313721
    6. ' mod' → logprob: -7.468643665313721
    7. '_ans' → logprob: -10.093644142150879
    8. '
' → logprob: -10.468644142150879
    9. '	ans' → logprob: -10.968644142150879
    10. '(' → logprob: -11.218644142150879

Token 845: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07585443556308746
    2. ' ans' → logprob: -3.075854539871216
    3. 'mod' → logprob: -3.700854539871216
    4. ' mod' → logprob: -6.700854301452637
    5. '(ans' → logprob: -7.200854301452637
    6. '=' → logprob: -9.200854301452637
    7. ' =' → logprob: -9.825854301452637
    8. '```' → logprob: -10.575854301452637
    9. '_ans' → logprob: -11.575854301452637
    10. '	ans' → logprob: -11.825854301452637

Token 846: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.006726264487951994
    2. ' ans' → logprob: -5.006726264953613
    3. '(ans' → logprob: -11.881726264953613
    4. 'mod' → logprob: -12.631726264953613
    5. '	ans' → logprob: -14.381726264953613
    6. ' mod' → logprob: -16.881725311279297
    7. '_ans' → logprob: -17.006725311279297
    8. 'answer' → logprob: -17.006725311279297
    9. '
' → logprob: -17.131725311279297
    10. '```' → logprob: -17.881725311279297

Token 847: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -8.983476436696947e-05
    2. ' %=' → logprob: -10.000089645385742
    3. '%' → logprob: -10.125089645385742
    4. '=' → logprob: -12.375089645385742
    5. '```' → logprob: -19.750089645385742
    6. '//=' → logprob: -20.000089645385742
    7. '#' → logprob: -20.000089645385742
    8. '\' → logprob: -20.125089645385742
    9. ')%' → logprob: -20.375089645385742
    10. ' ' → logprob: -20.375089645385742

Token 848: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.512236498361744e-07
    2. ' mod' → logprob: -14.500000953674316
    3. '100' → logprob: -20.25
    4. '(mod' → logprob: -21.25
    5. '	mod' → logprob: -22.125
    6. '```' → logprob: -24.0
    7. 'MOD' → logprob: -24.625
    8. '_mod' → logprob: -25.25
    9. ' мод' → logprob: -25.625
    10. 'Mod' → logprob: -26.375

Token 849: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001907855912577361
    2. 'ans' → logprob: -9.125190734863281
    3. '<|end|>' → logprob: -10.000190734863281
    4. '```' → logprob: -10.750190734863281
    5. '#' → logprob: -11.875190734863281
    6. 'return' → logprob: -12.875190734863281
    7. ' print' → logprob: -12.875190734863281
    8. '#print' → logprob: -13.625190734863281
    9. ')' → logprob: -13.625190734863281
    10. '`' → logprob: -15.500190734863281

Token 850: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.25
    3. ' print' → logprob: -17.5
    4. '#print' → logprob: -20.625
    5. '
' → logprob: -21.375
    6. '#' → logprob: -21.5
    7. '``' → logprob: -21.625
    8. '(print' → logprob: -23.625
    9. '`' → logprob: -23.875
    10. '-print' → logprob: -24.125

Token 851: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.5
    3. '```' → logprob: -21.375
    4. '#print' → logprob: -21.5
    5. '
' → logprob: -24.375
    6. '#' → logprob: -24.5
    7. 'printf' → logprob: -27.0
    8. 'Print' → logprob: -27.125
    9. '-print' → logprob: -27.5
    10. '  
' → logprob: -28.125

Token 852: 'iche' (ID: 7509)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0025577545166016
    2. 'f' → logprob: -1.0025577545166016
    3. 'ichage' → logprob: -1.6275577545166016
    4. 'icher' → logprob: -3.3775577545166016
    5. 'iche' → logprob: -4.002557754516602
    6. 'fic' → logprob: -4.502557754516602
    7. 'ich' → logprob: -5.877557754516602
    8. 'print' → logprob: -6.252557754516602
    9. 'ic' → logprob: -7.627557754516602
    10. '```' → logprob: -8.502557754516602

Token 853: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012356207298580557
    2. 'ans' → logprob: -9.000123977661133
    3. '(' → logprob: -17.000123977661133
    4. '	ans' → logprob: -19.625123977661133
    5. '(answer' → logprob: -20.625123977661133
    6. ' ans' → logprob: -20.875123977661133
    7. 'print' → logprob: -22.250123977661133
    8. '(abs' → logprob: -22.625123977661133
    9. ' (' → logprob: -23.000123977661133
    10. '(
' → logprob: -23.125123977661133

Token 854: ' réponse' (ID: 50332)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.16022665798664093
    2. 'ans' → logprob: -1.9102267026901245
    3. 'result' → logprob: -13.285226821899414
    4. ' ans' → logprob: -14.910226821899414
    5. '	ans' → logprob: -15.410226821899414
    6. 'answer' → logprob: -15.785226821899414
    7. '_ans' → logprob: -17.160226821899414
    8. '(result' → logprob: -17.410226821899414
    9. '(' → logprob: -17.410226821899414
    10. '(answer' → logprob: -17.535226821899414

Token 855: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. '(print' → logprob: -17.5
    4. ' print' → logprob: -18.875
    5. '
' → logprob: -20.25
    6. 'ans' → logprob: -20.625
    7. '(' → logprob: -21.5
    8. '``' → logprob: -21.625
    9. '#print' → logprob: -22.5
    10. 'prints' → logprob: -22.875

Token 856: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.375
    3. '(print' → logprob: -19.375
    4. '```' → logprob: -19.75
    5. '
' → logprob: -20.875
    6. 'ans' → logprob: -20.875
    7. '#print' → logprob: -23.375
    8. 'prints' → logprob: -23.625
    9. '.print' → logprob: -24.0
    10. '(ans' → logprob: -24.0

Token 857: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.576873758807778e-05
    2. 'ans' → logprob: -9.500075340270996
    3. '(ans' → logprob: -14.000075340270996
    4. ' print' → logprob: -17.250076293945312
    5. '```' → logprob: -20.625076293945312
    6. ' ans' → logprob: -20.875076293945312
    7. '(print' → logprob: -21.375076293945312
    8. 'answer' → logprob: -22.000076293945312
    9. '(' → logprob: -22.500076293945312
    10. '#print' → logprob: -23.375076293945312

Token 858: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020946713164448738
    2. ' print' → logprob: -4.895946502685547
    3. '```' → logprob: -5.270946502685547
    4. ' =' → logprob: -6.020946502685547
    5. 'est' → logprob: -6.020946502685547
    6. '=' → logprob: -7.020946502685547
    7. '#' → logprob: -7.520946502685547
    8. ' est' → logprob: -7.895946502685547
    9. 's' → logprob: -8.145946502685547
    10. 'mod' → logprob: -8.270946502685547

Token 859: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004078878089785576
    2. '(ans' → logprob: -5.5040788650512695
    3. ' ans' → logprob: -15.00407886505127
    4. 'print' → logprob: -16.629079818725586
    5. '	ans' → logprob: -17.629079818725586
    6. 'answer' → logprob: -19.879079818725586
    7. '```' → logprob: -20.004079818725586
    8. '(' → logprob: -20.629079818725586
    9. 'ann' → logprob: -21.629079818725586
    10. 'anst' → logprob: -22.129079818725586

Token 860: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0019048431422561407
    2. 'result' → logprob: -6.8769049644470215
    3. 'nombre' → logprob: -7.1269049644470215
    4. 'answer' → logprob: -10.501904487609863
    5. 'rés' → logprob: -10.626904487609863
    6. 'print' → logprob: -12.001904487609863
    7. 'res' → logprob: -12.126904487609863
    8. '(ans' → logprob: -13.376904487609863
    9. '```' → logprob: -13.626904487609863
    10. 'total' → logprob: -14.876904487609863

Token 861: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.049429479986429214
    2. '(ans' → logprob: -3.049429416656494
    3. '(print' → logprob: -7.674429416656494
    4. '(' → logprob: -8.174429893493652
    5. 'ans' → logprob: -9.299429893493652
    6. '```' → logprob: -12.799429893493652
    7. ' print' → logprob: -14.549429893493652
    8. '(answer' → logprob: -15.299429893493652
    9. ')' → logprob: -15.924429893493652
    10. '#' → logprob: -16.049428939819336

Token 862: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018153922632336617
    2. 'ans' → logprob: -4.018154144287109
    3. '(ans' → logprob: -12.76815414428711
    4. '```' → logprob: -14.39315414428711
    5. 'sum' → logprob: -15.51815414428711
    6. 'answer' → logprob: -15.64315414428711
    7. 'pr' → logprob: -16.01815414428711
    8. ' print' → logprob: -16.64315414428711
    9. ' ans' → logprob: -17.89315414428711
    10. 'prin' → logprob: -18.51815414428711

Token 863: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016505412058904767
    2. '(ans' → logprob: -7.001650333404541
    3. '(print' → logprob: -7.251650333404541
    4. '(' → logprob: -10.5016508102417
    5. '```' → logprob: -13.7516508102417
    6. 'ans' → logprob: -13.7516508102417
    7. ' print' → logprob: -16.626649856567383
    8. '(answer' → logprob: -18.001649856567383
    9. '#print' → logprob: -18.876649856567383
    10. '
' → logprob: -19.251649856567383

Token 864: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.000000953674316
    3. ' print' → logprob: -20.5
    4. '``' → logprob: -21.75
    5. '
' → logprob: -25.375
    6. '#print' → logprob: -25.5
    7. '(print' → logprob: -26.0
    8. '	print' → logprob: -26.375
    9. 'prints' → logprob: -26.5
    10. 'println' → logprob: -27.25

Token 865: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.935296834039036e-06
    2. 'ans' → logprob: -13.00000286102295
    3. '(' → logprob: -14.37500286102295
    4. '(answer' → logprob: -19.375003814697266
    5. '	ans' → logprob: -19.500003814697266
    6. ' (' → logprob: -19.625003814697266
    7. '(
' → logprob: -19.750003814697266
    8. '((' → logprob: -20.500003814697266
    9. ' ans' → logprob: -21.000003814697266
    10. '()' → logprob: -22.125003814697266

Token 866: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')`' → logprob: -13.875001907348633
    3. '))' → logprob: -14.625001907348633
    4. ' )' → logprob: -16.125001907348633
    5. '()' → logprob: -17.125001907348633
    6. '())' → logprob: -17.625001907348633
    7. '+' → logprob: -17.875001907348633
    8. ')}' → logprob: -18.125001907348633
    9. '```' → logprob: -18.750001907348633
    10. ')")' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 864
Tokens correctement prédits (1ère position, stricte): 183
Tokens correctement prédits (1ère position, avec adaptation): 193
Tokens correctement prédits (top 10): 426
Précision stricte (1ère position): 21.18%
Précision adaptée (1ère position): 22.34%
Précision (top 10): 49.31%
================================================================================
