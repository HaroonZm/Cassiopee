================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
mod = 1000000007

n = int(input())
c = [int(x) for x in input().split()]
c = sorted(c, reverse=True) # On veut du plus grand au plus petit

resultat = 0
i = 0
for num in c:
    contrib = (i + 2) * num
    resultat += contrib
    resultat = resultat % mod
    i += 1

# Ok, là on fait un genre de double exponentiation chelou
mult_times = 2 * n - 2
for j in range(mult_times):
    resultat = (resultat * 2) % mod # pas d'autre idée que de le faire en boucle

print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mod' (ID: 4847)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6329225897789001
    2. 'math' → logprob: -2.257922649383545
    3. '1' → logprob: -2.757922649383545
    4. '100' → logprob: -3.007922649383545
    5. '42' → logprob: -3.382922649383545
    6. '__' → logprob: -3.382922649383545
    7. '123' → logprob: -3.632922649383545
    8. ' ' → logprob: -3.882922649383545
    9. 'torch' → logprob: -4.132922649383545
    10. 'pow' → logprob: -4.507922649383545

Token 4: '000' (ID: 1302)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3373270630836487
    2. '*' → logprob: -1.462327003479004
    3. '```' → logprob: -3.712327003479004
    4. '%' → logprob: -4.712327003479004
    5. '\' → logprob: -4.837327003479004
    6. '\n' → logprob: -5.087327003479004
    7. '+' → logprob: -5.587327003479004
    8. '0' → logprob: -6.962327003479004
    9. '#' → logprob: -7.087327003479004
    10. '`' → logprob: -7.712327003479004

Token 5: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8164578080177307
    2. '+' → logprob: -1.816457748413086
    3. '```' → logprob: -1.816457748413086
    4. '**' → logprob: -1.941457748413086
    5. '*' → logprob: -3.316457748413086
    6. '\n' → logprob: -4.316457748413086
    7. '_' → logprob: -4.441457748413086
    8. '1' → logprob: -4.691457748413086
    9. '\' → logprob: -5.066457748413086
    10. '`' → logprob: -5.816457748413086

Token 6: '7' (ID: 22)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00754593126475811
    2. '+' → logprob: -5.1325459480285645
    3. '```' → logprob: -7.8825459480285645
    4. '*' → logprob: -8.007545471191406
    5. '1' → logprob: -8.132545471191406
    6. ';' → logprob: -9.132545471191406
    7. '7' → logprob: -9.257545471191406
    8. '\n' → logprob: -9.257545471191406
    9. '**' → logprob: -9.507545471191406
    10. '_' → logprob: -9.882545471191406

Token 7: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8061032295227051
    2. '*' → logprob: -1.306103229522705
    3. '**' → logprob: -2.306103229522705
    4. '\' → logprob: -2.681103229522705
    5. '\n' → logprob: -2.806103229522705
    6. '`' → logprob: -3.806103229522705
    7. '+' → logprob: -4.056103229522705
    8. ',' → logprob: -5.431103229522705
    9. '#' → logprob: -6.181103229522705
    10. '
' → logprob: -6.306103229522705

Token 8: 'n' (ID: 77)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4297301173210144
    2. '\n' → logprob: -1.9297301769256592
    3. '
' → logprob: -3.179730176925659
    4. '**' → logprob: -3.179730176925659
    5. '\' → logprob: -3.304730176925659
    6. '*' → logprob: -3.804730176925659
    7. '+' → logprob: -4.42972993850708
    8. '`' → logprob: -4.55472993850708
    9. ',' → logprob: -4.80472993850708
    10. ')' → logprob: -4.92972993850708

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761858820915222
    2. '_' → logprob: -1.451185941696167
    3. ' =' → logprob: -2.326185941696167
    4. ')' → logprob: -3.951185941696167
    5. '*' → logprob: -3.951185941696167
    6. '#' → logprob: -4.326185703277588
    7. ' ' → logprob: -4.326185703277588
    8. '-' → logprob: -4.451185703277588
    9. '+' → logprob: -4.826185703277588
    10. '%' → logprob: -5.451185703277588

Token 10: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22868503630161285
    2. ' int' → logprob: -1.7286850214004517
    3. 'int' → logprob: -4.353684902191162
    4. '10' → logprob: -4.353684902191162
    5. '1' → logprob: -7.603684902191162
    6. '0' → logprob: -8.60368537902832
    7. '5' → logprob: -8.85368537902832
    8. ' n' → logprob: -8.97868537902832
    9. '100' → logprob: -8.97868537902832
    10. ' input' → logprob: -10.47868537902832

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003969455719925463
    2. '(input' → logprob: -8.500396728515625
    3. '('' → logprob: -9.625396728515625
    4. '(n' → logprob: -10.125396728515625
    5. ' (' → logprob: -11.250396728515625
    6. '(
' → logprob: -11.750396728515625
    7. ')' → logprob: -11.875396728515625
    8. '()' → logprob: -11.875396728515625
    9. '(`' → logprob: -12.000396728515625
    10. '(code' → logprob: -12.375396728515625

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07130705565214157
    2. '()' → logprob: -3.1963069438934326
    3. '(' → logprob: -4.196307182312012
    4. '())' → logprob: -4.446307182312012
    5. '))' → logprob: -7.446307182312012
    6. '`)' → logprob: -8.196307182312012
    7. '')' → logprob: -9.196307182312012
    8. '")' → logprob: -9.821307182312012
    9. '```' → logprob: -10.571307182312012
    10. '(
' → logprob: -10.946307182312012

Token 13: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4188578724861145
    2. 'fact' → logprob: -1.7938578128814697
    3. 'arr' → logprob: -2.1688578128814697
    4. 'result' → logprob: -3.9188578128814697
    5. 'factor' → logprob: -4.043858051300049
    6. 'dp' → logprob: -4.418858051300049
    7. 'fib' → logprob: -6.168858051300049
    8. 's' → logprob: -6.418858051300049
    9. 'data' → logprob: -6.543858051300049
    10. 'f' → logprob: -6.668858051300049

Token 14: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.43113017082214355
    2. ' =' → logprob: -1.3061301708221436
    3. 'o' → logprob: -3.5561301708221436
    4. 'nt' → logprob: -3.6811301708221436
    5. 'ounter' → logprob: -4.931130409240723
    6. '=' → logprob: -5.681130409240723
    7. 'ont' → logprob: -5.806130409240723
    8. 'ounters' → logprob: -6.681130409240723
    9. 'h' → logprob: -6.931130409240723
    10. 'nts' → logprob: -6.931130409240723

Token 15: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2721536457538605
    2. '[' → logprob: -1.522153615951538
    3. ' []' → logprob: -5.647153854370117
    4. '[int' → logprob: -5.647153854370117
    5. '[n' → logprob: -5.647153854370117
    6. '0' → logprob: -5.772153854370117
    7. '[input' → logprob: -6.272153854370117
    8. '[]' → logprob: -6.397153854370117
    9. ' {}' → logprob: -7.397153854370117
    10. 'list' → logprob: -7.647153854370117

Token 16: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2024540901184082
    2. '0' → logprob: -1.7024540901184082
    3. ']int' → logprob: -7.452454090118408
    4. ']' → logprob: -8.57745361328125
    5. '(int' → logprob: -9.32745361328125
    6. ' int' → logprob: -9.57745361328125
    7. ')' → logprob: -10.07745361328125
    8. 'map' → logprob: -10.95245361328125
    9. '[int' → logprob: -11.20245361328125
    10. '1' → logprob: -11.32745361328125

Token 17: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4006565809249878
    2. '(input' → logprob: -1.1506565809249878
    3. '()' → logprob: -5.150656700134277
    4. '()]' → logprob: -5.400656700134277
    5. '(x' → logprob: -5.900656700134277
    6. '(i' → logprob: -8.275656700134277
    7. ']' → logprob: -8.525656700134277
    8. ')' → logprob: -10.275656700134277
    9. '())' → logprob: -10.650656700134277
    10. '(a' → logprob: -11.150656700134277

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011387081816792488
    2. '())' → logprob: -4.511386871337891
    3. '()' → logprob: -8.88638687133789
    4. '(input' → logprob: -9.51138687133789
    5. ')]' → logprob: -10.01138687133789
    6. 'input' → logprob: -10.13638687133789
    7. ' )' → logprob: -11.01138687133789
    8. '(' → logprob: -11.13638687133789
    9. ')])' → logprob: -12.01138687133789
    10. '(x' → logprob: -14.26138687133789

Token 19: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.9860242605209351
    2. ')' → logprob: -1.111024260520935
    3. 'input' → logprob: -1.486024260520935
    4. 'for' → logprob: -2.7360243797302246
    5. ' for' → logprob: -5.861024379730225
    6. '=input' → logprob: -6.736024379730225
    7. ' input' → logprob: -7.361024379730225
    8. '(x' → logprob: -7.861024379730225
    9. ']' → logprob: -7.986024379730225
    10. ')]' → logprob: -7.986024379730225

Token 20: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07940028607845306
    2. 'input' → logprob: -2.5794003009796143
    3. '=input' → logprob: -8.704400062561035
    4. '(input' → logprob: -9.204400062561035
    5. '_input' → logprob: -9.829400062561035
    6. '<|end|>' → logprob: -9.954400062561035
    7. ' x' → logprob: -10.204400062561035
    8. ' range' → logprob: -10.454400062561035
    9. ' ' → logprob: -10.579400062561035
    10. '<|end|>' → logprob: -11.204400062561035

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025082536041736603
    2. 'input' → logprob: -4.025082588195801
    3. 'in' → logprob: -5.275082588195801
    4. '(input' → logprob: -6.900082588195801
    5. ' input' → logprob: -7.775082588195801
    6. '=input' → logprob: -8.6500825881958
    7. ' ' → logprob: -10.4000825881958
    8. ',input' → logprob: -10.5250825881958
    9. '.' → logprob: -10.7750825881958
    10. 'import' → logprob: -10.9000825881958

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0181527491658926
    2. ' input' → logprob: -4.018152713775635
    3. 'range' → logprob: -12.893153190612793
    4. '(input' → logprob: -15.393153190612793
    5. ' range' → logprob: -16.518152236938477
    6. '=input' → logprob: -17.268152236938477
    7. ' ' → logprob: -17.768152236938477
    8. '<input' → logprob: -17.768152236938477
    9. ',input' → logprob: -18.268152236938477
    10. '	input' → logprob: -18.893152236938477

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008286866941489279
    2. '()' → logprob: -7.250828742980957
    3. '()]' → logprob: -9.250828742980957
    4. '())' → logprob: -10.875828742980957
    5. '(' → logprob: -12.750828742980957
    6. '()].' → logprob: -14.875828742980957
    7. 'split' → logprob: -15.750828742980957
    8. '()[' → logprob: -16.25082778930664
    9. '.split' → logprob: -16.75082778930664
    10. '()][' → logprob: -17.12582778930664

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.672236824873835e-05
    2. 'strip' → logprob: -9.500076293945312
    3. 'rstrip' → logprob: -13.375076293945312
    4. ' split' → logprob: -15.875076293945312
    5. 'spl' → logprob: -16.875076293945312
    6. '(split' → logprob: -17.250076293945312
    7. 's' → logprob: -19.500076293945312
    8. 'sp' → logprob: -21.000076293945312
    9. 'replace' → logprob: -21.000076293945312
    10. '.split' → logprob: -21.125076293945312

Token 25: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.010396800003945827
    2. '())' → logprob: -5.010396957397461
    3. '()' → logprob: -6.385396957397461
    4. ')]' → logprob: -6.635396957397461
    5. '(' → logprob: -7.760396957397461
    6. ']' → logprob: -8.385396957397461
    7. '`]' → logprob: -11.885396957397461
    8. ')' → logprob: -12.635396957397461
    9. '('' → logprob: -13.010396957397461
    10. '')]' → logprob: -13.010396957397461

Token 26: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32593029737472534
    2. 'dp' → logprob: -1.7009303569793701
    3. 's' → logprob: -2.82593035697937
    4. 'd' → logprob: -4.200930118560791
    5. 'a' → logprob: -5.575930118560791
    6. 'f' → logprob: -5.575930118560791
    7. 'count' → logprob: -5.950930118560791
    8. 'result' → logprob: -6.325930118560791
    9. 'p' → logprob: -6.700930118560791
    10. 'prefix' → logprob: -7.200930118560791

Token 27: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48558124899864197
    2. '[' → logprob: -0.9855812788009644
    3. '<|end|>' → logprob: -5.235581398010254
    4. '[:]' → logprob: -5.985581398010254
    5. '```' → logprob: -6.610581398010254
    6. '\[' → logprob: -8.110581398010254
    7. '[
' → logprob: -8.110581398010254
    8. '<|end|>' → logprob: -8.235581398010254
    9. ']' → logprob: -8.860581398010254
    10. '[::-' → logprob: -8.985581398010254

Token 28: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.4537642002105713
    2. 'sorted' → logprob: -1.5787642002105713
    3. ' [' → logprob: -2.5787642002105713
    4. ' c' → logprob: -3.0787642002105713
    5. '[' → logprob: -3.8287642002105713
    6. 'c' → logprob: -5.078763961791992
    7. ' list' → logprob: -5.078763961791992
    8. 'list' → logprob: -6.578763961791992
    9. '[c' → logprob: -7.453763961791992
    10. ' ' → logprob: -8.578763961791992

Token 29: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.029754657298326492
    2. '(' → logprob: -3.529754638671875
    3. ' (' → logprob: -13.779754638671875
    4. '((' → logprob: -14.279754638671875
    5. '(
' → logprob: -14.654754638671875
    6. '()' → logprob: -14.904754638671875
    7. '(lambda' → logprob: -14.904754638671875
    8. '(count' → logprob: -15.529754638671875
    9. '(C' → logprob: -15.779754638671875
    10. '(list' → logprob: -16.154754638671875

Token 30: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005555360112339258
    2. ',' → logprob: -8.375555992126465
    3. '(' → logprob: -9.000555992126465
    4. '())' → logprob: -9.250555992126465
    5. ')c' → logprob: -10.250555992126465
    6. '(c' → logprob: -10.875555992126465
    7. '()' → logprob: -11.000555992126465
    8. '))' → logprob: -11.375555992126465
    9. ' )' → logprob: -11.750555992126465
    10. ')
' → logprob: -12.500555992126465

Token 31: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.6348780393600464
    2. ' reverse' → logprob: -0.7598780393600464
    3. ')' → logprob: -6.384878158569336
    4. ' )' → logprob: -8.509878158569336
    5. '(reverse' → logprob: -8.759878158569336
    6. ' key' → logprob: -8.884878158569336
    7. 'key' → logprob: -10.259878158569336
    8. ' ' → logprob: -10.884878158569336
    9. 're' → logprob: -11.634878158569336
    10. '.reverse' → logprob: -12.009878158569336

Token 32: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0031070110853761435
    2. '=' → logprob: -5.878107070922852
    3. '(' → logprob: -8.878107070922852
    4. '(True' → logprob: -9.753107070922852
    5. ')' → logprob: -9.878107070922852
    6. '=False' → logprob: -10.503107070922852
    7. '())' → logprob: -11.003107070922852
    8. ')=' → logprob: -12.628107070922852
    9. '()' → logprob: -12.878107070922852
    10. '=(' → logprob: -13.878107070922852

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ']' → logprob: -12.875008583068848
    3. '))' → logprob: -13.250008583068848
    4. ')
' → logprob: -13.500008583068848
    5. ' )' → logprob: -13.500008583068848
    6. '`)' → logprob: -14.625008583068848
    7. '])' → logprob: -15.125008583068848
    8. ')c' → logprob: -15.750008583068848
    9. ')]' → logprob: -16.000009536743164
    10. '[' → logprob: -16.250009536743164

Token 34: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9311183094978333
    2. ' ans' → logprob: -1.1811182498931885
    3. 'ans' → logprob: -2.8061182498931885
    4. ')' → logprob: -3.0561182498931885
    5. '(' → logprob: -3.1811182498931885
    6. '
' → logprob: -3.4311182498931885
    7. 'result' → logprob: -3.5561182498931885
    8. 'for' → logprob: -4.056118488311768
    9. 's' → logprob: -4.681118488311768
    10. '[' → logprob: -5.181118488311768

Token 35: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3720363974571228
    2. ' for' → logprob: -1.3720364570617676
    3. 'for' → logprob: -2.8720364570617676
    4. '[' → logprob: -9.24703598022461
    5. ' ,' → logprob: -9.87203598022461
    6. ',' → logprob: -10.24703598022461
    7. ' ' → logprob: -10.49703598022461
    8. ')' → logprob: -10.62203598022461
    9. '<|end|>' → logprob: -10.74703598022461
    10. ' )' → logprob: -10.87203598022461

Token 36: ' veut' (ID: 41653)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0026030067820101976
    2. 'ly' → logprob: -6.377603054046631
    3. ' e' → logprob: -7.377603054046631
    4. 'ce' → logprob: -9.627602577209473
    5. 'c' → logprob: -9.877602577209473
    6. 'el' → logprob: -10.252602577209473
    7. 'es' → logprob: -10.627602577209473
    8. ' the' → logprob: -10.752602577209473
    9. '(e' → logprob: -10.752602577209473
    10. ' each' → logprob: -11.502602577209473

Token 37: ' du' (ID: 1462)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5220587253570557
    2. ' s' → logprob: -2.3970587253570557
    3. ' ' → logprob: -2.5220587253570557
    4. ' garantir' → logprob: -2.6470587253570557
    5. ' vérifier' → logprob: -3.1470587253570557
    6. 's' → logprob: -4.397058486938477
    7. ' calcul' → logprob: -4.397058486938477
    8. 'v' → logprob: -4.647058486938477
    9. ' that' → logprob: -4.772058486938477
    10. 'que' → logprob: -4.897058486938477

Token 38: ' plus' (ID: 2932)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.0259901285171509
    2. ' strictly' → logprob: -1.4009901285171509
    3. ' non' → logprob: -2.2759900093078613
    4. ' code' → logprob: -2.9009900093078613
    5. ' tri' → logprob: -3.2759900093078613
    6. 'descending' → logprob: -3.4009900093078613
    7. ' strict' → logprob: -3.5259900093078613
    8. ' descending' → logprob: -3.9009900093078613
    9. 'tri' → logprob: -4.525990009307861
    10. ' decreasing' → logprob: -4.650990009307861

Token 39: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.08958947658538818
    2. ' grand' → logprob: -2.4645895957946777
    3. 'pet' → logprob: -7.964589595794678
    4. 'gr' → logprob: -9.96458911895752
    5. '```' → logprob: -9.96458911895752
    6. 'large' → logprob: -10.21458911895752
    7. 'gran' → logprob: -10.46458911895752
    8. '-grand' → logprob: -10.58958911895752
    9. 'Grand' → logprob: -10.71458911895752
    10. '<|end|>' → logprob: -11.46458911895752

Token 40: ' au' (ID: 2791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6347235441207886
    2. ' for' → logprob: -1.5097235441207886
    3. ' ' → logprob: -1.8847235441207886
    4. ')' → logprob: -3.009723663330078
    5. ',' → logprob: -4.009723663330078
    6. '<|end|>' → logprob: -4.259723663330078
    7. 's' → logprob: -5.759723663330078
    8. '_' → logprob: -6.134723663330078
    9. '
' → logprob: -6.634723663330078
    10. 'd' → logprob: -6.884723663330078

Token 41: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.04131997376680374
    2. ' plus' → logprob: -3.2913200855255127
    3. 'prem' → logprob: -7.291319847106934
    4. 'grand' → logprob: -7.291319847106934
    5. '_plus' → logprob: -7.666319847106934
    6. 'pet' → logprob: -8.041319847106934
    7. ' ' → logprob: -8.541319847106934
    8. 'c' → logprob: -8.666319847106934
    9. 'pl' → logprob: -8.791319847106934
    10. 'p' → logprob: -8.916319847106934

Token 42: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0030169226229190826
    2. '```' → logprob: -7.003016948699951
    3. 'grand' → logprob: -7.253016948699951
    4. ' petit' → logprob: -7.628016948699951
    5. 'small' → logprob: -8.128016471862793
    6. 'pit' → logprob: -8.128016471862793
    7. 'prem' → logprob: -9.253016471862793
    8. 'pu' → logprob: -9.503016471862793
    9. 'pe' → logprob: -10.628016471862793
    10. 'près' → logprob: -10.753016471862793

Token 43: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.548589289188385
    2. ' for' → logprob: -1.2985892295837402
    3. '
' → logprob: -2.0485892295837402
    4. '<|end|>' → logprob: -4.92358922958374
    5. 's' → logprob: -5.79858922958374
    6. ' 
' → logprob: -5.92358922958374
    7. ')' → logprob: -6.04858922958374
    8. ',' → logprob: -6.79858922958374
    9. '\n' → logprob: -7.54858922958374
    10. '```' → logprob: -7.92358922958374

Token 44: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9847337603569031
    2. 'answer' → logprob: -1.2347338199615479
    3. 'res' → logprob: -2.359733819961548
    4. 'for' → logprob: -2.484733819961548
    5. 'ans' → logprob: -2.609733819961548
    6. 'total' → logprob: -3.234733819961548
    7. 'count' → logprob: -4.234733581542969
    8. 'dp' → logprob: -4.609733581542969
    9. 'diff' → logprob: -5.859733581542969
    10. 's' → logprob: -5.984733581542969

Token 45: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17516407370567322
    2. '=' → logprob: -1.9251641035079956
    3. '_' → logprob: -4.550164222717285
    4. 's' → logprob: -5.675164222717285
    5. ' +=' → logprob: -8.300164222717285
    6. ' *=' → logprob: -8.425164222717285
    7. '[' → logprob: -8.925164222717285
    8. '[]' → logprob: -10.425164222717285
    9. 'space' → logprob: -10.425164222717285
    10. ')' → logprob: -11.050164222717285

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09613768011331558
    2. '=' → logprob: -2.471137762069702
    3. ' *=' → logprob: -5.221137523651123
    4. '_' → logprob: -6.971137523651123
    5. '[' → logprob: -8.346138000488281
    6. ' +=' → logprob: -8.346138000488281
    7. 's' → logprob: -9.596138000488281
    8. '*' → logprob: -9.721138000488281
    9. ' ' → logprob: -9.971138000488281
    10. '[]' → logprob: -10.846138000488281

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030984506011009216
    2. ' ' → logprob: -5.878098487854004
    3. '0' → logprob: -8.253098487854004
    4. 'c' → logprob: -10.628098487854004
    5. ' c' → logprob: -12.628098487854004
    6. 'mod' → logprob: -13.003098487854004
    7. '   ' → logprob: -13.753098487854004
    8. '(' → logprob: -14.378098487854004
    9. '```' → logprob: -15.128098487854004
    10. '100' → logprob: -15.628098487854004

Token 48: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023500648967456073
    2. '0' → logprob: -8.625234603881836
    3. ' ' → logprob: -10.375234603881836
    4. 'c' → logprob: -10.750234603881836
    5. '(' → logprob: -14.125234603881836
    6. 'mod' → logprob: -14.750234603881836
    7. 'pow' → logprob: -14.750234603881836
    8. '```' → logprob: -14.875234603881836
    9. 'result' → logprob: -15.250234603881836
    10. '100' → logprob: -15.500234603881836

Token 49: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10006237030029297
    2. ' for' → logprob: -2.475062370300293
    3. '
' → logprob: -5.225062370300293
    4. ' 
' → logprob: -5.725062370300293
    5. 'i' → logprob: -7.350062370300293
    6. ' ' → logprob: -7.600062370300293
    7. '' → logprob: -8.350062370300293
    8. 'f' → logprob: -8.475062370300293
    9. '*' → logprob: -8.850062370300293
    10. ',' → logprob: -8.975062370300293

Token 50: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051286473870277405
    2. ' for' → logprob: -3.426286458969116
    3. 'p' → logprob: -5.551286697387695
    4. 'pow' → logprob: -5.676286697387695
    5. 'i' → logprob: -5.926286697387695
    6. 'power' → logprob: -6.426286697387695
    7. 'factor' → logprob: -6.801286697387695
    8. 'current' → logprob: -6.926286697387695
    9. 'mult' → logprob: -7.301286697387695
    10. 'f' → logprob: -7.426286697387695

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29828161001205444
    2. '=' → logprob: -1.7982816696166992
    3. ' ' → logprob: -2.548281669616699
    4. '+' → logprob: -4.923281669616699
    5. ' +=' → logprob: -5.548281669616699
    6. 'n' → logprob: -6.673281669616699
    7. 'for' → logprob: -8.2982816696167
    8. 's' → logprob: -8.2982816696167
    9. '+=' → logprob: -8.2982816696167
    10. ' +' → logprob: -8.9232816696167

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015169292688369751
    2. '1' → logprob: -4.890169143676758
    3. ' ' → logprob: -4.890169143676758
    4. '2' → logprob: -11.640169143676758
    5. 'n' → logprob: -13.515169143676758
    6. '-' → logprob: -13.515169143676758
    7. ' -' → logprob: -14.515169143676758
    8. ' n' → logprob: -14.640169143676758
    9. 'len' → logprob: -14.765169143676758
    10. '<|end|>' → logprob: -14.765169143676758

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023837340995669365
    2. '1' → logprob: -6.127383708953857
    3. 'n' → logprob: -9.377384185791016
    4. ' ' → logprob: -9.627384185791016
    5. '-' → logprob: -10.752384185791016
    6. '2' → logprob: -11.377384185791016
    7. 'len' → logprob: -11.627384185791016
    8. 'i' → logprob: -14.064884185791016
    9. '(n' → logprob: -14.627384185791016
    10. 'range' → logprob: -14.877384185791016

Token 54: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.46229058504104614
    2. '
' → logprob: -1.7122905254364014
    3. ' while' → logprob: -2.2122905254364014
    4. ' ' → logprob: -3.5872905254364014
    5. ' 
' → logprob: -3.7122905254364014
    6. ',' → logprob: -4.9622907638549805
    7. '<|end|>' → logprob: -5.2122907638549805
    8. 'for' → logprob: -5.5872907638549805
    9. '' → logprob: -5.7122907638549805
    10. ':' → logprob: -6.5872907638549805

Token 55: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6414098739624023
    2. 'while' → logprob: -1.3914098739624023
    3. ' ' → logprob: -2.6414098739624023
    4. '<|end|>' → logprob: -2.7664098739624023
    5. ' 
' → logprob: -3.3914098739624023
    6. ' while' → logprob: -3.7664098739624023
    7. ',' → logprob: -4.516409873962402
    8. ':' → logprob: -5.141409873962402
    9. 'for' → logprob: -5.891409873962402
    10. ' ,' → logprob: -6.641409873962402

Token 56: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4018455147743225
    2. ' c' → logprob: -1.7768454551696777
    3. ' ' → logprob: -1.9018454551696777
    4. ' in' → logprob: -5.901845455169678
    5. 'i' → logprob: -6.651845455169678
    6. ' _' → logprob: -6.776845455169678
    7. ' val' → logprob: -6.901845455169678
    8. 'c' → logprob: -7.026845455169678
    9. '_' → logprob: -7.151845455169678
    10. ' n' → logprob: -7.276845455169678

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030865666922181845
    2. 'in' → logprob: -5.878086566925049
    3. ',' → logprob: -8.75308609008789
    4. ' ' → logprob: -10.00308609008789
    5. 's' → logprob: -11.25308609008789
    6. 'er' → logprob: -12.25308609008789
    7. 'ber' → logprob: -12.37808609008789
    8. 'd' → logprob: -12.37808609008789
    9. ' i' → logprob: -12.37808609008789
    10. ' ' → logprob: -12.37808609008789

Token 58: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0028488633688539267
    2. ' c' → logprob: -5.8778486251831055
    3. 'range' → logprob: -10.127848625183105
    4. ' range' → logprob: -12.752848625183105
    5. '   ' → logprob: -15.002848625183105
    6. '	c' → logprob: -15.002848625183105
    7. 'sorted' → logprob: -15.627848625183105
    8. ' ' → logprob: -16.252849578857422
    9. '(c' → logprob: -16.752849578857422
    10. ')c' → logprob: -17.127849578857422

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000530871853698045
    2. ' :' → logprob: -7.62553071975708
    3. ':
' → logprob: -10.250531196594238
    4. ',' → logprob: -12.750531196594238
    5. '=' → logprob: -14.125531196594238
    6. ':i' → logprob: -14.250531196594238
    7. '):' → logprob: -14.625531196594238
    8. '>' → logprob: -14.875531196594238
    9. ':**' → logprob: -15.000531196594238
    10. ':

' → logprob: -15.500531196594238

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.324139803647995
    2. ':' → logprob: -1.4491398334503174
    3. ' :' → logprob: -3.9491398334503174
    4. ' ' → logprob: -4.699139595031738
    5. 'result' → logprob: -5.199139595031738
    6. ' result' → logprob: -5.824139595031738
    7. '  ' → logprob: -6.449139595031738
    8. ':
' → logprob: -7.699139595031738
    9. '    
' → logprob: -7.824139595031738
    10. '+' → logprob: -8.074139595031738

Token 61: ' contrib' (ID: 22457)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1344413161277771
    2. ' result' → logprob: -2.759441375732422
    3. '   ' → logprob: -3.259441375732422
    4. ' resultat' → logprob: -3.884441375732422
    5. '    
' → logprob: -6.884441375732422
    6. ' if' → logprob: -7.134441375732422
    7. 'if' → logprob: -7.384441375732422
    8. ' i' → logprob: -8.509441375732422
    9. ' résultat' → logprob: -9.009441375732422
    10. '
' → logprob: -9.259441375732422

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06210022792220116
    2. '=' → logprob: -2.8121001720428467
    3. ' ' → logprob: -9.937100410461426
    4. '   ' → logprob: -10.062100410461426
    5. 'u' → logprob: -11.937100410461426
    6. ' ' → logprob: -12.062100410461426
    7. 'ut' → logprob: -12.187100410461426
    8. 'ution' → logprob: -12.312100410461426
    9. ' +=' → logprob: -12.437100410461426
    10. '  ' → logprob: -12.687100410461426

Token 63: ' (' (ID: 350)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5946288704872131
    2. '(num' → logprob: -1.4696288108825684
    3. ' num' → logprob: -1.7196288108825684
    4. ' (' → logprob: -3.5946288108825684
    5. 'pow' → logprob: -5.219628810882568
    6. '(' → logprob: -5.719628810882568
    7. '(max' → logprob: -7.344628810882568
    8. ' pow' → logprob: -7.344628810882568
    9. 'max' → logprob: -7.719628810882568
    10. ' max' → logprob: -7.969628810882568

Token 64: 'i' (ID: 72)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04836171120405197
    2. ' num' → logprob: -3.5483617782592773
    3. '(num' → logprob: -4.298361778259277
    4. 'pow' → logprob: -5.673361778259277
    5. '(' → logprob: -7.548361778259277
    6. ' (' → logprob: -8.173361778259277
    7. '2' → logprob: -8.798361778259277
    8. '   ' → logprob: -9.423361778259277
    9. 'max' → logprob: -9.673361778259277
    10. 'c' → logprob: -9.798361778259277

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6200343370437622
    2. ' *' → logprob: -1.4950343370437622
    3. ' +' → logprob: -1.8700343370437622
    4. '*' → logprob: -2.4950342178344727
    5. ' -' → logprob: -7.995034217834473
    6. '*num' → logprob: -8.495034217834473
    7. '**' → logprob: -8.870034217834473
    8. ' ' → logprob: -8.870034217834473
    9. ')' → logprob: -8.870034217834473
    10. '-' → logprob: -10.120034217834473

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001455832039937377
    2. ' ' → logprob: -7.376455783843994
    3. 'num' → logprob: -7.626455783843994
    4. ')' → logprob: -8.626456260681152
    5. '2' → logprob: -9.126456260681152
    6. '   ' → logprob: -11.501456260681152
    7. 'i' → logprob: -11.876456260681152
    8. ' num' → logprob: -12.376456260681152
    9. 'n' → logprob: -12.501456260681152
    10. 'c' → logprob: -12.626456260681152

Token 67: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008990773931145668
    2. 'num' → logprob: -7.875899314880371
    3. '2' → logprob: -8.000899314880371
    4. ')' → logprob: -9.375899314880371
    5. 'c' → logprob: -10.500899314880371
    6. ' ' → logprob: -10.750899314880371
    7. 'i' → logprob: -11.500899314880371
    8. 'n' → logprob: -11.750899314880371
    9. '(' → logprob: -12.500899314880371
    10. '7' → logprob: -12.625899314880371

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35745006799697876
    2. ')**' → logprob: -1.232450008392334
    3. ' )' → logprob: -5.607450008392334
    4. '**' → logprob: -5.857450008392334
    5. ')*' → logprob: -6.482450008392334
    6. '*' → logprob: -7.982450008392334
    7. '**)' → logprob: -8.857450485229492
    8. ' **' → logprob: -9.857450485229492
    9. ' ' → logprob: -9.982450485229492
    10. '   ' → logprob: -10.107450485229492

Token 69: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11104688793420792
    2. '*' → logprob: -2.48604679107666
    3. '**' → logprob: -4.23604679107666
    4. ' **' → logprob: -4.98604679107666
    5. '*num' → logprob: -8.11104679107666
    6. ' ' → logprob: -8.61104679107666
    7. '*(' → logprob: -10.86104679107666
    8. ' *
' → logprob: -11.23604679107666
    9. ')' → logprob: -11.73604679107666
    10. ' ' → logprob: -11.98604679107666

Token 70: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.43177279829978943
    2. ' num' → logprob: -1.0567728281021118
    3. '(num' → logprob: -6.306772708892822
    4. ' (' → logprob: -7.806772708892822
    5. 'pow' → logprob: -7.806772708892822
    6. ' pow' → logprob: -8.93177318572998
    7. '	num' → logprob: -9.80677318572998
    8. ' ' → logprob: -9.93177318572998
    9. '*num' → logprob: -10.05677318572998
    10. '(' → logprob: -10.18177318572998

Token 71: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.680138885974884
    2. '%' → logprob: -0.930138885974884
    3. '
' → logprob: -2.6801388263702393
    4. '   ' → logprob: -3.8051388263702393
    5. ')' → logprob: -5.555139064788818
    6. '<|end|>' → logprob: -7.055139064788818
    7. ' ' → logprob: -7.680139064788818
    8. '**' → logprob: -7.930139064788818
    9. ' 
' → logprob: -8.18013858795166
    10. '%
' → logprob: -8.43013858795166

Token 72: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4691319763660431
    2. '%' → logprob: -2.2191319465637207
    3. '   ' → logprob: -2.2191319465637207
    4. '
' → logprob: -2.4691319465637207
    5. 'result' → logprob: -3.9691319465637207
    6. ' ' → logprob: -4.344131946563721
    7. ' i' → logprob: -4.719131946563721
    8. ' 
' → logprob: -4.844131946563721
    9. ' +' → logprob: -5.219131946563721
    10. ' result' → logprob: -5.719131946563721

Token 73: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3420926034450531
    2. ' result' → logprob: -2.342092514038086
    3. '   ' → logprob: -2.467092514038086
    4. ' i' → logprob: -2.717092514038086
    5. ' resultat' → logprob: -3.717092514038086
    6. 'i' → logprob: -4.967092514038086
    7. '
' → logprob: -4.967092514038086
    8. ' 
' → logprob: -7.092092514038086
    9. '    
' → logprob: -7.092092514038086
    10. ' résultat' → logprob: -7.967092514038086

Token 74: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3133726418018341
    2. '+=' → logprob: -1.3133726119995117
    3. ' =' → logprob: -10.063372611999512
    4. '+=(' → logprob: -10.438372611999512
    5. '%=' → logprob: -11.313372611999512
    6. ' %=' → logprob: -11.438372611999512
    7. '=' → logprob: -11.563372611999512
    8. '+' → logprob: -12.938372611999512
    9. '+="' → logprob: -14.063372611999512
    10. ' -=' → logprob: -14.313372611999512

Token 75: ' contrib' (ID: 22457)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.07967772334814072
    2. ' contrib' → logprob: -2.5796778202056885
    3. ' contribu' → logprob: -8.32967758178711
    4. 'contri' → logprob: -8.45467758178711
    5. ' contribut' → logprob: -9.07967758178711
    6. '	con' → logprob: -10.07967758178711
    7. '(con' → logprob: -10.45467758178711
    8. 'contr' → logprob: -10.95467758178711
    9. ' ' → logprob: -10.95467758178711
    10. 'cont' → logprob: -11.20467758178711

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018399098189547658
    2. '    
' → logprob: -9.375184059143066
    3. '
' → logprob: -9.500184059143066
    4. '\n' → logprob: -12.125184059143066
    5. '```' → logprob: -12.625184059143066
    6. '\' → logprob: -12.750184059143066
    7. '+' → logprob: -13.125184059143066
    8. ' i' → logprob: -13.125184059143066
    9. '       ' → logprob: -14.000184059143066
    10. '  ' → logprob: -14.125184059143066

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4021237802808173e-05
    2. ' i' → logprob: -12.500014305114746
    3. '    
' → logprob: -13.250014305114746
    4. '```' → logprob: -13.250014305114746
    5. '\' → logprob: -13.500014305114746
    6. '\n' → logprob: -13.750014305114746
    7. '<|end|>' → logprob: -14.125014305114746
    8. '+' → logprob: -14.500014305114746
    9. 'i' → logprob: -14.500014305114746
    10. '       ' → logprob: -14.875014305114746

Token 78: ' resultat' (ID: 67404)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7802952527999878
    2. ' i' → logprob: -0.7802952527999878
    3. 'i' → logprob: -2.5302953720092773
    4. 'result' → logprob: -6.530295372009277
    5. ' result' → logprob: -6.780295372009277
    6. '```' → logprob: -7.780295372009277
    7. '\' → logprob: -8.280295372009277
    8. '	i' → logprob: -8.905295372009277
    9. '    
' → logprob: -9.780295372009277
    10. '``' → logprob: -10.030295372009277

Token 79: ' =' (ID: 314)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.09236469119787216
    2. ' %' → logprob: -2.84236478805542
    3. '%' → logprob: -3.71736478805542
    4. '%=' → logprob: -5.34236478805542
    5. ' ' → logprob: -8.342364311218262
    6. ' +=' → logprob: -8.842364311218262
    7. '<|end|>' → logprob: -8.967364311218262
    8. ')' → logprob: -9.967364311218262
    9. ' =' → logprob: -9.967364311218262
    10. '```' → logprob: -9.967364311218262

Token 80: ' resultat' (ID: 67404)
  Prédit: ' resultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' resultat' → logprob: -0.4741959869861603
    2. 'result' → logprob: -0.9741959571838379
    3. ' result' → logprob: -9.474196434020996
    4. 'res' → logprob: -11.099196434020996
    5. ' résultat' → logprob: -11.599196434020996
    6. 'mod' → logprob: -11.974196434020996
    7. '[result' → logprob: -13.224196434020996
    8. ' resultaat' → logprob: -13.474196434020996
    9. ' ' → logprob: -13.724196434020996
    10. ' rezultat' → logprob: -13.849196434020996

Token 81: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.008868765085935593
    2. ' %' → logprob: -4.75886869430542
    3. 'mod' → logprob: -9.383869171142578
    4. '%i' → logprob: -9.758869171142578
    5. '<|end|>' → logprob: -11.008869171142578
    6. '%c' → logprob: -11.383869171142578
    7. ' mod' → logprob: -11.383869171142578
    8. '%n' → logprob: -11.383869171142578
    9. '%d' → logprob: -11.508869171142578
    10. '%s' → logprob: -11.633869171142578

Token 82: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12693357467651367
    2. ' mod' → logprob: -2.1269335746765137
    3. '100' → logprob: -12.626934051513672
    4. '(mod' → logprob: -13.126934051513672
    5. ' ' → logprob: -15.626934051513672
    6. '	mod' → logprob: -17.251934051513672
    7. '```' → logprob: -18.876934051513672
    8. '10' → logprob: -19.626934051513672
    9. ' мод' → logprob: -19.751934051513672
    10. ' ' → logprob: -20.001934051513672

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028775110840797424
    2. 'i' → logprob: -5.877877712249756
    3. ' i' → logprob: -10.002877235412598
    4. '```' → logprob: -11.002877235412598
    5. '    
' → logprob: -12.377877235412598
    6. '	i' → logprob: -12.502877235412598
    7. '  ' → logprob: -14.252877235412598
    8. '   ' → logprob: -14.627877235412598
    9. '       ' → logprob: -14.877877235412598
    10. '``' → logprob: -15.127877235412598

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005469490308314562
    2. 'i' → logprob: -5.25546932220459
    3. ' i' → logprob: -9.00546932220459
    4. '	i' → logprob: -10.00546932220459
    5. '    
' → logprob: -10.00546932220459
    6. '```' → logprob: -11.13046932220459
    7. '   ' → logprob: -13.50546932220459
    8. '  ' → logprob: -13.63046932220459
    9. '    ' → logprob: -14.25546932220459
    10. '``' → logprob: -14.50546932220459

Token 85: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.20168571174144745
    2. '   ' → logprob: -1.7016856670379639
    3. ' i' → logprob: -8.451685905456543
    4. '	i' → logprob: -10.201685905456543
    5. '```' → logprob: -11.201685905456543
    6. '  ' → logprob: -12.201685905456543
    7. '    
' → logprob: -14.076685905456543
    8. ' ' → logprob: -14.201685905456543
    9. '``' → logprob: -14.701685905456543
    10. '++' → logprob: -15.201685905456543

Token 86: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014855637215077877
    2. ' +=' → logprob: -4.264855861663818
    3. '+' → logprob: -7.389855861663818
    4. '=' → logprob: -9.76485538482666
    5. '++' → logprob: -11.38985538482666
    6. '+='' → logprob: -13.51485538482666
    7. '<|end|>' → logprob: -13.63985538482666
    8. ']+=' → logprob: -13.88985538482666
    9. '+++' → logprob: -14.13985538482666
    10. '+="' → logprob: -14.51485538482666

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.625011444091797
    3. '2' → logprob: -12.875011444091797
    4. '3' → logprob: -16.250011444091797
    5. '   ' → logprob: -17.250011444091797
    6. '4' → logprob: -18.125011444091797
    7. '  ' → logprob: -19.375011444091797
    8. '<|end|>' → logprob: -19.750011444091797
    9. '0' → logprob: -19.875011444091797
    10. '5' → logprob: -19.875011444091797

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010069658746942878
    2. '2' → logprob: -7.001007080078125
    3. '3' → logprob: -9.626007080078125
    4. ' ' → logprob: -11.376007080078125
    5. '4' → logprob: -11.626007080078125
    6. '5' → logprob: -13.001007080078125
    7. '10' → logprob: -13.626007080078125
    8. '0' → logprob: -14.001007080078125
    9. '7' → logprob: -14.126007080078125
    10. '100' → logprob: -14.126007080078125

Token 89: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05252343416213989
    2. '
' → logprob: -3.302523374557495
    3. '<|end|>' → logprob: -4.552523612976074
    4. ')' → logprob: -6.427523612976074
    5. '+' → logprob: -7.552523612976074
    6. '#' → logprob: -7.802523612976074
    7. '%' → logprob: -8.052523612976074
    8. ' print' → logprob: -8.552523612976074
    9. '```' → logprob: -8.552523612976074
    10. 'result' → logprob: -8.677523612976074

Token 90: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.013994814362377e-05
    2. '```' → logprob: -10.62505054473877
    3. 'result' → logprob: -10.87505054473877
    4. 'for' → logprob: -13.25005054473877
    5. '<|end|>' → logprob: -13.25005054473877
    6. 'pr' → logprob: -14.25005054473877
    7. '#' → logprob: -14.50005054473877
    8. 'return' → logprob: -14.75005054473877
    9. '#print' → logprob: -14.75005054473877
    10. ' print' → logprob: -15.00005054473877

Token 91: ' Ok' (ID: 13927)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9146995327901095e-05
    2. 'result' → logprob: -11.125019073486328
    3. ' print' → logprob: -12.625019073486328
    4. 'for' → logprob: -14.500019073486328
    5. 'if' → logprob: -14.750019073486328
    6. '```' → logprob: -16.375019073486328
    7. '#print' → logprob: -17.125019073486328
    8. '#' → logprob: -17.875019073486328
    9. 'pr' → logprob: -19.000019073486328
    10. 'while' → logprob: -19.125019073486328

Token 92: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011665337951853871
    2. 'result' → logprob: -6.876166343688965
    3. 'pr' → logprob: -10.376166343688965
    4. 'for' → logprob: -10.751166343688965
    5. '<|end|>' → logprob: -10.876166343688965
    6. '+' → logprob: -11.251166343688965
    7. '#' → logprob: -11.751166343688965
    8. '*' → logprob: -12.126166343688965
    9. ' print' → logprob: -12.376166343688965
    10. '```' → logprob: -12.376166343688965

Token 93: ' là' (ID: 8052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01866080053150654
    2. ' print' → logprob: -4.143661022186279
    3. 'result' → logprob: -6.518661022186279
    4. ' on' → logprob: -7.768661022186279
    5. 'on' → logprob: -8.893660545349121
    6. ' resultat' → logprob: -9.018660545349121
    7. ' for' → logprob: -9.393660545349121
    8. 'for' → logprob: -9.518660545349121
    9. 'pour' → logprob: -10.143660545349121
    10. 'le' → logprob: -10.268660545349121

Token 94: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001488792710006237
    2. 'result' → logprob: -6.87648868560791
    3. ' print' → logprob: -7.87648868560791
    4. 'for' → logprob: -10.00148868560791
    5. '#' → logprob: -12.12648868560791
    6. ' for' → logprob: -12.12648868560791
    7. 'if' → logprob: -12.37648868560791
    8. 'prin' → logprob: -13.00148868560791
    9. ' on' → logprob: -13.12648868560791
    10. 'pr' → logprob: -13.25148868560791

Token 95: ' fait' (ID: 7473)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.4645867347717285
    2. 'fait' → logprob: -1.8395867347717285
    3. 'a' → logprob: -2.2145867347717285
    4. 've' → logprob: -2.7145867347717285
    5. 'do' → logprob: -2.7145867347717285
    6. 'continue' → logprob: -2.7145867347717285
    7. 'aj' → logprob: -3.0895867347717285
    8. 'va' → logprob: -3.0895867347717285
    9. 'mult' → logprob: -3.5895867347717285
    10. 'f' → logprob: -3.7145867347717285

Token 96: ' un' (ID: 537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7028226256370544
    2. 'une' → logprob: -1.7028226852416992
    3. 'un' → logprob: -2.327822685241699
    4. 'for' → logprob: -2.327822685241699
    5. 'le' → logprob: -3.202822685241699
    6. '#' → logprob: -3.827822685241699
    7. 'quel' → logprob: -3.827822685241699
    8. 'result' → logprob: -4.452822685241699
    9. 'la' → logprob: -4.452822685241699
    10. '```' → logprob: -5.452822685241699

Token 97: ' genre' (ID: 20910)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4660191237926483
    2. 'tri' → logprob: -2.5910191535949707
    3. 'double' → logprob: -3.8410191535949707
    4. 'prefix' → logprob: -3.9660191535949707
    5. 'while' → logprob: -4.216019153594971
    6. '#' → logprob: -4.216019153594971
    7. 'print' → logprob: -4.466019153594971
    8. 'import' → logprob: -4.466019153594971
    9. 'dp' → logprob: -4.466019153594971
    10. 'reverse' → logprob: -4.466019153594971

Token 98: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.11503986269235611
    2. 'd' → logprob: -2.240039825439453
    3. ' de' → logprob: -6.990039825439453
    4. '#' → logprob: -8.365039825439453
    5. '```' → logprob: -8.865039825439453
    6. 'def' → logprob: -9.115039825439453
    7. 'deque' → logprob: -9.365039825439453
    8. 'que' → logprob: -9.865039825439453
    9. 'while' → logprob: -9.990039825439453
    10. 'import' → logprob: -10.365039825439453

Token 99: ' double' (ID: 3503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8771759867668152
    2. 'while' → logprob: -2.25217604637146
    3. 'tri' → logprob: -2.62717604637146
    4. 'prefix' → logprob: -2.62717604637146
    5. 's' → logprob: -2.87717604637146
    6. 'double' → logprob: -3.25217604637146
    7. 'dp' → logprob: -3.37717604637146
    8. 'c' → logprob: -3.62717604637146
    9. '```' → logprob: -3.87717604637146
    10. '#' → logprob: -4.377175807952881

Token 100: ' exponent' (ID: 51159)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1458057314157486
    2. ' for' → logprob: -2.020805835723877
    3. ' boucle' → logprob: -7.145805835723877
    4. 'i' → logprob: -7.520805835723877
    5. 'sum' → logprob: -7.770805835723877
    6. 'ment' → logprob: -8.395805358886719
    7. 's' → logprob: -8.895805358886719
    8. ' loop' → logprob: -9.145805358886719
    9. ' i' → logprob: -9.520805358886719
    10. 'loop' → logprob: -9.520805358886719

Token 101: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.040895409882068634
    2. 'ielle' → logprob: -3.415895462036133
    3. 'iel' → logprob: -6.040895462036133
    4. 'i' → logprob: -6.665895462036133
    5. 'ial' → logprob: -7.165895462036133
    6. 'ent' → logprob: -7.915895462036133
    7. 'ation' → logprob: -7.915895462036133
    8. 'iale' → logprob: -8.165895462036133
    9. 'entation' → logprob: -8.415895462036133
    10. 'ion' → logprob: -8.665895462036133

Token 102: ' che' (ID: 1378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6609750986099243
    2. 'result' → logprob: -1.6609750986099243
    3. 'pow' → logprob: -1.7859750986099243
    4. '^' → logprob: -3.5359749794006348
    5. 'power' → logprob: -3.7859749794006348
    6. ' for' → logprob: -4.035974979400635
    7. 'while' → logprob: -4.285974979400635
    8. '**' → logprob: -4.785974979400635
    9. 'exp' → logprob: -5.035974979400635
    10. '<|end|>' → logprob: -5.660974979400635

Token 103: 'lou' (ID: 133128)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3334112763404846
    2. 'z' → logprob: -2.95841121673584
    3. 'if' → logprob: -3.70841121673584
    4. 'ck' → logprob: -3.70841121673584
    5. 'ain' → logprob: -4.08341121673584
    6. '   ' → logprob: -4.08341121673584
    7. 'que' → logprob: -4.33341121673584
    8. 'c' → logprob: -4.33341121673584
    9. 'for' → logprob: -4.45841121673584
    10. 'e' → logprob: -4.58341121673584

Token 104: '
' (ID: 198)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.1307611465454102
    2. 'for' → logprob: -1.3807611465454102
    3. 'pow' → logprob: -1.6307611465454102
    4. 'result' → logprob: -2.63076114654541
    5. 'p' → logprob: -3.13076114654541
    6. 'while' → logprob: -3.50576114654541
    7. 'exp' → logprob: -4.00576114654541
    8. 'i' → logprob: -4.63076114654541
    9. 'ex' → logprob: -4.75576114654541
    10. 'base' → logprob: -4.75576114654541

Token 105: 'mult' (ID: 34841)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1225478649139404
    2. 'pow' → logprob: -1.8725478649139404
    3. 'power' → logprob: -1.8725478649139404
    4. 'result' → logprob: -2.3725478649139404
    5. 'p' → logprob: -2.9975478649139404
    6. 'while' → logprob: -2.9975478649139404
    7. 'exp' → logprob: -3.2475478649139404
    8. 'res' → logprob: -3.2475478649139404
    9. 'ex' → logprob: -3.3725478649139404
    10. 'pu' → logprob: -4.3725481033325195

Token 106: '_times' (ID: 53425)
  Prédit: 'iplier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.18774893879890442
    2. ' =' → logprob: -2.062748908996582
    3. 'ip' → logprob: -3.437748908996582
    4. '=' → logprob: -4.687748908996582
    5. 'ipl' → logprob: -7.312748908996582
    6. 'plier' → logprob: -7.312748908996582
    7. 'i' → logprob: -7.437748908996582
    8. 'p' → logprob: -9.187748908996582
    9. 'iple' → logprob: -9.437748908996582
    10. 'result' → logprob: -9.437748908996582

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22813954949378967
    2. '=' → logprob: -1.6031395196914673
    3. '1' → logprob: -7.603139400482178
    4. 'iplier' → logprob: -7.853139400482178
    5. '2' → logprob: -8.478139877319336
    6. 'e' → logprob: -8.853139877319336
    7. 'i' → logprob: -8.853139877319336
    8. 'iation' → logprob: -8.978139877319336
    9. 'ication' → logprob: -9.228139877319336
    10. 'ation' → logprob: -9.228139877319336

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6938607692718506
    2. '2' → logprob: -1.4438607692718506
    3. 'pow' → logprob: -1.8188607692718506
    4. '(' → logprob: -3.9438607692718506
    5. ' ' → logprob: -3.9438607692718506
    6. '(n' → logprob: -4.19386100769043
    7. 'n' → logprob: -4.69386100769043
    8. '(pow' → logprob: -4.69386100769043
    9. '[n' → logprob: -5.06886100769043
    10. '[' → logprob: -5.44386100769043

Token 109: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6592816710472107
    2. 'pow' → logprob: -1.6592817306518555
    3. '2' → logprob: -1.7842817306518555
    4. '(' → logprob: -3.0342817306518555
    5. '(n' → logprob: -3.4092817306518555
    6. 'n' → logprob: -4.6592817306518555
    7. '(pow' → logprob: -4.6592817306518555
    8. '(i' → logprob: -5.0342817306518555
    9. '0' → logprob: -5.6592817306518555
    10. '((' → logprob: -6.0342817306518555

Token 110: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2649981379508972
    2. '
' → logprob: -1.639998197555542
    3. '*' → logprob: -4.389997959136963
    4. 'for' → logprob: -4.639997959136963
    5. 'mod' → logprob: -4.889997959136963
    6. 'while' → logprob: -5.889997959136963
    7. 'n' → logprob: -6.014997959136963
    8. '```' → logprob: -6.764997959136963
    9. '*n' → logprob: -7.264997959136963
    10. '<|end|>' → logprob: -7.514997959136963

Token 111: ' n' (ID: 297)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.639853835105896
    2. 'n' → logprob: -2.2648539543151855
    3. '(n' → logprob: -2.5148539543151855
    4. '(result' → logprob: -3.0148539543151855
    5. '(i' → logprob: -3.1398539543151855
    6. '(mult' → logprob: -3.2648539543151855
    7. 'mult' → logprob: -3.2648539543151855
    8. 'i' → logprob: -3.5148539543151855
    9. '(' → logprob: -3.7648539543151855
    10. 'mod' → logprob: -3.8898539543151855

Token 112: ' -' (ID: 533)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6836079955101013
    2. 'while' → logprob: -1.183608055114746
    3. 'result' → logprob: -3.058608055114746
    4. 'for' → logprob: -3.058608055114746
    5. 'mult' → logprob: -3.308608055114746
    6. 'power' → logprob: -3.308608055114746
    7. 'mod' → logprob: -5.058608055114746
    8. 'p' → logprob: -5.683608055114746
    9. 'exp' → logprob: -6.183608055114746
    10. 'res' → logprob: -6.308608055114746

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7678015232086182
    2. '2' → logprob: -0.7678015232086182
    3. '3' → logprob: -2.642801523208618
    4. '4' → logprob: -7.517801284790039
    5. ' ' → logprob: -9.267801284790039
    6. 'i' → logprob: -9.767801284790039
    7. '5' → logprob: -10.267801284790039
    8. '   ' → logprob: -10.767801284790039
    9. '6' → logprob: -12.392801284790039
    10. '7' → logprob: -12.392801284790039

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.813579797744751
    2. '1' → logprob: -0.938579797744751
    3. '3' → logprob: -1.813579797744751
    4. '4' → logprob: -6.188579559326172
    5. 'i' → logprob: -8.313579559326172
    6. '5' → logprob: -9.313579559326172
    7. ' ' → logprob: -10.063579559326172
    8. '6' → logprob: -11.563579559326172
    9. '   ' → logprob: -11.688579559326172
    10. '7' → logprob: -11.813579559326172

Token 115: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0222891569137573
    2. 'power' → logprob: -1.3972891569137573
    3. 'pow' → logprob: -1.3972891569137573
    4. 'result' → logprob: -3.647289276123047
    5. 'ex' → logprob: -3.772289276123047
    6. 'mult' → logprob: -3.897289276123047
    7. 'exp' → logprob: -4.147289276123047
    8. 'for' → logprob: -4.272289276123047
    9. 'res' → logprob: -4.522289276123047
    10. 'p' → logprob: -4.772289276123047

Token 116: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0858896970748901
    2. 'power' → logprob: -2.0858898162841797
    3. 'pow' → logprob: -2.2108898162841797
    4. 'res' → logprob: -2.3358898162841797
    5. 'result' → logprob: -2.7108898162841797
    6. 'mult' → logprob: -2.8358898162841797
    7. 'base' → logprob: -3.2108898162841797
    8. 'current' → logprob: -3.8358898162841797
    9. 'pu' → logprob: -3.8358898162841797
    10. 'acc' → logprob: -4.33588981628418

Token 117: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14656035602092743
    2. '_' → logprob: -2.3965604305267334
    3. 'j' → logprob: -4.271560192108154
    4. '_i' → logprob: -4.646560192108154
    5. ' i' → logprob: -5.021560192108154
    6. 'exp' → logprob: -5.646560192108154
    7. 'x' → logprob: -6.146560192108154
    8. 'k' → logprob: -6.521560192108154
    9. '_j' → logprob: -6.771560192108154
    10. 'pow' → logprob: -6.896560192108154

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002405434846878
    2. 'in' → logprob: -2.350240468978882
    3. ' ' → logprob: -10.725240707397461
    4. 'n' → logprob: -12.850240707397461
    5. ',' → logprob: -13.600240707397461
    6. 'import' → logprob: -13.600240707397461
    7. ' ' → logprob: -13.850240707397461
    8. 'range' → logprob: -13.850240707397461
    9. '  ' → logprob: -14.225240707397461
    10. '1' → logprob: -14.475240707397461

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004623441956937313
    2. ' range' → logprob: -5.3796234130859375
    3. '(range' → logprob: -13.754623413085938
    4. ' ' → logprob: -14.379623413085938
    5. '   ' → logprob: -15.004623413085938
    6. '	range' → logprob: -15.129623413085938
    7. '  ' → logprob: -15.254623413085938
    8. '```' → logprob: -15.629623413085938
    9. ')' → logprob: -16.004623413085938
    10. '

' → logprob: -16.379623413085938

Token 120: '(mult' (ID: 196096)
  Prédit: '(mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mult' → logprob: -0.19685494899749756
    2. '(n' → logprob: -2.196855068206787
    3. '(' → logprob: -2.696855068206787
    4. '(j' → logprob: -9.446854591369629
    5. ' (' → logprob: -11.321854591369629
    6. '(mod' → logprob: -11.571854591369629
    7. '(i' → logprob: -12.321854591369629
    8. '(len' → logprob: -12.446854591369629
    9. '(
' → logprob: -12.446854591369629
    10. '(m' → logprob: -12.571854591369629

Token 121: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.015567487105727196
    2. '(n' → logprob: -4.390567302703857
    3. 'times' → logprob: -7.015567302703857
    4. 'mult' → logprob: -7.140567302703857
    5. '(mult' → logprob: -7.390567302703857
    6. '(' → logprob: -7.765567302703857
    7. 's' → logprob: -8.890567779541016
    8. 'imes' → logprob: -10.140567779541016
    9. '   ' → logprob: -10.515567779541016
    10. 'Times' → logprob: -11.390567779541016

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02885737456381321
    2. ':' → logprob: -4.028857231140137
    3. '):
' → logprob: -5.403857231140137
    4. '+' → logprob: -5.903857231140137
    5. ' ):' → logprob: -6.278857231140137
    6. ' :' → logprob: -6.778857231140137
    7. ')' → logprob: -8.653857231140137
    8. ',' → logprob: -9.528857231140137
    9. ' +' → logprob: -9.778857231140137
    10. '():' → logprob: -11.153857231140137

Token 123: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12702901661396027
    2. '   ' → logprob: -2.1270289421081543
    3. ' result' → logprob: -10.002029418945312
    4. '```' → logprob: -10.627029418945312
    5. 'mod' → logprob: -11.627029418945312
    6. '  ' → logprob: -11.877029418945312
    7. '	result' → logprob: -12.627029418945312
    8. '``' → logprob: -13.252029418945312
    9. '    
' → logprob: -13.252029418945312
    10. ' ' → logprob: -13.627029418945312

Token 124: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.0259150157216936e-05
    2. '   ' → logprob: -10.00005054473877
    3. ' result' → logprob: -12.50005054473877
    4. '    
' → logprob: -14.00005054473877
    5. ' ' → logprob: -16.500049591064453
    6. '  ' → logprob: -16.500049591064453
    7. '	result' → logprob: -16.875049591064453
    8. '```' → logprob: -17.375049591064453
    9. ' resultat' → logprob: -18.250049591064453
    10. '
' → logprob: -18.500049591064453

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13750684261322021
    2. '*=' → logprob: -2.3875069618225098
    3. ' =' → logprob: -3.5125069618225098
    4. ' *=' → logprob: -5.01250696182251
    5. '*' → logprob: -9.512506484985352
    6. '+=' → logprob: -10.762506484985352
    7. ' ' → logprob: -11.387506484985352
    8. ' <<=' → logprob: -11.387506484985352
    9. '```' → logprob: -12.512506484985352
    10. '   ' → logprob: -13.387506484985352

Token 126: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00035727277281694114
    2. ' (' → logprob: -8.625357627868652
    3. 'result' → logprob: -8.750357627868652
    4. '(resultado' → logprob: -11.750357627868652
    5. '(res' → logprob: -12.625357627868652
    6. '(pow' → logprob: -13.000357627868652
    7. '(results' → logprob: -13.375357627868652
    8. '(' → logprob: -13.500357627868652
    9. ',result' → logprob: -14.625357627868652
    10. '(ret' → logprob: -15.000357627868652

Token 127: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0011936791706830263
    2. '(result' → logprob: -6.751193523406982
    3. ' resultat' → logprob: -10.87619400024414
    4. '2' → logprob: -13.12619400024414
    5. ' result' → logprob: -13.75119400024414
    6. 'resultado' → logprob: -14.62619400024414
    7. 'res' → logprob: -15.00119400024414
    8. '[result' → logprob: -16.12619400024414
    9. '   ' → logprob: -16.25119400024414
    10. '(' → logprob: -16.50119400024414

Token 128: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -4.894790981779806e-05
    2. 'result' → logprob: -10.375048637390137
    3. '*' → logprob: -11.375048637390137
    4. 'mod' → logprob: -13.125048637390137
    5. 't' → logprob: -14.125048637390137
    6. ' ' → logprob: -14.125048637390137
    7. 'ultat' → logprob: -14.250048637390137
    8. '%' → logprob: -14.375048637390137
    9. 'ат' → logprob: -15.125048637390137
    10. '   ' → logprob: -15.250048637390137

Token 129: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4287652373313904
    2. ' *' → logprob: -1.0537652969360352
    3. '**' → logprob: -10.178765296936035
    4. ')' → logprob: -12.053765296936035
    5. ' ' → logprob: -12.053765296936035
    6. 'result' → logprob: -12.053765296936035
    7. '```' → logprob: -13.053765296936035
    8. '   ' → logprob: -13.178765296936035
    9. ' ' → logprob: -13.178765296936035
    10. '*object' → logprob: -14.553765296936035

Token 130: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004808533936738968
    2. '3' → logprob: -6.12980842590332
    3. '10' → logprob: -6.62980842590332
    4. '4' → logprob: -7.12980842590332
    5. ' ' → logprob: -8.50480842590332
    6. '5' → logprob: -9.50480842590332
    7. 'result' → logprob: -9.62980842590332
    8. '7' → logprob: -10.50480842590332
    9. '8' → logprob: -11.00480842590332
    10. '6' → logprob: -11.00480842590332

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006023125723004341
    2. '3' → logprob: -6.006022930145264
    3. '10' → logprob: -6.256022930145264
    4. '4' → logprob: -6.631022930145264
    5. '5' → logprob: -9.631023406982422
    6. ' ' → logprob: -10.131023406982422
    7. '7' → logprob: -10.506023406982422
    8. '6' → logprob: -10.631023406982422
    9. '8' → logprob: -10.756023406982422
    10. 'n' → logprob: -10.756023406982422

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.141186450899113e-05
    2. ' )' → logprob: -10.875020980834961
    3. ')%' → logprob: -13.000020980834961
    4. '   ' → logprob: -17.37502098083496
    5. 'mod' → logprob: -17.87502098083496
    6. ')
' → logprob: -18.00002098083496
    7. ')`' → logprob: -18.25002098083496
    8. 'result' → logprob: -18.50002098083496
    9. '```' → logprob: -18.62502098083496
    10. '))' → logprob: -19.00002098083496

Token 133: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01328610721975565
    2. ' %' → logprob: -4.388286113739014
    3. ')' → logprob: -7.388286113739014
    4. ')%' → logprob: -9.013285636901855
    5. 'mod' → logprob: -11.388285636901855
    6. 'result' → logprob: -11.888285636901855
    7. ' ' → logprob: -12.263285636901855
    8. ' ' → logprob: -12.888285636901855
    9. '
' → logprob: -13.013285636901855
    10. ' mod' → logprob: -13.763285636901855

Token 134: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1472419600977446e-06
    2. ' mod' → logprob: -13.750000953674316
    3. '(mod' → logprob: -17.250001907348633
    4. '100' → logprob: -19.125001907348633
    5. '	mod' → logprob: -21.875001907348633
    6. '```' → logprob: -24.125001907348633
    7. ' мод' → logprob: -24.625001907348633
    8. 'MOD' → logprob: -25.625001907348633
    9. 'moder' → logprob: -25.750001907348633
    10. 'mods' → logprob: -26.250001907348633

Token 135: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.921253225300461e-05
    2. '
' → logprob: -10.000069618225098
    3. ' print' → logprob: -10.750069618225098
    4. '```' → logprob: -13.375069618225098
    5. ')' → logprob: -15.500069618225098
    6. '
' → logprob: -16.12506866455078
    7. '<|end|>' → logprob: -16.12506866455078
    8. '    
' → logprob: -16.62506866455078
    9. '  
' → logprob: -17.00006866455078
    10. ')
' → logprob: -17.00006866455078

Token 136: ' pas' (ID: 2173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017078470438718796
    2. 'result' → logprob: -4.892078399658203
    3. '<|end|>' → logprob: -5.142078399658203
    4. '#' → logprob: -6.642078399658203
    5. ')' → logprob: -7.267078399658203
    6. '<|end|>' → logprob: -7.767078399658203
    7. ' print' → logprob: -8.017078399658203
    8. '```' → logprob: -8.142078399658203
    9. '
' → logprob: -8.767078399658203
    10. 'n' → logprob: -9.267078399658203

Token 137: ' d' (ID: 272)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7172728776931763
    2. 'mal' → logprob: -1.9672728776931763
    3. ' fini' → logprob: -2.5922727584838867
    4. 'de' → logprob: -3.3422727584838867
    5. 'tout' → logprob: -3.3422727584838867
    6. 'que' → logprob: -3.7172727584838867
    7. ' mal' → logprob: -3.9672727584838867
    8. 'dou' → logprob: -4.217272758483887
    9. 'question' → logprob: -4.342272758483887
    10. 'fait' → logprob: -4.342272758483887

Token 138: ''autre' (ID: 52145)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11981721222400665
    2. ''espace' → logprob: -3.6198172569274902
    3. 'ef' → logprob: -3.9948172569274902
    4. ''' → logprob: -4.36981725692749
    5. ''er' → logprob: -4.61981725692749
    6. '%' → logprob: -4.86981725692749
    7. 'u' → logprob: -5.11981725692749
    8. 'é' → logprob: -5.24481725692749
    9. 'f' → logprob: -5.36981725692749
    10. 'er' → logprob: -5.49481725692749

Token 139: ' idée' (ID: 64187)
  Prédit: 'instruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'instruction' → logprob: -1.2805649042129517
    2. 'operation' → logprob: -1.4055649042129517
    3. ')' → logprob: -1.5305649042129517
    4. 'mod' → logprob: -2.905564785003662
    5. 'code' → logprob: -3.030564785003662
    6. 'op' → logprob: -3.780564785003662
    7. 'instructions' → logprob: -4.030564785003662
    8. 'return' → logprob: -4.405564785003662
    9. '*' → logprob: -4.405564785003662
    10. 'modifier' → logprob: -4.780564785003662

Token 140: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012761499965563416
    2. '<|end|>' → logprob: -9.625127792358398
    3. ')' → logprob: -10.250127792358398
    4. '```' → logprob: -11.750127792358398
    5. ' print' → logprob: -11.875127792358398
    6. 'result' → logprob: -12.500127792358398
    7. '
' → logprob: -12.500127792358398
    8. '(print' → logprob: -14.000127792358398
    9. '#print' → logprob: -14.375127792358398
    10. '#' → logprob: -14.375127792358398

Token 141: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2355194091796875
    2. 'd' → logprob: -1.9855194091796875
    3. 'contin' → logprob: -3.1105194091796875
    4. ' de' → logprob: -4.7355194091796875
    5. 'continue' → logprob: -5.2355194091796875
    6. 'la' → logprob: -5.7355194091796875
    7. 'result' → logprob: -6.4855194091796875
    8. 'faire' → logprob: -6.4855194091796875
    9. 'dou' → logprob: -6.8605194091796875
    10. ' continuer' → logprob: -6.9855194091796875

Token 142: ' le' (ID: 505)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.12250161916017532
    2. 'contin' → logprob: -2.9975016117095947
    3. 'mult' → logprob: -3.2475016117095947
    4. 'dou' → logprob: -4.872501850128174
    5. 'sim' → logprob: -5.372501850128174
    6. 'd' → logprob: -6.372501850128174
    7. 'factor' → logprob: -6.747501850128174
    8. 'util' → logprob: -6.747501850128174
    9. 'coder' → logprob: -6.997501850128174
    10. ' faire' → logprob: -6.997501850128174

Token 143: ' faire' (ID: 8119)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.7216647863388062
    2. 'faire' → logprob: -1.7216647863388062
    3. 'd' → logprob: -1.8466647863388062
    4. 'double' → logprob: -3.4716649055480957
    5. 'dou' → logprob: -3.5966649055480957
    6. '```' → logprob: -3.9716649055480957
    7. 'contin' → logprob: -4.096664905548096
    8. ' faire' → logprob: -4.471664905548096
    9. 'coder' → logprob: -4.596664905548096
    10. '*' → logprob: -4.846664905548096

Token 144: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008895447244867682
    2. 'result' → logprob: -8.750889778137207
    3. ' print' → logprob: -8.875889778137207
    4. '   ' → logprob: -8.875889778137207
    5. '#' → logprob: -9.500889778137207
    6. 'continue' → logprob: -9.750889778137207
    7. '.' → logprob: -9.875889778137207
    8. '```' → logprob: -9.875889778137207
    9. ' ' → logprob: -10.000889778137207
    10. 'for' → logprob: -10.125889778137207

Token 145: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.39149153232574463
    2. 'for' → logprob: -1.8914915323257446
    3. 'python' → logprob: -3.516491413116455
    4. ' boucle' → logprob: -3.516491413116455
    5. 'loop' → logprob: -3.766491413116455
    6. 'b' → logprob: -4.141491413116455
    7. '```' → logprob: -4.391491413116455
    8. 'une' → logprob: -4.391491413116455
    9. 'j' → logprob: -4.516491413116455
    10. 'la' → logprob: -5.141491413116455

Token 146: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0445127372804563e-05
    2. ' print' → logprob: -12.25001049041748
    3. 'result' → logprob: -13.00001049041748
    4. ')' → logprob: -13.75001049041748
    5. '
' → logprob: -14.00001049041748
    6. '```' → logprob: -14.12501049041748
    7. '#' → logprob: -15.25001049041748
    8. '#print' → logprob: -16.000009536743164
    9. 'for' → logprob: -16.500009536743164
    10. '(print' → logprob: -17.375009536743164

Token 147: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016881546471267939
    2. '#' → logprob: -7.126688003540039
    3. 'result' → logprob: -7.501688003540039
    4. '```' → logprob: -8.751688003540039
    5. '<|end|>' → logprob: -9.376688003540039
    6. 'for' → logprob: -10.001688003540039
    7. '#print' → logprob: -11.501688003540039
    8. '
' → logprob: -11.751688003540039
    9. ' print' → logprob: -12.126688003540039
    10. '<|end|>' → logprob: -12.251688003540039

Token 148: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00010688089241739362
    2. 'result' → logprob: -9.625106811523438
    3. '(' → logprob: -10.125106811523438
    4. '(res' → logprob: -15.125106811523438
    5. '(resultado' → logprob: -15.375106811523438
    6. '(results' → logprob: -17.125106811523438
    7. ' (' → logprob: -17.625106811523438
    8. '()' → logprob: -17.875106811523438
    9. '(
' → logprob: -18.250106811523438
    10. '(print' → logprob: -18.500106811523438

Token 149: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.9361264946837764e-07
    2. 't' → logprob: -16.375
    3. 'ат' → logprob: -17.75
    4. 'tat' → logprob: -19.0
    5. 'a' → logprob: -19.125
    6. ')' → logprob: -19.75
    7. ' at' → logprob: -20.0
    8. 'ats' → logprob: -21.25
    9. 'atat' → logprob: -21.75
    10. 'al' → logprob: -22.5

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '))' → logprob: -16.125001907348633
    5. ')`' → logprob: -16.125001907348633
    6. ')}' → logprob: -18.500001907348633
    7. '())' → logprob: -18.750001907348633
    8. '+' → logprob: -18.875001907348633
    9. '()' → logprob: -18.875001907348633
    10. '(' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 26.35%
Précision adaptée (1ère position): 27.03%
Précision (top 10): 66.22%
================================================================================
