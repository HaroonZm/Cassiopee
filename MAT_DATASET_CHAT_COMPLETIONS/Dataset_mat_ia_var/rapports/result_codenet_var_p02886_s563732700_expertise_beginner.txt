================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
d = input().split()
for i in range(N):
    d[i] = int(d[i])

res = 0
i = 0
while i < N:
    j = i + 1
    while j < N:
        res = res + d[i] * d[j]
        j = j + 1
    i = i + 1

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003063838230445981
    2. '('' → logprob: -8.500306129455566
    3. '(N' → logprob: -10.000306129455566
    4. '(
' → logprob: -10.750306129455566
    5. '(input' → logprob: -11.250306129455566
    6. ''' → logprob: -12.125306129455566
    7. '("("' → logprob: -12.375306129455566
    8. '```' → logprob: -12.375306129455566
    9. '`' → logprob: -12.750306129455566
    10. '(`' → logprob: -13.000306129455566

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08323337137699127
    2. ')' → logprob: -2.58323335647583
    3. '()' → logprob: -5.70823335647583
    4. '())' → logprob: -7.70823335647583
    5. '(
' → logprob: -8.833233833312988
    6. '```' → logprob: -9.458233833312988
    7. '('' → logprob: -9.958233833312988
    8. '("("' → logprob: -10.083233833312988
    9. '(""))' → logprob: -10.583233833312988
    10. '(

' → logprob: -10.708233833312988

Token 5: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8602607846260071
    2. '=' → logprob: -1.6102607250213623
    3. 'i' → logprob: -1.8602607250213623
    4. '[' → logprob: -2.3602607250213623
    5. 'e' → logprob: -2.9852607250213623
    6. '[i' → logprob: -3.7352607250213623
    7. '.' → logprob: -4.485260963439941
    8. 'a' → logprob: -4.735260963439941
    9. 'ict' → logprob: -4.860260963439941
    10. 'ictionary' → logprob: -5.110260963439941

Token 7: ' input' (ID: 3422)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.04754587262868881
    2. ' {}' → logprob: -3.172545909881592
    3. 'dict' → logprob: -5.547545909881592
    4. '{' → logprob: -8.297545433044434
    5. ' dict' → logprob: -9.297545433044434
    6. '[]' → logprob: -9.547545433044434
    7. 'input' → logprob: -9.922545433044434
    8. 'list' → logprob: -10.172545433044434
    9. '0' → logprob: -10.672545433044434
    10. ' ' → logprob: -10.672545433044434

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005769872572273016
    2. '('' → logprob: -5.380769729614258
    3. ''' → logprob: -7.255769729614258
    4. '("("' → logprob: -8.505769729614258
    5. '(
' → logprob: -9.255769729614258
    6. '"' → logprob: -10.005769729614258
    7. ')' → logprob: -11.005769729614258
    8. ' (' → logprob: -11.255769729614258
    9. '`' → logprob: -11.505769729614258
    10. '[' → logprob: -11.505769729614258

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.029849188402295113
    2. 'strip' → logprob: -3.5298492908477783
    3. 'rstrip' → logprob: -10.0298490524292
    4. 'replace' → logprob: -10.0298490524292
    5. 'spl' → logprob: -12.4048490524292
    6. ' split' → logprob: -13.1548490524292
    7. 's' → logprob: -13.2798490524292
    8. 'rs' → logprob: -14.1548490524292
    9. 'sp' → logprob: -14.2798490524292
    10. 'isdigit' → logprob: -14.6548490524292

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026502199470996857
    2. '('' → logprob: -4.5265021324157715
    3. '()' → logprob: -4.5265021324157715
    4. '("("' → logprob: -5.6515021324157715
    5. '((' → logprob: -8.02650260925293
    6. '(`' → logprob: -9.02650260925293
    7. '(()' → logprob: -9.40150260925293
    8. '(

' → logprob: -9.52650260925293
    9. '("' → logprob: -9.52650260925293
    10. '`' → logprob: -9.77650260925293

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7719312906265259
    2. 'a' → logprob: -1.2719312906265259
    3. 'd' → logprob: -2.1469311714172363
    4. 'A' → logprob: -3.5219311714172363
    5. 'c' → logprob: -3.6469311714172363
    6. '[' → logprob: -4.521931171417236
    7. 'count' → logprob: -4.521931171417236
    8. 'result' → logprob: -4.521931171417236
    9. 's' → logprob: -4.771931171417236
    10. 'arr' → logprob: -4.896931171417236

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2649630904197693
    2. ' ' → logprob: -1.514963150024414
    3. '_' → logprob: -5.014963150024414
    4. ' _' → logprob: -5.764963150024414
    5. '  ' → logprob: -6.639963150024414
    6. ' ‌' → logprob: -7.514963150024414
    7. 'i' → logprob: -7.639963150024414
    8. ' d' → logprob: -8.014963150024414
    9. ' x' → logprob: -8.764963150024414
    10. ' ' → logprob: -9.014963150024414

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48219695687294006
    2. ' in' → logprob: -0.9821969270706177
    3. ' ' → logprob: -5.357196807861328
    4. 'n' → logprob: -6.357196807861328
    5. '_' → logprob: -7.232196807861328
    6. '  ' → logprob: -7.732196807861328
    7. 'space' → logprob: -9.482196807861328
    8. ' n' → logprob: -9.607196807861328
    9. 'range' → logprob: -9.732196807861328
    10. '	in' → logprob: -10.232196807861328

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3134879171848297
    2. ' range' → logprob: -1.3134878873825073
    3. 'd' → logprob: -8.688488006591797
    4. ' d' → logprob: -9.813488006591797
    5. '	range' → logprob: -13.688488006591797
    6. '(range' → logprob: -14.438488006591797
    7. ')' → logprob: -15.063488006591797
    8. ' ' → logprob: -15.563488006591797
    9. '```' → logprob: -15.563488006591797
    10. ' xrange' → logprob: -15.688488006591797

Token 15: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011591781862080097
    2. '(N' → logprob: -4.511591911315918
    3. '(len' → logprob: -8.011591911315918
    4. ' (' → logprob: -9.386591911315918
    5. '(n' → logprob: -10.136591911315918
    6. '(range' → logprob: -10.386591911315918
    7. '(i' → logprob: -11.261591911315918
    8. ' ' → logprob: -11.386591911315918
    9. '```' → logprob: -11.511591911315918
    10. '(
' → logprob: -12.761591911315918

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010058735497295856
    2. ')' → logprob: -4.635058879852295
    3. '[' → logprob: -9.010058403015137
    4. '[i' → logprob: -9.635058403015137
    5. '+' → logprob: -9.885058403015137
    6. ' ):' → logprob: -10.885058403015137
    7. '):
' → logprob: -11.260058403015137
    8. ':' → logprob: -11.510058403015137
    9. ']:' → logprob: -12.635058403015137
    10. '   ' → logprob: -12.635058403015137

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1437745839357376
    2. ' if' → logprob: -3.0187745094299316
    3. ' d' → logprob: -3.1437745094299316
    4. '    ' → logprob: -4.143774509429932
    5. ' ' → logprob: -4.518774509429932
    6. 'd' → logprob: -5.393774509429932
    7. ' print' → logprob: -5.393774509429932
    8. '    
' → logprob: -6.893774509429932
    9. ' for' → logprob: -7.143774509429932
    10. 'if' → logprob: -7.268774509429932

Token 18: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -1.2746059894561768
    2. 'print' → logprob: -1.3996059894561768
    3. '   ' → logprob: -1.5246059894561768
    4. ' if' → logprob: -2.2746059894561768
    5. 'if' → logprob: -2.5246059894561768
    6. ' print' → logprob: -3.3996059894561768
    7. ' d' → logprob: -3.8996059894561768
    8. '    ' → logprob: -4.774605751037598
    9. ' ' → logprob: -5.399605751037598
    10. 'i' → logprob: -6.524605751037598

Token 19: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14323179423809052
    2. '[i' → logprob: -2.0182318687438965
    3. '[d' → logprob: -8.268231391906738
    4. '\[' → logprob: -9.268231391906738
    5. '[...]' → logprob: -10.393231391906738
    6. '[int' → logprob: -10.393231391906738
    7. '```' → logprob: -10.393231391906738
    8. '[]' → logprob: -10.393231391906738
    9. '[I' → logprob: -10.893231391906738
    10. '[s' → logprob: -11.643231391906738

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06602559983730316
    2. ')' → logprob: -2.941025495529175
    3. '])' → logprob: -5.566025733947754
    4. ' ]' → logprob: -5.566025733947754
    5. '[' → logprob: -6.816025733947754
    6. ']=' → logprob: -7.316025733947754
    7. '].' → logprob: -7.816025733947754
    8. ' )' → logprob: -8.316025733947754
    9. ')]' → logprob: -8.316025733947754
    10. ']==' → logprob: -8.941025733947754

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7636034488677979
    2. '<|end|>' → logprob: -1.1386034488677979
    3. '[' → logprob: -2.388603448867798
    4. ' =' → logprob: -2.513603448867798
    5. ')' → logprob: -4.513603210449219
    6. '+=' → logprob: -5.388603210449219
    7. '+' → logprob: -5.388603210449219
    8. '```' → logprob: -5.638603210449219
    9. ' +=' → logprob: -5.638603210449219
    10. 'print' → logprob: -6.263603210449219

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0097618717700243
    2. ' int' → logprob: -4.634761810302734
    3. 'float' → logprob: -12.509761810302734
    4. '(int' → logprob: -14.634761810302734
    5. '   ' → logprob: -15.134761810302734
    6. '[int' → logprob: -15.259761810302734
    7. ' ' → logprob: -15.384761810302734
    8. '=int' → logprob: -15.509761810302734
    9. 'str' → logprob: -15.759761810302734
    10. ' float' → logprob: -15.884761810302734

Token 23: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38692706823349
    2. '(d' → logprob: -1.1369271278381348
    3. '(
' → logprob: -10.886926651000977
    4. '('' → logprob: -11.261926651000977
    5. ' (' → logprob: -12.136926651000977
    6. '(

' → logprob: -12.136926651000977
    7. ')(' → logprob: -13.011926651000977
    8. '((' → logprob: -13.261926651000977
    9. '()' → logprob: -13.761926651000977
    10. ')' → logprob: -13.886926651000977

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016884276643395424
    2. '[' → logprob: -4.1418843269348145
    3. ')' → logprob: -7.3918843269348145
    4. ' [' → logprob: -9.141883850097656
    5. ']' → logprob: -9.641883850097656
    6. '[
' → logprob: -10.766883850097656
    7. '[d' → logprob: -11.766883850097656
    8. '[I' → logprob: -12.141883850097656
    9. '])' → logprob: -12.391883850097656
    10. ')[' → logprob: -12.391883850097656

Token 25: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033496882766485214
    2. '])' → logprob: -3.908496856689453
    3. '))' → logprob: -4.408496856689453
    4. ')])' → logprob: -8.283496856689453
    5. ']' → logprob: -8.408496856689453
    6. ')]' → logprob: -8.658496856689453
    7. '[' → logprob: -11.783496856689453
    8. ']))' → logprob: -11.783496856689453
    9. ''])' → logprob: -11.908496856689453
    10. ' )' → logprob: -11.908496856689453

Token 26: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5978253483772278
    2. 'd' → logprob: -1.472825288772583
    3. 'max' → logprob: -2.722825288772583
    4. 's' → logprob: -2.847825288772583
    5. 'sum' → logprob: -3.472825288772583
    6. ')' → logprob: -4.597825527191162
    7. ' for' → logprob: -4.847825527191162
    8. 'i' → logprob: -4.847825527191162
    9. ' ' → logprob: -5.222825527191162
    10. 'm' → logprob: -5.347825527191162

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29057377576828003
    2. '.' → logprob: -1.9155738353729248
    3. 's' → logprob: -2.915573835372925
    4. '[:]' → logprob: -3.540573835372925
    5. '.append' → logprob: -4.790573596954346
    6. ' =' → logprob: -5.665573596954346
    7. '[]' → logprob: -6.040573596954346
    8. '_' → logprob: -6.290573596954346
    9. '=' → logprob: -6.540573596954346
    10. '[i' → logprob: -6.790573596954346

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21309927105903625
    2. ' ' → logprob: -2.213099241256714
    3. '[]' → logprob: -3.713099241256714
    4. ' []' → logprob: -3.838099241256714
    5. 'max' → logprob: -4.588099479675293
    6. 'sum' → logprob: -4.963099479675293
    7. '[' → logprob: -5.463099479675293
    8. ' max' → logprob: -5.588099479675293
    9. ' [' → logprob: -5.713099479675293
    10. 'd' → logprob: -6.088099479675293

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4494866728782654
    2. '[]' → logprob: -1.8244867324829102
    3. 'max' → logprob: -2.19948673248291
    4. 'sum' → logprob: -3.69948673248291
    5. '[' → logprob: -3.94948673248291
    6. '{}' → logprob: -4.32448673248291
    7. 'd' → logprob: -4.32448673248291
    8. 'sorted' → logprob: -5.32448673248291
    9. '[max' → logprob: -5.44948673248291
    10. 'min' → logprob: -5.57448673248291

Token 30: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07973276823759079
    2. ' for' → logprob: -2.579732656478882
    3. '
' → logprob: -7.829732894897461
    4. '\n' → logprob: -8.829732894897461
    5. '<|end|>' → logprob: -9.704732894897461
    6. '+' → logprob: -10.204732894897461
    7. ',' → logprob: -10.454732894897461
    8. ' ' → logprob: -10.704732894897461
    9. 's' → logprob: -10.829732894897461
    10. '\' → logprob: -10.954732894897461

Token 31: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007114782347343862
    2. ' for' → logprob: -7.625711441040039
    3. '
' → logprob: -8.500711441040039
    4. 'd' → logprob: -12.375711441040039
    5. '\n' → logprob: -12.500711441040039
    6. 's' → logprob: -13.125711441040039
    7. 'max' → logprob: -13.250711441040039
    8. '```' → logprob: -13.250711441040039
    9. ' 
' → logprob: -14.000711441040039
    10. 'if' → logprob: -14.000711441040039

Token 32: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8043699264526367
    2. ' +=' → logprob: -1.1793699264526367
    3. ' ' → logprob: -1.6793699264526367
    4. ' +' → logprob: -3.9293699264526367
    5. ' =' → logprob: -4.179369926452637
    6. '=' → logprob: -4.554369926452637
    7. 'n' → logprob: -5.679369926452637
    8. '++' → logprob: -6.054369926452637
    9. '+=' → logprob: -6.304369926452637
    10. '<|end|>' → logprob: -6.554369926452637

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12696737051010132
    2. ' ' → logprob: -2.126967430114746
    3. '1' → logprob: -10.251967430114746
    4. 'N' → logprob: -13.501967430114746
    5. ' N' → logprob: -14.001967430114746
    6. '2' → logprob: -14.126967430114746
    7. ' -' → logprob: -15.876967430114746
    8. '-' → logprob: -16.06446647644043
    9. 'i' → logprob: -16.56446647644043
    10. 'd' → logprob: -16.62696647644043

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003464289184194058
    2. ' ' → logprob: -8.750346183776855
    3. '1' → logprob: -9.125346183776855
    4. 'N' → logprob: -9.500346183776855
    5. '-' → logprob: -13.375346183776855
    6. '2' → logprob: -13.750346183776855
    7. 'i' → logprob: -15.125346183776855
    8. 'len' → logprob: -15.250346183776855
    9. ' N' → logprob: -15.250346183776855
    10. 'res' → logprob: -15.750346183776855

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29269638657569885
    2. 'while' → logprob: -2.167696475982666
    3. ' while' → logprob: -2.542696475982666
    4. ' 
' → logprob: -3.042696475982666
    5. ' ' → logprob: -5.167696475982666
    6. '<|end|>' → logprob: -5.292696475982666
    7. '  
' → logprob: -7.167696475982666
    8. '' → logprob: -8.042695999145508
    9. '\n' → logprob: -8.917695999145508
    10. '\' → logprob: -9.167695999145508

Token 36: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3239087462425232
    2. ' while' → logprob: -1.323908805847168
    3. '
' → logprob: -5.198908805847168
    4. ' 
' → logprob: -5.948908805847168
    5. ' ' → logprob: -6.323908805847168
    6. '<|end|>' → logprob: -8.448908805847168
    7. 's' → logprob: -9.448908805847168
    8. '  
' → logprob: -9.448908805847168
    9. '```' → logprob: -9.573908805847168
    10. '' → logprob: -10.198908805847168

Token 37: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019770495127886534
    2. 'i' → logprob: -6.25197696685791
    3. ' ' → logprob: -10.12697696685791
    4. ' ' → logprob: -12.12697696685791
    5. '(i' → logprob: -14.62697696685791
    6. ' <' → logprob: -14.62697696685791
    7. '	i' → logprob: -14.62697696685791
    8. '<' → logprob: -15.12697696685791
    9. ' (' → logprob: -15.12697696685791
    10. ' True' → logprob: -15.62697696685791

Token 38: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.281725138425827
    2. '<' → logprob: -1.4067251682281494
    3. ' ' → logprob: -7.90672492980957
    4. '<len' → logprob: -8.90672492980957
    5. ' <=' → logprob: -10.53172492980957
    6. '<size' → logprob: -11.15672492980957
    7. '+' → logprob: -12.15672492980957
    8. '<n' → logprob: -12.40672492980957
    9. '<=' → logprob: -12.40672492980957
    10. 's' → logprob: -12.78172492980957

Token 39: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5762993693351746
    2. ' N' → logprob: -0.8262993693351746
    3. ' ' → logprob: -8.326299667358398
    4. ' len' → logprob: -9.576299667358398
    5. 'len' → logprob: -10.326299667358398
    6. 'n' → logprob: -12.201299667358398
    7. '  ' → logprob: -12.326299667358398
    8. ' n' → logprob: -13.326299667358398
    9. '   ' → logprob: -13.451299667358398
    10. '	N' → logprob: -14.451299667358398

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005117295775562525
    2. ' and' → logprob: -5.880117416381836
    3. ' :' → logprob: -6.255117416381836
    4. ':
' → logprob: -8.380117416381836
    5. 'and' → logprob: -9.505117416381836
    6. '   ' → logprob: -10.380117416381836
    7. '+:' → logprob: -11.130117416381836
    8. ':**' → logprob: -11.755117416381836
    9. ' ' → logprob: -12.005117416381836
    10. '+' → logprob: -12.130117416381836

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.648182213306427
    2. ' res' → logprob: -1.5231821537017822
    3. ' ' → logprob: -2.2731821537017822
    4. ' if' → logprob: -2.5231821537017822
    5. 'res' → logprob: -3.3981821537017822
    6. '    ' → logprob: -4.023182392120361
    7. '+' → logprob: -5.648182392120361
    8. '```' → logprob: -5.773182392120361
    9. 'if' → logprob: -5.898182392120361
    10. ' +' → logprob: -6.398182392120361

Token 42: ' j' (ID: 441)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26195967197418213
    2. 'res' → logprob: -2.0119595527648926
    3. '   ' → logprob: -3.8869595527648926
    4. ' if' → logprob: -3.8869595527648926
    5. 'd' → logprob: -4.011959552764893
    6. '1' → logprob: -4.761959552764893
    7. 'j' (adapté à ' j') → logprob: -4.761959552764893
    8. ' res' → logprob: -5.261959552764893
    9. ' ' → logprob: -5.386959552764893
    10. 'max' → logprob: -6.011959552764893

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037898141890764236
    2. '=' → logprob: -3.412898063659668
    3. '=i' → logprob: -5.537898063659668
    4. ' +=' → logprob: -8.412898063659668
    5. '+=' → logprob: -10.412898063659668
    6. ' ' → logprob: -10.787898063659668
    7. '=j' → logprob: -11.537898063659668
    8. ',' → logprob: -12.537898063659668
    9. '+' → logprob: -12.662898063659668
    10. ' ==' → logprob: -12.787898063659668

Token 44: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0027362818364053965
    2. ' i' → logprob: -6.2527360916137695
    3. '0' → logprob: -7.6277360916137695
    4. '1' → logprob: -8.25273609161377
    5. 'N' → logprob: -11.12773609161377
    6. ' ' → logprob: -11.25273609161377
    7. '   ' → logprob: -11.87773609161377
    8. '2' → logprob: -11.87773609161377
    9. 'j' → logprob: -12.62773609161377
    10. '	i' → logprob: -12.62773609161377

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019955333322286606
    2. ' +' → logprob: -4.019955158233643
    3. '<|end|>' → logprob: -6.394955158233643
    4. '<|end|>' → logprob: -9.8949556350708
    5. '+
' → logprob: -10.6449556350708
    6. '+j' → logprob: -11.0199556350708
    7. '
' → logprob: -11.1449556350708
    8. '```' → logprob: -12.3949556350708
    9. 'while' → logprob: -12.6449556350708
    10. ' while' → logprob: -13.0199556350708

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022468422539532185
    2. ' ' → logprob: -6.502246856689453
    3. '2' → logprob: -7.252246856689453
    4. 'd' → logprob: -10.877246856689453
    5. '3' → logprob: -12.377246856689453
    6. 'res' → logprob: -12.689746856689453
    7. '   ' → logprob: -13.189746856689453
    8. '0' → logprob: -13.314746856689453
    9. ' d' → logprob: -13.502246856689453
    10. '4' → logprob: -14.314746856689453

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018289341824129224
    2. '2' → logprob: -7.001829147338867
    3. 'd' → logprob: -7.126829147338867
    4. 'res' → logprob: -10.001829147338867
    5. ' ' → logprob: -10.126829147338867
    6. '3' → logprob: -11.501829147338867
    7. '0' → logprob: -11.751829147338867
    8. '4' → logprob: -13.564329147338867
    9. 'int' → logprob: -13.751829147338867
    10. 'a' → logprob: -14.439329147338867

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6343424916267395
    2. '
' → logprob: -1.5093424320220947
    3. '<|end|>' → logprob: -1.5093424320220947
    4. ' while' → logprob: -4.759342670440674
    5. 'if' → logprob: -4.759342670440674
    6. '   ' → logprob: -5.509342670440674
    7. '+' → logprob: -6.009342670440674
    8. 'and' → logprob: -6.884342670440674
    9. '```' → logprob: -7.759342670440674
    10. '<|end|>' → logprob: -7.759342670440674

Token 50: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.009055551141500473
    2. ' while' → logprob: -4.7590556144714355
    3. '<|end|>' → logprob: -8.259055137634277
    4. 'if' → logprob: -9.384055137634277
    5. 'and' → logprob: -10.509055137634277
    6. '```' → logprob: -11.009055137634277
    7. ' ' → logprob: -11.134055137634277
    8. '	while' → logprob: -11.509055137634277
    9. '+' → logprob: -12.134055137634277
    10. '0' → logprob: -12.884055137634277

Token 51: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.42876115441322327
    2. 'j' → logprob: -1.0537611246109009
    3. ' ' → logprob: -10.30376148223877
    4. 'N' → logprob: -11.80376148223877
    5. 'd' → logprob: -12.30376148223877
    6. ' N' → logprob: -12.67876148223877
    7. '   ' → logprob: -13.05376148223877
    8. ' d' → logprob: -13.30376148223877
    9. '	j' → logprob: -13.30376148223877
    10. '(j' → logprob: -13.55376148223877

Token 52: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048630282282829285
    2. '<' → logprob: -3.0486302375793457
    3. '<N' → logprob: -10.423630714416504
    4. ' ' → logprob: -12.048630714416504
    5. '<n' → logprob: -12.673630714416504
    6. '<len' → logprob: -13.298630714416504
    7. ' <=' → logprob: -13.548630714416504
    8. '[' → logprob: -15.548630714416504
    9. '<=' → logprob: -15.923630714416504
    10. ')' → logprob: -16.048629760742188

Token 53: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019337546546012163
    2. ' N' → logprob: -6.251933574676514
    3. ' ' → logprob: -12.751934051513672
    4. '   ' → logprob: -13.251934051513672
    5. '  ' → logprob: -15.126934051513672
    6. 'len' → logprob: -15.876934051513672
    7. 'n' → logprob: -16.251934051513672
    8. '	N' → logprob: -17.251934051513672
    9. 'j' → logprob: -17.376934051513672
    10. ')' → logprob: -18.001934051513672

Token 54: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08899661898612976
    2. 'and' → logprob: -2.463996648788452
    3. ' ' → logprob: -10.338996887207031
    4. '   ' → logprob: -11.338996887207031
    5. ':' → logprob: -12.213996887207031
    6. ':
' → logprob: -12.463996887207031
    7. '	and' → logprob: -13.963996887207031
    8. '    ' → logprob: -14.088996887207031
    9. '<|end|>' → logprob: -14.338996887207031
    10. ',' → logprob: -14.963996887207031

Token 55: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08314419537782669
    2. 'and' → logprob: -2.583144187927246
    3. '       ' → logprob: -5.958144187927246
    4. ' ' → logprob: -7.083144187927246
    5. '   ' → logprob: -7.333144187927246
    6. '    ' → logprob: -9.583144187927246
    7. ' if' → logprob: -10.958144187927246
    8. '        ' → logprob: -11.458144187927246
    9. 'if' → logprob: -11.458144187927246
    10. '  ' → logprob: -11.458144187927246

Token 56: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07525580376386642
    2. 'if' → logprob: -3.075255870819092
    3. '       ' → logprob: -4.575255870819092
    4. ' and' → logprob: -4.575255870819092
    5. ' ' → logprob: -5.575255870819092
    6. '           ' → logprob: -7.700255870819092
    7. '        ' → logprob: -7.825255870819092
    8. '   ' → logprob: -7.950255870819092
    9. '    ' → logprob: -8.325255393981934
    10. 'and' → logprob: -8.325255393981934

Token 57: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5827171206474304
    2. '+=' → logprob: -0.9577171206474304
    3. '+' → logprob: -3.082717180252075
    4. '=' → logprob: -5.582716941833496
    5. ' +' → logprob: -5.707716941833496
    6. ' =' → logprob: -5.957716941833496
    7. '|' → logprob: -7.707716941833496
    8. ' <' → logprob: -7.707716941833496
    9. '<' → logprob: -8.457716941833496
    10. ' ^=' → logprob: -8.457716941833496

Token 58: ' res' (ID: 694)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.29369863867759705
    2. 'max' → logprob: -1.5436986684799194
    3. ' d' → logprob: -4.043698787689209
    4. ' res' → logprob: -4.043698787689209
    5. 'd' → logprob: -5.668698787689209
    6. 'res' → logprob: -6.168698787689209
    7. ' ' → logprob: -9.29369831085205
    8. ' abs' → logprob: -9.66869831085205
    9. '(max' → logprob: -10.41869831085205
    10. 'abs' → logprob: -10.91869831085205

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14314015209674835
    2. ' +' → logprob: -2.0181400775909424
    3. ' |' → logprob: -9.018139839172363
    4. ' ' → logprob: -9.393139839172363
    5. '-' → logprob: -9.518139839172363
    6. ' -' → logprob: -9.643139839172363
    7. '|' → logprob: -10.268139839172363
    8. '*' → logprob: -11.018139839172363
    9. ' or' → logprob: -11.143139839172363
    10. 'max' → logprob: -11.393139839172363

Token 60: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23640064895153046
    2. ' d' → logprob: -1.7364006042480469
    3. 'abs' → logprob: -4.611400604248047
    4. '(d' → logprob: -4.861400604248047
    5. '1' → logprob: -5.236400604248047
    6. ' abs' → logprob: -5.736400604248047
    7. ' (' → logprob: -5.986400604248047
    8. ' ' → logprob: -6.361400604248047
    9. 'max' → logprob: -7.111400604248047
    10. 'int' → logprob: -7.361400604248047

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38752588629722595
    2. '[j' → logprob: -1.1375259160995483
    3. 'i' → logprob: -8.01252555847168
    4. 'j' → logprob: -8.38752555847168
    5. '[' → logprob: -10.01252555847168
    6. ' [' → logprob: -11.51252555847168
    7. '```' → logprob: -12.01252555847168
    8. '[
' → logprob: -12.45002555847168
    9. '   ' → logprob: -12.70002555847168
    10. '[q' → logprob: -13.20002555847168

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2259100377559662
    2. ']*' → logprob: -1.6009100675582886
    3. ']+' → logprob: -7.725910186767578
    4. '*' → logprob: -10.600910186767578
    5. ']%' → logprob: -11.475910186767578
    6. ']-' → logprob: -11.850910186767578
    7. ']^' → logprob: -12.600910186767578
    8. '+' → logprob: -13.225910186767578
    9. ']*(' → logprob: -13.600910186767578
    10. ']==' → logprob: -13.725910186767578

Token 63: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2887967824935913
    2. ' *' → logprob: -1.7887967824935913
    3. '+' → logprob: -3.038796901702881
    4. '*j' → logprob: -3.788796901702881
    5. ' +' → logprob: -4.788796901702881
    6. '*d' → logprob: -6.288796901702881
    7. '+j' → logprob: -6.663796901702881
    8. '-' → logprob: -7.413796901702881
    9. ' -' → logprob: -7.913796901702881
    10. '%' → logprob: -7.913796901702881

Token 64: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20152832567691803
    2. ' d' → logprob: -1.7015283107757568
    3. ' ' → logprob: -9.326528549194336
    4. '   ' → logprob: -11.826528549194336
    5. '	d' → logprob: -12.201528549194336
    6. '  ' → logprob: -12.326528549194336
    7. ' ' → logprob: -12.701528549194336
    8. '2' → logprob: -14.076528549194336
    9. '    ' → logprob: -14.076528549194336
    10. '(d' → logprob: -14.951528549194336

Token 65: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015264409012161195
    2. '[' → logprob: -8.875152587890625
    3. 'j' → logprob: -11.375152587890625
    4. '[i' → logprob: -14.625152587890625
    5. '	j' → logprob: -15.375152587890625
    6. '[js' → logprob: -15.750152587890625
    7. ' [' → logprob: -16.000152587890625
    8. '```' → logprob: -16.875152587890625
    9. ' j' → logprob: -17.000152587890625
    10. '[
' → logprob: -17.125152587890625

Token 66: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020521802827715874
    2. '<|end|>' → logprob: -4.770521640777588
    3. ']' → logprob: -5.395521640777588
    4. ')
' → logprob: -6.270521640777588
    5. '       ' → logprob: -6.395521640777588
    6. ' ' → logprob: -6.520521640777588
    7. '<|end|>' → logprob: -7.020521640777588
    8. '
' → logprob: -7.895521640777588
    9. '   ' → logprob: -8.145522117614746
    10. ' )' → logprob: -8.645522117614746

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40749311447143555
    2. '
' → logprob: -1.5324931144714355
    3. 'j' → logprob: -3.2824931144714355
    4. '        
' → logprob: -3.5324931144714355
    5. ' 
' → logprob: -4.7824931144714355
    6. '    
' → logprob: -4.9074931144714355
    7. '\n' → logprob: -4.9074931144714355
    8. '   ' → logprob: -5.1574931144714355
    9. ' ' → logprob: -5.7824931144714355
    10. '<|end|>' → logprob: -5.7824931144714355

Token 68: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.016986705362796783
    2. ' j' → logprob: -4.141986846923828
    3. '       ' → logprob: -7.016986846923828
    4. '   ' → logprob: -10.141986846923828
    5. '	j' → logprob: -11.641986846923828
    6. '           ' → logprob: -13.641986846923828
    7. '    ' → logprob: -13.641986846923828
    8. '+' → logprob: -13.766986846923828
    9. '        ' → logprob: -13.891986846923828
    10. ' ' → logprob: -14.141986846923828

Token 69: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3538772761821747
    2. '+' → logprob: -1.353877305984497
    3. ' +=' → logprob: -3.228877305984497
    4. '=' → logprob: -8.853877067565918
    5. ' +' → logprob: -9.978877067565918
    6. '++' → logprob: -11.978877067565918
    7. '+='' → logprob: -13.728877067565918
    8. '+="' → logprob: -13.853877067565918
    9. '+++' → logprob: -14.478877067565918
    10. ' =' → logprob: -15.228877067565918

Token 70: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1602427214384079
    2. 'j' → logprob: -1.9102426767349243
    3. '+' → logprob: -11.035243034362793
    4. '1' → logprob: -13.910243034362793
    5. ' ' → logprob: -14.035243034362793
    6. ' +' → logprob: -15.410243034362793
    7. '	j' → logprob: -16.160242080688477
    8. '    ' → logprob: -16.285242080688477
    9. 'i' → logprob: -16.410242080688477
    10. ' i' → logprob: -16.535242080688477

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024988483637571335
    2. ' +' → logprob: -6.002498626708984
    3. '1' → logprob: -10.877498626708984
    4. ' ' → logprob: -12.752498626708984
    5. '+j' → logprob: -14.002498626708984
    6. '+
' → logprob: -15.377498626708984
    7. ' plus' → logprob: -15.627498626708984
    8. '++' → logprob: -16.127498626708984
    9. '2' → logprob: -17.502498626708984
    10. 'plus' → logprob: -17.877498626708984

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -16.875804901123047
    4. ' ' → logprob: -18.375804901123047
    5. '2' → logprob: -18.625804901123047
    6. '```' → logprob: -19.000804901123047
    7. '  ' → logprob: -19.125804901123047
    8. '    ' → logprob: -19.875804901123047
    9. '１' → logprob: -20.000804901123047
    10. '+' → logprob: -20.000804901123047

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -20.0
    5. '  ' → logprob: -20.75
    6. '2' → logprob: -20.875
    7. '<|end|>' → logprob: -21.0
    8. '۱' → logprob: -21.75
    9. '１' → logprob: -21.875
    10. '
' → logprob: -22.25

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00404753303155303
    2. '
' → logprob: -6.129047393798828
    3. ' i' → logprob: -7.504047393798828
    4. '\n' → logprob: -8.129047393798828
    5. 'i' → logprob: -8.254047393798828
    6. '    
' → logprob: -8.879047393798828
    7. '	i' → logprob: -8.879047393798828
    8. '\' → logprob: -9.004047393798828
    9. '  ' → logprob: -9.379047393798828
    10. ' ' → logprob: -9.504047393798828

Token 75: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38941311836242676
    2. '   ' → logprob: -1.1394131183624268
    3. ' i' → logprob: -6.139412879943848
    4. '
' → logprob: -8.764412879943848
    5. '	i' → logprob: -9.264412879943848
    6. '```' → logprob: -9.639412879943848
    7. '  ' → logprob: -10.514412879943848
    8. '    
' → logprob: -11.264412879943848
    9. ' ' → logprob: -11.389412879943848
    10. '[i' → logprob: -13.014412879943848

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.01888495683670044
    2. '   ' → logprob: -4.018885135650635
    3. ' i' → logprob: -7.268885135650635
    4. '	i' → logprob: -10.268884658813477
    5. '  ' → logprob: -13.643884658813477
    6. '    
' → logprob: -13.893884658813477
    7. '```' → logprob: -14.768884658813477
    8. ' ' → logprob: -15.518884658813477
    9. '
' → logprob: -16.018884658813477
    10. '    ' → logprob: -16.018884658813477

Token 77: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5033015608787537
    2. '=' → logprob: -1.0033016204833984
    3. '+=' → logprob: -4.003301620483398
    4. ' +=' → logprob: -5.003301620483398
    5. ' =' → logprob: -5.628301620483398
    6. ' +' → logprob: -8.503301620483398
    7. ' ' → logprob: -11.003301620483398
    8. '++' → logprob: -12.128301620483398
    9. '   ' → logprob: -12.628301620483398
    10. '<|end|>' → logprob: -13.253301620483398

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759429931640625
    2. 'i' → logprob: -0.8259429931640625
    3. ' ' → logprob: -13.450942993164062
    4. '1' → logprob: -13.575942993164062
    5. '	i' → logprob: -15.075942993164062
    6. '+' → logprob: -15.200942993164062
    7. '   ' → logprob: -15.575942993164062
    8. '    ' → logprob: -16.450942993164062
    9. '_i' → logprob: -17.825942993164062
    10. '  ' → logprob: -18.200942993164062

Token 79: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006717267446219921
    2. ' +' → logprob: -5.006717205047607
    3. ' ' → logprob: -13.756717681884766
    4. '1' → logprob: -14.131717681884766
    5. ' plus' → logprob: -16.006717681884766
    6. '++' → logprob: -17.006717681884766
    7. '＋' → logprob: -17.881717681884766
    8. '+i' → logprob: -18.381717681884766
    9. '+
' → logprob: -18.381717681884766
    10. 'plus' → logprob: -18.506717681884766

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '2' → logprob: -16.750431060791016
    4. '   ' → logprob: -18.125431060791016
    5. '```' → logprob: -18.375431060791016
    6. '  ' → logprob: -19.125431060791016
    7. '0' → logprob: -19.375431060791016
    8. '１' → logprob: -19.750431060791016
    9. ' ' → logprob: -20.250431060791016
    10. '    ' → logprob: -20.875431060791016

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -19.0
    4. '１' → logprob: -19.375
    5. '   ' → logprob: -20.0625
    6. '۱' → logprob: -20.125
    7. '  ' → logprob: -20.3125
    8. '```' → logprob: -20.375
    9. '१' → logprob: -20.5625
    10. '১' → logprob: -20.6875

Token 82: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00037466554204002023
    2. '#' → logprob: -8.875374794006348
    3. '\n' → logprob: -9.750374794006348
    4. ' print' → logprob: -10.000374794006348
    5. '
' → logprob: -10.125374794006348
    6. '#print' → logprob: -10.250374794006348
    7. '```' → logprob: -11.000374794006348
    8. '<|end|>' → logprob: -11.125374794006348
    9. ')' → logprob: -11.375374794006348
    10. '\' → logprob: -12.750374794006348

Token 83: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3856492842023727e-06
    2. ' print' → logprob: -14.500000953674316
    3. '#print' → logprob: -15.125000953674316
    4. 'pr' → logprob: -15.625000953674316
    5. 'p' → logprob: -15.875000953674316
    6. '#' → logprob: -16.000001907348633
    7. ')' → logprob: -16.500001907348633
    8. '```' → logprob: -17.000001907348633
    9. 'prin' → logprob: -17.125001907348633
    10. '
' → logprob: -17.500001907348633

Token 84: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024958718568086624
    2. '(res' → logprob: -6.002495765686035
    3. '()' → logprob: -11.752495765686035
    4. '(
' → logprob: -12.252495765686035
    5. '('' → logprob: -12.627495765686035
    6. '("("' → logprob: -13.127495765686035
    7. ' (' → logprob: -14.377495765686035
    8. '(

' → logprob: -14.627495765686035
    9. '(`' → logprob: -14.752495765686035
    10. '((' → logprob: -15.377495765686035

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.125001907348633
    3. '))' → logprob: -14.375001907348633
    4. ')`' → logprob: -17.000001907348633
    5. ')}' → logprob: -17.625001907348633
    6. '()' → logprob: -18.000001907348633
    7. ')
' → logprob: -18.375001907348633
    8. '')' → logprob: -18.375001907348633
    9. '`)' → logprob: -18.625001907348633
    10. '(' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 71
Précision stricte (1ère position): 33.73%
Précision adaptée (1ère position): 38.55%
Précision (top 10): 85.54%
================================================================================
