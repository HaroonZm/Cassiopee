================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def get_array():
    """
    Lit une ligne de l'entrée standard, divise la chaîne obtenue en éléments séparés par des espaces,
    et convertit chaque élément en entier pour retourner une liste d'entiers.

    Returns:
        list: Liste d'entiers lus sur une seule ligne de l'entrée standard.
    """
    return list(map(int, sys.stdin.readline().strip().split()))

def get_ints():
    """
    Lit une ligne de l'entrée standard, divise la chaîne obtenue en éléments séparés par des espaces,
    et convertit chaque élément en entier pour retourner un itérable d'entiers.

    Returns:
        map: Un objet map contenant les entiers lus sur une seule ligne de l'entrée standard.
    """
    return map(int, sys.stdin.readline().strip().split())

def input():
    """
    Lit une ligne de l'entrée standard et supprime les espaces en début et fin de ligne.

    Returns:
        str: La ligne lue, sans espaces de début ou de fin.
    """
    return sys.stdin.readline().strip()

# Lecture d'un entier depuis l'entrée standard
n = int(input())

# Calcul et affichage du cube de l'entier lu
print(pow(n, 3))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '_array' (ID: 8766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20460949838161469
    2. ' _' → logprob: -2.4546093940734863
    3. '_user' → logprob: -3.5796093940734863
    4. '_data' → logprob: -3.9546093940734863
    5. '_input' → logprob: -4.329609394073486
    6. '_line' → logprob: -4.704609394073486
    7. '_name' → logprob: -5.079609394073486
    8. '_version' → logprob: -5.204609394073486
    9. '_file' → logprob: -6.579609394073486
    10. 'attr' → logprob: -6.579609394073486

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009481580927968025
    2. '_' → logprob: -5.134481430053711
    3. '[' → logprob: -6.134481430053711
    4. '[]' → logprob: -8.759481430053711
    5. '```' → logprob: -8.759481430053711
    6. 's' → logprob: -9.009481430053711
    7. '_list' → logprob: -9.384481430053711
    8. '():' → logprob: -9.634481430053711
    9. '_length' → logprob: -9.634481430053711
    10. '_size' → logprob: -9.884481430053711

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4434334337711334
    2. '(' → logprob: -1.693433403968811
    3. '[' → logprob: -2.5684335231781006
    4. '():' → logprob: -3.6934335231781006
    5. '```' → logprob: -3.8184335231781006
    6. '[]' → logprob: -4.0684332847595215
    7. ' return' → logprob: -4.9434332847595215
    8. 'return' → logprob: -5.0684332847595215
    9. '(
' → logprob: -5.4434332847595215
    10. '()' → logprob: -5.6934332847595215

Token 8: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7601792216300964
    2. '[' → logprob: -1.3851792812347412
    3. ' return' → logprob: -2.385179281234741
    4. 'return' → logprob: -3.010179281234741
    5. ' ' → logprob: -3.135179281234741
    6. '[]' → logprob: -3.260179281234741
    7. ' [' → logprob: -3.635179281234741
    8. ' []' → logprob: -4.510179042816162
    9. '    ' → logprob: -4.885179042816162
    10. '[
' → logprob: -5.635179042816162

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5300912857055664
    2. 'Returns' → logprob: -1.1550912857055664
    3. 'return' → logprob: -3.2800912857055664
    4. '"""' → logprob: -4.155091285705566
    5. 'Return' → logprob: -4.530091285705566
    6. ' returns' → logprob: -5.030091285705566
    7. ' return' → logprob: -5.155091285705566
    8. 'returns' → logprob: -5.655091285705566
    9. ' Returns' → logprob: -6.030091285705566
    10. 'A' → logprob: -6.280091285705566

Token 10: ' Lit' (ID: 45595)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Returns' → logprob: -0.5960524082183838
    2. 'return' → logprob: -2.096052408218384
    3. 'Return' → logprob: -2.096052408218384
    4. '   ' → logprob: -2.221052408218384
    5. 'Generate' → logprob: -3.096052408218384
    6. 'Retrieve' → logprob: -3.971052408218384
    7. 'returns' → logprob: -5.096052169799805
    8. 'Get' → logprob: -5.471052169799805
    9. 'Creates' → logprob: -5.596052169799805
    10. 'Fetch' → logprob: -5.846052169799805

Token 11: ' une' (ID: 2463)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6134024858474731
    2. 'e' → logprob: -0.8634024858474731
    3. 'eral' → logprob: -4.113402366638184
    4. 't' → logprob: -5.238402366638184
    5. 'tle' → logprob: -5.238402366638184
    6. '()' → logprob: -6.238402366638184
    7. '   ' → logprob: -6.488402366638184
    8. 'te' → logprob: -7.113402366638184
    9. 'array' → logprob: -7.238402366638184
    10. '(e' → logprob: -7.363402366638184

Token 12: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.471885085105896
    2. ' ' → logprob: -2.2218852043151855
    3. ' liste' → logprob: -2.3468852043151855
    4. 'ligne' → logprob: -2.9718852043151855
    5. 'liste' → logprob: -3.4718852043151855
    6. ' chaîne' → logprob: -3.8468852043151855
    7. 'l' → logprob: -4.2218852043151855
    8. ' tableau' → logprob: -4.4718852043151855
    9. 'entrée' → logprob: -4.7218852043151855
    10. 'chaine' → logprob: -5.7218852043151855

Token 13: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43643099069595337
    2. ' de' → logprob: -1.1864309310913086
    3. ' et' → logprob: -4.061430931091309
    4. ' du' → logprob: -4.686430931091309
    5. 'de' → logprob: -5.311430931091309
    6. '\n' → logprob: -5.436430931091309
    7. ' complète' → logprob: -6.061430931091309
    8. ',' → logprob: -6.811430931091309
    9. ' en' → logprob: -6.936430931091309
    10. ' suivante' → logprob: -6.936430931091309

Token 14: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2526094913482666
    2. 'entrée' → logprob: -1.2526094913482666
    3. 'input' → logprob: -2.2526094913482666
    4. ' code' → logprob: -2.5026094913482666
    5. 'l' → logprob: -3.0026094913482666
    6. 'code' → logprob: -3.0026094913482666
    7. 'stdin' → logprob: -3.1276094913482666
    8. 'la' → logprob: -4.0026092529296875
    9. ' stdin' → logprob: -4.0026092529296875
    10. ' l' → logprob: -4.1276092529296875

Token 15: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.3967829942703247
    2. 'entrée' → logprob: -1.5217829942703247
    3. 'input' → logprob: -2.771782875061035
    4. 'e' → logprob: -3.896782875061035
    5. 'a' → logprob: -4.521782875061035
    6. 'stdin' → logprob: -4.896782875061035
    7. 'es' → logprob: -6.021782875061035
    8. ''' → logprob: -6.271782875061035
    9. ' entrée' → logprob: -7.396782875061035
    10. ' input' → logprob: -7.396782875061035

Token 16: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.06458992511034012
    2. 'standard' → logprob: -3.1895899772644043
    3. ' stdin' → logprob: -4.689589977264404
    4. ' utilisateur' → logprob: -5.689589977264404
    5. 'stdin' → logprob: -6.064589977264404
    6. '   ' → logprob: -6.314589977264404
    7. ' et' → logprob: -6.564589977264404
    8. 'Standard' → logprob: -7.564589977264404
    9. ',' → logprob: -7.814589977264404
    10. '(stdin' → logprob: -8.439589500427246

Token 17: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31694087386131287
    2. ' et' → logprob: -1.4419409036636353
    3. ',' → logprob: -3.5669407844543457
    4. ' en' → logprob: -5.941940784454346
    5. 'et' → logprob: -6.441940784454346
    6. '    ' → logprob: -7.441940784454346
    7. ' ,' → logprob: -7.566940784454346
    8. ' and' → logprob: -7.941940784454346
    9. ' return' → logprob: -8.566941261291504
    10. 'return' → logprob: -8.566941261291504

Token 18: ' div' (ID: 4223)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21199434995651245
    2. ' et' → logprob: -2.7119944095611572
    3. 'la' → logprob: -3.7119944095611572
    4. '   ' → logprob: -3.9619944095611572
    5. 'strip' → logprob: -4.336994171142578
    6. ' tokenize' → logprob: -4.461994171142578
    7. ' strip' → logprob: -5.086994171142578
    8. 'et' → logprob: -5.086994171142578
    9. ' retourne' → logprob: -5.336994171142578
    10. ' récup' → logprob: -5.336994171142578

Token 19: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.1321852058172226
    2. 'isé' → logprob: -2.507185220718384
    3. 'ide' → logprob: -3.507185220718384
    4. 'isée' → logprob: -5.257184982299805
    5. 'iser' → logprob: -6.382184982299805
    6. 'er' → logprob: -6.632184982299805
    7. 'e' → logprob: -7.007184982299805
    8. 'ue' → logprob: -7.257184982299805
    9. 'isee' → logprob: -7.882184982299805
    10. 'id' → logprob: -7.882184982299805

Token 20: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.71058589220047
    2. ' ' → logprob: -1.0855858325958252
    3. 'la' → logprob: -1.9605858325958252
    4. '<|end|>' → logprob: -5.085586071014404
    5. 'l' → logprob: -5.585586071014404
    6. ' l' → logprob: -5.835586071014404
    7. ' )' → logprob: -5.960586071014404
    8. 'au' → logprob: -6.085586071014404
    9. 'le' → logprob: -6.460586071014404
    10. ' les' → logprob: -6.710586071014404

Token 21: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.9249976277351379
    2. 'ligne' → logprob: -1.1749975681304932
    3. ' chaîne' → logprob: -1.9249975681304932
    4. 'cha' → logprob: -2.299997568130493
    5. ' ligne' → logprob: -3.549997568130493
    6. ' chaine' → logprob: -4.549997806549072
    7. 'l' → logprob: -5.424997806549072
    8. 'string' → logprob: -6.299997806549072
    9. ' string' → logprob: -6.674997806549072
    10. ' ' → logprob: -7.424997806549072

Token 22: ' obten' (ID: 28150)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.009303489699959755
    2. 'en' → logprob: -5.384303569793701
    3. ' par' → logprob: -6.134303569793701
    4. '<|end|>' → logprob: -7.509303569793701
    5. ' ' → logprob: -7.634303569793701
    6. ' et' → logprob: -8.259303092956543
    7. 'par' → logprob: -8.509303092956543
    8. ',' → logprob: -8.884303092956543
    9. '   ' → logprob: -9.009303092956543
    10. ' )' → logprob: -9.134303092956543

Token 23: 'ue' (ID: 466)
  Prédit: 'enue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enue' → logprob: -0.37630924582481384
    2. 'ue' → logprob: -1.2513092756271362
    3. 'u' → logprob: -3.8763091564178467
    4. 'ie' → logprob: -6.501309394836426
    5. 'en' → logprob: -6.751309394836426
    6. 'e' → logprob: -6.876309394836426
    7. 'enu' → logprob: -7.001309394836426
    8. 'rée' → logprob: -8.001309394836426
    9. 'endue' → logprob: -8.001309394836426
    10. 'ra' → logprob: -8.251309394836426

Token 24: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1768217235803604
    2. 'en' → logprob: -1.9268217086791992
    3. ' par' → logprob: -4.301821708679199
    4. 'par' → logprob: -6.926821708679199
    5. '```' → logprob: -7.676821708679199
    6. ' avec' → logprob: -7.801821708679199
    7. ' ' → logprob: -8.0518217086792
    8. ' et' → logprob: -8.8018217086792
    9. 'sur' → logprob: -9.3018217086792
    10. ',' → logprob: -9.4268217086792

Token 25: ' éléments' (ID: 57375)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.21181900799274445
    2. 'élé' → logprob: -2.3368189334869385
    3. ' tokens' → logprob: -2.5868189334869385
    4. 'm' → logprob: -4.836819171905518
    5. '```' → logprob: -5.836819171905518
    6. ' éléments' → logprob: -6.461819171905518
    7. 'token' → logprob: -6.711819171905518
    8. 'liste' → logprob: -7.211819171905518
    9. 'des' → logprob: -7.336819171905518
    10. ' morceaux' → logprob: -7.336819171905518

Token 26: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6119386553764343
    2. ',' → logprob: -1.361938714981079
    3. ' et' → logprob: -2.611938714981079
    4. ' par' → logprob: -2.736938714981079
    5. 'par' → logprob: -3.736938714981079
    6. ' en' → logprob: -4.7369384765625
    7. '```' → logprob: -4.8619384765625
    8. 'et' → logprob: -4.9869384765625
    9. ' ,' → logprob: -5.4869384765625
    10. ' de' → logprob: -5.7369384765625

Token 27: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0016966033726930618
    2. 'es' → logprob: -6.501696586608887
    3. 'é' → logprob: -9.001696586608887
    4. '```' → logprob: -10.001696586608887
    5. 'par' → logprob: -11.501696586608887
    6. 'ès' → logprob: -12.126696586608887
    7. 's' → logprob: -12.501696586608887
    8. 'ées' → logprob: -13.626696586608887
    9. 'e' → logprob: -13.751696586608887
    10. ' par' → logprob: -13.876696586608887

Token 28: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3518865406513214
    2. 'par' → logprob: -1.226886510848999
    3. '   ' → logprob: -6.226886749267578
    4. ',' → logprob: -7.101886749267578
    5. ' et' → logprob: -8.976886749267578
    6. ' ' → logprob: -9.101886749267578
    7. ' by' → logprob: -9.476886749267578
    8. '```' → logprob: -9.851886749267578
    9. 's' → logprob: -9.976886749267578
    10. 'et' → logprob: -10.101886749267578

Token 29: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7721809148788452
    2. ' des' → logprob: -1.1471809148788452
    3. 'un' → logprob: -2.0221810340881348
    4. ' un' → logprob: -2.7721810340881348
    5. ''un' → logprob: -4.897181034088135
    6. ' ' → logprob: -5.772181034088135
    7. 'esp' → logprob: -5.897181034088135
    8. 'es' → logprob: -6.022181034088135
    9. ''' → logprob: -6.147181034088135
    10. ' ' → logprob: -6.147181034088135

Token 30: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.01177393551915884
    2. ' espaces' → logprob: -5.261774063110352
    3. 'es' → logprob: -5.761774063110352
    4. ''esp' → logprob: -5.761774063110352
    5. 'spaces' → logprob: -8.886774063110352
    6. '’esp' → logprob: -10.386774063110352
    7. ''espace' → logprob: -10.636774063110352
    8. ' ' → logprob: -12.136774063110352
    9. '```' → logprob: -12.136774063110352
    10. '"' → logprob: -12.636774063110352

Token 31: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22712339460849762
    2. '   ' → logprob: -1.7271233797073364
    3. ' et' → logprob: -4.227123260498047
    4. ' ,' → logprob: -4.852123260498047
    5. 'et' → logprob: -7.102123260498047
    6. '"' → logprob: -7.977123260498047
    7. 's' → logprob: -7.977123260498047
    8. '```' → logprob: -8.227123260498047
    9. ')' → logprob: -8.352123260498047
    10. ''' → logprob: -8.602123260498047

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23559872806072235
    2. ' et' → logprob: -2.3605988025665283
    3. 'et' → logprob: -2.3605988025665283
    4. ' puis' → logprob: -3.9855988025665283
    5. 'p' → logprob: -6.735598564147949
    6. ' and' → logprob: -7.735598564147949
    7. '    ' → logprob: -7.985598564147949
    8. ',' → logprob: -8.98559856414795
    9. ' retourne' → logprob: -9.36059856414795
    10. ' les' → logprob: -9.48559856414795

Token 33: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' (adapté à ' et') → logprob: -0.7654770016670227
    2. ' puis' → logprob: -1.015476942062378
    3. 'p' → logprob: -2.515476942062378
    4. ' et' → logprob: -2.890476942062378
    5. '   ' → logprob: -4.140477180480957
    6. ' les' → logprob: -5.015477180480957
    7. ' retourne' → logprob: -5.515477180480957
    8. 'return' → logprob: -6.265477180480957
    9. ' convert' → logprob: -6.390477180480957
    10. 'les' → logprob: -6.640477180480957

Token 34: ' convert' (ID: 8452)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.7575079202651978
    2. 'ret' → logprob: -1.3825079202651978
    3. 'ren' → logprob: -2.757507801055908
    4. ' les' → logprob: -2.757507801055908
    5. ' ren' → logprob: -3.007507801055908
    6. 'return' → logprob: -3.007507801055908
    7. 'les' → logprob: -4.007507801055908
    8. ' return' → logprob: -4.507507801055908
    9. ' convert' → logprob: -4.882507801055908
    10. 'convert' → logprob: -5.257507801055908

Token 35: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00041732576210051775
    2. ' it' → logprob: -7.875417232513428
    3. '   ' → logprob: -11.500417709350586
    4. '```' → logprob: -12.375417709350586
    5. '_it' → logprob: -12.625417709350586
    6. 'i' → logprob: -12.875417709350586
    7. 'et' → logprob: -13.125417709350586
    8. '
' → logprob: -13.250417709350586
    9. 't' → logprob: -13.375417709350586
    10. '{' → logprob: -13.375417709350586

Token 36: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09733933210372925
    2. ' chacun' → logprob: -3.472339391708374
    3. ' la' → logprob: -3.847339391708374
    4. 'la' → logprob: -4.722339153289795
    5. ' les' → logprob: -4.972339153289795
    6. 'les' → logprob: -5.097339153289795
    7. ' ces' → logprob: -5.472339153289795
    8. 'ces' → logprob: -5.847339153289795
    9. ' each' → logprob: -5.847339153289795
    10. 'cha' → logprob: -5.972339153289795

Token 37: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1009555533528328
    2. ' élément' → logprob: -2.3509554862976074
    3. ' ' → logprob: -7.850955486297607
    4. ' él' → logprob: -8.725955963134766
    5. ' element' → logprob: -9.475955963134766
    6. 'element' → logprob: -10.225955963134766
    7. 'él' → logprob: -10.475955963134766
    8. ' éléments' → logprob: -10.975955963134766
    9. ' Él' → logprob: -11.350955963134766
    10. ' token' → logprob: -11.600955963134766

Token 38: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.004791922401636839
    2. 'en' → logprob: -5.754791736602783
    3. '<|end|>' → logprob: -7.129791736602783
    4. '_en' → logprob: -8.379792213439941
    5. ' into' → logprob: -9.379792213439941
    6. ' ' → logprob: -9.379792213439941
    7. '```' → logprob: -9.379792213439941
    8. '_' → logprob: -9.504792213439941
    9. 's' → logprob: -9.754792213439941
    10. ''en' → logprob: -10.129792213439941

Token 39: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.685212254524231
    2. ' des' → logprob: -0.935212254524231
    3. ' int' → logprob: -2.9352121353149414
    4. 'ent' → logprob: -4.060212135314941
    5. ' entier' → logprob: -4.310212135314941
    6. 'int' → logprob: -4.560212135314941
    7. ' ' → logprob: -5.435212135314941
    8. ' ent' → logprob: -6.685212135314941
    9. 'un' → logprob: -7.060212135314941
    10. ' une' → logprob: -7.185212135314941

Token 40: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.78218013048172
    2. ')' → logprob: -1.1571800708770752
    3. 's' → logprob: -2.157180070877075
    4. '.' → logprob: -2.782180070877075
    5. ',' → logprob: -3.407180070877075
    6. ' )' → logprob: -5.157180309295654
    7. ']' → logprob: -5.657180309295654
    8. ').' → logprob: -6.032180309295654
    9. ' ' → logprob: -7.157180309295654
    10. '),' → logprob: -7.407180309295654

Token 41: ' retourner' (ID: 116656)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.12467343360185623
    2. ' form' → logprob: -2.874673366546631
    3. ' retourner' → logprob: -3.624673366546631
    4. ' former' → logprob: -4.374673366546631
    5. ' formar' → logprob: -5.624673366546631
    6. 'constit' → logprob: -5.624673366546631
    7. 'former' → logprob: -6.124673366546631
    8. ' construire' → logprob: -6.124673366546631
    9. ' obtenir' → logprob: -6.249673366546631
    10. ' produire' → logprob: -6.874673366546631

Token 42: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.15854711830615997
    2. ' la' → logprob: -2.4085471630096436
    3. ' un' → logprob: -3.2835471630096436
    4. 'une' → logprob: -4.6585469245910645
    5. ' ' → logprob: -5.2835469245910645
    6. ' a' → logprob: -6.7835469245910645
    7. ' ' → logprob: -7.2835469245910645
    8. 's' → logprob: -7.4085469245910645
    9. 'la' → logprob: -7.6585469245910645
    10. 'a' → logprob: -7.6585469245910645

Token 43: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.002922087674960494
    2. ' list' → logprob: -6.377922058105469
    3. 'liste' → logprob: -6.877922058105469
    4. 'list' → logprob: -9.502922058105469
    5. ' ' → logprob: -9.752922058105469
    6. '   ' → logprob: -11.127922058105469
    7. ' ' → logprob: -11.502922058105469
    8. ' tableau' → logprob: -11.877922058105469
    9. ' array' → logprob: -12.627922058105469
    10. ' Liste' → logprob: -12.877922058105469

Token 44: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10676633566617966
    2. '[int' → logprob: -3.3567662239074707
    3. ' de' → logprob: -3.8567662239074707
    4. ' complète' → logprob: -4.231766223907471
    5. '<|end|>' → logprob: -4.731766223907471
    6. 'd' → logprob: -4.981766223907471
    7. '[' → logprob: -5.856766223907471
    8. '<int' → logprob: -5.856766223907471
    9. ' of' → logprob: -6.231766223907471
    10. ' des' → logprob: -6.231766223907471

Token 45: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.012314554303884506
    2. 'e' → logprob: -5.137314319610596
    3. ''' → logprob: -5.512314319610596
    4. 'ent' → logprob: -6.887314319610596
    5. '’ent' → logprob: -7.637314319610596
    6. ''int' → logprob: -8.637314796447754
    7. ''e' → logprob: -8.637314796447754
    8. '`' → logprob: -9.512314796447754
    9. ' ent' → logprob: -9.762314796447754
    10. 'inte' → logprob: -9.887314796447754

Token 46: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00016313401283696294
    2. 'i' → logprob: -8.875163078308105
    3. 'ières' → logprob: -11.000163078308105
    4. 'ier' → logprob: -12.750163078308105
    5. '```' → logprob: -13.375163078308105
    6. ' i' → logprob: -13.500163078308105
    7. '_i' → logprob: -15.750163078308105
    8. '   ' → logprob: -16.000164031982422
    9. 'I' → logprob: -16.125164031982422
    10. 'ié' → logprob: -16.625164031982422

Token 47: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23800356686115265
    2. '.' → logprob: -1.9880036115646362
    3. '"""' → logprob: -3.2380034923553467
    4. ')' → logprob: -4.363003730773926
    5. ']' → logprob: -4.738003730773926
    6. '```' → logprob: -5.113003730773926
    7. '."""' → logprob: -6.738003730773926
    8. 's' → logprob: -6.863003730773926
    9. ',' → logprob: -6.863003730773926
    10. ' ' → logprob: -7.113003730773926

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025977911427617073
    2. '"""' → logprob: -3.775977849960327
    3. ' """' → logprob: -6.025978088378906
    4. ' """
' → logprob: -9.400978088378906
    5. '"""
' → logprob: -9.525978088378906
    6. '    ' → logprob: -9.775978088378906
    7. '```' → logprob: -10.275978088378906
    8. '"' → logprob: -10.775978088378906
    9. '  ' → logprob: -11.525978088378906
    10. '""' → logprob: -11.525978088378906

Token 49: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05435798317193985
    2. '"""' → logprob: -3.0543580055236816
    3. 'return' → logprob: -5.429358005523682
    4. ' """' → logprob: -8.054357528686523
    5. '"""
' → logprob: -8.179357528686523
    6. '""' → logprob: -8.304357528686523
    7. '```' → logprob: -8.929357528686523
    8. 'returns' → logprob: -9.429357528686523
    9. '    ' → logprob: -9.679357528686523
    10. ' return' → logprob: -9.804357528686523

Token 50: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.05919358506798744
    2. ':' → logprob: -2.9341936111450195
    3. '<|end|>' → logprob: -6.9341936111450195
    4. '   ' → logprob: -7.5591936111450195
    5. ' []' → logprob: -7.5591936111450195
    6. ' )' → logprob: -8.30919361114502
    7. ' list' → logprob: -8.30919361114502
    8. ' ' → logprob: -8.43419361114502
    9. ' ):' → logprob: -8.55919361114502
    10. '```' → logprob: -8.68419361114502

Token 51: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6472936272621155
    2. ' List' → logprob: -1.2722935676574707
    3. ' list' → logprob: -1.8972935676574707
    4. 'List' → logprob: -3.3972935676574707
    5. 'list' → logprob: -5.147293567657471
    6. '       ' → logprob: -5.272293567657471
    7. '    ' → logprob: -6.522293567657471
    8. '[List' → logprob: -9.022294044494629
    9. '```' → logprob: -9.397294044494629
    10. ' []' → logprob: -9.772294044494629

Token 52: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.4011658728122711
    2. 'List' → logprob: -1.1511658430099487
    3. ' list' → logprob: -4.651165962219238
    4. '   ' → logprob: -5.651165962219238
    5. ' List' → logprob: -6.901165962219238
    6. '       ' → logprob: -9.276165962219238
    7. '```' → logprob: -11.651165962219238
    8. '[list' → logprob: -12.526165962219238
    9. '[List' → logprob: -12.776165962219238
    10. '    ' → logprob: -13.401165962219238

Token 53: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0003837213444057852
    2. '<int' → logprob: -8.125383377075195
    3. ' of' → logprob: -9.500383377075195
    4. 'int' → logprob: -12.125383377075195
    5. '(int' → logprob: -12.625383377075195
    6. ':' → logprob: -13.375383377075195
    7. '[' → logprob: -14.125383377075195
    8. ']int' → logprob: -14.625383377075195
    9. '[Int' → logprob: -15.125383377075195
    10. ':int' → logprob: -15.375383377075195

Token 54: ' Liste' (ID: 61030)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.15815995633602142
    2. 'int' → logprob: -2.9081599712371826
    3. ' int' → logprob: -3.5331599712371826
    4. '   ' → logprob: -3.7831599712371826
    5. '<int' → logprob: -4.1581597328186035
    6. ' integers' → logprob: -5.0331597328186035
    7. ' la' → logprob: -5.4081597328186035
    8. ' La' → logprob: -5.7831597328186035
    9. 'La' → logprob: -6.4081597328186035
    10. ' list' → logprob: -6.6581597328186035

Token 55: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.11426295340061188
    2. ' des' → logprob: -2.4892630577087402
    3. '<|end|>' → logprob: -4.61426305770874
    4. ' d' → logprob: -5.11426305770874
    5. '<int' → logprob: -5.48926305770874
    6. '[' → logprob: -5.98926305770874
    7. ' of' → logprob: -7.36426305770874
    8. 'd' → logprob: -7.61426305770874
    9. '[str' → logprob: -7.61426305770874
    10. 'des' → logprob: -8.114262580871582

Token 56: ''ent' (ID: 53422)
  Prédit: '<int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<int' → logprob: -0.5400977730751038
    2. ' d' → logprob: -1.790097713470459
    3. '[int' → logprob: -2.290097713470459
    4. 'ent' → logprob: -2.790097713470459
    5. 'int' → logprob: -3.665097713470459
    6. ' des' → logprob: -3.915097713470459
    7. ' ent' → logprob: -4.415097713470459
    8. 'd' → logprob: -4.415097713470459
    9. ' integers' → logprob: -4.665097713470459
    10. ' int' → logprob: -5.790097713470459

Token 57: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.037551116198301315
    2. 't' → logprob: -3.662551164627075
    3. 'ti' → logprob: -5.162550926208496
    4. 'i' → logprob: -5.412550926208496
    5. 'tiers' → logprob: -7.787550926208496
    6. 'ier' → logprob: -8.412550926208496
    7. 'ières' → logprob: -8.912550926208496
    8. '```' → logprob: -9.287550926208496
    9. 'ière' → logprob: -10.162550926208496
    10. 'ires' → logprob: -11.162550926208496

Token 58: ' lus' (ID: 54762)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2281782627105713
    2. ']' → logprob: -1.9781782627105713
    3. '```' → logprob: -3.9781782627105713
    4. ')' → logprob: -4.603178024291992
    5. '    
' → logprob: -4.603178024291992
    6. '<|end|>' → logprob: -4.978178024291992
    7. 's' → logprob: -5.353178024291992
    8. '  ' → logprob: -6.228178024291992
    9. '[]' → logprob: -6.228178024291992
    10. '[' → logprob: -6.228178024291992

Token 59: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08042401075363159
    2. ' from' → logprob: -3.7054240703582764
    3. 'from' → logprob: -4.580423831939697
    4. '[' → logprob: -4.830423831939697
    5. '  ' → logprob: -4.830423831939697
    6. '    ' → logprob: -4.955423831939697
    7. ')' → logprob: -5.705423831939697
    8. ' de' → logprob: -5.830423831939697
    9. ' ' → logprob: -5.955423831939697
    10. '<|end|>' → logprob: -6.080423831939697

Token 60: ' une' (ID: 2463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6178022623062134
    2. ' la' → logprob: -1.9928022623062134
    3. 'une' → logprob: -2.367802143096924
    4. ' une' → logprob: -2.742802143096924
    5. ' l' → logprob: -2.867802143096924
    6. 'la' → logprob: -3.242802143096924
    7. '   ' → logprob: -3.992802143096924
    8. ' ' → logprob: -4.242802143096924
    9. 'stdin' → logprob: -4.492802143096924
    10. ' stdin' → logprob: -4.742802143096924

Token 61: ' seule' (ID: 41983)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.05394218862056732
    2. 'ligne' → logprob: -3.8039422035217285
    3. ' ' → logprob: -4.1789422035217285
    4. 'l' → logprob: -5.0539422035217285
    5. ' seule' → logprob: -6.0539422035217285
    6. ' )' → logprob: -7.0539422035217285
    7. '_' → logprob: -7.3039422035217285
    8. ' l' → logprob: -7.6789422035217285
    9. ' espace' → logprob: -8.05394172668457
    10. 's' → logprob: -8.17894172668457

Token 62: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.06965772807598114
    2. ' ' → logprob: -2.819657802581787
    3. 'ligne' → logprob: -5.444657802581787
    4. 'l' → logprob: -6.194657802581787
    5. ' line' → logprob: -7.569657802581787
    6. '   ' → logprob: -8.069657325744629
    7. ' l' → logprob: -9.444657325744629
    8. '  ' → logprob: -10.194657325744629
    9. ' lignes' → logprob: -10.194657325744629
    10. ' lign' → logprob: -10.194657325744629

Token 63: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01713987998664379
    2. ']' → logprob: -5.517139911651611
    3. '\n' → logprob: -5.642139911651611
    4. ')' → logprob: -5.892139911651611
    5. '```' → logprob: -6.142139911651611
    6. '    
' → logprob: -6.767139911651611
    7. '\' → logprob: -7.017139911651611
    8. '  ' → logprob: -7.517139911651611
    9. '    ' → logprob: -8.267139434814453
    10. '[' → logprob: -8.267139434814453

Token 64: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5474544763565063
    2. 'l' → logprob: -1.0474544763565063
    3. ' stdin' → logprob: -3.422454357147217
    4. ' input' → logprob: -4.672454357147217
    5. ' standard' → logprob: -4.797454357147217
    6. 'entrée' → logprob: -5.297454357147217
    7. ' sys' → logprob: -5.297454357147217
    8. ' code' → logprob: -5.797454357147217
    9. 'stdin' → logprob: -6.047454357147217
    10. ' la' → logprob: -6.797454357147217

Token 65: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.01780196838080883
    2. 'entrée' → logprob: -4.267801761627197
    3. 'e' → logprob: -6.267801761627197
    4. ''' → logprob: -6.642801761627197
    5. 'a' → logprob: -9.017802238464355
    6. ''ent' → logprob: -9.017802238464355
    7. ''e' → logprob: -10.392802238464355
    8. 'es' → logprob: -10.767802238464355
    9. 'input' → logprob: -10.767802238464355
    10. 'stdin' → logprob: -10.892802238464355

Token 66: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.13404785096645355
    2. 'standard' → logprob: -2.134047746658325
    3. '_standard' → logprob: -5.259047985076904
    4. '   ' → logprob: -7.384047985076904
    5. ' )' → logprob: -8.634047508239746
    6. '    
' → logprob: -8.759047508239746
    7. ' std' → logprob: -9.009047508239746
    8. ' estándar' → logprob: -9.134047508239746
    9. ' стандарт' → logprob: -9.259047508239746
    10. 'std' → logprob: -9.259047508239746

Token 67: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061528827995061874
    2. '```' → logprob: -3.0615289211273193
    3. ')' → logprob: -5.18652868270874
    4. '\n' → logprob: -6.06152868270874
    5. ']' → logprob: -6.06152868270874
    6. '"""' → logprob: -7.68652868270874
    7. 'newline' → logprob: -7.93652868270874
    8. '`' → logprob: -8.686529159545898
    9. '    
' → logprob: -8.686529159545898
    10. '    ' → logprob: -8.811529159545898

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.318482369184494
    2. '"""' → logprob: -1.3184823989868164
    3. '"""
' → logprob: -6.443482398986816
    4. ' """' → logprob: -6.818482398986816
    5. '\n' → logprob: -7.068482398986816
    6. '```' → logprob: -7.568482398986816
    7. '""' → logprob: -8.068482398986816
    8. '"' → logprob: -8.318482398986816
    9. ')' → logprob: -8.318482398986816
    10. '    
' → logprob: -9.193482398986816

Token 69: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3273544907569885
    2. '   ' → logprob: -1.7023544311523438
    3. ' """' → logprob: -2.4523544311523438
    4. ')' → logprob: -5.702354431152344
    5. '"' → logprob: -6.202354431152344
    6. '```' → logprob: -6.327354431152344
    7. '"""
' (adapté à ' """
') → logprob: -6.577354431152344
    8. ' """
' → logprob: -6.827354431152344
    9. '""' → logprob: -7.577354431152344
    10. '\n' → logprob: -8.327354431152344

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003698892891407013
    2. 'return' → logprob: -6.003698825836182
    3. 'line' → logprob: -7.003698825836182
    4. ' line' → logprob: -9.25369930267334
    5. ' return' → logprob: -9.75369930267334
    6. 'data' → logprob: -9.87869930267334
    7. 'input' → logprob: -10.00369930267334
    8. 'try' → logprob: -10.62869930267334
    9. '```' → logprob: -11.87869930267334
    10. '    
' → logprob: -12.00369930267334

Token 71: ' return' (ID: 622)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.016263095661997795
    2. 'return' (adapté à ' return') → logprob: -4.891263008117676
    3. ' line' → logprob: -5.266263008117676
    4. 'ligne' → logprob: -6.266263008117676
    5. '   ' → logprob: -7.516263008117676
    6. 'data' → logprob: -7.891263008117676
    7. 'input' → logprob: -8.391263008117676
    8. 'try' → logprob: -9.141263008117676
    9. 'array' → logprob: -9.266263008117676
    10. 'l' → logprob: -9.391263008117676

Token 72: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.24261429905891418
    2. 'list' → logprob: -1.9926142692565918
    3. ' [' → logprob: -3.242614269256592
    4. '[list' → logprob: -3.367614269256592
    5. '[' → logprob: -5.367614269256592
    6. '[int' → logprob: -7.117614269256592
    7. '[input' → logprob: -10.74261474609375
    8. ' map' → logprob: -11.61761474609375
    9. '[line' → logprob: -11.86761474609375
    10. '[s' → logprob: -12.11761474609375

Token 73: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04875462129712105
    2. '(map' → logprob: -3.0487546920776367
    3. '(int' → logprob: -9.048754692077637
    4. '(input' → logprob: -11.048754692077637
    5. '(
' → logprob: -11.298754692077637
    6. '(

' → logprob: -11.673754692077637
    7. '(sys' → logprob: -12.173754692077637
    8. 'map' → logprob: -13.423754692077637
    9. '(eval' → logprob: -13.548754692077637
    10. '(split' → logprob: -13.923754692077637

Token 74: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005285223014652729
    2. '(' → logprob: -5.255285263061523
    3. '<int' → logprob: -10.755285263061523
    4. 'int' → logprob: -11.130285263061523
    5. ' int' → logprob: -11.755285263061523
    6. '[int' → logprob: -13.005285263061523
    7. '=int' → logprob: -13.505285263061523
    8. '(
' → logprob: -13.755285263061523
    9. ',int' → logprob: -14.505285263061523
    10. ' (' → logprob: -14.505285263061523

Token 75: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.5982112288475037
    2. ',' → logprob: -0.9732112288475037
    3. 'sys' → logprob: -3.8482112884521484
    4. '(' → logprob: -3.8482112884521484
    5. '(input' → logprob: -4.473211288452148
    6. ',input' → logprob: -5.223211288452148
    7. 'input' → logprob: -5.598211288452148
    8. ' sys' → logprob: -5.598211288452148
    9. '   ' → logprob: -6.098211288452148
    10. ' ,' → logprob: -6.598211288452148

Token 76: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2083485871553421
    2. ' sys' → logprob: -1.7083486318588257
    3. 'input' → logprob: -5.083348751068115
    4. ' input' → logprob: -7.333348751068115
    5. '(sys' → logprob: -10.083348274230957
    6. '=sys' → logprob: -11.333348274230957
    7. '	sys' → logprob: -12.583348274230957
    8. '   ' → logprob: -14.583348274230957
    9. ' ' → logprob: -15.083348274230957
    10. 'stdin' → logprob: -16.083349227905273

Token 77: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00035119339008815587
    2. '.' → logprob: -8.250350952148438
    3. '.argv' → logprob: -9.875350952148438
    4. '.stdout' → logprob: -11.125350952148438
    5. '.readline' → logprob: -11.625350952148438
    6. '.std' → logprob: -11.875350952148438
    7. ' .' → logprob: -12.375350952148438
    8. '.st' → logprob: -12.750350952148438
    9. ' stdin' → logprob: -16.000350952148438
    10. '.input' → logprob: -16.125350952148438

Token 78: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003190193965565413
    2. '.' → logprob: -8.500319480895996
    3. '.read' → logprob: -9.125319480895996
    4. '.readlines' → logprob: -12.250319480895996
    5. ' .' → logprob: -14.250319480895996
    6. ').' → logprob: -14.500319480895996
    7. ')' → logprob: -14.750319480895996
    8. ' readline' → logprob: -15.875319480895996
    9. '.)' → logprob: -16.25031852722168
    10. '().' → logprob: -16.50031852722168

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01845051907002926
    2. '()' → logprob: -4.768450736999512
    3. '())' → logprob: -5.018450736999512
    4. '()))' → logprob: -5.768450736999512
    5. '())))' → logprob: -11.268450736999512
    6. '()));' → logprob: -11.518450736999512
    7. ')' → logprob: -12.018450736999512
    8. ' ().' → logprob: -12.518450736999512
    9. ' ())' → logprob: -12.893450736999512
    10. '());' → logprob: -13.268450736999512

Token 80: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008643647655844688
    2. 'split' → logprob: -5.008643627166748
    3. 'rstrip' → logprob: -6.258643627166748
    4. ' strip' → logprob: -11.383644104003906
    5. '(strip' → logprob: -14.508644104003906
    6. ' split' → logprob: -15.008644104003906
    7. '```' → logprob: -16.008644104003906
    8. '_strip' → logprob: -16.383644104003906
    9. '.strip' → logprob: -16.508644104003906
    10. '(split' → logprob: -17.258644104003906

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.026763727888464928
    2. '()' → logprob: -3.776763677597046
    3. '())' → logprob: -6.276763916015625
    4. '()))' → logprob: -6.526763916015625
    5. '('' → logprob: -9.401763916015625
    6. '(' → logprob: -9.776763916015625
    7. '().'' → logprob: -11.901763916015625
    8. '())))' → logprob: -12.401763916015625
    9. ' ()' → logprob: -12.901763916015625
    10. ')' → logprob: -13.026763916015625

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.25
    3. 'spl' → logprob: -18.375
    4. '(split' → logprob: -18.875
    5. 's' → logprob: -19.875
    6. '.split' → logprob: -20.5
    7. 'strip' → logprob: -20.625
    8. 'rstrip' → logprob: -20.75
    9. 'sp' → logprob: -21.75
    10. 'replace' → logprob: -21.875

Token 83: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09224046021699905
    2. '()' → logprob: -2.592240571975708
    3. '())' → logprob: -4.467240333557129
    4. '(' → logprob: -6.717240333557129
    5. '))' → logprob: -7.967240333557129
    6. '())))' → logprob: -8.967240333557129
    7. '()))
' → logprob: -9.967240333557129
    8. '()));' → logprob: -11.092240333557129
    9. '('' → logprob: -11.217240333557129
    10. ')' → logprob: -11.717240333557129

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33694055676460266
    2. '
' → logprob: -1.5869405269622803
    3. '

' → logprob: -2.8369405269622803
    4. '#' → logprob: -4.086940765380859
    5. '```' → logprob: -6.586940765380859
    6. 'n' → logprob: -7.211940765380859
    7. '[' → logprob: -7.211940765380859
    8. 'if' → logprob: -7.336940765380859
    9. '\n' → logprob: -7.711940765380859
    10. '\' → logprob: -8.08694076538086

Token 85: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03699593245983124
    2. ' calculate' → logprob: -4.036995887756348
    3. ' solve' → logprob: -4.661995887756348
    4. ' max' → logprob: -6.411995887756348
    5. ' compute' → logprob: -6.411995887756348
    6. ' get' → logprob: -6.786995887756348
    7. ' space' → logprob: -6.911995887756348
    8. ' process' → logprob: -7.161995887756348
    9. ' find' → logprob: -7.536995887756348
    10. ' factorial' → logprob: -7.911995887756348

Token 86: '_int' (ID: 12285)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.23104940354824066
    2. '_' → logprob: -1.6060494184494019
    3. '_string' → logprob: -6.481049537658691
    4. '_number' → logprob: -7.981049537658691
    5. '_line' → logprob: -8.106049537658691
    6. '_user' → logprob: -8.356049537658691
    7. '_max' → logprob: -8.356049537658691
    8. '_int' → logprob: -8.481049537658691
    9. '_list' → logprob: -8.731049537658691
    10. '_name' → logprob: -8.731049537658691

Token 87: 's' (ID: 82)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005441027693450451
    2. '()' → logprob: -5.255441188812256
    3. ' ():' → logprob: -9.755440711975098
    4. '(' → logprob: -9.880440711975098
    5. '():
' → logprob: -10.005440711975098
    6. '()>' → logprob: -10.755440711975098
    7. ' ()' → logprob: -11.380440711975098
    8. '()">' → logprob: -11.880440711975098
    9. '():
' → logprob: -13.255440711975098
    10. '()*' → logprob: -13.630440711975098

Token 88: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.662937372922897e-05
    2. '()' → logprob: -10.000096321105957
    3. ' ():' → logprob: -10.000096321105957
    4. '(' → logprob: -12.625096321105957
    5. '():
' → logprob: -14.000096321105957
    6. ' ()' → logprob: -14.500096321105957
    7. ':' → logprob: -15.000096321105957
    8. '()>' → logprob: -15.375096321105957
    9. '()*' → logprob: -16.250097274780273
    10. '()">' → logprob: -16.500097274780273

Token 89: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0031443238258361816
    2. '()' → logprob: -6.128144264221191
    3. '():
' → logprob: -7.128144264221191
    4. ' ():' → logprob: -9.503144264221191
    5. '   ' → logprob: -10.753144264221191
    6. '(' → logprob: -10.878144264221191
    7. ':' → logprob: -10.878144264221191
    8. ' ()' → logprob: -11.253144264221191
    9. '()*' → logprob: -13.128144264221191
    10. ' :' → logprob: -13.503144264221191

Token 90: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.35626354813575745
    2. '   ' → logprob: -1.856263518333435
    3. '()' → logprob: -2.7312636375427246
    4. '():
' → logprob: -2.8562636375427246
    5. ':' → logprob: -4.731263637542725
    6. 'return' → logprob: -5.231263637542725
    7. ' return' → logprob: -6.481263637542725
    8. ' ()' → logprob: -6.981263637542725
    9. ':
' → logprob: -7.231263637542725
    10. ' ():' → logprob: -7.356263637542725

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19527965784072876
    2. '"""
' → logprob: -2.320279598236084
    3. '"""' → logprob: -2.945279598236084
    4. '""' → logprob: -4.570279598236084
    5. ')' → logprob: -5.320279598236084
    6. 'return' → logprob: -5.945279598236084
    7. '):' → logprob: -6.195279598236084
    8. '):
' → logprob: -6.195279598236084
    9. ' ' → logprob: -6.820279598236084
    10. '"' → logprob: -6.945279598236084

Token 92: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028972364962100983
    2. '"""' → logprob: -6.252897262573242
    3. 'return' → logprob: -7.877897262573242
    4. ' return' → logprob: -9.377897262573242
    5. ' ' → logprob: -9.502897262573242
    6. '"""
' → logprob: -9.627897262573242
    7. '  ' → logprob: -9.877897262573242
    8. 'def' → logprob: -10.002897262573242
    9. '
' → logprob: -10.127897262573242
    10. '""' → logprob: -10.252897262573242

Token 93: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7354741096496582
    2. '():' → logprob: -1.7354741096496582
    3. '()' → logprob: -1.8604741096496582
    4. 'une' → logprob: -2.110474109649658
    5. '():
' → logprob: -3.735474109649658
    6. ' ()' → logprob: -3.735474109649658
    7. ' la' → logprob: -4.610474109649658
    8. ' ' → logprob: -6.360474109649658
    9. ' un' → logprob: -6.610474109649658
    10. ' a' → logprob: -6.860474109649658

Token 94: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.4337218701839447
    2. ' ligne' → logprob: -1.183721899986267
    3. ' ' → logprob: -3.5587217807769775
    4. 'l' → logprob: -4.183722019195557
    5. ' lign' → logprob: -7.183722019195557
    6. '_l' → logprob: -7.933722019195557
    7. 'lig' → logprob: -8.183721542358398
    8. 'ou' → logprob: -9.433721542358398
    9. ' l' → logprob: -9.558721542358398
    10. 'liste' → logprob: -9.808721542358398

Token 95: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1578143835067749
    2. ' ' → logprob: -2.2828145027160645
    3. 'de' → logprob: -4.2828145027160645
    4. '   ' → logprob: -4.5328145027160645
    5. '  ' → logprob: -5.0328145027160645
    6. '<|end|>' → logprob: -5.1578145027160645
    7. '_' → logprob: -6.7828145027160645
    8. 'def' → logprob: -6.7828145027160645
    9. ' complète' → logprob: -7.1578145027160645
    10. ' ' → logprob: -7.4078145027160645

Token 96: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04860758036375046
    2. ' l' → logprob: -3.048607587814331
    3. 's' → logprob: -12.04860782623291
    4. 'sys' → logprob: -12.79860782623291
    5. ' ' → logprob: -13.67360782623291
    6. 'lass' → logprob: -14.17360782623291
    7. '(l' → logprob: -14.29860782623291
    8. 'entrée' → logprob: -14.36110782623291
    9. 'def' → logprob: -14.42360782623291
    10. ' ' → logprob: -14.48610782623291

Token 97: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0008584582828916609
    2. 'entrée' → logprob: -7.250858306884766
    3. ''' → logprob: -9.625858306884766
    4. ''ent' → logprob: -10.000858306884766
    5. ' entrée' → logprob: -11.875858306884766
    6. '’entrée' → logprob: -12.125858306884766
    7. '_input' → logprob: -12.250858306884766
    8. ''import' → logprob: -12.750858306884766
    9. 'input' → logprob: -13.250858306884766
    10. 'Entr' → logprob: -13.375858306884766

Token 98: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.08871390670537949
    2. ' _' → logprob: -3.0887138843536377
    3. '_standard' → logprob: -3.8387138843536377
    4. 'standard' → logprob: -4.838714122772217
    5. '_' → logprob: -4.963714122772217
    6. ' de' → logprob: -6.963714122772217
    7. ' complète' → logprob: -8.338713645935059
    8. '_s' → logprob: -8.338713645935059
    9. ' ' → logprob: -8.463713645935059
    10. ' estándar' → logprob: -8.463713645935059

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4750193655490875
    2. '()' → logprob: -1.6000193357467651
    3. ')' → logprob: -2.3500194549560547
    4. '   ' → logprob: -2.6000194549560547
    5. '.' → logprob: -6.600019454956055
    6. 'def' → logprob: -6.975019454956055
    7. '(),' → logprob: -7.225019454956055
    8. '().' → logprob: -7.475019454956055
    9. '),' → logprob: -7.600019454956055
    10. ' ,' → logprob: -7.850019454956055

Token 100: ' div' (ID: 4223)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007518723141402006
    2. ' return' → logprob: -5.007518768310547
    3. ' et' → logprob: -8.007518768310547
    4. 'return' → logprob: -8.382518768310547
    5. ' retourne' → logprob: -9.757518768310547
    6. 'def' → logprob: -9.882518768310547
    7. ' returns' → logprob: -10.382518768310547
    8. '  ' → logprob: -11.257518768310547
    9. '    ' → logprob: -11.257518768310547
    10. ' ' → logprob: -11.507518768310547

Token 101: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.3155671954154968
    2. 'se' → logprob: -2.1905672550201416
    3. 'e' → logprob: -2.4405672550201416
    4. 'de' → logprob: -3.1905672550201416
    5. 's' → logprob: -4.1905670166015625
    6. 'eve' → logprob: -6.3155670166015625
    7. 'it' → logprob: -6.5655670166015625
    8. 't' → logprob: -6.8155670166015625
    9. 'sit' → logprob: -6.9405670166015625
    10. 've' → logprob: -6.9405670166015625

Token 102: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.04848924279212952
    2. ' ' → logprob: -3.4234893321990967
    3. 'la' → logprob: -5.423489093780518
    4. '()' → logprob: -5.923489093780518
    5. '<|end|>' → logprob: -5.923489093780518
    6. '(' → logprob: -6.298489093780518
    7. ' ' → logprob: -7.548489093780518
    8. ' (' → logprob: -7.548489093780518
    9. '('' → logprob: -8.423489570617676
    10. '_la' → logprob: -8.423489570617676

Token 103: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1738404780626297
    2. 'cha' → logprob: -2.0488405227661133
    3. 'chaine' → logprob: -3.5488405227661133
    4. ' chaine' → logprob: -6.798840522766113
    5. ' cha' → logprob: -7.923840522766113
    6. ' ligne' → logprob: -9.173840522766113
    7. 'ligne' → logprob: -9.548840522766113
    8. 'c' → logprob: -9.548840522766113
    9. '-cha' → logprob: -10.048840522766113
    10. ' ' → logprob: -10.423840522766113

Token 104: ' obten' (ID: 28150)
  Prédit: ' obten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obten' → logprob: -0.028242990374565125
    2. ' en' → logprob: -4.903243064880371
    3. '_ob' → logprob: -5.153243064880371
    4. '()' → logprob: -5.153243064880371
    5. ' obtenu' → logprob: -6.028243064880371
    6. ' reç' → logprob: -6.653243064880371
    7. 'ob' → logprob: -7.403243064880371
    8. '_' → logprob: -7.403243064880371
    9. '(ob' → logprob: -7.653243064880371
    10. 'obt' → logprob: -7.653243064880371

Token 105: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0025074053555727005
    2. 'u' → logprob: -6.002507209777832
    3. 'ute' → logprob: -11.252507209777832
    4. 'e' → logprob: -11.627507209777832
    5. ' ue' → logprob: -13.377507209777832
    6. 'enue' → logprob: -13.377507209777832
    7. 'ut' → logprob: -13.502507209777832
    8. ' ' → logprob: -14.252507209777832
    9. 'ues' → logprob: -14.252507209777832
    10. '   ' → logprob: -14.252507209777832

Token 106: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.001925182994455099
    2. 'en' → logprob: -7.001924991607666
    3. '_en' → logprob: -7.126924991607666
    4. ' ' → logprob: -9.751925468444824
    5. ' par' → logprob: -10.001925468444824
    6. ''en' → logprob: -10.626925468444824
    7. '   ' → logprob: -11.251925468444824
    8. '	en' → logprob: -11.376925468444824
    9. '[' → logprob: -11.876925468444824
    10. '[]' → logprob: -12.001925468444824

Token 107: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.08412278443574905
    2. ' éléments' → logprob: -2.584122896194458
    3. 'ent' → logprob: -5.959122657775879
    4. ' espaces' → logprob: -7.209122657775879
    5. ' des' → logprob: -7.584122657775879
    6. 'elements' → logprob: -7.834122657775879
    7. 'esp' → logprob: -8.084122657775879
    8. 'des' → logprob: -8.209122657775879
    9. 'int' → logprob: -9.459122657775879
    10. ' elements' → logprob: -9.834122657775879

Token 108: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.024835238233208656
    2. ' en' → logprob: -3.8998353481292725
    3. '_' → logprob: -7.274835109710693
    4. ' ' → logprob: -7.649835109710693
    5. ' separated' → logprob: -7.899835109710693
    6. ' separ' → logprob: -8.024835586547852
    7. ' separados' → logprob: -8.274835586547852
    8. ' ' → logprob: -8.399835586547852
    9. ' )' → logprob: -8.399835586547852
    10. '   ' → logprob: -8.399835586547852

Token 109: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02203495241701603
    2. 'ar' → logprob: -4.897035121917725
    3. 'par' → logprob: -5.022035121917725
    4. 'érés' → logprob: -5.272035121917725
    5. 'ées' → logprob: -7.022035121917725
    6. 'rés' → logprob: -7.272035121917725
    7. 'ée' → logprob: -8.522034645080566
    8. 'es' → logprob: -8.897034645080566
    9. 'ares' → logprob: -9.272034645080566
    10. 'p' → logprob: -9.522034645080566

Token 110: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.012577932327985764
    2. 'par' → logprob: -4.762578010559082
    3. ' ' → logprob: -5.637578010559082
    4. ')' → logprob: -9.137578010559082
    5. ' by' → logprob: -9.262578010559082
    6. '   ' → logprob: -9.762578010559082
    7. ' )' → logprob: -10.387578010559082
    8. '  ' → logprob: -10.512578010559082
    9. '(par' → logprob: -11.512578010559082
    10. ' en' → logprob: -11.637578010559082

Token 111: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.07063570618629456
    2. ' des' → logprob: -2.8206357955932617
    3. 'esp' → logprob: -5.695635795593262
    4. ''' → logprob: -6.195635795593262
    5. ''esp' → logprob: -6.570635795593262
    6. 'es' → logprob: -7.320635795593262
    7. ''espace' → logprob: -8.570635795593262
    8. ''un' → logprob: -8.695635795593262
    9. ' espaces' → logprob: -8.820635795593262
    10. 'un' → logprob: -8.820635795593262

Token 112: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.06054382771253586
    2. ' espaces' → logprob: -3.0605437755584717
    3. 'es' → logprob: -4.685544013977051
    4. ''esp' → logprob: -6.185544013977051
    5. 'spaces' → logprob: -8.06054401397705
    6. ''espace' → logprob: -9.18554401397705
    7. ' esp' → logprob: -10.06054401397705
    8. ' espace' → logprob: -10.06054401397705
    9. '’esp' → logprob: -10.56054401397705
    10. ' ' → logprob: -10.56054401397705

Token 113: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026739930734038353
    2. ',
' → logprob: -4.276740074157715
    3. '   ' → logprob: -4.651740074157715
    4. ')' → logprob: -6.651740074157715
    5. '):' → logprob: -6.651740074157715
    6. '),' → logprob: -8.901740074157715
    7. 'def' → logprob: -9.526740074157715
    8. ' ,' → logprob: -9.901740074157715
    9. '):
' → logprob: -10.026740074157715
    10. ',\
' → logprob: -11.276740074157715

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.627176768844947e-05
    2. '    ' → logprob: -10.000096321105957
    3. '  ' → logprob: -11.250096321105957
    4. ')' → logprob: -11.500096321105957
    5. '    
' → logprob: -11.750096321105957
    6. ',' → logprob: -12.250096321105957
    7. ' ' → logprob: -12.750096321105957
    8. 'def' → logprob: -13.000096321105957
    9. '   ' → logprob: -13.250096321105957
    10. ' )' → logprob: -13.500096321105957

Token 115: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3597274720668793
    2. 'et' (adapté à ' et') → logprob: -1.2347275018692017
    3. 'return' → logprob: -4.984727382659912
    4. 'def' → logprob: -6.359727382659912
    5. 'convert' → logprob: -6.734727382659912
    6. ' et' → logprob: -6.859727382659912
    7. 'and' → logprob: -9.23472785949707
    8. '"""
' → logprob: -9.85972785949707
    9. ' and' → logprob: -9.98472785949707
    10. '    
' → logprob: -10.60972785949707

Token 116: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.1724492460489273
    2. 'return' → logprob: -2.9224493503570557
    3. 'ret' → logprob: -3.0474493503570557
    4. ' convert' → logprob: -3.1724493503570557
    5. ' retourne' → logprob: -4.922449111938477
    6. 'ren' → logprob: -5.297449111938477
    7. 'con' → logprob: -6.547449111938477
    8. ' return' → logprob: -7.172449111938477
    9. ' ren' → logprob: -8.172449111938477
    10. ' converts' → logprob: -9.047449111938477

Token 117: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0005643534241244197
    2. 'ert' → logprob: -8.500564575195312
    3. 'er' → logprob: -8.750564575195312
    4. 't' → logprob: -9.000564575195312
    5. 'ît' → logprob: -10.750564575195312
    6. 'irt' → logprob: -11.500564575195312
    7. ' it' → logprob: -12.125564575195312
    8. 'rit' → logprob: -12.125564575195312
    9. 'cit' → logprob: -12.125564575195312
    10. 'ir' → logprob: -12.250564575195312

Token 118: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.0013445195509120822
    2. ' each' → logprob: -7.376344680786133
    3. ' ' → logprob: -7.501344680786133
    4. 'Chaque' → logprob: -9.376344680786133
    5. 'cha' → logprob: -10.501344680786133
    6. 'each' → logprob: -11.376344680786133
    7. ' Chaque' → logprob: -11.501344680786133
    8. '()' → logprob: -12.376344680786133
    9. ' cha' → logprob: -12.501344680786133
    10. ' chacune' → logprob: -12.751344680786133

Token 119: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5815832614898682
    2. ' élément' → logprob: -0.8315832614898682
    3. ' ' → logprob: -6.581583023071289
    4. '(' → logprob: -6.581583023071289
    5. 'element' → logprob: -6.831583023071289
    6. '_' → logprob: -7.081583023071289
    7. ' element' → logprob: -8.081583023071289
    8. '_element' → logprob: -8.956583023071289
    9. '()' → logprob: -9.456583023071289
    10. ' (' → logprob: -9.581583023071289

Token 120: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.10408981889486313
    2. '<|end|>' → logprob: -2.3540897369384766
    3. '<|end|>' → logprob: -6.354089736938477
    4. '_en' → logprob: -7.729089736938477
    5. 's' → logprob: -8.104089736938477
    6. ' in' → logprob: -8.229089736938477
    7. ' ' → logprob: -8.229089736938477
    8. '()' → logprob: -9.229089736938477
    9. '(' → logprob: -9.229089736938477
    10. ''en' → logprob: -9.354089736938477

Token 121: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5845628380775452
    2. 'ent' → logprob: -1.5845627784729004
    3. ' int' → logprob: -1.7095627784729004
    4. ' entier' → logprob: -3.2095627784729004
    5. ' ent' → logprob: -4.2095627784729
    6. 'ints' → logprob: -8.334563255310059
    7. 'inte' → logprob: -8.584563255310059
    8. '[int' → logprob: -8.709563255310059
    9. '_ent' → logprob: -8.959563255310059
    10. ' integers' → logprob: -9.084563255310059

Token 122: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4193510413169861
    2. '<|end|>' → logprob: -1.7943511009216309
    3. 's' → logprob: -2.169351100921631
    4. ' pour' → logprob: -3.419351100921631
    5. ' for' → logprob: -4.794351100921631
    6. '(s' → logprob: -5.669351100921631
    7. '.' → logprob: -6.044351100921631
    8. '()' → logprob: -6.044351100921631
    9. '<|end|>' → logprob: -6.044351100921631
    10. '[]' → logprob: -6.294351100921631

Token 123: ' retourner' (ID: 116656)
  Prédit: ' retourner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourner' → logprob: -0.20416143536567688
    2. 'return' → logprob: -1.8291614055633545
    3. ' return' → logprob: -3.8291614055633545
    4. 'ret' → logprob: -7.079161643981934
    5. 'ren' → logprob: -7.329161643981934
    6. ' ren' → logprob: -8.079161643981934
    7. ' la' → logprob: -9.454161643981934
    8. ' retourn' → logprob: -9.454161643981934
    9. ' retourne' → logprob: -9.704161643981934
    10. ' les' → logprob: -9.829161643981934

Token 124: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5049285292625427
    2. ' la' → logprob: -1.0049285888671875
    3. '[]' → logprob: -4.1299285888671875
    4. 'une' → logprob: -5.3799285888671875
    5. ' a' → logprob: -5.6299285888671875
    6. 'la' → logprob: -6.0049285888671875
    7. ' un' → logprob: -7.1299285888671875
    8. 'a' → logprob: -7.2549285888671875
    9. ' list' → logprob: -7.6299285888671875
    10. ' ' → logprob: -7.7549285888671875

Token 125: ' it' (ID: 480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01493467390537262
    2. ' tuple' → logprob: -5.014934539794922
    3. 'a' → logprob: -6.014934539794922
    4. ' tableau' → logprob: -6.139934539794922
    5. ' liste' → logprob: -7.389934539794922
    6. ' list' → logprob: -7.389934539794922
    7. ' e' → logprob: -7.639934539794922
    8. 'tuple' → logprob: -7.639934539794922
    9. 'list' → logprob: -7.889934539794922
    10. 'liste' → logprob: -8.389934539794922

Token 126: 'ér' (ID: 2156)
  Prédit: 'érateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.31450778245925903
    2. 'er' → logprob: -1.3145077228546143
    3. 'ér' → logprob: -7.439507961273193
    4. 'é' → logprob: -8.564507484436035
    5. 'égr' → logprob: -8.814507484436035
    6. 'e' → logprob: -9.689507484436035
    7. '_' → logprob: -10.564507484436035
    8. 'ération' → logprob: -10.689507484436035
    9. '__' → logprob: -10.689507484436035
    10. 'érer' → logprob: -10.814507484436035

Token 127: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.5195766091346741
    2. 'ateur' → logprob: -1.0195765495300293
    3. 'er' → logprob: -3.2695765495300293
    4. 'ator' → logprob: -5.894576549530029
    5. 'érateur' → logprob: -5.894576549530029
    6. 'eur' → logprob: -7.769576549530029
    7. '__' → logprob: -8.894577026367188
    8. 'reur' → logprob: -9.769577026367188
    9. '_' → logprob: -9.769577026367188
    10. 'acteur' → logprob: -10.019577026367188

Token 128: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ''ent' (ID: 53422)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.36596131324768066
    2. ''ent' → logprob: -1.3659613132476807
    3. ' int' → logprob: -3.4909613132476807
    4. ' integers' → logprob: -5.240961074829102
    5. ''int' → logprob: -5.615961074829102
    6. 'ent' → logprob: -5.865961074829102
    7. ' ints' → logprob: -5.990961074829102
    8. 'int' → logprob: -6.240961074829102
    9. ' entier' → logprob: -6.490961074829102
    10. 'ints' → logprob: -6.865961074829102

Token 130: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001443568617105484
    2. 'gers' → logprob: -7.626443386077881
    3. 'ers' → logprob: -8.376443862915039
    4. 'eg' → logprob: -8.876443862915039
    5. 'i' → logprob: -9.126443862915039
    6. 'e' → logprob: -9.126443862915039
    7. 'ier' → logprob: -9.251443862915039
    8. 'ents' → logprob: -9.501443862915039
    9. 'er' → logprob: -10.001443862915039
    10. '```' → logprob: -10.376443862915039

Token 131: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8253616094589233
    2. '():' → logprob: -1.0753616094589233
    3. ')' → logprob: -2.325361728668213
    4. '(' → logprob: -2.700361728668213
    5. ':' → logprob: -4.075361728668213
    6. '<|end|>' → logprob: -4.825361728668213
    7. '   ' → logprob: -5.200361728668213
    8. '.' → logprob: -5.325361728668213
    9. '):
' → logprob: -5.325361728668213
    10. '()' → logprob: -5.450361728668213

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007529728580266237
    2. ')' → logprob: -5.1325297355651855
    3. '):' → logprob: -7.6325297355651855
    4. 'def' → logprob: -7.6325297355651855
    5. '    
' → logprob: -8.632529258728027
    6. ':' → logprob: -9.132529258728027
    7. '  
' → logprob: -9.757529258728027
    8. '):
' → logprob: -10.007529258728027
    9. '(' → logprob: -10.257529258728027
    10. '  ' → logprob: -10.507529258728027

Token 133: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001600910210981965
    2. 'Returns' (adapté à ' Returns') → logprob: -7.626600742340088
    3. 'return' → logprob: -7.751600742340088
    4. ' return' → logprob: -8.251601219177246
    5. '```' → logprob: -8.876601219177246
    6. '
' → logprob: -9.626601219177246
    7. '    
' → logprob: -10.001601219177246
    8. ' ' → logprob: -10.126601219177246
    9. '"""
' → logprob: -10.626601219177246
    10. '  
' → logprob: -10.876601219177246

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00346155627630651
    2. ' :' → logprob: -5.8784613609313965
    3. ':list' → logprob: -8.253461837768555
    4. '   ' → logprob: -8.753461837768555
    5. '[int' → logprob: -9.628461837768555
    6. ':
' → logprob: -10.628461837768555
    7. '[' → logprob: -10.753461837768555
    8. '[:]' → logprob: -10.753461837768555
    9. '):' → logprob: -10.878461837768555
    10. '[]' → logprob: -11.128461837768555

Token 135: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01580348052084446
    2. ' list' → logprob: -4.515803337097168
    3. 'list' → logprob: -6.265803337097168
    4. ' iter' → logprob: -6.640803337097168
    5. 'iter' → logprob: -7.265803337097168
    6. ' iterable' → logprob: -7.640803337097168
    7. 'Iterable' → logprob: -9.265803337097168
    8. '    ' → logprob: -9.390803337097168
    9. ' tuple' → logprob: -9.515803337097168
    10. '       ' → logprob: -10.515803337097168

Token 136: ' map' (ID: 4014)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.6061147451400757
    2. 'iterator' → logprob: -0.9811147451400757
    3. 'map' (adapté à ' map') → logprob: -3.2311148643493652
    4. 'list' → logprob: -3.4811148643493652
    5. 'generator' → logprob: -5.106114864349365
    6. 'tuple' → logprob: -6.231114864349365
    7. 'int' → logprob: -7.106114864349365
    8. 'Iterator' → logprob: -8.606114387512207
    9. ' iterator' → logprob: -8.856114387512207
    10. 'Iterable' → logprob: -10.106114387512207

Token 137: ':' (ID: 25)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16274581849575043
    2. '(' → logprob: -1.9127458333969116
    3. '<int' → logprob: -6.662745952606201
    4. '[int' → logprob: -7.287745952606201
    5. '(
' → logprob: -7.912745952606201
    6. '(lambda' → logprob: -8.912745475769043
    7. '=int' → logprob: -11.412745475769043
    8. 'int' → logprob: -11.537745475769043
    9. ' (' → logprob: -11.537745475769043
    10. '(

' → logprob: -11.912745475769043

Token 138: ' Un' (ID: 1367)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04311566427350044
    2. 'map' → logprob: -3.1681156158447266
    3. ' int' → logprob: -10.168115615844727
    4. '(map' → logprob: -10.418115615844727
    5. 'int' → logprob: -10.793115615844727
    6. ' ' → logprob: -11.793115615844727
    7. ' list' → logprob: -12.418115615844727
    8. ' return' → logprob: -12.543115615844727
    9. 'm' → logprob: -12.668115615844727
    10. ' ' → logprob: -13.543115615844727

Token 139: ' objet' (ID: 13839)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03983382508158684
    2. ' object' → logprob: -3.5398337841033936
    3. ' int' → logprob: -5.414834022521973
    4. ' iter' → logprob: -5.914834022521973
    5. ' objet' → logprob: -6.664834022521973
    6. 'map' → logprob: -8.039834022521973
    7. ' ' → logprob: -8.164834022521973
    8. ' space' → logprob: -8.289834022521973
    9. '(map' → logprob: -8.539834022521973
    10. ' espace' → logprob: -9.039834022521973

Token 140: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.30719703435897827
    2. 'map' → logprob: -2.182197093963623
    3. ' int' → logprob: -2.932197093963623
    4. '(int' → logprob: -3.057197093963623
    5. 'int' → logprob: -3.932197093963623
    6. '(map' → logprob: -4.057197093963623
    7. '<int' → logprob: -5.432197093963623
    8. ' de' → logprob: -6.057197093963623
    9. ' object' → logprob: -6.057197093963623
    10. ' des' → logprob: -6.682197093963623

Token 141: ' contenant' (ID: 131049)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05929087474942207
    2. '(' → logprob: -3.309290885925293
    3. '(lambda' → logprob: -4.809290885925293
    4. '<int' → logprob: -5.184290885925293
    5. '[int' → logprob: -5.684290885925293
    6. ' object' → logprob: -6.809290885925293
    7. '(
' → logprob: -7.059290885925293
    8. '(object' → logprob: -7.559290885925293
    9. 'object' → logprob: -7.559290885925293
    10. 'int' → logprob: -8.309290885925293

Token 142: ' les' (ID: 1341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09889315068721771
    2. 'int' → logprob: -3.098893165588379
    3. ' des' → logprob: -3.973893165588379
    4. 'les' → logprob: -4.348893165588379
    5. ' les' → logprob: -4.598893165588379
    6. ' int' → logprob: -5.473893165588379
    7. 'des' → logprob: -6.848893165588379
    8. ' (' → logprob: -7.473893165588379
    9. 'inte' → logprob: -8.098893165588379
    10. '[int' → logprob: -8.223893165588379

Token 143: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.7847713828086853
    2. ' int' → logprob: -0.9097713828086853
    3. ' integers' → logprob: -2.28477144241333
    4. 'int' → logprob: -3.78477144241333
    5. 'ent' → logprob: -5.03477144241333
    6. '<int' → logprob: -5.78477144241333
    7. ' ' → logprob: -6.15977144241333
    8. ' ints' → logprob: -6.40977144241333
    9. 'inte' → logprob: -7.03477144241333
    10. '<|end|>' → logprob: -7.40977144241333

Token 144: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0003534582501742989
    2. 'i' → logprob: -8.500353813171387
    3. 'ier' → logprob: -9.000353813171387
    4. ' i' → logprob: -11.125353813171387
    5. ' ints' → logprob: -13.000353813171387
    6. '   ' → logprob: -13.000353813171387
    7. 'ers' → logprob: -13.500353813171387
    8. 'ières' → logprob: -13.500353813171387
    9. 'riers' → logprob: -13.875353813171387
    10. 'ieurs' → logprob: -14.375353813171387

Token 145: ' lus' (ID: 54762)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2905775010585785
    2. '(' → logprob: -2.0405774116516113
    3. '[int' → logprob: -2.6655774116516113
    4. ')' → logprob: -3.1655774116516113
    5. '(
' → logprob: -5.790577411651611
    6. '<int' → logprob: -6.665577411651611
    7. ' (' → logprob: -7.040577411651611
    8. 'int' → logprob: -7.165577411651611
    9. '   ' → logprob: -7.165577411651611
    10. ']' → logprob: -7.290577411651611

Token 146: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0672577619552612
    2. '(int' → logprob: -1.4422577619552612
    3. '   ' → logprob: -1.8172577619552612
    4. '(
' → logprob: -2.317257881164551
    5. ' (' → logprob: -2.942257881164551
    6. ')' → logprob: -3.317257881164551
    7. 'from' → logprob: -4.317257881164551
    8. ' sur' → logprob: -4.442257881164551
    9. 'sur' → logprob: -4.817257881164551
    10. '()' → logprob: -5.317257881164551

Token 147: ' une' (ID: 2463)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0770435780286789
    2. ' int' → logprob: -2.7020435333251953
    3. ' sys' → logprob: -6.327043533325195
    4. '(int' → logprob: -6.702043533325195
    5. ' la' → logprob: -6.827043533325195
    6. 'l' → logprob: -6.827043533325195
    7. 'sys' → logprob: -6.952043533325195
    8. 'la' → logprob: -8.327043533325195
    9. ' ' → logprob: -8.702043533325195
    10. '   ' → logprob: -8.952043533325195

Token 148: ' seule' (ID: 41983)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.18363821506500244
    2. 'ligne' → logprob: -2.183638095855713
    3. ' ' → logprob: -2.933638095855713
    4. 'l' → logprob: -7.058638095855713
    5. ' lignes' → logprob: -7.933638095855713
    6. ' seule' → logprob: -8.558638572692871
    7. ' l' → logprob: -9.058638572692871
    8. ' line' → logprob: -9.933638572692871
    9. ' même' → logprob: -10.183638572692871
    10. 'L' → logprob: -10.183638572692871

Token 149: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.11301013827323914
    2. ' lignes' → logprob: -2.6130101680755615
    3. ' ' → logprob: -4.113009929656982
    4. 'ligne' → logprob: -4.488009929656982
    5. ' line' → logprob: -6.113009929656982
    6. ' l' → logprob: -6.863009929656982
    7. ' lign' → logprob: -6.988009929656982
    8. 'l' → logprob: -7.488009929656982
    9. ' espaces' → logprob: -7.488009929656982
    10. ' espace' → logprob: -9.23801040649414

Token 150: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1320350021123886
    2. ',' → logprob: -2.88203501701355
    3. '   ' → logprob: -3.63203501701355
    4. '))' → logprob: -3.88203501701355
    5. '()' → logprob: -4.632034778594971
    6. '())' → logprob: -5.257034778594971
    7. '.' → logprob: -6.007034778594971
    8. ',
' → logprob: -7.632034778594971
    9. ',)' → logprob: -8.382035255432129
    10. ' )' → logprob: -8.507035255432129

Token 151: ' l' (ID: 305)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03380706161260605
    2. 'l' → logprob: -4.158807277679443
    3. ' int' → logprob: -4.533807277679443
    4. ' l' → logprob: -6.033807277679443
    5. 'sys' → logprob: -6.533807277679443
    6. 'ints' → logprob: -6.908807277679443
    7. ' sys' → logprob: -6.908807277679443
    8. 'la' → logprob: -8.033806800842285
    9. ' la' → logprob: -8.158806800842285
    10. 'inte' → logprob: -9.033806800842285

Token 152: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.010006803087890148
    2. ''' → logprob: -4.760006904602051
    3. 'entrée' → logprob: -7.760006904602051
    4. ''espace' → logprob: -8.26000690460205
    5. '_' → logprob: -8.38500690460205
    6. ''ent' → logprob: -9.01000690460205
    7. '’entrée' → logprob: -9.38500690460205
    8. ' entrée' → logprob: -9.88500690460205
    9. ''import' → logprob: -9.88500690460205
    10. '_input' → logprob: -10.26000690460205

Token 153: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.003629646496847272
    2. 'standard' → logprob: -5.628629684448242
    3. ' std' → logprob: -11.878629684448242
    4. ' )' → logprob: -12.128629684448242
    5. ')' → logprob: -12.378629684448242
    6. '_standard' → logprob: -12.628629684448242
    7. ' estándar' → logprob: -12.878629684448242
    8. ' standart' → logprob: -13.128629684448242
    9. ' стандарт' → logprob: -13.628629684448242
    10. ' standards' → logprob: -14.503629684448242

Token 154: '.
' (ID: 558)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04960101470351219
    2. ')' → logprob: -3.5496010780334473
    3. '))
' → logprob: -4.299601078033447
    4. '):' → logprob: -5.799601078033447
    5. '   ' → logprob: -6.674601078033447
    6. '):
' → logprob: -7.299601078033447
    7. '.' → logprob: -8.174600601196289
    8. ')):' → logprob: -8.799600601196289
    9. '()))' → logprob: -9.049600601196289
    10. ')
' → logprob: -9.174600601196289

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0698058158159256
    2. ')' → logprob: -2.944805860519409
    3. '
' → logprob: -5.06980562210083
    4. '    
' → logprob: -5.56980562210083
    5. '  
' → logprob: -6.31980562210083
    6. '()' → logprob: -7.19480562210083
    7. 'def' → logprob: -7.94480562210083
    8. '    ' → logprob: -8.194806098937988
    9. ' 
' → logprob: -8.319806098937988
    10. '\n' → logprob: -8.694806098937988

Token 156: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030402082949876785
    2. ')' → logprob: -3.905402183532715
    3. '):' → logprob: -4.905402183532715
    4. '):
' → logprob: -6.405402183532715
    5. 'def' → logprob: -8.280402183532715
    6. '```' → logprob: -8.905402183532715
    7. '"""' → logprob: -9.155402183532715
    8. '
' → logprob: -9.530402183532715
    9. '"""
' (adapté à ' """
') → logprob: -9.905402183532715
    10. '():' → logprob: -10.780402183532715

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017486036522313952
    2. 'return' → logprob: -6.376748561859131
    3. ' return' → logprob: -10.001749038696289
    4. '   ' → logprob: -14.376749038696289
    5. '```' → logprob: -15.126749038696289
    6. '	return' → logprob: -15.751749038696289
    7. 'def' → logprob: -17.12674903869629
    8. '       ' → logprob: -17.50174903869629
    9. '    
' → logprob: -17.87674903869629
    10. '
' → logprob: -18.00174903869629

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000944576517213136
    2. ' return' → logprob: -7.1259446144104
    3. '   ' → logprob: -8.875944137573242
    4. '	return' → logprob: -16.750944137573242
    5. ' ' → logprob: -16.875944137573242
    6. 'ret' → logprob: -17.125944137573242
    7. '
' → logprob: -17.250944137573242
    8. '```' → logprob: -17.250944137573242
    9. '    
' → logprob: -17.375944137573242
    10. '  ' → logprob: -17.625944137573242

Token 159: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5231610536575317
    2. 'map' → logprob: -0.8981610536575317
    3. 'm' → logprob: -11.398160934448242
    4. ' ' → logprob: -11.648160934448242
    5. 'list' → logprob: -12.398160934448242
    6. ' list' → logprob: -12.648160934448242
    7. '	map' → logprob: -12.648160934448242
    8. '   ' → logprob: -13.148160934448242
    9. ' ma' → logprob: -13.898160934448242
    10. ' ' → logprob: -13.898160934448242

Token 160: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0486145056784153
    2. '(' → logprob: -3.048614501953125
    3. '(
' → logprob: -10.923614501953125
    4. ' (' → logprob: -12.548614501953125
    5. 'int' → logprob: -13.298614501953125
    6. '(in' → logprob: -13.423614501953125
    7. '(

' → logprob: -14.298614501953125
    8. '<int' → logprob: -14.548614501953125
    9. '[int' → logprob: -15.048614501953125
    10. '(i' → logprob: -15.423614501953125

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011603808030486107
    2. '(sys' → logprob: -4.511603832244873
    3. '(' → logprob: -7.636603832244873
    4. ' ,' → logprob: -9.761603355407715
    5. 'sys' → logprob: -11.886603355407715
    6. ' sys' → logprob: -12.761603355407715
    7. '=sys' → logprob: -13.136603355407715
    8. ',s' → logprob: -13.761603355407715
    9. '(),' → logprob: -13.886603355407715
    10. ' (' → logprob: -14.261603355407715

Token 162: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.20144052803516388
    2. 'sys' → logprob: -1.7014405727386475
    3. '(sys' → logprob: -10.576440811157227
    4. '=sys' → logprob: -14.201440811157227
    5. '	sys' → logprob: -14.326440811157227
    6. ' ' → logprob: -15.201440811157227
    7. ')' → logprob: -15.701440811157227
    8. '.sys' → logprob: -16.951440811157227
    9. '_sys' → logprob: -17.201440811157227
    10. 'Sys' → logprob: -17.826440811157227

Token 163: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001105762057704851
    2. '.stdout' → logprob: -9.500110626220703
    3. '.std' → logprob: -11.000110626220703
    4. '.argv' → logprob: -11.375110626220703
    5. '.stderr' → logprob: -13.000110626220703
    6. '.' → logprob: -13.125110626220703
    7. 'stdin' → logprob: -13.750110626220703
    8. '.sys' → logprob: -13.875110626220703
    9. '.readline' → logprob: -15.000110626220703
    10. ' .' → logprob: -15.250110626220703

Token 164: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.240481914370321e-05
    2. '.stdin' → logprob: -10.125052452087402
    3. '.readlines' → logprob: -12.375052452087402
    4. '.' → logprob: -12.625052452087402
    5. '().' → logprob: -13.125052452087402
    6. '.read' → logprob: -13.125052452087402
    7. ').' → logprob: -15.125052452087402
    8. '.write' → logprob: -16.000051498413086
    9. ' .' → logprob: -16.250051498413086
    10. ')' → logprob: -16.875051498413086

Token 165: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002075933152809739
    2. '()' → logprob: -8.500207901000977
    3. '())' → logprob: -13.125207901000977
    4. ')' → logprob: -14.250207901000977
    5. ' ().' → logprob: -14.625207901000977
    6. '.' → logprob: -15.000207901000977
    7. '()).' → logprob: -15.750207901000977
    8. '(' → logprob: -16.000207901000977
    9. '()
' → logprob: -16.125207901000977
    10. '.readline' → logprob: -16.500207901000977

Token 166: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -9.088346359931165e-07
    2. ' strip' → logprob: -14.125000953674316
    3. '.strip' → logprob: -16.625
    4. 'rstrip' → logprob: -16.625
    5. 'split' → logprob: -17.0
    6. '(strip' → logprob: -17.625
    7. '_strip' → logprob: -18.0
    8. '-strip' → logprob: -18.875
    9. 'read' → logprob: -19.5
    10. 'stripe' → logprob: -20.125

Token 167: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.368984107510187e-05
    2. '()' → logprob: -10.750033378601074
    3. '.' → logprob: -11.375033378601074
    4. '(' → logprob: -14.750033378601074
    5. ' .' → logprob: -16.37503433227539
    6. '.split' → logprob: -16.75003433227539
    7. ' ().' → logprob: -17.62503433227539
    8. ')' → logprob: -17.87503433227539
    9. '().
' → logprob: -18.37503433227539
    10. '(),' → logprob: -18.62503433227539

Token 168: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.125
    3. '.split' → logprob: -18.125
    4. 'spl' → logprob: -19.0
    5. 'strip' → logprob: -20.625
    6. ')' → logprob: -20.625
    7. '(split' → logprob: -20.75
    8. '```' → logprob: -21.125
    9. 's' → logprob: -21.875
    10. '   ' → logprob: -22.25

Token 169: '())

' (ID: 27654)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11894071847200394
    2. '))' → logprob: -2.368940830230713
    3. '())' → logprob: -4.118940830230713
    4. '()' → logprob: -6.243940830230713
    5. ')' → logprob: -7.993940830230713
    6. '()))
' → logprob: -11.243940353393555
    7. '(' → logprob: -12.743940353393555
    8. '()));' → logprob: -14.493940353393555
    9. '())
' → logprob: -14.743940353393555
    10. ' ))' → logprob: -15.368940353393555

Token 170: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015195236541330814
    2. 'n' → logprob: -4.390195369720459
    3. '#' → logprob: -6.390195369720459
    4. 'if' → logprob: -7.390195369720459
    5. 'N' → logprob: -9.0151948928833
    6. 'import' → logprob: -9.6401948928833
    7. 'd' → logprob: -9.7651948928833
    8. '
' → logprob: -10.5151948928833
    9. 'for' → logprob: -10.8901948928833
    10. '\' → logprob: -11.3901948928833

Token 171: ' input' (ID: 3422)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22326985001564026
    2. ' solve' → logprob: -1.9732698202133179
    3. ' calculate' → logprob: -3.7232699394226074
    4. ' get' → logprob: -4.473269939422607
    5. ' factorial' → logprob: -5.348269939422607
    6. ' process' → logprob: -5.598269939422607
    7. ' compute' → logprob: -5.598269939422607
    8. 'solve' → logprob: -5.848269939422607
    9. ' read' → logprob: -6.223269939422607
    10. ' is' → logprob: -6.348269939422607

Token 172: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08301538974046707
    2. '():' → logprob: -2.5830154418945312
    3. '_' → logprob: -6.583015441894531
    4. '_line' → logprob: -6.708015441894531
    5. '_array' → logprob: -8.083015441894531
    6. '(' → logprob: -8.333015441894531
    7. '_data' → logprob: -8.583015441894531
    8. '_string' → logprob: -9.208015441894531
    9. '():
' → logprob: -9.458015441894531
    10. '_value' → logprob: -9.958015441894531

Token 173: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4438183605670929
    2. '()' → logprob: -1.9438183307647705
    3. '   ' → logprob: -2.6938183307647705
    4. ' ' → logprob: -2.8188183307647705
    5. ':' → logprob: -3.8188183307647705
    6. '<|end|>' → logprob: -4.31881856918335
    7. '(' → logprob: -4.56881856918335
    8. ')' → logprob: -5.06881856918335
    9. '):' → logprob: -5.06881856918335
    10. '<|end|>' → logprob: -5.31881856918335

Token 174: ' """
' (ID: 7037)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4097912609577179
    2. ' return' → logprob: -1.9097912311553955
    3. 'sys' → logprob: -2.2847912311553955
    4. 'return' → logprob: -2.5347912311553955
    5. ' ' → logprob: -5.659791469573975
    6. '   ' → logprob: -5.909791469573975
    7. '  ' → logprob: -8.659790992736816
    8. '    ' → logprob: -8.659790992736816
    9. '=sys' → logprob: -9.034790992736816
    10. '    
' → logprob: -9.909790992736816

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009617962874472141
    2. '"""' → logprob: -5.634617805480957
    3. '()' → logprob: -6.384617805480957
    4. ')' → logprob: -7.384617805480957
    5. '    ' → logprob: -7.384617805480957
    6. '  ' → logprob: -7.384617805480957
    7. ' """' → logprob: -7.634617805480957
    8. '"' → logprob: -8.509617805480957
    9. ' La' → logprob: -8.634617805480957
    10. ' ' → logprob: -8.634617805480957

Token 176: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33810171484947205
    2. '   ' → logprob: -2.088101625442505
    3. '"""' → logprob: -2.088101625442505
    4. ' return' → logprob: -3.838101625442505
    5. '"""
' → logprob: -5.713101863861084
    6. '""' → logprob: -6.213101863861084
    7. 'L' → logprob: -6.338101863861084
    8. 'def' → logprob: -6.713101863861084
    9. '()' → logprob: -6.713101863861084
    10. 'import' → logprob: -6.838101863861084

Token 177: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0027482921723276377
    2. '():' → logprob: -7.252748489379883
    3. '<|end|>' → logprob: -7.377748489379883
    4. '()>' → logprob: -8.002748489379883
    5. ' une' → logprob: -8.627748489379883
    6. '<|end|>' → logprob: -8.752748489379883
    7. '().' → logprob: -9.002748489379883
    8. ' ' → logprob: -9.502748489379883
    9. ' ()' → logprob: -9.752748489379883
    10. '()">' → logprob: -10.002748489379883

Token 178: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.15156565606594086
    2. 'ligne' → logprob: -2.0265655517578125
    3. '()' → logprob: -5.4015655517578125
    4. 'l' → logprob: -6.2765655517578125
    5. ' chaîne' → logprob: -7.1515655517578125
    6. 'line' → logprob: -7.9015655517578125
    7. ' line' → logprob: -7.9015655517578125
    8. ' ' → logprob: -8.151565551757812
    9. ' seule' → logprob: -8.526565551757812
    10. 'chaine' → logprob: -9.401565551757812

Token 179: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011333089787513018
    2. '():' → logprob: -8.00113296508789
    3. '   ' → logprob: -8.25113296508789
    4. 'de' → logprob: -9.12613296508789
    5. '().' → logprob: -9.75113296508789
    6. ')' → logprob: -10.12613296508789
    7. '<|end|>' → logprob: -10.12613296508789
    8. '(' → logprob: -10.50113296508789
    9. '()
' → logprob: -10.75113296508789
    10. '_' → logprob: -10.75113296508789

Token 180: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04895136505365372
    2. ' l' → logprob: -3.6739513874053955
    3. 'sys' → logprob: -4.048951148986816
    4. '()' → logprob: -5.423951148986816
    5. ' sys' → logprob: -8.173951148986816
    6. 'input' → logprob: -9.923951148986816
    7. '<|end|>' → logprob: -9.923951148986816
    8. '(sys' → logprob: -10.298951148986816
    9. '=sys' → logprob: -10.548951148986816
    10. ' ' → logprob: -10.798951148986816

Token 181: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0017361093778163195
    2. 'entrée' → logprob: -6.376736164093018
    3. '’entrée' → logprob: -11.37673568725586
    4. ' entrée' → logprob: -11.75173568725586
    5. ''ent' → logprob: -12.12673568725586
    6. ''' → logprob: -12.12673568725586
    7. 'e' → logprob: -13.75173568725586
    8. ''''' → logprob: -15.00173568725586
    9. ''utilisateur' → logprob: -15.25173568725586
    10. 'Entr' → logprob: -15.25173568725586

Token 182: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.04480653628706932
    2. 'standard' → logprob: -3.169806480407715
    3. '_standard' → logprob: -7.294806480407715
    4. '()' → logprob: -7.419806480407715
    5. ')' → logprob: -8.919806480407715
    6. '<|end|>' → logprob: -9.419806480407715
    7. 'Standard' → logprob: -9.919806480407715
    8. ' std' → logprob: -10.044806480407715
    9. ' ' → logprob: -10.544806480407715
    10. 'std' → logprob: -10.794806480407715

Token 183: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2985387444496155
    2. ',' → logprob: -1.9235386848449707
    3. '()' → logprob: -2.7985386848449707
    4. '().' → logprob: -3.5485386848449707
    5. '.' → logprob: -5.298538684844971
    6. '():' → logprob: -5.298538684844971
    7. ':' → logprob: -6.048538684844971
    8. ')' → logprob: -6.173538684844971
    9. 'return' → logprob: -6.423538684844971
    10. '.strip' → logprob: -6.548538684844971

Token 184: ' sup' (ID: 1982)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5081148743629456
    2. ' return' → logprob: -1.3831148147583008
    3. ' retourne' → logprob: -2.633114814758301
    4. '   ' → logprob: -3.258114814758301
    5. '.strip' → logprob: -4.758114814758301
    6. 'return' → logprob: -4.758114814758301
    7. ' ren' → logprob: -4.883114814758301
    8. '    ' → logprob: -5.633114814758301
    9. 'rstrip' → logprob: -5.883114814758301
    10. ' strip' → logprob: -6.883114814758301

Token 185: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.47400733828544617
    2. 'er' → logprob: -1.8490073680877686
    3. 'prim' → logprob: -2.4740073680877686
    4. 'p' → logprob: -2.9740073680877686
    5. 'érieur' → logprob: -4.0990071296691895
    6. 'prima' → logprob: -4.3490071296691895
    7. 'pl' → logprob: -4.4740071296691895
    8. 'pr' → logprob: -4.7240071296691895
    9. 'press' → logprob: -5.2240071296691895
    10. 'port' → logprob: -5.3490071296691895

Token 186: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17111943662166595
    2. ' les' → logprob: -2.046119451522827
    3. ' l' → logprob: -4.421119213104248
    4. ' la' → logprob: -4.921119213104248
    5. ' le' → logprob: -5.921119213104248
    6. '()
' → logprob: -6.546119213104248
    7. 'l' → logprob: -7.171119213104248
    8. 'the' → logprob: -7.296119213104248
    9. '()\' → logprob: -7.421119213104248
    10. ' ()' → logprob: -8.171119689941406

Token 187: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.11366365104913712
    2. '\n' → logprob: -2.613663673400879
    3. ' trailing' → logprob: -3.988663673400879
    4. 's' → logprob: -5.988663673400879
    5. ' ' → logprob: -5.988663673400879
    6. '\' → logprob: -6.613663673400879
    7. ' \' → logprob: -6.738663673400879
    8. ' ' → logprob: -6.863663673400879
    9. ' caractères' → logprob: -6.863663673400879
    10. '  ' → logprob: -7.113663673400879

Token 188: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6064494848251343
    2. '()' → logprob: -1.6064494848251343
    3. '  ' → logprob: -1.9814494848251343
    4. ' ' → logprob: -3.106449604034424
    5. '    ' → logprob: -4.231449604034424
    6. 'rstrip' → logprob: -4.356449604034424
    7. 'b' → logprob: -5.356449604034424
    8. ' )' → logprob: -5.481449604034424
    9. ' trailing' → logprob: -5.981449604034424
    10. ')' → logprob: -6.106449604034424

Token 189: ' début' (ID: 29589)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1481965333223343
    2. 'fin' → logprob: -3.0231964588165283
    3. 'tro' → logprob: -3.5231964588165283
    4. 'ex' → logprob: -3.7731964588165283
    5. 'tra' → logprob: -4.523196697235107
    6. 'tail' → logprob: -5.523196697235107
    7. ' trop' → logprob: -5.898196697235107
    8. 'd' → logprob: -6.148196697235107
    9. 'r' → logprob: -6.398196697235107
    10. '```' → logprob: -6.398196697235107

Token 190: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.2923814058303833
    2. 'et' → logprob: -1.9173814058303833
    3. '   ' → logprob: -2.4173812866210938
    4. ' ' → logprob: -4.542381286621094
    5. 's' → logprob: -5.917381286621094
    6. '  ' → logprob: -6.417381286621094
    7. 'def' → logprob: -7.292381286621094
    8. '    ' → logprob: -7.542381286621094
    9. 'de' → logprob: -8.042381286621094
    10. ',' → logprob: -8.667381286621094

Token 191: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.023661427199840546
    2. ' fin' → logprob: -3.7736613750457764
    3. 'f' → logprob: -9.398661613464355
    4. '```' → logprob: -9.523661613464355
    5. 'def' → logprob: -10.023661613464355
    6. 'fim' → logprob: -10.148661613464355
    7. 'et' → logprob: -11.148661613464355
    8. 's' → logprob: -11.273661613464355
    9. '_fin' → logprob: -11.273661613464355
    10. '   ' → logprob: -11.523661613464355

Token 192: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.627140998840332
    2. ' de' → logprob: -1.252140998840332
    3. 'de' → logprob: -1.752140998840332
    4. ' ' → logprob: -6.002140998840332
    5. 'def' → logprob: -6.252140998840332
    6. '  ' → logprob: -7.127140998840332
    7. 's' → logprob: -7.752140998840332
    8. ',' → logprob: -8.002140998840332
    9. '    
' → logprob: -8.877140998840332
    10. '```' → logprob: -9.002140998840332

Token 193: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.2552419900894165
    2. 'la' → logprob: -2.380241870880127
    3. 'l' → logprob: -2.630241870880127
    4. 'chaine' → logprob: -3.255241870880127
    5. ' ligne' → logprob: -4.005241870880127
    6. ' chaîne' → logprob: -7.005241870880127
    7. 'cha' → logprob: -7.005241870880127
    8. ' la' → logprob: -7.130241870880127
    9. 'line' → logprob: -7.380241870880127
    10. 'string' → logprob: -7.755241870880127

Token 194: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004414570517838001
    2. '():' → logprob: -6.2544145584106445
    3. '()' → logprob: -7.2544145584106445
    4. ')' → logprob: -7.2544145584106445
    5. '):' → logprob: -7.2544145584106445
    6. '  ' → logprob: -9.754414558410645
    7. ' ' → logprob: -9.879414558410645
    8. '(' → logprob: -9.879414558410645
    9. '():
' → logprob: -10.004414558410645
    10. '):
' → logprob: -10.629414558410645

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.6656825866666622e-05
    2. ')' → logprob: -11.00002670288086
    3. 'return' → logprob: -12.25002670288086
    4. ' return' → logprob: -13.00002670288086
    5. '"""' → logprob: -13.75002670288086
    6. '    
' → logprob: -14.37502670288086
    7. '
' → logprob: -15.25002670288086
    8. '    ' → logprob: -15.87502670288086
    9. '```' → logprob: -15.87502670288086
    10. '   ' → logprob: -16.00002670288086

Token 196: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.910643762443215e-05
    2. 'return' → logprob: -10.000079154968262
    3. ' return' → logprob: -11.250079154968262
    4. '"""' → logprob: -11.500079154968262
    5. '    
' → logprob: -13.000079154968262
    6. '  ' → logprob: -13.125079154968262
    7. '    ' → logprob: -13.250079154968262
    8. ' ' → logprob: -13.250079154968262
    9. 'Returns' (adapté à ' Returns') → logprob: -14.125079154968262
    10. '"""
' → logprob: -14.125079154968262

Token 197: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9199125170707703
    2. '    ' → logprob: -1.294912576675415
    3. ':' → logprob: -1.544912576675415
    4. '  ' → logprob: -3.044912576675415
    5. ' :' → logprob: -3.544912576675415
    6. ' ' → logprob: -4.544912338256836
    7. '):' → logprob: -4.544912338256836
    8. '<|end|>' → logprob: -5.544912338256836
    9. ')' → logprob: -6.419912338256836
    10. ' ' → logprob: -6.794912338256836

Token 198: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009878505021333694
    2. '    ' → logprob: -5.009878635406494
    3. ' str' → logprob: -6.509878635406494
    4. '       ' → logprob: -7.009878635406494
    5. 'str' → logprob: -8.759878158569336
    6. '  ' → logprob: -9.134878158569336
    7. ' ' → logprob: -9.259878158569336
    8. ' sys' → logprob: -9.384878158569336
    9. '   ' → logprob: -9.759878158569336
    10. '"' → logprob: -10.009878158569336

Token 199: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.00038407891406677663
    2. ' str' → logprob: -7.8753838539123535
    3. 'string' → logprob: -13.000384330749512
    4. '   ' → logprob: -13.750384330749512
    5. '(str' → logprob: -15.625384330749512
    6. '	str' → logprob: -16.250383377075195
    7. 'stri' → logprob: -16.375383377075195
    8. '[str' → logprob: -16.500383377075195
    9. '
' → logprob: -16.625383377075195
    10. 's' → logprob: -17.250383377075195

Token 200: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' La' (ID: 3038)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.14323776960372925
    2. 'sys' → logprob: -2.018237829208374
    3. ' ' → logprob: -8.643238067626953
    4. ' ' → logprob: -8.768238067626953
    5. '   ' → logprob: -9.143238067626953
    6. 'str' → logprob: -10.518238067626953
    7. '    ' → logprob: -10.768238067626953
    8. ' str' → logprob: -11.018238067626953
    9. '(sys' → logprob: -11.268238067626953
    10. 'input' → logprob: -12.018238067626953

Token 202: ' ligne' (ID: 19583)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7831854224205017
    2. ' ligne' → logprob: -1.0331854820251465
    3. 'chaine' → logprob: -2.6581854820251465
    4. ' chaîne' → logprob: -2.7831854820251465
    5. 'sys' → logprob: -3.7831854820251465
    6. 'ligne' → logprob: -4.0331854820251465
    7. ' ' → logprob: -5.4081854820251465
    8. ' chaine' → logprob: -5.7831854820251465
    9. ' line' → logprob: -7.0331854820251465
    10. 'line' → logprob: -7.0331854820251465

Token 203: ' l' (ID: 305)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -1.1804766654968262
    2. ' de' → logprob: -1.8054766654968262
    3. ' complète' → logprob: -1.9304766654968262
    4. ' l' → logprob: -2.055476665496826
    5. '   ' → logprob: -2.680476665496826
    6. '.rstrip' → logprob: -2.805476665496826
    7. ' d' → logprob: -3.805476665496826
    8. ' ' → logprob: -3.930476665496826
    9. ' lu' → logprob: -4.055476665496826
    10. ' read' → logprob: -5.305476665496826

Token 204: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0034090590197592974
    2. 'u' → logprob: -5.753408908843994
    3. 'e' → logprob: -9.628409385681152
    4. 'us' → logprob: -9.753409385681152
    5. 'ecture' → logprob: -10.378409385681152
    6. 'is' → logprob: -10.878409385681152
    7. 'igne' → logprob: -11.128409385681152
    8. 'ues' → logprob: -11.628409385681152
    9. '   ' → logprob: -12.128409385681152
    10. 'isible' → logprob: -12.378409385681152

Token 205: ',' (ID: 11)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.20175206661224365
    2. '.rstrip' → logprob: -2.076752185821533
    3. '   ' → logprob: -3.576752185821533
    4. '().' → logprob: -4.201752185821533
    5. '()' → logprob: -6.076752185821533
    6. '.' → logprob: -6.576752185821533
    7. ' complète' → logprob: -6.701752185821533
    8. '.readline' → logprob: -6.951752185821533
    9. '<|end|>' → logprob: -6.951752185821533
    10. '.trim' → logprob: -7.201752185821533

Token 206: ' sans' (ID: 9828)
  Prédit: ' sans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sans' → logprob: -0.30044999718666077
    2. 'sans' → logprob: -1.4254499673843384
    3. ' stripped' → logprob: -4.800449848175049
    4. ' ou' → logprob: -5.675449848175049
    5. ' après' → logprob: -6.175449848175049
    6. 'ou' → logprob: -6.925449848175049
    7. 'str' → logprob: -6.925449848175049
    8. ' without' → logprob: -7.175449848175049
    9. ' avec' → logprob: -7.925449848175049
    10. 'strip' → logprob: -8.425450325012207

Token 207: ' espaces' (ID: 98361)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6208908557891846
    2. ' espaces' → logprob: -0.8708908557891846
    3. ' leading' → logprob: -3.8708908557891846
    4. ' trailing' → logprob: -4.6208906173706055
    5. 'les' → logprob: -5.3708906173706055
    6. 'esp' → logprob: -5.7458906173706055
    7. ' ' → logprob: -6.8708906173706055
    8. '   ' → logprob: -7.3708906173706055
    9. 'es' → logprob: -7.4958906173706055
    10. 'spaces' → logprob: -7.4958906173706055

Token 208: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.011300564743578434
    2. ' super' → logprob: -5.386300563812256
    3. 'super' → logprob: -6.011300563812256
    4. 'sur' → logprob: -7.511300563812256
    5. 'en' → logprob: -7.636300563812256
    6. ' de' → logprob: -7.636300563812256
    7. 'de' → logprob: -8.261301040649414
    8. ' leading' → logprob: -8.261301040649414
    9. ' inutil' → logprob: -8.386301040649414
    10. '.' → logprob: -8.636301040649414

Token 209: ' début' (ID: 29589)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9142225384712219
    2. 'dé' → logprob: -0.9142225384712219
    3. 'b' → logprob: -2.914222478866577
    4. ' fin' → logprob: -3.789222478866577
    5. 'bord' → logprob: -4.039222717285156
    6. 'fin' → logprob: -4.164222717285156
    7. 'es' → logprob: -4.164222717285156
    8. '\n' → logprob: -4.539222717285156
    9. ' début' → logprob: -5.039222717285156
    10. 'd' → logprob: -5.289222717285156

Token 210: ' ou' (ID: 2031)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.4428066909313202
    2. ' ni' → logprob: -1.0678067207336426
    3. 'et' → logprob: -4.567806720733643
    4. ' ou' → logprob: -6.192806720733643
    5. 'ni' → logprob: -6.942806720733643
    6. ' ' → logprob: -8.317806243896484
    7. 's' → logprob: -9.317806243896484
    8. '   ' → logprob: -9.567806243896484
    9. ' e' → logprob: -10.192806243896484
    10. ' and' → logprob: -10.442806243896484

Token 211: ' de' (ID: 334)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.22632525861263275
    2. 'fin' → logprob: -1.601325273513794
    3. '   ' → logprob: -7.101325035095215
    4. ' ' → logprob: -10.726325035095215
    5. ' de' → logprob: -11.601325035095215
    6. 'f' → logprob: -11.601325035095215
    7. '  ' → logprob: -12.226325035095215
    8. '_fin' → logprob: -12.226325035095215
    9. ' ' → logprob: -12.351325035095215
    10. 'de' → logprob: -12.351325035095215

Token 212: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0024817234370857477
    2. ' fin' → logprob: -6.002481937408447
    3. 'f' → logprob: -12.377481460571289
    4. 'fi' → logprob: -14.502481460571289
    5. 'queue' → logprob: -14.877481460571289
    6. '
' → logprob: -15.752481460571289
    7. 'ligne' → logprob: -16.00248146057129
    8. ' ' → logprob: -16.12748146057129
    9. '-fin' → logprob: -16.12748146057129
    10. '_fin' → logprob: -16.75248146057129

Token 213: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18635156750679016
    2. ')' → logprob: -2.0613515377044678
    3. '.' → logprob: -4.061351776123047
    4. '"""' → logprob: -4.061351776123047
    5. '"""
' → logprob: -5.811351776123047
    6. '"' → logprob: -7.061351776123047
    7. ')
' → logprob: -7.186351776123047
    8. '()' → logprob: -7.436351776123047
    9. '```' → logprob: -7.686351776123047
    10. 's' → logprob: -7.811351776123047

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004052632953971624
    2. ')' → logprob: -6.254052639007568
    3. '"""' → logprob: -6.254052639007568
    4. '    
' → logprob: -9.25405216217041
    5. '"' → logprob: -10.25405216217041
    6. ' """' → logprob: -11.00405216217041
    7. ' ' → logprob: -11.62905216217041
    8. '\n' → logprob: -11.75405216217041
    9. '  
' → logprob: -12.25405216217041
    10. '"""
' → logprob: -12.50405216217041

Token 215: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006005583330988884
    2. '"""' → logprob: -5.131005764007568
    3. '"' → logprob: -10.50600528717041
    4. '"""
' (adapté à ' """
') → logprob: -10.88100528717041
    5. ')' → logprob: -11.50600528717041
    6. '""' → logprob: -11.63100528717041
    7. ' """' → logprob: -11.75600528717041
    8. '```' → logprob: -13.88100528717041
    9. '    ' → logprob: -14.38100528717041
    10. '   ' → logprob: -14.75600528717041

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00553136644884944
    2. 'return' → logprob: -5.255531311035156
    3. ' return' → logprob: -8.130531311035156
    4. '	return' → logprob: -13.130531311035156
    5. '   ' → logprob: -14.755531311035156
    6. 'import' → logprob: -15.505531311035156
    7. 'sys' → logprob: -16.255531311035156
    8. '  ' → logprob: -16.255531311035156
    9. ' ' → logprob: -16.630531311035156
    10. '       ' → logprob: -16.755531311035156

Token 217: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.416665640543215e-05
    2. ' return' → logprob: -10.87503433227539
    3. '   ' → logprob: -11.12503433227539
    4. 'import' → logprob: -15.25003433227539
    5. 'ret' → logprob: -16.37503433227539
    6. 'try' → logprob: -17.37503433227539
    7. '	return' → logprob: -18.00003433227539
    8. 'r' → logprob: -18.37503433227539
    9. '
' → logprob: -18.50003433227539
    10. ' ' → logprob: -19.25003433227539

Token 218: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014191007241606712
    2. ' sys' → logprob: -4.264191150665283
    3. 'input' → logprob: -10.514190673828125
    4. ' input' → logprob: -15.389190673828125
    5. '(sys' → logprob: -16.139190673828125
    6. '	sys' → logprob: -18.014190673828125
    7. '=sys' → logprob: -18.389190673828125
    8. 'raw' → logprob: -19.514190673828125
    9. 's' → logprob: -20.514190673828125
    10. ' ' → logprob: -20.639190673828125

Token 219: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006645413814112544
    2. '.' → logprob: -7.500664710998535
    3. '.stdout' → logprob: -9.750664710998535
    4. '.std' → logprob: -10.000664710998535
    5. '.readline' → logprob: -12.875664710998535
    6. '.input' → logprob: -13.250664710998535
    7. '.argv' → logprob: -13.375664710998535
    8. '.stderr' → logprob: -14.250664710998535
    9. '.sys' → logprob: -14.750664710998535
    10. 'stdin' → logprob: -14.875664710998535

Token 220: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.758300438988954e-05
    2. '.' → logprob: -9.250097274780273
    3. '.read' → logprob: -13.625097274780273
    4. ' readline' → logprob: -16.375097274780273
    5. '.readlines' → logprob: -17.500097274780273
    6. '().' → logprob: -17.875097274780273
    7. '.stdin' → logprob: -19.000097274780273
    8. '.rstrip' → logprob: -20.375097274780273
    9. '.write' → logprob: -20.625097274780273
    10. ' .' → logprob: -21.000097274780273

Token 221: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0031796174589544535
    2. '()' → logprob: -5.753179550170898
    3. ' ().' → logprob: -13.378179550170898
    4. '()).' → logprob: -15.753179550170898
    5. ' ()' → logprob: -16.3781795501709
    6. '.strip' → logprob: -17.2531795501709
    7. '().'' → logprob: -17.2531795501709
    8. '(' → logprob: -17.3781795501709
    9. '().__' → logprob: -17.8781795501709
    10. '()?.' → logprob: -18.0031795501709

Token 222: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.3306015716807451e-05
    2. 'rstrip' → logprob: -11.25001335144043
    3. ' strip' → logprob: -15.12501335144043
    4. '_strip' → logprob: -17.12501335144043
    5. '.strip' → logprob: -17.62501335144043
    6. '(strip' → logprob: -18.00001335144043
    7. 'str' → logprob: -19.62501335144043
    8. 'stripe' → logprob: -20.50001335144043
    9. 'Strip' → logprob: -20.75001335144043
    10. '-strip' → logprob: -20.75001335144043

Token 223: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.1186566047836095e-05
    2. '(' → logprob: -10.500031471252441
    3. '()
' → logprob: -13.500031471252441
    4. '()`' → logprob: -14.000031471252441
    5. '()

' → logprob: -15.000031471252441
    6. ' ()' → logprob: -15.375031471252441
    7. '()(' → logprob: -16.000030517578125
    8. '().' → logprob: -16.125030517578125
    9. '()]' → logprob: -16.250030517578125
    10. '())' → logprob: -16.375030517578125

Token 224: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02901717834174633
    2. '#' → logprob: -3.654017210006714
    3. 'd' → logprob: -7.154016971588135
    4. '\' → logprob: -7.154016971588135
    5. '
' → logprob: -8.029017448425293
    6. '\n' → logprob: -8.154017448425293
    7. 'n' → logprob: -8.904017448425293
    8. 'de' → logprob: -9.404017448425293
    9. '  
' → logprob: -9.904017448425293
    10. 'import' → logprob: -10.404017448425293

Token 225: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05141092464327812
    2. 'if' → logprob: -3.3014109134674072
    3. '#' → logprob: -4.426411151885986
    4. 'import' → logprob: -7.176411151885986
    5. ' if' → logprob: -8.926410675048828
    6. '```' → logprob: -9.301410675048828
    7. '\' → logprob: -9.676410675048828
    8. 'class' → logprob: -10.176410675048828
    9. 'from' → logprob: -10.426410675048828
    10. ' def' → logprob: -10.926410675048828

Token 226: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018353492487221956
    2. '()
' → logprob: -7.626835346221924
    3. 's' → logprob: -8.126835823059082
    4. '(' → logprob: -8.251835823059082
    5. 'n' → logprob: -8.376835823059082
    6. '#' → logprob: -9.376835823059082
    7. 'def' → logprob: -9.501835823059082
    8. '[]' → logprob: -9.626835823059082
    9. '_' → logprob: -9.751835823059082
    10. 'des' → logprob: -10.126835823059082

Token 227: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12103025615215302
    2. 'es' → logprob: -2.621030330657959
    3. ''une' → logprob: -3.371030330657959
    4. ''un' → logprob: -5.746030330657959
    5. 'u' → logprob: -6.246030330657959
    6. 'une' → logprob: -7.246030330657959
    7. ''e' → logprob: -8.6210298538208
    8. 'eux' → logprob: -8.8710298538208
    9. 'onnées' → logprob: -8.9960298538208
    10. 'onne' → logprob: -9.2460298538208

Token 228: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1593550145626068
    2. 'nombre' → logprob: -2.5343549251556396
    3. 'int' → logprob: -3.9093549251556396
    4. ' entier' → logprob: -3.9093549251556396
    5. 'e' → logprob: -4.159355163574219
    6. ' nombre' → logprob: -5.534355163574219
    7. ' tableau' → logprob: -5.909355163574219
    8. 'array' → logprob: -7.034355163574219
    9. '_ent' → logprob: -7.534355163574219
    10. 'n' → logprob: -8.159355163574219

Token 229: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6948132514953613
    2. '()' → logprob: -0.6948132514953613
    3. '(' → logprob: -7.694813251495361
    4. 'num' → logprob: -8.319812774658203
    5. 's' → logprob: -8.819812774658203
    6. 'N' → logprob: -9.319812774658203
    7. ' n' → logprob: -9.694812774658203
    8. '()
' → logprob: -9.694812774658203
    9. '(n' → logprob: -9.694812774658203
    10. '_n' → logprob: -9.819812774658203

Token 230: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9596953392028809
    2. 'l' → logprob: -1.2096953392028809
    3. '()' → logprob: -1.3346953392028809
    4. '(sys' → logprob: -4.334695339202881
    5. 'la' → logprob: -4.334695339202881
    6. 'input' → logprob: -4.584695339202881
    7. 'une' → logprob: -4.709695339202881
    8. ' l' → logprob: -5.959695339202881
    9. ' sys' → logprob: -5.959695339202881
    10. '=sys' → logprob: -6.584695339202881

Token 231: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.011816231533885002
    2. 'entrée' → logprob: -4.636816024780273
    3. ''' → logprob: -7.261816024780273
    4. 'a' → logprob: -7.261816024780273
    5. 'e' → logprob: -8.386816024780273
    6. 'input' → logprob: -9.261816024780273
    7. 'stdin' → logprob: -9.261816024780273
    8. ''ent' → logprob: -10.011816024780273
    9. 'es' → logprob: -10.136816024780273
    10. ''import' → logprob: -10.636816024780273

Token 232: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019106490537524223
    2. 'n' → logprob: -4.644106388092041
    3. '()
' → logprob: -5.269106388092041
    4. '_' → logprob: -6.144106388092041
    5. 'def' → logprob: -7.269106388092041
    6. 'nombre' → logprob: -8.1441068649292
    7. 's' → logprob: -8.8941068649292
    8. 'int' → logprob: -9.0191068649292
    9. '()\' → logprob: -9.6441068649292
    10. ',' → logprob: -9.6441068649292

Token 233: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07948748767375946
    2. '()' → logprob: -2.8294875621795654
    3. '()
' → logprob: -4.204487323760986
    4. 'n' → logprob: -6.954487323760986
    5. '()

' → logprob: -7.829487323760986
    6. ' def' → logprob: -7.954487323760986
    7. 'int' → logprob: -8.329487800598145
    8. '
' → logprob: -9.204487800598145
    9. '(
' → logprob: -10.079487800598145
    10. '()\' → logprob: -10.204487800598145

Token 234: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004903789144009352
    2. 'N' → logprob: -5.504903793334961
    3. 'number' → logprob: -8.004903793334961
    4. 'def' → logprob: -9.254903793334961
    5. 'num' → logprob: -9.379903793334961
    6. 'value' → logprob: -9.629903793334961
    7. 'nombre' → logprob: -9.629903793334961
    8. 'nb' → logprob: -9.879903793334961
    9. 'x' → logprob: -10.004903793334961
    10. ' n' → logprob: -11.129903793334961

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07001634687185287
    2. '=' → logprob: -2.695016384124756
    3. ' ' → logprob: -10.070015907287598
    4. ' =
' → logprob: -11.695015907287598
    5. '=int' → logprob: -11.695015907287598
    6. '_' → logprob: -11.945015907287598
    7. ')' → logprob: -12.445015907287598
    8. ',' → logprob: -12.820015907287598
    9. '  ' → logprob: -13.570015907287598
    10. 'space' → logprob: -13.820015907287598

Token 236: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20339474081993103
    2. ' int' → logprob: -1.7033947706222534
    3. 'get' → logprob: -6.578394889831543
    4. ' get' → logprob: -7.453394889831543
    5. 'input' → logprob: -12.453394889831543
    6. ' input' → logprob: -12.953394889831543
    7. ' ' → logprob: -13.203394889831543
    8. '	int' → logprob: -14.703394889831543
    9. '```' → logprob: -14.828394889831543
    10. '<int' → logprob: -15.203394889831543

Token 237: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1004418358206749
    2. '(' → logprob: -2.3504419326782227
    3. '(sys' → logprob: -9.225441932678223
    4. '()' → logprob: -9.725441932678223
    5. 'input' → logprob: -10.100441932678223
    6. ' (' → logprob: -10.850441932678223
    7. '(
' → logprob: -11.975441932678223
    8. '(get' → logprob: -12.600441932678223
    9. '('' → logprob: -12.725441932678223
    10. '(s' → logprob: -13.725441932678223

Token 238: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009156247251667082
    2. '()' → logprob: -7.00091552734375
    3. ')' → logprob: -13.00091552734375
    4. '())
' → logprob: -14.50091552734375
    5. ' ())' → logprob: -14.50091552734375
    6. '().' → logprob: -15.50091552734375
    7. '()))' → logprob: -15.50091552734375
    8. '(' → logprob: -15.87591552734375
    9. '();)' → logprob: -15.87591552734375
    10. '()
' → logprob: -16.25091552734375

Token 239: '#' (ID: 2)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.27090927958488464
    2. 'array' → logprob: -2.270909309387207
    3. 'a' → logprob: -2.520909309387207
    4. 'for' → logprob: -3.520909309387207
    5. 'data' → logprob: -4.270909309387207
    6. '#' → logprob: -5.395909309387207
    7. 'lst' → logprob: -7.145909309387207
    8. 'numbers' → logprob: -7.395909309387207
    9. 'result' → logprob: -7.770909309387207
    10. 's' → logprob: -8.020909309387207

Token 240: ' Calcul' (ID: 57243)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.02822120673954487
    2. 'array' → logprob: -3.7782211303710938
    3. 'for' → logprob: -6.153221130371094
    4. 'a' → logprob: -6.903221130371094
    5. 'numbers' → logprob: -7.278221130371094
    6. 'values' → logprob: -7.778221130371094
    7. 'lst' → logprob: -8.778221130371094
    8. 'data' → logprob: -8.778221130371094
    9. '#' → logprob: -8.903221130371094
    10. 'tab' → logprob: -9.528221130371094

Token 241: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2594277560710907
    2. 'result' → logprob: -2.259427785873413
    3. '_' → logprob: -2.634427785873413
    4. '[' → logprob: -5.009427547454834
    5. '(' → logprob: -5.259427547454834
    6. 'sum' → logprob: -5.384427547454834
    7. '=' → logprob: -5.634427547454834
    8. 'total' → logprob: -5.759427547454834
    9. 'for' → logprob: -5.884427547454834
    10. ' result' → logprob: -6.009427547454834

Token 242: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1344760656356812
    2. ' print' → logprob: -1.5094760656356812
    3. '#' → logprob: -2.0094761848449707
    4. 'for' → logprob: -3.0094761848449707
    5. 'result' → logprob: -3.0094761848449707
    6. ' for' → logprob: -3.1344761848449707
    7. '
' → logprob: -3.3844761848449707
    8. ' result' → logprob: -3.5094761848449707
    9. 's' → logprob: -3.8844761848449707
    10. ' #' → logprob: -4.759476184844971

Token 243: 'age' (ID: 477)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38786599040031433
    2. '(n' → logprob: -1.2628660202026367
    3. 'er' → logprob: -4.887866020202637
    4. '(print' → logprob: -5.262866020202637
    5. 'print' → logprob: -5.512866020202637
    6. '()' → logprob: -5.762866020202637
    7. 'age' → logprob: -6.012866020202637
    8. '(
' → logprob: -6.137866020202637
    9. ')' → logprob: -6.137866020202637
    10. '#' → logprob: -6.512866020202637

Token 244: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10938265919685364
    2. '(n' → logprob: -2.4843826293945312
    3. 's' → logprob: -4.234382629394531
    4. '(
' → logprob: -5.984382629394531
    5. 'n' → logprob: -7.234382629394531
    6. '(sum' → logprob: -7.359382629394531
    7. '(s' → logprob: -7.734382629394531
    8. '()' → logprob: -7.984382629394531
    9. 'result' → logprob: -8.484382629394531
    10. '_' → logprob: -8.734382629394531

Token 245: ' cube' (ID: 46822)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5508998036384583
    2. 'factor' → logprob: -1.1758997440338135
    3. ' n' → logprob: -3.3008997440338135
    4. 'fact' → logprob: -3.5508997440338135
    5. 's' → logprob: -4.050899982452393
    6. 'result' → logprob: -4.550899982452393
    7. ' carré' → logprob: -4.925899982452393
    8. ' factorial' → logprob: -6.175899982452393
    9. 'nombre' → logprob: -6.550899982452393
    10. ' facteur' → logprob: -6.675899982452393

Token 246: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2851419746875763
    2. 'n' → logprob: -1.660141944885254
    3. 'print' → logprob: -3.410141944885254
    4. '(' → logprob: -4.410141944885254
    5. '()' → logprob: -5.660141944885254
    6. '()
' → logprob: -5.785141944885254
    7. '**' → logprob: -6.160141944885254
    8. '(
' → logprob: -6.535141944885254
    9. ' of' → logprob: -7.660141944885254
    10. ' n' → logprob: -7.785141944885254

Token 247: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023250136524438858
    2. ' n' → logprob: -3.773250102996826
    3. '(n' → logprob: -12.273250579833984
    4. ' ' → logprob: -18.398250579833984
    5. '	n' → logprob: -18.648250579833984
    6. 'l' → logprob: -19.773250579833984
    7. '(' → logprob: -19.898250579833984
    8. ')n' → logprob: -20.148250579833984
    9. '
' → logprob: -20.898250579833984
    10. ' ' → logprob: -21.148250579833984

Token 248: ''ent' (ID: 53422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19890405237674713
    2. ''ent' → logprob: -1.948904037475586
    3. 'ent' → logprob: -4.073904037475586
    4. ' n' → logprob: -5.323904037475586
    5. 'e' → logprob: -5.323904037475586
    6. ''n' → logprob: -5.948904037475586
    7. '_ent' → logprob: -6.073904037475586
    8. '`' → logprob: -6.448904037475586
    9. 'nombre' → logprob: -6.823904037475586
    10. 'a' → logprob: -7.073904037475586

Token 249: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.00010556964843999594
    2. 'er' → logprob: -9.750105857849121
    3. 'i' → logprob: -10.625105857849121
    4. 'n' → logprob: -12.375105857849121
    5. 'nier' → logprob: -12.750105857849121
    6. 'ié' → logprob: -12.875105857849121
    7. '   ' → logprob: -13.125105857849121
    8. 'rier' → logprob: -13.625105857849121
    9. 'e' → logprob: -13.625105857849121
    10. 'iert' → logprob: -13.875105857849121

Token 250: ' lu' (ID: 8620)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04709937423467636
    2. 'n' → logprob: -3.6720993518829346
    3. 'x' → logprob: -4.797099590301514
    4. '```' → logprob: -5.547099590301514
    5. ' print' → logprob: -6.047099590301514
    6. '
' → logprob: -6.172099590301514
    7. 'result' → logprob: -6.672099590301514
    8. '**' → logprob: -7.297099590301514
    9. 'c' → logprob: -7.422099590301514
    10. 'cube' → logprob: -8.297099113464355

Token 251: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006547740194946527
    2. '
' → logprob: -8.000655174255371
    3. 'result' → logprob: -9.500655174255371
    4. '```' → logprob: -9.625655174255371
    5. '**' → logprob: -9.750655174255371
    6. 'cube' → logprob: -9.875655174255371
    7. 'n' → logprob: -10.250655174255371
    8. ' print' → logprob: -11.375655174255371
    9. '**
' → logprob: -12.125655174255371
    10. 'c' → logprob: -12.375655174255371

Token 252: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. 'cube' → logprob: -15.125000953674316
    3. 'result' → logprob: -15.375000953674316
    4. '```' → logprob: -16.75
    5. '
' → logprob: -17.375
    6. ' print' → logprob: -18.375
    7. 'c' → logprob: -20.125
    8. 'pr' → logprob: -20.25
    9. 'prin' → logprob: -20.375
    10. 'cub' → logprob: -21.625

Token 253: '(pow' (ID: 189160)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1602402776479721
    2. '(' → logprob: -1.9102402925491333
    3. '(
' → logprob: -12.285240173339844
    4. '(pow' → logprob: -12.410240173339844
    5. ' (' → logprob: -12.535240173339844
    6. '((' → logprob: -13.285240173339844
    7. 'n' → logprob: -13.910240173339844
    8. '(s' → logprob: -15.160240173339844
    9. '(f' → logprob: -15.285240173339844
    10. '(c' → logprob: -15.785240173339844

Token 254: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2519504129886627
    2. '(' → logprob: -1.5019503831863403
    3. '(
' → logprob: -11.37695026397705
    4. ' (' → logprob: -12.00195026397705
    5. ')' → logprob: -13.00195026397705
    6. 'n' → logprob: -14.12695026397705
    7. ',n' → logprob: -15.37695026397705
    8. ')n' → logprob: -16.001951217651367
    9. '(x' → logprob: -16.376951217651367
    10. 's' → logprob: -16.626951217651367

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006788312457501888
    2. ' ,' → logprob: -5.00678825378418
    3. '3' → logprob: -9.63178825378418
    4. '(' → logprob: -12.38178825378418
    5. ' ' → logprob: -14.13178825378418
    6. '2' → logprob: -14.38178825378418
    7. ',n' → logprob: -14.38178825378418
    8. ')' → logprob: -14.75678825378418
    9. ',
' → logprob: -14.88178825378418
    10. '```' → logprob: -15.88178825378418

Token 256: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.750123977661133
    4. '  ' → logprob: -18.750123977661133
    5. '```' → logprob: -19.875123977661133
    6. ')' → logprob: -20.000123977661133
    7. ' ' → logprob: -20.250123977661133
    8. '
' → logprob: -20.625123977661133
    9. ' 
' → logprob: -21.375123977661133
    10. '    ' → logprob: -21.500123977661133

Token 257: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.500001907348633
    5. '  ' → logprob: -19.875001907348633
    6. '³' → logprob: -20.500001907348633
    7. ')' → logprob: -21.000001907348633
    8. '
' → logprob: -21.500001907348633
    9. '۳' → logprob: -21.500001907348633
    10. '３' → logprob: -21.875001907348633

Token 258: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008618119172751904
    2. ')' → logprob: -4.758618354797363
    3. '))
' → logprob: -12.758618354797363
    4. ')))' → logprob: -15.383618354797363
    5. ')
' → logprob: -15.633618354797363
    6. '));' → logprob: -16.633617401123047
    7. ' ))' → logprob: -16.633617401123047
    8. '),' → logprob: -17.008617401123047
    9. '()))' → logprob: -18.258617401123047
    10. '})' → logprob: -19.008617401123047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 256
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 192
Précision stricte (1ère position): 40.62%
Précision adaptée (1ère position): 42.58%
Précision (top 10): 75.00%
================================================================================
