================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input())

def read_height_list():
    return list(map(int, input().split()))

def init_counters():
    return 0, 0

def get_initial_last(h):
    return h[0]

def update_cnt(last, x, cnt):
    if last >= x:
        return cnt + 1
    else:
        return 0

def update_cache(cache, cnt):
    if cache < cnt:
        return cnt
    return cache

def process_heights(h):
    cnt, cache = init_counters()
    last = get_initial_last(h)
    for x in get_remaining_heights(h):
        cnt = update_cnt(last, x, cnt)
        cache = update_cache(cache, cnt)
        last = update_last(x)
    return cache

def get_remaining_heights(h):
    return h[1:]

def update_last(x):
    return x

def main():
    n = read_input()
    h = read_height_list()
    result = process_heights(h)
    output_result(result)

def output_result(result):
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013885974884033203
    2. '():' → logprob: -4.513885974884033
    3. '_' → logprob: -6.388885974884033
    4. '(:' → logprob: -7.888885974884033
    5. '(_:' → logprob: -8.138885498046875
    6. '```' → logprob: -8.388885498046875
    7. ':' → logprob: -10.013885498046875
    8. '()' → logprob: -10.138885498046875
    9. '(_' → logprob: -10.388885498046875
    10. ' (' → logprob: -10.388885498046875

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49144166707992554
    2. 'input' → logprob: -1.9914417266845703
    3. '```' → logprob: -2.7414417266845703
    4. '   ' → logprob: -2.8664417266845703
    5. 'data' → logprob: -3.2414417266845703
    6. 'x' → logprob: -3.4914417266845703
    7. 'user' → logprob: -4.24144172668457
    8. 'n' → logprob: -4.24144172668457
    9. 'text' → logprob: -4.36644172668457
    10. 'r' → logprob: -5.49144172668457

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3430149257183075
    2. 'input' → logprob: -2.09301495552063
    3. '"' → logprob: -2.46801495552063
    4. ' input' → logprob: -2.71801495552063
    5. ''' → logprob: -4.343014717102051
    6. '  ' → logprob: -6.843014717102051
    7. ' "' → logprob: -7.843014717102051
    8. '(input' → logprob: -8.09301471710205
    9. ' []' → logprob: -8.21801471710205
    10. ' '' → logprob: -8.71801471710205

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012870213249698281
    2. '('' → logprob: -6.87628698348999
    3. ''' → logprob: -9.126287460327148
    4. '("("' → logprob: -10.001287460327148
    5. '`' → logprob: -10.876287460327148
    6. '```' → logprob: -11.126287460327148
    7. '(
' → logprob: -11.501287460327148
    8. ' (' → logprob: -11.626287460327148
    9. '"' → logprob: -11.876287460327148
    10. '40' → logprob: -12.001287460327148

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.27104452252388
    2. '(' → logprob: -1.6460444927215576
    3. ')' → logprob: -3.8960444927215576
    4. '()' → logprob: -4.146044731140137
    5. '()))' → logprob: -5.021044731140137
    6. '))' → logprob: -7.271044731140137
    7. '('' → logprob: -8.396044731140137
    8. '(""))' → logprob: -8.396044731140137
    9. ' ())' → logprob: -8.771044731140137
    10. '`()' → logprob: -8.896044731140137

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7730699181556702
    2. '\n' → logprob: -1.3980698585510254
    3. '#' → logprob: -2.7730698585510254
    4. '```' → logprob: -2.8980698585510254
    5. '
' → logprob: -3.2730698585510254
    6. '(' → logprob: -4.023069858551025
    7. '<|end|>' → logprob: -4.148069858551025
    8. 'd' → logprob: -4.398069858551025
    9. 'x' → logprob: -4.648069858551025
    10. '()' → logprob: -4.648069858551025

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.4603455066680908
    2. ' write' → logprob: -2.335345506668091
    3. ' main' → logprob: -2.585345506668091
    4. ' read' → logprob: -2.710345506668091
    5. ' compute' → logprob: -2.710345506668091
    6. ' process' → logprob: -3.585345506668091
    7. ' factorial' → logprob: -4.335345268249512
    8. ' sum' → logprob: -5.210345268249512
    9. ' add' → logprob: -5.335345268249512
    10. ' solve' → logprob: -5.710345268249512

Token 11: '_height' (ID: 21576)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25016045570373535
    2. '_input' → logprob: -1.6251604557037354
    3. '_line' → logprob: -4.125160217285156
    4. '_output' → logprob: -5.750160217285156
    5. '_value' → logprob: -6.500160217285156
    6. '_string' → logprob: -7.000160217285156
    7. '_data' → logprob: -7.500160217285156
    8. '_int' → logprob: -7.500160217285156
    9. '_array' → logprob: -7.875160217285156
    10. '_integer' → logprob: -8.375160217285156

Token 12: '_list' (ID: 4162)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -6.277553620748222e-05
    2. ' ():' → logprob: -10.125062942504883
    3. '_' → logprob: -11.375062942504883
    4. '()' → logprob: -12.000062942504883
    5. '(' → logprob: -13.000062942504883
    6. '():
' → logprob: -14.375062942504883
    7. '_height' → logprob: -15.250062942504883
    8. '()*' → logprob: -16.000062942504883
    9. '_:' → logprob: -16.125062942504883
    10. '_data' → logprob: -16.125062942504883

Token 13: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11406993120908737
    2. '(' → logprob: -2.364069938659668
    3. '_' → logprob: -4.989069938659668
    4. '()' → logprob: -5.364069938659668
    5. '_list' → logprob: -7.239069938659668
    6. 's' → logprob: -7.864069938659668
    7. '```' → logprob: -8.614069938659668
    8. '(_)' → logprob: -8.989069938659668
    9. '[]' → logprob: -9.489069938659668
    10. '_parent' → logprob: -9.864069938659668

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008001811802387238
    2. '    ' → logprob: -5.883001804351807
    3. '()' → logprob: -6.633001804351807
    4. '(' → logprob: -6.883001804351807
    5. '       ' → logprob: -7.008001804351807
    6. ' return' → logprob: -7.883001804351807
    7. '[' → logprob: -8.133002281188965
    8. 'return' → logprob: -8.133002281188965
    9. '    
' → logprob: -8.508002281188965
    10. '[]' → logprob: -8.633002281188965

Token 15: ' return' (ID: 622)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.3443695604801178
    2. '   ' → logprob: -1.7193695306777954
    3. ' return' → logprob: -2.844369649887085
    4. 'return' (adapté à ' return') → logprob: -3.219369649887085
    5. 'height' → logprob: -5.094369411468506
    6. ' h' → logprob: -5.469369411468506
    7. ' height' → logprob: -6.594369411468506
    8. '[' → logprob: -7.594369411468506
    9. 'he' → logprob: -7.594369411468506
    10. 'h' → logprob: -7.969369411468506

Token 16: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1087925136089325
    2. ' [' → logprob: -2.608792543411255
    3. 'list' → logprob: -3.983792543411255
    4. '[list' → logprob: -5.108792304992676
    5. ' []' → logprob: -6.108792304992676
    6. '[' → logprob: -6.108792304992676
    7. '[int' → logprob: -8.858792304992676
    8. ' ' → logprob: -9.233792304992676
    9. '[input' → logprob: -10.233792304992676
    10. '[]' → logprob: -10.358792304992676

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3905543088912964
    2. '(map' → logprob: -1.1405543088912964
    3. '(int' → logprob: -6.015554428100586
    4. '(input' → logprob: -6.890554428100586
    5. '(range' → logprob: -8.765554428100586
    6. '(eval' → logprob: -10.640554428100586
    7. '(

' → logprob: -11.640554428100586
    8. '(
' → logprob: -11.765554428100586
    9. '(filter' → logprob: -11.765554428100586
    10. '(list' → logprob: -12.890554428100586

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006029761396348476
    2. '(' → logprob: -5.1310296058654785
    3. 'int' → logprob: -9.756030082702637
    4. '=int' → logprob: -11.631030082702637
    5. '<int' → logprob: -11.631030082702637
    6. ')' → logprob: -12.256030082702637
    7. ' int' → logprob: -12.256030082702637
    8. '(
' → logprob: -12.381030082702637
    9. ',int' → logprob: -12.381030082702637
    10. ' (' → logprob: -13.131030082702637

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012046286836266518
    2. 'input' → logprob: -5.2620463371276855
    3. ',input' → logprob: -5.8870463371276855
    4. '(' → logprob: -6.0120463371276855
    5. '))' → logprob: -7.6370463371276855
    6. ')' → logprob: -7.6370463371276855
    7. ',' → logprob: -8.137045860290527
    8. '=input' → logprob: -9.637045860290527
    9. ' input' → logprob: -9.637045860290527
    10. '),' → logprob: -10.262045860290527

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17980138957500458
    2. ' input' → logprob: -1.804801344871521
    3. '(input' → logprob: -10.304800987243652
    4. ',input' → logprob: -11.679800987243652
    5. '	input' → logprob: -12.429800987243652
    6. ' ' → logprob: -12.429800987243652
    7. ')' → logprob: -13.304800987243652
    8. '   ' → logprob: -13.679800987243652
    9. '=input' → logprob: -13.804800987243652
    10. '<input' → logprob: -14.554800987243652

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6289514303207397
    2. '()))' → logprob: -1.0039514303207397
    3. '()' → logprob: -2.5039515495300293
    4. '())' → logprob: -4.503951549530029
    5. '))' → logprob: -5.378951549530029
    6. '())))' → logprob: -6.753951549530029
    7. '()));' → logprob: -6.878951549530029
    8. ')' → logprob: -7.878951549530029
    9. ')))' → logprob: -9.003951072692871
    10. '()>' → logprob: -10.003951072692871

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005255814641714096
    2. 'strip' → logprob: -5.255255699157715
    3. 'rstrip' → logprob: -10.755255699157715
    4. ' split' → logprob: -14.380255699157715
    5. '(split' → logprob: -17.25525665283203
    6. ')' → logprob: -17.50525665283203
    7. ' strip' → logprob: -17.75525665283203
    8. 'spl' → logprob: -17.88025665283203
    9. '.split' → logprob: -18.63025665283203
    10. ' ' → logprob: -18.75525665283203

Token 23: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02693246677517891
    2. '()' → logprob: -4.526932239532471
    3. '))' → logprob: -5.026932239532471
    4. '())))' → logprob: -5.401932239532471
    5. '())' → logprob: -5.526932239532471
    6. ')))' → logprob: -7.401932239532471
    7. '(' → logprob: -9.776932716369629
    8. ')' → logprob: -10.901932716369629
    9. '()))
' → logprob: -11.401932716369629
    10. '()))

' → logprob: -12.651932716369629

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016294787637889385
    2. '

' → logprob: -6.87662935256958
    3. '
' → logprob: -8.126629829406738
    4. '```' → logprob: -8.876629829406738
    5. '<|end|>' → logprob: -9.626629829406738
    6. '\' → logprob: -10.626629829406738
    7. 'for' → logprob: -11.251629829406738
    8. '\n' → logprob: -11.501629829406738
    9. 'n' → logprob: -11.751629829406738
    10. 'd' → logprob: -12.501629829406738

Token 25: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20513835549354553
    2. 'main' → logprob: -1.9551383256912231
    3. ' solve' → logprob: -4.455138206481934
    4. 'solve' → logprob: -4.455138206481934
    5. 'calculate' → logprob: -5.205138206481934
    6. ' calculate' → logprob: -5.455138206481934
    7. ' max' → logprob: -5.955138206481934
    8. ' find' → logprob: -6.330138206481934
    9. 'max' → logprob: -7.080138206481934
    10. 'count' → logprob: -7.330138206481934

Token 26: '_c' (ID: 1303)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.45997947454452515
    2. '_' → logprob: -1.33497953414917
    3. '_array' → logprob: -3.20997953414917
    4. '_list' → logprob: -4.20997953414917
    5. '_heap' → logprob: -4.70997953414917
    6. '_stack' → logprob: -5.08497953414917
    7. '_data' → logprob: -5.83497953414917
    8. '_h' → logprob: -5.95997953414917
    9. '_he' → logprob: -5.95997953414917
    10. '(_' → logprob: -6.20997953414917

Token 27: 'ounters' (ID: 36761)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.8711881637573242
    2. 'ount' → logprob: -1.1211881637573242
    3. 'ounters' → logprob: -3.496188163757324
    4. 'urrent' → logprob: -3.496188163757324
    5. 'ost' → logprob: -3.621188163757324
    6. 'h' → logprob: -3.996188163757324
    7. 'ap' → logprob: -3.996188163757324
    8. 'hain' → logprob: -3.996188163757324
    9. 'ache' → logprob: -4.496188163757324
    10. 'o' → logprob: -4.621188163757324

Token 28: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13336181640625
    2. '()' → logprob: -2.38336181640625
    3. '(' → logprob: -3.75836181640625
    4. '_' → logprob: -4.75836181640625
    5. '():
' → logprob: -9.50836181640625
    6. '()(' → logprob: -9.63336181640625
    7. '```' → logprob: -9.63336181640625
    8. '_s' → logprob: -10.00836181640625
    9. ' ():' → logprob: -10.63336181640625
    10. '`()' → logprob: -10.63336181640625

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005203855689615011
    2. 'return' → logprob: -8.250520706176758
    3. '[]' → logprob: -9.750520706176758
    4. ' return' → logprob: -10.250520706176758
    5. '```' → logprob: -10.500520706176758
    6. '[' → logprob: -10.750520706176758
    7. '    ' → logprob: -10.875520706176758
    8. 'counter' → logprob: -10.875520706176758
    9. '       ' → logprob: -11.375520706176758
    10. '    
' → logprob: -11.500520706176758

Token 30: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.259626179933548
    2. ' return' → logprob: -2.0096261501312256
    3. 'return' (adapté à ' return') → logprob: -2.6346261501312256
    4. ' counters' → logprob: -4.384626388549805
    5. 'counter' → logprob: -5.634626388549805
    6. 'c' → logprob: -6.634626388549805
    7. '    ' → logprob: -7.009626388549805
    8. ' counter' → logprob: -7.009626388549805
    9. '```' → logprob: -7.134626388549805
    10. ' ' → logprob: -7.384626388549805

Token 31: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5860034823417664
    2. '{}' → logprob: -0.9610034823417664
    3. '[]' → logprob: -3.211003541946411
    4. '{' → logprob: -4.586003303527832
    5. '{'' → logprob: -5.711003303527832
    6. 'default' → logprob: -6.086003303527832
    7. '{
' → logprob: -6.336003303527832
    8. '0' → logprob: -6.711003303527832
    9. '{"' → logprob: -6.836003303527832
    10. ' [' → logprob: -8.336003303527832

Token 32: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03452340513467789
    2. '{}' → logprob: -4.1595234870910645
    3. '[]' → logprob: -5.1595234870910645
    4. '{' → logprob: -5.2845234870910645
    5. 'default' → logprob: -5.6595234870910645
    6. '{'' → logprob: -6.2845234870910645
    7. '{"' → logprob: -6.5345234870910645
    8. '{
' → logprob: -7.6595234870910645
    9. 'dict' → logprob: -9.409523010253906
    10. '0' → logprob: -10.034523010253906

Token 33: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07049717754125595
    2. ' ' → logprob: -2.6954972743988037
    3. '[]' → logprob: -8.070497512817383
    4. ' []' → logprob: -8.945497512817383
    5. '{}' → logprob: -9.820497512817383
    6. ' {}' → logprob: -11.132997512817383
    7. '1' → logprob: -11.570497512817383
    8. '[],' → logprob: -12.132997512817383
    9. '  ' → logprob: -12.445497512817383
    10. '[' → logprob: -12.445497512817383

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039849523454904556
    2. '[]' → logprob: -8.250398635864258
    3. '{}' → logprob: -9.250398635864258
    4. ' ' → logprob: -11.125398635864258
    5. '1' → logprob: -11.750398635864258
    6. 'False' → logprob: -12.375398635864258
    7. '[' → logprob: -13.125398635864258
    8. '-' → logprob: -13.500398635864258
    9. ' []' → logprob: -13.625398635864258
    10. '100' → logprob: -13.687898635864258

Token 36: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1458967924118042
    2. '

' → logprob: -2.1458969116210938
    3. '
' → logprob: -4.520896911621094
    4. ',' → logprob: -5.770896911621094
    5. '<|end|>' → logprob: -6.270896911621094
    6. '\' → logprob: -7.145896911621094
    7. '```' → logprob: -7.770896911621094
    8. ' 

' → logprob: -8.270896911621094
    9. 'n' → logprob: -8.645896911621094
    10. ' def' → logprob: -8.895896911621094

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003467855742201209
    2. '
' → logprob: -6.378468036651611
    3. 'd' → logprob: -6.878468036651611
    4. '

' → logprob: -7.628468036651611
    5. '```' → logprob: -9.378467559814453
    6. '\' → logprob: -9.753467559814453
    7. 'n' → logprob: -10.753467559814453
    8. '#' → logprob: -10.753467559814453
    9. 'de' → logprob: -11.253467559814453
    10. 'for' → logprob: -11.628467559814453

Token 38: ' get' (ID: 717)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.8688100576400757
    2. ' main' → logprob: -2.1188101768493652
    3. ' max' → logprob: -2.1188101768493652
    4. ' solve' → logprob: -2.6188101768493652
    5. ' calculate' → logprob: -2.8688101768493652
    6. ' find' → logprob: -3.2438101768493652
    7. ' is' → logprob: -3.4938101768493652
    8. 'count' → logprob: -3.8688101768493652
    9. ' check' → logprob: -4.243810176849365
    10. ' process' → logprob: -4.368810176849365

Token 39: '_initial' (ID: 45740)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.2842586040496826
    2. '_height' → logprob: -2.1592586040496826
    3. '_' → logprob: -3.4092586040496826
    4. '_counter' → logprob: -4.784258842468262
    5. '_peak' → logprob: -4.784258842468262
    6. '_input' → logprob: -5.034258842468262
    7. '_min' → logprob: -5.034258842468262
    8. '_unique' → logprob: -5.284258842468262
    9. '_next' → logprob: -5.409258842468262
    10. '_c' → logprob: -5.659258842468262

Token 40: '_last' (ID: 26359)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -1.3935439586639404
    2. '_stack' → logprob: -1.3935439586639404
    3. '_counter' → logprob: -2.0185439586639404
    4. '_' → logprob: -2.1435439586639404
    5. '_position' → logprob: -3.0185439586639404
    6. '_value' → logprob: -3.3935439586639404
    7. '_state' → logprob: -3.6435439586639404
    8. '_positions' → logprob: -3.7685439586639404
    9. '_values' → logprob: -4.2685441970825195
    10. '_count' → logprob: -4.3935441970825195

Token 41: '(h' (ID: 8120)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.1290612816810608
    2. '_' → logprob: -2.629061222076416
    3. '_he' → logprob: -4.004061222076416
    4. '_value' → logprob: -5.129061222076416
    5. '_index' → logprob: -5.254061222076416
    6. '_seen' → logprob: -5.379061222076416
    7. '_max' → logprob: -6.004061222076416
    8. '_position' → logprob: -6.629061222076416
    9. '_indices' → logprob: -6.754061222076416
    10. '_answer' → logprob: -7.004061222076416

Token 42: '):
' (ID: 1883)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3041175901889801
    2. 'eight' → logprob: -1.5541175603866577
    3. ')' → logprob: -3.8041176795959473
    4. '_e' → logprob: -4.429117679595947
    5. ')e' → logprob: -4.929117679595947
    6. '_' → logprob: -5.679117679595947
    7. '_)' → logprob: -6.179117679595947
    8. '_height' → logprob: -6.804117679595947
    9. 'ight' → logprob: -8.179117202758789
    10. 'eig' → logprob: -8.179117202758789

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0471795797348022
    2. ':' → logprob: -1.4221795797348022
    3. ' =' → logprob: -1.5471795797348022
    4. ' :' → logprob: -1.9221795797348022
    5. '[]' → logprob: -4.297179698944092
    6. '):' → logprob: -4.422179698944092
    7. '[' → logprob: -4.672179698944092
    8. ',' → logprob: -5.422179698944092
    9. '=' → logprob: -5.797179698944092
    10. '_' → logprob: -6.797179698944092

Token 44: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4572160840034485
    2. '   ' → logprob: -1.0822160243988037
    3. 'return' (adapté à ' return') → logprob: -4.582216262817383
    4. ' if' → logprob: -4.582216262817383
    5. '    ' → logprob: -5.332216262817383
    6. ' h' → logprob: -6.082216262817383
    7. ' ' → logprob: -8.832216262817383
    8. 'if' → logprob: -8.957216262817383
    9. ' :' → logprob: -10.082216262817383
    10. '  ' → logprob: -10.207216262817383

Token 45: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06699532270431519
    2. ' h' → logprob: -2.81699538230896
    3. '0' → logprob: -5.566995143890381
    4. '-' → logprob: -8.066995620727539
    5. ' -' → logprob: -8.191995620727539
    6. ' ' → logprob: -8.441995620727539
    7. 'float' → logprob: -8.691995620727539
    8. 'None' → logprob: -9.191995620727539
    9. ' float' → logprob: -10.191995620727539
    10. ' None' → logprob: -10.566995620727539

Token 46: '[' (ID: 58)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38257378339767456
    2. '<|end|>' → logprob: -1.3825738430023193
    3. '(' → logprob: -3.8825738430023193
    4. '[' → logprob: -4.25757360458374
    5. '_' → logprob: -4.25757360458374
    6. '<|end|>' → logprob: -4.63257360458374
    7. ')' → logprob: -5.75757360458374
    8. '(h' → logprob: -6.75757360458374
    9. ',' → logprob: -7.38257360458374
    10. '.' → logprob: -7.63257360458374

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019018957391381264
    2. '-' → logprob: -8.750189781188965
    3. ' ' → logprob: -10.500189781188965
    4. ' -' → logprob: -13.625189781188965
    5. '[' → logprob: -14.187689781188965
    6. '1' → logprob: -14.875189781188965
    7. ']' → logprob: -15.125189781188965
    8. ')' → logprob: -15.375189781188965
    9. ':' → logprob: -15.750189781188965
    10. '])' → logprob: -15.750189781188965

Token 48: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001748246024362743
    2. '])' → logprob: -6.626748085021973
    3. ')]' → logprob: -8.126748085021973
    4. ' ]' → logprob: -9.626748085021973
    5. ')' → logprob: -10.001748085021973
    6. '[' → logprob: -12.501748085021973
    7. '])]' → logprob: -12.751748085021973
    8. ']
' → logprob: -12.876748085021973
    9. '],' → logprob: -12.876748085021973
    10. ')])' → logprob: -14.251748085021973

Token 49: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17145520448684692
    2. '<|end|>' → logprob: -1.9214551448822021
    3. '<|end|>' → logprob: -5.046455383300781
    4. '_' → logprob: -6.046455383300781
    5. '```' → logprob: -7.421455383300781
    6. '
' → logprob: -7.671455383300781
    7. '#' → logprob: -7.921455383300781
    8. '\' → logprob: -8.546455383300781
    9. ' def' → logprob: -9.171455383300781
    10. '\n' → logprob: -9.421455383300781

Token 50: ' update' (ID: 4027)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6691415309906006
    2. ' compare' → logprob: -2.5441415309906006
    3. ' process' → logprob: -2.7941415309906006
    4. ' max' → logprob: -2.7941415309906006
    5. ' calculate' → logprob: -3.0441415309906006
    6. ' def' → logprob: -3.0441415309906006
    7. ' find' → logprob: -3.4191415309906006
    8. ' check' → logprob: -3.4191415309906006
    9. ' update' → logprob: -3.7941415309906006
    10. ' is' → logprob: -4.16914176940918

Token 51: '_cnt' (ID: 35412)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.23854228854179382
    2. '_last' → logprob: -1.9885423183441162
    3. '_' → logprob: -2.988542318344116
    4. '_counter' → logprob: -4.488542079925537
    5. '_counts' → logprob: -4.738542079925537
    6. '_s' → logprob: -6.863542079925537
    7. '(' → logprob: -7.488542079925537
    8. '_(' → logprob: -7.738542079925537
    9. '_max' → logprob: -7.863542079925537
    10. '_count' → logprob: -7.863542079925537

Token 52: '(last' (ID: 39599)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22515006363391876
    2. '(' → logprob: -2.4751501083374023
    3. 'er' → logprob: -3.4751501083374023
    4. '(s' → logprob: -3.8501501083374023
    5. '1' → logprob: -4.225150108337402
    6. '_c' → logprob: -4.725150108337402
    7. '(c' → logprob: -4.850150108337402
    8. 'ers' → logprob: -4.975150108337402
    9. ',' → logprob: -5.100150108337402
    10. '_' → logprob: -5.475150108337402

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017472924664616585
    2. ' ,' → logprob: -6.501747131347656
    3. ',h' → logprob: -8.626747131347656
    4. ',last' → logprob: -11.126747131347656
    5. ')' → logprob: -11.376747131347656
    6. '==' → logprob: -11.751747131347656
    7. ',current' → logprob: -11.876747131347656
    8. '_,' → logprob: -12.626747131347656
    9. ' ==' → logprob: -13.001747131347656
    10. '=' → logprob: -13.251747131347656

Token 54: ' x' (ID: 1215)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.3006349205970764
    2. 'h' → logprob: -2.0506348609924316
    3. ' current' → logprob: -2.3006348609924316
    4. ' curr' → logprob: -4.550634860992432
    5. 'current' → logprob: -5.050634860992432
    6. ' cnt' → logprob: -5.550634860992432
    7. ' cur' → logprob: -6.425634860992432
    8. 'curr' → logprob: -6.550634860992432
    9. ' ' → logprob: -6.800634860992432
    10. ' height' → logprob: -6.925634860992432

Token 55: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02114269696176052
    2. ',' → logprob: -3.8961427211761475
    3. ' ):' → logprob: -8.396142959594727
    4. ')' → logprob: -8.521142959594727
    5. '):
' → logprob: -8.896142959594727
    6. ' ,' → logprob: -11.521142959594727
    7. ':' → logprob: -12.021142959594727
    8. 's' → logprob: -12.271142959594727
    9. '=' → logprob: -12.396142959594727
    10. '   ' → logprob: -13.021142959594727

Token 56: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.18185186386108398
    2. 'cnt' → logprob: -1.806851863861084
    3. 'c' → logprob: -8.056852340698242
    4. 'count' → logprob: -8.056852340698242
    5. ' ' → logprob: -8.181852340698242
    6. ' count' → logprob: -8.431852340698242
    7. ' counter' → logprob: -8.556852340698242
    8. ' c' → logprob: -8.806852340698242
    9. '	cnt' → logprob: -8.806852340698242
    10. 'counter' → logprob: -9.181852340698242

Token 57: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34347468614578247
    2. '):' → logprob: -1.5934746265411377
    3. 's' → logprob: -2.5934746265411377
    4. '1' → logprob: -4.593474864959717
    5. ' ):' → logprob: -7.593474864959717
    6. ' ,' → logprob: -7.593474864959717
    7. ')' → logprob: -7.718474864959717
    8. '_' → logprob: -8.718474388122559
    9. 'a' → logprob: -8.968474388122559
    10. '_,' → logprob: -9.093474388122559

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06781274080276489
    2. ',' → logprob: -3.06781268119812
    3. ':' → logprob: -4.192812919616699
    4. '+' → logprob: -6.817812919616699
    5. '<|end|>' → logprob: -6.817812919616699
    6. '):' → logprob: -8.5678129196167
    7. ' if' → logprob: -8.6928129196167
    8. '<|end|>' → logprob: -8.6928129196167
    9. '    ' → logprob: -8.9428129196167
    10. ' +' → logprob: -8.9428129196167

Token 59: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11983095854520798
    2. '+' → logprob: -2.869830846786499
    3. ' if' → logprob: -3.869830846786499
    4. ' +' → logprob: -4.119831085205078
    5. ',' → logprob: -5.244831085205078
    6. 'if' (adapté à ' if') → logprob: -5.244831085205078
    7. ' return' → logprob: -5.619831085205078
    8. '    ' → logprob: -6.744831085205078
    9. ' +=' → logprob: -6.994831085205078
    10. 'return' → logprob: -7.119831085205078

Token 60: ' last' (ID: 2174)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.012874183245003223
    2. 'x' → logprob: -4.387874126434326
    3. ' last' → logprob: -8.262874603271484
    4. ' ' → logprob: -9.637874603271484
    5. 'last' → logprob: -11.262874603271484
    6. ' abs' → logprob: -11.387874603271484
    7. 'abs' → logprob: -12.137874603271484
    8. '   ' → logprob: -12.262874603271484
    9. '(x' → logprob: -13.387874603271484
    10. ' (' → logprob: -13.512874603271484

Token 61: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31405776739120483
    2. ' <' → logprob: -2.0640578269958496
    3. '>' → logprob: -2.5640578269958496
    4. '!=' → logprob: -3.4390578269958496
    5. ' >' → logprob: -4.06405782699585
    6. ' !=' → logprob: -4.93905782699585
    7. '==' → logprob: -5.18905782699585
    8. ' ==' → logprob: -7.06405782699585
    9. '>=' → logprob: -7.06405782699585
    10. '<=' → logprob: -7.31405782699585

Token 62: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31331774592399597
    2. ' x' → logprob: -1.3133177757263184
    3. '0' → logprob: -10.81331729888916
    4. ' ' → logprob: -11.31331729888916
    5. '1' → logprob: -11.93831729888916
    6. '   ' → logprob: -12.68831729888916
    7. '2' → logprob: -12.81331729888916
    8. '10' → logprob: -12.81331729888916
    9. '20' → logprob: -13.81331729888916
    10. '6' → logprob: -13.93831729888916

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018811026588082314
    2. ':
' → logprob: -4.518811225891113
    3. ' and' → logprob: -5.018811225891113
    4. 'and' → logprob: -7.893811225891113
    5. ' :' → logprob: -8.143811225891113
    6. '   ' → logprob: -8.268811225891113
    7. ',' → logprob: -10.018811225891113
    8. '):' → logprob: -10.018811225891113
    9. ':return' → logprob: -11.143811225891113
    10. ' else' → logprob: -11.268811225891113

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9757188558578491
    2. '   ' → logprob: -1.9757188558578491
    3. ' cnt' → logprob: -2.1007189750671387
    4. '1' → logprob: -2.4757189750671387
    5. 'cnt' → logprob: -2.4757189750671387
    6. '
' → logprob: -2.7257189750671387
    7. ' 
' → logprob: -3.3507189750671387
    8. ' ' → logprob: -3.4757189750671387
    9. ',' → logprob: -4.475718975067139
    10. '\n' → logprob: -4.975718975067139

Token 65: ' return' (ID: 622)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.2322871834039688
    2. 'cnt' → logprob: -1.6072871685028076
    3. '1' → logprob: -5.732287406921387
    4. '   ' → logprob: -7.232287406921387
    5. ' return' → logprob: -7.357287406921387
    6. '       ' → logprob: -7.732287406921387
    7. ' ' → logprob: -7.732287406921387
    8. '	cnt' → logprob: -8.232287406921387
    9. '_cnt' → logprob: -8.607287406921387
    10. '    ' → logprob: -8.982287406921387

Token 66: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06504331529140472
    2. ' cnt' → logprob: -2.8150432109832764
    3. '1' → logprob: -5.9400434494018555
    4. '(cnt' → logprob: -8.940043449401855
    5. '   ' → logprob: -9.565043449401855
    6. ' ' → logprob: -9.815043449401855
    7. '	cnt' → logprob: -9.815043449401855
    8. 'count' → logprob: -10.315043449401855
    9. 'ct' → logprob: -10.815043449401855
    10. '0' → logprob: -11.440043449401855

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3134590685367584
    2. '+' → logprob: -1.313459038734436
    3. ',' → logprob: -9.313459396362305
    4. '   ' → logprob: -10.563459396362305
    5. '1' → logprob: -10.813459396362305
    6. '
' → logprob: -11.438459396362305
    7. '+
' → logprob: -11.563459396362305
    8. 'else' → logprob: -11.688459396362305
    9. ' else' → logprob: -12.063459396362305
    10. '+,' → logprob: -12.438459396362305

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021874953527003527
    2. ' ' → logprob: -6.127187728881836
    3. '   ' → logprob: -13.127187728881836
    4. '<|end|>' → logprob: -15.377187728881836
    5. '0' → logprob: -16.252187728881836
    6. '  ' → logprob: -16.627187728881836
    7. '2' → logprob: -17.502187728881836
    8. ' ' → logprob: -18.002187728881836
    9. '```' → logprob: -18.127187728881836
    10. '6' → logprob: -18.814687728881836

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -17.1250057220459
    4. '   ' → logprob: -17.7500057220459
    5. '<|end|>' → logprob: -18.1250057220459
    6. '2' → logprob: -18.7500057220459
    7. '  ' → logprob: -19.5625057220459
    8. '=' → logprob: -20.2500057220459
    9. '10' → logprob: -20.7500057220459
    10. '100' → logprob: -20.7500057220459

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21331647038459778
    2. ' else' → logprob: -1.8383164405822754
    3. '<|end|>' → logprob: -4.088316440582275
    4. 'else' → logprob: -4.463316440582275
    5. ',' → logprob: -6.338316440582275
    6. '    
' → logprob: -7.588316440582275
    7. '	else' → logprob: -7.713316440582275
    8. ' ' → logprob: -7.713316440582275
    9. '
' → logprob: -7.963316440582275
    10. '<|end|>' → logprob: -8.213316917419434

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6060566902160645
    2. ' else' → logprob: -1.1060566902160645
    3. 'else' → logprob: -2.1060566902160645
    4. '<|end|>' → logprob: -6.9810566902160645
    5. '	else' → logprob: -7.6060566902160645
    6. '    
' → logprob: -8.606056213378906
    7. '
' → logprob: -9.606056213378906
    8. ' ' → logprob: -10.231056213378906
    9. '    ' → logprob: -10.356056213378906
    10. ' 
' → logprob: -10.606056213378906

Token 72: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.33588844537734985
    2. '   ' → logprob: -2.210888385772705
    3. 'return' → logprob: -2.335888385772705
    4. ' else' → logprob: -2.585888385772705
    5. ' return' → logprob: -6.585888385772705
    6. '	else' → logprob: -7.210888385772705
    7. '<|end|>' → logprob: -7.710888385772705
    8. '	return' → logprob: -7.835888385772705
    9. ' ' → logprob: -8.585888862609863
    10. '       ' → logprob: -9.585888862609863

Token 73: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040972303599119186
    2. ',' → logprob: -3.6659722328186035
    3. '   ' → logprob: -4.6659722328186035
    4. '0' → logprob: -6.4159722328186035
    5. ' ' → logprob: -6.5409722328186035
    6. ' return' → logprob: -7.4159722328186035
    7. 'return' → logprob: -7.5409722328186035
    8. '      ' → logprob: -8.915972709655762
    9. ':return' → logprob: -9.040972709655762
    10. ':' → logprob: -9.040972709655762

Token 74: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27784407138824463
    2. 'cnt' → logprob: -1.6528440713882446
    3. '       ' → logprob: -3.152843952178955
    4. '   ' → logprob: -5.527843952178955
    5. ' ' → logprob: -6.027843952178955
    6. ' cnt' → logprob: -6.402843952178955
    7. 'count' → logprob: -9.652844429016113
    8. 'return' → logprob: -10.277844429016113
    9. '	cnt' → logprob: -10.402844429016113
    10. '      ' → logprob: -10.527844429016113

Token 75: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008766072802245617
    2. 'cnt' → logprob: -5.258766174316406
    3. 'return' (adapté à ' return') → logprob: -5.883766174316406
    4. ' ' → logprob: -8.133766174316406
    5. '   ' → logprob: -8.383766174316406
    6. '       ' → logprob: -8.883766174316406
    7. ' return' → logprob: -10.383766174316406
    8. 'count' → logprob: -11.133766174316406
    9. ' cnt' → logprob: -12.008766174316406
    10. '1' → logprob: -12.258766174316406

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002725821454077959
    2. 'cnt' → logprob: -6.002725601196289
    3. ' ' → logprob: -8.377725601196289
    4. ' cnt' → logprob: -11.752725601196289
    5. '1' → logprob: -12.127725601196289
    6. '   ' → logprob: -12.377725601196289
    7. 'count' → logprob: -14.377725601196289
    8. '(cnt' → logprob: -14.752725601196289
    9. '	cnt' → logprob: -15.065225601196289
    10. '  ' → logprob: -15.190225601196289

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006756199873052537
    2. 'cnt' → logprob: -7.375675678253174
    3. '1' → logprob: -10.625675201416016
    4. ' ' → logprob: -11.125675201416016
    5. '   ' → logprob: -11.875675201416016
    6. 'count' → logprob: -14.938175201416016
    7. ' cnt' → logprob: -15.063175201416016
    8. '(cnt' → logprob: -15.188175201416016
    9. '  ' → logprob: -15.250675201416016
    10. '-' → logprob: -15.438175201416016

Token 78: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.057210683822631836
    2. '<|end|>' → logprob: -2.932210683822632
    3. '
' → logprob: -7.057210922241211
    4. '_' → logprob: -7.557210922241211
    5. ' def' → logprob: -7.682210922241211
    6. '<|end|>' → logprob: -9.182210922241211
    7. '

' → logprob: -9.432210922241211
    8. '```' → logprob: -9.557210922241211
    9. ' ' → logprob: -10.057210922241211
    10. '  
' → logprob: -10.807210922241211

Token 80: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.2356126308441162
    2. 'main' → logprob: -1.3606126308441162
    3. 'count' → logprob: -2.610612630844116
    4. 'update' → logprob: -2.735612630844116
    5. 'process' → logprob: -2.860612630844116
    6. ' update' → logprob: -2.985612630844116
    7. ' count' → logprob: -3.485612630844116
    8. ' process' → logprob: -3.610612630844116
    9. 'solve' → logprob: -3.610612630844116
    10. ' find' → logprob: -3.735612630844116

Token 81: '_cache' (ID: 27045)
  Prédit: '_last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.2012510448694229
    2. '_c' → logprob: -2.3262510299682617
    3. '_cnt' → logprob: -2.5762510299682617
    4. '_counter' → logprob: -5.576251029968262
    5. 'last' → logprob: -5.826251029968262
    6. '_counts' → logprob: -7.326251029968262
    7. '_count' → logprob: -7.951251029968262
    8. '_' → logprob: -8.201251029968262
    9. 'cnt' → logprob: -9.326251029968262
    10. '_max' → logprob: -9.451251029968262

Token 82: '(cache' (ID: 65481)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.10914038866758347
    2. '(cache' → logprob: -2.984140396118164
    3. '(' → logprob: -3.109140396118164
    4. '(cnt' → logprob: -5.734140396118164
    5. '():' → logprob: -6.609140396118164
    6. '(c' → logprob: -6.859140396118164
    7. '(count' → logprob: -7.609140396118164
    8. '(prev' → logprob: -7.734140396118164
    9. '(line' → logprob: -8.734140396118164
    10. ' (' → logprob: -8.859140396118164

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037581557407975197
    2. ',last' → logprob: -5.878757953643799
    3. ' ,' → logprob: -8.003758430480957
    4. '):' → logprob: -8.003758430480957
    5. '[last' → logprob: -9.378758430480957
    6. '   ' → logprob: -9.628758430480957
    7. '(last' → logprob: -10.753758430480957
    8. '[' → logprob: -11.253758430480957
    9. ',index' → logprob: -11.378758430480957
    10. 'last' → logprob: -11.503758430480957

Token 84: ' cnt' (ID: 27340)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.6319689750671387
    2. 'last' → logprob: -1.8819689750671387
    3. ' idx' → logprob: -2.0069689750671387
    4. 'idx' → logprob: -2.1319689750671387
    5. 'i' → logprob: -2.2569689750671387
    6. ' i' → logprob: -2.5069689750671387
    7. 'x' → logprob: -3.0069689750671387
    8. ' x' → logprob: -3.5069689750671387
    9. 'index' → logprob: -3.5069689750671387
    10. ' index' → logprob: -3.7569689750671387

Token 85: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35006338357925415
    2. '):' → logprob: -1.2250633239746094
    3. '):
' → logprob: -6.975063323974609
    4. '   ' → logprob: -8.22506332397461
    5. ' ,' → logprob: -8.85006332397461
    6. ')' → logprob: -9.10006332397461
    7. ' ):' → logprob: -10.10006332397461
    8. '[' → logprob: -10.60006332397461
    9. ' ' → logprob: -11.47506332397461
    10. ':' → logprob: -11.60006332397461

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004408990498632193
    2. ' cache' → logprob: -5.879408836364746
    3. 'cache' → logprob: -6.879408836364746
    4. ' if' → logprob: -7.754408836364746
    5. ' return' → logprob: -10.004408836364746
    6. 'if' → logprob: -10.504408836364746
    7. ' for' → logprob: -10.879408836364746
    8. '	cache' → logprob: -11.254408836364746
    9. '```' → logprob: -11.379408836364746
    10. 'return' → logprob: -12.129408836364746

Token 87: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6162920594215393
    2. 'cache' → logprob: -1.1162919998168945
    3. ' cache' → logprob: -2.4912919998168945
    4. 'if' (adapté à ' if') → logprob: -3.6162919998168945
    5. ' if' → logprob: -4.1162919998168945
    6. 'return' → logprob: -6.1162919998168945
    7. 'for' → logprob: -6.2412919998168945
    8. ' return' → logprob: -6.7412919998168945
    9. ' for' → logprob: -7.3662919998168945
    10. '```' → logprob: -8.491291999816895

Token 88: ' cache' (ID: 11956)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6068845391273499
    2. 'cnt' → logprob: -1.481884479522705
    3. ' cache' → logprob: -1.856884479522705
    4. 'cache' → logprob: -2.731884479522705
    5. ' len' → logprob: -5.481884479522705
    6. 'len' → logprob: -6.606884479522705
    7. '   ' → logprob: -7.731884479522705
    8. '(cnt' → logprob: -9.356884956359863
    9. '	cnt' → logprob: -9.481884956359863
    10. ' ' → logprob: -9.606884956359863

Token 89: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4744233191013336
    2. '<' → logprob: -0.9744232892990112
    3. ' <=' → logprob: -9.3494234085083
    4. '<=' → logprob: -9.4744234085083
    5. '[' → logprob: -10.2244234085083
    6. '   ' → logprob: -10.3494234085083
    7. '<count' → logprob: -10.7244234085083
    8. ' ' → logprob: -10.9744234085083
    9. '<c' → logprob: -11.3494234085083
    10. '<len' → logprob: -11.8494234085083

Token 90: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.34853488206863403
    2. 'cnt' → logprob: -1.2235348224639893
    3. '	cnt' → logprob: -10.22353458404541
    4. '   ' → logprob: -10.72353458404541
    5. '(cnt' → logprob: -10.97353458404541
    6. ' ' → logprob: -12.22353458404541
    7. '[cnt' → logprob: -12.34853458404541
    8. 'count' → logprob: -13.72353458404541
    9. 'c' → logprob: -14.22353458404541
    10. '  ' → logprob: -14.59853458404541

Token 91: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.363049179315567
    2. ':' → logprob: -1.2380491495132446
    3. '   ' → logprob: -4.363049030303955
    4. '       ' → logprob: -6.863049030303955
    5. ' :
' → logprob: -8.238049507141113
    6. '):
' → logprob: -9.113049507141113
    7. ' :' → logprob: -9.238049507141113
    8. ':
' → logprob: -9.488049507141113
    9. ',' → logprob: -9.738049507141113
    10. ':

' → logprob: -10.613049507141113

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038110031746327877
    2. '   ' → logprob: -6.378810882568359
    3. ':' → logprob: -7.003810882568359
    4. 'cache' → logprob: -7.253810882568359
    5. ' cache' → logprob: -8.75381088256836
    6. ':
' → logprob: -9.37881088256836
    7. 'return' → logprob: -10.37881088256836
    8. '	' → logprob: -10.62881088256836
    9. ' return' → logprob: -10.62881088256836
    10. '	cache' → logprob: -10.62881088256836

Token 93: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8545946478843689
    2. ' return' → logprob: -1.2295947074890137
    3. '       ' → logprob: -1.9795947074890137
    4. 'cache' → logprob: -2.4795947074890137
    5. ' cache' → logprob: -2.8545947074890137
    6. '           ' → logprob: -6.229594707489014
    7. '   ' → logprob: -7.604594707489014
    8. '	cache' → logprob: -9.479594230651855
    9. '.cache' → logprob: -10.604594230651855
    10. '_cache' → logprob: -10.854594230651855

Token 94: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.07890509814023972
    2. ' cnt' → logprob: -2.5789051055908203
    3. '	cnt' → logprob: -11.20390510559082
    4. '(cnt' → logprob: -14.20390510559082
    5. 'cn' → logprob: -15.07890510559082
    6. '[cnt' → logprob: -15.57890510559082
    7. 'c' → logprob: -16.07890510559082
    8. 'count' → logprob: -16.32890510559082
    9. '   ' → logprob: -16.45390510559082
    10. 'ct' → logprob: -16.45390510559082

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0713810920715332
    2. 'return' → logprob: -2.946381092071533
    3. 'else' → logprob: -4.446381092071533
    4. '
' → logprob: -6.196381092071533
    5. ' return' → logprob: -6.696381092071533
    6. ' else' → logprob: -7.321381092071533
    7. ' ' → logprob: -8.196380615234375
    8. '<|end|>' → logprob: -8.696380615234375
    9. '    
' → logprob: -9.946380615234375
    10. '<|end|>' → logprob: -10.571380615234375

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002678920282050967
    2. 'return' → logprob: -8.25026798248291
    3. 'else' → logprob: -12.37526798248291
    4. ' return' → logprob: -14.00026798248291
    5. '	return' → logprob: -14.62526798248291
    6. '
' → logprob: -15.00026798248291
    7. '<|end|>' → logprob: -15.62526798248291
    8. '       ' → logprob: -16.250267028808594
    9. '    
' → logprob: -16.375267028808594
    10. '000' → logprob: -16.875267028808594

Token 97: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47922465205192566
    2. 'else' → logprob: -1.354224681854248
    3. 'return' (adapté à ' return') → logprob: -2.354224681854248
    4. ' else' → logprob: -3.729224681854248
    5. ' return' → logprob: -6.104224681854248
    6. '<|end|>' → logprob: -6.854224681854248
    7. ' ' → logprob: -9.22922420501709
    8. '	return' → logprob: -9.47922420501709
    9. '	else' → logprob: -10.22922420501709
    10. '  ' → logprob: -10.60422420501709

Token 98: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.014163863845169544
    2. ' cache' → logprob: -4.264163970947266
    3. '	cache' → logprob: -15.014163970947266
    4. '   ' → logprob: -17.264163970947266
    5. 'c' → logprob: -17.389163970947266
    6. ' ' → logprob: -18.264163970947266
    7. 'cached' → logprob: -18.389163970947266
    8. '.cache' → logprob: -18.764163970947266
    9. '(cache' → logprob: -19.014163970947266
    10. ' cach' → logprob: -20.014163970947266

Token 99: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6938998699188232
    2. '

' → logprob: -1.1938998699188232
    3. '<|end|>' → logprob: -1.6938998699188232
    4. '
' → logprob: -4.443900108337402
    5. '<|end|>' → logprob: -6.943900108337402
    6. '```' → logprob: -7.818900108337402
    7. ' def' → logprob: -8.818900108337402
    8. '_

' → logprob: -10.193900108337402
    9. '


' → logprob: -10.318900108337402
    10. ' 

' → logprob: -10.443900108337402

Token 100: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0055318428203463554
    2. '<|end|>' → logprob: -5.3805317878723145
    3. '
' → logprob: -7.5055317878723145
    4. '```' → logprob: -9.005532264709473
    5. '<|end|>' → logprob: -9.755532264709473
    6. '

' → logprob: -10.005532264709473
    7. '\' → logprob: -10.505532264709473
    8. '\n' → logprob: -10.630532264709473
    9. '#' → logprob: -10.630532264709473
    10. 'ndef' → logprob: -11.755532264709473

Token 101: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2752181887626648
    2. ' main' → logprob: -1.5252182483673096
    3. 'solve' → logprob: -4.9002180099487305
    4. 'max' → logprob: -5.0252180099487305
    5. ' max' → logprob: -6.4002180099487305
    6. ' solve' → logprob: -6.5252180099487305
    7. 'long' → logprob: -6.7752180099487305
    8. 'process' → logprob: -6.7752180099487305
    9. 'count' → logprob: -7.1502180099487305
    10. 'find' → logprob: -7.2752180099487305

Token 102: '_he' (ID: 94257)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3811942338943481
    2. '_line' → logprob: -1.3811942338943481
    3. '_height' → logprob: -2.0061941146850586
    4. '_input' → logprob: -2.2561941146850586
    5. '(' → logprob: -2.7561941146850586
    6. '_sequence' → logprob: -3.3811941146850586
    7. '_(' → logprob: -3.3811941146850586
    8. '_list' → logprob: -3.8811941146850586
    9. '(_' → logprob: -4.256194114685059
    10. '_data' → logprob: -4.381194114685059

Token 103: 'ights' (ID: 3635)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.007611005567014217
    2. 'ights' → logprob: -4.88261079788208
    3. 'aders' → logprob: -13.882611274719238
    4. 'ig' → logprob: -14.007611274719238
    5. 'igth' → logprob: -14.382611274719238
    6. 'igh' → logprob: -14.632611274719238
    7. 'ght' → logprob: -14.882611274719238
    8. 'IGHT' → logprob: -15.382611274719238
    9. '_' → logprob: -15.507611274719238
    10. 'ader' → logprob: -15.632611274719238

Token 104: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.004403294064104557
    2. '(' → logprob: -5.754403114318848
    3. ' (' → logprob: -6.754403114318848
    4. '(height' → logprob: -10.254403114318848
    5. '(ht' → logprob: -11.379403114318848
    6. '(a' → logprob: -13.129403114318848
    7. '(list' → logprob: -13.129403114318848
    8. '():' → logprob: -13.379403114318848
    9. '(H' → logprob: -13.629403114318848
    10. '(lst' → logprob: -13.629403114318848

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35234665870666504
    2. '):
' → logprob: -1.227346658706665
    3. ',' → logprob: -6.227346420288086
    4. '):
' → logprob: -6.352346420288086
    5. ':' → logprob: -9.727346420288086
    6. '):

' → logprob: -10.602346420288086
    7. ')' → logprob: -10.602346420288086
    8. '   ' → logprob: -10.852346420288086
    9. '[' → logprob: -10.977346420288086
    10. ' ):' → logprob: -11.727346420288086

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014884350821375847
    2. ' cache' → logprob: -6.751488208770752
    3. 'cache' → logprob: -8.75148868560791
    4. ' cnt' → logprob: -9.62648868560791
    5. '```' → logprob: -10.37648868560791
    6. 'cnt' → logprob: -11.37648868560791
    7. ' max' → logprob: -11.37648868560791
    8. '    ' → logprob: -11.62648868560791
    9. ' counter' → logprob: -11.87648868560791
    10. ' last' → logprob: -12.12648868560791

Token 107: ' cnt' (ID: 27340)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.0470699071884155
    2. 'last' → logprob: -1.2970699071884155
    3. '   ' → logprob: -1.5470699071884155
    4. 'cnt' (adapté à ' cnt') → logprob: -2.047070026397705
    5. ' last' → logprob: -4.172070026397705
    6. ' cache' → logprob: -4.672070026397705
    7. ' cnt' → logprob: -5.172070026397705
    8. 'count' → logprob: -7.172070026397705
    9. 'max' → logprob: -7.672070026397705
    10. 'counter' → logprob: -7.797070026397705

Token 108: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15051545202732086
    2. ',' → logprob: -2.150515556335449
    3. '=' → logprob: -3.775515556335449
    4. ' ,' → logprob: -8.52551555633545
    5. ' ' → logprob: -8.65051555633545
    6. '   ' → logprob: -12.40051555633545
    7. '  ' → logprob: -12.65051555633545
    8. 's' → logprob: -13.40051555633545
    9. '```' → logprob: -14.58801555633545
    10. 'a' → logprob: -15.08801555633545

Token 109: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.22767579555511475
    2. ' cache' → logprob: -1.6026757955551147
    3. 'max' → logprob: -6.852675914764404
    4. ' max' → logprob: -7.602675914764404
    5. 'res' → logprob: -8.852675437927246
    6. ' ' → logprob: -9.602675437927246
    7. 'ans' → logprob: -9.727675437927246
    8. ' ans' → logprob: -9.727675437927246
    9. '   ' → logprob: -9.852675437927246
    10. ' res' → logprob: -9.852675437927246

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036282234359532595
    2. '=' → logprob: -5.628628253936768
    3. ',' → logprob: -10.50362777709961
    4. ' ' → logprob: -14.37862777709961
    5. '   ' → logprob: -15.62862777709961
    6. ' ,' → logprob: -17.12862777709961
    7. '  ' → logprob: -17.25362777709961
    8. '    ' → logprob: -18.00362777709961
    9. ' =
' → logprob: -18.50362777709961
    10. ' =
' → logprob: -18.87862777709961

Token 111: ' init' (ID: 6327)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01994762010872364
    2. 'init' → logprob: -4.269947528839111
    3. ' ' → logprob: -5.269947528839111
    4. ' init' → logprob: -7.644947528839111
    5. '   ' → logprob: -8.89494800567627
    6. '  ' → logprob: -12.39494800567627
    7. '(' → logprob: -13.64494800567627
    8. '    ' → logprob: -14.01994800567627
    9. '(init' → logprob: -15.08244800567627
    10. '_init' → logprob: -15.20744800567627

Token 112: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.292907877039397e-06
    2. '_counter' → logprob: -13.25000286102295
    3. '_' → logprob: -13.62500286102295
    4. '_cnt' → logprob: -16.500003814697266
    5. '_counts' → logprob: -16.750003814697266
    6. 'Counters' → logprob: -17.250003814697266
    7. 'c' → logprob: -17.625003814697266
    8. ' _' → logprob: -17.625003814697266
    9. '_cache' → logprob: -18.250003814697266
    10. '```' → logprob: -18.375003814697266

Token 113: 'ounters' (ID: 36761)
  Prédit: 'ounters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounters' → logprob: -6.134509021649137e-05
    2. 'ounter' → logprob: -10.62506103515625
    3. 'ters' → logprob: -11.37506103515625
    4. 'ount' → logprob: -11.50006103515625
    5. 'oun' → logprob: -11.75006103515625
    6. 'on' → logprob: -12.87506103515625
    7. 'ou' → logprob: -13.50006103515625
    8. 'un' → logprob: -13.75006103515625
    9. '   ' → logprob: -15.12506103515625
    10. 'ointers' → logprob: -15.12506103515625

Token 114: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003387668402865529
    2. '   ' → logprob: -5.878387451171875
    3. '    
' → logprob: -8.253387451171875
    4. ',' → logprob: -8.753387451171875
    5. '
' → logprob: -9.628387451171875
    6. '  
' → logprob: -10.628387451171875
    7. ',
' → logprob: -11.128387451171875
    8. '<|end|>' → logprob: -11.378387451171875
    9. '   
' → logprob: -11.753387451171875
    10. '```' → logprob: -11.753387451171875

Token 115: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04623027518391609
    2. '   ' → logprob: -3.2962303161621094
    3. '    
' → logprob: -5.796230316162109
    4. ' for' → logprob: -6.296230316162109
    5. '```' → logprob: -6.671230316162109
    6. ' last' → logprob: -7.671230316162109
    7. 'for' → logprob: -7.921230316162109
    8. ' ' → logprob: -8.42123031616211
    9. '  
' → logprob: -8.54623031616211
    10. '\n' → logprob: -8.67123031616211

Token 116: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.1719549149274826
    2. ' last' → logprob: -1.921954870223999
    3. '   ' → logprob: -4.671955108642578
    4. 'for' → logprob: -6.421955108642578
    5. ' for' → logprob: -7.421955108642578
    6. 'cache' → logprob: -10.046955108642578
    7. '```' → logprob: -11.671955108642578
    8. '	last' → logprob: -12.171955108642578
    9. '
' → logprob: -12.296955108642578
    10. '    
' → logprob: -12.421955108642578

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005951198749244213
    2. '=' → logprob: -5.130951404571533
    3. ' ' → logprob: -11.255950927734375
    4. ',' → logprob: -11.755950927734375
    5. ')' → logprob: -14.755950927734375
    6. ' ,' → logprob: -15.005950927734375
    7. '_' → logprob: -15.255950927734375
    8. '   ' → logprob: -15.380950927734375
    9. '  ' → logprob: -16.255950927734375
    10. '    ' → logprob: -16.255950927734375

Token 118: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5360314846038818
    2. ' get' → logprob: -1.0360314846038818
    3. ' h' → logprob: -3.161031484603882
    4. 'h' → logprob: -4.036031723022461
    5. '   ' → logprob: -11.661031723022461
    6. '(get' → logprob: -12.036031723022461
    7. ' ' → logprob: -12.161031723022461
    8. '	get' → logprob: -13.536031723022461
    9. '_get' → logprob: -13.661031723022461
    10. '.get' → logprob: -14.411031723022461

Token 119: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.026737388223409653
    2. '_last' → logprob: -3.6517374515533447
    3. '_he' → logprob: -9.276737213134766
    4. '_' → logprob: -9.651737213134766
    5. 'initial' → logprob: -9.901737213134766
    6. '(_' → logprob: -10.026737213134766
    7. '_height' → logprob: -10.276737213134766
    8. '```' → logprob: -10.901737213134766
    9. ' _' → logprob: -11.026737213134766
    10. '_h' → logprob: -11.401737213134766

Token 120: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -5.3120038501219824e-05
    2. '_' → logprob: -10.375053405761719
    3. ' _' → logprob: -12.000053405761719
    4. 'last' → logprob: -12.500053405761719
    5. '_l' → logprob: -12.625053405761719
    6. '`' → logprob: -13.250053405761719
    7. '```' → logprob: -13.625053405761719
    8. '_first' → logprob: -14.375053405761719
    9. '(_' → logprob: -14.375053405761719
    10. ''_' → logprob: -14.625053405761719

Token 121: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00016182278341148049
    2. '(' → logprob: -8.875162124633789
    3. ' (' → logprob: -10.750162124633789
    4. '(H' → logprob: -15.875162124633789
    5. ' ' → logprob: -16.37516212463379
    6. '(
' → logprob: -17.00016212463379
    7. '(ht' → logprob: -17.25016212463379
    8. '   ' → logprob: -17.62516212463379
    9. '(height' → logprob: -17.75016212463379
    10. '(

' → logprob: -17.87516212463379

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3874058127403259
    2. ')
' → logprob: -1.1374058723449707
    3. ')

' → logprob: -8.012405395507812
    4. ')
' → logprob: -8.887405395507812
    5. '   ' → logprob: -10.262405395507812
    6. '[' → logprob: -11.137405395507812
    7. ' )' → logprob: -12.262405395507812
    8. '
' → logprob: -12.387405395507812
    9. ' )
' → logprob: -12.387405395507812
    10. ' ' → logprob: -14.262405395507812

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045352350920438766
    2. ' for' → logprob: -3.9203524589538574
    3. '
' → logprob: -4.295352458953857
    4. 'for' → logprob: -4.670352458953857
    5. '    
' → logprob: -6.795352458953857
    6. '```' → logprob: -8.5453519821167
    7. '	for' → logprob: -9.7953519821167
    8. ' ' → logprob: -10.0453519821167
    9. '' → logprob: -11.0453519821167
    10. '  
' → logprob: -11.1703519821167

Token 124: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15867741405963898
    2. 'for' (adapté à ' for') → logprob: -2.033677339553833
    3. '   ' → logprob: -4.158677577972412
    4. ' ' → logprob: -9.283677101135254
    5. '	for' → logprob: -9.533677101135254
    6. '```' → logprob: -10.408677101135254
    7. '    
' → logprob: -11.033677101135254
    8. '  ' → logprob: -11.283677101135254
    9. '
' → logprob: -11.533677101135254
    10. '[' → logprob: -13.283677101135254

Token 125: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.007756395731121302
    2. 'x' → logprob: -4.882756233215332
    3. ' i' → logprob: -9.507756233215332
    4. ' ' → logprob: -10.007756233215332
    5. ' height' → logprob: -11.132756233215332
    6. 'height' → logprob: -12.382756233215332
    7. '   ' → logprob: -12.632756233215332
    8. 'i' → logprob: -12.757756233215332
    9. ' h' → logprob: -14.132756233215332
    10. 'h' → logprob: -14.695256233215332

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019424419151619077
    2. 'in' → logprob: -6.2519426345825195
    3. ' ' → logprob: -11.50194263458252
    4. '   ' → logprob: -13.87694263458252
    5. '    ' → logprob: -14.87694263458252
    6. ',' → logprob: -14.87694263458252
    7. 's' → logprob: -14.87694263458252
    8. ' ' → logprob: -15.12694263458252
    9. '	in' → logprob: -15.25194263458252
    10. 'n' → logprob: -15.50194263458252

Token 127: ' get' (ID: 717)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.029754776507616043
    2. 'h' → logprob: -3.529754877090454
    3. '	h' → logprob: -13.779754638671875
    4. '   ' → logprob: -13.779754638671875
    5. '[h' → logprob: -14.029754638671875
    6. ' ' → logprob: -15.404754638671875
    7. 's' → logprob: -15.404754638671875
    8. '<h' → logprob: -15.529754638671875
    9. '(h' → logprob: -15.529754638671875
    10. '
' → logprob: -16.279754638671875

Token 128: '_remaining' (ID: 102167)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.00343577703461051
    2. '_he' → logprob: -5.8784356117248535
    3. '_input' → logprob: -8.378436088562012
    4. '_' → logprob: -9.753436088562012
    5. 'height' → logprob: -9.878436088562012
    6. 'input' → logprob: -10.253436088562012
    7. 'he' → logprob: -10.378436088562012
    8. 'iter' → logprob: -10.628436088562012
    9. '_initial' → logprob: -10.878436088562012
    10. '_length' → logprob: -11.003436088562012

Token 129: '_he' (ID: 94257)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.019147546961903572
    2. '_he' → logprob: -4.6441473960876465
    3. 's' → logprob: -5.2691473960876465
    4. '_height' → logprob: -6.1441473960876465
    5. '_elements' → logprob: -7.3941473960876465
    6. '(' → logprob: -8.019147872924805
    7. ' heights' → logprob: -8.644147872924805
    8. '(s' → logprob: -9.144147872924805
    9. '_values' → logprob: -9.269147872924805
    10. 'he' → logprob: -9.269147872924805

Token 130: 'ights' (ID: 3635)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.3870548903942108
    2. 'ights' → logprob: -1.1370549201965332
    3. 'ght' → logprob: -9.887054443359375
    4. 'ig' → logprob: -10.012054443359375
    5. 'igth' → logprob: -10.887054443359375
    6. 'igh' → logprob: -11.387054443359375
    7. '(' → logprob: -11.387054443359375
    8. 'ighted' → logprob: -11.762054443359375
    9. 'igts' → logprob: -12.012054443359375
    10. 'i' → logprob: -12.387054443359375

Token 131: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.203409844194539e-05
    2. ' (' → logprob: -10.125041961669922
    3. '(' → logprob: -13.625041961669922
    4. '   ' → logprob: -14.750041961669922
    5. '(len' → logprob: -16.000041961669922
    6. 's' → logprob: -17.625041961669922
    7. '(s' → logprob: -17.625041961669922
    8. '  ' → logprob: -17.875041961669922
    9. ')(' → logprob: -17.875041961669922
    10. ' ' → logprob: -18.000041961669922

Token 132: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46458950638771057
    2. '()[' → logprob: -1.0895894765853882
    3. '()' → logprob: -4.214589595794678
    4. '()):
' → logprob: -4.589589595794678
    5. '):' → logprob: -5.464589595794678
    6. '():' → logprob: -5.464589595794678
    7. '(' → logprob: -7.089589595794678
    8. '):
' → logprob: -7.589589595794678
    9. '():
' → logprob: -9.08958911895752
    10. '())[' → logprob: -9.08958911895752

Token 133: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5980493426322937
    2. '       ' → logprob: -1.3480494022369385
    3. ':' → logprob: -2.8480494022369385
    4. '   ' → logprob: -3.0980494022369385
    5. ' if' → logprob: -3.5980494022369385
    6. ' (' → logprob: -4.473049163818359
    7. ' ' → logprob: -4.848049163818359
    8. 'x' → logprob: -4.973049163818359
    9. '    ' → logprob: -5.098049163818359
    10. ' h' → logprob: -5.223049163818359

Token 134: ' cnt' (ID: 27340)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.10808839648962021
    2. 'last' → logprob: -3.233088493347168
    3. ' cnt' → logprob: -3.233088493347168
    4. 'cnt' (adapté à ' cnt') → logprob: -4.608088493347168
    5. ' if' → logprob: -4.858088493347168
    6. '        ' → logprob: -6.233088493347168
    7. '       ' → logprob: -6.608088493347168
    8. '    ' → logprob: -7.358088493347168
    9. 'if' → logprob: -7.608088493347168
    10. ' ' → logprob: -7.733088493347168

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511883862316608
    2. '=' → logprob: -4.387511730194092
    3. ',' → logprob: -13.63751220703125
    4. ' +=' → logprob: -14.38751220703125
    5. ' ' → logprob: -14.88751220703125
    6. '	' → logprob: -16.38751220703125
    7. '    ' → logprob: -17.01251220703125
    8. '   ' → logprob: -17.01251220703125
    9. ' ,' → logprob: -17.01251220703125
    10. '＝' → logprob: -17.63751220703125

Token 136: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.12693051993846893
    2. 'update' → logprob: -2.1269304752349854
    3. '(update' → logprob: -13.376930236816406
    4. '	update' → logprob: -14.376930236816406
    5. '.update' → logprob: -15.626930236816406
    6. ' ' → logprob: -17.501930236816406
    7. '_update' → logprob: -17.751930236816406
    8. ':update' → logprob: -18.876930236816406
    9. '   ' → logprob: -19.751930236816406
    10. ' updated' → logprob: -20.251930236816406

Token 137: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -2.951771421066951e-05
    2. '_cache' → logprob: -11.250029563903809
    3. 'cnt' → logprob: -11.500029563903809
    4. '_' → logprob: -12.250029563903809
    5. '_count' → logprob: -14.875029563903809
    6. ' _' → logprob: -15.000029563903809
    7. '_ct' → logprob: -15.500029563903809
    8. '_c' → logprob: -15.500029563903809
    9. '_counter' → logprob: -15.625029563903809
    10. '```' → logprob: -16.375028610229492

Token 138: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.0013327404158189893
    2. '(' → logprob: -6.626332759857178
    3. 'last' → logprob: -12.87633228302002
    4. ' last' → logprob: -13.00133228302002
    5. ',last' → logprob: -13.87633228302002
    6. ' (' → logprob: -15.12633228302002
    7. '(
' → logprob: -15.12633228302002
    8. '[last' → logprob: -15.50133228302002
    9. '	last' → logprob: -16.376333236694336
    10. '_last' → logprob: -17.251333236694336

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006146111525595188
    2. ',x' → logprob: -5.25614595413208
    3. ' ,' → logprob: -7.00614595413208
    4. ',
' → logprob: -13.256146430969238
    5. 'x' → logprob: -13.756146430969238
    6. ' x' → logprob: -14.381146430969238
    7. ')' → logprob: -14.881146430969238
    8. '(x' → logprob: -15.131146430969238
    9. '   ' → logprob: -15.381146430969238
    10. '<|end|>' → logprob: -15.506146430969238

Token 140: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25194984674453735
    2. 'x' → logprob: -1.5019497871398926
    3. ' ' → logprob: -12.00195026397705
    4. '	x' → logprob: -12.50195026397705
    5. '<|end|>' → logprob: -12.50195026397705
    6. ')' → logprob: -12.62695026397705
    7. ')x' → logprob: -13.37695026397705
    8. '(x' → logprob: -14.37695026397705
    9. ' ' → logprob: -14.87695026397705
    10. ',x' → logprob: -15.12695026397705

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04347775876522064
    2. ')' → logprob: -3.168477773666382
    3. ' ,' → logprob: -7.918477535247803
    4. '   ' → logprob: -10.793478012084961
    5. ',)' → logprob: -10.793478012084961
    6. ' )' → logprob: -11.043478012084961
    7. ')
' → logprob: -11.168478012084961
    8. ',
' → logprob: -11.418478012084961
    9. ' ' → logprob: -12.043478012084961
    10. '),' → logprob: -12.293478012084961

Token 142: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.25194457173347473
    2. 'cnt' → logprob: -1.5019445419311523
    3. '	cnt' → logprob: -11.876944541931152
    4. '(cnt' → logprob: -12.626944541931152
    5. '[cnt' → logprob: -12.876944541931152
    6. 'count' → logprob: -14.001944541931152
    7. 'c' → logprob: -14.751944541931152
    8. ' ' → logprob: -15.001944541931152
    9. '_cnt' → logprob: -15.126944541931152
    10. 'ct' → logprob: -15.376944541931152

Token 143: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.32083940505981445
    2. ')' → logprob: -1.3208394050598145
    3. '       ' → logprob: -4.9458394050598145
    4. ')
' → logprob: -7.9458394050598145
    5. '<|end|>' → logprob: -10.695838928222656
    6. '
' → logprob: -11.070838928222656
    7. '   ' → logprob: -11.445838928222656
    8. ',' → logprob: -12.445838928222656
    9. ')

' → logprob: -12.445838928222656
    10. ' )
' → logprob: -12.695838928222656

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06373084336519241
    2. 'last' → logprob: -3.8137309551239014
    3. '	last' → logprob: -3.9387309551239014
    4. ' last' → logprob: -4.563730716705322
    5. '   ' → logprob: -4.813730716705322
    6. '	' → logprob: -8.43873119354248
    7. '[last' → logprob: -8.68873119354248
    8. '<|end|>' → logprob: -8.68873119354248
    9. ' ' → logprob: -8.81373119354248
    10. '
' → logprob: -8.93873119354248

Token 145: ' cache' (ID: 11956)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.10170646756887436
    2. ' last' → logprob: -2.3517065048217773
    3. '       ' → logprob: -6.976706504821777
    4. '   ' → logprob: -7.601706504821777
    5. '	last' → logprob: -9.851706504821777
    6. 'cache' (adapté à ' cache') → logprob: -11.976706504821777
    7. ' ' → logprob: -13.226706504821777
    8. '    ' → logprob: -13.476706504821777
    9. '           ' → logprob: -13.976706504821777
    10. ' cache' → logprob: -14.476706504821777

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009118211455643177
    2. '=' → logprob: -7.000911712646484
    3. ' ' → logprob: -15.750911712646484
    4. '    ' → logprob: -16.250911712646484
    5. '   ' → logprob: -18.125911712646484
    6. '  ' → logprob: -19.000911712646484
    7. ',' → logprob: -19.375911712646484
    8. '	' → logprob: -19.500911712646484
    9. '＝' → logprob: -19.875911712646484
    10. ' +=' → logprob: -20.125911712646484

Token 147: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.048588622361421585
    2. 'update' → logprob: -3.048588514328003
    3. '	update' → logprob: -14.548588752746582
    4. '(update' → logprob: -14.673588752746582
    5. '.update' → logprob: -15.423588752746582
    6. '_update' → logprob: -16.673587799072266
    7. ' ' → logprob: -17.423587799072266
    8. '    ' → logprob: -17.548587799072266
    9. ':update' → logprob: -18.298587799072266
    10. ' ' → logprob: -18.548587799072266

Token 148: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -1.9361264946837764e-07
    2. 'cache' → logprob: -16.25
    3. '_c' → logprob: -17.125
    4. '_' → logprob: -17.25
    5. '_cnt' → logprob: -18.25
    6. ' cache' → logprob: -19.25
    7. 'Cache' → logprob: -20.0
    8. '_CACHE' → logprob: -20.125
    9. '_counter' → logprob: -20.125
    10. ' _' → logprob: -20.25

Token 149: '(cache' (ID: 65481)
  Prédit: '(cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cache' → logprob: -0.00030304977553896606
    2. '(' → logprob: -8.125303268432617
    3. ' (' → logprob: -12.125303268432617
    4. 'cache' → logprob: -13.875303268432617
    5. ' cache' → logprob: -15.000303268432617
    6. '	cache' → logprob: -15.375303268432617
    7. '```' → logprob: -17.000303268432617
    8. '(
' → logprob: -17.500303268432617
    9. '(Cache' → logprob: -17.875303268432617
    10. '.cache' → logprob: -17.875303268432617

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.953082341467962e-05
    2. ' ,' → logprob: -10.625039100646973
    3. ',c' → logprob: -11.125039100646973
    4. ')' → logprob: -15.500039100646973
    5. ',
' → logprob: -16.25004005432129
    6. ',

' → logprob: -17.50004005432129
    7. 'cnt' → logprob: -18.00004005432129
    8. '(cnt' → logprob: -18.00004005432129
    9. '```' → logprob: -19.00004005432129
    10. '   ' → logprob: -19.00004005432129

Token 151: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.006716079078614712
    2. ' cnt' → logprob: -5.006716251373291
    3. '	cnt' → logprob: -14.881715774536133
    4. '(cnt' → logprob: -15.506715774536133
    5. 'count' → logprob: -15.756715774536133
    6. '[cnt' → logprob: -17.381715774536133
    7. 'ct' → logprob: -17.506715774536133
    8. '   ' → logprob: -18.256715774536133
    9. 'c' → logprob: -18.756715774536133
    10. 'cont' → logprob: -18.881715774536133

Token 152: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001713590754661709
    2. ')' → logprob: -9.000171661376953
    3. '
' → logprob: -11.125171661376953
    4. ')
' → logprob: -11.375171661376953
    5. ',' → logprob: -11.625171661376953
    6. '<|end|>' → logprob: -11.875171661376953
    7. '   ' → logprob: -12.875171661376953
    8. '),' → logprob: -13.875171661376953
    9. '        
' → logprob: -14.000171661376953
    10. '<|end|>' → logprob: -15.750171661376953

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013040101155638695
    2. 'last' → logprob: -5.013040065765381
    3. '   ' → logprob: -5.513040065765381
    4. ' last' → logprob: -6.763040065765381
    5. '	last' → logprob: -7.513040065765381
    6. '<|end|>' → logprob: -8.638040542602539
    7. '
' → logprob: -9.638040542602539
    8. '	' → logprob: -9.638040542602539
    9. '        
' → logprob: -10.013040542602539
    10. '```' → logprob: -10.138040542602539

Token 154: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.021619483828544617
    2. ' last' → logprob: -3.8966195583343506
    3. '       ' → logprob: -7.5216193199157715
    4. '   ' → logprob: -7.8966193199157715
    5. '	last' → logprob: -8.77161979675293
    6. ' ' → logprob: -12.64661979675293
    7. '
' → logprob: -13.89661979675293
    8. '  ' → logprob: -14.39661979675293
    9. '    ' → logprob: -14.39661979675293
    10. '_last' → logprob: -14.52161979675293

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687169551849365
    2. '=' → logprob: -1.1368716955184937
    3. ',' → logprob: -15.136871337890625
    4. ' ' → logprob: -15.636871337890625
    5. '＝' → logprob: -16.511871337890625
    6. ' =
' → logprob: -17.011871337890625
    7. '=

' → logprob: -17.011871337890625
    8. ' equals' → logprob: -17.511871337890625
    9. '	' → logprob: -17.886871337890625
    10. ' =)' → logprob: -18.386871337890625

Token 156: ' update' (ID: 4027)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02975083328783512
    2. 'x' → logprob: -3.5297508239746094
    3. '	x' → logprob: -15.27975082397461
    4. ' ' → logprob: -15.90475082397461
    5. ' ' → logprob: -16.90475082397461
    6. '(x' → logprob: -19.40475082397461
    7. '_x' → logprob: -20.02975082397461
    8. ')x' → logprob: -20.27975082397461
    9. '    ' → logprob: -20.90475082397461
    10. 's' → logprob: -20.90475082397461

Token 157: '_last' (ID: 26359)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.830278754234314
    2. ' x' → logprob: -0.955278754234314
    3. '(x' → logprob: -2.5802788734436035
    4. '_' → logprob: -2.9552788734436035
    5. '_x' → logprob: -4.2052788734436035
    6. ' ' → logprob: -4.7052788734436035
    7. '_token' → logprob: -5.3302788734436035
    8. ')' → logprob: -5.3302788734436035
    9. '_cnt' → logprob: -6.3302788734436035
    10. 'space' → logprob: -6.5802788734436035

Token 158: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.299207478761673
    2. '(last' → logprob: -1.6742074489593506
    3. '(' → logprob: -3.4242074489593506
    4. '_' → logprob: -4.54920768737793
    5. 'last' → logprob: -4.92420768737793
    6. '_last' → logprob: -4.92420768737793
    7. ' (' → logprob: -5.42420768737793
    8. '_height' → logprob: -5.54920768737793
    9. '_x' → logprob: -6.29920768737793
    10. '_cache' → logprob: -7.42420768737793

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ',' → logprob: -12.000015258789062
    3. ')
' → logprob: -12.000015258789062
    4. ' )' → logprob: -13.125015258789062
    5. '   ' → logprob: -15.000015258789062
    6. ' ' → logprob: -15.125015258789062
    7. ')`' → logprob: -15.750015258789062
    8. '))' → logprob: -16.500015258789062
    9. ',)' → logprob: -16.875015258789062
    10. ')return' → logprob: -17.125015258789062

Token 160: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' return' (ID: 622)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4208273887634277
    2. 'def' → logprob: -1.9208273887634277
    3. '   ' → logprob: -1.9208273887634277
    4. '(x' → logprob: -2.2958273887634277
    5. ')' → logprob: -2.7958273887634277
    6. 'h' → logprob: -2.9208273887634277
    7. '<|end|>' → logprob: -3.1708273887634277
    8. 'x' → logprob: -3.2958273887634277
    9. '(h' → logprob: -3.2958273887634277
    10. '[' → logprob: -3.4208273887634277

Token 162: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.2519362270832062
    2. ' cache' → logprob: -1.5019361972808838
    3. ' max' → logprob: -12.876935958862305
    4. 'max' → logprob: -13.001935958862305
    5. '(cache' → logprob: -13.251935958862305
    6. '	cache' → logprob: -15.376935958862305
    7. 'c' → logprob: -16.251935958862305
    8. ' ' → logprob: -16.376935958862305
    9. '_cache' → logprob: -16.626935958862305
    10. ' cach' → logprob: -17.751935958862305

Token 163: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5403197407722473
    2. '(h' → logprob: -1.9153196811676025
    3. '[' → logprob: -2.1653196811676025
    4. '_' → logprob: -2.5403196811676025
    5. 's' → logprob: -3.4153196811676025
    6. '[h' → logprob: -4.415319919586182
    7. 'def' → logprob: -5.290319919586182
    8. '_remaining' → logprob: -5.290319919586182
    9. '_h' → logprob: -5.540319919586182
    10. '[]' → logprob: -5.915319919586182

Token 164: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7777326107025146
    2. 'h' → logprob: -1.4027326107025146
    3. '(' → logprob: -2.1527326107025146
    4. '(h' → logprob: -2.6527326107025146
    5. 'def' → logprob: -2.9027326107025146
    6. '[h' → logprob: -3.4027326107025146
    7. '_h' → logprob: -5.652732849121094
    8. '(
' → logprob: -5.652732849121094
    9. '   ' → logprob: -6.402732849121094
    10. ':' → logprob: -6.402732849121094

Token 165: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.009490440599620342
    2. 'get' → logprob: -4.884490489959717
    3. ' process' → logprob: -6.634490489959717
    4. ' main' → logprob: -7.634490489959717
    5. 'process' → logprob: -9.759490013122559
    6. ' read' → logprob: -11.509490013122559
    7. 'main' → logprob: -11.634490013122559
    8. '_get' → logprob: -12.884490013122559
    9. 'def' → logprob: -14.009490013122559
    10. '_' → logprob: -14.259490013122559

Token 166: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -1.259079363080673e-05
    2. 'remaining' → logprob: -11.500012397766113
    3. '_' → logprob: -13.000012397766113
    4. 'Remaining' → logprob: -16.75001335144043
    5. '_rem' → logprob: -17.75001335144043
    6. '_re' → logprob: -17.87501335144043
    7. '_existing' → logprob: -18.00001335144043
    8. '```' → logprob: -18.37501335144043
    9. 'def' → logprob: -19.12501335144043
    10. 's' → logprob: -19.25001335144043

Token 167: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. 'He' → logprob: -16.25
    4. '_height' → logprob: -16.5
    5. '_lengths' → logprob: -17.75
    6. 'he' → logprob: -17.875
    7. '_remaining' → logprob: -18.375
    8. '```' → logprob: -18.75
    9. '_h' → logprob: -19.125
    10. '_ht' → logprob: -19.875

Token 168: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -2.236549335066229e-05
    2. 'ight' → logprob: -11.250021934509277
    3. '_he' → logprob: -12.375021934509277
    4. 'ght' → logprob: -13.125021934509277
    5. 'igh' → logprob: -13.875021934509277
    6. '_' → logprob: -14.375021934509277
    7. 'he' → logprob: -14.625021934509277
    8. 'IGHTS' → logprob: -15.125021934509277
    9. '```' → logprob: -15.500021934509277
    10. 'ught' → logprob: -15.625021934509277

Token 169: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.000000953674316
    4. '(a' → logprob: -18.125
    5. '(height' → logprob: -18.875
    6. '(x' → logprob: -19.125
    7. '(
' → logprob: -19.125
    8. '(ht' → logprob: -19.125
    9. '(s' → logprob: -19.375
    10. '(H' → logprob: -19.5

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043046917766332626
    2. '):
' → logprob: -3.1680469512939453
    3. '):
' → logprob: -10.668046951293945
    4. '[' → logprob: -11.168046951293945
    5. ')' → logprob: -12.543046951293945
    6. '   ' → logprob: -12.668046951293945
    7. '):

' → logprob: -13.168046951293945
    8. ':' → logprob: -14.918046951293945
    9. ' ):' → logprob: -15.168046951293945
    10. '[]):' → logprob: -15.168046951293945

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612806499004364
    2. ' h' → logprob: -1.1128065586090088
    3. 'h' → logprob: -2.362806558609009
    4. ' return' → logprob: -3.487806558609009
    5. 'return' → logprob: -5.36280632019043
    6. ' ' → logprob: -10.36280632019043
    7. ' for' → logprob: -10.86280632019043
    8. ' iter' → logprob: -10.98780632019043
    9. '	h' → logprob: -10.98780632019043
    10. '  ' → logprob: -11.73780632019043

Token 172: ' return' (ID: 622)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.02103853225708
    2. 'return' (adapté à ' return') → logprob: -1.39603853225708
    3. ' h' → logprob: -1.52103853225708
    4. ' return' → logprob: -1.89603853225708
    5. '   ' → logprob: -3.77103853225708
    6. 'for' → logprob: -8.021038055419922
    7. ' for' → logprob: -8.646038055419922
    8. ' ' → logprob: -11.771038055419922
    9. 'yield' → logprob: -12.396038055419922
    10. '	h' → logprob: -12.896038055419922

Token 173: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.05488499253988266
    2. ' h' → logprob: -2.929884910583496
    3. '   ' → logprob: -13.804884910583496
    4. '	h' → logprob: -14.429884910583496
    5. 'iter' → logprob: -14.429884910583496
    6. '[h' → logprob: -15.304884910583496
    7. ' ' → logprob: -15.679884910583496
    8. ' iter' → logprob: -15.679884910583496
    9. '(h' → logprob: -17.304885864257812
    10. '[' → logprob: -17.617385864257812

Token 174: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.15310683415737e-05
    2. '1' → logprob: -10.750021934509277
    3. ' [' → logprob: -18.75002098083496
    4. 'def' → logprob: -19.00002098083496
    5. '```' → logprob: -19.37502098083496
    6. '[
' → logprob: -19.75002098083496
    7. '   ' → logprob: -19.75002098083496
    8. 'from' → logprob: -19.75002098083496
    9. '2' → logprob: -19.87502098083496
    10. '[:-' → logprob: -20.00002098083496

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -17.75
    4. '
' → logprob: -18.25
    5. '   ' → logprob: -18.5625
    6. '１' → logprob: -18.625
    7. '۱' → logprob: -19.3125
    8. ']' → logprob: -19.5625
    9. '2' → logprob: -19.5625
    10. ':' → logprob: -20.0

Token 176: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -7.672236824873835e-05
    2. ':' → logprob: -9.500076293945312
    3. ':],' → logprob: -13.750076293945312
    4. ' :]' → logprob: -15.000076293945312
    5. ':]

' → logprob: -15.500076293945312
    6. ':].' → logprob: -15.625076293945312
    7. ':]
' → logprob: -16.000076293945312
    8. ']' → logprob: -19.500076293945312
    9. '：' → logprob: -20.625076293945312
    10. ':end' → logprob: -21.250076293945312

Token 177: 'def' (ID: 1314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030500371009111404
    2. 'def' → logprob: -3.5305004119873047
    3. ' x' → logprob: -8.155500411987305
    4. '   ' → logprob: -8.655500411987305
    5. 'last' → logprob: -9.280500411987305
    6. '<|end|>' → logprob: -9.655500411987305
    7. 'lambda' → logprob: -9.905500411987305
    8. 'return' → logprob: -11.030500411987305
    9. ' ' → logprob: -11.405500411987305
    10. ' def' → logprob: -11.530500411987305

Token 178: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.048873141407966614
    2. 'update' → logprob: -3.04887318611145
    3. '_update' → logprob: -9.173872947692871
    4. ' read' → logprob: -9.423872947692871
    5. ' get' → logprob: -9.923872947692871
    6. ' process' → logprob: -11.298872947692871
    7. '	update' → logprob: -11.923872947692871
    8. '_' → logprob: -12.048872947692871
    9. 'def' → logprob: -12.298872947692871
    10. 'read' → logprob: -12.298872947692871

Token 179: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -2.057743949990254e-05
    2. 'last' → logprob: -10.875020980834961
    3. '_' → logprob: -13.500020980834961
    4. ' _' → logprob: -17.00002098083496
    5. '_LAST' → logprob: -17.25002098083496
    6. '_l' → logprob: -17.25002098083496
    7. '_max' → logprob: -17.62502098083496
    8. ' last' → logprob: -18.50002098083496
    9. '_Last' → logprob: -18.50002098083496
    10. '_list' → logprob: -18.62502098083496

Token 180: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.015028859488666058
    2. '(' → logprob: -4.640028953552246
    3. '(last' → logprob: -5.265028953552246
    4. '(value' → logprob: -9.890028953552246
    5. '(h' → logprob: -10.640028953552246
    6. ' (' → logprob: -11.890028953552246
    7. '(a' → logprob: -12.890028953552246
    8. 'last' → logprob: -13.765028953552246
    9. '(prev' → logprob: -14.015028953552246
    10. '(
' → logprob: -14.890028953552246

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018207184970378876
    2. '):
' → logprob: -4.01820707321167
    3. ')' → logprob: -9.893207550048828
    4. '):

' → logprob: -12.768207550048828
    5. ' ):' → logprob: -13.143207550048828
    6. '(x' → logprob: -13.518207550048828
    7. '):
' → logprob: -14.768207550048828
    8. ')x' → logprob: -16.143207550048828
    9. '   ' → logprob: -16.643207550048828
    10. '=' → logprob: -17.268207550048828

Token 182: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2561572790145874
    2. ' x' → logprob: -1.5061572790145874
    3. 'return' → logprob: -6.006157398223877
    4. ' return' → logprob: -6.506157398223877
    5. '   ' → logprob: -8.256156921386719
    6. '    ' → logprob: -14.006156921386719
    7. '	x' → logprob: -14.631156921386719
    8. ' ' → logprob: -14.881156921386719
    9. '	return' → logprob: -16.38115692138672
    10. ' ' → logprob: -17.38115692138672

Token 183: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007248214911669493
    2. ' x' → logprob: -5.257248401641846
    3. 'return' (adapté à ' return') → logprob: -6.257248401641846
    4. ' return' → logprob: -9.257247924804688
    5. '   ' → logprob: -14.507247924804688
    6. '`' → logprob: -19.132247924804688
    7. ' ' → logprob: -19.507247924804688
    8. '	x' → logprob: -19.757247924804688
    9. '```' → logprob: -20.007247924804688
    10. ' ' → logprob: -20.382247924804688

Token 184: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '	x' → logprob: -20.878177642822266
    4. ' ' → logprob: -23.253177642822266
    5. '   ' → logprob: -23.378177642822266
    6. '(x' → logprob: -23.503177642822266
    7. ' ' → logprob: -24.128177642822266
    8. '$x' → logprob: -25.753177642822266
    9. ')x' → logprob: -25.878177642822266
    10. '_x' → logprob: -25.878177642822266

Token 185: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' main' (ID: 2758)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.9680097699165344
    2. ' __' → logprob: -1.3430097103118896
    3. '__' → logprob: -1.8430097103118896
    4. ' main' → logprob: -2.5930097103118896
    5. ' read' → logprob: -2.5930097103118896
    6. 'process' → logprob: -3.5930097103118896
    7. 'read' → logprob: -4.468009948730469
    8. 'main' → logprob: -5.218009948730469
    9. ' if' → logprob: -6.093009948730469
    10. 'if' → logprob: -6.343009948730469

Token 188: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.607391408877447e-05
    2. '()' → logprob: -10.875036239624023
    3. '():
' → logprob: -11.500036239624023
    4. ' ():' → logprob: -12.000036239624023
    5. '(' → logprob: -14.625036239624023
    6. '():
' → logprob: -15.875036239624023
    7. ':' → logprob: -16.125036239624023
    8. '_' → logprob: -17.500036239624023
    9. '()>' → logprob: -17.500036239624023
    10. '();' → logprob: -18.500036239624023

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012445373460650444
    2. ' h' → logprob: -4.762445449829102
    3. 'n' → logprob: -6.512445449829102
    4. ' n' → logprob: -6.762445449829102
    5. 'h' → logprob: -7.762445449829102
    6. ' heights' → logprob: -7.762445449829102
    7. ' input' → logprob: -9.012445449829102
    8. 'input' → logprob: -9.387445449829102
    9. '```' → logprob: -10.262445449829102
    10. 'height' → logprob: -10.262445449829102

Token 190: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.36559149622917175
    2. 'h' → logprob: -1.2405915260314941
    3. 'N' → logprob: -4.365591526031494
    4. ' n' → logprob: -5.990591526031494
    5. '   ' → logprob: -6.990591526031494
    6. ' h' → logprob: -7.615591526031494
    7. 'H' → logprob: -8.240591049194336
    8. ' N' → logprob: -9.865591049194336
    9. 'num' → logprob: -11.240591049194336
    10. 't' → logprob: -11.490591049194336

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009759394451975822
    2. '=' → logprob: -4.634759426116943
    3. ' ' → logprob: -13.384758949279785
    4. ',' → logprob: -14.384758949279785
    5. '=int' → logprob: -14.759758949279785
    6. '   ' → logprob: -14.884758949279785
    7. ' =
' → logprob: -15.634758949279785
    8. ' ' → logprob: -15.759758949279785
    9. '  ' → logprob: -16.0097599029541
    10. '	' → logprob: -16.6347599029541

Token 192: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1002129316329956
    2. ' read' → logprob: -2.350213050842285
    3. 'int' → logprob: -12.100213050842285
    4. ' int' → logprob: -14.350213050842285
    5. '	read' → logprob: -16.22521209716797
    6. '   ' → logprob: -16.85021209716797
    7. '(read' → logprob: -18.35021209716797
    8. '  ' → logprob: -18.85021209716797
    9. '_read' → logprob: -19.22521209716797
    10. '.read' → logprob: -19.85021209716797

Token 193: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00034833617974072695
    2. '_' → logprob: -8.250348091125488
    3. '()' → logprob: -9.875348091125488
    4. '_int' → logprob: -11.250348091125488
    5. 'input' → logprob: -11.750348091125488
    6. '(' → logprob: -12.625348091125488
    7. '_line' → logprob: -12.750348091125488
    8. '_in' → logprob: -12.750348091125488
    9. 'int' → logprob: -13.750348091125488
    10. '```' → logprob: -14.000348091125488

Token 194: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031802060548216105
    2. '()
' → logprob: -5.753180027008057
    3. '()
' → logprob: -14.003180503845215
    4. '()

' → logprob: -14.128180503845215
    5. ' ()' → logprob: -14.378180503845215
    6. '()\' → logprob: -16.1281795501709
    7. '()`' → logprob: -16.8781795501709
    8. '()<' → logprob: -17.8781795501709
    9. '())' → logprob: -18.1281795501709
    10. '()"' → logprob: -18.2531795501709

Token 195: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07484296709299088
    2. '   ' → logprob: -3.324842929840088
    3. ' h' → logprob: -3.324842929840088
    4. ' heights' → logprob: -9.574843406677246
    5. '	h' → logprob: -9.949843406677246
    6. 'he' → logprob: -10.574843406677246
    7. 'height' → logprob: -12.699843406677246
    8. '```' → logprob: -12.824843406677246
    9. ' ' → logprob: -13.199843406677246
    10. '  ' → logprob: -13.449843406677246

Token 196: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.008729330264031887
    2. 'he' → logprob: -4.758729457855225
    3. 'height' → logprob: -9.633728981018066
    4. 'hs' → logprob: -10.258728981018066
    5. ' h' → logprob: -11.758728981018066
    6. ' heights' → logprob: -12.258728981018066
    7. '   ' → logprob: -14.008728981018066
    8. '    
' → logprob: -15.633728981018066
    9. '```' → logprob: -15.633728981018066
    10. 'if' → logprob: -16.383729934692383

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10028096288442612
    2. '=' → logprob: -2.350281000137329
    3. '_' → logprob: -9.72528076171875
    4. '_list' → logprob: -11.60028076171875
    5. 's' → logprob: -12.97528076171875
    6. '   ' → logprob: -14.22528076171875
    7. ' ' → logprob: -14.60028076171875
    8. '=[]' → logprob: -14.97528076171875
    9. '[]' → logprob: -15.10028076171875
    10. ' ' → logprob: -15.47528076171875

Token 198: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07888978719711304
    2. ' read' → logprob: -2.578889846801758
    3. '	read' → logprob: -17.328889846801758
    4. '   ' → logprob: -18.203889846801758
    5. 'list' → logprob: -18.453889846801758
    6. '(read' → logprob: -19.078889846801758
    7. ' list' → logprob: -20.828889846801758
    8. '_read' → logprob: -20.828889846801758
    9. '.read' → logprob: -21.328889846801758
    10. '  ' → logprob: -21.328889846801758

Token 199: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -4.60414821645827e-06
    2. '_input' → logprob: -12.375004768371582
    3. '_he' → logprob: -15.250004768371582
    4. 'height' → logprob: -17.500003814697266
    5. '_' → logprob: -18.250003814697266
    6. '```' → logprob: -18.375003814697266
    7. '(_' → logprob: -19.125003814697266
    8. '_width' → logprob: -19.250003814697266
    9. '(height' → logprob: -19.625003814697266
    10. '_
' → logprob: -19.750003814697266

Token 200: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.584239938296378e-06
    2. 's' → logprob: -12.500007629394531
    3. 'list' → logprob: -12.625007629394531
    4. '()' → logprob: -15.500007629394531
    5. '(list' → logprob: -16.37500762939453
    6. 'List' → logprob: -17.00000762939453
    7. '_' → logprob: -17.37500762939453
    8. '_lists' → logprob: -17.75000762939453
    9. ' list' → logprob: -18.00000762939453
    10. ')' → logprob: -18.00000762939453

Token 201: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01083050761371851
    2. '
' → logprob: -4.635830402374268
    3. '    
' → logprob: -7.510830402374268
    4. '()
' → logprob: -8.260830879211426
    5. '()' → logprob: -9.010830879211426
    6. '<|end|>' → logprob: -10.385830879211426
    7. '(' → logprob: -10.885830879211426
    8. '(n' → logprob: -11.260830879211426
    9. '(
' → logprob: -11.385830879211426
    10. '[' → logprob: -11.510830879211426

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05271739512681961
    2. 'result' → logprob: -3.427717447280884
    3. ' result' → logprob: -4.677717208862305
    4. 'res' → logprob: -5.927717208862305
    5. 'max' → logprob: -6.552717208862305
    6. 'print' → logprob: -6.677717208862305
    7. ' max' → logprob: -7.302717208862305
    8. 'c' → logprob: -7.927717208862305
    9. ' res' → logprob: -7.927717208862305
    10. 'ans' → logprob: -7.927717208862305

Token 203: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.3574228882789612
    2. 'res' → logprob: -1.8574228286743164
    3. 'print' → logprob: -2.3574228286743164
    4. 'ans' → logprob: -3.4824228286743164
    5. 'answer' → logprob: -4.107422828674316
    6. 'max' → logprob: -6.732422828674316
    7. 'cache' → logprob: -7.607422828674316
    8. ' result' → logprob: -7.857422828674316
    9. '   ' → logprob: -8.857422828674316
    10. 'r' → logprob: -9.232422828674316

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004620353225618601
    2. '=' → logprob: -5.379620552062988
    3. ' ' → logprob: -16.629619598388672
    4. ' =
' → logprob: -17.629619598388672
    5. '   ' → logprob: -17.879619598388672
    6. ' =)' → logprob: -17.879619598388672
    7. '＝' → logprob: -18.004619598388672
    8. ' ' → logprob: -18.129619598388672
    9. ',' → logprob: -19.379619598388672
    10. '_' → logprob: -19.504619598388672

Token 205: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.1602243334054947
    2. 'process' → logprob: -1.9102243185043335
    3. '(process' → logprob: -15.660223960876465
    4. '	process' → logprob: -17.41022491455078
    5. ' proces' → logprob: -18.03522491455078
    6. '   ' → logprob: -18.91022491455078
    7. '.process' → logprob: -19.03522491455078
    8. '_process' → logprob: -19.28522491455078
    9. 'proces' → logprob: -20.78522491455078
    10. ' ' → logprob: -21.03522491455078

Token 206: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.125000953674316
    3. 'he' → logprob: -15.125000953674316
    4. '_height' → logprob: -16.125001907348633
    5. '(' → logprob: -17.625001907348633
    6. '_h' → logprob: -19.875001907348633
    7. '```' → logprob: -20.375001907348633
    8. 'He' → logprob: -20.500001907348633
    9. ' _' → logprob: -20.500001907348633
    10. '_lengths' → logprob: -20.500001907348633

Token 207: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.00021271906734909862
    2. 'ight' → logprob: -8.500212669372559
    3. '_' → logprob: -13.125212669372559
    4. 'i' → logprob: -13.500212669372559
    5. '   ' → logprob: -13.500212669372559
    6. 'ig' → logprob: -14.125212669372559
    7. 'ght' → logprob: -14.250212669372559
    8. 'he' → logprob: -14.500212669372559
    9. 'igts' → logprob: -14.625212669372559
    10. '[' → logprob: -15.250212669372559

Token 208: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. ' (' → logprob: -17.5
    4. '(ht' → logprob: -19.5
    5. '```' → logprob: -20.5
    6. '(
' → logprob: -20.75
    7. '   ' → logprob: -22.0
    8. '(n' → logprob: -22.125
    9. '[h' → logprob: -22.125
    10. 'h' → logprob: -22.375

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09224023669958115
    2. ')
' → logprob: -2.467240333557129
    3. '   ' → logprob: -5.717240333557129
    4. '()' → logprob: -13.717240333557129
    5. ' )' → logprob: -13.967240333557129
    6. '()
' → logprob: -13.967240333557129
    7. ')
' → logprob: -13.967240333557129
    8. '
' → logprob: -14.592240333557129
    9. ' )
' → logprob: -15.092240333557129
    10. '())' → logprob: -15.092240333557129

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531726658344269
    2. 'print' → logprob: -1.7531726360321045
    3. '
' → logprob: -3.0031726360321045
    4. ' print' → logprob: -7.253172874450684
    5. '```' → logprob: -9.753172874450684
    6. '    
' → logprob: -10.503172874450684
    7. '	print' → logprob: -11.253172874450684
    8. '
' → logprob: -12.628172874450684
    9. '(print' → logprob: -13.878172874450684
    10. '\n' → logprob: -14.003172874450684

Token 211: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.56102097814437e-05
    2. '   ' → logprob: -10.250045776367188
    3. ' print' → logprob: -11.500045776367188
    4. '```' → logprob: -18.000045776367188
    5. '
' → logprob: -18.500045776367188
    6. '	print' → logprob: -19.500045776367188
    7. '#print' → logprob: -21.750045776367188
    8. 'return' → logprob: -22.375045776367188
    9. '    
' → logprob: -22.500045776367188
    10. 'for' → logprob: -22.500045776367188

Token 212: '_result' (ID: 11623)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.22753916680812836
    2. '(' → logprob: -1.6025391817092896
    3. '(print' → logprob: -7.4775390625
    4. '=result' → logprob: -7.6025390625
    5. '=' → logprob: -8.1025390625
    6. ' =' → logprob: -8.4775390625
    7. '   ' → logprob: -8.6025390625
    8. '_result' → logprob: -8.7275390625
    9. 'result' → logprob: -9.2275390625
    10. 'print' → logprob: -10.8525390625

Token 213: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004123280756175518
    2. '(' → logprob: -5.504123210906982
    3. ' (' → logprob: -10.37912368774414
    4. '   ' → logprob: -12.12912368774414
    5. '("("' → logprob: -13.12912368774414
    6. '(res' → logprob: -13.37912368774414
    7. '```' → logprob: -14.25412368774414
    8. '(print' → logprob: -14.50412368774414
    9. '(output' → logprob: -14.75412368774414
    10. '(results' → logprob: -14.87912368774414

Token 214: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4328903257846832
    2. '()' → logprob: -1.4328902959823608
    3. '())' → logprob: -2.1828904151916504
    4. '()
' → logprob: -11.057889938354492
    5. ')
' → logprob: -11.932889938354492
    6. ' )' → logprob: -12.182889938354492
    7. '())
' → logprob: -12.682889938354492
    8. ')`' → logprob: -14.057889938354492
    9. '(' → logprob: -14.182889938354492
    10. '();)' → logprob: -14.307889938354492

Token 215: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0683535037969705e-05
    2. '<|end|>' → logprob: -11.87501049041748
    3. '```' → logprob: -13.62501049041748
    4. '
' → logprob: -13.87501049041748
    5. ' def' → logprob: -14.50001049041748
    6. '\' → logprob: -15.12501049041748
    7. '    
' → logprob: -15.87501049041748
    8. 'print' → logprob: -16.000011444091797
    9. '#' → logprob: -16.250011444091797
    10. ':def' → logprob: -16.625011444091797

Token 216: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.062033336609601974
    2. 'output' → logprob: -2.8120334148406982
    3. '_output' → logprob: -10.187033653259277
    4. '(output' → logprob: -11.437033653259277
    5. '_' → logprob: -11.562033653259277
    6. ' _' → logprob: -13.062033653259277
    7. '	output' → logprob: -13.687033653259277
    8. ' ' → logprob: -13.812033653259277
    9. 'space' → logprob: -13.812033653259277
    10. 'Output' → logprob: -14.312033653259277

Token 217: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.8590300139039755e-05
    2. '_results' → logprob: -10.375048637390137
    3. '_' → logprob: -11.625048637390137
    4. '_output' → logprob: -13.125048637390137
    5. '_RESULT' → logprob: -13.375048637390137
    6. '_Result' → logprob: -13.875048637390137
    7. '_res' → logprob: -14.500048637390137
    8. '```' → logprob: -14.625048637390137
    9. '"_' → logprob: -15.125048637390137
    10. '_final' → logprob: -15.375048637390137

Token 218: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0052858153358101845
    2. '(' → logprob: -5.255285739898682
    3. '(output' → logprob: -11.00528621673584
    4. '(print' → logprob: -12.00528621673584
    5. ' (' → logprob: -12.25528621673584
    6. '(res' → logprob: -12.75528621673584
    7. '(results' → logprob: -13.00528621673584
    8. '(response' → logprob: -13.13028621673584
    9. '(resultado' → logprob: -13.13028621673584
    10. '():' → logprob: -13.25528621673584

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038121357560157776
    2. '):
' → logprob: -3.288121461868286
    3. ')' → logprob: -10.038121223449707
    4. '():' → logprob: -10.788121223449707
    5. '():
' → logprob: -11.913121223449707
    6. '   ' → logprob: -12.663121223449707
    7. '):
' → logprob: -13.038121223449707
    8. '()' → logprob: -14.163121223449707
    9. ' ):' → logprob: -14.163121223449707
    10. '(' → logprob: -14.413121223449707

Token 220: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034051015973091125
    2. ' print' → logprob: -3.784050941467285
    3. '   ' → logprob: -4.534050941467285
    4. '```' → logprob: -11.534050941467285
    5. 'def' → logprob: -14.659050941467285
    6. '`' → logprob: -18.1590518951416
    7. '	print' → logprob: -18.1590518951416
    8. '``' → logprob: -19.0340518951416
    9. '(print' → logprob: -20.0340518951416
    10. '    ' → logprob: -20.0340518951416

Token 221: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.5491004129871726e-05
    2. ' print' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.000045776367188
    4. '```' → logprob: -18.000045776367188
    5. 'def' → logprob: -20.750045776367188
    6. 'for' → logprob: -23.375045776367188
    7. '`' → logprob: -23.875045776367188
    8. '``' → logprob: -24.375045776367188
    9. 'Print' → logprob: -25.500045776367188
    10. 'println' → logprob: -25.625045776367188

Token 222: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005638765869662166
    2. '(' → logprob: -7.500564098358154
    3. 'result' → logprob: -11.500563621520996
    4. '()' → logprob: -15.375563621520996
    5. '(f' → logprob: -15.500563621520996
    6. '(results' → logprob: -16.375564575195312
    7. '((' → logprob: -16.625564575195312
    8. ' (' → logprob: -16.750564575195312
    9. '(res' → logprob: -17.125564575195312
    10. '(
' → logprob: -17.625564575195312

Token 223: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -16.875
    4. '())' → logprob: -17.125
    5. '()' → logprob: -17.375
    6. '))' → logprob: -18.375
    7. ')`' → logprob: -18.375
    8. '')' → logprob: -19.0
    9. '),' → logprob: -20.125
    10. '(' → logprob: -20.5

Token 224: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12693776190280914
    2. 'main' → logprob: -2.1269378662109375
    3. ' if' → logprob: -12.251937866210938
    4. '```' → logprob: -13.001937866210938
    5. '(main' → logprob: -14.126937866210938
    6. '#' → logprob: -14.251937866210938
    7. ' main' → logprob: -14.501937866210938
    8. 'def' → logprob: -15.126937866210938
    9. '<|end|>' → logprob: -15.126937866210938
    10. 'print' → logprob: -16.376937866210938

Token 225: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 223
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 41.70%
Précision adaptée (1ère position): 45.74%
Précision (top 10): 81.17%
================================================================================
