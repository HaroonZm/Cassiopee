================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

X = int(stdin.readline())
reachable = bytearray(X + 120)
reachable[0] = 1

for i, r in enumerate(reachable[:X]):
    if r:
        reachable[i+100:i+106] = b'\x01' * 6

print(reachable[X])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.16639204323291779
    2. ' argv' → logprob: -2.2913920879364014
    3. 'exit' → logprob: -3.5413920879364014
    4. ' exit' → logprob: -3.9163920879364014
    5. 'stdout' → logprob: -6.791391849517822
    6. 'import' → logprob: -6.916391849517822
    7. 'path' → logprob: -7.916391849517822
    8. 'stdin' → logprob: -8.16639232635498
    9. ' import' → logprob: -8.79139232635498
    10. '.argv' → logprob: -9.29139232635498

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009244076907634735
    2. '.readline' → logprob: -4.759243965148926
    3. '.read' → logprob: -8.509243965148926
    4. '\n' → logprob: -9.259243965148926
    5. '
' → logprob: -9.509243965148926
    6. '.
' → logprob: -9.759243965148926
    7. ',' → logprob: -9.884243965148926
    8. 'import' → logprob: -10.134243965148926
    9. '```' → logprob: -10.384243965148926
    10. '.write' → logprob: -11.134243965148926

Token 5: 'X' (ID: 55)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07646796852350235
    2. '.readline' → logprob: -2.701467990875244
    3. '.read' → logprob: -6.076467990875244
    4. 'print' → logprob: -6.701467990875244
    5. '\n' → logprob: -6.951467990875244
    6. ',' → logprob: -7.951467990875244
    7. 'import' → logprob: -8.076467514038086
    8. 'for' → logprob: -8.076467514038086
    9. 'newline' → logprob: -8.576467514038086
    10. '.
' → logprob: -8.826467514038086

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5572177171707153
    2. '=' → logprob: -1.0572177171707153
    3. ' =' → logprob: -2.807217597961426
    4. ',' → logprob: -5.182217597961426
    5. '[' → logprob: -5.557217597961426
    6. '_' → logprob: -5.807217597961426
    7. 'X' → logprob: -6.432217597961426
    8. ' ' → logprob: -6.432217597961426
    9. ')' → logprob: -6.932217597961426
    10. '.readline' → logprob: -7.432217597961426

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2926509380340576
    2. 'int' → logprob: -1.5426509380340576
    3. 'stdin' → logprob: -4.542651176452637
    4. ' ' → logprob: -4.667651176452637
    5. ' []' → logprob: -4.917651176452637
    6. ' stdin' → logprob: -5.042651176452637
    7. '0' → logprob: -6.667651176452637
    8. ' map' → logprob: -6.792651176452637
    9. ' list' → logprob: -7.042651176452637
    10. '[]' → logprob: -7.917651176452637

Token 8: '(stdin' (ID: 176594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04924260079860687
    2. '(stdin' → logprob: -3.0492424964904785
    3. '(input' → logprob: -7.9242424964904785
    4. '(X' → logprob: -9.299242973327637
    5. ' (' → logprob: -9.299242973327637
    6. '()' → logprob: -10.299242973327637
    7. '(st' → logprob: -10.424242973327637
    8. '('' → logprob: -11.424242973327637
    9. '(
' → logprob: -11.674242973327637
    10. '(

' → logprob: -12.674242973327637

Token 9: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.131088986992836
    2. '.read' → logprob: -2.131088972091675
    3. '.' → logprob: -5.506089210510254
    4. ')' → logprob: -10.631089210510254
    5. '.readlines' → logprob: -10.881089210510254
    6. '[' → logprob: -11.256089210510254
    7. ' .' → logprob: -11.381089210510254
    8. '.Read' → logprob: -11.756089210510254
    9. '.)' → logprob: -13.006089210510254
    10. '.get' → logprob: -13.131089210510254

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11567888408899307
    2. '()' → logprob: -2.2406787872314453
    3. ')' → logprob: -6.240678787231445
    4. '(' → logprob: -7.615678787231445
    5. '().' → logprob: -8.365678787231445
    6. ' ())' → logprob: -9.740678787231445
    7. '()))' → logprob: -9.990678787231445
    8. '()[' → logprob: -10.615678787231445
    9. '();)' → logprob: -11.865678787231445
    10. '('' → logprob: -11.865678787231445

Token 11: 'reachable' (ID: 101900)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6637036204338074
    2. '\n' → logprob: -1.4137036800384521
    3. '*' → logprob: -1.9137036800384521
    4. '\' → logprob: -3.788703680038452
    5. 'for' → logprob: -3.913703680038452
    6. '%' → logprob: -4.163703441619873
    7. '+
' → logprob: -4.663703441619873
    8. '#' → logprob: -5.538703441619873
    9. 'if' → logprob: -5.538703441619873
    10. '```' → logprob: -5.913703441619873

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5098705291748047
    2. '[' → logprob: -1.7598705291748047
    3. '_' → logprob: -1.7598705291748047
    4. '_nodes' → logprob: -2.0098705291748047
    5. ' =' → logprob: -2.1348705291748047
    6. '_points' → logprob: -3.1348705291748047
    7. '_positions' → logprob: -3.2598705291748047
    8. '=' → logprob: -3.6348705291748047
    9. '_spaces' → logprob: -4.009870529174805
    10. '.' → logprob: -4.634870529174805

Token 13: ' byte' (ID: 9239)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6634162664413452
    2. ' set' → logprob: -0.9134162664413452
    3. '[' → logprob: -3.5384163856506348
    4. '{}' → logprob: -4.038416385650635
    5. '{' → logprob: -4.413416385650635
    6. ' [' → logprob: -4.538416385650635
    7. ' {' → logprob: -5.163416385650635
    8. ' ' → logprob: -5.913416385650635
    9. ' {}' → logprob: -6.038416385650635
    10. ' []' → logprob: -6.663416385650635

Token 14: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -1.4617256056226324e-05
    2. 'arry' → logprob: -11.500014305114746
    3. 'arr' → logprob: -12.500014305114746
    4. 'arra' → logprob: -14.500014305114746
    5. 'rray' → logprob: -16.000015258789062
    6. 'Array' → logprob: -17.125015258789062
    7. 'arrays' → logprob: -17.500015258789062
    8. ' array' → logprob: -17.750015258789062
    9. 'a' → logprob: -18.375015258789062
    10. 'code' → logprob: -19.250015258789062

Token 15: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4764629304409027
    2. '(X' → logprob: -0.9764629602432251
    3. '((' → logprob: -6.8514628410339355
    4. '([' → logprob: -7.2264628410339355
    5. '(b' → logprob: -7.6014628410339355
    6. '()' → logprob: -9.726463317871094
    7. '(x' → logprob: -11.476463317871094
    8. '(\' → logprob: -11.601463317871094
    9. '(B' → logprob: -11.726463317871094
    10. '(
' → logprob: -12.851463317871094

Token 16: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25503262877464294
    2. ')' → logprob: -1.6300326585769653
    3. ' +' → logprob: -3.630032539367676
    4. '))' → logprob: -6.005032539367676
    5. '+)' → logprob: -9.880032539367676
    6. ',' → logprob: -10.255032539367676
    7. '>' → logprob: -11.005032539367676
    8. '1' → logprob: -11.255032539367676
    9. ' )' → logprob: -11.255032539367676
    10. ')+' → logprob: -11.380032539367676

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004103335086256266
    2. ' ' → logprob: -5.754103183746338
    3. '2' → logprob: -7.004103183746338
    4. '10' → logprob: -12.254103660583496
    5. '5' → logprob: -13.129103660583496
    6. '  ' → logprob: -13.254103660583496
    7. '100' → logprob: -13.254103660583496
    8. '3' → logprob: -13.504103660583496
    9. '32' → logprob: -14.129103660583496
    10. '   ' → logprob: -14.129103660583496

Token 18: '120' (ID: 6106)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000541592831723392
    2. ' ' → logprob: -8.125541687011719
    3. '2' → logprob: -8.500541687011719
    4. '10' → logprob: -11.125541687011719
    5. '3' → logprob: -12.000541687011719
    6. '5' → logprob: -12.125541687011719
    7. '100' → logprob: -13.000541687011719
    8. '4' → logprob: -13.313041687011719
    9. '   ' → logprob: -13.375541687011719
    10. '7' → logprob: -13.563041687011719

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004160145472269505
    2. '+' → logprob: -8.125415802001953
    3. ')
' → logprob: -9.375415802001953
    4. '1' → logprob: -11.625415802001953
    5. ')
' → logprob: -12.750415802001953
    6. '')' → logprob: -12.750415802001953
    7. ' +' → logprob: -13.000415802001953
    8. '0' → logprob: -13.000415802001953
    9. ' )' → logprob: -13.125415802001953
    10. ',' → logprob: -13.500415802001953

Token 20: 'reachable' (ID: 101900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23775596916675568
    2. '=' → logprob: -2.6127560138702393
    3. '[
' → logprob: -3.7377560138702393
    4. 'reachable' → logprob: -3.8627560138702393
    5. 'for' → logprob: -3.9877560138702393
    6. '.' → logprob: -4.36275577545166
    7. ' =' → logprob: -4.86275577545166
    8. '_' → logprob: -5.23775577545166
    9. '
' → logprob: -5.23775577545166
    10. ' ' → logprob: -5.36275577545166

Token 21: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08619530498981476
    2. '[:]' → logprob: -3.086195230484009
    3. '<|end|>' → logprob: -3.711195230484009
    4. '=' → logprob: -5.461195468902588
    5. '[]' → logprob: -5.711195468902588
    6. ' =' → logprob: -6.711195468902588
    7. '[X' → logprob: -6.711195468902588
    8. '```' → logprob: -7.336195468902588
    9. '[
' → logprob: -8.21119499206543
    10. '<|end|>' → logprob: -8.46119499206543

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029840022325515747
    2. 'X' → logprob: -6.002984046936035
    3. '1' → logprob: -8.002984046936035
    4. ' ' → logprob: -9.252984046936035
    5. '-' → logprob: -10.752984046936035
    6. ']' → logprob: -10.877984046936035
    7. '[' → logprob: -11.877984046936035
    8. ' X' → logprob: -12.002984046936035
    9. ')' → logprob: -12.252984046936035
    10. '100' → logprob: -12.377984046936035

Token 23: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004583135014399886
    2. ']=' → logprob: -8.250458717346191
    3. ' ]' → logprob: -8.625458717346191
    4. '=' → logprob: -11.000458717346191
    5. ']==' → logprob: -15.250458717346191
    6. ' =' → logprob: -15.750458717346191
    7. '[' → logprob: -16.125457763671875
    8. ']
' → logprob: -16.750457763671875
    9. '`]' → logprob: -16.750457763671875
    10. ']+=' → logprob: -16.750457763671875

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759808421134949
    2. ' =' → logprob: -0.8259808421134949
    3. '=True' → logprob: -10.200981140136719
    4. ' |=' → logprob: -13.700981140136719
    5. '=False' → logprob: -14.950981140136719
    6. '=

' → logprob: -14.950981140136719
    7. '1' → logprob: -15.325981140136719
    8. ']' → logprob: -15.575981140136719
    9. '＝' → logprob: -15.700981140136719
    10. ' ==' → logprob: -15.825981140136719

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011093381908722222
    2. 'True' → logprob: -9.250110626220703
    3. ' ' → logprob: -11.250110626220703
    4. '255' → logprob: -14.125110626220703
    5. ' True' → logprob: -14.375110626220703
    6. '0' → logprob: -15.750110626220703
    7. '  ' → logprob: -16.625110626220703
    8. '2' → logprob: -17.000110626220703
    9. ' ' → logprob: -17.062610626220703
    10. '   ' → logprob: -17.250110626220703

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018339496455155313
    2. 'True' → logprob: -8.62518310546875
    3. ' ' → logprob: -13.25018310546875
    4. '255' → logprob: -14.25018310546875
    5. ' True' → logprob: -14.50018310546875
    6. '0' → logprob: -14.75018310546875
    7. '2' → logprob: -16.00018310546875
    8. '(True' → logprob: -16.93768310546875
    9. '128' → logprob: -17.50018310546875
    10. '3' → logprob: -17.50018310546875

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47063711285591125
    2. ' for' → logprob: -1.9706370830535889
    3. ' 
' → logprob: -2.845637083053589
    4. 'for' → logprob: -2.970637083053589
    5. ' ' → logprob: -3.095637083053589
    6. '<|end|>' → logprob: -3.095637083053589
    7. '\n' → logprob: -3.970637083053589
    8. '' → logprob: -5.095637321472168
    9. '+' → logprob: -6.595637321472168
    10. '0' → logprob: -6.595637321472168

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23659281432628632
    2. ' for' → logprob: -1.6115927696228027
    3. ' ' → logprob: -5.236592769622803
    4. '\n' → logprob: -5.861592769622803
    5. '
' → logprob: -6.611592769622803
    6. '' → logprob: -7.986592769622803
    7. '\' → logprob: -8.236593246459961
    8. '+' → logprob: -8.736593246459961
    9. ' 
' → logprob: -9.236593246459961
    10. ' \' → logprob: -9.361593246459961

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07929082959890366
    2. ' _' → logprob: -2.8292908668518066
    3. ' ' → logprob: -4.454290866851807
    4. '_' → logprob: -5.454290866851807
    5. 'i' → logprob: -6.954290866851807
    6. ' x' → logprob: -8.829290390014648
    7. ' ' → logprob: -10.079290390014648
    8. ' in' → logprob: -10.454290390014648
    9. ' I' → logprob: -11.329290390014648
    10. ' d' → logprob: -11.329290390014648

Token 30: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04881161451339722
    2. 'in' → logprob: -3.048811674118042
    3. ' ' → logprob: -8.673811912536621
    4. 'n' → logprob: -10.798811912536621
    5. '+' → logprob: -10.923811912536621
    6. ',' → logprob: -12.673811912536621
    7. '	in' → logprob: -12.798811912536621
    8. '1' → logprob: -13.548811912536621
    9. '  ' → logprob: -13.673811912536621
    10. ')' → logprob: -14.548811912536621

Token 31: ' r' (ID: 428)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.74723482131958
    2. 'd' → logprob: -2.24723482131958
    3. 'x' → logprob: -2.37223482131958
    4. ' d' → logprob: -2.62223482131958
    5. ' a' → logprob: -2.87223482131958
    6. 'v' → logprob: -2.87223482131958
    7. 'h' → logprob: -3.12223482131958
    8. 'c' → logprob: -3.24723482131958
    9. ' v' → logprob: -3.37223482131958
    10. ' x' → logprob: -3.49723482131958

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34401822090148926
    2. 'ange' → logprob: -1.7190182209014893
    3. ',' → logprob: -2.5940182209014893
    4. 'each' → logprob: -3.4690182209014893
    5. 'e' → logprob: -6.09401798248291
    6. 'ach' → logprob: -7.09401798248291
    7. 'adius' → logprob: -7.84401798248291
    8. 'ight' → logprob: -8.21901798248291
    9. ',_' → logprob: -8.84401798248291
    10. 'ow' → logprob: -8.96901798248291

Token 33: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.22545601427555084
    2. 'enumer' → logprob: -1.6004559993743896
    3. '(en' → logprob: -10.475456237792969
    4. 'range' → logprob: -12.725456237792969
    5. 'en' → logprob: -13.100456237792969
    6. ' range' → logprob: -13.475456237792969
    7. 'ange' → logprob: -13.600456237792969
    8. 'enum' → logprob: -13.850456237792969
    9. '(range' → logprob: -14.225456237792969
    10. 'e' → logprob: -14.225456237792969

Token 34: '(re' (ID: 8178)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.655664324760437
    2. '(range' → logprob: -1.405664324760437
    3. '(re' → logprob: -1.530664324760437
    4. '(map' → logprob: -5.030664443969727
    5. '(read' → logprob: -5.405664443969727
    6. '((' → logprob: -6.405664443969727
    7. '(' → logprob: -6.655664443969727
    8. '(list' → logprob: -6.905664443969727
    9. '(st' → logprob: -7.030664443969727
    10. '(en' → logprob: -7.655664443969727

Token 35: 'achable' (ID: 82461)
  Prédit: 'achable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -0.008108359761536121
    2. 'ach' → logprob: -5.133108139038086
    3. 'range' → logprob: -7.508108139038086
    4. 'verse' → logprob: -8.008108139038086
    5. 'reachable' → logprob: -8.133108139038086
    6. 'ad' → logprob: -8.383108139038086
    7. 'versed' → logprob: -8.508108139038086
    8. 's' → logprob: -9.383108139038086
    9. 'ached' → logprob: -9.508108139038086
    10. 'charge' → logprob: -10.008108139038086

Token 36: '[:' (ID: 7808)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008421429432928562
    2. ':' → logprob: -5.383421421051025
    3. '):
' → logprob: -5.758421421051025
    4. '[:' → logprob: -8.383421897888184
    5. '[' → logprob: -8.758421897888184
    6. ')' → logprob: -9.008421897888184
    7. '[:-' → logprob: -10.008421897888184
    8. '):
' → logprob: -10.883421897888184
    9. '[i' → logprob: -11.008421897888184
    10. ' ):' → logprob: -11.133421897888184

Token 37: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0015483066672459245
    2. ' X' → logprob: -6.5015482902526855
    3. 'len' → logprob: -11.251548767089844
    4. ' ' → logprob: -11.376548767089844
    5. '   ' → logprob: -12.501548767089844
    6. '-X' → logprob: -12.626548767089844
    7. '-' → logprob: -12.876548767089844
    8. ']' → logprob: -13.001548767089844
    9. ' -' → logprob: -13.126548767089844
    10. '])' → logprob: -13.376548767089844

Token 38: ']):
' (ID: 51989)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20120933651924133
    2. ']):' → logprob: -1.826209306716919
    3. ']' → logprob: -4.326209545135498
    4. ' +' → logprob: -5.326209545135498
    5. ']):
' → logprob: -6.576209545135498
    6. '-' → logprob: -7.201209545135498
    7. '])' → logprob: -7.826209545135498
    8. ' ' → logprob: -8.70120906829834
    9. ']:' → logprob: -9.07620906829834
    10. ' ]' → logprob: -9.70120906829834

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5803197622299194
    2. ' if' → logprob: -0.8303197622299194
    3. '	if' → logprob: -5.830319881439209
    4. 'if' → logprob: -7.205319881439209
    5. ' ' → logprob: -8.20531940460205
    6. '    
' → logprob: -9.20531940460205
    7. '    ' → logprob: -10.20531940460205
    8. '
' → logprob: -10.20531940460205
    9. '\t' → logprob: -10.20531940460205
    10. '  ' → logprob: -10.33031940460205

Token 40: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.060476962476968765
    2. '   ' → logprob: -2.9354770183563232
    3. 'if' (adapté à ' if') → logprob: -5.560476779937744
    4. '	if' → logprob: -6.685476779937744
    5. ' ' → logprob: -9.185477256774902
    6. '\t' → logprob: -9.185477256774902
    7. '    
' → logprob: -9.810477256774902
    8. ' for' → logprob: -10.185477256774902
    9. '    ' → logprob: -10.560477256774902
    10. '       ' → logprob: -10.935477256774902

Token 41: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05731583014130592
    2. ' r' → logprob: -2.9323158264160156
    3. 'reachable' → logprob: -6.182315826416016
    4. ' reachable' → logprob: -8.307315826416016
    5. ' not' → logprob: -9.432315826416016
    6. 'not' → logprob: -10.932315826416016
    7. ' ' → logprob: -11.682315826416016
    8. '   ' → logprob: -12.182315826416016
    9. '	r' → logprob: -12.932315826416016
    10. ' ' → logprob: -13.932315826416016

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11278492212295532
    2. '==' → logprob: -2.3627848625183105
    3. ':
' → logprob: -5.3627848625183105
    4. ' and' → logprob: -5.9877848625183105
    5. ' ==' → logprob: -6.3627848625183105
    6. 'and' → logprob: -6.6127848625183105
    7. '>' → logprob: -7.1127848625183105
    8. '>:' → logprob: -7.3627848625183105
    9. '!=' → logprob: -7.9877848625183105
    10. '=' → logprob: -8.987785339355469

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7897493243217468
    2. ' for' → logprob: -0.7897493243217468
    3. '       ' → logprob: -3.2897493839263916
    4. ' ' → logprob: -3.9147493839263916
    5. ' reachable' → logprob: -3.9147493839263916
    6. '    ' → logprob: -6.2897491455078125
    7. '\t' → logprob: -6.2897491455078125
    8. 'reachable' → logprob: -6.4147491455078125
    9. ' if' → logprob: -6.5397491455078125
    10. 'for' → logprob: -6.5397491455078125

Token 44: ' reachable' (ID: 143580)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612484335899353
    2. 'for' → logprob: -1.237484335899353
    3. ' for' → logprob: -2.2374844551086426
    4. 'reachable' (adapté à ' reachable') → logprob: -3.2374844551086426
    5. 'if' → logprob: -5.112484455108643
    6. '       ' → logprob: -5.237484455108643
    7. ' reachable' → logprob: -5.737484455108643
    8. ' if' → logprob: -6.237484455108643
    9. ' ' → logprob: -6.237484455108643
    10. '           ' → logprob: -6.487484455108643

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3080716346157715e-05
    2. '[' → logprob: -11.125022888183594
    3. '[min' → logprob: -13.000022888183594
    4. '[
' → logprob: -13.500022888183594
    5. '[X' → logprob: -13.750022888183594
    6. '[max' → logprob: -13.875022888183594
    7. 'i' → logprob: -14.375022888183594
    8. '[j' → logprob: -15.000022888183594
    9. '[I' → logprob: -15.000022888183594
    10. '(i' → logprob: -15.500022888183594

Token 46: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02110978402197361
    2. ' +' → logprob: -4.271109580993652
    3. ']' → logprob: -5.646109580993652
    4. '+i' → logprob: -5.896109580993652
    5. '|' → logprob: -8.771109580993652
    6. '-' → logprob: -8.771109580993652
    7. '+j' → logprob: -9.021109580993652
    8. ':' → logprob: -9.771109580993652
    9. ' ' → logprob: -10.271109580993652
    10. '1' → logprob: -10.771109580993652

Token 47: '100' (ID: 1353)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.947902262210846
    2. '1' → logprob: -1.4479022026062012
    3. '100' → logprob: -2.322902202606201
    4. '3' → logprob: -2.447902202606201
    5. '2' → logprob: -3.197902202606201
    6. '6' → logprob: -3.447902202606201
    7. '90' → logprob: -4.572902202606201
    8. '20' → logprob: -4.822902202606201
    9. '64' → logprob: -4.822902202606201
    10. '30' → logprob: -4.947902202606201

Token 48: ':i' (ID: 34041)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003425327595323324
    2. ']=' → logprob: -5.753425121307373
    3. ' ]' → logprob: -8.378425598144531
    4. ']+=' → logprob: -12.003425598144531
    5. '=' → logprob: -13.503425598144531
    6. ']==' → logprob: -13.628425598144531
    7. ':]' → logprob: -13.878425598144531
    8. ')' → logprob: -14.003425598144531
    9. ']
' → logprob: -14.378425598144531
    10. '`]' → logprob: -14.628425598144531

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009368685074150562
    2. '110' → logprob: -5.384368896484375
    3. '100' → logprob: -6.009368896484375
    4. '0' → logprob: -6.884368896484375
    5. ']' → logprob: -8.259368896484375
    6. ' +' → logprob: -8.259368896484375
    7. '105' → logprob: -8.634368896484375
    8. '60' → logprob: -9.384368896484375
    9. '120' → logprob: -10.134368896484375
    10. '+i' → logprob: -10.259368896484375

Token 50: '106' (ID: 13365)
  Prédit: '120'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '120' → logprob: -0.45390430092811584
    2. '110' → logprob: -1.4539042711257935
    3. '121' → logprob: -2.703904390335083
    4. '111' → logprob: -3.453904390335083
    5. '106' → logprob: -4.828904151916504
    6. '105' → logprob: -4.828904151916504
    7. '115' → logprob: -5.828904151916504
    8. '101' → logprob: -6.203904151916504
    9. '104' → logprob: -6.203904151916504
    10. '109' → logprob: -6.578904151916504

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009794592624530196
    2. ']=' → logprob: -7.375979423522949
    3. '   ' → logprob: -9.12597942352295
    4. '6' → logprob: -9.25097942352295
    5. '7' → logprob: -10.50097942352295
    6. ' ]' → logprob: -10.75097942352295
    7. ']|' → logprob: -11.50097942352295
    8. '|' → logprob: -11.62597942352295
    9. '```' → logprob: -11.62597942352295
    10. '0' → logprob: -11.62597942352295

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031537387520074844
    2. ' =' → logprob: -4.1565375328063965
    3. '|' → logprob: -4.2815375328063965
    4. ' |=' → logprob: -6.7815375328063965
    5. '=True' → logprob: -9.031537055969238
    6. ' ' → logprob: -9.406537055969238
    7. ']=' → logprob: -9.531537055969238
    8. ']' → logprob: -9.656537055969238
    9. '[' → logprob: -11.281537055969238
    10. '[:]' → logprob: -11.406537055969238

Token 53: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.040224481374025345
    2. 'byte' → logprob: -4.290224552154541
    3. 'bytes' → logprob: -4.415224552154541
    4. ' b' → logprob: -5.165224552154541
    5. '[' → logprob: -5.540224552154541
    6. '(b' → logprob: -7.040224552154541
    7. '[b' → logprob: -7.290224552154541
    8. ' bytes' → logprob: -7.665224552154541
    9. 'map' → logprob: -7.665224552154541
    10. '1' → logprob: -8.040224075317383

Token 54: ''\' (ID: 36853)
  Prédit: ''\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.856961727142334
    2. 'b' → logprob: -0.981961727142334
    3. '\' → logprob: -3.856961727142334
    4. '\x' → logprob: -3.981961727142334
    5. '"\' → logprob: -3.981961727142334
    6. 'reach' → logprob: -4.231961727142334
    7. '(b' → logprob: -4.356961727142334
    8. ' b' → logprob: -4.481961727142334
    9. 'y' → logprob: -4.731961727142334
    10. '[b' → logprob: -4.856961727142334

Token 55: 'x' (ID: 87)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '111' → logprob: -0.30538836121559143
    2. '\x' → logprob: -2.4303884506225586
    3. 'ffffff' → logprob: -2.8053884506225586
    4. '000' → logprob: -3.3053884506225586
    5. '\' → logprob: -3.5553884506225586
    6. ''\' → logprob: -4.555388450622559
    7. 'aaaa' → logprob: -5.055388450622559
    8. 'bbbb' → logprob: -5.180388450622559
    9. 'xxxx' → logprob: -5.680388450622559
    10. '1' → logprob: -6.055388450622559

Token 56: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.015200990252196789
    2. 'ff' → logprob: -4.640201091766357
    3. '1' → logprob: -5.390201091766357
    4. '11' → logprob: -8.1402006149292
    5. '7' → logprob: -8.2652006149292
    6. 'FF' → logprob: -9.0152006149292
    7. '06' → logprob: -9.5152006149292
    8. '00' → logprob: -10.2652006149292
    9. '\x' → logprob: -10.8902006149292
    10. '07' → logprob: -11.2652006149292

Token 57: ''' (ID: 6)
  Prédit: '\x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\x' → logprob: -0.02269114926457405
    2. ''*' → logprob: -4.397691249847412
    3. ''' → logprob: -4.647691249847412
    4. '111' → logprob: -9.147690773010254
    5. '*' → logprob: -9.272690773010254
    6. ''\' → logprob: -9.897690773010254
    7. '     ' → logprob: -9.897690773010254
    8. '\' → logprob: -10.147690773010254
    9. '1' → logprob: -10.272690773010254
    10. '```' → logprob: -10.522690773010254

Token 58: ' *' (ID: 425)
  Prédit: '\x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\x' → logprob: -0.00799447949975729
    2. '*' → logprob: -5.757994651794434
    3. ' *' → logprob: -7.757994651794434
    4. '\' → logprob: -7.757994651794434
    5. ' ' → logprob: -8.007994651794434
    6. 'b' → logprob: -8.007994651794434
    7. '<|end|>' → logprob: -8.007994651794434
    8. '00' → logprob: -8.132994651794434
    9. '0' → logprob: -8.382994651794434
    10. '\u' → logprob: -8.632994651794434

Token 59: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '(' → logprob: -17.8750057220459
    4. '7' → logprob: -17.8750057220459
    5. '' → logprob: -17.8750057220459
    6. 'six' → logprob: -18.5000057220459
    7. '5' → logprob: -18.7500057220459
    8. '   ' → logprob: -18.8750057220459
    9. '６' → logprob: -19.0000057220459
    10. '```' → logprob: -19.0625057220459

Token 60: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. '(' → logprob: -13.500009536743164
    4. '   ' → logprob: -16.750009536743164
    5. '' → logprob: -17.000009536743164
    6. '7' → logprob: -17.375009536743164
    7. '```' → logprob: -17.750009536743164
    8. '６' → logprob: -17.875009536743164
    9. 'six' → logprob: -17.937509536743164
    10. 'len' → logprob: -18.125009536743164

Token 61: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5992438197135925
    2. '(re' → logprob: -0.8492438197135925
    3. '(sum' → logprob: -3.9742438793182373
    4. '((' → logprob: -6.474243640899658
    5. '(len' → logprob: -6.474243640899658
    6. '('' → logprob: -7.724243640899658
    7. '("("' → logprob: -8.974244117736816
    8. '(read' → logprob: -9.099244117736816
    9. '(tuple' → logprob: -9.099244117736816
    10. '(list' → logprob: -9.599244117736816

Token 64: 'achable' (ID: 82461)
  Prédit: 'achable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -0.00021831797494087368
    2. 'ach' → logprob: -8.500218391418457
    3. 'reachable' → logprob: -11.750218391418457
    4. 'nable' → logprob: -12.875218391418457
    5. 'able' → logprob: -13.750218391418457
    6. 'a' → logprob: -14.000218391418457
    7. '(' → logprob: -14.375218391418457
    8. '_' → logprob: -14.625218391418457
    9. 'actable' → logprob: -15.250218391418457
    10. 'acha' → logprob: -15.750218391418457

Token 65: '[X' (ID: 118621)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022911155596375465
    2. '[' → logprob: -4.272911071777344
    3. '[X' → logprob: -5.147911071777344
    4. '[:' → logprob: -6.147911071777344
    5. '`)' → logprob: -8.897911071777344
    6. '[:-' → logprob: -9.272911071777344
    7. '))' → logprob: -9.397911071777344
    8. ' )' → logprob: -9.397911071777344
    9. '")' → logprob: -9.522911071777344
    10. '==' → logprob: -10.022911071777344

Token 66: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007750844582915306
    2. ')' → logprob: -5.507750988006592
    3. '-' → logprob: -6.257750988006592
    4. ']' → logprob: -7.132750988006592
    5. ']==' → logprob: -8.757750511169434
    6. ''])' → logprob: -9.007750511169434
    7. ' -' → logprob: -9.007750511169434
    8. ':' → logprob: -9.382750511169434
    9. '))' → logprob: -9.507750511169434
    10. '==' → logprob: -9.757750511169434


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 79.69%
================================================================================
