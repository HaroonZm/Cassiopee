================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, C, K = map(int, input().split())
if K % 2 == 1:
    print(B - A)
else:
    print(A - B)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5223684310913086
    2. '+' → logprob: -2.0223684310913086
    3. ';' → logprob: -2.5223684310913086
    4. ',' → logprob: -3.0223684310913086
    5. ')' → logprob: -3.3973684310913086
    6. '.' → logprob: -3.3973684310913086
    7. 'C' → logprob: -3.7723684310913086
    8. '<|end|>' → logprob: -4.022368431091309
    9. '[' → logprob: -4.147368431091309
    10. ':' → logprob: -4.772368431091309

Token 4: ' C' (ID: 363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5879611968994141
    2. ',' → logprob: -1.337961196899414
    3. ' =' → logprob: -2.087961196899414
    4. 'C' → logprob: -2.962961196899414
    5. ',C' → logprob: -6.087961196899414
    6. ')' → logprob: -6.462961196899414
    7. '.' → logprob: -7.337961196899414
    8. ' ' → logprob: -7.587961196899414
    9. ' C' → logprob: -7.587961196899414
    10. '=C' → logprob: -7.837961196899414

Token 5: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8881664872169495
    2. 'D' → logprob: -1.1381664276123047
    3. ',' → logprob: -2.5131664276123047
    4. ';' → logprob: -2.8881664276123047
    5. '=' → logprob: -3.1381664276123047
    6. '(' → logprob: -3.3881664276123047
    7. '<|end|>' → logprob: -4.138166427612305
    8. '[' → logprob: -4.388166427612305
    9. '+' → logprob: -5.263166427612305
    10. '.' → logprob: -5.388166427612305

Token 6: ' K' (ID: 658)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5546008944511414
    2. 'D' → logprob: -1.3046009540557861
    3. ',' → logprob: -2.429600954055786
    4. ' =' → logprob: -3.554600954055786
    5. ';' → logprob: -4.429600715637207
    6. ')' → logprob: -4.679600715637207
    7. '.' → logprob: -5.179600715637207
    8. ',D' → logprob: -5.554600715637207
    9. ':' → logprob: -6.179600715637207
    10. '(' → logprob: -6.929600715637207

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04587884619832039
    2. ' =' → logprob: -3.7958788871765137
    3. ')' → logprob: -5.295878887176514
    4. '(' → logprob: -5.420878887176514
    5. ';' → logprob: -5.795878887176514
    6. '[' → logprob: -5.795878887176514
    7. '+' → logprob: -5.795878887176514
    8. '.' → logprob: -6.545878887176514
    9. ',' → logprob: -6.795878887176514
    10. '```' → logprob: -8.170878410339355

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8954499363899231
    2. '0' → logprob: -1.1454498767852783
    3. 'map' → logprob: -2.3954498767852783
    4. '1' → logprob: -2.6454498767852783
    5. ' map' → logprob: -3.6454498767852783
    6. ' [' → logprob: -4.270450115203857
    7. '[' → logprob: -4.645450115203857
    8. '10' → logprob: -4.770450115203857
    9. '```' → logprob: -4.770450115203857
    10. 'input' → logprob: -4.895450115203857

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1891455352306366
    2. '<|end|>' → logprob: -2.189145565032959
    3. '(lambda' → logprob: -2.939145565032959
    4. '```' → logprob: -6.314145565032959
    5. '(int' → logprob: -6.439145565032959
    6. ')' → logprob: -6.939145565032959
    7. '<|end|>' → logprob: -7.064145565032959
    8. '(user' → logprob: -8.1891450881958
    9. '(token' → logprob: -8.3141450881958
    10. 'user' → logprob: -8.4391450881958

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12656158208847046
    2. '(' → logprob: -3.3765616416931152
    3. '<|end|>' → logprob: -3.3765616416931152
    4. '(input' → logprob: -3.8765616416931152
    5. '`)' → logprob: -5.001561641693115
    6. '<|end|>' → logprob: -5.126561641693115
    7. '(user' → logprob: -5.501561641693115
    8. '(token' → logprob: -5.876561641693115
    9. ')(' → logprob: -6.001561641693115
    10. '```' → logprob: -6.001561641693115

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12702038884162903
    2. ' input' → logprob: -2.1270203590393066
    3. '(input' → logprob: -9.377020835876465
    4. ')' → logprob: -12.502020835876465
    5. ',input' → logprob: -13.377020835876465
    6. ' ' → logprob: -13.877020835876465
    7. '=input' → logprob: -14.627020835876465
    8. '```' → logprob: -15.252020835876465
    9. '<input' → logprob: -15.377020835876465
    10. '	input' → logprob: -15.502020835876465

Token 12: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7519769072532654
    2. '())' → logprob: -1.0019769668579102
    3. '()' → logprob: -2.12697696685791
    4. '(' → logprob: -4.25197696685791
    5. '<|end|>' → logprob: -5.37697696685791
    6. '(()' → logprob: -5.75197696685791
    7. '(""))' → logprob: -6.00197696685791
    8. '```' → logprob: -6.25197696685791
    9. '`()' → logprob: -6.50197696685791
    10. '<|end|>' → logprob: -6.75197696685791

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000354769523255527
    2. 'strip' → logprob: -8.250354766845703
    3. ')' → logprob: -9.500354766845703
    4. 'rstrip' → logprob: -11.500354766845703
    5. 'read' → logprob: -12.625354766845703
    6. ' split' → logprob: -13.000354766845703
    7. '(split' → logprob: -13.500354766845703
    8. 'spl' → logprob: -14.375354766845703
    9. '```' → logprob: -14.875354766845703
    10. 's' → logprob: -16.000354766845703

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14821986854076385
    2. '())' → logprob: -2.0232198238372803
    3. '))' → logprob: -5.773220062255859
    4. '()' → logprob: -6.398220062255859
    5. '`)' → logprob: -7.773220062255859
    6. '()))' → logprob: -9.52322006225586
    7. '(' → logprob: -9.64822006225586
    8. ')`' → logprob: -10.14822006225586
    9. '```' → logprob: -10.52322006225586
    10. '('' → logprob: -11.14822006225586

Token 15: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6560205817222595
    2. '#' → logprob: -2.1560206413269043
    3. 'if' → logprob: -2.1560206413269043
    4. '*' → logprob: -2.7810206413269043
    5. '+
' → logprob: -3.5310206413269043
    6. '
' → logprob: -3.7810206413269043
    7. ',' → logprob: -3.9060206413269043
    8. ':' → logprob: -4.156020641326904
    9. '\n' → logprob: -4.281020641326904
    10. ')' → logprob: -4.281020641326904

Token 16: ' K' (ID: 658)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.03866192325949669
    2. 'A' → logprob: -3.5386619567871094
    3. ' ' → logprob: -5.163661956787109
    4. ' K' → logprob: -6.163661956787109
    5. ' B' → logprob: -7.288661956787109
    6. 'K' → logprob: -9.03866195678711
    7. ' C' → logprob: -9.53866195678711
    8. 'B' → logprob: -10.16366195678711
    9. ' a' → logprob: -10.41366195678711
    10. 'C' → logprob: -10.91366195678711

Token 17: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03665237873792648
    2. ' ==' → logprob: -3.9116523265838623
    3. ' <=' → logprob: -5.036652565002441
    4. '>' → logprob: -5.411652565002441
    5. ' <' → logprob: -6.161652565002441
    6. ' >=' → logprob: -6.411652565002441
    7. '==' → logprob: -7.661652565002441
    8. ' ' → logprob: -7.786652565002441
    9. ' !=' → logprob: -8.536652565002441
    10. '<' → logprob: -10.161652565002441

Token 18: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6809900403022766
    2. 'A' → logprob: -0.8059900403022766
    3. ' A' → logprob: -3.555989980697632
    4. ' ' → logprob: -4.555990219116211
    5. '3' → logprob: -5.055990219116211
    6. '4' → logprob: -7.305990219116211
    7. 'B' → logprob: -7.805990219116211
    8. 'C' → logprob: -7.930990219116211
    9. '(A' → logprob: -8.805990219116211
    10. '6' → logprob: -10.180990219116211

Token 19: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.017285408452153206
    2. '2' → logprob: -4.392285346984863
    3. 'C' → logprob: -6.267285346984863
    4. '3' → logprob: -6.267285346984863
    5. 'B' → logprob: -7.642285346984863
    6. '4' → logprob: -8.267285346984863
    7. ' A' → logprob: -9.642285346984863
    8. '(A' → logprob: -9.892285346984863
    9. 'min' → logprob: -10.892285346984863
    10. '1' → logprob: -11.142285346984863

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04779454693198204
    2. '==' → logprob: -3.1727945804595947
    3. ' !=' → logprob: -5.922794342041016
    4. ':' → logprob: -6.297794342041016
    5. ' :' → logprob: -9.297794342041016
    6. '!=' → logprob: -9.422794342041016
    7. '=' → logprob: -10.047794342041016
    8. ' =' → logprob: -10.672794342041016
    9. ' ' → logprob: -11.047794342041016
    10. '>' → logprob: -12.547794342041016

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04915441945195198
    2. ' ' → logprob: -3.42415452003479
    3. '1' → logprob: -4.174154281616211
    4. '2' → logprob: -14.924154281616211
    5. '```' → logprob: -15.236654281616211
    6. 'A' → logprob: -15.861654281616211
    7. '  ' → logprob: -17.17415428161621
    8. ' A' → logprob: -17.36165428161621
    9. '3' → logprob: -17.67415428161621
    10. '   ' → logprob: -17.73665428161621

Token 22: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018480245023965836
    2. '1' → logprob: -4.01848030090332
    3. ' ' → logprob: -8.01848030090332
    4. 'A' → logprob: -15.20598030090332
    5. '2' → logprob: -15.26848030090332
    6. '```' → logprob: -15.33098030090332
    7. '  ' → logprob: -17.39348030090332
    8. ')' → logprob: -17.58098030090332
    9. 'K' → logprob: -17.95598030090332
    10. '

' → logprob: -17.95598030090332

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010409059468656778
    2. ' :' → logprob: -6.876040935516357
    3. ':
' → logprob: -12.1260404586792
    4. '):' → logprob: -14.2510404586792
    5. ':**' → logprob: -14.7510404586792
    6. '>' → logprob: -15.0010404586792
    7. ' and' → logprob: -15.6260404586792
    8. ' :
' → logprob: -15.8760404586792
    9. '>:' → logprob: -16.126041412353516
    10. ':return' → logprob: -16.251041412353516

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7671543955802917
    2. ':' → logprob: -0.8921543955802917
    3. ' print' → logprob: -3.0171544551849365
    4. ' :' → logprob: -3.5171544551849365
    5. ' ' → logprob: -4.017154216766357
    6. 'print' → logprob: -4.642154216766357
    7. '    ' → logprob: -5.517154216766357
    8. ',' → logprob: -5.642154216766357
    9. ')' → logprob: -5.642154216766357
    10. ' ,' → logprob: -6.517154216766357

Token 25: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4190475046634674
    2. 'print' (adapté à ' print') → logprob: -1.419047474861145
    3. ' ' → logprob: -2.4190475940704346
    4. ' A' → logprob: -5.2940473556518555
    5. 'A' → logprob: -6.6690473556518555
    6. '    ' → logprob: -6.7940473556518555
    7. ' if' → logprob: -7.5440473556518555
    8. ')' → logprob: -7.5440473556518555
    9. '   ' → logprob: -7.7940473556518555
    10. ' (' → logprob: -7.7940473556518555

Token 26: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7053956389427185
    2. '(A' → logprob: -0.8303956389427185
    3. '('' → logprob: -3.3303956985473633
    4. '("' → logprob: -3.7053956985473633
    5. '(B' → logprob: -5.580395698547363
    6. '()' → logprob: -6.580395698547363
    7. '((' → logprob: -6.705395698547363
    8. '(max' → logprob: -6.705395698547363
    9. '(f' → logprob: -6.830395698547363
    10. '(C' → logprob: -8.080395698547363

Token 27: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001272258348762989
    2. ' )' → logprob: -6.876272201538086
    3. '+' → logprob: -9.501272201538086
    4. ' +' → logprob: -9.751272201538086
    5. ',' → logprob: -10.001272201538086
    6. '*' → logprob: -10.501272201538086
    7. ')#' → logprob: -12.376272201538086
    8. '))' → logprob: -12.501272201538086
    9. ' ' → logprob: -12.626272201538086
    10. '**' → logprob: -12.876272201538086

Token 28: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014553279615938663
    2. ' A' → logprob: -4.264553070068359
    3. 'C' → logprob: -8.63955307006836
    4. ' ' → logprob: -8.76455307006836
    5. '	A' → logprob: -10.76455307006836
    6. '1' → logprob: -11.63955307006836
    7. '  ' → logprob: -12.01455307006836
    8. ')' → logprob: -12.38955307006836
    9. '   ' → logprob: -12.51455307006836
    10. 'B' → logprob: -12.51455307006836

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0803966224193573
    2. '+' → logprob: -2.9553966522216797
    3. ' +' → logprob: -3.7053966522216797
    4. ' )' → logprob: -8.08039665222168
    5. '+)' → logprob: -9.70539665222168
    6. ')
' → logprob: -9.70539665222168
    7. '+C' → logprob: -9.95539665222168
    8. '))' → logprob: -10.45539665222168
    9. ')+' → logprob: -11.08039665222168
    10. '*' → logprob: -11.08039665222168

Token 30: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.009454186074435711
    2. ' else' → logprob: -5.384454250335693
    3. 'elif' → logprob: -5.759454250335693
    4. '<|end|>' → logprob: -7.134454250335693
    5. '+' → logprob: -7.634454250335693
    6. 'Else' → logprob: -9.134453773498535
    7. ')' → logprob: -9.759453773498535
    8. '_else' → logprob: -9.884453773498535
    9. '```' → logprob: -10.134453773498535
    10. '*' → logprob: -10.259453773498535

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024965754710137844
    2. ':
' → logprob: -8.375249862670898
    3. '   ' → logprob: -11.375249862670898
    4. '):' → logprob: -12.625249862670898
    5. ' :' → logprob: -13.500249862670898
    6. ',' → logprob: -13.750249862670898
    7. '<|end|>' → logprob: -15.250249862670898
    8. ':
' → logprob: -15.375249862670898
    9. '>:' → logprob: -15.500249862670898
    10. ':

' → logprob: -15.875249862670898

Token 32: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7006723284721375
    2. '   ' → logprob: -1.0756723880767822
    3. 'A' → logprob: -2.0756723880767822
    4. 'B' → logprob: -4.325672149658203
    5. ' ' → logprob: -4.825672149658203
    6. 'print' → logprob: -5.450672149658203
    7. ' A' → logprob: -5.450672149658203
    8. ' C' → logprob: -6.075672149658203
    9. '(A' → logprob: -6.075672149658203
    10. '  ' → logprob: -7.075672149658203

Token 33: ' print' (ID: 2123)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8694117069244385
    2. 'print' (adapté à ' print') → logprob: -0.9944117069244385
    3. 'A' → logprob: -1.6194117069244385
    4. '0' → logprob: -5.619411468505859
    5. ' print' → logprob: -6.244411468505859
    6. '   ' → logprob: -6.244411468505859
    7. ' A' → logprob: -6.494411468505859
    8. ' ' → logprob: -6.494411468505859
    9. ' C' → logprob: -7.119411468505859
    10. 'B' → logprob: -7.244411468505859

Token 34: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.622333288192749
    2. '(C' → logprob: -0.872333288192749
    3. '(A' → logprob: -3.622333288192749
    4. '(B' → logprob: -4.122333526611328
    5. '(K' → logprob: -6.747333526611328
    6. '((' → logprob: -7.122333526611328
    7. '(abs' → logprob: -8.872333526611328
    8. '()' → logprob: -9.122333526611328
    9. ' (' → logprob: -10.122333526611328
    10. '('' → logprob: -10.372333526611328

Token 35: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18318651616573334
    2. '-' → logprob: -2.4331865310668945
    3. ')' → logprob: -2.5581865310668945
    4. '+' → logprob: -6.9331865310668945
    5. '-B' → logprob: -7.4331865310668945
    6. ' +' → logprob: -7.5581865310668945
    7. '-C' → logprob: -10.058186531066895
    8. '<|end|>' → logprob: -11.683186531066895
    9. '-)' → logprob: -11.683186531066895
    10. ' )' → logprob: -11.933186531066895

Token 36: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0021301566157490015
    2. ' B' → logprob: -6.502130031585693
    3. 'C' → logprob: -7.377130031585693
    4. ' C' → logprob: -13.752130508422852
    5. ' ' → logprob: -14.627130508422852
    6. '	B' → logprob: -15.127130508422852
    7. ')' → logprob: -15.877130508422852
    8. '  ' → logprob: -16.00213050842285
    9. '   ' → logprob: -16.25213050842285
    10. '-B' → logprob: -16.62713050842285

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')
' → logprob: -16.375001907348633
    5. '+' → logprob: -16.625001907348633
    6. ')`' → logprob: -16.750001907348633
    7. '`)' → logprob: -17.000001907348633
    8. '())' → logprob: -17.375001907348633
    9. '```' → logprob: -17.750001907348633
    10. '()' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 7
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 20.00%
Précision adaptée (1ère position): 20.00%
Précision (top 10): 82.86%
================================================================================
