================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD = 10**9 + 7

def framod(n, mod):
    result = 1
    for i in range(1, n + 1):
        result = (result * i) % mod
    return result

def power(n, r, mod):
    result = 1
    while r > 0:
        if r % 2 == 1:
            result = (result * n) % mod
        n = (n * n) % mod
        r //= 2
    return result

def comb(n, k, mod):
    if k < 0 or k > n:
        return 0
    a = framod(n, mod)
    b = framod(k, mod)
    c = framod(n - k, mod)
    return (a * power(b, mod - 2, mod) * power(c, mod - 2, mod)) % mod

def main():
    N, K = map(int, input().split())
    for i in range(1, K + 1):
        if i <= N - K + 1:
            x = comb(N - K + 1, i, MOD)
            y = comb(K - 1, i - 1, MOD)
            print((x * y) % MOD)
        else:
            print(0)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16071940958499908
    2. '10' → logprob: -1.910719394683838
    3. ' ' → logprob: -8.285719871520996
    4. '```' → logprob: -9.035719871520996
    5. '1' → logprob: -9.785719871520996
    6. '`' → logprob: -10.410719871520996
    7. '(' → logprob: -10.535719871520996
    8. '998' → logprob: -12.285719871520996
    9. '123' → logprob: -13.410719871520996
    10. '0' → logprob: -13.535719871520996

Token 4: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.24681366980075836
    2. '0' → logprob: -1.7468136548995972
    3. '_' → logprob: -3.7468137741088867
    4. ' **' → logprob: -4.371813774108887
    5. '000' → logprob: -6.121813774108887
    6. '^' → logprob: -6.121813774108887
    7. '*' → logprob: -6.246813774108887
    8. '#' → logprob: -7.746813774108887
    9. ',' → logprob: -8.621813774108887
    10. '\' → logprob: -8.746813774108887

Token 5: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.842555426876061e-06
    2. '09' → logprob: -12.250004768371582
    3. ' ' → logprob: -16.8750057220459
    4. '```' → logprob: -18.0000057220459
    5. '**' → logprob: -21.0000057220459
    6. '^' → logprob: -22.0000057220459
    7. '９' → logprob: -22.2500057220459
    8. '0' → logprob: -22.5000057220459
    9. '``' → logprob: -22.7500057220459
    10. '4' → logprob: -22.8750057220459

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005860374658368528
    2. ' +' → logprob: -7.500586032867432
    3. '7' → logprob: -10.37558650970459
    4. '+
' → logprob: -14.25058650970459
    5. '```' → logprob: -14.37558650970459
    6. '＋' → logprob: -15.75058650970459
    7. '\' → logprob: -16.375585556030273
    8. '+

' → logprob: -16.500585556030273
    9. '+x' → logprob: -16.875585556030273
    10. '"+"' → logprob: -17.625585556030273

Token 7: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '+' → logprob: -15.500007629394531
    4. '```' → logprob: -17.12500762939453
    5. ' ' → logprob: -18.25000762939453
    6. '07' → logprob: -18.37500762939453
    7. '37' → logprob: -19.06250762939453
    8. '9' → logprob: -19.25000762939453
    9. '   ' → logprob: -19.37500762939453
    10. '_' → logprob: -19.75000762939453

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '+' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. '37' → logprob: -19.25
    6. '07' → logprob: -20.0
    7. '``' → logprob: -21.0
    8. '   ' → logprob: -21.375
    9. '9' → logprob: -21.375
    10. '17' → logprob: -21.625

Token 9: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3510281443595886
    2. '*' → logprob: -2.7260282039642334
    3. '\' → logprob: -2.9760282039642334
    4. '\n' → logprob: -2.9760282039642334
    5. '`' → logprob: -3.2260282039642334
    6. '**' → logprob: -3.8510282039642334
    7. '<|end|>' → logprob: -4.101027965545654
    8. '#' → logprob: -4.226027965545654
    9. '
' → logprob: -4.351027965545654
    10. '``' → logprob: -5.476027965545654

Token 10: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.310680627822876
    2. '\n' → logprob: -1.435680627822876
    3. '\' → logprob: -1.560680627822876
    4. '
' → logprob: -2.560680627822876
    5. '`' → logprob: -2.810680627822876
    6. '**' → logprob: -3.310680627822876
    7. '*' → logprob: -3.435680627822876
    8. '=' → logprob: -4.185680389404297
    9. ',' → logprob: -4.310680389404297
    10. ')' → logprob: -4.935680389404297

Token 11: ' fram' (ID: 19795)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005935432855039835
    2. ' factorial' → logprob: -5.7559356689453125
    3. ' add' → logprob: -7.1309356689453125
    4. ' pow' → logprob: -7.8809356689453125
    5. ' space' → logprob: -8.380935668945312
    6. ' f' → logprob: -8.505935668945312
    7. ' mod' → logprob: -9.005935668945312
    8. ' def' → logprob: -9.130935668945312
    9. ' func' → logprob: -9.505935668945312
    10. ' dfs' → logprob: -9.630935668945312

Token 12: 'od' (ID: 368)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05962369590997696
    2. 'ed' → logprob: -3.9346237182617188
    3. 'ing' → logprob: -4.184623718261719
    4. 'el' → logprob: -4.434623718261719
    5. 'er' → logprob: -5.559623718261719
    6. 'es' → logprob: -6.434623718261719
    7. 'edata' → logprob: -6.559623718261719
    8. 'elift' → logprob: -7.434623718261719
    9. 'ingham' → logprob: -7.684623718261719
    10. 'ex' → logprob: -8.059623718261719

Token 13: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020202452316880226
    2. '_' → logprob: -4.89520263671875
    3. ' (' → logprob: -5.27020263671875
    4. '[' → logprob: -6.64520263671875
    5. '(a' → logprob: -6.89520263671875
    6. '```' → logprob: -7.02020263671875
    7. 'a' → logprob: -7.89520263671875
    8. 'ar' → logprob: -8.14520263671875
    9. 'l' → logprob: -8.52020263671875
    10. 'ul' → logprob: -8.52020263671875

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9130464196205139
    2. ',' → logprob: -1.0380463600158691
    3. ')' → logprob: -1.4130463600158691
    4. ',n' → logprob: -7.788046360015869
    5. ' ,' → logprob: -8.913046836853027
    6. ' ):' → logprob: -9.038046836853027
    7. ' )' → logprob: -9.538046836853027
    8. '**' → logprob: -9.663046836853027
    9. ':' → logprob: -9.788046836853027
    10. '*' → logprob: -10.413046836853027

Token 15: ' mod' (ID: 1812)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3749380111694336
    2. 'm' → logprob: -2.1249380111694336
    3. ' k' → logprob: -2.1249380111694336
    4. ' m' → logprob: -3.2499380111694336
    5. 'r' → logprob: -3.8749380111694336
    6. ' r' → logprob: -4.499938011169434
    7. 'p' → logprob: -6.749938011169434
    8. ' p' → logprob: -7.374938011169434
    9. 'd' → logprob: -7.624938011169434
    10. ' d' → logprob: -8.249938011169434

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009318608790636063
    2. ')' → logprob: -4.759318828582764
    3. ',' → logprob: -7.509318828582764
    4. '=' → logprob: -9.259318351745605
    5. ' ):' → logprob: -11.009318351745605
    6. ':' → logprob: -11.509318351745605
    7. ')=' → logprob: -11.884318351745605
    8. '):
' → logprob: -11.884318351745605
    9. '**' → logprob: -12.384318351745605
    10. '*' → logprob: -12.384318351745605

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.142157182097435
    2. ' :' → logprob: -2.6421570777893066
    3. ' ' → logprob: -3.5171570777893066
    4. '   ' → logprob: -4.517157077789307
    5. '):' → logprob: -5.017157077789307
    6. '**' → logprob: -6.017157077789307
    7. '```' → logprob: -6.142157077789307
    8. ')' → logprob: -6.267157077789307
    9. ' return' → logprob: -7.517157077789307
    10. '*' → logprob: -7.642157077789307

Token 18: ' result' (ID: 1534)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4673023521900177
    2. '   ' → logprob: -2.4673023223876953
    3. ' result' → logprob: -2.5923023223876953
    4. ' res' → logprob: -3.0923023223876953
    5. ' ' → logprob: -3.3423023223876953
    6. 'if' → logprob: -3.7173023223876953
    7. '0' → logprob: -3.8423023223876953
    8. 'result' (adapté à ' result') → logprob: -4.092302322387695
    9. '```' → logprob: -4.217302322387695
    10. ' f' → logprob: -4.592302322387695

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22785919904708862
    2. '=' → logprob: -1.6028592586517334
    3. ' ' → logprob: -6.102859020233154
    4. ',' → logprob: -9.477859497070312
    5. ' *=' → logprob: -10.852859497070312
    6. '_' → logprob: -11.102859497070312
    7. '   ' → logprob: -11.602859497070312
    8. '  ' → logprob: -11.727859497070312
    9. 's' → logprob: -11.852859497070312
    10. '<|end|>' → logprob: -11.852859497070312

Token 20: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044135987758636475
    2. ' ' → logprob: -3.1691360473632812
    3. 'n' → logprob: -7.794136047363281
    4. '0' → logprob: -7.794136047363281
    5. ' n' → logprob: -8.544136047363281
    6. '[' → logprob: -10.044136047363281
    7. 'pow' → logprob: -10.669136047363281
    8. ' [' → logprob: -11.231636047363281
    9. '[n' → logprob: -11.731636047363281
    10. '2' → logprob: -12.106636047363281

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021962920436635613
    2. 'n' → logprob: -9.500219345092773
    3. '0' → logprob: -9.625219345092773
    4. '[' → logprob: -10.375219345092773
    5. '[n' → logprob: -10.625219345092773
    6. ' ' → logprob: -12.500219345092773
    7. '(n' → logprob: -12.625219345092773
    8. 'result' → logprob: -12.625219345092773
    9. 'factor' → logprob: -12.750219345092773
    10. '(' → logprob: -12.875219345092773

Token 22: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4148918390274048
    2. ' ' → logprob: -1.5398918390274048
    3. '
' → logprob: -1.9148918390274048
    4. '<|end|>' → logprob: -2.0398917198181152
    5. ',' → logprob: -2.2898917198181152
    6. 'for' → logprob: -2.5398917198181152
    7. ')' → logprob: -4.039891719818115
    8. '   ' → logprob: -4.164891719818115
    9. '<|end|>' → logprob: -4.789891719818115
    10. ' 
' → logprob: -5.164891719818115

Token 23: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1769523620605469
    2. ',' → logprob: -1.4269523620605469
    3. ' for' → logprob: -1.6769523620605469
    4. ')' → logprob: -2.676952362060547
    5. 'for' → logprob: -2.676952362060547
    6. ' ' → logprob: -3.176952362060547
    7. '<|end|>' → logprob: -3.176952362060547
    8. ' *' → logprob: -3.676952362060547
    9. 'def' → logprob: -6.051952362060547
    10. '<|end|>' → logprob: -6.176952362060547

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11927712708711624
    2. 'for' (adapté à ' for') → logprob: -2.494277238845825
    3. '   ' → logprob: -3.744277238845825
    4. ' ' → logprob: -5.744277000427246
    5. '
' → logprob: -7.619277000427246
    6. '```' → logprob: -7.744277000427246
    7. '\t' → logprob: -7.744277000427246
    8. ' 
' → logprob: -7.869277000427246
    9. '\n' → logprob: -7.994277000427246
    10. '    ' → logprob: -8.369277000427246

Token 25: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013010449707508087
    2. ' ' → logprob: -4.638010501861572
    3. 'i' → logprob: -5.763010501861572
    4. ' _' → logprob: -10.013010025024414
    5. ' in' → logprob: -10.763010025024414
    6. ')' → logprob: -11.388010025024414
    7. '_' → logprob: -11.638010025024414
    8. ' range' → logprob: -12.013010025024414
    9. '	i' → logprob: -12.263010025024414
    10. '  ' → logprob: -13.513010025024414

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026599371805787086
    2. 'in' → logprob: -3.651599407196045
    3. ' ' → logprob: -8.276598930358887
    4. '	in' → logprob: -11.276598930358887
    5. ' i' → logprob: -12.276598930358887
    6. '  ' → logprob: -12.276598930358887
    7. '```' → logprob: -12.276598930358887
    8. '+' → logprob: -12.651598930358887
    9. 'n' → logprob: -12.776598930358887
    10. '1' → logprob: -12.776598930358887

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00408516637980938
    2. 'range' → logprob: -5.504085063934326
    3. '	range' → logprob: -12.879085540771484
    4. ' ' → logprob: -13.754085540771484
    5. ' xrange' → logprob: -14.129085540771484
    6. '```' → logprob: -14.254085540771484
    7. '(range' → logprob: -14.254085540771484
    8. ' ' → logprob: -15.254085540771484
    9. '1' → logprob: -15.754085540771484
    10. '  ' → logprob: -15.754085540771484

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0802738870552275e-05
    2. ' (' → logprob: -11.87501049041748
    3. '(n' → logprob: -13.12501049041748
    4. '1' → logprob: -14.00001049041748
    5. '(
' → logprob: -14.62501049041748
    6. '(i' → logprob: -14.87501049041748
    7. ' ' → logprob: -15.87501049041748
    8. '((' → logprob: -18.500011444091797
    9. '(

' → logprob: -18.500011444091797
    10. '(range' → logprob: -18.875011444091797

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01796274073421955
    2. '2' → logprob: -4.14296293258667
    3. ' ' → logprob: -6.39296293258667
    4. 'n' → logprob: -8.392962455749512
    5. ' n' → logprob: -10.642962455749512
    6. ')' → logprob: -13.767962455749512
    7. '```' → logprob: -14.017962455749512
    8. '   ' → logprob: -15.017962455749512
    9. ')n' → logprob: -15.892962455749512
    10. ' )' → logprob: -15.955462455749512

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006877222564071417
    2. ',n' → logprob: -5.381877422332764
    3. ' ,' → logprob: -6.131877422332764
    4. 'n' → logprob: -9.756876945495605
    5. '(n' → logprob: -12.006876945495605
    6. ' n' → logprob: -12.256876945495605
    7. '   ' → logprob: -12.381876945495605
    8. ' ' → logprob: -12.381876945495605
    9. '```' → logprob: -13.631876945495605
    10. ' to' → logprob: -14.256876945495605

Token 31: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931484937667847
    2. ' n' → logprob: -0.6931484937667847
    3. ')n' → logprob: -13.943148612976074
    4. '	n' → logprob: -15.193148612976074
    5. ')' → logprob: -16.818147659301758
    6. ' ' → logprob: -17.068147659301758
    7. ' ' → logprob: -17.068147659301758
    8. '```' → logprob: -17.568147659301758
    9. '(n' → logprob: -18.068147659301758
    10. '_n' → logprob: -19.193147659301758

Token 32: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759421586990356
    2. ' +' → logprob: -0.8259421586990356
    3. ' ' → logprob: -14.700942039489746
    4. ')' → logprob: -14.700942039489746
    5. ' +
' → logprob: -14.700942039489746
    6. '1' → logprob: -15.200942039489746
    7. '+i' → logprob: -15.575942039489746
    8. '):
' → logprob: -15.700942039489746
    9. ' )' → logprob: -16.200942993164062
    10. '+n' → logprob: -16.200942993164062

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975083328783512
    2. ' ' → logprob: -3.5297508239746094
    3. '```' → logprob: -15.40475082397461
    4. '2' → logprob: -16.27975082397461
    5. ')' → logprob: -17.02975082397461
    6. ' ' → logprob: -17.15475082397461
    7. '۱' → logprob: -18.34225082397461
    8. '<|end|>' → logprob: -18.52975082397461
    9. '
' → logprob: -19.02975082397461
    10. ' )' → logprob: -19.59225082397461

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -16.500139236450195
    4. '2' → logprob: -17.062639236450195
    5. ')' → logprob: -17.250139236450195
    6. '   ' → logprob: -18.125139236450195
    7. '۱' → logprob: -18.437639236450195
    8. '  ' → logprob: -18.625139236450195
    9. '১' → logprob: -19.312639236450195
    10. '
' → logprob: -19.375139236450195

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003371630795300007
    2. ')' → logprob: -6.253371715545654
    3. '):
' → logprob: -6.628371715545654
    4. ':' → logprob: -10.253371238708496
    5. '   ' → logprob: -10.628371238708496
    6. ' ):' → logprob: -10.753371238708496
    7. ',' → logprob: -10.878371238708496
    8. '):
' → logprob: -11.878371238708496
    9. '**' → logprob: -12.878371238708496
    10. ' ' → logprob: -12.878371238708496

Token 36: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4463974237442017
    2. '       ' → logprob: -1.4463974237442017
    3. '    ' → logprob: -1.8213974237442017
    4. ' result' → logprob: -1.8213974237442017
    5. 'result' → logprob: -2.071397304534912
    6. '   ' → logprob: -3.446397304534912
    7. '*' → logprob: -4.196397304534912
    8. ' (' → logprob: -5.196397304534912
    9. '<|end|>' → logprob: -5.196397304534912
    10. ' 
' → logprob: -5.321397304534912

Token 37: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.21213455498218536
    2. 'result' (adapté à ' result') → logprob: -1.837134599685669
    3. ' ' → logprob: -3.462134599685669
    4. '<|end|>' → logprob: -8.33713436126709
    5. ' 
' → logprob: -8.96213436126709
    6. ' ' → logprob: -9.83713436126709
    7. '```' → logprob: -10.71213436126709
    8. '(result' → logprob: -11.71213436126709
    9. '	result' → logprob: -11.96213436126709
    10. ',result' → logprob: -11.96213436126709

Token 38: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.30118250846862793
    2. ' *=' → logprob: -2.176182508468628
    3. ' *' → logprob: -2.676182508468628
    4. '=' → logprob: -3.176182508468628
    5. ' =' → logprob: -3.926182508468628
    6. '*=' → logprob: -4.176182746887207
    7. ' ' → logprob: -7.926182746887207
    8. '```' → logprob: -8.801182746887207
    9. '**' → logprob: -8.926182746887207
    10. ' ' → logprob: -9.426182746887207

Token 39: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38785991072654724
    2. '(result' → logprob: -1.1378599405288696
    3. ' result' → logprob: -7.63785982131958
    4. 'result' → logprob: -7.76285982131958
    5. '(' → logprob: -9.512860298156738
    6. '(i' → logprob: -13.387860298156738
    7. '(res' → logprob: -13.762860298156738
    8. '[result' → logprob: -13.762860298156738
    9. ',result' → logprob: -14.137860298156738
    10. '(f' → logprob: -14.262860298156738

Token 40: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.005929743405431509
    2. ' result' → logprob: -5.130929946899414
    3. '(result' → logprob: -14.755929946899414
    4. 'i' → logprob: -15.005929946899414
    5. '	result' → logprob: -15.505929946899414
    6. '   ' → logprob: -16.505929946899414
    7. ' i' → logprob: -17.005929946899414
    8. ' ' → logprob: -17.130929946899414
    9. '```' → logprob: -17.130929946899414
    10. '$result' → logprob: -17.255929946899414

Token 41: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38694098591804504
    2. '*' → logprob: -1.1369409561157227
    3. '*i' → logprob: -9.636940956115723
    4. ' ' → logprob: -12.761940956115723
    5. ' ' → logprob: -13.886940956115723
    6. '**' → logprob: -14.761940956115723
    7. '*object' → logprob: -16.13694190979004
    8. ' **' → logprob: -16.88694190979004
    9. '```' → logprob: -16.88694190979004
    10. 'i' → logprob: -17.32444190979004

Token 42: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043003082275390625
    2. ' i' → logprob: -3.1680030822753906
    3. '(i' → logprob: -13.29300308227539
    4. ' (' → logprob: -14.54300308227539
    5. ')' → logprob: -14.91800308227539
    6. ' ' → logprob: -15.04300308227539
    7. ')i' → logprob: -15.29300308227539
    8. '	i' → logprob: -15.66800308227539
    9. '   ' → logprob: -15.79300308227539
    10. '(' → logprob: -16.16800308227539

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.028536492725834e-05
    2. ' )' → logprob: -9.750070571899414
    3. ')%' → logprob: -11.375070571899414
    4. '%' → logprob: -15.625070571899414
    5. '`)' → logprob: -15.875070571899414
    6. '```' → logprob: -16.375070571899414
    7. ')`' → logprob: -16.625070571899414
    8. '   ' → logprob: -17.625070571899414
    9. ')
' → logprob: -17.875070571899414
    10. '')' → logprob: -18.125070571899414

Token 44: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06274855136871338
    2. '%' → logprob: -2.812748432159424
    3. ')' → logprob: -7.187748432159424
    4. ')%' → logprob: -11.187748908996582
    5. ' ' → logprob: -12.687748908996582
    6. '%n' → logprob: -13.062748908996582
    7. '`' → logprob: -14.062748908996582
    8. ' )' → logprob: -14.062748908996582
    9. '```' → logprob: -14.062748908996582
    10. '%i' → logprob: -14.312748908996582

Token 45: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.18050426244735718
    2. 'mod' → logprob: -1.805504322052002
    3. ' MOD' → logprob: -7.805504322052002
    4. '(mod' → logprob: -8.805503845214844
    5. 'MOD' → logprob: -9.055503845214844
    6. ' ' → logprob: -10.180503845214844
    7. ' ' → logprob: -10.680503845214844
    8. '_mod' → logprob: -12.305503845214844
    9. '	mod' → logprob: -12.305503845214844
    10. '```' → logprob: -12.680503845214844

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1754378080368042
    2. ' return' → logprob: -2.9254379272460938
    3. '
' → logprob: -3.3004379272460938
    4. ' 
' → logprob: -3.6754379272460938
    5. 'return' → logprob: -4.175437927246094
    6. ' ' → logprob: -4.550437927246094
    7. '    
' → logprob: -4.675437927246094
    8. '  
' → logprob: -5.550437927246094
    9. '<|end|>' → logprob: -6.925437927246094
    10. '	return' → logprob: -7.050437927246094

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044242966920137405
    2. ' return' → logprob: -3.9192428588867188
    3. ' 
' → logprob: -5.169242858886719
    4. 'return' → logprob: -5.169242858886719
    5. ' ' → logprob: -5.294242858886719
    6. '    
' → logprob: -6.044242858886719
    7. '
' → logprob: -6.169242858886719
    8. '	return' → logprob: -7.169242858886719
    9. '  
' → logprob: -7.169242858886719
    10. '  ' → logprob: -8.419242858886719

Token 48: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09343701601028442
    2. ' return' → logprob: -2.7184369564056396
    3. 'return' (adapté à ' return') → logprob: -3.8434369564056396
    4. ' ' → logprob: -7.093437194824219
    5. '	return' → logprob: -8.343437194824219
    6. '<|end|>' → logprob: -8.593437194824219
    7. ':return' → logprob: -8.843437194824219
    8. '```' → logprob: -9.218437194824219
    9. '  ' → logprob: -9.343437194824219
    10. '    ' → logprob: -9.843437194824219

Token 49: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12692831456661224
    2. ' result' → logprob: -2.1269283294677734
    3. '(result' → logprob: -15.751928329467773
    4. ' ' → logprob: -17.501928329467773
    5. '	result' → logprob: -17.626928329467773
    6. '[result' → logprob: -18.376928329467773
    7. ' ' → logprob: -18.626928329467773
    8. '$result' → logprob: -19.001928329467773
    9. '_result' → logprob: -19.126928329467773
    10. 'results' → logprob: -19.376928329467773

Token 50: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41322389245033264
    2. ')' → logprob: -1.7882238626480103
    3. '
' → logprob: -2.7882239818573
    4. 'def' → logprob: -3.2882239818573
    5. '(
' → logprob: -3.6632239818573
    6. '#' → logprob: -4.538223743438721
    7. '<|end|>' → logprob: -5.038223743438721
    8. 'n' → logprob: -5.288223743438721
    9. '\' → logprob: -5.288223743438721
    10. '_' → logprob: -5.913223743438721

Token 51: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6457738876342773
    2. 'def' → logprob: -1.3957738876342773
    3. '

' → logprob: -2.2707738876342773
    4. '\n' → logprob: -3.2707738876342773
    5. '*' → logprob: -4.020773887634277
    6. '(' → logprob: -4.270773887634277
    7. '```' → logprob: -4.395773887634277
    8. 'n' → logprob: -4.520773887634277
    9. '\' → logprob: -4.645773887634277
    10. '#' → logprob: -5.395773887634277

Token 52: ' power' (ID: 3470)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.8322829008102417
    2. ' fac' → logprob: -2.0822830200195312
    3. ' fast' → logprob: -2.0822830200195312
    4. ' pow' → logprob: -2.3322830200195312
    5. ' bin' → logprob: -2.5822830200195312
    6. ' fact' → logprob: -2.5822830200195312
    7. ' add' → logprob: -3.0822830200195312
    8. ' f' → logprob: -3.3322830200195312
    9. ' prime' → logprob: -3.7072830200195312
    10. ' fram' → logprob: -3.7072830200195312

Token 53: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.913265239447355e-05
    2. ' (' → logprob: -10.625099182128906
    3. '(base' → logprob: -11.000099182128906
    4. '(x' → logprob: -11.250099182128906
    5. '<|end|>' → logprob: -11.625099182128906
    6. '(n' → logprob: -12.000099182128906
    7. '(
' → logprob: -12.750099182128906
    8. '(a' → logprob: -13.000099182128906
    9. '(unit' → logprob: -13.500099182128906
    10. '(power' → logprob: -13.500099182128906

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01033768430352211
    2. ',n' → logprob: -5.010337829589844
    3. ' ,' → logprob: -5.760337829589844
    4. '(n' → logprob: -9.010337829589844
    5. ',p' → logprob: -9.260337829589844
    6. ' ' → logprob: -10.010337829589844
    7. '   ' → logprob: -10.010337829589844
    8. ',k' → logprob: -10.260337829589844
    9. ',num' → logprob: -10.885337829589844
    10. ')' → logprob: -10.885337829589844

Token 55: ' r' (ID: 428)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.942071557044983
    2. 'k' → logprob: -2.0670714378356934
    3. ' k' → logprob: -2.0670714378356934
    4. 'mod' → logprob: -2.0670714378356934
    5. 'm' → logprob: -2.1920714378356934
    6. 'p' → logprob: -2.8170714378356934
    7. 'x' → logprob: -2.8170714378356934
    8. ' m' → logprob: -2.8170714378356934
    9. ' ' → logprob: -3.4420714378356934
    10. '2' → logprob: -3.4420714378356934

Token 56: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01358002983033657
    2. ')' → logprob: -4.638579845428467
    3. ',' → logprob: -5.638579845428467
    4. '):
' → logprob: -8.763580322265625
    5. ' ):' → logprob: -10.388580322265625
    6. ',n' → logprob: -11.388580322265625
    7. '**' → logprob: -11.388580322265625
    8. '(n' → logprob: -11.388580322265625
    9. '(' → logprob: -12.138580322265625
    10. '):
' → logprob: -12.263580322265625

Token 57: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.3135668635368347
    2. 'mod' → logprob: -1.3135669231414795
    3. 'MOD' → logprob: -8.688567161560059
    4. 'm' → logprob: -9.688567161560059
    5. ' MOD' → logprob: -10.188567161560059
    6. ' m' → logprob: -10.813567161560059
    7. '	mod' → logprob: -11.688567161560059
    8. ')' → logprob: -13.063567161560059
    9. ' ' → logprob: -13.563567161560059
    10. ' modulus' → logprob: -13.938567161560059

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.317247167928144e-05
    2. ')' → logprob: -9.500093460083008
    3. ' ):' → logprob: -11.625093460083008
    4. ':' → logprob: -12.000093460083008
    5. '):
' → logprob: -12.875093460083008
    6. ''):' → logprob: -15.500093460083008
    7. ',' → logprob: -15.875093460083008
    8. '=' → logprob: -16.375093460083008
    9. '}:' → logprob: -17.125093460083008
    10. '):
' → logprob: -17.250093460083008

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43598029017448425
    2. ':' → logprob: -1.3109803199768066
    3. ' ' → logprob: -2.9359803199768066
    4. ' :' → logprob: -4.185980319976807
    5. '    ' → logprob: -5.060980319976807
    6. '  ' → logprob: -6.810980319976807
    7. '):' → logprob: -6.935980319976807
    8. '(' → logprob: -7.060980319976807
    9. '```' → logprob: -7.185980319976807
    10. ':
' → logprob: -7.435980319976807

Token 60: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6295645236968994
    2. '   ' → logprob: -1.5045645236968994
    3. ' if' → logprob: -2.2545645236968994
    4. ' res' → logprob: -2.3795645236968994
    5. 'result' (adapté à ' result') → logprob: -3.1295645236968994
    6. 'res' → logprob: -6.50456428527832
    7. 'if' → logprob: -6.62956428527832
    8. ' ans' → logprob: -7.87956428527832
    9. '```' → logprob: -8.87956428527832
    10. ' ' → logprob: -9.00456428527832

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020668594166636467
    2. '=' → logprob: -3.8956685066223145
    3. ' ' → logprob: -9.270668983459473
    4. '<|end|>' → logprob: -10.895668983459473
    5. ' =
' → logprob: -11.770668983459473
    6. '<|end|>' → logprob: -13.770668983459473
    7. ')' → logprob: -14.020668983459473
    8. ' =)' → logprob: -14.145668983459473
    9. ',' → logprob: -14.770668983459473
    10. ' <<=' → logprob: -14.895668983459473

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033645693212747574
    2. ' ' → logprob: -3.4086456298828125
    3. '   ' → logprob: -17.158645629882812
    4. ' ' → logprob: -18.033645629882812
    5. 'pow' → logprob: -18.658645629882812
    6. '```' → logprob: -19.346145629882812
    7. '۱' → logprob: -19.408645629882812
    8. '  ' → logprob: -20.096145629882812
    9. '	' → logprob: -20.096145629882812
    10. '0' → logprob: -20.471145629882812

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. 'pow' → logprob: -16.5
    4. '```' → logprob: -18.375
    5. '۱' → logprob: -18.875
    6. '`' → logprob: -20.1875
    7. '１' → logprob: -20.25
    8. '১' → logprob: -20.5
    9. '१' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8145444393157959
    2. ' 
' → logprob: -1.439544439315796
    3. '    
' → logprob: -2.314544439315796
    4. ' while' → logprob: -3.064544439315796
    5. '<|end|>' → logprob: -3.064544439315796
    6. '
' → logprob: -3.189544439315796
    7. ' ' → logprob: -3.439544439315796
    8. ' for' → logprob: -4.189544677734375
    9. '  
' → logprob: -4.314544677734375
    10. '   
' → logprob: -5.064544677734375

Token 66: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.19322477281093597
    2. ' ' → logprob: -2.0682246685028076
    3. ' n' → logprob: -3.5682246685028076
    4. '    ' → logprob: -5.318224906921387
    5. 'while' (adapté à ' while') → logprob: -5.568224906921387
    6. ' for' → logprob: -5.693224906921387
    7. ' pow' → logprob: -5.818224906921387
    8. '   ' → logprob: -6.318224906921387
    9. ' 
' → logprob: -6.693224906921387
    10. 'n' → logprob: -7.443224906921387

Token 67: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2014147937297821
    2. ' r' → logprob: -1.7014148235321045
    3. '(r' → logprob: -14.076415061950684
    4. ' ' → logprob: -15.326415061950684
    5. '	r' → logprob: -15.451415061950684
    6. '   ' → logprob: -16.076414108276367
    7. '_r' → logprob: -16.326414108276367
    8. '[r' → logprob: -17.326414108276367
    9. '```' → logprob: -17.326414108276367
    10. '    ' → logprob: -17.576414108276367

Token 68: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1269463747739792
    2. '>' → logprob: -2.126946449279785
    3. ':' → logprob: -11.001946449279785
    4. ' ' → logprob: -14.501946449279785
    5. '">' → logprob: -15.251946449279785
    6. ' ' → logprob: -15.501946449279785
    7. '&gt' → logprob: -15.626946449279785
    8. '0' → logprob: -15.626946449279785
    9. '>:' → logprob: -16.75194549560547
    10. '```' → logprob: -17.00194549560547

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020678490400314
    2. ' ' → logprob: -2.3502068519592285
    3. '=' → logprob: -16.72520637512207
    4. '>' → logprob: -17.85020637512207
    5. '   ' → logprob: -18.22520637512207
    6. '  ' → logprob: -18.47520637512207
    7. '۰' → logprob: -18.72520637512207
    8. ' ' → logprob: -19.10020637512207
    9. '    ' → logprob: -19.22520637512207
    10. '<|end|>' → logprob: -19.22520637512207

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '=' → logprob: -19.50007438659668
    4. '۰' → logprob: -19.87507438659668
    5. '```' → logprob: -20.75007438659668
    6. '   ' → logprob: -21.62507438659668
    7. 'zero' → logprob: -22.37507438659668
    8. ' ' → logprob: -22.50007438659668
    9. '  ' → logprob: -22.50007438659668
    10. '1' → logprob: -22.62507438659668

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1660512238740921
    2. '       ' → logprob: -1.9160512685775757
    3. ':
' → logprob: -5.916051387786865
    4. '   ' → logprob: -6.541051387786865
    5. '<|end|>' → logprob: -7.291051387786865
    6. ',' → logprob: -7.541051387786865
    7. '<|end|>' → logprob: -9.166050910949707
    8. ' :' → logprob: -9.666050910949707
    9. '.' → logprob: -10.416050910949707
    10. ' ' → logprob: -10.541050910949707

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14925336837768555
    2. ' 
' → logprob: -2.1492533683776855
    3. ' ' → logprob: -4.3992533683776855
    4. '   ' → logprob: -6.1492533683776855
    5. '<|end|>' → logprob: -6.3992533683776855
    6. '        
' → logprob: -6.5242533683776855
    7. '    ' → logprob: -6.5242533683776855
    8. '    
' → logprob: -6.8992533683776855
    9. '
' → logprob: -8.024253845214844
    10. '     
' → logprob: -8.149253845214844

Token 73: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04821164906024933
    2. ' 
' → logprob: -3.5482115745544434
    3. 'n' → logprob: -5.548211574554443
    4. ' if' → logprob: -5.798211574554443
    5. '        ' → logprob: -6.048211574554443
    6. '       ' → logprob: -6.173211574554443
    7. '        
' → logprob: -6.798211574554443
    8. ' n' → logprob: -7.173211574554443
    9. ' ' → logprob: -7.173211574554443
    10. 'result' → logprob: -7.298211574554443

Token 74: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.022394288331270218
    2. 'r' → logprob: -4.147394180297852
    3. ' (' → logprob: -5.147394180297852
    4. ' ' → logprob: -7.772394180297852
    5. '(r' → logprob: -9.397394180297852
    6. '(' → logprob: -11.397394180297852
    7. ' ' → logprob: -12.147394180297852
    8. '	r' → logprob: -13.147394180297852
    9. '```' → logprob: -15.022394180297852
    10. '_r' → logprob: -15.147394180297852

Token 75: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5863938927650452
    2. ' &' → logprob: -0.8363938927650452
    3. '%' → logprob: -5.2113938331604
    4. ' ' → logprob: -5.4613938331604
    5. '&' → logprob: -7.3363938331604
    6. ' ' → logprob: -10.586394309997559
    7. ' >' → logprob: -12.461394309997559
    8. '>' → logprob: -12.836394309997559
    9. '    ' → logprob: -13.211394309997559
    10. '   ' → logprob: -13.336394309997559

Token 76: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043162284418940544
    2. ' ' → logprob: -7.750431537628174
    3. '```' → logprob: -14.375432014465332
    4. '   ' → logprob: -15.625432014465332
    5. '<|end|>' → logprob: -16.750431060791016
    6. '  ' → logprob: -17.562931060791016
    7. '۲' → logprob: -17.750431060791016
    8. '    ' → logprob: -18.250431060791016
    9. '>' → logprob: -18.250431060791016
    10. '{' → logprob: -18.250431060791016

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.2500057220459
    4. '۲' → logprob: -17.3750057220459
    5. '   ' → logprob: -18.3750057220459
    6. '٢' → logprob: -18.7500057220459
    7. '২' → logprob: -19.0000057220459
    8. '२' → logprob: -19.0625057220459
    9. '{' → logprob: -19.1875057220459
    10. '  ' → logprob: -19.8125057220459

Token 78: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3500378429889679
    2. ' ==' → logprob: -1.2250378131866455
    3. '1' → logprob: -7.225038051605225
    4. ' ' → logprob: -8.100037574768066
    5. '=' → logprob: -8.600037574768066
    6. ')==' → logprob: -9.225037574768066
    7. '<|end|>' → logprob: -9.600037574768066
    8. ':' → logprob: -9.850037574768066
    9. '0' → logprob: -9.850037574768066
    10. '```' → logprob: -10.600037574768066

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026317255571484566
    2. ' ' → logprob: -3.6513173580169678
    3. '0' → logprob: -11.026317596435547
    4. '```' → logprob: -14.651317596435547
    5. '   ' → logprob: -15.651317596435547
    6. '<|end|>' → logprob: -16.401317596435547
    7. ' ' → logprob: -17.151317596435547
    8. '2' → logprob: -18.276317596435547
    9. '  ' → logprob: -18.463817596435547
    10. '[' → logprob: -18.526317596435547

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01234129536896944
    2. '2' → logprob: -5.012341499328613
    3. '0' → logprob: -5.262341499328613
    4. ' ' → logprob: -7.762341499328613
    5. '```' → logprob: -13.637341499328613
    6. '5' → logprob: -16.449840545654297
    7. '   ' → logprob: -17.449840545654297
    8. '' → logprob: -17.824840545654297
    9. '``' → logprob: -17.887340545654297
    10. '10' → logprob: -17.949840545654297

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004845346265938133
    2. ':
' → logprob: -7.875484466552734
    3. '):' → logprob: -9.875484466552734
    4. ' :' → logprob: -10.250484466552734
    5. '       ' → logprob: -11.375484466552734
    6. ':**' → logprob: -13.625484466552734
    7. '<|end|>' → logprob: -13.875484466552734
    8. ',' → logprob: -14.000484466552734
    9. '):
' → logprob: -14.500484466552734
    10. ':return' → logprob: -14.500484466552734

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15000122785568237
    2. '       ' → logprob: -2.150001287460327
    3. ':' → logprob: -4.775001049041748
    4. ' ' → logprob: -5.775001049041748
    5. '        ' → logprob: -5.900001049041748
    6. 'result' → logprob: -5.900001049041748
    7. ' result' → logprob: -6.275001049041748
    8. '<|end|>' → logprob: -7.275001049041748
    9. ':
' → logprob: -7.400001049041748
    10. '   ' → logprob: -7.650001049041748

Token 83: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.14284589886665344
    2. 'result' (adapté à ' result') → logprob: -2.017845869064331
    3. '               ' → logprob: -9.64284610748291
    4. '           ' → logprob: -10.14284610748291
    5. '(result' → logprob: -10.26784610748291
    6. '            ' → logprob: -11.64284610748291
    7. ' ' → logprob: -12.01784610748291
    8. ',result' → logprob: -12.14284610748291
    9. '	result' → logprob: -12.76784610748291
    10. ' 
' → logprob: -13.14284610748291

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08190030604600906
    2. '=' → logprob: -2.7069003582000732
    3. ' *' → logprob: -4.956900119781494
    4. ' *=' → logprob: -5.581900119781494
    5. '*' → logprob: -6.956900119781494
    6. ' ' → logprob: -9.706900596618652
    7. '*=' → logprob: -11.081900596618652
    8. ' ' → logprob: -11.081900596618652
    9. '    ' → logprob: -11.331900596618652
    10. '```' → logprob: -11.706900596618652

Token 85: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.062070202082395554
    2. '(result' → logprob: -2.81207013130188
    3. '(' → logprob: -9.5620698928833
    4. ' result' → logprob: -10.6870698928833
    5. 'result' → logprob: -11.6870698928833
    6. ' ' → logprob: -15.1870698928833
    7. ' ' → logprob: -15.8120698928833
    8. '```' → logprob: -16.062070846557617
    9. '(res' → logprob: -16.062070846557617
    10. ',result' → logprob: -16.562070846557617

Token 86: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.048635054379701614
    2. ' result' → logprob: -3.0486350059509277
    3. '(result' → logprob: -10.298635482788086
    4. 'n' → logprob: -11.298635482788086
    5. ' n' → logprob: -13.923635482788086
    6. '	result' → logprob: -15.173635482788086
    7. ' (' → logprob: -16.173635482788086
    8. '_result' → logprob: -16.548635482788086
    9. ',result' → logprob: -16.673635482788086
    10. '=result' → logprob: -16.798635482788086

Token 87: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.009759752079844475
    2. '*' → logprob: -4.634759902954102
    3. ' ' → logprob: -13.009759902954102
    4. ' ' → logprob: -13.634759902954102
    5. '*n' → logprob: -15.134759902954102
    6. ' **' → logprob: -17.3847599029541
    7. ')' → logprob: -18.1347599029541
    8. '**' → logprob: -18.3847599029541
    9. '*object' → logprob: -18.3847599029541
    10. '```' → logprob: -18.7597599029541

Token 88: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687145709991455
    2. ' n' → logprob: -1.1368714570999146
    3. '	n' → logprob: -15.261871337890625
    4. ')n' → logprob: -16.136871337890625
    5. '(n' → logprob: -16.386871337890625
    6. ' ' → logprob: -17.136871337890625
    7. ' ' → logprob: -18.261871337890625
    8. ')' → logprob: -18.386871337890625
    9. '_n' → logprob: -18.761871337890625
    10. '```' → logprob: -19.136871337890625

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004920298233628273
    2. ' )' → logprob: -7.625492095947266
    3. ')%' → logprob: -12.500492095947266
    4. '}' → logprob: -17.000492095947266
    5. '%' → logprob: -17.250492095947266
    6. '   ' → logprob: -17.250492095947266
    7. '*' → logprob: -17.625492095947266
    8. '`)' → logprob: -17.750492095947266
    9. ']' → logprob: -17.875492095947266
    10. '    ' → logprob: -18.125492095947266

Token 90: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03380706161260605
    2. '%' → logprob: -3.4088070392608643
    3. ')' → logprob: -8.783806800842285
    4. ')%' → logprob: -12.283806800842285
    5. ' ' → logprob: -13.908806800842285
    6. ' ' → logprob: -14.408806800842285
    7. '```' → logprob: -14.783806800842285
    8. '`' → logprob: -15.033806800842285
    9. ' )' → logprob: -15.283806800842285
    10. ' %=' → logprob: -15.408806800842285

Token 91: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07901867479085922
    2. 'mod' → logprob: -2.5790185928344727
    3. '(mod' → logprob: -9.079018592834473
    4. ' ' → logprob: -11.829018592834473
    5. ' MOD' → logprob: -12.704018592834473
    6. '	mod' → logprob: -13.454018592834473
    7. 'MOD' → logprob: -13.454018592834473
    8. ' ' → logprob: -14.704018592834473
    9. ' mo' → logprob: -15.204018592834473
    10. ' modul' → logprob: -15.329018592834473

Token 92: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.716341495513916
    2. ' 
' → logprob: -1.216341495513916
    3. '
' → logprob: -1.966341495513916
    4. '       ' → logprob: -3.716341495513916
    5. '        
' → logprob: -3.966341495513916
    6. 'n' → logprob: -4.341341495513916
    7. '  
' → logprob: -4.716341495513916
    8. '    
' → logprob: -6.341341495513916
    9. '\' → logprob: -6.466341495513916
    10. '' → logprob: -6.591341495513916

Token 93: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1508183479309082
    2. '        
' → logprob: -1.2758183479309082
    3. '       ' → logprob: -1.4008183479309082
    4. '\n' → logprob: -2.400818347930908
    5. 'n' → logprob: -3.275818347930908
    6. '       
' → logprob: -5.150818347930908
    7. '
' → logprob: -5.400818347930908
    8. '     
' → logprob: -5.525818347930908
    9. '\' → logprob: -5.775818347930908
    10. '    
' → logprob: -6.025818347930908

Token 94: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.029533734545111656
    2. '       ' → logprob: -3.904533624649048
    3. ' 
' → logprob: -5.154533863067627
    4. '\n' → logprob: -7.029533863067627
    5. ' n' → logprob: -7.029533863067627
    6. 'r' → logprob: -7.404533863067627
    7. '        
' → logprob: -7.654533863067627
    8. '\' → logprob: -9.404533386230469
    9. ' ' → logprob: -10.279533386230469
    10. '   ' → logprob: -10.404533386230469

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006760721560567617
    2. ' =' → logprob: -5.006760597229004
    3. '*' → logprob: -10.881760597229004
    4. '**' → logprob: -11.506760597229004
    5. '*=' → logprob: -11.506760597229004
    6. ' ' → logprob: -13.256760597229004
    7. ',' → logprob: -13.381760597229004
    8. ' *=' → logprob: -13.881760597229004
    9. ')' → logprob: -14.256760597229004
    10. '```' → logprob: -14.256760597229004

Token 96: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5762510895729065
    2. ' (' → logprob: -0.8262510895729065
    3. '(' → logprob: -8.076251029968262
    4. ' ' → logprob: -14.326251029968262
    5. ' ' → logprob: -17.201251983642578
    6. 'n' → logprob: -17.326251983642578
    7. '   ' → logprob: -17.701251983642578
    8. '  ' → logprob: -18.576251983642578
    9. '	' → logprob: -18.701251983642578
    10. '（' → logprob: -18.951251983642578

Token 97: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009139667963609099
    2. ' n' → logprob: -7.000914096832275
    3. '(n' → logprob: -13.375913619995117
    4. '	n' → logprob: -14.375913619995117
    5. ')n' → logprob: -15.250913619995117
    6. '   ' → logprob: -17.000913619995117
    7. ' ' → logprob: -17.500913619995117
    8. ' ' → logprob: -17.750913619995117
    9. '```' → logprob: -17.750913619995117
    10. '*n' → logprob: -18.500913619995117

Token 98: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2527936100959778
    2. '*' → logprob: -1.502793550491333
    3. '*n' → logprob: -7.127793788909912
    4. ' ' → logprob: -9.877793312072754
    5. '**' → logprob: -11.877793312072754
    6. ' ' → logprob: -13.502793312072754
    7. '2' → logprob: -14.252793312072754
    8. '  ' → logprob: -14.877793312072754
    9. ' **' → logprob: -14.877793312072754
    10. '   ' → logprob: -15.377793312072754

Token 99: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024762547109276056
    2. ' n' → logprob: -6.002476215362549
    3. '	n' → logprob: -14.877476692199707
    4. ')n' → logprob: -16.12747573852539
    5. ' ' → logprob: -16.25247573852539
    6. '_n' → logprob: -17.62747573852539
    7. '<|end|>' → logprob: -18.50247573852539
    8. ')' → logprob: -18.62747573852539
    9. ' ' → logprob: -18.87747573852539
    10. '```' → logprob: -19.12747573852539

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')%' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.625008583068848
    4. '   ' → logprob: -18.50000762939453
    5. '%' → logprob: -18.75000762939453
    6. ')
' → logprob: -19.62500762939453
    7. '）' → logprob: -19.87500762939453
    8. '```' → logprob: -20.50000762939453
    9. '')' → logprob: -20.62500762939453
    10. '}' → logprob: -20.75000762939453

Token 101: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38688117265701294
    2. '%' → logprob: -1.1368811130523682
    3. ' ' → logprob: -12.761880874633789
    4. ')%' → logprob: -13.386880874633789
    5. '`' → logprob: -13.886880874633789
    6. ')' → logprob: -14.136880874633789
    7. ' mod' → logprob: -14.136880874633789
    8. '%n' → logprob: -14.261880874633789
    9. '```' → logprob: -14.636880874633789
    10. 'mod' → logprob: -14.761880874633789

Token 102: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03804183006286621
    2. ' mod' → logprob: -3.288041830062866
    3. '(mod' → logprob: -15.163042068481445
    4. '	mod' → logprob: -16.038042068481445
    5. 'MOD' → logprob: -18.288042068481445
    6. ' ' → logprob: -18.913042068481445
    7. '_mod' → logprob: -20.038042068481445
    8. ' ' → logprob: -20.163042068481445
    9. ' мод' → logprob: -20.163042068481445
    10. '```' → logprob: -21.163042068481445

Token 103: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7092729210853577
    2. '       ' → logprob: -0.8342729210853577
    3. '   ' → logprob: -3.334272861480713
    4. ' r' → logprob: -3.584272861480713
    5. '
' → logprob: -4.834272861480713
    6. '        
' → logprob: -7.459272861480713
    7. ',r' → logprob: -7.709272861480713
    8. ' ' → logprob: -7.834272861480713
    9. '  
' → logprob: -8.334273338317871
    10. ' 
' → logprob: -8.709273338317871

Token 104: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6587629318237305
    2. ' r' → logprob: -1.1587629318237305
    3. '       ' → logprob: -1.9087629318237305
    4. '   ' → logprob: -3.9087629318237305
    5. ' ' → logprob: -8.40876293182373
    6. '	r' → logprob: -10.40876293182373
    7. '  ' → logprob: -10.90876293182373
    8. '    ' → logprob: -11.40876293182373
    9. ' ' → logprob: -12.28376293182373
    10. '        
' → logprob: -12.40876293182373

Token 105: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.2519293427467346
    2. ' r' → logprob: -1.5019292831420898
    3. '   ' → logprob: -15.12692928314209
    4. ' ' → logprob: -18.001930236816406
    5. '	r' → logprob: -18.501930236816406
    6. '       ' → logprob: -18.626930236816406
    7. ' ' → logprob: -19.376930236816406
    8. '    ' → logprob: -20.626930236816406
    9. '  ' → logprob: -20.876930236816406
    10. '```' → logprob: -21.001930236816406

Token 106: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4393185079097748
    2. '//=' → logprob: -1.1893185377120972
    3. ' >>=' → logprob: -3.0643184185028076
    4. '//' → logprob: -6.564318656921387
    5. ' ' → logprob: -6.689318656921387
    6. '=' → logprob: -7.064318656921387
    7. ' =' → logprob: -7.689318656921387
    8. '>>' → logprob: -8.564318656921387
    9. ' ' → logprob: -8.564318656921387
    10. '>' → logprob: -11.314318656921387

Token 107: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.36574100604048e-06
    2. '2' → logprob: -12.375004768371582
    3. '=}' → logprob: -16.750003814697266
    4. ' ' → logprob: -17.375003814697266
    5. '=
' → logprob: -17.500003814697266
    6. '=_' → logprob: -18.375003814697266
    7. '=

' → logprob: -18.500003814697266
    8. '='' → logprob: -19.000003814697266
    9. '_=' → logprob: -19.000003814697266
    10. ' =' → logprob: -19.000003814697266

Token 108: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -19.003599166870117
    4. '```' → logprob: -19.003599166870117
    5. ' ' → logprob: -19.378599166870117
    6. '２' → logprob: -20.128599166870117
    7. '1' → logprob: -20.628599166870117
    8. '۲' → logprob: -20.628599166870117
    9. '    ' → logprob: -20.753599166870117
    10. '  ' → logprob: -21.691099166870117

Token 109: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '۲' → logprob: -20.500001907348633
    6. '  ' → logprob: -21.187501907348633
    7. '>' → logprob: -21.312501907348633
    8. '２' → logprob: -21.437501907348633
    9. '२' → logprob: -22.000001907348633
    10. '২' → logprob: -22.562501907348633

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.647307813167572
    2. ' return' → logprob: -1.1473078727722168
    3. ' ' → logprob: -2.147307872772217
    4. ' 
' → logprob: -3.897307872772217
    5. ' ' → logprob: -4.147307872772217
    6. '       ' → logprob: -6.397307872772217
    7. 'return' → logprob: -6.397307872772217
    8. '<|end|>' → logprob: -7.272307872772217
    9. '  ' → logprob: -7.647307872772217
    10. '    ' → logprob: -7.772307872772217

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03549974784255028
    2. ' return' → logprob: -3.7854998111724854
    3. 'return' → logprob: -4.410499572753906
    4. '       ' → logprob: -10.910499572753906
    5. '	return' → logprob: -12.410499572753906
    6. ' ' → logprob: -12.785499572753906
    7. '```' → logprob: -13.160499572753906
    8. ':return' → logprob: -13.410499572753906
    9. '{return' → logprob: -14.535499572753906
    10. '   ' → logprob: -14.910499572753906

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25226613879203796
    2. ' return' → logprob: -1.5022661685943604
    3. '   ' → logprob: -8.127265930175781
    4. ' ' → logprob: -10.252265930175781
    5. '	return' → logprob: -12.502265930175781
    6. 'eturn' → logprob: -13.752265930175781
    7. ':return' → logprob: -13.877265930175781
    8. '{return' → logprob: -15.502265930175781
    9. '```' → logprob: -16.12726593017578
    10. '       ' → logprob: -16.62726593017578

Token 113: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004078401252627373
    2. ' result' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.254077911376953
    4. '(result' → logprob: -18.004077911376953
    5. '	result' → logprob: -19.879077911376953
    6. '  ' → logprob: -20.504077911376953
    7. '$result' → logprob: -21.754077911376953
    8. ' ' → logprob: -22.004077911376953
    9. '[result' → logprob: -22.129077911376953
    10. '=result' → logprob: -22.254077911376953

Token 114: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05605223774909973
    2. '<|end|>' → logprob: -2.9310522079467773
    3. '
' → logprob: -8.056052207946777
    4. '#' → logprob: -8.681052207946777
    5. ')' → logprob: -8.681052207946777
    6. '```' → logprob: -9.056052207946777
    7. '(' → logprob: -9.181052207946777
    8. '*' → logprob: -9.681052207946777
    9. '

' → logprob: -9.931052207946777
    10. '<|end|>' → logprob: -9.931052207946777

Token 115: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004402820952236652
    2. '
' → logprob: -5.6294026374816895
    3. '

' → logprob: -7.6294026374816895
    4. '```' → logprob: -8.754403114318848
    5. '#' → logprob: -9.754403114318848
    6. '
' → logprob: -10.504403114318848
    7. '\' → logprob: -11.129403114318848
    8. '    
' → logprob: -12.254403114318848
    9. 'p' → logprob: -12.379403114318848
    10. 'n' → logprob: -12.504403114318848

Token 116: ' comb' (ID: 4134)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.04210478812456131
    2. 'mod' → logprob: -3.417104721069336
    3. ' inverse' → logprob: -5.542104721069336
    4. ' modular' → logprob: -6.667104721069336
    5. ' inv' → logprob: -7.042104721069336
    6. 'inverse' → logprob: -7.417104721069336
    7. ' n' → logprob: -7.417104721069336
    8. 'inv' → logprob: -7.917104721069336
    9. ' comb' → logprob: -8.667104721069336
    10. ' main' → logprob: -8.792104721069336

Token 117: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00019781860464718193
    2. 'ination' → logprob: -8.750197410583496
    3. '(' → logprob: -10.250197410583496
    4. '(N' → logprob: -13.625197410583496
    5. 'n' → logprob: -14.250197410583496
    6. '```' → logprob: -14.500197410583496
    7. '(i' → logprob: -15.000197410583496
    8. 'in' → logprob: -15.125197410583496
    9. 'inition' → logprob: -15.625197410583496
    10. 'ine' → logprob: -15.875197410583496

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006507210782729089
    2. ',k' → logprob: -7.625650882720947
    3. ',n' → logprob: -9.250650405883789
    4. ' ,' → logprob: -9.750650405883789
    5. ',r' → logprob: -12.250650405883789
    6. '(n' → logprob: -14.125650405883789
    7. ',j' → logprob: -15.000650405883789
    8. '_,' → logprob: -15.000650405883789
    9. ',K' → logprob: -15.125650405883789
    10. ',m' → logprob: -15.250650405883789

Token 119: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38729196786880493
    2. 'k' → logprob: -1.1372919082641602
    3. ' r' → logprob: -8.51229190826416
    4. 'n' → logprob: -8.63729190826416
    5. ' k' → logprob: -10.13729190826416
    6. '<|end|>' → logprob: -13.76229190826416
    7. 'm' → logprob: -14.13729190826416
    8. ',' → logprob: -15.13729190826416
    9. ' ' → logprob: -15.26229190826416
    10. ',r' → logprob: -15.51229190826416

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -12.125008583068848
    3. '):' → logprob: -13.125008583068848
    4. ',n' → logprob: -14.625008583068848
    5. ')' → logprob: -16.37500762939453
    6. '   ' → logprob: -17.62500762939453
    7. ',
' → logprob: -17.62500762939453
    8. '```' → logprob: -17.62500762939453
    9. ',k' → logprob: -18.12500762939453
    10. ' ' → logprob: -18.12500762939453

Token 121: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.004916246980428696
    2. 'mod' → logprob: -5.379916191101074
    3. ' MOD' → logprob: -8.504916191101074
    4. 'MOD' → logprob: -9.879916191101074
    5. ' ' → logprob: -11.629916191101074
    6. '	mod' → logprob: -11.754916191101074
    7. ' m' → logprob: -12.379916191101074
    8. ' ' → logprob: -12.504916191101074
    9. ',' → logprob: -12.754916191101074
    10. '```' → logprob: -12.879916191101074

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000365855434210971
    2. ')' → logprob: -8.0003662109375
    3. '):
' → logprob: -10.7503662109375
    4. ' ):' → logprob: -12.1253662109375
    5. ':' → logprob: -12.8753662109375
    6. ''):' → logprob: -14.5003662109375
    7. '"):' → logprob: -16.1253662109375
    8. ',' → logprob: -16.7503662109375
    9. '):
' → logprob: -16.8753662109375
    10. '}:' → logprob: -16.8753662109375

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003426277544349432
    2. ' if' → logprob: -5.7534260749816895
    3. '    
' → logprob: -9.753426551818848
    4. ')' → logprob: -10.378426551818848
    5. ' result' → logprob: -10.378426551818848
    6. ' 
' → logprob: -10.378426551818848
    7. '<|end|>' → logprob: -10.503426551818848
    8. ' return' → logprob: -11.628426551818848
    9. '    ' → logprob: -11.753426551818848
    10. '  ' → logprob: -12.003426551818848

Token 124: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.026842426508665085
    2. ' if' → logprob: -4.4018425941467285
    3. 'factor' → logprob: -4.9018425941467285
    4. 'fact' → logprob: -5.5268425941467285
    5. '   ' → logprob: -6.5268425941467285
    6. 'return' → logprob: -7.2768425941467285
    7. 'numer' → logprob: -8.40184211730957
    8. 'fac' → logprob: -8.65184211730957
    9. ' numerator' → logprob: -9.40184211730957
    10. 'f' → logprob: -10.02684211730957

Token 125: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0069776177406311035
    2. 'k' → logprob: -5.006977558135986
    3. ' n' → logprob: -8.256978034973145
    4. '	k' → logprob: -13.506978034973145
    5. 'n' → logprob: -14.256978034973145
    6. ' ' → logprob: -15.256978034973145
    7. ' ' → logprob: -15.506978034973145
    8. ' not' → logprob: -16.381977081298828
    9. '   ' → logprob: -16.631977081298828
    10. '```' → logprob: -16.756977081298828

Token 126: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.693481981754303
    2. ' >' → logprob: -0.693481981754303
    3. '==' → logprob: -8.568482398986816
    4. ' ==' → logprob: -9.443482398986816
    5. '0' → logprob: -10.568482398986816
    6. '=' → logprob: -10.818482398986816
    7. ' ' → logprob: -11.443482398986816
    8. '<' → logprob: -13.193482398986816
    9. '">' → logprob: -13.318482398986816
    10. ' ' → logprob: -13.943482398986816

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.05499910004437e-05
    2. ' ' → logprob: -9.625090599060059
    3. '=' → logprob: -10.625090599060059
    4. ' =' → logprob: -16.625089645385742
    5. '1' → logprob: -17.875089645385742
    6. 'or' → logprob: -17.875089645385742
    7. '>' → logprob: -18.625089645385742
    8. '۰' → logprob: -18.625089645385742
    9. 'k' → logprob: -18.875089645385742
    10. ' or' → logprob: -19.250089645385742

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2762428822461516e-05
    2. '=' → logprob: -9.875052452087402
    3. ' ' → logprob: -13.750052452087402
    4. 'k' → logprob: -16.87505340576172
    5. '```' → logprob: -16.87505340576172
    6. ' =' → logprob: -17.25005340576172
    7. '1' → logprob: -17.50005340576172
    8. 'or' → logprob: -17.62505340576172
    9. '۰' → logprob: -18.50005340576172
    10. '2' → logprob: -18.50005340576172

Token 129: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00171563564799726
    2. 'or' → logprob: -6.376715660095215
    3. '<|end|>' → logprob: -11.501715660095215
    4. '	or' → logprob: -13.001715660095215
    5. ' ' → logprob: -13.876715660095215
    6. '<|end|>' → logprob: -16.8767147064209
    7. ' ' → logprob: -16.8767147064209
    8. ':' → logprob: -17.5017147064209
    9. ')' → logprob: -18.1267147064209
    10. '0' → logprob: -18.3767147064209

Token 130: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006277294596657157
    2. ' k' → logprob: -7.375627517700195
    3. 'n' → logprob: -14.125627517700195
    4. '	k' → logprob: -15.250627517700195
    5. '<|end|>' → logprob: -16.625627517700195
    6. '   ' → logprob: -17.375627517700195
    7. '{k' → logprob: -17.750627517700195
    8. '```' → logprob: -18.625627517700195
    9. ' к' → logprob: -18.750627517700195
    10. '...' → logprob: -19.250627517700195

Token 131: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06281920522451401
    2. ' >' → logprob: -2.812819242477417
    3. 'k' → logprob: -8.062819480895996
    4. '<|end|>' → logprob: -8.062819480895996
    5. 'n' → logprob: -9.812819480895996
    6. ' k' → logprob: -9.937819480895996
    7. ' or' → logprob: -10.687819480895996
    8. ' ' → logprob: -10.812819480895996
    9. ' n' → logprob: -11.187819480895996
    10. '```' → logprob: -11.437819480895996

Token 132: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740804135799408
    2. ' n' → logprob: -0.9740804433822632
    3. '	n' → logprob: -13.224080085754395
    4. '<|end|>' → logprob: -13.974080085754395
    5. ' ' → logprob: -14.099080085754395
    6. '```' → logprob: -16.97408103942871
    7. ')n' → logprob: -17.59908103942871
    8. ' ' → logprob: -18.22408103942871
    9. '(n' → logprob: -18.34908103942871
    10. ' н' → logprob: -18.47408103942871

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006225021090358496
    2. ':return' → logprob: -5.256225109100342
    3. ':
' → logprob: -7.006225109100342
    4. ' or' → logprob: -9.881224632263184
    5. ' :' → logprob: -11.131224632263184
    6. '   ' → logprob: -11.881224632263184
    7. '):' → logprob: -12.006224632263184
    8. '<|end|>' → logprob: -13.506224632263184
    9. ' return' → logprob: -13.756224632263184
    10. ')' → logprob: -14.381224632263184

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03689586743712425
    2. '   ' → logprob: -3.786895751953125
    3. '0' → logprob: -4.786895751953125
    4. ' return' → logprob: -5.911895751953125
    5. 'return' → logprob: -6.911895751953125
    6. '
' → logprob: -7.286895751953125
    7. '1' → logprob: -7.786895751953125
    8. ' None' → logprob: -9.161895751953125
    9. ':return' → logprob: -9.286895751953125
    10. '```' → logprob: -10.161895751953125

Token 135: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2421993911266327
    2. '0' → logprob: -2.242199420928955
    3. 'return' (adapté à ' return') → logprob: -2.367199420928955
    4. ' ' → logprob: -4.492199420928955
    5. '   ' → logprob: -6.367199420928955
    6. '<|end|>' → logprob: -7.367199420928955
    7. ' 
' → logprob: -7.617199420928955
    8. ':return' → logprob: -7.867199420928955
    9. '1' → logprob: -8.242198944091797
    10. '    ' → logprob: -8.492198944091797

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '۰' → logprob: -20.62509536743164
    4. ' ' → logprob: -21.12509536743164
    5. '   ' → logprob: -21.50009536743164
    6. '  ' → logprob: -22.87509536743164
    7. '```' → logprob: -23.00009536743164
    8. '00' → logprob: -23.50009536743164
    9. '０' → logprob: -23.87509536743164
    10. '000' → logprob: -24.00009536743164

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -19.75
    4. '   ' → logprob: -21.0
    5. '```' → logprob: -21.125
    6. '000' → logprob: -21.3125
    7. '０' → logprob: -21.9375
    8. ' ' → logprob: -21.9375
    9. '00' → logprob: -22.0625
    10. '{' → logprob: -22.3125

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6969322562217712
    2. '   ' → logprob: -0.6969322562217712
    3. '    
' → logprob: -5.696932315826416
    4. '<|end|>' → logprob: -8.821931838989258
    5. '  
' → logprob: -9.071931838989258
    6. ',' → logprob: -10.446931838989258
    7. ',
' → logprob: -10.821931838989258
    8. '   
' → logprob: -10.821931838989258
    9. '
' → logprob: -10.946931838989258
    10. '	
' → logprob: -11.321931838989258

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015419373812619597
    2. '    
' → logprob: -9.000154495239258
    3. '
' → logprob: -11.000154495239258
    4. 'result' → logprob: -12.500154495239258
    5. 'if' → logprob: -12.750154495239258
    6. 'n' → logprob: -13.500154495239258
    7. 'return' → logprob: -13.750154495239258
    8. '```' → logprob: -13.750154495239258
    9. '   
' → logprob: -14.250154495239258
    10. '  
' → logprob: -14.625154495239258

Token 140: ' a' (ID: 261)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.4280926287174225
    2. '   ' → logprob: -1.5530925989151
    3. 'numer' → logprob: -2.4280927181243896
    4. 'num' → logprob: -3.8030927181243896
    5. 'fac' → logprob: -4.3030924797058105
    6. 'factor' → logprob: -5.0530924797058105
    7. 'f' → logprob: -5.4280924797058105
    8. 'return' → logprob: -6.8030924797058105
    9. 'fc' → logprob: -8.678092956542969
    10. '    
' → logprob: -8.928092956542969

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7059763073921204
    2. ' =' → logprob: -0.7059763073921204
    3. '_fact' → logprob: -5.580976486206055
    4. '=f' → logprob: -5.830976486206055
    5. '_factor' → logprob: -6.205976486206055
    6. 'fact' → logprob: -6.330976486206055
    7. '=n' → logprob: -7.455976486206055
    8. '_=' → logprob: -7.955976486206055
    9. '_fac' → logprob: -8.580976486206055
    10. '_f' → logprob: -8.705976486206055

Token 142: ' fram' (ID: 19795)
  Prédit: 'fram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.006490831263363361
    2. ' fram' → logprob: -5.131490707397461
    3. 'fr' → logprob: -7.881490707397461
    4. 'frames' → logprob: -10.506490707397461
    5. '   ' → logprob: -10.631490707397461
    6. '1' → logprob: -11.006490707397461
    7. 'frm' → logprob: -11.256490707397461
    8. 'frame' → logprob: -11.256490707397461
    9. 'frag' → logprob: -11.256490707397461
    10. ' ' → logprob: -11.506490707397461

Token 143: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -5.228561349213123e-05
    2. 'mod' → logprob: -9.875052452087402
    3. '   ' → logprob: -15.000052452087402
    4. '(n' → logprob: -16.625051498413086
    5. 'o' → logprob: -16.750051498413086
    6. 'од' → logprob: -16.750051498413086
    7. '(mod' → logprob: -17.500051498413086
    8. 'odd' → logprob: -17.625051498413086
    9. '(' → logprob: -18.125051498413086
    10. ' od' → logprob: -18.375051498413086

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.625007629394531
    3. '(k' → logprob: -12.625007629394531
    4. '<|end|>' → logprob: -14.500007629394531
    5. 'n' → logprob: -14.750007629394531
    6. '```' → logprob: -17.25000762939453
    7. '[n' → logprob: -17.37500762939453
    8. 'def' → logprob: -17.50000762939453
    9. 's' → logprob: -17.75000762939453
    10. ' (' → logprob: -18.12500762939453

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ' ,' → logprob: -12.750003814697266
    3. '   ' → logprob: -15.500003814697266
    4. ',
' → logprob: -16.375003814697266
    5. 'MOD' → logprob: -17.000003814697266
    6. 'mod' → logprob: -17.125003814697266
    7. '```' → logprob: -17.125003814697266
    8. '(mod' → logprob: -17.375003814697266
    9. ')' → logprob: -17.750003814697266
    10. ',module' → logprob: -18.125003814697266

Token 146: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03816622868180275
    2. ' mod' → logprob: -3.2881662845611572
    3. 'MOD' → logprob: -9.288166046142578
    4. ' MOD' → logprob: -10.538166046142578
    5. '(mod' → logprob: -12.913166046142578
    6. '	mod' → logprob: -13.288166046142578
    7. ' ' → logprob: -14.163166046142578
    8. '10' → logprob: -14.913166046142578
    9. ')' → logprob: -15.663166046142578
    10. '_mod' → logprob: -16.663166046142578

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001963128335773945
    2. ')
' → logprob: -6.251963138580322
    3. ')
' → logprob: -11.126962661743164
    4. ' )' → logprob: -11.626962661743164
    5. ')

' → logprob: -11.751962661743164
    6. ')a' → logprob: -14.376962661743164
    7. '),' → logprob: -14.501962661743164
    8. ' ' → logprob: -14.751962661743164
    9. '   ' → logprob: -15.376962661743164
    10. '')' → logprob: -15.626962661743164

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20308734476566315
    2. 'b' → logprob: -1.703087329864502
    3. '<|end|>' → logprob: -6.953087329864502
    4. ' b' → logprob: -7.828087329864502
    5. 'def' → logprob: -9.45308780670166
    6. ',b' → logprob: -9.82808780670166
    7. '*b' → logprob: -10.20308780670166
    8. '    
' → logprob: -10.20308780670166
    9. '  ' → logprob: -10.57808780670166
    10. '
' → logprob: -10.95308780670166

Token 149: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.04876597225666046
    2. ' b' → logprob: -3.0487658977508545
    3. '   ' → logprob: -8.923766136169434
    4. 'def' → logprob: -11.423766136169434
    5. '    ' → logprob: -12.298766136169434
    6. '	b' → logprob: -12.548766136169434
    7. '>b' → logprob: -12.548766136169434
    8. 'd' → logprob: -12.798766136169434
    9. 'a' → logprob: -13.048766136169434
    10. '```' → logprob: -13.173766136169434

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22661764919757843
    2. '=' → logprob: -1.601617693901062
    3. 'a' → logprob: -7.226617813110352
    4. '1' → logprob: -7.726617813110352
    5. 'b' → logprob: -10.851617813110352
    6. '_a' → logprob: -12.601617813110352
    7. '_' → logprob: -12.851617813110352
    8. 'k' → logprob: -12.851617813110352
    9. '=b' → logprob: -13.351617813110352
    10. 'f' → logprob: -13.351617813110352

Token 151: ' fram' (ID: 19795)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5934527516365051
    2. 'fram' → logprob: -1.2184526920318604
    3. '(fr' → logprob: -2.3434526920318604
    4. 'fr' → logprob: -3.5934526920318604
    5. ' fram' → logprob: -4.5934529304504395
    6. ' (' → logprob: -4.8434529304504395
    7. '(' → logprob: -5.0934529304504395
    8. '(frm' → logprob: -6.7184529304504395
    9. '(frame' → logprob: -7.5309529304504395
    10. 'frag' → logprob: -8.468452453613281

Token 152: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.00034118397161364555
    2. 'mod' → logprob: -8.000341415405273
    3. 'од' → logprob: -13.500341415405273
    4. '(mod' → logprob: -13.625341415405273
    5. '   ' → logprob: -14.500341415405273
    6. '```' → logprob: -15.000341415405273
    7. 'o' → logprob: -15.750341415405273
    8. 'cod' → logprob: -16.000341415405273
    9. '_mod' → logprob: -16.000341415405273
    10. '[' → logprob: -16.250341415405273

Token 153: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.512236498361744e-07
    2. 'k' → logprob: -15.125000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(n' → logprob: -18.625
    5. '	k' → logprob: -19.75
    6. ' (' → logprob: -20.75
    7. '((' → logprob: -20.875
    8. '<|end|>' → logprob: -21.375
    9. '```' → logprob: -21.5
    10. ' k' → logprob: -21.625

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.534558552724775e-05
    2. ' ,' → logprob: -10.625025749206543
    3. '<|end|>' → logprob: -15.375025749206543
    4. ',
' → logprob: -16.125024795532227
    5. '   ' → logprob: -16.250024795532227
    6. ')' → logprob: -16.250024795532227
    7. '`,' → logprob: -16.250024795532227
    8. '',' → logprob: -16.250024795532227
    9. ',module' → logprob: -16.625024795532227
    10. '(mod' → logprob: -16.875024795532227

Token 155: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008617172949016094
    2. ' mod' → logprob: -4.758617401123047
    3. '	mod' → logprob: -13.383617401123047
    4. '(mod' → logprob: -14.633617401123047
    5. ' ' → logprob: -15.258617401123047
    6. 'MOD' → logprob: -15.633617401123047
    7. '   ' → logprob: -16.258617401123047
    8. '```' → logprob: -16.508617401123047
    9. '  ' → logprob: -17.258617401123047
    10. '
' → logprob: -18.008617401123047

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06431932747364044
    2. ',' → logprob: -2.939319372177124
    3. ')
' → logprob: -4.814319133758545
    4. '   ' → logprob: -6.689319133758545
    5. ')
' → logprob: -12.314319610595703
    6. '),' → logprob: -12.439319610595703
    7. '<|end|>' → logprob: -12.439319610595703
    8. ' ' → logprob: -12.564319610595703
    9. '```' → logprob: -12.939319610595703
    10. ' )' → logprob: -13.064319610595703

Token 157: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5041570663452148
    2. '   ' → logprob: -1.1291570663452148
    3. ' c' → logprob: -2.629157066345215
    4. '
' → logprob: -8.629157066345215
    5. '	c' → logprob: -8.629157066345215
    6. '    
' → logprob: -9.879157066345215
    7. '*c' → logprob: -10.254157066345215
    8. '  ' → logprob: -10.629157066345215
    9. ' ' → logprob: -10.629157066345215
    10. '    ' → logprob: -11.504157066345215

Token 158: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.11308551579713821
    2. ' c' → logprob: -2.3630855083465576
    3. '   ' → logprob: -4.363085746765137
    4. '	c' → logprob: -10.613085746765137
    5. ' ' → logprob: -11.488085746765137
    6. '*c' → logprob: -12.113085746765137
    7. '    
' → logprob: -12.363085746765137
    8. '  ' → logprob: -12.738085746765137
    9. '    ' → logprob: -12.738085746765137
    10. '```' → logprob: -13.488085746765137

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193095207214355
    2. '=' → logprob: -1.5019309520721436
    3. 'c' → logprob: -14.501931190490723
    4. '  ' → logprob: -15.126931190490723
    5. 'b' → logprob: -15.501931190490723
    6. ' ' → logprob: -15.876931190490723
    7. '   ' → logprob: -15.876931190490723
    8. '=c' → logprob: -16.001930236816406
    9. ' =
' → logprob: -16.376930236816406
    10. 'a' → logprob: -16.501930236816406

Token 160: ' fram' (ID: 19795)
  Prédit: 'fram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fram' → logprob: -0.017780659720301628
    2. ' fram' → logprob: -4.142780780792236
    3. 'fr' → logprob: -6.392780780792236
    4. '   ' → logprob: -10.517780303955078
    5. 'frm' → logprob: -11.767780303955078
    6. ' ' → logprob: -12.267780303955078
    7. ' ' → logprob: -12.392780303955078
    8. 'frames' → logprob: -12.517780303955078
    9. 'frag' → logprob: -12.767780303955078
    10. 'frame' → logprob: -12.892780303955078

Token 161: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.00013882013445254415
    2. 'mod' → logprob: -9.000139236450195
    3. 'cod' → logprob: -12.250139236450195
    4. 'o' → logprob: -13.125139236450195
    5. 'од' → logprob: -13.125139236450195
    6. '   ' → logprob: -13.625139236450195
    7. '```' → logprob: -14.250139236450195
    8. 'oc' → logprob: -14.375139236450195
    9. 'c' → logprob: -14.875139236450195
    10. '
' → logprob: -15.000139236450195

Token 162: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.963691804325208e-05
    2. '(' → logprob: -10.625029563903809
    3. 'n' → logprob: -12.375029563903809
    4. '((' → logprob: -14.375029563903809
    5. ' (' → logprob: -15.000029563903809
    6. '(
' → logprob: -16.625030517578125
    7. ' n' → logprob: -19.250030517578125
    8. '
' → logprob: -19.625030517578125
    9. '```' → logprob: -19.750030517578125
    10. '	n' → logprob: -19.875030517578125

Token 163: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4411267042160034
    2. '-' → logprob: -1.1911267042160034
    3. '-k' → logprob: -2.941126823425293
    4. ' ' → logprob: -12.941126823425293
    5. 'k' → logprob: -14.816126823425293
    6. '-
' → logprob: -15.191126823425293
    7. '   ' → logprob: -15.316126823425293
    8. '-K' → logprob: -15.816126823425293
    9. ',' → logprob: -16.816125869750977
    10. '-kar' → logprob: -16.816125869750977

Token 164: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.024604277219623e-05
    2. ' k' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -16.25004005432129
    4. '	k' → logprob: -16.75004005432129
    5. ')' → logprob: -17.50004005432129
    6. ' к' → logprob: -18.00004005432129
    7. '   ' → logprob: -18.87504005432129
    8. '<|end|>' → logprob: -19.37504005432129
    9. ' ' → logprob: -19.50004005432129
    10. '_k' → logprob: -20.62504005432129

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.619311974034645e-05
    2. ' ,' → logprob: -10.250036239624023
    3. '(mod' → logprob: -15.250036239624023
    4. 'mod' → logprob: -16.000036239624023
    5. ',
' → logprob: -16.125036239624023
    6. ')' → logprob: -16.250036239624023
    7. '   ' → logprob: -16.750036239624023
    8. '```' → logprob: -16.750036239624023
    9. '`,' → logprob: -16.875036239624023
    10. '1' → logprob: -17.625036239624023

Token 166: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3132694363594055
    2. ' mod' → logprob: -1.3132693767547607
    3. '(mod' → logprob: -12.06326961517334
    4. '	mod' → logprob: -13.56326961517334
    5. ')' → logprob: -15.93826961517334
    6. '```' → logprob: -16.063268661499023
    7. 'MOD' → logprob: -16.313268661499023
    8. ' ' → logprob: -16.313268661499023
    9. ',' → logprob: -16.438268661499023
    10. '   ' → logprob: -16.813268661499023

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003672748862300068
    2. ')
' → logprob: -8.375367164611816
    3. ',' → logprob: -9.000367164611816
    4. '   ' → logprob: -11.750367164611816
    5. ' )' → logprob: -12.500367164611816
    6. ')
' → logprob: -14.125367164611816
    7. '),' → logprob: -15.125367164611816
    8. ' ' → logprob: -15.750367164611816
    9. ',)' → logprob: -15.875367164611816
    10. ')`' → logprob: -16.250368118286133

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006460159085690975
    2. ' return' → logprob: -5.506460189819336
    3. 'return' → logprob: -6.756460189819336
    4. 'inv' → logprob: -7.381460189819336
    5. ' inv' → logprob: -9.131460189819336
    6. 'd' → logprob: -9.131460189819336
    7. ' ' → logprob: -9.131460189819336
    8. '  ' → logprob: -9.381460189819336
    9. '    ' → logprob: -10.381460189819336
    10. 'inverse' → logprob: -10.381460189819336

Token 169: ' return' (ID: 622)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.1968189924955368
    2. 'return' (adapté à ' return') → logprob: -2.6968190670013428
    3. 'den' → logprob: -2.6968190670013428
    4. '   ' → logprob: -4.446818828582764
    5. 'bc' → logprob: -5.071818828582764
    6. 'b' → logprob: -5.071818828582764
    7. ' inv' → logprob: -5.071818828582764
    8. 'inverse' → logprob: -5.071818828582764
    9. ' return' → logprob: -5.821818828582764
    10. 'd' → logprob: -6.071818828582764

Token 170: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12714920938014984
    2. ' (' → logprob: -2.1271491050720215
    3. 'a' → logprob: -8.62714958190918
    4. '(' → logprob: -10.50214958190918
    5. ' a' → logprob: -11.62714958190918
    6. ' ' → logprob: -12.75214958190918
    7. '
' → logprob: -13.50214958190918
    8. '   ' → logprob: -14.12714958190918
    9. '```' → logprob: -16.00214958190918
    10. '(ans' → logprob: -16.12714958190918

Token 171: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001805377542041242
    2. ' a' → logprob: -8.6251802444458
    3. '(a' → logprob: -14.0001802444458
    4. ')a' → logprob: -17.250181198120117
    5. '   ' → logprob: -17.625181198120117
    6. '	a' → logprob: -17.625181198120117
    7. '(' → logprob: -18.500181198120117
    8. ')' → logprob: -18.875181198120117
    9. '
' → logprob: -18.875181198120117
    10. ' (' → logprob: -19.000181198120117

Token 172: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25192973017692566
    2. '*' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.37692928314209
    4. '**' → logprob: -15.50192928314209
    5. ' ' → logprob: -15.50192928314209
    6. ' *
' → logprob: -17.251930236816406
    7. '*(' → logprob: -18.876930236816406
    8. '*b' → logprob: -19.001930236816406
    9. '*object' → logprob: -19.126930236816406
    10. '*
' → logprob: -19.251930236816406

Token 173: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0337141677737236
    2. ' power' → logprob: -3.4087140560150146
    3. 'pow' → logprob: -9.783714294433594
    4. '(power' → logprob: -11.783714294433594
    5. '   ' → logprob: -13.533714294433594
    6. ' pow' → logprob: -13.908714294433594
    7. ' ' → logprob: -14.033714294433594
    8. '
' → logprob: -14.158714294433594
    9. '  ' → logprob: -15.283714294433594
    10. '```' → logprob: -15.908714294433594

Token 174: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0005637573776766658
    2. 'b' → logprob: -8.125563621520996
    3. '(' → logprob: -8.250563621520996
    4. '(
' → logprob: -13.250563621520996
    5. '(c' → logprob: -13.250563621520996
    6. ')b' → logprob: -13.750563621520996
    7. ')(' → logprob: -14.250563621520996
    8. ' (' → logprob: -14.625563621520996
    9. ')' → logprob: -15.000563621520996
    10. ' b' → logprob: -15.625563621520996

Token 175: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09785044938325882
    2. ',' → logprob: -2.8478505611419678
    3. '(-' → logprob: -3.8478505611419678
    4. '(c' → logprob: -5.722850322723389
    5. ')' → logprob: -6.097850322723389
    6. '(n' → logprob: -6.472850322723389
    7. ',c' → logprob: -6.972850322723389
    8. '(
' → logprob: -7.097850322723389
    9. ' (' → logprob: -7.097850322723389
    10. '(mod' → logprob: -7.097850322723389

Token 176: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.024884531274437904
    2. 'mod' → logprob: -3.7748844623565674
    3. ' MOD' → logprob: -6.8998847007751465
    4. '(mod' → logprob: -7.3998847007751465
    5. ' mod' → logprob: -12.024884223937988
    6. '-mod' → logprob: -12.149884223937988
    7. '-' → logprob: -12.649884223937988
    8. '_MOD' → logprob: -13.899884223937988
    9. '(' → logprob: -14.024884223937988
    10. '.MOD' → logprob: -14.399884223937988

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01588643155992031
    2. ' -' → logprob: -4.265886306762695
    3. 'MOD' → logprob: -6.765886306762695
    4. ',' → logprob: -8.140886306762695
    5. ' MOD' → logprob: -8.640886306762695
    6. '-mod' → logprob: -10.890886306762695
    7. '_MOD' → logprob: -11.265886306762695
    8. '<|end|>' → logprob: -11.515886306762695
    9. '(' → logprob: -11.890886306762695
    10. '=' → logprob: -12.015886306762695

Token 178: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.125017166137695
    3. '-' → logprob: -14.125017166137695
    4. '```' → logprob: -14.187517166137695
    5. '۲' → logprob: -16.000017166137695
    6. ')' → logprob: -16.062517166137695
    7. '
' → logprob: -16.812517166137695
    8. '٢' → logprob: -16.937517166137695
    9. '

' → logprob: -17.000017166137695
    10. '   ' → logprob: -17.000017166137695

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.375005722045898
    3. '-' → logprob: -14.375005722045898
    4. '```' → logprob: -14.625005722045898
    5. '
' → logprob: -16.5625057220459
    6. '

' → logprob: -16.6875057220459
    7. '۲' → logprob: -17.0000057220459
    8. ')' → logprob: -17.0000057220459
    9. '"' → logprob: -17.5000057220459
    10. '<|end|>' → logprob: -17.6250057220459

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010469816625118256
    2. ' ,' → logprob: -6.876047134399414
    3. ')' → logprob: -11.376047134399414
    4. '<|end|>' → logprob: -14.376047134399414
    5. ',
' → logprob: -14.501047134399414
    6. '```' → logprob: -14.876047134399414
    7. '   ' → logprob: -15.126047134399414
    8. 'mod' → logprob: -15.376047134399414
    9. ',module' → logprob: -15.501047134399414
    10. '(mod' → logprob: -16.501047134399414

Token 181: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.004170525819063187
    2. ' mod' → logprob: -5.5041704177856445
    3. 'MOD' → logprob: -9.504170417785645
    4. '	mod' → logprob: -11.879170417785645
    5. 'c' → logprob: -12.504170417785645
    6. '(mod' → logprob: -12.504170417785645
    7. ')' → logprob: -13.504170417785645
    8. ' MOD' → logprob: -13.879170417785645
    9. ' ' → logprob: -15.504170417785645
    10. '```' → logprob: -15.629170417785645

Token 182: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007195804500952363
    2. '))' → logprob: -7.2507195472717285
    3. ' )' → logprob: -11.875720024108887
    4. '   ' → logprob: -13.625720024108887
    5. ')*' → logprob: -14.875720024108887
    6. ')%' → logprob: -15.250720024108887
    7. ')
' → logprob: -15.625720024108887
    8. ',' → logprob: -15.625720024108887
    9. '```' → logprob: -16.25071907043457
    10. ' ))' → logprob: -16.62571907043457

Token 183: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18318265676498413
    2. '*' → logprob: -1.933182716369629
    3. ')' → logprob: -3.808182716369629
    4. '   ' → logprob: -7.933182716369629
    5. ' ' → logprob: -9.808182716369629
    6. '%' → logprob: -9.933182716369629
    7. ' )' → logprob: -11.308182716369629
    8. '  ' → logprob: -11.933182716369629
    9. ' ' → logprob: -12.433182716369629
    10. '```' → logprob: -12.433182716369629

Token 184: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.4742439389228821
    2. ' power' → logprob: -0.9742439389228821
    3. '(power' → logprob: -9.099244117736816
    4. 'pow' → logprob: -9.849244117736816
    5. ' pow' → logprob: -13.349244117736816
    6. '    ' → logprob: -15.724244117736816
    7. '   ' → logprob: -15.724244117736816
    8. '(' → logprob: -16.2242431640625
    9. '_power' → logprob: -16.3492431640625
    10. ' ' → logprob: -16.3492431640625

Token 185: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.029787283390760422
    2. '(' → logprob: -3.529787302017212
    3. '(
' → logprob: -10.529787063598633
    4. ' (' → logprob: -12.029787063598633
    5. 'c' → logprob: -12.904787063598633
    6. ')c' → logprob: -15.154787063598633
    7. '(cx' → logprob: -15.279787063598633
    8. '((' → logprob: -15.279787063598633
    9. '<|end|>' → logprob: -15.279787063598633
    10. '(

' → logprob: -16.279787063598633

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.868328920158092e-05
    2. ' ,' → logprob: -10.500028610229492
    3. '(mod' → logprob: -14.500028610229492
    4. '(' → logprob: -15.625028610229492
    5. ')' → logprob: -16.625028610229492
    6. '`,' → logprob: -16.625028610229492
    7. ',
' → logprob: -16.875028610229492
    8. '',' → logprob: -17.000028610229492
    9. '),' → logprob: -17.500028610229492
    10. '<|end|>' → logprob: -17.500028610229492

Token 187: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1017296314239502
    2. ' mod' → logprob: -2.35172963142395
    3. '(mod' → logprob: -6.601729393005371
    4. 'MOD' → logprob: -9.101729393005371
    5. '	mod' → logprob: -10.601729393005371
    6. ' MOD' → logprob: -10.601729393005371
    7. '/mod' → logprob: -13.601729393005371
    8. '_mod' → logprob: -14.726729393005371
    9. '.mod' → logprob: -15.226729393005371
    10. '-mod' → logprob: -15.851729393005371

Token 188: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132675588130951
    2. '-' → logprob: -1.3132675886154175
    3. ' ' → logprob: -12.563267707824707
    4. ')' → logprob: -13.813267707824707
    5. ',' → logprob: -15.063267707824707
    6. '−' → logprob: -15.063267707824707
    7. '<|end|>' → logprob: -15.188267707824707
    8. ' ' → logprob: -16.18826675415039
    9. '–' → logprob: -16.31326675415039
    10. '   ' → logprob: -16.56326675415039

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008086714660748839
    2. ' ' → logprob: -7.1258087158203125
    3. '<|end|>' → logprob: -13.813308715820312
    4. '```' → logprob: -14.375808715820312
    5. ')' → logprob: -14.500808715820312
    6. '   ' → logprob: -14.563308715820312
    7. '۲' → logprob: -14.750808715820312
    8. '  ' → logprob: -15.875808715820312
    9. '{' → logprob: -16.313308715820312
    10. '-' → logprob: -16.438308715820312

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.893480243277736e-05
    2. ' ' → logprob: -10.250039100646973
    3. '```' → logprob: -13.625039100646973
    4. '۲' → logprob: -14.500039100646973
    5. '-' → logprob: -15.625039100646973
    6. '   ' → logprob: -15.750039100646973
    7. '२' → logprob: -15.812539100646973
    8. ')' → logprob: -16.062538146972656
    9. '２' → logprob: -16.250038146972656
    10. '২' → logprob: -16.375038146972656

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004428243264555931
    2. ' ,' → logprob: -7.750442981719971
    3. ')' → logprob: -12.125442504882812
    4. ',
' → logprob: -12.375442504882812
    5. '),' → logprob: -14.500442504882812
    6. '))' → logprob: -14.500442504882812
    7. '<|end|>' → logprob: -15.000442504882812
    8. '   ' → logprob: -15.125442504882812
    9. 'mod' → logprob: -15.125442504882812
    10. '```' → logprob: -16.125442504882812

Token 192: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.06197776645421982
    2. 'mod' → logprob: -2.8119778633117676
    3. ' MOD' → logprob: -12.18697738647461
    4. 'MOD' → logprob: -12.68697738647461
    5. '(mod' → logprob: -13.81197738647461
    6. '	mod' → logprob: -14.18697738647461
    7. '```' → logprob: -16.56197738647461
    8. '_mod' → logprob: -16.81197738647461
    9. ')' → logprob: -16.93697738647461
    10. '.mod' → logprob: -17.68697738647461

Token 193: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.994086627149954e-05
    2. ')%' → logprob: -9.500080108642578
    3. ' )' → logprob: -12.250080108642578
    4. '   ' → logprob: -16.250080108642578
    5. '))' → logprob: -16.500080108642578
    6. ')`' → logprob: -16.875080108642578
    7. '%' → logprob: -17.500080108642578
    8. '`)' → logprob: -18.125080108642578
    9. ')
' → logprob: -18.250080108642578
    10. '})' → logprob: -18.625080108642578

Token 194: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5762230753898621
    2. '%' → logprob: -0.8262230753898621
    3. ')' → logprob: -8.701223373413086
    4. ' mod' → logprob: -10.201223373413086
    5. '   ' → logprob: -10.951223373413086
    6. '(mod' → logprob: -11.451223373413086
    7. ' MOD' → logprob: -11.576223373413086
    8. 'mod' → logprob: -11.701223373413086
    9. ')%' → logprob: -11.701223373413086
    10. ' ' → logprob: -11.951223373413086

Token 195: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.007271521259099245
    2. ' mod' → logprob: -5.5072712898254395
    3. 'MOD' → logprob: -5.7572712898254395
    4. ' MOD' → logprob: -10.507271766662598
    5. '(mod' → logprob: -14.132271766662598
    6. '	mod' → logprob: -16.00727081298828
    7. '```' → logprob: -17.25727081298828
    8. '_MOD' → logprob: -18.75727081298828
    9. ' мод' → logprob: -18.88227081298828
    10. ' ' → logprob: -19.25727081298828

Token 196: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15900671482086182
    2. '(' → logprob: -2.5340065956115723
    3. '#' → logprob: -3.1590065956115723
    4. 'print' → logprob: -5.034006595611572
    5. 'def' → logprob: -5.409006595611572
    6. '(n' → logprob: -5.534006595611572
    7. ')' → logprob: -6.284006595611572
    8. 'result' → logprob: -6.534006595611572
    9. 'for' → logprob: -6.909006595611572
    10. '```' → logprob: -6.909006595611572

Token 198: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4115932285785675
    2. ' main' → logprob: -1.2865931987762451
    3. 'solve' → logprob: -3.786593198776245
    4. 'count' → logprob: -4.536593437194824
    5. 'n' → logprob: -4.911593437194824
    6. ' count' → logprob: -5.036593437194824
    7. ' solve' → logprob: -5.161593437194824
    8. ' n' → logprob: -5.911593437194824
    9. 'pas' → logprob: -7.036593437194824
    10. 'comb' → logprob: -7.036593437194824

Token 199: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.8325677703833207e-05
    2. '():
' → logprob: -10.750028610229492
    3. ' ():' → logprob: -12.375028610229492
    4. '(' → logprob: -13.375028610229492
    5. '()' → logprob: -14.000028610229492
    6. '():
' → logprob: -16.250028610229492
    7. '(:' → logprob: -16.875028610229492
    8. '(":' → logprob: -16.875028610229492
    9. ':' → logprob: -17.625028610229492
    10. '(n' → logprob: -17.750028610229492

Token 200: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17166145145893097
    2. 'n' → logprob: -2.546661376953125
    3. '   ' → logprob: -2.546661376953125
    4. ' import' → logprob: -7.046661376953125
    5. 'import' → logprob: -9.546661376953125
    6. '```' → logprob: -10.546661376953125
    7. ' input' → logprob: -10.671661376953125
    8. ' pass' → logprob: -10.796661376953125
    9. ' for' → logprob: -11.546661376953125
    10. '	n' → logprob: -12.046661376953125

Token 201: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14741060137748718
    2. ' n' → logprob: -2.1474106311798096
    3. 't' → logprob: -4.8974103927612305
    4. 'import' → logprob: -5.0224103927612305
    5. '   ' → logprob: -6.0224103927612305
    6. ' import' → logprob: -6.3974103927612305
    7. ' t' → logprob: -6.3974103927612305
    8. 'N' (adapté à ' N') → logprob: -8.14741039276123
    9. 'from' → logprob: -9.77241039276123
    10. 'T' → logprob: -10.39741039276123

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03316100686788559
    2. ' =' → logprob: -3.533160924911499
    3. '=' → logprob: -6.658161163330078
    4. ',K' → logprob: -6.908161163330078
    5. ' ,' → logprob: -7.033161163330078
    6. ',k' → logprob: -8.533161163330078
    7. ' K' → logprob: -11.283161163330078
    8. 'K' → logprob: -11.908161163330078
    9. ' ' → logprob: -11.908161163330078
    10. '=int' → logprob: -12.283161163330078

Token 203: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02406674064695835
    2. ' K' → logprob: -4.274066925048828
    3. 'k' → logprob: -5.399066925048828
    4. 'M' → logprob: -5.399066925048828
    5. 'r' → logprob: -8.649066925048828
    6. 'R' → logprob: -8.774066925048828
    7. ' M' → logprob: -9.149066925048828
    8. 'A' → logprob: -9.149066925048828
    9. ' ' → logprob: -9.274066925048828
    10. 'Q' → logprob: -10.149066925048828

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575950026512146
    2. ' =' → logprob: -0.825950026512146
    3. '=input' → logprob: -11.825949668884277
    4. ',' → logprob: -12.950949668884277
    5. '=int' → logprob: -15.075949668884277
    6. ')' → logprob: -15.575949668884277
    7. ' ' → logprob: -15.950949668884277
    8. '<|end|>' → logprob: -17.450950622558594
    9. ')=' → logprob: -17.575950622558594
    10. '=list' → logprob: -17.700950622558594

Token 205: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1002175584435463
    2. 'map' → logprob: -2.350217580795288
    3. ' ' → logprob: -11.975217819213867
    4. '	map' → logprob: -13.475217819213867
    5. ' list' → logprob: -13.725217819213867
    6. 'list' → logprob: -14.475217819213867
    7. '[' → logprob: -14.475217819213867
    8. '(map' → logprob: -14.975217819213867
    9. ' ' → logprob: -15.850217819213867
    10. 'm' → logprob: -16.225217819213867

Token 206: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007152460515499115
    2. '(' → logprob: -5.007152557373047
    3. '(input' → logprob: -7.757152557373047
    4. '(str' → logprob: -12.257152557373047
    5. '(list' → logprob: -13.382152557373047
    6. '(
' → logprob: -13.757152557373047
    7. 'int' → logprob: -14.257152557373047
    8. '(map' → logprob: -15.132152557373047
    9. '(i' → logprob: -15.382152557373047
    10. '()' → logprob: -16.132152557373047

Token 207: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06892750412225723
    2. ',input' → logprob: -3.068927526473999
    3. ',' → logprob: -4.31892728805542
    4. '(input' → logprob: -5.06892728805542
    5. ' input' → logprob: -7.81892728805542
    6. ')' → logprob: -9.443927764892578
    7. '=input' → logprob: -10.818927764892578
    8. '(' → logprob: -11.193927764892578
    9. '```' → logprob: -11.943927764892578
    10. '   ' → logprob: -12.693927764892578

Token 208: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269282102584839
    2. ' input' → logprob: -2.1269283294677734
    3. '=input' → logprob: -17.001928329467773
    4. ' ' → logprob: -17.126928329467773
    5. '(input' → logprob: -17.751928329467773
    6. ',input' → logprob: -17.876928329467773
    7. 'int' → logprob: -18.876928329467773
    8. 'str' → logprob: -19.126928329467773
    9. '	input' → logprob: -19.126928329467773
    10. 'open' → logprob: -20.251928329467773

Token 209: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002703953068703413
    2. '()' → logprob: -8.25027084350586
    3. '())' → logprob: -12.00027084350586
    4. '(' → logprob: -13.50027084350586
    5. ' ().' → logprob: -14.12527084350586
    6. '()
' → logprob: -15.62527084350586
    7. '()>' → logprob: -16.25027084350586
    8. '()[' → logprob: -16.37527084350586
    9. '());' → logprob: -17.00027084350586
    10. ')' → logprob: -17.12527084350586

Token 210: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.652451464906335e-05
    2. '().' → logprob: -11.750016212463379
    3. 'strip' → logprob: -11.875016212463379
    4. '(split' → logprob: -14.125016212463379
    5. ' split' → logprob: -14.750016212463379
    6. 'rstrip' → logprob: -15.125016212463379
    7. 'spl' → logprob: -15.750016212463379
    8. '()' → logprob: -16.750017166137695
    9. ')' → logprob: -16.750017166137695
    10. '.split' → logprob: -17.125017166137695

Token 211: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009520670399069786
    2. '()' → logprob: -5.009520530700684
    3. ')' → logprob: -5.884520530700684
    4. '(' → logprob: -11.634520530700684
    5. '())
' → logprob: -12.509520530700684
    6. '()))' → logprob: -12.634520530700684
    7. '(),' → logprob: -14.134520530700684
    8. ' ())' → logprob: -14.384520530700684
    9. '))' → logprob: -15.009520530700684
    10. '().' → logprob: -15.134520530700684

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19172275066375732
    2. 'result' → logprob: -2.316722869873047
    3. 'print' → logprob: -2.941722869873047
    4. ' result' → logprob: -4.066722869873047
    5. ' print' → logprob: -6.441722869873047
    6. 'if' → logprob: -6.816722869873047
    7. ' if' → logprob: -6.941722869873047
    8. '```' → logprob: -7.566722869873047
    9. '    
' → logprob: -7.691722869873047
    10. 'answer' → logprob: -7.941722869873047

Token 213: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009242657572031021
    2. 'ans' → logprob: -6.009242534637451
    3. 'for' (adapté à ' for') → logprob: -6.134242534637451
    4. 'if' → logprob: -6.634242534637451
    5. 'res' → logprob: -6.884242534637451
    6. 'result' → logprob: -6.884242534637451
    7. 'total' → logprob: -7.259242534637451
    8. 'answer' → logprob: -7.884242534637451
    9. 'pr' → logprob: -9.75924301147461
    10. 's' → logprob: -10.50924301147461

Token 214: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5238950848579407
    2. 'i' → logprob: -0.8988950848579407
    3. ' k' → logprob: -7.773895263671875
    4. 'k' → logprob: -8.023895263671875
    5. '_' → logprob: -12.023895263671875
    6. 'x' → logprob: -12.523895263671875
    7. 'r' → logprob: -12.898895263671875
    8. ' r' → logprob: -13.273895263671875
    9. ' x' → logprob: -13.648895263671875
    10. ' K' → logprob: -13.898895263671875

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01007408183068037
    2. 'in' → logprob: -4.635074138641357
    3. ' ' → logprob: -8.1350736618042
    4. 'n' → logprob: -12.0100736618042
    5. ' i' → logprob: -12.5100736618042
    6. 'range' → logprob: -12.6350736618042
    7. 'space' → logprob: -13.0100736618042
    8. '  ' → logprob: -13.2600736618042
    9. '_' → logprob: -14.0100736618042
    10. '	in' → logprob: -14.1350736618042

Token 216: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12694606184959412
    2. 'range' → logprob: -2.126945972442627
    3. ' ' → logprob: -11.626946449279785
    4. '(range' → logprob: -12.751946449279785
    5. '   ' → logprob: -12.876946449279785
    6. '	range' → logprob: -13.126946449279785
    7. '  ' → logprob: -14.001946449279785
    8. '```' → logprob: -15.501946449279785
    9. ' xrange' → logprob: -16.12694549560547
    10. ')' → logprob: -16.50194549560547

Token 217: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013808508403599262
    2. '(K' → logprob: -4.763808727264404
    3. '(N' → logprob: -5.263808727264404
    4. '(i' → logprob: -12.388808250427246
    5. '(n' → logprob: -15.763808250427246
    6. '(I' → logprob: -16.013809204101562
    7. '((' → logprob: -16.013809204101562
    8. '(k' → logprob: -16.263809204101562
    9. '1' → logprob: -16.513809204101562
    10. '(
' → logprob: -16.513809204101562

Token 218: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7280893325805664
    2. '1' → logprob: -1.3530893325805664
    3. 'N' → logprob: -1.3530893325805664
    4. '0' → logprob: -8.478089332580566
    5. ' K' → logprob: -10.228089332580566
    6. ' N' → logprob: -11.353089332580566
    7. ' ' → logprob: -11.353089332580566
    8. 'i' → logprob: -11.603089332580566
    9. '(' → logprob: -12.603089332580566
    10. '(K' → logprob: -12.853089332580566

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002912486088462174
    2. ' ,' → logprob: -8.375290870666504
    3. ',K' → logprob: -10.750290870666504
    4. '   ' → logprob: -10.875290870666504
    5. ',N' → logprob: -10.875290870666504
    6. 'K' → logprob: -14.875290870666504
    7. 'N' → logprob: -15.500290870666504
    8. ',
' → logprob: -15.625290870666504
    9. ' K' → logprob: -16.00029182434082
    10. '(N' → logprob: -16.00029182434082

Token 220: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.25420162081718445
    2. 'N' → logprob: -1.5042016506195068
    3. ' K' → logprob: -6.254201412200928
    4. ' N' → logprob: -8.004201889038086
    5. '   ' → logprob: -11.754201889038086
    6. ' ' → logprob: -12.379201889038086
    7. '10' → logprob: -14.879201889038086
    8. '  ' → logprob: -15.004201889038086
    9. '	K' → logprob: -15.504201889038086
    10. '    ' → logprob: -16.379201889038086

Token 221: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.386874258518219
    2. ' +' → logprob: -1.1368741989135742
    3. '):
' → logprob: -13.386874198913574
    4. '   ' → logprob: -13.761874198913574
    5. '+
' → logprob: -15.886874198913574
    6. '):' → logprob: -16.13687515258789
    7. '
' → logprob: -16.26187515258789
    8. ' ' → logprob: -16.38687515258789
    9. ' +
' → logprob: -16.76187515258789
    10. ',' → logprob: -17.26187515258789

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013277375837787986
    2. ' ' → logprob: -6.6263275146484375
    3. '2' → logprob: -13.376327514648438
    4. '   ' → logprob: -15.751327514648438
    5. '```' → logprob: -16.876327514648438
    6. ')' → logprob: -17.001327514648438
    7. '+' → logprob: -18.688827514648438
    8. '  ' → logprob: -18.751327514648438
    9. ' ' → logprob: -18.813827514648438
    10. '
' → logprob: -19.751327514648438

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.375032424926758
    3. '2' → logprob: -14.000032424926758
    4. '   ' → logprob: -17.250032424926758
    5. '```' → logprob: -17.687532424926758
    6. ')' → logprob: -18.250032424926758
    7. '
' → logprob: -18.750032424926758
    8. '

' → logprob: -19.375032424926758
    9. '１' → logprob: -19.562532424926758
    10. '+' → logprob: -19.562532424926758

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039934393018484116
    2. ':' → logprob: -3.2899343967437744
    3. '):
' → logprob: -6.289934158325195
    4. '():' → logprob: -11.164934158325195
    5. ')' → logprob: -11.414934158325195
    6. '   ' → logprob: -12.789934158325195
    7. ':
' → logprob: -13.039934158325195
    8. ' ):' → logprob: -13.539934158325195
    9. '+' → logprob: -13.789934158325195
    10. ',' → logprob: -13.914934158325195

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015174767468124628
    2. '<|end|>' → logprob: -7.251517295837402
    3. '   ' → logprob: -7.626517295837402
    4. ':' → logprob: -9.876517295837402
    5. '        
' → logprob: -10.251517295837402
    6. '    ' → logprob: -10.251517295837402
    7. 'print' → logprob: -10.626517295837402
    8. ',' → logprob: -10.876517295837402
    9. '.' → logprob: -10.876517295837402
    10. ' ' → logprob: -11.251517295837402

Token 226: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03412255272269249
    2. ' print' → logprob: -3.7841224670410156
    3. '       ' → logprob: -5.034122467041016
    4. 'if' (adapté à ' if') → logprob: -6.159122467041016
    5. 'ans' → logprob: -7.034122467041016
    6. 'res' → logprob: -7.659122467041016
    7. ' if' → logprob: -7.784122467041016
    8. 'pr' → logprob: -9.659122467041016
    9. ' ans' → logprob: -9.784122467041016
    10. '   ' → logprob: -9.784122467041016

Token 227: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42636606097221375
    2. 'i' → logprob: -1.1763660907745361
    3. ' N' → logprob: -4.051365852355957
    4. 'N' → logprob: -4.051365852355957
    5. ' K' → logprob: -6.051365852355957
    6. 'K' → logprob: -6.801365852355957
    7. ' ' → logprob: -8.551365852355957
    8. '(i' → logprob: -9.613865852355957
    9. '2' → logprob: -10.238865852355957
    10. '(' → logprob: -10.238865852355957

Token 228: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8781006336212158
    2. '>' → logprob: -1.3781006336212158
    3. '%' → logprob: -2.378100633621216
    4. ' ==' → logprob: -2.628100633621216
    5. ' <=' → logprob: -2.753100633621216
    6. '<=' → logprob: -3.128100633621216
    7. '==' → logprob: -3.253100633621216
    8. ' %' → logprob: -4.753100395202637
    9. '<' → logprob: -5.253100395202637
    10. ' <' → logprob: -6.128100395202637

Token 229: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.1424973713001236e-05
    2. ' N' → logprob: -10.625031471252441
    3. 'min' → logprob: -12.750031471252441
    4. 'K' → logprob: -12.750031471252441
    5. ' ' → logprob: -14.125031471252441
    6. ')' → logprob: -15.500031471252441
    7. '   ' → logprob: -16.375030517578125
    8. 'i' → logprob: -16.375030517578125
    9. 'M' → logprob: -17.000030517578125
    10. 'n' → logprob: -17.375030517578125

Token 230: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12842510640621185
    2. ':' → logprob: -2.128425121307373
    3. '):
' → logprob: -7.503425121307373
    4. ' and' → logprob: -7.628425121307373
    5. '       ' → logprob: -8.378424644470215
    6. ':
' → logprob: -9.878424644470215
    7. '==' → logprob: -10.003424644470215
    8. 'and' → logprob: -10.503424644470215
    9. '):' → logprob: -10.753424644470215
    10. '           ' → logprob: -10.753424644470215

Token 231: ' K' (ID: 658)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03137242794036865
    2. '1' → logprob: -3.531372547149658
    3. 'K' → logprob: -6.531372547149658
    4. ' i' → logprob: -9.1563720703125
    5. '2' → logprob: -11.0313720703125
    6. 'N' → logprob: -11.2813720703125
    7. ' ' → logprob: -11.5313720703125
    8. '(i' → logprob: -11.5313720703125
    9. '(' → logprob: -12.9063720703125
    10. '   ' → logprob: -13.5313720703125

Token 232: ' +' (ID: 659)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25387439131736755
    2. ':' → logprob: -1.50387442111969
    3. '       ' → logprob: -7.1288743019104
    4. '):
' → logprob: -7.3788743019104
    5. ' and' → logprob: -8.503874778747559
    6. '):' → logprob: -8.878874778747559
    7. '   ' → logprob: -10.003874778747559
    8. '           ' → logprob: -10.503874778747559
    9. ':
' → logprob: -10.753874778747559
    10. '+' → logprob: -10.753874778747559

Token 233: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12699897587299347
    2. '1' → logprob: -2.1269989013671875
    3. ' i' → logprob: -9.626998901367188
    4. ' ' → logprob: -13.001998901367188
    5. '   ' → logprob: -14.376998901367188
    6. '```' → logprob: -15.001998901367188
    7. '2' → logprob: -15.126998901367188
    8. '(i' → logprob: -15.251998901367188
    9. '_i' → logprob: -15.376998901367188
    10. '
' → logprob: -15.626998901367188

Token 234: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005247275810688734
    2. '1' → logprob: -5.255247116088867
    3. ' i' → logprob: -11.255247116088867
    4. ' ' → logprob: -15.505247116088867
    5. '_i' → logprob: -16.255247116088867
    6. '   ' → logprob: -16.755247116088867
    7. '```' → logprob: -16.880247116088867
    8. '	i' → logprob: -17.005247116088867
    9. '{i' → logprob: -17.755247116088867
    10. 'j' → logprob: -17.755247116088867

Token 235: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2522754967212677
    2. ':' → logprob: -1.5022754669189453
    3. '):
' → logprob: -8.377275466918945
    4. '       ' → logprob: -10.377275466918945
    5. '():
' → logprob: -10.627275466918945
    6. ' and' → logprob: -10.752275466918945
    7. '):' → logprob: -11.502275466918945
    8. ':
' → logprob: -11.752275466918945
    9. ' :
' → logprob: -11.877275466918945
    10. ':

' → logprob: -12.502275466918945

Token 236: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4867700934410095
    2. '           ' → logprob: -0.9867700934410095
    3. ':
' → logprob: -4.736770153045654
    4. '       ' → logprob: -6.111770153045654
    5. 'print' → logprob: -7.611770153045654
    6. ',' → logprob: -8.236769676208496
    7. ' print' → logprob: -8.611769676208496
    8. '):' → logprob: -8.736769676208496
    9. ' :' → logprob: -9.236769676208496
    10. '():
' → logprob: -9.736769676208496

Token 237: ' x' (ID: 1215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038001783192157745
    2. ' print' → logprob: -4.038002014160156
    3. '       ' → logprob: -4.163002014160156
    4. '           ' → logprob: -5.538002014160156
    5. '               ' → logprob: -9.038002014160156
    6. '   ' → logprob: -11.413002014160156
    7. '
' → logprob: -11.788002014160156
    8. 'result' → logprob: -12.038002014160156
    9. '        
' → logprob: -12.288002014160156
    10. '```' → logprob: -12.913002014160156

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860439524054527
    2. '=' → logprob: -3.0486044883728027
    3. 'print' → logprob: -11.923604011535645
    4. ' =(' → logprob: -12.923604011535645
    5. '=int' → logprob: -12.923604011535645
    6. '=(' → logprob: -13.548604011535645
    7. ' ' → logprob: -14.423604011535645
    8. '   ' → logprob: -14.923604011535645
    9. '=i' → logprob: -15.048604011535645
    10. ',' → logprob: -15.173604011535645

Token 239: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.05882487818598747
    2. ' comb' → logprob: -3.1838247776031494
    3. '(' → logprob: -4.8088250160217285
    4. '(com' → logprob: -5.3088250160217285
    5. ' (' → logprob: -6.8088250160217285
    6. 'com' → logprob: -7.4338250160217285
    7. '(N' → logprob: -7.9338250160217285
    8. 'pow' → logprob: -8.93382453918457
    9. '(i' → logprob: -9.30882453918457
    10. '(n' → logprob: -9.80882453918457

Token 240: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001478796184528619
    2. 'N' → logprob: -9.500147819519043
    3. '(' → logprob: -9.625147819519043
    4. '(K' → logprob: -12.125147819519043
    5. '(n' → logprob: -15.000147819519043
    6. '<N' → logprob: -15.500147819519043
    7. '((' → logprob: -15.625147819519043
    8. '	N' → logprob: -15.875147819519043
    9. '\(' → logprob: -16.00014877319336
    10. '(
' → logprob: -16.25014877319336

Token 241: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027031904086470604
    2. ',i' → logprob: -4.402031898498535
    3. ' ,' → logprob: -4.777031898498535
    4. 'i' → logprob: -5.902031898498535
    5. ' i' → logprob: -6.402031898498535
    6. '-' → logprob: -6.902031898498535
    7. ',
' → logprob: -8.152031898498535
    8. ',K' → logprob: -9.402031898498535
    9. '-i' → logprob: -10.152031898498535
    10. ' -' → logprob: -10.277031898498535

Token 242: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0166369266808033
    2. 'i' → logprob: -4.141636848449707
    3. ' K' → logprob: -7.891636848449707
    4. '           ' → logprob: -9.266636848449707
    5. '1' → logprob: -10.141636848449707
    6. ' i' → logprob: -10.766636848449707
    7. ' ' → logprob: -10.891636848449707
    8. '   ' → logprob: -11.016636848449707
    9. '       ' → logprob: -11.766636848449707
    10. '               ' → logprob: -11.891636848449707

Token 243: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6056164503097534
    2. 'i' → logprob: -1.4806164503097534
    3. '+' → logprob: -1.6056164503097534
    4. ',i' → logprob: -4.730616569519043
    5. '+i' → logprob: -5.230616569519043
    6. ' i' → logprob: -5.355616569519043
    7. ' +' → logprob: -5.855616569519043
    8. ' ,' → logprob: -6.355616569519043
    9. '   ' → logprob: -6.855616569519043
    10. '           ' → logprob: -7.980616569519043

Token 244: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001848081941716373
    2. ' i' → logprob: -6.876848220825195
    3. '1' → logprob: -7.126848220825195
    4. '           ' → logprob: -13.126848220825195
    5. '
' → logprob: -13.251848220825195
    6. 'x' → logprob: -13.376848220825195
    7. ' ' → logprob: -13.501848220825195
    8. '   ' → logprob: -13.876848220825195
    9. '_i' → logprob: -14.251848220825195
    10. '2' → logprob: -14.876848220825195

Token 245: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016263832803815603
    2. '1' → logprob: -7.126626491546631
    3. ' i' → logprob: -7.126626491546631
    4. '
' → logprob: -12.126626014709473
    5. '   ' → logprob: -12.626626014709473
    6. ' ' → logprob: -12.876626014709473
    7. '_i' → logprob: -13.751626014709473
    8. '	i' → logprob: -13.876626014709473
    9. '  ' → logprob: -14.001626014709473
    10. '```' → logprob: -14.126626014709473

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006485754274763167
    2. ',i' → logprob: -7.625648498535156
    3. ' ,' → logprob: -8.750648498535156
    4. ',
' → logprob: -13.875648498535156
    5. 'i' → logprob: -14.500648498535156
    6. '(i' → logprob: -15.125648498535156
    7. ',x' → logprob: -16.000648498535156
    8. ' i' → logprob: -16.250648498535156
    9. '(),' → logprob: -16.500648498535156
    10. ',n' → logprob: -16.625648498535156

Token 247: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018151231110095978
    2. ' i' → logprob: -4.01815128326416
    3. '	i' → logprob: -14.51815128326416
    4. '   ' → logprob: -15.01815128326416
    5. ' ' → logprob: -15.51815128326416
    6. ')i' → logprob: -16.643150329589844
    7. '_i' → logprob: -17.018150329589844
    8. '
' → logprob: -17.268150329589844
    9. '           ' → logprob: -17.393150329589844
    10. '       ' → logprob: -17.393150329589844

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ' ,' → logprob: -10.875022888183594
    3. 'MOD' → logprob: -13.000022888183594
    4. ' MOD' → logprob: -14.750022888183594
    5. '   ' → logprob: -14.875022888183594
    6. '(M' → logprob: -16.000022888183594
    7. '```' → logprob: -16.125022888183594
    8. ')' → logprob: -16.750022888183594
    9. '(),' → logprob: -16.875022888183594
    10. ',
' → logprob: -16.875022888183594

Token 249: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.5597102396423e-05
    2. ' MOD' → logprob: -10.250035285949707
    3. '10' → logprob: -15.625035285949707
    4. '           ' → logprob: -17.250036239624023
    5. '   ' → logprob: -18.375036239624023
    6. 'mod' → logprob: -20.000036239624023
    7. '       ' → logprob: -20.125036239624023
    8. 'MO' → logprob: -20.250036239624023
    9. '.MOD' → logprob: -20.500036239624023
    10. '_MOD' → logprob: -20.500036239624023

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1016237661242485
    2. ')
' → logprob: -2.351623773574829
    3. '           ' → logprob: -6.60162353515625
    4. ')
' → logprob: -10.72662353515625
    5. ',' → logprob: -10.85162353515625
    6. '       ' → logprob: -11.35162353515625
    7. '               ' → logprob: -13.72662353515625
    8. ')

' → logprob: -14.22662353515625
    9. ')*' → logprob: -14.47662353515625
    10. '   ' → logprob: -15.10162353515625

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5730835199356079
    2. '       ' → logprob: -0.9480835199356079
    3. 'print' → logprob: -3.0730834007263184
    4. '        
' → logprob: -7.448083400726318
    5. '	       ' → logprob: -7.948083400726318
    6. '<|end|>' → logprob: -7.948083400726318
    7. ' print' → logprob: -8.198083877563477
    8. '   ' → logprob: -8.698083877563477
    9. '            
' → logprob: -8.948083877563477
    10. 'x' → logprob: -9.823083877563477

Token 252: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0022784846369177103
    2. 'print' → logprob: -6.2522783279418945
    3. ' y' → logprob: -8.627278327941895
    4. '           ' → logprob: -9.627278327941895
    5. 'ans' → logprob: -9.877278327941895
    6. 'x' → logprob: -10.502278327941895
    7. '       ' → logprob: -11.877278327941895
    8. 'pow' → logprob: -12.877278327941895
    9. 'res' → logprob: -13.002278327941895
    10. 'rest' → logprob: -13.127278327941895

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407856583595276
    2. '=' → logprob: -0.9740785360336304
    3. ' ' → logprob: -13.974078178405762
    4. '=
' → logprob: -15.974078178405762
    5. 'x' → logprob: -16.349079132080078
    6. '＝' → logprob: -16.724079132080078
    7. ')' → logprob: -16.724079132080078
    8. '<|end|>' → logprob: -17.099079132080078
    9. ' =
' → logprob: -17.224079132080078
    10. ',' → logprob: -17.349079132080078

Token 254: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.009031449444591999
    2. ' comb' → logprob: -5.384031295776367
    3. 'pow' → logprob: -6.134031295776367
    4. 'power' → logprob: -7.384031295776367
    5. '(' → logprob: -7.509031295776367
    6. 'fr' → logprob: -7.884031295776367
    7. 'com' → logprob: -8.759031295776367
    8. 'fram' → logprob: -9.134031295776367
    9. '(com' → logprob: -9.634031295776367
    10. '   ' → logprob: -9.634031295776367

Token 255: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0564066506922245
    2. '(N' → logprob: -2.9314067363739014
    3. 'K' → logprob: -7.056406497955322
    4. '(' → logprob: -7.556406497955322
    5. 'N' → logprob: -9.55640697479248
    6. ' ' → logprob: -11.18140697479248
    7. '(
' → logprob: -11.18140697479248
    8. '  ' → logprob: -11.55640697479248
    9. '((' → logprob: -11.55640697479248
    10. '(M' → logprob: -12.05640697479248

Token 256: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49155429005622864
    2. 'i' → logprob: -1.1165542602539062
    3. ',i' → logprob: -2.9915542602539062
    4. '-' → logprob: -5.616554260253906
    5. ' i' → logprob: -5.866554260253906
    6. '1' → logprob: -5.991554260253906
    7. '   ' → logprob: -7.116554260253906
    8. ' ' → logprob: -7.741554260253906
    9. ' -' → logprob: -8.616554260253906
    10. ' ,' → logprob: -8.741554260253906

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '   ' → logprob: -12.500009536743164
    3. ' ' → logprob: -12.750009536743164
    4. 'i' → logprob: -13.000009536743164
    5. '-' → logprob: -14.500009536743164
    6. '
' → logprob: -16.625009536743164
    7. '  ' → logprob: -16.750009536743164
    8. ' -' → logprob: -16.875009536743164
    9. '```' → logprob: -17.250009536743164
    10. '2' → logprob: -17.750009536743164

Token 258: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2015480101108551
    2. '1' → logprob: -1.7015479803085327
    3. ' i' → logprob: -8.951547622680664
    4. '_i' → logprob: -12.951547622680664
    5. '	i' → logprob: -13.576547622680664
    6. ' ' → logprob: -14.076547622680664
    7. '2' → logprob: -14.826547622680664
    8. '   ' → logprob: -16.826547622680664
    9. '{i' → logprob: -16.826547622680664
    10. ',i' → logprob: -17.326547622680664

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010166722349822521
    2. ',i' → logprob: -4.885166645050049
    3. ' ,' → logprob: -6.260166645050049
    4. '           ' → logprob: -8.010167121887207
    5. 'i' → logprob: -8.385167121887207
    6. '               ' → logprob: -10.010167121887207
    7. '   ' → logprob: -11.635167121887207
    8. ' i' → logprob: -11.885167121887207
    9. '                   ' → logprob: -12.010167121887207
    10. '(i' → logprob: -12.010167121887207

Token 260: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001752295414917171
    2. ' i' → logprob: -6.8767523765563965
    3. '           ' → logprob: -7.2517523765563965
    4. '(i' → logprob: -12.126751899719238
    5. '   ' → logprob: -13.126751899719238
    6. '	i' → logprob: -13.876751899719238
    7. '                   ' → logprob: -14.126751899719238
    8. '               ' → logprob: -15.001751899719238
    9. '{i' → logprob: -15.001751899719238
    10. '(' → logprob: -16.126752853393555

Token 261: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0029396675527095795
    2. ' -' → logprob: -6.002939701080322
    3. '1' → logprob: -8.127939224243164
    4. '           ' → logprob: -9.627939224243164
    5. '   ' → logprob: -9.627939224243164
    6. '       ' → logprob: -11.127939224243164
    7. 'i' → logprob: -11.752939224243164
    8. ',' → logprob: -11.877939224243164
    9. ')' → logprob: -13.377939224243164
    10. ' ' → logprob: -13.377939224243164

Token 262: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.000003814697266
    4. ')' → logprob: -18.125003814697266
    5. '0' → logprob: -18.375003814697266
    6. '  ' → logprob: -18.875003814697266
    7. ',' → logprob: -19.000003814697266
    8. '１' → logprob: -19.250003814697266
    9. '```' → logprob: -19.375003814697266
    10. '    ' → logprob: -19.500003814697266

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '0' → logprob: -16.250001907348633
    4. '   ' → logprob: -18.000001907348633
    5. ')' → logprob: -19.000001907348633
    6. '１' → logprob: -19.500001907348633
    7. '۱' → logprob: -19.750001907348633
    8. '```' → logprob: -19.875001907348633
    9. '2' → logprob: -20.250001907348633
    10. '  ' → logprob: -20.562501907348633

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. '           ' → logprob: -12.000008583068848
    3. ' ,' → logprob: -13.250008583068848
    4. ')' → logprob: -14.375008583068848
    5. '       ' → logprob: -15.375008583068848
    6. '   ' → logprob: -17.500009536743164
    7. '),' → logprob: -17.500009536743164
    8. '```' → logprob: -17.875009536743164
    9. ',
' → logprob: -18.000009536743164
    10. '          ' → logprob: -18.500009536743164

Token 265: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007101670489646494
    2. ' MOD' → logprob: -7.2507100105285645
    3. '           ' → logprob: -16.625709533691406
    4. '_MOD' → logprob: -16.875709533691406
    5. 'MO' → logprob: -18.125709533691406
    6. '   ' → logprob: -18.625709533691406
    7. '.MOD' → logprob: -18.750709533691406
    8. '               ' → logprob: -20.125709533691406
    9. 'M' → logprob: -20.500709533691406
    10. '    ' → logprob: -20.625709533691406

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43404343724250793
    2. ')
' → logprob: -1.0590434074401855
    3. '           ' → logprob: -5.3090434074401855
    4. ',' → logprob: -8.434043884277344
    5. ')
' → logprob: -8.934043884277344
    6. '       ' → logprob: -10.684043884277344
    7. '          ' → logprob: -13.309043884277344
    8. ')

' → logprob: -13.309043884277344
    9. '   ' → logprob: -14.059043884277344
    10. ')%' → logprob: -14.559043884277344

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025122879073023796
    2. 'print' → logprob: -3.900122880935669
    3. '       ' → logprob: -5.40012264251709
    4. ' print' → logprob: -10.65012264251709
    5. '
' → logprob: -11.40012264251709
    6. '```' → logprob: -11.40012264251709
    7. '   ' → logprob: -12.52512264251709
    8. '        
' → logprob: -13.27512264251709
    9. '            
' → logprob: -13.52512264251709
    10. '	       ' → logprob: -14.77512264251709

Token 268: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001319063303526491
    2. '           ' → logprob: -9.625131607055664
    3. ' print' → logprob: -10.375131607055664
    4. '       ' → logprob: -10.375131607055664
    5. 'z' → logprob: -13.000131607055664
    6. '
' → logprob: -14.125131607055664
    7. '	print' → logprob: -15.625131607055664
    8. '   ' → logprob: -16.375131607055664
    9. 'result' → logprob: -16.500131607055664
    10. 'answer' → logprob: -17.250131607055664

Token 269: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.031241077929735184
    2. '((' → logprob: -3.5312411785125732
    3. '(' → logprob: -6.531240940093994
    4. '(f' → logprob: -10.531241416931152
    5. 'x' → logprob: -12.781241416931152
    6. ' (' → logprob: -13.906241416931152
    7. '(y' → logprob: -14.156241416931152
    8. '(((' → logprob: -15.031241416931152
    9. '(pow' → logprob: -15.531241416931152
    10. '(
' → logprob: -15.781241416931152

Token 270: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25224778056144714
    2. '(x' → logprob: -1.5022478103637695
    3. ' x' → logprob: -8.25224781036377
    4. ' (' → logprob: -10.12724781036377
    5. '(' → logprob: -11.00224781036377
    6. ')x' → logprob: -15.62724781036377
    7. '{x' → logprob: -15.62724781036377
    8. '   ' → logprob: -15.75224781036377
    9. '[x' → logprob: -15.75224781036377
    10. ' ' → logprob: -15.87724781036377

Token 271: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931567788124084
    2. ' *' → logprob: -0.6931567788124084
    3. '*y' → logprob: -12.068157196044922
    4. ' ' → logprob: -12.943157196044922
    5. '   ' → logprob: -14.318157196044922
    6. ' ' → logprob: -14.943157196044922
    7. '    ' → logprob: -15.818157196044922
    8. '**' → logprob: -15.943157196044922
    9. '  ' → logprob: -16.693157196044922
    10. '*
' → logprob: -16.818157196044922

Token 272: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00861468818038702
    2. ' y' → logprob: -4.758614540100098
    3. '(y' → logprob: -16.383615493774414
    4. ' ' → logprob: -16.883615493774414
    5. '   ' → logprob: -17.383615493774414
    6. '
' → logprob: -17.633615493774414
    7. '	y' → logprob: -18.008615493774414
    8. '    ' → logprob: -18.883615493774414
    9. 'x' → logprob: -19.008615493774414
    10. '  ' → logprob: -19.383615493774414

Token 273: ')' (ID: 8)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4296603500843048
    2. '%' → logprob: -1.1796603202819824
    3. ')' → logprob: -3.1796603202819824
    4. ')%' → logprob: -8.17966079711914
    5. ' ' → logprob: -12.67966079711914
    6. '   ' → logprob: -13.42966079711914
    7. ' )' → logprob: -14.55466079711914
    8. '  ' → logprob: -15.42966079711914
    9. '%s' → logprob: -15.55466079711914
    10. '%c' → logprob: -15.55466079711914

Token 274: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20217657089233398
    2. ' %' → logprob: -1.702176570892334
    3. ')' → logprob: -7.202176570892334
    4. ')%' → logprob: -11.577177047729492
    5. ' ' → logprob: -12.327177047729492
    6. '   ' → logprob: -13.327177047729492
    7. ')
' → logprob: -14.952177047729492
    8. '  ' → logprob: -14.952177047729492
    9. '%D' → logprob: -14.952177047729492
    10. '%A' → logprob: -15.327177047729492

Token 275: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00020354038861114532
    2. ' MOD' → logprob: -8.500203132629395
    3. '.MOD' → logprob: -21.25020408630371
    4. '_MOD' → logprob: -21.37520408630371
    5. ' ' → logprob: -21.62520408630371
    6. '(M' → logprob: -21.87520408630371
    7. '
' → logprob: -21.87520408630371
    8. '   ' → logprob: -22.00020408630371
    9. '```' → logprob: -22.00020408630371
    10. 'MO' → logprob: -22.00020408630371

Token 276: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. '))' → logprob: -11.000030517578125
    3. ')
' → logprob: -11.625030517578125
    4. ' )' → logprob: -12.875030517578125
    5. ')}}' → logprob: -15.000030517578125
    6. ')")' → logprob: -15.000030517578125
    7. ')`' → logprob: -15.125030517578125
    8. '   ' → logprob: -15.250030517578125
    9. ')}' → logprob: -15.375030517578125
    10. ')))' → logprob: -15.625030517578125

Token 277: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.001556282164528966
    2. ' else' → logprob: -6.501556396484375
    3. '   ' → logprob: -11.001556396484375
    4. '<|end|>' → logprob: -11.126556396484375
    5. 'elif' → logprob: -11.626556396484375
    6. '	else' → logprob: -11.876556396484375
    7. '```' → logprob: -12.501556396484375
    8. '       ' → logprob: -13.876556396484375
    9. ' ' → logprob: -14.251556396484375
    10. '
' → logprob: -14.501556396484375

Token 279: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5897015333175659
    2. ':' → logprob: -0.8397015333175659
    3. ':
' → logprob: -4.3397016525268555
    4. '       ' → logprob: -7.5897016525268555
    5. '   ' → logprob: -10.089701652526855
    6. 'break' → logprob: -10.339701652526855
    7. ' :' → logprob: -11.089701652526855
    8. '```' → logprob: -11.964701652526855
    9. '          ' → logprob: -12.214701652526855
    10. ' break' → logprob: -12.214701652526855

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0711185559630394
    2. 'print' → logprob: -3.0711185932159424
    3. 'break' → logprob: -3.8211185932159424
    4. ' break' → logprob: -8.696118354797363
    5. '       ' → logprob: -8.821118354797363
    6. ' print' → logprob: -10.071118354797363
    7. '```' → logprob: -11.446118354797363
    8. '   ' → logprob: -12.821118354797363
    9. '               ' → logprob: -12.946118354797363
    10. 'for' → logprob: -13.821118354797363

Token 281: ' print' (ID: 2123)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.005695553962141275
    2. 'print' (adapté à ' print') → logprob: -5.255695343017578
    3. '           ' → logprob: -7.755695343017578
    4. ' break' → logprob: -10.630695343017578
    5. '       ' → logprob: -12.005695343017578
    6. 'return' → logprob: -13.130695343017578
    7. '```' → logprob: -14.380695343017578
    8. '   ' → logprob: -15.380695343017578
    9. '	break' → logprob: -15.630695343017578
    10. 'pass' → logprob: -15.755695343017578

Token 282: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.061676347395405e-05
    2. '()' → logprob: -10.12505054473877
    3. '0' → logprob: -11.62505054473877
    4. '("' → logprob: -14.25005054473877
    5. '('' → logprob: -15.00005054473877
    6. '(
' → logprob: -15.12505054473877
    7. '((' → logprob: -15.62505054473877
    8. '(-' → logprob: -16.500051498413086
    9. ' (' → logprob: -16.625051498413086
    10. '()
' → logprob: -16.875051498413086

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.250000953674316
    4. ')' → logprob: -16.500001907348633
    5. '"' → logprob: -18.125001907348633
    6. '00' → logprob: -18.750001907348633
    7. '000' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '۰' → logprob: -20.625001907348633
    10. '０' → logprob: -21.437501907348633

Token 284: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.875003814697266
    3. '<|end|>' → logprob: -15.125003814697266
    4. '')' → logprob: -15.500003814697266
    5. ' )' → logprob: -15.500003814697266
    6. '   ' → logprob: -15.500003814697266
    7. '`)' → logprob: -15.625003814697266
    8. '")' → logprob: -15.875003814697266
    9. '())' → logprob: -15.875003814697266
    10. '))' → logprob: -16.125003814697266

Token 285: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3868771195411682
    2. ' __' → logprob: -1.1368770599365234
    3. 'name' → logprob: -13.261877059936523
    4. '_' → logprob: -13.386877059936523
    5. '___' → logprob: -13.886877059936523
    6. '_name' → logprob: -14.011877059936523
    7. '/__' → logprob: -15.636877059936523
    8. '```' → logprob: -15.761877059936523
    9. '.__' → logprob: -15.886877059936523
    10. ' ' → logprob: -16.011877059936523

Token 287: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0020805513486266136
    2. '==' → logprob: -6.25208044052124
    3. ' ==' → logprob: -9.127080917358398
    4. '__.__' → logprob: -11.127080917358398
    5. '=="' → logprob: -11.752080917358398
    6. '_' → logprob: -12.627080917358398
    7. '__,' → logprob: -13.127080917358398
    8. '```' → logprob: -13.252080917358398
    9. ' __' → logprob: -13.377080917358398
    10. '__*/' → logprob: -13.502080917358398

Token 288: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.176947600673884e-05
    2. '==' → logprob: -11.375021934509277
    3. '__.__' → logprob: -11.875021934509277
    4. ' ==' → logprob: -13.375021934509277
    5. '__.' → logprob: -14.375021934509277
    6. 'name' → logprob: -15.000021934509277
    7. '__
' → logprob: -15.625021934509277
    8. '=="' → logprob: -15.750021934509277
    9. '___' → logprob: -16.00002098083496
    10. '```' → logprob: -16.50002098083496

Token 289: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5894669890403748
    2. '__' → logprob: -1.3394670486450195
    3. ' ==' → logprob: -1.7144670486450195
    4. '=="' → logprob: -6.2144670486450195
    5. '=='' → logprob: -6.7144670486450195
    6. '=' → logprob: -10.33946704864502
    7. '===' → logprob: -10.46446704864502
    8. '_' → logprob: -10.58946704864502
    9. '___' → logprob: -12.08946704864502
    10. '==
' → logprob: -13.08946704864502

Token 290: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01105159055441618
    2. ''' → logprob: -4.511051654815674
    3. '__' → logprob: -13.136051177978516
    4. ' "__' → logprob: -13.261051177978516
    5. ' '__' → logprob: -17.136051177978516
    6. '"user' → logprob: -17.136051177978516
    7. '"name' → logprob: -18.011051177978516
    8. '"_' → logprob: -18.136051177978516
    9. '"class' → logprob: -18.636051177978516
    10. ''"' → logprob: -18.761051177978516

Token 291: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001044124481268227
    2. 'name' → logprob: -6.876044273376465
    3. '__' → logprob: -11.501044273376465
    4. 'built' → logprob: -14.626044273376465
    5. 'm' → logprob: -15.501044273376465
    6. 'if' → logprob: -15.501044273376465
    7. '_main' → logprob: -16.25104331970215
    8. ' main' → logprob: -16.75104331970215
    9. 'ma' → logprob: -17.37604331970215
    10. '```' → logprob: -17.62604331970215

Token 292: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.5764480233192444
    2. '__' → logprob: -0.8264480233192444
    3. '__:' → logprob: -7.7014479637146
    4. '__":
' → logprob: -10.076448440551758
    5. '_' → logprob: -12.076448440551758
    6. ':' → logprob: -12.701448440551758
    7. '__.' → logprob: -12.826448440551758
    8. '':' → logprob: -14.076448440551758
    9. '__('' → logprob: -14.826448440551758
    10. '__.__' → logprob: -14.951448440551758

Token 293: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0044931392185389996
    2. ' main' → logprob: -5.754493236541748
    3. '	main' → logprob: -6.754493236541748
    4. '   ' → logprob: -9.37949275970459
    5. '_main' → logprob: -10.50449275970459
    6. '__' → logprob: -10.62949275970459
    7. '    
' → logprob: -12.87949275970459
    8. '(main' → logprob: -13.00449275970459
    9. '```' → logprob: -13.62949275970459
    10. '<|end|>' → logprob: -13.62949275970459

Token 294: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.935296834039036e-06
    2. ' main' → logprob: -12.75000286102295
    3. '	main' → logprob: -19.000003814697266
    4. '   ' → logprob: -19.750003814697266
    5. '.main' → logprob: -24.875003814697266
    6. '(main' → logprob: -26.000003814697266
    7. '_main' → logprob: -26.250003814697266
    8. ' ' → logprob: -26.500003814697266
    9. '```' → logprob: -26.750003814697266
    10. 'import' → logprob: -27.250003814697266

Token 295: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 293
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 269
Précision stricte (1ère position): 43.69%
Précision adaptée (1ère position): 47.10%
Précision (top 10): 91.81%
================================================================================
