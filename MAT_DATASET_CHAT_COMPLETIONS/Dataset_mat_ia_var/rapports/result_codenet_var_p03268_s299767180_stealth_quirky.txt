================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin as __S; __I = __S.readline

N, K = map(int, __I().split())

__A = divmod(N, K)

___ = lambda x: __A[0]+(1 if (x!=0 and x<=__A[1])or(x==0 and __A[1]==K) else 0)

Ω, i = 0, 0

while i<K:
    α=i
    β=(-i)%K
    γ=(-i)%K
    if not (β+γ)%K:
        Ω+=___(α)*___(β)*___(γ)
    i+=1

print(Ω)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: ' __' (ID: 2516)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07850512117147446
    2. ' input' → logprob: -3.453505039215088
    3. 'sys' → logprob: -3.703505039215088
    4. 'stdin' → logprob: -4.328505039215088
    5. ' sys' → logprob: -6.453505039215088
    6. 'f' → logprob: -6.828505039215088
    7. 's' → logprob: -6.828505039215088
    8. 'in' → logprob: -7.578505039215088
    9. 'inp' → logprob: -7.828505039215088
    10. 'r' → logprob: -7.828505039215088

Token 6: 'S' (ID: 50)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.027814462780952454
    2. 's' → logprob: -5.0278143882751465
    3. 'argv' → logprob: -5.0278143882751465
    4. 'std' → logprob: -5.1528143882751465
    5. 'sys' → logprob: -6.2778143882751465
    6. 'in' → logprob: -6.2778143882751465
    7. 'st' → logprob: -6.6528143882751465
    8. 'input' → logprob: -6.7778143882751465
    9. 'f' → logprob: -7.5278143882751465
    10. '__' → logprob: -7.7778143882751465

Token 7: ';' (ID: 26)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007385154603980482
    2. '[' → logprob: -7.750738620758057
    3. ',' → logprob: -8.750738143920898
    4. '.
' → logprob: -10.500738143920898
    5. '.readline' → logprob: -10.625738143920898
    6. '.read' → logprob: -11.375738143920898
    7. '.

' → logprob: -11.750738143920898
    8. ';' → logprob: -11.750738143920898
    9. '.__' → logprob: -11.750738143920898
    10. '.

' → logprob: -12.000738143920898

Token 8: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07878337055444717
    2. 'for' → logprob: -3.4537832736968994
    3. '_' → logprob: -3.7037832736968994
    4. 'stdin' → logprob: -5.2037835121154785
    5. 'input' → logprob: -5.4537835121154785
    6. '____' → logprob: -6.2037835121154785
    7. 'read' → logprob: -6.4537835121154785
    8. 'def' → logprob: -6.4537835121154785
    9. '___' → logprob: -6.8287835121154785
    10. ' __' → logprob: -7.2037835121154785

Token 9: 'I' (ID: 40)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -7.896309739408025e-07
    2. ' S' → logprob: -15.000000953674316
    3. '_S' → logprob: -15.875000953674316
    4. '__' → logprob: -16.75
    5. 'print' → logprob: -17.25
    6. 'I' → logprob: -17.375
    7. 'stdin' → logprob: -18.125
    8. 's' → logprob: -18.9375
    9. 'import' → logprob: -18.9375
    10. '-S' → logprob: -19.0625

Token 10: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4585376977920532
    2. 'n' → logprob: -1.3335376977920532
    3. '.__' → logprob: -3.0835375785827637
    4. 'N' → logprob: -3.9585375785827637
    5. '__.' → logprob: -4.708537578582764
    6. 'O' → logprob: -4.833537578582764
    7. '_' → logprob: -4.833537578582764
    8. '.' → logprob: -5.458537578582764
    9. '_n' → logprob: -6.708537578582764
    10. 'np' → logprob: -7.083537578582764

Token 11: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6855722665786743
    2. '__' → logprob: -0.9355722665786743
    3. 'input' → logprob: -3.1855721473693848
    4. ' iter' → logprob: -3.3105721473693848
    5. ' input' → logprob: -4.185572147369385
    6. 'iter' → logprob: -5.310572147369385
    7. 'int' → logprob: -6.060572147369385
    8. 'list' → logprob: -6.685572147369385
    9. ' list' → logprob: -7.185572147369385
    10. ' int' → logprob: -7.185572147369385

Token 12: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.014198172837495804
    2. 'I' → logprob: -4.264198303222656
    3. '__' → logprob: -11.389198303222656
    4. '_S' → logprob: -12.389198303222656
    5. 'O' → logprob: -13.014198303222656
    6. 'input' → logprob: -13.264198303222656
    7. 'user' → logprob: -13.389198303222656
    8. 'import' → logprob: -13.639198303222656
    9. 'C' → logprob: -14.014198303222656
    10. 'stdin' → logprob: -14.014198303222656

Token 13: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3517168164253235
    2. '.readline' → logprob: -1.3517167568206787
    3. '.read' → logprob: -3.6017167568206787
    4. '.__' → logprob: -5.101716995239258
    5. 'read' → logprob: -6.226716995239258
    6. ';' → logprob: -7.226716995239258
    7. '.readlines' → logprob: -7.976716995239258
    8. '__' → logprob: -8.476716995239258
    9. ',' → logprob: -8.476716995239258
    10. '.Read' → logprob: -9.476716995239258

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3774717152118683
    2. '()' → logprob: -1.377471685409546
    3. '(
' → logprob: -3.252471685409546
    4. '
' → logprob: -5.002471923828125
    5. '()
' → logprob: -5.127471923828125
    6. ')' → logprob: -6.252471923828125
    7. ' ' → logprob: -6.377471923828125
    8. ',' → logprob: -6.502471923828125
    9. '#' → logprob: -6.752471923828125
    10. 'def' → logprob: -6.877471923828125

Token 15: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1485857218503952
    2. '()' → logprob: -2.023585796356201
    3. '(
' → logprob: -5.773585796356201
    4. '()
' → logprob: -7.148585796356201
    5. '
' → logprob: -7.523585796356201
    6. ')' → logprob: -8.398585319519043
    7. '#' → logprob: -8.648585319519043
    8. '\(' → logprob: -8.898585319519043
    9. ',' → logprob: -9.023585319519043
    10. '(

' → logprob: -9.523585319519043

Token 16: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4651308059692383
    2. ' =' → logprob: -1.3401308059692383
    3. '=' → logprob: -2.7151308059692383
    4. ')' → logprob: -3.5901308059692383
    5. '<|end|>' → logprob: -4.465130805969238
    6. '  ' → logprob: -6.840130805969238
    7. ',' → logprob: -7.465130805969238
    8. '+' → logprob: -7.590130805969238
    9. ' )' → logprob: -7.840130805969238
    10. '.' → logprob: -7.840130805969238

Token 17: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3794500529766083
    2. ' M' → logprob: -1.7544500827789307
    3. 'K' → logprob: -2.5044500827789307
    4. ' K' → logprob: -3.8794500827789307
    5. ' ' → logprob: -4.379449844360352
    6. 'N' → logprob: -5.379449844360352
    7. '=' → logprob: -5.629449844360352
    8. 'input' → logprob: -5.754449844360352
    9. ')' → logprob: -6.004449844360352
    10. '_' → logprob: -6.254449844360352

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22614017128944397
    2. '=' → logprob: -1.6011401414871216
    3. ',' → logprob: -7.351140022277832
    4. ' ' → logprob: -10.351140022277832
    5. '<|end|>' → logprob: -10.851140022277832
    6. '=input' → logprob: -11.476140022277832
    7. ')' → logprob: -11.726140022277832
    8. ' ,' → logprob: -12.351140022277832
    9. '=int' → logprob: -12.976140022277832
    10. '=line' → logprob: -13.851140022277832

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004177767783403397
    2. 'map' → logprob: -5.504177570343018
    3. ' ' → logprob: -9.879178047180176
    4. ' __' → logprob: -10.004178047180176
    5. ' input' → logprob: -14.004178047180176
    6. '	map' → logprob: -14.254178047180176
    7. ' list' → logprob: -14.629178047180176
    8. ' mapa' → logprob: -15.129178047180176
    9. '__' → logprob: -15.379178047180176
    10. 'input' → logprob: -16.25417709350586

Token 20: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13139969110488892
    2. '(lambda' → logprob: -2.381399631500244
    3. '(int' → logprob: -3.756399631500244
    4. '(str' → logprob: -5.006399631500244
    5. '<|end|>' → logprob: -8.381400108337402
    6. '(None' → logprob: -9.756400108337402
    7. '(eval' → logprob: -10.006400108337402
    8. '(len' → logprob: -10.256400108337402
    9. '(
' → logprob: -10.381400108337402
    10. '((' → logprob: -10.881400108337402

Token 21: ',' (ID: 11)
  Prédit: ')(__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(__' → logprob: -0.6041241884231567
    2. '(__' → logprob: -0.9791241884231567
    3. ')' → logprob: -3.354124069213867
    4. '(' → logprob: -3.354124069213867
    5. '($__' → logprob: -5.229124069213867
    6. ')__' → logprob: -7.479124069213867
    7. ',' → logprob: -8.104124069213867
    8. ').__' → logprob: -8.229124069213867
    9. '(input' → logprob: -8.229124069213867
    10. '(__('' → logprob: -8.854124069213867

Token 22: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06576365977525711
    2. ' __' → logprob: -2.8157637119293213
    3. 'input' → logprob: -5.940763473510742
    4. ' input' → logprob: -7.315763473510742
    5. ')' → logprob: -8.565763473510742
    6. 'I' → logprob: -8.940763473510742
    7. '__)' → logprob: -9.690763473510742
    8. ' I' → logprob: -10.690763473510742
    9. 'str' → logprob: -11.190763473510742
    10. ')__' → logprob: -11.440763473510742

Token 23: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0004228091274853796
    2. 'S' → logprob: -8.250422477722168
    3. '__' → logprob: -9.125422477722168
    4. '_I' → logprob: -10.500422477722168
    5. ' I' → logprob: -10.875422477722168
    6. 'input' → logprob: -13.875422477722168
    7. ')' → logprob: -14.250422477722168
    8. 'K' → logprob: -14.250422477722168
    9. ' __' → logprob: -14.875422477722168
    10. ' ' → logprob: -15.187922477722168

Token 24: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05707231163978577
    2. '()' → logprob: -3.557072401046753
    3. '().' → logprob: -4.057072162628174
    4. '()))' → logprob: -4.932072162628174
    5. ')' → logprob: -6.182072162628174
    6. ' ())' → logprob: -9.307072639465332
    7. '());' → logprob: -9.557072639465332
    8. '();)' → logprob: -9.932072639465332
    9. '()));' → logprob: -9.932072639465332
    10. '(' → logprob: -10.432072639465332

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.27005162835121155
    2. 'strip' → logprob: -1.5200515985488892
    3. 'rstrip' → logprob: -4.0200514793396
    4. 'read' → logprob: -12.770051956176758
    5. ' split' → logprob: -13.020051956176758
    6. ')' → logprob: -13.520051956176758
    7. ' strip' → logprob: -14.895051956176758
    8. 'rs' → logprob: -15.395051956176758
    9. '(split' → logprob: -16.395051956176758
    10. '_split' → logprob: -16.895051956176758

Token 26: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1944132000207901
    2. '())' → logprob: -2.069413185119629
    3. '))' → logprob: -3.069413185119629
    4. '()))' → logprob: -6.194413185119629
    5. '('' → logprob: -7.319413185119629
    6. '()' → logprob: -7.319413185119629
    7. '(' → logprob: -7.819413185119629
    8. '')' → logprob: -9.569413185119629
    9. '(','' → logprob: -10.194413185119629
    10. ''))' → logprob: -11.069413185119629

Token 27: '__' (ID: 771)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7340781688690186
    2. 'arr' → logprob: -1.4840781688690186
    3. 'A' → logprob: -1.9840781688690186
    4. 'result' → logprob: -3.1090781688690186
    5. 'data' → logprob: -3.2340781688690186
    6. 'dp' → logprob: -4.109078407287598
    7. 'd' → logprob: -4.484078407287598
    8. 'for' → logprob: -5.234078407287598
    9. 'numbers' → logprob: -5.359078407287598
    10. 'lst' → logprob: -5.359078407287598

Token 28: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8468338251113892
    2. 'result' → logprob: -1.9718338251113892
    3. 'r' → logprob: -2.5968337059020996
    4. 'count' → logprob: -2.5968337059020996
    5. 'A' → logprob: -2.7218337059020996
    6. 'g' → logprob: -2.9718337059020996
    7. 'answer' → logprob: -3.0968337059020996
    8. 'p' → logprob: -3.0968337059020996
    9. 'P' → logprob: -3.2218337059020996
    10. 'data' → logprob: -3.7218337059020996

Token 29: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14168459177017212
    2. '[' → logprob: -3.0166845321655273
    3. '.append' → logprob: -3.0166845321655273
    4. '=' → logprob: -3.8916845321655273
    5. ' =' → logprob: -5.266684532165527
    6. '[]' → logprob: -6.141684532165527
    7. '_' → logprob: -6.391684532165527
    8. 's' → logprob: -7.391684532165527
    9. '=[]' → logprob: -7.391684532165527
    10. '[:]' → logprob: -7.766684532165527

Token 30: ' div' (ID: 4223)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06217147409915924
    2. ' list' → logprob: -2.812171459197998
    3. '[' → logprob: -9.062171936035156
    4. '[]' → logprob: -10.562171936035156
    5. '[list' → logprob: -10.562171936035156
    6. 'map' → logprob: -10.937171936035156
    7. ' [' → logprob: -11.062171936035156
    8. ' map' → logprob: -14.562171936035156
    9. ' []' → logprob: -14.687171936035156
    10. 'sorted' → logprob: -15.062171936035156

Token 31: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11189304292201996
    2. 'ision' → logprob: -2.6118929386138916
    3. 'ide' → logprob: -4.236893177032471
    4. 'isible' → logprob: -4.986893177032471
    5. 'isor' → logprob: -5.986893177032471
    6. 'is' → logprob: -6.361893177032471
    7. 's' → logprob: -6.736893177032471
    8. '(' → logprob: -7.236893177032471
    9. 'isions' → logprob: -7.611893177032471
    10. 'ided' → logprob: -7.611893177032471

Token 32: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5138413310050964
    2. '(K' → logprob: -1.0138413906097412
    3. '(' → logprob: -3.263841390609741
    4. '<|end|>' → logprob: -7.888841152191162
    5. '(n' → logprob: -8.63884162902832
    6. '(KERN' → logprob: -9.88884162902832
    7. '(int' → logprob: -10.76384162902832
    8. 'N' → logprob: -11.26384162902832
    9. '(k' → logprob: -11.38884162902832
    10. '((' → logprob: -11.51384162902832

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0720500499010086
    2. ',K' → logprob: -3.197050094604492
    3. ' ,' → logprob: -3.572050094604492
    4. ' K' → logprob: -8.072050094604492
    5. ' ' → logprob: -8.947050094604492
    6. 'K' → logprob: -9.697050094604492
    7. ',k' → logprob: -11.697050094604492
    8. ')' → logprob: -12.572050094604492
    9. '*K' → logprob: -13.072050094604492
    10. '+' → logprob: -13.072050094604492

Token 34: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.25237172842025757
    2. 'K' → logprob: -1.5023717880249023
    3. ')' → logprob: -8.627371788024902
    4. ' ' → logprob: -8.877371788024902
    5. ' ' → logprob: -10.002371788024902
    6. ' 
' → logprob: -10.377371788024902
    7. ' )' → logprob: -10.877371788024902
    8. '	K' → logprob: -12.127371788024902
    9. '<|end|>' → logprob: -12.252371788024902
    10. '>K' → logprob: -12.502371788024902

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.79811754100956e-05
    2. ')[' → logprob: -10.625038146972656
    3. ' )' → logprob: -12.125038146972656
    4. ')
' → logprob: -12.375038146972656
    5. '[' → logprob: -13.625038146972656
    6. '))' → logprob: -14.625038146972656
    7. ')`' → logprob: -15.125038146972656
    8. ',' → logprob: -15.375038146972656
    9. ')

' → logprob: -15.375038146972656
    10. '(' → logprob: -15.375038146972656

Token 36: '___' (ID: 11935)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.536638081073761
    2. '[' → logprob: -1.5366380214691162
    3. ' ' → logprob: -2.911638021469116
    4. '<|end|>' → logprob: -3.161638021469116
    5. '0' → logprob: -4.036638259887695
    6. '__' → logprob: -4.286638259887695
    7. '(' → logprob: -4.661638259887695
    8. '#' → logprob: -4.911638259887695
    9. '\n' → logprob: -5.036638259887695
    10. ')' → logprob: -5.036638259887695

Token 37: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6073549389839172
    2. '[' → logprob: -2.2323548793792725
    3. '__' → logprob: -2.4823548793792725
    4. ',' → logprob: -2.4823548793792725
    5. ' ' → logprob: -2.6073548793792725
    6. '.' → logprob: -3.4823548793792725
    7. '0' → logprob: -3.6073548793792725
    8. ' __' → logprob: -4.732355117797852
    9. 'print' → logprob: -4.732355117797852
    10. 'A' → logprob: -5.107355117797852

Token 38: ' lambda' (ID: 27871)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.028629528358578682
    2. ' __' → logprob: -3.6536295413970947
    3. '__[' → logprob: -6.528629302978516
    4. '__.' → logprob: -8.028629302978516
    5. '___' → logprob: -9.278629302978516
    6. '[' → logprob: -9.903629302978516
    7. 'A' → logprob: -9.903629302978516
    8. '[A' → logprob: -10.153629302978516
    9. 'K' → logprob: -10.153629302978516
    10. 'N' → logprob: -10.403629302978516

Token 39: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2268534004688263
    2. 'x' → logprob: -1.851853370666504
    3. ' lambda' → logprob: -4.351853370666504
    4. ' n' → logprob: -4.976853370666504
    5. ' N' → logprob: -5.101853370666504
    6. ' a' → logprob: -5.351853370666504
    7. 'N' → logprob: -5.851853370666504
    8. 'lambda' → logprob: -6.351853370666504
    9. 'a' → logprob: -6.476853370666504
    10. ' K' → logprob: -6.726853370666504

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8904412388801575
    2. ' x' → logprob: -1.1404411792755127
    3. 'x' → logprob: -1.3904411792755127
    4. ' :' → logprob: -4.640441417694092
    5. ':x' → logprob: -5.515441417694092
    6. '0' → logprob: -7.015441417694092
    7. 'abs' → logprob: -7.140441417694092
    8. ',' → logprob: -7.140441417694092
    9. ' ' → logprob: -7.515441417694092
    10. '1' → logprob: -7.515441417694092

Token 41: ' __' (ID: 2516)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6206599473953247
    2. ' x' → logprob: -0.8706599473953247
    3. '(x' → logprob: -4.620659828186035
    4. ' (' → logprob: -4.870659828186035
    5. 'sum' → logprob: -5.870659828186035
    6. '(' → logprob: -6.120659828186035
    7. 'N' → logprob: -6.245659828186035
    8. ' N' → logprob: -6.245659828186035
    9. ' sum' → logprob: -6.245659828186035
    10. 'abs' → logprob: -6.745659828186035

Token 42: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.023144273087382317
    2. 'S' → logprob: -4.773144245147705
    3. 'abs' → logprob: -5.398144245147705
    4. 'I' → logprob: -6.148144245147705
    5. 'pow' → logprob: -6.273144245147705
    6. 'sum' → logprob: -7.148144245147705
    7. 'max' → logprob: -7.148144245147705
    8. '__' → logprob: -7.648144245147705
    9. ' A' → logprob: -7.648144245147705
    10. 'B' → logprob: -7.898144245147705

Token 43: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03000849299132824
    2. '(x' → logprob: -4.155008316040039
    3. '_' → logprob: -5.155008316040039
    4. '[' → logprob: -6.405008316040039
    5. ' ' → logprob: -6.405008316040039
    6. '<|end|>' → logprob: -6.530008316040039
    7. ',' → logprob: -7.030008316040039
    8. ' (' → logprob: -7.030008316040039
    9. ')' → logprob: -7.280008316040039
    10. '(
' → logprob: -8.655008316040039

Token 44: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11925172805786133
    2. '0' → logprob: -2.6192517280578613
    3. '1' → logprob: -3.2442517280578613
    4. ' x' → logprob: -7.869251728057861
    5. 'int' → logprob: -9.494251251220703
    6. ' ' → logprob: -10.244251251220703
    7. '-' → logprob: -10.869251251220703
    8. '(x' → logprob: -11.744251251220703
    9. '[x' → logprob: -12.494251251220703
    10. '%x' → logprob: -12.681751251220703

Token 45: ']+' (ID: 15344)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04256322607398033
    2. ' *' → logprob: -3.4175631999969482
    3. '+' → logprob: -5.417563438415527
    4. '*x' → logprob: -5.667563438415527
    5. ' if' → logprob: -7.542563438415527
    6. ')' → logprob: -8.542563438415527
    7. ' +' → logprob: -9.792563438415527
    8. 'if' → logprob: -10.042563438415527
    9. '*)' → logprob: -10.167563438415527
    10. '>' → logprob: -10.917563438415527

Token 46: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.613865852355957
    2. '1' → logprob: -0.988865852355957
    3. '(' → logprob: -2.738865852355957
    4. '(int' → logprob: -4.488865852355957
    5. '(min' → logprob: -5.488865852355957
    6. ' (' → logprob: -5.863865852355957
    7. 'int' → logprob: -5.988865852355957
    8. 'x' → logprob: -7.988865852355957
    9. '(bool' → logprob: -8.113865852355957
    10. 'bool' → logprob: -8.988865852355957

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08898668736219406
    2. 'x' → logprob: -2.58898663520813
    3. '(x' → logprob: -4.963986873626709
    4. ' x' → logprob: -6.713986873626709
    5. ' ' → logprob: -7.088986873626709
    6. 'int' → logprob: -7.338986873626709
    7. '(' → logprob: -8.71398639678955
    8. ' (' → logprob: -9.71398639678955
    9. ' int' → logprob: -9.83898639678955
    10. '0' → logprob: -10.08898639678955

Token 48: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05492233857512474
    2. 'if' → logprob: -2.929922342300415
    3. ')' → logprob: -10.429922103881836
    4. '*(' → logprob: -12.429922103881836
    5. '<=' → logprob: -12.679922103881836
    6. '>' → logprob: -13.804922103881836
    7. '*' → logprob: -14.054922103881836
    8. ' ' → logprob: -15.054922103881836
    9. 'int' → logprob: -15.429922103881836
    10. 'x' → logprob: -15.679922103881836

Token 49: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.42878130078315735
    2. 'x' → logprob: -1.053781270980835
    3. ' ' → logprob: -10.053781509399414
    4. ' K' → logprob: -11.428781509399414
    5. 'K' → logprob: -11.803781509399414
    6. '(x' → logprob: -12.178781509399414
    7. ' (' → logprob: -12.428781509399414
    8. '  ' → logprob: -12.928781509399414
    9. ' ' → logprob: -13.053781509399414
    10. '	x' → logprob: -13.803781509399414

Token 50: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22544744610786438
    2. ' x' → logprob: -1.600447416305542
    3. ' ' → logprob: -11.600447654724121
    4. 'K' → logprob: -11.850447654724121
    5. '(x' → logprob: -12.225447654724121
    6. ' K' → logprob: -12.225447654724121
    7. ')x' → logprob: -12.975447654724121
    8. ')' → logprob: -13.600447654724121
    9. ' (' → logprob: -13.725447654724121
    10. '	x' → logprob: -14.225447654724121

Token 51: '!=' (ID: 11408)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8260807394981384
    2. ' <' → logprob: -1.2010807991027832
    3. '%' → logprob: -1.4510807991027832
    4. ' %' → logprob: -3.951080799102783
    5. '<|end|>' → logprob: -5.701080799102783
    6. ' ' → logprob: -6.451080799102783
    7. ')' → logprob: -6.951080799102783
    8. '>=' → logprob: -7.701080799102783
    9. ')<' → logprob: -7.826080799102783
    10. ' >=' → logprob: -8.576080322265625

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02518065832555294
    2. ' ' → logprob: -4.025180816650391
    3. '__' → logprob: -5.650180816650391
    4. 'x' → logprob: -7.150180816650391
    5. ' __' → logprob: -7.150180816650391
    6. '___' → logprob: -7.400180816650391
    7. ' x' → logprob: -8.27518081665039
    8. 'K' → logprob: -9.02518081665039
    9. '%' → logprob: -9.08768081665039
    10. '1' → logprob: -9.27518081665039

Token 53: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32835114002227783
    2. 'and' → logprob: -1.3283511400222778
    3. ')' → logprob: -4.703351020812988
    4. '%' → logprob: -5.203351020812988
    5. ' ' → logprob: -9.078351020812988
    6. '<|end|>' → logprob: -9.203351020812988
    7. ' else' → logprob: -10.203351020812988
    8. ' %' → logprob: -10.453351020812988
    9. ' )' → logprob: -10.703351020812988
    10. '),' → logprob: -10.953351020812988

Token 54: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2826550304889679
    2. ' x' → logprob: -1.4076550006866455
    3. '__' → logprob: -7.407655239105225
    4. '(x' → logprob: -7.907655239105225
    5. ' (' → logprob: -8.657654762268066
    6. '___' → logprob: -8.907654762268066
    7. ' __' → logprob: -9.907654762268066
    8. ' ' → logprob: -10.157654762268066
    9. '  ' → logprob: -10.845154762268066
    10. '(' → logprob: -11.157654762268066

Token 55: '<=' (ID: 16672)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12030384689569473
    2. ' %' → logprob: -2.2453038692474365
    3. '%x' → logprob: -5.870303630828857
    4. '<|end|>' → logprob: -6.120303630828857
    5. '<' → logprob: -6.620303630828857
    6. ')' → logprob: -8.120304107666016
    7. '<=' → logprob: -8.995304107666016
    8. ' <' → logprob: -9.245304107666016
    9. '%A' → logprob: -9.495304107666016
    10. ')%' → logprob: -9.745304107666016

Token 56: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04903445392847061
    2. ' __' → logprob: -3.049034357070923
    3. 'K' → logprob: -8.924034118652344
    4. '(__' → logprob: -9.174034118652344
    5. 'N' → logprob: -9.424034118652344
    6. '___' → logprob: -10.799034118652344
    7. ' K' → logprob: -11.049034118652344
    8. ' (__' → logprob: -11.174034118652344
    9. ' ' → logprob: -11.299034118652344
    10. '__)' → logprob: -11.674034118652344

Token 57: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.027726346626877785
    2. '__' → logprob: -3.777726411819458
    3. '_A' → logprob: -5.902726173400879
    4. ' A' → logprob: -7.402726173400879
    5. 'N' → logprob: -7.902726173400879
    6. ' __' → logprob: -8.777726173400879
    7. '[' → logprob: -8.902726173400879
    8. ')' → logprob: -9.152726173400879
    9. '___' → logprob: -9.527726173400879
    10. '(A' → logprob: -10.152726173400879

Token 58: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.999452772201039e-05
    2. '1' → logprob: -10.875029563903809
    3. '[
' → logprob: -12.500029563903809
    4. ' [' → logprob: -12.750029563903809
    5. ')' → logprob: -14.250029563903809
    6. '0' → logprob: -14.312529563903809
    7. '__[' → logprob: -14.562529563903809
    8. '(' → logprob: -15.000029563903809
    9. '```' → logprob: -15.062529563903809
    10. '][' → logprob: -15.687529563903809

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002005364978685975
    2. '0' → logprob: -6.252005577087402
    3. ' ' → logprob: -9.752005577087402
    4. '-' → logprob: -12.877005577087402
    5. '(' → logprob: -13.064505577087402
    6. '[' → logprob: -13.127005577087402
    7. '])' → logprob: -13.564505577087402
    8. '<|end|>' → logprob: -13.752005577087402
    9. '__' → logprob: -13.877005577087402
    10. ']' → logprob: -14.002005577087402

Token 60: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008296119049191475
    2. ' )' → logprob: -4.883296012878418
    3. ' else' → logprob: -7.508296012878418
    4. '-' → logprob: -10.258296012878418
    5. ' and' → logprob: -10.258296012878418
    6. '))' → logprob: -11.258296012878418
    7. 'else' → logprob: -11.383296012878418
    8. ' ' → logprob: -11.883296012878418
    9. 'and' → logprob: -12.258296012878418
    10. ')>' → logprob: -12.758296012878418

Token 61: 'or' (ID: 267)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0013348824577406049
    2. 'else' → logprob: -6.6263346672058105
    3. ')' → logprob: -11.751335144042969
    4. ' ' → logprob: -14.376335144042969
    5. '	else' → logprob: -15.251335144042969
    6. ' )' → logprob: -15.751335144042969
    7. ' and' → logprob: -16.75133514404297
    8. ' els' → logprob: -17.50133514404297
    9. '-' → logprob: -17.75133514404297
    10. '<|end|>' → logprob: -17.87633514404297

Token 62: '(x' (ID: 4061)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1600719690322876
    2. '(x' → logprob: -1.1600719690322876
    3. ' (' → logprob: -1.2850719690322876
    4. 'x' → logprob: -2.910071849822998
    5. '(' → logprob: -3.285071849822998
    6. '(False' → logprob: -6.660071849822998
    7. 'False' → logprob: -7.410071849822998
    8. ' False' → logprob: -7.410071849822998
    9. ' ' → logprob: -7.535071849822998
    10. '0' → logprob: -8.285072326660156

Token 63: '==' (ID: 560)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.44707053899765015
    2. '!=' → logprob: -1.072070598602295
    3. ' !=' → logprob: -4.947070598602295
    4. '==' → logprob: -5.572070598602295
    5. ' %' → logprob: -5.947070598602295
    6. '>' → logprob: -6.197070598602295
    7. ')' → logprob: -6.822070598602295
    8. '%x' → logprob: -7.197070598602295
    9. '<|end|>' → logprob: -8.947070121765137
    10. ' ' → logprob: -8.947070121765137

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006024076137691736
    2. ' ' → logprob: -5.13102388381958
    3. '__' → logprob: -10.256024360656738
    4. 'x' → logprob: -11.131024360656738
    5. 'N' → logprob: -11.131024360656738
    6. '<|end|>' → logprob: -12.256024360656738
    7. '___' → logprob: -12.506024360656738
    8. '  ' → logprob: -12.881024360656738
    9. 'K' → logprob: -12.881024360656738
    10. ' __' → logprob: -12.943524360656738

Token 65: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05440709739923477
    2. ' else' → logprob: -3.5544071197509766
    3. ' )' → logprob: -4.179407119750977
    4. ' and' → logprob: -5.179407119750977
    5. 'else' → logprob: -6.554407119750977
    6. 'and' → logprob: -6.679407119750977
    7. ' ' → logprob: -7.554407119750977
    8. '  ' → logprob: -9.804407119750977
    9. ' or' → logprob: -10.179407119750977
    10. '))' → logprob: -10.804407119750977

Token 66: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6422175168991089
    2. '1' → logprob: -2.3922176361083984
    3. ' __' → logprob: -2.5172176361083984
    4. 'N' → logprob: -2.6422176361083984
    5. '0' → logprob: -3.0172176361083984
    6. '(__' → logprob: -3.1422176361083984
    7. ' N' → logprob: -3.2672176361083984
    8. '(N' → logprob: -3.6422176361083984
    9. ' ' → logprob: -3.7672176361083984
    10. ' not' → logprob: -4.392217636108398

Token 67: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21138863265514374
    2. 'N' → logprob: -1.9613885879516602
    3. 'K' → logprob: -4.46138858795166
    4. '__' → logprob: -4.96138858795166
    5. ' A' → logprob: -4.96138858795166
    6. '_A' → logprob: -5.21138858795166
    7. '0' → logprob: -5.33638858795166
    8. '_' → logprob: -5.46138858795166
    9. '1' → logprob: -5.71138858795166
    10. ' ' → logprob: -5.96138858795166

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004260276327840984
    2. '1' → logprob: -8.375426292419434
    3. '0' → logprob: -9.125426292419434
    4. '__[' → logprob: -10.125426292419434
    5. ')' → logprob: -11.000426292419434
    6. '__' → logprob: -11.750426292419434
    7. '>' → logprob: -13.000426292419434
    8. '(' → logprob: -13.250426292419434
    9. ' ' → logprob: -13.437926292419434
    10. '```' → logprob: -13.625426292419434

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04360295832157135
    2. '0' → logprob: -3.16860294342041
    3. '2' → logprob: -8.79360294342041
    4. ' ' → logprob: -9.10610294342041
    5. '[' → logprob: -9.54360294342041
    6. '   ' → logprob: -10.10610294342041
    7. ']' → logprob: -10.41860294342041
    8. '

' → logprob: -10.48110294342041
    9. '```' → logprob: -10.60610294342041
    10. '
' → logprob: -11.04360294342041

Token 70: ']==' (ID: 34128)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.017444031313061714
    2. '!=' → logprob: -5.142444133758545
    3. ' >' → logprob: -5.642444133758545
    4. ')' → logprob: -5.642444133758545
    5. '>=' → logprob: -6.267444133758545
    6. ')>' → logprob: -6.392444133758545
    7. '==' → logprob: -8.267443656921387
    8. ' )' → logprob: -9.642443656921387
    9. ' and' → logprob: -9.767443656921387
    10. '>)' → logprob: -9.767443656921387

Token 71: 'K' (ID: 42)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003784750821068883
    2. ' ' → logprob: -5.628784656524658
    3. 'K' → logprob: -8.878785133361816
    4. '1' → logprob: -10.753785133361816
    5. ' K' → logprob: -11.378785133361816
    6. 'N' → logprob: -12.378785133361816
    7. 'x' → logprob: -13.691285133361816
    8. '  ' → logprob: -13.691285133361816
    9. ')' → logprob: -13.941285133361816
    10. '   ' → logprob: -14.316285133361816

Token 72: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.09422443807125092
    2. 'else' → logprob: -2.844224452972412
    3. ')' → logprob: -3.469224452972412
    4. ' ' → logprob: -8.719223976135254
    5. '-' → logprob: -8.719223976135254
    6. ' )' → logprob: -9.344223976135254
    7. '+' → logprob: -10.219223976135254
    8. '),' → logprob: -10.219223976135254
    9. ' and' → logprob: -11.219223976135254
    10. 'and' → logprob: -11.344223976135254

Token 73: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07184550166130066
    2. 'else' → logprob: -2.696845531463623
    3. ')' → logprob: -6.321845531463623
    4. '1' → logprob: -10.696845054626465
    5. ' ' → logprob: -10.946845054626465
    6. ' )' → logprob: -11.071845054626465
    7. '),' → logprob: -12.071845054626465
    8. ')
' → logprob: -12.446845054626465
    9. '-' → logprob: -12.446845054626465
    10. '```' → logprob: -12.446845054626465

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5777392983436584
    2. ' ' → logprob: -0.8277392983436584
    3. '1' → logprob: -6.327739238739014
    4. ')' → logprob: -12.702739715576172
    5. '   ' → logprob: -12.702739715576172
    6. '  ' → logprob: -12.702739715576172
    7. '+' → logprob: -14.202739715576172
    8. '    ' → logprob: -14.515239715576172
    9. ' -' → logprob: -14.890239715576172
    10. ' ' → logprob: -15.202739715576172

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014178554527461529
    2. ' ' → logprob: -4.26417875289917
    3. '1' → logprob: -11.639178276062012
    4. '   ' → logprob: -12.639178276062012
    5. '  ' → logprob: -14.014178276062012
    6. '+' → logprob: -14.639178276062012
    7. ')' → logprob: -14.701678276062012
    8. '-' → logprob: -15.076678276062012
    9. '    ' → logprob: -15.389178276062012
    10. ' -' → logprob: -16.139179229736328

Token 76: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019066639652010053
    2. ')x' → logprob: -9.375190734863281
    3. ')
' → logprob: -9.875190734863281
    4. ' )' → logprob: -11.000190734863281
    5. 'x' → logprob: -11.625190734863281
    6. '))' → logprob: -11.625190734863281
    7. '(x' → logprob: -12.500190734863281
    8. ')return' → logprob: -13.000190734863281
    9. '),' → logprob: -13.125190734863281
    10. ')))' → logprob: -13.500190734863281

Token 77: 'Ω' (ID: 45879)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5608003735542297
    2. 'x' → logprob: -2.310800313949585
    3. 'print' → logprob: -2.685800313949585
    4. 'for' → logprob: -2.810800313949585
    5. 'p' → logprob: -3.185800313949585
    6. '__' → logprob: -3.310800313949585
    7. 'f' → logprob: -3.935800313949585
    8. '[' → logprob: -4.060800552368164
    9. ')' → logprob: -4.560800552368164
    10. '#' → logprob: -4.685800552368164

Token 78: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036923203617334366
    2. '[' → logprob: -3.9119231700897217
    3. '_' → logprob: -5.536923408508301
    4. '(x' → logprob: -5.536923408508301
    5. '=' → logprob: -6.161923408508301
    6. '(lambda' → logprob: -6.536923408508301
    7. 'x' → logprob: -6.911923408508301
    8. ',' → logprob: -7.661923408508301
    9. ')' → logprob: -7.661923408508301
    10. '(
' → logprob: -7.911923408508301

Token 79: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0319424867630005
    2. '__' → logprob: -1.4069424867630005
    3. 'λ' → logprob: -2.531942367553711
    4. ' _' → logprob: -2.781942367553711
    5. ' __' → logprob: -3.156942367553711
    6. ' λ' → logprob: -3.531942367553711
    7. '___' → logprob: -4.281942367553711
    8. ' ' → logprob: -4.344442367553711
    9. 'σ' → logprob: -4.531942367553711
    10. 'x' → logprob: -4.594442367553711

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15540580451488495
    2. ' =' → logprob: -2.0304057598114014
    3. 'n' → logprob: -4.7804059982299805
    4. 'nd' → logprob: -6.0304059982299805
    5. ',' → logprob: -7.0304059982299805
    6. 'x' → logprob: -8.03040599822998
    7. 'dx' → logprob: -8.78040599822998
    8. '_' → logprob: -9.15540599822998
    9. 'd' → logprob: -9.15540599822998
    10. 's' → logprob: -9.28040599822998

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25732314586639404
    2. ' ' → logprob: -1.507323145866394
    3. '1' → logprob: -6.382323265075684
    4. '__' → logprob: -6.632323265075684
    5. ' __' → logprob: -6.882323265075684
    6. '[' → logprob: -8.632323265075684
    7. ' [' → logprob: -8.757323265075684
    8. ' K' → logprob: -9.007323265075684
    9. 'K' → logprob: -9.507323265075684
    10. 'N' → logprob: -9.507323265075684

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012009665369987488
    2. '1' → logprob: -5.387009620666504
    3. ' ' → logprob: -6.012009620666504
    4. '__' → logprob: -6.262009620666504
    5. '-' → logprob: -7.262009620666504
    6. 'K' → logprob: -7.387009620666504
    7. 'div' → logprob: -7.762009620666504
    8. 'N' → logprob: -8.012009620666504
    9. '(' → logprob: -8.387009620666504
    10. '[' → logprob: -8.637009620666504

Token 83: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5262769460678101
    2. '0' → logprob: -0.9012769460678101
    3. '1' → logprob: -6.0262770652771
    4. ' K' → logprob: -8.276276588439941
    5. ' -' → logprob: -9.026276588439941
    6. ' N' → logprob: -9.151276588439941
    7. '-' → logprob: -9.901276588439941
    8. 'N' → logprob: -10.026276588439941
    9. 'K' → logprob: -10.026276588439941
    10. '2' → logprob: -10.651276588439941

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006881130393594503
    2. '1' → logprob: -5.631881237030029
    3. 'K' → logprob: -6.506881237030029
    4. ' ' → logprob: -6.881881237030029
    5. 'N' → logprob: -7.506881237030029
    6. '-' → logprob: -9.256880760192871
    7. '[' → logprob: -10.881880760192871
    8. '[]' → logprob: -11.006880760192871
    9. '__' → logprob: -11.131880760192871
    10. '2' → logprob: -11.256880760192871

Token 86: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6447697877883911
    2. '<|end|>' → logprob: -1.5197697877883911
    3. 'while' → logprob: -3.1447696685791016
    4. ';' → logprob: -3.3947696685791016
    5. '\n' → logprob: -3.6447696685791016
    6. ' while' → logprob: -3.8947696685791016
    7. '
' → logprob: -4.019769668579102
    8. ')' → logprob: -4.144769668579102
    9. ' 
' → logprob: -4.269769668579102
    10. '+' → logprob: -4.519769668579102

Token 87: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14079855382442474
    2. 'for' → logprob: -2.765798568725586
    3. '_' → logprob: -3.390798568725586
    4. 'i' → logprob: -4.640798568725586
    5. '__' → logprob: -5.140798568725586
    6. ' while' → logprob: -5.265798568725586
    7. ')' → logprob: -5.515798568725586
    8. '___' → logprob: -6.265798568725586
    9. '+' → logprob: -6.765798568725586
    10. '(' → logprob: -6.890798568725586

Token 88: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12781286239624023
    2. 'i' → logprob: -2.1278128623962402
    3. '(i' → logprob: -8.502813339233398
    4. ' ' → logprob: -8.752813339233398
    5. ' True' → logprob: -9.377813339233398
    6. ' __' → logprob: -9.502813339233398
    7. ' (' → logprob: -10.252813339233398
    8. '__' → logprob: -10.377813339233398
    9. 'Ω' → logprob: -10.377813339233398
    10. ' Ω' → logprob: -10.440313339233398

Token 89: '<K' (ID: 47827)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5088713765144348
    2. ' <' → logprob: -1.00887131690979
    3. '<K' → logprob: -3.50887131690979
    4. '<N' → logprob: -5.758871555328369
    5. '<len' → logprob: -7.508871555328369
    6. ' ' → logprob: -8.508871078491211
    7. '<n' → logprob: -9.008871078491211
    8. '<size' → logprob: -9.633871078491211
    9. '<=' → logprob: -9.758871078491211
    10. ' <=' → logprob: -10.383871078491211

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036045875400304794
    2. ' :' → logprob: -3.786045789718628
    3. '+:' → logprob: -5.036046028137207
    4. '+' → logprob: -5.161046028137207
    5. ':
' → logprob: -8.036046028137207
    6. ' :
' → logprob: -10.286046028137207
    7. '):' → logprob: -10.536046028137207
    8. '++' → logprob: -10.661046028137207
    9. ' +' → logprob: -11.036046028137207
    10. '>:' → logprob: -11.536046028137207

Token 91: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02969147451221943
    2. ' 
' → logprob: -3.779691457748413
    3. ' i' → logprob: -6.154691696166992
    4. ' Ω' → logprob: -6.404691696166992
    5. ' ' → logprob: -7.404691696166992
    6. 'Ω' → logprob: -8.029691696166992
    7. 'i' → logprob: -8.029691696166992
    8. '<|end|>' → logprob: -8.154691696166992
    9. ' ‌' → logprob: -9.029691696166992
    10. '\' → logprob: -9.279691696166992

Token 92: ' α' (ID: 3793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20184528827667236
    2. ' ___' → logprob: -2.201845169067383
    3. '___' → logprob: -3.826845169067383
    4. ' i' → logprob: -4.576845169067383
    5. ' __' → logprob: -5.076845169067383
    6. '_' → logprob: -5.326845169067383
    7. ' Ω' → logprob: -5.451845169067383
    8. ' ​' → logprob: -5.951845169067383
    9. ' _____' → logprob: -5.951845169067383
    10. ' ' → logprob: -5.951845169067383

Token 93: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6383742094039917
    2. ' =' → logprob: -0.7633742094039917
    3. '+=' → logprob: -5.888374328613281
    4. '+' → logprob: -6.513374328613281
    5. ' +=' → logprob: -7.263374328613281
    6. ' ' → logprob: -8.638374328613281
    7. ':' → logprob: -9.388374328613281
    8. '<|end|>' → logprob: -9.763374328613281
    9. '=i' → logprob: -9.888374328613281
    10. 's' → logprob: -9.888374328613281

Token 94: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0490756519138813
    2. '+=' → logprob: -3.2990756034851074
    3. '*' → logprob: -5.674075603485107
    4. '=' → logprob: -5.799075603485107
    5. '++' → logprob: -6.674075603485107
    6. ' +=' → logprob: -6.924075603485107
    7. ' +' → logprob: -7.049075603485107
    8. '+
' → logprob: -8.424076080322266
    9. ' *' → logprob: -8.924076080322266
    10. '+i' → logprob: -9.049076080322266

Token 95: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.040617410093545914
    2. '<|end|>' → logprob: -4.2906174659729
    3. ' +' → logprob: -5.1656174659729
    4. '
' → logprob: -5.1656174659729
    5. '+
' → logprob: -5.4156174659729
    6. '%' → logprob: -6.1656174659729
    7. ' 
' → logprob: -6.2906174659729
    8. '<|end|>' → logprob: -6.7906174659729
    9. ' ' → logprob: -7.0406174659729
    10. '   ' → logprob: -7.1656174659729

Token 96: ' β' (ID: 15772)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04353836551308632
    2. '
' → logprob: -3.5435383319854736
    3. ' +' → logprob: -5.543538570404053
    4. '+
' → logprob: -6.543538570404053
    5. '+=' → logprob: -6.668538570404053
    6. '*' → logprob: -6.793538570404053
    7. '++' → logprob: -6.918538570404053
    8. ';' → logprob: -7.168538570404053
    9. '+i' → logprob: -7.293538570404053
    10. '-' → logprob: -8.168538093566895

Token 97: '=(-' (ID: 198297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2545795738697052
    2. '+=' → logprob: -2.629579544067383
    3. ' =' → logprob: -2.879579544067383
    4. '+' → logprob: -2.879579544067383
    5. '=i' → logprob: -3.504579544067383
    6. '   ' → logprob: -5.754579544067383
    7. ' +=' → logprob: -6.879579544067383
    8. '=(' → logprob: -7.379579544067383
    9. ',' → logprob: -7.504579544067383
    10. '*' → logprob: -7.629579544067383

Token 98: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.145208716392517
    2. '1' → logprob: -1.645208716392517
    3. 'α' → logprob: -1.645208716392517
    4. '(' → logprob: -2.3952088356018066
    5. '(__' → logprob: -2.7702088356018066
    6. 'Ω' → logprob: -3.2702088356018066
    7. '(i' → logprob: -3.6452088356018066
    8. '__' → logprob: -4.020208835601807
    9. '(-' → logprob: -4.020208835601807
    10. '___' → logprob: -4.645208835601807

Token 99: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44893673062324524
    2. ')%' → logprob: -1.4489367008209229
    3. '%' → logprob: -2.698936700820923
    4. '-' → logprob: -3.698936700820923
    5. '+' → logprob: -4.073936939239502
    6. ' %' → logprob: -4.448936939239502
    7. ' )' → logprob: -5.823936939239502
    8. ' +' → logprob: -7.198936939239502
    9. ' -' → logprob: -7.448936939239502
    10. '*K' → logprob: -7.698936939239502

Token 100: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0003809833142440766
    2. ' K' → logprob: -7.875380992889404
    3. '>K' → logprob: -14.875380516052246
    4. '<|end|>' → logprob: -15.500380516052246
    5. '	K' → logprob: -16.500381469726562
    6. ' ' → logprob: -16.750381469726562
    7. '   ' → logprob: -17.125381469726562
    8. '  ' → logprob: -17.500381469726562
    9. 'N' → logprob: -17.750381469726562
    10. 'k' → logprob: -18.125381469726562

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5428357720375061
    2. '
' → logprob: -1.5428357124328613
    3. '<|end|>' → logprob: -1.9178357124328613
    4. ' ' → logprob: -3.9178357124328613
    5. ' 
' → logprob: -4.167835712432861
    6. '    
' → logprob: -5.167835712432861
    7. '  
' → logprob: -5.417835712432861
    8. '+' → logprob: -5.667835712432861
    9. '  ' → logprob: -6.167835712432861
    10. '<|end|>' → logprob: -6.667835712432861

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1847216784954071
    2. '<|end|>' → logprob: -2.8097217082977295
    3. '
' → logprob: -2.9347217082977295
    4. ' ' → logprob: -3.8097217082977295
    5. ' 
' → logprob: -4.93472146987915
    6. '  ' → logprob: -5.05972146987915
    7. '    
' → logprob: -5.05972146987915
    8. '  
' → logprob: -5.68472146987915
    9. '<|end|>' → logprob: -6.43472146987915
    10. 'Ω' → logprob: -6.55972146987915

Token 103: ' γ' (ID: 8558)
  Prédit: 'Ω'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ω' → logprob: -0.07450578361749649
    2. '
' → logprob: -3.0745058059692383
    3. 'print' → logprob: -5.324505805969238
    4. 'if' → logprob: -5.324505805969238
    5. ' Ω' → logprob: -5.574505805969238
    6. '    
' → logprob: -5.699505805969238
    7. '   ' → logprob: -6.074505805969238
    8. 'ω' → logprob: -7.574505805969238
    9. '  
' → logprob: -7.699505805969238
    10. ' if' → logprob: -8.199505805969238

Token 104: '=(-' (ID: 198297)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3153670132160187
    2. '=' → logprob: -1.3153669834136963
    3. '=i' → logprob: -6.815367221832275
    4. '=(' → logprob: -7.940367221832275
    5. ',' → logprob: -8.690366744995117
    6. '   ' → logprob: -8.940366744995117
    7. '=lambda' → logprob: -10.065366744995117
    8. ' ' → logprob: -10.315366744995117
    9. '  ' → logprob: -10.565366744995117
    10. '=int' → logprob: -10.815366744995117

Token 105: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39196109771728516
    2. 'α' → logprob: -1.2669610977172852
    3. '(' → logprob: -3.641961097717285
    4. 'β' → logprob: -4.891961097717285
    5. '(i' → logprob: -6.016961097717285
    6. 'γ' → logprob: -6.891961097717285
    7. '1' → logprob: -7.141961097717285
    8. 'K' → logprob: -7.141961097717285
    9. '   ' → logprob: -7.266961097717285
    10. ' i' → logprob: -7.266961097717285

Token 106: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.2439846694469452
    2. ')' → logprob: -2.3689846992492676
    3. '-' → logprob: -2.8689846992492676
    4. '+' → logprob: -3.1189846992492676
    5. '%' → logprob: -4.618984699249268
    6. ' -' → logprob: -5.493984699249268
    7. ' +' → logprob: -6.243984699249268
    8. '   ' → logprob: -6.743984699249268
    9. ' )' → logprob: -6.868984699249268
    10. '*' → logprob: -7.118984699249268

Token 107: 'K' (ID: 42)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.431045800447464
    2. 'K' → logprob: -1.0560457706451416
    3. '__' → logprob: -6.681046009063721
    4. ' N' → logprob: -7.806046009063721
    5. ' K' → logprob: -8.306045532226562
    6. 'i' → logprob: -8.931045532226562
    7. ' ' → logprob: -10.306045532226562
    8. '2' → logprob: -10.681045532226562
    9. 'k' → logprob: -10.868545532226562
    10. '(' → logprob: -11.056045532226562

Token 108: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' not' (ID: 625)
  Prédit: ' α'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' α' → logprob: -1.2989109754562378
    2. 'α' → logprob: -1.4239109754562378
    3. ' i' → logprob: -2.1739110946655273
    4. '(' → logprob: -2.4239110946655273
    5. 'i' → logprob: -2.5489110946655273
    6. ' (' → logprob: -2.9239110946655273
    7. '___' → logprob: -3.0489110946655273
    8. '(__' → logprob: -4.048911094665527
    9. ' ___' → logprob: -4.048911094665527
    10. 'γ' → logprob: -4.673911094665527

Token 112: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.037728190422058
    2. ' (' → logprob: -2.0377283096313477
    3. 'α' → logprob: -2.5377283096313477
    4. ' i' → logprob: -2.6627283096313477
    5. ' α' → logprob: -2.6627283096313477
    6. 'i' → logprob: -2.7877283096313477
    7. '(i' → logprob: -2.9127283096313477
    8. '((' → logprob: -3.1627283096313477
    9. '(__' → logprob: -3.2877283096313477
    10. '___' → logprob: -3.7877283096313477

Token 113: 'β' (ID: 6331)
  Prédit: 'α'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'α' → logprob: -0.9223491549491882
    2. 'i' → logprob: -1.172349214553833
    3. '(' → logprob: -2.172349214553833
    4. ' α' → logprob: -3.672349214553833
    5. '(i' → logprob: -3.797349214553833
    6. ' i' → logprob: -3.797349214553833
    7. '(__' → logprob: -3.922349214553833
    8. 'γ' → logprob: -4.047348976135254
    9. 'β' → logprob: -4.172348976135254
    10. 'Ω' → logprob: -4.297348976135254

Token 114: '+' (ID: 10)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6894234418869019
    2. ' ==' → logprob: -1.0644234418869019
    3. ' and' → logprob: -3.1894235610961914
    4. '+' → logprob: -3.6894235610961914
    5. ' or' → logprob: -3.6894235610961914
    6. ')' → logprob: -4.064423561096191
    7. ' in' → logprob: -4.564423561096191
    8. '<=' → logprob: -5.064423561096191
    9. ' +' → logprob: -5.314423561096191
    10. ' <=' → logprob: -5.439423561096191

Token 115: 'γ' (ID: 2728)
  Prédit: 'γ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'γ' → logprob: -0.037480611354112625
    2. 'α' → logprob: -3.412480592727661
    3. 'γα' → logprob: -6.41248083114624
    4. ' γ' → logprob: -7.03748083114624
    5. 'i' → logprob: -8.162480354309082
    6. '1' → logprob: -8.412480354309082
    7. 'αγ' → logprob: -8.662480354309082
    8. '___' → logprob: -9.037480354309082
    9. ' α' → logprob: -9.412480354309082
    10. 'Ω' → logprob: -9.662480354309082

Token 116: ')%' (ID: 57656)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7724339962005615
    2. ')' → logprob: -2.0224339962005615
    3. '==' → logprob: -2.2724339962005615
    4. ')<=' → logprob: -2.2724339962005615
    5. '<' → logprob: -2.7724339962005615
    6. ' <=' → logprob: -3.5224339962005615
    7. '>' → logprob: -3.8974339962005615
    8. ')%' → logprob: -4.272434234619141
    9. ')<' → logprob: -4.397434234619141
    10. ' ==' → logprob: -4.522434234619141

Token 117: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0025827970821410418
    2. ' K' → logprob: -6.002583026885986
    3. ' ' → logprob: -9.752582550048828
    4. '2' → logprob: -10.502582550048828
    5. '  ' → logprob: -12.377582550048828
    6. '   ' → logprob: -12.502582550048828
    7. 'k' → logprob: -13.502582550048828
    8. ')' → logprob: -13.627582550048828
    9. '>K' → logprob: -13.627582550048828
    10. '<|end|>' → logprob: -13.627582550048828

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017989085987210274
    2. ':
' → logprob: -4.142989158630371
    3. '):' → logprob: -6.892989158630371
    4. '==' → logprob: -7.892989158630371
    5. ')' → logprob: -8.642989158630371
    6. '   ' → logprob: -8.892989158630371
    7. ':

' → logprob: -10.142989158630371
    8. '):
' → logprob: -10.142989158630371
    9. ' and' → logprob: -10.142989158630371
    10. '=' → logprob: -10.392989158630371

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05111851170659065
    2. '<|end|>' → logprob: -3.8011186122894287
    3. ':' → logprob: -4.30111837387085
    4. '   ' → logprob: -5.05111837387085
    5. ':
' → logprob: -6.55111837387085
    6. ' ' → logprob: -6.92611837387085
    7. '    ' → logprob: -7.30111837387085
    8. '<|end|>' → logprob: -7.55111837387085
    9. '):' → logprob: -7.80111837387085
    10. ')' → logprob: -7.80111837387085

Token 120: ' Ω' (ID: 159488)
  Prédit: ' Ω'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ω' → logprob: -0.4123579263687134
    2. 'Ω' (adapté à ' Ω') → logprob: -1.1623579263687134
    3. '       ' → logprob: -4.037357807159424
    4. ' ' → logprob: -5.912357807159424
    5. ' ' → logprob: -6.787357807159424
    6. '   ' → logprob: -7.162357807159424
    7. '        ' → logprob: -7.287357807159424
    8. ' if' → logprob: -7.787357807159424
    9. '    ' → logprob: -8.849858283996582
    10. ' ω' → logprob: -8.974858283996582

Token 121: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07147011160850525
    2. ' +=' → logprob: -2.696470022201538
    3. '+' → logprob: -6.696470260620117
    4. '=' → logprob: -9.446470260620117
    5. '<|end|>' → logprob: -9.446470260620117
    6. ']+=' → logprob: -9.946470260620117
    7. '+=(' → logprob: -9.946470260620117
    8. '+='' → logprob: -11.071470260620117
    9. ' ' → logprob: -11.446470260620117
    10. '+="' → logprob: -12.446470260620117

Token 122: '___' (ID: 11935)
  Prédit: '___'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.014026938937604427
    2. ' ___' → logprob: -5.264027118682861
    3. '__' → logprob: -5.764027118682861
    4. '1' → logprob: -6.389027118682861
    5. '____' → logprob: -6.514027118682861
    6. '(__' → logprob: -6.889027118682861
    7. '_' → logprob: -8.139026641845703
    8. '__(' → logprob: -8.264026641845703
    9. '(' → logprob: -8.701526641845703
    10. '__[' → logprob: -9.576526641845703

Token 123: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16043168306350708
    2. '(' → logprob: -1.9104316234588623
    3. '(alpha' → logprob: -9.035431861877441
    4. 'α' → logprob: -9.535431861877441
    5. 'i' → logprob: -11.910431861877441
    6. '((' → logprob: -12.660431861877441
    7. '(
' → logprob: -13.285431861877441
    8. ' (' → logprob: -14.035431861877441
    9. '(__' → logprob: -14.660431861877441
    10. ' α' → logprob: -14.910431861877441

Token 124: 'α' (ID: 727)
  Prédit: 'α'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'α' → logprob: -0.03702590614557266
    2. 'i' → logprob: -3.6620259284973145
    3. 'β' → logprob: -5.2870259284973145
    4. ' α' → logprob: -5.5370259284973145
    5. '(' → logprob: -7.5370259284973145
    6. ' i' → logprob: -8.162025451660156
    7. '   ' → logprob: -8.287025451660156
    8. 'alpha' → logprob: -8.412025451660156
    9. ' ' → logprob: -9.412025451660156
    10. ')' → logprob: -10.162025451660156

Token 125: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6576294302940369
    2. ')*' → logprob: -0.7826294302940369
    3. ')**' → logprob: -3.7826294898986816
    4. ' )' → logprob: -7.032629489898682
    5. '   ' → logprob: -8.032629013061523
    6. '*' → logprob: -8.282629013061523
    7. '**' → logprob: -9.407629013061523
    8. ' ' → logprob: -9.407629013061523
    9. ')+' → logprob: -9.532629013061523
    10. ' ' → logprob: -9.907629013061523

Token 126: '___' (ID: 11935)
  Prédit: '___'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.00033188972156494856
    2. ' ___' → logprob: -8.62533187866211
    3. '__' → logprob: -9.50033187866211
    4. '(__' → logprob: -10.37533187866211
    5. '____' → logprob: -11.00033187866211
    6. '  ' → logprob: -11.62533187866211
    7. '```' → logprob: -12.62533187866211
    8. ' ' → logprob: -13.00033187866211
    9. '   ' → logprob: -13.12533187866211
    10. '(' → logprob: -13.37533187866211

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00176347850356251
    2. 'β' → logprob: -6.876763343811035
    3. '(beta' → logprob: -7.251763343811035
    4. '((' → logprob: -11.876763343811035
    5. '(-' → logprob: -12.126763343811035
    6. '(i' → logprob: -13.251763343811035
    7. ' β' → logprob: -13.376763343811035
    8. ' (' → logprob: -13.501763343811035
    9. 'beta' → logprob: -13.751763343811035
    10. '(B' → logprob: -14.626763343811035

Token 128: 'β' (ID: 6331)
  Prédit: 'β'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'β' → logprob: -0.0001126026691053994
    2. ' β' → logprob: -9.875112533569336
    3. 'beta' → logprob: -10.000112533569336
    4. '(' → logprob: -12.125112533569336
    5. 'γ' → logprob: -12.375112533569336
    6. ' ' → logprob: -13.375112533569336
    7. 'ß' → logprob: -13.875112533569336
    8. 'βε' → logprob: -14.000112533569336
    9. '   ' → logprob: -14.875112533569336
    10. 'α' → logprob: -15.125112533569336

Token 129: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005593468667939305
    2. ' )' → logprob: -8.50055980682373
    3. '   ' → logprob: -8.87555980682373
    4. '<|end|>' → logprob: -8.87555980682373
    5. '<|end|>' → logprob: -11.12555980682373
    6. ')#' → logprob: -11.37555980682373
    7. ' ' → logprob: -11.37555980682373
    8. ')
' → logprob: -11.75055980682373
    9. '*' → logprob: -12.37555980682373
    10. ')return' → logprob: -12.37555980682373

Token 130: '___' (ID: 11935)
  Prédit: '___'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -5.538490950129926e-05
    2. '__' → logprob: -10.375055313110352
    3. ' ___' → logprob: -11.125055313110352
    4. '(__' → logprob: -12.500055313110352
    5. '```' → logprob: -13.625055313110352
    6. '  ' → logprob: -13.875055313110352
    7. '(' → logprob: -14.375055313110352
    8. '__(' → logprob: -14.375055313110352
    9. '____' → logprob: -14.750055313110352
    10. ' ' → logprob: -15.000055313110352

Token 131: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032747918157838285
    2. '(g' → logprob: -8.125327110290527
    3. 'γ' → logprob: -10.625327110290527
    4. ' (' → logprob: -12.375327110290527
    5. '(-' → logprob: -14.500327110290527
    6. '((' → logprob: -14.500327110290527
    7. ' γ' → logprob: -14.625327110290527
    8. 'gamma' → logprob: -14.625327110290527
    9. '(CG' → logprob: -15.625327110290527
    10. '(\' → logprob: -16.375328063964844

Token 132: 'γ' (ID: 2728)
  Prédit: 'γ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'γ' → logprob: -4.274932143744081e-05
    2. 'gamma' → logprob: -10.500042915344238
    3. ' γ' → logprob: -11.750042915344238
    4. 'γα' → logprob: -12.625042915344238
    5. '(' → logprob: -13.125042915344238
    6. '\xc9' → logprob: -14.500042915344238
    7. ' ' → logprob: -15.000042915344238
    8. 'i' → logprob: -15.500042915344238
    9. 'γω' → logprob: -15.625042915344238
    10. 'β' → logprob: -15.875042915344238

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07907264679670334
    2. ')
' → logprob: -2.5790727138519287
    3. ')
' → logprob: -9.329072952270508
    4. '   ' → logprob: -9.829072952270508
    5. ')i' → logprob: -11.204072952270508
    6. ' )' → logprob: -11.579072952270508
    7. ')`
' → logprob: -12.079072952270508
    8. ')

' → logprob: -12.704072952270508
    9. ' )
' → logprob: -12.829072952270508
    10. ')`' → logprob: -13.579072952270508

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15014445781707764
    2. '
' → logprob: -2.650144577026367
    3. 'i' → logprob: -3.650144577026367
    4. '    
' → logprob: -3.900144577026367
    5. '\n' → logprob: -5.275144577026367
    6. '  
' → logprob: -5.525144577026367
    7. ' 
' → logprob: -5.650144577026367
    8. ' i' → logprob: -5.650144577026367
    9. '<|end|>' → logprob: -5.650144577026367
    10. '   
' → logprob: -6.900144577026367

Token 135: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8181554079055786
    2. 'i' (adapté à ' i') → logprob: -0.9431554079055786
    3. '
' → logprob: -2.193155288696289
    4. ' i' → logprob: -3.443155288696289
    5. '	i' → logprob: -4.943155288696289
    6. '    
' → logprob: -5.318155288696289
    7. '<|end|>' → logprob: -5.318155288696289
    8. '\n' → logprob: -5.568155288696289
    9. '  
' → logprob: -7.318155288696289
    10. '[i' → logprob: -7.318155288696289

Token 136: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0014380889479070902
    2. '+' → logprob: -6.876438140869141
    3. ' +=' → logprob: -8.00143814086914
    4. '=' → logprob: -9.62643814086914
    5. '+='' → logprob: -12.87643814086914
    6. '+="' → logprob: -14.00143814086914
    7. '+=(' → logprob: -15.25143814086914
    8. '++' → logprob: -15.25143814086914
    9. ']+=' → logprob: -15.37643814086914
    10. '<|end|>' → logprob: -16.87643814086914

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.625001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '１' → logprob: -19.500001907348633
    6. '  ' → logprob: -19.500001907348633
    7. '`' → logprob: -20.125001907348633
    8. '۱' → logprob: -20.437501907348633
    9. '‌' → logprob: -20.750001907348633
    10. '' → logprob: -20.750001907348633

Token 138: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2055869698524475
    2. ')' → logprob: -2.5805869102478027
    3. '<|end|>' → logprob: -3.0805869102478027
    4. '
' → logprob: -3.3305869102478027
    5. 'Ω' → logprob: -4.080586910247803
    6. '\n' → logprob: -6.080586910247803
    7. '```' → logprob: -6.330586910247803
    8. '#' → logprob: -6.580586910247803
    9. '\xe2\x81' → logprob: -7.080586910247803
    10. ' print' → logprob: -7.205586910247803

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.13388703338569e-06
    2. 'Ω' → logprob: -12.750009536743164
    3. '(
' → logprob: -13.375009536743164
    4. ' (' → logprob: -13.625009536743164
    5. '()' → logprob: -13.750009536743164
    6. '(O' → logprob: -14.000009536743164
    7. '((' → logprob: -15.000009536743164
    8. '(f' → logprob: -15.250009536743164
    9. '('' → logprob: -15.250009536743164
    10. '(\' → logprob: -15.750009536743164

Token 141: 'Ω' (ID: 45879)
  Prédit: 'Ω'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ω' → logprob: 0.0
    2. ' Ω' → logprob: -17.25
    3. 'Omega' → logprob: -18.25
    4. ')' → logprob: -18.375
    5. 'Ω' → logprob: -18.625
    6. '\' → logprob: -18.75
    7. 'ω' → logprob: -20.5
    8. '"' → logprob: -20.75
    9. 'Ο' → logprob: -20.75
    10. ''' → logprob: -21.125

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -14.000003814697266
    3. '))' → logprob: -14.250003814697266
    4. ')`' → logprob: -14.250003814697266
    5. ' )' → logprob: -15.375003814697266
    6. ')**' → logprob: -15.500003814697266
    7. '+' → logprob: -15.750003814697266
    8. '`)' → logprob: -16.250003814697266
    9. '')' → logprob: -16.375003814697266
    10. '#' → logprob: -16.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 41.43%
Précision adaptée (1ère position): 41.43%
Précision (top 10): 73.57%
================================================================================
