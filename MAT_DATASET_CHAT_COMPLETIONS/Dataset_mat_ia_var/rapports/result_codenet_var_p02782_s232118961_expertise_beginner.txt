================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD = 10 ** 9 + 7

def prepare(n):
    modFacts = [1] * (n + 1)
    for i in range(1, n + 1):
        modFacts[i] = (modFacts[i - 1] * i) % MOD

    invs = [1] * (n + 1)
    invs[n] = pow(modFacts[n], MOD - 2, MOD)
    for i in range(n, 0, -1):
        invs[i - 1] = (invs[i] * i) % MOD

    return modFacts, invs

def f(i, j):
    num = modFacts[i + j]
    denom = (invs[i] * invs[j]) % MOD
    return (num * denom) % MOD

def g(r1, r2, y):
    total = 0
    for x in range(r1, r2 + 1):
        total = (total + f(x + 1, y)) % MOD
    return total

r1, c1, r2, c2 = map(int, input().split())
N = max(r1, r2, c1, c2) * 2 + 2
modFacts, invs = prepare(N)

ans = g(r1, r2, c2) - g(r1, r2, c1 - 1)
print(ans % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2025304138660431
    2. '10' → logprob: -1.7025303840637207
    3. '```' → logprob: -7.077530384063721
    4. ' ' → logprob: -9.077530860900879
    5. '1' → logprob: -9.327530860900879
    6. '`' → logprob: -10.077530860900879
    7. '(' → logprob: -11.452530860900879
    8. '``' → logprob: -12.077530860900879
    9. '998' → logprob: -12.202530860900879
    10. '123' → logprob: -12.952530860900879

Token 4: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.24681366980075836
    2. '0' → logprob: -1.7468136548995972
    3. '_' → logprob: -3.7468137741088867
    4. ' **' → logprob: -4.371813774108887
    5. '000' → logprob: -6.121813774108887
    6. '^' → logprob: -6.121813774108887
    7. '*' → logprob: -6.246813774108887
    8. '#' → logprob: -7.746813774108887
    9. ',' → logprob: -8.621813774108887
    10. '\' → logprob: -8.746813774108887

Token 5: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.625005722045898
    3. '09' → logprob: -13.375005722045898
    4. '```' → logprob: -14.125005722045898
    5. '``' → logprob: -19.0000057220459
    6. '   ' → logprob: -19.3750057220459
    7. '**' → logprob: -19.5000057220459
    8. '+' → logprob: -20.2500057220459
    9. ' ' → logprob: -20.3750057220459
    10. '​' → logprob: -21.0000057220459

Token 6: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -16.625
    4. '09' → logprob: -17.375
    5. '``' → logprob: -21.25
    6. '6' → logprob: -21.25
    7. '**' → logprob: -21.625
    8. '   ' → logprob: -21.625
    9. '^' → logprob: -22.125
    10. '8' → logprob: -22.5

Token 7: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003956416912842542
    2. ' +' → logprob: -8.500395774841309
    3. '7' → logprob: -8.625395774841309
    4. '```' → logprob: -11.375395774841309
    5. '+
' → logprob: -15.625395774841309
    6. '＋' → logprob: -16.000394821166992
    7. '\' → logprob: -16.125394821166992
    8. '9' → logprob: -16.250394821166992
    9. ' ' → logprob: -16.375394821166992
    10. '`' → logprob: -16.375394821166992

Token 8: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -16.500017166137695
    4. '9' → logprob: -17.500017166137695
    5. '+' → logprob: -17.500017166137695
    6. '1' → logprob: -18.000017166137695
    7. ' ' → logprob: -18.625017166137695
    8. '37' → logprob: -18.625017166137695
    9. '07' → logprob: -19.125017166137695
    10. '``' → logprob: -19.375017166137695

Token 9: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '+' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. '   ' → logprob: -20.125
    6. '``' → logprob: -20.5
    7. '07' → logprob: -20.625
    8. '37' → logprob: -21.0
    9. '  ' → logprob: -21.0625
    10. '9' → logprob: -21.6875

Token 10: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8625800609588623
    2. '\n' → logprob: -1.8625800609588623
    3. '```' → logprob: -2.1125800609588623
    4. '\' → logprob: -2.1125800609588623
    5. '
' → logprob: -3.1125800609588623
    6. ')' → logprob: -3.3625800609588623
    7. ',' → logprob: -4.112580299377441
    8. '`' → logprob: -4.112580299377441
    9. '**' → logprob: -4.237580299377441
    10. '#' → logprob: -4.362580299377441

Token 11: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1676210165023804
    2. '`' → logprob: -1.5426210165023804
    3. '\n' → logprob: -2.16762113571167
    4. '=' → logprob: -2.66762113571167
    5. '
' → logprob: -2.91762113571167
    6. '\' → logprob: -3.04262113571167
    7. ',' → logprob: -3.41762113571167
    8. ')' → logprob: -3.41762113571167
    9. ' =' → logprob: -3.66762113571167
    10. '*' → logprob: -3.79262113571167

Token 12: ' prepare' (ID: 13708)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036034490913152695
    2. ' factorial' → logprob: -3.66103458404541
    3. ' f' → logprob: -6.16103458404541
    4. ' pow' → logprob: -6.41103458404541
    5. ' add' → logprob: -7.03603458404541
    6. ' mod' → logprob: -7.28603458404541
    7. ' func' → logprob: -7.66103458404541
    8. ' calculate' → logprob: -7.91103458404541
    9. ' factor' → logprob: -8.03603458404541
    10. ' sum' → logprob: -8.16103458404541

Token 13: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5572068095207214
    2. '_data' → logprob: -1.8072068691253662
    3. '_array' → logprob: -2.557206869125366
    4. '_' → logprob: -2.682206869125366
    5. '(_' → logprob: -2.807206869125366
    6. ' (' → logprob: -4.182206630706787
    7. '_input' → logprob: -5.182206630706787
    8. '(arr' → logprob: -5.432206630706787
    9. '_list' → logprob: -5.557206630706787
    10. 'data' → logprob: -5.682206630706787

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14418932795524597
    2. ',' → logprob: -2.6441893577575684
    3. ')' → logprob: -2.7691893577575684
    4. ':' → logprob: -8.64418888092041
    5. '_' → logprob: -9.39418888092041
    6. ' ):' → logprob: -9.76918888092041
    7. ' ,' → logprob: -9.89418888092041
    8. '):
' → logprob: -10.51918888092041
    9. ' )' → logprob: -11.51918888092041
    10. '_n' → logprob: -11.64418888092041

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3088347315788269
    2. '```' → logprob: -1.6838347911834717
    3. '    
' → logprob: -3.9338347911834717
    4. '    ' → logprob: -3.9338347911834717
    5. ' 
' → logprob: -5.308834552764893
    6. ' return' → logprob: -5.308834552764893
    7. ' ' → logprob: -5.683834552764893
    8. 'a' → logprob: -5.808834552764893
    9. '``' → logprob: -5.808834552764893
    10. '`' → logprob: -6.183834552764893

Token 16: ' mod' (ID: 1812)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.43932658433914185
    2. ' fact' → logprob: -1.939326524734497
    3. 'f' → logprob: -2.939326524734497
    4. 'dp' → logprob: -3.064326524734497
    5. 'factor' → logprob: -3.814326524734497
    6. ' f' → logprob: -3.939326524734497
    7. 'facts' → logprob: -4.189326763153076
    8. 'fac' → logprob: -4.314326763153076
    9. ' dp' → logprob: -4.314326763153076
    10. ' fac' → logprob: -4.939326763153076

Token 17: 'Facts' (ID: 117250)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1694515943527222
    2. '=' → logprob: -1.2944515943527222
    3. '_' → logprob: -1.2944515943527222
    4. ',' → logprob: -3.2944517135620117
    5. '*' → logprob: -3.7944517135620117
    6. 'ulus' → logprob: -3.7944517135620117
    7. 'ul' → logprob: -4.544451713562012
    8. '**' → logprob: -5.044451713562012
    9. '%' → logprob: -5.294451713562012
    10. 'ulo' → logprob: -5.419451713562012

Token 18: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5420842170715332
    2. '[' → logprob: -1.7920842170715332
    3. '=' → logprob: -2.042084217071533
    4. 'ors' → logprob: -3.042084217071533
    5. 'orial' → logprob: -3.292084217071533
    6. 'orz' → logprob: -4.542084217071533
    7. ' =' → logprob: -5.167084217071533
    8. 'oriz' → logprob: -5.417084217071533
    9. 'o' → logprob: -5.542084217071533
    10. '['' → logprob: -5.917084217071533

Token 19: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04860758036375046
    2. ' [' → logprob: -3.048607587814331
    3. '[n' → logprob: -11.04860782623291
    4. '{' → logprob: -13.29860782623291
    5. '[int' → logprob: -14.29860782623291
    6. '[]' → logprob: -14.67360782623291
    7. ' ' → logprob: -14.67360782623291
    8. '   ' → logprob: -15.79860782623291
    9. '[i' → logprob: -16.048606872558594
    10. '1' → logprob: -16.048606872558594

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. ']' → logprob: -16.875003814697266
    4. '0' → logprob: -17.000003814697266
    5. ')' → logprob: -17.125003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '```' → logprob: -18.500003814697266
    8. '  ' → logprob: -19.687503814697266
    9. '

' → logprob: -20.000003814697266
    10. '`' → logprob: -20.000003814697266

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033876895904541016
    2. ',' → logprob: -3.408876895904541
    3. ' ]' → logprob: -9.033876419067383
    4. ')' → logprob: -9.908876419067383
    5. ' for' → logprob: -10.533876419067383
    6. ',
' → logprob: -12.033876419067383
    7. '}' → logprob: -12.408876419067383
    8. ')]' → logprob: -12.533876419067383
    9. ' ' → logprob: -12.658876419067383
    10. ' ,' → logprob: -12.658876419067383

Token 22: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37498199939727783
    2. ']' → logprob: -1.2499819993972778
    3. ' for' → logprob: -3.9999818801879883
    4. ' ]' → logprob: -5.874981880187988
    5. ' ' → logprob: -6.749981880187988
    6. 'for' → logprob: -7.249981880187988
    7. ')' → logprob: -7.499981880187988
    8. '```' → logprob: -7.499981880187988
    9. '
' → logprob: -7.624981880187988
    10. ' ,' → logprob: -8.124981880187988

Token 23: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000498701527249068
    2. ' (' → logprob: -7.6254987716674805
    3. '(' → logprob: -11.75049877166748
    4. 'n' → logprob: -13.50049877166748
    5. '(max' → logprob: -14.00049877166748
    6. ' ' → logprob: -16.125497817993164
    7. '[n' → logprob: -16.500497817993164
    8. ' n' → logprob: -17.000497817993164
    9. '0' → logprob: -17.000497817993164
    10. '(nn' → logprob: -17.250497817993164

Token 24: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031818747520446777
    2. ' n' → logprob: -5.7531819343566895
    3. '(n' → logprob: -12.503181457519531
    4. ')n' → logprob: -14.878181457519531
    5. ' (' → logprob: -17.00318145751953
    6. '	n' → logprob: -17.12818145751953
    7. ' ' → logprob: -18.50318145751953
    8. ')' → logprob: -18.50318145751953
    9. '[n' → logprob: -19.00318145751953
    10. '   ' → logprob: -19.25318145751953

Token 25: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020547257736325264
    2. ' +' → logprob: -3.8955471515655518
    3. ')' → logprob: -12.770546913146973
    4. '+)' → logprob: -13.895546913146973
    5. '+
' → logprob: -14.145546913146973
    6. ' ' → logprob: -15.145546913146973
    7. ' +
' → logprob: -15.520546913146973
    8. ' )' → logprob: -16.02054786682129
    9. '+n' → logprob: -16.52054786682129
    10. ' plus' → logprob: -17.14554786682129

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008624859154224396
    2. ' ' → logprob: -4.758625030517578
    3. '2' → logprob: -11.508625030517578
    4. ' ' → logprob: -17.321125030517578
    5. '7' → logprob: -17.508625030517578
    6. '+' → logprob: -17.758625030517578
    7. ')' → logprob: -17.821125030517578
    8. '  ' → logprob: -17.821125030517578
    9. '```' → logprob: -18.008625030517578
    10. '11' → logprob: -18.508625030517578

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -15.000012397766113
    4. '```' → logprob: -17.437511444091797
    5. '۱' → logprob: -18.250011444091797
    6. '１' → logprob: -18.312511444091797
    7. '+' → logprob: -18.375011444091797
    8. '' → logprob: -18.437511444091797
    9. '  ' → logprob: -18.625011444091797
    10. '   ' → logprob: -18.750011444091797

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009433844243176281
    2. ')
' → logprob: -7.000943183898926
    3. ')
' → logprob: -10.625943183898926
    4. ')

' → logprob: -12.500943183898926
    5. ' )' → logprob: -13.250943183898926
    6. ')`' → logprob: -14.250943183898926
    7. ']' → logprob: -14.875943183898926
    8. ')

' → logprob: -15.125943183898926
    9. '),' → logprob: -16.000944137573242
    10. '`)' → logprob: -16.125944137573242

Token 29: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6743756532669067
    2. '
' → logprob: -1.4243756532669067
    3. ' for' → logprob: -1.4243756532669067
    4. '   ' → logprob: -5.174375534057617
    5. '
' → logprob: -6.424375534057617
    6. '    
' → logprob: -7.674375534057617
    7. ' 
' → logprob: -8.049375534057617
    8. '	for' → logprob: -8.299375534057617
    9. '\n' → logprob: -8.549375534057617
    10. '' → logprob: -8.674375534057617

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.034458450973033905
    2. ' for' → logprob: -3.5344583988189697
    3. '   ' → logprob: -5.409458637237549
    4. '
' → logprob: -8.78445816040039
    5. '```' → logprob: -10.40945816040039
    6. '	for' → logprob: -10.90945816040039
    7. ' ' → logprob: -11.53445816040039
    8. '    
' → logprob: -11.90945816040039
    9. '
' → logprob: -13.78445816040039
    10. '\n' → logprob: -14.15945816040039

Token 31: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04634112864732742
    2. ' ' → logprob: -3.6713411808013916
    3. 'i' → logprob: -3.9213411808013916
    4. '	i' → logprob: -11.671340942382812
    5. ' _' → logprob: -12.046340942382812
    6. '_' → logprob: -12.296340942382812
    7. ' ' → logprob: -12.421340942382812
    8. '  ' → logprob: -14.171340942382812
    9. ' range' → logprob: -14.546340942382812
    10. ')' → logprob: -14.546340942382812

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025896925944834948
    2. 'in' → logprob: -6.002589702606201
    3. ' ' → logprob: -9.627589225769043
    4. '	in' → logprob: -10.127589225769043
    5. '<|end|>' → logprob: -13.627589225769043
    6. '  ' → logprob: -14.002589225769043
    7. ' i' → logprob: -14.002589225769043
    8. '1' → logprob: -14.002589225769043
    9. '+' → logprob: -14.377589225769043
    10. '```' → logprob: -14.377589225769043

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001503790495917201
    2. 'range' → logprob: -6.501503944396973
    3. ' ' → logprob: -13.751503944396973
    4. ' xrange' → logprob: -15.376503944396973
    5. '	range' → logprob: -16.126502990722656
    6. '(range' → logprob: -18.126502990722656
    7. ' ' → logprob: -18.501502990722656
    8. ' in' → logprob: -19.251502990722656
    9. '  ' → logprob: -19.251502990722656
    10. '1' → logprob: -20.251502990722656

Token 34: '(' (ID: 7)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22525417804718018
    2. '(' → logprob: -2.4752540588378906
    3. '2' → logprob: -2.6002540588378906
    4. '1' → logprob: -3.2252540588378906
    5. '   ' → logprob: -6.600254058837891
    6. ' (' → logprob: -7.100254058837891
    7. ' in' → logprob: -7.350254058837891
    8. '    ' → logprob: -8.10025405883789
    9. ' i' → logprob: -8.85025405883789
    10. '  ' → logprob: -9.47525405883789

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038054682314395905
    2. '2' → logprob: -3.2880547046661377
    3. ' ' → logprob: -11.288054466247559
    4. '   ' → logprob: -14.288054466247559
    5. ')' → logprob: -17.413055419921875
    6. 'n' → logprob: -18.788055419921875
    7. '```' → logprob: -19.163055419921875
    8. '  ' → logprob: -19.913055419921875
    9. '    ' → logprob: -20.163055419921875
    10. '(' → logprob: -21.538055419921875

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2845866680145264
    2. ' ):' → logprob: -1.4095866680145264
    3. ' )' → logprob: -1.5345866680145264
    4. ' ,' → logprob: -2.0345866680145264
    5. '):' → logprob: -2.9095866680145264
    6. ')' → logprob: -2.9095866680145264
    7. ' ' → logprob: -4.9095869064331055
    8. ' ):
' → logprob: -5.0345869064331055
    9. ':' → logprob: -6.1595869064331055
    10. '<|end|>' → logprob: -6.1595869064331055

Token 37: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132622241973877
    2. 'n' → logprob: -1.3132622241973877
    3. ')n' → logprob: -15.188261985778809
    4. '	n' → logprob: -16.063262939453125
    5. ')' → logprob: -17.063262939453125
    6. ' ' → logprob: -17.188262939453125
    7. '```' → logprob: -18.188262939453125
    8. ' ' → logprob: -18.188262939453125
    9. '_n' → logprob: -19.563262939453125
    10. '   ' → logprob: -19.688262939453125

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326648592948914
    2. ' +' → logprob: -1.3132665157318115
    3. ')' → logprob: -13.18826675415039
    4. ' +
' → logprob: -13.93826675415039
    5. '   ' → logprob: -14.56326675415039
    6. ' ' → logprob: -15.18826675415039
    7. ')+' → logprob: -15.18826675415039
    8. '+
' → logprob: -15.43826675415039
    9. '):' → logprob: -15.93826675415039
    10. '```' → logprob: -16.18826675415039

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007110013975761831
    2. ' ' → logprob: -7.250710964202881
    3. ')' → logprob: -14.625711441040039
    4. '```' → logprob: -14.875711441040039
    5. '   ' → logprob: -16.37571144104004
    6. ' ' → logprob: -16.62571144104004
    7. '۱' → logprob: -17.87571144104004
    8. '2' → logprob: -17.93821144104004
    9. ' )' → logprob: -18.25071144104004
    10. '``' → logprob: -18.50071144104004

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '2' → logprob: -17.375011444091797
    4. '   ' → logprob: -17.375011444091797
    5. '۱' → logprob: -17.500011444091797
    6. '```' → logprob: -17.625011444091797
    7. ')' → logprob: -17.875011444091797
    8. '১' → logprob: -18.312511444091797
    9. '१' → logprob: -18.437511444091797
    10. '１' → logprob: -18.937511444091797

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034811587538570166
    2. ')' → logprob: -5.753481388092041
    3. ':' → logprob: -8.253480911254883
    4. '):
' → logprob: -10.753480911254883
    5. ' ):' → logprob: -10.878480911254883
    6. ',' → logprob: -14.378480911254883
    7. ']:' → logprob: -14.628480911254883
    8. '   ' → logprob: -15.003480911254883
    9. ' ' → logprob: -15.003480911254883
    10. '):
' → logprob: -15.378480911254883

Token 42: '       ' (ID: 309)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.0174871683120728
    2. '    ' → logprob: -1.1424871683120728
    3. '   ' → logprob: -2.017487049102783
    4. '       ' → logprob: -3.017487049102783
    5. ' ' → logprob: -3.517487049102783
    6. ':' → logprob: -3.642487049102783
    7. ' :' → logprob: -4.017487049102783
    8. '     
' → logprob: -4.642487049102783
    9. ')' → logprob: -4.892487049102783
    10. 'mod' → logprob: -4.892487049102783

Token 43: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7019824385643005
    2. 'mod' (adapté à ' mod') → logprob: -0.7019824385643005
    3. ' )' → logprob: -5.826982498168945
    4. ')' → logprob: -6.201982498168945
    5. '    ' → logprob: -6.826982498168945
    6. '	mod' → logprob: -7.201982498168945
    7. '   ' → logprob: -7.451982498168945
    8. ' ' → logprob: -8.201982498168945
    9. '(mod' → logprob: -8.201982498168945
    10. '```' → logprob: -8.576982498168945

Token 44: 'Facts' (ID: 117250)
  Prédit: 'Facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facts' → logprob: -4.842555426876061e-06
    2. 'Fact' → logprob: -12.625004768371582
    3. ' Facts' → logprob: -13.500004768371582
    4. 'Fac' → logprob: -17.5000057220459
    5. 'Factors' → logprob: -18.0000057220459
    6. 'F' → logprob: -18.2500057220459
    7. 'FACT' → logprob: -18.6250057220459
    8. 'facts' → logprob: -19.2500057220459
    9. 'Fa' → logprob: -19.7500057220459
    10. '_FACT' → logprob: -20.1250057220459

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028140286449342966
    2. '[' → logprob: -5.877813816070557
    3. '[I' → logprob: -12.502814292907715
    4. '```' → logprob: -13.252814292907715
    5. ' [' → logprob: -13.377814292907715
    6. '\[' → logprob: -14.252814292907715
    7. '   ' → logprob: -15.002814292907715
    8. '[...]' → logprob: -15.252814292907715
    9. '[:]' → logprob: -15.252814292907715
    10. ' ' → logprob: -15.627814292907715

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4866880476474762
    2. '=' → logprob: -1.6116880178451538
    3. ' =' → logprob: -2.2366881370544434
    4. ')' → logprob: -2.7366881370544434
    5. ' ]' → logprob: -4.486688137054443
    6. ' )' → logprob: -6.486688137054443
    7. ']=' → logprob: -7.236688137054443
    8. ' ' → logprob: -8.486687660217285
    9. ')=' → logprob: -8.611687660217285
    10. ' *=' → logprob: -9.361687660217285

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004190113395452499
    2. ' =' → logprob: -5.504189968109131
    3. '*=' → logprob: -9.129190444946289
    4. ' *=' → logprob: -13.504190444946289
    5. '=

' → logprob: -14.254190444946289
    6. '*' → logprob: -14.754190444946289
    7. '=
' → logprob: -15.504190444946289
    8. ' ' → logprob: -16.00419044494629
    9. '```' → logprob: -16.00419044494629
    10. ')' → logprob: -16.37919044494629

Token 48: ' (' (ID: 350)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.754926323890686
    2. ' mod' → logprob: -1.379926323890686
    3. 'mod' → logprob: -1.504926323890686
    4. ' (' → logprob: -2.8799262046813965
    5. '(' → logprob: -9.754926681518555
    6. '	mod' → logprob: -10.254926681518555
    7. '   ' → logprob: -10.504926681518555
    8. '(m' → logprob: -11.254926681518555
    9. ' ' → logprob: -12.067426681518555
    10. '_mod' → logprob: -12.379926681518555

Token 49: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04303481802344322
    2. ' mod' → logprob: -3.168034791946411
    3. 'i' → logprob: -11.168034553527832
    4. ' i' → logprob: -11.668034553527832
    5. '	mod' → logprob: -11.668034553527832
    6. '(mod' → logprob: -13.168034553527832
    7. '   ' → logprob: -14.293034553527832
    8. '_mod' → logprob: -15.168034553527832
    9. '```' → logprob: -15.418034553527832
    10. ' ' → logprob: -15.543034553527832

Token 50: 'Facts' (ID: 117250)
  Prédit: 'Facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facts' → logprob: -1.664371848164592e-05
    2. 'Fact' → logprob: -11.625016212463379
    3. ' Facts' → logprob: -12.000016212463379
    4. 'Factors' → logprob: -14.500016212463379
    5. 'Fac' → logprob: -15.125016212463379
    6. 'facts' → logprob: -15.625016212463379
    7. 'FACT' → logprob: -15.625016212463379
    8. '*' → logprob: -16.250017166137695
    9. '   ' → logprob: -16.750017166137695
    10. ')' → logprob: -16.875017166137695

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.125000953674316
    3. 'i' → logprob: -16.75
    4. '[
' → logprob: -17.625
    5. ' [' → logprob: -18.125
    6. '
' → logprob: -18.5
    7. '```' → logprob: -18.625
    8. '[I' → logprob: -19.125
    9. ' ' → logprob: -19.25
    10. '[-' → logprob: -19.375

Token 52: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026307733729481697
    2. ' -' → logprob: -3.6513078212738037
    3. ' ' → logprob: -12.401308059692383
    4. '-i' → logprob: -13.776308059692383
    5. '```' → logprob: -14.651308059692383
    6. '-
' → logprob: -14.776308059692383
    7. '−' → logprob: -15.276308059692383
    8. '	' → logprob: -15.401308059692383
    9. '
' → logprob: -15.776308059692383
    10. '*' → logprob: -15.776308059692383

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '```' → logprob: -16.375431060791016
    4. '   ' → logprob: -16.625431060791016
    5. ']' → logprob: -17.625431060791016
    6. '    ' → logprob: -17.750431060791016
    7. ' ' → logprob: -18.375431060791016
    8. '  ' → logprob: -19.125431060791016
    9. ')' → logprob: -19.625431060791016
    10. '１' → logprob: -19.875431060791016

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.750024795532227
    4. '```' → logprob: -16.250024795532227
    5. '  ' → logprob: -17.187524795532227
    6. '    ' → logprob: -17.625024795532227
    7. ']' → logprob: -17.687524795532227
    8. '
' → logprob: -17.875024795532227
    9. '۱' → logprob: -18.125024795532227
    10. '১' → logprob: -18.312524795532227

Token 55: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6934528350830078
    2. ' *' → logprob: -0.6934528350830078
    3. '*i' → logprob: -8.318452835083008
    4. ' ' → logprob: -9.943452835083008
    5. ')' → logprob: -12.068452835083008
    6. ' ' → logprob: -12.318452835083008
    7. '   ' → logprob: -13.693452835083008
    8. 'i' → logprob: -14.693452835083008
    9. '```' → logprob: -15.318452835083008
    10. '    ' → logprob: -15.568452835083008

Token 56: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1797773838043213
    2. ' *' → logprob: -1.8047773838043213
    3. '*i' → logprob: -10.929777145385742
    4. ' ' → logprob: -11.679777145385742
    5. ' ' → logprob: -12.054777145385742
    6. ')' → logprob: -15.929777145385742
    7. '```' → logprob: -15.929777145385742
    8. '**' → logprob: -16.054777145385742
    9. 'i' → logprob: -17.054777145385742
    10. '`' → logprob: -17.179777145385742

Token 57: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687169551849365
    2. ' i' → logprob: -1.1368716955184937
    3. '	i' → logprob: -14.886871337890625
    4. ' ' → logprob: -15.886871337890625
    5. '   ' → logprob: -16.761871337890625
    6. ' ' → logprob: -16.886871337890625
    7. '```' → logprob: -18.386871337890625
    8. ')i' → logprob: -18.636871337890625
    9. '    ' → logprob: -19.261871337890625
    10. '*i' → logprob: -19.636871337890625

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002378673671046272
    2. ' )' → logprob: -8.375237464904785
    3. ')%' → logprob: -11.875237464904785
    4. ')
' → logprob: -16.3752384185791
    5. '   ' → logprob: -16.6252384185791
    6. '%' → logprob: -16.7502384185791
    7. ')`' → logprob: -17.3752384185791
    8. '`)' → logprob: -17.5002384185791
    9. '```' → logprob: -18.1252384185791
    10. ' ' → logprob: -18.2502384185791

Token 59: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02407512627542019
    2. '%' → logprob: -3.7740750312805176
    3. ' ' → logprob: -7.399075031280518
    4. ')' → logprob: -8.524075508117676
    5. ' ' → logprob: -11.899075508117676
    6. ')%' → logprob: -12.274075508117676
    7. '<|end|>' → logprob: -13.649075508117676
    8. ' %=' → logprob: -13.899075508117676
    9. ' )' → logprob: -14.274075508117676
    10. ' `' → logprob: -14.399075508117676

Token 60: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.3132699728012085
    2. 'MOD' → logprob: -1.3132699728012085
    3. ' ' → logprob: -12.31326961517334
    4. '_MOD' → logprob: -12.81326961517334
    5. '.MOD' → logprob: -14.43826961517334
    6. ' ' → logprob: -14.68826961517334
    7. '```' → logprob: -18.313270568847656
    8. 'MO' → logprob: -18.563270568847656
    9. 'mod' → logprob: -18.813270568847656
    10. 'M' → logprob: -18.938270568847656

Token 61: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10698765516281128
    2. '
' → logprob: -2.356987714767456
    3. '    
' → logprob: -6.231987476348877
    4. ' ' → logprob: -6.606987476348877
    5. '\n' → logprob: -6.731987476348877
    6. ' 
' → logprob: -6.981987476348877
    7. '  
' → logprob: -8.106987953186035
    8. '<|end|>' → logprob: -8.106987953186035
    9. ' return' → logprob: -8.981987953186035
    10. '	return' → logprob: -9.106987953186035

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001804534113034606
    2. '
' → logprob: -7.126804351806641
    3. '    
' → logprob: -7.751804351806641
    4. 'return' → logprob: -8.25180435180664
    5. ' ' → logprob: -9.37680435180664
    6. 'def' → logprob: -9.87680435180664
    7. '<|end|>' → logprob: -10.00180435180664
    8. '	return' → logprob: -10.50180435180664
    9. ' return' → logprob: -10.62680435180664
    10. ' 
' → logprob: -11.12680435180664

Token 63: ' inv' (ID: 1827)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.039229702204465866
    2. '   ' → logprob: -3.28922963142395
    3. ' return' → logprob: -6.789229869842529
    4. ' ' → logprob: -10.914229393005371
    5. '	return' → logprob: -11.789229393005371
    6. '```' → logprob: -11.789229393005371
    7. '    
' → logprob: -12.164229393005371
    8. 'inverse' → logprob: -12.414229393005371
    9. 'def' → logprob: -12.664229393005371
    10. 'mod' → logprob: -12.914229393005371

Token 64: 's' (ID: 82)
  Prédit: 'Facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Facts' → logprob: -0.0052315061911940575
    2. 'Fact' → logprob: -5.6302313804626465
    3. 'Mod' → logprob: -7.7552313804626465
    4. '_fact' → logprob: -7.8802313804626465
    5. ' Facts' → logprob: -8.505231857299805
    6. ' =' → logprob: -8.630231857299805
    7. '_mod' → logprob: -8.755231857299805
    8. '_factor' → logprob: -9.505231857299805
    9. 'Mods' → logprob: -10.130231857299805
    10. '_f' → logprob: -10.505231857299805

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09152306616306305
    2. '=' → logprob: -2.4665231704711914
    3. 'Fact' → logprob: -7.091523170471191
    4. '_factor' → logprob: -7.591523170471191
    5. '_fact' → logprob: -7.591523170471191
    6. '[' → logprob: -8.466523170471191
    7. '   ' → logprob: -8.966523170471191
    8. 'ersion' → logprob: -9.966523170471191
    9. 'Facts' → logprob: -10.091523170471191
    10. '_mod' → logprob: -10.216523170471191

Token 66: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007665659300982952
    2. ' [' → logprob: -4.882665634155273
    3. '[n' → logprob: -10.007665634155273
    4. ' ' → logprob: -12.507665634155273
    5. '[i' → logprob: -12.632665634155273
    6. '   ' → logprob: -13.007665634155273
    7. '[len' → logprob: -13.132665634155273
    8. '1' → logprob: -13.757665634155273
    9. '[in' → logprob: -15.132665634155273
    10. 'n' → logprob: -15.382665634155273

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07891832292079926
    2. '0' → logprob: -2.578918218612671
    3. ']' → logprob: -11.45391845703125
    4. ' ' → logprob: -11.57891845703125
    5. 'None' → logprob: -12.57891845703125
    6. '```' → logprob: -13.20391845703125
    7. '-' → logprob: -13.57891845703125
    8. '   ' → logprob: -14.70391845703125
    9. ')' → logprob: -14.70391845703125
    10. '[' → logprob: -15.20391845703125

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016587569552939385
    2. ',' → logprob: -9.750165939331055
    3. ')' → logprob: -10.500165939331055
    4. ']*' → logprob: -10.875165939331055
    5. ' ]' → logprob: -11.000165939331055
    6. '*' → logprob: -11.000165939331055
    7. '   ' → logprob: -11.625165939331055
    8. ' *' → logprob: -11.875165939331055
    9. ']*(' → logprob: -11.875165939331055
    10. ' ' → logprob: -13.625165939331055

Token 69: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.23022598028182983
    2. '*' → logprob: -1.8552260398864746
    3. '   ' → logprob: -3.9802260398864746
    4. '*(' → logprob: -4.105226039886475
    5. '<|end|>' → logprob: -4.855226039886475
    6. ' ' → logprob: -6.105226039886475
    7. ',' → logprob: -6.480226039886475
    8. '  ' → logprob: -7.855226039886475
    9. '<|end|>' → logprob: -7.855226039886475
    10. ')' → logprob: -8.355225563049316

Token 70: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007201816886663437
    2. ' (' → logprob: -5.007201671600342
    3. '(' → logprob: -7.632201671600342
    4. 'n' → logprob: -14.2572021484375
    5. '   ' → logprob: -15.2572021484375
    6. ' ' → logprob: -15.3822021484375
    7. '(len' → logprob: -15.8822021484375
    8. '(mod' → logprob: -16.8822021484375
    9. '  ' → logprob: -17.0072021484375
    10. '[n' → logprob: -17.1322021484375

Token 71: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.033707715570926666
    2. '(n' → logprob: -3.408707618713379
    3. ' n' → logprob: -10.283707618713379
    4. '(' → logprob: -11.408707618713379
    5. '   ' → logprob: -11.908707618713379
    6. '[n' → logprob: -12.908707618713379
    7. '	n' → logprob: -13.033707618713379
    8. ')n' → logprob: -13.408707618713379
    9. ' (' → logprob: -13.658707618713379
    10. ')' → logprob: -14.283707618713379

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151817843317986
    2. ' +' → logprob: -4.018151760101318
    3. ' ' → logprob: -14.643152236938477
    4. '+
' → logprob: -14.768152236938477
    5. '   ' → logprob: -14.893152236938477
    6. ')' → logprob: -15.393152236938477
    7. '```' → logprob: -16.143152236938477
    8. '＋' → logprob: -16.393152236938477
    9. '+n' → logprob: -16.643152236938477
    10. '
' → logprob: -17.018152236938477

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '```' → logprob: -15.750066757202148
    4. '   ' → logprob: -16.68756675720215
    5. '0' → logprob: -16.68756675720215
    6. '2' → logprob: -17.06256675720215
    7. ')' → logprob: -17.25006675720215
    8. '+' → logprob: -17.68756675720215
    9. '  ' → logprob: -17.68756675720215
    10. '(' → logprob: -18.00006675720215

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.500003814697266
    4. '2' → logprob: -17.062503814697266
    5. '+' → logprob: -17.062503814697266
    6. '   ' → logprob: -17.750003814697266
    7. '0' → logprob: -18.750003814697266
    8. '１' → logprob: -18.750003814697266
    9. ')' → logprob: -18.812503814697266
    10. '१' → logprob: -19.062503814697266

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012587585486471653
    2. ')
' → logprob: -4.387587547302246
    3. ')
' → logprob: -9.637587547302246
    4. '   ' → logprob: -12.012587547302246
    5. ')

' → logprob: -12.637587547302246
    6. ' )' → logprob: -13.762587547302246
    7. ']' → logprob: -13.887587547302246
    8. ' ' → logprob: -15.262587547302246
    9. '```' → logprob: -15.387587547302246
    10. ')`' → logprob: -15.762587547302246

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11162589490413666
    2. '   ' → logprob: -2.361625909805298
    3. '<|end|>' → logprob: -4.861625671386719
    4. '    
' → logprob: -6.361625671386719
    5. ' 
' → logprob: -7.361625671386719
    6. '  
' → logprob: -7.611625671386719
    7. '
' → logprob: -8.736625671386719
    8. '<|end|>' → logprob: -8.861625671386719
    9. ' for' → logprob: -8.986625671386719
    10. ' ' → logprob: -9.611625671386719

Token 77: ' inv' (ID: 1827)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22178854048252106
    2. '   ' → logprob: -2.0967886447906494
    3. ' for' → logprob: -2.9717886447906494
    4. 'in' → logprob: -3.7217886447906494
    5. 'i' → logprob: -8.22178840637207
    6. '    
' → logprob: -9.72178840637207
    7. 'def' → logprob: -9.97178840637207
    8. '```' → logprob: -9.97178840637207
    9. ' ' → logprob: -10.22178840637207
    10. 'inv' (adapté à ' inv') → logprob: -10.34678840637207

Token 78: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003362966235727072
    2. '=' → logprob: -8.375336647033691
    3. ' =' → logprob: -9.375336647033691
    4. '[' → logprob: -11.625336647033691
    5. '   ' → logprob: -12.625336647033691
    6. ' ' → logprob: -13.625336647033691
    7. '```' → logprob: -13.625336647033691
    8. ' s' → logprob: -14.250336647033691
    9. '<|end|>' → logprob: -14.250336647033691
    10. 'i' → logprob: -14.750336647033691

Token 79: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027082269079983234
    2. ' =' → logprob: -6.502708435058594
    3. '=' → logprob: -6.877708435058594
    4. '   ' → logprob: -9.627708435058594
    5. '```' → logprob: -10.377708435058594
    6. '[i' → logprob: -10.752708435058594
    7. ' ' → logprob: -11.252708435058594
    8. ' [' → logprob: -11.877708435058594
    9. '=[' → logprob: -12.002708435058594
    10. '`' → logprob: -12.127708435058594

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1805354207754135
    2. ')' → logprob: -1.8055354356765747
    3. ')]' → logprob: -8.055535316467285
    4. ']=' → logprob: -8.805535316467285
    5. ' ]' → logprob: -9.180535316467285
    6. ' )' → logprob: -9.555535316467285
    7. '])' → logprob: -9.555535316467285
    8. ')=' → logprob: -10.430535316467285
    9. '   ' → logprob: -10.930535316467285
    10. '=' → logprob: -12.305535316467285

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693682312965393
    2. '=' → logprob: -2.126936912536621
    3. ' =
' → logprob: -12.501936912536621
    4. ' ' → logprob: -13.376936912536621
    5. ',' → logprob: -14.751936912536621
    6. ' =
' → logprob: -14.876936912536621
    7. ' ^=' → logprob: -15.001936912536621
    8. '=

' → logprob: -15.001936912536621
    9. ')' → logprob: -15.376936912536621
    10. '<|end|>' → logprob: -15.501936912536621

Token 82: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0002084277366520837
    2. ' pow' → logprob: -8.500208854675293
    3. '(pow' → logprob: -12.500208854675293
    4. '1' → logprob: -14.250208854675293
    5. '   ' → logprob: -15.625208854675293
    6. '2' → logprob: -16.500207901000977
    7. '3' → logprob: -17.250207901000977
    8. ' ' → logprob: -17.375207901000977
    9. '_pow' → logprob: -17.500207901000977
    10. 'Pow' → logprob: -18.000207901000977

Token 83: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.008884238079190254
    2. '(' → logprob: -4.758884429931641
    3. 'mod' → logprob: -8.38388442993164
    4. '(m' → logprob: -11.00888442993164
    5. '(
' → logprob: -11.75888442993164
    6. '(Mod' → logprob: -12.13388442993164
    7. '(f' → logprob: -13.00888442993164
    8. ' (' → logprob: -13.13388442993164
    9. '(

' → logprob: -13.25888442993164
    10. '(mult' → logprob: -13.88388442993164

Token 84: 'Facts' (ID: 117250)
  Prédit: 'Facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facts' → logprob: -3.531315314830863e-06
    2. ' Facts' → logprob: -13.500003814697266
    3. 'facts' → logprob: -13.625003814697266
    4. 'Fact' → logprob: -14.125003814697266
    5. '_FACT' → logprob: -16.750003814697266
    6. 'FACT' → logprob: -17.125003814697266
    7. 'Factors' → logprob: -17.625003814697266
    8. 'Fac' → logprob: -18.125003814697266
    9. ' facts' → logprob: -18.250003814697266
    10. ')' → logprob: -18.375003814697266

Token 85: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.692145012086257e-05
    2. '[' → logprob: -10.625046730041504
    3. '[-' → logprob: -10.750046730041504
    4. ' [' → logprob: -15.000046730041504
    5. '```' → logprob: -15.375046730041504
    6. '[N' → logprob: -16.00004768371582
    7. ' ' → logprob: -16.37504768371582
    8. '[
' → logprob: -16.50004768371582
    9. '[i' → logprob: -16.75004768371582
    10. ')' → logprob: -17.00004768371582

Token 86: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9027791495318525e-05
    2. ' ,' → logprob: -11.250019073486328
    3. ',n' → logprob: -13.375019073486328
    4. ')' → logprob: -14.000019073486328
    5. '‌,' → logprob: -14.250019073486328
    6. ',
' → logprob: -14.750019073486328
    7. '),' → logprob: -14.750019073486328
    8. ',

' → logprob: -15.125019073486328
    9. '   ' → logprob: -15.250019073486328
    10. ' ' → logprob: -15.375019073486328

Token 87: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.027048148214817047
    2. ' MOD' → logprob: -3.777048110961914
    3. '-' → logprob: -5.652048110961914
    4. ' ' → logprob: -9.152048110961914
    5. ' -' → logprob: -9.652048110961914
    6. '_MOD' → logprob: -10.277048110961914
    7. '-M' → logprob: -10.402048110961914
    8. '.MOD' → logprob: -11.152048110961914
    9. ')' → logprob: -11.652048110961914
    10. '10' → logprob: -11.777048110961914

Token 88: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005233882926404476
    2. ' -' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.005233764648438
    4. '−' → logprob: -16.880233764648438
    5. ' ' → logprob: -17.630233764648438
    6. '–' → logprob: -18.130233764648438
    7. '```' → logprob: -19.255233764648438
    8. '  ' → logprob: -19.505233764648438
    9. '2' → logprob: -20.130233764648438
    10. '   ' → logprob: -20.317733764648438

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '۲' → logprob: -16.000003814697266
    4. '```' → logprob: -16.000003814697266
    5. '-' → logprob: -16.312503814697266
    6. '<|end|>' → logprob: -17.375003814697266
    7. '٢' → logprob: -17.437503814697266
    8. '২' → logprob: -17.687503814697266
    9. '２' → logprob: -17.812503814697266
    10. ')' → logprob: -17.812503814697266

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -15.000000953674316
    4. '۲' → logprob: -16.812501907348633
    5. '২' → logprob: -17.687501907348633
    6. '٢' → logprob: -17.812501907348633
    7. '₂' → logprob: -17.937501907348633
    8. '' → logprob: -18.062501907348633
    9. '२' → logprob: -18.125001907348633
    10. '２' → logprob: -18.125001907348633

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01618463359773159
    2. ')' → logprob: -4.1411848068237305
    3. ' ,' → logprob: -9.64118480682373
    4. '   ' → logprob: -10.14118480682373
    5. ',n' → logprob: -11.01618480682373
    6. ' ' → logprob: -11.26618480682373
    7. ' )' → logprob: -12.26618480682373
    8. ',)' → logprob: -12.51618480682373
    9. ',
' → logprob: -13.39118480682373
    10. '),' → logprob: -13.51618480682373

Token 92: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.07902450859546661
    2. ' MOD' → logprob: -2.57902455329895
    3. ')' → logprob: -8.954024314880371
    4. '   ' → logprob: -12.579024314880371
    5. '_MOD' → logprob: -13.704024314880371
    6. '.MOD' → logprob: -14.704024314880371
    7. ' )' → logprob: -15.204024314880371
    8. '```' → logprob: -16.329025268554688
    9. 'MO' → logprob: -16.579025268554688
    10. ' ' → logprob: -16.704025268554688

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001290454383706674
    2. ')
' → logprob: -9.000128746032715
    3. '   ' → logprob: -12.750128746032715
    4. ' )' → logprob: -13.125128746032715
    5. ')

' → logprob: -14.750128746032715
    6. ')
' → logprob: -16.00012969970703
    7. ' ' → logprob: -16.87512969970703
    8. '))' → logprob: -17.00012969970703
    9. ')`' → logprob: -17.00012969970703
    10. ')n' → logprob: -17.75012969970703

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06507862359285355
    2. '   ' → logprob: -2.8150787353515625
    3. '<|end|>' → logprob: -7.0650787353515625
    4. '```' → logprob: -7.4400787353515625
    5. '    
' → logprob: -7.5650787353515625
    6. '\n' → logprob: -7.9400787353515625
    7. '	for' → logprob: -8.690078735351562
    8. ' 
' → logprob: -9.190078735351562
    9. '' → logprob: -9.315078735351562
    10. '  
' → logprob: -9.565078735351562

Token 95: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01588490605354309
    2. '   ' → logprob: -4.265884876251221
    3. ' for' → logprob: -7.640884876251221
    4. 'for' (adapté à ' for') → logprob: -8.015885353088379
    5. '\n' → logprob: -8.140885353088379
    6. '    
' → logprob: -8.265885353088379
    7. '	for' → logprob: -8.890885353088379
    8. '
' → logprob: -9.765885353088379
    9. ' 
' → logprob: -9.765885353088379
    10. '  
' → logprob: -10.140885353088379

Token 96: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02979261800646782
    2. 'i' → logprob: -3.529792547225952
    3. ' ' → logprob: -10.404792785644531
    4. '	i' → logprob: -12.029792785644531
    5. '   ' → logprob: -13.029792785644531
    6. ' j' → logprob: -13.279792785644531
    7. '  ' → logprob: -13.904792785644531
    8. 'j' → logprob: -14.779792785644531
    9. '```' → logprob: -14.904792785644531
    10. '`' → logprob: -16.02979278564453

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007508194539695978
    2. 'in' → logprob: -5.132508277893066
    3. ' ' → logprob: -7.132508277893066
    4. 'n' → logprob: -7.757508277893066
    5. ' n' → logprob: -8.507508277893066
    6. '   ' → logprob: -9.882508277893066
    7. ' i' → logprob: -10.007508277893066
    8. '  ' → logprob: -10.382508277893066
    9. '	in' → logprob: -12.632508277893066
    10. '(n' → logprob: -12.757508277893066

Token 98: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.062019217759370804
    2. ' range' → logprob: -2.812019109725952
    3. '(range' → logprob: -10.312019348144531
    4. 're' → logprob: -11.312019348144531
    5. ' reversed' → logprob: -13.062019348144531
    6. '   ' → logprob: -13.312019348144531
    7. ' ' → logprob: -13.437019348144531
    8. '	range' → logprob: -14.687019348144531
    9. 'n' → logprob: -16.18701934814453
    10. '  ' → logprob: -16.56201934814453

Token 99: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014597235713154078
    2. '(' → logprob: -8.87514591217041
    3. 'n' → logprob: -12.62514591217041
    4. ' (' → logprob: -12.87514591217041
    5. ' n' → logprob: -15.75014591217041
    6. '((' → logprob: -17.125146865844727
    7. ' ' → logprob: -17.625146865844727
    8. '(
' → logprob: -18.125146865844727
    9. '   ' → logprob: -18.250146865844727
    10. '(i' → logprob: -19.000146865844727

Token 100: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00025228000595234334
    2. ',' → logprob: -8.875252723693848
    3. ' -' → logprob: -9.125252723693848
    4. '   ' → logprob: -13.250252723693848
    5. ' ,' → logprob: -13.375252723693848
    6. ' ' → logprob: -15.625252723693848
    7. '-,' → logprob: -16.87525177001953
    8. ',n' → logprob: -17.25025177001953
    9. ',
' → logprob: -18.12525177001953
    10. '0' → logprob: -18.12525177001953

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '1' → logprob: -15.750204086303711
    4. '   ' → logprob: -16.37520408630371
    5. '```' → logprob: -17.87520408630371
    6. '  ' → logprob: -18.25020408630371
    7. '-' → logprob: -18.50020408630371
    8. ' -' → logprob: -18.50020408630371
    9. '
' → logprob: -18.75020408630371
    10. '۰' → logprob: -19.50020408630371

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.500015258789062
    3. '1' → logprob: -12.375015258789062
    4. '   ' → logprob: -15.375015258789062
    5. '-' → logprob: -15.875015258789062
    6. '```' → logprob: -17.250015258789062
    7. '
' → logprob: -17.375015258789062
    8. '  ' → logprob: -17.875015258789062
    9. ' -' → logprob: -17.875015258789062
    10. '۰' → logprob: -18.875015258789062

Token 103: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5512861609458923
    2. ' -' → logprob: -0.9262861609458923
    3. ',' → logprob: -3.676286220550537
    4. ' ,' → logprob: -6.676286220550537
    5. '   ' → logprob: -6.926286220550537
    6. ',-' → logprob: -9.676285743713379
    7. '-,' → logprob: -10.176285743713379
    8. ' ' → logprob: -10.426285743713379
    9. ')' → logprob: -10.801285743713379
    10. ' ,-' → logprob: -11.676285743713379

Token 104: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2520068287849426
    2. '-' → logprob: -1.5020067691802979
    3. ' ' → logprob: -9.752006530761719
    4. '   ' → logprob: -11.877006530761719
    5. '  ' → logprob: -12.002006530761719
    6. ')' → logprob: -13.002006530761719
    7. '```' → logprob: -13.627006530761719
    8. '	' → logprob: -13.877006530761719
    9. '<|end|>' → logprob: -14.752006530761719
    10. '1' → logprob: -14.877006530761719

Token 105: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.049923140555620193
    2. '1' → logprob: -3.5499231815338135
    3. ' -' → logprob: -3.9249231815338135
    4. ')' → logprob: -8.674922943115234
    5. ')-' → logprob: -10.924922943115234
    6. '```' → logprob: -11.174922943115234
    7. '):
' → logprob: -11.799922943115234
    8. '   ' → logprob: -12.049922943115234
    9. ' ' → logprob: -12.799922943115234
    10. '-)' → logprob: -12.924922943115234

Token 106: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03922397270798683
    2. '):
' → logprob: -3.7892239093780518
    3. '):' → logprob: -4.789224147796631
    4. ' -' → logprob: -4.914224147796631
    5. ')' → logprob: -9.789223670959473
    6. '   ' → logprob: -10.164223670959473
    7. '1' → logprob: -10.539223670959473
    8. ' ):
' → logprob: -10.789223670959473
    9. ' ):' → logprob: -11.039223670959473
    10. '):
' → logprob: -11.414223670959473

Token 107: '       ' (ID: 309)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7134467363357544
    2. '       ' → logprob: -0.8384467363357544
    3. ' -' → logprob: -3.213446617126465
    4. '   ' → logprob: -4.338446617126465
    5. ' ' → logprob: -4.463446617126465
    6. ')' → logprob: -5.338446617126465
    7. '0' → logprob: -5.838446617126465
    8. '1' → logprob: -6.213446617126465
    9. '<|end|>' → logprob: -6.963446617126465
    10. '    ' → logprob: -7.463446617126465

Token 108: ' inv' (ID: 1827)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3497109115123749
    2. '   ' → logprob: -1.8497109413146973
    3. '       ' → logprob: -2.2247109413146973
    4. ' inv' → logprob: -4.099710941314697
    5. 's' → logprob: -4.849710941314697
    6. ' ' → logprob: -6.724710941314697
    7. 'i' → logprob: -6.849710941314697
    8. ' in' → logprob: -7.224710941314697
    9. '           ' → logprob: -7.724710941314697
    10. '1' → logprob: -7.849710941314697

Token 109: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.250003814697266
    3. '[' → logprob: -14.000003814697266
    4. 'i' → logprob: -15.375003814697266
    5. '       ' → logprob: -15.625003814697266
    6. '2' → logprob: -15.750003814697266
    7. 'in' → logprob: -16.000003814697266
    8. ' ' → logprob: -16.125003814697266
    9. ' s' → logprob: -16.375003814697266
    10. ')' → logprob: -16.500003814697266

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.1557283111615106e-05
    2. '[' → logprob: -10.250041961669922
    3. '[I' → logprob: -12.875041961669922
    4. '   ' → logprob: -14.250041961669922
    5. '```' → logprob: -14.375041961669922
    6. '[
' → logprob: -14.500041961669922
    7. '
' → logprob: -15.125041961669922
    8. '\[' → logprob: -15.125041961669922
    9. ' [' → logprob: -15.375041961669922
    10. '[int' → logprob: -16.125041961669922

Token 111: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14409171044826508
    2. ' -' → logprob: -2.0190916061401367
    3. ']' → logprob: -6.644091606140137
    4. ')' → logprob: -9.394091606140137
    5. '   ' → logprob: -11.519091606140137
    6. ' ' → logprob: -12.019091606140137
    7. '-=' → logprob: -12.644091606140137
    8. ' -=' → logprob: -12.894091606140137
    9. '=' → logprob: -13.269091606140137
    10. '−' → logprob: -13.644091606140137

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.73314929776825e-05
    2. ']' → logprob: -9.50008773803711
    3. ' ' → logprob: -11.62508773803711
    4. '   ' → logprob: -13.37508773803711
    5. ']=' → logprob: -14.62508773803711
    6. '<|end|>' → logprob: -14.62508773803711
    7. '    ' → logprob: -16.12508773803711
    8. '```' → logprob: -16.25008773803711
    9. ')' → logprob: -16.31258773803711
    10. '<|end|>' → logprob: -16.31258773803711

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1080467781284824e-05
    2. ']' → logprob: -10.875041007995605
    3. ' ' → logprob: -10.875041007995605
    4. '   ' → logprob: -13.375041007995605
    5. ']=' → logprob: -14.625041007995605
    6. '```' → logprob: -15.562541007995605
    7. '    ' → logprob: -15.687541007995605
    8. '  ' → logprob: -16.562541961669922
    9. '     ' → logprob: -16.812541961669922
    10. ')' → logprob: -16.812541961669922

Token 114: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32327237725257874
    2. ')' → logprob: -1.5732723474502563
    3. ' =' → logprob: -2.698272466659546
    4. ')=' → logprob: -6.573272228240967
    5. ' )' → logprob: -9.573272705078125
    6. ']' → logprob: -9.948272705078125
    7. '   ' → logprob: -11.448272705078125
    8. ']=' → logprob: -13.073272705078125
    9. ' ' → logprob: -13.573272705078125
    10. '```' → logprob: -13.823272705078125

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0110669219866395
    2. ' =' → logprob: -4.511066913604736
    3. '*=' → logprob: -11.386067390441895
    4. '=(' → logprob: -13.511067390441895
    5. ')' → logprob: -13.511067390441895
    6. ')=' → logprob: -13.761067390441895
    7. '(' → logprob: -13.886067390441895
    8. '```' → logprob: -14.761067390441895
    9. '"' → logprob: -15.011067390441895
    10. '*' → logprob: -15.011067390441895

Token 116: ' (' (ID: 350)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.006293852813541889
    2. ' (' → logprob: -5.506293773651123
    3. '(inv' → logprob: -6.131293773651123
    4. '(' → logprob: -10.756294250488281
    5. 'in' → logprob: -11.756294250488281
    6. '   ' → logprob: -12.756294250488281
    7. '(i' → logprob: -12.881294250488281
    8. '(im' → logprob: -13.631294250488281
    9. '(mod' → logprob: -14.006294250488281
    10. '(ans' → logprob: -14.256294250488281

Token 117: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00029363270732574165
    2. '   ' → logprob: -8.875293731689453
    3. ' inv' → logprob: -9.250293731689453
    4. '(in' → logprob: -10.625293731689453
    5. 'inv' → logprob: -11.125293731689453
    6. '	in' → logprob: -12.125293731689453
    7. ' in' → logprob: -12.250293731689453
    8. ')' → logprob: -13.250293731689453
    9. 'i' → logprob: -13.500293731689453
    10. ' ' → logprob: -13.875293731689453

Token 118: 'vs' (ID: 16121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16136214137077332
    2. 'vs' → logprob: -1.9113621711730957
    3. 'v' → logprob: -7.286362171173096
    4. '   ' → logprob: -8.661361694335938
    5. 'sv' → logprob: -9.661361694335938
    6. '```' → logprob: -10.536361694335938
    7. '[' → logprob: -10.661361694335938
    8. 'in' → logprob: -10.661361694335938
    9. '
' → logprob: -11.348861694335938
    10. '       ' → logprob: -11.473861694335938

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.534558552724775e-05
    2. '[' → logprob: -11.000025749206543
    3. 'i' → logprob: -11.750025749206543
    4. '*i' → logprob: -15.875025749206543
    5. ' i' → logprob: -16.375024795532227
    6. '[
' → logprob: -16.500024795532227
    7. '[I' → logprob: -16.625024795532227
    8. ' ' → logprob: -17.125024795532227
    9. ')' → logprob: -17.250024795532227
    10. ' [' → logprob: -17.625024795532227

Token 120: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12993639707565308
    2. '*' → logprob: -2.129936456680298
    3. '[i' → logprob: -6.379936218261719
    4. ' ' → logprob: -7.379936218261719
    5. '[' → logprob: -8.129936218261719
    6. ']' → logprob: -8.504936218261719
    7. '*i' → logprob: -9.004936218261719
    8. ')' → logprob: -10.879936218261719
    9. '```' → logprob: -11.879936218261719
    10. '   ' → logprob: -11.879936218261719

Token 121: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5760475397109985
    2. '*' → logprob: -0.8260475397109985
    3. '*i' → logprob: -9.326047897338867
    4. ' ' → logprob: -11.201047897338867
    5. '**' → logprob: -13.201047897338867
    6. ' ' → logprob: -14.326047897338867
    7. '*object' → logprob: -14.326047897338867
    8. '  ' → logprob: -15.076047897338867
    9. '
' → logprob: -15.201047897338867
    10. '*
' → logprob: -15.326047897338867

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740847945213318
    2. ' i' → logprob: -0.9740847945213318
    3. ' ' → logprob: -13.099084854125977
    4. '   ' → logprob: -13.849084854125977
    5. '	i' → logprob: -13.849084854125977
    6. ')i' → logprob: -14.099084854125977
    7. '<|end|>' → logprob: -14.224084854125977
    8. ')' → logprob: -14.349084854125977
    9. '```' → logprob: -14.974084854125977
    10. '(i' → logprob: -15.224084854125977

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.857719275401905e-05
    2. ' )' → logprob: -10.375038146972656
    3. ')%' → logprob: -11.875038146972656
    4. ')
' → logprob: -15.250038146972656
    5. '   ' → logprob: -17.000038146972656
    6. ')

' → logprob: -17.500038146972656
    7. '```' → logprob: -17.750038146972656
    8. '%' → logprob: -17.875038146972656
    9. '`)' → logprob: -18.000038146972656
    10. ')`' → logprob: -18.125038146972656

Token 124: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.008625920861959457
    2. '%' → logprob: -4.7586259841918945
    3. ' ' → logprob: -12.258625984191895
    4. ')' → logprob: -12.258625984191895
    5. ' ' → logprob: -14.633625984191895
    6. ' %=' → logprob: -14.633625984191895
    7. ')%' → logprob: -15.008625984191895
    8. '
' → logprob: -15.758625984191895
    9. ' %
' → logprob: -16.008625030517578
    10. '`' → logprob: -16.133625030517578

Token 125: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.615255839889869e-05
    2. ' MOD' → logprob: -9.250096321105957
    3. '.MOD' → logprob: -18.75009536743164
    4. '_MOD' → logprob: -19.25009536743164
    5. ' ' → logprob: -19.50009536743164
    6. 'MO' → logprob: -20.37509536743164
    7. '10' → logprob: -20.37509536743164
    8. '   ' → logprob: -20.37509536743164
    9. 'M' → logprob: -21.37509536743164
    10. '```' → logprob: -21.50009536743164

Token 126: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5256199240684509
    2. '
' → logprob: -0.9006199240684509
    3. 'return' → logprob: -6.900619983673096
    4. ' return' → logprob: -7.275619983673096
    5. '    
' → logprob: -7.650619983673096
    6. '<|end|>' → logprob: -8.900619506835938
    7. '
' → logprob: -9.775619506835938
    8. '	return' → logprob: -9.900619506835938
    9. '```' → logprob: -10.650619506835938
    10. ' 
' → logprob: -11.025619506835938

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008309713564813137
    2. '
' → logprob: -5.508309841156006
    3. '<|end|>' → logprob: -6.133309841156006
    4. '    
' → logprob: -6.633309841156006
    5. 'return' → logprob: -8.383309364318848
    6. ')' → logprob: -8.758309364318848
    7. 'def' → logprob: -9.758309364318848
    8. ' 
' → logprob: -9.883309364318848
    9. ' return' → logprob: -10.133309364318848
    10. '```' → logprob: -10.133309364318848

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05777972191572189
    2. '   ' → logprob: -2.9327797889709473
    3. ' return' → logprob: -6.307779788970947
    4. 'def' → logprob: -6.932779788970947
    5. ' ' → logprob: -9.682779312133789
    6. '    
' → logprob: -11.682779312133789
    7. '```' → logprob: -11.807779312133789
    8. '	return' → logprob: -12.057779312133789
    9. 'mod' → logprob: -12.432779312133789
    10. '  ' → logprob: -13.057779312133789

Token 129: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.026996629312634468
    2. '(mod' → logprob: -4.151996612548828
    3. ' mod' → logprob: -4.526996612548828
    4. '	mod' → logprob: -10.026996612548828
    5. '   ' → logprob: -10.151996612548828
    6. ' (' → logprob: -12.901996612548828
    7. 'n' → logprob: -14.151996612548828
    8. '(n' → logprob: -14.276996612548828
    9. ' мод' → logprob: -14.526996612548828
    10. '_mod' → logprob: -14.651996612548828

Token 130: 'Facts' (ID: 117250)
  Prédit: 'Facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facts' → logprob: -1.2113979209971149e-05
    2. 'Fact' → logprob: -12.000012397766113
    3. ' Facts' → logprob: -12.750012397766113
    4. 'F' → logprob: -13.625012397766113
    5. 'mod' → logprob: -14.875012397766113
    6. 'Fac' → logprob: -15.000012397766113
    7. 'Factors' → logprob: -15.000012397766113
    8. 'facts' → logprob: -15.250012397766113
    9. 'Stats' → logprob: -15.875012397766113
    10. 'FACT' → logprob: -16.000011444091797

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009805283043533564
    2. ',in' → logprob: -7.000980377197266
    3. ' ,' → logprob: -10.125980377197266
    4. 'in' → logprob: -10.500980377197266
    5. ',
' → logprob: -14.625980377197266
    6. '   ' → logprob: -15.125980377197266
    7. 's' → logprob: -15.750980377197266
    8. '‌,' → logprob: -16.125980377197266
    9. ',s' → logprob: -16.125980377197266
    10. ' in' → logprob: -16.500980377197266

Token 132: ' inv' (ID: 1827)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18014462292194366
    2. ' inv' → logprob: -1.8051446676254272
    3. ' in' → logprob: -8.805144309997559
    4. 'inv' → logprob: -9.180144309997559
    5. ' invers' → logprob: -9.805144309997559
    6. '   ' → logprob: -10.180144309997559
    7. 'In' → logprob: -11.555144309997559
    8. '	in' → logprob: -11.555144309997559
    9. ' ' → logprob: -12.117644309997559
    10. '
' → logprob: -12.242644309997559

Token 133: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.088346359931165e-07
    2. 'rs' → logprob: -14.375000953674316
    3. '[' → logprob: -16.625
    4. 'ss' → logprob: -17.0
    5. 'sers' → logprob: -17.0
    6. '   ' → logprob: -17.875
    7. 'fs' → logprob: -18.125
    8. 'gs' → logprob: -18.25
    9. '```' → logprob: -18.25
    10. 'es' → logprob: -18.375

Token 134: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41975337266921997
    2. '<|end|>' → logprob: -1.5447533130645752
    3. 'def' → logprob: -2.169753313064575
    4. '

' → logprob: -5.294753551483154
    5. ')' → logprob: -5.544753551483154
    6. '```' → logprob: -5.794753551483154
    7. '<|end|>' → logprob: -7.669753551483154
    8. ' def' → logprob: -7.794753551483154
    9. '#' → logprob: -7.919753551483154
    10. '[' → logprob: -8.044753074645996

Token 136: ' f' (ID: 285)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20261093974113464
    2. ' comb' → logprob: -2.577610969543457
    3. 'n' → logprob: -3.827610969543457
    4. ' factorial' → logprob: -3.827610969543457
    5. ' combine' → logprob: -4.202610969543457
    6. ' bin' → logprob: -4.327610969543457
    7. ' mod' → logprob: -4.577610969543457
    8. '_comb' → logprob: -5.202610969543457
    9. ' _' → logprob: -5.577610969543457
    10. ' ' → logprob: -5.577610969543457

Token 137: '(i' (ID: 3649)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.5917863249778748
    2. 'ac' → logprob: -1.0917863845825195
    3. 'act' → logprob: -2.2167863845825195
    4. '(n' → logprob: -8.09178638458252
    5. 'actory' → logprob: -8.46678638458252
    6. 'or' → logprob: -8.59178638458252
    7. 'acl' → logprob: -8.71678638458252
    8. 'acto' → logprob: -8.71678638458252
    9. '```' → logprob: -9.09178638458252
    10. '(act' → logprob: -9.34178638458252

Token 138: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22725456953048706
    2. ',' → logprob: -1.6022546291351318
    3. ')' → logprob: -6.602254390716553
    4. '):
' → logprob: -8.352254867553711
    5. ',n' → logprob: -9.727254867553711
    6. ' ,' → logprob: -10.102254867553711
    7. ':' → logprob: -10.227254867553711
    8. ' ):' → logprob: -10.227254867553711
    9. 'n' → logprob: -11.102254867553711
    10. '   ' → logprob: -11.727254867553711

Token 139: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6895240545272827
    2. 'n' → logprob: -0.8145240545272827
    3. 'k' → logprob: -3.0645241737365723
    4. ' j' → logprob: -5.689524173736572
    5. ' n' → logprob: -5.939524173736572
    6. 'r' → logprob: -6.564524173736572
    7. ' k' → logprob: -8.564523696899414
    8. 'm' → logprob: -8.814523696899414
    9. 'x' → logprob: -8.939523696899414
    10. 'mod' → logprob: -8.939523696899414

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015836624661460519
    2. ',' → logprob: -6.751583576202393
    3. ')' → logprob: -7.876583576202393
    4. '):
' → logprob: -10.62658405303955
    5. ':' → logprob: -12.50158405303955
    6. ' ):' → logprob: -12.75158405303955
    7. ']:' → logprob: -14.87658405303955
    8. '):
' → logprob: -14.87658405303955
    9. '**' → logprob: -15.25158405303955
    10. '=' → logprob: -15.50158405303955

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001627217628993094
    2. ':' → logprob: -6.751627445220947
    3. '<|end|>' → logprob: -9.251626968383789
    4. ',' → logprob: -9.501626968383789
    5. ' return' → logprob: -9.501626968383789
    6. ')' → logprob: -10.001626968383789
    7. '    
' → logprob: -10.376626968383789
    8. '(' → logprob: -10.376626968383789
    9. ':
' → logprob: -11.126626968383789
    10. '):' → logprob: -11.251626968383789

Token 142: ' num' (ID: 2269)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12087929993867874
    2. 'if' → logprob: -2.3708794116973877
    3. '   ' → logprob: -4.120879173278809
    4. ' return' → logprob: -5.745879173278809
    5. ' if' → logprob: -6.995879173278809
    6. '	return' → logprob: -10.745879173278809
    7. 'pass' → logprob: -10.870879173278809
    8. '    ' → logprob: -10.995879173278809
    9. ' ' → logprob: -11.120879173278809
    10. '  ' → logprob: -11.870879173278809

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3313148021697998
    2. '=' → logprob: -1.5813148021697998
    3. 's' → logprob: -2.9563148021698
    4. '_tokens' → logprob: -4.331315040588379
    5. 'ber' → logprob: -5.956315040588379
    6. '   ' → logprob: -6.956315040588379
    7. 'ERATOR' → logprob: -6.956315040588379
    8. '_choices' → logprob: -6.956315040588379
    9. 'umerator' → logprob: -7.456315040588379
    10. ')' → logprob: -7.581315040588379

Token 144: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.016084108501672745
    2. '(mod' → logprob: -5.14108419418335
    3. '(' → logprob: -6.64108419418335
    4. ' mod' → logprob: -6.64108419418335
    5. 'in' → logprob: -6.76608419418335
    6. 'MOD' → logprob: -6.89108419418335
    7. '(i' → logprob: -7.01608419418335
    8. 'fact' → logprob: -7.26608419418335
    9. 'inv' → logprob: -7.64108419418335
    10. '1' → logprob: -7.89108419418335

Token 145: 'Facts' (ID: 117250)
  Prédit: 'Facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facts' → logprob: -1.6240566083070007e-06
    2. 'Fact' → logprob: -14.000001907348633
    3. ' Facts' → logprob: -14.500001907348633
    4. 'Fac' → logprob: -16.250001907348633
    5. 'Factors' → logprob: -16.750001907348633
    6. 'facts' → logprob: -17.000001907348633
    7. 'FACT' → logprob: -17.250001907348633
    8. 'Faces' → logprob: -18.625001907348633
    9. 'F' → logprob: -19.625001907348633
    10. '_FACT' → logprob: -19.625001907348633

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11302301287651062
    2. '[j' → logprob: -2.238023042678833
    3. '[min' → logprob: -9.363022804260254
    4. 'j' → logprob: -9.863022804260254
    5. '[' → logprob: -10.363022804260254
    6. 'i' → logprob: -10.738022804260254
    7. '[f' → logprob: -13.238022804260254
    8. '[n' → logprob: -13.363022804260254
    9. 'min' → logprob: -13.363022804260254
    10. '   ' → logprob: -13.988022804260254

Token 147: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014302362687885761
    2. '-j' → logprob: -7.501430034637451
    3. '-' → logprob: -8.37643051147461
    4. '+j' → logprob: -8.62643051147461
    5. ']*' → logprob: -8.87643051147461
    6. ']
' → logprob: -9.00143051147461
    7. 'j' → logprob: -9.75143051147461
    8. '+' → logprob: -10.12643051147461
    9. ' -' → logprob: -10.50143051147461
    10. '   ' → logprob: -10.62643051147461

Token 148: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.248469718324486e-05
    2. ' j' → logprob: -10.875022888183594
    3. '   ' → logprob: -13.000022888183594
    4. ' ' → logprob: -14.250022888183594
    5. ']' → logprob: -16.125022888183594
    6. '	j' → logprob: -16.125022888183594
    7. '  ' → logprob: -16.250022888183594
    8. '
' → logprob: -16.500022888183594
    9. '1' → logprob: -16.500022888183594
    10. '    ' → logprob: -18.125022888183594

Token 149: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001899511698866263
    2. ']%' → logprob: -9.250189781188965
    3. ']
' → logprob: -9.625189781188965
    4. ' ]' → logprob: -11.000189781188965
    5. '```' → logprob: -13.000189781188965
    6. ']

' → logprob: -13.000189781188965
    7. ']*' → logprob: -13.125189781188965
    8. '%' → logprob: -14.625189781188965
    9. '   ' → logprob: -14.875189781188965
    10. '])' → logprob: -14.875189781188965

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45041632652282715
    2. '<|end|>' → logprob: -1.5754163265228271
    3. ' *' → logprob: -3.075416326522827
    4. '*' → logprob: -3.825416326522827
    5. ')' → logprob: -3.950416326522827
    6. 'def' → logprob: -4.325416564941406
    7. '
' → logprob: -4.450416564941406
    8. 'num' → logprob: -4.700416564941406
    9. ' -' → logprob: -4.825416564941406
    10. '*num' → logprob: -5.450416564941406

Token 151: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.2583099603652954
    2. '   ' → logprob: -1.7583099603652954
    3. 'inv' → logprob: -2.008309841156006
    4. 'ans' → logprob: -2.383309841156006
    5. 'res' → logprob: -2.508309841156006
    6. 's' → logprob: -3.008309841156006
    7. 'return' → logprob: -3.133309841156006
    8. 'er' → logprob: -3.508309841156006
    9. 'num' → logprob: -3.758309841156006
    10. 'result' → logprob: -5.008309841156006

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141880214214325
    2. ' =' → logprob: -1.7014187574386597
    3. '=num' → logprob: -13.95141887664795
    4. '=
' → logprob: -14.07641887664795
    5. ')' → logprob: -14.32641887664795
    6. '   ' → logprob: -14.57641887664795
    7. 'def' → logprob: -14.70141887664795
    8. ' ' → logprob: -14.95141887664795
    9. '<|end|>' → logprob: -15.20141887664795
    10. '```' → logprob: -15.32641887664795

Token 153: ' (' (ID: 350)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.002884641056880355
    2. '(inv' → logprob: -6.752884864807129
    3. '(in' → logprob: -7.127884864807129
    4. ' (' → logprob: -7.252884864807129
    5. 'mod' → logprob: -9.877884864807129
    6. '(m' → logprob: -10.127884864807129
    7. '   ' → logprob: -10.252884864807129
    8. '(' → logprob: -10.252884864807129
    9. '
' → logprob: -12.002884864807129
    10. '((' → logprob: -12.252884864807129

Token 154: 'in' (ID: 258)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6446887850761414
    2. '(mod' → logprob: -0.7696887850761414
    3. 'inv' → logprob: -5.519688606262207
    4. 'in' → logprob: -5.644688606262207
    5. '(in' → logprob: -5.769688606262207
    6. '(inv' → logprob: -7.519688606262207
    7. ' mod' → logprob: -8.144688606262207
    8. ' (' → logprob: -8.519688606262207
    9. '   ' → logprob: -9.019688606262207
    10. '	mod' → logprob: -10.144688606262207

Token 155: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.11352352052927017
    2. 'v' → logprob: -2.238523483276367
    3. '
' → logprob: -8.488523483276367
    4. '   ' → logprob: -8.988523483276367
    5. 's' → logprob: -9.238523483276367
    6. '[' → logprob: -9.613523483276367
    7. '```' → logprob: -10.238523483276367
    8. '    ' → logprob: -11.488523483276367
    9. '

' → logprob: -11.613523483276367
    10. 'fs' → logprob: -11.613523483276367

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019614976190496236
    2. '[j' → logprob: -8.87519645690918
    3. 'i' → logprob: -9.87519645690918
    4. '[' → logprob: -12.75019645690918
    5. '[f' → logprob: -14.87519645690918
    6. '   ' → logprob: -15.37519645690918
    7. ' [' → logprob: -15.37519645690918
    8. '```' → logprob: -15.50019645690918
    9. ' i' → logprob: -15.87519645690918
    10. 'j' → logprob: -16.25019645690918

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003855093673337251
    2. ']*' → logprob: -7.875385284423828
    3. ' ]' → logprob: -12.500385284423828
    4. ']
' → logprob: -14.625385284423828
    5. '   ' → logprob: -15.125385284423828
    6. '*' → logprob: -15.375385284423828
    7. '[i' → logprob: -15.750385284423828
    8. '']' → logprob: -16.375385284423828
    9. ']]' → logprob: -16.500385284423828
    10. '[j' → logprob: -16.625385284423828

Token 158: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0890214741230011
    2. '*' → logprob: -2.4640214443206787
    3. '   ' → logprob: -10.339021682739258
    4. ' ' → logprob: -10.839021682739258
    5. '*j' → logprob: -11.964021682739258
    6. '```' → logprob: -12.464021682739258
    7. '
' → logprob: -12.589021682739258
    8. '[' → logprob: -13.089021682739258
    9. ' ' → logprob: -13.214021682739258
    10. 'def' → logprob: -13.214021682739258

Token 159: ' inv' (ID: 1827)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0010532920714467764
    2. ' inv' → logprob: -7.251053333282471
    3. 'inv' → logprob: -8.626052856445312
    4. '(in' → logprob: -9.501052856445312
    5. '   ' → logprob: -10.501052856445312
    6. ' in' → logprob: -10.501052856445312
    7. '	in' → logprob: -11.626052856445312
    8. '[in' → logprob: -12.001052856445312
    9. '
' → logprob: -12.626052856445312
    10. ')' → logprob: -13.126052856445312

Token 160: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.877503907773644e-05
    2. '[j' → logprob: -10.125099182128906
    3. '[in' → logprob: -11.125099182128906
    4. 'vs' → logprob: -11.125099182128906
    5. 'js' → logprob: -11.750099182128906
    6. '   ' → logprob: -12.000099182128906
    7. '[i' → logprob: -12.375099182128906
    8. 'in' → logprob: -12.500099182128906
    9. '[' → logprob: -12.750099182128906
    10. '[s' → logprob: -13.375099182128906

Token 161: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012523093027994037
    2. 'j' → logprob: -9.12512493133545
    3. '[' → logprob: -11.62512493133545
    4. '[i' → logprob: -12.00012493133545
    5. '[js' → logprob: -15.37512493133545
    6. ' j' → logprob: -15.50012493133545
    7. '[
' → logprob: -15.50012493133545
    8. '	j' → logprob: -16.000125885009766
    9. '```' → logprob: -16.000125885009766
    10. ' [' → logprob: -16.375125885009766

Token 162: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00018887832993641496
    2. ']' → logprob: -8.875188827514648
    3. ')' → logprob: -10.250188827514648
    4. '])
' → logprob: -12.375188827514648
    5. ']%' → logprob: -12.375188827514648
    6. ' ])' → logprob: -13.125188827514648
    7. '))' → logprob: -14.250188827514648
    8. '%' → logprob: -14.375188827514648
    9. ')%' → logprob: -14.375188827514648
    10. ''])' → logprob: -15.000188827514648

Token 163: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.032455239444971085
    2. ')' → logprob: -3.5324552059173584
    3. ')%' → logprob: -6.4074554443359375
    4. ' %' → logprob: -6.9074554443359375
    5. ']' → logprob: -10.907455444335938
    6. '```' → logprob: -11.657455444335938
    7. ']%' → logprob: -11.657455444335938
    8. '%n' → logprob: -12.407455444335938
    9. '%
' → logprob: -12.782455444335938
    10. '%)' → logprob: -13.032455444335938

Token 164: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.15310683415737e-05
    2. ' MOD' → logprob: -10.750021934509277
    3. '(' → logprob: -18.50002098083496
    4. '10' → logprob: -18.62502098083496
    5. '(M' → logprob: -19.12502098083496
    6. '.MOD' → logprob: -19.12502098083496
    7. '_MOD' → logprob: -19.25002098083496
    8. '   ' → logprob: -19.62502098083496
    9. '(mod' → logprob: -20.12502098083496
    10. 'MO' → logprob: -20.12502098083496

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007075278554111719
    2. 'return' → logprob: -5.132075309753418
    3. ')' → logprob: -7.132075309753418
    4. '    
' → logprob: -9.007075309753418
    5. '
' → logprob: -9.382075309753418
    6. ' return' → logprob: -9.507075309753418
    7. '	return' → logprob: -10.132075309753418
    8. ')
' → logprob: -12.132075309753418
    9. 'def' → logprob: -12.632075309753418
    10. ')return' → logprob: -12.882075309753418

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007649566978216171
    2. 'return' → logprob: -8.125764846801758
    3. '
' → logprob: -8.250764846801758
    4. ')' → logprob: -8.875764846801758
    5. '    
' → logprob: -10.500764846801758
    6. ' return' → logprob: -11.000764846801758
    7. '	return' → logprob: -11.250764846801758
    8. '<|end|>' → logprob: -12.125764846801758
    9. ')
' → logprob: -13.750764846801758
    10. ')return' → logprob: -14.250764846801758

Token 167: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25340279936790466
    2. 'return' (adapté à ' return') → logprob: -1.503402829170227
    3. ' return' → logprob: -7.2534027099609375
    4. ')' → logprob: -7.3784027099609375
    5. '	return' → logprob: -9.253402709960938
    6. ' ' → logprob: -11.253402709960938
    7. '  ' → logprob: -11.378402709960938
    8. ':return' → logprob: -11.753402709960938
    9. '    ' → logprob: -13.003402709960938
    10. '    
' → logprob: -13.253402709960938

Token 168: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38743579387664795
    2. '(num' → logprob: -1.137435793876648
    3. ' num' → logprob: -7.7624359130859375
    4. 'num' → logprob: -9.137435913085938
    5. '(' → logprob: -11.137435913085938
    6. ' ' → logprob: -12.012435913085938
    7. '   ' → logprob: -12.637435913085938
    8. '(mod' → logprob: -13.012435913085938
    9. '[num' → logprob: -13.512435913085938
    10. '<num' → logprob: -13.762435913085938

Token 169: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00010008628305513412
    2. ' num' → logprob: -9.250100135803223
    3. '(num' → logprob: -12.500100135803223
    4. '   ' → logprob: -16.000099182128906
    5. '	num' → logprob: -17.250099182128906
    6. '[num' → logprob: -17.375099182128906
    7. ' ' → logprob: -18.125099182128906
    8. '
' → logprob: -18.625099182128906
    9. '*num' → logprob: -19.125099182128906
    10. 'mod' → logprob: -19.500099182128906

Token 170: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.693147599697113
    2. ' *' → logprob: -0.693147599697113
    3. ' ' → logprob: -15.818147659301758
    4. ' ' → logprob: -16.068147659301758
    5. ')' → logprob: -16.943147659301758
    6. '   ' → logprob: -17.068147659301758
    7. '**' → logprob: -17.443147659301758
    8. '*

' → logprob: -18.693147659301758
    9. ' *
' → logprob: -18.818147659301758
    10. '```' → logprob: -19.068147659301758

Token 171: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0031786637846380472
    2. ' denom' → logprob: -5.753178596496582
    3. ' den' → logprob: -14.753178596496582
    4. ' ' → logprob: -16.0031795501709
    5. '   ' → logprob: -16.1281795501709
    6. ' denominator' → logprob: -16.5031795501709
    7. 'deny' → logprob: -16.6281795501709
    8. '  ' → logprob: -16.7531795501709
    9. '-den' → logprob: -17.6281795501709
    10. 'dem' → logprob: -18.1281795501709

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006366660236380994
    2. ')%' → logprob: -7.375636577606201
    3. '%' → logprob: -12.12563705444336
    4. ' )' → logprob: -12.75063705444336
    5. '   ' → logprob: -13.75063705444336
    6. ' %' → logprob: -15.25063705444336
    7. ')
' → logprob: -15.37563705444336
    8. '%)' → logprob: -16.75063705444336
    9. ')`' → logprob: -17.50063705444336
    10. '```' → logprob: -17.50063705444336

Token 173: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38689711689949036
    2. ' %' → logprob: -1.136897087097168
    3. ')' → logprob: -11.136897087097168
    4. ')%' → logprob: -11.761897087097168
    5. ' ' → logprob: -13.636897087097168
    6. ' ' → logprob: -14.636897087097168
    7. '   ' → logprob: -14.761897087097168
    8. '%B' → logprob: -14.761897087097168
    9. '%D' → logprob: -14.886897087097168
    10. '%A' → logprob: -15.011897087097168

Token 174: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.627176768844947e-05
    2. ' MOD' → logprob: -9.250096321105957
    3. '_MOD' → logprob: -17.25009536743164
    4. 'MO' → logprob: -17.87509536743164
    5. '.MOD' → logprob: -19.75009536743164
    6. 'MD' → logprob: -20.12509536743164
    7. ' ' → logprob: -20.25009536743164
    8. '10' → logprob: -21.25009536743164
    9. 'M' → logprob: -21.37509536743164
    10. '(M' → logprob: -22.00009536743164

Token 175: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3759883940219879
    2. '<|end|>' → logprob: -1.2509883642196655
    3. '```' → logprob: -4.500988483428955
    4. '#' → logprob: -5.250988483428955
    5. 'def' → logprob: -5.750988483428955
    6. 'n' → logprob: -6.375988483428955
    7. ')' → logprob: -6.750988483428955
    8. 'MOD' → logprob: -7.000988483428955
    9. 'mod' → logprob: -7.375988483428955
    10. '

' → logprob: -7.625988483428955

Token 176: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.732397735118866
    2. '<|end|>' → logprob: -1.3573977947235107
    3. '#' → logprob: -2.2323977947235107
    4. '\n' → logprob: -3.1073977947235107
    5. ')' → logprob: -3.2323977947235107
    6. '```' → logprob: -3.6073977947235107
    7. '(' → logprob: -4.232397556304932
    8. 'def' → logprob: -4.482397556304932
    9. ' ' → logprob: -5.482397556304932
    10. 'n' → logprob: -5.607397556304932

Token 177: ' g' (ID: 329)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06565593928098679
    2. ' solve' → logprob: -3.5656559467315674
    3. ' ' → logprob: -4.190655708312988
    4. ' prepare' → logprob: -4.440655708312988
    5. ' space' → logprob: -5.815655708312988
    6. ' calculate' → logprob: -6.190655708312988
    7. ' factorial' → logprob: -6.565655708312988
    8. ' compute' → logprob: -8.065655708312988
    9. ' count' → logprob: -8.315655708312988
    10. ' process' → logprob: -8.440655708312988

Token 178: '(r' (ID: 4729)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.48463836312294006
    2. '(' → logprob: -0.9846383333206177
    3. '(a' → logprob: -5.359638214111328
    4. '(n' → logprob: -5.984638214111328
    5. '(x' → logprob: -6.484638214111328
    6. '(u' → logprob: -7.359638214111328
    7. '(j' → logprob: -7.984638214111328
    8. '(k' → logprob: -8.859638214111328
    9. ' (' → logprob: -9.109638214111328
    10. '(s' → logprob: -9.234638214111328

Token 179: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003289655316621065
    2. '):' → logprob: -6.503289699554443
    3. ')' → logprob: -7.253289699554443
    4. 'u' → logprob: -8.378289222717285
    5. ',r' → logprob: -8.503289222717285
    6. '):
' → logprob: -9.128289222717285
    7. ' ,' → logprob: -9.503289222717285
    8. ',
' → logprob: -9.628289222717285
    9. ',k' → logprob: -9.628289222717285
    10. ',u' → logprob: -10.003289222717285

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001730987336486578
    2. ',r' → logprob: -6.501730918884277
    3. ' ,' → logprob: -8.751730918884277
    4. ',j' → logprob: -10.501730918884277
    5. 'r' → logprob: -10.751730918884277
    6. '):' → logprob: -12.751730918884277
    7. '_,' → logprob: -12.876730918884277
    8. ',n' → logprob: -12.876730918884277
    9. ',k' → logprob: -13.501730918884277
    10. ',i' → logprob: -13.626730918884277

Token 181: ' r' (ID: 428)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.052021995186805725
    2. 'r' → logprob: -3.4270219802856445
    3. ' c' → logprob: -4.0520219802856445
    4. ' r' → logprob: -7.1770219802856445
    5. 'g' → logprob: -11.302021980285645
    6. '   ' → logprob: -11.927021980285645
    7. 's' → logprob: -12.052021980285645
    8. 'k' → logprob: -12.302021980285645
    9. ' ' → logprob: -12.552021980285645
    10. ')' → logprob: -12.552021980285645

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4345177114009857
    2. '1' → logprob: -1.059517741203308
    3. ',' → logprob: -5.184517860412598
    4. ')' → logprob: -9.184517860412598
    5. 'r' → logprob: -10.184517860412598
    6. ',r' → logprob: -11.184517860412598
    7. '0' → logprob: -11.934517860412598
    8. ' ,' → logprob: -12.372017860412598
    9. '3' → logprob: -12.747017860412598
    10. 's' → logprob: -12.872017860412598

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014559264294803143
    2. '):' → logprob: -4.264559268951416
    3. '):
' → logprob: -8.639558792114258
    4. ' ,' → logprob: -8.764558792114258
    5. ')' → logprob: -11.014558792114258
    6. ',r' → logprob: -11.014558792114258
    7. '   ' → logprob: -12.014558792114258
    8. '):
' → logprob: -12.264558792114258
    9. 'r' → logprob: -12.264558792114258
    10. ',j' → logprob: -12.514558792114258

Token 184: ' y' (ID: 342)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.027832549065351486
    2. 'r' → logprob: -4.152832508087158
    3. ' c' → logprob: -4.902832508087158
    4. 'k' → logprob: -7.277832508087158
    5. 'n' → logprob: -7.902832508087158
    6. 'd' → logprob: -7.902832508087158
    7. '   ' → logprob: -8.027832984924316
    8. 'm' → logprob: -8.215332984924316
    9. 's' → logprob: -8.215332984924316
    10. 'l' → logprob: -8.215332984924316

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6017958521842957
    2. '1' → logprob: -0.8517958521842957
    3. ',' → logprob: -3.7267959117889404
    4. '2' → logprob: -7.476795673370361
    5. ')' → logprob: -8.10179615020752
    6. '):
' → logprob: -8.60179615020752
    7. 's' → logprob: -8.85179615020752
    8. 'r' → logprob: -9.60179615020752
    9. '0' → logprob: -9.60179615020752
    10. ' ):' → logprob: -10.60179615020752

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027697697281837463
    2. ':' → logprob: -3.652697801589966
    3. '    ' → logprob: -8.152697563171387
    4. ' ' → logprob: -8.652697563171387
    5. ':
' → logprob: -8.652697563171387
    6. ':return' → logprob: -9.652697563171387
    7. '(' → logprob: -9.777697563171387
    8. ' if' → logprob: -9.777697563171387
    9. ' return' → logprob: -9.777697563171387
    10. '```' → logprob: -9.777697563171387

Token 187: ' total' (ID: 3609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2993687689304352
    2. 'res' → logprob: -1.6743687391281128
    3. 'if' → logprob: -3.9243688583374023
    4. 'ans' → logprob: -4.049368858337402
    5. 'result' → logprob: -4.174368858337402
    6. 's' → logprob: -5.049368858337402
    7. 'total' (adapté à ' total') → logprob: -5.424368858337402
    8. 'ret' → logprob: -6.049368858337402
    9. 'sum' → logprob: -6.549368858337402
    10. ' return' → logprob: -7.174368858337402

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28152015805244446
    2. ' =' → logprob: -1.406520128250122
    3. '_' → logprob: -8.906519889831543
    4. ',' → logprob: -9.406519889831543
    5. ')' → logprob: -10.031519889831543
    6. 's' → logprob: -11.031519889831543
    7. ' ' → logprob: -11.031519889831543
    8. 'f' → logprob: -11.656519889831543
    9. 'r' → logprob: -11.656519889831543
    10. '_=' → logprob: -11.781519889831543

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055336035788059235
    2. 'f' → logprob: -3.4303359985351562
    3. ' ' → logprob: -4.305335998535156
    4. ' f' → logprob: -4.930335998535156
    5. '(f' → logprob: -8.180335998535156
    6. ' (' → logprob: -8.805335998535156
    7. '1' → logprob: -9.680335998535156
    8. '(' → logprob: -9.805335998535156
    9. 'r' → logprob: -10.180335998535156
    10. '(r' → logprob: -10.555335998535156

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026260357350111008
    2. 'f' → logprob: -4.0262603759765625
    3. '(f' → logprob: -4.9012603759765625
    4. '(' → logprob: -7.7762603759765625
    5. 'sum' → logprob: -9.776260375976562
    6. '(r' → logprob: -10.026260375976562
    7. '1' → logprob: -10.776260375976562
    8. 'r' → logprob: -11.151260375976562
    9. 'g' → logprob: -11.276260375976562
    10. 'pow' → logprob: -11.401260375976562

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21492335200309753
    2. '   ' → logprob: -2.33992338180542
    3. ' for' → logprob: -2.83992338180542
    4. '<|end|>' → logprob: -4.08992338180542
    5. 'for' → logprob: -4.46492338180542
    6. ':' → logprob: -5.83992338180542
    7. ' 
' → logprob: -6.46492338180542
    8. ')' → logprob: -7.08992338180542
    9. ':
' → logprob: -7.21492338180542
    10. ' ' → logprob: -7.21492338180542

Token 192: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46520140767097473
    2. '   ' → logprob: -1.5902013778686523
    3. '<|end|>' → logprob: -2.7152013778686523
    4. '
' → logprob: -2.9652013778686523
    5. 'for' → logprob: -3.0902013778686523
    6. '	for' → logprob: -6.215201377868652
    7. ' ' → logprob: -7.215201377868652
    8. ')' → logprob: -7.215201377868652
    9. ',' → logprob: -7.965201377868652
    10. '    
' → logprob: -8.465201377868652

Token 193: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023378713056445122
    2. ' for' → logprob: -3.773378610610962
    3. '   ' → logprob: -9.148378372192383
    4. '
' → logprob: -11.523378372192383
    5. ')' → logprob: -12.273378372192383
    6. 'r' → logprob: -13.023378372192383
    7. '```' → logprob: -13.023378372192383
    8. 'i' → logprob: -13.273378372192383
    9. ' ' → logprob: -13.273378372192383
    10. 'range' → logprob: -13.648378372192383

Token 194: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4212283790111542
    2. 'x' → logprob: -1.5462284088134766
    3. 'j' → logprob: -2.7962284088134766
    4. 'k' → logprob: -3.4212284088134766
    5. ' i' → logprob: -4.046228408813477
    6. ' x' → logprob: -5.171228408813477
    7. 'y' → logprob: -5.671228408813477
    8. ' j' → logprob: -5.796228408813477
    9. 'a' → logprob: -6.671228408813477
    10. 'r' → logprob: -6.671228408813477

Token 195: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326459050178528
    2. ' in' → logprob: -0.7576459050178528
    3. ')' → logprob: -10.882645606994629
    4. ',' → logprob: -11.382645606994629
    5. ' ' → logprob: -11.882645606994629
    6. '```' → logprob: -13.257645606994629
    7. 'range' → logprob: -13.507645606994629
    8. '	in' → logprob: -13.507645606994629
    9. 'n' → logprob: -13.882645606994629
    10. '   ' → logprob: -14.882645606994629

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00408053956925869
    2. ' range' → logprob: -5.504080772399902
    3. 'y' → logprob: -13.754080772399902
    4. 'r' → logprob: -14.879080772399902
    5. '(range' → logprob: -14.879080772399902
    6. '   ' → logprob: -16.254079818725586
    7. ')' → logprob: -16.254079818725586
    8. '	range' → logprob: -16.254079818725586
    9. 'rang' → logprob: -17.129079818725586
    10. ' ' → logprob: -17.254079818725586

Token 197: '(r' (ID: 4729)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.028586551547050476
    2. '(r' → logprob: -3.6535866260528564
    3. '(' → logprob: -6.153586387634277
    4. 'y' → logprob: -9.153586387634277
    5. '(min' → logprob: -11.153586387634277
    6. '(max' → logprob: -11.778586387634277
    7. '(g' → logprob: -12.153586387634277
    8. '((' → logprob: -12.528586387634277
    9. '0' → logprob: -12.778586387634277
    10. '(n' → logprob: -12.903586387634277

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28115466237068176
    2. '2' → logprob: -1.4061546325683594
    3. '
' → logprob: -14.28115463256836
    4. ' ' → logprob: -14.46865463256836
    5. 'r' → logprob: -14.65615463256836
    6. '0' → logprob: -14.96865463256836
    7. ')' → logprob: -15.21865463256836
    8. '```' → logprob: -15.34365463256836
    9. '12' → logprob: -15.34365463256836
    10. '(' → logprob: -15.46865463256836

Token 199: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7930629849433899
    2. '+' → logprob: -0.9180629849433899
    3. ',' → logprob: -1.9180629253387451
    4. ' ,' → logprob: -7.418063163757324
    5. '2' → logprob: -8.418063163757324
    6. '1' → logprob: -8.793063163757324
    7. ',r' → logprob: -8.793063163757324
    8. '+r' → logprob: -9.668063163757324
    9. ' ' → logprob: -10.043063163757324
    10. '   ' → logprob: -10.543063163757324

Token 200: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0898377001285553
    2. 'y' → logprob: -2.7148377895355225
    3. ' r' → logprob: -4.464837551116943
    4. ' y' → logprob: -4.839837551116943
    5. ' ' → logprob: -9.339838027954102
    6. '   ' → logprob: -9.464838027954102
    7. '(r' → logprob: -10.589838027954102
    8. '(y' → logprob: -11.089838027954102
    9. 'min' → logprob: -11.339838027954102
    10. '  ' → logprob: -12.089838027954102

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. '1' → logprob: -11.000021934509277
    3. ' ' → logprob: -13.375021934509277
    4. '
' → logprob: -14.625021934509277
    5. ')' → logprob: -14.750021934509277
    6. '   ' → logprob: -15.062521934509277
    7. '```' → logprob: -15.187521934509277
    8. '):
' → logprob: -15.687521934509277
    9. ',' → logprob: -15.687521934509277
    10. '+' → logprob: -16.12502098083496

Token 202: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933568716049194
    2. ' +' → logprob: -0.6933568716049194
    3. ',' → logprob: -9.06835651397705
    4. '):
' → logprob: -10.06835651397705
    5. '   ' → logprob: -11.31835651397705
    6. '):' → logprob: -11.69335651397705
    7. '+
' → logprob: -12.06835651397705
    8. '1' → logprob: -12.56835651397705
    9. '
' → logprob: -12.56835651397705
    10. ' +
' → logprob: -12.81835651397705

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004757135466206819
    2. ' ' → logprob: -7.875475883483887
    3. 'y' → logprob: -9.375475883483887
    4. ' y' → logprob: -11.625475883483887
    5. '2' → logprob: -14.375475883483887
    6. ')' → logprob: -14.750475883483887
    7. '   ' → logprob: -15.500475883483887
    8. ' ' → logprob: -16.18797492980957
    9. '  ' → logprob: -16.37547492980957
    10. '```' → logprob: -16.62547492980957

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000146687583765015
    2. 'y' → logprob: -9.375146865844727
    3. ' ' → logprob: -9.750146865844727
    4. ' y' → logprob: -13.125146865844727
    5. '2' → logprob: -14.375146865844727
    6. ')' → logprob: -15.500146865844727
    7. '   ' → logprob: -15.937646865844727
    8. 'r' → logprob: -16.500146865844727
    9. '0' → logprob: -16.625146865844727
    10. '  ' → logprob: -17.312646865844727

Token 205: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3138653635978699
    2. '):' → logprob: -1.3138654232025146
    3. '   ' → logprob: -7.8138651847839355
    4. '       ' → logprob: -9.313865661621094
    5. '):
' → logprob: -10.438865661621094
    6. ':' → logprob: -10.563865661621094
    7. '+' → logprob: -10.813865661621094
    8. ')' → logprob: -11.188865661621094
    9. ',' → logprob: -12.438865661621094
    10. '```' → logprob: -12.563865661621094

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006233313586562872
    2. 'total' → logprob: -6.381233215332031
    3. ' total' → logprob: -6.506233215332031
    4. '(total' → logprob: -7.006233215332031
    5. ',' → logprob: -7.131233215332031
    6. '<|end|>' → logprob: -7.756233215332031
    7. '   ' → logprob: -8.006233215332031
    8. '```' → logprob: -9.381233215332031
    9. ',total' → logprob: -9.506233215332031
    10. '):
' → logprob: -9.631233215332031

Token 207: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.004234750755131245
    2. ' total' → logprob: -5.629234790802002
    3. '
' → logprob: -7.629234790802002
    4. '           ' → logprob: -9.754234313964844
    5. '       ' → logprob: -10.004234313964844
    6. 'if' → logprob: -11.004234313964844
    7. '   ' → logprob: -11.879234313964844
    8. 'for' → logprob: -12.879234313964844
    9. '(total' → logprob: -12.879234313964844
    10. '	total' → logprob: -13.004234313964844

Token 208: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3182491064071655
    2. ' +=' → logprob: -1.3182491064071655
    3. '=' → logprob: -5.568249225616455
    4. ' =' → logprob: -7.193249225616455
    5. '+=(' → logprob: -8.568248748779297
    6. '+' → logprob: -8.943248748779297
    7. ']+=' → logprob: -10.193248748779297
    8. ' ^=' → logprob: -10.818248748779297
    9. '```' → logprob: -11.693248748779297
    10. ')' → logprob: -12.443248748779297

Token 209: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25219962000846863
    2. '(total' → logprob: -1.502199649810791
    3. '   ' → logprob: -9.377199172973633
    4. '(next' → logprob: -10.252199172973633
    5. '(t' → logprob: -10.502199172973633
    6. '(' → logprob: -10.502199172973633
    7. '(mod' → logprob: -10.627199172973633
    8. '(sum' → logprob: -11.127199172973633
    9. '       ' → logprob: -11.502199172973633
    10. ' ' → logprob: -11.627199172973633

Token 210: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.31714290380477905
    2. '(total' → logprob: -1.3171429634094238
    3. ' total' → logprob: -5.567142963409424
    4. ' (' → logprob: -10.317142486572266
    5. '   ' → logprob: -12.442142486572266
    6. '
' → logprob: -12.942142486572266
    7. '	total' → logprob: -12.942142486572266
    8. ',total' → logprob: -12.942142486572266
    9. '$total' → logprob: -13.067142486572266
    10. '       ' → logprob: -13.817142486572266

Token 211: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868725895881653
    2. '+' → logprob: -1.1368725299835205
    3. '+x' → logprob: -14.136872291564941
    4. ' ' → logprob: -15.761872291564941
    5. ' +
' → logprob: -16.011873245239258
    6. ' plus' → logprob: -16.011873245239258
    7. '+
' → logprob: -16.636873245239258
    8. ' ' → logprob: -16.886873245239258
    9. '+r' → logprob: -17.136873245239258
    10. ')' → logprob: -17.261873245239258

Token 212: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004267985001206398
    2. ' f' → logprob: -5.504268169403076
    3. '(f' → logprob: -9.254267692565918
    4. ')' → logprob: -10.504267692565918
    5. '   ' → logprob: -10.754267692565918
    6. ' (' → logprob: -12.004267692565918
    7. '(' → logprob: -12.004267692565918
    8. ' ' → logprob: -12.004267692565918
    9. 'g' → logprob: -12.129267692565918
    10. 'x' → logprob: -12.754267692565918

Token 213: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006795499939471483
    2. '(' → logprob: -7.6256794929504395
    3. '(y' → logprob: -9.125679969787598
    4. 'x' → logprob: -9.625679969787598
    5. '(r' → logprob: -12.000679969787598
    6. ')' → logprob: -12.375679969787598
    7. '((' → logprob: -13.125679969787598
    8. '<|end|>' → logprob: -13.250679969787598
    9. ')(' → logprob: -14.250679969787598
    10. '(
' → logprob: -14.625679969787598

Token 214: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10084779560565948
    2. ',y' → logprob: -2.3508477210998535
    3. ' ,' → logprob: -8.100848197937012
    4. 'y' → logprob: -8.100848197937012
    5. ',
' → logprob: -11.225848197937012
    6. '   ' → logprob: -11.725848197937012
    7. ',x' → logprob: -12.350848197937012
    8. ' y' → logprob: -12.475848197937012
    9. ',r' → logprob: -13.975848197937012
    10. '```' → logprob: -14.350848197937012

Token 215: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005753128207288682
    2. ' y' → logprob: -8.125575065612793
    3. '(y' → logprob: -8.750575065612793
    4. 'x' → logprob: -9.375575065612793
    5. 'r' → logprob: -11.750575065612793
    6. ' ' → logprob: -11.875575065612793
    7. '   ' → logprob: -11.875575065612793
    8. '(' → logprob: -12.750575065612793
    9. '(x' → logprob: -13.250575065612793
    10. ' (' → logprob: -13.750575065612793

Token 216: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00024132427643053234
    2. ' y' → logprob: -9.00024127960205
    3. '(y' → logprob: -9.75024127960205
    4. 'x' → logprob: -10.25024127960205
    5. ' ' → logprob: -12.12524127960205
    6. '(' → logprob: -12.25024127960205
    7. '   ' → logprob: -12.75024127960205
    8. '
' → logprob: -12.87524127960205
    9. 'r' → logprob: -13.87524127960205
    10. 'j' → logprob: -14.06274127960205

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09020060300827026
    2. ',y' → logprob: -2.465200662612915
    3. ' ,' → logprob: -6.840200424194336
    4. 'y' → logprob: -8.840200424194336
    5. ',
' → logprob: -10.965200424194336
    6. ' y' → logprob: -11.840200424194336
    7. '
' → logprob: -12.090200424194336
    8. '   ' → logprob: -12.715200424194336
    9. '(y' → logprob: -12.715200424194336
    10. ',r' → logprob: -12.715200424194336

Token 218: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01288607344031334
    2. ' y' → logprob: -4.387886047363281
    3. 'r' → logprob: -9.012886047363281
    4. 'x' → logprob: -9.137886047363281
    5. ' ' → logprob: -9.387886047363281
    6. '(y' → logprob: -10.512886047363281
    7. '   ' → logprob: -11.637886047363281
    8. 'j' → logprob: -12.262886047363281
    9. '  ' → logprob: -12.387886047363281
    10. '
' → logprob: -12.512886047363281

Token 219: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00886451080441475
    2. '-' → logprob: -5.008864402770996
    3. ' -' → logprob: -6.508864402770996
    4. ')' → logprob: -7.508864402770996
    5. ' ))' → logprob: -9.758864402770996
    6. ')))' → logprob: -11.508864402770996
    7. 'x' → logprob: -11.883864402770996
    8. '   ' → logprob: -12.008864402770996
    9. '+' → logprob: -12.008864402770996
    10. '-x' → logprob: -12.008864402770996

Token 220: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03437678888440132
    2. '%' → logprob: -3.659376859664917
    3. ')%' → logprob: -5.159376621246338
    4. ' %' → logprob: -6.159376621246338
    5. ' )' → logprob: -9.909377098083496
    6. '
' → logprob: -10.034377098083496
    7. '```' → logprob: -10.784377098083496
    8. '%)' → logprob: -11.034377098083496
    9. '   ' → logprob: -11.409377098083496
    10. '<|end|>' → logprob: -11.409377098083496

Token 221: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '```' → logprob: -21.500003814697266
    4. '10' → logprob: -21.875003814697266
    5. '_MOD' → logprob: -22.000003814697266
    6. 'MO' → logprob: -22.000003814697266
    7. '.MOD' → logprob: -22.375003814697266
    8. '(M' → logprob: -23.375003814697266
    9. '
' → logprob: -23.500003814697266
    10. '   ' → logprob: -23.750003814697266

Token 222: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010533531196415424
    2. '
' → logprob: -5.010533332824707
    3. ')' → logprob: -6.135533332824707
    4. '    
' → logprob: -6.760533332824707
    5. '<|end|>' → logprob: -8.385533332824707
    6. 'return' → logprob: -9.385533332824707
    7. '       ' → logprob: -10.760533332824707
    8. '  
' → logprob: -10.760533332824707
    9. ' ' → logprob: -10.760533332824707
    10. ' return' → logprob: -10.885533332824707

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004032452590763569
    2. '
' → logprob: -5.629032611846924
    3. '    
' → logprob: -8.379032135009766
    4. 'return' → logprob: -9.504032135009766
    5. ' return' → logprob: -10.129032135009766
    6. '<|end|>' → logprob: -10.129032135009766
    7. '	return' → logprob: -10.504032135009766
    8. ' 
' → logprob: -12.629032135009766
    9. '       ' → logprob: -12.754032135009766
    10. ')' → logprob: -12.879032135009766

Token 224: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014601561240851879
    2. 'return' (adapté à ' return') → logprob: -4.264601707458496
    3. ' return' → logprob: -8.014601707458496
    4. '	return' → logprob: -9.389601707458496
    5. '<|end|>' → logprob: -11.639601707458496
    6. '    
' → logprob: -12.389601707458496
    7. ' ' → logprob: -12.639601707458496
    8. ')' → logprob: -12.889601707458496
    9. '
' → logprob: -13.389601707458496
    10. '       ' → logprob: -13.889601707458496

Token 225: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10021594911813736
    2. ' total' → logprob: -2.3502159118652344
    3. '(total' → logprob: -11.600215911865234
    4. 'tot' → logprob: -17.100215911865234
    5. ' ' → logprob: -17.725215911865234
    6. '	total' → logprob: -17.725215911865234
    7. ' tot' → logprob: -17.975215911865234
    8. ' ' → logprob: -19.225215911865234
    9. ',total' → logprob: -19.225215911865234
    10. 't' → logprob: -19.600215911865234

Token 226: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: 'r' (ID: 81)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0074083236977458
    2. 'es' → logprob: -5.632408142089844
    3. '2' → logprob: -5.757408142089844
    4. 'ange' → logprob: -8.257408142089844
    5. 'ef' → logprob: -8.882408142089844
    6. ' =' → logprob: -9.507408142089844
    7. '3' → logprob: -10.757408142089844
    8. 'e' → logprob: -10.757408142089844
    9. '```' → logprob: -10.882408142089844
    10. 's' → logprob: -11.007408142089844

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018485164269804955
    2. '=' → logprob: -4.518485069274902
    3. ' =' → logprob: -5.643485069274902
    4. ' ,' → logprob: -5.768485069274902
    5. ' ' → logprob: -7.893485069274902
    6. '<|end|>' → logprob: -8.643485069274902
    7. ',r' → logprob: -8.893485069274902
    8. ')' → logprob: -11.268485069274902
    9. '_,' → logprob: -11.518485069274902
    10. '<|end|>' → logprob: -12.393485069274902

Token 230: ' c' (ID: 274)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2519535422325134
    2. ' r' → logprob: -1.5019536018371582
    3. ' ' → logprob: -11.501953125
    4. '<|end|>' → logprob: -12.376953125
    5. ' ' → logprob: -12.626953125
    6. '_r' → logprob: -13.376953125
    7. '=' → logprob: -14.126953125
    8. ',r' → logprob: -14.251953125
    9. '...' → logprob: -14.501953125
    10. ' 
' → logprob: -14.626953125

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0905594527721405
    2. '=' → logprob: -2.590559482574463
    3. ' =' → logprob: -4.840559482574463
    4. '<|end|>' → logprob: -5.965559482574463
    5. ',' → logprob: -7.090559482574463
    6. ')' → logprob: -9.965559005737305
    7. ' ' → logprob: -10.215559005737305
    8. '<|end|>' → logprob: -10.340559005737305
    9. '_' → logprob: -10.465559005737305
    10. 'r' → logprob: -10.590559005737305

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2667097747325897
    2. ' =' → logprob: -1.766709804534912
    3. '=' → logprob: -2.766709804534912
    4. ' ,' → logprob: -8.266709327697754
    5. ',r' → logprob: -10.641709327697754
    6. ',c' → logprob: -10.766709327697754
    7. '<|end|>' → logprob: -11.016709327697754
    8. ' ' → logprob: -12.016709327697754
    9. ',user' → logprob: -13.266709327697754
    10. ')' → logprob: -13.391709327697754

Token 233: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20144110918045044
    2. ' r' → logprob: -1.7014410495758057
    3. 'c' → logprob: -11.201440811157227
    4. ' =' → logprob: -11.826440811157227
    5. ' c' → logprob: -12.701440811157227
    6. '=' → logprob: -13.701440811157227
    7. ' ' → logprob: -13.951440811157227
    8. '<|end|>' → logprob: -14.201440811157227
    9. 's' → logprob: -15.451440811157227
    10. '=r' → logprob: -15.701440811157227

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023949772119522095
    2. '1' → logprob: -3.7739498615264893
    3. '0' → logprob: -7.39894962310791
    4. ',' → logprob: -10.14894962310791
    5. '=' → logprob: -10.77394962310791
    6. 's' → logprob: -11.52394962310791
    7. 'c' → logprob: -12.64894962310791
    8. ' ' → logprob: -12.77394962310791
    9. '<|end|>' → logprob: -12.77394962310791
    10. '3' → logprob: -12.89894962310791

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004659425176214427
    2. ' ,' → logprob: -7.7504658699035645
    3. '=' → logprob: -10.750466346740723
    4. ' =' → logprob: -11.375466346740723
    5. ',c' → logprob: -13.625466346740723
    6. '<|end|>' → logprob: -15.250466346740723
    7. '_,' → logprob: -15.625466346740723
    8. '‌,' → logprob: -15.625466346740723
    9. ',r' → logprob: -15.750466346740723
    10. ' ' → logprob: -16.000465393066406

Token 236: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07889407873153687
    2. 'c' → logprob: -2.5788941383361816
    3. '<|end|>' → logprob: -13.078893661499023
    4. ' ' → logprob: -13.328893661499023
    5. '```' → logprob: -16.078893661499023
    6. 'd' → logprob: -16.203893661499023
    7. '	c' → logprob: -16.578893661499023
    8. ' =' → logprob: -16.828893661499023
    9. 'r' → logprob: -16.828893661499023
    10. ' ' → logprob: -17.203893661499023

Token 237: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '1' → logprob: -15.875000953674316
    4. '```' → logprob: -16.75
    5. '=' → logprob: -18.625
    6. '   ' → logprob: -19.375
    7. '₂' → logprob: -20.75
    8. 'r' → logprob: -20.75
    9. '_' → logprob: -21.0
    10. '۲' → logprob: -21.0

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09445016831159592
    2. ' =' → logprob: -2.4694502353668213
    3. ',' → logprob: -5.219449996948242
    4. '=
' → logprob: -10.219449996948242
    5. '<|end|>' → logprob: -10.719449996948242
    6. '=input' → logprob: -11.219449996948242
    7. ' ,' → logprob: -13.344449996948242
    8. ' =
' → logprob: -13.594449996948242
    9. '=

' → logprob: -13.594449996948242
    10. ')' → logprob: -13.719449996948242

Token 239: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31364405155181885
    2. ' map' → logprob: -1.3136440515518188
    3. '0' → logprob: -8.813644409179688
    4. '[' → logprob: -9.313644409179688
    5. 'list' → logprob: -9.563644409179688
    6. ' list' → logprob: -10.688644409179688
    7. ' ' → logprob: -11.063644409179688
    8. '1' → logprob: -11.188644409179688
    9. ' [' → logprob: -11.188644409179688
    10. '(map' → logprob: -12.313644409179688

Token 240: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008852534228935838
    2. '(' → logprob: -7.375885486602783
    3. 'int' → logprob: -8.500885009765625
    4. '(input' → logprob: -10.125885009765625
    5. '[int' → logprob: -12.250885009765625
    6. '<int' → logprob: -12.750885009765625
    7. '(
' → logprob: -12.750885009765625
    8. '(map' → logprob: -13.625885009765625
    9. 'input' → logprob: -13.875885009765625
    10. '(list' → logprob: -14.250885009765625

Token 241: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13552182912826538
    2. 'input' → logprob: -2.26052188873291
    3. '(' → logprob: -4.26052188873291
    4. ',input' → logprob: -5.13552188873291
    5. ')' → logprob: -6.63552188873291
    6. ',' → logprob: -7.63552188873291
    7. ' input' → logprob: -8.38552188873291
    8. '=input' → logprob: -9.26052188873291
    9. '(),' → logprob: -9.63552188873291
    10. '()' → logprob: -9.76052188873291

Token 242: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078639671206474
    2. ' input' → logprob: -5.5040788650512695
    3. ')' → logprob: -16.754077911376953
    4. '(input' → logprob: -17.004077911376953
    5. '=input' → logprob: -17.129077911376953
    6. ',input' → logprob: -17.129077911376953
    7. '
' → logprob: -17.629077911376953
    8. '<input' → logprob: -17.879077911376953
    9. '```' → logprob: -18.504077911376953
    10. ' ' → logprob: -18.504077911376953

Token 243: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011021859245374799
    2. '()' → logprob: -9.125110626220703
    3. '(' → logprob: -14.500110626220703
    4. ' ().' → logprob: -14.875110626220703
    5. '())' → logprob: -15.750110626220703
    6. '()
' → logprob: -16.500110626220703
    7. '()[' → logprob: -17.500110626220703
    8. '.readline' → logprob: -18.000110626220703
    9. '()?.' → logprob: -18.000110626220703
    10. '().__' → logprob: -18.250110626220703

Token 244: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020449401927180588
    2. 'strip' → logprob: -8.500204086303711
    3. 'rstrip' → logprob: -14.875204086303711
    4. '(split' → logprob: -15.125204086303711
    5. ' split' → logprob: -15.375204086303711
    6. 'read' → logprob: -16.75020408630371
    7. '().' → logprob: -17.00020408630371
    8. 'spl' → logprob: -18.50020408630371
    9. 's' → logprob: -18.62520408630371
    10. '.split' → logprob: -20.50020408630371

Token 245: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007358855567872524
    2. '()' → logprob: -5.007359027862549
    3. ')' → logprob: -7.507359027862549
    4. '(' → logprob: -9.88235855102539
    5. '()))' → logprob: -10.75735855102539
    6. '().' → logprob: -11.50735855102539
    7. '(),' → logprob: -12.38235855102539
    8. '('' → logprob: -12.88235855102539
    9. '())
' → logprob: -13.38235855102539
    10. '());' → logprob: -13.75735855102539

Token 246: 'N' (ID: 45)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.246537173457909e-06
    2. 'n' → logprob: -13.250003814697266
    3. 'MOD' → logprob: -13.500003814697266
    4. ' mod' → logprob: -13.875003814697266
    5. '(mod' → logprob: -17.000003814697266
    6. '
' → logprob: -17.875003814697266
    7. 'moder' → logprob: -18.500003814697266
    8. 'max' → logprob: -18.625003814697266
    9. '```' → logprob: -18.625003814697266
    10. 'modifiable' → logprob: -19.625003814697266

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47433680295944214
    2. '=' → logprob: -0.9743368029594421
    3. ',' → logprob: -8.974336624145508
    4. 'ext' → logprob: -9.974336624145508
    5. '+' → logprob: -11.474336624145508
    6. '  ' → logprob: -11.474336624145508
    7. ' ' → logprob: -11.724336624145508
    8. '_' → logprob: -11.849336624145508
    9. '+=' → logprob: -11.974336624145508
    10. 'um' → logprob: -11.974336624145508

Token 248: ' max' (ID: 2999)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05087290704250336
    2. ' r' → logprob: -3.550872802734375
    3. '10' → logprob: -4.550872802734375
    4. ' ' → logprob: -5.425872802734375
    5. 'max' → logprob: -5.800872802734375
    6. ' max' → logprob: -6.050872802734375
    7. '100' → logprob: -8.550872802734375
    8. '(r' → logprob: -9.050872802734375
    9. '2' → logprob: -9.925872802734375
    10. ' (' → logprob: -10.050872802734375

Token 249: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.004222520627081394
    2. '(abs' → logprob: -5.504222393035889
    3. '(' → logprob: -9.004222869873047
    4. 'abs' → logprob: -11.879222869873047
    5. '((' → logprob: -12.004222869873047
    6. '(c' → logprob: -12.129222869873047
    7. '([' → logprob: -14.129222869873047
    8. '(
' → logprob: -14.254222869873047
    9. 'r' → logprob: -14.254222869873047
    10. '(max' → logprob: -14.379222869873047

Token 250: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20142988860607147
    2. '1' → logprob: -1.701429843902588
    3. 'r' → logprob: -11.326430320739746
    4. 'max' → logprob: -13.451430320739746
    5. '```' → logprob: -14.701430320739746
    6. ' ' → logprob: -14.826430320739746
    7. ',' → logprob: -14.888930320739746
    8. ')' → logprob: -14.951430320739746
    9. '   ' → logprob: -15.388930320739746
    10. ' r' → logprob: -15.513930320739746

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015726974233984947
    2. ',c' → logprob: -4.5157270431518555
    3. 'c' → logprob: -6.2657270431518555
    4. ',r' → logprob: -6.3907270431518555
    5. ' ,' → logprob: -7.5157270431518555
    6. 'r' → logprob: -8.140727043151855
    7. '2' → logprob: -8.640727043151855
    8. ' c' → logprob: -9.890727043151855
    9. ' r' → logprob: -11.390727043151855
    10. 'abs' → logprob: -11.890727043151855

Token 252: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02060483768582344
    2. 'c' → logprob: -3.8956048488616943
    3. ' r' → logprob: -10.145605087280273
    4. '   ' → logprob: -10.895605087280273
    5. ' c' → logprob: -12.395605087280273
    6. ' ' → logprob: -14.520605087280273
    7. '	r' → logprob: -15.395605087280273
    8. '  ' → logprob: -16.020605087280273
    9. '
' → logprob: -16.520605087280273
    10. '	c' → logprob: -17.395605087280273

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005525323562324047
    2. 'c' → logprob: -5.2555251121521
    3. ',' → logprob: -8.505525588989258
    4. '1' → logprob: -10.630525588989258
    5. 'r' → logprob: -11.130525588989258
    6. 's' → logprob: -11.630525588989258
    7. ' c' → logprob: -11.630525588989258
    8. ')' → logprob: -11.755525588989258
    9. ',c' → logprob: -11.880525588989258
    10. ' ' → logprob: -12.630525588989258

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007136239437386394
    2. ')' → logprob: -8.000713348388672
    3. ',c' → logprob: -8.250713348388672
    4. ' ,' → logprob: -9.375713348388672
    5. 'c' → logprob: -10.875713348388672
    6. '+' → logprob: -12.125713348388672
    7. ' +' → logprob: -12.875713348388672
    8. ')+' → logprob: -13.250713348388672
    9. '+c' → logprob: -13.625713348388672
    10. ' c' → logprob: -13.875713348388672

Token 255: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001045551267452538
    2. ' c' → logprob: -6.8760457038879395
    3. '   ' → logprob: -11.626045227050781
    4. ' ' → logprob: -13.876045227050781
    5. '
' → logprob: -14.001045227050781
    6. '	c' → logprob: -14.251045227050781
    7. ')c' → logprob: -14.376045227050781
    8. '  ' → logprob: -15.126045227050781
    9. ')' → logprob: -15.501045227050781
    10. '    ' → logprob: -16.37604522705078

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931955218315125
    2. '2' → logprob: -0.6931955218315125
    3. ')' → logprob: -10.568195343017578
    4. 'c' → logprob: -11.443195343017578
    5. 'r' → logprob: -11.693195343017578
    6. '```' → logprob: -13.568195343017578
    7. ',' → logprob: -14.443195343017578
    8. ' c' → logprob: -14.943195343017578
    9. ' ' → logprob: -15.318195343017578
    10. 's' → logprob: -15.568195343017578

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005660186288878322
    2. ',c' → logprob: -7.625566005706787
    3. 'c' → logprob: -10.125566482543945
    4. ' ,' → logprob: -10.500566482543945
    5. ',
' → logprob: -12.250566482543945
    6. ',r' → logprob: -12.750566482543945
    7. ')' → logprob: -13.375566482543945
    8. ' c' → logprob: -14.750566482543945
    9. '2' → logprob: -14.750566482543945
    10. 'r' → logprob: -15.875566482543945

Token 258: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009293294278904796
    2. ' c' → logprob: -7.000929355621338
    3. ')' → logprob: -11.75092887878418
    4. '   ' → logprob: -12.37592887878418
    5. '
' → logprob: -12.50092887878418
    6. ')c' → logprob: -13.75092887878418
    7. 'r' → logprob: -15.00092887878418
    8. ' ' → logprob: -15.75092887878418
    9. '    ' → logprob: -16.12592887878418
    10. '  ' → logprob: -16.25092887878418

Token 259: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. ')' → logprob: -12.125006675720215
    3. '1' → logprob: -13.750006675720215
    4. ' ' → logprob: -18.0000057220459
    5. 'c' → logprob: -18.3750057220459
    6. '```' → logprob: -19.0000057220459
    7. '₂' → logprob: -20.2500057220459
    8. '3' → logprob: -20.2500057220459
    9. ')
' → logprob: -21.0000057220459
    10. '۲' → logprob: -21.7500057220459

Token 260: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010616567305987701
    2. ')+' → logprob: -9.250105857849121
    3. ' )' → logprob: -11.750105857849121
    4. '+' → logprob: -13.625105857849121
    5. ')
' → logprob: -14.000105857849121
    6. '),' → logprob: -17.500106811523438
    7. ')

' → logprob: -17.875106811523438
    8. '）' → logprob: -18.000106811523438
    9. ',' → logprob: -18.250106811523438
    10. '#' → logprob: -18.500106811523438

Token 261: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016213372349739075
    2. ' +' → logprob: -4.391213417053223
    3. '
' → logprob: -5.891213417053223
    4. '```' → logprob: -8.016213417053223
    5. 'N' → logprob: -8.391213417053223
    6. 'mod' → logprob: -8.641213417053223
    7. '+
' → logprob: -9.141213417053223
    8. 'n' → logprob: -10.266213417053223
    9. '#' → logprob: -11.766213417053223
    10. 'MOD' → logprob: -12.016213417053223

Token 262: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '3' → logprob: -15.875040054321289
    4. '  ' → logprob: -16.50004005432129
    5. '   ' → logprob: -16.87504005432129
    6. '*' → logprob: -17.75004005432129
    7. '
' → logprob: -17.87504005432129
    8. '+' → logprob: -18.00004005432129
    9. '\
' → logprob: -18.87504005432129
    10. '۲' → logprob: -19.12504005432129

Token 263: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '3' → logprob: -15.625001907348633
    4. '
' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '  ' → logprob: -17.125001907348633
    7. '+' → logprob: -17.625001907348633
    8. '4' → logprob: -18.750001907348633
    9. ' ' → logprob: -18.750001907348633
    10. '

' → logprob: -19.125001907348633

Token 264: ' +' (ID: 659)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16076518595218658
    2. '
' → logprob: -1.9107651710510254
    3. '```' → logprob: -8.535765647888184
    4. '
' → logprob: -9.035765647888184
    5. ' mod' → logprob: -9.160765647888184
    6. ')
' → logprob: -9.660765647888184
    7. ')' → logprob: -10.660765647888184
    8. '(mod' → logprob: -11.535765647888184
    9. ' 
' → logprob: -11.785765647888184
    10. ',' → logprob: -12.785765647888184

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2908661365509033
    2. '10' → logprob: -1.4158661365509033
    3. '1' → logprob: -5.165865898132324
    4. '5' → logprob: -5.790865898132324
    5. ' ' → logprob: -7.665865898132324
    6. '100' → logprob: -8.415865898132324
    7. '3' → logprob: -8.665865898132324
    8. '4' → logprob: -10.790865898132324
    9. '20' → logprob: -11.290865898132324
    10. '50' → logprob: -12.040865898132324

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4887906014919281
    2. '10' → logprob: -0.9887906312942505
    3. '1' → logprob: -4.738790512084961
    4. '5' → logprob: -5.238790512084961
    5. '3' → logprob: -7.738790512084961
    6. '20' → logprob: -10.238790512084961
    7. '4' → logprob: -10.363790512084961
    8. '100' → logprob: -10.613790512084961
    9. '50' → logprob: -11.738790512084961
    10. ' ' → logprob: -11.738790512084961

Token 267: '
' (ID: 198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005730479606427252
    2. '
' → logprob: -7.50057315826416
    3. ' mod' → logprob: -11.75057315826416
    4. '(mod' → logprob: -12.00057315826416
    5. '```' → logprob: -12.62557315826416
    6. 'MOD' → logprob: -14.00057315826416
    7. '
' → logprob: -14.25057315826416
    8. ',' → logprob: -14.25057315826416
    9. ')' → logprob: -15.62557315826416
    10. ',
' → logprob: -16.125572204589844

Token 268: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.5
    3. '
' → logprob: -18.125
    4. '(mod' → logprob: -18.75
    5. '```' → logprob: -20.125
    6. '	mod' → logprob: -21.75
    7. 'modal' → logprob: -21.875
    8. 'MOD' → logprob: -22.125
    9. '_mod' → logprob: -22.625
    10. '
' → logprob: -23.375

Token 269: 'Facts' (ID: 117250)
  Prédit: 'Facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facts' → logprob: -4.320199877838604e-07
    2. 'Fact' → logprob: -15.125
    3. ' Facts' → logprob: -16.125
    4. 'facts' → logprob: -19.0
    5. 'FACT' → logprob: -19.25
    6. 'F' → logprob: -19.375
    7. 'Factors' → logprob: -20.0
    8. 'Stats' → logprob: -20.625
    9. ' facts' → logprob: -21.25
    10. 'Fac' → logprob: -21.25

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. ' ,' → logprob: -14.000000953674316
    3. ',module' → logprob: -16.125001907348633
    4. ',n' → logprob: -17.375001907348633
    5. ',in' → logprob: -17.750001907348633
    6. ',
' → logprob: -17.875001907348633
    7. 'mod' → logprob: -18.625001907348633
    8. '‌,' → logprob: -18.750001907348633
    9. ',m' → logprob: -19.000001907348633
    10. ',

' → logprob: -19.125001907348633

Token 271: ' inv' (ID: 1827)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0011848729336634278
    2. ' inv' → logprob: -6.751184940338135
    3. 'inv' → logprob: -11.751184463500977
    4. ' in' → logprob: -12.876184463500977
    5. ' invers' → logprob: -14.126184463500977
    6. '=' → logprob: -14.751184463500977
    7. '
' → logprob: -14.876184463500977
    8. '   ' → logprob: -15.001184463500977
    9. 's' → logprob: -15.001184463500977
    10. ' =' → logprob: -15.126184463500977

Token 272: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. '<|end|>' → logprob: -17.625
    3. ' s' → logprob: -18.75
    4. '=' → logprob: -19.75
    5. '<|end|>' → logprob: -22.0
    6. 'S' → logprob: -22.25
    7. 'is' → logprob: -22.625
    8. ' =' → logprob: -23.0
    9. 'es' → logprob: -23.125
    10. 'swer' → logprob: -23.75

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395956993103
    2. ' =' → logprob: -0.8259395956993103
    3. ',' → logprob: -16.575939178466797
    4. '<|end|>' → logprob: -16.950939178466797
    5. ' ' → logprob: -17.325939178466797
    6. ')' → logprob: -17.325939178466797
    7. '＝' → logprob: -17.450939178466797
    8. '=create' → logprob: -18.200939178466797
    9. '=

' → logprob: -18.950939178466797
    10. 's' → logprob: -18.950939178466797

Token 274: ' prepare' (ID: 13708)
  Prédit: 'prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prepare' → logprob: -0.01815006136894226
    2. ' prepare' → logprob: -4.0181498527526855
    3. '.prepare' → logprob: -16.518150329589844
    4. ' ' → logprob: -18.018150329589844
    5. '_prepare' → logprob: -18.268150329589844
    6. ' ' → logprob: -18.768150329589844
    7. 'prep' → logprob: -18.893150329589844
    8. 'prepared' → logprob: -18.893150329589844
    9. '   ' → logprob: -19.393150329589844
    10. 'Prepare' → logprob: -19.643150329589844

Token 275: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0004958406207151711
    2. 'N' → logprob: -7.625495910644531
    3. '(' → logprob: -11.875495910644531
    4. '(n' → logprob: -14.500495910644531
    5. '```' → logprob: -15.750495910644531
    6. '<|end|>' → logprob: -16.00049591064453
    7. '(
' → logprob: -16.37549591064453
    8. '[N' → logprob: -16.87549591064453
    9. '	N' → logprob: -17.37549591064453
    10. '\(' → logprob: -17.75049591064453

Token 276: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -16.375
    5. '),' → logprob: -18.0
    6. '<|end|>' → logprob: -18.375
    7. '())' → logprob: -19.125
    8. ')#' → logprob: -19.25
    9. ')}' → logprob: -19.625
    10. ')

' → logprob: -19.75

Token 277: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.29702043533325195
    2. 'print' → logprob: -1.672020435333252
    3. 'ans' → logprob: -3.172020435333252
    4. 'answer' → logprob: -3.797020435333252
    5. 'res' → logprob: -5.422020435333252
    6. 'output' → logprob: -9.172019958496094
    7. 'def' → logprob: -9.547019958496094
    8. 'total' → logprob: -10.047019958496094
    9. 'for' → logprob: -10.172019958496094
    10. 'out' → logprob: -10.922019958496094

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003601140109822154
    2. '=' → logprob: -5.62860107421875
    3. ',' → logprob: -15.12860107421875
    4. '_' → logprob: -15.37860107421875
    5. ' ' → logprob: -15.37860107421875
    6. ' ' → logprob: -15.87860107421875
    7. ')' → logprob: -16.12860107421875
    8. 's' → logprob: -17.12860107421875
    9. '```' → logprob: -17.25360107421875
    10. '1' → logprob: -17.50360107421875

Token 279: ' g' (ID: 329)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.15735992789268494
    2. '0' → logprob: -2.0323598384857178
    3. 'g' → logprob: -4.532360076904297
    4. '(' → logprob: -6.157360076904297
    5. ' (' → logprob: -6.782360076904297
    6. '(
' → logprob: -7.907360076904297
    7. '((' → logprob: -9.407360076904297
    8. ' g' → logprob: -10.657360076904297
    9. '1' → logprob: -11.282360076904297
    10. '
' → logprob: -11.407360076904297

Token 280: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.500005722045898
    3. ' (' → logprob: -14.250005722045898
    4. '((' → logprob: -14.625005722045898
    5. 'r' → logprob: -14.875005722045898
    6. '(
' → logprob: -16.0000057220459
    7. '(c' → logprob: -17.5000057220459
    8. '```' → logprob: -18.1250057220459
    9. '	r' → logprob: -19.2500057220459
    10. '
' → logprob: -19.2500057220459

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '2' → logprob: -12.375003814697266
    3. ' ' → logprob: -17.625003814697266
    4. ',' → logprob: -18.375003814697266
    5. '１' → logprob: -18.500003814697266
    6. '۱' → logprob: -18.875003814697266
    7. '१' → logprob: -19.312503814697266
    8. '```' → logprob: -19.937503814697266
    9. 'r' → logprob: -20.500003814697266
    10. '১' → logprob: -20.625003814697266

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026006601750850677
    2. '-' → logprob: -4.026006698608398
    3. ' -' → logprob: -5.776006698608398
    4. ' ,' → logprob: -6.401006698608398
    5. '+' → logprob: -6.901006698608398
    6. ',r' → logprob: -6.901006698608398
    7. ',c' → logprob: -7.026006698608398
    8. ' +' → logprob: -9.151006698608398
    9. ',
' → logprob: -10.901006698608398
    10. ' ' → logprob: -11.901006698608398

Token 283: ' r' (ID: 428)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005973000079393387
    2. 'r' → logprob: -5.255972862243652
    3. ' c' → logprob: -7.255972862243652
    4. ' r' → logprob: -11.380972862243652
    5. '   ' → logprob: -11.380972862243652
    6. ' ' → logprob: -13.005972862243652
    7. '	c' → logprob: -13.380972862243652
    8. '
' → logprob: -13.630972862243652
    9. ')c' → logprob: -14.255972862243652
    10. '  ' → logprob: -14.443472862243652

Token 284: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006619923282414675
    2. 'c' → logprob: -5.631619930267334
    3. '1' → logprob: -6.006619930267334
    4. ',' → logprob: -7.631619930267334
    5. ',c' → logprob: -10.506619453430176
    6. 'r' → logprob: -11.506619453430176
    7. ')' → logprob: -12.006619453430176
    8. ' c' → logprob: -12.569119453430176
    9. '```' → logprob: -13.069119453430176
    10. '   ' → logprob: -13.319119453430176

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013285996101330966
    2. ',c' → logprob: -9.12513256072998
    3. ' ,' → logprob: -11.00013256072998
    4. ',
' → logprob: -12.25013256072998
    5. 'c' → logprob: -13.25013256072998
    6. '```' → logprob: -15.75013256072998
    7. 's' → logprob: -16.625133514404297
    8. ',r' → logprob: -16.625133514404297
    9. '),' → logprob: -16.750133514404297
    10. ',

' → logprob: -17.000133514404297

Token 286: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00025561772054061294
    2. ' c' → logprob: -8.500255584716797
    3. '   ' → logprob: -10.000255584716797
    4. '(c' → logprob: -12.750255584716797
    5. '  ' → logprob: -13.625255584716797
    6. ' ' → logprob: -14.125255584716797
    7. '
' → logprob: -14.250255584716797
    8. '    ' → logprob: -15.000255584716797
    9. '	c' → logprob: -15.125255584716797
    10. ')c' → logprob: -16.375255584716797

Token 287: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804149478673935
    2. '2' → logprob: -3.288041591644287
    3. '
' → logprob: -18.100542068481445
    4. '_' → logprob: -18.663042068481445
    5. ')' → logprob: -18.975542068481445
    6. '１' → logprob: -18.975542068481445
    7. ' ' → logprob: -18.975542068481445
    8. '   ' → logprob: -19.475542068481445
    9. '

' → logprob: -19.538042068481445
    10. '```' → logprob: -19.600542068481445

Token 288: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011343709047650918
    2. '+' → logprob: -9.750113487243652
    3. ')
' → logprob: -10.500113487243652
    4. '-' → logprob: -11.125113487243652
    5. ' )' → logprob: -11.625113487243652
    6. '-)' → logprob: -14.000113487243652
    7. ')+' → logprob: -14.000113487243652
    8. ' -' → logprob: -14.250113487243652
    9. ')

' → logprob: -15.000113487243652
    10. '))' → logprob: -15.375113487243652

Token 289: ' -' (ID: 533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5559512376785278
    2. '+' → logprob: -1.3059512376785278
    3. '
' → logprob: -1.9309512376785278
    4. '+
' → logprob: -4.805951118469238
    5. ' +' → logprob: -7.055951118469238
    6. ' ans' → logprob: -7.680951118469238
    7. '-' → logprob: -8.055951118469238
    8. '(ans' → logprob: -8.805951118469238
    9. 'print' → logprob: -8.930951118469238
    10. '
' → logprob: -9.680951118469238

Token 290: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.011048882268369198
    2. ' g' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.261049270629883
    4. '	g' → logprob: -15.386049270629883
    5. '(g' → logprob: -16.136049270629883
    6. ' ' → logprob: -16.261049270629883
    7. '<|end|>' → logprob: -16.511049270629883
    8. '
' → logprob: -16.761049270629883
    9. '   ' → logprob: -16.886049270629883
    10. '1' → logprob: -17.011049270629883

Token 291: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.894790981779806e-05
    2. '(' → logprob: -10.000048637390137
    3. ' (' → logprob: -13.125048637390137
    4. '(
' → logprob: -13.750048637390137
    5. 'r' → logprob: -15.000048637390137
    6. '(c' → logprob: -17.375049591064453
    7. '```' → logprob: -18.875049591064453
    8. '
' → logprob: -19.000049591064453
    9. '(s' → logprob: -19.250049591064453
    10. '((' → logprob: -19.875049591064453

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. '2' → logprob: -11.375011444091797
    3. ' ' → logprob: -15.875011444091797
    4. ',' → logprob: -16.875011444091797
    5. '   ' → logprob: -17.875011444091797
    6. 'r' → logprob: -18.062511444091797
    7. 'c' → logprob: -18.187511444091797
    8. '0' → logprob: -18.250011444091797
    9. 'def' → logprob: -18.687511444091797
    10. ')' → logprob: -18.875011444091797

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001010184409096837
    2. ' ,' → logprob: -8.251009941101074
    3. ',r' → logprob: -8.376009941101074
    4. '(r' → logprob: -8.501009941101074
    5. ',c' → logprob: -8.501009941101074
    6. '(c' → logprob: -9.876009941101074
    7. '(' → logprob: -10.126009941101074
    8. 'c' → logprob: -11.876009941101074
    9. 'r' → logprob: -12.501009941101074
    10. '-' → logprob: -12.751009941101074

Token 294: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00014191943046171218
    2. ' r' → logprob: -8.875142097473145
    3. 'c' → logprob: -13.250142097473145
    4. '   ' → logprob: -16.375141143798828
    5. '	r' → logprob: -16.500141143798828
    6. '2' → logprob: -17.125141143798828
    7. ' ' → logprob: -17.500141143798828
    8. 'g' → logprob: -18.125141143798828
    9. '_r' → logprob: -18.500141143798828
    10. ',r' → logprob: -18.500141143798828

Token 295: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010578181827440858
    2. 'c' → logprob: -6.8760576248168945
    3. '2' → logprob: -11.001057624816895
    4. ',' → logprob: -12.626057624816895
    5. '   ' → logprob: -14.251057624816895
    6. ' ' → logprob: -14.376057624816895
    7. ' c' → logprob: -14.751057624816895
    8. ',c' → logprob: -14.751057624816895
    9. ')' → logprob: -15.063557624816895
    10. 'f' → logprob: -15.188557624816895

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000527534110005945
    2. ',c' → logprob: -7.750527381896973
    3. ' ,' → logprob: -9.500527381896973
    4. 'c' → logprob: -11.125527381896973
    5. ' c' → logprob: -12.375527381896973
    6. '(c' → logprob: -13.125527381896973
    7. ',
' → logprob: -14.500527381896973
    8. '(' → logprob: -14.875527381896973
    9. '`,' → logprob: -17.37552833557129
    10. ' ' → logprob: -17.87552833557129

Token 297: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.0100624169572257e-05
    2. ' c' → logprob: -10.875020027160645
    3. '   ' → logprob: -13.750020027160645
    4. '(c' → logprob: -16.50002098083496
    5. '	c' → logprob: -18.00002098083496
    6. ' ' → logprob: -18.25002098083496
    7. '  ' → logprob: -18.37502098083496
    8. '%c' → logprob: -19.87502098083496
    9. ')c' → logprob: -20.25002098083496
    10. '    ' → logprob: -21.00002098083496

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.375
    3. '```' → logprob: -19.5
    4. ')' → logprob: -20.125
    5. '１' → logprob: -20.625
    6. '
' → logprob: -20.6875
    7. '۱' → logprob: -21.0
    8. '১' → logprob: -21.5625
    9. '१' → logprob: -21.5625
    10. '``' → logprob: -21.75

Token 299: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7317103147506714
    2. '-' → logprob: -0.9817103147506714
    3. ' -' → logprob: -1.9817103147506714
    4. '+' → logprob: -5.481710433959961
    5. ' +' → logprob: -6.356710433959961
    6. '   ' → logprob: -8.731710433959961
    7. ' ' → logprob: -9.106710433959961
    8. ' )' → logprob: -9.231710433959961
    9. '1' → logprob: -9.981710433959961
    10. ')+' → logprob: -9.981710433959961

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017243190086446702
    2. ')' → logprob: -9.37517261505127
    3. '+' → logprob: -9.50017261505127
    4. ' ' → logprob: -11.50017261505127
    5. '0' → logprob: -14.25017261505127
    6. '```' → logprob: -14.62517261505127
    7. ' +' → logprob: -14.87517261505127
    8. '2' → logprob: -15.12517261505127
    9. ')+' → logprob: -15.50017261505127
    10. '<|end|>' → logprob: -15.50017261505127

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ')' → logprob: -11.87501335144043
    3. '0' → logprob: -12.50001335144043
    4. ' ' → logprob: -13.87501335144043
    5. '+' → logprob: -15.00001335144043
    6. 'ans' → logprob: -15.00001335144043
    7. 'abs' → logprob: -15.37501335144043
    8. '2' → logprob: -15.87501335144043
    9. '```' → logprob: -16.00001335144043
    10. '),' → logprob: -17.06251335144043

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007791632786393166
    2. ')
' → logprob: -4.882791519165039
    3. ')%' → logprob: -9.007791519165039
    4. '+' → logprob: -9.882791519165039
    5. ' )' → logprob: -12.257791519165039
    6. ')+' → logprob: -13.757791519165039
    7. ')
' → logprob: -13.882791519165039
    8. '```' → logprob: -13.882791519165039
    9. '")' → logprob: -14.257791519165039
    10. '')' → logprob: -14.382791519165039

Token 303: 'print' (ID: 1598)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004551884718239307
    2. 'print' → logprob: -5.754551887512207
    3. '
' → logprob: -7.254551887512207
    4. '```' → logprob: -7.504551887512207
    5. ' ans' → logprob: -9.504551887512207
    6. '(ans' → logprob: -10.504551887512207
    7. '``' → logprob: -12.629551887512207
    8. '\n' → logprob: -12.754551887512207
    9. '\' → logprob: -13.004551887512207
    10. 'if' → logprob: -13.379551887512207

Token 304: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06431776285171509
    2. '((' → logprob: -2.8143177032470703
    3. '(' → logprob: -6.06431770324707
    4. '(abs' → logprob: -10.93931770324707
    5. 'ans' → logprob: -12.81431770324707
    6. '(max' → logprob: -14.18931770324707
    7. ' (' → logprob: -14.18931770324707
    8. '(answer' → logprob: -14.68931770324707
    9. '(
' → logprob: -15.18931770324707
    10. '(pow' → logprob: -16.06431770324707

Token 305: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.012540729716420174
    2. ' %' → logprob: -4.387540817260742
    3. ')' → logprob: -10.512540817260742
    4. '%B' → logprob: -13.637540817260742
    5. '%A' → logprob: -14.387540817260742
    6. ')%' → logprob: -14.512540817260742
    7. '%D' → logprob: -14.887540817260742
    8. ' ' → logprob: -14.887540817260742
    9. '%s' → logprob: -15.512540817260742
    10. '%c' → logprob: -16.137540817260742

Token 306: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.836499985889532e-05
    2. ' MOD' → logprob: -9.7500581741333
    3. '_MOD' → logprob: -20.500059127807617
    4. '.MOD' → logprob: -20.500059127807617
    5. '(M' → logprob: -20.750059127807617
    6. 'MO' → logprob: -21.000059127807617
    7. '```' → logprob: -21.750059127807617
    8. '10' → logprob: -21.750059127807617
    9. ' ' → logprob: -22.375059127807617
    10. '(' → logprob: -22.625059127807617

Token 307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -16.5
    4. '))' → logprob: -18.25
    5. ')`' → logprob: -19.0
    6. '')' → logprob: -20.875
    7. ').' → logprob: -21.0
    8. '),' → logprob: -21.0
    9. '())' → logprob: -21.125
    10. ')}' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 305
Tokens correctement prédits (1ère position, stricte): 133
Tokens correctement prédits (1ère position, avec adaptation): 137
Tokens correctement prédits (top 10): 272
Précision stricte (1ère position): 43.61%
Précision adaptée (1ère position): 44.92%
Précision (top 10): 89.18%
================================================================================
