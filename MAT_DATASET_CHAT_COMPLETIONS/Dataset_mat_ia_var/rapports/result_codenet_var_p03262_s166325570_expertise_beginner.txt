================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_x = input().split()
n = int(n_x[0])
x = int(n_x[1])
pos = input().split()
positions = []
for i in pos:
    positions.append(int(i))
positions.append(x)
for i in range(len(positions)):
    positions[i] = positions[i] - x

differences = []
positions.sort()
for i in range(1, len(positions)):
    differences.append(abs(positions[i] - positions[i-1]))

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def gcd_list(numbers):
    result = numbers[0]
    for i in range(1, len(numbers)):
        result = gcd(result, numbers[i])
    return result

print(gcd_list(differences))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_x' (ID: 7054)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4572853744029999
    2. '10' → logprob: -1.2072854042053223
    3. '5' → logprob: -3.9572854042053223
    4. '32' → logprob: -4.457285404205322
    5. '16' → logprob: -4.457285404205322
    6. '100' → logprob: -5.082285404205322
    7. '64' → logprob: -5.707285404205322
    8. '1' → logprob: -5.957285404205322
    9. '3' → logprob: -5.957285404205322
    10. '4' → logprob: -6.082285404205322

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005652636755257845
    2. ''' → logprob: -6.13065242767334
    3. '('' → logprob: -6.25565242767334
    4. '"' → logprob: -7.13065242767334
    5. '("("' → logprob: -8.25565242767334
    6. '[' → logprob: -8.63065242767334
    7. '(
' → logprob: -8.88065242767334
    8. '_' → logprob: -10.25565242767334
    9. '.' → logprob: -11.38065242767334
    10. '`' → logprob: -11.50565242767334

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.668316125869751
    2. '+' → logprob: -1.043316125869751
    3. '_' → logprob: -2.793316125869751
    4. '*' → logprob: -4.168315887451172
    5. '(' → logprob: -4.418315887451172
    6. '.strip' → logprob: -4.418315887451172
    7. '=' → logprob: -4.543315887451172
    8. ')' → logprob: -4.793315887451172
    9. '**' → logprob: -5.793315887451172
    10. ' ' → logprob: -5.918315887451172

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003255719493608922
    2. '()' → logprob: -8.750325202941895
    3. '('' → logprob: -10.375325202941895
    4. '(
' → logprob: -10.375325202941895
    5. '("("' → logprob: -10.625325202941895
    6. '(

' → logprob: -10.875325202941895
    7. '"' → logprob: -11.000325202941895
    8. '`' → logprob: -11.250325202941895
    9. '((' → logprob: -11.750325202941895
    10. '```' → logprob: -12.000325202941895

Token 7: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09403509646654129
    2. '.' → logprob: -3.0940351486206055
    3. '=' → logprob: -3.8440351486206055
    4. ' =' → logprob: -4.8440351486206055
    5. '[n' → logprob: -5.2190351486206055
    6. 'n' → logprob: -6.2190351486206055
    7. '[:]' → logprob: -6.4690351486206055
    8. '_' → logprob: -6.8440351486206055
    9. '#' → logprob: -7.3440351486206055
    10. '[int' → logprob: -7.5940351486206055

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20816197991371155
    2. '_x' → logprob: -2.3331620693206787
    3. '[' → logprob: -2.4581620693206787
    4. '_[' → logprob: -6.2081618309021
    5. '[_' → logprob: -6.2081618309021
    6. '_)' → logprob: -8.083162307739258
    7. '_n' → logprob: -8.208162307739258
    8. '_]' → logprob: -9.583162307739258
    9. '_
' → logprob: -9.833162307739258
    10. '[n' → logprob: -9.833162307739258

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20610813796520233
    2. ' int' → logprob: -1.7061080932617188
    3. 'len' → logprob: -5.706108093261719
    4. ' len' → logprob: -6.706108093261719
    5. ' n' → logprob: -9.581108093261719
    6. '0' → logprob: -10.706108093261719
    7. 'n' → logprob: -10.831108093261719
    8. '[int' → logprob: -11.456108093261719
    9. ' ' → logprob: -12.206108093261719
    10. 'float' → logprob: -13.456108093261719

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04364472255110741
    2. '(n' → logprob: -3.168644666671753
    3. '('' → logprob: -7.918644905090332
    4. '("("' → logprob: -8.543644905090332
    5. '("' → logprob: -11.168644905090332
    6. '```' → logprob: -11.293644905090332
    7. 'n' → logprob: -11.793644905090332
    8. '()' → logprob: -12.043644905090332
    9. '((' → logprob: -12.293644905090332
    10. ''' → logprob: -12.418644905090332

Token 11: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.009213138371706009
    2. '[' → logprob: -4.759212970733643
    3. '_n' → logprob: -9.0092134475708
    4. ')' → logprob: -9.3842134475708
    5. '_[' → logprob: -9.3842134475708
    6. ')_' → logprob: -9.6342134475708
    7. '_' → logprob: -10.0092134475708
    8. '_s' → logprob: -10.3842134475708
    9. '[_' → logprob: -10.5092134475708
    10. 'x' → logprob: -10.6342134475708

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. ')' → logprob: -12.250008583068848
    3. '[n' → logprob: -13.250008583068848
    4. '[
' → logprob: -14.000008583068848
    5. '```' → logprob: -15.000008583068848
    6. ' [' → logprob: -15.125008583068848
    7. '   ' → logprob: -15.875008583068848
    8. '['' → logprob: -16.000009536743164
    9. '\[' → logprob: -16.000009536743164
    10. '[x' → logprob: -16.750009536743164

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.134509021649137e-05
    2. '1' → logprob: -9.75006103515625
    3. ' ' → logprob: -12.75006103515625
    4. ')' → logprob: -16.37506103515625
    5. ''' → logprob: -16.75006103515625
    6. '```' → logprob: -17.37506103515625
    7. '])' → logprob: -17.75006103515625
    8. ']' → logprob: -17.75006103515625
    9. '`' → logprob: -17.87506103515625
    10. '   ' → logprob: -18.37506103515625

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4777699410915375
    2. '])' → logprob: -0.9777699708938599
    3. ']' → logprob: -5.72776985168457
    4. ')])' → logprob: -8.60276985168457
    5. ')]' → logprob: -8.72776985168457
    6. ''])' → logprob: -11.10276985168457
    7. '[' → logprob: -11.10276985168457
    8. ')n' → logprob: -11.35276985168457
    9. ' ])' → logprob: -11.97776985168457
    10. ')
' → logprob: -11.97776985168457

Token 15: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07823948562145233
    2. 'n' → logprob: -2.8282394409179688
    3. ')' → logprob: -5.578239440917969
    4. '_' → logprob: -5.703239440917969
    5. ' ' → logprob: -6.078239440917969
    6. ' x' → logprob: -6.578239440917969
    7. '<|end|>' → logprob: -6.578239440917969
    8. '_x' → logprob: -6.703239440917969
    9. '```' → logprob: -7.328239440917969
    10. '#' → logprob: -7.953239440917969

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6772105693817139
    2. ' =' → logprob: -0.8022105693817139
    3. '_' → logprob: -3.177210569381714
    4. ')' → logprob: -6.802210807800293
    5. '_space' → logprob: -8.552210807800293
    6. '_=' → logprob: -8.927210807800293
    7. '=int' → logprob: -9.552210807800293
    8. '[' → logprob: -9.677210807800293
    9. 'space' → logprob: -10.177210807800293
    10. ',' → logprob: -10.177210807800293

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38708266615867615
    2. ' int' → logprob: -1.1370826959609985
    3. ' n' → logprob: -8.637083053588867
    4. 'n' → logprob: -10.387083053588867
    5. ' ' → logprob: -13.512083053588867
    6. '(int' → logprob: -14.387083053588867
    7. '=int' → logprob: -15.012083053588867
    8. 'float' → logprob: -15.137083053588867
    9. '0' → logprob: -15.512083053588867
    10. '[int' → logprob: -16.137083053588867

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3490501344203949
    2. '(n' → logprob: -1.2240501642227173
    3. '(x' → logprob: -7.974050045013428
    4. '("("' → logprob: -9.974050521850586
    5. '()' → logprob: -10.224050521850586
    6. '('' → logprob: -10.224050521850586
    7. '[' → logprob: -10.974050521850586
    8. ')' → logprob: -11.224050521850586
    9. ''' → logprob: -11.224050521850586
    10. 'n' → logprob: -11.349050521850586

Token 19: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.5252596464706585e-05
    2. '_' → logprob: -10.250044822692871
    3. '[' → logprob: -12.250044822692871
    4. ')' → logprob: -13.250044822692871
    5. 'x' → logprob: -13.750044822692871
    6. ' _' → logprob: -14.250044822692871
    7. ')_' → logprob: -15.375044822692871
    8. '_n' → logprob: -15.625044822692871
    9. ' ' → logprob: -15.750044822692871
    10. '```' → logprob: -15.750044822692871

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. ')' → logprob: -12.50001049041748
    3. ')[' → logprob: -12.50001049041748
    4. ' [' → logprob: -13.62501049041748
    5. '```' → logprob: -14.12501049041748
    6. '1' → logprob: -14.75001049041748
    7. '][' → logprob: -15.00001049041748
    8. '   ' → logprob: -15.37501049041748
    9. '[
' → logprob: -15.87501049041748
    10. ' ' → logprob: -16.875011444091797

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '])' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '0' → logprob: -16.25
    5. '   ' → logprob: -18.375
    6. ']' → logprob: -18.5
    7. '```' → logprob: -19.0
    8. ')' → logprob: -19.5
    9. '１' → logprob: -19.625
    10. '2' → logprob: -19.625

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -15.125000953674316
    3. '')' → logprob: -15.750000953674316
    4. '`)' → logprob: -15.875000953674316
    5. ')
' → logprob: -16.5
    6. '）' → logprob: -16.75
    7. ']' → logprob: -17.25
    8. ' )' → logprob: -17.625
    9. '),' → logprob: -17.75
    10. '()' → logprob: -17.875

Token 23: 'pos' (ID: 1103)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4912925958633423
    2. '+' → logprob: -1.6162925958633423
    3. '=' → logprob: -1.8662925958633423
    4. 'i' → logprob: -1.9912925958633423
    5. ' ' → logprob: -2.1162924766540527
    6. '#' → logprob: -3.8662924766540527
    7. '.' → logprob: -3.8662924766540527
    8. 'if' → logprob: -3.9912924766540527
    9. 'a' → logprob: -4.366292476654053
    10. 'n' → logprob: -4.616292476654053

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5460464954376221
    2. '_' → logprob: -1.296046495437622
    3. ' ' → logprob: -2.671046495437622
    4. ')' → logprob: -3.296046495437622
    5. '=' → logprob: -3.546046495437622
    6. '[' → logprob: -5.296046257019043
    7. '(' → logprob: -6.671046257019043
    8. ' )' → logprob: -6.671046257019043
    9. ']' → logprob: -7.046046257019043
    10. ''' → logprob: -7.171046257019043

Token 25: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6072389483451843
    2. ' ' → logprob: -0.9822389483451843
    3. ' int' → logprob: -3.232239007949829
    4. ' input' → logprob: -4.35723876953125
    5. 'int' → logprob: -4.48223876953125
    6. ' n' → logprob: -4.60723876953125
    7. 'input' → logprob: -5.73223876953125
    8. ' x' → logprob: -5.98223876953125
    9. 'x' → logprob: -7.73223876953125
    10. ' []' → logprob: -8.35723876953125

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013665052130818367
    2. '(' → logprob: -4.513665199279785
    3. '().' → logprob: -6.013665199279785
    4. '())' → logprob: -10.513665199279785
    5. ' ()' → logprob: -10.763665199279785
    6. ')' → logprob: -11.263665199279785
    7. '()

' → logprob: -11.388665199279785
    8. '('' → logprob: -11.638665199279785
    9. '()]' → logprob: -11.763665199279785
    10. '.' → logprob: -11.763665199279785

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.38694697618484497
    2. 'strip' → logprob: -1.1369469165802002
    3. 'rstrip' → logprob: -9.886946678161621
    4. 'read' → logprob: -11.011946678161621
    5. ' split' → logprob: -12.636946678161621
    6. 'isdigit' → logprob: -13.261946678161621
    7. 'startswith' → logprob: -14.136946678161621
    8. 'replace' → logprob: -14.636946678161621
    9. 'int' → logprob: -14.761946678161621
    10. 'index' → logprob: -14.886946678161621

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02791590616106987
    2. '(' → logprob: -3.6529159545898438
    3. '('' → logprob: -7.152915954589844
    4. '()[' → logprob: -8.652915954589844
    5. '("("' → logprob: -8.652915954589844
    6. '().' → logprob: -8.777915954589844
    7. '"' → logprob: -9.777915954589844
    8. ''' → logprob: -10.277915954589844
    9. '`()' → logprob: -10.277915954589844
    10. '()`' → logprob: -10.777915954589844

Token 29: 'positions' (ID: 32297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6758608818054199
    2. 'pos' → logprob: -1.80086088180542
    3. '[pos' → logprob: -2.05086088180542
    4. '(' → logprob: -2.30086088180542
    5. '<|end|>' → logprob: -4.05086088180542
    6. 'n' → logprob: -4.30086088180542
    7. '[int' → logprob: -4.30086088180542
    8. ')' → logprob: -4.42586088180542
    9. 'p' → logprob: -4.42586088180542
    10. '[p' → logprob: -5.05086088180542

Token 30: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004718960728496313
    2. '=' → logprob: -6.504718780517578
    3. '[int' → logprob: -6.879718780517578
    4. '_' → logprob: -7.254718780517578
    5. '=[' → logprob: -8.254718780517578
    6. ')' → logprob: -8.254718780517578
    7. '_positions' → logprob: -8.629718780517578
    8. ']' → logprob: -9.629718780517578
    9. 's' → logprob: -9.879718780517578
    10. ' =' → logprob: -9.879718780517578

Token 31: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2109665870666504
    2. ' list' → logprob: -1.4609665870666504
    3. '[list' → logprob: -2.0859665870666504
    4. ' [' → logprob: -2.2109665870666504
    5. '[pos' → logprob: -2.3359665870666504
    6. '[' → logprob: -2.7109665870666504
    7. '[]' → logprob: -3.3359665870666504
    8. ' []' → logprob: -3.9609665870666504
    9. '[int' → logprob: -4.21096658706665
    10. '[len' → logprob: -7.08596658706665

Token 32: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00157771329395473
    2. 'positions' → logprob: -7.001577854156494
    3. ' for' → logprob: -7.876577854156494
    4. ')' → logprob: -9.001577377319336
    5. '(' → logprob: -9.876577377319336
    6. 'pos' → logprob: -10.251577377319336
    7. '[' → logprob: -10.376577377319336
    8. '[int' → logprob: -11.626577377319336
    9. '[pos' → logprob: -11.751577377319336
    10. '```' → logprob: -12.251577377319336

Token 33: ' i' (ID: 575)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4997250735759735
    2. ' i' → logprob: -0.9997251033782959
    3. ' _' → logprob: -3.999725103378296
    4. '_' → logprob: -6.124724864959717
    5. 'i' → logprob: -6.499724864959717
    6. ' pos' → logprob: -6.499724864959717
    7. 'p' → logprob: -7.124724864959717
    8. ' ' → logprob: -7.999724864959717
    9. ' position' → logprob: -8.374725341796875
    10. ' ' → logprob: -9.499725341796875

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03463153913617134
    2. 'in' → logprob: -3.6596314907073975
    3. ' ' → logprob: -5.284631729125977
    4. 'n' → logprob: -6.534631729125977
    5. ' n' → logprob: -6.909631729125977
    6. '  ' → logprob: -7.534631729125977
    7. '	in' → logprob: -9.534631729125977
    8. '_' → logprob: -9.659631729125977
    9. '   ' → logprob: -10.409631729125977
    10. ' _' → logprob: -11.034631729125977

Token 35: ' pos' (ID: 1253)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0377572774887085
    2. 'range' → logprob: -1.1627572774887085
    3. 'pos' → logprob: -1.4127572774887085
    4. ' pos' → logprob: -2.412757396697998
    5. 'positions' → logprob: -10.28775691986084
    6. ' positions' → logprob: -10.66275691986084
    7. ' ' → logprob: -11.66275691986084
    8. 'p' → logprob: -12.41275691986084
    9. ' xrange' → logprob: -13.03775691986084
    10. '	pos' → logprob: -13.16275691986084

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04422985017299652
    2. ' in' → logprob: -4.169229984283447
    3. '[:' → logprob: -5.294229984283447
    4. '):' → logprob: -5.294229984283447
    5. '[:]' → logprob: -5.294229984283447
    6. ' :' → logprob: -5.544229984283447
    7. '[' → logprob: -6.294229984283447
    8. 'in' → logprob: -6.294229984283447
    9. ']:' → logprob: -6.544229984283447
    10. ')' → logprob: -7.419229984283447

Token 37: '   ' (ID: 271)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.14633691310882568
    2. '   ' → logprob: -2.0213370323181152
    3. 'positions' → logprob: -5.646337032318115
    4. '.positions' → logprob: -9.646336555480957
    5. '```' → logprob: -11.146336555480957
    6. '_positions' → logprob: -11.271336555480957
    7. '    
' → logprob: -11.896336555480957
    8. ' ' → logprob: -12.771336555480957
    9. ' if' → logprob: -12.771336555480957
    10. ' posiciones' → logprob: -12.958836555480957

Token 38: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.428715318441391
    2. 'positions' (adapté à ' positions') → logprob: -1.0537153482437134
    3. '.positions' → logprob: -12.053715705871582
    4. '_positions' → logprob: -13.053715705871582
    5. '   ' → logprob: -13.428715705871582
    6. 'position' → logprob: -13.553715705871582
    7. '```' → logprob: -13.678715705871582
    8. 'pos' → logprob: -14.428715705871582
    9. ' posiciones' → logprob: -14.928715705871582
    10. 'int' → logprob: -14.928715705871582

Token 39: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019395847339183092
    2. '.' → logprob: -6.25193977355957
    3. '.add' → logprob: -12.62693977355957
    4. '.app' → logprob: -13.37693977355957
    5. '.push' → logprob: -13.37693977355957
    6. '.extend' → logprob: -13.75193977355957
    7. ' .' → logprob: -14.37693977355957
    8. '.ap' → logprob: -14.62693977355957
    9. '.insert' → logprob: -14.87693977355957
    10. ').' → logprob: -15.00193977355957

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007111863698810339
    2. '(' → logprob: -5.3821120262146
    3. '(i' → logprob: -6.0071120262146
    4. '((' → logprob: -11.007111549377441
    5. 'int' → logprob: -12.257111549377441
    6. '(in' → logprob: -13.257111549377441
    7. '(float' → logprob: -14.132111549377441
    8. '[int' → logprob: -14.257111549377441
    9. '(
' → logprob: -14.632111549377441
    10. '(eval' → logprob: -14.632111549377441

Token 41: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.008615515194833279
    2. '(' → logprob: -4.758615493774414
    3. ')' → logprob: -15.383615493774414
    4. ' (' → logprob: -15.508615493774414
    5. '(
' → logprob: -15.508615493774414
    6. ')(' → logprob: -15.883615493774414
    7. '(x' → logprob: -15.883615493774414
    8. '((' → logprob: -17.133615493774414
    9. '()' → logprob: -17.383615493774414
    10. '(I' → logprob: -17.633615493774414

Token 42: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011068218387663364
    2. ')' → logprob: -4.511068344116211
    3. ')))' → logprob: -11.386068344116211
    4. '))
' → logprob: -12.011068344116211
    5. ''))' → logprob: -13.386068344116211
    6. ')
' → logprob: -14.511068344116211
    7. ' ))' → logprob: -15.511068344116211
    8. '))

' → logprob: -15.761068344116211
    9. '"))' → logprob: -15.761068344116211
    10. '),' → logprob: -16.01106834411621

Token 43: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.05066079646348953
    2. 'for' → logprob: -4.550660610198975
    3. 'n' → logprob: -4.800660610198975
    4. 'pos' → logprob: -5.425660610198975
    5. 'max' → logprob: -5.550660610198975
    6. '#' → logprob: -6.175660610198975
    7. '```' → logprob: -6.300660610198975
    8. 'print' → logprob: -6.550660610198975
    9. 'p' → logprob: -6.550660610198975
    10. 'sorted' → logprob: -6.550660610198975

Token 44: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.578433632850647
    2. '(x' → logprob: -0.828433632850647
    3. '(-' → logprob: -6.453433513641357
    4. '(len' → logprob: -7.828433513641357
    5. '(n' → logprob: -8.078433990478516
    6. '((' → logprob: -9.453433990478516
    7. '(max' → logprob: -9.703433990478516
    8. '(None' → logprob: -11.078433990478516
    9. '(pos' → logprob: -11.453433990478516
    10. '()' → logprob: -11.578433990478516

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.250003814697266
    4. '))' → logprob: -14.875003814697266
    5. '+' → logprob: -15.625003814697266
    6. ')return' → logprob: -17.375003814697266
    7. ')#' → logprob: -17.750003814697266
    8. ')`' → logprob: -17.750003814697266
    9. ')))' → logprob: -17.875003814697266
    10. '),' → logprob: -18.250003814697266

Token 47: 'for' (ID: 1938)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.03484327718615532
    2. '\n' → logprob: -4.534843444824219
    3. ' positions' → logprob: -4.659843444824219
    4. ')' → logprob: -5.284843444824219
    5. '.positions' → logprob: -5.409843444824219
    6. '```' → logprob: -6.659843444824219
    7. '_positions' → logprob: -7.159843444824219
    8. '<|end|>' → logprob: -7.409843444824219
    9. '
' → logprob: -7.784843444824219
    10. '.' → logprob: -8.284843444824219

Token 48: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12668205797672272
    2. ' ' → logprob: -2.3766820430755615
    3. ' _' → logprob: -4.001682281494141
    4. '_' → logprob: -5.251682281494141
    5. 'i' → logprob: -7.001682281494141
    6. ' p' → logprob: -7.126682281494141
    7. ' x' → logprob: -8.25168228149414
    8. ' pos' → logprob: -8.75168228149414
    9. ' n' → logprob: -9.37668228149414
    10. '  ' → logprob: -9.50168228149414

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04076242446899414
    2. 'in' → logprob: -3.415762424468994
    3. ' ' → logprob: -5.165762424468994
    4. '  ' → logprob: -7.415762424468994
    5. '_' → logprob: -7.790762424468994
    6. '   ' → logprob: -9.915761947631836
    7. 'n' → logprob: -9.915761947631836
    8. ',' → logprob: -10.290761947631836
    9. '	in' → logprob: -10.415761947631836
    10. ' n' → logprob: -10.665761947631836

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03831757605075836
    2. 'range' → logprob: -3.2883176803588867
    3. ' positions' → logprob: -8.788317680358887
    4. ' ' → logprob: -10.288317680358887
    5. '	range' → logprob: -10.788317680358887
    6. 'positions' → logprob: -10.913317680358887
    7. ' xrange' → logprob: -11.413317680358887
    8. '  ' → logprob: -11.663317680358887
    9. ' sorted' → logprob: -11.913317680358887
    10. '   ' → logprob: -12.163317680358887

Token 51: '(len' (ID: 14990)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.695061981678009
    2. '(' → logprob: -0.945061981678009
    3. '(len' → logprob: -2.1950619220733643
    4. '(x' → logprob: -7.070062160491943
    5. ' (' → logprob: -10.070061683654785
    6. '((' → logprob: -11.445061683654785
    7. '(length' → logprob: -11.570061683654785
    8. '(l' → logprob: -11.945061683654785
    9. '(
' → logprob: -12.445061683654785
    10. '(s' → logprob: -12.445061683654785

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.543733904138207e-05
    2. ' (' → logprob: -10.12509536743164
    3. 'positions' → logprob: -10.25009536743164
    4. '(pos' → logprob: -11.50009536743164
    5. '(x' → logprob: -13.00009536743164
    6. ')' → logprob: -14.00009536743164
    7. '(position' → logprob: -14.12509536743164
    8. ' positions' → logprob: -14.12509536743164
    9. '(n' → logprob: -14.50009536743164
    10. '(points' → logprob: -14.62509536743164

Token 53: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.020773811265826225
    2. '(' → logprob: -4.520773887634277
    3. ' positions' → logprob: -4.645773887634277
    4. 'pos' → logprob: -9.895773887634277
    5. ')' → logprob: -12.145773887634277
    6. 'posit' → logprob: -12.520773887634277
    7. 'position' → logprob: -12.520773887634277
    8. '(pos' → logprob: -13.145773887634277
    9. '.positions' → logprob: -13.270773887634277
    10. 'Positions' → logprob: -13.395773887634277

Token 54: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22656680643558502
    2. ')-' → logprob: -1.7265667915344238
    3. ')):' → logprob: -4.226566791534424
    4. '-' → logprob: -4.851566791534424
    5. ' -' → logprob: -6.851566791534424
    6. '))' → logprob: -6.976566791534424
    7. ' )' → logprob: -8.476567268371582
    8. '-)' → logprob: -9.726567268371582
    9. ')):
' → logprob: -10.476567268371582
    10. ' ))' → logprob: -10.601567268371582

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18372035026550293
    2. ':' → logprob: -2.933720350265503
    3. ' ' → logprob: -2.933720350265503
    4. ' :' → logprob: -4.308720588684082
    5. '-' → logprob: -4.433720588684082
    6. '    ' → logprob: -4.683720588684082
    7. '):' → logprob: -5.058720588684082
    8. ' -' → logprob: -5.308720588684082
    9. ')' → logprob: -5.558720588684082
    10. ' for' → logprob: -6.558720588684082

Token 56: ' positions' (ID: 15897)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3961959481239319
    2. 'for' → logprob: -1.396195888519287
    3. '   ' → logprob: -3.271195888519287
    4. ' if' → logprob: -3.896195888519287
    5. 'if' → logprob: -4.771195888519287
    6. ' positions' → logprob: -5.396195888519287
    7. 'positions' (adapté à ' positions') → logprob: -5.646195888519287
    8. 'range' → logprob: -5.896195888519287
    9. ' range' → logprob: -6.771195888519287
    10. ' ' → logprob: -8.021196365356445

Token 57: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11408599466085434
    2. '[i' → logprob: -2.2390859127044678
    3. '<|end|>' → logprob: -6.864086151123047
    4. '.sort' → logprob: -10.239086151123047
    5. '[++' → logprob: -10.614086151123047
    6. '```' → logprob: -10.989086151123047
    7. '[min' → logprob: -11.364086151123047
    8. '[int' → logprob: -11.489086151123047
    9. '<|end|>' → logprob: -11.489086151123047
    10. '[:]' → logprob: -11.614086151123047

Token 58: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2174779176712036
    2. ' )' → logprob: -1.9674779176712036
    3. ' <=' → logprob: -3.842477798461914
    4. '+' → logprob: -3.842477798461914
    5. ']' → logprob: -5.717477798461914
    6. '>' → logprob: -6.342477798461914
    7. '<=' → logprob: -6.717477798461914
    8. ' <' → logprob: -6.842477798461914
    9. ' >' → logprob: -7.217477798461914
    10. ' +=' → logprob: -7.217477798461914

Token 59: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8181257247924805
    2. '=' → logprob: -1.0681257247924805
    3. ' =' → logprob: -2.4431257247924805
    4. '+=' → logprob: -2.5681257247924805
    5. '+' → logprob: -4.3181257247924805
    6. ' <=' → logprob: -4.3181257247924805
    7. ' *=' → logprob: -5.0681257247924805
    8. '>' → logprob: -5.6931257247924805
    9. '<=' → logprob: -5.8181257247924805
    10. ' >=' → logprob: -6.0681257247924805

Token 60: ' positions' (ID: 15897)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24465946853160858
    2. ' int' → logprob: -2.369659423828125
    3. 'abs' → logprob: -2.869659423828125
    4. 'positions' → logprob: -3.244659423828125
    5. ' positions' → logprob: -4.494659423828125
    6. ' abs' → logprob: -4.619659423828125
    7. 'sorted' → logprob: -5.869659423828125
    8. 'float' → logprob: -6.119659423828125
    9. ' sorted' → logprob: -7.869659423828125
    10. ' float' → logprob: -7.869659423828125

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025764419115148485
    2. '[' → logprob: -8.75025749206543
    3. 'positions' → logprob: -9.50025749206543
    4. ' positions' → logprob: -12.37525749206543
    5. 'sort' → logprob: -12.50025749206543
    6. 'sorted' → logprob: -13.00025749206543
    7. '_positions' → logprob: -13.12525749206543
    8. '[int' → logprob: -13.50025749206543
    9. ' [' → logprob: -13.62525749206543
    10. '[min' → logprob: -13.87525749206543

Token 62: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.129643976688385
    2. ' -' → logprob: -2.8796439170837402
    3. ')' → logprob: -3.5046439170837402
    4. '+' → logprob: -3.6296439170837402
    5. '*' → logprob: -6.37964391708374
    6. '<|end|>' → logprob: -6.37964391708374
    7. '.replace' → logprob: -6.87964391708374
    8. ' if' → logprob: -7.00464391708374
    9. ' ' → logprob: -7.12964391708374
    10. 'if' → logprob: -7.87964391708374

Token 63: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34859317541122437
    2. '<|end|>' → logprob: -1.7235932350158691
    3. ' -' → logprob: -2.598593235015869
    4. '+' → logprob: -3.848593235015869
    5. '*' → logprob: -4.223593235015869
    6. ' ' → logprob: -6.098593235015869
    7. ' *' → logprob: -6.473593235015869
    8. ' +' → logprob: -8.223592758178711
    9. 'positions' → logprob: -8.473592758178711
    10. '<|end|>' → logprob: -8.473592758178711

Token 64: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5854085683822632
    2. 'x' → logprob: -1.0854085683822632
    3. 'positions' → logprob: -2.4604086875915527
    4. ' x' → logprob: -4.585408687591553
    5. 'i' → logprob: -5.835408687591553
    6. ' ' → logprob: -6.085408687591553
    7. ' positions' → logprob: -6.710408687591553
    8. 'pos' → logprob: -7.460408687591553
    9. '(x' → logprob: -7.460408687591553
    10. '0' → logprob: -7.710408687591553

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: 'dif' (ID: 92027)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.005394434090703726
    2. 'ference' → logprob: -5.505394458770752
    3. 'fs' → logprob: -6.880394458770752
    4. 'fer' → logprob: -8.880393981933594
    5. 'f' → logprob: -9.130393981933594
    6. '=' → logprob: -11.130393981933594
    7. ' =' → logprob: -11.880393981933594
    8. 's' → logprob: -12.505393981933594
    9. '_' → logprob: -12.755393981933594
    10. '-' → logprob: -13.005393981933594

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387336790561676
    2. '=' → logprob: -1.1373367309570312
    3. '=[]' → logprob: -8.137336730957031
    4. 's' → logprob: -9.887336730957031
    5. '[' → logprob: -9.887336730957031
    6. '[:]' → logprob: -10.887336730957031
    7. ' ' → logprob: -11.762336730957031
    8. '.append' → logprob: -11.887336730957031
    9. '.' → logprob: -11.887336730957031
    10. '_' → logprob: -12.012336730957031

Token 69: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17578193545341492
    2. '[' → logprob: -2.0507819652557373
    3. ' []' → logprob: -4.175781726837158
    4. ' [' → logprob: -4.925781726837158
    5. 'sorted' → logprob: -5.050781726837158
    6. '[len' → logprob: -6.925781726837158
    7. '[max' → logprob: -7.175781726837158
    8. 'positions' → logprob: -7.550781726837158
    9. '[]
' → logprob: -8.050782203674316
    10. ' sorted' → logprob: -8.300782203674316

Token 70: 'positions' (ID: 32297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031298257410526276
    2. 'positions' → logprob: -3.5312981605529785
    3. 'dif' → logprob: -6.5312981605529785
    4. 'pos' → logprob: -11.031298637390137
    5. ' for' → logprob: -11.156298637390137
    6. '```' → logprob: -11.406298637390137
    7. 'prev' → logprob: -11.531298637390137
    8. '[' → logprob: -11.781298637390137
    9. 'if' → logprob: -11.906298637390137
    10. 'sorted' → logprob: -12.156298637390137

Token 71: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.011234559118747711
    2. '.append' → logprob: -5.386234760284424
    3. '<|end|>' → logprob: -5.886234760284424
    4. '.' → logprob: -6.511234760284424
    5. '[' → logprob: -7.136234760284424
    6. 'sort' → logprob: -7.636234760284424
    7. '=' → logprob: -7.636234760284424
    8. ' =' → logprob: -8.636234283447266
    9. '_sorted' → logprob: -9.261234283447266
    10. '.pop' → logprob: -9.261234283447266

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003576304006855935
    2. '(' → logprob: -8.000357627868652
    3. '()
' → logprob: -11.375357627868652
    4. ' ()' → logprob: -12.875357627868652
    5. '()

' → logprob: -13.375357627868652
    6. '();' → logprob: -13.500357627868652
    7. '()`' → logprob: -13.875357627868652
    8. '()>' → logprob: -14.375357627868652
    9. '```' → logprob: -14.500357627868652
    10. '()]' → logprob: -14.750357627868652

Token 73: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.081584716506768e-05
    2. ' for' → logprob: -11.375020980834961
    3. 'dif' → logprob: -11.625020980834961
    4. 'positions' → logprob: -15.250020980834961
    5. 'if' → logprob: -18.00002098083496
    6. '```' → logprob: -18.00002098083496
    7. '[' → logprob: -18.12502098083496
    8. 'diff' → logprob: -18.62502098083496
    9. 'prev' → logprob: -19.00002098083496
    10. '	for' → logprob: -19.87502098083496

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759796500205994
    2. 'i' → logprob: -0.8259796500205994
    3. 'range' → logprob: -11.200979232788086
    4. ' in' → logprob: -11.575979232788086
    5. ' range' → logprob: -11.825979232788086
    6. 'in' → logprob: -12.200979232788086
    7. ' ' → logprob: -13.075979232788086
    8. '	i' → logprob: -13.575979232788086
    9. 'index' → logprob: -14.075979232788086
    10. '_i' → logprob: -15.575979232788086

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0338357575237751
    2. 'in' → logprob: -3.4088356494903564
    3. ' ' → logprob: -8.908835411071777
    4. '+' → logprob: -11.158835411071777
    5. '	in' → logprob: -11.158835411071777
    6. '   ' → logprob: -11.533835411071777
    7. '  ' → logprob: -12.533835411071777
    8. 'In' → logprob: -12.908835411071777
    9. '1' → logprob: -13.033835411071777
    10. ',' → logprob: -13.033835411071777

Token 76: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868746757507324
    2. ' range' → logprob: -1.1368746757507324
    3. '(range' → logprob: -12.76187515258789
    4. ' ' → logprob: -14.76187515258789
    5. '	range' → logprob: -15.38687515258789
    6. '  ' → logprob: -17.01187515258789
    7. '   ' → logprob: -17.26187515258789
    8. ' xrange' → logprob: -17.38687515258789
    9. 'len' → logprob: -19.38687515258789
    10. '_range' → logprob: -19.88687515258789

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00861468818038702
    2. '(len' → logprob: -4.758614540100098
    3. '1' → logprob: -16.383615493774414
    4. '(
' → logprob: -16.758615493774414
    5. ' (' → logprob: -17.133615493774414
    6. 'len' → logprob: -17.883615493774414
    7. '(l' → logprob: -18.008615493774414
    8. '(

' → logprob: -18.758615493774414
    9. ' len' → logprob: -19.008615493774414
    10. ' ' → logprob: -19.758615493774414

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08962509781122208
    2. 'len' → logprob: -2.464625120162964
    3. ' len' → logprob: -7.839624881744385
    4. ' ' → logprob: -8.714625358581543
    5. '(len' → logprob: -9.464625358581543
    6. '   ' → logprob: -11.339625358581543
    7. '(' → logprob: -11.464625358581543
    8. '0' → logprob: -11.464625358581543
    9. '2' → logprob: -13.089625358581543
    10. 'n' → logprob: -13.214625358581543

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39347192645072937
    2. ',len' → logprob: -1.1434719562530518
    3. '<len' → logprob: -5.893471717834473
    4. '(len' → logprob: -6.268471717834473
    5. 'len' → logprob: -7.268471717834473
    6. ' len' → logprob: -7.643471717834473
    7. ' ,' → logprob: -7.768471717834473
    8. ' ' → logprob: -8.893471717834473
    9. '=len' → logprob: -9.643471717834473
    10. '<|end|>' → logprob: -10.018471717834473

Token 80: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006715728435665369
    2. ' len' → logprob: -5.006715774536133
    3. '(len' → logprob: -15.631715774536133
    4. '<len' → logprob: -16.756715774536133
    5. '   ' → logprob: -17.256715774536133
    6. '[len' → logprob: -17.506715774536133
    7. 'length' → logprob: -17.506715774536133
    8. ',len' → logprob: -17.506715774536133
    9. ' ' → logprob: -17.756715774536133
    10. '	len' → logprob: -17.881715774536133

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. 'positions' → logprob: -15.625
    3. '(d' → logprob: -16.75
    4. ')' → logprob: -17.75
    5. '(
' → logprob: -18.0
    6. ' (' → logprob: -18.5
    7. '(parts' → logprob: -19.75
    8. ' positions' → logprob: -20.0
    9. 'd' → logprob: -20.0
    10. '(position' → logprob: -20.125

Token 82: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0003716854262165725
    2. '(' → logprob: -8.375371932983398
    3. ' positions' → logprob: -8.875371932983398
    4. 'dif' → logprob: -14.125371932983398
    5. ')' → logprob: -15.250371932983398
    6. '.positions' → logprob: -16.0003719329834
    7. 'pos' → logprob: -16.5003719329834
    8. 'position' → logprob: -17.1253719329834
    9. 'Positions' → logprob: -17.2503719329834
    10. '_positions' → logprob: -17.5003719329834

Token 83: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7126727104187012
    2. ')):' → logprob: -0.7126727104187012
    3. ')):
' → logprob: -4.712672710418701
    4. ')' → logprob: -5.337672710418701
    5. ')):
' → logprob: -5.712672710418701
    6. '))' → logprob: -7.212672710418701
    7. '):
' → logprob: -7.337672710418701
    8. ' ' → logprob: -8.58767318725586
    9. ' ):' → logprob: -8.71267318725586
    10. ']):' → logprob: -8.71267318725586

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7421906590461731
    2. 'dif' → logprob: -0.8671906590461731
    3. ' differences' → logprob: -2.3671905994415283
    4. 'd' → logprob: -5.242190837860107
    5. ' dif' → logprob: -6.117190837860107
    6. 'diff' → logprob: -7.117190837860107
    7. ' ' → logprob: -7.992190837860107
    8. '<|end|>' → logprob: -8.36719036102295
    9. ' diferencias' → logprob: -8.86719036102295
    10. '    
' → logprob: -8.86719036102295

Token 85: ' differences' (ID: 19504)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.1542755514383316
    2. ' differences' → logprob: -2.27927565574646
    3. '   ' → logprob: -3.27927565574646
    4. 'd' → logprob: -6.154275417327881
    5. 'diff' → logprob: -7.779275417327881
    6. ' dif' → logprob: -8.904275894165039
    7. '	d' → logprob: -9.904275894165039
    8. ' d' → logprob: -10.154275894165039
    9. '```' → logprob: -10.154275894165039
    10. ' ' → logprob: -10.279275894165039

Token 86: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5760436654090881
    2. '.append' → logprob: -0.8260436654090881
    3. '.=' → logprob: -9.451044082641602
    4. '=' → logprob: -11.326044082641602
    5. ' .' → logprob: -12.826044082641602
    6. '.extend' → logprob: -13.201044082641602
    7. '.Append' → logprob: -13.326044082641602
    8. '.push' → logprob: -13.326044082641602
    9. 'append' → logprob: -13.701044082641602
    10. ' .=' → logprob: -14.201044082641602

Token 87: '(abs' (ID: 71957)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001509739668108523
    2. '(abs' → logprob: -6.501509666442871
    3. '((' → logprob: -12.376509666442871
    4. 'abs' → logprob: -13.126509666442871
    5. 'positions' → logprob: -14.126509666442871
    6. ' (' → logprob: -16.001510620117188
    7. '(
' → logprob: -16.126510620117188
    8. '(pos' → logprob: -16.626510620117188
    9. '(int' → logprob: -16.751510620117188
    10. '(

' → logprob: -18.126510620117188

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.36574100604048e-06
    2. '((' → logprob: -12.625004768371582
    3. '(d' → logprob: -14.500004768371582
    4. '(
' → logprob: -15.750004768371582
    5. '(pos' → logprob: -16.875003814697266
    6. '(

' → logprob: -17.125003814697266
    7. '(p' → logprob: -17.250003814697266
    8. ' (' → logprob: -17.250003814697266
    9. '(abs' → logprob: -17.500003814697266
    10. '(`' → logprob: -17.625003814697266

Token 89: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0011215225094929338
    2. '(' → logprob: -6.876121520996094
    3. ' positions' → logprob: -9.376121520996094
    4. '   ' → logprob: -13.376121520996094
    5. 'dif' → logprob: -14.376121520996094
    6. '.positions' → logprob: -15.001121520996094
    7. ')' → logprob: -15.126121520996094
    8. 'Positions' → logprob: -15.376121520996094
    9. 'pos' → logprob: -15.376121520996094
    10. 'position' → logprob: -15.376121520996094

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.125000953674316
    3. ')[' → logprob: -16.250001907348633
    4. ')' → logprob: -16.750001907348633
    5. '][' → logprob: -18.500001907348633
    6. ')i' → logprob: -18.500001907348633
    7. '[I' → logprob: -18.625001907348633
    8. ']' → logprob: -18.750001907348633
    9. 'i' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.375001907348633

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015011719428002834
    2. ']-' → logprob: -4.265011787414551
    3. '-' → logprob: -7.515011787414551
    4. ' ]' → logprob: -8.51501178741455
    5. '[' → logprob: -10.14001178741455
    6. ' -' → logprob: -10.64001178741455
    7. '"]' → logprob: -11.26501178741455
    8. '[i' → logprob: -11.76501178741455
    9. '']' → logprob: -12.14001178741455
    10. '])-' → logprob: -12.64001178741455

Token 92: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2486622929573059
    2. ']' → logprob: -1.8736622333526611
    3. ' -' → logprob: -2.748662233352661
    4. ')' → logprob: -6.37366247177124
    5. ']-' → logprob: -7.37366247177124
    6. ' ' → logprob: -9.123661994934082
    7. ' ]' → logprob: -9.498661994934082
    8. '   ' → logprob: -10.748661994934082
    9. '[' → logprob: -11.748661994934082
    10. ')-' → logprob: -11.998661994934082

Token 93: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.001520930090919137
    2. ' positions' → logprob: -6.501521110534668
    3. '   ' → logprob: -11.126521110534668
    4. 'position' → logprob: -14.126521110534668
    5. '  ' → logprob: -14.751521110534668
    6. '.positions' → logprob: -14.751521110534668
    7. ' ' → logprob: -14.876521110534668
    8. 'pos' → logprob: -15.001521110534668
    9. '    ' → logprob: -15.126521110534668
    10. 'posit' → logprob: -15.501521110534668

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.110668618930504e-05
    2. '-' → logprob: -10.00006103515625
    3. '[' → logprob: -11.37506103515625
    4. 'i' → logprob: -12.87506103515625
    5. 's' → logprob: -14.75006103515625
    6. '(i' → logprob: -15.25006103515625
    7. '1' → logprob: -15.62506103515625
    8. '[I' → logprob: -15.75006103515625
    9. '{i' → logprob: -15.75006103515625
    10. 'positions' → logprob: -16.62506103515625

Token 95: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012737659562844783
    2. '1' → logprob: -9.625127792358398
    3. ' -' → logprob: -10.000127792358398
    4. '[' → logprob: -12.000127792358398
    5. 'i' → logprob: -12.500127792358398
    6. '[i' → logprob: -12.625127792358398
    7. '[-' → logprob: -14.375127792358398
    8. '])' → logprob: -15.000127792358398
    9. '   ' → logprob: -15.000127792358398
    10. 's' → logprob: -15.375127792358398

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.000007629394531
    3. '   ' → logprob: -15.312507629394531
    4. '])' → logprob: -15.375007629394531
    5. '```' → logprob: -15.687507629394531
    6. ']' → logprob: -15.937507629394531
    7. ')' → logprob: -16.37500762939453
    8. '  ' → logprob: -16.75000762939453
    9. '-' → logprob: -17.87500762939453
    10. '    ' → logprob: -18.00000762939453

Token 97: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004655356984585524
    2. ')' → logprob: -5.379655361175537
    3. ')))' → logprob: -10.754654884338379
    4. '])' → logprob: -11.879654884338379
    5. ']))' → logprob: -13.004654884338379
    6. '))
' → logprob: -13.504654884338379
    7. '()))' → logprob: -14.004654884338379
    8. ' ))' → logprob: -14.004654884338379
    9. '1' → logprob: -14.754654884338379
    10. '   ' → logprob: -15.879654884338379

Token 98: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6038563251495361
    2. 'min' → logprob: -0.9788563251495361
    3. 'dif' → logprob: -3.228856325149536
    4. 'max' → logprob: -3.478856325149536
    5. 'if' → logprob: -6.603856086730957
    6. 'answer' → logprob: -6.853856086730957
    7. '0' → logprob: -7.103856086730957
    8. 'import' → logprob: -7.228856086730957
    9. 'ans' → logprob: -7.478856086730957
    10. 'diff' → logprob: -7.728856086730957

Token 99: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.11547816544771194
    2. ' find' → logprob: -3.115478277206421
    3. ' min' → logprob: -3.615478277206421
    4. ' greatest' → logprob: -4.240478038787842
    5. ' max' → logprob: -4.740478038787842
    6. ' calculate' → logprob: -5.490478038787842
    7. ' ' → logprob: -5.865478038787842
    8. ' main' → logprob: -6.365478038787842
    9. ' solve' → logprob: -6.990478038787842
    10. ' get' → logprob: -6.990478038787842

Token 100: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2826157808303833
    2. '(a' → logprob: -1.4076157808303833
    3. '<|end|>' → logprob: -7.782615661621094
    4. '(n' → logprob: -7.782615661621094
    5. '(d' → logprob: -9.032615661621094
    6. ' (' → logprob: -9.032615661621094
    7. '(x' → logprob: -9.157615661621094
    8. '(div' → logprob: -10.282615661621094
    9. 'a' → logprob: -10.907615661621094
    10. '(numbers' → logprob: -10.907615661621094

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038969877641648054
    2. ',b' → logprob: -5.628897190093994
    3. ' ,' → logprob: -8.628896713256836
    4. ',a' → logprob: -9.128896713256836
    5. ',n' → logprob: -12.753896713256836
    6. 'b' → logprob: -13.253896713256836
    7. ',g' → logprob: -13.628896713256836
    8. 'a' → logprob: -13.753896713256836
    9. ',int' → logprob: -14.503896713256836
    10. ',d' → logprob: -15.128896713256836

Token 102: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01815052703022957
    2. ' b' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.393150329589844
    4. '   ' → logprob: -17.018150329589844
    5. '	b' → logprob: -17.768150329589844
    6. '  ' → logprob: -17.893150329589844
    7. '<|end|>' → logprob: -18.393150329589844
    8. ')b' → logprob: -18.768150329589844
    9. '    ' → logprob: -19.518150329589844
    10. '>b' → logprob: -19.518150329589844

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005896099028177559
    2. '):
' → logprob: -7.500589847564697
    3. ')' → logprob: -11.125589370727539
    4. ':' → logprob: -11.250589370727539
    5. ' ):' → logprob: -12.000589370727539
    6. '):
' → logprob: -13.000589370727539
    7. '   ' → logprob: -15.750589370727539
    8. ',' → logprob: -16.37558937072754
    9. '):

' → logprob: -16.50058937072754
    10. '}:' → logprob: -16.75058937072754

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004004196263849735
    2. ' if' → logprob: -6.129004001617432
    3. ' 
' → logprob: -7.129004001617432
    4. ' ' → logprob: -8.12900447845459
    5. ' while' → logprob: -8.37900447845459
    6. '    ' → logprob: -8.50400447845459
    7. '    
' → logprob: -8.87900447845459
    8. '
' → logprob: -9.12900447845459
    9. ' return' → logprob: -10.87900447845459
    10. '	if' → logprob: -12.00400447845459

Token 105: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.7850764989852905
    2. 'if' → logprob: -1.1600764989852905
    3. '   ' → logprob: -1.6600764989852905
    4. ' while' → logprob: -3.91007661819458
    5. ' if' → logprob: -4.03507661819458
    6. 'return' → logprob: -6.53507661819458
    7. ' ' → logprob: -7.91007661819458
    8. 'a' → logprob: -8.285076141357422
    9. '    
' → logprob: -8.660076141357422
    10. '0' → logprob: -9.535076141357422

Token 106: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5760045647621155
    2. ' b' → logprob: -0.8260045647621155
    3. '	b' → logprob: -10.076004981994629
    4. '(b' → logprob: -11.451004981994629
    5. 'a' → logprob: -11.701004981994629
    6. ' a' → logprob: -13.076004981994629
    7. ' ' → logprob: -14.451004981994629
    8. '   ' → logprob: -14.451004981994629
    9. '_b' → logprob: -14.826004981994629
    10. ')b' → logprob: -15.451004981994629

Token 107: ' !=' (ID: 1666)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8165772557258606
    2. '!=' → logprob: -0.8165772557258606
    3. ' !=' → logprob: -2.191577196121216
    4. ':
' → logprob: -5.816577434539795
    5. '>' → logprob: -6.691577434539795
    6. '!="' → logprob: -10.066576957702637
    7. '!='' → logprob: -10.816576957702637
    8. '!==' → logprob: -11.191576957702637
    9. ' >' → logprob: -11.566576957702637
    10. ')!=' → logprob: -11.566576957702637

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. '  ' → logprob: -19.126928329467773
    5. '	' → logprob: -19.751928329467773
    6. ' ' → logprob: -20.626928329467773
    7. '۰' → logprob: -21.126928329467773
    8. '    ' → logprob: -21.876928329467773
    9. '```' → logprob: -22.001928329467773
    10. ' ' → logprob: -22.876928329467773

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '00' → logprob: -20.750001907348633
    5. '```' → logprob: -20.750001907348633
    6. '  ' → logprob: -22.250001907348633
    7. '۰' → logprob: -22.375001907348633
    8. '000' → logprob: -22.875001907348633
    9. ' ' → logprob: -22.875001907348633
    10. 'None' → logprob: -23.125001907348633

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38968393206596375
    2. ':
' → logprob: -1.1396839618682861
    3. '       ' → logprob: -6.514683723449707
    4. '   ' → logprob: -6.764683723449707
    5. '):
' → logprob: -9.264683723449707
    6. ',' → logprob: -10.639683723449707
    7. ':

' → logprob: -11.264683723449707
    8. '<|end|>' → logprob: -11.889683723449707
    9. ' :
' → logprob: -12.014683723449707
    10. '):' → logprob: -12.014683723449707

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08427849411964417
    2. 'a' → logprob: -2.5842785835266113
    3. ' a' → logprob: -6.084278583526611
    4. '   ' → logprob: -6.334278583526611
    5. ':' → logprob: -8.209278106689453
    6. '
' → logprob: -8.459278106689453
    7. ',' → logprob: -8.709278106689453
    8. ':
' → logprob: -9.084278106689453
    9. 'n' → logprob: -9.334278106689453
    10. '    
' → logprob: -9.834278106689453

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.04870932176709175
    2. ' a' → logprob: -3.0487093925476074
    3. 'temp' → logprob: -10.29870891571045
    4. 'r' → logprob: -10.42370891571045
    5. 't' → logprob: -10.54870891571045
    6. '   ' → logprob: -11.04870891571045
    7. '	a' → logprob: -12.04870891571045
    8. ' t' → logprob: -12.29870891571045
    9. ' temp' → logprob: -12.92370891571045
    10. ' r' → logprob: -13.54870891571045

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20299595594406128
    2. '%=' → logprob: -2.202996015548706
    3. '%' → logprob: -3.452996015548706
    4. '=' → logprob: -3.827996015548706
    5. ' %=' → logprob: -4.202995777130127
    6. '%b' → logprob: -6.077995777130127
    7. ' =' → logprob: -6.827995777130127
    8. ' %' → logprob: -6.952995777130127
    9. '%,' → logprob: -8.577996253967285
    10. ' ,' → logprob: -8.702996253967285

Token 114: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931856274604797
    2. ' b' → logprob: -0.6931856274604797
    3. ' ' → logprob: -10.693185806274414
    4. '<|end|>' → logprob: -11.068185806274414
    5. '=b' → logprob: -16.943185806274414
    6. ' 
' → logprob: -17.068185806274414
    7. '<|end|>' → logprob: -17.193185806274414
    8. '>b' → logprob: -17.443185806274414
    9. '=' → logprob: -17.443185806274414
    10. ' ' → logprob: -18.068185806274414

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804183006286621
    2. ' =' → logprob: -3.288041830062866
    3. '=b' → logprob: -15.163042068481445
    4. '=

' → logprob: -15.788042068481445
    5. '=a' → logprob: -17.413042068481445
    6. '   ' → logprob: -17.538042068481445
    7. ',' → logprob: -17.538042068481445
    8. ' ' → logprob: -17.913042068481445
    9. 'a' → logprob: -18.413042068481445
    10. '%=' → logprob: -18.538042068481445

Token 116: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31326186656951904
    2. ' b' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.313261032104492
    4. '	b' → logprob: -17.313261032104492
    5. '   ' → logprob: -17.938261032104492
    6. ')b' → logprob: -17.938261032104492
    7. '(b' → logprob: -18.313261032104492
    8. '>b' → logprob: -18.438261032104492
    9. ' ' → logprob: -19.438261032104492
    10. '  ' → logprob: -19.813261032104492

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2378600735682994e-05
    2. ' ,' → logprob: -10.625032424926758
    3. ',a' → logprob: -12.500032424926758
    4. 'a' → logprob: -12.625032424926758
    5. '%' → logprob: -14.500032424926758
    6. ' a' → logprob: -14.750032424926758
    7. ' %' → logprob: -16.750032424926758
    8. ' ' → logprob: -16.875032424926758
    9. '%,' → logprob: -18.250032424926758
    10. ',
' → logprob: -18.375032424926758

Token 118: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0485873706638813
    2. ' a' → logprob: -3.0485873222351074
    3. ' ' → logprob: -17.048587799072266
    4. '	a' → logprob: -18.298587799072266
    5. '   ' → logprob: -20.173587799072266
    6. '>a' → logprob: -21.548587799072266
    7. '  ' → logprob: -21.923587799072266
    8. '(a' → logprob: -22.173587799072266
    9. '"a' → logprob: -22.423587799072266
    10. ' ' → logprob: -22.798587799072266

Token 119: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10038771480321884
    2. '%' → logprob: -2.3503878116607666
    3. 'a' → logprob: -8.725387573242188
    4. ' ' → logprob: -11.600387573242188
    5. ' a' → logprob: -11.725387573242188
    6. '%b' → logprob: -14.225387573242188
    7. '%i' → logprob: -14.725387573242188
    8. ' ' → logprob: -15.975387573242188
    9. '%A' → logprob: -16.600387573242188
    10. '%s' → logprob: -17.475387573242188

Token 120: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.615255839889869e-05
    2. ' b' → logprob: -9.250096321105957
    3. '	b' → logprob: -20.50009536743164
    4. ' ' → logprob: -21.25009536743164
    5. '   ' → logprob: -22.37509536743164
    6. '  ' → logprob: -23.00009536743164
    7. '%b' → logprob: -23.00009536743164
    8. '>b' → logprob: -23.00009536743164
    9. ')b' → logprob: -23.12509536743164
    10. '_b' → logprob: -23.75009536743164

Token 121: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11147490888834
    2. '   ' → logprob: -2.3614749908447266
    3. ' return' → logprob: -5.111474990844727
    4. 'a' → logprob: -5.486474990844727
    5. '
' → logprob: -7.111474990844727
    6. 'print' → logprob: -10.236474990844727
    7. '       ' → logprob: -10.361474990844727
    8. ' ' → logprob: -10.486474990844727
    9. '    
' → logprob: -10.611474990844727
    10. ' a' → logprob: -10.736474990844727

Token 123: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007630057632923126
    2. 'a' → logprob: -5.007629871368408
    3. ' return' → logprob: -7.007629871368408
    4. ' a' → logprob: -12.132630348205566
    5. ' ' → logprob: -13.507630348205566
    6. '   ' → logprob: -13.757630348205566
    7. 'print' → logprob: -14.007630348205566
    8. 'Return' → logprob: -15.882630348205566
    9. ':return' → logprob: -16.00762939453125
    10. 'eturn' → logprob: -16.25762939453125

Token 124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.7610454708337784e-05
    2. ' a' → logprob: -10.500027656555176
    3. 'abs' → logprob: -18.87502670288086
    4. '	a' → logprob: -20.50002670288086
    5. '   ' → logprob: -21.37502670288086
    6. ' ' → logprob: -22.00002670288086
    7. 'а' → logprob: -22.62502670288086
    8. '_a' → logprob: -22.75002670288086
    9. '  ' → logprob: -23.12502670288086
    10. ''a' → logprob: -23.62502670288086

Token 125: '

' (ID: 279)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07535728812217712
    2. 'result' → logprob: -2.95035719871521
    3. 'res' → logprob: -5.075357437133789
    4. 'answer' → logprob: -5.450357437133789
    5. 'ans' → logprob: -5.700357437133789
    6. 'diff' → logprob: -6.325357437133789
    7. 'm' → logprob: -6.950357437133789
    8. 'd' → logprob: -7.075357437133789
    9. 'div' → logprob: -7.575357437133789
    10. 'current' → logprob: -8.200357437133789

Token 126: 'def' (ID: 1314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4673321843147278
    2. 'result' → logprob: -1.967332124710083
    3. 'ans' → logprob: -2.217332124710083
    4. 'answer' → logprob: -2.717332124710083
    5. 'res' → logprob: -3.467332124710083
    6. 'from' → logprob: -4.842332363128662
    7. 'diff' → logprob: -5.092332363128662
    8. 'current' → logprob: -5.592332363128662
    9. 'd' → logprob: -5.717332363128662
    10. 'div' → logprob: -7.092332363128662

Token 127: ' gcd' (ID: 106918)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22615700960159302
    2. 'main' → logprob: -2.1011569499969482
    3. ' find' → logprob: -2.7261569499969482
    4. 'find' → logprob: -5.101157188415527
    5. 'g' → logprob: -6.226157188415527
    6. ' l' → logprob: -6.601157188415527
    7. ' solve' → logprob: -7.351157188415527
    8. 'l' → logprob: -7.351157188415527
    9. 'solve' → logprob: -7.351157188415527
    10. ' solution' → logprob: -7.476157188415527

Token 128: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.29544714093208313
    2. '(' → logprob: -1.6704471111297607
    3. '_array' → logprob: -3.2954471111297607
    4. '_' → logprob: -4.29544734954834
    5. '_multiple' → logprob: -4.79544734954834
    6. '(a' → logprob: -6.17044734954834
    7. 'list' → logprob: -6.54544734954834
    8. '_of' → logprob: -6.79544734954834
    9. 'List' → logprob: -7.17044734954834
    10. 's' → logprob: -7.79544734954834

Token 129: '(numbers' (ID: 98592)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.1542193740606308
    2. '(arr' → logprob: -2.654219388961792
    3. '(d' → logprob: -2.904219388961792
    4. '(a' → logprob: -4.654219150543213
    5. '(' → logprob: -5.779219150543213
    6. '(numbers' → logprob: -6.029219150543213
    7. '(l' → logprob: -6.529219150543213
    8. '(array' → logprob: -7.529219150543213
    9. '(nums' → logprob: -7.654219150543213
    10. '(diff' → logprob: -9.279219627380371

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006226073601283133
    2. '):
' → logprob: -8.375622749328613
    3. ' ):' → logprob: -8.750622749328613
    4. '(numbers' → logprob: -9.000622749328613
    5. ')' → logprob: -9.375622749328613
    6. '(nums' → logprob: -11.750622749328613
    7. '(' → logprob: -12.125622749328613
    8. '[]):' → logprob: -12.375622749328613
    9. '(lst' → logprob: -13.125622749328613
    10. '(n' → logprob: -13.375622749328613

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01256216038018465
    2. ' result' → logprob: -4.512562274932861
    3. 'result' → logprob: -7.887562274932861
    4. ' gcd' → logprob: -7.887562274932861
    5. ' res' → logprob: -8.262561798095703
    6. ' g' → logprob: -8.762561798095703
    7. 'g' → logprob: -8.762561798095703
    8. ' current' → logprob: -9.262561798095703
    9. ' if' → logprob: -10.762561798095703
    10. 'n' → logprob: -11.262561798095703

Token 132: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6700479388237
    2. 'result' (adapté à ' result') → logprob: -1.1700479984283447
    3. 'g' → logprob: -2.2950479984283447
    4. ' res' → logprob: -3.4200479984283447
    5. 'res' → logprob: -3.5450479984283447
    6. ' g' → logprob: -4.920047760009766
    7. '   ' → logprob: -5.420047760009766
    8. ' current' → logprob: -7.045047760009766
    9. ' if' → logprob: -7.295047760009766
    10. ' gcd' → logprob: -7.295047760009766

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. '=n' → logprob: -16.326414108276367
    4. ' ' → logprob: -16.951414108276367
    5. '(numbers' → logprob: -18.701414108276367
    6. '=int' → logprob: -19.076414108276367
    7. ',' → logprob: -19.701414108276367
    8. '=

' → logprob: -20.076414108276367
    9. '＝' → logprob: -20.201414108276367
    10. 'numbers' → logprob: -20.201414108276367

Token 134: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.0015179537003859878
    2. ' numbers' → logprob: -6.5015177726745605
    3. '0' → logprob: -11.126518249511719
    4. '(numbers' → logprob: -14.001518249511719
    5. ' ' → logprob: -17.50151824951172
    6. '   ' → logprob: -17.50151824951172
    7. '1' → logprob: -17.50151824951172
    8. 'number' → logprob: -17.62651824951172
    9. 'num' → logprob: -18.50151824951172
    10. 'abs' → logprob: -18.62651824951172

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -18.0
    3. ' [' → logprob: -20.875
    4. '[
' → logprob: -22.125
    5. '```' → logprob: -22.5
    6. 'def' → logprob: -23.0
    7. '1' → logprob: -23.875
    8. '[-' → logprob: -24.25
    9. 'from' → logprob: -24.375
    10. '[int' → logprob: -24.375

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.250005722045898
    3. '[' → logprob: -15.000005722045898
    4. '1' → logprob: -15.250005722045898
    5. '-' → logprob: -16.3125057220459
    6. '   ' → logprob: -16.4375057220459
    7. ']' → logprob: -17.1250057220459
    8. '۰' → logprob: -17.1875057220459
    9. '```' → logprob: -17.5625057220459
    10. ')' → logprob: -17.8750057220459

Token 137: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3405999541282654
    2. '
' → logprob: -1.5906000137329102
    3. '<|end|>' → logprob: -3.34060001373291
    4. 'for' → logprob: -3.46560001373291
    5. ')
' → logprob: -4.59060001373291
    6. ' for' → logprob: -5.46560001373291
    7. ']' → logprob: -6.46560001373291
    8. ' ' → logprob: -7.21560001373291
    9. '<|end|>' → logprob: -7.59060001373291
    10. ' 
' → logprob: -8.21560001373291

Token 138: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1880408674478531
    2. 'for' → logprob: -1.813040852546692
    3. '<|end|>' → logprob: -4.938040733337402
    4. '   ' → logprob: -7.313040733337402
    5. ' ' → logprob: -8.188040733337402
    6. ' 
' → logprob: -9.938040733337402
    7. '<|end|>' → logprob: -10.813040733337402
    8. '	for' → logprob: -10.938040733337402
    9. '
' → logprob: -10.938040733337402
    10. ')' → logprob: -11.313040733337402

Token 139: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07888978719711304
    2. ' for' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.953889846801758
    4. 'from' → logprob: -18.578889846801758
    5. '	for' → logprob: -18.578889846801758
    6. ' ' → logprob: -19.703889846801758
    7. '1' → logprob: -20.203889846801758
    8. ' 
' → logprob: -20.578889846801758
    9. '
' → logprob: -22.328889846801758
    10. '  ' → logprob: -22.578889846801758

Token 140: ' i' (ID: 575)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3937629759311676
    2. 'number' → logprob: -1.6437629461288452
    3. 'i' → logprob: -2.8937630653381348
    4. ' num' → logprob: -3.1437630653381348
    5. ' number' → logprob: -3.8937630653381348
    6. ' i' → logprob: -4.893763065338135
    7. 'n' → logprob: -5.143763065338135
    8. ' n' → logprob: -10.018762588500977
    9. ' ' → logprob: -13.143762588500977
    10. '   ' → logprob: -14.018762588500977

Token 141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02989673614501953
    2. 'in' → logprob: -3.5298967361450195
    3. ' ' → logprob: -9.15489673614502
    4. 'range' → logprob: -10.90489673614502
    5. '  ' → logprob: -11.15489673614502
    6. '   ' → logprob: -13.15489673614502
    7. '	in' → logprob: -13.15489673614502
    8. ' range' → logprob: -13.65489673614502
    9. 'n' → logprob: -14.40489673614502
    10. '1' → logprob: -14.77989673614502

Token 142: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05588022992014885
    2. ' range' → logprob: -3.305880308151245
    3. 'numbers' → logprob: -4.055880069732666
    4. ' numbers' → logprob: -7.930880069732666
    5. ' ' → logprob: -14.930880546569824
    6. '   ' → logprob: -15.930880546569824
    7. '(numbers' → logprob: -16.305879592895508
    8. '  ' → logprob: -16.430879592895508
    9. '	range' → logprob: -16.430879592895508
    10. 'ranges' → logprob: -16.430879592895508

Token 143: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -13.750000953674316
    3. '(len' → logprob: -17.000001907348633
    4. ' (' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.875001907348633
    6. 'len' → logprob: -20.375001907348633
    7. ' ' → logprob: -22.000001907348633
    8. '  ' → logprob: -24.875001907348633
    9. '(
' → logprob: -25.000001907348633
    10. '    ' → logprob: -25.125001907348633

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'len' → logprob: -14.00000286102295
    4. '   ' → logprob: -15.37500286102295
    5. '(' → logprob: -17.750003814697266
    6. '    ' → logprob: -19.750003814697266
    7. '  ' → logprob: -19.875003814697266
    8. '(len' → logprob: -21.000003814697266
    9. '```' → logprob: -21.125003814697266
    10. '１' → logprob: -21.375003814697266

Token 145: ',' (ID: 11)
  Prédit: ',len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.14285601675510406
    2. ',' → logprob: -2.3928561210632324
    3. '(len' → logprob: -3.6428561210632324
    4. ' len' → logprob: -4.642856121063232
    5. 'len' → logprob: -5.142856121063232
    6. ' ,' → logprob: -10.142855644226074
    7. '   ' → logprob: -10.392855644226074
    8. '<len' → logprob: -10.892855644226074
    9. '	len' → logprob: -11.392855644226074
    10. '=len' → logprob: -12.767855644226074

Token 146: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014163863845169544
    2. ' len' → logprob: -4.264163970947266
    3. '(len' → logprob: -15.014163970947266
    4. '	len' → logprob: -17.889163970947266
    5. ',len' → logprob: -18.014163970947266
    6. '[len' → logprob: -18.639163970947266
    7. '   ' → logprob: -19.264163970947266
    8. '<len' → logprob: -19.264163970947266
    9. '=len' → logprob: -19.389163970947266
    10. ' ' → logprob: -20.389163970947266

Token 147: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.25003719329834
    3. 'numbers' → logprob: -13.62503719329834
    4. ' numbers' → logprob: -15.87503719329834
    5. ' (' → logprob: -16.250036239624023
    6. '(n' → logprob: -18.625036239624023
    7. '(number' → logprob: -19.000036239624023
    8. ')' → logprob: -19.375036239624023
    9. '_numbers' → logprob: -19.875036239624023
    10. '(nums' → logprob: -20.125036239624023

Token 148: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08108026534318924
    2. ')):' → logprob: -2.581080198287964
    3. '):
' → logprob: -6.581080436706543
    4. ')):
' → logprob: -7.456080436706543
    5. ' ):' → logprob: -9.456080436706543
    6. '))' → logprob: -9.581080436706543
    7. ')' → logprob: -9.831080436706543
    8. ':' → logprob: -12.331080436706543
    9. ']):' → logprob: -12.331080436706543
    10. ' ' → logprob: -12.456080436706543

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05167088285088539
    2. '   ' → logprob: -3.676670789718628
    3. ':' → logprob: -4.301671028137207
    4. ' result' → logprob: -5.176671028137207
    5. 'result' → logprob: -5.676671028137207
    6. '):' → logprob: -7.676671028137207
    7. ')' → logprob: -7.926671028137207
    8. ',' → logprob: -8.176671028137207
    9. ':
' → logprob: -8.426671028137207
    10. '    ' → logprob: -8.426671028137207

Token 150: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.47416502237319946
    2. 'result' (adapté à ' result') → logprob: -0.9741650223731995
    3. '
' → logprob: -10.224164962768555
    4. '       ' → logprob: -10.349164962768555
    5. '           ' → logprob: -12.224164962768555
    6. ' 
' → logprob: -12.849164962768555
    7. '   ' → logprob: -12.974164962768555
    8. ' ' → logprob: -12.974164962768555
    9. '	result' → logprob: -13.099164962768555
    10. '_result' → logprob: -13.599164962768555

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740789234638214
    2. ' =' → logprob: -0.974078893661499
    3. ' ' → logprob: -13.974079132080078
    4. '=g' → logprob: -14.724079132080078
    5. '*=' → logprob: -15.224079132080078
    6. ' *=' → logprob: -16.224079132080078
    7. '%=' → logprob: -17.599079132080078
    8. ')=' → logprob: -17.599079132080078
    9. '   ' → logprob: -17.599079132080078
    10. '=

' → logprob: -17.599079132080078

Token 152: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0013261953135952353
    2. ' gcd' → logprob: -6.626326084136963
    3. '	g' → logprob: -16.501325607299805
    4. ' ' → logprob: -16.626325607299805
    5. '   ' → logprob: -17.126325607299805
    6. '(g' → logprob: -17.251325607299805
    7. ' g' → logprob: -17.376325607299805
    8. '_g' → logprob: -17.626325607299805
    9. '  ' → logprob: -18.876325607299805
    10. 'math' → logprob: -19.001325607299805

Token 153: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002639582962729037
    2. 'result' → logprob: -8.250264167785645
    3. '(' → logprob: -12.875264167785645
    4. ',result' → logprob: -16.375263214111328
    5. '[result' → logprob: -17.125263214111328
    6. ' result' → logprob: -17.250263214111328
    7. '(results' → logprob: -17.750263214111328
    8. '	result' → logprob: -19.500263214111328
    9. '=result' → logprob: -19.750263214111328
    10. ' (' → logprob: -19.750263214111328

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005583064164966345
    2. ',n' → logprob: -5.2555832862854
    3. ',d' → logprob: -8.005582809448242
    4. ' ,' → logprob: -11.130582809448242
    5. 'numbers' → logprob: -15.005582809448242
    6. '(numbers' → logprob: -15.130582809448242
    7. ',
' → logprob: -15.755582809448242
    8. ',num' → logprob: -16.755582809448242
    9. 'dif' → logprob: -17.505582809448242
    10. ',int' → logprob: -18.380582809448242

Token 155: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.04863062873482704
    2. ' numbers' → logprob: -3.048630714416504
    3. 'dif' → logprob: -10.298630714416504
    4. '(numbers' → logprob: -11.798630714416504
    5. ' differences' → logprob: -13.298630714416504
    6. ')' → logprob: -15.923630714416504
    7. 'number' → logprob: -16.173629760742188
    8. '_numbers' → logprob: -17.173629760742188
    9. ' ' → logprob: -17.298629760742188
    10. '
' → logprob: -17.423629760742188

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. '[I' → logprob: -18.375
    4. '```' → logprob: -19.25
    5. '[
' → logprob: -19.5
    6. ')' → logprob: -20.5
    7. '[j' → logprob: -21.5
    8. '(i' → logprob: -21.625
    9. 'i' → logprob: -21.625
    10. ' [' → logprob: -21.75

Token 157: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.875004768371582
    3. ' )' → logprob: -13.500004768371582
    4. '))' → logprob: -15.625004768371582
    5. ')`' → logprob: -16.250003814697266
    6. ')return' → logprob: -16.500003814697266
    7. ')

' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.500003814697266
    9. ')}' → logprob: -18.625003814697266
    10. '`)' → logprob: -18.875003814697266

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018296027556061745
    2. 'return' → logprob: -4.018296241760254
    3. ' return' → logprob: -8.893296241760254
    4. '       ' → logprob: -12.268296241760254
    5. '
' → logprob: -13.518296241760254
    6. '	return' → logprob: -13.518296241760254
    7. '    
' → logprob: -13.768296241760254
    8. ' ' → logprob: -16.393295288085938
    9. 'print' → logprob: -16.518295288085938
    10. ':return' → logprob: -16.643295288085938

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0036088628694415092
    2. ' return' → logprob: -5.753608703613281
    3. '   ' → logprob: -7.753608703613281
    4. '	return' → logprob: -13.878608703613281
    5. ' ' → logprob: -14.378608703613281
    6. 'print' → logprob: -16.00360870361328
    7. '    
' → logprob: -16.12860870361328
    8. '
' → logprob: -17.00360870361328
    9. '       ' → logprob: -17.00360870361328
    10. ':return' → logprob: -17.37860870361328

Token 160: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001170225441455841
    2. ' result' → logprob: -6.7511701583862305
    3. '(result' → logprob: -20.251171112060547
    4. '	result' → logprob: -22.251171112060547
    5. ' ' → logprob: -22.626171112060547
    6. '[result' → logprob: -22.751171112060547
    7. '=result' → logprob: -23.501171112060547
    8. ' ' → logprob: -23.626171112060547
    9. '  ' → logprob: -24.001171112060547
    10. '$result' → logprob: -24.126171112060547

Token 161: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007810797076672316
    2. 'result' → logprob: -5.632810592651367
    3. 'g' → logprob: -6.257810592651367
    4. 'answer' → logprob: -6.257810592651367
    5. 'if' → logprob: -9.007810592651367
    6. 'output' → logprob: -9.882810592651367
    7. '
' → logprob: -9.882810592651367
    8. 'n' → logprob: -10.132810592651367
    9. 'dif' → logprob: -11.132810592651367
    10. '#' → logprob: -11.257810592651367

Token 162: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. 'result' → logprob: -13.875000953674316
    3. ' print' → logprob: -17.375001907348633
    4. 'answer' → logprob: -18.000001907348633
    5. 'g' → logprob: -18.250001907348633
    6. 'if' → logprob: -19.375001907348633
    7. '```' → logprob: -19.750001907348633
    8. 'ans' → logprob: -20.000001907348633
    9. 'output' → logprob: -20.250001907348633
    10. '
' → logprob: -20.625001907348633

Token 163: '(g' (ID: 7791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10044216364622116
    2. '(g' → logprob: -2.3504421710968018
    3. '(d' → logprob: -8.725441932678223
    4. '("("' → logprob: -9.850441932678223
    5. '('' → logprob: -11.350441932678223
    6. ' (' → logprob: -13.100441932678223
    7. '((' → logprob: -13.100441932678223
    8. '()' → logprob: -14.225441932678223
    9. 'g' → logprob: -14.475441932678223
    10. '("' → logprob: -14.475441932678223

Token 164: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -5.6457742175552994e-05
    2. 'dif' → logprob: -9.875056266784668
    3. 'c' → logprob: -12.875056266784668
    4. 'cdf' → logprob: -13.375056266784668
    5. 'cid' → logprob: -15.250056266784668
    6. 'cdn' → logprob: -16.250057220458984
    7. 'd' → logprob: -16.375057220458984
    8. 'cf' → logprob: -16.750057220458984
    9. 'sd' → logprob: -17.125057220458984
    10. 'cc' → logprob: -17.250057220458984

Token 165: '_list' (ID: 4162)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.179229274392128
    2. '(_' → logprob: -2.054229259490967
    3. '_list' → logprob: -3.679229259490967
    4. '(' → logprob: -4.554229259490967
    5. '_d' → logprob: -10.679229736328125
    6. '_' → logprob: -11.304229736328125
    7. '(_)' → logprob: -11.429229736328125
    8. ')' → logprob: -11.679229736328125
    9. ')_' → logprob: -11.679229736328125
    10. ')(_' → logprob: -11.929229736328125

Token 166: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.000006675720215
    4. ')' → logprob: -17.2500057220459
    5. '(
' → logprob: -19.6250057220459
    6. '(D' → logprob: -19.7500057220459
    7. '(de' → logprob: -19.8750057220459
    8. '([' → logprob: -20.0000057220459
    9. '(diff' → logprob: -20.2500057220459
    10. ')d' → logprob: -20.7500057220459

Token 167: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0280383548888494e-06
    2. ' if' → logprob: -13.875000953674316
    3. '(if' → logprob: -17.750001907348633
    4. 'iffer' → logprob: -18.250001907348633
    5. 'dif' → logprob: -18.875001907348633
    6. 'ifer' → logprob: -19.375001907348633
    7. 'iff' → logprob: -19.750001907348633
    8. 'If' → logprob: -19.875001907348633
    9. 'ffer' → logprob: -20.500001907348633
    10. 'i' → logprob: -21.000001907348633

Token 168: 'ferences' (ID: 10131)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0003540542966220528
    2. 'ferences' → logprob: -8.000353813171387
    3. 'r' → logprob: -11.625353813171387
    4. 'ences' → logprob: -12.250353813171387
    5. 'érences' → logprob: -12.375353813171387
    6. 'or' → logprob: -15.250353813171387
    7. 'eren' → logprob: -15.375353813171387
    8. 'ir' → logprob: -16.750354766845703
    9. 'ere' → logprob: -16.875354766845703
    10. 'e' → logprob: -17.625354766845703

Token 169: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889088988304138
    2. ')' → logprob: -2.578890800476074
    3. '())' → logprob: -14.828890800476074
    4. ')))' → logprob: -14.828890800476074
    5. '()))' → logprob: -15.703890800476074
    6. '))
' → logprob: -16.57889175415039
    7. '])' → logprob: -16.82889175415039
    8. ')
' → logprob: -17.45389175415039
    9. '})' → logprob: -17.57889175415039
    10. ')}' → logprob: -17.95389175415039


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 140
Précision stricte (1ère position): 42.51%
Précision adaptée (1ère position): 45.51%
Précision (top 10): 83.83%
================================================================================
