================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

n = int(stdin.readline().rstrip())
s, t = stdin.readline().rstrip().split()

strng = ''
for i in range(n):
    strng += s[i]
    strng += t[i]

print(strng)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.050773657858371735
    2. ' argv' → logprob: -3.5507736206054688
    3. 'exit' → logprob: -4.300773620605469
    4. ' exit' → logprob: -6.050773620605469
    5. 'stdout' → logprob: -6.050773620605469
    6. 'path' → logprob: -6.675773620605469
    7. 'stdin' → logprob: -7.425773620605469
    8. 'import' → logprob: -8.425773620605469
    9. 'version' → logprob: -8.550773620605469
    10. 'stderr' → logprob: -9.425773620605469

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004543930757790804
    2. '.readline' → logprob: -5.629543781280518
    3. '\n' → logprob: -8.004544258117676
    4. '.
' → logprob: -8.504544258117676
    5. '```' → logprob: -9.129544258117676
    6. 'import' → logprob: -9.504544258117676
    7. '.read' → logprob: -9.504544258117676
    8. '
' → logprob: -10.754544258117676
    9. 'print' → logprob: -10.754544258117676
    10. 'newline' → logprob: -10.754544258117676

Token 5: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03538239002227783
    2. '.readline' → logprob: -3.5353822708129883
    3. '\n' → logprob: -6.035382270812988
    4. '.
' → logprob: -7.410382270812988
    5. '.read' → logprob: -7.660382270812988
    6. ',' → logprob: -7.660382270812988
    7. '```' → logprob: -7.910382270812988
    8. '
' → logprob: -7.910382270812988
    9. 'print' → logprob: -8.160382270812988
    10. 'for' → logprob: -8.660382270812988

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48418059945106506
    2. ' =' → logprob: -0.9841805696487427
    3. ' ' → logprob: -4.984180450439453
    4. '.' → logprob: -6.234180450439453
    5. ',' → logprob: -7.734180450439453
    6. ')' → logprob: -7.859180450439453
    7. 'u' → logprob: -9.109180450439453
    8. '_' → logprob: -9.234180450439453
    9. '  ' → logprob: -9.734180450439453
    10. ' )' → logprob: -10.609180450439453

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012667628936469555
    2. 'int' → logprob: -4.387667655944824
    3. ' ' → logprob: -8.887667655944824
    4. ' stdin' → logprob: -11.762667655944824
    5. ' input' → logprob: -11.887667655944824
    6. '=int' → logprob: -13.012667655944824
    7. '  ' → logprob: -14.637667655944824
    8. 'stdin' → logprob: -14.762667655944824
    9. ' map' → logprob: -15.012667655944824
    10. 'input' → logprob: -15.262667655944824

Token 8: '(stdin' (ID: 176594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004730941727757454
    2. '(stdin' → logprob: -5.379731178283691
    3. '()' → logprob: -10.254731178283691
    4. ' (' → logprob: -11.004731178283691
    5. '(input' → logprob: -11.254731178283691
    6. '('' → logprob: -11.879731178283691
    7. '(
' → logprob: -11.879731178283691
    8. '(st' → logprob: -12.254731178283691
    9. ')' → logprob: -12.754731178283691
    10. '(n' → logprob: -12.879731178283691

Token 9: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0620790496468544
    2. '.read' → logprob: -2.8120789527893066
    3. '.' → logprob: -9.312079429626465
    4. '.readlines' → logprob: -11.437079429626465
    5. ')' → logprob: -12.687079429626465
    6. '.Read' → logprob: -12.937079429626465
    7. 'read' → logprob: -13.437079429626465
    8. '.write' → logprob: -13.562079429626465
    9. '[' → logprob: -14.812079429626465
    10. ' .' → logprob: -14.812079429626465

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05283138155937195
    2. '()' → logprob: -3.1778314113616943
    3. ')' → logprob: -4.677831172943115
    4. '(' → logprob: -8.677831649780273
    5. '()))' → logprob: -9.052831649780273
    6. ' ())' → logprob: -9.177831649780273
    7. '().' → logprob: -9.927831649780273
    8. '();)' → logprob: -11.677831649780273
    9. '()[' → logprob: -12.302831649780273
    10. '`()' → logprob: -12.552831649780273

Token 11: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0028895139694213867
    2. 'rstrip' → logprob: -6.002889633178711
    3. 'read' → logprob: -7.877889633178711
    4. ')' → logprob: -10.627889633178711
    5. ' strip' → logprob: -11.752889633178711
    6. 'split' → logprob: -13.502889633178711
    7. 'decode' → logprob: -14.752889633178711
    8. 'replace' → logprob: -15.377889633178711
    9. '_strip' → logprob: -15.377889633178711
    10. '-strip' → logprob: -15.877889633178711

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10557222366333008
    2. '))' → logprob: -2.35557222366333
    3. '())' → logprob: -5.35557222366333
    4. '()))' → logprob: -7.48057222366333
    5. '()' → logprob: -9.980571746826172
    6. '(' → logprob: -11.605571746826172
    7. ''))' → logprob: -12.855571746826172
    8. '`)' → logprob: -13.230571746826172
    9. '')' → logprob: -13.355571746826172
    10. ')))' → logprob: -14.230571746826172

Token 13: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03988169506192207
    2. '\n' → logprob: -4.414881706237793
    3. ' for' → logprob: -5.039881706237793
    4. 'a' → logprob: -5.539881706237793
    5. 'i' → logprob: -5.789881706237793
    6. '
' → logprob: -5.914881706237793
    7. '\' → logprob: -6.289881706237793
    8. '' → logprob: -6.664881706237793
    9. 'if' → logprob: -6.789881706237793
    10. '#' → logprob: -7.039881706237793

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40365707874298096
    2. '.' → logprob: -1.778657078742981
    3. '=' → logprob: -2.4036569595336914
    4. '[' → logprob: -3.4036569595336914
    5. 'tr' → logprob: -3.6536569595336914
    6. '=input' → logprob: -6.278656959533691
    7. 'um' → logprob: -6.528656959533691
    8. 'trip' → logprob: -6.778656959533691
    9. '.append' → logprob: -7.028656959533691
    10. ' ' → logprob: -7.028656959533691

Token 15: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.268728107213974
    2. ' t' → logprob: -1.6437281370162964
    3. ' =' → logprob: -3.893728017807007
    4. 'e' → logprob: -5.268728256225586
    5. '=' → logprob: -5.518728256225586
    6. 'p' → logprob: -5.893728256225586
    7. 'd' → logprob: -6.518728256225586
    8. 'a' → logprob: -6.893728256225586
    9. ' ' → logprob: -7.268728256225586
    10. ' p' → logprob: -7.393728256225586

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327101588249207
    2. '=' → logprob: -1.3132710456848145
    3. ',' → logprob: -12.438270568847656
    4. ' ' → logprob: -13.313270568847656
    5. '_' → logprob: -13.938270568847656
    6. '[' → logprob: -14.438270568847656
    7. ' +=' → logprob: -14.438270568847656
    8. '.' → logprob: -15.188270568847656
    9. ')' → logprob: -15.313270568847656
    10. 's' → logprob: -15.438270568847656

Token 17: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.11701326817274094
    2. '(stdin' → logprob: -2.4920132160186768
    3. ' stdin' → logprob: -4.242013454437256
    4. 'map' → logprob: -5.367013454437256
    5. '"' → logprob: -6.242013454437256
    6. 'input' → logprob: -6.242013454437256
    7. ''' → logprob: -6.367013454437256
    8. 'list' → logprob: -7.617013454437256
    9. '''' → logprob: -7.867013454437256
    10. '"",' → logprob: -7.867013454437256

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0010488852858543396
    2. '.' → logprob: -7.126049041748047
    3. '.readlines' → logprob: -8.376049041748047
    4. '.read' → logprob: -11.376049041748047
    5. '().' → logprob: -13.376049041748047
    6. ' .' → logprob: -15.001049041748047
    7. '.write' → logprob: -15.126049041748047
    8. '```' → logprob: -15.626049041748047
    9. '.rstrip' → logprob: -16.751049041748047
    10. ' readline' → logprob: -17.001049041748047

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007614201866090298
    2. '()' → logprob: -4.8826141357421875
    3. '())' → logprob: -13.257614135742188
    4. ' ().' → logprob: -13.632614135742188
    5. '()).' → logprob: -13.882614135742188
    6. '(' → logprob: -14.007614135742188
    7. '.' → logprob: -14.007614135742188
    8. '.readline' → logprob: -14.007614135742188
    9. '()].' → logprob: -15.007614135742188
    10. '().__' → logprob: -15.382614135742188

Token 20: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.011126813478767872
    2. 'split' → logprob: -4.51112699508667
    3. 'strip' → logprob: -9.511126518249512
    4. 'rs' → logprob: -12.636126518249512
    5. 'read' → logprob: -13.886126518249512
    6. 'rst' → logprob: -14.886126518249512
    7. '.rstrip' → logprob: -14.886126518249512
    8. 'decode' → logprob: -17.511127471923828
    9. '```' → logprob: -17.886127471923828
    10. 'rl' → logprob: -18.136127471923828

Token 21: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11093828082084656
    2. '().' → logprob: -2.360938310623169
    3. '(),' → logprob: -4.73593807220459
    4. '(' → logprob: -6.61093807220459
    5. ',' → logprob: -8.23593807220459
    6. '()[' → logprob: -8.61093807220459
    7. '()
' → logprob: -10.61093807220459
    8. ')' → logprob: -10.73593807220459
    9. ' ()' → logprob: -10.86093807220459
    10. '())' → logprob: -11.73593807220459

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. 'strip' → logprob: -14.750000953674316
    3. 'replace' → logprob: -15.125000953674316
    4. 'rstrip' → logprob: -15.500000953674316
    5. ' split' → logprob: -15.750000953674316
    6. '(split' → logprob: -16.875001907348633
    7. 's' → logprob: -17.000001907348633
    8. 'spl' → logprob: -17.500001907348633
    9. '.split' → logprob: -18.625001907348633
    10. 'sp' → logprob: -19.125001907348633

Token 23: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02256261184811592
    2. '(' → logprob: -4.022562503814697
    3. '("("' → logprob: -6.022562503814697
    4. '()' → logprob: -6.272562503814697
    5. '("' → logprob: -9.522562980651855
    6. '(',' → logprob: -12.022562980651855
    7. '('.')' → logprob: -12.522562980651855
    8. '(('' → logprob: -12.897562980651855
    9. '(`' → logprob: -13.147562980651855
    10. '('(' → logprob: -14.147562980651855

Token 24: 'str' (ID: 689)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4130779802799225
    2. 'for' → logprob: -1.2880779504776
    3. 'result' → logprob: -3.1630780696868896
    4. 'p' → logprob: -4.4130778312683105
    5. 'r' → logprob: -5.7880778312683105
    6. 'i' → logprob: -7.0380778312683105
    7. ' for' → logprob: -7.1630778312683105
    8. 's' → logprob: -7.6630778312683105
    9. 'a' → logprob: -7.6630778312683105
    10. 'f' → logprob: -7.9130778312683105

Token 25: 'ng' (ID: 892)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.09701644629240036
    2. '1' → logprob: -3.4720163345336914
    3. 'i' → logprob: -3.8470163345336914
    4. '_' → logprob: -4.222016334533691
    5. 's' → logprob: -4.597016334533691
    6. 'e' → logprob: -5.097016334533691
    7. 'ings' → logprob: -5.597016334533691
    8. 'in' → logprob: -6.097016334533691
    9. 'eam' → logprob: -7.472016334533691
    10. '_i' → logprob: -7.847016334533691

Token 26: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7753581404685974
    2. 's' → logprob: -2.025358200073242
    3. ' =' → logprob: -2.150358200073242
    4. '_' → logprob: -2.275358200073242
    5. '=' → logprob: -2.900358200073242
    6. 'ing' → logprob: -3.150358200073242
    7. '[' → logprob: -3.400358200073242
    8. '_len' → logprob: -3.525358200073242
    9. '_length' → logprob: -5.025358200073242
    10. '(' → logprob: -5.650358200073242

Token 27: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.16647885739803314
    2. '''' → logprob: -2.2914788722991943
    3. 's' → logprob: -3.2914788722991943
    4. 't' → logprob: -5.041478633880615
    5. 'str' → logprob: -6.416478633880615
    6. ''s' → logprob: -6.416478633880615
    7. '"' → logprob: -6.416478633880615
    8. '"s' → logprob: -6.416478633880615
    9. ' ""' → logprob: -6.791478633880615
    10. ''' → logprob: -8.041479110717773

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.988221684878226e-06
    2. 'f' → logprob: -12.000006675720215
    3. ' for' → logprob: -14.250006675720215
    4. 's' → logprob: -16.12500762939453
    5. 'fo' → logprob: -17.00000762939453
    6. 'i' → logprob: -17.37500762939453
    7. 't' → logprob: -18.50000762939453
    8. '	for' → logprob: -19.00000762939453
    9. 'r' → logprob: -19.50000762939453
    10. '0' → logprob: -20.50000762939453

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07059670984745026
    2. 'i' → logprob: -3.320596694946289
    3. ' _' → logprob: -3.945596694946289
    4. '_' → logprob: -4.445596694946289
    5. '_i' → logprob: -7.445596694946289
    6. ' ' → logprob: -7.945596694946289
    7. ' s' → logprob: -12.070596694946289
    8. ' c' → logprob: -12.070596694946289
    9. ' in' → logprob: -12.945596694946289
    10. 'c' → logprob: -13.195596694946289

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02981690503656864
    2. 'in' → logprob: -3.5298168659210205
    3. ' ' → logprob: -9.779816627502441
    4. '	in' → logprob: -12.654816627502441
    5. ' i' → logprob: -13.654816627502441
    6. 'n' → logprob: -13.779816627502441
    7. '  ' → logprob: -13.904816627502441
    8. ',' → logprob: -14.279816627502441
    9. 'range' → logprob: -14.279816627502441
    10. '<|end|>' → logprob: -15.154816627502441

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269315630197525
    2. 'range' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.501931190490723
    4. '	range' → logprob: -13.501931190490723
    5. ' xrange' → logprob: -15.376931190490723
    6. ' ran' → logprob: -15.751931190490723
    7. '(range' → logprob: -16.12693214416504
    8. '  ' → logprob: -16.62693214416504
    9. ' rang' → logprob: -16.87693214416504
    10. '   ' → logprob: -16.87693214416504

Token 32: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006736095994710922
    2. '(' → logprob: -5.0067362785339355
    3. '(len' → logprob: -10.881735801696777
    4. ' (' → logprob: -13.756735801696777
    5. ' n' → logprob: -15.006735801696777
    6. 'n' → logprob: -15.381735801696777
    7. '(i' → logprob: -15.631735801696777
    8. '(
' → logprob: -15.756735801696777
    9. '(length' → logprob: -17.506736755371094
    10. '()' → logprob: -18.756736755371094

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008108594454824924
    2. ')' → logprob: -4.883108615875244
    3. '):
' → logprob: -7.758108615875244
    4. ':' → logprob: -10.008108139038086
    5. '+' → logprob: -10.758108139038086
    6. ' ):' → logprob: -12.258108139038086
    7. '):
' → logprob: -13.633108139038086
    8. '):

' → logprob: -15.258108139038086
    9. ')：' → logprob: -15.383108139038086
    10. '）：' → logprob: -15.383108139038086

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31899580359458923
    2. ' str' → logprob: -1.5689958333969116
    3. 'str' → logprob: -2.943995714187622
    4. '	str' → logprob: -5.193995952606201
    5. 's' → logprob: -5.693995952606201
    6. '<|end|>' → logprob: -7.068995952606201
    7. ' ' → logprob: -7.193995952606201
    8. ' s' → logprob: -7.193995952606201
    9. '_str' → logprob: -8.693995475769043
    10. '```' → logprob: -9.193995475769043

Token 35: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.35221701860427856
    2. ' str' → logprob: -1.2272169589996338
    3. '   ' → logprob: -5.727217197418213
    4. 's' → logprob: -8.227216720581055
    5. '	str' → logprob: -8.727216720581055
    6. ' s' → logprob: -10.727216720581055
    7. '<|end|>' → logprob: -11.227216720581055
    8. '_str' → logprob: -11.477216720581055
    9. '```' → logprob: -11.852216720581055
    10. '(str' → logprob: -12.102216720581055

Token 36: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.0003309361054562032
    2. 'g' → logprob: -8.500330924987793
    3. '+=' → logprob: -9.125330924987793
    4. ' +=' → logprob: -11.000330924987793
    5. '+' → logprob: -13.875330924987793
    6. '```' → logprob: -14.875330924987793
    7. '_ng' → logprob: -16.25033187866211
    8. 'n' → logprob: -16.37533187866211
    9. '+=(' → logprob: -16.37533187866211
    10. '+='' → logprob: -17.25033187866211

Token 37: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006765818223357201
    2. ' +=' → logprob: -5.006765842437744
    3. '+' → logprob: -10.381765365600586
    4. '+=(' → logprob: -11.006765365600586
    5. '+='' → logprob: -13.881765365600586
    6. '+="' → logprob: -14.131765365600586
    7. '=' → logprob: -14.256765365600586
    8. ']+=' → logprob: -15.381765365600586
    9. ' +' → logprob: -15.631765365600586
    10. '.append' → logprob: -17.006765365600586

Token 38: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002657701028510928
    2. 't' → logprob: -6.252657890319824
    3. ' s' → logprob: -7.252657890319824
    4. 'str' → logprob: -11.252657890319824
    5. ' t' → logprob: -12.127657890319824
    6. '(s' → logprob: -14.002657890319824
    7. ' ' → logprob: -15.627657890319824
    8. '`s' → logprob: -15.752657890319824
    9. ' str' → logprob: -15.877657890319824
    10. '   ' → logprob: -16.002656936645508

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02633560076355934
    2. '[' → logprob: -3.6513357162475586
    3. 'i' → logprob: -10.901335716247559
    4. '1' → logprob: -12.901335716247559
    5. '[str' → logprob: -13.151335716247559
    6. '[int' → logprob: -13.151335716247559
    7. 's' → logprob: -13.526335716247559
    8. '[t' → logprob: -13.526335716247559
    9. '\[' → logprob: -13.526335716247559
    10. ' ' → logprob: -13.651335716247559

Token 40: ']
' (ID: 1592)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24131517112255096
    2. ']' → logprob: -2.2413151264190674
    3. '+t' → logprob: -3.1163151264190674
    4. ')t' → logprob: -4.1163153648376465
    5. '+' → logprob: -4.2413153648376465
    6. ' t' → logprob: -4.8663153648376465
    7. ')' → logprob: -5.2413153648376465
    8. '<|end|>' → logprob: -5.3663153648376465
    9. ']+' → logprob: -5.4913153648376465
    10. '}' → logprob: -5.7413153648376465

Token 41: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001272258348762989
    2. '+t' → logprob: -6.751272201538086
    3. ' t' → logprob: -9.626272201538086
    4. ' +' → logprob: -10.751272201538086
    5. '+' → logprob: -11.876272201538086
    6. '   ' → logprob: -12.376272201538086
    7. '  ' → logprob: -13.876272201538086
    8. ' ' → logprob: -13.876272201538086
    9. '	t' → logprob: -14.126272201538086
    10. '`t' → logprob: -15.376272201538086

Token 42: ' str' (ID: 989)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0016071052523329854
    2. '+t' → logprob: -6.6266069412231445
    3. ' t' → logprob: -8.376606941223145
    4. ' +' → logprob: -10.751606941223145
    5. '+' → logprob: -11.001606941223145
    6. '   ' → logprob: -11.876606941223145
    7. '	t' → logprob: -12.501606941223145
    8. ' ' → logprob: -14.376606941223145
    9. '`t' → logprob: -14.626606941223145
    10. '  ' → logprob: -14.751606941223145

Token 43: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.03272488713264465
    2. 'g' → logprob: -3.5327248573303223
    3. '+' → logprob: -5.907724857330322
    4. '[' → logprob: -9.40772533416748
    5. ' +' → logprob: -9.78272533416748
    6. ' +=' → logprob: -10.53272533416748
    7. 'n' → logprob: -11.03272533416748
    8. '+
' → logprob: -11.40772533416748
    9. '+=' → logprob: -11.65772533416748
    10. '   ' → logprob: -11.78272533416748

Token 44: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02627057395875454
    2. '[i' → logprob: -4.151270389556885
    3. ' +' → logprob: -5.526270389556885
    4. '+=' → logprob: -6.151270389556885
    5. '+i' → logprob: -6.651270389556885
    6. '+t' → logprob: -6.776270389556885
    7. '[' → logprob: -6.901270389556885
    8. 't' → logprob: -8.901270866394043
    9. '==' → logprob: -9.276270866394043
    10. ' +=' → logprob: -9.401270866394043

Token 45: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001502598519437015
    2. ' t' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.126502990722656
    4. '`t' → logprob: -16.501502990722656
    5. '	t' → logprob: -16.751502990722656
    6. '  ' → logprob: -18.876502990722656
    7. '   ' → logprob: -19.001502990722656
    8. '<|end|>' → logprob: -19.876502990722656
    9. 's' → logprob: -20.001502990722656
    10. '_t' → logprob: -20.251502990722656

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0067204674705863
    2. '[' → logprob: -5.006720542907715
    3. '[
' → logprob: -13.131720542907715
    4. '```' → logprob: -13.881720542907715
    5. '[I' → logprob: -14.881720542907715
    6. '\[' → logprob: -15.131720542907715
    7. 'i' → logprob: -15.506720542907715
    8. '[j' → logprob: -15.506720542907715
    9. '[int' → logprob: -15.631720542907715
    10. ' [' → logprob: -15.631720542907715

Token 47: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017674315720796585
    2. '}' → logprob: -4.517674446105957
    3. ')' → logprob: -5.392674446105957
    4. '']' → logprob: -6.267674446105957
    5. '<|end|>' → logprob: -9.017674446105957
    6. '"]' → logprob: -11.392674446105957
    7. '```' → logprob: -12.142674446105957
    8. ' ]' → logprob: -12.642674446105957
    9. '<|end|>' → logprob: -12.642674446105957
    10. ']
' → logprob: -13.017674446105957

Token 48: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007338665891438723
    2. 'p' → logprob: -8.000734329223633
    3. '\n' → logprob: -8.125734329223633
    4. 'pr' → logprob: -10.250734329223633
    5. '
' → logprob: -11.250734329223633
    6. ' print' → logprob: -11.500734329223633
    7. '\' → logprob: -11.500734329223633
    8. '#' → logprob: -11.625734329223633
    9. 'prin' → logprob: -12.000734329223633
    10. '#print' → logprob: -12.750734329223633

Token 49: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16023924946784973
    2. '(str' → logprob: -1.9102392196655273
    3. '('' → logprob: -11.660239219665527
    4. '("("' → logprob: -12.910239219665527
    5. '(
' → logprob: -14.285239219665527
    6. '(`' → logprob: -14.410239219665527
    7. '()' → logprob: -14.410239219665527
    8. 'str' → logprob: -14.660239219665527
    9. '(s' → logprob: -14.910239219665527
    10. ' (' → logprob: -15.285239219665527

Token 50: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.07292085140943527
    2. 'g' → logprob: -2.697920799255371
    3. ')' → logprob: -5.822920799255371
    4. ''ng' → logprob: -12.447920799255371
    5. '`)' → logprob: -13.072920799255371
    6. '(' → logprob: -13.072920799255371
    7. 'gn' → logprob: -13.197920799255371
    8. 'нг' → logprob: -13.697920799255371
    9. '_ng' → logprob: -13.947920799255371
    10. 'ing' → logprob: -13.947920799255371

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.25
    3. ' )' → logprob: -16.25
    4. '')' → logprob: -17.375
    5. ')`' → logprob: -18.5
    6. '`)' → logprob: -19.625
    7. ')
' → logprob: -19.875
    8. '")' → logprob: -21.0
    9. '）' → logprob: -21.125
    10. ')}' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 40.82%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 73.47%
================================================================================
