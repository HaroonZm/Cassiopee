================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def count_tuples(n: int, k: int) -> int:
    cubes = lambda x: x * x * x
    base = cubes(n // k)
    if k & 1:
        return base
    half = cubes((n + (k >> 1)) // k)
    return base + half

n, k = map(int, stdin.readline().split())
print(count_tuples(n, k))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.051410701125860214
    2. ' argv' → logprob: -3.426410675048828
    3. 'exit' → logprob: -4.176410675048828
    4. ' exit' → logprob: -6.801410675048828
    5. 'stdout' → logprob: -7.301410675048828
    6. 'stdin' → logprob: -8.426410675048828
    7. 'path' → logprob: -8.926410675048828
    8. 'import' → logprob: -10.176410675048828
    9. 'stderr' → logprob: -10.426410675048828
    10. 'version' → logprob: -10.676410675048828

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026680389419198036
    2. '.readline' → logprob: -3.9016804695129395
    3. '.read' → logprob: -6.2766804695129395
    4. '\n' → logprob: -7.0266804695129395
    5. ',' → logprob: -7.4016804695129395
    6. 'for' → logprob: -7.5266804695129395
    7. 'print' → logprob: -7.7766804695129395
    8. 'import' → logprob: -7.9016804695129395
    9. '
' → logprob: -8.151679992675781
    10. '```' → logprob: -8.276679992675781

Token 6: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0812530517578125
    2. ' read' → logprob: -2.7062530517578125
    3. ' process' → logprob: -5.4562530517578125
    4. '_read' → logprob: -6.5812530517578125
    5. ' readline' → logprob: -6.9562530517578125
    6. ' ' → logprob: -7.0812530517578125
    7. ' space' → logprob: -7.0812530517578125
    8. ' parse' → logprob: -7.3312530517578125
    9. 'read' → logprob: -8.081253051757812
    10. ' main' → logprob: -8.331253051757812

Token 7: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4912005662918091
    2. '_words' → logprob: -1.116200566291809
    3. '(' → logprob: -3.9912004470825195
    4. '_lines' → logprob: -4.3662004470825195
    5. '_tokens' → logprob: -4.6162004470825195
    6. '_items' → logprob: -5.6162004470825195
    7. '_elements' → logprob: -5.9912004470825195
    8. '_parts' → logprob: -6.2412004470825195
    9. '_chars' → logprob: -6.3662004470825195
    10. '_spaces' → logprob: -6.4912004470825195

Token 8: 'uples' (ID: 165982)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7701051831245422
    2. 'okens' → logprob: -0.7701051831245422
    3. 'e' → logprob: -2.7701051235198975
    4. '_' → logprob: -5.270105361938477
    5. '_o' → logprob: -6.270105361938477
    6. 'oken' → logprob: -7.020105361938477
    7. '_e' → logprob: -7.270105361938477
    8. 'r' → logprob: -7.520105361938477
    9. 'otal' → logprob: -7.895105361938477
    10. 'a' → logprob: -7.895105361938477

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036940164864063263
    2. '_' → logprob: -6.2536940574646
    3. '```' → logprob: -7.6286940574646
    4. '():' → logprob: -7.8786940574646
    5. ':' → logprob: -8.503693580627441
    6. '[' → logprob: -9.003693580627441
    7. '(:' → logprob: -9.878693580627441
    8. '("("' → logprob: -10.003693580627441
    9. ' (' → logprob: -10.128693580627441
    10. '):' → logprob: -10.128693580627441

Token 10: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04263920336961746
    2. '):' → logprob: -3.2926392555236816
    3. ')' → logprob: -5.417639255523682
    4. ':' → logprob: -9.667638778686523
    5. ' ,' → logprob: -10.667638778686523
    6. ',n' → logprob: -11.042638778686523
    7. 's' → logprob: -11.542638778686523
    8. ',)' → logprob: -12.167638778686523
    9. ',a' → logprob: -13.042638778686523
    10. ',:)' → logprob: -13.042638778686523

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14271338284015656
    2. 'int' → logprob: -2.0177133083343506
    3. ' ' → logprob: -10.76771354675293
    4. ')' → logprob: -12.26771354675293
    5. ',int' → logprob: -13.14271354675293
    6. ':int' → logprob: -13.39271354675293
    7. ' i' → logprob: -13.51771354675293
    8. ',' → logprob: -13.76771354675293
    9. ' )' → logprob: -13.89271354675293
    10. '=int' → logprob: -14.14271354675293

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034680359065532684
    2. ')' → logprob: -3.4096803665161133
    3. '):' → logprob: -6.909680366516113
    4. ',)' → logprob: -11.659680366516113
    5. ' ,' → logprob: -11.909680366516113
    6. ')->' → logprob: -11.909680366516113
    7. ',int' → logprob: -12.409680366516113
    8. ',n' → logprob: -13.159680366516113
    9. ',count' → logprob: -14.284680366516113
    10. ' )' → logprob: -14.534680366516113

Token 13: ' k' (ID: 372)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -1.6990739107131958
    2. ' arr' → logprob: -1.9490739107131958
    3. ' k' → logprob: -2.0740737915039062
    4. ' elements' → logprob: -2.0740737915039062
    5. ' tuples' → logprob: -2.1990737915039062
    6. ' m' → logprob: -2.9490737915039062
    7. ' t' → logprob: -2.9490737915039062
    8. ' items' → logprob: -3.5740737915039062
    9. ')' → logprob: -3.6990737915039062
    10. ' iterable' → logprob: -3.9490737915039062

Token 14: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7261896729469299
    2. '):' → logprob: -1.3511896133422852
    3. ':' → logprob: -1.4761896133422852
    4. ',' → logprob: -3.726189613342285
    5. '=' → logprob: -5.601189613342285
    6. ')=' → logprob: -8.726189613342285
    7. '```' → logprob: -8.726189613342285
    8. ')->' → logprob: -9.851189613342285
    9. ')>' → logprob: -9.851189613342285
    10. ':int' → logprob: -9.976189613342285

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760009288787842
    2. ' int' → logprob: -0.8260009288787842
    3. ' ' → logprob: -11.201001167297363
    4. '=int' → logprob: -11.326001167297363
    5. '[int' → logprob: -11.326001167297363
    6. ')' → logprob: -11.576001167297363
    7. ':int' → logprob: -12.451001167297363
    8. '(int' → logprob: -12.576001167297363
    9. ' str' → logprob: -13.701001167297363
    10. '<int' → logprob: -13.826001167297363

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20506708323955536
    2. '):' → logprob: -1.7050670385360718
    3. ',' → logprob: -5.705067157745361
    4. ')->' → logprob: -8.330066680908203
    5. ':' → logprob: -10.830066680908203
    6. '')' → logprob: -11.705066680908203
    7. '`)' → logprob: -11.830066680908203
    8. ')>' → logprob: -11.955066680908203
    9. '   ' → logprob: -12.455066680908203
    10. ''):' → logprob: -12.705066680908203

Token 17: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -4.8232690460281447e-05
    2. ':return' → logprob: -11.000048637390137
    3. '):' → logprob: -11.750048637390137
    4. ':**' → logprob: -12.000048637390137
    5. '():' → logprob: -12.500048637390137
    6. '':' → logprob: -12.750048637390137
    7. ' :' → logprob: -13.125048637390137
    8. '[:]' → logprob: -13.750048637390137
    9. '`:' → logprob: -14.000048637390137
    10. ':
' → logprob: -14.000048637390137

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2014247477054596
    2. ' int' → logprob: -1.7014247179031372
    3. ' list' → logprob: -12.576424598693848
    4. '[int' → logprob: -13.201424598693848
    5. 'list' → logprob: -13.326424598693848
    6. '   ' → logprob: -13.701424598693848
    7. ' ' → logprob: -13.951424598693848
    8. '  ' → logprob: -15.076424598693848
    9. ' None' → logprob: -15.076424598693848
    10. '<int' → logprob: -15.076424598693848

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4974866644479334e-05
    2. '':' → logprob: -12.250015258789062
    3. ':
' → logprob: -13.125015258789062
    4. '):' → logprob: -13.375015258789062
    5. ':**' → logprob: -13.500015258789062
    6. ':return' → logprob: -13.500015258789062
    7. '`:' → logprob: -14.125015258789062
    8. '   ' → logprob: -14.500015258789062
    9. '():' → logprob: -14.500015258789062
    10. '':'' → logprob: -14.750015258789062

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5897172689437866
    2. '   ' → logprob: -0.8397172689437866
    3. '    ' → logprob: -5.714717388153076
    4. '```' → logprob: -5.839717388153076
    5. ':
' → logprob: -6.089717388153076
    6. ' ' → logprob: -7.089717388153076
    7. '    
' → logprob: -7.339717388153076
    8. '\n' → logprob: -7.339717388153076
    9. '\' → logprob: -7.464717388153076
    10. ' :' → logprob: -8.089716911315918

Token 21: ' cubes' (ID: 88455)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.23893141746521
    2. ' result' → logprob: -1.73893141746521
    3. ' count' → logprob: -1.86393141746521
    4. 'result' → logprob: -2.11393141746521
    5. 'count' → logprob: -2.11393141746521
    6. ' if' → logprob: -2.48893141746521
    7. ' total' → logprob: -4.488931655883789
    8. 'total' → logprob: -5.238931655883789
    9. ' ' → logprob: -5.363931655883789
    10. 'if' → logprob: -5.488931655883789

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22270362079143524
    2. '=' → logprob: -2.222703695297241
    3. '_sum' → logprob: -2.972703695297241
    4. '_s' → logprob: -4.222703456878662
    5. '[' → logprob: -4.722703456878662
    6. 's' → logprob: -5.222703456878662
    7. '_' → logprob: -6.222703456878662
    8. '   ' → logprob: -6.222703456878662
    9. '_count' → logprob: -6.347703456878662
    10. '```' → logprob: -6.597703456878662

Token 23: ' lambda' (ID: 27871)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0683681070804596
    2. ' []' → logprob: -3.6933681964874268
    3. '[' → logprob: -4.068367958068848
    4. '[i' → logprob: -4.318367958068848
    5. '[n' → logprob: -5.943367958068848
    6. '[]' → logprob: -6.318367958068848
    7. ' set' → logprob: -6.443367958068848
    8. ' {' → logprob: -6.818367958068848
    9. '[k' → logprob: -6.818367958068848
    10. 'set' → logprob: -7.693367958068848

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5687760710716248
    2. 'x' → logprob: -0.9437760710716248
    3. ' i' → logprob: -3.4437761306762695
    4. 'i' → logprob: -4.4437761306762695
    5. ' ' → logprob: -7.6937761306762695
    6. ' n' → logprob: -9.56877613067627
    7. ' lambda' → logprob: -9.56877613067627
    8. 'lambda' → logprob: -9.56877613067627
    9. 'n' → logprob: -10.31877613067627
    10. 'a' → logprob: -10.31877613067627

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010392549447715282
    2. ' :' → logprob: -4.635392665863037
    3. 'x' → logprob: -8.010392189025879
    4. ' x' → logprob: -9.010392189025879
    5. '**' → logprob: -9.635392189025879
    6. ':x' → logprob: -9.760392189025879
    7. '   ' → logprob: -11.135392189025879
    8. '  ' → logprob: -12.135392189025879
    9. ' ' → logprob: -12.135392189025879
    10. ',' → logprob: -12.135392189025879

Token 26: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12743186950683594
    2. 'x' → logprob: -2.127431869506836
    3. ' ' → logprob: -8.127431869506836
    4. ' (' → logprob: -8.877431869506836
    5. '   ' → logprob: -10.627431869506836
    6. '(x' → logprob: -11.002431869506836
    7. '(' → logprob: -11.627431869506836
    8. '3' → logprob: -12.377431869506836
    9. '  ' → logprob: -12.752431869506836
    10. ' [' → logprob: -12.752431869506836

Token 27: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.003444449743255973
    2. ' **' → logprob: -5.753444671630859
    3. '*' → logprob: -8.75344467163086
    4. ' ' → logprob: -10.25344467163086
    5. '***' → logprob: -10.37844467163086
    6. ' *' → logprob: -11.00344467163086
    7. '3' → logprob: -11.25344467163086
    8. '*x' → logprob: -11.75344467163086
    9. '```' → logprob: -13.62844467163086
    10. '³' → logprob: -14.75344467163086

Token 28: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18041320145130157
    2. ' x' → logprob: -1.8054132461547852
    3. '3' → logprob: -7.805413246154785
    4. ' ' → logprob: -8.680413246154785
    5. '4' → logprob: -10.180413246154785
    6. '*' → logprob: -10.555413246154785
    7. '*x' → logprob: -11.555413246154785
    8. '**' → logprob: -12.430413246154785
    9. '2' → logprob: -12.555413246154785
    10. '  ' → logprob: -13.055413246154785

Token 29: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.775854766368866
    2. '*' → logprob: -0.900854766368866
    3. 'x' → logprob: -2.2758548259735107
    4. '*x' → logprob: -3.6508548259735107
    5. ' ' → logprob: -6.400854587554932
    6. '<|end|>' → logprob: -6.650854587554932
    7. ' x' → logprob: -7.150854587554932
    8. '3' → logprob: -8.65085506439209
    9. '1' → logprob: -8.77585506439209
    10. '	' → logprob: -9.40085506439209

Token 30: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. ' x' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -15.125001907348633
    4. '<|end|>' → logprob: -17.500001907348633
    5. ' ' → logprob: -18.000001907348633
    6. '  ' → logprob: -19.500001907348633
    7. '	x' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.375001907348633
    9. ')x' → logprob: -20.875001907348633
    10. '*x' → logprob: -21.250001907348633

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3602713346481323
    2. '
' → logprob: -1.6102713346481323
    3. '<|end|>' → logprob: -3.235271453857422
    4. '    
' → logprob: -4.485271453857422
    5. '\' → logprob: -4.485271453857422
    6. ' ' → logprob: -4.610271453857422
    7. '\n' → logprob: -4.985271453857422
    8. ')' → logprob: -5.110271453857422
    9. ',' → logprob: -6.110271453857422
    10. '(' → logprob: -6.235271453857422

Token 33: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0863729938864708
    2. 'result' → logprob: -2.7113730907440186
    3. ' result' → logprob: -5.4613728523254395
    4. 'count' → logprob: -5.5863728523254395
    5. '
' → logprob: -6.4613728523254395
    6. '    
' → logprob: -6.5863728523254395
    7. 'n' → logprob: -6.9613728523254395
    8. 'total' → logprob: -7.8363728523254395
    9. ' count' → logprob: -7.9613728523254395
    10. 's' → logprob: -7.9613728523254395

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04736260697245598
    2. '=' → logprob: -3.1723625659942627
    3. ' ' → logprob: -7.047362804412842
    4. '_count' → logprob: -7.047362804412842
    5. '_' → logprob: -7.797362804412842
    6. 's' → logprob: -7.797362804412842
    7. '   ' → logprob: -8.422362327575684
    8. '_case' → logprob: -8.547362327575684
    9. '_cases' → logprob: -8.672362327575684
    10. 'case' → logprob: -9.047362327575684

Token 35: ' cubes' (ID: 88455)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4552956819534302
    2. '1' → logprob: -1.9552956819534302
    3. ' k' → logprob: -2.2052955627441406
    4. ' n' → logprob: -3.3302955627441406
    5. 'k' → logprob: -3.5802955627441406
    6. '0' → logprob: -3.5802955627441406
    7. ' cubes' → logprob: -4.580295562744141
    8. 'n' → logprob: -5.705295562744141
    9. ' (' → logprob: -6.330295562744141
    10. '2' → logprob: -6.580295562744141

Token 36: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3809754252433777
    2. '(n' → logprob: -1.5059754848480225
    3. '(' → logprob: -2.3809754848480225
    4. '(base' → logprob: -6.255975246429443
    5. '((' → logprob: -8.880975723266602
    6. '(i' → logprob: -9.130975723266602
    7. 'base' → logprob: -9.630975723266602
    8. 'k' → logprob: -9.630975723266602
    9. '<|end|>' → logprob: -10.255975723266602
    10. '(x' → logprob: -10.505975723266602

Token 37: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00790518056601286
    2. '   ' → logprob: -5.382905006408691
    3. ' )' → logprob: -6.632905006408691
    4. '-' → logprob: -7.507905006408691
    5. '))' → logprob: -7.757905006408691
    6. '//' → logprob: -8.132905006408691
    7. ' -' → logprob: -8.632905006408691
    8. ' ' → logprob: -8.882905006408691
    9. ' //' → logprob: -9.382905006408691
    10. '`)' → logprob: -10.132905006408691

Token 38: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019479141337797046
    2. ' k' → logprob: -6.75194787979126
    3. '2' → logprob: -7.50194787979126
    4. '3' → logprob: -9.751948356628418
    5. ' ' → logprob: -10.001948356628418
    6. '(' → logprob: -10.126948356628418
    7. '(k' → logprob: -10.751948356628418
    8. '   ' → logprob: -11.001948356628418
    9. '  ' → logprob: -11.376948356628418
    10. '1' → logprob: -11.376948356628418

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009101522737182677
    2. '))' → logprob: -7.25091028213501
    3. ' )' → logprob: -8.875909805297852
    4. ')))' → logprob: -10.500909805297852
    5. '   ' → logprob: -11.375909805297852
    6. ')
' → logprob: -12.000909805297852
    7. '+' → logprob: -13.375909805297852
    8. ' ' → logprob: -13.500909805297852
    9. '*' → logprob: -13.625909805297852
    10. '`)' → logprob: -13.625909805297852

Token 40: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.058445692062378
    2. '   ' → logprob: -1.058445692062378
    3. ' +' → logprob: -1.808445692062378
    4. '*' → logprob: -3.308445692062378
    5. ')' → logprob: -3.808445692062378
    6. '**' → logprob: -3.808445692062378
    7. '<|end|>' → logprob: -4.058445930480957
    8. ' *' → logprob: -4.933445930480957
    9. ' ' → logprob: -4.933445930480957
    10. '*k' → logprob: -5.683445930480957

Token 41: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7408833503723145
    2. ' +' → logprob: -0.7408833503723145
    3. '*' → logprob: -3.8658833503723145
    4. ' *' → logprob: -4.7408833503723145
    5. ' ' → logprob: -4.9908833503723145
    6. '   ' → logprob: -6.1158833503723145
    7. ')' → logprob: -6.1158833503723145
    8. '**' → logprob: -6.4908833503723145
    9. ' -' → logprob: -7.1158833503723145
    10. '-' → logprob: -7.2408833503723145

Token 42: ' k' (ID: 372)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.44662773609161377
    2. ' (' → logprob: -1.0716277360916138
    3. '(n' → logprob: -4.821627616882324
    4. 'n' → logprob: -4.821627616882324
    5. ' k' → logprob: -7.196627616882324
    6. '(' → logprob: -7.571627616882324
    7. ' ' → logprob: -8.571627616882324
    8. ' not' → logprob: -9.946627616882324
    9. ' ((' → logprob: -10.196627616882324
    10. 'k' → logprob: -10.321627616882324

Token 43: ' &' (ID: 827)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7729454040527344
    2. ' >' → logprob: -1.1479454040527344
    3. '==' → logprob: -2.6479454040527344
    4. ' <=' → logprob: -2.7729454040527344
    5. '>' → logprob: -3.1479454040527344
    6. ' <' → logprob: -3.8979454040527344
    7. ' ' → logprob: -4.647945404052734
    8. '<=' → logprob: -5.397945404052734
    9. ' >=' → logprob: -5.772945404052734
    10. ' *' → logprob: -6.272945404052734

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5831733345985413
    2. ' ' → logprob: -0.8331733345985413
    3. ' k' → logprob: -5.2081732749938965
    4. ' (' → logprob: -6.9581732749938965
    5. 'k' → logprob: -7.9581732749938965
    6. 'nbsp' → logprob: -9.333173751831055
    7. ' n' → logprob: -9.708173751831055
    8. '(k' → logprob: -9.833173751831055
    9. '&' → logprob: -10.520673751831055
    10. '-' → logprob: -10.583173751831055

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012357189320027828
    2. 'k' → logprob: -4.637357234954834
    3. ' ' → logprob: -6.512357234954834
    4. '(k' → logprob: -7.262357234954834
    5. '(' → logprob: -8.762356758117676
    6. ' (' → logprob: -9.387356758117676
    7. ' k' → logprob: -9.637356758117676
    8. '(n' → logprob: -9.887356758117676
    9. '-' → logprob: -10.637356758117676
    10. 'n' → logprob: -11.762356758117676

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6671162247657776
    2. ' ==' → logprob: -0.7921162247657776
    3. ' :' → logprob: -4.042116165161133
    4. '==' → logprob: -4.167116165161133
    5. ' ' → logprob: -8.167116165161133
    6. '=' → logprob: -8.667116165161133
    7. ':
' → logprob: -8.917116165161133
    8. ' and' → logprob: -9.542116165161133
    9. ')' → logprob: -10.167116165161133
    10. ' =' → logprob: -10.167116165161133

Token 47: '       ' (ID: 309)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4224568009376526
    2. ':' → logprob: -1.6724567413330078
    3. ' +' → logprob: -2.672456741333008
    4. '   ' → logprob: -4.172456741333008
    5. ' ' → logprob: -4.422456741333008
    6. '*' → logprob: -4.422456741333008
    7. '+' → logprob: -4.422456741333008
    8. ' :' → logprob: -4.547456741333008
    9. '    ' → logprob: -4.797456741333008
    10. ' **' → logprob: -4.797456741333008

Token 48: ' return' (ID: 622)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5112471580505371
    2. ' +' → logprob: -1.886247158050537
    3. '   ' → logprob: -2.636247158050537
    4. ' return' → logprob: -2.636247158050537
    5. ' ' → logprob: -3.136247158050537
    6. 'return' (adapté à ' return') → logprob: -4.136247158050537
    7. '+' → logprob: -4.136247158050537
    8. ' **' → logprob: -5.011247158050537
    9. '    ' → logprob: -5.386247158050537
    10. '*' → logprob: -5.636247158050537

Token 49: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.023758644238114357
    2. 'base' → logprob: -4.273758411407471
    3. ' cubes' → logprob: -4.898758411407471
    4. '(base' → logprob: -7.273758411407471
    5. ' (' → logprob: -7.523758411407471
    6. 'c' → logprob: -8.648758888244629
    7. ' ' → logprob: -8.898758888244629
    8. ' n' → logprob: -9.023758888244629
    9. ' bases' → logprob: -9.023758888244629
    10. ' c' → logprob: -9.898758888244629

Token 50: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16537751257419586
    2. ' +' → logprob: -2.290377616882324
    3. '*' → logprob: -3.540377616882324
    4. '+' → logprob: -4.165377616882324
    5. ' **' → logprob: -5.415377616882324
    6. '**' → logprob: -7.290377616882324
    7. ' ' → logprob: -7.790377616882324
    8. '   ' → logprob: -8.040377616882324
    9. ' else' → logprob: -8.415377616882324
    10. '*(' → logprob: -8.915377616882324

Token 51: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.573334813117981
    2. ' *' → logprob: -1.573334813117981
    3. '+' → logprob: -1.823334813117981
    4. '*' → logprob: -3.8233346939086914
    5. ' ' → logprob: -4.573334693908691
    6. '   ' → logprob: -4.698334693908691
    7. ' else' → logprob: -5.448334693908691
    8. 'else' → logprob: -5.573334693908691
    9. ' **' → logprob: -5.573334693908691
    10. '<|end|>' → logprob: -5.698334693908691

Token 52: ' half' (ID: 6375)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25970056653022766
    2. ' *' → logprob: -1.7597005367279053
    3. '+' → logprob: -3.3847005367279053
    4. '*' → logprob: -4.384700775146484
    5. ' -' → logprob: -5.009700775146484
    6. ' ' → logprob: -5.884700775146484
    7. '-' → logprob: -8.009700775146484
    8. '    ' → logprob: -9.634700775146484
    9. ' +
' → logprob: -9.634700775146484
    10. ' **' → logprob: -10.009700775146484

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07058470696210861
    2. '=' → logprob: -2.820584774017334
    3. '_c' → logprob: -5.070584774017334
    4. '_' → logprob: -6.945584774017334
    5. 's' → logprob: -7.945584774017334
    6. '_base' → logprob: -8.570584297180176
    7. '_cube' → logprob: -8.945584297180176
    8. '   ' → logprob: -9.070584297180176
    9. '_k' → logprob: -9.320584297180176
    10. '2' → logprob: -9.820584297180176

Token 54: ' cubes' (ID: 88455)
  Prédit: ' cubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.2859431505203247
    2. 'c' → logprob: -1.4109431505203247
    3. ' ' → logprob: -5.910943031311035
    4. '   ' → logprob: -7.660943031311035
    5. ' base' → logprob: -8.035943031311035
    6. 'n' → logprob: -8.160943031311035
    7. ' c' → logprob: -8.410943031311035
    8. ' n' → logprob: -8.535943031311035
    9. 'base' → logprob: -8.785943031311035
    10. '  ' → logprob: -9.535943031311035

Token 55: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020193221047520638
    2. '((' → logprob: -4.020193099975586
    3. '(' → logprob: -7.145193099975586
    4. '(k' → logprob: -7.270193099975586
    5. ' (' → logprob: -7.520193099975586
    6. ' ((' → logprob: -12.395193099975586
    7. 'n' → logprob: -12.645193099975586
    8. 'k' → logprob: -13.395193099975586
    9. '(base' → logprob: -13.645193099975586
    10. ' n' → logprob: -13.645193099975586

Token 56: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09980790317058563
    2. 'k' → logprob: -2.5998079776763916
    3. ' n' → logprob: -4.3498077392578125
    4. '(n' → logprob: -5.2248077392578125
    5. '   ' → logprob: -6.9748077392578125
    6. ' k' → logprob: -7.5998077392578125
    7. '(k' → logprob: -7.5998077392578125
    8. ' (' → logprob: -8.724807739257812
    9. ' ' → logprob: -9.224807739257812
    10. '    ' → logprob: -9.724807739257812

Token 57: ' +' (ID: 659)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.10047753155231476
    2. '//' → logprob: -2.475477457046509
    3. ' ' → logprob: -4.975477695465088
    4. ' +' → logprob: -6.600477695465088
    5. '+' → logprob: -6.850477695465088
    6. '    ' → logprob: -7.725477695465088
    7. '   ' → logprob: -7.850477695465088
    8. 'k' → logprob: -8.47547721862793
    9. ' ' → logprob: -8.47547721862793
    10. '2' → logprob: -9.10047721862793

Token 58: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29025569558143616
    2. '1' → logprob: -1.6652556657791138
    3. '(k' → logprob: -3.4152557849884033
    4. ' k' → logprob: -3.7902557849884033
    5. ' (' → logprob: -5.790255546569824
    6. '(' → logprob: -6.040255546569824
    7. ' ' → logprob: -7.290255546569824
    8. '   ' → logprob: -7.540255546569824
    9. '{k' → logprob: -8.040255546569824
    10. '((' → logprob: -9.290255546569824

Token 59: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15087637305259705
    2. '1' → logprob: -2.02587628364563
    3. ' k' → logprob: -5.525876522064209
    4. '(k' → logprob: -5.775876522064209
    5. ' (' → logprob: -7.775876522064209
    6. '(' → logprob: -7.900876522064209
    7. ' ' → logprob: -9.40087604522705
    8. '   ' → logprob: -9.65087604522705
    9. '{k' → logprob: -10.15087604522705
    10. '2' → logprob: -10.52587604522705

Token 60: ' >>' (ID: 6832)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.7950765490531921
    2. '//' → logprob: -1.045076608657837
    3. '2' → logprob: -2.420076608657837
    4. '1' → logprob: -2.795076608657837
    5. ' ' → logprob: -3.920076608657837
    6. '   ' → logprob: -4.045076370239258
    7. '```' → logprob: -6.170076370239258
    8. ' -' → logprob: -6.170076370239258
    9. '-' → logprob: -6.545076370239258
    10. '    ' → logprob: -7.545076370239258

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011629798245849088
    2. ' ' → logprob: -9.500116348266602
    3. '   ' → logprob: -10.750116348266602
    4. '2' → logprob: -11.000116348266602
    5. '```' → logprob: -13.625116348266602
    6. '  ' → logprob: -14.750116348266602
    7. '0' → logprob: -15.625116348266602
    8. '    ' → logprob: -15.750116348266602
    9. '           ' → logprob: -16.1251163482666
    10. '3' → logprob: -16.1251163482666

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. '   ' → logprob: -11.000039100646973
    3. ' ' → logprob: -11.125039100646973
    4. '2' → logprob: -12.250039100646973
    5. '```' → logprob: -14.062539100646973
    6. '  ' → logprob: -15.062539100646973
    7. '0' → logprob: -15.187539100646973
    8. '`' → logprob: -15.812539100646973
    9. '-' → logprob: -16.187538146972656
    10. '    ' → logprob: -16.250038146972656

Token 63: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06336694210767746
    2. '))' → logprob: -2.9383668899536133
    3. ' )' → logprob: -4.813366889953613
    4. ' ))' → logprob: -8.938366889953613
    5. ')))' → logprob: -9.688366889953613
    6. ' ' → logprob: -9.813366889953613
    7. ')//' → logprob: -10.313366889953613
    8. '   ' → logprob: -10.563366889953613
    9. '  ' → logprob: -12.313366889953613
    10. '-' → logprob: -12.813366889953613

Token 64: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2297772914171219
    2. ' //' → logprob: -2.1047773361206055
    3. ' )' → logprob: -2.6047773361206055
    4. '//' → logprob: -5.2297773361206055
    5. ')//' → logprob: -6.2297773361206055
    6. ' ' → logprob: -6.2297773361206055
    7. ' ' → logprob: -9.979777336120605
    8. '   ' → logprob: -10.354777336120605
    9. '```' → logprob: -11.229777336120605
    10. '))' → logprob: -11.229777336120605

Token 65: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023266442120075226
    2. ' k' → logprob: -3.773266553878784
    3. ' (' → logprob: -11.273266792297363
    4. '(' → logprob: -13.023266792297363
    5. '(k' → logprob: -13.023266792297363
    6. ' ' → logprob: -13.523266792297363
    7. '	k' → logprob: -14.148266792297363
    8. '    ' → logprob: -14.523266792297363
    9. '   ' → logprob: -14.648266792297363
    10. ')' → logprob: -15.273266792297363

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.983476436696947e-05
    2. ' )' → logprob: -10.000089645385742
    3. ')
' → logprob: -10.625089645385742
    4. '-' → logprob: -12.625089645385742
    5. ')-' → logprob: -12.750089645385742
    6. ' ' → logprob: -12.875089645385742
    7. '-)' → logprob: -12.875089645385742
    8. ' -' → logprob: -13.125089645385742
    9. '   ' → logprob: -13.250089645385742
    10. '))' → logprob: -13.750089645385742

Token 67: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06726530939340591
    2. '-' → logprob: -3.442265272140503
    3. ' +' → logprob: -3.942265272140503
    4. '   ' → logprob: -4.692265510559082
    5. ' *' → logprob: -6.442265510559082
    6. '+' → logprob: -6.442265510559082
    7. ' ' → logprob: -8.067265510559082
    8. '*' → logprob: -8.192265510559082
    9. '    ' → logprob: -8.942265510559082
    10. '<|end|>' → logprob: -8.942265510559082

Token 68: ' return' (ID: 622)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3778208792209625
    2. '-' → logprob: -1.3778208494186401
    3. '   ' → logprob: -2.8778209686279297
    4. ' +' → logprob: -6.25282096862793
    5. '+' → logprob: -6.75282096862793
    6. 'return' (adapté à ' return') → logprob: -6.75282096862793
    7. ' return' → logprob: -7.37782096862793
    8. '    ' → logprob: -7.87782096862793
    9. ' ' → logprob: -8.37782096862793
    10. '-return' → logprob: -9.00282096862793

Token 69: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.013362917117774487
    2. 'base' → logprob: -4.388362884521484
    3. ' half' → logprob: -8.138362884521484
    4. ' cubes' → logprob: -8.513362884521484
    5. ' ' → logprob: -9.013362884521484
    6. ' abs' → logprob: -9.638362884521484
    7. '(base' → logprob: -9.638362884521484
    8. 'half' → logprob: -10.638362884521484
    9. ' bases' → logprob: -11.138362884521484
    10. 'abs' → logprob: -11.138362884521484

Token 70: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42538225650787354
    2. ' +' → logprob: -1.3003822565078735
    3. '+' → logprob: -3.175382137298584
    4. '-' → logprob: -3.550382137298584
    5. ' ' → logprob: -5.675382137298584
    6. '*' → logprob: -10.175382614135742
    7. ' *' → logprob: -10.925382614135742
    8. ' +
' → logprob: -11.050382614135742
    9. ' -
' → logprob: -11.675382614135742
    10. '<|end|>' → logprob: -11.675382614135742

Token 71: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.11355363577604294
    2. 'half' → logprob: -2.238553524017334
    3. '2' → logprob: -7.613553524017334
    4. ' ' → logprob: -8.613554000854492
    5. '   ' → logprob: -11.113554000854492
    6. 'hal' → logprob: -11.613554000854492
    7. '(' → logprob: -12.113554000854492
    8. ' cubes' → logprob: -12.488554000854492
    9. '3' → logprob: -12.613554000854492
    10. '  ' → logprob: -12.988554000854492

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9394286870956421
    2. '<|end|>' → logprob: -0.9394286870956421
    3. '\n' → logprob: -2.0644288063049316
    4. '(' → logprob: -3.5644288063049316
    5. ')' → logprob: -3.9394288063049316
    6. '```' → logprob: -4.314428806304932
    7. '+' → logprob: -4.689428806304932
    8. '#' → logprob: -5.314428806304932
    9. '%' → logprob: -5.939428806304932
    10. '<|end|>' → logprob: -5.939428806304932

Token 73: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9916340708732605
    2. '<|end|>' → logprob: -0.9916340708732605
    3. '
' → logprob: -1.4916341304779053
    4. '```' → logprob: -4.241633892059326
    5. ')' → logprob: -5.741633892059326
    6. 'newline' → logprob: -5.866633892059326
    7. '[' → logprob: -6.116633892059326
    8. '#' → logprob: -6.116633892059326
    9. '\' → logprob: -6.491633892059326
    10. '(' → logprob: -6.616633892059326

Token 74: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6910341382026672
    2. ',' → logprob: -0.9410341382026672
    3. '=' → logprob: -3.1910340785980225
    4. ' ' → logprob: -3.3160340785980225
    5. '<|end|>' → logprob: -4.191034317016602
    6. ' ,' → logprob: -4.566034317016602
    7. '  ' → logprob: -6.191034317016602
    8. ')' → logprob: -6.941034317016602
    9. '<|end|>' → logprob: -7.191034317016602
    10. '[' → logprob: -7.566034317016602

Token 75: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.43149471282958984
    2. 'k' → logprob: -1.0564947128295898
    3. ' ' → logprob: -6.05649471282959
    4. '<|end|>' → logprob: -9.30649471282959
    5. ' =' → logprob: -9.55649471282959
    6. '=' → logprob: -9.55649471282959
    7. '=k' → logprob: -10.05649471282959
    8. '"' → logprob: -10.30649471282959
    9. '  ' → logprob: -10.30649471282959
    10. ' ' → logprob: -11.05649471282959

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22687193751335144
    2. '=' → logprob: -1.6018719673156738
    3. '<|end|>' → logprob: -6.851871967315674
    4. ',' → logprob: -8.351871490478516
    5. ' ' → logprob: -9.226871490478516
    6. '<|end|>' → logprob: -10.601871490478516
    7. ')' → logprob: -11.476871490478516
    8. '=input' → logprob: -11.476871490478516
    9. ' ,' → logprob: -12.851871490478516
    10. ' =
' → logprob: -13.226871490478516

Token 77: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740912914276123
    2. ' map' → logprob: -0.9740912914276123
    3. 'stdin' → logprob: -12.724091529846191
    4. '[' → logprob: -12.849091529846191
    5. ' ' → logprob: -12.849091529846191
    6. 'list' → logprob: -13.099091529846191
    7. ' stdin' → logprob: -13.599091529846191
    8. '(map' → logprob: -14.599091529846191
    9. ' list' → logprob: -14.599091529846191
    10. '0' → logprob: -14.724091529846191

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.13775771856307983
    2. '(stdin' → logprob: -2.5127577781677246
    3. '(' → logprob: -3.2627577781677246
    4. '(lambda' → logprob: -5.512757778167725
    5. '<|end|>' → logprob: -6.262757778167725
    6. '(str' → logprob: -6.262757778167725
    7. '(st' → logprob: -6.887757778167725
    8. '(std' → logprob: -9.762757301330566
    9. 'int' → logprob: -9.887757301330566
    10. '(
' → logprob: -10.137757301330566

Token 79: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0862053632736206
    2. ',' → logprob: -2.58620548248291
    3. 'stdin' → logprob: -5.71120548248291
    4. ')' → logprob: -5.83620548248291
    5. '(' → logprob: -7.58620548248291
    6. ' stdin' → logprob: -8.21120548248291
    7. '.stdin' → logprob: -9.71120548248291
    8. ',std' → logprob: -9.71120548248291
    9. ' ,' → logprob: -10.21120548248291
    10. '

' → logprob: -10.83620548248291

Token 80: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.2825373113155365
    2. ' stdin' → logprob: -1.4075373411178589
    3. '(stdin' → logprob: -6.657537460327148
    4. ')' → logprob: -9.657537460327148
    5. '.stdin' → logprob: -10.282537460327148
    6. 'stdout' → logprob: -14.407537460327148
    7. 'st' → logprob: -14.532537460327148
    8. 'input' → logprob: -14.782537460327148
    9. 'std' → logprob: -15.032537460327148
    10. ' readline' → logprob: -15.407537460327148

Token 81: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00012082771718269214
    2. '.read' → logprob: -9.500121116638184
    3. '.' → logprob: -10.750121116638184
    4. '().' → logprob: -10.750121116638184
    5. '.readlines' → logprob: -13.125121116638184
    6. ')' → logprob: -14.625121116638184
    7. ' .' → logprob: -15.000121116638184
    8. ').' → logprob: -16.500120162963867
    9. 'read' → logprob: -17.125120162963867
    10. '.buffer' → logprob: -17.500120162963867

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7086363434791565
    2. '())' → logprob: -0.7086363434791565
    3. '()' → logprob: -4.208636283874512
    4. ')' → logprob: -7.958636283874512
    5. '()))' → logprob: -9.208636283874512
    6. ' ())' → logprob: -10.583636283874512
    7. '(' → logprob: -12.208636283874512
    8. '()[' → logprob: -12.458636283874512
    9. '(),' → logprob: -12.833636283874512
    10. '()]' → logprob: -13.208636283874512

Token 83: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3298684358596802
    2. 'split' → logprob: -1.3298684358596802
    3. 'rstrip' → logprob: -4.204868316650391
    4. ')' → logprob: -6.704868316650391
    5. 'read' → logprob: -8.32986831665039
    6. '())' → logprob: -9.95486831665039
    7. ' strip' → logprob: -11.45486831665039
    8. 'decode' → logprob: -12.07986831665039
    9. '()' → logprob: -12.20486831665039
    10. ' split' → logprob: -12.95486831665039

Token 84: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07532612234354019
    2. ')' → logprob: -2.8253262042999268
    3. '()' → logprob: -4.325325965881348
    4. '()))' → logprob: -11.575325965881348
    5. '))' → logprob: -11.700325965881348
    6. '(' → logprob: -12.075325965881348
    7. ' ())' → logprob: -12.075325965881348
    8. '())
' → logprob: -12.950325965881348
    9. '(),' → logprob: -13.200325965881348
    10. '();)' → logprob: -13.325325965881348

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.875001907348633
    3. 'pr' → logprob: -15.000001907348633
    4. ' print' → logprob: -15.375001907348633
    5. '#print' → logprob: -16.625001907348633
    6. '<|end|>' → logprob: -17.375001907348633
    7. 'result' → logprob: -17.500001907348633
    8. 'prin' → logprob: -18.375001907348633
    9. '``' → logprob: -18.750001907348633
    10. '
' → logprob: -19.125001907348633

Token 86: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03805858641862869
    2. '(count' → logprob: -3.2880585193634033
    3. '((' → logprob: -11.538058280944824
    4. '(
' → logprob: -13.038058280944824
    5. '(

' → logprob: -13.288058280944824
    6. '(f' → logprob: -13.413058280944824
    7. '("("' → logprob: -14.538058280944824
    8. '(c' → logprob: -14.538058280944824
    9. ' (' → logprob: -15.413058280944824
    10. '()' → logprob: -16.03805923461914

Token 87: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0002120038407156244
    2. '_' → logprob: -8.500211715698242
    3. '_s' → logprob: -12.250211715698242
    4. '_tuple' → logprob: -13.625211715698242
    5. '_tokens' → logprob: -14.750211715698242
    6. ')_' → logprob: -14.750211715698242
    7. ')' → logprob: -14.875211715698242
    8. ' _' → logprob: -15.125211715698242
    9. '_)' → logprob: -15.125211715698242
    10. '__' → logprob: -15.625211715698242

Token 88: 'uples' (ID: 165982)
  Prédit: 'uples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.00015502817404922098
    2. 'uple' → logprob: -9.125155448913574
    3. 'u' → logprob: -10.375155448913574
    4. 'up' → logprob: -11.875155448913574
    5. 'upl' → logprob: -12.250155448913574
    6. 'ules' → logprob: -13.250155448913574
    7. 'iples' → logprob: -13.875155448913574
    8. '_' → logprob: -15.875155448913574
    9. '```' → logprob: -16.625154495239258
    10. '_u' → logprob: -16.750154495239258

Token 89: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07902440428733826
    2. '(' → logprob: -2.579024314880371
    3. '(k' → logprob: -9.454024314880371
    4. ')' → logprob: -10.204024314880371
    5. ' (' → logprob: -11.829024314880371
    6. '(
' → logprob: -12.079024314880371
    7. '((' → logprob: -12.204024314880371
    8. ')(' → logprob: -14.454024314880371
    9. '(

' → logprob: -15.329024314880371
    10. ' ' → logprob: -16.579025268554688

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001872094871941954
    2. ',k' → logprob: -9.125186920166016
    3. ' ,' → logprob: -9.500186920166016
    4. ' ' → logprob: -13.000186920166016
    5. ')' → logprob: -14.250186920166016
    6. ',n' → logprob: -16.500186920166016
    7. '`,' → logprob: -16.625186920166016
    8. ',
' → logprob: -16.875186920166016
    9. '',' → logprob: -17.000186920166016
    10. '，' → logprob: -17.125186920166016

Token 91: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.05521173030138016
    2. 'k' → logprob: -2.9302117824554443
    3. ' ' → logprob: -8.555212020874023
    4. ')' → logprob: -9.180212020874023
    5. ' )' → logprob: -11.055212020874023
    6. ' 
' → logprob: -12.430212020874023
    7. ' ' → logprob: -12.555212020874023
    8. ''' → logprob: -12.680212020874023
    9. '"' → logprob: -12.805212020874023
    10. '32' → logprob: -13.930212020874023

Token 92: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04858941584825516
    2. ')' → logprob: -3.0485894680023193
    3. ')))' → logprob: -13.548589706420898
    4. '))
' → logprob: -15.173589706420898
    5. ' ))' → logprob: -16.1735897064209
    6. '),' → logprob: -16.6735897064209
    7. ' )' → logprob: -17.1735897064209
    8. ')
' → logprob: -17.1735897064209
    9. '()' → logprob: -17.4235897064209
    10. '])' → logprob: -17.4235897064209


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 34.44%
Précision adaptée (1ère position): 34.44%
Précision (top 10): 77.78%
================================================================================
