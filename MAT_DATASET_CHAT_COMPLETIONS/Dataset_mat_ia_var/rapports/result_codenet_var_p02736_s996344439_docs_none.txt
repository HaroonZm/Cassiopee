================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3
from collections import defaultdict,deque
from heapq import heappush, heappop
from bisect import bisect_left, bisect_right
import sys, random, itertools, math
sys.setrecursionlimit(10**5)
input = sys.stdin.readline
sqrt = math.sqrt
def LI(): return list(map(int, input().split()))
def LF(): return list(map(float, input().split()))
def LI_(): return list(map(lambda x: int(x)-1, input().split()))
def II(): return int(input())
def IF(): return float(input())
def LS(): return list(map(list, input().split()))
def S(): return list(input().rstrip())
def IR(n): return [II() for _ in range(n)]
def LIR(n): return [LI() for _ in range(n)]
def FR(n): return [IF() for _ in range(n)]
def LFR(n): return [LI() for _ in range(n)]
def LIR_(n): return [LI_() for _ in range(n)]
def SR(n): return [S() for _ in range(n)]
def LSR(n): return [LS() for _ in range(n)]
mod = 1000000007
inf = 1e10

def solve():
    n = II()
    a = list(map(lambda x: int(x) - 1, S()))
    ans = 1
    if not 1 in a:
        ans *= 2
        for i in range(n):
            a[i] >>= 1
    res = 0
    for i in range(n):
        if ((n - 1) & i == i):
            res ^= a[i] & 1
    print(res * ans)
    return

if __name__ == '__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/env' → logprob: -0.5917757153511047
    2. '/' → logprob: -1.59177565574646
    3. '/python' → logprob: -1.59177565574646
    4. '/bin' → logprob: -3.71677565574646
    5. '/bash' → logprob: -4.216775894165039
    6. 'python' → logprob: -7.841775894165039
    7. '/sh' → logprob: -10.841775894165039
    8. ' /' → logprob: -11.591775894165039
    9. '/b' → logprob: -11.716775894165039
    10. 'env' → logprob: -11.841775894165039

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.00877859815955162
    2. ' python' → logprob: -4.7587785720825195
    3. 'bash' → logprob: -8.75877857208252
    4. ' bash' → logprob: -13.00877857208252
    5. 'perl' → logprob: -13.50877857208252
    6. 'php' → logprob: -13.88377857208252
    7. 'ruby' → logprob: -13.88377857208252
    8. 'py' → logprob: -14.25877857208252
    9. '```' → logprob: -14.88377857208252
    10. '/python' → logprob: -15.50877857208252

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13909508287906647
    2. '\' → logprob: -2.6390950679779053
    3. '  
' → logprob: -3.8890950679779053
    4. 'import' → logprob: -4.139095306396484
    5. '```' → logprob: -4.889095306396484
    6. ' 
' → logprob: -5.014095306396484
    7. '' → logprob: -5.639095306396484
    8. '3' → logprob: -7.139095306396484
    9. '\r' → logprob: -7.139095306396484
    10. '\x' → logprob: -7.639095306396484

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5070472359657288
    2. 'import' → logprob: -1.007047176361084
    3. '
' → logprob: -4.382047176361084
    4. '```' → logprob: -4.632047176361084
    5. '\' → logprob: -5.507047176361084
    6. '  
' → logprob: -6.007047176361084
    7. ' 
' → logprob: -6.382047176361084
    8. '#!/' → logprob: -8.007047653198242
    9. '' → logprob: -8.132047653198242
    10. '#' → logprob: -8.507047653198242

Token 7: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.31804391741752625
    2. 'import' → logprob: -1.4430439472198486
    3. '
' → logprob: -4.3180437088012695
    4. '```' → logprob: -4.6930437088012695
    5. ' 
' → logprob: -5.9430437088012695
    6. '#' → logprob: -6.0680437088012695
    7. '<|end|>' → logprob: -6.4430437088012695
    8. '\' → logprob: -6.4430437088012695
    9. '  
' → logprob: -6.5680437088012695
    10. '' → logprob: -6.8180437088012695

Token 8: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.07230237126350403
    2. ' sys' → logprob: -3.3223023414611816
    3. ' math' → logprob: -4.447302341461182
    4. ' collections' → logprob: -4.822302341461182
    5. ' flask' → logprob: -5.572302341461182
    6. 'os' → logprob: -6.322302341461182
    7. ' ' → logprob: -6.322302341461182
    8. ' requests' → logprob: -6.947302341461182
    9. ' datetime' → logprob: -7.322302341461182
    10. ' pathlib' → logprob: -7.572302341461182

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16040721535682678
    2. 'import' → logprob: -1.9104071855545044
    3. '.' → logprob: -9.035407066345215
    4. '```' → logprob: -10.410407066345215
    5. '.import' → logprob: -11.660407066345215
    6. ' defaultdict' → logprob: -12.160407066345215
    7. '	import' → logprob: -12.535407066345215
    8. ' ' → logprob: -12.660407066345215
    9. '_import' → logprob: -12.910407066345215
    10. '.Counter' → logprob: -13.035407066345215

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.19274385273456573
    2. ' abc' → logprob: -2.3177437782287598
    3. ' deque' → logprob: -2.8177437782287598
    4. ' Counter' → logprob: -4.94274377822876
    5. 'deque' → logprob: -5.44274377822876
    6. ' named' → logprob: -6.06774377822876
    7. 'abc' → logprob: -6.19274377822876
    8. ' collections' → logprob: -7.69274377822876
    9. ' Ordered' → logprob: -8.942744255065918
    10. ' import' → logprob: -8.942744255065918

Token 11: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3146601617336273
    2. '
' → logprob: -1.5646601915359497
    3. '\n' → logprob: -3.56466007232666
    4. '```' → logprob: -5.18966007232666
    5. '\' → logprob: -5.31466007232666
    6. '<|end|>' → logprob: -5.56466007232666
    7. '<|end|>' → logprob: -5.93966007232666
    8. 'newline' → logprob: -5.93966007232666
    9. '


' → logprob: -6.18966007232666
    10. 'import' → logprob: -6.31466007232666

Token 12: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.4332762658596039
    2. ' deque' → logprob: -1.8082762956619263
    3. 'Counter' → logprob: -2.3082761764526367
    4. ' Counter' → logprob: -3.0582761764526367
    5. 'Ordered' → logprob: -3.8082761764526367
    6. ' Ordered' → logprob: -4.808276176452637
    7. 'named' → logprob: -4.933276176452637
    8. ' named' → logprob: -5.683276176452637
    9. 'abc' → logprob: -8.683276176452637
    10. ' abc' → logprob: -9.308276176452637

Token 13: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.10361247509717941
    2. '
' → logprob: -3.1036124229431152
    3. ' 

' → logprob: -3.3536124229431152
    4. '


' → logprob: -4.478612422943115
    5. '<|end|>' → logprob: -5.728612422943115
    6. 'import' → logprob: -6.853612422943115
    7. '```' → logprob: -7.478612422943115
    8. ' 
' → logprob: -7.978612422943115
    9. '' → logprob: -8.103612899780273
    10. '<|end|>' → logprob: -8.353612899780273

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3605622351169586
    2. '
' → logprob: -1.6105622053146362
    3. ' 

' → logprob: -2.860562324523926
    4. 'import' → logprob: -3.985562324523926
    5. '<|end|>' → logprob: -4.985562324523926
    6. '```' → logprob: -5.360562324523926
    7. '


' → logprob: -5.985562324523926
    8. '' → logprob: -5.985562324523926
    9. ',' → logprob: -6.235562324523926
    10. '\n' → logprob: -6.485562324523926

Token 15: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.43549516797065735
    2. ' heap' → logprob: -1.185495138168335
    3. ' typing' → logprob: -3.685495138168335
    4. ' queue' → logprob: -4.435495376586914
    5. ' threading' → logprob: -4.810495376586914
    6. 'heap' → logprob: -6.810495376586914
    7. ' functools' → logprob: -7.935495376586914
    8. ' math' → logprob: -8.435495376586914
    9. ' collections' → logprob: -8.810495376586914
    10. ' sys' → logprob: -8.935495376586914

Token 16: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'queue' → logprob: -14.750000953674316
    3. 'import' → logprob: -16.125
    4. 'i' → logprob: -17.75
    5. 'u' → logprob: -18.375
    6. 'dict' → logprob: -18.625
    7. ' queue' → logprob: -18.75
    8. 's' → logprob: -18.875
    9. 'n' → logprob: -18.875
    10. 'f' → logprob: -19.0

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.003617062233388424
    2. 'import' → logprob: -5.628617286682129
    3. ' ' → logprob: -11.128617286682129
    4. '	import' → logprob: -14.003617286682129
    5. '_import' → logprob: -14.128617286682129
    6. ' imports' → logprob: -14.878617286682129
    7. ' ' → logprob: -16.628616333007812
    8. ' im' → logprob: -16.753616333007812
    9. '<|end|>' → logprob: -17.003616333007812
    10. ' Import' → logprob: -17.128616333007812

Token 18: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.01945214718580246
    2. 'he' → logprob: -4.019452095031738
    3. ' heap' → logprob: -7.394452095031738
    4. ' n' → logprob: -8.269452095031738
    5. 'heap' → logprob: -8.644452095031738
    6. ' import' → logprob: -9.269452095031738
    7. 'import' → logprob: -9.644452095031738
    8. 'nl' → logprob: -10.019452095031738
    9. 'n' → logprob: -10.769452095031738
    10. ' merge' → logprob: -11.519452095031738

Token 19: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.07889948040246964
    2. 'ap' → logprob: -2.578899383544922
    3. 'a' → logprob: -11.703899383544922
    4. 'ап' → logprob: -14.578899383544922
    5. 'aps' → logprob: -14.703899383544922
    6. 'appen' → logprob: -15.953899383544922
    7. '```' → logprob: -15.953899383544922
    8. '[' → logprob: -16.578899383544922
    9. 'apl' → logprob: -17.078899383544922
    10. 'aq' → logprob: -17.203899383544922

Token 20: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0015024791937321424
    2. 'op' → logprob: -6.501502513885498
    3. 'ut' → logprob: -17.001502990722656
    4. 'push' → logprob: -17.251502990722656
    5. 'u' → logprob: -17.501502990722656
    6. 'us' → logprob: -18.126502990722656
    7. '```' → logprob: -18.251502990722656
    8. 'osh' → logprob: -18.501502990722656
    9. 'p' → logprob: -18.626502990722656
    10. 'q' → logprob: -19.126502990722656

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9075406789779663
    2. '<|end|>' → logprob: -1.1575406789779663
    3. ' ' → logprob: -1.5325406789779663
    4. 'he' → logprob: -3.657540798187256
    5. '(' → logprob: -4.282540798187256
    6. '<|end|>' → logprob: -4.657540798187256
    7. ')' → logprob: -4.907540798187256
    8. ' he' → logprob: -5.532540798187256
    9. ' ,' → logprob: -6.157540798187256
    10. '(space' → logprob: -7.157540798187256

Token 22: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.04333633929491043
    2. ' he' → logprob: -3.1683363914489746
    3. 'heap' → logprob: -8.043335914611816
    4. ' heap' → logprob: -12.293335914611816
    5. 'pop' → logprob: -12.793335914611816
    6. '```' → logprob: -13.543335914611816
    7. '.he' → logprob: -13.793335914611816
    8. 'h' → logprob: -13.793335914611816
    9. ' ' → logprob: -13.793335914611816
    10. 'hep' → logprob: -14.043335914611816

Token 23: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.1424973713001236e-05
    2. 'ap' → logprob: -10.375031471252441
    3. 'appen' → logprob: -16.375030517578125
    4. 'a' → logprob: -17.500030517578125
    5. 'pp' → logprob: -18.125030517578125
    6. '_app' → logprob: -19.375030517578125
    7. 'APP' → logprob: -19.500030517578125
    8. 'apps' → logprob: -19.750030517578125
    9. 'append' → logprob: -20.000030517578125
    10. ' app' → logprob: -20.125030517578125

Token 24: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0008955012308433652
    2. 'ush' → logprob: -7.1258955001831055
    3. 'p' → logprob: -9.500895500183105
    4. 'o' → logprob: -12.250895500183105
    5. 'app' → logprob: -12.375895500183105
    6. 'pp' → logprob: -12.750895500183105
    7. 'opp' → logprob: -13.000895500183105
    8. 'pop' → logprob: -14.125895500183105
    9. 'opleft' → logprob: -15.125895500183105
    10. 'sh' → logprob: -15.375895500183105

Token 25: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.22950375080108643
    2. '
' → logprob: -1.6045037508010864
    3. '


' → logprob: -6.354503631591797
    4. '\n' → logprob: -7.854503631591797
    5. ' 

' → logprob: -7.979503631591797
    6. 'import' → logprob: -7.979503631591797
    7. '
' → logprob: -8.479503631591797
    8. '' → logprob: -8.604503631591797
    9. '```' → logprob: -8.604503631591797
    10. 'newline' → logprob: -8.729503631591797

Token 26: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.30863136053085327
    2. '
' → logprob: -1.433631420135498
    3. 'import' → logprob: -3.808631420135498
    4. ' 

' → logprob: -6.808631420135498
    5. 'def' → logprob: -7.183631420135498
    6. '```' → logprob: -7.308631420135498
    7. '<|end|>' → logprob: -7.433631420135498
    8. '' → logprob: -7.558631420135498
    9. '


' → logprob: -8.55863094329834
    10. '#' → logprob: -8.55863094329834

Token 27: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0479406863451004
    2. ' math' → logprob: -3.547940731048584
    3. ' typing' → logprob: -4.172940731048584
    4. ' sys' → logprob: -6.547940731048584
    5. ' functools' → logprob: -7.422940731048584
    6. ' queue' → logprob: -8.297940254211426
    7. ' collections' → logprob: -9.297940254211426
    8. 'math' → logprob: -9.547940254211426
    9. ' operator' → logprob: -9.922940254211426
    10. 'typing' → logprob: -10.297940254211426

Token 28: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.810037742368877e-05
    2. 'import' → logprob: -11.000038146972656
    3. 'ct' → logprob: -12.000038146972656
    4. 'ectl' → logprob: -12.875038146972656
    5. 't' → logprob: -13.000038146972656
    6. 'ected' → logprob: -13.125038146972656
    7. 'truct' → logprob: -13.750038146972656
    8. 'ector' → logprob: -13.875038146972656
    9. 'ects' → logprob: -14.250038146972656
    10. 'ort' → logprob: -14.375038146972656

Token 29: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026751428842544556
    2. 'import' → logprob: -3.6517515182495117
    3. '_import' → logprob: -7.776751518249512
    4. ' ' → logprob: -11.026751518249512
    5. '	import' → logprob: -11.526751518249512
    6. '_' → logprob: -13.526751518249512
    7. '<|end|>' → logprob: -14.276751518249512
    8. ' importar' → logprob: -14.401751518249512
    9. ' im' → logprob: -14.651751518249512
    10. ' ' → logprob: -14.651751518249512

Token 30: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.18716098368167877
    2. ' ins' → logprob: -2.4371609687805176
    3. 'ins' → logprob: -3.0621609687805176
    4. 'bis' → logprob: -3.3121609687805176
    5. '_ins' → logprob: -10.062161445617676
    6. '.ins' → logprob: -12.187161445617676
    7. '```' → logprob: -12.937161445617676
    8. 'b' → logprob: -13.437161445617676
    9. ' ' → logprob: -13.687161445617676
    10. '(ins' → logprob: -13.937161445617676

Token 31: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.4121114822482923e-06
    2. 'e' → logprob: -12.750003814697266
    3. 'ec' → logprob: -15.875003814697266
    4. 'ectl' → logprob: -16.375003814697266
    5. 'ected' → logprob: -17.125003814697266
    6. 'ectin' → logprob: -17.625003814697266
    7. 'sect' → logprob: -17.875003814697266
    8. 'earch' → logprob: -18.375003814697266
    9. 'ecta' → logprob: -18.375003814697266
    10. 'ects' → logprob: -18.500003814697266

Token 32: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6904593110084534
    2. '_left' → logprob: -0.8154593110084534
    3. '_right' → logprob: -3.0654592514038086
    4. ',' → logprob: -5.565459251403809
    5. 'ing' → logprob: -7.315459251403809
    6. 'import' → logprob: -7.315459251403809
    7. '_ins' → logprob: -7.690459251403809
    8. '(' → logprob: -7.815459251403809
    9. '<|end|>' → logprob: -8.065459251403809
    10. '' → logprob: -8.315459251403809

Token 33: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28916314244270325
    2. '
' → logprob: -1.7891631126403809
    3. 'import' → logprob: -2.789163112640381
    4. ' 

' → logprob: -4.914163112640381
    5. '' → logprob: -5.289163112640381
    6. '<|end|>' → logprob: -5.789163112640381
    7. 'def' → logprob: -6.539163112640381
    8. '#' → logprob: -6.664163112640381
    9. '\n' → logprob: -7.414163112640381
    10. '


' → logprob: -7.539163112640381

Token 34: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.016305437311530113
    2. ' bis' → logprob: -4.141305446624756
    3. 'ins' → logprob: -8.266304969787598
    4. ' ins' → logprob: -11.391304969787598
    5. 'b' → logprob: -13.141304969787598
    6. '```' → logprob: -15.016304969787598
    7. '	b' → logprob: -16.328805923461914
    8. 'bs' → logprob: -16.828805923461914
    9. ' ' → logprob: -17.203805923461914
    10. 'import' → logprob: -17.266305923461914

Token 35: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.5924023985862732
    2. 'n' → logprob: -1.342402458190918
    3. 'ct' → logprob: -1.717402458190918
    4. 'sect' → logprob: -5.467402458190918
    5. 's' → logprob: -6.967402458190918
    6. 'c' → logprob: -7.467402458190918
    7. 'ns' → logprob: -8.842402458190918
    8. 'e' → logprob: -9.217402458190918
    9. 'ce' → logprob: -9.967402458190918
    10. 'r' → logprob: -10.342402458190918

Token 36: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.10084769129753113
    2. '_' → logprob: -2.3508477210998535
    3. '_

' → logprob: -8.225847244262695
    4. '_r' → logprob: -8.725847244262695
    5. 'right' → logprob: -9.600847244262695
    6. '__' → logprob: -9.725847244262695
    7. '_
' → logprob: -10.600847244262695
    8. '_
' → logprob: -11.350847244262695
    9. '_RIGHT' → logprob: -11.975847244262695
    10. '_ins' → logprob: -12.100847244262695

Token 37: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8165795207023621
    2. '
' → logprob: -0.9415795207023621
    3. ' 

' → logprob: -2.441579580307007
    4. 'import' → logprob: -3.691579580307007
    5. '<|end|>' → logprob: -3.691579580307007
    6. '#' → logprob: -4.941579341888428
    7. '' → logprob: -5.066579341888428
    8. ' 
' → logprob: -5.191579341888428
    9. '```' → logprob: -5.691579341888428
    10. '


' → logprob: -6.191579341888428

Token 38: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8726754188537598
    2. '

' → logprob: -0.9976754188537598
    3. 'import' → logprob: -1.8726754188537598
    4. '<|end|>' → logprob: -4.37267541885376
    5. ' 

' → logprob: -4.49767541885376
    6. '' → logprob: -4.62267541885376
    7. '#' → logprob: -4.74767541885376
    8. '```' → logprob: -4.99767541885376
    9. ' 
' → logprob: -6.24767541885376
    10. '\n' → logprob: -6.37267541885376

Token 39: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4292756915092468
    2. ' ' → logprob: -1.5542757511138916
    3. ' itertools' → logprob: -2.6792757511138916
    4. ' math' → logprob: -3.6792757511138916
    5. ' os' → logprob: -3.6792757511138916
    6. ' ' → logprob: -4.6792755126953125
    7. ' collections' → logprob: -5.9292755126953125
    8. ' re' → logprob: -6.3042755126953125
    9. '  ' → logprob: -6.6792755126953125
    10. ' space' → logprob: -7.1792755126953125

Token 40: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11345476657152176
    2. '

' → logprob: -3.363454818725586
    3. 'import' → logprob: -3.363454818725586
    4. '\n' → logprob: -4.238454818725586
    5. '<|end|>' → logprob: -4.238454818725586
    6. ',' → logprob: -5.988454818725586
    7. '' → logprob: -5.988454818725586
    8. 'def' → logprob: -7.238454818725586
    9. '<|end|>' → logprob: -7.363454818725586
    10. '#' → logprob: -7.488454818725586

Token 41: ' random' (ID: 7526)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.32321128249168396
    2. 'math' → logprob: -1.3232113122940063
    3. ' os' → logprob: -5.073211193084717
    4. ' math' → logprob: -6.073211193084717
    5. ' itertools' → logprob: -7.948211193084717
    6. ' threading' → logprob: -8.198211669921875
    7. 'thread' → logprob: -8.323211669921875
    8. 'heap' → logprob: -8.573211669921875
    9. 'io' → logprob: -8.823211669921875
    10. 'collections' → logprob: -9.698211669921875

Token 42: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4800163507461548
    2. '

' → logprob: -1.4800163507461548
    3. 'import' → logprob: -3.2300162315368652
    4. '<|end|>' → logprob: -3.2300162315368652
    5. ',' → logprob: -3.7300162315368652
    6. ' 

' → logprob: -3.8550162315368652
    7. '' → logprob: -4.230016231536865
    8. '\n' → logprob: -5.480016231536865
    9. '<|end|>' → logprob: -5.980016231536865
    10. ' 
' → logprob: -5.980016231536865

Token 43: ' itertools' (ID: 103178)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.17283561825752258
    2. ' math' → logprob: -1.9228355884552002
    3. 'string' → logprob: -5.172835826873779
    4. 'time' → logprob: -6.047835826873779
    5. 'os' → logprob: -6.172835826873779
    6. ' string' → logprob: -6.672835826873779
    7. ' itertools' → logprob: -7.422835826873779
    8. ' time' → logprob: -7.922835826873779
    9. ' os' → logprob: -9.172835350036621
    10. 'it' → logprob: -10.547835350036621

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.10060453414917
    2. '
' → logprob: -1.10060453414917
    3. '

' → logprob: -1.35060453414917
    4. 'import' → logprob: -3.72560453414917
    5. '<|end|>' → logprob: -3.97560453414917
    6. ',
' → logprob: -4.72560453414917
    7. ' 

' → logprob: -4.85060453414917
    8. ',

' → logprob: -4.97560453414917
    9. '' → logprob: -5.72560453414917
    10. '<|end|>' → logprob: -6.72560453414917

Token 45: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.06402452290058136
    2. ' math' → logprob: -2.8140244483947754
    3. 'operator' → logprob: -6.814024448394775
    4. 'os' → logprob: -7.689024448394775
    5. 'string' → logprob: -8.564024925231934
    6. 'time' → logprob: -9.189024925231934
    7. ' functools' → logprob: -9.814024925231934
    8. ' operator' → logprob: -10.064024925231934
    9. ' string' → logprob: -10.314024925231934
    10. 'heap' → logprob: -11.189024925231934

Token 46: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.36772024631500244
    2. '
' → logprob: -1.4927202463150024
    3. '<|end|>' → logprob: -2.992720127105713
    4. ',' → logprob: -3.742720127105713
    5. ' 

' → logprob: -5.742720127105713
    6. 'import' → logprob: -6.742720127105713
    7. '<|end|>' → logprob: -6.992720127105713
    8. '


' → logprob: -6.992720127105713
    9. '' → logprob: -7.367720127105713
    10. ',

' → logprob: -7.742720127105713

Token 47: 'sys' (ID: 17324)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4681956171989441
    2. '
' → logprob: -1.4681956768035889
    3. ',' → logprob: -2.218195676803589
    4. 'import' → logprob: -3.968195676803589
    5. '<|end|>' → logprob: -5.46819543838501
    6. '' → logprob: -5.96819543838501
    7. ',

' → logprob: -6.21819543838501
    8. ',
' → logprob: -6.71819543838501
    9. '\n' → logprob: -6.84319543838501
    10. ' 

' → logprob: -6.84319543838501

Token 48: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005167343188077211
    2. '.stdin' → logprob: -6.005167484283447
    3. '.exit' → logprob: -6.630167484283447
    4. '.stdout' → logprob: -7.255167484283447
    5. '.readline' → logprob: -8.255167007446289
    6. '.stderr' → logprob: -9.255167007446289
    7. '.setdefault' → logprob: -9.630167007446289
    8. '.argv' → logprob: -9.630167007446289
    9. '.read' → logprob: -10.130167007446289
    10. '.write' → logprob: -10.505167007446289

Token 49: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.5178149342536926
    2. 'rec' → logprob: -1.1428148746490479
    3. '_limit' → logprob: -2.892814874649048
    4. '_stack' → logprob: -6.017815113067627
    5. '_version' → logprob: -6.017815113067627
    6. '_int' → logprob: -6.142815113067627
    7. '_execution' → logprob: -6.267815113067627
    8. '_' → logprob: -6.392815113067627
    9. '_trace' → logprob: -6.517815113067627
    10. '_exc' → logprob: -6.767815113067627

Token 50: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001140453852713108
    2. 'urs' → logprob: -7.251140594482422
    3. 'ur' → logprob: -8.501140594482422
    4. 'ursive' → logprob: -8.626140594482422
    5. 'limit' → logprob: -11.501140594482422
    6. 'usion' → logprob: -11.626140594482422
    7. 'urf' → logprob: -11.751140594482422
    8. 'urse' → logprob: -12.001140594482422
    9. 'usr' → logprob: -12.376140594482422
    10. 'ursor' → logprob: -13.001140594482422

Token 51: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0011727249948307872
    2. '_limit' → logprob: -6.7511725425720215
    3. ' limit' → logprob: -13.37617301940918
    4. 'depth' → logprob: -14.50117301940918
    5. 'lim' → logprob: -15.25117301940918
    6. '-limit' → logprob: -15.87617301940918
    7. 'Limit' → logprob: -16.87617301940918
    8. '.limit' → logprob: -17.25117301940918
    9. '_depth' → logprob: -17.37617301940918
    10. '_LIMIT' → logprob: -18.00117301940918

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.226628895296017e-06
    2. '(
' → logprob: -12.250007629394531
    3. '(

' → logprob: -14.000007629394531
    4. '((' → logprob: -14.250007629394531
    5. ' (' → logprob: -14.250007629394531
    6. '()' → logprob: -16.00000762939453
    7. '("("' → logprob: -16.75000762939453
    8. '(.' → logprob: -17.75000762939453
    9. '(int' → logprob: -17.87500762939453
    10. '(
' → logprob: -17.87500762939453

Token 53: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006768657360225916
    2. '100' → logprob: -5.006768703460693
    3. ' ' → logprob: -9.881768226623535
    4. '1' → logprob: -13.506768226623535
    5. '300' → logprob: -15.006768226623535
    6. '400' → logprob: -15.631768226623535
    7. '500' → logprob: -15.881768226623535
    8. '999' → logprob: -16.00676918029785
    9. 'int' → logprob: -16.25676918029785
    10. '200' → logprob: -16.38176918029785

Token 54: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0179245471954346
    2. '7' → logprob: -1.1429245471954346
    3. '000' → logprob: -1.6429245471954346
    4. '5' → logprob: -2.5179245471954346
    5. '00' → logprob: -3.6429245471954346
    6. '**' → logprob: -4.2679243087768555
    7. '8' → logprob: -5.2679243087768555
    8. '0' → logprob: -8.517924308776855
    9. '4' → logprob: -9.142924308776855
    10. '07' → logprob: -10.142924308776855

Token 55: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.029786715283989906
    2. '9' → logprob: -3.5297868251800537
    3. '8' → logprob: -10.279787063598633
    4. '6' → logprob: -13.404787063598633
    5. '**' → logprob: -15.029787063598633
    6. ' ' → logprob: -17.029787063598633
    7. '```' → logprob: -17.404787063598633
    8. '

' → logprob: -18.154787063598633
    9. '  ' → logprob: -19.029787063598633
    10. '​' → logprob: -19.154787063598633

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -15.12500286102295
    4. '0' → logprob: -16.375001907348633
    5. ')
' → logprob: -17.125001907348633
    6. '),' → logprob: -17.625001907348633
    7. '+' → logprob: -18.125001907348633
    8. '6' → logprob: -18.750001907348633
    9. '```' → logprob: -19.000001907348633
    10. '**' → logprob: -19.125001907348633

Token 57: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29631364345550537
    2. '

' → logprob: -1.4213136434555054
    3. 'def' → logprob: -5.046313762664795
    4. '
' → logprob: -5.296313762664795
    5. '' → logprob: -6.546313762664795
    6. '#' → logprob: -7.796313762664795
    7. 'import' → logprob: -7.921313762664795
    8. 'class' → logprob: -8.046313285827637
    9. 'n' → logprob: -8.546313285827637
    10. '\n' → logprob: -8.671313285827637

Token 58: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042209390085190535
    2. '()' → logprob: -8.125422477722168
    3. '.' → logprob: -10.250422477722168
    4. ')' → logprob: -11.000422477722168
    5. '("("' → logprob: -11.125422477722168
    6. '<|end|>' → logprob: -11.125422477722168
    7. '("")' → logprob: -11.625422477722168
    8. '(
' → logprob: -11.875422477722168
    9. '=' → logprob: -12.250422477722168
    10. '('' → logprob: -12.750422477722168

Token 59: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6960060000419617
    2. 'sys' → logprob: -0.6960060000419617
    3. 'input' → logprob: -6.196005821228027
    4. ' input' → logprob: -7.821005821228027
    5. '=sys' → logprob: -9.071005821228027
    6. 'lambda' → logprob: -9.321005821228027
    7. '	sys' → logprob: -9.696005821228027
    8. ' lambda' → logprob: -9.821005821228027
    9. '(sys' → logprob: -10.196005821228027
    10. 'raw' → logprob: -10.696005821228027

Token 60: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03310981020331383
    2. '.readline' → logprob: -3.9081099033355713
    3. '.' → logprob: -4.658109664916992
    4. '.stdout' → logprob: -6.033109664916992
    5. ' .' → logprob: -9.033109664916992
    6. '.std' → logprob: -9.158109664916992
    7. '.read' → logprob: -9.158109664916992
    8. '.input' → logprob: -9.783109664916992
    9. '.setdefault' → logprob: -9.783109664916992
    10. '.argv' → logprob: -10.408109664916992

Token 61: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0034358962439000607
    2. 'read' → logprob: -6.003436088562012
    3. '.read' → logprob: -7.003436088562012
    4. 'buffer' → logprob: -10.628436088562012
    5. '_read' → logprob: -11.753436088562012
    6. '.' → logprob: -12.128436088562012
    7. '.buffer' → logprob: -12.378436088562012
    8. ' readline' → logprob: -12.503436088562012
    9. '.readlines' → logprob: -13.003436088562012
    10. 'reader' → logprob: -14.128436088562012

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43514811992645264
    2. '

' → logprob: -1.0601481199264526
    3. 'def' → logprob: -5.435148239135742
    4. '\n' → logprob: -7.685148239135742
    5. '


' → logprob: -7.685148239135742
    6. '
' → logprob: -7.810148239135742
    7. '<|end|>' → logprob: -8.685148239135742
    8. '<|end|>' → logprob: -9.185148239135742
    9. '```' → logprob: -9.435148239135742
    10. '#' → logprob: -9.560148239135742

Token 63: 'sqrt' (ID: 64991)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2306862771511078
    2. '
' → logprob: -1.6056863069534302
    3. 'def' → logprob: -5.980686187744141
    4. '
' → logprob: -6.480686187744141
    5. '


' → logprob: -7.855686187744141
    6. 'class' → logprob: -8.48068618774414
    7. '\n' → logprob: -8.98068618774414
    8. '' → logprob: -9.10568618774414
    9. 'n' → logprob: -9.85568618774414
    10. '```' → logprob: -9.85568618774414

Token 64: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001207495923154056
    2. ' (' → logprob: -6.87620735168457
    3. '<|end|>' → logprob: -9.87620735168457
    4. ')' → logprob: -10.00120735168457
    5. ',' → logprob: -10.87620735168457
    6. '(
' → logprob: -11.62620735168457
    7. '(math' → logprob: -12.12620735168457
    8. '(s' → logprob: -12.25120735168457
    9. '(

' → logprob: -12.50120735168457
    10. '()' → logprob: -12.62620735168457

Token 65: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4744546413421631
    2. ' math' → logprob: -0.9744546413421631
    3. '(math' → logprob: -7.974454879760742
    4. 'cmath' → logprob: -11.474454879760742
    5. '/math' → logprob: -11.599454879760742
    6. '_math' → logprob: -11.599454879760742
    7. '.math' → logprob: -13.599454879760742
    8. 'int' → logprob: -13.599454879760742
    9. ' ' → logprob: -14.349454879760742
    10. '<|end|>' → logprob: -14.724454879760742

Token 66: '.sqrt' (ID: 38011)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6934561133384705
    2. '.sqrt' → logprob: -0.6934561133384705
    3. '.s' → logprob: -8.568455696105957
    4. '.Sqrt' → logprob: -9.693455696105957
    5. '.square' → logprob: -10.693455696105957
    6. '​.' → logprob: -11.193455696105957
    7. '.​' → logprob: -12.568455696105957
    8. '.pow' → logprob: -12.943455696105957
    9. '.ceil' → logprob: -13.318455696105957
    10. ' .' → logprob: -13.568455696105957

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8936300873756409
    2. 'def' → logprob: -0.8936300873756409
    3. '

' → logprob: -2.893630027770996
    4. '(' → logprob: -2.893630027770996
    5. '(
' → logprob: -4.268630027770996
    6. ' def' → logprob: -4.643630027770996
    7. '' → logprob: -4.768630027770996
    8. '\' → logprob: -4.768630027770996
    9. '\n' → logprob: -5.393630027770996
    10. '<|end|>' → logprob: -5.893630027770996

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12568803131580353
    2. '
' → logprob: -2.375688076019287
    3. '

' → logprob: -4.000688076019287
    4. 'class' → logprob: -5.875688076019287
    5. '' → logprob: -7.125688076019287
    6. ' 

' → logprob: -7.625688076019287
    7. '
' → logprob: -7.625688076019287
    8. '#' → logprob: -7.750688076019287
    9. ' def' → logprob: -7.875688076019287
    10. ' 
' → logprob: -8.125687599182129

Token 69: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16791392862796783
    2. '_' → logprob: -1.9179139137268066
    3. ' _' → logprob: -5.167913913726807
    4. ' space' → logprob: -7.292913913726807
    5. ' ' → logprob: -8.167914390563965
    6. '_space' → logprob: -8.542914390563965
    7. ' ‌' → logprob: -8.917914390563965
    8. ' a' → logprob: -9.042914390563965
    9. '  ' → logprob: -9.167914390563965
    10. 'space' → logprob: -9.542914390563965

Token 70: '():' (ID: 9442)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.2923550605773926
    2. '():' → logprob: -1.5423550605773926
    3. 'ST' → logprob: -3.5423550605773926
    4. '()' → logprob: -5.667355060577393
    5. 'sts' → logprob: -5.917355060577393
    6. 'ne' → logprob: -6.042355060577393
    7. 's' → logprob: -7.167355060577393
    8. 'n' → logprob: -7.542355060577393
    9. 'St' → logprob: -8.542354583740234
    10. 'nt' → logprob: -9.167354583740234

Token 71: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20041774213314056
    2. ' return' → logprob: -1.9504177570343018
    3. ' ' → logprob: -3.9504177570343018
    4. ' []' → logprob: -4.575417518615723
    5. ' map' → logprob: -4.825417518615723
    6. ' [' → logprob: -6.575417518615723
    7. '[' → logprob: -9.450417518615723
    8. 'list' → logprob: -9.450417518615723
    9. ' ' → logprob: -9.825417518615723
    10. '[]' → logprob: -9.950417518615723

Token 72: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5762048959732056
    2. ' list' → logprob: -0.8262048959732056
    3. 'map' → logprob: -8.576205253601074
    4. ' map' → logprob: -10.201205253601074
    5. '[list' → logprob: -10.701205253601074
    6. '[' → logprob: -11.701205253601074
    7. ' [' → logprob: -13.201205253601074
    8. '	list' → logprob: -13.451205253601074
    9. '=list' → logprob: -14.076205253601074
    10. 'lis' → logprob: -14.076205253601074

Token 73: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0021915410179644823
    2. '(' → logprob: -6.127191543579102
    3. '(int' → logprob: -12.877191543579102
    4. 'map' → logprob: -13.127191543579102
    5. ' map' → logprob: -14.252191543579102
    6. '<|end|>' → logprob: -14.752191543579102
    7. '(
' → logprob: -14.877191543579102
    8. '	map' → logprob: -15.752191543579102
    9. '(input' → logprob: -16.3771915435791
    10. '()' → logprob: -16.5021915435791

Token 74: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014519019750878215
    2. '(' → logprob: -6.6264519691467285
    3. '<|end|>' → logprob: -9.37645149230957
    4. 'int' → logprob: -10.87645149230957
    5. '(lambda' → logprob: -11.37645149230957
    6. '(str' → logprob: -12.50145149230957
    7. '[int' → logprob: -12.75145149230957
    8. '<int' → logprob: -13.25145149230957
    9. ',int' → logprob: -14.25145149230957
    10. '(
' → logprob: -14.50145149230957

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6933739185333252
    2. ',input' → logprob: -0.6933739185333252
    3. ' ,' → logprob: -9.068373680114746
    4. 'input' → logprob: -9.818373680114746
    5. '(input' → logprob: -10.068373680114746
    6. '(' → logprob: -11.943373680114746
    7. ' input' → logprob: -12.568373680114746
    8. ',(' → logprob: -13.693373680114746
    9. ' (' → logprob: -13.818373680114746
    10. ',int' → logprob: -13.943373680114746

Token 76: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4741556644439697
    2. 'input' → logprob: -0.9741556644439697
    3. ' sys' → logprob: -9.84915542602539
    4. 'sys' → logprob: -10.84915542602539
    5. '	input' → logprob: -12.97415542602539
    6. ',input' → logprob: -13.59915542602539
    7. ' ' → logprob: -13.59915542602539
    8. '(input' → logprob: -14.72415542602539
    9. '=input' → logprob: -14.84915542602539
    10. '
' → logprob: -15.22415542602539

Token 77: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.644463479053229e-05
    2. '()' → logprob: -10.000046730041504
    3. ' ().' → logprob: -14.375046730041504
    4. '()))' → logprob: -14.875046730041504
    5. '(' → logprob: -17.250045776367188
    6. '())))' → logprob: -17.375045776367188
    7. '())' → logprob: -17.875045776367188
    8. '().__' → logprob: -18.750045776367188
    9. '()));' → logprob: -19.250045776367188
    10. '()
' → logprob: -19.375045776367188

Token 78: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16768038272857666
    2. 'split' → logprob: -1.9176803827285767
    3. 'rstrip' → logprob: -4.917680263519287
    4. 'read' → logprob: -9.167680740356445
    5. ' strip' → logprob: -12.167680740356445
    6. ')' → logprob: -13.417680740356445
    7. ' split' → logprob: -14.292680740356445
    8. 'rs' → logprob: -15.167680740356445
    9. ' readline' → logprob: -16.042680740356445
    10. '(strip' → logprob: -16.542680740356445

Token 79: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.25435370206832886
    2. '))' → logprob: -1.5043537616729736
    3. '()' → logprob: -6.1293535232543945
    4. '())' → logprob: -8.879353523254395
    5. '()))
' → logprob: -10.129353523254395
    6. '(' → logprob: -10.129353523254395
    7. ')' → logprob: -11.754353523254395
    8. ')))' → logprob: -12.129353523254395
    9. ' ))' → logprob: -12.879353523254395
    10. '()));' → logprob: -12.879353523254395

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04135497659444809
    2. '
' → logprob: -3.2913548946380615
    3. ' def' → logprob: -7.041355133056641
    4. '\n' → logprob: -7.541355133056641
    5. '' → logprob: -7.916355133056641
    6. '\' → logprob: -7.916355133056641
    7. '

' → logprob: -8.16635513305664
    8. ' 
' → logprob: -8.91635513305664
    9. '
' → logprob: -8.91635513305664
    10. '#' → logprob: -8.91635513305664

Token 81: ' LF' (ID: 107653)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.027347814291715622
    2. 'II' → logprob: -3.9023478031158447
    3. ' I' → logprob: -5.152348041534424
    4. ' II' → logprob: -7.652348041534424
    5. 'LS' → logprob: -7.777348041534424
    6. 'LI' → logprob: -10.902347564697266
    7. 'L' → logprob: -10.902347564697266
    8. 'int' → logprob: -11.277347564697266
    9. ' LS' → logprob: -11.277347564697266
    10. 'INT' → logprob: -11.777347564697266

Token 82: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.652451464906335e-05
    2. '()' → logprob: -11.250016212463379
    3. ' ():' → logprob: -13.125016212463379
    4. '():
' → logprob: -13.500016212463379
    5. '():

' → logprob: -17.500017166137695
    6. '):' → logprob: -17.500017166137695
    7. '()>' → logprob: -17.750017166137695
    8. '(' → logprob: -17.875017166137695
    9. '().' → logprob: -19.000017166137695
    10. ':' → logprob: -19.125017166137695

Token 83: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.009925016202032566
    2. 'return' → logprob: -4.63492488861084
    3. ' list' → logprob: -9.00992488861084
    4. ' ' → logprob: -10.00992488861084
    5. 'list' → logprob: -13.63492488861084
    6. ' ' → logprob: -14.63492488861084
    7. ' map' → logprob: -16.509925842285156
    8. ' float' → logprob: -17.134925842285156
    9. '  ' → logprob: -17.634925842285156
    10. 'eturn' → logprob: -17.759925842285156

Token 84: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005234121344983578
    2. ' list' → logprob: -5.255234241485596
    3. '[' → logprob: -15.880233764648438
    4. '[list' → logprob: -16.630233764648438
    5. 'map' → logprob: -18.130233764648438
    6. 'List' → logprob: -18.130233764648438
    7. '	list' → logprob: -18.255233764648438
    8. '=list' → logprob: -19.380233764648438
    9. 'li' → logprob: -19.505233764648438
    10. 'float' → logprob: -20.005233764648438

Token 85: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.27330803871154785
    2. '(' → logprob: -1.5233080387115479
    3. '(float' → logprob: -3.898308038711548
    4. '(lambda' → logprob: -7.273307800292969
    5. '(list' → logprob: -10.148307800292969
    6. '(f' → logprob: -10.398307800292969
    7. '(math' → logprob: -10.898307800292969
    8. ' (' → logprob: -11.023307800292969
    9. '(int' → logprob: -11.273307800292969
    10. '(eval' → logprob: -11.398307800292969

Token 86: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.0015506906202062964
    2. 'float' → logprob: -6.501550674438477
    3. '(' → logprob: -10.626550674438477
    4. '<float' → logprob: -11.626550674438477
    5. '=float' → logprob: -11.751550674438477
    6. ' float' → logprob: -13.001550674438477
    7. ',float' → logprob: -13.126550674438477
    8. '(int' → logprob: -13.626550674438477
    9. '	float' → logprob: -14.251550674438477
    10. '_float' → logprob: -14.376550674438477

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010491237044334412
    2. ',input' → logprob: -6.876049041748047
    3. ' ,' → logprob: -11.626049041748047
    4. '(' → logprob: -12.001049041748047
    5. ',float' → logprob: -14.876049041748047
    6. ',int' → logprob: -14.876049041748047
    7. 'input' → logprob: -15.126049041748047
    8. '(input' → logprob: -15.626049041748047
    9. ' input' → logprob: -17.126049041748047
    10. '(),' → logprob: -17.126049041748047

Token 88: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16048498451709747
    2. ' input' → logprob: -1.910485029220581
    3. '(input' → logprob: -8.28548526763916
    4. ')' → logprob: -12.78548526763916
    5. ',input' → logprob: -13.16048526763916
    6. '	input' → logprob: -13.78548526763916
    7. '=input' → logprob: -14.28548526763916
    8. '[input' → logprob: -14.53548526763916
    9. '<input' → logprob: -14.66048526763916
    10. '_input' → logprob: -15.16048526763916

Token 89: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -14.000003814697266
    3. '()' → logprob: -14.000003814697266
    4. ' ().' → logprob: -14.125003814697266
    5. '.split' → logprob: -14.875003814697266
    6. ' .' → logprob: -15.000003814697266
    7. '))' → logprob: -15.500003814697266
    8. '(' → logprob: -16.625003814697266
    9. ' ' → logprob: -17.500003814697266
    10. '()[' → logprob: -18.250003814697266

Token 90: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4021237802808173e-05
    2. ')' → logprob: -12.125014305114746
    3. 'strip' → logprob: -12.375014305114746
    4. ' split' → logprob: -13.250014305114746
    5. 'spl' → logprob: -13.625014305114746
    6. 'rstrip' → logprob: -14.750014305114746
    7. '))' → logprob: -15.500014305114746
    8. '(split' → logprob: -15.625014305114746
    9. 's' → logprob: -15.750014305114746
    10. '.split' → logprob: -15.750014305114746

Token 91: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16073563694953918
    2. '()))' → logprob: -1.9107356071472168
    3. '()' → logprob: -7.660735607147217
    4. ')' → logprob: -10.910736083984375
    5. '())' → logprob: -11.910736083984375
    6. '()))
' → logprob: -12.160736083984375
    7. ' ))' → logprob: -12.660736083984375
    8. '))
' → logprob: -12.785736083984375
    9. '(' → logprob: -13.535736083984375
    10. ')))' → logprob: -13.660736083984375

Token 92: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006021226872690022
    2. 'd' → logprob: -7.7506022453308105
    3. '\' → logprob: -9.375601768493652
    4. '
' → logprob: -10.250601768493652
    5. '#' → logprob: -10.500601768493652
    6. ' def' → logprob: -12.125601768493652
    7. '\n' → logprob: -12.375601768493652
    8. '```' → logprob: -12.375601768493652
    9. 'de' → logprob: -12.750601768493652
    10. ' 
' → logprob: -13.750601768493652

Token 93: ' LI' (ID: 14875)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.1596841961145401
    2. ' I' → logprob: -2.034684181213379
    3. 'S' → logprob: -5.284684181213379
    4. ' S' → logprob: -5.659684181213379
    5. 'II' → logprob: -5.659684181213379
    6. ' II' → logprob: -7.159684181213379
    7. 'int' → logprob: -7.284684181213379
    8. ' input' → logprob: -7.284684181213379
    9. 'LI' → logprob: -8.159684181213379
    10. ' LS' → logprob: -8.159684181213379

Token 94: '_' (ID: 62)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5947454571723938
    2. '()' → logprob: -1.094745397567749
    3. 'S' → logprob: -3.469745397567749
    4. 'n' → logprob: -3.719745397567749
    5. 'strip' → logprob: -4.469745635986328
    6. 'N' → logprob: -5.219745635986328
    7. 'nt' → logprob: -5.344745635986328
    8. 'split' → logprob: -5.344745635986328
    9. 'T' → logprob: -5.469745635986328
    10. '32' → logprob: -5.469745635986328

Token 95: '():' (ID: 9442)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039293430745601654
    2. '1' → logprob: -3.9142935276031494
    3. '2' → logprob: -4.28929328918457
    4. 'n' → logprob: -6.66429328918457
    5. '()' → logprob: -7.41429328918457
    6. 'strip' → logprob: -7.78929328918457
    7. '_' → logprob: -8.03929328918457
    8. 's' → logprob: -8.28929328918457
    9. 'map' → logprob: -8.78929328918457
    10. 'ST' → logprob: -8.78929328918457

Token 96: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18502765893936157
    2. 'return' → logprob: -1.8100275993347168
    3. ' lambda' → logprob: -5.935027599334717
    4. 'lambda' → logprob: -6.560027599334717
    5. 'eturn' → logprob: -7.060027599334717
    6. 'def' → logprob: -8.310028076171875
    7. ' ' → logprob: -10.935028076171875
    8. ':return' → logprob: -10.935028076171875
    9. ' [' → logprob: -11.935028076171875
    10. '  ' → logprob: -12.060028076171875

Token 97: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004154260735958815
    2. '[list' → logprob: -5.504154205322266
    3. ' list' → logprob: -9.504154205322266
    4. ' [' → logprob: -14.379154205322266
    5. '	list' → logprob: -15.754154205322266
    6. 'lis' → logprob: -15.754154205322266
    7. '[' → logprob: -16.004154205322266
    8. 'map' → logprob: -16.254154205322266
    9. '[l' → logprob: -16.879154205322266
    10. '(list' → logprob: -16.879154205322266

Token 98: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004947714623995125
    2. '(' → logprob: -8.000494956970215
    3. '(lambda' → logprob: -9.750494956970215
    4. '(int' → logprob: -9.750494956970215
    5. 'map' → logprob: -10.375494956970215
    6. '(range' → logprob: -12.625494956970215
    7. '<|end|>' → logprob: -12.750494956970215
    8. '	map' → logprob: -13.875494956970215
    9. ' (' → logprob: -14.000494956970215
    10. '(i' → logprob: -14.375494956970215

Token 99: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0047982074320316315
    2. '(lambda' → logprob: -5.379798412322998
    3. 'int' → logprob: -8.75479793548584
    4. '(' → logprob: -12.00479793548584
    5. '<int' → logprob: -12.25479793548584
    6. 'lambda' → logprob: -12.62979793548584
    7. '[int' → logprob: -13.00479793548584
    8. '=int' → logprob: -14.00479793548584
    9. '```' → logprob: -14.00479793548584
    10. '(str' → logprob: -14.25479793548584

Token 100: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022473573684692
    2. ' x' → logprob: -1.9102246761322021
    3. '	x' → logprob: -14.535224914550781
    4. 'a' → logprob: -16.03522491455078
    5. ':x' → logprob: -17.41022491455078
    6. ' ' → logprob: -18.53522491455078
    7. '"x' → logprob: -19.41022491455078
    8. 'k' → logprob: -19.53522491455078
    9. 's' → logprob: -19.78522491455078
    10. '(x' → logprob: -19.78522491455078

Token 101: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6955955624580383
    2. ':int' → logprob: -0.6955955624580383
    3. ':x' → logprob: -6.070595741271973
    4. ' :' → logprob: -8.945595741271973
    5. ':
' → logprob: -13.320595741271973
    6. 'int' → logprob: -13.445595741271973
    7. ':Int' → logprob: -14.320595741271973
    8. '=int' → logprob: -14.820595741271973
    9. ':_' → logprob: -15.570595741271973
    10. ':-' → logprob: -15.820595741271973

Token 102: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08360975235700607
    2. 'x' → logprob: -2.5836098194122314
    3. ' int' → logprob: -5.708609580993652
    4. ' x' → logprob: -6.583609580993652
    5. '(int' → logprob: -12.208609580993652
    6. '	int' → logprob: -13.083609580993652
    7. '<int' → logprob: -14.708609580993652
    8. '[int' → logprob: -14.833609580993652
    9. '	x' → logprob: -15.083609580993652
    10. ':int' → logprob: -15.458609580993652

Token 103: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.101369894575328e-05
    2. '(' → logprob: -10.000081062316895
    3. 'x' → logprob: -10.250081062316895
    4. '(
' → logprob: -16.500080108642578
    5. '	x' → logprob: -16.875080108642578
    6. '(int' → logprob: -17.250080108642578
    7. ')x' → logprob: -17.375080108642578
    8. ' (' → logprob: -18.375080108642578
    9. 'a' → logprob: -18.625080108642578
    10. ':x' → logprob: -18.625080108642578

Token 104: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09334982931613922
    2. '(x' → logprob: -2.7183499336242676
    3. 'x' → logprob: -4.468349933624268
    4. '()-' → logprob: -4.968349933624268
    5. ')-' → logprob: -6.343349933624268
    6. ' -' → logprob: -6.468349933624268
    7. ':x' → logprob: -7.343349933624268
    8. ')' → logprob: -8.96834945678711
    9. '1' → logprob: -9.21834945678711
    10. ':' → logprob: -9.34334945678711

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. 'x' → logprob: -16.875911712646484
    4. '<|end|>' → logprob: -17.500911712646484
    5. ' x' → logprob: -18.875911712646484
    6. 'int' → logprob: -19.250911712646484
    7. ' ' → logprob: -20.750911712646484
    8. ')' → logprob: -21.000911712646484
    9. ' int' → logprob: -21.500911712646484
    10. '１' → logprob: -21.625911712646484

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01428620982915163
    2. ',input' → logprob: -4.264286041259766
    3. ' ,' → logprob: -9.514286041259766
    4. 'input' → logprob: -10.014286041259766
    5. ' input' → logprob: -13.264286041259766
    6. ',x' → logprob: -13.514286041259766
    7. ',int' → logprob: -14.514286041259766
    8. '(),' → logprob: -15.514286041259766
    9. '(input' → logprob: -16.014286041259766
    10. ')' → logprob: -16.764286041259766

Token 107: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519296407699585
    2. ' input' → logprob: -1.5019296407699585
    3. ' ' → logprob: -16.126930236816406
    4. '(input' → logprob: -16.126930236816406
    5. '	input' → logprob: -16.251930236816406
    6. '<input' → logprob: -16.626930236816406
    7. ',input' → logprob: -17.001930236816406
    8. 'output' → logprob: -18.126930236816406
    9. '=input' → logprob: -18.376930236816406
    10. '_input' → logprob: -18.376930236816406

Token 108: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.750000953674316
    3. ' ().' → logprob: -16.125
    4. '.split' → logprob: -16.375
    5. '(' → logprob: -18.125
    6. ' .' → logprob: -19.25
    7. 'split' → logprob: -19.875
    8. '.' → logprob: -20.375
    9. '().__' → logprob: -21.25
    10. ' ' → logprob: -21.75

Token 109: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.008129963040119e-06
    2. ' split' → logprob: -13.125003814697266
    3. 'strip' → logprob: -13.250003814697266
    4. 'spl' → logprob: -16.500003814697266
    5. 'rstrip' → logprob: -18.000003814697266
    6. '(split' → logprob: -18.625003814697266
    7. ')' → logprob: -18.875003814697266
    8. 'read' → logprob: -20.250003814697266
    9. '.split' → logprob: -20.750003814697266
    10. '```' → logprob: -21.000003814697266

Token 110: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5830636024475098
    2. '))' → logprob: -0.8330636024475098
    3. '()' → logprob: -4.95806360244751
    4. '()))
' → logprob: -9.833063125610352
    5. '())' → logprob: -12.083063125610352
    6. '(' → logprob: -12.583063125610352
    7. '))
' → logprob: -12.583063125610352
    8. '()))

' → logprob: -13.083063125610352
    9. ' ))' → logprob: -13.708063125610352
    10. '()));' → logprob: -14.083063125610352

Token 111: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022678142704535276
    2. ')' → logprob: -8.625226974487305
    3. '\' → logprob: -11.500226974487305
    4. '
' → logprob: -11.750226974487305
    5. '()' → logprob: -12.000226974487305
    6. '_' → logprob: -12.250226974487305
    7. '#' → logprob: -12.750226974487305
    8. ' def' → logprob: -13.000226974487305
    9. '```' → logprob: -13.000226974487305
    10. '\n' → logprob: -13.125226974487305

Token 112: ' II' (ID: 9839)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.027810513973236084
    2. ' I' → logprob: -4.277810573577881
    3. 'S' → logprob: -5.027810573577881
    4. 'LS' → logprob: -5.652810573577881
    5. 'II' → logprob: -6.527810573577881
    6. ' S' → logprob: -7.652810573577881
    7. 'int' → logprob: -7.902810573577881
    8. 'INT' → logprob: -8.027810096740723
    9. ' II' → logprob: -8.277810096740723
    10. ' LS' → logprob: -8.652810096740723

Token 113: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00043639098294079304
    2. '()' → logprob: -7.750436305999756
    3. '():
' → logprob: -12.250436782836914
    4. ' ():' → logprob: -14.750436782836914
    5. '()>' → logprob: -15.750436782836914
    6. '(' → logprob: -17.000436782836914
    7. '();' → logprob: -17.125436782836914
    8. '()">' → logprob: -17.250436782836914
    9. '():

' → logprob: -17.375436782836914
    10. '().' → logprob: -17.500436782836914

Token 114: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.004349417518824339
    2. 'return' → logprob: -5.754349231719971
    3. ' int' → logprob: -7.004349231719971
    4. 'int' → logprob: -8.254349708557129
    5. ' ' → logprob: -13.129349708557129
    6. ' ' → logprob: -13.879349708557129
    7. ' 
' → logprob: -16.504348754882812
    8. '=int' → logprob: -16.754348754882812
    9. '(int' → logprob: -17.504348754882812
    10. 'eturn' → logprob: -18.129348754882812

Token 115: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.493430894101039e-05
    2. ' int' → logprob: -9.500075340270996
    3. '(int' → logprob: -19.50007438659668
    4. '	int' → logprob: -20.12507438659668
    5. 'ints' → logprob: -21.12507438659668
    6. 'in' → logprob: -22.37507438659668
    7. ' ' → logprob: -22.50007438659668
    8. '<int' → logprob: -22.50007438659668
    9. '=int' → logprob: -22.87507438659668
    10. '[int' → logprob: -22.87507438659668

Token 116: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001930301426909864
    2. '(' → logprob: -6.251930236816406
    3. 'input' → logprob: -13.501930236816406
    4. '()' → logprob: -15.876930236816406
    5. '(in' → logprob: -16.751930236816406
    6. ' (' → logprob: -16.876930236816406
    7. '(
' → logprob: -17.001930236816406
    8. '(inp' → logprob: -17.126930236816406
    9. '(sys' → logprob: -17.251930236816406
    10. '(int' → logprob: -18.251930236816406

Token 117: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011507763527333736
    2. '().' → logprob: -4.511507987976074
    3. '()' → logprob: -7.761507987976074
    4. '()))' → logprob: -10.386507987976074
    5. ' ())' → logprob: -13.386507987976074
    6. ')' → logprob: -14.636507987976074
    7. '(' → logprob: -14.761507987976074
    8. '())
' → logprob: -15.261507987976074
    9. '();)' → logprob: -15.386507987976074
    10. '()]' → logprob: -15.636507987976074

Token 118: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003953255712985992
    2. ' 
' → logprob: -7.003953456878662
    3. '\' → logprob: -7.503953456878662
    4. '
' → logprob: -7.503953456878662
    5. ' ' → logprob: -8.003952980041504
    6. ' def' → logprob: -8.253952980041504
    7. 'n' → logprob: -8.753952980041504
    8. 'd' → logprob: -8.753952980041504
    9. ')' → logprob: -9.003952980041504
    10. 's' → logprob: -9.003952980041504

Token 119: ' IF' (ID: 20505)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1627381145954132
    2. 'LS' → logprob: -2.162738084793091
    3. 'SI' → logprob: -3.787738084793091
    4. 'SS' → logprob: -4.66273832321167
    5. 'IS' → logprob: -7.16273832321167
    6. ' S' → logprob: -7.66273832321167
    7. 'I' → logprob: -8.037737846374512
    8. 's' → logprob: -8.162737846374512
    9. 'MI' → logprob: -8.412737846374512
    10. 'LL' → logprob: -8.662737846374512

Token 120: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.6550729419104755e-05
    2. '()' → logprob: -10.250036239624023
    3. '():
' → logprob: -14.125036239624023
    4. ' ():' → logprob: -14.875036239624023
    5. '()>' → logprob: -18.125036239624023
    6. '().' → logprob: -18.250036239624023
    7. '()*' → logprob: -18.250036239624023
    8. '():

' → logprob: -18.500036239624023
    9. '();' → logprob: -18.750036239624023
    10. '(' → logprob: -19.250036239624023

Token 121: ' return' (ID: 622)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00862131267786026
    2. ' float' → logprob: -4.7586212158203125
    3. 'int' → logprob: -12.258621215820312
    4. '=float' → logprob: -14.008621215820312
    5. '(float' → logprob: -14.883621215820312
    6. 'return' → logprob: -15.133621215820312
    7. 'loat' → logprob: -15.633621215820312
    8. 'flo' → logprob: -15.758621215820312
    9. '	float' → logprob: -16.633621215820312
    10. '<float' → logprob: -17.133621215820312

Token 122: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.7848862373502925e-05
    2. ' float' → logprob: -10.500027656555176
    3. 'loat' → logprob: -15.625027656555176
    4. '(float' → logprob: -16.000028610229492
    5. 'int' → logprob: -17.625028610229492
    6. '	float' → logprob: -17.875028610229492
    7. '=float' → logprob: -18.250028610229492
    8. '<float' → logprob: -19.250028610229492
    9. 'flo' → logprob: -19.750028610229492
    10. 'fl' → logprob: -20.375028610229492

Token 123: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5376929640769958
    2. '()' → logprob: -1.0376930236816406
    3. '(' → logprob: -2.7876930236816406
    4. 'input' → logprob: -10.41269302368164
    5. '())' → logprob: -11.91269302368164
    6. '(
' → logprob: -11.91269302368164
    7. '();' → logprob: -12.03769302368164
    8. ' ()' → logprob: -12.28769302368164
    9. '()
' → logprob: -12.66269302368164
    10. ' (' → logprob: -13.03769302368164

Token 124: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0044498201459646225
    2. ')' → logprob: -6.004449844360352
    3. '()' → logprob: -6.254449844360352
    4. '())
' → logprob: -10.129449844360352
    5. ' ())' → logprob: -12.629449844360352
    6. '(' → logprob: -13.004449844360352
    7. '()
' → logprob: -13.504449844360352
    8. '()))' → logprob: -13.754449844360352
    9. '())

' → logprob: -13.879449844360352
    10. '().' → logprob: -14.754449844360352

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04843144118785858
    2. '
' → logprob: -3.423431396484375
    3. 'class' → logprob: -4.673431396484375
    4. ' 
' → logprob: -6.048431396484375
    5. '

' → logprob: -7.048431396484375
    6. '\' → logprob: -8.048431396484375
    7. '  
' → logprob: -8.048431396484375
    8. '#' → logprob: -8.173431396484375
    9. 'd' → logprob: -8.423431396484375
    10. '    
' → logprob: -8.798431396484375

Token 126: ' LS' (ID: 60790)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5659828782081604
    2. 'S' → logprob: -1.8159828186035156
    3. 'ST' → logprob: -2.4409828186035156
    4. 'print' → logprob: -2.9409828186035156
    5. ' str' → logprob: -3.4409828186035156
    6. 'STR' → logprob: -3.8159828186035156
    7. ' print' → logprob: -4.315982818603516
    8. 'I' → logprob: -4.315982818603516
    9. 'LS' → logprob: -4.440982818603516
    10. 's' → logprob: -4.565982818603516

Token 127: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018198054283857346
    2. '()' → logprob: -4.018198013305664
    3. ' ():' → logprob: -11.143198013305664
    4. '().' → logprob: -11.768198013305664
    5. ' ()' → logprob: -11.893198013305664
    6. '()>' → logprob: -12.268198013305664
    7. '():
' → logprob: -12.268198013305664
    8. '();' → logprob: -12.893198013305664
    9. '()]' → logprob: -13.143198013305664
    10. '()[' → logprob: -14.143198013305664

Token 128: ' return' (ID: 622)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18384188413619995
    2. 'list' → logprob: -2.3088419437408447
    3. 'return' → logprob: -2.9338419437408447
    4. 'lambda' → logprob: -4.933841705322266
    5. ' input' → logprob: -5.183841705322266
    6. 'sys' → logprob: -6.683841705322266
    7. ' return' → logprob: -7.558841705322266
    8. ' list' → logprob: -7.933841705322266
    9. ' lambda' → logprob: -8.558841705322266
    10. 'def' → logprob: -8.683841705322266

Token 129: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014389735646545887
    2. 'list' → logprob: -4.264389514923096
    3. 'sys' → logprob: -8.514389991760254
    4. ' input' → logprob: -11.014389991760254
    5. '[input' → logprob: -11.639389991760254
    6. '[' → logprob: -16.014389038085938
    7. ' list' → logprob: -16.264389038085938
    8. '(input' → logprob: -16.389389038085938
    9. '=input' → logprob: -17.139389038085938
    10. 's' → logprob: -17.639389038085938

Token 130: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.043853312730789185
    2. '(input' → logprob: -3.168853282928467
    3. 'map' → logprob: -7.293853282928467
    4. 'input' → logprob: -8.918853759765625
    5. '(' → logprob: -10.293853759765625
    6. ' map' → logprob: -13.168853759765625
    7. '(str' → logprob: -14.168853759765625
    8. '(range' → logprob: -14.293853759765625
    9. ',map' → logprob: -14.793853759765625
    10. '(sys' → logprob: -15.043853759765625

Token 131: '(list' (ID: 13116)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -7.584239938296378e-06
    2. 'str' → logprob: -12.000007629394531
    3. '(input' → logprob: -13.750007629394531
    4. '(lambda' → logprob: -15.500007629394531
    5. '(' → logprob: -16.62500762939453
    6. '=str' → logprob: -16.87500762939453
    7. '(list' → logprob: -17.62500762939453
    8. ' str' → logprob: -18.12500762939453
    9. '(chr' → logprob: -18.50000762939453
    10. '[str' → logprob: -18.62500762939453

Token 132: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10053380578756332
    2. ',' → logprob: -2.3505337238311768
    3. 'input' → logprob: -8.475533485412598
    4. ',str' → logprob: -9.600533485412598
    5. '(input' → logprob: -10.100533485412598
    6. ' ,' → logprob: -12.725533485412598
    7. 'str' → logprob: -13.350533485412598
    8. '(' → logprob: -13.475533485412598
    9. ' input' → logprob: -13.850533485412598
    10. ',string' → logprob: -14.600533485412598

Token 133: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.566264295950532e-05
    2. 'sys' → logprob: -10.000085830688477
    3. ' input' → logprob: -10.125085830688477
    4. 'map' → logprob: -16.000085830688477
    5. 'str' → logprob: -17.000085830688477
    6. 'filter' → logprob: -17.375085830688477
    7. '(input' → logprob: -17.375085830688477
    8. 'list' → logprob: -17.750085830688477
    9. ' sys' → logprob: -18.000085830688477
    10. '
' → logprob: -18.750085830688477

Token 134: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.010407183319330215
    2. '()))' → logprob: -4.760406970977783
    3. '()' → logprob: -6.385406970977783
    4. '))' → logprob: -9.260407447814941
    5. '())' → logprob: -12.760407447814941
    6. '(' → logprob: -13.510407447814941
    7. '()));' → logprob: -13.510407447814941
    8. '()[' → logprob: -13.760407447814941
    9. '())))' → logprob: -14.010407447814941
    10. '().__' → logprob: -14.260407447814941

Token 135: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07904169708490372
    2. 'strip' → logprob: -2.5790417194366455
    3. 'rstrip' → logprob: -8.829041481018066
    4. '().' → logprob: -13.079041481018066
    5. 'spl' → logprob: -13.829041481018066
    6. 'read' → logprob: -13.829041481018066
    7. ' split' → logprob: -14.204041481018066
    8. ' strip' → logprob: -14.454041481018066
    9. ')' → logprob: -16.579042434692383
    10. 'str' → logprob: -16.829042434692383

Token 136: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0037996075116097927
    2. '()' → logprob: -5.7537994384765625
    3. '()))
' → logprob: -7.6287994384765625
    4. '))' → logprob: -9.128799438476562
    5. '(' → logprob: -11.253799438476562
    6. '()));' → logprob: -12.253799438476562
    7. '()))

' → logprob: -12.503799438476562
    8. '().' → logprob: -13.503799438476562
    9. '())' → logprob: -13.503799438476562
    10. '())))' → logprob: -14.253799438476562

Token 137: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016412617405876517
    2. 'S' → logprob: -6.501641273498535
    3. 'D' → logprob: -9.126641273498535
    4. 's' → logprob: -11.126641273498535
    5. 'd' → logprob: -12.751641273498535
    6. 'class' → logprob: -12.876641273498535
    7. '
' → logprob: -13.501641273498535
    8. 'from' → logprob: -13.501641273498535
    9. '```' → logprob: -13.876641273498535
    10. ' def' → logprob: -14.126641273498535

Token 138: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001877827919088304
    2. 'SS' → logprob: -7.126877784729004
    3. 'I' → logprob: -7.751877784729004
    4. 's' → logprob: -7.876877784729004
    5. 'L' → logprob: -8.876877784729004
    6. 'l' → logprob: -10.501877784729004
    7. 'LS' → logprob: -10.501877784729004
    8. 'LI' → logprob: -10.751877784729004
    9. 'LL' → logprob: -11.501877784729004
    10. 'RS' → logprob: -11.876877784729004

Token 139: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09837178140878677
    2. 'tring' → logprob: -3.098371744155884
    3. 'tr' → logprob: -3.223371744155884
    4. '()' → logprob: -5.098371982574463
    5. 'TR' → logprob: -6.098371982574463
    6. '=' → logprob: -8.723371505737305
    7. '():
' → logprob: -9.098371505737305
    8. ' =' → logprob: -10.723371505737305
    9. 'trim' → logprob: -11.348371505737305
    10. 'trip' → logprob: -11.473371505737305

Token 140: ' return' (ID: 622)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04913114756345749
    2. ' input' → logprob: -3.049131155014038
    3. 'return' → logprob: -7.549130916595459
    4. ' return' → logprob: -11.174131393432617
    5. 'str' → logprob: -13.549131393432617
    6. '=input' → logprob: -14.424131393432617
    7. 'strip' → logprob: -14.799131393432617
    8. '(input' → logprob: -15.049131393432617
    9. ' ' → logprob: -16.174131393432617
    10. ' str' → logprob: -16.549131393432617

Token 141: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -5.512236498361744e-07
    2. ' input' → logprob: -14.750000953674316
    3. 'sys' → logprob: -17.5
    4. 'inp' → logprob: -19.75
    5. 'list' → logprob: -20.375
    6. 'int' → logprob: -21.0
    7. '(input' → logprob: -21.125
    8. '<input' → logprob: -21.75
    9. 'str' → logprob: -22.0
    10. '=input' → logprob: -22.125

Token 142: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5914683938026428
    2. '(input' → logprob: -1.216468334197998
    3. '().' → logprob: -1.966468334197998
    4. '(strip' → logprob: -5.341468334197998
    5. 'input' → logprob: -6.091468334197998
    6. '()[' → logprob: -6.216468334197998
    7. '(' → logprob: -8.466468811035156
    8. '(str' → logprob: -8.466468811035156
    9. 'strip' → logprob: -8.716468811035156
    10. '()(' → logprob: -9.466468811035156

Token 143: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016039233014453202
    2. '()' → logprob: -8.750160217285156
    3. '())' → logprob: -13.625160217285156
    4. 'rstrip' → logprob: -15.500160217285156
    5. '(' → logprob: -15.750160217285156
    6. '()[' → logprob: -16.000160217285156
    7. '.rstrip' → logprob: -16.625160217285156
    8. ')' → logprob: -17.000160217285156
    9. 'strip' → logprob: -17.125160217285156
    10. '.strip' → logprob: -17.625160217285156

Token 144: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023251652717590332
    2. 'rstrip' → logprob: -3.773251533508301
    3. 'read' → logprob: -12.0232515335083
    4. ' strip' → logprob: -16.648252487182617
    5. 'split' → logprob: -16.898252487182617
    6. 'decode' → logprob: -18.023252487182617
    7. 'replace' → logprob: -18.648252487182617
    8. 'pop' → logprob: -19.398252487182617
    9. 'str' → logprob: -19.398252487182617
    10. '_strip' → logprob: -19.648252487182617

Token 145: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010203174315392971
    2. '()' → logprob: -5.0102033615112305
    3. ')' → logprob: -6.0102033615112305
    4. '('\' → logprob: -7.6352033615112305
    5. '()))' → logprob: -8.51020336151123
    6. '()\' → logprob: -9.01020336151123
    7. '(' → logprob: -9.13520336151123
    8. '())
' → logprob: -9.88520336151123
    9. '("\' → logprob: -10.76020336151123
    10. ' ())' → logprob: -11.51020336151123

Token 146: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004772110842168331
    2. '#' → logprob: -6.629772186279297
    3. '
' → logprob: -7.379772186279297
    4. '\' → logprob: -7.379772186279297
    5. '\n' → logprob: -7.504772186279297
    6. ')' → logprob: -7.629772186279297
    7. ' 
' → logprob: -8.504772186279297
    8. 'n' → logprob: -8.879772186279297
    9. '(' → logprob: -9.129772186279297
    10. ' ' → logprob: -9.129772186279297

Token 147: ' IR' (ID: 23712)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.562903106212616
    2. ' input' → logprob: -1.0629031658172607
    3. 's' → logprob: -2.6879031658172607
    4. 'str' → logprob: -4.812902927398682
    5. 'I' → logprob: -5.812902927398682
    6. 'int' → logprob: -7.062902927398682
    7. ' s' → logprob: -7.062902927398682
    8. '_' → logprob: -7.062902927398682
    9. '()' → logprob: -7.437902927398682
    10. ' str' → logprob: -7.937902927398682

Token 148: '(n' (ID: 2406)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.5241370797157288
    2. '():' → logprob: -1.024137020111084
    3. '()' → logprob: -3.399137020111084
    4. 'ANGE' → logprob: -4.399137020111084
    5. '():
' → logprob: -5.899137020111084
    6. 'range' → logprob: -9.399137496948242
    7. '()]' → logprob: -10.024137496948242
    8. '():
' → logprob: -10.149137496948242
    9. 'eturn' → logprob: -10.649137496948242
    10. ' ()' → logprob: -10.899137496948242

Token 149: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.5252596464706585e-05
    2. '):
' → logprob: -10.125044822692871
    3. ')' → logprob: -12.625044822692871
    4. ' ):' → logprob: -13.500044822692871
    5. '():' → logprob: -15.125044822692871
    6. '):
' → logprob: -16.375045776367188
    7. '()' → logprob: -17.625045776367188
    8. '"):' → logprob: -17.625045776367188
    9. '[]):' → logprob: -17.750045776367188
    10. ']:' → logprob: -17.875045776367188

Token 150: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47830095887184143
    2. 'return' → logprob: -0.978300929069519
    3. ' for' → logprob: -6.353301048278809
    4. '[' → logprob: -6.978301048278809
    5. '   ' → logprob: -7.603301048278809
    6. 'for' → logprob: -7.853301048278809
    7. 'range' → logprob: -8.353301048278809
    8. ' range' → logprob: -8.728301048278809
    9. ' [' → logprob: -9.103301048278809
    10. ' ' → logprob: -10.228301048278809

Token 151: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2055574655532837
    2. '[' → logprob: -1.7055574655532837
    3. '[list' → logprob: -5.830557346343994
    4. '[Int' → logprob: -8.080557823181152
    5. '[r' → logprob: -8.830557823181152
    6. '[List' → logprob: -8.955557823181152
    7. '[random' → logprob: -9.205557823181152
    8. '[i' → logprob: -9.330557823181152
    9. '[line' → logprob: -9.330557823181152
    10. '[input' → logprob: -10.080557823181152

Token 152: 'II' (ID: 6013)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47896453738212585
    2. 'II' → logprob: -0.9789645671844482
    3. 'LI' → logprob: -5.603964328765869
    4. ' int' → logprob: -7.478964328765869
    5. ' II' → logprob: -7.978964328765869
    6. 'input' → logprob: -8.853964805603027
    7. 'I' → logprob: -9.728964805603027
    8. 'list' → logprob: -9.853964805603027
    9. 'tuple' → logprob: -11.978964805603027
    10. 'INT' → logprob: -11.978964805603027

Token 153: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.320199877838604e-07
    2. ' ()' → logprob: -15.375
    3. '(' → logprob: -16.5
    4. '()]' → logprob: -17.25
    5. 'for' → logprob: -17.375
    6. '()
' → logprob: -17.75
    7. '（）' → logprob: -19.375
    8. '```' → logprob: -21.375
    9. '()`' → logprob: -21.625
    10. '()+' → logprob: -21.625

Token 154: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4860150218009949
    2. 'for' → logprob: -1.2360150814056396
    3. '()' → logprob: -2.3610150814056396
    4. '	for' → logprob: -10.361015319824219
    5. ')' → logprob: -11.111015319824219
    6. ' ()' → logprob: -11.486015319824219
    7. ']' → logprob: -13.361015319824219
    8. '```' → logprob: -13.736015319824219
    9. 'n' → logprob: -13.986015319824219
    10. ' ' → logprob: -14.486015319824219

Token 155: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015750908059999347
    2. ' _' → logprob: -6.501574993133545
    3. '_i' → logprob: -9.751575469970703
    4. ' ' → logprob: -11.626575469970703
    5. ' in' → logprob: -13.126575469970703
    6. ' i' → logprob: -13.376575469970703
    7. 'i' → logprob: -14.001575469970703
    8. '_in' → logprob: -14.501575469970703
    9. '(' → logprob: -15.001575469970703
    10. '_n' → logprob: -17.251575469970703

Token 156: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18432806432247162
    2. 'range' → logprob: -1.9343280792236328
    3. ' in' → logprob: -3.809328079223633
    4. ' range' → logprob: -6.434328079223633
    5. '_' → logprob: -10.309328079223633
    6. '	range' → logprob: -12.309328079223633
    7. '(range' → logprob: -12.809328079223633
    8. ' ' → logprob: -13.059328079223633
    9. 'i' → logprob: -13.434328079223633
    10. '_range' → logprob: -14.434328079223633

Token 157: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012356207298580557
    2. ' range' → logprob: -9.000123977661133
    3. '	range' → logprob: -16.875123977661133
    4. '_range' → logprob: -17.625123977661133
    5. '(range' → logprob: -18.000123977661133
    6. '_' → logprob: -18.375123977661133
    7. 'rang' → logprob: -18.375123977661133
    8. 'r' → logprob: -19.250123977661133
    9. 'ran' → logprob: -20.500123977661133
    10. 'ra' → logprob: -20.750123977661133

Token 158: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00029875844484195113
    2. '(' → logprob: -8.125298500061035
    3. '(
' → logprob: -13.375298500061035
    4. 'n' → logprob: -13.875298500061035
    5. ' (' → logprob: -16.00029945373535
    6. ' n' → logprob: -16.25029945373535
    7. '	n' → logprob: -16.25029945373535
    8. ')n' → logprob: -19.87529945373535
    9. '(nx' → logprob: -20.37529945373535
    10. '((' → logprob: -20.75029945373535

Token 159: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.664371848164592e-05
    2. ')]
' → logprob: -11.500016212463379
    3. ')' → logprob: -12.625016212463379
    4. ']' → logprob: -12.875016212463379
    5. '])' → logprob: -15.875016212463379
    6. ')])' → logprob: -16.125017166137695
    7. ')],' → logprob: -16.500017166137695
    8. ')]
' → logprob: -16.875017166137695
    9. '])]' → logprob: -16.875017166137695
    10. ')]

' → logprob: -16.875017166137695

Token 160: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005406428826972842
    2. 'DR' → logprob: -7.750540733337402
    3. 'D' → logprob: -10.500540733337402
    4. 'IR' → logprob: -11.625540733337402
    5. '
' → logprob: -11.750540733337402
    6. '<|end|>' → logprob: -11.750540733337402
    7. ' def' → logprob: -11.875540733337402
    8. 'DP' → logprob: -11.875540733337402
    9. 'LR' → logprob: -11.875540733337402
    10. ']' → logprob: -11.875540733337402

Token 161: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.28238534927368164
    2. 'LR' → logprob: -1.6573853492736816
    3. 'LS' → logprob: -3.5323853492736816
    4. 'SR' → logprob: -4.782385349273682
    5. 'LI' → logprob: -5.157385349273682
    6. 'AR' → logprob: -5.657385349273682
    7. 'I' → logprob: -6.282385349273682
    8. 'LC' → logprob: -6.532385349273682
    9. 'FR' → logprob: -6.532385349273682
    10. ' L' → logprob: -6.907385349273682

Token 162: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.037004660815000534
    2. 'IR' → logprob: -3.5370047092437744
    3. 'R' → logprob: -5.037004470825195
    4. 'S' → logprob: -8.162004470825195
    5. '
' → logprob: -8.912004470825195
    6. 'L' → logprob: -10.037004470825195
    7. 'LI' → logprob: -10.412004470825195
    8. 'IS' → logprob: -10.412004470825195
    9. 'IN' → logprob: -10.537004470825195
    10. 'IST' → logprob: -10.537004470825195

Token 163: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003963569179177284
    2. '_(' → logprob: -7.875396251678467
    3. '(' → logprob: -11.875396728515625
    4. ' (' → logprob: -12.500396728515625
    5. '_' → logprob: -12.500396728515625
    6. '(i' → logprob: -14.750396728515625
    7. '(N' → logprob: -15.000396728515625
    8. '(a' → logprob: -15.750396728515625
    9. '(num' → logprob: -15.750396728515625
    10. '__(' → logprob: -16.125396728515625

Token 164: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.637786231702194e-05
    2. '():' → logprob: -10.375086784362793
    3. '):
' → logprob: -10.375086784362793
    4. ')' → logprob: -11.375086784362793
    5. ' ):' → logprob: -11.500086784362793
    6. '()' → logprob: -13.625086784362793
    7. '):

' → logprob: -15.000086784362793
    8. '(n' → logprob: -15.875086784362793
    9. ']:' → logprob: -16.000085830688477
    10. '=' → logprob: -16.375085830688477

Token 165: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16498945653438568
    2. 'return' → logprob: -1.9149894714355469
    3. ' [' → logprob: -5.664989471435547
    4. '[' → logprob: -6.789989471435547
    5. '[list' → logprob: -9.664989471435547
    6. '   ' → logprob: -10.664989471435547
    7. '[l' → logprob: -11.039989471435547
    8. '[]' → logprob: -11.164989471435547
    9. '[i' → logprob: -11.289989471435547
    10. '[line' → logprob: -11.789989471435547

Token 166: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20219983160495758
    2. '[list' → logprob: -1.7021998167037964
    3. '[List' → logprob: -7.827199935913086
    4. ' [' → logprob: -8.452199935913086
    5. '[l' → logprob: -9.827199935913086
    6. '[L' → logprob: -10.327199935913086
    7. '[int' → logprob: -10.327199935913086
    8. '[line' → logprob: -10.952199935913086
    9. '[input' → logprob: -12.077199935913086
    10. '[i' → logprob: -12.202199935913086

Token 167: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -3.128163257315464e-07
    2. 'list' → logprob: -15.25
    3. ' LI' → logprob: -17.25
    4. 'li' → logprob: -17.75
    5. 'int' → logprob: -19.25
    6. 'Li' → logprob: -20.5
    7. '[' → logprob: -21.5
    8. 'II' → logprob: -21.5
    9. 'LS' → logprob: -21.875
    10. 'tuple' → logprob: -22.625

Token 168: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.4849443838757e-06
    2. '()
' → logprob: -13.000004768371582
    3. '_' → logprob: -13.625004768371582
    4. ' ()' → logprob: -14.250004768371582
    5. '()]' → logprob: -15.500004768371582
    6. '()[' → logprob: -17.000003814697266
    7. '(n' → logprob: -17.125003814697266
    8. '(' → logprob: -17.750003814697266
    9. '()(' → logprob: -17.750003814697266
    10. '()
' → logprob: -18.125003814697266

Token 169: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2681947350502014
    2. 'for' → logprob: -1.5181946754455566
    3. ' for' → logprob: -4.143194675445557
    4. '(' → logprob: -8.518195152282715
    5. '(for' → logprob: -10.643195152282715
    6. '(i' → logprob: -11.018195152282715
    7. '()' → logprob: -11.893195152282715
    8. ' (' → logprob: -12.268195152282715
    9. '	for' → logprob: -12.643195152282715
    10. '(_' → logprob: -13.018195152282715

Token 170: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.453737710718997e-05
    2. ' _' → logprob: -10.250044822692871
    3. ' range' → logprob: -12.000044822692871
    4. ' in' → logprob: -13.375044822692871
    5. 'range' → logprob: -14.250044822692871
    6. '(' → logprob: -15.125044822692871
    7. '_range' → logprob: -15.500044822692871
    8. 'n' → logprob: -15.750044822692871
    9. '(n' → logprob: -16.875043869018555
    10. ' n' → logprob: -17.625043869018555

Token 171: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003346324898302555
    2. ' range' → logprob: -5.7533464431762695
    3. '(range' → logprob: -9.25334644317627
    4. 'in' → logprob: -9.87834644317627
    5. ' in' → logprob: -10.87834644317627
    6. '(' → logprob: -13.25334644317627
    7. '(n' → logprob: -14.25334644317627
    8. '	range' → logprob: -15.75334644317627
    9. 'n' → logprob: -16.003345489501953
    10. '_range' → logprob: -16.128345489501953

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005297077354043722
    2. ' range' → logprob: -5.2552971839904785
    3. '(range' → logprob: -10.13029670715332
    4. '(n' → logprob: -10.88029670715332
    5. 'n' → logprob: -12.38029670715332
    6. '_range' → logprob: -15.00529670715332
    7. '(' → logprob: -16.25529670715332
    8. '	range' → logprob: -16.75529670715332
    9. '_' → logprob: -17.50529670715332
    10. ' xrange' → logprob: -18.63029670715332

Token 173: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016587569552939385
    2. 'n' → logprob: -8.750165939331055
    3. '(' → logprob: -11.875165939331055
    4. ' (' → logprob: -15.625165939331055
    5. ' n' → logprob: -15.875165939331055
    6. 'range' → logprob: -17.750165939331055
    7. '(range' → logprob: -19.500165939331055
    8. ' range' → logprob: -20.500165939331055
    9. '_n' → logprob: -20.750165939331055
    10. '(
' → logprob: -21.000165939331055

Token 174: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002585978072602302
    2. ']' → logprob: -8.500258445739746
    3. '(n' → logprob: -10.625258445739746
    4. ')' → logprob: -11.000258445739746
    5. ')]
' → logprob: -11.750258445739746
    6. '()]' → logprob: -12.875258445739746
    7. '(' → logprob: -13.375258445739746
    8. 'n' → logprob: -14.000258445739746
    9. '])' → logprob: -14.875258445739746
    10. ')],' → logprob: -15.250258445739746

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07427074760198593
    2. 'n' → logprob: -2.949270725250244
    3. 'N' → logprob: -4.324270725250244
    4. 'H' → logprob: -6.699270725250244
    5. 'a' → logprob: -6.824270725250244
    6. 'mod' → logprob: -7.199270725250244
    7. 'from' → logprob: -7.324270725250244
    8. 't' → logprob: -7.449270725250244
    9. 'd' → logprob: -8.574271202087402
    10. 'A' → logprob: -8.574271202087402

Token 176: ' FR' (ID: 24595)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.41257616877555847
    2. 'FR' → logprob: -1.1625761985778809
    3. 'LS' → logprob: -4.662576198577881
    4. 'SR' → logprob: -5.537576198577881
    5. 'LF' → logprob: -5.662576198577881
    6. 'LR' → logprob: -5.787576198577881
    7. 'LL' → logprob: -6.037576198577881
    8. 'F' → logprob: -6.787576198577881
    9. 'IR' → logprob: -7.537576198577881
    10. 'DR' → logprob: -7.662576198577881

Token 177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.941161776310764e-05
    2. '(' → logprob: -10.250039100646973
    3. '(N' → logprob: -13.625039100646973
    4. '<|end|>' → logprob: -14.500039100646973
    5. '<|end|>' → logprob: -14.750039100646973
    6. ' (' → logprob: -14.750039100646973
    7. '()' → logprob: -15.250039100646973
    8. '(nn' → logprob: -15.625039100646973
    9. '(int' → logprob: -16.12504005432129
    10. '(num' → logprob: -16.50004005432129

Token 178: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023901352658867836
    2. '(n' → logprob: -3.7739014625549316
    3. ')' → logprob: -7.523901462554932
    4. '):
' → logprob: -9.648900985717773
    5. ' ):' → logprob: -11.023900985717773
    6. ']:' → logprob: -11.648900985717773
    7. 'def' → logprob: -11.648900985717773
    8. 'n' → logprob: -12.023900985717773
    9. '):

' → logprob: -12.773900985717773
    10. ')n' → logprob: -13.023900985717773

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5761428475379944
    2. ' return' → logprob: -0.8261428475379944
    3. '[' → logprob: -9.076143264770508
    4. '   ' → logprob: -10.076143264770508
    5. ' [' → logprob: -10.451143264770508
    6. '	return' → logprob: -11.826143264770508
    7. ' ' → logprob: -12.701143264770508
    8. '
' → logprob: -13.076143264770508
    9. 'def' → logprob: -13.451143264770508
    10. ' ' → logprob: -13.826143264770508

Token 180: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.939851037808694e-05
    2. ' [' → logprob: -10.875029563903809
    3. '[List' → logprob: -11.750029563903809
    4. '[F' → logprob: -14.375029563903809
    5. '[L' → logprob: -14.625029563903809
    6. '[list' → logprob: -14.750029563903809
    7. '
' → logprob: -15.125029563903809
    8. 'list' → logprob: -15.375029563903809
    9. '[int' → logprob: -15.500029563903809
    10. '[df' → logprob: -16.375028610229492

Token 181: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -0.003267552936449647
    2. 'LF' → logprob: -5.753267765045166
    3. 'FF' → logprob: -9.378267288208008
    4. 'float' → logprob: -13.128267288208008
    5. 'list' → logprob: -13.878267288208008
    6. 'FI' → logprob: -13.878267288208008
    7. ' IF' → logprob: -15.128267288208008
    8. 'DF' → logprob: -15.128267288208008
    9. 'F' → logprob: -15.378267288208008
    10. 'FL' → logprob: -15.503267288208008

Token 182: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.200166469876422e-06
    2. '()]' → logprob: -12.375004768371582
    3. '(' → logprob: -14.250004768371582
    4. '(n' → logprob: -15.375004768371582
    5. ' ()' → logprob: -16.8750057220459
    6. '()
' → logprob: -17.0000057220459
    7. '()(' → logprob: -19.3750057220459
    8. '()[' → logprob: -19.8750057220459
    9. ']()' → logprob: -20.1250057220459
    10. '()

' → logprob: -20.5000057220459

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40927425026893616
    2. '()' → logprob: -1.4092742204666138
    3. ' for' → logprob: -2.4092743396759033
    4. '(n' → logprob: -6.534274101257324
    5. ')' → logprob: -8.534274101257324
    6. ' ()' → logprob: -11.909274101257324
    7. '(' → logprob: -12.409274101257324
    8. 'n' → logprob: -12.784274101257324
    9. ']' → logprob: -14.284274101257324
    10. '	for' → logprob: -14.409274101257324

Token 184: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.24179228907451e-05
    2. ' _' → logprob: -9.750061988830566
    3. ' range' → logprob: -13.125061988830566
    4. '_range' → logprob: -13.500061988830566
    5. ' in' → logprob: -14.750061988830566
    6. 'range' → logprob: -15.750061988830566
    7. '(range' → logprob: -17.375062942504883
    8. 'n' → logprob: -19.000062942504883
    9. '(n' → logprob: -19.250062942504883
    10. '_in' → logprob: -19.625062942504883

Token 185: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0025874313432723284
    2. ' range' → logprob: -6.00258731842041
    3. '(range' → logprob: -9.37758731842041
    4. '_range' → logprob: -11.12758731842041
    5. '_' → logprob: -11.37758731842041
    6. '	range' → logprob: -13.87758731842041
    7. ' in' → logprob: -17.252588272094727
    8. 'in' → logprob: -17.627588272094727
    9. 'ange' → logprob: -17.752588272094727
    10. '-range' → logprob: -18.627588272094727

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004128622822463512
    2. ' range' → logprob: -5.504128456115723
    3. '(range' → logprob: -10.254128456115723
    4. '(n' → logprob: -11.504128456115723
    5. '_range' → logprob: -12.504128456115723
    6. 'n' → logprob: -14.254128456115723
    7. '_' → logprob: -14.879128456115723
    8. '(' → logprob: -16.62912940979004
    9. '	range' → logprob: -16.75412940979004
    10. '_n' → logprob: -17.75412940979004

Token 187: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.656383680412546e-05
    2. '(' → logprob: -10.875046730041504
    3. 'n' → logprob: -10.875046730041504
    4. 'range' → logprob: -11.750046730041504
    5. '(range' → logprob: -14.250046730041504
    6. ' range' → logprob: -16.375045776367188
    7. ' (' → logprob: -18.375045776367188
    8. '
' → logprob: -20.000045776367188
    9. ' n' → logprob: -20.875045776367188
    10. '(
' → logprob: -20.875045776367188

Token 188: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00045033416245132685
    2. ')' → logprob: -8.500450134277344
    3. '(n' → logprob: -8.500450134277344
    4. ')]
' → logprob: -11.250450134277344
    5. 'n' → logprob: -11.375450134277344
    6. ']' → logprob: -11.625450134277344
    7. '(' → logprob: -12.500450134277344
    8. ')])' → logprob: -13.500450134277344
    9. '])]' → logprob: -14.000450134277344
    10. '])' → logprob: -14.000450134277344

Token 189: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019117422634735703
    2. ' ' → logprob: -7.376911640167236
    3. '#' → logprob: -8.001912117004395
    4. '
' → logprob: -8.626912117004395
    5. 'n' → logprob: -9.376912117004395
    6. ' 
' → logprob: -9.376912117004395
    7. ')' → logprob: -9.501912117004395
    8. '\' → logprob: -9.751912117004395
    9. ' def' → logprob: -10.001912117004395
    10. 'd' → logprob: -10.001912117004395

Token 190: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.5094309449195862
    2. 'SR' → logprob: -1.1344308853149414
    3. 'S' → logprob: -3.7594308853149414
    4. 'L' → logprob: -3.7594308853149414
    5. 'RS' → logprob: -4.134430885314941
    6. 'IR' → logprob: -4.759430885314941
    7. 'LR' → logprob: -5.634430885314941
    8. 'STR' → logprob: -7.759430885314941
    9. 'DR' → logprob: -8.134430885314941
    10. 'SOR' → logprob: -8.259430885314941

Token 191: 'FR' (ID: 15357)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.6951238512992859
    2. 'IR' → logprob: -0.8201238512992859
    3. 'FR' → logprob: -3.1951239109039307
    4. 'R' → logprob: -4.695123672485352
    5. 'SF' → logprob: -5.570123672485352
    6. 'S' → logprob: -6.320123672485352
    7. 'SR' → logprob: -6.320123672485352
    8. 'I' → logprob: -6.945123672485352
    9. 'def' → logprob: -7.195123672485352
    10. 'IF' → logprob: -8.070123672485352

Token 192: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.750003814697266
    3. ' (' → logprob: -14.500003814697266
    4. '<|end|>' → logprob: -15.625003814697266
    5. 'def' → logprob: -15.750003814697266
    6. 'n' → logprob: -17.250003814697266
    7. '<|end|>' → logprob: -17.875003814697266
    8. '```' → logprob: -18.375003814697266
    9. '(lambda' → logprob: -19.625003814697266
    10. '()' → logprob: -19.625003814697266

Token 193: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04171189293265343
    2. '():' → logprob: -3.7917118072509766
    3. '(n' → logprob: -4.041711807250977
    4. '()' → logprob: -7.666711807250977
    5. ']:' → logprob: -9.041711807250977
    6. ')' → logprob: -9.416711807250977
    7. '):
' → logprob: -11.041711807250977
    8. ' ):' → logprob: -11.041711807250977
    9. 'def' → logprob: -11.416711807250977
    10. ':' → logprob: -11.666711807250977

Token 194: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10020937025547028
    2. 'return' → logprob: -2.3502094745635986
    3. '[' → logprob: -14.10020923614502
    4. ' [' → logprob: -14.85020923614502
    5. '   ' → logprob: -14.85020923614502
    6. '	return' → logprob: -15.10020923614502
    7. 'def' → logprob: -15.10020923614502
    8. '
' → logprob: -15.60020923614502
    9. '{return' → logprob: -15.60020923614502
    10. ' ' → logprob: -16.225210189819336

Token 195: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007270866190083325
    2. '[L' → logprob: -7.25072717666626
    3. ' [' → logprob: -11.000726699829102
    4. '[F' → logprob: -14.750726699829102
    5. '[List' → logprob: -16.3757266998291
    6. '[[' → logprob: -19.5007266998291
    7. '[l' → logprob: -19.5007266998291
    8. '[
' → logprob: -19.7507266998291
    9. '[df' → logprob: -19.7507266998291
    10. '[f' → logprob: -20.0007266998291

Token 196: 'LI' (ID: 14313)
  Prédit: 'LF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LF' → logprob: -9.088346359931165e-07
    2. 'IF' → logprob: -14.125000953674316
    3. ' LF' → logprob: -16.25
    4. 'FF' → logprob: -17.375
    5. 'F' → logprob: -18.875
    6. '(L' → logprob: -19.625
    7. '(F' → logprob: -20.0
    8. 'AF' → logprob: -20.125
    9. 'DF' → logprob: -20.375
    10. 'lf' → logprob: -20.5

Token 197: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000628683075774461
    2. '(n' → logprob: -8.000628471374512
    3. '()]' → logprob: -8.750628471374512
    4. '()(' → logprob: -9.625628471374512
    5. ' ()' → logprob: -10.250628471374512
    6. '()
' → logprob: -11.750628471374512
    7. 'F' → logprob: -12.000628471374512
    8. '(' → logprob: -12.250628471374512
    9. '()`' → logprob: -13.250628471374512
    10. '()+' → logprob: -13.375628471374512

Token 198: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1279534101486206
    2. '(n' → logprob: -2.12795352935791
    3. 'for' → logprob: -7.25295352935791
    4. '(' → logprob: -8.25295352935791
    5. '()]' → logprob: -11.25295352935791
    6. ' for' → logprob: -11.50295352935791
    7. ')' → logprob: -11.50295352935791
    8. '())' → logprob: -11.87795352935791
    9. '()
' → logprob: -12.00295352935791
    10. ' ()' → logprob: -13.00295352935791

Token 199: ' _' (ID: 1175)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06200231611728668
    2. 'n' → logprob: -2.812002420425415
    3. ' n' → logprob: -10.687002182006836
    4. 'def' → logprob: -12.187002182006836
    5. 'f' → logprob: -13.187002182006836
    6. '(' → logprob: -13.937002182006836
    7. 'int' → logprob: -14.187002182006836
    8. 'range' → logprob: -14.437002182006836
    9. '_n' → logprob: -14.812002182006836
    10. '[n' → logprob: -14.937002182006836

Token 200: ' in' (ID: 306)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11881063133478165
    2. 'range' → logprob: -2.6188106536865234
    3. 'n' → logprob: -3.2438106536865234
    4. ' range' → logprob: -9.493810653686523
    5. '(range' → logprob: -10.743810653686523
    6. '_n' → logprob: -11.618810653686523
    7. ' n' → logprob: -12.493810653686523
    8. '(' → logprob: -12.743810653686523
    9. 'int' → logprob: -13.493810653686523
    10. '_range' → logprob: -13.493810653686523

Token 201: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001713590754661709
    2. 'n' → logprob: -9.250171661376953
    3. ' range' → logprob: -9.875171661376953
    4. '(n' → logprob: -11.000171661376953
    5. '(range' → logprob: -11.875171661376953
    6. '	range' → logprob: -17.250171661376953
    7. '
' → logprob: -18.375171661376953
    8. '_range' → logprob: -18.625171661376953
    9. '[n' → logprob: -18.875171661376953
    10. 'def' → logprob: -19.125171661376953

Token 202: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006716555915772915
    2. 'n' → logprob: -5.006716728210449
    3. '(' → logprob: -14.00671672821045
    4. 'def' → logprob: -16.006715774536133
    5. ' n' → logprob: -16.256715774536133
    6. '```' → logprob: -17.131715774536133
    7. '
' → logprob: -17.881715774536133
    8. '[n' → logprob: -18.381715774536133
    9. ')n' → logprob: -18.506715774536133
    10. ')' → logprob: -18.756715774536133

Token 203: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0048673804849386215
    2. ')' → logprob: -5.7548675537109375
    3. '()]' → logprob: -6.7548675537109375
    4. '(n' → logprob: -8.379867553710938
    5. ']' → logprob: -8.504867553710938
    6. '()' → logprob: -10.254867553710938
    7. '())' → logprob: -10.754867553710938
    8. '(' → logprob: -12.004867553710938
    9. '):' → logprob: -12.004867553710938
    10. 'n' → logprob: -12.254867553710938

Token 204: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03948768973350525
    2. 'd' → logprob: -3.414487600326538
    3. '#' → logprob: -6.164487838745117
    4. 'n' → logprob: -6.164487838745117
    5. ' 
' → logprob: -8.414487838745117
    6. 'a' → logprob: -8.414487838745117
    7. ' ' → logprob: -8.539487838745117
    8. '(n' → logprob: -8.789487838745117
    9. '(' → logprob: -9.039487838745117
    10. '
' → logprob: -9.164487838745117

Token 205: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6934353113174438
    2. ' main' → logprob: -1.8184353113174438
    3. 'SR' → logprob: -2.1934351921081543
    4. 'S' → logprob: -3.0684351921081543
    5. 'LS' → logprob: -3.3184351921081543
    6. 'def' → logprob: -3.8184351921081543
    7. 'IR' → logprob: -3.9434351921081543
    8. 'DR' → logprob: -4.318435192108154
    9. 'I' → logprob: -4.443435192108154
    10. 'D' → logprob: -4.693435192108154

Token 206: 'IR' (ID: 4368)
  Prédit: 'IR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.35441336035728455
    2. 'I' → logprob: -1.979413390159607
    3. 'S' → logprob: -2.6044132709503174
    4. 'R' → logprob: -2.7294132709503174
    5. 'FR' → logprob: -4.7294135093688965
    6. 'F' → logprob: -4.9794135093688965
    7. 'SR' → logprob: -6.1044135093688965
    8. 'def' → logprob: -6.6044135093688965
    9. 'SF' → logprob: -6.9794135093688965
    10. 'IS' → logprob: -8.979413032531738

Token 207: '_(' (ID: 18811)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00042292833677493036
    2. '(' → logprob: -7.875422954559326
    3. 'def' → logprob: -10.875422477722168
    4. ' (' → logprob: -11.375422477722168
    5. '_(' → logprob: -12.625422477722168
    6. '_' → logprob: -13.250422477722168
    7. '<|end|>' → logprob: -13.500422477722168
    8. '(
' → logprob: -14.125422477722168
    9. '()(' → logprob: -14.375422477722168
    10. '():' → logprob: -14.375422477722168

Token 208: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.088346359931165e-07
    2. ' (' → logprob: -14.125000953674316
    3. '(' → logprob: -16.0
    4. 'n' → logprob: -17.625
    5. 'def' → logprob: -18.25
    6. ' n' → logprob: -18.875
    7. '(
' → logprob: -19.5
    8. ')(' → logprob: -20.25
    9. '<|end|>' → logprob: -20.625
    10. '[n' → logprob: -20.75

Token 209: '):' (ID: 3127)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3134729266166687
    2. '):' → logprob: -1.3134729862213135
    3. ')' → logprob: -9.438472747802734
    4. '():' → logprob: -9.813472747802734
    5. ' ):' → logprob: -10.313472747802734
    6. '):
' → logprob: -10.938472747802734
    7. '(' → logprob: -11.938472747802734
    8. '()' → logprob: -12.438472747802734
    9. ')(' → logprob: -12.563472747802734
    10. 'def' → logprob: -12.813472747802734

Token 210: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39446669816970825
    2. 'return' → logprob: -1.1444666385650635
    3. 'def' → logprob: -5.144466876983643
    4. ' lambda' → logprob: -7.269466876983643
    5. '(n' → logprob: -7.894466876983643
    6. ' def' → logprob: -8.019466400146484
    7. 'lambda' → logprob: -8.644466400146484
    8. ' n' → logprob: -10.019466400146484
    9. ' =' → logprob: -10.644466400146484
    10. '	return' → logprob: -10.644466400146484

Token 211: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027575582498684525
    2. '[L' → logprob: -8.500275611877441
    3. ' [' → logprob: -9.875275611877441
    4. '[list' → logprob: -11.000275611877441
    5. '[List' → logprob: -12.500275611877441
    6. '[l' → logprob: -16.125276565551758
    7. '[len' → logprob: -16.500276565551758
    8. 'list' → logprob: -16.750276565551758
    9. '[
' → logprob: -17.000276565551758
    10. '[line' → logprob: -17.750276565551758

Token 212: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -5.967624019831419e-05
    2. 'lambda' → logprob: -9.750060081481934
    3. '(lambda' → logprob: -13.750060081481934
    4. 'li' → logprob: -16.500059127807617
    5. ' LI' → logprob: -16.500059127807617
    6. '(L' → logprob: -16.875059127807617
    7. 'L' → logprob: -17.250059127807617
    8. 'list' → logprob: -17.625059127807617
    9. 'LS' → logprob: -18.250059127807617
    10. 'λ' → logprob: -19.000059127807617

Token 213: '_' (ID: 62)
  Prédit: '_('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_(' → logprob: -0.12747615575790405
    2. '_' → logprob: -2.127476215362549
    3. '(n' → logprob: -8.00247573852539
    4. '()(' → logprob: -8.75247573852539
    5. '()' → logprob: -10.00247573852539
    6. '_^(' → logprob: -12.75247573852539
    7. ' _(' → logprob: -13.12747573852539
    8. '(' → logprob: -13.37747573852539
    9. ' (' → logprob: -13.62747573852539
    10. '_("' → logprob: -13.87747573852539

Token 214: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003207538742572069
    2. '()' → logprob: -5.753207683563232
    3. '(' → logprob: -11.628207206726074
    4. ' (' → logprob: -11.878207206726074
    5. 'for' → logprob: -12.128207206726074
    6. '()(' → logprob: -12.128207206726074
    7. '()]' → logprob: -13.253207206726074
    8. '(i' → logprob: -14.378207206726074
    9. ' for' → logprob: -14.753207206726074
    10. '((' → logprob: -15.878207206726074

Token 215: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006303519476205111
    2. 'for' → logprob: -8.000630378723145
    3. ' for' → logprob: -8.500630378723145
    4. '(' → logprob: -9.625630378723145
    5. ' (' → logprob: -10.750630378723145
    6. ')' → logprob: -12.625630378723145
    7. '()' → logprob: -15.750630378723145
    8. ']' → logprob: -16.000629425048828
    9. '(for' → logprob: -16.125629425048828
    10. ' ' → logprob: -16.625629425048828

Token 216: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05250001326203346
    2. ' range' → logprob: -3.177500009536743
    3. ' _' → logprob: -5.302500247955322
    4. 'range' → logprob: -5.552500247955322
    5. '_range' → logprob: -7.802500247955322
    6. '(range' → logprob: -9.177499771118164
    7. '(n' → logprob: -10.177499771118164
    8. ' in' → logprob: -10.552499771118164
    9. 'n' → logprob: -12.052499771118164
    10. '(' → logprob: -12.052499771118164

Token 217: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05233338102698326
    2. ' range' → logprob: -3.552333354949951
    3. 'in' → logprob: -4.677333354949951
    4. '_' → logprob: -4.927333354949951
    5. ' in' → logprob: -5.302333354949951
    6. '_range' → logprob: -7.677333354949951
    7. '(range' → logprob: -8.17733383178711
    8. '_in' → logprob: -10.67733383178711
    9. '(n' → logprob: -11.55233383178711
    10. 'n' → logprob: -11.67733383178711

Token 218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3791893422603607
    2. '(n' → logprob: -1.629189372062683
    3. 'n' → logprob: -2.1291892528533936
    4. ' range' → logprob: -7.504189491271973
    5. ' n' → logprob: -12.129189491271973
    6. '(range' → logprob: -12.504189491271973
    7. '(' → logprob: -13.754189491271973
    8. '
' → logprob: -14.879189491271973
    9. '_range' → logprob: -16.754188537597656
    10. '<n' → logprob: -16.754188537597656

Token 219: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -13.875001907348633
    3. '(' → logprob: -14.125001907348633
    4. 'n' → logprob: -14.375001907348633
    5. 'def' → logprob: -18.500001907348633
    6. ')' → logprob: -18.625001907348633
    7. '
' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '(
' → logprob: -19.750001907348633
    10. 'range' → logprob: -20.000001907348633

Token 220: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012725738633889705
    2. ']' → logprob: -9.375126838684082
    3. ')' → logprob: -10.500126838684082
    4. '()]' → logprob: -11.750126838684082
    5. ')]
' → logprob: -12.875126838684082
    6. '])' → logprob: -13.625126838684082
    7. ')])' → logprob: -13.750126838684082
    8. '])]' → logprob: -14.250126838684082
    9. 'def' → logprob: -14.625126838684082
    10. '')]' → logprob: -15.125126838684082

Token 221: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12766000628471375
    2. 'd' → logprob: -2.252660036087036
    3. ':' → logprob: -5.502659797668457
    4. '```' → logprob: -6.002659797668457
    5. '#' → logprob: -6.252659797668457
    6. ')' → logprob: -6.627659797668457
    7. '[' → logprob: -6.877659797668457
    8. 'a' → logprob: -7.127659797668457
    9. 'n' → logprob: -7.877659797668457
    10. '(' → logprob: -8.252659797668457

Token 222: ' SR' (ID: 30704)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.5645595192909241
    2. ' main' → logprob: -2.1895594596862793
    3. ' LS' → logprob: -3.0645594596862793
    4. 'SR' → logprob: -3.1895594596862793
    5. 'main' → logprob: -3.1895594596862793
    6. ' L' → logprob: -3.6895594596862793
    7. 'IR' → logprob: -3.8145594596862793
    8. 'S' → logprob: -3.9395594596862793
    9. 'RS' → logprob: -3.9395594596862793
    10. 'L' → logprob: -4.189559459686279

Token 223: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013119110371917486
    2. '_(' → logprob: -9.500131607055664
    3. '()(' → logprob: -10.750131607055664
    4. 'def' → logprob: -11.125131607055664
    5. '(' → logprob: -11.750131607055664
    6. '()' → logprob: -11.875131607055664
    7. ' (' → logprob: -13.500131607055664
    8. '():' → logprob: -13.625131607055664
    9. '__(' → logprob: -14.500131607055664
    10. '():
' → logprob: -14.500131607055664

Token 224: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017028623551595956
    2. '(n' → logprob: -9.125170707702637
    3. '):
' → logprob: -10.250170707702637
    4. ' ):' → logprob: -11.250170707702637
    5. '():' → logprob: -12.375170707702637
    6. ')' → logprob: -12.375170707702637
    7. ']:' → logprob: -13.250170707702637
    8. 'def' → logprob: -14.375170707702637
    9. '):

' → logprob: -14.375170707702637
    10. '()' → logprob: -14.875170707702637

Token 225: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04878527671098709
    2. 'return' → logprob: -3.0487852096557617
    3. 'def' → logprob: -8.923785209655762
    4. ' def' → logprob: -9.923785209655762
    5. '   ' → logprob: -11.423785209655762
    6. '	return' → logprob: -13.298785209655762
    7. '[]' → logprob: -13.673785209655762
    8. '
' → logprob: -14.798785209655762
    9. '(return' → logprob: -15.048785209655762
    10. ' ' → logprob: -15.048785209655762

Token 226: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.002032253658398986
    2. '[list' → logprob: -6.252032279968262
    3. '[List' → logprob: -10.127032279968262
    4. '[' → logprob: -10.377032279968262
    5. '[s' → logprob: -10.752032279968262
    6. 'list' → logprob: -12.002032279968262
    7. ' [' → logprob: -14.127032279968262
    8. '[String' → logprob: -14.252032279968262
    9. '[str' → logprob: -14.252032279968262
    10. 'S' → logprob: -14.377032279968262

Token 227: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.664371848164592e-05
    2. 'list' → logprob: -11.125016212463379
    3. ' S' → logprob: -13.375016212463379
    4. '
' → logprob: -15.375016212463379
    5. 'input' → logprob: -17.250017166137695
    6. '```' → logprob: -18.250017166137695
    7. 'Ｓ' → logprob: -19.000017166137695
    8. '	S' → logprob: -19.125017166137695
    9. '   ' → logprob: -19.250017166137695
    10. 's' → logprob: -19.250017166137695

Token 228: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010575797641649842
    2. '(n' → logprob: -7.0010576248168945
    3. '()]' → logprob: -8.876057624816895
    4. ' ()' → logprob: -12.376057624816895
    5. '()
' → logprob: -13.876057624816895
    6. '(' → logprob: -14.751057624816895
    7. '()(' → logprob: -15.001057624816895
    8. '()`' → logprob: -16.376056671142578
    9. ']()' → logprob: -16.626056671142578
    10. '().' → logprob: -16.626056671142578

Token 229: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.7252845029579476e-05
    2. 'for' → logprob: -10.750027656555176
    3. ' for' → logprob: -12.750027656555176
    4. '(' → logprob: -13.500027656555176
    5. ' (' → logprob: -13.500027656555176
    6. '()' → logprob: -16.75002670288086
    7. 'n' → logprob: -17.25002670288086
    8. ')' → logprob: -19.75002670288086
    9. '(i' → logprob: -20.87502670288086
    10. '(N' → logprob: -20.87502670288086

Token 230: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00044318195432424545
    2. ' range' → logprob: -7.875442981719971
    3. ' _' → logprob: -9.875443458557129
    4. 'range' → logprob: -12.000443458557129
    5. '_range' → logprob: -12.375443458557129
    6. '(range' → logprob: -14.500443458557129
    7. ' in' → logprob: -14.625443458557129
    8. '(' → logprob: -15.500443458557129
    9. ' ' → logprob: -17.500442504882812
    10. '(n' → logprob: -17.625442504882812

Token 231: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.021484509110450745
    2. ' range' → logprob: -4.271484375
    3. '(range' → logprob: -5.021484375
    4. '(n' → logprob: -7.271484375
    5. '_range' → logprob: -12.896484375
    6. '(' → logprob: -14.146484375
    7. '	range' → logprob: -14.271484375
    8. 'n' → logprob: -15.396484375
    9. ' (' → logprob: -15.646484375
    10. '.range' → logprob: -16.021484375

Token 232: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005335859023034573
    2. ' range' → logprob: -5.255335807800293
    3. '(range' → logprob: -9.255335807800293
    4. '(n' → logprob: -12.005335807800293
    5. '_range' → logprob: -15.255335807800293
    6. '	range' → logprob: -17.25533676147461
    7. '_' → logprob: -17.38033676147461
    8. '(r' → logprob: -18.25533676147461
    9. 'n' → logprob: -18.63033676147461
    10. '(' → logprob: -18.88033676147461

Token 233: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.500000953674316
    3. 'n' → logprob: -14.500000953674316
    4. ' (' → logprob: -19.375001907348633
    5. 'def' → logprob: -22.000001907348633
    6. '(
' → logprob: -22.125001907348633
    7. '((' → logprob: -22.375001907348633
    8. ' n' → logprob: -23.375001907348633
    9. '<n' → logprob: -23.375001907348633
    10. '(s' → logprob: -23.500001907348633

Token 234: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.790129555156454e-05
    2. ']' → logprob: -10.250067710876465
    3. ')]
' → logprob: -11.250067710876465
    4. ')' → logprob: -11.625067710876465
    5. '()]' → logprob: -11.750067710876465
    6. '])' → logprob: -14.000067710876465
    7. '])]' → logprob: -14.750067710876465
    8. ')])' → logprob: -14.875067710876465
    9. '')]' → logprob: -15.125067710876465
    10. 'def' → logprob: -15.375067710876465

Token 235: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024763362482190132
    2. ' ' → logprob: -5.274763584136963
    3. '#' → logprob: -5.524763584136963
    4. 'n' → logprob: -5.649763584136963
    5. ')' → logprob: -5.899763584136963
    6. '
' → logprob: -6.524763584136963
    7. '(' → logprob: -6.774763584136963
    8. '(n' → logprob: -6.774763584136963
    9. '```' → logprob: -6.899763584136963
    10. '<|end|>' → logprob: -7.524763584136963

Token 236: ' L' (ID: 451)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.8379037380218506
    2. 'WS' → logprob: -1.9629037380218506
    3. 'DR' → logprob: -1.9629037380218506
    4. 'SR' → logprob: -2.4629037380218506
    5. 'main' → logprob: -2.7129037380218506
    6. 'DS' → logprob: -2.8379037380218506
    7. 'LS' → logprob: -2.9629037380218506
    8. 'I' → logprob: -3.4629037380218506
    9. 'MS' → logprob: -3.4629037380218506
    10. 'G' → logprob: -3.4629037380218506

Token 237: 'SR' (ID: 22892)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.275484561920166
    2. 'R' → logprob: -1.900484561920166
    3. 'def' → logprob: -3.275484561920166
    4. 'SR' → logprob: -3.400484561920166
    5. 'I' → logprob: -4.275484561920166
    6. 'S' → logprob: -5.650484561920166
    7. 'IS' → logprob: -6.900484561920166
    8. ' =' → logprob: -8.275484085083008
    9. 'FR' → logprob: -9.275484085083008
    10. '=' → logprob: -9.400484085083008

Token 238: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.515961285913363e-05
    2. 'def' → logprob: -9.875064849853516
    3. '(' → logprob: -12.125064849853516
    4. ' (' → logprob: -12.375064849853516
    5. '_(' → logprob: -13.375064849853516
    6. ' def' → logprob: -13.625064849853516
    7. '```' → logprob: -14.250064849853516
    8. '_' → logprob: -15.500064849853516
    9. '#' → logprob: -16.375064849853516
    10. '[](' → logprob: -16.500064849853516

Token 239: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007008800748735666
    2. ')' → logprob: -8.625700950622559
    3. '():' → logprob: -8.875700950622559
    4. 'def' → logprob: -8.875700950622559
    5. ']:' → logprob: -9.125700950622559
    6. '()' → logprob: -10.125700950622559
    7. ' ):' → logprob: -10.250700950622559
    8. '):
' → logprob: -10.250700950622559
    9. ')]' → logprob: -11.375700950622559
    10. '(n' → logprob: -12.500700950622559

Token 240: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.030426599085330963
    2. 'return' → logprob: -3.530426502227783
    3. ' def' → logprob: -7.780426502227783
    4. 'def' → logprob: -8.530426979064941
    5. ' [' → logprob: -10.780426979064941
    6. ' =' → logprob: -11.030426979064941
    7. ' lambda' → logprob: -11.030426979064941
    8. '=' → logprob: -13.155426979064941
    9. '[' → logprob: -13.780426979064941
    10. '[n' → logprob: -14.155426979064941

Token 241: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004366294015198946
    2. '[list' → logprob: -8.250436782836914
    3. '[S' → logprob: -9.375436782836914
    4. '[List' → logprob: -9.500436782836914
    5. '[L' → logprob: -12.000436782836914
    6. ' [' → logprob: -12.250436782836914
    7. '[str' → logprob: -13.250436782836914
    8. 'list' → logprob: -13.375436782836914
    9. '[line' → logprob: -14.625436782836914
    10. '[s' → logprob: -15.250436782836914

Token 242: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.25227048993110657
    2. 'S' → logprob: -1.5022704601287842
    3. 'list' → logprob: -8.002270698547363
    4. ' LS' → logprob: -13.127270698547363
    5. 'ls' → logprob: -13.377270698547363
    6. '
' → logprob: -14.127270698547363
    7. '[S' → logprob: -14.377270698547363
    8. 'L' → logprob: -14.752270698547363
    9. 'SS' → logprob: -15.002270698547363
    10. 'SR' → logprob: -15.377270698547363

Token 243: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2162480652332306
    2. '()]' → logprob: -2.216248035430908
    3. '(n' → logprob: -2.466248035430908
    4. ']' → logprob: -8.591248512268066
    5. ']()' → logprob: -8.591248512268066
    6. ' ()' → logprob: -9.841248512268066
    7. '()(' → logprob: -10.341248512268066
    8. '()
' → logprob: -11.091248512268066
    9. '(' → logprob: -11.466248512268066
    10. '()][' → logprob: -11.841248512268066

Token 244: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.584239938296378e-06
    2. ' (' → logprob: -12.125007629394531
    3. '(' → logprob: -14.000007629394531
    4. 'def' → logprob: -14.125007629394531
    5. '()' → logprob: -15.500007629394531
    6. '](' → logprob: -16.25000762939453
    7. 'n' → logprob: -16.37500762939453
    8. ')' → logprob: -16.75000762939453
    9. ']' → logprob: -16.87500762939453
    10. ')]' → logprob: -17.25000762939453

Token 245: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006236801855266094
    2. ' _' → logprob: -7.75062370300293
    3. '_range' → logprob: -9.75062370300293
    4. 'range' → logprob: -9.87562370300293
    5. ' range' → logprob: -9.87562370300293
    6. ' in' → logprob: -10.87562370300293
    7. '(range' → logprob: -12.25062370300293
    8. '(n' → logprob: -12.37562370300293
    9. 'n' → logprob: -13.25062370300293
    10. 'in' → logprob: -14.00062370300293

Token 246: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02992149442434311
    2. '(n' → logprob: -3.779921531677246
    3. '(range' → logprob: -5.654921531677246
    4. ' range' → logprob: -6.154921531677246
    5. '_range' → logprob: -7.154921531677246
    6. 'n' → logprob: -8.904921531677246
    7. 'in' → logprob: -10.404921531677246
    8. '(' → logprob: -10.529921531677246
    9. ' in' → logprob: -10.904921531677246
    10. '_' → logprob: -10.904921531677246

Token 247: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004659425176214427
    2. ' range' → logprob: -8.250466346740723
    3. '(range' → logprob: -8.500466346740723
    4. '_range' → logprob: -14.125466346740723
    5. '	range' → logprob: -15.125466346740723
    6. '(n' → logprob: -15.750466346740723
    7. '
' → logprob: -17.375465393066406
    8. '.range' → logprob: -17.750465393066406
    9. '[n' → logprob: -18.875465393066406
    10. '-range' → logprob: -19.375465393066406

Token 248: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002614550176076591
    2. 'n' → logprob: -8.250261306762695
    3. '(' → logprob: -15.750261306762695
    4. 'def' → logprob: -17.625261306762695
    5. '
' → logprob: -18.875261306762695
    6. 'range' → logprob: -19.000261306762695
    7. ' (' → logprob: -19.250261306762695
    8. '[n' → logprob: -19.500261306762695
    9. ')' → logprob: -19.625261306762695
    10. 'int' → logprob: -20.500261306762695

Token 249: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003024060046300292
    2. '(n' → logprob: -6.503024101257324
    3. ')' → logprob: -7.128024101257324
    4. '()]' → logprob: -8.128024101257324
    5. '())' → logprob: -8.503024101257324
    6. '()' → logprob: -8.753024101257324
    7. ')]
' → logprob: -10.503024101257324
    8. ']' → logprob: -11.253024101257324
    9. 'n' → logprob: -12.753024101257324
    10. ')])' → logprob: -12.753024101257324

Token 250: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027788959443569183
    2. 'class' → logprob: -3.9027888774871826
    3. '
' → logprob: -5.777789115905762
    4. 'd' → logprob: -6.777789115905762
    5. '#' → logprob: -6.902789115905762
    6. 'n' → logprob: -7.402789115905762
    7. 'D' → logprob: -8.652789115905762
    8. 'from' → logprob: -8.652789115905762
    9. 'a' → logprob: -9.027789115905762
    10. ' 
' → logprob: -9.152789115905762

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0440094880759716
    2. '=' → logprob: -3.1690094470977783
    3. ' ' → logprob: -6.919009685516357
    4. ' =
' → logprob: -11.9190092086792
    5. '_' → logprob: -12.0440092086792
    6. ',' → logprob: -12.5440092086792
    7. ' ,' → logprob: -13.5440092086792
    8. '  ' → logprob: -14.0440092086792
    9. ' =)' → logprob: -14.0440092086792
    10. ' ' → logprob: -14.5440092086792

Token 252: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.776898251497187e-05
    2. ' ' → logprob: -9.8750581741333
    3. '100' → logprob: -12.2500581741333
    4. '998' → logprob: -13.6250581741333
    5. 'int' → logprob: -16.000057220458984
    6. '1' → logprob: -16.000057220458984
    7. '(' → logprob: -19.875057220458984
    8. '１０' → logprob: -20.250057220458984
    9. '0' → logprob: -20.375057220458984
    10. 'pow' → logprob: -20.375057220458984

Token 253: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004664193547796458
    2. '998' → logprob: -7.875466346740723
    3. '100' → logprob: -9.375466346740723
    4. 'int' → logprob: -14.250466346740723
    5. '1' → logprob: -14.750466346740723
    6. ' ' → logprob: -15.375466346740723
    7. '(' → logprob: -15.625466346740723
    8. 'pow' → logprob: -17.12546730041504
    9. '１０' → logprob: -17.62546730041504
    10. '
' → logprob: -18.25046730041504

Token 254: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0012268967693671584
    2. '9' → logprob: -6.751226902008057
    3. '+' → logprob: -10.251226425170898
    4. '09' → logprob: -11.626226425170898
    5. '0' → logprob: -13.126226425170898
    6. '009' → logprob: -13.126226425170898
    7. '7' → logprob: -13.251226425170898
    8. '_' → logprob: -13.251226425170898
    9. '00' → logprob: -13.876226425170898
    10. '```' → logprob: -14.251226425170898

Token 255: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0012398716062307358
    2. '7' → logprob: -6.751239776611328
    3. '007' → logprob: -10.751239776611328
    4. '+' → logprob: -11.001239776611328
    5. '19' → logprob: -11.126239776611328
    6. '```' → logprob: -11.501239776611328
    7. '07' → logprob: -12.626239776611328
    8. '9' → logprob: -13.876239776611328
    9. '0' → logprob: -14.126239776611328
    10. '
' → logprob: -14.376239776611328

Token 256: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.961759259458631e-06
    2. '07' → logprob: -12.250004768371582
    3. '+' → logprob: -16.0000057220459
    4. '```' → logprob: -17.8750057220459
    5. '007' → logprob: -18.8750057220459
    6. '9' → logprob: -19.1250057220459
    7. '
' → logprob: -19.1250057220459
    8. ' ' → logprob: -20.2500057220459
    9. '37' → logprob: -20.8750057220459
    10. '17' → logprob: -21.0000057220459

Token 257: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04451105743646622
    2. ' 
' → logprob: -4.919510841369629
    3. '<|end|>' → logprob: -4.919510841369629
    4. ' ' → logprob: -5.294510841369629
    5. '\n' → logprob: -5.419510841369629
    6. '

' → logprob: -5.544510841369629
    7. 'def' → logprob: -6.044510841369629
    8. '#' → logprob: -6.294510841369629
    9. '' → logprob: -6.419510841369629
    10. ',' → logprob: -6.544510841369629

Token 258: 'inf' (ID: 22226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03412335738539696
    2. '#' → logprob: -3.534123420715332
    3. ' ' → logprob: -6.784123420715332
    4. '
' → logprob: -6.909123420715332
    5. 'n' → logprob: -7.784123420715332
    6. '=' → logprob: -8.284123420715332
    7. ',' → logprob: -8.284123420715332
    8. '(n' → logprob: -9.159123420715332
    9. '​' → logprob: -9.159123420715332
    10. '<|end|>' → logprob: -9.284123420715332

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3493523895740509
    2. ' =' → logprob: -1.2243523597717285
    3. ',' → logprob: -7.2243523597717285
    4. '_' → logprob: -8.724352836608887
    5. '＝' → logprob: -12.224352836608887
    6. ')' → logprob: -12.724352836608887
    7. '_=' → logprob: -13.599352836608887
    8. '.' → logprob: -13.599352836608887
    9. '‌' → logprob: -14.099352836608887
    10. ' ' → logprob: -14.224352836608887

Token 260: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16024352610111237
    2. 'float' → logprob: -1.9102435111999512
    3. '1' → logprob: -11.28524398803711
    4. ' float' → logprob: -12.16024398803711
    5. '100' → logprob: -14.16024398803711
    6. ' ' → logprob: -14.66024398803711
    7. '(float' → logprob: -15.53524398803711
    8. 'int' → logprob: -16.66024398803711
    9. '(' → logprob: -16.66024398803711
    10. 'pow' → logprob: -16.66024398803711

Token 261: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029820270836353302
    2. 'float' → logprob: -3.529820203781128
    3. '1' → logprob: -9.654820442199707
    4. '100' → logprob: -12.654820442199707
    5. ' float' → logprob: -13.404820442199707
    6. ' ' → logprob: -14.779820442199707
    7. '(' → logprob: -15.154820442199707
    8. '2' → logprob: -16.02981948852539
    9. '101' → logprob: -16.15481948852539
    10. '(float' → logprob: -16.65481948852539

Token 262: 'e' (ID: 68)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.20255309343338013
    2. '0' → logprob: -1.9525530338287354
    3. '00' → logprob: -3.2025530338287354
    4. '<<' → logprob: -7.8275532722473145
    5. '_' → logprob: -9.827552795410156
    6. '10' → logprob: -9.952552795410156
    7. 'o' → logprob: -10.452552795410156
    8. '411' → logprob: -10.577552795410156
    9. '410' → logprob: -10.827552795410156
    10. '010' → logprob: -10.827552795410156

Token 263: '10' (ID: 702)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.5490598678588867
    2. '20' → logprob: -1.2990598678588867
    3. '15' → logprob: -2.2990598678588867
    4. '9' → logprob: -3.2990598678588867
    5. '+' → logprob: -4.924059867858887
    6. '10' → logprob: -5.799059867858887
    7. '12' → logprob: -6.549059867858887
    8. '16' → logprob: -7.924059867858887
    9. '19' → logprob: -8.799059867858887
    10. '17' → logprob: -9.174059867858887

Token 264: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05780716985464096
    2. 'INF' → logprob: -3.932807207107544
    3. 'def' → logprob: -4.807806968688965
    4. ' 
' → logprob: -5.307806968688965
    5. '
' → logprob: -5.557806968688965
    6. 'n' → logprob: -5.932806968688965
    7. '' → logprob: -5.932806968688965
    8. '0' → logprob: -6.057806968688965
    9. '10' → logprob: -6.307806968688965
    10. '#' → logprob: -6.432806968688965

Token 265: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22883792221546173
    2. 'n' → logprob: -2.2288379669189453
    3. 'class' → logprob: -2.3538379669189453
    4. 'N' → logprob: -6.978837966918945
    5. 'a' → logprob: -7.728837966918945
    6. 'd' → logprob: -8.353837966918945
    7. '#' → logprob: -9.853837966918945
    8. '
' → logprob: -10.103837966918945
    9. 'dp' → logprob: -10.353837966918945
    10. '(n' → logprob: -10.728837966918945

Token 266: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0076017738319933414
    2. 'main' → logprob: -5.007601737976074
    3. ' solve' → logprob: -7.382601737976074
    4. 'solve' → logprob: -9.382601737976074
    5. ' dfs' → logprob: -9.507601737976074
    6. '_main' → logprob: -10.257601737976074
    7. ' bfs' → logprob: -10.882601737976074
    8. ' ' → logprob: -11.007601737976074
    9. '	main' → logprob: -11.007601737976074
    10. 'dfs' → logprob: -12.257601737976074

Token 267: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.423219696851447e-05
    2. ' ():' → logprob: -9.500083923339844
    3. '()' → logprob: -12.000083923339844
    4. '():
' → logprob: -12.750083923339844
    5. '(' → logprob: -15.375083923339844
    6. '()(' → logprob: -16.625083923339844
    7. ' ()' → logprob: -18.375083923339844
    8. '().' → logprob: -18.750083923339844
    9. '(:' → logprob: -19.250083923339844
    10. '()>' → logprob: -19.875083923339844

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1706518828868866
    2. ':' → logprob: -2.670651912689209
    3. '(' → logprob: -2.795651912689209
    4. ' ' → logprob: -4.545651912689209
    5. '    ' → logprob: -5.295651912689209
    6. '    
' → logprob: -5.795651912689209
    7. ' 
' → logprob: -6.420651912689209
    8. '	' → logprob: -6.545651912689209
    9. '‌' → logprob: -7.420651912689209
    10. '<|end|>' → logprob: -7.545651912689209

Token 269: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5065533518791199
    2. 'n' (adapté à ' n') → logprob: -1.1315534114837646
    3. ' ' → logprob: -3.0065534114837646
    4. ' pass' → logprob: -3.7565534114837646
    5. '   ' → logprob: -7.7565531730651855
    6. 'pass' → logprob: -7.7565531730651855
    7. ' N' → logprob: -7.8815531730651855
    8. '    ' → logprob: -8.256553649902344
    9. 'a' → logprob: -9.506553649902344
    10. ' 
' → logprob: -9.631553649902344

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16070082783699036
    2. '=' → logprob: -2.035700798034668
    3. ',' → logprob: -4.035700798034668
    4. ' ,' → logprob: -9.285700798034668
    5. '=int' → logprob: -9.910700798034668
    6. ' ' → logprob: -10.910700798034668
    7. ',n' → logprob: -11.285700798034668
    8. ' =
' → logprob: -11.535700798034668
    9. ',int' → logprob: -12.910700798034668
    10. '=input' → logprob: -13.160700798034668

Token 271: ' II' (ID: 9839)
  Prédit: 'II'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.16767606139183044
    2. 'int' → logprob: -1.9176760911941528
    3. ' II' → logprob: -5.292675971984863
    4. ' int' → logprob: -6.042675971984863
    5. 'I' → logprob: -11.542675971984863
    6. 'INT' → logprob: -12.292675971984863
    7. 'LI' → logprob: -13.042675971984863
    8. ' ' → logprob: -13.292675971984863
    9. 'Int' → logprob: -14.292675971984863
    10. 'III' → logprob: -15.042675971984863

Token 272: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005429040757007897
    2. '()
' → logprob: -8.125542640686035
    3. ')' → logprob: -8.625542640686035
    4. '   ' → logprob: -10.125542640686035
    5. '(' → logprob: -11.250542640686035
    6. ' ()' → logprob: -11.625542640686035
    7. '())' → logprob: -13.750542640686035
    8. '#' → logprob: -14.000542640686035
    9. '()\' → logprob: -14.375542640686035
    10. ',' → logprob: -14.500542640686035

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17435941100120544
    2. ' ' → logprob: -2.4243593215942383
    3. '<|end|>' → logprob: -3.6743593215942383
    4. '    
' → logprob: -4.299359321594238
    5. '
' → logprob: -4.299359321594238
    6. ')' → logprob: -5.299359321594238
    7. ' 
' → logprob: -5.299359321594238
    8. '    ' → logprob: -5.424359321594238
    9. 'a' → logprob: -6.799359321594238
    10. ',' → logprob: -7.424359321594238

Token 274: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.018255533650517464
    2. 'arr' → logprob: -4.893255710601807
    3. 'A' → logprob: -5.018255710601807
    4. ' a' → logprob: -7.018255710601807
    5. 'd' → logprob: -7.268255710601807
    6. 'dp' → logprob: -7.268255710601807
    7. 's' → logprob: -7.893255710601807
    8. 'lst' → logprob: -8.518255233764648
    9. 'h' → logprob: -8.893255233764648
    10. 'l' → logprob: -9.268255233764648

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699479952454567
    2. '=' → logprob: -2.6949479579925537
    3. ',' → logprob: -12.444948196411133
    4. ' ' → logprob: -12.569948196411133
    5. 'rr' → logprob: -13.194948196411133
    6. 'b' → logprob: -14.319948196411133
    7. ',b' → logprob: -14.944948196411133
    8. '[' → logprob: -15.319948196411133
    9. ' =[' → logprob: -15.319948196411133
    10. 'r' → logprob: -15.694948196411133

Token 276: ' list' (ID: 1562)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.004697834141552448
    2. ' LI' → logprob: -5.379697799682617
    3. 'L' → logprob: -10.004697799682617
    4. 'LS' → logprob: -11.379697799682617
    5. '[' → logprob: -11.629697799682617
    6. '[]' → logprob: -12.004697799682617
    7. 'Li' → logprob: -13.629697799682617
    8. ' L' → logprob: -13.879697799682617
    9. 'I' → logprob: -14.004697799682617
    10. 'list' → logprob: -14.254697799682617

Token 277: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.017627352848649025
    2. '(' → logprob: -4.267627239227295
    3. '(range' → logprob: -6.267627239227295
    4. '()' → logprob: -6.517627239227295
    5. 'map' → logprob: -10.392627716064453
    6. '(L' → logprob: -11.017627716064453
    7. '(int' → logprob: -11.392627716064453
    8. '(input' → logprob: -11.767627716064453
    9. '(a' → logprob: -12.392627716064453
    10. '(
' → logprob: -12.892627716064453

Token 278: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.013994814362377e-05
    2. 'int' → logprob: -10.12505054473877
    3. '(' → logprob: -12.37505054473877
    4. ',int' → logprob: -12.62505054473877
    5. ')' → logprob: -14.62505054473877
    6. '(float' → logprob: -14.87505054473877
    7. '=int' → logprob: -15.12505054473877
    8. '<int' → logprob: -15.25005054473877
    9. '```' → logprob: -15.50005054473877
    10. ']int' → logprob: -15.62505054473877

Token 279: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020710527896881
    2. ' x' → logprob: -2.3502070903778076
    3. '	x' → logprob: -14.975207328796387
    4. '   ' → logprob: -16.85020637512207
    5. '_x' → logprob: -17.85020637512207
    6. ' ' → logprob: -18.22520637512207
    7. ':' → logprob: -18.72520637512207
    8. 'int' → logprob: -18.72520637512207
    9. ':x' → logprob: -18.72520637512207
    10. ')x' → logprob: -19.85020637512207

Token 280: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012518951669335365
    2. ':int' → logprob: -4.512518882751465
    3. ' :' → logprob: -6.637518882751465
    4. ':x' → logprob: -8.762518882751465
    5. ' x' → logprob: -13.637518882751465
    6. 'int' → logprob: -14.387518882751465
    7. ':
' → logprob: -15.262518882751465
    8. ':Int' → logprob: -15.387518882751465
    9. ' int' → logprob: -15.512518882751465
    10. ':a' → logprob: -15.762518882751465

Token 281: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6251175403594971
    2. 'x' → logprob: -1.625117540359497
    3. ' x' → logprob: -1.750117540359497
    4. ' int' → logprob: -2.375117540359497
    5. '(int' → logprob: -7.750117301940918
    6. '(x' → logprob: -9.125117301940918
    7. 'float' → logprob: -9.250117301940918
    8. 'random' → logprob: -9.500117301940918
    9. ' random' → logprob: -9.625117301940918
    10. 'pow' → logprob: -9.750117301940918

Token 282: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011187844211235642
    2. 'x' → logprob: -7.7511186599731445
    3. '(' → logprob: -8.001118659973145
    4. '(input' → logprob: -8.126118659973145
    5. 'input' → logprob: -11.001118659973145
    6. ',' → logprob: -11.126118659973145
    7. '(
' → logprob: -11.751118659973145
    8. ':' → logprob: -12.376118659973145
    9. ' x' → logprob: -12.751118659973145
    10. ' (' → logprob: -13.376118659973145

Token 283: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08245876431465149
    2. ')-' → logprob: -3.457458734512329
    3. '+' → logprob: -4.707458972930908
    4. ')' → logprob: -4.707458972930908
    5. 'x' → logprob: -4.832458972930908
    6. '()-' → logprob: -5.332458972930908
    7. '(x' → logprob: -5.457458972930908
    8. ' -' → logprob: -6.082458972930908
    9. '),' → logprob: -6.457458972930908
    10. '*' → logprob: -6.457458972930908

Token 284: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5824531316757202
    2. ',' → logprob: -1.8324531316757202
    3. ' -' → logprob: -1.8324531316757202
    4. ':' → logprob: -3.8324532508850098
    5. '+' → logprob: -3.9574532508850098
    6. '*' → logprob: -4.33245325088501
    7. '(x' → logprob: -4.70745325088501
    8. 'a' → logprob: -4.83245325088501
    9. 'x' → logprob: -4.95745325088501
    10. '()-' → logprob: -5.20745325088501

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003630954073742032
    2. ' ' → logprob: -5.628631114959717
    3. 'x' → logprob: -11.628630638122559
    4. ' x' → logprob: -11.753630638122559
    5. 'a' → logprob: -12.128630638122559
    6. '0' → logprob: -12.753630638122559
    7. ' a' → logprob: -12.753630638122559
    8. '   ' → logprob: -13.878630638122559
    9. '2' → logprob: -14.503630638122559
    10. ')' → logprob: -15.816130638122559

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005904443096369505
    2. 'a' → logprob: -7.7505903244018555
    3. ' ' → logprob: -9.000590324401855
    4. '0' → logprob: -11.250590324401855
    5. ' a' → logprob: -11.625590324401855
    6. 'x' → logprob: -11.750590324401855
    7. '2' → logprob: -13.000590324401855
    8. '(' → logprob: -14.000590324401855
    9. '(a' → logprob: -14.625590324401855
    10. ' x' → logprob: -14.875590324401855

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01025014091283083
    2. ',a' → logprob: -4.635250091552734
    3. ',input' → logprob: -7.760250091552734
    4. 'a' → logprob: -10.510250091552734
    5. ' ,' → logprob: -11.135250091552734
    6. ',x' → logprob: -11.760250091552734
    7. ',b' → logprob: -12.260250091552734
    8. '   ' → logprob: -12.510250091552734
    9. 'input' → logprob: -13.260250091552734
    10. ',y' → logprob: -14.135250091552734

Token 288: ' S' (ID: 336)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003179975086823106
    2. ' input' → logprob: -5.753180027008057
    3. 'S' → logprob: -13.378179550170898
    4. 'range' → logprob: -14.628179550170898
    5. '(input' → logprob: -15.628179550170898
    6. ' S' → logprob: -16.2531795501709
    7. ' ' → logprob: -18.6281795501709
    8. '[input' → logprob: -18.8781795501709
    9. '=input' → logprob: -19.3781795501709
    10. '	input' → logprob: -19.5031795501709

Token 289: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2550981938838959
    2. '()' → logprob: -1.5050982236862183
    3. '().' → logprob: -6.255098342895508
    4. '()))
' → logprob: -7.880098342895508
    5. '()[' → logprob: -7.880098342895508
    6. '())' → logprob: -8.380098342895508
    7. '))' → logprob: -10.005098342895508
    8. '())))' → logprob: -10.130098342895508
    9. '()));' → logprob: -10.255098342895508
    10. '()
' → logprob: -10.255098342895508

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31972581148147583
    2. '
' → logprob: -1.694725751876831
    3. '<|end|>' → logprob: -2.569725751876831
    4. ')' → logprob: -4.94472599029541
    5. ' ' → logprob: -6.44472599029541
    6. '    
' → logprob: -6.44472599029541
    7. '  ' → logprob: -7.69472599029541
    8. '  
' → logprob: -7.81972599029541
    9. ' 
' → logprob: -7.94472599029541
    10. 'n' → logprob: -8.69472599029541

Token 291: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14377489686012268
    2. '   ' → logprob: -2.14377498626709
    3. ' 
' → logprob: -5.14377498626709
    4. ' for' → logprob: -6.26877498626709
    5. 'n' → logprob: -6.39377498626709
    6. '    
' → logprob: -6.64377498626709
    7. '\n' → logprob: -7.14377498626709
    8. ' ' → logprob: -7.39377498626709
    9. '  
' → logprob: -7.39377498626709
    10. 'a' → logprob: -8.26877498626709

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28118085861206055
    2. '=' → logprob: -1.4061808586120605
    3. ',' → logprob: -11.281181335449219
    4. '[' → logprob: -12.531181335449219
    5. '_' → logprob: -12.531181335449219
    6. '=[]' → logprob: -13.156181335449219
    7. '[:]' → logprob: -13.281181335449219
    8. '.' → logprob: -13.781181335449219
    9. ' +=' → logprob: -13.906181335449219
    10. ' ' → logprob: -13.906181335449219

Token 293: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10441010445356369
    2. '[' → logprob: -2.729410171508789
    3. ' ' → logprob: -4.104410171508789
    4. ' [' → logprob: -4.854410171508789
    5. '[]' → logprob: -5.104410171508789
    6. '[n' → logprob: -6.604410171508789
    7. '[a' → logprob: -7.729410171508789
    8. '[-' → logprob: -8.104410171508789
    9. ' []' → logprob: -8.104410171508789
    10. 'n' → logprob: -8.354410171508789

Token 294: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07425758242607117
    2. '[' → logprob: -2.8242576122283936
    3. '[]' → logprob: -4.8242573738098145
    4. '[n' → logprob: -6.9492573738098145
    5. 'n' → logprob: -7.1992573738098145
    6. 'default' → logprob: -7.5742573738098145
    7. '[-' → logprob: -7.8242573738098145
    8. 'a' → logprob: -7.9492573738098145
    9. '[a' → logprob: -7.9492573738098145
    10. '-' → logprob: -8.824257850646973

Token 295: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09066767245531082
    2. '0' → logprob: -3.590667724609375
    3. ' 
' → logprob: -4.465667724609375
    4. '+' → logprob: -4.715667724609375
    5. ' ' → logprob: -4.965667724609375
    6. '   ' → logprob: -5.215667724609375
    7. '<<' → logprob: -5.340667724609375
    8. '    
' → logprob: -5.590667724609375
    9. '\n' → logprob: -5.715667724609375
    10. 'for' → logprob: -5.840667724609375

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44721686840057373
    2. '
' → logprob: -2.1972169876098633
    3. '0' → logprob: -2.9472169876098633
    4. '    
' → logprob: -3.4472169876098633
    5. ',' → logprob: -3.5722169876098633
    6. '+' → logprob: -3.6972169876098633
    7. ' ' → logprob: -3.8222169876098633
    8. '*' → logprob: -4.197216987609863
    9. ' 
' → logprob: -4.197216987609863
    10. '<|end|>' → logprob: -4.572216987609863

Token 297: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.041453242301941
    2. 'cur' → logprob: -1.541453242301941
    3. 'l' → logprob: -2.2914533615112305
    4. 'prev' → logprob: -2.5414533615112305
    5. ' for' → logprob: -3.1664533615112305
    6. 'd' → logprob: -3.4164533615112305
    7. 'last' → logprob: -4.0414533615112305
    8. 'p' → logprob: -4.1664533615112305
    9. 'tmp' → logprob: -4.2914533615112305
    10. '   ' → logprob: -4.2914533615112305

Token 298: ' not' (ID: 625)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5363670587539673
    2. ' n' → logprob: -0.9113670587539673
    3. 'a' → logprob: -4.786366939544678
    4. 'n' → logprob: -6.161366939544678
    5. ' ' → logprob: -6.661366939544678
    6. ' len' → logprob: -7.286366939544678
    7. ' not' → logprob: -7.411366939544678
    8. ' ' → logprob: -10.411367416381836
    9. ' all' → logprob: -10.786367416381836
    10. ' (' → logprob: -11.286367416381836

Token 299: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.21974772214889526
    2. 'a' → logprob: -1.84474778175354
    3. ' any' → logprob: -4.094747543334961
    4. ' all' → logprob: -4.594747543334961
    5. ' n' → logprob: -4.844747543334961
    6. ' ' → logprob: -7.219747543334961
    7. ' (' → logprob: -7.219747543334961
    8. 'n' → logprob: -7.219747543334961
    9. 'all' → logprob: -7.844747543334961
    10. '(' → logprob: -7.969747543334961

Token 300: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02078419364988804
    2. 'n' → logprob: -4.895784378051758
    3. ' a' → logprob: -5.520784378051758
    4. 'any' → logprob: -5.770784378051758
    5. 'all' → logprob: -6.020784378051758
    6. 'len' → logprob: -6.645784378051758
    7. '0' → logprob: -7.895784378051758
    8. ' n' → logprob: -8.145784378051758
    9. '(a' → logprob: -8.395784378051758
    10. '(' → logprob: -8.520784378051758

Token 301: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17824067175388336
    2. ':' → logprob: -2.8032407760620117
    3. 'in' → logprob: -2.8032407760620117
    4. ' <' → logprob: -4.803240776062012
    5. 'a' → logprob: -5.053240776062012
    6. ' a' → logprob: -5.303240776062012
    7. ')' → logprob: -5.928240776062012
    8. 'e' → logprob: -6.178240776062012
    9. ' ' → logprob: -6.303240776062012
    10. '<n' → logprob: -6.428240776062012

Token 302: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010370950913056731
    2. ' a' → logprob: -6.876037120819092
    3. '[a' → logprob: -12.626036643981934
    4. '[' → logprob: -15.001036643981934
    5. '(a' → logprob: -15.251036643981934
    6. ')a' → logprob: -16.12603759765625
    7. '	a' → logprob: -16.37603759765625
    8. ')' → logprob: -16.62603759765625
    9. 'ans' → logprob: -17.00103759765625
    10. 'set' → logprob: -17.50103759765625

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009286141721531749
    2. ':
' → logprob: -7.0009284019470215
    3. ' :' → logprob: -11.50092887878418
    4. ':return' → logprob: -12.50092887878418
    5. ' or' → logprob: -13.87592887878418
    6. '):' → logprob: -13.87592887878418
    7. ' and' → logprob: -14.25092887878418
    8. '   ' → logprob: -15.12592887878418
    9. ',' → logprob: -16.37592887878418
    10. ' :
' → logprob: -16.50092887878418

Token 304: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18654794991016388
    2. ':
' → logprob: -2.4365479946136475
    3. '       ' → logprob: -2.5615479946136475
    4. ':return' → logprob: -5.311547756195068
    5. '   ' → logprob: -7.936547756195068
    6. ',' → logprob: -9.936548233032227
    7. '
' → logprob: -10.436548233032227
    8. '):' → logprob: -10.561548233032227
    9. '.' → logprob: -10.561548233032227
    10. ' :' → logprob: -10.811548233032227

Token 305: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1844293773174286
    2. '
' → logprob: -1.934429407119751
    3. ' return' → logprob: -4.934429168701172
    4. 'return' → logprob: -5.059429168701172
    5. ' 
' → logprob: -5.684429168701172
    6. '\n' → logprob: -5.934429168701172
    7. '   ' → logprob: -6.059429168701172
    8. 'ans' (adapté à ' ans') → logprob: -7.434429168701172
    9. '    
' → logprob: -8.309429168701172
    10. 'print' → logprob: -8.434429168701172

Token 306: ' *=' (ID: 25253)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3506556451320648
    2. ' =' → logprob: -1.7256556749343872
    3. '=' → logprob: -2.7256555557250977
    4. '+=' → logprob: -2.9756555557250977
    5. ' *=' → logprob: -6.975655555725098
    6. ' ' → logprob: -8.725655555725098
    7. '*=' → logprob: -10.725655555725098
    8. ' -=' → logprob: -10.850655555725098
    9. '+' → logprob: -10.850655555725098
    10. ' <<=' → logprob: -11.475655555725098

Token 307: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22569993138313293
    2. '0' → logprob: -1.8506999015808105
    3. 'n' → logprob: -4.1006999015808105
    4. '1' → logprob: -4.7256999015808105
    5. 'mod' → logprob: -4.9756999015808105
    6. '3' → logprob: -5.9756999015808105
    7. 'pow' → logprob: -6.2256999015808105
    8. '(' → logprob: -6.4756999015808105
    9. '(n' → logprob: -6.7256999015808105
    10. 'inf' → logprob: -6.7256999015808105

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09469375759363174
    2. '0' → logprob: -3.344693660736084
    3. 'n' → logprob: -3.594693660736084
    4. '(n' → logprob: -4.594693660736084
    5. '1' → logprob: -5.344693660736084
    6. '(' → logprob: -5.469693660736084
    7. '3' → logprob: -5.844693660736084
    8. 'mod' → logprob: -5.969693660736084
    9. '10' → logprob: -6.844693660736084
    10. 'inf' → logprob: -7.594693660736084

Token 309: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26811376214027405
    2. '<|end|>' → logprob: -2.393113851547241
    3. '
' → logprob: -2.768113851547241
    4. ' ' → logprob: -3.893113851547241
    5. '.' → logprob: -4.643113613128662
    6. ')' → logprob: -4.893113613128662
    7. 'else' → logprob: -5.018113613128662
    8. ',' → logprob: -5.018113613128662
    9. '    
' → logprob: -5.143113613128662
    10. '\n' → logprob: -5.393113613128662

Token 310: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029678046703338623
    2. '<|end|>' → logprob: -3.9046781063079834
    3. ' ' → logprob: -5.654677867889404
    4. ')' → logprob: -6.654677867889404
    5. '    
' → logprob: -6.904677867889404
    6. '.' → logprob: -7.529677867889404
    7. ' for' → logprob: -7.529677867889404
    8. '
' → logprob: -7.904677867889404
    9. ' else' → logprob: -8.279678344726562
    10. ' 
' → logprob: -8.279678344726562

Token 311: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8218116760253906
    2. '   ' → logprob: -1.1968116760253906
    3. ' for' → logprob: -2.4468116760253906
    4. 'for' (adapté à ' for') → logprob: -2.9468116760253906
    5. 'return' → logprob: -3.4468116760253906
    6. ' print' → logprob: -3.9468116760253906
    7. 'a' → logprob: -4.196811676025391
    8. ' a' → logprob: -4.446811676025391
    9. ' return' → logprob: -4.571811676025391
    10. 'else' → logprob: -4.946811676025391

Token 312: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20895788073539734
    2. ' i' → logprob: -1.9589579105377197
    3. 'x' → logprob: -3.3339579105377197
    4. ' x' → logprob: -5.208957672119141
    5. '_' → logprob: -6.208957672119141
    6. 'c' → logprob: -6.833957672119141
    7. ' _' → logprob: -7.208957672119141
    8. '_i' → logprob: -7.583957672119141
    9. 'ai' → logprob: -7.708957672119141
    10. 'v' → logprob: -7.833957672119141

Token 313: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007345485035330057
    2. 'in' → logprob: -5.007345676422119
    3. ' ' → logprob: -8.132345199584961
    4. ',' → logprob: -8.257345199584961
    5. ' ,' → logprob: -10.507345199584961
    6. '   ' → logprob: -11.007345199584961
    7. '    ' → logprob: -11.632345199584961
    8. '  ' → logprob: -12.257345199584961
    9. '_' → logprob: -13.132345199584961
    10. '	in' → logprob: -13.382345199584961

Token 314: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1311335414648056
    2. 'range' → logprob: -2.131133556365967
    3. 'a' → logprob: -5.881133556365967
    4. ' a' → logprob: -6.631133556365967
    5. '   ' → logprob: -10.506133079528809
    6. ' ' → logprob: -10.631133079528809
    7. '	range' → logprob: -12.006133079528809
    8. '  ' → logprob: -12.381133079528809
    9. '[' → logprob: -12.381133079528809
    10. ' ran' → logprob: -12.943633079528809

Token 315: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6354843974113464
    2. '(' → logprob: -0.7604843974113464
    3. '(len' → logprob: -5.885484218597412
    4. '(a' → logprob: -10.26048469543457
    5. '(
' → logprob: -10.63548469543457
    6. '(ans' → logprob: -10.88548469543457
    7. '   ' → logprob: -11.51048469543457
    8. 'n' → logprob: -12.63548469543457
    9. '(i' → logprob: -13.01048469543457
    10. '1' → logprob: -13.63548469543457

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21879321336746216
    2. '-' → logprob: -2.0937931537628174
    3. '):
' → logprob: -2.7187931537628174
    4. ' -' → logprob: -5.3437933921813965
    5. '   ' → logprob: -6.9687933921813965
    6. ' ):' → logprob: -6.9687933921813965
    7. ')' → logprob: -8.218792915344238
    8. '+' → logprob: -8.718792915344238
    9. '       ' → logprob: -8.843792915344238
    10. ' ):
' → logprob: -10.218792915344238

Token 317: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.993610143661499
    2. '           ' → logprob: -0.993610143661499
    3. '<|end|>' → logprob: -2.368610143661499
    4. '   ' → logprob: -2.868610143661499
    5. ' ' → logprob: -3.118610143661499
    6. ' if' → logprob: -3.868610143661499
    7. '        
' → logprob: -4.743610382080078
    8. '	       ' → logprob: -4.993610382080078
    9. '    
' → logprob: -5.118610382080078
    10. ',' → logprob: -5.868610382080078

Token 318: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08077175915241241
    2. '       ' → logprob: -3.9557716846466064
    3. 'if' → logprob: -3.9557716846466064
    4. '    ' → logprob: -4.7057719230651855
    5. ' ' → logprob: -4.8307719230651855
    6. '        ' → logprob: -5.0807719230651855
    7. ' a' → logprob: -5.3307719230651855
    8. '   ' → logprob: -6.0807719230651855
    9. '           ' → logprob: -6.2057719230651855
    10. ' ans' → logprob: -6.2057719230651855

Token 319: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005882933270186186
    2. '[' → logprob: -5.255882740020752
    3. '[a' → logprob: -8.13088321685791
    4. ' [' → logprob: -8.63088321685791
    5. ' =' → logprob: -9.88088321685791
    6. 'a' → logprob: -11.00588321685791
    7. '=' → logprob: -11.00588321685791
    8. '   ' → logprob: -11.13088321685791
    9. '.append' → logprob: -11.25588321685791
    10. '[
' → logprob: -11.63088321685791

Token 320: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07065403461456299
    2. ']+=' → logprob: -2.8206539154052734
    3. ']==' → logprob: -5.445653915405273
    4. ' ]' → logprob: -6.070653915405273
    5. ']=' → logprob: -7.195653915405273
    6. ']!=' → logprob: -7.695653915405273
    7. ')' → logprob: -8.195653915405273
    8. ']+' → logprob: -8.570653915405273
    9. '==' → logprob: -9.695653915405273
    10. '+=' → logprob: -10.570653915405273

Token 321: ' >>=' (ID: 81952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3365207016468048
    2. '+=' → logprob: -1.9615206718444824
    3. ' =' → logprob: -2.8365206718444824
    4. ' +=' → logprob: -2.8365206718444824
    5. ' ^=' → logprob: -3.8365206718444824
    6. ' -=' → logprob: -6.586520671844482
    7. '^' → logprob: -6.961520671844482
    8. '-=' → logprob: -7.086520671844482
    9. '*=' → logprob: -7.086520671844482
    10. '==' → logprob: -7.211520671844482

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011988013284280896
    2. ' ' → logprob: -7.376198768615723
    3. '2' → logprob: -7.626198768615723
    4. '3' → logprob: -10.501198768615723
    5. '0' → logprob: -10.876198768615723
    6. 'i' → logprob: -11.626198768615723
    7. '   ' → logprob: -12.126198768615723
    8. 'a' → logprob: -12.126198768615723
    9. '
' → logprob: -12.501198768615723
    10. '4' → logprob: -13.126198768615723

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003936152206733823
    2. '2' → logprob: -8.250393867492676
    3. '0' → logprob: -10.250393867492676
    4. ' ' → logprob: -10.500393867492676
    5. '3' → logprob: -10.625393867492676
    6. 'i' → logprob: -10.875393867492676
    7. 'ans' → logprob: -12.250393867492676
    8. '4' → logprob: -12.625393867492676
    9. 'a' → logprob: -12.875393867492676
    10. '5' → logprob: -12.875393867492676

Token 324: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7938132882118225
    2. ' ' → logprob: -1.0438132286071777
    3. '<|end|>' → logprob: -2.0438132286071777
    4. '       ' → logprob: -3.9188132286071777
    5. '    ' → logprob: -4.668813228607178
    6. ' 
' → logprob: -4.668813228607178
    7. '
' → logprob: -4.918813228607178
    8. ' else' → logprob: -5.168813228607178
    9. ')' → logprob: -5.793813228607178
    10. '    
' → logprob: -6.418813228607178

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.131717711687088
    2. '=' → logprob: -2.1317176818847656
    3. 'ult' → logprob: -5.756717681884766
    4. 'ults' → logprob: -7.506717681884766
    5. 't' → logprob: -7.881717681884766
    6. 'u' → logprob: -8.506717681884766
    7. ',' → logprob: -8.881717681884766
    8. ' ' → logprob: -9.506717681884766
    9. 's' → logprob: -9.881717681884766
    10. 'ault' → logprob: -10.131717681884766

Token 328: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18786561489105225
    2. ' ' → logprob: -2.062865734100342
    3. ' []' → logprob: -3.937865734100342
    4. '[]' → logprob: -4.312865734100342
    5. '1' → logprob: -5.562865734100342
    6. ' [' → logprob: -5.562865734100342
    7. '[' → logprob: -6.562865734100342
    8. 'a' → logprob: -7.937865734100342
    9. ' defaultdict' → logprob: -8.062865257263184
    10. ' a' → logprob: -8.312865257263184

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26744869351387024
    2. '1' → logprob: -2.267448663711548
    3. 'ans' → logprob: -3.392448663711548
    4. '[]' → logprob: -3.517448663711548
    5. '[' → logprob: -3.642448663711548
    6. 'a' → logprob: -3.642448663711548
    7. '2' → logprob: -6.017448902130127
    8. 'default' → logprob: -6.142448902130127
    9. 'inf' → logprob: -6.267448902130127
    10. 'n' → logprob: -6.517448902130127

Token 330: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0777764320373535
    2. ' for' → logprob: -1.0777764320373535
    3. '<|end|>' → logprob: -1.7027764320373535
    4. '   ' → logprob: -3.0777764320373535
    5. 'for' → logprob: -3.2027764320373535
    6. ' 
' → logprob: -3.8277764320373535
    7. '
' → logprob: -3.8277764320373535
    8. ',' → logprob: -6.8277764320373535
    9. '  
' → logprob: -7.0777764320373535
    10. '  ' → logprob: -7.2027764320373535

Token 332: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5789639353752136
    2. 'for' (adapté à ' for') → logprob: -0.8289639353752136
    3. ' i' → logprob: -6.828963756561279
    4. ' while' → logprob: -7.578963756561279
    5. 'while' → logprob: -8.453964233398438
    6. 'i' → logprob: -8.703964233398438
    7. ' ' → logprob: -8.828964233398438
    8. ' a' → logprob: -8.953964233398438
    9. '   ' → logprob: -9.078964233398438
    10. 'a' → logprob: -9.828964233398438

Token 333: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39299049973487854
    2. 'i' → logprob: -1.1429904699325562
    3. ' x' → logprob: -6.267990589141846
    4. 'x' → logprob: -6.267990589141846
    5. 'a' → logprob: -7.392990589141846
    6. '_' → logprob: -7.392990589141846
    7. ' _' → logprob: -7.517990589141846
    8. ' a' → logprob: -8.267990112304688
    9. '_i' → logprob: -9.017990112304688
    10. 'v' → logprob: -10.267990112304688

Token 334: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012736364267766476
    2. 'in' → logprob: -4.3877363204956055
    3. ',' → logprob: -9.137736320495605
    4. ' ' → logprob: -9.387736320495605
    5. '+' → logprob: -11.387736320495605
    6. ' ,' → logprob: -12.262736320495605
    7. '0' → logprob: -12.887736320495605
    8. '	in' → logprob: -13.012736320495605
    9. 'range' → logprob: -13.387736320495605
    10. '   ' → logprob: -13.512736320495605

Token 335: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015950803644955158
    2. ' range' → logprob: -6.6265950202941895
    3. 'a' → logprob: -8.251595497131348
    4. '   ' → logprob: -12.876595497131348
    5. 'r' → logprob: -14.001595497131348
    6. ' ' → logprob: -14.376595497131348
    7. ')' → logprob: -14.501595497131348
    8. '
' → logprob: -14.626595497131348
    9. '  ' → logprob: -14.751595497131348
    10. 'ange' → logprob: -14.876595497131348

Token 336: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0042036441154778
    2. '(' → logprob: -5.504203796386719
    3. 'n' → logprob: -9.129203796386719
    4. ' n' → logprob: -12.129203796386719
    5. '(len' → logprob: -12.754203796386719
    6. '(
' → logprob: -13.129203796386719
    7. ' (' → logprob: -13.379203796386719
    8. '(a' → logprob: -13.879203796386719
    9. ')' → logprob: -14.254203796386719
    10. '(range' → logprob: -14.379203796386719

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08314056694507599
    2. '):
' → logprob: -2.5831406116485596
    3. '+' → logprob: -5.7081403732299805
    4. '-' → logprob: -7.2081403732299805
    5. '   ' → logprob: -9.70814037322998
    6. ')' → logprob: -10.08314037322998
    7. ' ):' → logprob: -10.08314037322998
    8. ',' → logprob: -11.58314037322998
    9. ':' → logprob: -11.83314037322998
    10. ' -' → logprob: -12.20814037322998

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2760432958602905
    2. ' ' → logprob: -1.9010432958602905
    3. '    ' → logprob: -3.15104341506958
    4. '        ' → logprob: -4.77604341506958
    5. ':' → logprob: -4.90104341506958
    6. '<|end|>' → logprob: -5.02604341506958
    7. ' if' → logprob: -5.15104341506958
    8. ',' → logprob: -5.27604341506958
    9. '   ' → logprob: -5.40104341506958
    10. ' 
' → logprob: -6.40104341506958

Token 339: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2964940071105957
    2. ' res' → logprob: -2.5464940071105957
    3. ' for' → logprob: -2.5464940071105957
    4. 'if' (adapté à ' if') → logprob: -3.1714940071105957
    5. '       ' → logprob: -4.296494007110596
    6. '   ' → logprob: -4.546494007110596
    7. ' x' → logprob: -4.796494007110596
    8. 'res' → logprob: -4.921494007110596
    9. 'for' → logprob: -4.921494007110596
    10. ' a' → logprob: -5.921494007110596

Token 340: ' ((' (ID: 3536)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.030024223029613495
    2. 'a' → logprob: -3.530024290084839
    3. ' not' → logprob: -9.405024528503418
    4. ' (' → logprob: -9.655024528503418
    5. ' ans' → logprob: -9.905024528503418
    6. ' i' → logprob: -10.405024528503418
    7. '(a' → logprob: -10.905024528503418
    8. ' ' → logprob: -11.530024528503418
    9. 'i' → logprob: -12.655024528503418
    10. ' ' → logprob: -13.030024528503418

Token 341: 'n' (ID: 77)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00503699854016304
    2. ' a' → logprob: -5.3800368309021
    3. '(a' → logprob: -8.755037307739258
    4. 'i' → logprob: -8.880037307739258
    5. '1' → logprob: -10.505037307739258
    6. ' (' → logprob: -10.630037307739258
    7. 'ans' → logprob: -11.005037307739258
    8. '   ' → logprob: -11.255037307739258
    9. '(i' → logprob: -11.505037307739258
    10. ' i' → logprob: -12.005037307739258

Token 342: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3792810440063477
    2. '>>' → logprob: -1.6292810440063477
    3. ' -' → logprob: -1.6292810440063477
    4. ')' → logprob: -2.1292810440063477
    5. ' >>' → logprob: -2.3792810440063477
    6. 'a' → logprob: -2.5042810440063477
    7. '[i' → logprob: -3.7542810440063477
    8. '   ' → logprob: -4.379281044006348
    9. '>' → logprob: -5.379281044006348
    10. '+' → logprob: -5.629281044006348

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7154578566551208
    2. 'i' → logprob: -0.8404578566551208
    3. ' i' → logprob: -3.2154579162597656
    4. 'a' → logprob: -3.5904579162597656
    5. ' ' → logprob: -4.840457916259766
    6. ' a' → logprob: -5.965457916259766
    7. '(i' → logprob: -8.090457916259766
    8. 'ans' → logprob: -8.590457916259766
    9. ')' → logprob: -8.715457916259766
    10. '2' → logprob: -9.027957916259766

Token 344: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42995890974998474
    2. '1' → logprob: -1.0549589395523071
    3. 'a' → logprob: -7.429958820343018
    4. ' i' → logprob: -7.929958820343018
    5. ')' → logprob: -9.679959297180176
    6. '(i' → logprob: -9.679959297180176
    7. ' ' → logprob: -9.804959297180176
    8. '   ' → logprob: -10.554959297180176
    9. '
' → logprob: -10.679959297180176
    10. '2' → logprob: -11.304959297180176

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8554477095603943
    2. ' -' → logprob: -0.8554477095603943
    3. '-' → logprob: -1.980447769165039
    4. '>>' → logprob: -5.480447769165039
    5. ')>>' → logprob: -5.980447769165039
    6. '-i' → logprob: -6.230447769165039
    7. ' )' → logprob: -6.355447769165039
    8. ' >>' → logprob: -8.355447769165039
    9. ')-' → logprob: -8.480447769165039
    10. '==' → logprob: -8.605447769165039

Token 346: ' &' (ID: 827)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4152306020259857
    2. '-' → logprob: -1.540230631828308
    3. ')' → logprob: -2.1652305126190186
    4. '>>' → logprob: -5.290230751037598
    5. '-i' → logprob: -6.040230751037598
    6. ')>>' → logprob: -6.790230751037598
    7. ' )' → logprob: -7.915230751037598
    8. ' >>' → logprob: -8.040230751037598
    9. '   ' → logprob: -8.415230751037598
    10. '>' → logprob: -8.415230751037598

Token 347: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20636770129203796
    2. 'a' → logprob: -1.9563677310943604
    3. ' (' → logprob: -3.8313677310943604
    4. ' i' → logprob: -4.206367492675781
    5. '1' → logprob: -6.081367492675781
    6. 'i' → logprob: -6.206367492675781
    7. '(' → logprob: -6.706367492675781
    8. ')' → logprob: -6.706367492675781
    9. ' ' → logprob: -6.956367492675781
    10. ' ((' → logprob: -8.456367492675781

Token 348: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014373870566487312
    2. ')==' → logprob: -4.264373779296875
    3. ')!=' → logprob: -9.264373779296875
    4. ' )' → logprob: -10.264373779296875
    5. '):' → logprob: -11.139373779296875
    6. '):
' → logprob: -11.264373779296875
    7. '==' → logprob: -11.264373779296875
    8. '))' → logprob: -11.389373779296875
    9. ')>>' → logprob: -11.889373779296875
    10. '')' → logprob: -12.389373779296875

Token 349: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7027859091758728
    2. ' ' → logprob: -1.0777859687805176
    3. ' i' → logprob: -2.2027859687805176
    4. ')' → logprob: -3.9527859687805176
    5. 'i' → logprob: -4.202785968780518
    6. ' (' → logprob: -4.327785968780518
    7. '(i' → logprob: -6.452785968780518
    8. ' )' → logprob: -6.702785968780518
    9. ' n' → logprob: -6.827785968780518
    10. ' ((' → logprob: -6.952785968780518

Token 350: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17212282121181488
    2. ')' → logprob: -2.4221227169036865
    3. '):
' → logprob: -2.6721227169036865
    4. ' and' → logprob: -9.422122955322266
    5. ' ):' → logprob: -10.172122955322266
    6. '):

' → logprob: -10.172122955322266
    7. '       ' → logprob: -10.297122955322266
    8. ':' → logprob: -10.797122955322266
    9. '):
' → logprob: -10.922122955322266
    10. ')==' → logprob: -11.172122955322266

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05760451778769493
    2. ':' → logprob: -3.0576045513153076
    3. ':
' → logprob: -5.6826043128967285
    4. ' :' → logprob: -6.3076043128967285
    5. ' and' → logprob: -6.9326043128967285
    6. '               ' → logprob: -7.6826043128967285
    7. '):' → logprob: -7.9326043128967285
    8. ',' → logprob: -8.182604789733887
    9. '       ' → logprob: -8.182604789733887
    10. '        ' → logprob: -8.682604789733887

Token 352: ' res' (ID: 694)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2171662598848343
    2. '           ' → logprob: -2.7171661853790283
    3. '            ' → logprob: -2.9671661853790283
    4. ' 
' → logprob: -3.0921661853790283
    5. ' ' → logprob: -4.217166423797607
    6. '                ' → logprob: -4.967166423797607
    7. ')' → logprob: -6.342166423797607
    8. '
' → logprob: -6.467166423797607
    9. ' ' → logprob: -6.592166423797607
    10. ' (' → logprob: -7.342166423797607

Token 353: ' ^=' (ID: 79665)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.055029429495334625
    2. '+=' → logprob: -2.9300293922424316
    3. ' =' → logprob: -10.05502986907959
    4. '+' → logprob: -10.68002986907959
    5. ' |=' → logprob: -10.68002986907959
    6. '=' → logprob: -10.93002986907959
    7. ' ^=' → logprob: -11.18002986907959
    8. '   ' → logprob: -12.05502986907959
    9. ' <<=' → logprob: -12.05502986907959
    10. ' ' → logprob: -12.30502986907959

Token 354: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11882905662059784
    2. ' a' → logprob: -2.2438290119171143
    3. '1' → logprob: -5.368829250335693
    4. ' ' → logprob: -7.368829250335693
    5. 'i' → logprob: -8.243828773498535
    6. ' i' → logprob: -9.243828773498535
    7. 'ans' → logprob: -9.368828773498535
    8. ' (' → logprob: -9.493828773498535
    9. ' ans' → logprob: -9.868828773498535
    10. '(a' → logprob: -9.993828773498535

Token 355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003184125293046236
    2. '[' → logprob: -5.7531843185424805
    3. '[
' → logprob: -12.75318431854248
    4. ' [' → logprob: -13.00318431854248
    5. 'i' → logprob: -14.87818431854248
    6. '[n' → logprob: -15.12818431854248
    7. '
' → logprob: -15.75318431854248
    8. ' ' → logprob: -16.128183364868164
    9. '[a' → logprob: -17.003183364868164
    10. '[j' → logprob: -17.003183364868164

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030725818127393723
    2. '])' → logprob: -3.5307257175445557
    3. ']
' → logprob: -8.155725479125977
    4. ')' → logprob: -8.155725479125977
    5. ')]' → logprob: -8.780725479125977
    6. ' ]' → logprob: -8.780725479125977
    7. '[' → logprob: -10.405725479125977
    8. '[i' → logprob: -10.780725479125977
    9. '])
' → logprob: -11.530725479125977
    10. '])]' → logprob: -12.155725479125977

Token 357: ' &' (ID: 827)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.724134087562561
    2. '
' → logprob: -1.224134087562561
    3. ' ' → logprob: -2.3491339683532715
    4. '<|end|>' → logprob: -3.2241339683532715
    5. ')' → logprob: -3.5991339683532715
    6. '[' → logprob: -3.9741339683532715
    7. '   ' → logprob: -5.0991339683532715
    8. ']' → logprob: -5.2241339683532715
    9. '        ' → logprob: -5.7241339683532715
    10. '\n' → logprob: -5.7241339683532715

Token 358: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6436969041824341
    2. '1' → logprob: -2.1436967849731445
    3. ' ' → logprob: -2.3936967849731445
    4. ' i' → logprob: -2.5186967849731445
    5. ' a' → logprob: -2.7686967849731445
    6. ' ((' → logprob: -3.2686967849731445
    7. '(n' → logprob: -3.6436967849731445
    8. 'a' → logprob: -3.8936967849731445
    9. 'i' → logprob: -4.6436967849731445
    10. '(' → logprob: -4.7686967849731445

Token 359: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6564416885375977
    2. '(n' → logprob: -1.7814416885375977
    3. ' (' → logprob: -2.5314416885375977
    4. '((' → logprob: -2.6564416885375977
    5. ' i' → logprob: -3.0314416885375977
    6. '(i' → logprob: -3.1564416885375977
    7. ' ((' → logprob: -3.4064416885375977
    8. '1' → logprob: -4.156441688537598
    9. '(' → logprob: -4.656441688537598
    10. 'a' → logprob: -4.781441688537598

Token 360: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17079991102218628
    2. '       ' → logprob: -2.170799970626831
    3. '\n' → logprob: -4.295799732208252
    4. '<|end|>' → logprob: -4.545799732208252
    5. '   ' → logprob: -5.545799732208252
    6. ' ' → logprob: -5.795799732208252
    7. '           ' → logprob: -6.170799732208252
    8. ')' → logprob: -6.295799732208252
    9. ' 
' → logprob: -6.545799732208252
    10. '  
' → logprob: -7.170799732208252

Token 361: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9007448554039001
    2. ')' → logprob: -1.275744915008545
    3. '       ' → logprob: -1.775744915008545
    4. ' ' → logprob: -2.900744915008545
    5. ':' → logprob: -3.525744915008545
    6. '<|end|>' → logprob: -3.900744915008545
    7. '   ' → logprob: -4.525744915008545
    8. '\n' → logprob: -5.400744915008545
    9. ' 
' → logprob: -5.650744915008545
    10. '           ' → logprob: -5.775744915008545

Token 362: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.984998345375061
    2. '   ' → logprob: -1.484998345375061
    3. ' ' → logprob: -1.984998345375061
    4. ':' → logprob: -2.4849982261657715
    5. '       ' → logprob: -2.6099982261657715
    6. '
' → logprob: -3.4849982261657715
    7. '<|end|>' → logprob: -3.6099982261657715
    8. '    ' → logprob: -4.2349982261657715
    9. ' 
' → logprob: -4.8599982261657715
    10. '\n' → logprob: -4.9849982261657715

Token 363: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.6309288740158081
    2. '(ans' → logprob: -1.380928874015808
    3. '(' → logprob: -1.630928874015808
    4. '()' → logprob: -3.8809289932250977
    5. 'res' → logprob: -9.630928993225098
    6. ' (' → logprob: -10.630928993225098
    7. '(
' → logprob: -10.755928993225098
    8. '(a' → logprob: -11.130928993225098
    9. '('' → logprob: -11.130928993225098
    10. '(abs' → logprob: -11.880928993225098

Token 364: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.750006675720215
    3. '))' → logprob: -13.500006675720215
    4. ')
' → logprob: -13.875006675720215
    5. '()' → logprob: -14.000006675720215
    6. ')`' → logprob: -15.625006675720215
    7. '())' → logprob: -16.1250057220459
    8. '+' → logprob: -17.3750057220459
    9. '`)' → logprob: -17.5000057220459
    10. ')))' → logprob: -17.8750057220459

Token 365: ' ans' (ID: 3345)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.431017130613327
    2. ' ' → logprob: -1.8060171604156494
    3. ' ans' → logprob: -2.1810171604156494
    4. 'ans' → logprob: -2.8060171604156494
    5. '(ans' → logprob: -5.05601692199707
    6. ' (' → logprob: -5.93101692199707
    7. '(' → logprob: -7.05601692199707
    8. ')' → logprob: -7.68101692199707
    9. '3' → logprob: -7.80601692199707
    10. '1' → logprob: -8.05601692199707

Token 366: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. ' )' → logprob: -11.500025749206543
    3. '))' → logprob: -11.750025749206543
    4. '())' → logprob: -12.500025749206543
    5. '()' → logprob: -13.375025749206543
    6. ')
' → logprob: -14.125025749206543
    7. ')`' → logprob: -14.500025749206543
    8. '`)' → logprob: -14.875025749206543
    9. '*' → logprob: -15.750025749206543
    10. '**' → logprob: -16.00002670288086

Token 367: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0562856197357178
    2. ':' → logprob: -1.3062856197357178
    3. '[' → logprob: -1.6812856197357178
    4. ' ' → logprob: -2.4312856197357178
    5. '(' → logprob: -3.1812856197357178
    6. '<|end|>' → logprob: -3.9312856197357178
    7. '
' → logprob: -4.181285858154297
    8. '   ' → logprob: -4.556285858154297
    9. '(
' → logprob: -6.306285858154297
    10. ' 
' → logprob: -6.306285858154297

Token 368: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13494600355625153
    2. ' ' → logprob: -2.88494610786438
    3. '(' → logprob: -3.38494610786438
    4. '[' → logprob: -4.384945869445801
    5. '
' → logprob: -4.634945869445801
    6. '<|end|>' → logprob: -4.884945869445801
    7. ':' → logprob: -6.259945869445801
    8. '#' → logprob: -7.009945869445801
    9. '\n' → logprob: -7.259945869445801
    10. ' )' → logprob: -7.509945869445801

Token 369: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1736501157283783
    2. '__' → logprob: -1.9236501455307007
    3. ' ' → logprob: -4.42365026473999
    4. '_' → logprob: -7.29865026473999
    5. '<|end|>' → logprob: -8.298649787902832
    6. ' ' → logprob: -9.048649787902832
    7. ' _' → logprob: -9.423649787902832
    8. '_name' → logprob: -9.798649787902832
    9. ' ' → logprob: -9.798649787902832
    10. 's' → logprob: -11.736149787902832

Token 372: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05382753536105156
    2. ' __' → logprob: -3.0538275241851807
    3. '_' → logprob: -5.42882776260376
    4. ' ==' → logprob: -7.17882776260376
    5. '==' → logprob: -10.803827285766602
    6. ' _' → logprob: -11.178827285766602
    7. ' ' → logprob: -11.678827285766602
    8. '__':
' → logprob: -12.428827285766602
    9. '__[' → logprob: -13.178827285766602
    10. '__.' → logprob: -13.303827285766602

Token 373: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '==' → logprob: -15.500000953674316
    3. '__.__' → logprob: -15.875000953674316
    4. '_' → logprob: -16.375
    5. '__
' → logprob: -16.875
    6. '___' → logprob: -16.875
    7. '____' → logprob: -17.25
    8. '__.' → logprob: -18.375
    9. ' ==' → logprob: -19.125
    10. '__('' → logprob: -19.25

Token 374: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4192291498184204
    2. '==' → logprob: -1.5442291498184204
    3. '=="' → logprob: -2.544229030609131
    4. '__' → logprob: -3.044229030609131
    5. '=='' → logprob: -6.044229030609131
    6. ' =="' → logprob: -8.169229507446289
    7. '_' → logprob: -10.544229507446289
    8. '==="' → logprob: -11.169229507446289
    9. ' ===' → logprob: -11.544229507446289
    10. '=' → logprob: -11.544229507446289

Token 375: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10025681555271149
    2. ''' → logprob: -2.35025691986084
    3. '__' → logprob: -9.97525691986084
    4. ' "__' → logprob: -12.85025691986084
    5. ''"' → logprob: -15.47525691986084
    6. '"user' → logprob: -15.60025691986084
    7. '"name' → logprob: -15.85025691986084
    8. ' '__' → logprob: -15.85025691986084
    9. '   ' → logprob: -16.225255966186523
    10. '("__' → logprob: -17.100255966186523

Token 376: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.43589070439338684
    2. '_main' → logprob: -1.8108906745910645
    3. '__':
' → logprob: -2.3108906745910645
    4. '__' → logprob: -2.4358906745910645
    5. '_' → logprob: -6.5608906745910645
    6. '__.' → logprob: -7.0608906745910645
    7. '_name' → logprob: -8.935891151428223
    8. '_'' → logprob: -9.310891151428223
    9. '_safe' → logprob: -9.560891151428223
    10. '_MAIN' → logprob: -9.685891151428223

Token 377: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.004086708649992943
    2. '__' → logprob: -5.504086494445801
    3. '__":
' → logprob: -11.7540864944458
    4. '__:' → logprob: -14.7540864944458
    5. '__('' → logprob: -17.629087448120117
    6. '__
' → logprob: -18.504087448120117
    7. '_' → logprob: -18.504087448120117
    8. '():
' → logprob: -18.754087448120117
    9. '('__' → logprob: -19.379087448120117
    10. '()' → logprob: -19.629087448120117

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07301314920186996
    2. 'solve' → logprob: -2.6980130672454834
    3. ' solve' → logprob: -5.8230133056640625
    4. '.solve' → logprob: -9.698013305664062
    5. '	s' → logprob: -10.573013305664062
    6. '```' → logprob: -11.323013305664062
    7. '>' → logprob: -12.448013305664062
    8. '    
' → logprob: -12.698013305664062
    9. ' ' → logprob: -13.323013305664062
    10. '(s' → logprob: -13.823013305664062

Token 379: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.3856492842023727e-06
    2. ' solve' → logprob: -14.000000953674316
    3. '   ' → logprob: -14.625000953674316
    4. 'resolve' → logprob: -18.250001907348633
    5. '.solve' → logprob: -18.250001907348633
    6. 'save' → logprob: -20.375001907348633
    7. '  ' → logprob: -21.750001907348633
    8. 'main' → logprob: -22.250001907348633
    9. '    
' → logprob: -22.625001907348633
    10. 'solver' → logprob: -22.625001907348633

Token 380: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007492220029234886
    2. '()
' → logprob: -5.5074920654296875
    3. '(' → logprob: -5.7574920654296875
    4. '(
' → logprob: -9.507492065429688
    5. '():' → logprob: -9.632492065429688
    6. ':' → logprob: -10.257492065429688
    7. '()

' → logprob: -11.132492065429688
    8. '
' → logprob: -11.132492065429688
    9. ' ()' → logprob: -11.382492065429688
    10. '<|end|>' → logprob: -11.882492065429688


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 378
Tokens correctement prédits (1ère position, stricte): 160
Tokens correctement prédits (1ère position, avec adaptation): 162
Tokens correctement prédits (top 10): 311
Précision stricte (1ère position): 42.33%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 82.28%
================================================================================
