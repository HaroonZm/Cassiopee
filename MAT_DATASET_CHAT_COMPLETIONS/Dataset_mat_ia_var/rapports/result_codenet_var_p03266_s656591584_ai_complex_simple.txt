================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, mul, floordiv
from math import ceil

n, k = map(int, input().split())

# Calculer le nombre de divisions entières par une somme/produit/séquence inutilement complexe
o = reduce(lambda a, f: f(a, k), [floordiv]*1, n)

p = 0
if not bool(k % 2):
    # Utiliser map, lambda et sum pour simuler la division
    s = list(map(int, [n, k // 2]))
    p = reduce(lambda x, y: floordiv(x + y, k), s[1:], s[0])

# Calculer la somme des cubes en utilisant pow et un map sur une liste
res = reduce(add, list(map(lambda x: pow(x, 3), [o, p])))
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04439019411802292
    2. 'import' → logprob: -3.6693902015686035
    3. '.' → logprob: -4.1693902015686035
    4. ' ' → logprob: -6.1693902015686035
    5. ' .' → logprob: -8.419389724731445
    6. '.import' → logprob: -9.169389724731445
    7. '	import' → logprob: -11.419389724731445
    8. '_import' → logprob: -11.544389724731445
    9. '<|end|>' → logprob: -11.794389724731445
    10. ' Import' → logprob: -13.169389724731445

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.13038945198059082
    2. ' import' → logprob: -2.630389451980591
    3. 'add' → logprob: -3.755389451980591
    4. ' mul' → logprob: -4.005389213562012
    5. ' ' → logprob: -5.505389213562012
    6. 'import' → logprob: -5.755389213562012
    7. 'mul' → logprob: -7.130389213562012
    8. ' item' → logprob: -8.380389213562012
    9. ' icon' → logprob: -10.130389213562012
    10. '_add' → logprob: -10.380389213562012

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2547340989112854
    2. '\' → logprob: -2.6297340393066406
    3. '(
' → logprob: -3.2547340393066406
    4. '\n' → logprob: -3.2547340393066406
    5. ',' → logprob: -3.7547340393066406
    6. '#' → logprob: -4.629734039306641
    7. ' ' → logprob: -5.254734039306641
    8. 'def' → logprob: -5.254734039306641
    9. ')' → logprob: -5.504734039306641
    10. '
' → logprob: -5.754734039306641

Token 10: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.652916431427002
    2. 'mul' → logprob: -0.777916431427002
    3. ' sub' → logprob: -4.652916431427002
    4. 'sub' → logprob: -4.652916431427002
    5. '```' → logprob: -8.652915954589844
    6. 'getitem' → logprob: -8.777915954589844
    7. ' i' → logprob: -8.902915954589844
    8. 'item' → logprob: -9.027915954589844
    9. ' ' → logprob: -9.277915954589844
    10. 'i' → logprob: -9.527915954589844

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003580707125365734
    2. '(
' → logprob: -6.253580570220947
    3. '\' → logprob: -7.878580570220947
    4. ',' → logprob: -7.878580570220947
    5. 'def' → logprob: -8.128581047058105
    6. '#' → logprob: -8.503581047058105
    7. '\(' → logprob: -9.378581047058105
    8. '(

' → logprob: -9.503581047058105
    9. '```' → logprob: -10.503581047058105
    10. '\n' → logprob: -10.503581047058105

Token 12: ' flo' (ID: 15037)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.29093697667121887
    2. 'sub' → logprob: -2.4159369468688965
    3. 'pow' → logprob: -2.6659369468688965
    4. ' pow' → logprob: -3.4159369468688965
    5. ' tr' → logprob: -3.5409369468688965
    6. ' mod' → logprob: -4.1659369468688965
    7. ' import' → logprob: -5.6659369468688965
    8. 'mod' → logprob: -5.7909369468688965
    9. 'import' → logprob: -6.4159369468688965
    10. '```' → logprob: -6.4159369468688965

Token 13: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.10023913532495499
    2. 'or' → logprob: -2.3502390384674072
    3. 'r' → logprob: -10.975238800048828
    4. 'orm' → logprob: -12.725238800048828
    5. '```' → logprob: -13.100238800048828
    6. 'o' → logprob: -13.225238800048828
    7. 'od' → logprob: -13.350238800048828
    8. 'orld' → logprob: -13.725238800048828
    9. '#' → logprob: -13.975238800048828
    10. '(ord' → logprob: -14.100238800048828

Token 14: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.1994775377388578e-05
    2. 'i' → logprob: -12.125012397766113
    3. 'ivid' → logprob: -12.375012397766113
    4. 'ivi' → logprob: -14.375012397766113
    5. 'vision' → logprob: -14.500012397766113
    6. '_div' → logprob: -14.625012397766113
    7. 'v' → logprob: -16.250011444091797
    8. '_iv' → logprob: -16.500011444091797
    9. 'ivr' → logprob: -16.500011444091797
    10. 'vide' → logprob: -16.625011444091797

Token 15: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.869053840637207
    2. '(' → logprob: -1.369053840637207
    3. 'def' → logprob: -1.869053840637207
    4. ',' → logprob: -2.869053840637207
    5. 'a' → logprob: -3.869053840637207
    6. '*' → logprob: -3.869053840637207
    7. '\' → logprob: -3.994053840637207
    8. 'd' → logprob: -4.369053840637207
    9. '[' → logprob: -4.869053840637207
    10. '`' → logprob: -5.494053840637207

Token 16: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6067582368850708
    2. 'def' → logprob: -1.7317582368850708
    3. 'd' → logprob: -2.7317581176757812
    4. ',' → logprob: -2.7317581176757812
    5. 'a' → logprob: -3.7317581176757812
    6. '#' → logprob: -3.8567581176757812
    7. '\' → logprob: -3.8567581176757812
    8. '`' → logprob: -3.9817581176757812
    9. '[' → logprob: -4.356758117675781
    10. ')' → logprob: -4.481758117675781

Token 17: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5817124843597412
    2. ' math' → logprob: -0.8317124843597412
    3. ' itertools' → logprob: -5.33171272277832
    4. ' fractions' → logprob: -7.70671272277832
    5. 'operator' → logprob: -8.95671272277832
    6. 'it' → logprob: -9.70671272277832
    7. 'collections' → logprob: -9.95671272277832
    8. ' operator' → logprob: -10.45671272277832
    9. '_math' → logprob: -10.45671272277832
    10. ' typing' → logprob: -10.70671272277832

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16076265275478363
    2. 'import' → logprob: -1.9107626676559448
    3. '.' → logprob: -8.285762786865234
    4. '<|end|>' → logprob: -9.285762786865234
    5. ' ' → logprob: -9.535762786865234
    6. '	import' → logprob: -9.785762786865234
    7. '_import' → logprob: -10.785762786865234
    8. '<|end|>' → logprob: -11.160762786865234
    9. '.import' → logprob: -11.410762786865234
    10. ' importar' → logprob: -12.660762786865234

Token 19: ' ceil' (ID: 35964)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -1.3181796073913574
    2. ' factorial' → logprob: -1.6931796073913574
    3. 'sqrt' → logprob: -1.8181796073913574
    4. 'factor' → logprob: -2.4431796073913574
    5. 'g' → logprob: -2.5681796073913574
    6. 'floor' → logprob: -2.8181796073913574
    7. 'ceil' → logprob: -3.1931796073913574
    8. 'pow' → logprob: -3.4431796073913574
    9. 'prod' → logprob: -4.068179607391357
    10. ' floor' → logprob: -4.068179607391357

Token 20: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2589825391769409
    2. ',' → logprob: -2.5089826583862305
    3. '(' → logprob: -3.1339826583862305
    4. 'a' → logprob: -4.0089826583862305
    5. '\' → logprob: -4.1339826583862305
    6. ',
' → logprob: -4.2589826583862305
    7. '
' → logprob: -4.6339826583862305
    8. '#' → logprob: -4.8839826583862305
    9. '(
' → logprob: -4.8839826583862305
    10. '\n' → logprob: -5.1339826583862305

Token 21: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.642082929611206
    2. 'd' → logprob: -1.392082929611206
    3. '#' → logprob: -2.017082929611206
    4. 'a' → logprob: -3.517082929611206
    5. '*' → logprob: -4.642083168029785
    6. '\' → logprob: -4.767083168029785
    7. '`' → logprob: -4.892083168029785
    8. '(' → logprob: -5.142083168029785
    9. 'f' → logprob: -5.267083168029785
    10. 's' → logprob: -5.392083168029785

Token 22: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9853735566139221
    2. ' =' → logprob: -1.1103734970092773
    3. '=' → logprob: -1.7353734970092773
    4. '_' → logprob: -2.9853734970092773
    5. 'u' → logprob: -3.8603734970092773
    6. ')' → logprob: -3.9853734970092773
    7. '  ' → logprob: -4.860373497009277
    8. '.' → logprob: -5.110373497009277
    9. ',' → logprob: -5.485373497009277
    10. '[' → logprob: -5.610373497009277

Token 23: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7956374287605286
    2. 'k' → logprob: -1.1706373691558838
    3. ' m' → logprob: -2.170637369155884
    4. ' k' → logprob: -2.295637369155884
    5. 'a' → logprob: -4.295637607574463
    6. ' a' → logprob: -6.295637607574463
    7. ' ' → logprob: -6.795637607574463
    8. 'x' → logprob: -7.045637607574463
    9. 'q' → logprob: -7.420637607574463
    10. '=' → logprob: -7.420637607574463

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16071341931819916
    2. '=' → logprob: -1.9107134342193604
    3. ',' → logprob: -7.660713195800781
    4. ' ' → logprob: -12.035713195800781
    5. ' ,' → logprob: -12.035713195800781
    6. '<|end|>' → logprob: -13.160713195800781
    7. ')' → logprob: -13.785713195800781
    8. '=

' → logprob: -14.160713195800781
    9. ' =
' → logprob: -14.535713195800781
    10. ' =",' → logprob: -15.285713195800781

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1833411455154419
    2. 'map' → logprob: -1.933341145515442
    3. ' ' → logprob: -4.058341026306152
    4. 'input' → logprob: -6.683341026306152
    5. '0' → logprob: -6.933341026306152
    6. ' input' → logprob: -6.933341026306152
    7. '10' → logprob: -7.308341026306152
    8. '5' → logprob: -7.558341026306152
    9. '1' → logprob: -7.683341026306152
    10. '20' → logprob: -9.433341026306152

Token 26: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28755539655685425
    2. '(int' → logprob: -1.912555456161499
    3. '<|end|>' → logprob: -2.662555456161499
    4. '(lambda' → logprob: -3.912555456161499
    5. '(str' → logprob: -4.66255521774292
    6. 'int' → logprob: -6.91255521774292
    7. '<|end|>' → logprob: -8.037555694580078
    8. '(range' → logprob: -8.537555694580078
    9. '[int' → logprob: -8.662555694580078
    10. '(input' → logprob: -8.787555694580078

Token 27: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12114822119474411
    2. '(' → logprob: -2.496148109436035
    3. ')' → logprob: -4.246148109436035
    4. 'input' → logprob: -4.496148109436035
    5. ',input' → logprob: -5.496148109436035
    6. ',' → logprob: -6.496148109436035
    7. ' input' → logprob: -8.496148109436035
    8. '=input' → logprob: -8.746148109436035
    9. '(int' → logprob: -9.246148109436035
    10. '(stdin' → logprob: -10.996148109436035

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01815345324575901
    2. ' input' → logprob: -4.018153667449951
    3. '(input' → logprob: -13.018153190612793
    4. ')' → logprob: -14.268153190612793
    5. ',input' → logprob: -15.143153190612793
    6. ' ' → logprob: -15.768153190612793
    7. '=input' → logprob: -16.01815414428711
    8. '	input' → logprob: -16.26815414428711
    9. '```' → logprob: -17.89315414428711
    10. 'open' → logprob: -18.51815414428711

Token 29: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9414218068122864
    2. ')' → logprob: -1.0664217472076416
    3. '())' → logprob: -1.9414217472076416
    4. '().' → logprob: -2.1914217472076416
    5. '(' → logprob: -4.816421985626221
    6. '());' → logprob: -7.691421985626221
    7. '(()' → logprob: -8.066421508789062
    8. '();)' → logprob: -8.066421508789062
    9. '(),' → logprob: -8.316421508789062
    10. '))' → logprob: -9.191421508789062

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026455431361682713
    2. 'strip' → logprob: -8.250264167785645
    3. 'rstrip' → logprob: -13.375264167785645
    4. '(split' → logprob: -14.000264167785645
    5. ' split' → logprob: -14.750264167785645
    6. ')' → logprob: -15.000264167785645
    7. 'spl' → logprob: -16.00026512145996
    8. 'read' → logprob: -17.00026512145996
    9. '```' → logprob: -18.37526512145996
    10. 'rs' → logprob: -18.75026512145996

Token 31: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01900368556380272
    2. '))' → logprob: -4.144003868103027
    3. '())' → logprob: -5.894003868103027
    4. '()' → logprob: -8.769003868103027
    5. '),' → logprob: -10.644003868103027
    6. '()))' → logprob: -11.894003868103027
    7. '(' → logprob: -12.394003868103027
    8. ')`' → logprob: -12.394003868103027
    9. ')
' → logprob: -13.019003868103027
    10. ')")' → logprob: -13.144003868103027

Token 32: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6652390360832214
    2. 'arr' → logprob: -2.165239095687866
    3. 'result' → logprob: -2.415239095687866
    4. 's' → logprob: -2.415239095687866
    5. 'numbers' → logprob: -3.290239095687866
    6. 'if' → logprob: -3.790239095687866
    7. 'nums' → logprob: -3.915239095687866
    8. 'd' → logprob: -4.290238857269287
    9. 'def' → logprob: -4.415238857269287
    10. 'n' → logprob: -4.665238857269287

Token 33: ' Calcul' (ID: 57243)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3261781930923462
    2. 'def' → logprob: -1.9511781930923462
    3. ' result' → logprob: -2.4511780738830566
    4. 'if' → logprob: -2.7011780738830566
    5. ' def' → logprob: -3.0761780738830566
    6. 'result' → logprob: -3.2011780738830566
    7. ' fact' → logprob: -3.7011780738830566
    8. '#' → logprob: -3.8261780738830566
    9. ' for' → logprob: -3.8261780738830566
    10. 'for' → logprob: -3.8261780738830566

Token 34: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.044998686760663986
    2. 'ating' → logprob: -3.4199986457824707
    3. 'ator' → logprob: -4.544998645782471
    4. 'ated' → logprob: -8.044999122619629
    5. 'ation' → logprob: -8.669999122619629
    6. 'at' → logprob: -9.794999122619629
    7. '#' → logprob: -10.169999122619629
    8. 'e' → logprob: -10.919999122619629
    9. 'a' → logprob: -11.294999122619629
    10. 'uate' → logprob: -11.669999122619629

Token 35: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32101184129714966
    2. '_' → logprob: -1.5710117816925049
    3. '_le' → logprob: -4.071012020111084
    4. ' le' → logprob: -4.196012020111084
    5. ' la' → logprob: -4.571012020111084
    6. '  ' → logprob: -5.071012020111084
    7. ' l' → logprob: -5.821012020111084
    8. 'le' → logprob: -5.946012020111084
    9. '<|end|>' → logprob: -5.946012020111084
    10. 'l' → logprob: -6.946012020111084

Token 36: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3367546498775482
    2. 'nombre' → logprob: -1.3367546796798706
    3. ' produit' → logprob: -5.08675479888916
    4. ' ' → logprob: -5.21175479888916
    5. 's' → logprob: -6.46175479888916
    6. ' facteur' → logprob: -6.71175479888916
    7. '   ' → logprob: -6.83675479888916
    8. 'produ' → logprob: -6.83675479888916
    9. 'maximum' → logprob: -7.58675479888916
    10. ' maximum' → logprob: -7.58675479888916

Token 37: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.41012537479400635
    2. '_' → logprob: -2.285125255584717
    3. ' d' → logprob: -2.285125255584717
    4. 'de' → logprob: -2.660125255584717
    5. 'total' → logprob: -3.660125255584717
    6. ' de' → logprob: -4.410125255584717
    7. '_de' → logprob: -5.160125255584717
    8. ' total' → logprob: -5.410125255584717
    9. '_total' → logprob: -5.410125255584717
    10. ' ' → logprob: -6.035125255584717

Token 38: ' divisions' (ID: 66578)
  Prédit: ' groupes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -1.4131028652191162
    2. ' pages' → logprob: -1.9131028652191162
    3. 'pages' → logprob: -2.038102865219116
    4. ' group' → logprob: -3.163102865219116
    5. ' parts' → logprob: -3.288102865219116
    6. 'group' → logprob: -3.413102865219116
    7. 'pl' → logprob: -3.663102865219116
    8. 'b' → logprob: -3.788102865219116
    9. 'p' → logprob: -4.225603103637695
    10. 's' → logprob: -4.350603103637695

Token 39: ' ent' (ID: 1121)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.4054356813430786
    2. ' nécessaires' → logprob: -1.7804356813430786
    3. '_' → logprob: -2.405435562133789
    4. 'necess' → logprob: -2.780435562133789
    5. 'max' → logprob: -3.030435562133789
    6. 'n' → logprob: -3.530435562133789
    7. 'total' → logprob: -3.530435562133789
    8. 'div' → logprob: -3.655435562133789
    9. ' possibles' → logprob: -3.655435562133789
    10. ' possible' → logprob: -3.780435562133789

Token 40: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.010196933522820473
    2. 'i' → logprob: -5.260197162628174
    3. 'ière' → logprob: -5.510197162628174
    4. 'ti' → logprob: -7.510197162628174
    5. 'ires' → logprob: -9.260196685791016
    6. 'ieres' → logprob: -9.885196685791016
    7. 'iers' → logprob: -10.260196685791016
    8. 't' → logprob: -10.635196685791016
    9. 'ier' → logprob: -10.635196685791016
    10. 'iere' → logprob: -10.635196685791016

Token 41: ' par' (ID: 686)
  Prédit: ' nécessaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -1.2997525930404663
    2. ' =' → logprob: -2.299752712249756
    3. 'n' → logprob: -2.674752712249756
    4. '=' → logprob: -2.924752712249756
    5. 'possible' → logprob: -3.049752712249756
    6. '(' → logprob: -3.174752712249756
    7. 'necessary' → logprob: -3.549752712249756
    8. 'necess' → logprob: -3.674752712249756
    9. 'flo' → logprob: -3.674752712249756
    10. 'max' → logprob: -3.799752712249756

Token 42: ' une' (ID: 2463)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19042149186134338
    2. '2' → logprob: -2.5654215812683105
    3. ' k' → logprob: -2.5654215812683105
    4. '10' → logprob: -4.6904215812683105
    5. ' ' → logprob: -5.3154215812683105
    6. '`' → logprob: -7.1904215812683105
    7. '1' → logprob: -7.1904215812683105
    8. '```' → logprob: -7.5654215812683105
    9. 'n' → logprob: -7.6904215812683105
    10. '100' → logprob: -7.8154215812683105

Token 43: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7975713014602661
    2. '2' → logprob: -0.9225713014602661
    3. ' k' → logprob: -2.2975711822509766
    4. '1' → logprob: -4.422571182250977
    5. '0' → logprob: -4.672571182250977
    6. ' /' → logprob: -5.297571182250977
    7. 'k' → logprob: -5.422571182250977
    8. 'division' → logprob: -6.172571182250977
    9. ' division' → logprob: -6.672571182250977
    10. 'div' → logprob: -6.797571182250977

Token 44: '/' (ID: 14)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9476465582847595
    2. '_' → logprob: -1.1976466178894043
    3. '=' → logprob: -2.5726466178894043
    4. 's' → logprob: -3.1976466178894043
    5. ' ' → logprob: -3.5726466178894043
    6. '(' → logprob: -3.6976466178894043
    7. ' des' → logprob: -4.322646617889404
    8. ' (' → logprob: -4.322646617889404
    9. 'def' → logprob: -4.822646617889404
    10. 'de' → logprob: -4.822646617889404

Token 45: 'produ' (ID: 11634)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -2.2260630130767822
    2. 'flo' → logprob: -2.3510630130767822
    3. 'mul' → logprob: -2.7260630130767822
    4. '/' → logprob: -2.7260630130767822
    5. ' d' → logprob: -2.9760630130767822
    6. 'ceil' → logprob: -3.1010630130767822
    7. ' de' → logprob: -3.2260630130767822
    8. '=' → logprob: -3.3510630130767822
    9. 'n' → logprob: -3.4760630130767822
    10. ' /' → logprob: -3.6010630130767822

Token 46: 'it' (ID: 278)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.5116317868232727
    2. 'cte' → logprob: -1.386631727218628
    3. 'ct' → logprob: -2.011631727218628
    4. 'ce' → logprob: -5.011631965637207
    5. 'ctions' → logprob: -5.386631965637207
    6. '```' → logprob: -6.886631965637207
    7. '#' → logprob: -7.011631965637207
    8. 'te' → logprob: -7.386631965637207
    9. '...' → logprob: -7.886631965637207
    10. 'c' → logprob: -8.011631965637207

Token 47: '/s' (ID: 5031)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6724517345428467
    2. ' =' → logprob: -1.5474517345428467
    3. '=' → logprob: -2.2974517345428467
    4. 's' → logprob: -2.5474517345428467
    5. '(' → logprob: -3.7974517345428467
    6. 'def' → logprob: -4.172451972961426
    7. 'de' → logprob: -5.422451972961426
    8. ' _' → logprob: -5.422451972961426
    9. '_=' → logprob: -5.672451972961426
    10. 'possible' → logprob: -5.797451972961426

Token 48: 'é' (ID: 377)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.3312014043331146
    2. 'e' → logprob: -2.9562013149261475
    3. 'u' → logprob: -2.9562013149261475
    4. 'om' → logprob: -2.9562013149261475
    5. 'um' → logprob: -2.9562013149261475
    6. 'erie' → logprob: -4.331201553344727
    7. '```' → logprob: -4.706201553344727
    8. 's' → logprob: -4.831201553344727
    9. 'é' → logprob: -5.456201553344727
    10. '#' → logprob: -5.456201553344727

Token 49: 'quence' (ID: 6975)
  Prédit: 'rie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rie' → logprob: -0.41965603828430176
    2. 'quence' → logprob: -1.4196560382843018
    3. 'ries' → logprob: -2.4196560382843018
    4. 'par' → logprob: -5.544655799865723
    5. 'quences' → logprob: -5.919655799865723
    6. 'paration' → logprob: -6.669655799865723
    7. 'lection' → logprob: -7.169655799865723
    8. '```' → logprob: -7.419655799865723
    9. 'r' → logprob: -7.544655799865723
    10. 'qu' → logprob: -7.919655799865723

Token 50: ' inutile' (ID: 157748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0849071517586708
    2. ' ' → logprob: -3.709907054901123
    3. ' _' → logprob: -4.084907054901123
    4. 's' → logprob: -4.084907054901123
    5. ' =' → logprob: -5.209907054901123
    6. 'def' → logprob: -5.709907054901123
    7. '(' → logprob: -6.459907054901123
    8. ' \' → logprob: -6.459907054901123
    9. '=' → logprob: -6.709907054901123
    10. ',' → logprob: -6.709907054901123

Token 51: 'ment' (ID: 508)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10563775897026062
    2. '.' → logprob: -3.980637788772583
    3. ' =' → logprob: -4.230637550354004
    4. ',' → logprob: -4.230637550354004
    5. '_' → logprob: -4.980637550354004
    6. '  ' → logprob: -4.980637550354004
    7. ' de' → logprob: -5.230637550354004
    8. ':' → logprob: -5.230637550354004
    9. 'n' → logprob: -5.480637550354004
    10. 's' → logprob: -5.730637550354004

Token 52: ' complexe' (ID: 78615)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41878578066825867
    2. 's' → logprob: -2.918785810470581
    3. ' de' → logprob: -3.043785810470581
    4. ',' → logprob: -3.543785810470581
    5. ' ,' → logprob: -3.668785810470581
    6. ' d' → logprob: -3.793785810470581
    7. ':' → logprob: -4.043785572052002
    8. ' :' → logprob: -4.168785572052002
    9. '.' → logprob: -4.418785572052002
    10. 'n' → logprob: -4.668785572052002

Token 53: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5512474179267883
    2. ' =' → logprob: -2.0512473583221436
    3. '_' → logprob: -3.1762473583221436
    4. ',' → logprob: -3.5512473583221436
    5. 's' → logprob: -3.5512473583221436
    6. '.' → logprob: -3.5512473583221436
    7. '=' → logprob: -3.6762473583221436
    8. ' :' → logprob: -3.6762473583221436
    9. 'n' → logprob: -3.8012473583221436
    10. 'def' → logprob: -4.301247596740723

Token 54: 'o' (ID: 78)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0608620643615723
    2. 's' → logprob: -1.4358620643615723
    3. 'result' → logprob: -1.8108620643615723
    4. 'def' → logprob: -3.3108620643615723
    5. 'n' → logprob: -3.4358620643615723
    6. ',' → logprob: -3.5608620643615723
    7. 'div' → logprob: -3.6858620643615723
    8. 'd' → logprob: -4.060862064361572
    9. ':' → logprob: -4.185862064361572
    10. '#' → logprob: -4.435862064361572

Token 55: ' =' (ID: 314)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.4127177894115448
    2. 'p' → logprob: -1.4127178192138672
    3. '=' → logprob: -3.162717819213867
    4. ' =' → logprob: -4.162717819213867
    5. 'u' → logprob: -4.537717819213867
    6. 'b' → logprob: -4.912717819213867
    7. 'f' → logprob: -5.787717819213867
    8. 'ptions' → logprob: -6.037717819213867
    9. 'bj' → logprob: -6.287717819213867
    10. 'pt' → logprob: -6.537717819213867

Token 56: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.324356198310852
    2. 'flo' → logprob: -1.574356198310852
    3. ' reduce' → logprob: -2.0743560791015625
    4. ' n' → logprob: -2.8243560791015625
    5. '(n' → logprob: -2.9493560791015625
    6. 'n' → logprob: -2.9493560791015625
    7. 'ceil' → logprob: -3.1993560791015625
    8. ' ceil' → logprob: -3.4493560791015625
    9. ' flo' → logprob: -3.6993560791015625
    10. 'sum' → logprob: -3.8243560791015625

Token 57: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31379246711730957
    2. '(f' → logprob: -1.8137924671173096
    3. '(add' → logprob: -3.1887924671173096
    4. '(m' → logprob: -3.3137924671173096
    5. '(lambda' → logprob: -3.5637924671173096
    6. '(operator' → logprob: -8.81379222869873
    7. ' (' → logprob: -10.18879222869873
    8. '(o' → logprob: -10.31379222869873
    9. '(
' → logprob: -10.31379222869873
    10. '(s' → logprob: -10.68879222869873

Token 58: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.969301700592041
    2. ' add' → logprob: -1.094301700592041
    3. ' a' → logprob: -2.719301700592041
    4. ' lambda' → logprob: -3.094301700592041
    5. ' mul' → logprob: -3.094301700592041
    6. ' acc' → logprob: -3.344301700592041
    7. ' flo' → logprob: -3.969301700592041
    8. ' ' → logprob: -4.219301700592041
    9. ' o' → logprob: -4.344301700592041
    10. ',' → logprob: -4.469301700592041

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000639765290543437
    2. ' ,' → logprob: -7.750639915466309
    3. ',b' → logprob: -9.125639915466309
    4. ',f' → logprob: -11.125639915466309
    5. ',k' → logprob: -11.625639915466309
    6. ',a' → logprob: -11.750639915466309
    7. 'a' → logprob: -11.750639915466309
    8. ',x' → logprob: -12.000639915466309
    9. ',o' → logprob: -12.188139915466309
    10. ',n' → logprob: -12.375639915466309

Token 60: ' f' (ID: 285)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.11300598084926605
    2. 'b' → logprob: -2.2380058765411377
    3. ' ' → logprob: -9.613005638122559
    4. ' x' → logprob: -10.238005638122559
    5. ' c' → logprob: -11.113005638122559
    6. 'x' → logprob: -11.488005638122559
    7. ' i' → logprob: -11.988005638122559
    8. 'c' → logprob: -12.425505638122559
    9. ',' → logprob: -12.425505638122559
    10. ' t' → logprob: -12.488005638122559

Token 61: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02160712517797947
    2. ':' → logprob: -3.8966071605682373
    3. 'unction' → logprob: -7.771606922149658
    4. ' :' → logprob: -8.396607398986816
    5. 'unc' → logprob: -9.146607398986816
    6. ',f' → logprob: -9.646607398986816
    7. ' ,' → logprob: -9.771607398986816
    8. 'l' → logprob: -11.396607398986816
    9. ',:' → logprob: -11.396607398986816
    10. 'a' → logprob: -11.396607398986816

Token 62: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.32736214995384216
    2. 'f' → logprob: -1.3273621797561646
    3. 'flo' → logprob: -5.077362060546875
    4. ' flo' → logprob: -6.202362060546875
    5. ' a' → logprob: -6.452362060546875
    6. 'a' → logprob: -6.702362060546875
    7. '(f' → logprob: -6.827362060546875
    8. ' lambda' → logprob: -7.764862060546875
    9. 'lambda' → logprob: -8.389862060546875
    10. ' (' → logprob: -8.889862060546875

Token 63: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8142650723457336
    2. '(o' → logprob: -0.9392650723457336
    3. '(' → logprob: -2.689265012741089
    4. '(lambda' → logprob: -3.564265012741089
    5. '(add' → logprob: -3.814265012741089
    6. '(n' → logprob: -3.939265012741089
    7. ',' → logprob: -4.189265251159668
    8. '(f' → logprob: -5.064265251159668
    9. ' (' → logprob: -6.314265251159668
    10. '(m' → logprob: -7.189265251159668

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008854820393025875
    2. ' ,' → logprob: -5.508854866027832
    3. '),' → logprob: -6.258854866027832
    4. ',n' → logprob: -7.008854866027832
    5. ',k' → logprob: -7.883854866027832
    6. '//' → logprob: -8.508854866027832
    7. '(n' → logprob: -8.508854866027832
    8. 'k' → logprob: -8.883854866027832
    9. '[n' → logprob: -8.883854866027832
    10. ' ),' → logprob: -9.008854866027832

Token 65: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6487518548965454
    2. ' n' → logprob: -1.1487518548965454
    3. 'k' → logprob: -2.398751735687256
    4. 'n' → logprob: -3.398751735687256
    5. ' ' → logprob: -4.273751735687256
    6. '1' → logprob: -5.398751735687256
    7. ' ceil' → logprob: -5.648751735687256
    8. ' o' → logprob: -5.773751735687256
    9. ' lambda' → logprob: -5.773751735687256
    10. '2' → logprob: -6.648751735687256

Token 66: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.012553099542856216
    2. ')' → logprob: -4.7625532150268555
    3. ' ),' → logprob: -6.0125532150268555
    4. '//' → logprob: -6.8875532150268555
    5. ' //' → logprob: -8.387553215026855
    6. ',' → logprob: -10.262553215026855
    7. ')//' → logprob: -10.637553215026855
    8. '*' → logprob: -10.637553215026855
    9. ' ' → logprob: -11.012553215026855
    10. '**' → logprob: -11.137553215026855

Token 67: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1660754680633545
    2. '[' → logprob: -1.9160754680633545
    3. ' (' → logprob: -5.666075706481934
    4. '[n' → logprob: -7.291075706481934
    5. '[k' → logprob: -8.166075706481934
    6. '[m' → logprob: -8.291075706481934
    7. '[o' → logprob: -8.666075706481934
    8. '(' → logprob: -8.791075706481934
    9. '[f' → logprob: -8.916075706481934
    10. '[int' → logprob: -9.416075706481934

Token 68: 'flo' (ID: 174761)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.7541207075119019
    2. 'add' → logprob: -1.7541207075119019
    3. 'flo' → logprob: -1.7541207075119019
    4. ' flo' → logprob: -2.7541208267211914
    5. 'mul' → logprob: -3.1291208267211914
    6. ' mul' → logprob: -3.3791208267211914
    7. ' lambda' → logprob: -4.504120826721191
    8. ' ceil' → logprob: -5.004120826721191
    9. 'lambda' → logprob: -5.129120826721191
    10. ' ' → logprob: -5.379120826721191

Token 69: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0007106438861228526
    2. 'rd' → logprob: -7.500710487365723
    3. 'r' → logprob: -9.375710487365723
    4. 'or' → logprob: -9.875710487365723
    5. ' ord' → logprob: -13.000710487365723
    6. 'ordi' → logprob: -13.250710487365723
    7. '(ord' → logprob: -13.375710487365723
    8. 'ird' → logprob: -13.500710487365723
    9. '_ord' → logprob: -13.750710487365723
    10. 'ard' → logprob: -13.750710487365723

Token 70: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.000580792548134923
    2. 'div' → logprob: -7.500580787658691
    3. 'v' → logprob: -11.000580787658691
    4. ' div' → logprob: -12.500580787658691
    5. 'i' → logprob: -13.500580787658691
    6. ' iv' → logprob: -13.625580787658691
    7. 'vi' → logprob: -13.875580787658691
    8. 'Div' → logprob: -14.000580787658691
    9. ')' → logprob: -14.875580787658691
    10. '_div' → logprob: -15.250580787658691

Token 71: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007779348641633987
    2. ' ,' → logprob: -4.882779121398926
    3. ']' → logprob: -10.007779121398926
    4. ' ' → logprob: -10.132779121398926
    5. ',n' → logprob: -11.007779121398926
    6. ')' → logprob: -11.132779121398926
    7. '(n' → logprob: -11.757779121398926
    8. '(' → logprob: -11.757779121398926
    9. '(o' → logprob: -12.507779121398926
    10. ',k' → logprob: -12.507779121398926

Token 72: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5807303786277771
    2. '2' → logprob: -1.2057304382324219
    3. '3' → logprob: -2.080730438232422
    4. '1' → logprob: -4.955730438232422
    5. '(n' → logprob: -5.955730438232422
    6. '4' → logprob: -6.080730438232422
    7. 'o' → logprob: -6.830730438232422
    8. '(' → logprob: -6.955730438232422
    9. ' n' → logprob: -7.580730438232422
    10. 'k' → logprob: -7.830730438232422

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02834671176970005
    2. ')' → logprob: -3.6533467769622803
    3. ' ,' → logprob: -7.278346538543701
    4. ',)' → logprob: -7.653346538543701
    5. '),' → logprob: -8.15334701538086
    6. ']' → logprob: -8.65334701538086
    7. ' )' → logprob: -9.27834701538086
    8. '])' → logprob: -9.52834701538086
    9. '],' → logprob: -10.27834701538086
    10. '`,' → logprob: -10.65334701538086

Token 74: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014211451634764671
    2. ' n' → logprob: -4.264211654663086
    3. 'ceil' → logprob: -11.264211654663086
    4. ' ' → logprob: -11.264211654663086
    5. ')n' → logprob: -11.764211654663086
    6. ')' → logprob: -12.139211654663086
    7. '(n' → logprob: -12.639211654663086
    8. '  ' → logprob: -13.889211654663086
    9. '    ' → logprob: -14.014211654663086
    10. ' ceil' → logprob: -14.139211654663086

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012190054985694587
    2. ' )' → logprob: -9.1251220703125
    3. ')
' → logprob: -11.8751220703125
    4. ')n' → logprob: -13.1251220703125
    5. '+' → logprob: -14.2501220703125
    6. '))' → logprob: -14.5001220703125
    7. ')

' → logprob: -14.6251220703125
    8. ',' → logprob: -14.8751220703125
    9. ')`' → logprob: -15.0001220703125
    10. '),' → logprob: -15.2501220703125

Token 76: 'p' (ID: 79)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011796909384429455
    2. '<|end|>' → logprob: -5.261796951293945
    3. '(' → logprob: -5.761796951293945
    4. ' ' → logprob: -6.886796951293945
    5. ' )' → logprob: -7.511796951293945
    6. '(n' → logprob: -8.136796951293945
    7. '
' → logprob: -8.261796951293945
    8. '```' → logprob: -8.511796951293945
    9. '*' → logprob: -9.261796951293945
    10. '[' → logprob: -9.386796951293945

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23430725932121277
    2. '=' → logprob: -2.234307289123535
    3. ',' → logprob: -2.359307289123535
    4. 'r' → logprob: -5.109307289123535
    5. ' ' → logprob: -8.484307289123535
    6. 'ro' → logprob: -8.734307289123535
    7. ' ,' → logprob: -8.859307289123535
    8. ',r' → logprob: -8.984307289123535
    9. '_' → logprob: -9.609307289123535
    10. ')' → logprob: -10.109307289123535

Token 78: ' ' (ID: 220)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.8572733998298645
    2. ' reduce' → logprob: -1.1072733402252197
    3. ' ceil' → logprob: -2.2322733402252197
    4. 'ceil' → logprob: -2.4822733402252197
    5. 'mul' → logprob: -3.6072733402252197
    6. ' mul' → logprob: -4.607273578643799
    7. ' n' → logprob: -5.607273578643799
    8. 'flo' → logprob: -6.107273578643799
    9. 'n' → logprob: -6.607273578643799
    10. 'pow' → logprob: -6.982273578643799

Token 79: '0' (ID: 15)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.07449029386043549
    2. 'ceil' → logprob: -2.8244903087615967
    3. 'mul' → logprob: -4.824490070343018
    4. ' reduce' → logprob: -6.824490070343018
    5. 'flo' → logprob: -7.199490070343018
    6. 'pow' → logprob: -7.574490070343018
    7. 'n' → logprob: -8.074490547180176
    8. 'lambda' → logprob: -8.449490547180176
    9. 'add' → logprob: -8.574490547180176
    10. '1' → logprob: -8.949490547180176

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6919599771499634
    2. '<|end|>' → logprob: -1.0669599771499634
    3. ' ' → logprob: -3.191959857940674
    4. 'for' → logprob: -3.316959857940674
    5. '
' → logprob: -4.066959857940674
    6. ')' → logprob: -4.191959857940674
    7. '#' → logprob: -5.066959857940674
    8. 'while' → logprob: -5.066959857940674
    9. ':' → logprob: -5.316959857940674
    10. ' for' → logprob: -5.566959857940674

Token 82: ' not' (ID: 625)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5769636034965515
    2. ' o' → logprob: -0.9519636034965515
    3. 'n' → logprob: -3.5769636631011963
    4. 'o' → logprob: -4.451963424682617
    5. ' p' → logprob: -5.076963424682617
    6. ' k' → logprob: -5.576963424682617
    7. ' ' → logprob: -6.576963424682617
    8. 'k' → logprob: -7.326963424682617
    9. 'p' → logprob: -7.576963424682617
    10. ' (' → logprob: -9.826963424682617

Token 83: ' bool' (ID: 3792)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6967585682868958
    2. ' o' → logprob: -1.821758508682251
    3. ' (' → logprob: -1.821758508682251
    4. ' p' → logprob: -2.696758508682251
    5. ' k' → logprob: -2.821758508682251
    6. 'n' → logprob: -4.44675874710083
    7. '(n' → logprob: -4.69675874710083
    8. '(o' → logprob: -4.82175874710083
    9. '(' → logprob: -5.32175874710083
    10. '(p' → logprob: -5.57175874710083

Token 84: '(k' (ID: 12125)
  Prédit: '(o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -1.0043160915374756
    2. '(n' → logprob: -1.1293160915374756
    3. '(' → logprob: -1.6293160915374756
    4. '(k' → logprob: -2.6293160915374756
    5. '(p' → logprob: -3.8793160915374756
    6. '((' → logprob: -4.129316329956055
    7. ' (' → logprob: -5.754316329956055
    8. '(f' → logprob: -6.879316329956055
    9. '(s' → logprob: -8.004316329956055
    10. '(
' → logprob: -8.754316329956055

Token 85: ' %' (ID: 1851)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10804421454668045
    2. ' ):' → logprob: -2.733044147491455
    3. ')' → logprob: -3.983044147491455
    4. '-' → logprob: -5.358044147491455
    5. '%' → logprob: -5.608044147491455
    6. '==' → logprob: -5.858044147491455
    7. ' -' → logprob: -5.983044147491455
    8. '):
' → logprob: -6.608044147491455
    9. ' ==' → logprob: -6.858044147491455
    10. ' %' → logprob: -7.108044147491455

Token 86: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22411909699440002
    2. ' ' → logprob: -1.8491190671920776
    3. 'n' → logprob: -3.849119186401367
    4. ' n' → logprob: -4.849119186401367
    5. '1' → logprob: -5.599119186401367
    6. '3' → logprob: -5.724119186401367
    7. 'o' → logprob: -5.974119186401367
    8. ' o' → logprob: -6.349119186401367
    9. '  ' → logprob: -7.349119186401367
    10. 'k' → logprob: -7.974119186401367

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.37543928623199463
    2. 'n' → logprob: -1.3754392862319946
    3. '1' → logprob: -3.250439167022705
    4. 'o' → logprob: -5.250439167022705
    5. '3' → logprob: -5.375439167022705
    6. 'k' → logprob: -5.375439167022705
    7. ' ' → logprob: -5.875439167022705
    8. '10' → logprob: -7.000439167022705
    9. '4' → logprob: -7.625439167022705
    10. '5' → logprob: -7.750439167022705

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04787512496113777
    2. ')' → logprob: -3.797875165939331
    3. ' ):' → logprob: -3.797875165939331
    4. '):
' → logprob: -6.547874927520752
    5. ' )' → logprob: -8.29787540435791
    6. ':' → logprob: -9.42287540435791
    7. ' ):
' → logprob: -10.17287540435791
    8. '):

' → logprob: -10.92287540435791
    9. ')==' → logprob: -11.17287540435791
    10. ' :' → logprob: -11.54787540435791

Token 89: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4504840075969696
    2. ' :' → logprob: -1.575484037399292
    3. '   ' → logprob: -2.075484037399292
    4. ' p' → logprob: -4.575483798980713
    5. ':
' → logprob: -5.700483798980713
    6. 'p' → logprob: -5.825483798980713
    7. ' :
' → logprob: -5.825483798980713
    8. ' ' → logprob: -5.950483798980713
    9. '    ' → logprob: -6.450483798980713
    10. '
' → logprob: -6.950483798980713

Token 90: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10955255478620529
    2. ' :' → logprob: -3.7345526218414307
    3. ':' → logprob: -3.8595526218414307
    4. 'p' → logprob: -3.9845526218414307
    5. ' :
' → logprob: -4.234552383422852
    6. ' ' → logprob: -4.984552383422852
    7. ' n' → logprob: -5.484552383422852
    8. '   ' → logprob: -5.484552383422852
    9. '    ' → logprob: -5.984552383422852
    10. ' k' → logprob: -6.109552383422852

Token 91: ' Util' (ID: 13564)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0316774882376194
    2. 'p' → logprob: -3.656677484512329
    3. ' ' → logprob: -6.531677722930908
    4. '   ' → logprob: -6.531677722930908
    5. ' o' → logprob: -7.656677722930908
    6. ' if' → logprob: -7.781677722930908
    7. ' n' → logprob: -8.28167724609375
    8. '    ' → logprob: -8.53167724609375
    9. ' for' → logprob: -8.65667724609375
    10. ' k' → logprob: -8.78167724609375

Token 92: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.03949078544974327
    2. 'ser' → logprob: -3.2894906997680664
    3. 's' → logprob: -7.539490699768066
    4. 'er' → logprob: -7.914490699768066
    5. '#' → logprob: -9.289490699768066
    6. 'se' → logprob: -9.414490699768066
    7. 'isateur' → logprob: -9.414490699768066
    8. '   ' → logprob: -9.914490699768066
    9. 'ise' → logprob: -10.039490699768066
    10. 'isez' → logprob: -10.664490699768066

Token 93: ' map' (ID: 4014)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mul' → logprob: -1.5676460266113281
    2. ' ceil' → logprob: -1.6926460266113281
    3. ' p' → logprob: -1.9426460266113281
    4. 'mul' → logprob: -1.9426460266113281
    5. ' add' → logprob: -2.192646026611328
    6. ' k' → logprob: -2.817646026611328
    7. 'ceil' → logprob: -4.067646026611328
    8. ' n' → logprob: -4.067646026611328
    9. ' ' → logprob: -4.317646026611328
    10. ' reduce' → logprob: -4.442646026611328

Token 94: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10957285016775131
    2. '(
' → logprob: -2.9845728874206543
    3. '(lambda' → logprob: -3.2345728874206543
    4. '(add' → logprob: -5.859572887420654
    5. ' (' → logprob: -6.234572887420654
    6. '(map' → logprob: -6.359572887420654
    7. '(f' → logprob: -6.484572887420654
    8. '(p' → logprob: -7.109572887420654
    9. ',' → logprob: -7.484572887420654
    10. '   ' → logprob: -7.734572887420654

Token 95: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.1357423961162567
    2. 'lambda' → logprob: -3.385742425918579
    3. ' filter' → logprob: -3.385742425918579
    4. ' reduce' → logprob: -4.1357421875
    5. ' list' → logprob: -4.5107421875
    6. ' sum' → logprob: -4.6357421875
    7. ' p' → logprob: -5.1357421875
    8. ' o' → logprob: -5.6357421875
    9. 'filter' → logprob: -6.0107421875
    10. 'reduce' → logprob: -6.2607421875

Token 96: ' et' (ID: 859)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3944099545478821
    2. '(' → logprob: -1.5194098949432373
    3. ',' → logprob: -3.1444098949432373
    4. '(p' → logprob: -3.5194098949432373
    5. '(
' → logprob: -4.894410133361816
    6. '(map' → logprob: -5.519410133361816
    7. ' (' → logprob: -5.769410133361816
    8. ':' → logprob: -5.894410133361816
    9. '   ' → logprob: -5.894410133361816
    10. 'map' → logprob: -6.144410133361816

Token 97: ' sum' (ID: 4215)
  Prédit: ' filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' filter' → logprob: -0.7240007519721985
    2. 'filter' → logprob: -1.2240006923675537
    3. ' list' → logprob: -2.4740006923675537
    4. ' reduce' → logprob: -2.5990006923675537
    5. 'reduce' → logprob: -3.3490006923675537
    6. 'list' → logprob: -4.099000930786133
    7. ' sum' → logprob: -6.224000930786133
    8. ' all' → logprob: -6.974000930786133
    9. ' lambda' → logprob: -6.974000930786133
    10. 'sum' → logprob: -7.099000930786133

Token 98: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8215392827987671
    2. '(map' → logprob: -1.196539282798767
    3. '(lambda' → logprob: -2.4465394020080566
    4. '   ' → logprob: -3.1965394020080566
    5. ':' → logprob: -3.3215394020080566
    6. '(p' → logprob: -3.3215394020080566
    7. '(
' → logprob: -3.6965394020080566
    8. ',' → logprob: -4.571539402008057
    9. 'map' → logprob: -5.696539402008057
    10. ' for' → logprob: -5.821539402008057

Token 99: ' sim' (ID: 1845)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6332806944847107
    2. 'p' → logprob: -0.7582806944847107
    3. '   ' → logprob: -8.508280754089355
    4. 'o' → logprob: -9.883280754089355
    5. 'print' → logprob: -10.258280754089355
    6. ' o' → logprob: -10.383280754089355
    7. '(p' → logprob: -10.508280754089355
    8. 'sum' → logprob: -10.508280754089355
    9. 's' → logprob: -10.758280754089355
    10. ' calculate' → logprob: -10.758280754089355

Token 100: 'uler' (ID: 11802)
  Prédit: 'pler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pler' → logprob: -0.3645670413970947
    2. 'p' → logprob: -2.7395670413970947
    3. 'ple' → logprob: -2.7395670413970947
    4. 'uler' → logprob: -2.8645670413970947
    5. 'pl' → logprob: -4.114566802978516
    6. 'ply' → logprob: -4.364566802978516
    7. 'ulate' → logprob: -4.489566802978516
    8. 'mer' → logprob: -4.489566802978516
    9. 'plier' → logprob: -4.864566802978516
    10. 'er' → logprob: -4.989566802978516

Token 101: ' la' (ID: 557)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.5990172624588013
    2. 'sum' → logprob: -1.7240172624588013
    3. 'range' → logprob: -2.3490171432495117
    4. '(lambda' → logprob: -2.3490171432495117
    5. '(' → logprob: -2.9740171432495117
    6. '   ' → logprob: -3.0990171432495117
    7. '(sum' → logprob: -3.0990171432495117
    8. 'reduce' → logprob: -3.0990171432495117
    9. ' map' → logprob: -3.2240171432495117
    10. 'map' → logprob: -3.3490171432495117

Token 102: ' division' (ID: 21629)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.282784104347229
    2. 'sum' → logprob: -1.407784104347229
    3. 'division' → logprob: -2.1577839851379395
    4. 'multip' → logprob: -2.2827839851379395
    5. 'div' → logprob: -2.6577839851379395
    6. 'range' → logprob: -3.1577839851379395
    7. 's' → logprob: -3.7827839851379395
    8. 're' → logprob: -4.6577839851379395
    9. 'product' → logprob: -4.6577839851379395
    10. 'ré' → logprob: -4.7827839851379395

Token 103: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49730533361434937
    2. '   ' → logprob: -1.6223053932189941
    3. '(
' → logprob: -2.747305393218994
    4. '(n' → logprob: -3.247305393218994
    5. ':' → logprob: -3.872305393218994
    6. ' (' → logprob: -4.247305393218994
    7. ',' → logprob: -4.872305393218994
    8. ' =' → logprob: -4.997305393218994
    9. '(k' → logprob: -5.247305393218994
    10. '(p' → logprob: -5.247305393218994

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7358908653259277
    2. ' p' → logprob: -1.9858908653259277
    3. ':' → logprob: -2.3608908653259277
    4. 'p' → logprob: -2.4858908653259277
    5. '(' → logprob: -2.8608908653259277
    6. '(p' → logprob: -2.8608908653259277
    7. ',' → logprob: -4.610890865325928
    8. ' :' → logprob: -4.860890865325928
    9. '(
' → logprob: -4.985890865325928
    10. ' n' → logprob: -5.110890865325928

Token 105: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31893834471702576
    2. ' p' → logprob: -1.4439383745193481
    3. '   ' → logprob: -3.6939382553100586
    4. 'result' → logprob: -6.318938255310059
    5. 'o' → logprob: -6.818938255310059
    6. 's' (adapté à ' s') → logprob: -6.943938255310059
    7. ' o' → logprob: -6.943938255310059
    8. ' res' → logprob: -7.193938255310059
    9. ' result' → logprob: -7.443938255310059
    10. 'res' → logprob: -7.443938255310059

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024576924741268158
    2. '=' → logprob: -3.7745769023895264
    3. ' ' → logprob: -6.8995771408081055
    4. 'um' → logprob: -9.274577140808105
    5. '   ' → logprob: -9.524577140808105
    6. '_' → logprob: -9.774577140808105
    7. '    ' → logprob: -11.149577140808105
    8. ' ' → logprob: -11.149577140808105
    9. ' =(' → logprob: -11.399577140808105
    10. ',' → logprob: -12.024577140808105

Token 107: ' list' (ID: 1562)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.34883028268814087
    2. 'sum' → logprob: -1.223830223083496
    3. '   ' → logprob: -9.098830223083496
    4. ' reduce' → logprob: -9.973830223083496
    5. 'reduce' → logprob: -9.973830223083496
    6. ' ' → logprob: -10.598830223083496
    7. '    ' → logprob: -10.848830223083496
    8. ' n' → logprob: -10.973830223083496
    9. ' map' → logprob: -11.098830223083496
    10. 'int' → logprob: -11.223830223083496

Token 108: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.007636439986526966
    2. '(' → logprob: -4.882636547088623
    3. '(
' → logprob: -10.882636070251465
    4. '   ' → logprob: -12.632636070251465
    5. '(range' → logprob: -12.757636070251465
    6. '(filter' → logprob: -13.132636070251465
    7. '(m' → logprob: -13.632636070251465
    8. ' (' → logprob: -15.132636070251465
    9. ' ' → logprob: -15.257636070251465
    10. 'map' → logprob: -15.257636070251465

Token 109: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.023802295327186584
    2. '(' → logprob: -3.7738022804260254
    3. '(f' → logprob: -8.023802757263184
    4. ' (' → logprob: -9.273802757263184
    5. '(int' → logprob: -9.523802757263184
    6. '   ' → logprob: -11.273802757263184
    7. '(abs' → logprob: -11.648802757263184
    8. '((' → logprob: -11.773802757263184
    9. '(float' → logprob: -11.898802757263184
    10. '(
' → logprob: -12.023802757263184

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002823181450366974
    2. ',input' → logprob: -6.502823352813721
    3. 'input' → logprob: -7.877823352813721
    4. '(lambda' → logprob: -7.877823352813721
    5. ' ,' → logprob: -8.877822875976562
    6. 'lambda' → logprob: -9.377822875976562
    7. '(input' → logprob: -9.502822875976562
    8. ',str' → logprob: -9.877822875976562
    9. '(str' → logprob: -10.252822875976562
    10. '(' → logprob: -10.252822875976562

Token 111: ' [' (ID: 723)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.36752915382385254
    2. 'lambda' → logprob: -1.9925291538238525
    3. 'input' → logprob: -2.4925291538238525
    4. ' str' → logprob: -3.6175291538238525
    5. 'range' → logprob: -3.6175291538238525
    6. 'list' → logprob: -4.367528915405273
    7. 'bin' → logprob: -5.367528915405273
    8. ' lambda' → logprob: -5.617528915405273
    9. ' input' → logprob: -5.992528915405273
    10. '(str' → logprob: -6.492528915405273

Token 112: 'n' (ID: 77)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6719735860824585
    2. 'x' → logprob: -1.4219735860824585
    3. 'char' → logprob: -2.296973705291748
    4. '*' → logprob: -3.546973705291748
    5. 'i' → logprob: -3.671973705291748
    6. 'd' → logprob: -3.796973705291748
    7. 'str' → logprob: -4.046973705291748
    8. 'input' → logprob: -4.546973705291748
    9. 'ch' → logprob: -4.546973705291748
    10. '_' → logprob: -4.921973705291748

Token 113: ',' (ID: 11)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6128791570663452
    2. ' //' → logprob: -1.6128791570663452
    3. '/' → logprob: -2.9878792762756348
    4. ' /' → logprob: -3.1128792762756348
    5. ']' → logprob: -3.3628792762756348
    6. '/f' → logprob: -3.4878792762756348
    7. '/k' → logprob: -3.4878792762756348
    8. '/i' → logprob: -4.112879276275635
    9. ' ' → logprob: -4.862879276275635
    10. ',' → logprob: -5.237879276275635

Token 114: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9970813393592834
    2. 'k' → logprob: -1.2470812797546387
    3. ' n' → logprob: -2.4970812797546387
    4. ''' → logprob: -2.4970812797546387
    5. ' '' → logprob: -2.8720812797546387
    6. 'n' → logprob: -3.3720812797546387
    7. ' '/',' → logprob: -4.497081279754639
    8. '"' → logprob: -4.872081279754639
    9. 'str' → logprob: -4.872081279754639
    10. ' (' → logprob: -4.872081279754639

Token 115: ' //' (ID: 602)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.3856968879699707
    2. '//' → logprob: -1.7606968879699707
    3. ']))
' → logprob: -3.0106968879699707
    4. '-' → logprob: -3.5106968879699707
    5. ']' → logprob: -3.5106968879699707
    6. ' //' → logprob: -4.010696887969971
    7. ',' → logprob: -5.135696887969971
    8. ' -' → logprob: -6.510696887969971
    9. ']))

' → logprob: -6.760696887969971
    10. '/n' → logprob: -6.885696887969971

Token 116: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.043310996145009995
    2. ' ' → logprob: -3.1683108806610107
    3. '1' → logprob: -9.41831111907959
    4. 'k' → logprob: -9.91831111907959
    5. '  ' → logprob: -10.79331111907959
    6. '])' → logprob: -10.91831111907959
    7. ' k' → logprob: -11.16831111907959
    8. 's' → logprob: -11.29331111907959
    9. '3' → logprob: -11.60581111907959
    10. 'n' → logprob: -11.79331111907959

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015381926205009222
    2. ' ' → logprob: -6.751538276672363
    3. '1' → logprob: -8.876538276672363
    4. 'k' → logprob: -9.001538276672363
    5. 's' → logprob: -11.001538276672363
    6. 'n' → logprob: -11.251538276672363
    7. '3' → logprob: -11.251538276672363
    8. 'p' → logprob: -11.376538276672363
    9. '0' → logprob: -11.876538276672363
    10. '4' → logprob: -12.001538276672363

Token 118: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.016485437750816345
    2. ',' → logprob: -4.891485214233398
    3. ']' → logprob: -5.391485214233398
    4. '])))' → logprob: -5.891485214233398
    5. ']))
' → logprob: -7.266485214233398
    6. ' ]' → logprob: -7.766485214233398
    7. ']))

' → logprob: -9.391485214233398
    8. ' ,' → logprob: -9.891485214233398
    9. '   ' → logprob: -10.141485214233398
    10. '],' → logprob: -10.391485214233398

Token 119: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031279250979423523
    2. ')
' → logprob: -6.1281280517578125
    3. ' )' → logprob: -8.378128051757812
    4. '[' → logprob: -8.378128051757812
    5. '))' → logprob: -8.503128051757812
    6. '   ' → logprob: -9.503128051757812
    7. ')))' → logprob: -10.003128051757812
    8. ')

' → logprob: -10.503128051757812
    9. 's' → logprob: -11.003128051757812
    10. ' ' → logprob: -11.128128051757812

Token 120: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.6667251586914062
    2. ')' → logprob: -1.1667251586914062
    3. ' p' → logprob: -2.2917251586914062
    4. '   ' → logprob: -3.5417251586914062
    5. 's' → logprob: -4.166725158691406
    6. ')
' → logprob: -4.666725158691406
    7. 'sum' → logprob: -5.041725158691406
    8. ',' → logprob: -6.166725158691406
    9. ' s' → logprob: -6.666725158691406
    10. ' )' → logprob: -6.791725158691406

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5334919691085815
    2. ' +=' → logprob: -1.1584919691085815
    3. '=' → logprob: -2.533492088317871
    4. '+=' → logprob: -3.908492088317871
    5. ' ' → logprob: -11.283492088317871
    6. '+' → logprob: -12.158492088317871
    7. ',' → logprob: -12.283492088317871
    8. ' ' → logprob: -12.908492088317871
    9. ' +' → logprob: -13.033492088317871
    10. '+=(' → logprob: -13.658492088317871

Token 122: ' reduce' (ID: 10389)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.06854410469532013
    2. 'sum' → logprob: -2.8185441493988037
    3. ' reduce' → logprob: -5.943543910980225
    4. ' ceil' → logprob: -7.068543910980225
    5. ' s' → logprob: -7.193543910980225
    6. ' n' → logprob: -7.443543910980225
    7. ' (' → logprob: -7.943543910980225
    8. 's' → logprob: -7.943543910980225
    9. 'reduce' → logprob: -8.068544387817383
    10. '(sum' → logprob: -8.443544387817383

Token 123: '(lambda' (ID: 43341)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.3306966722011566
    2. '(lambda' → logprob: -1.330696702003479
    3. '(' → logprob: -4.0806965827941895
    4. '(operator' → logprob: -8.705697059631348
    5. '(m' → logprob: -8.955697059631348
    6. ' (' → logprob: -10.580697059631348
    7. 'add' → logprob: -10.705697059631348
    8. '((' → logprob: -11.455697059631348
    9. '(s' → logprob: -11.830697059631348
    10. '```' → logprob: -12.330697059631348

Token 124: ' x' (ID: 1215)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.02983737923204899
    2. ' lambda' → logprob: -3.9048373699188232
    3. 'add' → logprob: -5.404837608337402
    4. ' a' → logprob: -6.529837608337402
    5. 'lambda' → logprob: -6.654837608337402
    6. '(lambda' → logprob: -7.779837608337402
    7. '(add' → logprob: -8.154837608337402
    8. ' ' → logprob: -8.404837608337402
    9. ',' → logprob: -8.529837608337402
    10. '   ' → logprob: -8.779837608337402

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020509003661572933
    2. ' ,' → logprob: -9.000205039978027
    3. 'a' → logprob: -10.250205039978027
    4. ',x' → logprob: -11.250205039978027
    5. ',a' → logprob: -11.875205039978027
    6. 'x' → logprob: -11.875205039978027
    7. 'add' → logprob: -12.750205039978027
    8. ',m' → logprob: -12.875205039978027
    9. ',y' → logprob: -13.375205039978027
    10. '   ' → logprob: -13.500205039978027

Token 126: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09407176822423935
    2. 'add' → logprob: -2.969071865081787
    3. ' y' → logprob: -3.594071865081787
    4. 'lambda' → logprob: -5.844071865081787
    5. ' add' → logprob: -5.969071865081787
    6. 'x' → logprob: -6.094071865081787
    7. 'a' → logprob: -6.469071865081787
    8. 'f' → logprob: -8.094071388244629
    9. 'mul' → logprob: -8.094071388244629
    10. 'acc' → logprob: -8.469071388244629

Token 127: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35072222352027893
    2. ',' → logprob: -1.2257221937179565
    3. ' :' → logprob: -6.600722312927246
    4. ' ,' → logprob: -7.100722312927246
    5. ',x' → logprob: -10.475722312927246
    6. '=' → logprob: -11.100722312927246
    7. '   ' → logprob: -11.850722312927246
    8. ',m' → logprob: -12.100722312927246
    9. 'x' → logprob: -12.225722312927246
    10. ':x' → logprob: -12.600722312927246

Token 128: ' flo' (ID: 15037)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.49240604043006897
    2. ' x' → logprob: -1.3674060106277466
    3. 'x' → logprob: -2.617406129837036
    4. 'add' → logprob: -3.117406129837036
    5. 'flo' → logprob: -5.117405891418457
    6. ' flo' → logprob: -5.617405891418457
    7. ' mul' → logprob: -5.867405891418457
    8. 'mul' → logprob: -6.367405891418457
    9. ' ' → logprob: -7.492405891418457
    10. ' (' → logprob: -8.242405891418457

Token 129: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -2.696889623621246e-06
    2. 'rd' → logprob: -13.37500286102295
    3. ' ord' → logprob: -15.62500286102295
    4. 'ard' → logprob: -15.75000286102295
    5. 'orld' → logprob: -15.87500286102295
    6. 'орд' → logprob: -16.000001907348633
    7. '(ord' → logprob: -16.250001907348633
    8. '#' → logprob: -16.250001907348633
    9. 'ordam' → logprob: -16.625001907348633
    10. 'r' → logprob: -17.125001907348633

Token 130: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.06206314265727997
    2. 'div' → logprob: -2.812063217163086
    3. 'v' → logprob: -10.062063217163086
    4. 'vis' → logprob: -10.937063217163086
    5. 'vi' → logprob: -11.937063217163086
    6. ' div' → logprob: -12.062063217163086
    7. 'ul' → logprob: -12.437063217163086
    8. 'x' → logprob: -12.937063217163086
    9. 'vid' → logprob: -13.562063217163086
    10. '	div' → logprob: -13.687063217163086

Token 131: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.009803309105336666
    2. ' (' → logprob: -5.134803295135498
    3. ',' → logprob: -5.884803295135498
    4. ' x' → logprob: -7.759803295135498
    5. '(' → logprob: -8.259803771972656
    6. ' ,' → logprob: -9.134803771972656
    7. 'x' → logprob: -9.134803771972656
    8. ',x' → logprob: -9.384803771972656
    9. ')(' → logprob: -10.509803771972656
    10. ')' → logprob: -10.884803771972656

Token 132: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07880815863609314
    2. ',y' → logprob: -2.953808069229126
    3. '(y' → logprob: -4.203808307647705
    4. ' ,' → logprob: -5.453808307647705
    5. 'y' → logprob: -6.078808307647705
    6. ' y' → logprob: -6.703808307647705
    7. '(' → logprob: -7.953808307647705
    8. 's' → logprob: -9.078807830810547
    9. 'p' → logprob: -9.453807830810547
    10. '),' → logprob: -9.953807830810547

Token 133: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5231665968894958
    2. 'y' → logprob: -0.8981665968894958
    3. ',' → logprob: -11.14816665649414
    4. ' ' → logprob: -12.14816665649414
    5. '(y' → logprob: -12.39816665649414
    6. ',y' → logprob: -12.52316665649414
    7. 's' → logprob: -12.77316665649414
    8. 'x' → logprob: -13.27316665649414
    9. ' s' → logprob: -13.27316665649414
    10. ')y' → logprob: -13.27316665649414

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007943028584122658
    2. ' ,' → logprob: -5.132943153381348
    3. ',k' → logprob: -7.382943153381348
    4. '),' → logprob: -8.007943153381348
    5. ',n' → logprob: -8.632943153381348
    6. 's' → logprob: -9.132943153381348
    7. '(n' → logprob: -9.257943153381348
    8. '(k' → logprob: -9.382943153381348
    9. 'p' → logprob: -9.382943153381348
    10. ')' → logprob: -9.507943153381348

Token 135: ' k' (ID: 372)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20542332530021667
    2. ' ' → logprob: -1.830423355102539
    3. 'k' → logprob: -3.955423355102539
    4. ' k' → logprob: -5.205423355102539
    5. 's' → logprob: -8.705423355102539
    6. ' s' → logprob: -9.330423355102539
    7. '1' → logprob: -9.580423355102539
    8. 'p' → logprob: -9.580423355102539
    9. ' p' → logprob: -9.705423355102539
    10. '3' → logprob: -10.080423355102539

Token 136: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004948393441736698
    2. '))' → logprob: -5.629948616027832
    3. ')' → logprob: -6.754948616027832
    4. ',' → logprob: -9.129948616027832
    5. ' ),' → logprob: -10.129948616027832
    6. ')))' → logprob: -11.629948616027832
    7. ')),' → logprob: -11.879948616027832
    8. ' ' → logprob: -12.629948616027832
    9. '2' → logprob: -13.004948616027832
    10. '0' → logprob: -13.379948616027832

Token 137: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3140903413295746
    2. ' s' → logprob: -1.314090371131897
    3. '[s' → logprob: -8.189090728759766
    4. '[' → logprob: -8.439090728759766
    5. ' [' → logprob: -9.314090728759766
    6. '   ' → logprob: -9.689090728759766
    7. 'map' → logprob: -9.939090728759766
    8. '(s' → logprob: -10.314090728759766
    9. ' map' → logprob: -10.689090728759766
    10. 'range' → logprob: -11.314090728759766

Token 138: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05845839902758598
    2. '))' → logprob: -3.1834583282470703
    3. ',' → logprob: -4.30845832824707
    4. ')))' → logprob: -6.68345832824707
    5. ' )' → logprob: -8.18345832824707
    6. '[' → logprob: -9.43345832824707
    7. '   ' → logprob: -10.18345832824707
    8. ',)' → logprob: -10.18345832824707
    9. ')}' → logprob: -10.30845832824707
    10. '),' → logprob: -10.80845832824707

Token 139: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3724229037761688
    2. ':)' → logprob: -2.122422933578491
    3. ')' → logprob: -2.497422933578491
    4. '1' → logprob: -3.622422933578491
    5. '):' → logprob: -3.622422933578491
    6. '))' → logprob: -3.997422933578491
    7. '])' → logprob: -4.747422695159912
    8. ')])' → logprob: -4.747422695159912
    9. ':]' → logprob: -4.872422695159912
    10. '0' → logprob: -6.372422695159912

Token 140: ':],' (ID: 117284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14442811906337738
    2. ':],' → logprob: -2.019428014755249
    3. ':]' → logprob: -6.394428253173828
    4. ':)' → logprob: -11.019428253173828
    5. '],' → logprob: -11.269428253173828
    6. '-' → logprob: -11.894428253173828
    7. ':].' → logprob: -12.144428253173828
    8. '])' → logprob: -12.269428253173828
    9. ':,' → logprob: -12.269428253173828
    10. '::' → logprob: -12.394428253173828

Token 141: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7094464302062988
    2. 'k' → logprob: -1.4594464302062988
    3. '2' → logprob: -2.084446430206299
    4. 'p' → logprob: -2.709446430206299
    5. '1' → logprob: -3.209446430206299
    6. 'n' → logprob: -4.334446430206299
    7. 'len' → logprob: -4.459446430206299
    8. ' s' → logprob: -5.084446430206299
    9. 'lambda' → logprob: -5.959446430206299
    10. ' k' → logprob: -6.209446430206299

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015142656629905105
    2. '0' → logprob: -6.501514434814453
    3. ':' → logprob: -12.751514434814453
    4. '[:' → logprob: -13.001514434814453
    5. '][' → logprob: -13.126514434814453
    6. ' ' → logprob: -14.001514434814453
    7. 's' → logprob: -14.251514434814453
    8. ')' → logprob: -14.376514434814453
    9. '[
' → logprob: -14.376514434814453
    10. ']' → logprob: -15.126514434814453

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001146291324403137
    2. '[' → logprob: -9.500114440917969
    3. ' ' → logprob: -10.375114440917969
    4. ':' → logprob: -13.625114440917969
    5. 's' → logprob: -13.812614440917969
    6. ']' → logprob: -14.000114440917969
    7. '][' → logprob: -14.000114440917969
    8. '00' → logprob: -14.750114440917969
    9. '1' → logprob: -14.812614440917969
    10. '   ' → logprob: -15.062614440917969

Token 144: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937660574913025
    2. '))' → logprob: -0.6937660574913025
    3. ')))' → logprob: -8.443765640258789
    4. '])' → logprob: -8.818765640258789
    5. ' )' → logprob: -9.193765640258789
    6. ')+' → logprob: -9.943765640258789
    7. '),' → logprob: -10.443765640258789
    8. ' ))' → logprob: -10.443765640258789
    9. ')])' → logprob: -10.943765640258789
    10. '})' → logprob: -11.818765640258789

Token 145: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009657861664891243
    2. '<|end|>' → logprob: -5.384657859802246
    3. '+' → logprob: -6.259657859802246
    4. '%' → logprob: -7.384657859802246
    5. ':' → logprob: -7.884657859802246
    6. '#' → logprob: -8.259657859802246
    7. ' ' → logprob: -8.384657859802246
    8. ' )' → logprob: -8.509657859802246
    9. 'n' → logprob: -8.634657859802246
    10. 'p' → logprob: -8.634657859802246

Token 146: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20960266888141632
    2. ')' → logprob: -2.4596025943756104
    3. 'p' → logprob: -2.9596025943756104
    4. ' print' → logprob: -4.2096028327941895
    5. '<|end|>' → logprob: -4.5846028327941895
    6. 'n' → logprob: -4.8346028327941895
    7. '#' → logprob: -5.3346028327941895
    8. ' ' → logprob: -5.4596028327941895
    9. ' p' → logprob: -5.4596028327941895
    10. '```' → logprob: -7.4596028327941895

Token 147: 'er' (ID: 259)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8950961828231812
    2. 'q' → logprob: -1.2700961828231812
    3. 'er' → logprob: -2.7700963020324707
    4. 's' → logprob: -3.1450963020324707
    5. 'print' → logprob: -3.3950963020324707
    6. '=' → logprob: -3.5200963020324707
    7. 'result' → logprob: -4.020096302032471
    8. 'r' → logprob: -4.145096302032471
    9. ' =' → logprob: -4.270096302032471
    10. 'e' → logprob: -4.520096302032471

Token 148: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4637760818004608
    2. ' q' → logprob: -1.5887761116027832
    3. 'result' → logprob: -2.463776111602783
    4. ' result' → logprob: -3.963776111602783
    5. 'r' → logprob: -4.338776111602783
    6. 'o' → logprob: -4.338776111602783
    7. ' la' → logprob: -4.713776111602783
    8. ' r' → logprob: -5.088776111602783
    9. ' o' → logprob: -5.338776111602783
    10. 'res' → logprob: -5.463776111602783

Token 149: ' somme' (ID: 64484)
  Prédit: ' moyenne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moyenne' → logprob: -0.7466168403625488
    2. 'm' → logprob: -1.8716168403625488
    3. ' somme' → logprob: -2.371616840362549
    4. 'val' → logprob: -2.621616840362549
    5. 's' → logprob: -3.121616840362549
    6. ' valeur' → logprob: -3.246616840362549
    7. 'suite' → logprob: -3.621616840362549
    8. 'result' → logprob: -4.371616840362549
    9. ' différence' → logprob: -4.621616840362549
    10. 'factor' → logprob: -4.746616840362549

Token 150: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4835316240787506
    2. ' =' → logprob: -1.4835315942764282
    3. 's' → logprob: -2.3585317134857178
    4. 'result' → logprob: -3.9835317134857178
    5. 'q' → logprob: -4.108531475067139
    6. 'total' → logprob: -4.483531475067139
    7. 'sum' → logprob: -5.483531475067139
    8. '+=' → logprob: -5.858531475067139
    9. '=sum' → logprob: -5.858531475067139
    10. ',' → logprob: -6.733531475067139

Token 151: ' cubes' (ID: 88455)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.3196760416030884
    2. '[i' → logprob: -1.8196760416030884
    3. 'i' → logprob: -2.069675922393799
    4. 'range' → logprob: -2.194675922393799
    5. '[' → logprob: -2.319675922393799
    6. 'p' → logprob: -3.444675922393799
    7. 'n' → logprob: -3.694675922393799
    8. 'k' → logprob: -3.819675922393799
    9. 'flo' → logprob: -4.194675922393799
    10. 'prem' → logprob: -4.319675922393799

Token 152: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6282683610916138
    2. 'q' → logprob: -1.5032683610916138
    3. 's' → logprob: -2.128268241882324
    4. 'c' → logprob: -2.878268241882324
    5. '=' → logprob: -3.503268241882324
    6. 'cube' → logprob: -4.378268241882324
    7. 'sum' → logprob: -4.878268241882324
    8. 'result' → logprob: -4.878268241882324
    9. '
' → logprob: -6.128268241882324
    10. 'total' → logprob: -6.628268241882324

Token 153: ' utilisant' (ID: 92474)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18059542775154114
    2. ' range' → logprob: -1.8055953979492188
    3. 'k' → logprob: -8.055595397949219
    4. '(range' → logprob: -9.305595397949219
    5. 'for' → logprob: -9.430595397949219
    6. '```' → logprob: -9.805595397949219
    7. 'n' → logprob: -10.305595397949219
    8. ' k' → logprob: -10.430595397949219
    9. 's' → logprob: -10.993095397949219
    10. 'i' → logprob: -11.243095397949219

Token 154: ' pow' (ID: 9779)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.14454470574855804
    2. 'sum' → logprob: -2.5195446014404297
    3. 'lambda' → logprob: -3.6445446014404297
    4. 'pow' → logprob: -4.89454460144043
    5. 'range' → logprob: -5.01954460144043
    6. ' reduce' → logprob: -5.26954460144043
    7. 'map' → logprob: -6.14454460144043
    8. ' sum' → logprob: -6.51954460144043
    9. 'def' → logprob: -7.14454460144043
    10. 'a' → logprob: -7.39454460144043

Token 155: ' et' (ID: 859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1430609226226807
    2. 's' → logprob: -1.3930609226226807
    3. 'sum' → logprob: -1.5180609226226807
    4. 'p' → logprob: -2.8930609226226807
    5. ' =' → logprob: -3.0180609226226807
    6. 'total' → logprob: -3.5180609226226807
    7. '=' → logprob: -3.7680609226226807
    8. '(sum' → logprob: -5.018060684204102
    9. 'pow' → logprob: -5.268060684204102
    10. '(p' → logprob: -5.268060684204102

Token 156: ' un' (ID: 537)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.39951685070991516
    2. 'reduce' → logprob: -1.6495168209075928
    3. ' sum' → logprob: -2.2745168209075928
    4. 'map' → logprob: -4.649517059326172
    5. ' reduce' → logprob: -5.024517059326172
    6. 'pow' → logprob: -5.024517059326172
    7. 'range' → logprob: -5.399517059326172
    8. 'lambda' → logprob: -5.774517059326172
    9. 'mul' → logprob: -6.899517059326172
    10. ' map' → logprob: -7.274517059326172

Token 157: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5718044638633728
    2. ' range' → logprob: -2.8218045234680176
    3. 'um' → logprob: -3.0718045234680176
    4. 'lambda' → logprob: -3.3218045234680176
    5. 'fold' → logprob: -4.009304523468018
    6. 'm' → logprob: -4.009304523468018
    7. 'reduce' → logprob: -4.009304523468018
    8. 'sum' → logprob: -4.196804523468018
    9. 'ique' → logprob: -4.196804523468018
    10. 'map' → logprob: -4.196804523468018

Token 158: ' sur' (ID: 1512)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0866565704345703
    2. 's' → logprob: -1.0866565704345703
    3. 'result' → logprob: -1.9616565704345703
    4. 'sum' → logprob: -2.7116565704345703
    5. 'c' → logprob: -3.0866565704345703
    6. 'cube' → logprob: -3.2116565704345703
    7. 'cub' → logprob: -4.58665657043457
    8. 'total' → logprob: -5.83665657043457
    9. 'res' → logprob: -5.96165657043457
    10. 'r' → logprob: -6.46165657043457

Token 159: ' une' (ID: 2463)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0041020275093615055
    2. ' range' → logprob: -5.5041022300720215
    3. '(range' → logprob: -10.754101753234863
    4. '[' → logprob: -13.879101753234863
    5. 'map' → logprob: -14.504101753234863
    6. '	range' → logprob: -14.879101753234863
    7. 'list' → logprob: -16.00410270690918
    8. 'lambda' → logprob: -16.37910270690918
    9. '   ' → logprob: -16.87910270690918
    10. ' ' → logprob: -17.37910270690918

Token 160: ' liste' (ID: 31719)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008927011862397194
    2. ' range' → logprob: -4.758926868438721
    3. 'lambda' → logprob: -8.633927345275879
    4. 'list' → logprob: -9.258927345275879
    5. '(range' → logprob: -11.383927345275879
    6. 'map' → logprob: -11.383927345275879
    7. '[' → logprob: -11.508927345275879
    8. ' lambda' → logprob: -13.383927345275879
    9. '(lambda' → logprob: -14.508927345275879
    10. ' list' → logprob: -14.633927345275879

Token 161: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6602451205253601
    2. 'p' → logprob: -2.160245180130005
    3. 'result' → logprob: -2.785245180130005
    4. 'c' → logprob: -2.910245180130005
    5. '(s' → logprob: -3.160245180130005
    6. 'cube' → logprob: -3.535245180130005
    7. '(p' → logprob: -3.660245180130005
    8. 'cub' → logprob: -3.785245180130005
    9. '   ' → logprob: -3.910245180130005
    10. 'range' → logprob: -4.035244941711426

Token 162: 'res' (ID: 430)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.215986728668213
    2. 's' → logprob: -1.715986728668213
    3. 'result' → logprob: -1.840986728668213
    4. 'print' → logprob: -2.340986728668213
    5. 'lst' → logprob: -2.465986728668213
    6. 'p' → logprob: -2.715986728668213
    7. 'sum' → logprob: -3.715986728668213
    8. 'res' → logprob: -3.840986728668213
    9. 'cube' → logprob: -4.465986728668213
    10. 'nums' → logprob: -4.590986728668213

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16185951232910156
    2. 'ult' → logprob: -2.0368595123291016
    3. '=' → logprob: -4.161859512329102
    4. 'ults' → logprob: -6.161859512329102
    5. 'ultat' → logprob: -7.411859512329102
    6. 'u' → logprob: -7.411859512329102
    7. 'ul' → logprob: -10.411859512329102
    8. 'ULT' → logprob: -11.036859512329102
    9. 's' → logprob: -11.161859512329102
    10. 'ulta' → logprob: -11.786859512329102

Token 164: ' reduce' (ID: 10389)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6384559273719788
    2. ' sum' → logprob: -0.7634559273719788
    3. 'pow' → logprob: -6.013455867767334
    4. 'reduce' → logprob: -6.263455867767334
    5. ' reduce' → logprob: -7.138455867767334
    6. ' pow' → logprob: -7.638455867767334
    7. '(sum' → logprob: -8.888456344604492
    8. ' ' → logprob: -10.513456344604492
    9. '   ' → logprob: -11.638456344604492
    10. 'map' → logprob: -12.263456344604492

Token 165: '(add' (ID: 40159)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.21387384831905365
    2. '(add' → logprob: -2.088873863220215
    3. '(' → logprob: -2.713873863220215
    4. '(m' → logprob: -6.588873863220215
    5. '(pow' → logprob: -7.338873863220215
    6. '(operator' → logprob: -8.713873863220215
    7. '(
' → logprob: -9.213873863220215
    8. ' (' → logprob: -9.963873863220215
    9. '```' → logprob: -10.463873863220215
    10. '(int' → logprob: -10.838873863220215

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02369973435997963
    2. ',map' → logprob: -3.7736997604370117
    3. ' ,' → logprob: -8.023699760437012
    4. ',
' → logprob: -9.398699760437012
    5. ',[' → logprob: -11.648699760437012
    6. ',list' → logprob: -11.648699760437012
    7. ',(' → logprob: -11.898699760437012
    8. ',p' → logprob: -12.148699760437012
    9. '(map' → logprob: -12.273699760437012
    10. 'map' → logprob: -12.648699760437012

Token 167: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16043370962142944
    2. ' map' → logprob: -1.9104337692260742
    3. 'list' → logprob: -9.285433769226074
    4. '(map' → logprob: -9.410433769226074
    5. ' list' → logprob: -11.035433769226074
    6. '   ' → logprob: -11.410433769226074
    7. ' ' → logprob: -12.910433769226074
    8. '	map' → logprob: -13.160433769226074
    9. ',map' → logprob: -13.410433769226074
    10. '  ' → logprob: -13.785433769226074

Token 168: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00011188744247192517
    2. '(' → logprob: -9.12511157989502
    3. '(
' → logprob: -13.50011157989502
    4. 'map' → logprob: -13.87511157989502
    5. ',map' → logprob: -15.37511157989502
    6. '(pow' → logprob: -15.50011157989502
    7. ' (' → logprob: -17.625112533569336
    8. '	map' → logprob: -18.000112533569336
    9. ')' → logprob: -18.375112533569336
    10. '(

' → logprob: -18.375112533569336

Token 169: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0015859126579016447
    2. '(pow' → logprob: -6.501585960388184
    3. '(' → logprob: -9.501585960388184
    4. ' (' → logprob: -12.001585960388184
    5. 'lambda' → logprob: -13.876585960388184
    6. '(
' → logprob: -14.001585960388184
    7. 'pow' → logprob: -15.126585960388184
    8. '(l' → logprob: -16.001585006713867
    9. '((' → logprob: -16.001585006713867
    10. '(power' → logprob: -16.251585006713867

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31480783224105835
    2. ' x' → logprob: -1.3148078918457031
    3. 'lambda' → logprob: -6.939807891845703
    4. ' lambda' → logprob: -8.189807891845703
    5. 'pow' → logprob: -10.064807891845703
    6. '   ' → logprob: -10.314807891845703
    7. 'a' → logprob: -10.314807891845703
    8. ' ' → logprob: -10.689807891845703
    9. ' i' → logprob: -10.939807891845703
    10. 'z' → logprob: -10.939807891845703

Token 171: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004307514522224665
    2. ' :' → logprob: -6.254307746887207
    3. 'pow' → logprob: -6.754307746887207
    4. 'lambda' → logprob: -7.379307746887207
    5. 'x' → logprob: -8.379307746887207
    6. ',' → logprob: -9.379307746887207
    7. '(lambda' → logprob: -9.629307746887207
    8. '   ' → logprob: -10.129307746887207
    9. '=lambda' → logprob: -10.129307746887207
    10. ' lambda' → logprob: -10.629307746887207

Token 172: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.14059431850910187
    2. 'lambda' → logprob: -2.515594244003296
    3. ' pow' → logprob: -3.390594244003296
    4. ' lambda' → logprob: -4.140594482421875
    5. '(lambda' → logprob: -8.140594482421875
    6. 'x' → logprob: -8.765594482421875
    7. '(pow' → logprob: -9.140594482421875
    8. '   ' → logprob: -9.390594482421875
    9. ' x' → logprob: -9.890594482421875
    10. ' ' → logprob: -11.140594482421875

Token 173: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007218453683890402
    2. '(' → logprob: -7.8757219314575195
    3. 'x' → logprob: -8.00072193145752
    4. '(
' → logprob: -12.62572193145752
    5. ' x' → logprob: -13.87572193145752
    6. ' (' → logprob: -14.50072193145752
    7. ')' → logprob: -14.62572193145752
    8. ')x' → logprob: -14.87572193145752
    9. ',x' → logprob: -15.37572193145752
    10. ')(' → logprob: -15.87572193145752

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014338012551888824
    2. ' ,' → logprob: -6.876433849334717
    3. '3' → logprob: -8.501433372497559
    4. '(x' → logprob: -9.876433372497559
    5. '(' → logprob: -10.001433372497559
    6. ',x' → logprob: -10.376433372497559
    7. 'x' → logprob: -10.876433372497559
    8. ' ' → logprob: -11.001433372497559
    9. ',k' → logprob: -11.126433372497559
    10. '   ' → logprob: -12.251433372497559

Token 175: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.660315895918757e-05
    2. ' ' → logprob: -9.500076293945312
    3. '  ' → logprob: -14.250076293945312
    4. ',' → logprob: -14.750076293945312
    5. '
' → logprob: -15.125076293945312
    6. '   ' → logprob: -15.125076293945312
    7. '```' → logprob: -17.250076293945312
    8. ' ,' → logprob: -17.625076293945312
    9. ' 
' → logprob: -17.750076293945312
    10. '    ' → logprob: -18.125076293945312

Token 176: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.750436007976532e-05
    2. ' ' → logprob: -10.25003719329834
    3. '   ' → logprob: -15.12503719329834
    4. ',' → logprob: -15.12503719329834
    5. '  ' → logprob: -15.18753719329834
    6. '
' → logprob: -15.25003719329834
    7. '2' → logprob: -15.56253719329834
    8. '```' → logprob: -15.87503719329834
    9. '1' → logprob: -15.93753719329834
    10. 'k' → logprob: -16.625038146972656

Token 177: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010151672904612496
    2. ',n' → logprob: -10.500101089477539
    3. '),' → logprob: -11.000101089477539
    4. ' ,' → logprob: -11.250101089477539
    5. ',p' → logprob: -11.250101089477539
    6. ',s' → logprob: -11.500101089477539
    7. ',k' → logprob: -12.250101089477539
    8. ',x' → logprob: -12.500101089477539
    9. 'range' → logprob: -12.875101089477539
    10. '   ' → logprob: -13.375101089477539

Token 178: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011053244583308697
    2. ' range' → logprob: -4.511053085327148
    3. '(range' → logprob: -12.511053085327148
    4. '[' → logprob: -13.511053085327148
    5. '	range' → logprob: -15.761053085327148
    6. '   ' → logprob: -16.88605308532715
    7. ' ' → logprob: -17.01105308532715
    8. ' [' → logprob: -17.51105308532715
    9. '  ' → logprob: -17.88605308532715
    10. 'list' → logprob: -18.13605308532715

Token 179: 'o' (ID: 78)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01013273186981678
    2. ' i' → logprob: -5.010132789611816
    3. 'x' → logprob: -6.510132789611816
    4. 'range' → logprob: -6.760132789611816
    5. '1' → logprob: -8.385132789611816
    6. '*' → logprob: -8.760132789611816
    7. 'n' → logprob: -8.885132789611816
    8. '*i' → logprob: -9.385132789611816
    9. ' range' → logprob: -10.260132789611816
    10. 'ceil' → logprob: -11.135132789611816

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39104947447776794
    2. '+' → logprob: -2.516049385070801
    3. ' +' → logprob: -2.641049385070801
    4. ']))' → logprob: -3.391049385070801
    5. ' -' → logprob: -3.516049385070801
    6. ']' → logprob: -3.641049385070801
    7. '+i' → logprob: -3.766049385070801
    8. '-' → logprob: -3.766049385070801
    9. ']+' → logprob: -4.766049385070801
    10. '])))' → logprob: -4.766049385070801

Token 181: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00043829824426211417
    2. ' p' → logprob: -7.750438213348389
    3. 'n' → logprob: -13.250438690185547
    4. '1' → logprob: -13.750438690185547
    5. '   ' → logprob: -13.875438690185547
    6. 'o' → logprob: -14.375438690185547
    7. ' ' → logprob: -14.500438690185547
    8. 's' → logprob: -14.750438690185547
    9. 'k' → logprob: -15.125438690185547
    10. '  ' → logprob: -15.500438690185547

Token 182: '])))
' (ID: 146875)
  Prédit: '])))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])))' → logprob: -0.02067139558494091
    2. ',' → logprob: -4.395671367645264
    3. ']))' → logprob: -5.395671367645264
    4. ']' → logprob: -6.020671367645264
    5. '])),' → logprob: -7.145671367645264
    6. '])))
' → logprob: -8.395671844482422
    7. ' ]' → logprob: -9.770671844482422
    8. '))))' → logprob: -9.770671844482422
    9. ')))' → logprob: -10.770671844482422
    10. '   ' → logprob: -12.895671844482422

Token 183: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004062609747052193
    2. ')' → logprob: -6.254062652587891
    3. '
' → logprob: -6.504062652587891
    4. ')
' → logprob: -7.879062652587891
    5. ' print' → logprob: -8.62906265258789
    6. '<|end|>' → logprob: -10.00406265258789
    7. '```' → logprob: -11.62906265258789
    8. ',' → logprob: -11.87906265258789
    9. '  
' → logprob: -12.62906265258789
    10. '#' → logprob: -13.12906265258789

Token 184: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.10025735199451447
    2. '(' → logprob: -2.350257396697998
    3. 'res' → logprob: -10.10025691986084
    4. ' (' → logprob: -12.97525691986084
    5. '(
' → logprob: -13.10025691986084
    6. '((' → logprob: -13.85025691986084
    7. '('' → logprob: -13.97525691986084
    8. '()' → logprob: -13.97525691986084
    9. '(re' → logprob: -14.85025691986084
    10. '(round' → logprob: -15.22525691986084

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931546330451965
    2. '))' → logprob: -0.6931546330451965
    3. ')))' → logprob: -12.318154335021973
    4. ' )' → logprob: -14.568154335021973
    5. '))
' → logprob: -14.568154335021973
    6. ')`' → logprob: -14.693154335021973
    7. ')**' → logprob: -15.568154335021973
    8. '])' → logprob: -15.568154335021973
    9. ')
' → logprob: -15.693154335021973
    10. ' ))' → logprob: -15.943154335021973


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 183
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 118
Précision stricte (1ère position): 29.51%
Précision adaptée (1ère position): 30.05%
Précision (top 10): 64.48%
================================================================================
