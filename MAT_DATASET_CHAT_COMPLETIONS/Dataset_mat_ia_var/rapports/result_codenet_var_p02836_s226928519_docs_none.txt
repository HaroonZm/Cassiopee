================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a=input()
n=len(a)
li=list(a)
b=0
for k in range(n//2):
    if li[k]!=li[n-1-k]:
        b+=1
print(b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '()
' (ID: 1234)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32558196783065796
    2. '.' → logprob: -1.3255820274353027
    3. '=' → logprob: -4.700582027435303
    4. '*' → logprob: -6.825582027435303
    5. '[' → logprob: -7.575582027435303
    6. '.strip' → logprob: -7.825582027435303
    7. '(' → logprob: -8.575581550598145
    8. '()' → logprob: -8.700581550598145
    9. '%' → logprob: -9.200581550598145
    10. '#' → logprob: -9.325581550598145

Token 4: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03133812174201012
    2. ' =' → logprob: -4.281338214874268
    3. '+' → logprob: -5.531338214874268
    4. '[' → logprob: -5.906338214874268
    5. '_' → logprob: -6.281338214874268
    6. 'u' → logprob: -6.406338214874268
    7. '-' → logprob: -6.656338214874268
    8. '.' → logprob: -6.906338214874268
    9. 'p' → logprob: -7.156338214874268
    10. 't' → logprob: -7.156338214874268

Token 5: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004693799186497927
    2. '(a' → logprob: -5.754693984985352
    3. '(n' → logprob: -6.504693984985352
    4. '(
' → logprob: -11.379693984985352
    5. '(x' → logprob: -13.254693984985352
    6. '(

' → logprob: -14.004693984985352
    7. '(input' → logprob: -14.504693984985352
    8. '(s' → logprob: -15.004693984985352
    9. '((' → logprob: -15.129693984985352
    10. '()' → logprob: -15.129693984985352

Token 6: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')a' → logprob: -13.750004768371582
    3. '[' → logprob: -13.875004768371582
    4. ' )' → logprob: -14.125004768371582
    5. ')
' → logprob: -14.750004768371582
    6. '`)' → logprob: -15.125004768371582
    7. 'a' → logprob: -15.125004768371582
    8. '))' → logprob: -15.375004768371582
    9. '()' → logprob: -16.250003814697266
    10. ']' → logprob: -16.500003814697266

Token 7: 'li' (ID: 1307)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2046908289194107
    2. '
' → logprob: -2.704690933227539
    3. 'i' → logprob: -2.829690933227539
    4. '+' → logprob: -4.454690933227539
    5. 'if' → logprob: -4.579690933227539
    6. '\n' → logprob: -4.704690933227539
    7. 's' → logprob: -5.079690933227539
    8. 'f' → logprob: -5.204690933227539
    9. 'sum' → logprob: -6.454690933227539
    10. '+
' → logprob: -6.454690933227539

Token 8: '=list' (ID: 93413)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.009782887995243073
    2. '=' → logprob: -5.384782791137695
    3. 's' → logprob: -5.509782791137695
    4. ' =' → logprob: -7.634782791137695
    5. 'n' → logprob: -9.009782791137695
    6. '=[]' → logprob: -9.509782791137695
    7. 'ne' → logprob: -9.884782791137695
    8. '[' → logprob: -10.009782791137695
    9. 't' → logprob: -10.134782791137695
    10. 'sts' → logprob: -10.134782791137695

Token 9: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20243901014328003
    2. '(' → logprob: -1.7024390697479248
    3. '(range' → logprob: -7.327438831329346
    4. '()' → logprob: -8.577439308166504
    5. '(li' → logprob: -9.077439308166504
    6. '(set' → logprob: -11.202439308166504
    7. '(input' → logprob: -11.452439308166504
    8. 'a' → logprob: -11.577439308166504
    9. '(ai' → logprob: -12.327439308166504
    10. '(n' → logprob: -12.452439308166504

Token 10: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. '))' → logprob: -11.12502384185791
    3. '[' → logprob: -12.37502384185791
    4. ')a' → logprob: -13.87502384185791
    5. ')))' → logprob: -14.50002384185791
    6. '())' → logprob: -14.62502384185791
    7. ' )' → logprob: -14.75002384185791
    8. '`)' → logprob: -14.87502384185791
    9. '])' → logprob: -15.25002384185791
    10. 'a' → logprob: -15.25002384185791

Token 11: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10300658643245697
    2. '(' → logprob: -2.728006601333618
    3. '[' → logprob: -4.228006362915039
    4. '=' → logprob: -5.353006362915039
    5. ')' → logprob: -5.978006362915039
    6. 'd' → logprob: -6.103006362915039
    7. 'i' → logprob: -6.228006362915039
    8. ' for' → logprob: -6.478006362915039
    9. '_' → logprob: -6.978006362915039
    10. 'f' → logprob: -7.353006362915039

Token 12: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13530518114566803
    2. '=[]' → logprob: -2.260305166244507
    3. ' =' → logprob: -5.260305404663086
    4. 'i' → logprob: -5.510305404663086
    5. '=[' → logprob: -5.635305404663086
    6. '[:]' → logprob: -6.135305404663086
    7. '=len' → logprob: -6.260305404663086
    8. '.' → logprob: -7.135305404663086
    9. '_' → logprob: -7.385305404663086
    10. '[' → logprob: -7.760305404663086

Token 13: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6434376239776611
    2. 'li' → logprob: -0.8934376239776611
    3. '[' → logprob: -3.143437623977661
    4. 'a' → logprob: -5.143437385559082
    5. '""' → logprob: -5.268437385559082
    6. 'list' → logprob: -6.393437385559082
    7. '''' → logprob: -6.393437385559082
    8. 'sorted' → logprob: -6.393437385559082
    9. '['' → logprob: -6.518437385559082
    10. '0' → logprob: -7.143437385559082

Token 14: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.273576021194458
    2. ' for' → logprob: -2.273576021194458
    3. '
' → logprob: -3.148576021194458
    4. 'i' → logprob: -3.648576021194458
    5. ' ' → logprob: -3.773576021194458
    6. 'f' → logprob: -4.148575782775879
    7. '' → logprob: -4.523575782775879
    8. '=' → logprob: -5.398575782775879
    9. '-' → logprob: -6.273575782775879
    10. ' 
' → logprob: -6.398575782775879

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7529758810997009
    2. ' ' → logprob: -1.5029759407043457
    3. ' for' → logprob: -2.1279759407043457
    4. '
' → logprob: -2.5029759407043457
    5. 'i' → logprob: -2.7529759407043457
    6. 'f' → logprob: -3.6279759407043457
    7. ' 
' → logprob: -5.502975940704346
    8. '' → logprob: -5.877975940704346
    9. '=' → logprob: -6.627975940704346
    10. ',' → logprob: -6.752975940704346

Token 16: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39586979150772095
    2. ' i' → logprob: -1.1458697319030762
    3. 'i' → logprob: -4.770869731903076
    4. '_' → logprob: -8.645870208740234
    5. ' _' → logprob: -8.645870208740234
    6. '  ' → logprob: -10.020870208740234
    7. ' range' → logprob: -10.645870208740234
    8. ' b' → logprob: -10.895870208740234
    9. ' ‌' → logprob: -11.895870208740234
    10. ' )' → logprob: -12.145870208740234

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01880927011370659
    2. 'in' → logprob: -4.0188093185424805
    3. ' ' → logprob: -7.3938093185424805
    4. 'range' → logprob: -10.51880931854248
    5. 'n' → logprob: -12.39380931854248
    6. ' range' → logprob: -12.76880931854248
    7. '  ' → logprob: -13.14380931854248
    8. 's' → logprob: -13.26880931854248
    9. ')' → logprob: -13.89380931854248
    10. '	in' → logprob: -14.14380931854248

Token 18: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1906314492225647
    2. ' range' → logprob: -1.81563138961792
    3. 'li' → logprob: -4.56563138961792
    4. ' li' → logprob: -7.94063138961792
    5. 'a' → logprob: -10.815631866455078
    6. 'ra' → logprob: -11.690631866455078
    7. ' ra' → logprob: -11.940631866455078
    8. '[' → logprob: -12.190631866455078
    9. '(range' → logprob: -12.315631866455078
    10. ' ' → logprob: -12.565631866455078

Token 19: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0792165994644165
    2. '(n' → logprob: -2.579216480255127
    3. ' (' → logprob: -8.079216957092285
    4. '(k' → logprob: -12.454216957092285
    5. ' ' → logprob: -12.829216957092285
    6. '(
' → logprob: -12.954216957092285
    7. '(len' → logprob: -13.204216957092285
    8. '(space' → logprob: -13.204216957092285
    9. '(s' → logprob: -13.704216957092285
    10. '((' → logprob: -14.204216957092285

Token 20: '//' (ID: 393)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013882448896765709
    2. ')' → logprob: -4.388882637023926
    3. ' ):' → logprob: -7.138882637023926
    4. '):
' → logprob: -8.013882637023926
    5. '-' → logprob: -9.138882637023926
    6. ':' → logprob: -9.388882637023926
    7. ' ' → logprob: -10.388882637023926
    8. '+' → logprob: -11.638882637023926
    9. ' )' → logprob: -12.888882637023926
    10. '//' → logprob: -13.513882637023926

Token 21: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.618001053633634e-05
    2. '3' → logprob: -11.375025749206543
    3. ' ' → logprob: -11.375025749206543
    4. '1' → logprob: -13.500025749206543
    5. '4' → logprob: -13.625025749206543
    6. '5' → logprob: -16.12502670288086
    7. '```' → logprob: -16.31252670288086
    8. ')' → logprob: -16.56252670288086
    9. '6' → logprob: -16.68752670288086
    10. 'k' → logprob: -17.18752670288086

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009848635643720627
    2. '+' → logprob: -5.134848594665527
    3. '):
' → logprob: -6.259848594665527
    4. ' ):' → logprob: -6.634848594665527
    5. ')' → logprob: -7.384848594665527
    6. ' +' → logprob: -10.384848594665527
    7. ',' → logprob: -11.384848594665527
    8. '):

' → logprob: -12.134848594665527
    9. ' ):
' → logprob: -12.884848594665527
    10. ':' → logprob: -13.134848594665527

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3498263955116272
    2. ' if' → logprob: -1.3498263359069824
    3. ' ' → logprob: -3.4748263359069824
    4. ' b' → logprob: -6.724826335906982
    5. '    ' → logprob: -6.974826335906982
    6. 'b' → logprob: -6.974826335906982
    7. 'if' → logprob: -7.099826335906982
    8. '	if' → logprob: -8.47482681274414
    9. '```' → logprob: -8.84982681274414
    10. ' 
' → logprob: -9.34982681274414

Token 24: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07571807503700256
    2. 'if' (adapté à ' if') → logprob: -2.9507181644439697
    3. '   ' → logprob: -3.9507181644439697
    4. ' ' → logprob: -7.200717926025391
    5. ' i' → logprob: -8.32571792602539
    6. 'i' → logprob: -8.95071792602539
    7. '    ' → logprob: -8.95071792602539
    8. 'b' → logprob: -9.70071792602539
    9. '  ' → logprob: -10.32571792602539
    10. ' b' → logprob: -11.57571792602539

Token 25: ' li' (ID: 3476)
  Prédit: ' li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' li' → logprob: -0.47409588098526
    2. 'li' → logprob: -0.97409588098526
    3. '(li' → logprob: -11.099096298217773
    4. '<li' → logprob: -13.724096298217773
    5. 'a' → logprob: -13.849096298217773
    6. ' ' → logprob: -14.599096298217773
    7. ' a' → logprob: -14.974096298217773
    8. 'l' → logprob: -15.474096298217773
    9. ' ' → logprob: -15.599096298217773
    10. 'b' → logprob: -16.224096298217773

Token 26: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00021605310030281544
    2. '[b' → logprob: -9.000216484069824
    3. '[' → logprob: -9.375216484069824
    4. '[n' → logprob: -13.250216484069824
    5. '[i' → logprob: -13.375216484069824
    6. '[a' → logprob: -13.750216484069824
    7. '```' → logprob: -14.250216484069824
    8. 'k' → logprob: -14.875216484069824
    9. '[key' → logprob: -14.875216484069824
    10. '[j' → logprob: -15.250216484069824

Token 27: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.5896028280258179
    2. ']' → logprob: -0.8396028280258179
    3. ' ]' → logprob: -5.089602947235107
    4. '!=' → logprob: -5.464602947235107
    5. ']==' → logprob: -5.839602947235107
    6. ' !=' → logprob: -9.33960247039795
    7. ']>' → logprob: -9.46460247039795
    8. ')!=' → logprob: -10.96460247039795
    9. '==' → logprob: -11.33960247039795
    10. ']!='' → logprob: -11.58960247039795

Token 28: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0011861803941428661
    2. ' li' → logprob: -6.751186370849609
    3. '<li' → logprob: -12.00118637084961
    4. '   ' → logprob: -13.00118637084961
    5. 'l' → logprob: -13.50118637084961
    6. ''' → logprob: -14.00118637084961
    7. ' ' → logprob: -14.12618637084961
    8. '(li' → logprob: -14.37618637084961
    9. '_li' → logprob: -14.50118637084961
    10. ')' → logprob: -14.75118637084961

Token 29: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.006807141471654177
    2. '[-' → logprob: -5.506807327270508
    3. '[' → logprob: -6.256807327270508
    4. '][' → logprob: -7.756807327270508
    5. '[k' → logprob: -8.506807327270508
    6. 'n' → logprob: -9.256807327270508
    7. ' [' → logprob: -11.381807327270508
    8. '[j' → logprob: -11.381807327270508
    9. '[len' → logprob: -11.631807327270508
    10. '[b' → logprob: -11.756807327270508

Token 30: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02773851342499256
    2. '-k' → logprob: -3.902738571166992
    3. ' -' → logprob: -5.027738571166992
    4. '1' → logprob: -7.402738571166992
    5. 'k' → logprob: -12.527738571166992
    6. ' ' → logprob: -13.652738571166992
    7. '-(' → logprob: -14.277738571166992
    8. '−' → logprob: -14.902738571166992
    9. '   ' → logprob: -15.152738571166992
    10. ']-' → logprob: -15.465238571166992

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28129711747169495
    2. 'k' → logprob: -1.4062970876693726
    3. ' k' → logprob: -10.156296730041504
    4. ' ' → logprob: -10.406296730041504
    5. '   ' → logprob: -10.656296730041504
    6. '-' → logprob: -11.281296730041504
    7. '{k' → logprob: -11.781296730041504
    8. '  ' → logprob: -11.906296730041504
    9. '```' → logprob: -12.031296730041504
    10. '(k' → logprob: -12.156296730041504

Token 32: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.012660447508096695
    2. ' -' → logprob: -4.762660503387451
    3. '-' → logprob: -5.512660503387451
    4. 'k' → logprob: -14.512660026550293
    5. '-n' → logprob: -14.637660026550293
    6. ' ' → logprob: -14.637660026550293
    7. '   ' → logprob: -15.637660026550293
    8. '-j' → logprob: -16.13766098022461
    9. '-z' → logprob: -16.76266098022461
    10. '-m' → logprob: -16.76266098022461

Token 33: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02667447179555893
    2. ']' → logprob: -4.151674270629883
    3. '):' → logprob: -5.276674270629883
    4. ':' → logprob: -5.651674270629883
    5. ']:
' → logprob: -6.401674270629883
    6. ']):' → logprob: -9.401674270629883
    7. ']:
' → logprob: -9.776674270629883
    8. '):
' → logprob: -10.276674270629883
    9. '   ' → logprob: -10.651674270629883
    10. ')' → logprob: -10.901674270629883

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7500789761543274
    2. 'b' → logprob: -0.8750789761543274
    3. ' b' → logprob: -2.3750789165496826
    4. '    ' → logprob: -5.125079154968262
    5. '   ' → logprob: -5.250079154968262
    6. ' ' → logprob: -6.000079154968262
    7. '     ' → logprob: -6.750079154968262
    8. '+' → logprob: -7.125079154968262
    9. '      ' → logprob: -7.375079154968262
    10. '        ' → logprob: -8.000079154968262

Token 35: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5238956212997437
    2. 'b' (adapté à ' b') → logprob: -0.8988956212997437
    3. '       ' → logprob: -7.898895740509033
    4. '   ' → logprob: -8.148895263671875
    5. ' ' → logprob: -10.023895263671875
    6. '    ' → logprob: -10.398895263671875
    7. '```' → logprob: -11.273895263671875
    8. '        ' → logprob: -11.523895263671875
    9. '           ' → logprob: -13.148895263671875
    10. '  ' → logprob: -13.148895263671875

Token 36: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.035072240978479385
    2. '=' → logprob: -3.5350723266601562
    3. ' +=' → logprob: -5.285072326660156
    4. ' =' → logprob: -9.035072326660156
    5. '+' → logprob: -9.285072326660156
    6. '=b' → logprob: -10.785072326660156
    7. ']+=' → logprob: -12.410072326660156
    8. '+='' → logprob: -13.535072326660156
    9. '=True' → logprob: -14.535072326660156
    10. '+="' → logprob: -14.660072326660156

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '2' → logprob: -14.875032424926758
    4. '0' → logprob: -15.875032424926758
    5. '   ' → logprob: -16.500032424926758
    6. '-' → logprob: -17.062532424926758
    7. '11' → logprob: -17.500032424926758
    8. '  ' → logprob: -17.687532424926758
    9. '3' → logprob: -18.125032424926758
    10. '```' → logprob: -18.187532424926758

Token 38: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25080493092536926
    2. '<|end|>' → logprob: -2.125804901123047
    3. 'if' → logprob: -2.625804901123047
    4. '
' → logprob: -3.750804901123047
    5. ' if' → logprob: -5.750804901123047
    6. '```' → logprob: -6.750804901123047
    7. ' print' → logprob: -7.375804901123047
    8. '#' → logprob: -7.750804901123047
    9. 'b' → logprob: -8.000804901123047
    10. '0' → logprob: -8.750804901123047

Token 39: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5538983345031738
    2. 'print' → logprob: -0.9288983345031738
    3. ' if' → logprob: -3.803898334503174
    4. '<|end|>' → logprob: -5.053898334503174
    5. '
' → logprob: -7.428898334503174
    6. ' print' → logprob: -8.428897857666016
    7. '#' → logprob: -8.678897857666016
    8. '```' → logprob: -8.678897857666016
    9. 'b' → logprob: -8.928897857666016
    10. ')' → logprob: -9.178897857666016

Token 40: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.06203142926096916
    2. '(' → logprob: -2.8120315074920654
    3. '()' → logprob: -10.562031745910645
    4. '('' → logprob: -11.187031745910645
    5. '((' → logprob: -11.562031745910645
    6. '(a' → logprob: -12.187031745910645
    7. '(B' → logprob: -13.437031745910645
    8. 'b' → logprob: -13.437031745910645
    9. '("' → logprob: -13.812031745910645
    10. '(k' → logprob: -14.062031745910645

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.125
    3. ' )' → logprob: -17.75
    4. ')`' → logprob: -18.0
    5. '')' → logprob: -18.375
    6. '`)' → logprob: -18.625
    7. ')
' → logprob: -18.625
    8. '）' → logprob: -19.625
    9. ')b' → logprob: -19.625
    10. ')}' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 53.85%
Précision adaptée (1ère position): 53.85%
Précision (top 10): 82.05%
================================================================================
