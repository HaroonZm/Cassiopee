================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def process_test_cases(num_cases, list_a, list_b, list_c, list_d):
    results_list = []
    for case_index in range(num_cases):
        result = process_single_case(
            list_a[case_index],
            list_b[case_index],
            list_c[case_index],
            list_d[case_index]
        )
        results_list.append(result)
    return results_list

def process_single_case(value_a, value_b, value_c, value_d):
    if value_a < value_b:
        return 'No'
    if value_d < value_b:
        return 'No'
    if value_c < value_b:
        greatest_common_divisor = math.gcd(value_b, value_d)
        remainder_a_b = value_a % value_b
        if greatest_common_divisor == 1:
            if value_b - 1 > value_c:
                return 'No'
        elif greatest_common_divisor == value_b:
            if remainder_a_b > value_c:
                return 'No'
        else:
            if (value_b - greatest_common_divisor) > value_c:
                return 'No'
    return 'Yes'

def read_input_data():
    total_cases = int(input())
    input_list_a = []
    input_list_b = []
    input_list_c = []
    input_list_d = []
    for _ in range(total_cases):
        input_a, input_b, input_c, input_d = map(int, input().split())
        input_list_a.append(input_a)
        input_list_b.append(input_b)
        input_list_c.append(input_c)
        input_list_d.append(input_d)
    return total_cases, input_list_a, input_list_b, input_list_c, input_list_d

def main_entry_point():
    num_cases, list_a, list_b, list_c, list_d = read_input_data()
    outcome_list = process_test_cases(num_cases, list_a, list_b, list_c, list_d)
    for outcome in outcome_list:
        print(outcome)

if __name__ == '__main__':
    main_entry_point()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024338087532669306
    2. '```' → logprob: -7.252433776855469
    3. '\n' → logprob: -7.377433776855469
    4. '\' → logprob: -7.877433776855469
    5. 'import' → logprob: -8.002433776855469
    6. '<|end|>' → logprob: -9.252433776855469
    7. '.pi' → logprob: -10.127433776855469
    8. 'a' → logprob: -11.002433776855469
    9. '.e' → logprob: -11.127433776855469
    10. '<|end|>' → logprob: -11.127433776855469

Token 4: ' process' (ID: 2273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00788023043423891
    2. ' math' → logprob: -5.257880210876465
    3. ' sqrt' → logprob: -6.507880210876465
    4. ' ' → logprob: -8.257880210876465
    5. ' factorial' → logprob: -8.257880210876465
    6. ' calculate' → logprob: -9.007880210876465
    7. ' space' → logprob: -9.382880210876465
    8. '_' → logprob: -9.757880210876465
    9. ' pow' → logprob: -9.757880210876465
    10. ' f' → logprob: -10.007880210876465

Token 5: '_test' (ID: 9969)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5785437822341919
    2. '_' → logprob: -0.8285437822341919
    3. '(process' → logprob: -7.453543663024902
    4. ' (' → logprob: -7.578543663024902
    5. ')' → logprob: -8.078543663024902
    6. '```' → logprob: -8.453543663024902
    7. '_data' → logprob: -8.578543663024902
    8. '_token' → logprob: -8.828543663024902
    9. '_(' → logprob: -9.453543663024902
    10. '_process' → logprob: -9.703543663024902

Token 6: '_cases' (ID: 115457)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4909888803958893
    2. '(' → logprob: -1.365988850593567
    3. 's' → logprob: -2.1159889698028564
    4. '_s' → logprob: -5.115988731384277
    5. '(_' → logprob: -5.990988731384277
    6. '_case' → logprob: -6.990988731384277
    7. 'ing' → logprob: -7.115988731384277
    8. '(s' → logprob: -7.490988731384277
    9. '_input' → logprob: -8.365988731384277
    10. '_(' → logprob: -8.615988731384277

Token 7: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004275346174836159
    2. '```' → logprob: -6.129275321960449
    3. '_' → logprob: -6.629275321960449
    4. ':' → logprob: -8.50427532196045
    5. '():' → logprob: -8.75427532196045
    6. '(
' → logprob: -9.87927532196045
    7. '<|end|>' → logprob: -10.12927532196045
    8. '[' → logprob: -10.12927532196045
    9. '(user' → logprob: -10.25427532196045
    10. '(_:' → logprob: -10.75427532196045

Token 8: '_cases' (ID: 115457)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.148708462715149
    2. '_' → logprob: -1.273708462715149
    3. '_s' → logprob: -1.273708462715149
    4. '_cases' → logprob: -2.3987083435058594
    5. ' _' → logprob: -3.6487083435058594
    6. ')_' → logprob: -5.648708343505859
    7. ' s' → logprob: -8.02370834350586
    8. ')' → logprob: -8.02370834350586
    9. '_test' → logprob: -8.02370834350586
    10. '_tests' → logprob: -8.39870834350586

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005200279993005097
    2. ',' → logprob: -8.500519752502441
    3. ':' → logprob: -8.625519752502441
    4. ')' → logprob: -9.000519752502441
    5. '):
' → logprob: -12.125519752502441
    6. ' ):' → logprob: -12.750519752502441
    7. '```' → logprob: -13.875519752502441
    8. 's' → logprob: -14.250519752502441
    9. '():' → logprob: -14.375519752502441
    10. '=' → logprob: -14.625519752502441

Token 10: ' list' (ID: 1562)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.43652647733688354
    2. ' cases' → logprob: -1.0615265369415283
    3. ' case' → logprob: -5.561526298522949
    4. ')' → logprob: -7.061526298522949
    5. ' data' → logprob: -7.061526298522949
    6. ' testcase' → logprob: -7.561526298522949
    7. ' input' → logprob: -7.811526298522949
    8. ' num' → logprob: -7.811526298522949
    9. ' tests' → logprob: -8.43652629852295
    10. 'cases' → logprob: -9.06152629852295

Token 11: '_a' (ID: 10852)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39992180466651917
    2. '):' → logprob: -2.0249218940734863
    3. '_s' → logprob: -2.5249218940734863
    4. '_of' → logprob: -2.8999218940734863
    5. '_' → logprob: -3.0249218940734863
    6. ')' → logprob: -5.274921894073486
    7. '):
' → logprob: -6.149921894073486
    8. ')_' → logprob: -6.274921894073486
    9. '=' → logprob: -7.274921894073486
    10. 'of' → logprob: -7.774921894073486

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04644206911325455
    2. ',' → logprob: -3.1714420318603516
    3. '[' → logprob: -6.421442031860352
    4. ')' → logprob: -7.296442031860352
    5. 's' → logprob: -7.421442031860352
    6. ':' → logprob: -9.296442031860352
    7. '):
' → logprob: -9.296442031860352
    8. '_list' → logprob: -9.421442031860352
    9. '[]):' → logprob: -9.546442031860352
    10. ' ):' → logprob: -10.421442031860352

Token 13: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.02327471412718296
    2. 'list' → logprob: -3.7732746601104736
    3. '_list' → logprob: -11.148274421691895
    4. ')' → logprob: -13.023274421691895
    5. ' ' → logprob: -13.023274421691895
    6. '```' → logprob: -13.273274421691895
    7. ',' → logprob: -14.023274421691895
    8. 'a' → logprob: -14.148274421691895
    9. 'List' → logprob: -14.398274421691895
    10. 'b' → logprob: -14.523274421691895

Token 14: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0021161199547350407
    2. '_' → logprob: -6.8771162033081055
    3. '_a' → logprob: -6.8771162033081055
    4. '_s' → logprob: -10.877116203308105
    5. ' _' → logprob: -11.877116203308105
    6. 's' → logprob: -12.127116203308105
    7. 'b' → logprob: -12.252116203308105
    8. '_c' → logprob: -12.877116203308105
    9. '_)' → logprob: -13.002116203308105
    10. ')' → logprob: -13.377116203308105

Token 15: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009881501318886876
    2. ')' → logprob: -8.125988006591797
    3. ':' → logprob: -8.125988006591797
    4. ',' → logprob: -8.250988006591797
    5. '):
' → logprob: -9.750988006591797
    6. '```' → logprob: -10.375988006591797
    7. '**' → logprob: -11.375988006591797
    8. ''):' → logprob: -11.750988006591797
    9. '[' → logprob: -12.375988006591797
    10. '   ' → logprob: -12.750988006591797

Token 16: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.022968357428908348
    2. 'list' → logprob: -3.897968292236328
    3. ' num' → logprob: -7.647968292236328
    4. ' result' → logprob: -8.022968292236328
    5. ' process' → logprob: -8.647968292236328
    6. ' c' → logprob: -9.272968292236328
    7. ' results' → logprob: -9.772968292236328
    8. ' )' → logprob: -9.772968292236328
    9. ' lists' → logprob: -9.772968292236328
    10. ' epsilon' → logprob: -9.772968292236328

Token 17: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.38620853424072266
    2. '_' → logprob: -1.6362085342407227
    3. '_a' → logprob: -2.5112085342407227
    4. '_)' → logprob: -3.6362085342407227
    5. '_,' → logprob: -4.886208534240723
    6. '_s' → logprob: -5.761208534240723
    7. ')' → logprob: -5.886208534240723
    8. 's' → logprob: -6.011208534240723
    9. '):' → logprob: -6.886208534240723
    10. ')_' → logprob: -8.261208534240723

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011240257881581783
    2. ')' → logprob: -7.376123905181885
    3. ':' → logprob: -8.251124382019043
    4. ',' → logprob: -8.751124382019043
    5. '):
' → logprob: -10.001124382019043
    6. ''):' → logprob: -11.876124382019043
    7. '```' → logprob: -12.001124382019043
    8. '**' → logprob: -12.626124382019043
    9. '   ' → logprob: -13.376124382019043
    10. ' ):' → logprob: -13.501124382019043

Token 19: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.03524937108159065
    2. 'list' → logprob: -3.4102494716644287
    3. ' num' → logprob: -7.03524923324585
    4. ' ' → logprob: -9.285249710083008
    5. 'num' → logprob: -9.410249710083008
    6. ' result' → logprob: -9.847749710083008
    7. ')' → logprob: -9.847749710083008
    8. ' )' → logprob: -10.160249710083008
    9. '_list' → logprob: -10.222749710083008
    10. ',' → logprob: -10.347749710083008

Token 20: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.11175095289945602
    2. '_s' → logprob: -2.736750841140747
    3. '_' → logprob: -3.736750841140747
    4. 's' → logprob: -4.861751079559326
    5. '_)' → logprob: -5.486751079559326
    6. '_a' → logprob: -5.611751079559326
    7. ')' → logprob: -7.236751079559326
    8. '_e' → logprob: -8.486750602722168
    9. '_b' → logprob: -8.736750602722168
    10. ')_' → logprob: -8.861750602722168

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007332704844884574
    2. ')' → logprob: -7.500733375549316
    3. ':' → logprob: -8.750733375549316
    4. ',' → logprob: -12.125733375549316
    5. ''):' → logprob: -12.375733375549316
    6. '):
' → logprob: -12.375733375549316
    7. '```' → logprob: -13.125733375549316
    8. ' ):' → logprob: -13.625733375549316
    9. '**' → logprob: -14.250733375549316
    10. '   ' → logprob: -14.500733375549316

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5784003734588623
    2. '   ' → logprob: -0.8284003734588623
    3. ':
' → logprob: -6.828400611877441
    4. '```' → logprob: -7.328400611877441
    5. ' :' → logprob: -9.328400611877441
    6. '    ' → logprob: -9.328400611877441
    7. '    
' → logprob: -9.453400611877441
    8. '):' → logprob: -9.453400611877441
    9. ' ' → logprob: -9.453400611877441
    10. '\' → logprob: -9.953400611877441

Token 23: ' results' (ID: 4376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1086883693933487
    2. 'result' → logprob: -2.8586883544921875
    3. ' results' → logprob: -3.9836883544921875
    4. ' result' → logprob: -4.1086883544921875
    5. 'results' (adapté à ' results') → logprob: -4.9836883544921875
    6. '```' → logprob: -6.8586883544921875
    7. '    
' → logprob: -7.3586883544921875
    8. ' for' → logprob: -7.8586883544921875
    9. ' ' → logprob: -7.9836883544921875
    10. ':' → logprob: -8.358688354492188

Token 24: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09440461546182632
    2. '=' → logprob: -2.469404697418213
    3. '[' → logprob: -6.344404697418213
    4. '[:]' → logprob: -6.344404697418213
    5. ' ' → logprob: -6.844404697418213
    6. '.' → logprob: -8.094404220581055
    7. '=[]' → logprob: -9.219404220581055
    8. '[]' → logprob: -9.344404220581055
    9. ')' → logprob: -9.469404220581055
    10. '_' → logprob: -9.719404220581055

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10043752938508987
    2. '=' → logprob: -2.350437641143799
    3. ' ' → logprob: -8.72543716430664
    4. '_' → logprob: -10.72543716430664
    5. '=[]' → logprob: -11.47543716430664
    6. 's' → logprob: -11.85043716430664
    7. '[:]' → logprob: -11.85043716430664
    8. '.' → logprob: -12.35043716430664
    9. '[' → logprob: -12.60043716430664
    10. '  ' → logprob: -12.60043716430664

Token 26: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31387922167778015
    2. ' []' → logprob: -1.3138792514801025
    3. '[' → logprob: -7.438879013061523
    4. ' [' → logprob: -10.688879013061523
    5. '[]
' → logprob: -13.063879013061523
    6. ' ' → logprob: -13.063879013061523
    7. ' []
' → logprob: -14.313879013061523
    8. '[]}' → logprob: -15.188879013061523
    9. '[],' → logprob: -15.313879013061523
    10. '   ' → logprob: -15.563879013061523

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03986635431647301
    2. '
' → logprob: -4.2898664474487305
    3. '    
' → logprob: -4.2898664474487305
    4. ' for' → logprob: -5.1648664474487305
    5. 'for' → logprob: -6.0398664474487305
    6. '    ' → logprob: -6.6648664474487305
    7. '\n' → logprob: -7.6648664474487305
    8. ' ' → logprob: -7.7898664474487305
    9. '' → logprob: -8.53986644744873
    10. '```' → logprob: -8.53986644744873

Token 28: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05072447285056114
    2. ' for' → logprob: -3.675724506378174
    3. 'for' (adapté à ' for') → logprob: -3.800724506378174
    4. '    
' → logprob: -6.675724506378174
    5. '```' → logprob: -8.175724029541016
    6. '    ' → logprob: -9.550724029541016
    7. ' ' → logprob: -10.175724029541016
    8. '
' → logprob: -10.425724029541016
    9. ' 
' → logprob: -11.300724029541016
    10. '\n' → logprob: -11.425724029541016

Token 29: ' case' (ID: 1890)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11831448972225189
    2. ' i' → logprob: -2.243314504623413
    3. ' _' → logprob: -5.743314266204834
    4. '_' → logprob: -6.243314266204834
    5. ' num' → logprob: -9.368314743041992
    6. '  ' → logprob: -9.618314743041992
    7. 'i' → logprob: -9.743314743041992
    8. ' case' → logprob: -9.743314743041992
    9. ' space' → logprob: -11.118314743041992
    10. ' ‌' → logprob: -11.618314743041992

Token 30: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038175296038389206
    2. ' in' → logprob: -4.163175106048584
    3. ' ' → logprob: -4.413175106048584
    4. ' _' → logprob: -5.288175106048584
    5. '_in' → logprob: -6.038175106048584
    6. '_i' → logprob: -7.163175106048584
    7. 's' → logprob: -7.538175106048584
    8. 'in' → logprob: -7.913175106048584
    9. '  ' → logprob: -8.163175582885742
    10. '   ' → logprob: -9.163175582885742

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008982192724943161
    2. 'in' → logprob: -4.883982181549072
    3. ' ' → logprob: -6.633982181549072
    4. ' ,' → logprob: -11.38398265838623
    5. '  ' → logprob: -11.75898265838623
    6. ',' → logprob: -11.75898265838623
    7. '   ' → logprob: -12.00898265838623
    8. '0' → logprob: -12.00898265838623
    9. '    ' → logprob: -12.38398265838623
    10. '```' → logprob: -12.63398265838623

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0036259624175727367
    2. 'range' → logprob: -5.628625869750977
    3. ' ' → logprob: -10.628625869750977
    4. '	range' → logprob: -14.003625869750977
    5. ' xrange' → logprob: -15.003625869750977
    6. ' space' → logprob: -15.378625869750977
    7. '_range' → logprob: -16.878625869750977
    8. ' num' → logprob: -17.003625869750977
    9. ' in' → logprob: -17.253625869750977
    10. '(range' → logprob: -17.753625869750977

Token 33: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.2533307373523712
    2. '(' → logprob: -1.5033307075500488
    3. ' (' → logprob: -7.003330707550049
    4. '(len' → logprob: -7.628330707550049
    5. ' num' → logprob: -13.128331184387207
    6. ')' → logprob: -14.378331184387207
    7. '(n' → logprob: -14.503331184387207
    8. '(NUM' → logprob: -15.128331184387207
    9. '(`' → logprob: -15.378331184387207
    10. 'num' → logprob: -15.378331184387207

Token 34: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.00011510594777064398
    2. '_' → logprob: -9.250115394592285
    3. ' _' → logprob: -11.875115394592285
    4. ')_' → logprob: -12.125115394592285
    5. '_ca' → logprob: -13.250115394592285
    6. '_case' → logprob: -14.000115394592285
    7. '_c' → logprob: -14.250115394592285
    8. '_codes' → logprob: -14.625115394592285
    9. '```' → logprob: -14.875115394592285
    10. '\' → logprob: -15.250115394592285

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017132589127868414
    2. ':' → logprob: -6.626713275909424
    3. ')' → logprob: -8.376712799072266
    4. '   ' → logprob: -9.751712799072266
    5. '):
' → logprob: -9.876712799072266
    6. '+' → logprob: -11.001712799072266
    7. ',' → logprob: -11.626712799072266
    8. ']:' → logprob: -12.001712799072266
    9. ' ):' → logprob: -12.376712799072266
    10. '+:' → logprob: -12.626712799072266

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0352051742374897
    2. '    ' → logprob: -4.035205364227295
    3. '        
' → logprob: -5.535205364227295
    4. '```' → logprob: -6.160205364227295
    5. '     
' → logprob: -6.160205364227295
    6. ''' → logprob: -6.535205364227295
    7. '   ' → logprob: -6.535205364227295
    8. '     ' → logprob: -7.035205364227295
    9. '`' → logprob: -7.160205364227295
    10. ' ' → logprob: -7.410205364227295

Token 37: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5096672773361206
    2. '        ' → logprob: -1.7596672773361206
    3. '    ' → logprob: -1.8846672773361206
    4. ' ' → logprob: -1.8846672773361206
    5. 'a' → logprob: -3.00966739654541
    6. '        
' → logprob: -3.13466739654541
    7. ' a' → logprob: -3.50966739654541
    8. '     
' → logprob: -3.63466739654541
    9. '   ' → logprob: -3.75966739654541
    10. 'n' → logprob: -3.88466739654541

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017970817163586617
    2. '_' → logprob: -4.642971038818359
    3. '=' → logprob: -5.017971038818359
    4. 's' → logprob: -7.017971038818359
    5. ' ' → logprob: -7.517971038818359
    6. '_space' → logprob: -10.39297103881836
    7. ' _' → logprob: -10.64297103881836
    8. '_s' → logprob: -10.89297103881836
    9. '[' → logprob: -11.39297103881836
    10. ')' → logprob: -11.89297103881836

Token 39: ' process' (ID: 2273)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20109088718891144
    2. ' (' → logprob: -2.3260908126831055
    3. ' list' → logprob: -3.5760908126831055
    4. ' ' → logprob: -3.9510908126831055
    5. ' max' → logprob: -4.0760908126831055
    6. 'math' → logprob: -4.9510908126831055
    7. ' int' → logprob: -5.5760908126831055
    8. '(' → logprob: -5.7010908126831055
    9. ' abs' → logprob: -6.7010908126831055
    10. '(math' → logprob: -6.8260908126831055

Token 40: '_single' (ID: 46053)
  Prédit: '_test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_test' → logprob: -0.6592475175857544
    2. '_' → logprob: -0.7842475175857544
    3. '_case' → logprob: -3.784247398376465
    4. '_a' → logprob: -8.034247398376465
    5. '_result' → logprob: -8.159247398376465
    6. '_t' → logprob: -8.409247398376465
    7. '_(' → logprob: -8.409247398376465
    8. '_cases' → logprob: -8.534247398376465
    9. '_math' → logprob: -8.659247398376465
    10. '(' → logprob: -8.659247398376465

Token 41: '_case' (ID: 43667)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4260741174221039
    2. '_test' → logprob: -1.5510741472244263
    3. '_case' → logprob: -2.0510740280151367
    4. '(' → logprob: -5.551074028015137
    5. ' _' → logprob: -6.926074028015137
    6. '_function' → logprob: -8.051074028015137
    7. '_line' → logprob: -8.801074028015137
    8. '_result' → logprob: -9.051074028015137
    9. ' ' → logprob: -9.051074028015137
    10. '_token' → logprob: -9.301074028015137

Token 42: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009858887642621994
    2. '(list' → logprob: -7.125986099243164
    3. ' (' → logprob: -9.375986099243164
    4. '(case' → logprob: -10.375986099243164
    5. '(
' → logprob: -10.875986099243164
    6. '((' → logprob: -11.500986099243164
    7. '(a' → logprob: -12.875986099243164
    8. '(None' → logprob: -13.250986099243164
    9. '(space' → logprob: -13.250986099243164
    10. '(len' → logprob: -13.375986099243164

Token 43: '           ' (ID: 352)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12744750082492828
    2. 'list' → logprob: -2.1274476051330566
    3. ')' → logprob: -8.377447128295898
    4. '(list' → logprob: -9.377447128295898
    5. ' )' → logprob: -9.627447128295898
    6. ' case' → logprob: -9.877447128295898
    7. ' (' → logprob: -10.877447128295898
    8. '   ' → logprob: -11.127447128295898
    9. '(' → logprob: -11.127447128295898
    10. 'case' → logprob: -11.252447128295898

Token 44: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.4741637408733368
    2. ' list' → logprob: -0.9741637706756592
    3. ')' → logprob: -10.724164009094238
    4. '   ' → logprob: -11.349164009094238
    5. '           ' → logprob: -11.724164009094238
    6. ' )' → logprob: -11.849164009094238
    7. '(list' → logprob: -11.849164009094238
    8. 'num' → logprob: -12.349164009094238
    9. '_list' → logprob: -12.849164009094238
    10. '            ' → logprob: -12.849164009094238

Token 45: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -7.827200897736475e-05
    2. '_' → logprob: -9.625078201293945
    3. '_c' → logprob: -12.250078201293945
    4. '_b' → logprob: -13.000078201293945
    5. '_s' → logprob: -14.000078201293945
    6. ' _' → logprob: -14.000078201293945
    7. ')_' → logprob: -14.000078201293945
    8. ')' → logprob: -14.125078201293945
    9. 'a' → logprob: -14.750078201293945
    10. '_d' → logprob: -15.000078201293945

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.908022285439074e-05
    2. '[count' → logprob: -11.750059127807617
    3. ',' → logprob: -11.875059127807617
    4. ' [' → logprob: -12.125059127807617
    5. '[counter' → logprob: -12.125059127807617
    6. '```' → logprob: -12.250059127807617
    7. '[class' → logprob: -12.375059127807617
    8. '[cell' → logprob: -13.000059127807617
    9. ')[' → logprob: -13.125059127807617
    10. '[current' → logprob: -13.375059127807617

Token 47: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.014178205281496048
    2. ' case' → logprob: -4.264178276062012
    3. '[' → logprob: -11.764178276062012
    4. '(case' → logprob: -12.014178276062012
    5. '_case' → logprob: -14.764178276062012
    6. ' ' → logprob: -15.764178276062012
    7. ']' → logprob: -15.889178276062012
    8. '   ' → logprob: -16.514177322387695
    9. '][' → logprob: -16.639177322387695
    10. '	case' → logprob: -17.264177322387695

Token 48: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.750000953674316
    3. ' _' → logprob: -15.875000953674316
    4. 'index' → logprob: -17.375
    5. '_INDEX' → logprob: -17.625
    6. '_i' → logprob: -18.25
    7. ']_' → logprob: -18.375
    8. '```' → logprob: -18.625
    9. 'Index' → logprob: -18.75
    10. '_indices' → logprob: -19.25

Token 49: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.040555018931627274
    2. ']' → logprob: -3.665555000305176
    3. ' ],' → logprob: -4.915555000305176
    4. ',' → logprob: -5.540555000305176
    5. '),' → logprob: -6.790555000305176
    6. '],
' → logprob: -7.165555000305176
    7. ' ]' → logprob: -7.540555000305176
    8. ')' → logprob: -8.165555000305176
    9. ',
' → logprob: -10.290555000305176
    10. ' ,' → logprob: -10.415555000305176

Token 50: '           ' (ID: 352)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.03860422968864441
    2. 'list' → logprob: -3.288604259490967
    3. '            ' → logprob: -8.538603782653809
    4. ' ' → logprob: -8.663603782653809
    5. ' ' → logprob: -9.288603782653809
    6. '           ' → logprob: -10.913603782653809
    7. ',list' → logprob: -11.288603782653809
    8. '                ' → logprob: -11.413603782653809
    9. '_list' → logprob: -11.663603782653809
    10. '(list' → logprob: -11.788603782653809

Token 51: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.045655567198991776
    2. 'list' (adapté à ' list') → logprob: -3.1706554889678955
    3. ' ' → logprob: -6.295655727386475
    4. ' ' → logprob: -7.670655727386475
    5. ')' → logprob: -8.670655250549316
    6. ' )' → logprob: -10.545655250549316
    7. '=list' → logprob: -10.795655250549316
    8. '            ' → logprob: -11.045655250549316
    9. '<|end|>' → logprob: -11.295655250549316
    10. ',list' → logprob: -11.420655250549316

Token 52: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.002275031292811036
    2. '_a' → logprob: -6.377274990081787
    3. '_c' → logprob: -7.627274990081787
    4. '_d' → logprob: -10.002275466918945
    5. '_s' → logprob: -11.377275466918945
    6. '_' → logprob: -11.502275466918945
    7. '_e' → logprob: -12.627275466918945
    8. '_f' → logprob: -12.627275466918945
    9. ')_' → logprob: -13.002275466918945
    10. 'underscore' → logprob: -13.252275466918945

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.9888433093437925e-05
    2. ')[' → logprob: -10.875040054321289
    3. ')' → logprob: -12.125040054321289
    4. '```' → logprob: -12.250040054321289
    5. '][' → logprob: -12.500040054321289
    6. '[
' → logprob: -12.875040054321289
    7. ' [' → logprob: -13.000040054321289
    8. ']' → logprob: -14.625040054321289
    9. '`' → logprob: -14.750040054321289
    10. '   ' → logprob: -15.125040054321289

Token 54: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -1.0921942703134846e-05
    2. ' case' → logprob: -11.62501049041748
    3. '[' → logprob: -13.25001049041748
    4. '_case' → logprob: -16.750011444091797
    5. ']' → logprob: -17.250011444091797
    6. '(case' → logprob: -17.250011444091797
    7. ')' → logprob: -17.500011444091797
    8. '][' → logprob: -18.125011444091797
    9. ' ' → logprob: -18.750011444091797
    10. 'index' → logprob: -18.875011444091797

Token 55: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.190178904333152e-05
    2. 'index' → logprob: -11.625031471252441
    3. '_case' → logprob: -11.750031471252441
    4. ']_' → logprob: -11.875031471252441
    5. '[' → logprob: -13.000031471252441
    6. '_' → logprob: -13.125031471252441
    7. ']' → logprob: -13.750031471252441
    8. 'Index' → logprob: -14.375031471252441
    9. '```' → logprob: -14.875031471252441
    10. 'case' → logprob: -15.375031471252441

Token 56: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4849829375743866
    2. ',' → logprob: -1.234982967376709
    3. '),' → logprob: -2.609982967376709
    4. ',
' → logprob: -4.734982967376709
    5. ']' → logprob: -5.609982967376709
    6. ')' → logprob: -5.734982967376709
    7. '           ' → logprob: -6.484982967376709
    8. '       ' → logprob: -6.484982967376709
    9. '],
' → logprob: -7.609982967376709
    10. '<|end|>' → logprob: -8.73498249053955

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41227391362190247
    2. '            ' → logprob: -1.41227388381958
    3. ' list' → logprob: -2.78727388381958
    4. ' ' → logprob: -4.28727388381958
    5. ' ' → logprob: -5.41227388381958
    6. '[' → logprob: -5.91227388381958
    7. 'list' → logprob: -5.91227388381958
    8. '             ' → logprob: -6.41227388381958
    9. '               ' → logprob: -6.41227388381958
    10. '                ' → logprob: -6.53727388381958

Token 58: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.023635126650333405
    2. 'list' (adapté à ' list') → logprob: -3.773635149002075
    3. ' ' → logprob: -8.523634910583496
    4. '           ' → logprob: -9.273634910583496
    5. '            ' → logprob: -9.773634910583496
    6. ' ' → logprob: -10.523634910583496
    7. ')' → logprob: -12.773634910583496
    8. '(list' → logprob: -12.898634910583496
    9. '	list' → logprob: -13.773634910583496
    10. '_list' → logprob: -13.898634910583496

Token 59: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.35837464465294e-05
    2. '_d' → logprob: -10.250043869018555
    3. 'c' → logprob: -12.125043869018555
    4. '_a' → logprob: -13.625043869018555
    5. '_' → logprob: -14.750043869018555
    6. '```' → logprob: -15.125043869018555
    7. 'd' → logprob: -15.375043869018555
    8. '_f' → logprob: -15.625043869018555
    9. ')_' → logprob: -16.375043869018555
    10. '_case' → logprob: -17.000043869018555

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.129266067640856e-05
    2. ')[' → logprob: -11.375020980834961
    3. ')' → logprob: -12.250020980834961
    4. '[
' → logprob: -13.000020980834961
    5. '][' → logprob: -14.250020980834961
    6. '```' → logprob: -14.250020980834961
    7. '       ' → logprob: -14.625020980834961
    8. ' [' → logprob: -14.750020980834961
    9. '           ' → logprob: -15.250020980834961
    10. ']' → logprob: -16.12502098083496

Token 61: 'case' (ID: 9994)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028958094771951437
    2. 'case' → logprob: -5.877895832061768
    3. ')' → logprob: -10.00289535522461
    4. ' case' → logprob: -10.87789535522461
    5. ')[' → logprob: -11.37789535522461
    6. '][' → logprob: -12.12789535522461
    7. '[
' → logprob: -12.37789535522461
    8. ' [' → logprob: -12.75289535522461
    9. ']' → logprob: -13.62789535522461
    10. '```' → logprob: -14.75289535522461

Token 62: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.179569077678025e-05
    2. 'index' → logprob: -10.250041961669922
    3. 'Index' → logprob: -12.750041961669922
    4. '[' → logprob: -13.875041961669922
    5. 'case' → logprob: -14.875041961669922
    6. '])' → logprob: -15.000041961669922
    7. '_case' → logprob: -15.000041961669922
    8. ']_' → logprob: -15.000041961669922
    9. '_INDEX' → logprob: -15.250041961669922
    10. ')' → logprob: -15.500041961669922

Token 63: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012785682454705238
    2. ',
' → logprob: -4.512785911560059
    3. ')' → logprob: -7.012785911560059
    4. '),' → logprob: -7.637785911560059
    5. '           ' → logprob: -8.637785911560059
    6. '       ' → logprob: -9.512785911560059
    7. '],' → logprob: -10.887785911560059
    8. '<|end|>' → logprob: -11.137785911560059
    9. ' ,' → logprob: -11.262785911560059
    10. ',

' → logprob: -11.387785911560059

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11978675425052643
    2. ' list' → logprob: -2.8697867393493652
    3. '            ' → logprob: -3.2447867393493652
    4. ' ' → logprob: -4.869786739349365
    5. 'list' → logprob: -5.494786739349365
    6. ' ' → logprob: -6.619786739349365
    7. '               ' → logprob: -7.119786739349365
    8. '        ' → logprob: -7.369786739349365
    9. '        ' → logprob: -7.494786739349365
    10. '          ' → logprob: -7.619786739349365

Token 65: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.048611097037792206
    2. 'list' (adapté à ' list') → logprob: -3.0486111640930176
    3. '           ' → logprob: -11.42361068725586
    4. '            ' → logprob: -11.92361068725586
    5. ' ' → logprob: -12.42361068725586
    6. '(list' → logprob: -14.92361068725586
    7. '	list' → logprob: -15.04861068725586
    8. '               ' → logprob: -15.04861068725586
    9. ' ' → logprob: -15.67361068725586
    10. '        ' → logprob: -15.67361068725586

Token 66: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.2113979209971149e-05
    2. 'd' → logprob: -12.125012397766113
    3. '_' → logprob: -12.625012397766113
    4. '[' → logprob: -13.375012397766113
    5. '```' → logprob: -14.000012397766113
    6. '_c' → logprob: -14.875012397766113
    7. '[_' → logprob: -16.000011444091797
    8. '_[' → logprob: -16.375011444091797
    9. ''_' → logprob: -16.875011444091797
    10. '_b' → logprob: -16.875011444091797

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003649017889983952
    2. ']' → logprob: -8.625365257263184
    3. ')' → logprob: -9.125365257263184
    4. ')[' → logprob: -10.375365257263184
    5. '][' → logprob: -10.500365257263184
    6. '[
' → logprob: -11.250365257263184
    7. ' [' → logprob: -13.250365257263184
    8. '```' → logprob: -13.500365257263184
    9. '])' → logprob: -15.000365257263184
    10. '   ' → logprob: -15.000365257263184

Token 68: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.00026181264547631145
    2. '[' → logprob: -8.750262260437012
    3. ' case' → logprob: -9.375262260437012
    4. ']' → logprob: -11.125262260437012
    5. '][' → logprob: -13.000262260437012
    6. '(case' → logprob: -14.125262260437012
    7. '   ' → logprob: -15.500262260437012
    8. '```' → logprob: -15.875262260437012
    9. '	case' → logprob: -16.375261306762695
    10. 'index' → logprob: -16.500261306762695

Token 69: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.650518920039758e-06
    2. 'index' → logprob: -13.000003814697266
    3. '_case' → logprob: -15.125003814697266
    4. '_INDEX' → logprob: -15.250003814697266
    5. 'Index' → logprob: -15.500003814697266
    6. '_' → logprob: -15.750003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '```' → logprob: -16.625003814697266
    9. ']_' → logprob: -16.875003814697266
    10. 'case' → logprob: -16.875003814697266

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.137130498653278e-05
    2. '),' → logprob: -10.250081062316895
    3. ')
' → logprob: -10.625081062316895
    4. '       ' → logprob: -11.500081062316895
    5. '   ' → logprob: -11.750081062316895
    6. ' )' → logprob: -13.250081062316895
    7. '           ' → logprob: -14.625081062316895
    8. ']' → logprob: -15.375081062316895
    9. '))' → logprob: -15.500081062316895
    10. ')))' → logprob: -15.875081062316895

Token 71: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026825590059161186
    2. '       ' → logprob: -3.7768256664276123
    3. ')
' → logprob: -5.651825428009033
    4. '   ' → logprob: -9.901825904846191
    5. '```' → logprob: -13.151825904846191
    6. ' )' → logprob: -13.276825904846191
    7. ')`' → logprob: -13.276825904846191
    8. ')\
' → logprob: -13.526825904846191
    9. '           ' → logprob: -13.776825904846191
    10. '`)' → logprob: -13.901825904846191

Token 72: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006911090458743274
    2. ')
' (adapté à ' )
') → logprob: -7.500690937042236
    3. '   ' → logprob: -9.125691413879395
    4. '       ' → logprob: -10.625691413879395
    5. ' )' → logprob: -12.625691413879395
    6. ')
' → logprob: -15.125691413879395
    7. ')`' → logprob: -15.250691413879395
    8. '```' → logprob: -15.500691413879395
    9. '`)' → logprob: -15.750691413879395
    10. ' ' → logprob: -15.875691413879395

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09222175925970078
    2. ')' → logprob: -2.467221736907959
    3. ')
' → logprob: -6.592221736907959
    4. '<|end|>' → logprob: -7.717221736907959
    5. '   ' → logprob: -7.842221736907959
    6. '        
' → logprob: -7.967221736907959
    7. '
' → logprob: -8.592222213745117
    8. '```' → logprob: -9.092222213745117
    9. '\n' → logprob: -9.717222213745117
    10. '\' → logprob: -9.842222213745117

Token 74: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3351570963859558
    2. 'results' (adapté à ' results') → logprob: -1.3351571559906006
    3. '
' → logprob: -4.9601569175720215
    4. ')' → logprob: -5.2101569175720215
    5. ')
' → logprob: -5.9601569175720215
    6. ' results' → logprob: -6.2101569175720215
    7. '   ' → logprob: -6.5851569175720215
    8. '        
' → logprob: -7.0851569175720215
    9. '_results' → logprob: -7.4601569175720215
    10. '(results' → logprob: -8.08515739440918

Token 75: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001502636878285557
    2. '.append' → logprob: -9.250150680541992
    3. '_append' → logprob: -10.750150680541992
    4. '_' → logprob: -11.375150680541992
    5. '._' → logprob: -12.125150680541992
    6. 's' → logprob: -13.000150680541992
    7. ' _' → logprob: -13.000150680541992
    8. '_lst' → logprob: -13.125150680541992
    9. '```' → logprob: -13.125150680541992
    10. '_results' → logprob: -13.750150680541992

Token 76: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02978682890534401
    2. '.' → logprob: -3.5297868251800537
    3. '.extend' → logprob: -11.029787063598633
    4. '.app' → logprob: -11.529787063598633
    5. '.ap' → logprob: -12.779787063598633
    6. '.add' → logprob: -12.904787063598633
    7. '.Append' → logprob: -13.279787063598633
    8. '.setdefault' → logprob: -13.904787063598633
    9. '.push' → logprob: -14.154787063598633
    10. ').' → logprob: -15.404787063598633

Token 77: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.07889991998672485
    2. '(' → logprob: -2.57889986038208
    3. '(
' → logprob: -12.203900337219238
    4. '(results' → logprob: -12.578900337219238
    5. '(

' → logprob: -15.078900337219238
    6. '(res' → logprob: -15.203900337219238
    7. '(resultado' → logprob: -15.203900337219238
    8. '(process' → logprob: -15.328900337219238
    9. '(return' → logprob: -15.578900337219238
    10. 'result' → logprob: -15.953900337219238

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015276329941116273
    2. ')
' → logprob: -8.875152587890625
    3. '   ' → logprob: -12.250152587890625
    4. '
' → logprob: -12.875152587890625
    5. ')return' → logprob: -13.125152587890625
    6. '`)' → logprob: -14.000152587890625
    7. '<|end|>' → logprob: -14.500152587890625
    8. '```' → logprob: -14.875152587890625
    9. ' )' → logprob: -15.000152587890625
    10. '\n' → logprob: -15.125152587890625

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17132413387298584
    2. '
' → logprob: -2.6713242530822754
    3. '    
' → logprob: -2.9213242530822754
    4. 'return' → logprob: -4.796324253082275
    5. '<|end|>' → logprob: -5.046324253082275
    6. '\n' → logprob: -5.296324253082275
    7. '  
' → logprob: -5.546324253082275
    8. ' ' → logprob: -6.171324253082275
    9. ' 
' → logprob: -6.421324253082275
    10. '' → logprob: -6.546324253082275

Token 80: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10243766009807587
    2. '   ' → logprob: -2.352437734603882
    3. ' return' → logprob: -6.977437496185303
    4. '    
' → logprob: -7.727437496185303
    5. '
' → logprob: -8.352437973022461
    6. '<|end|>' → logprob: -8.602437973022461
    7. '```' → logprob: -8.852437973022461
    8. '	return' → logprob: -9.227437973022461
    9. ' ' → logprob: -9.477437973022461
    10. ')' → logprob: -10.977437973022461

Token 81: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.004079828038811684
    2. 'results' → logprob: -5.504079818725586
    3. '(results' → logprob: -14.004079818725586
    4. '_results' → logprob: -14.754079818725586
    5. '	results' → logprob: -15.504079818725586
    6. ' ' → logprob: -17.004079818725586
    7. ' result' → logprob: -18.129079818725586
    8. 'Results' → logprob: -18.129079818725586
    9. '.results' → logprob: -18.879079818725586
    10. ' ' → logprob: -18.879079818725586

Token 82: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003660938236862421
    2. '_s' → logprob: -8.0003662109375
    3. '_list' → logprob: -10.6253662109375
    4. '```' → logprob: -13.3753662109375
    5. '_results' → logprob: -13.8753662109375
    6. 'ts' → logprob: -14.3753662109375
    7. '_' → logprob: -14.3753662109375
    8. 'results' → logprob: -14.5003662109375
    9. '_ts' → logprob: -14.7503662109375
    10. 't' → logprob: -14.7503662109375

Token 83: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3070038855075836
    2. '<|end|>' → logprob: -2.057003974914551
    3. '
' → logprob: -2.932003974914551
    4. '\' → logprob: -3.307003974914551
    5. '[' → logprob: -4.182003974914551
    6. '```' → logprob: -4.432003974914551
    7. '#' → logprob: -5.682003974914551
    8. ')' → logprob: -5.932003974914551
    9. '(' → logprob: -5.932003974914551
    10. '_' → logprob: -6.057003974914551

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23899634182453156
    2. '
' → logprob: -2.4889962673187256
    3. '\' → logprob: -2.7389962673187256
    4. 'd' → logprob: -3.1139962673187256
    5. '_' → logprob: -4.738996505737305
    6. '```' → logprob: -4.863996505737305
    7. '#' → logprob: -6.613996505737305
    8. '

' → logprob: -6.988996505737305
    9. 'de' → logprob: -7.113996505737305
    10. '[' → logprob: -8.738996505737305

Token 85: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.004208751488476992
    2. ' ' → logprob: -5.879208564758301
    3. ' space' → logprob: -7.879208564758301
    4. 'process' → logprob: -8.0042085647583
    5. '_process' → logprob: -8.2542085647583
    6. ' ' → logprob: -8.5042085647583
    7. ' calculate' → logprob: -9.6292085647583
    8. '_' → logprob: -9.8792085647583
    9. ' proces' → logprob: -10.2542085647583
    10. ' compute' → logprob: -11.3792085647583

Token 86: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.25222787261009216
    2. '_' → logprob: -1.5022279024124146
    3. ' _' → logprob: -8.877227783203125
    4. '_s' → logprob: -9.377227783203125
    5. '_S' → logprob: -10.627227783203125
    6. '__' → logprob: -11.002227783203125
    7. '```' → logprob: -12.377227783203125
    8. '_SINGLE' → logprob: -12.627227783203125
    9. '_
' → logprob: -12.752227783203125
    10. '_a' → logprob: -12.877227783203125

Token 87: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.16201026737689972
    2. '_' → logprob: -1.9120103120803833
    3. '_token' → logprob: -6.537010192871094
    4. ' _' → logprob: -9.787010192871094
    5. '_c' → logprob: -10.537010192871094
    6. '_single' → logprob: -10.537010192871094
    7. '```' → logprob: -10.662010192871094
    8. '_space' → logprob: -10.787010192871094
    9. '_code' → logprob: -11.162010192871094
    10. '_line' → logprob: -11.287010192871094

Token 88: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.240481914370321e-05
    2. ' (' → logprob: -10.875052452087402
    3. '("("' → logprob: -12.000052452087402
    4. '(a' → logprob: -12.250052452087402
    5. '(
' → logprob: -12.625052452087402
    6. '(user' → logprob: -13.375052452087402
    7. '<|end|>' → logprob: -13.625052452087402
    8. '():' → logprob: -13.625052452087402
    9. '('' → logprob: -13.750052452087402
    10. '(parent' → logprob: -13.875052452087402

Token 89: '_a' (ID: 10852)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4990862011909485
    2. '):' → logprob: -1.6240861415863037
    3. '_a' → logprob: -2.1240861415863037
    4. '_' → logprob: -3.1240861415863037
    5. ')' → logprob: -4.374086380004883
    6. '1' → logprob: -4.874086380004883
    7. 'a' → logprob: -5.374086380004883
    8. '(' → logprob: -6.124086380004883
    9. '_A' → logprob: -7.499086380004883
    10. '(a' → logprob: -7.499086380004883

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053240046836435795
    2. '):' → logprob: -5.255323886871338
    3. ' ,' → logprob: -10.255324363708496
    4. ')' → logprob: -10.880324363708496
    5. ',a' → logprob: -11.130324363708496
    6. ',value' → logprob: -12.505324363708496
    7. ' ' → logprob: -12.630324363708496
    8. ',
' → logprob: -13.005324363708496
    9. ':' → logprob: -13.130324363708496
    10. ' ):' → logprob: -13.380324363708496

Token 91: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.07890994846820831
    2. 'value' → logprob: -2.5789098739624023
    3. ' ' → logprob: -11.328909873962402
    4. ')' → logprob: -13.578909873962402
    5. ')value' → logprob: -13.828909873962402
    6. '<|end|>' → logprob: -13.828909873962402
    7. '"value' → logprob: -14.203909873962402
    8. '_value' → logprob: -14.703909873962402
    9. 'space' → logprob: -14.703909873962402
    10. ',' → logprob: -15.203909873962402

Token 92: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6271339654922485
    2. '_' → logprob: -1.0021339654922485
    3. '_a' → logprob: -2.377133846282959
    4. '_c' → logprob: -5.502133846282959
    5. '_d' → logprob: -7.002133846282959
    6. ' _' → logprob: -7.627133846282959
    7. '_e' → logprob: -8.877134323120117
    8. '_s' → logprob: -9.377134323120117
    9. '_f' → logprob: -9.377134323120117
    10. ')' → logprob: -9.877134323120117

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011033779446734115
    2. '):' → logprob: -9.500110626220703
    3. ' ,' → logprob: -10.625110626220703
    4. ')' → logprob: -12.625110626220703
    5. ',
' → logprob: -13.125110626220703
    6. ',value' → logprob: -13.250110626220703
    7. ' ' → logprob: -14.125110626220703
    8. '<|end|>' → logprob: -14.250110626220703
    9. '‌,' → logprob: -14.625110626220703
    10. ',int' → logprob: -14.875110626220703

Token 94: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0434424988925457
    2. 'value' → logprob: -3.168442487716675
    3. ' ' → logprob: -8.793442726135254
    4. ')' → logprob: -9.043442726135254
    5. '<|end|>' → logprob: -9.168442726135254
    6. ' )' → logprob: -10.418442726135254
    7. ')value' → logprob: -10.918442726135254
    8. '"value' → logprob: -12.543442726135254
    9. ''value' → logprob: -13.168442726135254
    10. ',value' → logprob: -13.168442726135254

Token 95: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.10419787466526031
    2. '_' → logprob: -2.4791979789733887
    3. '_d' → logprob: -5.229197978973389
    4. '_,' → logprob: -5.354197978973389
    5. ',' → logprob: -6.229197978973389
    6. '_b' → logprob: -6.354197978973389
    7. ')' → logprob: -7.854197978973389
    8. '_a' → logprob: -7.979197978973389
    9. ',_' → logprob: -8.72919750213623
    10. '_f' → logprob: -9.10419750213623

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. '):' → logprob: -10.875041007995605
    3. ' ,' → logprob: -11.000041007995605
    4. ',value' → logprob: -13.125041007995605
    5. ',
' → logprob: -13.375041007995605
    6. ')' → logprob: -14.500041007995605
    7. ' ' → logprob: -15.375041007995605
    8. '‌,' → logprob: -15.875041007995605
    9. ',b' → logprob: -16.00004005432129
    10. ',int' → logprob: -16.50004005432129

Token 97: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.257814884185791
    2. 'value' → logprob: -1.507814884185791
    3. ' ' → logprob: -5.382814884185791
    4. ')' → logprob: -7.507814884185791
    5. ' )' → logprob: -8.382814407348633
    6. ')value' → logprob: -8.757814407348633
    7. '"value' → logprob: -9.382814407348633
    8. ''value' → logprob: -10.007814407348633
    9. ' ' → logprob: -10.257814407348633
    10. 'space' → logprob: -10.507814407348633

Token 98: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0067548020742833614
    2. '_' → logprob: -5.0067548751831055
    3. '_c' → logprob: -11.756754875183105
    4. '_)' → logprob: -11.756754875183105
    5. ' _' → logprob: -12.006754875183105
    6. ')_' → logprob: -12.381754875183105
    7. '__' → logprob: -12.756754875183105
    8. ')' → logprob: -13.006754875183105
    9. '_
' → logprob: -13.381754875183105
    10. '_a' → logprob: -13.381754875183105

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002753981971181929
    2. ')' → logprob: -8.250275611877441
    3. ':' → logprob: -11.500275611877441
    4. '):
' → logprob: -13.125275611877441
    5. ' ):' → logprob: -13.500275611877441
    6. ',' → logprob: -15.375275611877441
    7. '():' → logprob: -16.750274658203125
    8. ')：' → logprob: -16.750274658203125
    9. ''):' → logprob: -17.250274658203125
    10. '   ' → logprob: -17.625274658203125

Token 100: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014678272418677807
    2. '(' → logprob: -5.014678478240967
    3. '   ' → logprob: -5.514678478240967
    4. ':
' → logprob: -6.764678478240967
    5. '):' → logprob: -7.389678478240967
    6. ' :' → logprob: -7.639678478240967
    7. ' ' → logprob: -7.764678478240967
    8. ' 
' → logprob: -8.014678001403809
    9. ')' → logprob: -8.889678001403809
    10. ',' → logprob: -9.014678001403809

Token 101: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16921471059322357
    2. ' 
' → logprob: -2.1692147254943848
    3. 'r' → logprob: -5.419214725494385
    4. ' if' → logprob: -5.544214725494385
    5. '   ' → logprob: -5.544214725494385
    6. '    ' → logprob: -5.669214725494385
    7. ' math' → logprob: -5.794214725494385
    8. ' )' → logprob: -6.169214725494385
    9. '     
' → logprob: -6.169214725494385
    10. ')' → logprob: -6.419214725494385

Token 102: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.04072912037372589
    2. ' math' → logprob: -4.29072904586792
    3. ' abs' → logprob: -4.29072904586792
    4. 'value' → logprob: -5.04072904586792
    5. ' (' → logprob: -5.79072904586792
    6. ' ' → logprob: -6.29072904586792
    7. ' not' → logprob: -8.040729522705078
    8. 'abs' → logprob: -8.540729522705078
    9. 'math' → logprob: -8.540729522705078
    10. ' isinstance' → logprob: -8.915729522705078

Token 103: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3009777367115021
    2. '_a' → logprob: -1.9259777069091797
    3. ' _' → logprob: -2.1759777069091797
    4. '_c' → logprob: -8.92597770690918
    5. '_b' → logprob: -9.42597770690918
    6. ' ' → logprob: -9.42597770690918
    7. '_d' → logprob: -9.67597770690918
    8. ' <' → logprob: -9.92597770690918
    9. ' ==' → logprob: -10.05097770690918
    10. ' >' → logprob: -10.30097770690918

Token 104: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11751631647348404
    2. ' ==' → logprob: -2.992516279220581
    3. ' <' → logprob: -3.992516279220581
    4. ' <=' → logprob: -4.24251651763916
    5. ' >=' → logprob: -4.99251651763916
    6. ' %' → logprob: -5.11751651763916
    7. ' ' → logprob: -5.36751651763916
    8. '>' → logprob: -5.49251651763916
    9. ' +' → logprob: -6.11751651763916
    10. ' *' → logprob: -6.36751651763916

Token 105: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3203669488430023
    2. 'value' → logprob: -1.4453669786453247
    3. ' ' → logprob: -4.070366859436035
    4. '0' → logprob: -4.320366859436035
    5. '=' → logprob: -5.195366859436035
    6. ' math' → logprob: -6.320366859436035
    7. 'math' → logprob: -8.820366859436035
    8. '=value' → logprob: -8.820366859436035
    9. '1' → logprob: -9.070366859436035
    10. '2' → logprob: -10.070366859436035

Token 106: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.01155678741633892
    2. '_' → logprob: -4.886556625366211
    3. '_c' → logprob: -5.761556625366211
    4. '_d' → logprob: -7.386556625366211
    5. ' _' → logprob: -9.636556625366211
    6. '_a' → logprob: -10.261556625366211
    7. '_
' → logprob: -10.386556625366211
    8. '_

' → logprob: -11.136556625366211
    9. '_s' → logprob: -11.511556625366211
    10. '_)' → logprob: -12.886556625366211

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28742557764053345
    2. ' and' → logprob: -1.4124255180358887
    3. '):' → logprob: -5.912425518035889
    4. ' :' → logprob: -6.787425518035889
    5. 'and' → logprob: -6.912425518035889
    6. ':
' → logprob: -7.537425518035889
    7. ',' → logprob: -8.162425994873047
    8. ')' → logprob: -8.537425994873047
    9. ' or' → logprob: -9.287425994873047
    10. '<|end|>' → logprob: -9.412425994873047

Token 108: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2121448814868927
    2. '       ' → logprob: -2.0871448516845703
    3. ' :' → logprob: -3.3371448516845703
    4. ' and' → logprob: -4.33714485168457
    5. ':
' → logprob: -5.08714485168457
    6. ' :
' → logprob: -5.71214485168457
    7. '    ' → logprob: -6.08714485168457
    8. '):' → logprob: -6.33714485168457
    9. '   ' → logprob: -6.46214485168457
    10. ')' → logprob: -7.21214485168457

Token 109: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25681272149086
    2. 'return' (adapté à ' return') → logprob: -1.7568126916885376
    3. ' 
' → logprob: -3.506812810897827
    4. 'result' → logprob: -4.506812572479248
    5. ' ' → logprob: -5.631812572479248
    6. '       ' → logprob: -6.131812572479248
    7. ' result' → logprob: -6.506812572479248
    8. '     
' → logprob: -6.756812572479248
    9. '        
' → logprob: -7.256812572479248
    10. '
' → logprob: -7.256812572479248

Token 110: ' '' (ID: 461)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.4071255326271057
    2. 'value' → logprob: -1.407125473022461
    3. '"value' → logprob: -3.407125473022461
    4. '"' → logprob: -4.157125473022461
    5. ' True' → logprob: -4.657125473022461
    6. ' math' → logprob: -4.657125473022461
    7. ' "' → logprob: -5.157125473022461
    8. 'math' → logprob: -5.532125473022461
    9. ''value' → logprob: -5.532125473022461
    10. 'True' → logprob: -6.157125473022461

Token 111: 'No' (ID: 3160)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -1.2791862487792969
    2. 'value' → logprob: -1.4041862487792969
    3. 'Impossible' → logprob: -2.029186248779297
    4. 'a' → logprob: -3.154186248779297
    5. 'Less' → logprob: -3.154186248779297
    6. 'im' → logprob: -3.279186248779297
    7. 'IMP' → logprob: -3.654186248779297
    8. '"' → logprob: -4.029186248779297
    9. 'YES' → logprob: -4.029186248779297
    10. 'No' → logprob: -4.154186248779297

Token 112: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018324244767427444
    2. ' '' → logprob: -4.268324375152588
    3. 't' → logprob: -6.518324375152588
    4. ' solution' → logprob: -6.768324375152588
    5. ''t' → logprob: -8.26832389831543
    6. ' problem' → logprob: -8.64332389831543
    7. ' Solution' → logprob: -9.26832389831543
    8. ' match' → logprob: -9.51832389831543
    9. ' ' → logprob: -9.64332389831543
    10. ''s' → logprob: -9.89332389831543

Token 113: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4451770782470703
    2. '<|end|>' → logprob: -1.4451770782470703
    3. '
' → logprob: -3.0701770782470703
    4. '   ' → logprob: -3.8201770782470703
    5. '    
' → logprob: -4.32017707824707
    6. ' 
' → logprob: -4.57017707824707
    7. '  
' → logprob: -4.69517707824707
    8. ' else' → logprob: -5.44517707824707
    9. 'elif' → logprob: -5.57017707824707
    10. ' ' → logprob: -6.19517707824707

Token 114: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.05161666125059128
    2. ' ' → logprob: -3.551616668701172
    3. 'value' → logprob: -4.051616668701172
    4. ' math' → logprob: -6.176616668701172
    5. ' (' → logprob: -6.676616668701172
    6. ' not' → logprob: -8.051616668701172
    7. '(value' → logprob: -8.551616668701172
    8. ' ' → logprob: -9.051616668701172
    9. ' abs' → logprob: -9.051616668701172
    10. 'math' → logprob: -11.051616668701172

Token 116: '_d' (ID: 1565)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.10264110565185547
    2. '_a' → logprob: -2.9776411056518555
    3. '_' → logprob: -3.4776411056518555
    4. '_d' → logprob: -4.3526411056518555
    5. '_b' → logprob: -5.9776411056518555
    6. ' _' → logprob: -8.477641105651855
    7. '_s' → logprob: -10.352641105651855
    8. '>' → logprob: -11.227641105651855
    9. '_
' → logprob: -11.227641105651855
    10. 's' → logprob: -12.040141105651855

Token 117: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.2992650270462036
    2. ' >' → logprob: -1.4242650270462036
    3. ' ==' → logprob: -1.4242650270462036
    4. ' >=' → logprob: -2.174264907836914
    5. ' <=' → logprob: -2.174264907836914
    6. ' ' → logprob: -5.049264907836914
    7. '==' → logprob: -5.049264907836914
    8. '>' → logprob: -5.924264907836914
    9. '<=' → logprob: -7.299264907836914
    10. '>=' → logprob: -7.424264907836914

Token 118: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7868631482124329
    2. 'value' → logprob: -1.161863088607788
    3. ' math' → logprob: -2.161863088607788
    4. '0' → logprob: -3.036863088607788
    5. ' ' → logprob: -3.411863088607788
    6. 'math' → logprob: -3.911863088607788
    7. '=' → logprob: -5.286863327026367
    8. '1' → logprob: -5.661863327026367
    9. ' (' → logprob: -6.661863327026367
    10. '100' → logprob: -6.911863327026367

Token 119: '_b' (ID: 1535)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0011103283613920212
    2. '_a' → logprob: -7.251110553741455
    3. '_b' → logprob: -8.126110076904297
    4. '_d' → logprob: -9.626110076904297
    5. '_' → logprob: -11.001110076904297
    6. 'c' → logprob: -12.126110076904297
    7. '[' → logprob: -13.126110076904297
    8. ')' → logprob: -13.126110076904297
    9. '_s' → logprob: -13.251110076904297
    10. '-' → logprob: -13.251110076904297

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021097762510180473
    2. ':
' → logprob: -4.271097660064697
    3. ' or' → logprob: -5.771097660064697
    4. '       ' → logprob: -6.771097660064697
    5. ' and' → logprob: -6.896097660064697
    6. '   ' → logprob: -7.021097660064697
    7. ' :' → logprob: -8.896098136901855
    8. ',' → logprob: -9.146098136901855
    9. '):' → logprob: -9.271098136901855
    10. '+' → logprob: -9.521098136901855

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6285654306411743
    2. ':' → logprob: -1.7535654306411743
    3. '   ' → logprob: -1.8785654306411743
    4. '    ' → logprob: -3.1285653114318848
    5. ' and' → logprob: -3.7535653114318848
    6. ':
' → logprob: -4.128565311431885
    7. ' ' → logprob: -4.378565311431885
    8. ' 
' → logprob: -5.003565311431885
    9. '<|end|>' → logprob: -5.003565311431885
    10. ' or' → logprob: -5.378565311431885

Token 122: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7244042754173279
    2. ' 
' → logprob: -0.8494042754173279
    3. ' ' → logprob: -3.2244043350219727
    4. 'return' (adapté à ' return') → logprob: -4.099404335021973
    5. '       ' → logprob: -4.474404335021973
    6. '   ' → logprob: -4.724404335021973
    7. '
' → logprob: -5.724404335021973
    8. '<|end|>' → logprob: -6.349404335021973
    9. '    ' → logprob: -6.974404335021973
    10. ' No' → logprob: -7.099404335021973

Token 123: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00023810577113181353
    2. ' '' → logprob: -8.500238418579102
    3. '"' → logprob: -10.500238418579102
    4. '`' → logprob: -12.875238418579102
    5. ' ' → logprob: -13.250238418579102
    6. ''s' → logprob: -14.375238418579102
    7. ')' → logprob: -15.750238418579102
    8. '('' → logprob: -15.750238418579102
    9. 'None' → logprob: -16.1877384185791
    10. '
' → logprob: -16.1877384185791

Token 124: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.14558067917823792
    2. ''' → logprob: -2.145580768585205
    3. 'Yes' → logprob: -4.020580768585205
    4. ' No' → logprob: -8.270580291748047
    5. '"No' → logprob: -9.020580291748047
    6. ' '' → logprob: -11.145580291748047
    7. '"' → logprob: -11.645580291748047
    8. 'N' → logprob: -11.833080291748047
    9. 'Impossible' → logprob: -11.958080291748047
    10. ''N' → logprob: -11.958080291748047

Token 125: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4069855809211731
    2. '   ' → logprob: -1.7819855213165283
    3. '\n' → logprob: -2.6569855213165283
    4. '
' → logprob: -3.2819855213165283
    5. ')
' → logprob: -3.7819855213165283
    6. '<|end|>' → logprob: -4.281985759735107
    7. 'n' → logprob: -5.781985759735107
    8. ' 
' → logprob: -5.906985759735107
    9. '    
' → logprob: -6.031985759735107
    10. '  
' → logprob: -6.281985759735107

Token 126: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4259856641292572
    2. '\n' → logprob: -2.05098557472229
    3. ' ' → logprob: -2.30098557472229
    4. '
' → logprob: -2.42598557472229
    5. '<|end|>' → logprob: -4.550985813140869
    6. '\' → logprob: -5.550985813140869
    7. '    
' → logprob: -5.925985813140869
    8. 'n' → logprob: -6.175985813140869
    9. '   ' → logprob: -6.425985813140869
    10. '  
' → logprob: -6.675985813140869

Token 128: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.03300762549042702
    2. ' (' → logprob: -4.533007621765137
    3. ' math' → logprob: -4.658007621765137
    4. 'value' → logprob: -4.908007621765137
    5. ' not' → logprob: -6.158007621765137
    6. '(value' → logprob: -6.908007621765137
    7. ' abs' → logprob: -7.158007621765137
    8. ' ' → logprob: -7.408007621765137
    9. '(' → logprob: -9.408007621765137
    10. 'math' → logprob: -9.783007621765137

Token 129: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0073328218422830105
    2. '_d' → logprob: -5.757332801818848
    3. '_a' → logprob: -6.007332801818848
    4. '_b' → logprob: -6.507332801818848
    5. '_' → logprob: -8.632332801818848
    6. '_
' → logprob: -12.882332801818848
    7. '```' → logprob: -13.132332801818848
    8. '_s' → logprob: -13.819832801818848
    9. 'c' → logprob: -13.819832801818848
    10. ' _' → logprob: -14.444832801818848

Token 130: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6644344925880432
    2. ' >=' → logprob: -1.1644344329833984
    3. ' >' → logprob: -2.5394344329833984
    4. ' <=' → logprob: -2.9144344329833984
    5. ' ==' → logprob: -4.289434432983398
    6. '>=' → logprob: -4.914434432983398
    7. ' ' → logprob: -5.164434432983398
    8. '>' → logprob: -5.539434432983398
    9. '<' → logprob: -5.539434432983398
    10. '==' → logprob: -6.664434432983398

Token 131: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.08401329815387726
    2. ' value' → logprob: -3.2090132236480713
    3. 'math' → logprob: -3.5840132236480713
    4. ' math' → logprob: -5.20901346206665
    5. '0' → logprob: -5.45901346206665
    6. '1' → logprob: -6.45901346206665
    7. '(value' → logprob: -8.834012985229492
    8. ' ' → logprob: -8.959012985229492
    9. '100' → logprob: -8.959012985229492
    10. '2' → logprob: -9.084012985229492

Token 132: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.08684229850769043
    2. '_a' → logprob: -3.5868422985076904
    3. ':' → logprob: -4.3368425369262695
    4. '<|end|>' → logprob: -4.5868425369262695
    5. 'b' → logprob: -4.7118425369262695
    6. '_c' → logprob: -4.8368425369262695
    7. 'd' → logprob: -5.2118425369262695
    8. '_d' → logprob: -5.3368425369262695
    9. ')' → logprob: -6.4618425369262695
    10. 'a' → logprob: -6.9618425369262695

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026530416682362556
    2. ':
' → logprob: -3.7765305042266846
    3. '       ' → logprob: -6.6515302658081055
    4. ' or' → logprob: -7.0265302658081055
    5. '   ' → logprob: -7.7765302658081055
    6. ':return' → logprob: -8.151530265808105
    7. ' and' → logprob: -9.276530265808105
    8. '):' → logprob: -9.651530265808105
    9. ' :' → logprob: -10.026530265808105
    10. ')' → logprob: -10.026530265808105

Token 134: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7783533930778503
    2. '       ' → logprob: -0.7783533930778503
    3. '   ' → logprob: -2.903353452682495
    4. ':
' → logprob: -3.903353452682495
    5. ' or' → logprob: -5.778353214263916
    6. ':return' → logprob: -5.903353214263916
    7. ' and' → logprob: -8.403353691101074
    8. ')' → logprob: -9.278353691101074
    9. 'return' → logprob: -9.278353691101074
    10. '<|end|>' → logprob: -9.403353691101074

Token 135: ' greatest' (ID: 16983)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3145635426044464
    2. ' return' → logprob: -2.064563512802124
    3. 'return' → logprob: -2.439563512802124
    4. ' '' → logprob: -3.439563512802124
    5. ' ' → logprob: -5.314563751220703
    6. '       ' → logprob: -5.689563751220703
    7. '"' → logprob: -5.814563751220703
    8. '   ' → logprob: -6.314563751220703
    9. '`' → logprob: -6.314563751220703
    10. ')' → logprob: -6.564563751220703

Token 136: '_common' (ID: 49800)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5758124589920044
    2. '<|end|>' → logprob: -1.5758124589920044
    3. '+' → logprob: -1.8258124589920044
    4. ' ' → logprob: -2.075812339782715
    5. ' +' → logprob: -2.200812339782715
    6. ' and' → logprob: -4.075812339782715
    7. ':' → logprob: -4.325812339782715
    8. '_value' → logprob: -4.325812339782715
    9. '_possible' → logprob: -4.325812339782715
    10. '_difference' → logprob: -4.450812339782715

Token 137: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0030138343572616577
    2. '_' → logprob: -6.378013610839844
    3. 'div' → logprob: -6.753013610839844
    4. '_factor' → logprob: -9.628013610839844
    5. '_den' → logprob: -10.378013610839844
    6. ' divisor' → logprob: -11.503013610839844
    7. '```' → logprob: -12.253013610839844
    8. '_d' → logprob: -12.378013610839844
    9. '

' → logprob: -12.503013610839844
    10. 'Div' → logprob: -12.753013610839844

Token 138: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.0006615649326704443
    2. 'is' → logprob: -7.500661373138428
    3. 'ider' → logprob: -10.125661849975586
    4. '```' → logprob: -11.375661849975586
    5. 'isible' → logprob: -11.750661849975586
    6. '_' → logprob: -11.750661849975586
    7. '_div' → logprob: -12.375661849975586
    8. 'div' → logprob: -12.625661849975586
    9. 'ision' → logprob: -12.750661849975586
    10. 'idor' → logprob: -13.125661849975586

Token 139: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015950025990605354
    2. '(value' → logprob: -4.6409502029418945
    3. ' (' → logprob: -5.6409502029418945
    4. '_' → logprob: -7.1409502029418945
    5. ' =' → logprob: -7.7659502029418945
    6. ' ' → logprob: -8.015950202941895
    7. '=' → logprob: -8.015950202941895
    8. '<|end|>' → logprob: -8.015950202941895
    9. ')' → logprob: -9.015950202941895
    10. '(math' → logprob: -9.515950202941895

Token 140: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0021859495900571346
    2. 'math' → logprob: -6.127185821533203
    3. '(math' → logprob: -15.002185821533203
    4. ' value' → logprob: -16.002185821533203
    5. ' ' → logprob: -16.127185821533203
    6. ' ' → logprob: -16.627185821533203
    7. '.math' → logprob: -16.752185821533203
    8. '_math' → logprob: -17.127185821533203
    9. ' maths' → logprob: -17.752185821533203
    10. '1' → logprob: -17.877185821533203

Token 141: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.6386901140213013
    2. '.' → logprob: -0.7636901140213013
    3. '.sqrt' → logprob: -5.388689994812012
    4. '.atan' → logprob: -7.888689994812012
    5. '.floor' → logprob: -8.263689994812012
    6. '.ceil' → logprob: -8.263689994812012
    7. '.s' → logprob: -9.263689994812012
    8. '.f' → logprob: -9.513689994812012
    9. '.factor' → logprob: -9.513689994812012
    10. ' .' → logprob: -9.763689994812012

Token 142: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.000779369322117418
    2. 'cf' → logprob: -8.000779151916504
    3. 'at' → logprob: -8.875779151916504
    4. 'cdf' → logprob: -10.000779151916504
    5. 'ather' → logprob: -10.625779151916504
    6. 'reat' → logprob: -10.625779151916504
    7. 't' → logprob: -10.625779151916504
    8. 'ath' → logprob: -11.000779151916504
    9. 'atest' → logprob: -11.250779151916504
    10. 'c' → logprob: -11.375779151916504

Token 143: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.01821807585656643
    2. '(' → logprob: -4.018218040466309
    3. '<|end|>' → logprob: -9.643218040466309
    4. ' (' → logprob: -14.518218040466309
    5. '(user' → logprob: -14.643218040466309
    6. '(
' → logprob: -14.893218040466309
    7. ')value' → logprob: -15.518218040466309
    8. '(values' → logprob: -15.518218040466309
    9. '(b' → logprob: -16.143218994140625
    10. '(a' → logprob: -16.393218994140625

Token 144: '_b' (ID: 1535)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7165274620056152
    2. '_a' → logprob: -0.7165274620056152
    3. '_b' → logprob: -4.091527462005615
    4. '_d' → logprob: -5.091527462005615
    5. 'a' → logprob: -9.466527938842773
    6. '(' → logprob: -9.966527938842773
    7. ')' → logprob: -10.591527938842773
    8. 'c' → logprob: -11.091527938842773
    9. 'd' → logprob: -11.216527938842773
    10. '(a' → logprob: -11.716527938842773

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037908158265054226
    2. '<|end|>' → logprob: -6.128790855407715
    3. ',value' → logprob: -6.628790855407715
    4. ' ,' → logprob: -8.378790855407715
    5. ' ' → logprob: -10.878790855407715
    6. ',
' → logprob: -11.128790855407715
    7. 'value' → logprob: -12.628790855407715
    8. ')' → logprob: -12.753790855407715
    9. '<|end|>' → logprob: -13.128790855407715
    10. ',user' → logprob: -13.503790855407715

Token 146: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.03369249776005745
    2. ' value' → logprob: -3.4086925983428955
    3. ')' → logprob: -10.908692359924316
    4. ')value' → logprob: -11.658692359924316
    5. '
' → logprob: -13.033692359924316
    6. '(value' → logprob: -13.033692359924316
    7. ',value' → logprob: -13.283692359924316
    8. '<|end|>' → logprob: -13.283692359924316
    9. ' 
' → logprob: -13.408692359924316
    10. '"value' → logprob: -13.658692359924316

Token 147: '_d' (ID: 1565)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.12621890008449554
    2. '_d' → logprob: -2.376218795776367
    3. '_a' → logprob: -3.876218795776367
    4. 'd' → logprob: -6.251218795776367
    5. 'c' → logprob: -6.501218795776367
    6. ')' → logprob: -7.501218795776367
    7. 'a' → logprob: -8.126218795776367
    8. '_b' → logprob: -8.251218795776367
    9. '_' → logprob: -8.626218795776367
    10. '_)' → logprob: -8.751218795776367

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003871093038469553
    2. ')
' → logprob: -5.628870964050293
    3. ' )' → logprob: -8.378870964050293
    4. '   ' → logprob: -11.378870964050293
    5. ')

' → logprob: -11.878870964050293
    6. ')
' → logprob: -12.128870964050293
    7. ' )
' → logprob: -12.503870964050293
    8. '
' → logprob: -13.003870964050293
    9. '<|end|>' → logprob: -13.003870964050293
    10. '),' → logprob: -13.628870964050293

Token 149: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0573922395706177
    2. '   ' → logprob: -1.6823922395706177
    3. '\n' → logprob: -1.8073922395706177
    4. '<|end|>' → logprob: -2.307392120361328
    5. ',' → logprob: -2.932392120361328
    6. '*' → logprob: -3.182392120361328
    7. '       ' → logprob: -3.557392120361328
    8. '
' → logprob: -3.932392120361328
    9. ' 
' → logprob: -4.682392120361328
    10. '\' → logprob: -4.807392120361328

Token 150: ' remainder' (ID: 47056)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0460412502288818
    2. 'return' → logprob: -1.1710412502288818
    3. ' return' → logprob: -1.9210412502288818
    4. 'if' → logprob: -2.171041250228882
    5. '       ' → logprob: -2.671041250228882
    6. ' remainder' → logprob: -5.546041488647461
    7. 'remaining' → logprob: -7.546041488647461
    8. '        
' → logprob: -7.921041488647461
    9. 're' → logprob: -8.046041488647461
    10. '
' → logprob: -8.046041488647461

Token 151: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02981320582330227
    2. '_' → logprob: -4.029813289642334
    3. '=' → logprob: -4.779813289642334
    4. ' ' → logprob: -6.654813289642334
    5. 's' → logprob: -7.279813289642334
    6. '%' → logprob: -8.279812812805176
    7. ')' → logprob: -8.904812812805176
    8. '_value' → logprob: -8.904812812805176
    9. '<|end|>' → logprob: -9.029812812805176
    10. '  ' → logprob: -9.154812812805176

Token 152: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4232602119445801
    2. ' %' → logprob: -1.42326021194458
    3. '%' → logprob: -2.79826021194458
    4. '=' → logprob: -3.67326021194458
    5. ' ' → logprob: -4.79826021194458
    6. ' %=' → logprob: -4.79826021194458
    7. ')' → logprob: -7.92326021194458
    8. '<|end|>' → logprob: -8.673259735107422
    9. 's' → logprob: -8.798259735107422
    10. ',' → logprob: -8.798259735107422

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05312386900186539
    2. '=' → logprob: -3.178123950958252
    3. '%' → logprob: -5.303123950958252
    4. ' %' → logprob: -5.678123950958252
    5. ' %=' → logprob: -7.178123950958252
    6. '_' → logprob: -7.678123950958252
    7. ' ' → logprob: -8.678123474121094
    8. ',' → logprob: -9.178123474121094
    9. ')' → logprob: -10.053123474121094
    10. '_mod' → logprob: -10.678123474121094

Token 154: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20526711642742157
    2. 'value' → logprob: -1.705267071723938
    3. '(value' → logprob: -5.955266952514648
    4. ' (' → logprob: -6.705266952514648
    5. ' ' → logprob: -12.205266952514648
    6. '(' → logprob: -12.330266952514648
    7. '"value' → logprob: -12.330266952514648
    8. '
' → logprob: -13.080266952514648
    9. ')value' → logprob: -13.080266952514648
    10. '	value' → logprob: -13.455266952514648

Token 155: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0021280182991176844
    2. '_b' → logprob: -6.2521281242370605
    3. '_c' → logprob: -8.627127647399902
    4. 'a' → logprob: -11.502127647399902
    5. '_d' → logprob: -11.627127647399902
    6. '_' → logprob: -13.877127647399902
    7. '%' → logprob: -16.62712860107422
    8. 'b' → logprob: -17.50212860107422
    9. 'c' → logprob: -17.87712860107422
    10. 'd' → logprob: -17.87712860107422

Token 156: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04989626258611679
    2. '%' → logprob: -3.049896240234375
    3. ' ' → logprob: -6.674896240234375
    4. '<|end|>' → logprob: -10.299896240234375
    5. ' ' → logprob: -11.924896240234375
    6. ' %
' → logprob: -13.049896240234375
    7. ' %=' → logprob: -13.924896240234375
    8. '<|end|>' → logprob: -14.924896240234375
    9. '
' → logprob: -15.049896240234375
    10. ')' → logprob: -15.174896240234375

Token 157: ' value' (ID: 1432)
  Prédit: 'great'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'great' → logprob: -0.2832563519477844
    2. ' greatest' → logprob: -1.4082562923431396
    3. 'value' → logprob: -7.158256530761719
    4. ' value' → logprob: -7.533256530761719
    5. ' great' → logprob: -7.783256530761719
    6. 'Great' → logprob: -8.908256530761719
    7. 'g' → logprob: -9.658256530761719
    8. '<|end|>' → logprob: -9.658256530761719
    9. ' ' → logprob: -10.033256530761719
    10. '(value' → logprob: -10.533256530761719

Token 158: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0024429545737802982
    2. '_g' → logprob: -6.752442836761475
    3. 'b' → logprob: -7.377442836761475
    4. '_c' → logprob: -8.502443313598633
    5. '_d' → logprob: -8.752443313598633
    6. '_common' → logprob: -9.377443313598633
    7. '_' → logprob: -10.627443313598633
    8. ' ' → logprob: -10.752443313598633
    9. 'great' → logprob: -11.252443313598633
    10. '_div' → logprob: -11.252443313598633

Token 159: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' if' (ID: 538)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1727786511182785
    2. ' remainder' → logprob: -2.547778606414795
    3. 'if' (adapté à ' if') → logprob: -2.797778606414795
    4. ' if' → logprob: -4.547778606414795
    5. 'max' → logprob: -5.672778606414795
    6. 'possible' → logprob: -6.547778606414795
    7. '       ' → logprob: -6.922778606414795
    8. 'value' → logprob: -8.172779083251953
    9. 'target' → logprob: -8.297779083251953
    10. 'r' → logprob: -8.297779083251953

Token 162: ' greatest' (ID: 16983)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.018624071031808853
    2. 're' → logprob: -4.268624305725098
    3. ' (' → logprob: -5.643624305725098
    4. '(re' → logprob: -7.393624305725098
    5. '(' → logprob: -9.268624305725098
    6. ' value' → logprob: -9.768624305725098
    7. ' ' → logprob: -10.143624305725098
    8. 'value' → logprob: -10.268624305725098
    9. '	re' → logprob: -10.893624305725098
    10. '(value' → logprob: -11.518624305725098

Token 163: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -9.186122770188376e-05
    2. 'common' → logprob: -9.500091552734375
    3. '_' → logprob: -11.625091552734375
    4. 'Common' → logprob: -13.250091552734375
    5. '<|end|>' → logprob: -13.250091552734375
    6. '_comm' → logprob: -13.750091552734375
    7. '-common' → logprob: -14.125091552734375
    8. ' common' → logprob: -14.625091552734375
    9. '_COMMON' → logprob: -14.875091552734375
    10. '.common' → logprob: -15.500091552734375

Token 164: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0023907560389488935
    2. 'div' → logprob: -6.2523908615112305
    3. '<div' → logprob: -8.12739086151123
    4. '_' → logprob: -9.12739086151123
    5. '<|end|>' → logprob: -11.25239086151123
    6. '	div' → logprob: -11.62739086151123
    7. '_d' → logprob: -12.00239086151123
    8. '_di' → logprob: -12.62739086151123
    9. '_DIV' → logprob: -13.12739086151123
    10. '...' → logprob: -13.25239086151123

Token 165: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.002883095294237137
    2. 'ider' → logprob: -7.002882957458496
    3. 'is' → logprob: -7.502882957458496
    4. 'visor' → logprob: -7.627882957458496
    5. 'os' → logprob: -9.127882957458496
    6. 'izer' → logprob: -9.502882957458496
    7. 'iz' → logprob: -9.502882957458496
    8. 'r' → logprob: -9.502882957458496
    9. 'essor' → logprob: -9.627882957458496
    10. 'or' → logprob: -9.877882957458496

Token 166: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26573556661605835
    2. ' >' → logprob: -2.515735626220703
    3. '==' → logprob: -2.765735626220703
    4. ' !=' → logprob: -2.890735626220703
    5. ' <=' → logprob: -4.515735626220703
    6. ' and' → logprob: -5.140735626220703
    7. '>' → logprob: -5.265735626220703
    8. ' ' → logprob: -5.515735626220703
    9. ' not' → logprob: -6.140735626220703
    10. '<|end|>' → logprob: -6.640735626220703

Token 167: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3507729172706604
    2. '0' → logprob: -1.2257728576660156
    3. '1' → logprob: -6.475772857666016
    4. ' remainder' → logprob: -7.600772857666016
    5. 'value' → logprob: -8.850772857666016
    6. ' value' → logprob: -9.975772857666016
    7. 're' → logprob: -11.413272857666016
    8. ' math' → logprob: -11.663272857666016
    9. '2' → logprob: -11.850772857666016
    10. '<|end|>' → logprob: -12.038272857666016

Token 168: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.052993182092905045
    2. ' ' → logprob: -3.1779932975769043
    3. '1' → logprob: -4.677993297576904
    4. 'value' → logprob: -7.802993297576904
    5. ' remainder' → logprob: -9.427992820739746
    6. 're' → logprob: -10.177992820739746
    7. ' value' → logprob: -10.490492820739746
    8. 'math' → logprob: -10.552992820739746
    9. ' math' → logprob: -11.365492820739746
    10. 'g' → logprob: -11.677992820739746

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049473509192466736
    2. ':
' → logprob: -3.674473524093628
    3. ' and' → logprob: -3.924473524093628
    4. ' or' → logprob: -6.299473285675049
    5. ':return' → logprob: -7.299473285675049
    6. ' :' → logprob: -8.049473762512207
    7. 'and' → logprob: -8.924473762512207
    8. ',' → logprob: -10.174473762512207
    9. ' :
' → logprob: -10.174473762512207
    10. '           ' → logprob: -10.424473762512207

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11665403842926025
    2. 'return' → logprob: -2.7416539192199707
    3. ' return' → logprob: -3.8666539192199707
    4. '       ' → logprob: -4.991653919219971
    5. ' ' → logprob: -5.116653919219971
    6. '<|end|>' → logprob: -5.741653919219971
    7. ',' → logprob: -6.866653919219971
    8. ' if' → logprob: -6.866653919219971
    9. ':return' → logprob: -6.991653919219971
    10. ':' → logprob: -6.991653919219971

Token 171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0544497966766357
    2. ' return' → logprob: -1.5544497966766357
    3. 'return' → logprob: -1.8044497966766357
    4. '           ' → logprob: -2.1794497966766357
    5. 'if' (adapté à ' if') → logprob: -2.1794497966766357
    6. '       ' → logprob: -4.304450035095215
    7. ' 
' → logprob: -4.554450035095215
    8. ' ' → logprob: -5.054450035095215
    9. ' No' → logprob: -5.554450035095215
    10. 'No' → logprob: -5.929450035095215

Token 172: ' value' (ID: 1432)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.002652944065630436
    2. 're' → logprob: -6.002653121948242
    3. ' value' → logprob: -8.877653121948242
    4. ' (' → logprob: -11.502653121948242
    5. ' re' → logprob: -12.002653121948242
    6. '(re' → logprob: -12.127653121948242
    7. ' ' → logprob: -12.377653121948242
    8. 'value' → logprob: -12.377653121948242
    9. '	re' → logprob: -12.502653121948242
    10. '   ' → logprob: -13.752653121948242

Token 173: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.04847244918346405
    2. '_c' → logprob: -3.1734724044799805
    3. '_d' → logprob: -5.7984724044799805
    4. '_b' → logprob: -6.2984724044799805
    5. 'a' → logprob: -7.6734724044799805
    6. 'c' → logprob: -10.29847240447998
    7. 'd' → logprob: -10.42347240447998
    8. '<|end|>' → logprob: -11.29847240447998
    9. '_' → logprob: -11.67347240447998
    10. 'b' → logprob: -12.29847240447998

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7777816653251648
    2. '-' → logprob: -1.0277817249298096
    3. '>' → logprob: -2.9027817249298096
    4. ' <=' → logprob: -3.1527817249298096
    5. '<=' → logprob: -3.2777817249298096
    6. ' >' → logprob: -3.5277817249298096
    7. '%' → logprob: -5.4027814865112305
    8. '>=' → logprob: -5.9027814865112305
    9. ' ' → logprob: -6.1527814865112305
    10. ' %' → logprob: -6.2777814865112305

Token 175: ' ' (ID: 220)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.2759544551372528
    2. 're' → logprob: -1.5259544849395752
    3. '1' → logprob: -3.775954484939575
    4. ' ' → logprob: -7.525954246520996
    5. 'rem' → logprob: -9.900954246520996
    6. 'value' → logprob: -9.900954246520996
    7. 'r' → logprob: -10.025954246520996
    8. ' re' → logprob: -10.400954246520996
    9. 'rest' → logprob: -10.400954246520996
    10. ' value' → logprob: -10.525954246520996

Token 176: '1' (ID: 16)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.14520280063152313
    2. ' remainder' → logprob: -2.020202875137329
    3. '1' → logprob: -6.14520263671875
    4. 'r' → logprob: -8.77020263671875
    5. 'rem' → logprob: -9.64520263671875
    6. 'rest' → logprob: -10.14520263671875
    7. 'value' → logprob: -10.52020263671875
    8. ' ' → logprob: -10.52020263671875
    9. 'rema' → logprob: -10.64520263671875
    10. ' re' → logprob: -11.27020263671875

Token 177: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.44348376989364624
    2. '<=' → logprob: -1.693483829498291
    3. ' >=' → logprob: -2.568483829498291
    4. '>=' → logprob: -3.068483829498291
    5. '<' → logprob: -3.943483829498291
    6. ' <' → logprob: -4.443483829498291
    7. ' >' → logprob: -4.568483829498291
    8. '>' → logprob: -4.943483829498291
    9. ' ' → logprob: -6.443483829498291
    10. '<|end|>' → logprob: -7.568483829498291

Token 178: ' value' (ID: 1432)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.010882041417062283
    2. 're' → logprob: -5.3858819007873535
    3. ' value' → logprob: -5.6358819007873535
    4. 'value' → logprob: -6.0108819007873535
    5. 'rest' → logprob: -10.010882377624512
    6. 'rem' → logprob: -10.510882377624512
    7. ' re' → logprob: -10.510882377624512
    8. ' ' → logprob: -10.635882377624512
    9. '0' → logprob: -10.760882377624512
    10. 'r' → logprob: -11.260882377624512

Token 179: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.5490673780441284
    2. 'a' → logprob: -1.2990673780441284
    3. '<|end|>' → logprob: -2.924067497253418
    4. '_c' → logprob: -2.924067497253418
    5. 'c' → logprob: -4.174067497253418
    6. '_' → logprob: -4.924067497253418
    7. '_b' → logprob: -4.924067497253418
    8. 'b' → logprob: -5.049067497253418
    9. 'd' → logprob: -6.549067497253418
    10. ' ' → logprob: -6.924067497253418

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2587021589279175
    2. ' and' → logprob: -2.008702278137207
    3. ' :' → logprob: -3.008702278137207
    4. ':
' → logprob: -4.008702278137207
    5. ' or' → logprob: -4.508702278137207
    6. ' :
' → logprob: -5.258702278137207
    7. 'and' → logprob: -5.508702278137207
    8. ' ' → logprob: -6.008702278137207
    9. ':return' → logprob: -6.008702278137207
    10. '+' → logprob: -7.633702278137207

Token 181: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26161181926727295
    2. ':
' → logprob: -2.0116119384765625
    3. '           ' → logprob: -2.7616119384765625
    4. ':return' → logprob: -4.2616119384765625
    5. '       ' → logprob: -4.6366119384765625
    6. '               ' → logprob: -5.1366119384765625
    7. ' or' → logprob: -7.0116119384765625
    8. ' and' → logprob: -7.1366119384765625
    9. '   ' → logprob: -7.5116119384765625
    10. ' :' → logprob: -7.8866119384765625

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4576735198497772
    2. ' return' → logprob: -1.3326735496520996
    3. '               ' → logprob: -2.7076735496520996
    4. ':return' → logprob: -4.4576735496521
    5. '           ' → logprob: -4.7076735496521
    6. '                   ' → logprob: -5.0826735496521
    7. '	return' → logprob: -6.0826735496521
    8. ':
' → logprob: -6.3326735496521
    9. ' ' → logprob: -6.7076735496521
    10. '
' → logprob: -6.7076735496521

Token 183: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12719875574111938
    2. ' '' → logprob: -2.1271986961364746
    3. '"' → logprob: -8.877199172973633
    4. ' "' → logprob: -9.752199172973633
    5. ' ' → logprob: -10.502199172973633
    6. '"No' → logprob: -10.877199172973633
    7. ' 
' → logprob: -12.502199172973633
    8. '`' → logprob: -12.627199172973633
    9. ' ' → logprob: -12.877199172973633
    10. ''s' → logprob: -13.002199172973633

Token 184: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.009072089567780495
    2. 'Yes' → logprob: -4.759072303771973
    3. ''' → logprob: -7.759072303771973
    4. 'NO' → logprob: -12.134072303771973
    5. ' No' → logprob: -12.384072303771973
    6. '```' → logprob: -12.884072303771973
    7. '"No' → logprob: -13.134072303771973
    8. 'N' → logprob: -13.509072303771973
    9. '''' → logprob: -13.634072303771973
    10. '`' → logprob: -13.759072303771973

Token 185: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3452736735343933
    2. ' else' → logprob: -1.720273733139038
    3. 'else' → logprob: -2.470273733139038
    4. '   ' → logprob: -4.345273494720459
    5. '<|end|>' → logprob: -4.845273494720459
    6. ' return' → logprob: -6.470273494720459
    7. '           ' → logprob: -6.595273494720459
    8. 'return' → logprob: -6.595273494720459
    9. ' ' → logprob: -6.970273494720459
    10. '    ' → logprob: -7.720273494720459

Token 188: ' greatest' (ID: 16983)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.4255751073360443
    2. ' (' → logprob: -1.8005751371383667
    3. 'value' → logprob: -2.675575017929077
    4. ' remainder' → logprob: -2.925575017929077
    5. '(value' → logprob: -3.925575017929077
    6. ' greatest' → logprob: -4.425575256347656
    7. ' not' → logprob: -4.675575256347656
    8. ' math' → logprob: -5.175575256347656
    9. '(' → logprob: -6.050575256347656
    10. 'great' → logprob: -6.300575256347656

Token 189: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.009822086431086063
    2. 'common' → logprob: -4.634821891784668
    3. 'Common' → logprob: -9.884821891784668
    4. ' common' → logprob: -12.009821891784668
    5. '_COMMON' → logprob: -12.634821891784668
    6. '.common' → logprob: -13.884821891784668
    7. '-common' → logprob: -14.134821891784668
    8. '	common' → logprob: -14.259821891784668
    9. ' ' → logprob: -14.884821891784668
    10. ')' → logprob: -14.884821891784668

Token 190: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.01458323746919632
    2. 'div' → logprob: -4.264583110809326
    3. '_g' → logprob: -8.389583587646484
    4. 'g' → logprob: -9.514583587646484
    5. '_d' → logprob: -10.264583587646484
    6. 'd' → logprob: -10.639583587646484
    7. '_' → logprob: -11.389583587646484
    8. 'def' → logprob: -12.014583587646484
    9. '<div' → logprob: -12.514583587646484
    10. '_def' → logprob: -12.889583587646484

Token 191: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.005658571142703295
    2. 'iser' → logprob: -6.8806586265563965
    3. 'tor' → logprob: -6.8806586265563965
    4. 'xor' → logprob: -7.1306586265563965
    5. 'or' → logprob: -7.3806586265563965
    6. 'os' → logprob: -7.5056586265563965
    7. 'iz' → logprob: -8.005658149719238
    8. 'ide' → logprob: -8.255658149719238
    9. 'izer' → logprob: -8.630658149719238
    10. 'is' → logprob: -8.880658149719238

Token 192: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20084233582019806
    2. ' !=' → logprob: -2.7008423805236816
    3. ' >' → logprob: -2.9508423805236816
    4. '==' → logprob: -3.3258423805236816
    5. ' ' → logprob: -3.8258423805236816
    6. ' <' → logprob: -6.325842380523682
    7. ' *' → logprob: -7.200842380523682
    8. ' <=' → logprob: -7.450842380523682
    9. '!=' → logprob: -7.700842380523682
    10. '>' → logprob: -7.700842380523682

Token 193: ' value' (ID: 1432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6373763084411621
    2. ' value' → logprob: -1.387376308441162
    3. 'value' → logprob: -1.762376308441162
    4. '0' → logprob: -3.512376308441162
    5. '2' → logprob: -4.137376308441162
    6. ' math' → logprob: -6.762376308441162
    7. '3' → logprob: -6.762376308441162
    8. '1' → logprob: -6.887376308441162
    9. 'math' → logprob: -8.51237678527832
    10. '   ' → logprob: -10.01237678527832

Token 194: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.007907546125352383
    2. '_d' → logprob: -5.507907390594482
    3. '_c' → logprob: -5.632907390594482
    4. '_a' → logprob: -8.63290786743164
    5. '_' → logprob: -10.75790786743164
    6. 'b' → logprob: -10.88290786743164
    7. ' ' → logprob: -11.25790786743164
    8. '_g' → logprob: -12.88290786743164
    9. ' _' → logprob: -13.00790786743164
    10. 'd' → logprob: -13.44540786743164

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028566619381308556
    2. ':
' → logprob: -3.653566598892212
    3. ' or' → logprob: -7.153566837310791
    4. ' and' → logprob: -7.278566837310791
    5. ' :' → logprob: -7.403566837310791
    6. ' :
' → logprob: -9.653566360473633
    7. ':return' → logprob: -10.403566360473633
    8. 'and' → logprob: -10.528566360473633
    9. '       ' → logprob: -10.528566360473633
    10. ' ' → logprob: -11.778566360473633

Token 196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3174336552619934
    2. ':' → logprob: -1.8174335956573486
    3. '       ' → logprob: -2.4424335956573486
    4. ':
' → logprob: -4.817433834075928
    5. ':return' → logprob: -5.192433834075928
    6. 'return' → logprob: -5.567433834075928
    7. '   ' → logprob: -6.942433834075928
    8. ' and' → logprob: -7.067433834075928
    9. ' return' → logprob: -7.192433834075928
    10. '               ' → logprob: -7.442433834075928

Token 197: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5345568656921387
    2. ' return' → logprob: -1.6595568656921387
    3. '       ' → logprob: -2.2845568656921387
    4. '           ' → logprob: -2.4095568656921387
    5. ' if' → logprob: -4.159556865692139
    6. 'if' (adapté à ' if') → logprob: -4.284556865692139
    7. '   ' → logprob: -6.534556865692139
    8. ' ' → logprob: -7.409556865692139
    9. '               ' → logprob: -8.659557342529297
    10. ':return' → logprob: -9.409557342529297

Token 198: ' remainder' (ID: 47056)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6967381834983826
    2. 'value' → logprob: -0.6967381834983826
    3. ' (' → logprob: -6.946738243103027
    4. 're' → logprob: -7.321738243103027
    5. ' remainder' → logprob: -7.321738243103027
    6. ' ' → logprob: -8.321738243103027
    7. '(value' → logprob: -8.571738243103027
    8. ' not' → logprob: -8.946738243103027
    9. 'math' → logprob: -9.071738243103027
    10. ' math' → logprob: -9.196738243103027

Token 199: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.003395036794245243
    2. '_' → logprob: -5.753395080566406
    3. ' _' → logprob: -8.628395080566406
    4. '_b' → logprob: -10.503395080566406
    5. ' ' → logprob: -12.628395080566406
    6. ')' → logprob: -13.378395080566406
    7. '<|end|>' → logprob: -13.378395080566406
    8. 'a' → logprob: -14.253395080566406
    9. '```' → logprob: -14.253395080566406
    10. '_c' → logprob: -14.253395080566406

Token 200: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12909376621246338
    2. '_' → logprob: -2.129093647003174
    3. ' _' → logprob: -6.504093647003174
    4. ' ' → logprob: -7.754093647003174
    5. '<|end|>' → logprob: -8.879094123840332
    6. '_a' → logprob: -10.254094123840332
    7. '%' → logprob: -10.504094123840332
    8. 'b' → logprob: -11.254094123840332
    9. ')' → logprob: -12.254094123840332
    10. '_c' → logprob: -13.129094123840332

Token 201: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04135383665561676
    2. '>' → logprob: -3.416353940963745
    3. ' !=' → logprob: -5.541353702545166
    4. ' ' → logprob: -6.416353702545166
    5. ' <' → logprob: -7.166353702545166
    6. ' <=' → logprob: -7.666353702545166
    7. '!=' → logprob: -7.916353702545166
    8. ' ==' → logprob: -8.541354179382324
    9. ' +' → logprob: -9.666354179382324
    10. ' >=' → logprob: -9.666354179382324

Token 202: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5825383067131042
    2. ' value' → logprob: -0.8325383067131042
    3. '0' → logprob: -5.20753812789917
    4. ' ' → logprob: -6.95753812789917
    5. 'alue' → logprob: -9.957538604736328
    6. '<|end|>' → logprob: -10.832538604736328
    7. '(value' → logprob: -11.207538604736328
    8. 'c' → logprob: -11.457538604736328
    9. '   ' → logprob: -11.832538604736328
    10. '	value' → logprob: -11.895038604736328

Token 203: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00673905061557889
    2. 'c' → logprob: -5.756739139556885
    3. '_d' → logprob: -6.006739139556885
    4. '_b' → logprob: -7.006739139556885
    5. '_a' → logprob: -9.006738662719727
    6. 'd' → logprob: -10.631738662719727
    7. '	c' → logprob: -11.631738662719727
    8. 'a' → logprob: -11.631738662719727
    9. 'b' → logprob: -11.944238662719727
    10. '
' → logprob: -13.194238662719727

Token 204: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30179563164711
    2. ':' → logprob: -1.4267956018447876
    3. '           ' → logprob: -4.676795482635498
    4. ' :
' → logprob: -5.551795482635498
    5. '       ' → logprob: -5.676795482635498
    6. ':return' → logprob: -6.176795482635498
    7. ' or' → logprob: -7.176795482635498
    8. ' :' → logprob: -8.051795959472656
    9. ' and' → logprob: -8.426795959472656
    10. '   ' → logprob: -8.926795959472656

Token 205: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8789315223693848
    2. ':' → logprob: -1.3789315223693848
    3. '           ' → logprob: -1.3789315223693848
    4. '               ' → logprob: -2.6289315223693848
    5. ':return' → logprob: -5.003931522369385
    6. '       ' → logprob: -6.753931522369385
    7. ' :
' → logprob: -8.503931045532227
    8. ' return' → logprob: -8.878931045532227
    9. ' or' → logprob: -9.003931045532227
    10. 'return' → logprob: -9.378931045532227

Token 206: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5899273157119751
    2. 'return' (adapté à ' return') → logprob: -0.8399273157119751
    3. '           ' → logprob: -4.4649271965026855
    4. '               ' → logprob: -6.4649271965026855
    5. '                   ' → logprob: -7.9649271965026855
    6. '   ' → logprob: -8.589927673339844
    7. '       ' → logprob: -8.964927673339844
    8. ' ' → logprob: -10.214927673339844
    9. '	return' → logprob: -10.214927673339844
    10. ':return' → logprob: -10.214927673339844

Token 207: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004090747330337763
    2. ' '' → logprob: -5.504090785980225
    3. ' ' → logprob: -12.504090309143066
    4. '"No' → logprob: -12.754090309143066
    5. '	' → logprob: -13.254090309143066
    6. '   ' → logprob: -13.879090309143066
    7. '
' → logprob: -14.254090309143066
    8. 'No' → logprob: -14.754090309143066
    9. '"' → logprob: -14.879090309143066
    10. '  ' → logprob: -15.504090309143066

Token 208: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.38703829050064087
    2. ''' → logprob: -1.137038230895996
    3. 'Yes' → logprob: -9.012038230895996
    4. '"No' → logprob: -11.012038230895996
    5. ' No' → logprob: -11.512038230895996
    6. ''N' → logprob: -12.762038230895996
    7. 'N' → logprob: -13.137038230895996
    8. '
' → logprob: -13.762038230895996
    9. '   ' → logprob: -13.762038230895996
    10. 'n' → logprob: -13.887038230895996

Token 209: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5417076349258423
    2. ')' → logprob: -1.4167076349258423
    3. '   ' → logprob: -1.9167076349258423
    4. ')
' → logprob: -4.791707515716553
    5. 'return' → logprob: -5.291707515716553
    6. '
' → logprob: -5.666707515716553
    7. '<|end|>' → logprob: -5.916707515716553
    8. 'else' → logprob: -6.916707515716553
    9. '           ' → logprob: -6.916707515716553
    10. '\n' → logprob: -7.041707515716553

Token 210: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1125481128692627
    2. '\n' → logprob: -1.2375481128692627
    3. ')' → logprob: -1.7375481128692627
    4. ' ' → logprob: -3.2375481128692627
    5. ' else' → logprob: -3.3625481128692627
    6. ' 
' → logprob: -3.6125481128692627
    7. ':' → logprob: -4.237547874450684
    8. '       ' → logprob: -4.487547874450684
    9. '    
' → logprob: -4.612547874450684
    10. '<|end|>' → logprob: -4.612547874450684

Token 211: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7848512530326843
    2. ' else' → logprob: -1.284851312637329
    3. '   ' → logprob: -1.409851312637329
    4. '       ' → logprob: -4.03485107421875
    5. '	else' → logprob: -6.53485107421875
    6. 'elif' → logprob: -6.65985107421875
    7. ')' → logprob: -7.40985107421875
    8. ':
' → logprob: -7.65985107421875
    9. ':' → logprob: -7.78485107421875
    10. 'return' → logprob: -8.53485107421875

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006050970405340195
    2. ':
' → logprob: -5.256051063537598
    3. ' :' → logprob: -7.256051063537598
    4. ' :
' → logprob: -10.256051063537598
    5. ' if' → logprob: -10.631051063537598
    6. '        ' → logprob: -11.006051063537598
    7. '{' → logprob: -11.131051063537598
    8. '       ' → logprob: -11.256051063537598
    9. ':return' → logprob: -13.381051063537598
    10. ',' → logprob: -13.756051063537598

Token 213: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6996453404426575
    2. '           ' → logprob: -0.9496453404426575
    3. ' max' → logprob: -3.1996452808380127
    4. ' if' → logprob: -3.8246452808380127
    5. ' return' → logprob: -4.074645519256592
    6. 'max' → logprob: -4.699645519256592
    7. ' remainder' → logprob: -5.074645519256592
    8. 'return' → logprob: -5.449645519256592
    9. 'if' → logprob: -6.324645519256592
    10. ' current' → logprob: -6.449645519256592

Token 214: ' if' (ID: 538)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.3963990211486816
    2. ' step' → logprob: -1.8963990211486816
    3. ' gcd' → logprob: -2.2713990211486816
    4. ' remainder' → logprob: -2.3963990211486816
    5. 'max' → logprob: -3.0213990211486816
    6. ' return' → logprob: -3.0213990211486816
    7. 'g' → logprob: -3.5213990211486816
    8. ' if' → logprob: -3.6463990211486816
    9. ' multiple' → logprob: -4.021399021148682
    10. 'step' → logprob: -4.146399021148682

Token 215: ' (' (ID: 350)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.97310870885849
    2. ' value' → logprob: -1.2231087684631348
    3. ' (' → logprob: -1.7231087684631348
    4. 'value' → logprob: -3.2231087684631348
    5. '(value' → logprob: -3.3481087684631348
    6. 're' → logprob: -3.4731087684631348
    7. '(re' → logprob: -4.223108768463135
    8. '(' → logprob: -4.723108768463135
    9. '((' → logprob: -4.848108768463135
    10. ' ((' → logprob: -5.973108768463135

Token 216: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.9766018390655518
    2. 're' → logprob: -1.3516018390655518
    3. ' value' → logprob: -1.9766018390655518
    4. ' remainder' → logprob: -2.2266018390655518
    5. '(value' → logprob: -2.9766018390655518
    6. '(re' → logprob: -3.4766018390655518
    7. ' (' → logprob: -3.6016018390655518
    8. '((' → logprob: -5.351601600646973
    9. '(' → logprob: -6.476601600646973
    10. ' ((' → logprob: -7.226601600646973

Token 217: '_b' (ID: 1535)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.49586954712867737
    2. '_b' → logprob: -1.120869517326355
    3. '_d' → logprob: -3.3708696365356445
    4. '_a' → logprob: -3.4958696365356445
    5. 'c' → logprob: -9.370869636535645
    6. 'a' → logprob: -9.870869636535645
    7. 'b' → logprob: -9.995869636535645
    8. 'd' → logprob: -10.495869636535645
    9. ')' → logprob: -11.433369636535645
    10. '   ' → logprob: -11.558369636535645

Token 218: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.049101416021585464
    2. '-' → logprob: -3.0491013526916504
    3. ' %' → logprob: -8.174101829528809
    4. ')' → logprob: -9.424101829528809
    5. ' ' → logprob: -9.424101829528809
    6. '%' → logprob: -10.174101829528809
    7. '   ' → logprob: -11.049101829528809
    8. '  ' → logprob: -12.986601829528809
    9. ' ' → logprob: -13.549101829528809
    10. ' -
' → logprob: -13.799101829528809

Token 219: ' greatest' (ID: 16983)
  Prédit: 'great'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'great' → logprob: -0.05766190215945244
    2. '1' → logprob: -3.307662010192871
    3. ' greatest' → logprob: -4.182662010192871
    4. 're' → logprob: -6.307662010192871
    5. 'value' → logprob: -7.182662010192871
    6. ' ' → logprob: -8.057662010192871
    7. 'math' → logprob: -8.057662010192871
    8. '(' → logprob: -8.057662010192871
    9. ')' → logprob: -8.557662010192871
    10. ' remainder' → logprob: -9.307662010192871

Token 220: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.00033796546631492674
    2. 'common' → logprob: -8.000337600708008
    3. '-common' → logprob: -13.625337600708008
    4. 'Common' → logprob: -14.625337600708008
    5. '_COMMON' → logprob: -15.375337600708008
    6. ' common' → logprob: -15.875337600708008
    7. '	common' → logprob: -16.500337600708008
    8. '_' → logprob: -16.750337600708008
    9. '.common' → logprob: -16.875337600708008
    10. '_possible' → logprob: -17.250337600708008

Token 221: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.02644021436572075
    2. 'div' → logprob: -3.651440143585205
    3. '_common' → logprob: -9.651440620422363
    4. '<div' → logprob: -10.776440620422363
    5. '_re' → logprob: -11.651440620422363
    6. 'common' → logprob: -11.776440620422363
    7. ')' → logprob: -12.026440620422363
    8. '_' → logprob: -12.526440620422363
    9. ' ' → logprob: -12.651440620422363
    10. '	div' → logprob: -12.901440620422363

Token 222: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.006879237946122885
    2. 'is' → logprob: -5.0068793296813965
    3. 'isible' → logprob: -10.506878852844238
    4. 'or' → logprob: -11.256878852844238
    5. 'ider' → logprob: -11.381878852844238
    6. '```' → logprob: -11.381878852844238
    7. 'idor' → logprob: -11.381878852844238
    8. ' divisor' → logprob: -11.506878852844238
    9. 's' → logprob: -11.881878852844238
    10. '**' → logprob: -11.881878852844238

Token 223: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06846383959054947
    2. ' -' → logprob: -3.9434638023376465
    3. ' +' → logprob: -4.1934638023376465
    4. ' )' → logprob: -4.4434638023376465
    5. '-' → logprob: -4.9434638023376465
    6. '+' → logprob: -5.3184638023376465
    7. ' >' → logprob: -5.8184638023376465
    8. ')>' → logprob: -5.8184638023376465
    9. '>' → logprob: -6.5684638023376465
    10. '   ' → logprob: -9.568464279174805

Token 224: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.30263373255729675
    2. '>' → logprob: -1.4276337623596191
    3. ' +' → logprob: -4.677633762359619
    4. '+' → logprob: -5.177633762359619
    5. ' -' → logprob: -6.177633762359619
    6. ')' → logprob: -6.427633762359619
    7. ' <=' → logprob: -6.927633762359619
    8. '-' → logprob: -7.302633762359619
    9. ' >=' → logprob: -8.177633285522461
    10. '<=' → logprob: -8.802633285522461

Token 225: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20145466923713684
    2. 'value' → logprob: -1.7014546394348145
    3. ' ' → logprob: -10.326455116271973
    4. 'c' → logprob: -13.326455116271973
    5. '
' → logprob: -13.451455116271973
    6. '(value' → logprob: -13.451455116271973
    7. '0' → logprob: -13.576455116271973
    8. ' math' → logprob: -14.826455116271973
    9. 'alue' → logprob: -14.826455116271973
    10. ' (' → logprob: -14.951455116271973

Token 226: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.3425219549390022e-05
    2. 'c' → logprob: -11.25001335144043
    3. '_a' → logprob: -15.37501335144043
    4. '_b' → logprob: -16.87501335144043
    5. '_d' → logprob: -17.50001335144043
    6. '	c' → logprob: -17.87501335144043
    7. 'a' → logprob: -18.12501335144043
    8. 'C' → logprob: -18.12501335144043
    9. '_' → logprob: -18.50001335144043
    10. '[' → logprob: -19.12501335144043

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2664306163787842
    2. ':
' → logprob: -1.5164306163787842
    3. '           ' → logprob: -5.016430854797363
    4. '               ' → logprob: -5.641430854797363
    5. ':return' → logprob: -6.016430854797363
    6. ' or' → logprob: -7.141430854797363
    7. ' and' → logprob: -7.141430854797363
    8. '       ' → logprob: -9.266430854797363
    9. 'and' → logprob: -10.641430854797363
    10. '):
' → logprob: -11.016430854797363

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22020263969898224
    2. ':
' → logprob: -2.220202684402466
    3. ':' → logprob: -2.720202684402466
    4. '           ' → logprob: -4.095202445983887
    5. ':return' → logprob: -5.345202445983887
    6. '       ' → logprob: -7.345202445983887
    7. ' return' → logprob: -8.345202445983887
    8. '):
' → logprob: -9.095202445983887
    9. ' or' → logprob: -9.220202445983887
    10. ' and' → logprob: -9.220202445983887

Token 229: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3134634494781494
    2. ' return' → logprob: -1.3134634494781494
    3. '               ' → logprob: -8.68846321105957
    4. '           ' → logprob: -10.68846321105957
    5. '                   ' → logprob: -12.43846321105957
    6. ' ' → logprob: -13.06346321105957
    7. '   ' → logprob: -13.18846321105957
    8. '	return' → logprob: -14.56346321105957
    9. 'if' → logprob: -14.93846321105957
    10. '
' → logprob: -15.06346321105957

Token 230: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0021904718596488237
    2. ' '' → logprob: -6.127190589904785
    3. ' ' → logprob: -13.252190589904785
    4. '"No' → logprob: -13.502190589904785
    5. '	' → logprob: -14.877190589904785
    6. '   ' → logprob: -15.002190589904785
    7. ''s' → logprob: -15.252190589904785
    8. '`' → logprob: -15.252190589904785
    9. '
' → logprob: -15.377190589904785
    10. '['' → logprob: -15.877190589904785

Token 231: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.4987974029500037e-05
    2. ''' → logprob: -10.625024795532227
    3. ' No' → logprob: -14.625024795532227
    4. 'Yes' → logprob: -16.250024795532227
    5. '"No' → logprob: -16.375024795532227
    6. '_No' → logprob: -18.000024795532227
    7. '.No' → logprob: -19.250024795532227
    8. '`' → logprob: -19.250024795532227
    9. 'N' → logprob: -19.375024795532227
    10. '```' → logprob: -19.500024795532227

Token 232: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.546738862991333
    2. '   ' → logprob: -1.671738862991333
    3. '       ' → logprob: -2.546738862991333
    4. '
' → logprob: -2.796738862991333
    5. '<|end|>' → logprob: -3.296738862991333
    6. ')
' → logprob: -3.921738862991333
    7. ' return' → logprob: -4.796738624572754
    8. '           ' → logprob: -4.921738624572754
    9. '    
' → logprob: -5.421738624572754
    10. '\n' → logprob: -5.671738624572754

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018887409940361977
    2. '       ' → logprob: -4.518887519836426
    3. '    
' → logprob: -6.018887519836426
    4. ' 
' → logprob: -6.518887519836426
    5. ' return' → logprob: -6.768887519836426
    6. 'return' → logprob: -7.768887519836426
    7. ' else' → logprob: -7.768887519836426
    8. '    ' → logprob: -8.018887519836426
    9. ' ' → logprob: -8.143887519836426
    10. ')' → logprob: -8.518887519836426

Token 234: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032491590827703476
    2. ' 
' → logprob: -4.532491683959961
    3. ' return' → logprob: -4.657491683959961
    4. '    
' → logprob: -4.782491683959961
    5. 'return' (adapté à ' return') → logprob: -6.532491683959961
    6. '
' → logprob: -7.532491683959961
    7. ')' → logprob: -8.407491683959961
    8. ' )' → logprob: -8.657491683959961
    9. ' else' → logprob: -8.657491683959961
    10. '  
' → logprob: -9.157491683959961

Token 235: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026345698162913322
    2. ' '' → logprob: -3.651345729827881
    3. '"' → logprob: -10.151345252990723
    4. ' ' → logprob: -13.026345252990723
    5. ' "' → logprob: -13.276345252990723
    6. ' ' → logprob: -13.901345252990723
    7. '   ' → logprob: -14.651345252990723
    8. '	' → logprob: -15.401345252990723
    9. ''s' → logprob: -15.401345252990723
    10. 'Yes' → logprob: -15.776345252990723

Token 236: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0011745095252990723
    2. ''' → logprob: -6.751174449920654
    3. '"' → logprob: -12.876174926757812
    4. 'YES' → logprob: -13.751174926757812
    5. 'Ye' → logprob: -14.501174926757812
    6. ''S' → logprob: -17.001174926757812
    7. ' Yes' → logprob: -17.126174926757812
    8. 'Oui' → logprob: -18.126174926757812
    9. '['' → logprob: -18.751174926757812
    10. '   ' → logprob: -18.751174926757812

Token 237: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7683229446411133
    2. '<|end|>' → logprob: -1.5183229446411133
    3. '(' → logprob: -1.7683229446411133
    4. ',' → logprob: -2.7683229446411133
    5. '#' → logprob: -4.143322944641113
    6. '```' → logprob: -4.268322944641113
    7. '[' → logprob: -4.393322944641113
    8. '
' → logprob: -4.643322944641113
    9. ''' → logprob: -5.018322944641113
    10. ':' → logprob: -5.268322944641113

Token 239: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07893551141023636
    2. ' process' → logprob: -2.7039356231689453
    3. ' example' → logprob: -5.953935623168945
    4. ' run' → logprob: -6.578935623168945
    5. ' test' → logprob: -6.953935623168945
    6. ' calculate' → logprob: -6.953935623168945
    7. ' solve' → logprob: -7.453935623168945
    8. 'main' → logprob: -7.953935623168945
    9. 'process' → logprob: -8.203935623168945
    10. ' check' → logprob: -8.453935623168945

Token 240: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13447393476963043
    2. '_input' → logprob: -2.884474039077759
    3. '_line' → logprob: -3.259474039077759
    4. '()' → logprob: -4.00947380065918
    5. '<|end|>' → logprob: -5.75947380065918
    6. '<|end|>' → logprob: -6.50947380065918
    7. ' _' → logprob: -6.63447380065918
    8. '_lines' → logprob: -6.88447380065918
    9. '(' → logprob: -6.88447380065918
    10. '_data' → logprob: -7.63447380065918

Token 241: '_data' (ID: 3537)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003837213444057852
    2. '():
' → logprob: -8.000383377075195
    3. ' ():' → logprob: -10.750383377075195
    4. '()' → logprob: -10.875383377075195
    5. '_' → logprob: -12.500383377075195
    6. '():
' → logprob: -13.875383377075195
    7. '(' → logprob: -14.125383377075195
    8. '():

' → logprob: -14.375383377075195
    9. '_line' → logprob: -14.625383377075195
    10. '()>' → logprob: -15.375383377075195

Token 242: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005213391850702465
    2. ' ():' → logprob: -7.750521183013916
    3. '():
' → logprob: -9.375521659851074
    4. '()' → logprob: -12.375521659851074
    5. '(' → logprob: -13.625521659851074
    6. '():
' → logprob: -16.500520706176758
    7. '():

' → logprob: -16.500520706176758
    8. ' ()' → logprob: -16.750520706176758
    9. '_' → logprob: -17.375520706176758
    10. '(prompt' → logprob: -17.375520706176758

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015914002433419228
    2. ' num' → logprob: -5.140913963317871
    3. ' n' → logprob: -5.265913963317871
    4. 'n' → logprob: -6.390913963317871
    5. 'num' → logprob: -6.390913963317871
    6. '()' → logprob: -8.015913963317871
    7. '    
' → logprob: -8.265913963317871
    8. '(n' → logprob: -8.390913963317871
    9. 'import' → logprob: -8.765913963317871
    10. '(num' → logprob: -8.765913963317871

Token 244: ' total' (ID: 3609)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.28725966811180115
    2. ' num' → logprob: -1.5372596979141235
    3. 'n' → logprob: -4.037259578704834
    4. ' n' → logprob: -4.162259578704834
    5. 'import' → logprob: -7.162259578704834
    6. ' import' → logprob: -7.537259578704834
    7. '   ' → logprob: -9.537260055541992
    8. ' return' → logprob: -9.912260055541992
    9. 'return' → logprob: -11.037260055541992
    10. '
' → logprob: -11.412260055541992

Token 245: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.05033981800079346
    2. '_' → logprob: -3.175339698791504
    3. ' =' → logprob: -6.050339698791504
    4. '_num' → logprob: -6.300339698791504
    5. '_input' → logprob: -6.925339698791504
    6. '_tests' → logprob: -7.050339698791504
    7. '_lines' → logprob: -7.925339698791504
    8. '=' → logprob: -8.425339698791504
    9. '_test' → logprob: -8.925339698791504
    10. '_number' → logprob: -9.175339698791504

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31389909982681274
    2. '=' → logprob: -1.313899040222168
    3. '()' → logprob: -7.813899040222168
    4. '   ' → logprob: -9.188899040222168
    5. ' ' → logprob: -10.563899040222168
    6. '_' → logprob: -10.563899040222168
    7. ',' → logprob: -10.813899040222168
    8. '=int' → logprob: -10.813899040222168
    9. ')' → logprob: -11.438899040222168
    10. '(' → logprob: -11.688899040222168

Token 247: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47407814860343933
    2. ' int' → logprob: -0.9740781784057617
    3. '[int' → logprob: -14.474078178405762
    4. '=int' → logprob: -14.974078178405762
    5. '(int' → logprob: -15.474078178405762
    6. '	int' → logprob: -16.599077224731445
    7. ' ' → logprob: -17.474077224731445
    8. '<int' → logprob: -17.599077224731445
    9. '   ' → logprob: -17.849077224731445
    10. ' 
' → logprob: -18.724077224731445

Token 248: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002510262420400977
    2. '(' → logprob: -6.002510070800781
    3. 'input' → logprob: -10.377510070800781
    4. '()' → logprob: -12.627510070800781
    5. ' input' → logprob: -16.37751007080078
    6. '(
' → logprob: -16.87751007080078
    7. '=input' → logprob: -17.50251007080078
    8. '('' → logprob: -18.12751007080078
    9. '(open' → logprob: -18.75251007080078
    10. '	input' → logprob: -18.75251007080078

Token 249: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023352744057774544
    2. '()' → logprob: -3.773352861404419
    3. '().' → logprob: -9.64835262298584
    4. '())
' → logprob: -10.64835262298584
    5. '(' → logprob: -11.52335262298584
    6. '()
' → logprob: -13.27335262298584
    7. '()>' → logprob: -13.52335262298584
    8. ' ())' → logprob: -13.52335262298584
    9. ')' → logprob: -13.64835262298584
    10. '())

' → logprob: -14.02335262298584

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04141295701265335
    2. 'list' → logprob: -3.5414130687713623
    3. ' list' → logprob: -5.041412830352783
    4. '
' → logprob: -6.291412830352783
    5. '    
' → logprob: -6.791412830352783
    6. '_list' → logprob: -7.416412830352783
    7. '	list' → logprob: -7.791412830352783
    8. 'num' → logprob: -8.666413307189941
    9. ' lists' → logprob: -8.791413307189941
    10. '<|end|>' → logprob: -8.791413307189941

Token 251: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014782924205064774
    2. ' list' → logprob: -4.264782905578613
    3. 'a' → logprob: -8.139782905578613
    4. '   ' → logprob: -8.514782905578613
    5. 'cases' → logprob: -10.514782905578613
    6. '	list' → logprob: -11.139782905578613
    7. '    
' → logprob: -11.264782905578613
    8. 'input' (adapté à ' input') → logprob: -11.514782905578613
    9. 'case' → logprob: -11.514782905578613
    10. 'lists' → logprob: -11.514782905578613

Token 252: '_list' (ID: 4162)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.9760334491729736
    2. '_' → logprob: -1.3510334491729736
    3. '_lines' → logprob: -2.1010334491729736
    4. '_values' → logprob: -2.3510334491729736
    5. '_lists' → logprob: -2.6010334491729736
    6. '()' → logprob: -3.8510334491729736
    7. '_a' → logprob: -3.8510334491729736
    8. '_list' → logprob: -4.2260332107543945
    9. 's' → logprob: -5.3510332107543945
    10. '_arrays' → logprob: -5.6010332107543945

Token 253: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.25796937942504883
    2. 's' → logprob: -1.7579693794250488
    3. '_' → logprob: -3.132969379425049
    4. '()' → logprob: -5.382969379425049
    5. 'a' → logprob: -5.757969379425049
    6. '_s' → logprob: -6.257969379425049
    7. '(' → logprob: -7.007969379425049
    8. '=' → logprob: -8.25796890258789
    9. '_values' → logprob: -8.88296890258789
    10. 'A' → logprob: -9.00796890258789

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1609734445810318
    2. '=' → logprob: -1.9109734296798706
    3. ',' → logprob: -7.41097354888916
    4. '=[]' → logprob: -8.91097354888916
    5. '=[]
' → logprob: -13.03597354888916
    6. '[]' → logprob: -13.28597354888916
    7. ' ,' → logprob: -13.28597354888916
    8. '.append' → logprob: -13.78597354888916
    9. '.' → logprob: -14.16097354888916
    10. '_' → logprob: -14.66097354888916

Token 255: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.26264259219169617
    2. '[' → logprob: -1.5126426219940186
    3. ' []' → logprob: -5.6376423835754395
    4. '[list' → logprob: -5.6376423835754395
    5. '[input' → logprob: -6.3876423835754395
    6. ' [' → logprob: -7.1376423835754395
    7. '[int' → logprob: -7.5126423835754395
    8. '[List' → logprob: -8.887642860412598
    9. '[]
' → logprob: -9.512642860412598
    10. 'list' → logprob: -10.387642860412598

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26348453760147095
    2. 'input' → logprob: -1.5134844779968262
    3. ' input' → logprob: -4.513484477996826
    4. 'for' → logprob: -8.263484954833984
    5. ' for' → logprob: -8.513484954833984
    6. '_input' → logprob: -11.388484954833984
    7. ' ' → logprob: -11.388484954833984
    8. '  ' → logprob: -11.638484954833984
    9. '    
' → logprob: -11.888484954833984
    10. '<|end|>' → logprob: -11.888484954833984

Token 257: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.07937363535165787
    2. ' input' → logprob: -2.579373598098755
    3. 'for' → logprob: -8.079373359680176
    4. ' for' → logprob: -9.079373359680176
    5. '   ' → logprob: -10.079373359680176
    6. '_input' → logprob: -12.454373359680176
    7. '
' → logprob: -12.454373359680176
    8. ' 
' → logprob: -13.579373359680176
    9. '	input' → logprob: -13.704373359680176
    10. ' ' → logprob: -13.829373359680176

Token 258: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.016168326139450073
    2. '_' → logprob: -4.641168117523193
    3. '()' → logprob: -5.641168117523193
    4. 'List' → logprob: -7.516168117523193
    5. '_lines' → logprob: -7.766168117523193
    6. '()
' → logprob: -8.641168594360352
    7. 'a' → logprob: -8.641168594360352
    8. '('_' → logprob: -8.766168594360352
    9. '(' → logprob: -8.891168594360352
    10. ' _' → logprob: -9.016168594360352

Token 259: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.006152038928121328
    2. '_b' → logprob: -5.131152153015137
    3. '_c' → logprob: -8.881152153015137
    4. '_' → logprob: -9.631152153015137
    5. 'a' → logprob: -11.256152153015137
    6. '.append' → logprob: -13.756152153015137
    7. '_=' → logprob: -14.256152153015137
    8. '_d' → logprob: -14.631152153015137
    9. '=[]' → logprob: -14.631152153015137
    10. '=[]
' → logprob: -14.756152153015137

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48915910720825195
    2. '=' → logprob: -1.114159107208252
    3. '.append' → logprob: -2.864159107208252
    4. '.' → logprob: -7.239159107208252
    5. '=[]' → logprob: -8.489158630371094
    6. ',' → logprob: -8.864158630371094
    7. '.extend' → logprob: -8.989158630371094
    8. '=[]
' → logprob: -8.989158630371094
    9. '()' → logprob: -9.239158630371094
    10. '[]' → logprob: -9.489158630371094

Token 261: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10125012695789337
    2. '[]
' → logprob: -2.351250171661377
    3. ' []' → logprob: -6.976250171661377
    4. ' []
' → logprob: -9.226249694824219
    5. '[]

' → logprob: -11.976249694824219
    6. '[' → logprob: -13.726249694824219
    7. '=[]
' → logprob: -13.851249694824219
    8. '=[]' → logprob: -14.351249694824219
    9. '[])' → logprob: -14.601249694824219
    10. '[]}' → logprob: -14.726249694824219

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012900194153189659
    2. 'input' → logprob: -4.387900352478027
    3. ' input' → logprob: -7.887900352478027
    4. ',input' → logprob: -12.387900352478027
    5. '	input' → logprob: -12.512900352478027
    6. '
' → logprob: -13.012900352478027
    7. '_input' → logprob: -13.762900352478027
    8. 'import' → logprob: -14.012900352478027
    9. '[input' → logprob: -14.012900352478027
    10. ' ' → logprob: -14.387900352478027

Token 263: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.033654000610113144
    2. ' input' → logprob: -3.408653974533081
    3. '   ' → logprob: -12.15865421295166
    4. '
' → logprob: -14.15865421295166
    5. '_input' → logprob: -14.40865421295166
    6. 'for' → logprob: -14.65865421295166
    7. 'import' → logprob: -15.28365421295166
    8. ' ' → logprob: -15.53365421295166
    9. '	input' → logprob: -15.65865421295166
    10. '(input' → logprob: -15.65865421295166

Token 264: '_list' (ID: 4162)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.47648435831069946
    2. '_c' → logprob: -1.2264842987060547
    3. '_' → logprob: -2.4764842987060547
    4. ' _' → logprob: -7.351484298706055
    5. '_b' → logprob: -7.351484298706055
    6. 'a' → logprob: -8.851484298706055
    7. '_list' → logprob: -9.851484298706055
    8. '_d' → logprob: -10.101484298706055
    9. '_s' → logprob: -10.476484298706055
    10. '_f' → logprob: -10.726484298706055

Token 265: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0170498825609684
    2. '_c' → logprob: -4.267049789428711
    3. '_' → logprob: -6.642049789428711
    4. '_b' → logprob: -7.017049789428711
    5. 'a' → logprob: -7.392049789428711
    6. 'c' → logprob: -10.517049789428711
    7. '_d' → logprob: -11.767049789428711
    8. '   ' → logprob: -11.767049789428711
    9. 'b' → logprob: -12.392049789428711
    10. 's' → logprob: -12.392049789428711

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132895827293396
    2. '=' → logprob: -1.3132896423339844
    3. '=[]' → logprob: -11.063289642333984
    4. '_' → logprob: -11.688289642333984
    5. ' ' → logprob: -14.063289642333984
    6. '[]' → logprob: -14.188289642333984
    7. '   ' → logprob: -14.188289642333984
    8. ',' → logprob: -14.563289642333984
    9. '=[]
' → logprob: -14.563289642333984
    10. '  ' → logprob: -16.063289642333984

Token 267: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1603463888168335
    2. '[]
' → logprob: -1.9103463888168335
    3. ' []' → logprob: -9.660346031188965
    4. ' []
' → logprob: -10.035346031188965
    5. '[]

' → logprob: -11.910346031188965
    6. '=[]
' → logprob: -12.035346031188965
    7. '=[]' → logprob: -14.035346031188965
    8. '[' → logprob: -14.660346031188965
    9. '([])
' → logprob: -15.035346031188965
    10. '([]' → logprob: -16.28534698486328

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062343865633010864
    2. 'input' → logprob: -2.8123438358306885
    3. ' input' → logprob: -7.937344074249268
    4. '	input' → logprob: -12.18734359741211
    5. ',input' → logprob: -12.43734359741211
    6. 'import' → logprob: -13.06234359741211
    7. ' ' → logprob: -13.06234359741211
    8. '[input' → logprob: -13.31234359741211
    9. '_input' → logprob: -13.43734359741211
    10. '  ' → logprob: -14.06234359741211

Token 269: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.03806616738438606
    2. ' input' → logprob: -3.2880661487579346
    3. 'for' → logprob: -10.913065910339355
    4. '   ' → logprob: -12.788065910339355
    5. ' for' → logprob: -13.288065910339355
    6. '_input' → logprob: -14.538065910339355
    7. '[input' → logprob: -14.913065910339355
    8. '
' → logprob: -15.288065910339355
    9. '	input' → logprob: -15.538065910339355
    10. '(input' → logprob: -15.663065910339355

Token 270: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1994775377388578e-05
    2. '_lists' → logprob: -12.375012397766113
    3. '_d' → logprob: -12.875012397766113
    4. '_' → logprob: -13.000012397766113
    5. '_lines' → logprob: -14.875012397766113
    6. '_a' → logprob: -14.875012397766113
    7. '_data' → logprob: -15.125012397766113
    8. '()' → logprob: -15.125012397766113
    9. '('_' → logprob: -15.875012397766113
    10. '_b' → logprob: -15.875012397766113

Token 271: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00017040544480551034
    2. '_' → logprob: -8.750170707702637
    3. '_a' → logprob: -11.875170707702637
    4. 'd' → logprob: -12.375170707702637
    5. '_c' → logprob: -15.875170707702637
    6. '[]' → logprob: -16.00016975402832
    7. '_b' → logprob: -16.12516975402832
    8. '__' → logprob: -16.25016975402832
    9. 's' → logprob: -17.12516975402832
    10. 'D' → logprob: -17.37516975402832

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868881165981293
    2. ' =' → logprob: -1.1368881464004517
    3. '=[]' → logprob: -11.01188850402832
    4. '=[]
' → logprob: -15.51188850402832
    5. '[]' → logprob: -15.51188850402832
    6. ' ' → logprob: -16.26188850402832
    7. '   ' → logprob: -16.76188850402832
    8. '_' → logprob: -17.01188850402832
    9. '＝' → logprob: -17.76188850402832
    10. '  ' → logprob: -17.76188850402832

Token 273: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -7.946405094116926e-05
    2. ' []' → logprob: -9.500079154968262
    3. '[]
' → logprob: -12.375079154968262
    4. '[]

' → logprob: -16.250080108642578
    5. '[' → logprob: -16.375080108642578
    6. '[]}' → logprob: -17.125080108642578
    7. '=[]' → logprob: -17.375080108642578
    8. 'list' → logprob: -17.750080108642578
    9. '[])' → logprob: -18.250080108642578
    10. '([]' → logprob: -18.250080108642578

Token 274: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7232076525688171
    2. '   ' → logprob: -0.9732076525688171
    3. ' for' → logprob: -2.098207712173462
    4. '
' → logprob: -4.473207473754883
    5. '	for' → logprob: -6.348207473754883
    6. '<|end|>' → logprob: -7.598207473754883
    7. '    
' → logprob: -8.473207473754883
    8. '  
' → logprob: -8.473207473754883
    9. '```' → logprob: -9.348207473754883
    10. ' 
' → logprob: -9.848207473754883

Token 275: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03813593089580536
    2. ' for' → logprob: -3.2881360054016113
    3. '   ' → logprob: -9.663135528564453
    4. '	for' → logprob: -10.413135528564453
    5. '
' → logprob: -14.038135528564453
    6. '    
' → logprob: -18.163135528564453
    7. '```' → logprob: -18.163135528564453
    8. ' 
' → logprob: -19.788135528564453
    9. ' ' → logprob: -20.288135528564453
    10. 'while' → logprob: -21.413135528564453

Token 276: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00043102685594931245
    2. ' _' → logprob: -7.750431060791016
    3. '_range' → logprob: -15.500431060791016
    4. '_case' → logprob: -15.875431060791016
    5. '_i' → logprob: -16.375431060791016
    6. ' in' → logprob: -18.625431060791016
    7. '_in' → logprob: -19.375431060791016
    8. ' ' → logprob: -19.625431060791016
    9. '_

' → logprob: -19.875431060791016
    10. '_index' → logprob: -19.875431060791016

Token 277: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2019762247800827
    2. ' in' → logprob: -1.7019761800765991
    3. 'range' → logprob: -7.951976299285889
    4. '_' → logprob: -8.95197582244873
    5. ' ' → logprob: -9.70197582244873
    6. '
' → logprob: -12.20197582244873
    7. ' range' → logprob: -12.32697582244873
    8. 'i' → logprob: -13.07697582244873
    9. '_in' → logprob: -13.32697582244873
    10. ' _' → logprob: -13.57697582244873

Token 278: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008048642775975168
    2. ' range' → logprob: -7.125804901123047
    3. '	range' → logprob: -15.875804901123047
    4. 'in' → logprob: -17.125804901123047
    5. '(range' → logprob: -17.125804901123047
    6. '_' → logprob: -17.875804901123047
    7. 'ange' → logprob: -18.000804901123047
    8. '_range' → logprob: -18.250804901123047
    9. '   ' → logprob: -18.375804901123047
    10. ' ' → logprob: -18.500804901123047

Token 279: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.6136555075645447
    2. ' total' → logprob: -0.8636555075645447
    3. 'total' → logprob: -3.3636555671691895
    4. ' (' → logprob: -6.3636555671691895
    5. '(' → logprob: -7.6136555671691895
    6. ' range' → logprob: -8.738655090332031
    7. 'range' → logprob: -11.988655090332031
    8. ' ' → logprob: -12.238655090332031
    9. '(range' → logprob: -12.238655090332031
    10. '_total' → logprob: -12.488655090332031

Token 280: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -5.908022285439074e-05
    2. ' _' → logprob: -10.250059127807617
    3. ' ' → logprob: -12.000059127807617
    4. '_' → logprob: -12.500059127807617
    5. 'cases' → logprob: -12.500059127807617
    6. '_lines' → logprob: -12.750059127807617
    7. '_total' → logprob: -13.125059127807617
    8. ')' → logprob: -14.000059127807617
    9. '_c' → logprob: -14.000059127807617
    10. '   ' → logprob: -14.250059127807617

Token 281: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8117783069610596
    2. '):
' → logprob: -1.3117783069610596
    3. ':' → logprob: -1.4367783069610596
    4. '():
' → logprob: -3.5617783069610596
    5. '():' → logprob: -4.6867780685424805
    6. ':
' → logprob: -4.6867780685424805
    7. '   ' → logprob: -6.5617780685424805
    8. ',' → logprob: -7.9367780685424805
    9. '<|end|>' → logprob: -9.68677806854248
    10. ')' → logprob: -9.93677806854248

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007368560880422592
    2. ' line' → logprob: -5.632368564605713
    3. '   ' → logprob: -6.257368564605713
    4. 'input' → logprob: -8.132368087768555
    5. 'line' → logprob: -8.257368087768555
    6. '        
' → logprob: -8.257368087768555
    7. '```' → logprob: -8.757368087768555
    8. ' input' → logprob: -9.007368087768555
    9. '<|end|>' → logprob: -9.007368087768555
    10. '	line' → logprob: -9.382368087768555

Token 283: ' input' (ID: 3422)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3157908618450165
    2. 'a' → logprob: -1.3157908916473389
    3. ' value' → logprob: -7.19079065322876
    4. ' values' → logprob: -7.31579065322876
    5. ' line' → logprob: -7.44079065322876
    6. 'value' → logprob: -8.565791130065918
    7. ' x' → logprob: -9.440791130065918
    8. ' val' → logprob: -9.815791130065918
    9. 'values' → logprob: -10.065791130065918
    10. 'x' → logprob: -10.440791130065918

Token 284: '_a' (ID: 10852)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.17368188500404358
    2. '_line' → logprob: -1.9236818552017212
    3. '_vals' → logprob: -5.298681735992432
    4. '_data' → logprob: -5.548681735992432
    5. '_a' → logprob: -5.923681735992432
    6. '_list' → logprob: -6.673681735992432
    7. '_parts' → logprob: -8.17368221282959
    8. '_value' → logprob: -9.54868221282959
    9. '_' → logprob: -9.67368221282959
    10. '_str' → logprob: -10.42368221282959

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008862029761075974
    2. ',input' → logprob: -4.758862018585205
    3. ' ,' → logprob: -8.758862495422363
    4. ',b' → logprob: -10.133862495422363
    5. '_,' → logprob: -10.758862495422363
    6. '=input' → logprob: -11.383862495422363
    7. ',value' → logprob: -12.508862495422363
    8. ',a' → logprob: -12.633862495422363
    9. ',line' → logprob: -13.133862495422363
    10. ',int' → logprob: -13.508862495422363

Token 286: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02975083328783512
    2. ' input' → logprob: -3.5297508239746094
    3. '_input' → logprob: -15.40475082397461
    4. '	input' → logprob: -16.52975082397461
    5. ',input' → logprob: -17.52975082397461
    6. '=input' → logprob: -17.77975082397461
    7. '(input' → logprob: -19.52975082397461
    8. '[input' → logprob: -20.65475082397461
    9. 'Input' → logprob: -20.90475082397461
    10. ' ' → logprob: -21.02975082397461

Token 287: '_b' (ID: 1535)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2526063919067383
    2. '_,' → logprob: -2.5026063919067383
    3. '_b' → logprob: -2.5026063919067383
    4. '_' → logprob: -3.5026063919067383
    5. ',_' → logprob: -4.627606391906738
    6. '_a' → logprob: -5.127606391906738
    7. 'b' → logprob: -5.377606391906738
    8. ',b' → logprob: -5.877606391906738
    9. ' ,' → logprob: -6.502606391906738
    10. '<|end|>' → logprob: -6.502606391906738

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008533471846021712
    2. ',input' → logprob: -7.125853538513184
    3. ' ,' → logprob: -10.250853538513184
    4. 'input' → logprob: -11.625853538513184
    5. '=input' → logprob: -12.875853538513184
    6. '=' → logprob: -13.625853538513184
    7. ' =' → logprob: -15.000853538513184
    8. ' input' → logprob: -15.500853538513184
    9. '<|end|>' → logprob: -16.000852584838867
    10. '_input' → logprob: -16.625852584838867

Token 289: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018150178715586662
    2. ' input' → logprob: -4.018150329589844
    3. '_input' → logprob: -15.518150329589844
    4. ',input' → logprob: -16.143150329589844
    5. '=input' → logprob: -17.518150329589844
    6. '	input' → logprob: -18.768150329589844
    7. '(input' → logprob: -19.143150329589844
    8. '<input' → logprob: -19.768150329589844
    9. 'Input' → logprob: -19.893150329589844
    10. '[input' → logprob: -20.518150329589844

Token 290: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21778160333633423
    2. '_c' → logprob: -1.7177815437316895
    3. '_d' → logprob: -4.8427815437316895
    4. 'c' → logprob: -6.0927815437316895
    5. '_,' → logprob: -6.0927815437316895
    6. ',_' → logprob: -6.7177815437316895
    7. ' ,' → logprob: -7.0927815437316895
    8. ',c' → logprob: -7.2177815437316895
    9. '_' → logprob: -7.5927815437316895
    10. '_a' → logprob: -8.092782020568848

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007258945843204856
    2. ',input' → logprob: -7.250725746154785
    3. ' ,' → logprob: -11.500725746154785
    4. '=input' → logprob: -13.125725746154785
    5. 'input' → logprob: -13.375725746154785
    6. '=' → logprob: -13.625725746154785
    7. ' =' → logprob: -14.000725746154785
    8. '_input' → logprob: -16.5007266998291
    9. ' input' → logprob: -16.6257266998291
    10. ',_' → logprob: -17.1257266998291

Token 292: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022899746894836
    2. ' input' → logprob: -1.910228967666626
    3. ',input' → logprob: -13.035228729248047
    4. '=input' → logprob: -13.410228729248047
    5. '_input' → logprob: -13.785228729248047
    6. '(input' → logprob: -16.535228729248047
    7. '	input' → logprob: -17.535228729248047
    8. 'space' → logprob: -18.035228729248047
    9. '<input' → logprob: -18.535228729248047
    10. 'import' → logprob: -18.535228729248047

Token 293: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.8590300139039755e-05
    2. '_' → logprob: -10.000048637390137
    3. 'd' → logprob: -13.500048637390137
    4. '_c' → logprob: -14.000048637390137
    5. '_a' → logprob: -15.250048637390137
    6. '_b' → logprob: -15.375048637390137
    7. '_
' → logprob: -16.25004768371582
    8. '__' → logprob: -16.25004768371582
    9. '_,' → logprob: -16.87504768371582
    10. ' _' → logprob: -17.12504768371582

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141547918319702
    2. ' =' → logprob: -1.7014155387878418
    3. '=input' → logprob: -13.826415061950684
    4. ',' → logprob: -14.076415061950684
    5. ')' → logprob: -16.201416015625
    6. ')=' → logprob: -16.326416015625
    7. ' ' → logprob: -16.701416015625
    8. '＝' → logprob: -17.201416015625
    9. '   ' → logprob: -17.826416015625
    10. 'input' → logprob: -18.576416015625

Token 295: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018151935189962387
    2. 'map' → logprob: -4.018151760101318
    3. ' input' → logprob: -13.393152236938477
    4. 'input' → logprob: -14.643152236938477
    5. ' list' → logprob: -17.143152236938477
    6. '	map' → logprob: -17.643152236938477
    7. '[' → logprob: -18.768152236938477
    8. '(map' → logprob: -19.018152236938477
    9. ' ' → logprob: -20.143152236938477
    10. 'list' → logprob: -20.393152236938477

Token 296: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.7014437364414334e-05
    2. '(' → logprob: -10.75002670288086
    3. 'int' → logprob: -12.12502670288086
    4. '<int' → logprob: -18.00002670288086
    5. ',int' → logprob: -19.00002670288086
    6. '(
' → logprob: -19.12502670288086
    7. ' int' → logprob: -19.25002670288086
    8. '(str' → logprob: -19.25002670288086
    9. '=int' → logprob: -19.25002670288086
    10. '[int' → logprob: -19.62502670288086

Token 297: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38097894191741943
    2. ',input' → logprob: -1.2559789419174194
    3. 'input' → logprob: -3.880979061126709
    4. ',' → logprob: -4.755979061126709
    5. ')' → logprob: -6.630979061126709
    6. '(' → logprob: -7.005979061126709
    7. ' input' → logprob: -8.25597858428955
    8. '=input' → logprob: -9.38097858428955
    9. ')(' → logprob: -9.50597858428955
    10. '[input' → logprob: -10.38097858428955

Token 298: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. ')' → logprob: -18.87509536743164
    4. '_input' → logprob: -21.00009536743164
    5. '=input' → logprob: -21.00009536743164
    6. ',input' → logprob: -21.25009536743164
    7. 'Input' → logprob: -21.50009536743164
    8. '(input' → logprob: -21.62509536743164
    9. '	input' → logprob: -22.62509536743164
    10. '<input' → logprob: -23.12509536743164

Token 299: '().' (ID: 1454)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22232183814048767
    2. '().' → logprob: -2.0973217487335205
    3. 'input' → logprob: -3.0973217487335205
    4. '(' → logprob: -3.7223217487335205
    5. '()' → logprob: -5.8473219871521
    6. ')' → logprob: -6.0973219871521
    7. ' input' → logprob: -6.7223219871521
    8. '(
' → logprob: -8.347321510314941
    9. '=input' → logprob: -8.972321510314941
    10. '())' → logprob: -9.222321510314941

Token 300: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003377270477358252
    2. 'strip' → logprob: -8.000337600708008
    3. 'rstrip' → logprob: -13.750337600708008
    4. '(split' → logprob: -13.875337600708008
    5. ' split' → logprob: -16.000337600708008
    6. 'spl' → logprob: -16.500337600708008
    7. '.split' → logprob: -18.375337600708008
    8. '_split' → logprob: -18.375337600708008
    9. 'read' → logprob: -19.875337600708008
    10. ')' → logprob: -21.000337600708008

Token 301: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005984489340335131
    2. '()' → logprob: -5.255984306335449
    3. ')' → logprob: -7.255984306335449
    4. '(' → logprob: -10.38098430633545
    5. '()))' → logprob: -12.38098430633545
    6. '())
' → logprob: -12.63098430633545
    7. '('' → logprob: -12.75598430633545
    8. ' ())' → logprob: -13.63098430633545
    9. '(),' → logprob: -14.63098430633545
    10. '(','' → logprob: -14.88098430633545

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012741618556901813
    2. '<|end|>' → logprob: -6.876274108886719
    3. '        
' → logprob: -9.001274108886719
    4. '   ' → logprob: -9.751274108886719
    5. '	' → logprob: -10.501274108886719
    6. '<|end|>' → logprob: -12.251274108886719
    7. '		
' → logprob: -12.376274108886719
    8. '```' → logprob: -12.376274108886719
    9. 'input' → logprob: -12.501274108886719
    10. '
' → logprob: -12.751274108886719

Token 303: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.014252478256821632
    2. ' input' → logprob: -4.264252662658691
    3. '   ' → logprob: -9.514252662658691
    4. '       ' → logprob: -11.389252662658691
    5. '
' → logprob: -13.764252662658691
    6. '	input' → logprob: -13.889252662658691
    7. '```' → logprob: -14.639252662658691
    8. '_input' → logprob: -15.014252662658691
    9. ' ' → logprob: -15.389252662658691
    10. ',input' → logprob: -15.639252662658691

Token 304: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00012654215970542282
    2. '_a' → logprob: -9.000126838684082
    3. '_' → logprob: -12.875126838684082
    4. 'a' → logprob: -16.000125885009766
    5. ' _' → logprob: -17.125125885009766
    6. '_l' → logprob: -17.250125885009766
    7. ')_' → logprob: -17.250125885009766
    8. '_li' → logprob: -17.500125885009766
    9. '_input' → logprob: -17.625125885009766
    10. '_lists' → logprob: -18.000125885009766

Token 305: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.2664456789934775e-06
    2. ' _' → logprob: -14.250000953674316
    3. '_' → logprob: -15.500000953674316
    4. 'a' → logprob: -16.875001907348633
    5. '_append' → logprob: -16.875001907348633
    6. '_x' → logprob: -17.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. '_an' → logprob: -18.125001907348633
    9. ')_' → logprob: -18.250001907348633
    10. '_d' → logprob: -18.500001907348633

Token 306: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004486653197091073
    2. '.' → logprob: -7.750448703765869
    3. '.app' → logprob: -12.375448226928711
    4. ').' → logprob: -12.375448226928711
    5. ' .' → logprob: -12.750448226928711
    6. '.ap' → logprob: -13.000448226928711
    7. '.extend' → logprob: -13.375448226928711
    8. '.push' → logprob: -14.125448226928711
    9. '.add' → logprob: -14.375448226928711
    10. '.setdefault' → logprob: -14.750448226928711

Token 307: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04859248176217079
    2. 'input' → logprob: -3.0485925674438477
    3. '(' → logprob: -12.548592567443848
    4. ' input' → logprob: -13.423592567443848
    5. ',input' → logprob: -16.67359161376953
    6. '=input' → logprob: -17.29859161376953
    7. '<input' → logprob: -19.29859161376953
    8. '_input' → logprob: -19.54859161376953
    9. '	input' → logprob: -20.17359161376953
    10. ' (' → logprob: -20.54859161376953

Token 308: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.375
    3. '_' → logprob: -16.75
    4. ')' → logprob: -18.0
    5. ')_' → logprob: -19.0
    6. '(a' → logprob: -19.25
    7. '_)' → logprob: -19.625
    8. ' _' → logprob: -19.875
    9. '```' → logprob: -20.5
    10. '	a' → logprob: -20.5

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8232690460281447e-05
    2. ')
' → logprob: -10.375048637390137
    3. '<|end|>' → logprob: -12.000048637390137
    4. ' )' → logprob: -12.125048637390137
    5. '       ' → logprob: -12.500048637390137
    6. '   ' → logprob: -14.125048637390137
    7. '),' → logprob: -15.500048637390137
    8. ')}' → logprob: -15.750048637390137
    9. ' ' → logprob: -16.25004768371582
    10. ',' → logprob: -16.37504768371582

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012631483376026154
    2. '<|end|>' → logprob: -5.262631416320801
    3. 'input' → logprob: -5.512631416320801
    4. '        
' → logprob: -6.387631416320801
    5. '   ' → logprob: -8.1376314163208
    6. ',input' → logprob: -8.3876314163208
    7. ' ' → logprob: -8.7626314163208
    8. ' input' → logprob: -8.7626314163208
    9. ' 
' → logprob: -9.1376314163208
    10. '
' → logprob: -9.1376314163208

Token 311: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.16022484004497528
    2. ' input' → logprob: -1.9102247953414917
    3. '       ' → logprob: -15.285224914550781
    4. '=input' → logprob: -16.28522491455078
    5. ',input' → logprob: -16.78522491455078
    6. '(input' → logprob: -16.78522491455078
    7. '_input' → logprob: -16.91022491455078
    8. '	input' → logprob: -17.28522491455078
    9. '[input' → logprob: -17.28522491455078
    10. '.input' → logprob: -17.53522491455078

Token 312: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.87500286102295
    3. ')_' → logprob: -15.12500286102295
    4. ' _' → logprob: -15.12500286102295
    5. '_b' → logprob: -15.87500286102295
    6. '._' → logprob: -16.000001907348633
    7. ''_' → logprob: -16.125001907348633
    8. '_s' → logprob: -16.375001907348633
    9. '_code' → logprob: -16.750001907348633
    10. '_input' → logprob: -17.250001907348633

Token 313: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0004682073777075857
    2. '_list' → logprob: -7.7504682540893555
    3. '_a' → logprob: -10.500468254089355
    4. '.append' → logprob: -11.875468254089355
    5. '_d' → logprob: -13.250468254089355
    6. '_c' → logprob: -15.125468254089355
    7. 'append' → logprob: -15.375468254089355
    8. '_append' → logprob: -15.375468254089355
    9. 's' → logprob: -16.00046730041504
    10. '._' → logprob: -16.62546730041504

Token 314: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007123126997612417
    2. '.' → logprob: -7.2507123947143555
    3. ' .' → logprob: -14.375712394714355
    4. '<|end|>' → logprob: -14.500712394714355
    5. '.app' → logprob: -14.625712394714355
    6. ').' → logprob: -15.125712394714355
    7. '.extend' → logprob: -15.250712394714355
    8. '.Append' → logprob: -16.12571144104004
    9. 'append' → logprob: -16.50071144104004
    10. '.setdefault' → logprob: -16.75071144104004

Token 315: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.574251918005757e-05
    2. 'input' → logprob: -10.000055313110352
    3. '(' → logprob: -11.500055313110352
    4. ' input' → logprob: -16.50005531311035
    5. ' (' → logprob: -17.37505531311035
    6. ',input' → logprob: -17.75005531311035
    7. '(
' → logprob: -18.62505531311035
    8. '(inp' → logprob: -19.25005531311035
    9. '=input' → logprob: -20.00005531311035
    10. '<input' → logprob: -20.25005531311035

Token 316: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0012239166535437107
    2. '(input' → logprob: -6.876224040985107
    3. ')' → logprob: -9.62622356414795
    4. 'b' → logprob: -10.37622356414795
    5. 'input' → logprob: -10.62622356414795
    6. '[input' → logprob: -10.87622356414795
    7. '_' → logprob: -11.25122356414795
    8. '_)' → logprob: -11.50122356414795
    9. '_a' → logprob: -11.87622356414795
    10. '.append' → logprob: -11.87622356414795

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2034715861082077
    2. ')
' → logprob: -1.7034715414047241
    3. '       ' → logprob: -6.328471660614014
    4. '<|end|>' → logprob: -8.953471183776855
    5. 'input' → logprob: -9.328471183776855
    6. '[input' → logprob: -11.578471183776855
    7. '(input' → logprob: -11.703471183776855
    8. '   ' → logprob: -11.828471183776855
    9. ')
' → logprob: -12.078471183776855
    10. '.append' → logprob: -12.203471183776855

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004215043969452381
    2. 'input' → logprob: -5.504215240478516
    3. '```' → logprob: -9.754215240478516
    4. ' input' → logprob: -10.379215240478516
    5. '
' → logprob: -11.254215240478516
    6. '[input' → logprob: -11.879215240478516
    7. '   ' → logprob: -12.004215240478516
    8. '        
' → logprob: -12.129215240478516
    9. ',input' → logprob: -12.129215240478516
    10. '(input' → logprob: -13.004215240478516

Token 319: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.0001234428636962548
    2. ' input' → logprob: -9.000123023986816
    3. '(input' → logprob: -19.625123977661133
    4. '       ' → logprob: -20.000123977661133
    5. '[input' → logprob: -21.375123977661133
    6. '<input' → logprob: -21.625123977661133
    7. '=input' → logprob: -21.625123977661133
    8. '	input' → logprob: -22.250123977661133
    9. 'output' → logprob: -22.250123977661133
    10. '
' → logprob: -22.750123977661133

Token 320: '_list' (ID: 4162)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5389919281005859
    2. '_list' → logprob: -1.038991928100586
    3. '_c' → logprob: -2.788991928100586
    4. '_a' → logprob: -7.163991928100586
    5. '.append' → logprob: -7.788991928100586
    6. 'd' → logprob: -9.413991928100586
    7. '_.' → logprob: -10.788991928100586
    8. 's' → logprob: -10.913991928100586
    9. '_' → logprob: -11.538991928100586
    10. '_b' → logprob: -11.663991928100586

Token 321: '_c' (ID: 1303)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006052158772945404
    2. '_c' → logprob: -5.881052017211914
    3. '_d' → logprob: -5.881052017211914
    4. '_a' → logprob: -8.631052017211914
    5. 'append' → logprob: -8.756052017211914
    6. 'd' → logprob: -10.006052017211914
    7. '.' → logprob: -10.756052017211914
    8. '_.' → logprob: -11.631052017211914
    9. 'a' → logprob: -11.756052017211914
    10. '_append' → logprob: -12.006052017211914

Token 322: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003202114312443882
    2. '.' → logprob: -8.250320434570312
    3. '(input' → logprob: -9.875320434570312
    4. ' .' → logprob: -12.125320434570312
    5. ').' → logprob: -14.125320434570312
    6. '(' → logprob: -14.750320434570312
    7. '().' → logprob: -15.125320434570312
    8. 'append' → logprob: -15.625320434570312
    9. '.Append' → logprob: -15.875320434570312
    10. '.insert' → logprob: -16.125320434570312

Token 323: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0206720617134124e-05
    2. 'input' → logprob: -11.50001049041748
    3. '[input' → logprob: -18.125009536743164
    4. ',input' → logprob: -19.000009536743164
    5. '(' → logprob: -19.125009536743164
    6. '<input' → logprob: -19.750009536743164
    7. '=input' → logprob: -20.000009536743164
    8. ' input' → logprob: -20.375009536743164
    9. '_input' → logprob: -20.875009536743164
    10. '/input' → logprob: -21.000009536743164

Token 324: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1517960956552997e-05
    2. '_d' → logprob: -11.500011444091797
    3. '_' → logprob: -14.250011444091797
    4. 'c' → logprob: -14.875011444091797
    5. '_a' → logprob: -15.875011444091797
    6. ')' → logprob: -16.750011444091797
    7. '```' → logprob: -17.125011444091797
    8. '.append' → logprob: -17.250011444091797
    9. ')_' → logprob: -17.500011444091797
    10. '[' → logprob: -17.500011444091797

Token 325: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6052480340003967
    2. '.append' → logprob: -0.8552480340003967
    3. '(input' → logprob: -4.105247974395752
    4. ')' → logprob: -5.230247974395752
    5. ')
' → logprob: -5.230247974395752
    6. '[input' → logprob: -7.480247974395752
    7. 'append' → logprob: -7.855247974395752
    8. 'input' → logprob: -8.48024845123291
    9. ',input' → logprob: -8.48024845123291
    10. '(
' → logprob: -8.98024845123291

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008532279753126204
    2. 'input' → logprob: -7.125853061676025
    3. '   ' → logprob: -10.625853538513184
    4. '```' → logprob: -11.375853538513184
    5. '
' → logprob: -12.375853538513184
    6. '        
' → logprob: -13.125853538513184
    7. ' input' → logprob: -13.500853538513184
    8. '[input' → logprob: -14.125853538513184
    9. '      ' → logprob: -14.250853538513184
    10. '[' → logprob: -14.250853538513184

Token 327: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -4.5491004129871726e-05
    2. ' input' → logprob: -10.000045776367188
    3. '       ' → logprob: -22.000045776367188
    4. '(input' → logprob: -22.375045776367188
    5. 'import' → logprob: -23.875045776367188
    6. '
' → logprob: -24.000045776367188
    7. '=input' → logprob: -24.000045776367188
    8. 'inp' → logprob: -24.125045776367188
    9. '[input' → logprob: -24.125045776367188
    10. 'output' → logprob: -24.250045776367188

Token 328: '_list' (ID: 4162)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0024763736873865128
    2. '_list' → logprob: -6.002476215362549
    3. 'd' → logprob: -15.002476692199707
    4. '```' → logprob: -15.252476692199707
    5. 'List' → logprob: -16.62747573852539
    6. '_c' → logprob: -17.00247573852539
    7. 'D' → logprob: -17.25247573852539
    8. 'list' → logprob: -17.25247573852539
    9. '.append' → logprob: -17.62747573852539
    10. '_' → logprob: -18.00247573852539

Token 329: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.339278580620885e-06
    2. '.append' → logprob: -13.125001907348633
    3. 'd' → logprob: -15.375001907348633
    4. 'append' → logprob: -19.125001907348633
    5. '_' → logprob: -19.625001907348633
    6. '_a' → logprob: -19.625001907348633
    7. 'D' → logprob: -20.250001907348633
    8. 's' → logprob: -20.625001907348633
    9. '.d' → logprob: -21.000001907348633
    10. '	d' → logprob: -21.125001907348633

Token 330: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018422940047457814
    2. '.' → logprob: -8.625184059143066
    3. ' .' → logprob: -12.500184059143066
    4. '.extend' → logprob: -14.750184059143066
    5. ').' → logprob: -14.875184059143066
    6. '.app' → logprob: -16.000185012817383
    7. '.setdefault' → logprob: -17.125185012817383
    8. 'append' → logprob: -17.250185012817383
    9. '.ap' → logprob: -17.500185012817383
    10. '.Append' → logprob: -17.750185012817383

Token 331: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.719917630311102e-05
    2. 'input' → logprob: -9.500077247619629
    3. '(' → logprob: -13.000077247619629
    4. ' input' → logprob: -17.125076293945312
    5. ',input' → logprob: -19.125076293945312
    6. '=input' → logprob: -19.375076293945312
    7. ' (' → logprob: -19.625076293945312
    8. '(inp' → logprob: -20.000076293945312
    9. '<input' → logprob: -20.125076293945312
    10. '	input' → logprob: -20.250076293945312

Token 332: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -3.666993507067673e-05
    2. 'd' → logprob: -10.500036239624023
    3. '_' → logprob: -11.875036239624023
    4. ')' → logprob: -14.125036239624023
    5. ')_' → logprob: -14.500036239624023
    6. '_)' → logprob: -15.375036239624023
    7. ')d' → logprob: -15.375036239624023
    8. '```' → logprob: -15.750036239624023
    9. '[' → logprob: -16.625036239624023
    10. 's' → logprob: -17.250036239624023

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.696077227592468e-05
    2. ')
' → logprob: -9.625077247619629
    3. '<|end|>' → logprob: -12.375077247619629
    4. '       ' → logprob: -12.750077247619629
    5. '   ' → logprob: -12.875077247619629
    6. ' )' → logprob: -15.000077247619629
    7. ')}' → logprob: -16.125076293945312
    8. ')return' → logprob: -16.250076293945312
    9. ')

' → logprob: -16.375076293945312
    10. '),' → logprob: -16.625076293945312

Token 334: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005333012901246548
    2. '<|end|>' → logprob: -5.505332946777344
    3. '   ' → logprob: -7.130332946777344
    4. '```' → logprob: -8.130332946777344
    5. '	' → logprob: -9.255332946777344
    6. 'return' → logprob: -11.505332946777344
    7. 'input' → logprob: -11.755332946777344
    8. '        
' → logprob: -12.005332946777344
    9. '<|end|>' → logprob: -12.005332946777344
    10. '	   ' → logprob: -12.505332946777344

Token 335: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034050438553094864
    2. 'return' (adapté à ' return') → logprob: -3.409050464630127
    3. ' return' → logprob: -8.034049987792969
    4. '<|end|>' → logprob: -10.159049987792969
    5. '```' → logprob: -11.284049987792969
    6. '	return' → logprob: -11.409049987792969
    7. '
' → logprob: -11.784049987792969
    8. '    
' → logprob: -12.659049987792969
    9. ')' → logprob: -13.284049987792969
    10. '{return' → logprob: -14.034049987792969

Token 336: ' total' (ID: 3609)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.08944896562025e-05
    2. ' input' → logprob: -10.000081062316895
    3. '(input' → logprob: -10.250081062316895
    4. 'total' → logprob: -17.500080108642578
    5. '   ' → logprob: -18.750080108642578
    6. '<input' → logprob: -20.375080108642578
    7. '	input' → logprob: -20.500080108642578
    8. '[input' → logprob: -20.625080108642578
    9. '(' → logprob: -20.875080108642578
    10. ' (' → logprob: -21.250080108642578

Token 337: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -4.320199877838604e-07
    2. 'cases' → logprob: -16.125
    3. '_' → logprob: -16.25
    4. '_case' → logprob: -17.25
    5. ' _' → logprob: -17.375
    6. '_tests' → logprob: -17.75
    7. '\' → logprob: -19.0
    8. '_total' → logprob: -19.375
    9. '_choices' → logprob: -19.375
    10. '_codes' → logprob: -19.75

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03805479779839516
    2. ',input' → logprob: -3.2880547046661377
    3. 'input' → logprob: -12.413054466247559
    4. ' ,' → logprob: -12.538054466247559
    5. '   ' → logprob: -12.538054466247559
    6. ',
' → logprob: -13.663054466247559
    7. ',\
' → logprob: -15.663054466247559
    8. '[input' → logprob: -16.163055419921875
    9. '<|end|>' → logprob: -16.163055419921875
    10. ' input' → logprob: -17.038055419921875

Token 339: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196768581867218
    2. ' input' → logprob: -2.811967611312866
    3. '(input' → logprob: -19.686967849731445
    4. '_input' → logprob: -19.686967849731445
    5. 'Input' → logprob: -20.186967849731445
    6. ',input' → logprob: -20.186967849731445
    7. '[input' → logprob: -20.561967849731445
    8. '	input' → logprob: -21.561967849731445
    9. '<input' → logprob: -21.686967849731445
    10. '   ' → logprob: -22.436967849731445

Token 340: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: 0.0
    2. 'list' → logprob: -17.25
    3. '_lists' → logprob: -18.375
    4. '_' → logprob: -19.125
    5. 'List' → logprob: -20.25
    6. ' _' → logprob: -20.5
    7. '```' → logprob: -20.5
    8. '_data' → logprob: -21.375
    9. '_input' → logprob: -21.5
    10. '\' → logprob: -21.875

Token 341: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -14.875000953674316
    3. '_c' → logprob: -17.125
    4. '_b' → logprob: -17.25
    5. '_d' → logprob: -17.25
    6. '_' → logprob: -19.0
    7. '_list' → logprob: -20.125
    8. ' _' → logprob: -20.25
    9. '_x' → logprob: -21.125
    10. '```' → logprob: -21.625

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001762286527082324
    2. ',input' → logprob: -6.376762390136719
    3. ' ,' → logprob: -9.751762390136719
    4. 'input' → logprob: -13.876762390136719
    5. ',
' → logprob: -14.126762390136719
    6. '_,' → logprob: -16.37676239013672
    7. '<|end|>' → logprob: -16.87676239013672
    8. ',user' → logprob: -17.12676239013672
    9. '[input' → logprob: -17.25176239013672
    10. ' input' → logprob: -17.50176239013672

Token 343: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868713080883026
    2. 'input' → logprob: -1.136871337890625
    3. '_input' → logprob: -15.886871337890625
    4. '=input' → logprob: -17.136871337890625
    5. ',input' → logprob: -17.386871337890625
    6. 'Input' → logprob: -17.386871337890625
    7. '(input' → logprob: -17.511871337890625
    8. '[input' → logprob: -17.511871337890625
    9. '<input' → logprob: -17.886871337890625
    10. '.input' → logprob: -19.011871337890625

Token 344: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. 'list' → logprob: -14.500000953674316
    3. '_b' → logprob: -15.750000953674316
    4. '_' → logprob: -16.875
    5. 'B' → logprob: -19.0
    6. 'List' → logprob: -19.5
    7. 'b' → logprob: -20.0
    8. '_lists' → logprob: -20.125
    9. '4' → logprob: -20.25
    10. 'input' → logprob: -20.375

Token 345: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.011350424028933048
    2. '_d' → logprob: -4.511350631713867
    3. '_c' → logprob: -8.136350631713867
    4. '_list' → logprob: -11.886350631713867
    5. '_B' → logprob: -13.761350631713867
    6. '```' → logprob: -14.511350631713867
    7. '_a' → logprob: -14.761350631713867
    8. 'd' → logprob: -15.136350631713867
    9. 'B' → logprob: -15.386350631713867
    10. 'b' → logprob: -15.886350631713867

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015193840954452753
    2. ',input' → logprob: -6.501519203186035
    3. ',
' → logprob: -11.751519203186035
    4. ' ,' → logprob: -12.501519203186035
    5. 'input' → logprob: -12.626519203186035
    6. '[input' → logprob: -14.501519203186035
    7. '   ' → logprob: -14.751519203186035
    8. '`,' → logprob: -15.001519203186035
    9. ',\
' → logprob: -15.126519203186035
    10. ' input' → logprob: -15.251519203186035

Token 347: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868710398674011
    2. 'input' → logprob: -1.136871099472046
    3. '_input' → logprob: -18.136871337890625
    4. '(input' → logprob: -18.261871337890625
    5. '=input' → logprob: -18.886871337890625
    6. ',input' → logprob: -19.011871337890625
    7. '[input' → logprob: -19.261871337890625
    8. 'Input' → logprob: -19.511871337890625
    9. '<input' → logprob: -19.761871337890625
    10. '.input' → logprob: -20.261871337890625

Token 348: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.5
    3. 'list' → logprob: -17.0
    4. '```' → logprob: -17.125
    5. 'List' → logprob: -18.375
    6. '_l' → logprob: -18.75
    7. ' _' → logprob: -18.875
    8. '[' → logprob: -19.5
    9. '_lists' → logprob: -19.625
    10. '_d' → logprob: -19.875

Token 349: '_c' (ID: 1303)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.03805262967944145
    2. '_c' → logprob: -3.288052558898926
    3. 'd' → logprob: -11.538052558898926
    4. 'c' → logprob: -14.538052558898926
    5. '```' → logprob: -15.038052558898926
    6. '_list' → logprob: -15.413052558898926
    7. 'C' → logprob: -15.788052558898926
    8. '_' → logprob: -16.288053512573242
    9. 'D' → logprob: -16.663053512573242
    10. '_a' → logprob: -17.663053512573242

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027274148538708687
    2. ',input' → logprob: -3.7772741317749023
    3. 'input' → logprob: -5.527274131774902
    4. ' ,' → logprob: -10.527274131774902
    5. ' input' → logprob: -11.152274131774902
    6. '[input' → logprob: -14.027274131774902
    7. '_input' → logprob: -14.402274131774902
    8. '_,' → logprob: -14.402274131774902
    9. '   ' → logprob: -15.402274131774902
    10. '(input' → logprob: -15.777274131774902

Token 351: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47407716512680054
    2. 'input' → logprob: -0.9740771651268005
    3. '_input' → logprob: -16.224077224731445
    4. 'Input' → logprob: -18.224077224731445
    5. '(input' → logprob: -18.474077224731445
    6. '=input' → logprob: -18.849077224731445
    7. ',input' → logprob: -19.349077224731445
    8. '[input' → logprob: -19.474077224731445
    9. '	input' → logprob: -19.724077224731445
    10. '.input' → logprob: -19.849077224731445

Token 352: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. 'list' → logprob: -15.625
    3. '_d' → logprob: -18.125
    4. '_' → logprob: -18.625
    5. 'List' → logprob: -18.875
    6. '_l' → logprob: -19.5
    7. 'd' → logprob: -20.625
    8. ' _' → logprob: -21.125
    9. '_lists' → logprob: -21.125
    10. '```' → logprob: -21.625

Token 353: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.5928495486150496e-05
    2. 'd' → logprob: -11.250016212463379
    3. '_' → logprob: -13.500016212463379
    4. '```' → logprob: -14.000016212463379
    5. 'D' → logprob: -15.250016212463379
    6. '_list' → logprob: -15.875016212463379
    7. '[' → logprob: -16.125015258789062
    8. '_c' → logprob: -16.875015258789062
    9. '_a' → logprob: -17.000015258789062
    10. '_D' → logprob: -18.250015258789062

Token 354: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5384662747383118
    2. '<|end|>' → logprob: -1.413466215133667
    3. '
' → logprob: -2.413466215133667
    4. 'if' → logprob: -3.163466215133667
    5. '```' → logprob: -3.288466215133667
    6. '  
' → logprob: -6.663466453552246
    7. '#' → logprob: -7.163466453552246
    8. '    
' → logprob: -7.913466453552246
    9. 'total' → logprob: -7.913466453552246
    10. '<|end|>' → logprob: -7.913466453552246

Token 355: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5759488344192505
    2. 'def' → logprob: -0.8259488344192505
    3. '```' → logprob: -12.075948715209961
    4. 'for' → logprob: -12.700948715209961
    5. ' if' → logprob: -15.075948715209961
    6. '#' → logprob: -16.20094871520996
    7. 'total' → logprob: -16.20094871520996
    8. 'result' → logprob: -16.32594871520996
    9. 'import' → logprob: -17.45094871520996
    10. '
' → logprob: -17.57594871520996

Token 356: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0003598952607717365
    2. 'main' → logprob: -8.000359535217285
    3. ' run' → logprob: -10.625359535217285
    4. ' process' → logprob: -16.5003604888916
    5. '_main' → logprob: -17.0003604888916
    6. 'def' → logprob: -17.6253604888916
    7. 'run' → logprob: -17.6253604888916
    8. ' print' → logprob: -18.2503604888916
    9. '__' → logprob: -18.3753604888916
    10. ' def' → logprob: -18.3753604888916

Token 357: '_entry' (ID: 20857)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -5.438573680294212e-06
    2. '():
' → logprob: -12.625005722045898
    3. ' ():' → logprob: -13.250005722045898
    4. '()' → logprob: -15.625005722045898
    5. '_' → logprob: -16.5000057220459
    6. '():
' → logprob: -16.8750057220459
    7. '(' → logprob: -17.1250057220459
    8. '()>' → logprob: -18.5000057220459
    9. '():

' → logprob: -19.1250057220459
    10. ':' → logprob: -19.2500057220459

Token 358: '_point' (ID: 15466)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -5.6100132496794686e-05
    2. '_' → logprob: -11.125056266784668
    3. '()' → logprob: -11.125056266784668
    4. ' ():' → logprob: -11.250056266784668
    5. '():
' → logprob: -11.375056266784668
    6. '(' → logprob: -13.875056266784668
    7. '():
' → logprob: -14.125056266784668
    8. '_:' → logprob: -15.500056266784668
    9. '():

' → logprob: -16.87505531311035
    10. '(":' → logprob: -18.00005531311035

Token 359: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.5776860184123507e-06
    2. ' ():' → logprob: -13.00000286102295
    3. '():
' → logprob: -15.50000286102295
    4. '()' → logprob: -17.375001907348633
    5. '(' → logprob: -19.000001907348633
    6. '():
' → logprob: -19.875001907348633
    7. '(":' → logprob: -21.375001907348633
    8. '()>' → logprob: -21.625001907348633
    9. '():

' → logprob: -21.625001907348633
    10. ':' → logprob: -21.750001907348633

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036775132175534964
    2. 'total' → logprob: -5.6286773681640625
    3. ' total' → logprob: -9.878677368164062
    4. 'num' → logprob: -11.003677368164062
    5. '	total' → logprob: -12.253677368164062
    6. '(total' → logprob: -13.003677368164062
    7. '```' → logprob: -14.128677368164062
    8. '
' → logprob: -14.503677368164062
    9. ',total' → logprob: -15.128677368164062
    10. '    
' → logprob: -15.253677368164062

Token 361: ' num' (ID: 2269)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.25272881984710693
    2. ' total' → logprob: -1.502728819847107
    3. '   ' → logprob: -7.5027289390563965
    4. 'num' (adapté à ' num') → logprob: -8.627728462219238
    5. ' num' → logprob: -9.627728462219238
    6. 'cases' → logprob: -14.377728462219238
    7. '    
' → logprob: -14.627728462219238
    8. '	total' → logprob: -15.002728462219238
    9. '(total' → logprob: -15.002728462219238
    10. '
' → logprob: -15.127728462219238

Token 362: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.003620743053033948
    2. '_' → logprob: -5.628620624542236
    3. '=_' → logprob: -12.128621101379395
    4. ' _' → logprob: -12.378621101379395
    5. 'ber' → logprob: -13.253621101379395
    6. '_case' → logprob: -13.253621101379395
    7. '_c' → logprob: -13.628621101379395
    8. '_codes' → logprob: -14.378621101379395
    9. '_classes' → logprob: -14.628621101379395
    10. '_ca' → logprob: -14.753621101379395

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002385045401751995
    2. ' =' → logprob: -6.377385139465332
    3. ' ,' → logprob: -7.627385139465332
    4. '=' → logprob: -8.877385139465332
    5. '   ' → logprob: -10.502385139465332
    6. ',num' → logprob: -10.752385139465332
    7. ',total' → logprob: -13.002385139465332
    8. '    ' → logprob: -14.002385139465332
    9. '  ' → logprob: -14.502385139465332
    10. '‌,' → logprob: -14.752385139465332

Token 364: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.560555636882782
    2. 'list' → logprob: -1.0605556964874268
    3. ' input' → logprob: -3.6855556964874268
    4. 'a' → logprob: -3.6855556964874268
    5. ' a' → logprob: -4.185555458068848
    6. 'input' → logprob: -5.185555458068848
    7. ' lst' → logprob: -5.435555458068848
    8. 'lst' → logprob: -5.810555458068848
    9. ' lista' → logprob: -6.685555458068848
    10. ' la' → logprob: -6.810555458068848

Token 365: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0004390134708955884
    2. '_' → logprob: -7.750439167022705
    3. ' _' → logprob: -13.875438690185547
    4. 'a' → logprob: -13.875438690185547
    5. '_d' → logprob: -14.125438690185547
    6. '_b' → logprob: -14.375438690185547
    7. '_x' → logprob: -14.375438690185547
    8. '_c' → logprob: -14.750438690185547
    9. '=_' → logprob: -14.875438690185547
    10. '_s' → logprob: -15.125438690185547

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.643152740551159e-05
    2. ',list' → logprob: -10.750036239624023
    3. ' ,' → logprob: -11.125036239624023
    4. '<|end|>' → logprob: -16.750036239624023
    5. ',List' → logprob: -16.875036239624023
    6. '=' → logprob: -17.250036239624023
    7. ',\
' → logprob: -18.125036239624023
    8. '   ' → logprob: -18.500036239624023
    9. 'list' → logprob: -18.625036239624023
    10. '‌,' → logprob: -18.750036239624023

Token 367: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6931471824645996
    2. 'list' → logprob: -0.6931471824645996
    3. '_list' → logprob: -17.193147659301758
    4. 'List' → logprob: -17.818147659301758
    5. '<|end|>' → logprob: -18.068147659301758
    6. '=list' → logprob: -18.193147659301758
    7. '	list' → logprob: -18.693147659301758
    8. '$list' → logprob: -19.193147659301758
    9. '.list' → logprob: -19.693147659301758
    10. ',list' → logprob: -20.068147659301758

Token 368: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.869017852295656e-06
    2. '_a' → logprob: -12.750006675720215
    3. '_,' → logprob: -13.375006675720215
    4. ',' → logprob: -13.500006675720215
    5. 'b' → logprob: -14.500006675720215
    6. '   ' → logprob: -15.750006675720215
    7. '_' → logprob: -16.00000762939453
    8. '_c' → logprob: -16.62500762939453
    9. ' _' → logprob: -17.37500762939453
    10. ',_' → logprob: -17.62500762939453

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ',list' → logprob: -12.875003814697266
    3. ' ,' → logprob: -13.750003814697266
    4. ',
' → logprob: -18.750003814697266
    5. 'list' → logprob: -19.250003814697266
    6. ',\
' → logprob: -19.750003814697266
    7. '=' → logprob: -20.125003814697266
    8. '<|end|>' → logprob: -20.125003814697266
    9. 'import' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.250003814697266

Token 370: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12692810595035553
    2. ' list' → logprob: -2.1269280910491943
    3. 'List' → logprob: -19.751928329467773
    4. '=list' → logprob: -19.876928329467773
    5. '_list' → logprob: -20.126928329467773
    6. '	list' → logprob: -20.251928329467773
    7. '$list' → logprob: -20.751928329467773
    8. '.list' → logprob: -21.501928329467773
    9. ',list' → logprob: -21.626928329467773
    10. ':list' → logprob: -22.001928329467773

Token 371: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033512013033032417
    2. '_c' → logprob: -6.128351211547852
    3. '_,' → logprob: -7.003351211547852
    4. '_a' → logprob: -9.003351211547852
    5. '_' → logprob: -9.878351211547852
    6. ',list' → logprob: -10.628351211547852
    7. ' ,' → logprob: -11.003351211547852
    8. ',_' → logprob: -11.253351211547852
    9. '_list' → logprob: -11.378351211547852
    10. 'c' → logprob: -12.003351211547852

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. ',list' → logprob: -14.375000953674316
    3. ' ,' → logprob: -15.000000953674316
    4. ',
' → logprob: -19.250001907348633
    5. '_,' → logprob: -20.000001907348633
    6. ',\
' → logprob: -20.500001907348633
    7. 'list' → logprob: -20.625001907348633
    8. '=' → logprob: -20.875001907348633
    9. '‌,' → logprob: -21.625001907348633
    10. ',List' → logprob: -22.125001907348633

Token 373: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.011047814972698689
    2. 'list' → logprob: -4.511047840118408
    3. '=list' → logprob: -19.13604736328125
    4. '	list' → logprob: -19.26104736328125
    5. ',list' → logprob: -19.88604736328125
    6. 'List' → logprob: -20.26104736328125
    7. '(list' → logprob: -20.38604736328125
    8. '$list' → logprob: -20.88604736328125
    9. '_list' → logprob: -21.13604736328125
    10. '   ' → logprob: -21.13604736328125

Token 374: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.001079133595339954
    2. '_c' → logprob: -6.876079082489014
    3. '_,' → logprob: -10.626079559326172
    4. '_a' → logprob: -11.376079559326172
    5. '_' → logprob: -12.251079559326172
    6. ',' → logprob: -13.001079559326172
    7. 'd' → logprob: -13.251079559326172
    8. ',_' → logprob: -13.626079559326172
    9. '_b' → logprob: -15.376079559326172
    10. ',d' → logprob: -15.626079559326172

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ',' → logprob: -15.82641315460205
    4. ' =
' → logprob: -17.201414108276367
    5. '   ' → logprob: -17.451414108276367
    6. '＝' → logprob: -17.576414108276367
    7. ' =
' → logprob: -18.451414108276367
    8. '=create' → logprob: -18.451414108276367
    9. ' =)' → logprob: -18.701414108276367
    10. '=input' → logprob: -18.826414108276367

Token 376: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.575939416885376
    2. ' read' → logprob: -0.825939416885376
    3. '	read' → logprob: -18.200939178466797
    4. '_read' → logprob: -20.825939178466797
    5. '(read' → logprob: -21.450939178466797
    6. '.read' → logprob: -22.825939178466797
    7. 'Read' → logprob: -24.325939178466797
    8. '   ' → logprob: -25.075939178466797
    9. ' reads' → logprob: -25.575939178466797
    10. 'reading' → logprob: -25.825939178466797

Token 377: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.4259644558478612e-05
    2. '_' → logprob: -11.500014305114746
    3. 'input' → logprob: -13.500014305114746
    4. '_inputs' → logprob: -13.625014305114746
    5. '_in' → logprob: -14.000014305114746
    6. '```' → logprob: -16.00001335144043
    7. '_data' → logprob: -16.12501335144043
    8. '_Input' → logprob: -16.12501335144043
    9. '(input' → logprob: -16.25001335144043
    10. ')_' → logprob: -16.75001335144043

Token 378: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.0280383548888494e-06
    2. 'data' → logprob: -14.500000953674316
    3. '_' → logprob: -14.625000953674316
    4. '_dat' → logprob: -18.000001907348633
    5. '_input' → logprob: -18.125001907348633
    6. ' data' → logprob: -18.500001907348633
    7. '_d' → logprob: -18.625001907348633
    8. '```' → logprob: -18.750001907348633
    9. ' _' → logprob: -19.125001907348633
    10. '_Data' → logprob: -19.250001907348633

Token 379: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008628524839878082
    2. '
' → logprob: -5.8836283683776855
    3. 'results' → logprob: -5.8836283683776855
    4. '    
' → logprob: -6.2586283683776855
    5. ' results' → logprob: -7.3836283683776855
    6. '<|end|>' → logprob: -8.883628845214844
    7. '_results' → logprob: -9.008628845214844
    8. '	results' → logprob: -9.008628845214844
    9. '(results' → logprob: -10.633628845214844
    10. 'Results' → logprob: -11.008628845214844

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07543313503265381
    2. 'results' → logprob: -2.8254332542419434
    3. ' results' → logprob: -4.325433254241943
    4. '	results' → logprob: -9.325432777404785
    5. '_results' → logprob: -10.950432777404785
    6. 'result' → logprob: -11.075432777404785
    7. '    
' → logprob: -11.075432777404785
    8. '```' → logprob: -12.200432777404785
    9. '
' → logprob: -14.075432777404785
    10. 'Results' → logprob: -14.200432777404785

Token 381: ' outcome' (ID: 24192)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5761319994926453
    2. ' results' → logprob: -0.8261319994926453
    3. '   ' → logprob: -8.951131820678711
    4. 'result' → logprob: -10.201131820678711
    5. ' result' → logprob: -11.576131820678711
    6. '	results' → logprob: -11.576131820678711
    7. 'outputs' → logprob: -12.951131820678711
    8. 'answers' → logprob: -13.326131820678711
    9. '_results' → logprob: -14.451131820678711
    10. ' answers' → logprob: -14.451131820678711

Token 382: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00024406595912296325
    2. '_list' → logprob: -8.500244140625
    3. '_s' → logprob: -11.125244140625
    4. '_results' → logprob: -11.250244140625
    5. ' =' → logprob: -12.125244140625
    6. 'results' → logprob: -12.500244140625
    7. '=' → logprob: -12.625244140625
    8. 'list' → logprob: -16.375244140625
    9. '=s' → logprob: -16.625244140625
    10. ' s' → logprob: -17.250244140625

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. 's' → logprob: -15.600207328796387
    4. '_' → logprob: -15.975207328796387
    5. ' ' → logprob: -16.72520637512207
    6. ',' → logprob: -16.85020637512207
    7. ' =
' → logprob: -16.85020637512207
    8. '_=' → logprob: -17.47520637512207
    9. '  ' → logprob: -17.60020637512207
    10. '=create' → logprob: -17.72520637512207

Token 384: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.3132616877555847
    2. ' process' → logprob: -1.3132617473602295
    3. '(process' → logprob: -17.188261032104492
    4. '	process' → logprob: -18.188261032104492
    5. ' proces' → logprob: -18.938261032104492
    6. '.process' → logprob: -19.813261032104492
    7. 'proces' → logprob: -20.563261032104492
    8. '_process' → logprob: -20.938261032104492
    9. 'Process' → logprob: -22.938261032104492
    10. '/process' → logprob: -22.938261032104492

Token 385: '_test' (ID: 9969)
  Prédit: '_test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_test' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -11.750009536743164
    3. 'test' → logprob: -14.125009536743164
    4. '_case' → logprob: -14.500009536743164
    5. '_tests' → logprob: -16.000009536743164
    6. '_cases' → logprob: -16.125009536743164
    7. '```' → logprob: -16.125009536743164
    8. ' _' → logprob: -16.375009536743164
    9. '_results' → logprob: -16.500009536743164
    10. '_result' → logprob: -17.000009536743164

Token 386: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -1.0921942703134846e-05
    2. '_' → logprob: -11.75001049041748
    3. '_results' → logprob: -13.12501049041748
    4. '_case' → logprob: -14.75001049041748
    5. '_list' → logprob: -15.75001049041748
    6. 's' → logprob: -15.75001049041748
    7. '_entries' → logprob: -16.875011444091797
    8. 'cases' → logprob: -17.125011444091797
    9. '_codes' → logprob: -17.250011444091797
    10. ' _' → logprob: -17.250011444091797

Token 387: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0008691829279996455
    2. '(' → logprob: -7.250869274139404
    3. '(
' → logprob: -8.750868797302246
    4. ' (' → logprob: -14.750868797302246
    5. '<num' → logprob: -16.125869750976562
    6. '(

' → logprob: -16.250869750976562
    7. ',num' → logprob: -16.500869750976562
    8. '(
' → logprob: -16.625869750976562
    9. 'num' → logprob: -17.375869750976562
    10. ' num' → logprob: -17.500869750976562

Token 388: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.375
    3. 'cases' → logprob: -16.375
    4. ',' → logprob: -16.75
    5. 's' → logprob: -17.25
    6. '```' → logprob: -18.0
    7. '_choices' → logprob: -18.0
    8. '_ca' → logprob: -18.625
    9. ',_' → logprob: -18.875
    10. '_case' → logprob: -18.875

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3226136767771095e-05
    2. ',list' → logprob: -10.125042915344238
    3. ' ,' → logprob: -12.750042915344238
    4. ',List' → logprob: -15.875042915344238
    5. ',
' → logprob: -17.125043869018555
    6. '(' → logprob: -17.250043869018555
    7. '   ' → logprob: -17.625043869018555
    8. ')' → logprob: -19.375043869018555
    9. '(list' → logprob: -19.875043869018555
    10. ',num' → logprob: -20.125043869018555

Token 390: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.575939416885376
    2. ' list' → logprob: -0.825939416885376
    3. 'List' → logprob: -19.700939178466797
    4. '_list' → logprob: -20.200939178466797
    5. '	list' → logprob: -21.325939178466797
    6. '.list' → logprob: -22.325939178466797
    7. '   ' → logprob: -22.325939178466797
    8. 'lists' → logprob: -22.950939178466797
    9. ' lists' → logprob: -22.950939178466797
    10. ':list' → logprob: -22.950939178466797

Token 391: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.1054253011243418e-05
    2. 'a' → logprob: -11.000020980834961
    3. '_list' → logprob: -13.125020980834961
    4. '_b' → logprob: -13.500020980834961
    5. '_' → logprob: -15.000020980834961
    6. ',' → logprob: -16.12502098083496
    7. '_c' → logprob: -16.25002098083496
    8. 'list' → logprob: -16.87502098083496
    9. 'A' → logprob: -17.00002098083496
    10. '_ai' → logprob: -17.00002098083496

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.134509021649137e-05
    2. ',list' → logprob: -9.87506103515625
    3. ' ,' → logprob: -11.62506103515625
    4. ',
' → logprob: -14.75006103515625
    5. ',List' → logprob: -14.75006103515625
    6. ',

' → logprob: -16.50006103515625
    7. ')' → logprob: -17.87506103515625
    8. '<|end|>' → logprob: -18.37506103515625
    9. '‌,' → logprob: -18.87506103515625
    10. ',\
' → logprob: -18.87506103515625

Token 393: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02324547804892063
    2. ' list' → logprob: -3.7732455730438232
    3. 'List' → logprob: -17.898244857788086
    4. '_list' → logprob: -19.398244857788086
    5. '	list' → logprob: -22.023244857788086
    6. '$list' → logprob: -22.398244857788086
    7. '.list' → logprob: -22.523244857788086
    8. 'lists' → logprob: -22.648244857788086
    9. ' ' → logprob: -22.898244857788086
    10. '   ' → logprob: -23.023244857788086

Token 394: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0008723941282369196
    2. 'b' → logprob: -7.500872611999512
    3. ',' → logprob: -8.375872611999512
    4. '_c' → logprob: -9.875872611999512
    5. '_,' → logprob: -10.375872611999512
    6. ',b' → logprob: -13.000872611999512
    7. 'list' → logprob: -13.250872611999512
    8. '_list' → logprob: -14.000872611999512
    9. ',list' → logprob: -14.250872611999512
    10. ',_' → logprob: -15.500872611999512

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014370749704539776
    2. ',list' → logprob: -9.375144004821777
    3. ' ,' → logprob: -9.750144004821777
    4. ',
' → logprob: -15.375144004821777
    5. ' list' → logprob: -16.12514305114746
    6. ',List' → logprob: -16.25014305114746
    7. 'list' → logprob: -16.62514305114746
    8. '=list' → logprob: -18.50014305114746
    9. ')' → logprob: -19.87514305114746
    10. '```' → logprob: -19.87514305114746

Token 396: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006715370807796717
    2. ' list' → logprob: -5.006715297698975
    3. 'List' → logprob: -20.381715774536133
    4. '_list' → logprob: -22.006715774536133
    5. '   ' → logprob: -23.631715774536133
    6. '	list' → logprob: -23.756715774536133
    7. ' ' → logprob: -24.381715774536133
    8. '.list' → logprob: -24.881715774536133
    9. '
' → logprob: -25.006715774536133
    10. '```' → logprob: -25.131715774536133

Token 397: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.4153549020411447e-05
    2. ',' → logprob: -11.25002384185791
    3. '_,' → logprob: -12.12502384185791
    4. '_d' → logprob: -12.75002384185791
    5. '_a' → logprob: -13.87502384185791
    6. 'c' → logprob: -13.87502384185791
    7. ',_' → logprob: -15.62502384185791
    8. '_list' → logprob: -15.75002384185791
    9. '_' → logprob: -15.87502384185791
    10. 'list' → logprob: -16.000024795532227

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018208740220870823
    2. ',list' → logprob: -8.625182151794434
    3. ' ,' → logprob: -13.125182151794434
    4. ',List' → logprob: -14.875182151794434
    5. ',
' → logprob: -16.125181198120117
    6. 'list' → logprob: -17.375181198120117
    7. '`,' → logprob: -18.250181198120117
    8. '',' → logprob: -18.250181198120117
    9. ')' → logprob: -18.750181198120117
    10. ',

' → logprob: -18.750181198120117

Token 399: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03804149478673935
    2. ' list' → logprob: -3.288041591644287
    3. 'List' → logprob: -18.788042068481445
    4. '_list' → logprob: -19.663042068481445
    5. '	list' → logprob: -22.163042068481445
    6. '.list' → logprob: -22.413042068481445
    7. '$list' → logprob: -22.538042068481445
    8. '   ' → logprob: -22.663042068481445
    9. ' List' → logprob: -23.788042068481445
    10. '(list' → logprob: -24.163042068481445

Token 400: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00024846551241353154
    2. 'd' → logprob: -8.500248908996582
    3. ',' → logprob: -10.250248908996582
    4. '_,' → logprob: -11.875248908996582
    5. ',d' → logprob: -13.875248908996582
    6. 'D' → logprob: -14.500248908996582
    7. ')' → logprob: -15.000248908996582
    8. 's' → logprob: -15.000248908996582
    9. ',_' → logprob: -15.625248908996582
    10. 'a' → logprob: -16.625247955322266

Token 401: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25209447741508484
    2. ')
' → logprob: -1.5020945072174072
    3. '   ' → logprob: -8.752094268798828
    4. ')
' → logprob: -12.127094268798828
    5. ' ' → logprob: -14.502094268798828
    6. ' )' → logprob: -14.627094268798828
    7. ' )
' → logprob: -14.877094268798828
    8. ')

' → logprob: -15.502094268798828
    9. '  ' → logprob: -16.752094268798828
    10. '
' → logprob: -17.002094268798828

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022577408701181412
    2. 'for' → logprob: -3.8975775241851807
    3. ' for' → logprob: -6.272577285766602
    4. '    
' → logprob: -9.397577285766602
    5. '
' → logprob: -10.397577285766602
    6. 'print' → logprob: -10.897577285766602
    7. '	for' → logprob: -11.772577285766602
    8. '```' → logprob: -12.772577285766602
    9. '<|end|>' → logprob: -13.022577285766602
    10. '  
' → logprob: -14.522577285766602

Token 403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0059415982104837894
    2. '   ' → logprob: -5.255941390991211
    3. ' for' → logprob: -7.255941390991211
    4. '
' → logprob: -13.630941390991211
    5. '    
' → logprob: -15.130941390991211
    6. '	for' → logprob: -16.50594139099121
    7. 'print' → logprob: -17.50594139099121
    8. '```' → logprob: -17.63094139099121
    9. 'import' → logprob: -20.13094139099121
    10. '
' → logprob: -20.38094139099121

Token 404: ' outcome' (ID: 24192)
  Prédit: ' outcome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outcome' → logprob: -0.038560181856155396
    2. 'out' → logprob: -3.288560152053833
    3. ' result' → logprob: -7.913560390472412
    4. 'result' → logprob: -8.913559913635254
    5. ' out' → logprob: -11.538559913635254
    6. ' answer' → logprob: -12.413559913635254
    7. ' output' → logprob: -13.288559913635254
    8. 'output' → logprob: -13.538559913635254
    9. 'answer' → logprob: -14.288559913635254
    10. ' ' → logprob: -15.913559913635254

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015026743523776531
    2. 'in' → logprob: -4.640026569366455
    3. ' ' → logprob: -5.515026569366455
    4. '_' → logprob: -7.140026569366455
    5. '  ' → logprob: -8.640027046203613
    6. '	in' → logprob: -9.140027046203613
    7. '_in' → logprob: -9.890027046203613
    8. ',' → logprob: -10.265027046203613
    9. ' i' → logprob: -10.765027046203613
    10. '<|end|>' → logprob: -11.265027046203613

Token 406: ' outcome' (ID: 24192)
  Prédit: ' outcome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outcome' → logprob: -0.20141959190368652
    2. 'out' → logprob: -1.7014195919036865
    3. ' outcomes' → logprob: -12.826419830322266
    4. ' out' → logprob: -13.451419830322266
    5. '(out' → logprob: -13.576419830322266
    6. 'Outcome' → logprob: -15.076419830322266
    7. '[out' → logprob: -15.451419830322266
    8. '_out' → logprob: -15.576419830322266
    9. ' ' → logprob: -16.826419830322266
    10. ',out' → logprob: -17.201419830322266

Token 407: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001083778915926814
    2. '_' → logprob: -6.876083850860596
    3. '_
' → logprob: -10.876083374023438
    4. 's' → logprob: -11.376083374023438
    5. '_out' → logprob: -11.626083374023438
    6. ' _' → logprob: -12.251083374023438
    7. 'List' → logprob: -13.376083374023438
    8. '_:' → logprob: -13.876083374023438
    9. '_List' → logprob: -14.126083374023438
    10. '_lst' → logprob: -14.251083374023438

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005986624397337437
    2. ':
' → logprob: -5.13098669052124
    3. '   ' → logprob: -10.130986213684082
    4. '       ' → logprob: -12.130986213684082
    5. '():' → logprob: -13.005986213684082
    6. '):' → logprob: -13.130986213684082
    7. '():
' → logprob: -13.130986213684082
    8. '<|end|>' → logprob: -13.255986213684082
    9. '):
' → logprob: -14.380986213684082
    10. ':

' → logprob: -14.380986213684082

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011125932214781642
    2. 'print' → logprob: -7.251112461090088
    3. ' print' → logprob: -8.251112937927246
    4. '   ' → logprob: -10.001112937927246
    5. '<|end|>' → logprob: -10.126112937927246
    6. '        
' → logprob: -10.626112937927246
    7. '
' → logprob: -11.376112937927246
    8. '```' → logprob: -11.626112937927246
    9. '    
' → logprob: -13.001112937927246
    10. '      ' → logprob: -13.751112937927246

Token 410: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004311460361350328
    2. ' print' → logprob: -7.750431060791016
    3. '   ' → logprob: -14.750431060791016
    4. '       ' → logprob: -16.750431060791016
    5. '```' → logprob: -21.125431060791016
    6. '	print' → logprob: -21.625431060791016
    7. '
' → logprob: -24.625431060791016
    8. '``' → logprob: -25.625431060791016
    9. '_print' → logprob: -25.750431060791016
    10. '           ' → logprob: -25.750431060791016

Token 411: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.00011224505578866228
    2. '(' → logprob: -9.125112533569336
    3. 'out' → logprob: -13.250112533569336
    4. '('' → logprob: -14.250112533569336
    5. '()' → logprob: -14.500112533569336
    6. '(
' → logprob: -15.250112533569336
    7. '[out' → logprob: -17.250112533569336
    8. '(

' → logprob: -17.250112533569336
    9. '*out' → logprob: -18.000112533569336
    10. '(output' → logprob: -18.125112533569336

Token 412: 'come' (ID: 2512)
  Prédit: 'come'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'come' → logprob: -0.00036894375807605684
    2. 'ome' → logprob: -8.75036907196045
    3. 'com' → logprob: -9.25036907196045
    4. '   ' → logprob: -9.87536907196045
    5. ')' → logprob: -10.87536907196045
    6. 'ot' → logprob: -11.25036907196045
    7. '```' → logprob: -12.00036907196045
    8. ' come' → logprob: -12.25036907196045
    9. 'comes' → logprob: -12.62536907196045
    10. 'oc' → logprob: -12.75036907196045

Token 413: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.00000286102295
    3. ')`' → logprob: -15.75000286102295
    4. ' )' → logprob: -16.250001907348633
    5. '')' → logprob: -16.500001907348633
    6. '()' → logprob: -16.875001907348633
    7. '())' → logprob: -17.375001907348633
    8. '`)' → logprob: -17.625001907348633
    9. '))' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.500001907348633

Token 414: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.771655115589965e-05
    2. 'i' → logprob: -11.125018119812012
    3. ' if' → logprob: -13.125018119812012
    4. '#' → logprob: -14.500018119812012
    5. '```' → logprob: -15.125018119812012
    6. '
' → logprob: -16.375017166137695
    7. 'main' → logprob: -16.750017166137695
    8. '    
' → logprob: -19.000017166137695
    9. '#if' → logprob: -19.250017166137695
    10. '_' → logprob: -19.375017166137695

Token 415: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6333149671554565
    2. ' __' → logprob: -0.7583149671554565
    3. '_' → logprob: -7.633315086364746
    4. '_name' → logprob: -8.883315086364746
    5. ' ' → logprob: -10.133315086364746
    6. 'name' → logprob: -10.633315086364746
    7. '___' → logprob: -11.258315086364746
    8. ' ' → logprob: -12.008315086364746
    9. ' _' → logprob: -13.008315086364746
    10. ' ' → logprob: -13.383315086364746

Token 416: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3083752691745758
    2. ' ==' → logprob: -1.4333752393722534
    3. ' __' → logprob: -4.058375358581543
    4. '==' → logprob: -4.933375358581543
    5. '.__' → logprob: -7.058375358581543
    6. '[' → logprob: -7.433375358581543
    7. '=="' → logprob: -8.933375358581543
    8. '_' → logprob: -9.058375358581543
    9. '__.__' → logprob: -9.183375358581543
    10. '=='' → logprob: -9.308375358581543

Token 417: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.623244553338736e-05
    2. '==' → logprob: -9.875065803527832
    3. ' ==' → logprob: -12.250065803527832
    4. '___' → logprob: -12.500065803527832
    5. '__.__' → logprob: -12.500065803527832
    6. '=="' → logprob: -13.625065803527832
    7. '____' → logprob: -14.375065803527832
    8. '_' → logprob: -15.500065803527832
    9. ' __' → logprob: -16.00006675720215
    10. '__.' → logprob: -16.37506675720215

Token 418: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001895935565698892
    2. '==' → logprob: -9.000189781188965
    3. '=="' → logprob: -10.250189781188965
    4. ' ==' → logprob: -11.000189781188965
    5. '___' → logprob: -11.750189781188965
    6. '__.__' → logprob: -12.625189781188965
    7. '____' → logprob: -13.750189781188965
    8. '__["' → logprob: -14.750189781188965
    9. '__("' → logprob: -15.500189781188965
    10. '=='' → logprob: -15.625189781188965

Token 419: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005313446745276451
    2. ''' → logprob: -5.255313396453857
    3. ' "__' → logprob: -9.505313873291016
    4. '__' → logprob: -12.255313873291016
    5. ' '__' → logprob: -14.880313873291016
    6. '"user' → logprob: -17.630313873291016
    7. '"_' → logprob: -17.755313873291016
    8. '"name' → logprob: -18.255313873291016
    9. ''"' → logprob: -18.255313873291016
    10. '"'' → logprob: -18.380313873291016

Token 420: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.65707261255011e-06
    2. 'name' → logprob: -11.750008583068848
    3. '__' → logprob: -14.625008583068848
    4. '_main' → logprob: -15.125008583068848
    5. 'ma' → logprob: -16.875009536743164
    6. 'm' → logprob: -17.250009536743164
    7. ' main' → logprob: -18.875009536743164
    8. '```' → logprob: -18.875009536743164
    9. '-main' → logprob: -20.500009536743164
    10. 'built' → logprob: -21.000009536743164

Token 421: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.10076738893985748
    2. '__' → logprob: -2.3507673740386963
    3. '':' → logprob: -7.850767612457275
    4. '__:' → logprob: -9.475767135620117
    5. '_' → logprob: -9.600767135620117
    6. ''' → logprob: -11.475767135620117
    7. '__":
' → logprob: -11.975767135620117
    8. ':' → logprob: -12.100767135620117
    9. '':
' → logprob: -13.225767135620117
    10. '_'' → logprob: -13.850767135620117

Token 422: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.23909629881381989
    2. 'main' → logprob: -1.6140962839126587
    3. '   ' → logprob: -4.614096164703369
    4. '_main' → logprob: -6.489096164703369
    5. '	main' → logprob: -6.489096164703369
    6. '__' → logprob: -8.239096641540527
    7. ' __' → logprob: -8.989096641540527
    8. '    
' → logprob: -9.114096641540527
    9. ' 
' → logprob: -10.239096641540527
    10. '(main' → logprob: -10.364096641540527

Token 423: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0011703446507453918
    2. ' main' → logprob: -6.7511701583862305
    3. '	main' → logprob: -16.751171112060547
    4. '   ' → logprob: -17.626171112060547
    5. '_main' → logprob: -19.001171112060547
    6. '.main' → logprob: -20.251171112060547
    7. '(main' → logprob: -21.626171112060547
    8. 'Main' → logprob: -21.626171112060547
    9. 'maine' → logprob: -22.876171112060547
    10. ' ' → logprob: -23.376171112060547

Token 424: '_entry' (ID: 20857)
  Prédit: '_entry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_entry' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.12501049041748
    3. '()' → logprob: -13.00001049041748
    4. '__' → logprob: -14.00001049041748
    5. '_enter' → logprob: -14.37501049041748
    6. '_ent' → logprob: -14.50001049041748
    7. '_en' → logprob: -15.50001049041748
    8. 'entry' → logprob: -16.625009536743164
    9. '_entity' → logprob: -16.875009536743164
    10. '_ENTRY' → logprob: -16.875009536743164

Token 425: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0016873201820999384
    2. '_' → logprob: -7.126687526702881
    3. 't' → logprob: -7.501687526702881
    4. '_entry' → logprob: -9.126687049865723
    5. 'try' → logprob: -9.501687049865723
    6. '__' → logprob: -10.626687049865723
    7. 'point' → logprob: -10.751687049865723
    8. 'r' → logprob: -10.751687049865723
    9. ' _' → logprob: -11.251687049865723
    10. '_p' → logprob: -11.376687049865723

Token 426: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 424
Tokens correctement prédits (1ère position, stricte): 219
Tokens correctement prédits (1ère position, avec adaptation): 235
Tokens correctement prédits (top 10): 372
Précision stricte (1ère position): 51.65%
Précision adaptée (1ère position): 55.42%
Précision (top 10): 87.74%
================================================================================
