================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input = sys.stdin.readline

def read_values():
    return map(int, input().split())

def read_list():
    return list(read_values())

def func(N, mod):
    F = [1]
    for i in range(1, N + 1):
        F.append(F[-1] * i % mod)
    return F

INV = {}

def inv(a, mod):
    if a in INV:
        return INV[a]
    r = pow(a, mod - 2, mod)
    INV[a] = r
    return r

def C(F, a, b, mod):
    return F[a] * inv(F[b], mod) * inv(F[a - b], mod) % mod

def main():
    N = int(input())
    F = [0] * N
    for i in range(N):
        P = int(input()) - 1
        F[P] = i

    res = 0
    tmp = 0
    pre = -1
    for f in F:
        if pre < f:
            tmp += 1
        else:
            res = max(res, tmp)
            tmp = 1
        pre = f
    res = max(res, tmp)
    print(N - res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036376076750457287
    2. '.' → logprob: -5.753637790679932
    3. '(
' → logprob: -9.003637313842773
    4. ' (' → logprob: -9.503637313842773
    5. '()' → logprob: -9.503637313842773
    6. ')' → logprob: -10.003637313842773
    7. '_' → logprob: -10.253637313842773
    8. '('' → logprob: -11.253637313842773
    9. ''' → logprob: -11.378637313842773
    10. '[' → logprob: -11.378637313842773

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10476001352071762
    2. 'sys' → logprob: -2.354759931564331
    3. ' input' → logprob: -5.97976016998291
    4. 'input' → logprob: -6.22976016998291
    5. ' ' → logprob: -10.97976016998291
    6. '(sys' → logprob: -11.22976016998291
    7. '	sys' → logprob: -12.10476016998291
    8. '=sys' → logprob: -12.10476016998291
    9. ' system' → logprob: -14.47976016998291
    10. '```' → logprob: -14.85476016998291

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.125210297293961e-05
    2. ' .' → logprob: -10.000081062316895
    3. '.readline' → logprob: -11.625081062316895
    4. '.`' → logprob: -12.000081062316895
    5. '.stdin' → logprob: -12.125081062316895
    6. '.import' → logprob: -12.625081062316895
    7. '.input' → logprob: -13.250081062316895
    8. '.")' → logprob: -13.500081062316895
    9. '."""' → logprob: -13.625081062316895
    10. '[' → logprob: -13.875081062316895

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010519839823246002
    2. '.readline' → logprob: -4.635519981384277
    3. '.read' → logprob: -7.260519981384277
    4. '[' → logprob: -11.010519981384277
    5. ' .' → logprob: -11.885519981384277
    6. '.
' → logprob: -12.135519981384277
    7. '.Read' → logprob: -12.510519981384277
    8. '```' → logprob: -12.510519981384277
    9. 'read' → logprob: -12.760519981384277
    10. '.

' → logprob: -12.760519981384277

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09297340363264084
    2. '(' → logprob: -2.467973470687866
    3. '()
' → logprob: -6.717973232269287
    4. '(
' → logprob: -6.717973232269287
    5. '().' → logprob: -7.467973232269287
    6. '
' → logprob: -8.592973709106445
    7. '()\' → logprob: -8.592973709106445
    8. '()

' → logprob: -8.717973709106445
    9. '\n' → logprob: -8.967973709106445
    10. '\' → logprob: -9.217973709106445

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04983524605631828
    2. '(' → logprob: -3.049835205078125
    3. '().' → logprob: -6.799835205078125
    4. '()
' → logprob: -9.924835205078125
    5. '()

' → logprob: -11.049835205078125
    6. '()\' → logprob: -11.049835205078125
    7. 'def' → logprob: -12.049835205078125
    8. '(
' → logprob: -12.049835205078125
    9. '()`' → logprob: -12.174835205078125
    10. '#' → logprob: -12.174835205078125

Token 10: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02680191583931446
    2. ' space' → logprob: -4.151802062988281
    3. ' main' → logprob: -5.651802062988281
    4. ' my' → logprob: -6.401802062988281
    5. ' calculate' → logprob: -6.651802062988281
    6. '_' → logprob: -7.026802062988281
    7. ' process' → logprob: -7.401802062988281
    8. ' add' → logprob: -7.776802062988281
    9. ' read' → logprob: -8.151802062988281
    10. ' foo' → logprob: -8.526802062988281

Token 11: '_values' (ID: 20393)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09007620066404343
    2. '_line' → logprob: -2.715076208114624
    3. '(' → logprob: -4.465075969696045
    4. '_input' → logprob: -5.340075969696045
    5. '_' → logprob: -6.840075969696045
    6. '()' → logprob: -6.840075969696045
    7. ' ():' → logprob: -7.465075969696045
    8. '(line' → logprob: -8.090076446533203
    9. '_token' → logprob: -9.340076446533203
    10. '_string' → logprob: -9.965076446533203

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10108529031276703
    2. '():' → logprob: -2.3510851860046387
    3. '()' → logprob: -8.226085662841797
    4. '("("' → logprob: -8.726085662841797
    5. '('' → logprob: -9.101085662841797
    6. '(`' → logprob: -10.101085662841797
    7. '):' → logprob: -10.226085662841797
    8. ':' → logprob: -10.476085662841797
    9. ' ():' → logprob: -10.476085662841797
    10. ' (' → logprob: -10.726085662841797

Token 13: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15926596522331238
    2. '   ' → logprob: -2.1592659950256348
    3. '():' → logprob: -3.9092659950256348
    4. '(' → logprob: -4.784265995025635
    5. '[]' → logprob: -7.284265995025635
    6. '()\' → logprob: -7.534265995025635
    7. ' ()' → logprob: -7.909265995025635
    8. ' return' → logprob: -8.284265518188477
    9. '    
' → logprob: -8.534265518188477
    10. '():
' → logprob: -8.659265518188477

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1674497127532959
    2. 'return' (adapté à ' return') → logprob: -2.292449712753296
    3. '       ' → logprob: -3.417449712753296
    4. 'data' → logprob: -5.417449951171875
    5. 'values' → logprob: -5.417449951171875
    6. ' return' → logprob: -5.542449951171875
    7. '    ' → logprob: -6.167449951171875
    8. 'line' → logprob: -6.917449951171875
    9. ' line' → logprob: -7.417449951171875
    10. 'tokens' → logprob: -7.542449951171875

Token 15: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04190647974610329
    2. ' map' → logprob: -3.6669065952301025
    3. 'list' → logprob: -4.416906356811523
    4. ' []' → logprob: -7.166906356811523
    5. ' tuple' → logprob: -7.291906356811523
    6. ' input' → logprob: -7.666906356811523
    7. ' ' → logprob: -7.666906356811523
    8. ' [' → logprob: -8.041906356811523
    9. 'map' → logprob: -8.291906356811523
    10. ' int' → logprob: -8.666906356811523

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11420255154371262
    2. '(' → logprob: -2.2392024993896484
    3. '(str' → logprob: -6.739202499389648
    4. '(list' → logprob: -9.614202499389648
    5. '(float' → logprob: -10.239202499389648
    6. '(input' → logprob: -10.239202499389648
    7. '(lambda' → logprob: -10.489202499389648
    8. '(tuple' → logprob: -11.989202499389648
    9. '(eval' → logprob: -12.614202499389648
    10. ' (' → logprob: -12.739202499389648

Token 17: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.1878690719604492
    2. '(sys' → logprob: -1.1878690719604492
    3. '(' → logprob: -1.6878690719604492
    4. ',' → logprob: -1.9378690719604492
    5. ',input' → logprob: -3.062869071960449
    6. ')' → logprob: -5.187869071960449
    7. 'input' → logprob: -5.437869071960449
    8. ' (' → logprob: -5.562869071960449
    9. ' input' → logprob: -8.43786907196045
    10. ' ,' → logprob: -8.43786907196045

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.43015068769454956
    2. 'input' → logprob: -1.0551507472991943
    3. ')' → logprob: -7.430150508880615
    4. ' sys' → logprob: -7.430150508880615
    5. 'sys' → logprob: -8.555150985717773
    6. '   ' → logprob: -10.805150985717773
    7. ' )' → logprob: -11.430150985717773
    8. ' ' → logprob: -11.555150985717773
    9. ',input' → logprob: -11.680150985717773
    10. '(input' → logprob: -12.055150985717773

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20205044746398926
    2. '())' → logprob: -1.9520504474639893
    3. '()' → logprob: -3.2020504474639893
    4. ' ())' → logprob: -9.45205020904541
    5. '()))' → logprob: -9.95205020904541
    6. '(' → logprob: -10.07705020904541
    7. ')' → logprob: -10.20205020904541
    8. '('' → logprob: -11.45205020904541
    9. '()
' → logprob: -11.57705020904541
    10. ' ()' → logprob: -11.57705020904541

Token 20: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.49271875619888306
    2. 'split' → logprob: -0.9927187561988831
    3. 'rstrip' → logprob: -3.9927186965942383
    4. ')' → logprob: -10.992718696594238
    5. ' strip' → logprob: -13.992718696594238
    6. ' split' → logprob: -14.117718696594238
    7. 'str' → logprob: -15.367718696594238
    8. '().' → logprob: -15.867718696594238
    9. 'rs' → logprob: -15.867718696594238
    10. 'read' → logprob: -15.992718696594238

Token 21: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0013282144209370017
    2. ')' → logprob: -7.626327991485596
    3. '()' → logprob: -7.626327991485596
    4. '()))' → logprob: -8.001328468322754
    5. '))' → logprob: -11.501328468322754
    6. '())
' → logprob: -12.501328468322754
    7. ' ())' → logprob: -13.251328468322754
    8. '(' → logprob: -14.001328468322754
    9. '())

' → logprob: -15.751328468322754
    10. '()]' → logprob: -15.876328468322754

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6445346474647522
    2. '#' → logprob: -2.1445345878601074
    3. '\n' → logprob: -2.2695345878601074
    4. 'a' → logprob: -2.7695345878601074
    5. 'x' → logprob: -2.8945345878601074
    6. 'n' → logprob: -3.3945345878601074
    7. '\' → logprob: -3.3945345878601074
    8. '```' → logprob: -4.769534587860107
    9. '(' → logprob: -5.019534587860107
    10. '<|end|>' → logprob: -5.019534587860107

Token 23: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12298537790775299
    2. ' solve' → logprob: -2.247985363006592
    3. ' calculate' → logprob: -5.997985363006592
    4. 'solve' → logprob: -6.122985363006592
    5. ' factorial' → logprob: -6.372985363006592
    6. 'main' → logprob: -6.622985363006592
    7. ' sum' → logprob: -7.372985363006592
    8. ' process' → logprob: -7.747985363006592
    9. ' read' → logprob: -7.997985363006592
    10. ' solution' → logprob: -8.37298583984375

Token 24: '_list' (ID: 4162)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6403892040252686
    2. '_values' → logprob: -1.2653892040252686
    3. '_int' → logprob: -2.1403892040252686
    4. '_value' → logprob: -3.0153892040252686
    5. '_' → logprob: -4.515389442443848
    6. 'int' → logprob: -5.390389442443848
    7. '_val' → logprob: -6.390389442443848
    8. '_array' → logprob: -6.515389442443848
    9. '_list' → logprob: -6.515389442443848
    10. 'line' → logprob: -6.765389442443848

Token 25: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.026103464886546135
    2. '(' → logprob: -3.9011034965515137
    3. '()' → logprob: -5.276103496551514
    4. '()">' → logprob: -9.401103019714355
    5. '()(' → logprob: -9.526103019714355
    6. '("("' → logprob: -10.151103019714355
    7. '()>' → logprob: -10.401103019714355
    8. '(()' → logprob: -10.526103019714355
    9. '_' → logprob: -11.151103019714355
    10. '()?>' → logprob: -11.526103019714355

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011394507251679897
    2. '()' → logprob: -4.636394500732422
    3. '[]' → logprob: -7.636394500732422
    4. '(' → logprob: -7.886394500732422
    5. '    ' → logprob: -8.886394500732422
    6. ' ()' → logprob: -8.886394500732422
    7. 'return' → logprob: -9.261394500732422
    8. '[:]' → logprob: -9.261394500732422
    9. '():' → logprob: -9.511394500732422
    10. ' return' → logprob: -9.511394500732422

Token 27: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.282524824142456
    2. 'list' → logprob: -1.282524824142456
    3. 'return' (adapté à ' return') → logprob: -1.407524824142456
    4. ' return' → logprob: -1.657524824142456
    5. '   ' → logprob: -4.657525062561035
    6. ' ' → logprob: -8.782525062561035
    7. '    ' → logprob: -9.282525062561035
    8. 'map' → logprob: -9.282525062561035
    9. ' map' → logprob: -9.407525062561035
    10. '  ' → logprob: -10.657525062561035

Token 28: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2014487087726593
    2. ' list' → logprob: -1.701448678970337
    3. '[list' → logprob: -10.326448440551758
    4. '	list' → logprob: -14.451448440551758
    5. 'map' → logprob: -14.576448440551758
    6. '[' → logprob: -14.826448440551758
    7. '(list' → logprob: -14.951448440551758
    8. '[]' → logprob: -15.076448440551758
    9. ' ' → logprob: -15.326448440551758
    10. '=list' → logprob: -15.951448440551758

Token 29: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.621329128742218
    2. '(input' → logprob: -1.1213290691375732
    3. '(map' → logprob: -2.2463290691375732
    4. '(int' → logprob: -3.4963290691375732
    5. '(read' → logprob: -7.746329307556152
    6. '(s' → logprob: -8.996329307556152
    7. '(eval' → logprob: -9.871329307556152
    8. '((' → logprob: -10.121329307556152
    9. '(convert' → logprob: -10.996329307556152
    10. '()' → logprob: -10.996329307556152

Token 30: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.129266067640856e-05
    2. '_' → logprob: -10.875020980834961
    3. '_list' → logprob: -13.625020980834961
    4. '_value' → logprob: -14.750020980834961
    5. ')_' → logprob: -15.125020980834961
    6. '_val' → logprob: -15.375020980834961
    7. '_vals' → logprob: -15.750020980834961
    8. ' _' → logprob: -16.50002098083496
    9. '_VALUES' → logprob: -17.75002098083496
    10. '__' → logprob: -17.87502098083496

Token 31: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -7.44574936106801e-05
    2. '()' → logprob: -9.62507438659668
    3. ' ())' → logprob: -12.75007438659668
    4. ')' → logprob: -13.00007438659668
    5. '())
' → logprob: -13.25007438659668
    6. '()))' → logprob: -13.87507438659668
    7. '();)' → logprob: -15.37507438659668
    8. '())

' → logprob: -16.00007438659668
    9. '()]' → logprob: -16.62507438659668
    10. '(' → logprob: -16.87507438659668

Token 32: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09350227564573288
    2. 'n' → logprob: -4.218502044677734
    3. '\n' → logprob: -4.343502044677734
    4. 'for' → logprob: -4.343502044677734
    5. 'print' → logprob: -4.718502044677734
    6. '#' → logprob: -4.718502044677734
    7. 'x' → logprob: -5.093502044677734
    8. '\' → logprob: -5.093502044677734
    9. 'a' → logprob: -5.218502044677734
    10. 'class' → logprob: -5.593502044677734

Token 33: ' func' (ID: 4660)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014094981364905834
    2. 'main' → logprob: -5.014094829559326
    3. ' solve' → logprob: -5.139094829559326
    4. ' read' → logprob: -7.264094829559326
    5. 'solve' → logprob: -7.764094829559326
    6. '_main' → logprob: -9.764095306396484
    7. ' factorial' → logprob: -9.889095306396484
    8. ' process' → logprob: -10.014095306396484
    9. ' sum' → logprob: -10.389095306396484
    10. ' is' → logprob: -10.514095306396484

Token 34: '(N' (ID: 10564)
  Prédit: 'tion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tion' → logprob: -0.2720826268196106
    2. '(' → logprob: -1.5220825672149658
    3. '_' → logprob: -4.272082805633545
    4. ' tion' → logprob: -6.647082805633545
    5. 't' → logprob: -7.147082805633545
    6. 'ion' → logprob: -7.272082805633545
    7. '_t' → logprob: -7.397082805633545
    8. 'ction' → logprob: -7.522082805633545
    9. '­tion' → logprob: -7.772082805633545
    10. '(_' → logprob: -8.022082328796387

Token 35: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5071626901626587
    2. ',' → logprob: -1.1321626901626587
    3. ')' → logprob: -2.632162570953369
    4. ' ):' → logprob: -6.257162570953369
    5. ' ,' → logprob: -6.757162570953369
    6. ' )' → logprob: -8.257163047790527
    7. ' ' → logprob: -10.132163047790527
    8. ':' → logprob: -11.007163047790527
    9. ',N' → logprob: -11.257163047790527
    10. ')>' → logprob: -11.382163047790527

Token 36: ' mod' (ID: 1812)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.976154088973999
    2. 'K' → logprob: -1.601154088973999
    3. ' M' → logprob: -2.101154088973999
    4. 'arr' → logprob: -2.601154088973999
    5. ' K' → logprob: -2.726154088973999
    6. 'A' → logprob: -3.351154088973999
    7. 'lst' → logprob: -3.601154088973999
    8. ' lst' → logprob: -4.226154327392578
    9. 'a' → logprob: -4.351154327392578
    10. ' A' → logprob: -4.476154327392578

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010657975217327476
    2. ')' → logprob: -7.876065731048584
    3. '=' → logprob: -8.501066207885742
    4. ' ):' → logprob: -8.751066207885742
    5. ',' → logprob: -9.001066207885742
    6. 'ulo' → logprob: -10.251066207885742
    7. 'ulus' → logprob: -10.251066207885742
    8. ':' → logprob: -10.626066207885742
    9. '):
' → logprob: -10.876066207885742
    10. ')):' → logprob: -11.251066207885742

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2931503355503082
    2. '\n' → logprob: -1.7931503057479858
    3. '<|end|>' → logprob: -3.9181504249572754
    4. '    ' → logprob: -4.168150424957275
    5. '    
' → logprob: -4.418150424957275
    6. ' ' → logprob: -4.543150424957275
    7. '\' → logprob: -5.168150424957275
    8. '' → logprob: -5.418150424957275
    9. ' 
' → logprob: -5.543150424957275
    10. ':' → logprob: -5.668150424957275

Token 39: ' F' (ID: 454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37750890851020813
    2. '    ' → logprob: -2.5025088787078857
    3. ' 
' → logprob: -2.7525088787078857
    4. '    
' → logprob: -3.1275088787078857
    5. 'n' → logprob: -3.7525088787078857
    6. ' ' → logprob: -3.8775088787078857
    7. '\n' → logprob: -4.377509117126465
    8. '\' → logprob: -4.627509117126465
    9. '     
' → logprob: -4.627509117126465
    10. ' n' → logprob: -5.127509117126465

Token 40: ' =' (ID: 314)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.9094355702400208
    2. '=' → logprob: -1.534435510635376
    3. ' =' → logprob: -1.534435510635376
    4. 'act' → logprob: -2.659435510635376
    5. 'a' → logprob: -3.409435510635376
    6. 'ac' → logprob: -3.784435510635376
    7. '   ' → logprob: -5.034435749053955
    8. 'or' → logprob: -5.159435749053955
    9. 'acto' → logprob: -5.284435749053955
    10. '[' → logprob: -5.534435749053955

Token 41: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759556293487549
    2. ' [' → logprob: -0.8259556293487549
    3. '[N' → logprob: -12.075955390930176
    4. '[int' → logprob: -12.825955390930176
    5. ' ' → logprob: -12.950955390930176
    6. '1' → logprob: -13.575955390930176
    7. '[n' → logprob: -13.700955390930176
    8. '[f' → logprob: -14.200955390930176
    9. '[i' → logprob: -14.450955390930176
    10. '0' → logprob: -14.825955390930176

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013295256067067385
    2. '0' → logprob: -6.62632942199707
    3. ' ' → logprob: -13.00132942199707
    4. 'None' → logprob: -14.50132942199707
    5. ']' → logprob: -15.00132942199707
    6. '-' → logprob: -15.50132942199707
    7. '```' → logprob: -16.12632942199707
    8. '[' → logprob: -16.37632942199707
    9. '   ' → logprob: -16.62632942199707
    10. '(' → logprob: -17.62632942199707

Token 43: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006434533279389143
    2. ',' → logprob: -8.125643730163574
    3. ']*(' → logprob: -8.500643730163574
    4. ']*' → logprob: -9.125643730163574
    5. ' ]' → logprob: -10.375643730163574
    6. ']+' → logprob: -13.250643730163574
    7. ']
' → logprob: -14.000643730163574
    8. ' for' → logprob: -15.250643730163574
    9. ']<<' → logprob: -15.375643730163574
    10. ' ' → logprob: -15.500643730163574

Token 44: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7204785943031311
    2. ' for' → logprob: -1.2204785346984863
    3. '   ' → logprob: -2.3454785346984863
    4. 'for' → logprob: -2.7204785346984863
    5. ']' → logprob: -3.8454785346984863
    6. '
' → logprob: -4.720478534698486
    7. ' ' → logprob: -4.845478534698486
    8. 'import' → logprob: -6.220478534698486
    9. '	for' → logprob: -6.345478534698486
    10. '*' → logprob: -6.470478534698486

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2713961899280548
    2. 'for' (adapté à ' for') → logprob: -1.7713961601257324
    3. ',' → logprob: -3.2713961601257324
    4. '   ' → logprob: -3.8963961601257324
    5. ' ' → logprob: -5.646396160125732
    6. '*' → logprob: -6.396396160125732
    7. '    ' → logprob: -6.771396160125732
    8. '	for' → logprob: -7.021396160125732
    9. '\t' → logprob: -7.646396160125732
    10. '_' → logprob: -8.14639663696289

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00843159668147564
    2. 'i' → logprob: -4.883431434631348
    3. ' ' → logprob: -7.383431434631348
    4. ' _' → logprob: -9.133431434631348
    5. '_' → logprob: -9.383431434631348
    6. '	i' → logprob: -12.008431434631348
    7. 'I' → logprob: -13.008431434631348
    8. '_i' → logprob: -13.883431434631348
    9. ' ' → logprob: -14.133431434631348
    10. ' x' → logprob: -14.758431434631348

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038819026201963425
    2. 'in' → logprob: -3.2888190746307373
    3. ' ' → logprob: -7.288818836212158
    4. '	in' → logprob: -9.538819313049316
    5. '  ' → logprob: -12.663819313049316
    6. '1' → logprob: -13.038819313049316
    7. '+' → logprob: -13.038819313049316
    8. 'In' → logprob: -13.163819313049316
    9. '   ' → logprob: -13.163819313049316
    10. 'n' → logprob: -13.788819313049316

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0059568872675299644
    2. 'range' → logprob: -5.130956649780273
    3. ' ' → logprob: -10.755956649780273
    4. '	range' → logprob: -12.505956649780273
    5. ' xrange' → logprob: -13.880956649780273
    6. '(range' → logprob: -14.005956649780273
    7. '  ' → logprob: -14.380956649780273
    8. ' ' → logprob: -15.130956649780273
    9. '   ' → logprob: -15.880956649780273
    10. '```' → logprob: -16.505956649780273

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.538490950129926e-05
    2. '1' → logprob: -9.875055313110352
    3. ' (' → logprob: -13.000055313110352
    4. ' ' → logprob: -13.500055313110352
    5. '2' → logprob: -15.375055313110352
    6. '(N' → logprob: -17.25005531311035
    7. '(
' → logprob: -18.00005531311035
    8. '(i' → logprob: -19.00005531311035
    9. '   ' → logprob: -19.25005531311035
    10. '(len' → logprob: -19.75005531311035

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008058178937062621
    2. ' ' → logprob: -7.125805854797363
    3. '2' → logprob: -14.125805854797363
    4. 'N' → logprob: -14.625805854797363
    5. '   ' → logprob: -15.625805854797363
    6. ' N' → logprob: -16.875804901123047
    7. 'len' → logprob: -17.875804901123047
    8. '  ' → logprob: -18.250804901123047
    9. '(' → logprob: -18.875804901123047
    10. '10' → logprob: -19.875804901123047

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00877954438328743
    2. ' ,' → logprob: -4.883779525756836
    3. ',N' → logprob: -6.758779525756836
    4. ',len' → logprob: -11.883779525756836
    5. ',n' → logprob: -13.008779525756836
    6. ' ' → logprob: -13.008779525756836
    7. ' N' → logprob: -15.008779525756836
    8. ',num' → logprob: -16.383779525756836
    9. '，' → logprob: -16.508779525756836
    10. 'N' → logprob: -16.758779525756836

Token 52: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1602245420217514
    2. ' N' → logprob: -1.9102245569229126
    3. '	N' → logprob: -15.535224914550781
    4. ' ' → logprob: -16.78522491455078
    5. '>N' → logprob: -17.28522491455078
    6. '   ' → logprob: -17.41022491455078
    7. ',N' → logprob: -18.16022491455078
    8. '_N' → logprob: -18.16022491455078
    9. '    ' → logprob: -18.78522491455078
    10. ')' → logprob: -18.78522491455078

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01839270070195198
    2. '):' → logprob: -4.643392562866211
    3. ' +' → logprob: -4.768392562866211
    4. '):
' → logprob: -9.268392562866211
    5. ' ):' → logprob: -12.268392562866211
    6. ')' → logprob: -12.893392562866211
    7. '   ' → logprob: -12.893392562866211
    8. ':' → logprob: -15.268392562866211
    9. ' ' → logprob: -15.268392562866211
    10. '1' → logprob: -15.518392562866211

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048408225178719
    2. ' ' → logprob: -4.511048316955566
    3. ')' → logprob: -15.636048316955566
    4. '```' → logprob: -15.761048316955566
    5. '2' → logprob: -15.886048316955566
    6. ' ' → logprob: -16.386049270629883
    7. '  ' → logprob: -17.261049270629883
    8. '   ' → logprob: -17.573549270629883
    9. ' )' → logprob: -18.136049270629883
    10. '１' → logprob: -18.886049270629883

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '2' → logprob: -15.750007629394531
    4. '```' → logprob: -17.37500762939453
    5. '   ' → logprob: -18.12500762939453
    6. ')' → logprob: -18.50000762939453
    7. '１' → logprob: -18.68750762939453
    8. '0' → logprob: -19.06250762939453
    9. '  ' → logprob: -19.25000762939453
    10. '۱' → logprob: -19.75000762939453

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002890705829486251
    2. ')' → logprob: -6.752890586853027
    3. ' ):' → logprob: -7.127890586853027
    4. ':' → logprob: -7.627890586853027
    5. '):
' → logprob: -8.127890586853027
    6. ',' → logprob: -9.127890586853027
    7. ' ' → logprob: -12.252890586853027
    8. ']:' → logprob: -12.377890586853027
    9. '):
' → logprob: -12.502890586853027
    10. ' )' → logprob: -12.627890586853027

Token 57: '       ' (ID: 309)
  Prédit: ' F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.8378247022628784
    2. ' ' → logprob: -1.3378247022628784
    3. '       ' → logprob: -2.212824821472168
    4. '    ' → logprob: -2.712824821472168
    5. '   ' → logprob: -3.087824821472168
    6. ' 
' → logprob: -3.087824821472168
    7. 'F' → logprob: -4.337824821472168
    8. '    
' → logprob: -5.212824821472168
    9. '        
' → logprob: -5.587824821472168
    10. '        ' → logprob: -5.962824821472168

Token 58: ' F' (ID: 454)
  Prédit: ' F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.17992965877056122
    2. 'F' (adapté à ' F') → logprob: -1.8049296140670776
    3. ' ' → logprob: -9.179929733276367
    4. '    ' → logprob: -10.679929733276367
    5. '   ' → logprob: -10.679929733276367
    6. ' ' → logprob: -11.554929733276367
    7. '       ' → logprob: -12.054929733276367
    8. '        ' → logprob: -12.179929733276367
    9. '	F' → logprob: -12.179929733276367
    10. ' (' → logprob: -13.304929733276367

Token 59: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10050103068351746
    2. '.' → logprob: -2.35050106048584
    3. '.app' → logprob: -9.10050106048584
    4. 'append' → logprob: -9.72550106048584
    5. '.extend' → logprob: -9.85050106048584
    6. '[-' → logprob: -10.47550106048584
    7. '*' → logprob: -11.47550106048584
    8. '.ap' → logprob: -11.97550106048584
    9. 'Append' → logprob: -12.72550106048584
    10. '[i' → logprob: -12.72550106048584

Token 60: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.1281045526266098
    2. '((' → logprob: -2.1281044483184814
    3. '(' → logprob: -6.7531046867370605
    4. 'F' → logprob: -12.003104209899902
    5. '(f' → logprob: -14.628104209899902
    6. ' (' → logprob: -14.753104209899902
    7. '(
' → logprob: -14.753104209899902
    8. '(i' → logprob: -15.628104209899902
    9. '(((' → logprob: -15.878104209899902
    10. '	F' → logprob: -16.12810516357422

Token 61: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0009120595059357584
    2. '[i' → logprob: -7.000912189483643
    3. '[' → logprob: -14.625911712646484
    4. '[
' → logprob: -16.250911712646484
    5. '```' → logprob: -18.375911712646484
    6. ' [-' → logprob: -18.625911712646484
    7. '   ' → logprob: -19.500911712646484
    8. '[j' → logprob: -19.750911712646484
    9. '
' → logprob: -20.375911712646484
    10. 'i' → logprob: -20.375911712646484

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. ' ' → logprob: -11.500020980834961
    3. 'i' → logprob: -12.875020980834961
    4. '```' → logprob: -13.250020980834961
    5. 'value' → logprob: -13.250020980834961
    6. '   ' → logprob: -13.625020980834961
    7. '()' → logprob: -14.375020980834961
    8. '*' → logprob: -14.500020980834961
    9. '  ' → logprob: -14.625020980834961
    10. ')' → logprob: -15.187520980834961

Token 63: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3488520681858063
    2. ' *' → logprob: -1.2238520383834839
    3. '*i' → logprob: -7.973852157592773
    4. ' ' → logprob: -10.348852157592773
    5. ' ' → logprob: -10.598852157592773
    6. ')' → logprob: -13.723852157592773
    7. '**' → logprob: -13.723852157592773
    8. '   ' → logprob: -13.848852157592773
    9. ')*' → logprob: -14.848852157592773
    10. '```' → logprob: -15.223852157592773

Token 64: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07022407650947571
    2. ' *' → logprob: -2.6952240467071533
    3. '*i' → logprob: -8.195223808288574
    4. ' ' → logprob: -11.820223808288574
    5. ' ' → logprob: -12.820223808288574
    6. '**' → logprob: -14.820223808288574
    7. '*
' → logprob: -15.070223808288574
    8. '   ' → logprob: -15.570223808288574
    9. '```' → logprob: -16.07022476196289
    10. '*object' → logprob: -16.44522476196289

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519317865371704
    2. ' i' → logprob: -1.5019317865371704
    3. '	i' → logprob: -13.751932144165039
    4. ' ' → logprob: -14.001932144165039
    5. '   ' → logprob: -15.001932144165039
    6. ' ' → logprob: -15.251932144165039
    7. '(i' → logprob: -16.87693214416504
    8. '  ' → logprob: -17.87693214416504
    9. '```' → logprob: -17.87693214416504
    10. 'I' → logprob: -18.12693214416504

Token 66: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02325584553182125
    2. '%' → logprob: -3.7732558250427246
    3. ')' → logprob: -11.898256301879883
    4. '%i' → logprob: -13.273256301879883
    5. ' ' → logprob: -14.648256301879883
    6. ' ' → logprob: -14.898256301879883
    7. '%n' → logprob: -15.023256301879883
    8. ')%' → logprob: -15.148256301879883
    9. '%c' → logprob: -15.648256301879883
    10. '%d' → logprob: -16.023256301879883

Token 67: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.10021983087062836
    2. 'mod' → logprob: -2.3502197265625
    3. '(mod' → logprob: -11.8502197265625
    4. ' ' → logprob: -12.9752197265625
    5. ' ' → logprob: -13.1002197265625
    6. '	mod' → logprob: -13.9752197265625
    7. ' modul' → logprob: -15.3502197265625
    8. ' modu' → logprob: -15.7252197265625
    9. ')' → logprob: -15.8502197265625
    10. '_mod' → logprob: -16.9752197265625

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.117345684382599e-05
    2. ')
' → logprob: -10.875020980834961
    3. ' )' → logprob: -13.375020980834961
    4. '   ' → logprob: -14.625020980834961
    5. ')
' → logprob: -16.87502098083496
    6. '))' → logprob: -17.12502098083496
    7. ')`' → logprob: -17.12502098083496
    8. ' ' → logprob: -17.37502098083496
    9. ')return' → logprob: -17.37502098083496
    10. ')

' → logprob: -18.00002098083496

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01395851094275713
    2. '<|end|>' → logprob: -4.76395845413208
    3. '    
' → logprob: -6.13895845413208
    4. '	return' → logprob: -6.88895845413208
    5. 'return' → logprob: -7.51395845413208
    6. ')' → logprob: -8.263958930969238
    7. '\n' → logprob: -8.388958930969238
    8. '
' → logprob: -8.638958930969238
    9. '```' → logprob: -8.763958930969238
    10. ' return' → logprob: -8.763958930969238

Token 70: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1951102763414383
    2. '<|end|>' → logprob: -2.070110321044922
    3. ' return' → logprob: -3.945110321044922
    4. 'return' (adapté à ' return') → logprob: -4.195110321044922
    5. ' ' → logprob: -5.195110321044922
    6. '	return' → logprob: -6.195110321044922
    7. ')' → logprob: -6.320110321044922
    8. '    
' → logprob: -6.695110321044922
    9. '\n' → logprob: -6.945110321044922
    10. '
' → logprob: -6.945110321044922

Token 71: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.28122207522392273
    2. ' F' → logprob: -1.4062221050262451
    3. ' ' → logprob: -10.531222343444824
    4. ' ' → logprob: -11.031222343444824
    5. '[' → logprob: -11.781222343444824
    6. '[F' → logprob: -11.906222343444824
    7. '(F' → logprob: -12.156222343444824
    8. '	F' → logprob: -13.281222343444824
    9. ' [' → logprob: -13.406222343444824
    10. '   ' → logprob: -13.406222343444824

Token 72: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: 'INV' (ID: 118318)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07245240360498428
    2. '<|end|>' → logprob: -3.0724523067474365
    3. '#' → logprob: -4.447452545166016
    4. '
' → logprob: -6.072452545166016
    5. 'F' → logprob: -6.072452545166016
    6. '```' → logprob: -6.447452545166016
    7. '[' → logprob: -6.822452545166016
    8. '<|end|>' → logprob: -7.072452545166016
    9. ')' → logprob: -7.322452545166016
    10. '(' → logprob: -7.447452545166016

Token 74: ' =' (ID: 314)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.1857292652130127
    2. '=' → logprob: -1.3107292652130127
    3. ' =' → logprob: -1.5607292652130127
    4. '_' → logprob: -1.8107292652130127
    5. '_func' → logprob: -4.435729026794434
    6. '_factor' → logprob: -4.810729026794434
    7. '_FUNC' → logprob: -5.310729026794434
    8. '=[]' → logprob: -6.060729026794434
    9. 'E' → logprob: -6.435729026794434
    10. 'A' → logprob: -6.560729026794434

Token 75: ' {}

' (ID: 21724)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05172431841492653
    2. ' [' → logprob: -3.301724433898926
    3. '{' → logprob: -4.926724433898926
    4. '{}' → logprob: -6.051724433898926
    5. ' ' → logprob: -7.051724433898926
    6. '1' → logprob: -7.176724433898926
    7. '[]' → logprob: -7.676724433898926
    8. ' {' → logprob: -7.801724433898926
    9. 'None' → logprob: -8.176724433898926
    10. '0' → logprob: -8.176724433898926

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.5577775128767826e-06
    2. '#' → logprob: -13.500005722045898
    3. '<|end|>' → logprob: -13.750005722045898
    4. 'import' → logprob: -13.875005722045898
    5. 'mod' → logprob: -14.125005722045898
    6. ' def' → logprob: -14.625005722045898
    7. ')' → logprob: -15.500005722045898
    8. 'from' → logprob: -15.625005722045898
    9. 'de' → logprob: -16.1250057220459
    10. '```' → logprob: -16.2500057220459

Token 77: ' inv' (ID: 1827)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.14328767359256744
    2. ' inv' → logprob: -2.1432876586914062
    3. ' inverse' → logprob: -4.768287658691406
    4. ' modular' → logprob: -5.518287658691406
    5. 'mod' → logprob: -6.143287658691406
    6. 'inv' → logprob: -7.393287658691406
    7. ' def' → logprob: -8.143287658691406
    8. ' factorial' → logprob: -8.268287658691406
    9. 'inverse' → logprob: -8.893287658691406
    10. ' pow' → logprob: -9.518287658691406

Token 78: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2630598843097687
    2. '_factor' → logprob: -2.3880598545074463
    3. '_' → logprob: -3.3880598545074463
    4. '_mod' → logprob: -3.6380598545074463
    5. '(n' → logprob: -4.138060092926025
    6. '(x' → logprob: -4.138060092926025
    7. 'mod' → logprob: -4.638060092926025
    8. '_func' → logprob: -5.138060092926025
    9. '(i' → logprob: -5.638060092926025
    10. '_(' → logprob: -5.763060092926025

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017112360801547766
    2. '):' → logprob: -6.626711368560791
    3. ' ,' → logprob: -8.001710891723633
    4. ')' → logprob: -10.501710891723633
    5. ' ):' → logprob: -11.126710891723633
    6. ',a' → logprob: -13.376710891723633
    7. ':' → logprob: -13.501710891723633
    8. ',
' → logprob: -14.126710891723633
    9. ',n' → logprob: -14.126710891723633
    10. ' )' → logprob: -14.376710891723633

Token 80: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4619973301887512
    2. 'mod' → logprob: -1.0869972705841064
    3. ' m' → logprob: -3.8369972705841064
    4. 'm' → logprob: -4.5869975090026855
    5. ' p' → logprob: -7.9619975090026855
    6. ' ' → logprob: -8.336997032165527
    7. 'p' → logprob: -8.586997032165527
    8. '	mod' → logprob: -9.836997032165527
    9. 'MOD' → logprob: -10.086997032165527
    10. 'b' → logprob: -10.461997032165527

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005691178957931697
    2. ')' → logprob: -7.5005693435668945
    3. ' ):' → logprob: -11.875569343566895
    4. '):
' → logprob: -12.375569343566895
    5. ',' → logprob: -13.000569343566895
    6. ':' → logprob: -13.125569343566895
    7. '):
' → logprob: -15.625569343566895
    8. ')：' → logprob: -15.625569343566895
    9. '=' → logprob: -16.000568389892578
    10. '),' → logprob: -17.125568389892578

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06387969851493835
    2. ':' → logprob: -2.8138797283172607
    3. ')' → logprob: -7.563879489898682
    4. '):' → logprob: -7.813879489898682
    5. '<|end|>' → logprob: -8.06387996673584
    6. ' if' → logprob: -8.43887996673584
    7. ' ' → logprob: -9.43887996673584
    8. ',' → logprob: -9.43887996673584
    9. ':
' → logprob: -9.56387996673584
    10. '=' → logprob: -9.93887996673584

Token 83: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38839638233184814
    2. ' if' → logprob: -1.1383963823318481
    3. '   ' → logprob: -6.638396263122559
    4. 'a' → logprob: -8.888396263122559
    5. 'b' → logprob: -10.013396263122559
    6. ' a' → logprob: -11.388396263122559
    7. '	if' → logprob: -11.638396263122559
    8. ' b' → logprob: -12.888396263122559
    9. '0' → logprob: -13.513396263122559
    10. ' return' → logprob: -13.763396263122559

Token 84: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.008629471063613892
    2. 'a' → logprob: -4.758629322052002
    3. ' ' → logprob: -11.25862979888916
    4. '	a' → logprob: -13.50862979888916
    5. ' not' → logprob: -14.88362979888916
    6. ' ' → logprob: -15.50862979888916
    7. '   ' → logprob: -16.883628845214844
    8. ' а' → logprob: -17.321128845214844
    9. ' (' → logprob: -18.071128845214844
    10. '```' → logprob: -18.446128845214844

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024999525398015976
    2. 'in' → logprob: -4.024999618530273
    3. '==' → logprob: -5.399999618530273
    4. ' ==' → logprob: -6.774999618530273
    5. ')' → logprob: -7.774999618530273
    6. ' not' → logprob: -8.274999618530273
    7. 'a' → logprob: -8.774999618530273
    8. ' ' → logprob: -9.024999618530273
    9. ' a' → logprob: -9.149999618530273
    10. '=' → logprob: -10.149999618530273

Token 86: ' INV' (ID: 67688)
  Prédit: 'INV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INV' → logprob: -0.3132992684841156
    2. ' INV' → logprob: -1.313299298286438
    3. '_INV' → logprob: -10.813299179077148
    4. ' ' → logprob: -11.938299179077148
    5. 'IN' → logprob: -12.188299179077148
    6. ' INVEST' → logprob: -13.938299179077148
    7. 'I' → logprob: -14.313299179077148
    8. 'INVAL' → logprob: -14.313299179077148
    9. '	IN' → logprob: -14.563299179077148
    10. ' ' → logprob: -14.688299179077148

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011673785746097565
    2. ':
' → logprob: -4.511673927307129
    3. ':return' → logprob: -7.886673927307129
    4. '):' → logprob: -8.511673927307129
    5. '>:' → logprob: -11.261673927307129
    6. '   ' → logprob: -11.261673927307129
    7. '):
' → logprob: -11.386673927307129
    8. '}:' → logprob: -12.761673927307129
    9. '():' → logprob: -13.136673927307129
    10. ' :' → logprob: -13.386673927307129

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020792249590158463
    2. ':' → logprob: -3.895792245864868
    3. ':return' → logprob: -8.895792007446289
    4. ':
' → logprob: -9.895792007446289
    5. '   ' → logprob: -10.770792007446289
    6. ' return' → logprob: -11.020792007446289
    7. ')' → logprob: -12.395792007446289
    8. ',' → logprob: -12.770792007446289
    9. '):' → logprob: -12.895792007446289
    10. '):
' → logprob: -13.145792007446289

Token 89: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14938561618328094
    2. ' return' → logprob: -2.149385690689087
    3. 'return' (adapté à ' return') → logprob: -4.149385452270508
    4. ':' → logprob: -5.774385452270508
    5. ':return' → logprob: -6.024385452270508
    6. '           ' → logprob: -7.774385452270508
    7. '   ' → logprob: -9.024385452270508
    8. '	return' → logprob: -9.524385452270508
    9. '<|end|>' → logprob: -9.774385452270508
    10. ' ' → logprob: -10.024385452270508

Token 90: ' INV' (ID: 67688)
  Prédit: ' INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' INV' → logprob: -0.5759508609771729
    2. 'INV' → logprob: -0.8259508609771729
    3. '_INV' → logprob: -12.700950622558594
    4. 'IN' → logprob: -12.825950622558594
    5. ' ' → logprob: -12.950950622558594
    6. ' ' → logprob: -13.450950622558594
    7. ' INVEST' → logprob: -14.200950622558594
    8. ' IN' → logprob: -14.700950622558594
    9. '   ' → logprob: -15.325950622558594
    10. '	IN' → logprob: -16.200950622558594

Token 91: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.478889215737581e-05
    2. 'a' → logprob: -9.875054359436035
    3. '(a' → logprob: -13.000054359436035
    4. '[' → logprob: -15.375054359436035
    5. '   ' → logprob: -15.625054359436035
    6. '```' → logprob: -15.750054359436035
    7. '[
' → logprob: -16.12505531311035
    8. ' [' → logprob: -16.25005531311035
    9. ']' → logprob: -16.37505531311035
    10. '][' → logprob: -17.00005531311035

Token 92: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04319797828793526
    2. ']
' → logprob: -3.1681978702545166
    3. ']

' → logprob: -9.043197631835938
    4. ']
' → logprob: -9.793197631835938
    5. '   ' → logprob: -11.418197631835938
    6. ' ]' → logprob: -12.043197631835938
    7. '],' → logprob: -13.168197631835938
    8. 'a' → logprob: -13.793197631835938
    9. ' ]
' → logprob: -13.793197631835938
    10. ']

' → logprob: -13.793197631835938

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00204272149130702
    2. '    
' → logprob: -6.377042770385742
    3. '
' → logprob: -9.752042770385742
    4. '  ' → logprob: -10.252042770385742
    5. 'a' → logprob: -10.377042770385742
    6. ' ' → logprob: -10.377042770385742
    7. '<|end|>' → logprob: -10.627042770385742
    8. '    ' → logprob: -11.002042770385742
    9. 'else' → logprob: -11.252042770385742
    10. ' else' → logprob: -11.252042770385742

Token 94: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012015541084110737
    2. ' res' → logprob: -5.762015342712402
    3. '    
' → logprob: -6.137015342712402
    4. 'res' → logprob: -6.262015342712402
    5. 'else' → logprob: -7.262015342712402
    6. ' x' → logprob: -7.262015342712402
    7. 'x' → logprob: -7.762015342712402
    8. 'r' (adapté à ' r') → logprob: -7.762015342712402
    9. ' else' → logprob: -8.262015342712402
    10. 'inv' → logprob: -8.262015342712402

Token 95: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7437503933906555
    2. '=' → logprob: -1.1187503337860107
    3. ' =' → logprob: -1.7437503337860107
    4. 'a' → logprob: -4.99375057220459
    5. '=a' → logprob: -5.11875057220459
    6. ',' → logprob: -5.36875057220459
    7. 'eturn' → logprob: -6.86875057220459
    8. 'e' → logprob: -6.99375057220459
    9. 'et' → logprob: -7.36875057220459
    10. ' ' → logprob: -7.61875057220459

Token 96: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.11300917714834213
    2. ' pow' → logprob: -2.238009214401245
    3. 'mod' → logprob: -9.363009452819824
    4. '(pow' → logprob: -9.738009452819824
    5. '0' → logprob: -11.113009452819824
    6. ' mod' → logprob: -11.613009452819824
    7. 'inv' → logprob: -12.363009452819824
    8. '   ' → logprob: -12.613009452819824
    9. ' ' → logprob: -13.113009452819824
    10. '_pow' → logprob: -13.363009452819824

Token 97: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06203412264585495
    2. '(' → logprob: -2.8120341300964355
    3. '<|end|>' → logprob: -10.437033653259277
    4. 'a' → logprob: -10.562033653259277
    5. '(
' → logprob: -12.437033653259277
    6. '(ai' → logprob: -12.562033653259277
    7. '<|end|>' → logprob: -13.562033653259277
    8. '(r' → logprob: -14.937033653259277
    9. ')a' → logprob: -15.312033653259277

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.872261317563243e-05
    2. ' ,' → logprob: -10.500059127807617
    3. ',
' → logprob: -11.375059127807617
    4. ',-' → logprob: -11.750059127807617
    5. '(mod' → logprob: -12.875059127807617
    6. 'mod' → logprob: -13.000059127807617
    7. ',module' → logprob: -13.000059127807617
    8. '<|end|>' → logprob: -13.125059127807617
    9. '(' → logprob: -15.000059127807617
    10. '-' → logprob: -15.125059127807617

Token 99: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.013369270600378513
    2. ' mod' → logprob: -4.388369083404541
    3. '-' → logprob: -7.513369083404541
    4. '	mod' → logprob: -9.1383695602417
    5. '<|end|>' → logprob: -9.2633695602417
    6. '-mod' → logprob: -10.1383695602417
    7. '(mod' → logprob: -10.3883695602417
    8. ' ' → logprob: -10.8883695602417
    9. '   ' → logprob: -11.7633695602417
    10. ' -' → logprob: -11.8883695602417

Token 100: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004620710853487253
    2. ' -' → logprob: -5.379620552062988
    3. '–' → logprob: -15.379620552062988
    4. ' ' → logprob: -15.879620552062988
    5. '−' → logprob: -15.879620552062988
    6. ' ' → logprob: -18.129621505737305
    7. '```' → logprob: -18.129621505737305
    8. '  ' → logprob: -18.504621505737305
    9. '<|end|>' → logprob: -19.129621505737305
    10. '2' → logprob: -19.942121505737305

Token 101: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.750001907348633
    3. '-' → logprob: -15.375001907348633
    4. '۲' → logprob: -15.687501907348633
    5. '```' → logprob: -15.687501907348633
    6. '٢' → logprob: -16.937501907348633
    7. '

' → logprob: -17.000001907348633
    8. '' → logprob: -17.187501907348633
    9. '२' → logprob: -17.187501907348633
    10. '₂' → logprob: -17.250001907348633

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -16.375
    3. '۲' → logprob: -16.5625
    4. ' ' → logprob: -16.5625
    5. '22' → logprob: -17.0625
    6. '' → logprob: -17.125
    7. '٢' → logprob: -17.375
    8. '₂' → logprob: -17.5625
    9. '２' → logprob: -17.75
    10. '

' → logprob: -17.75

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013330980436876416
    2. ' ,' → logprob: -6.626333236694336
    3. ')' → logprob: -12.126333236694336
    4. '   ' → logprob: -14.501333236694336
    5. ' ' → logprob: -15.126333236694336
    6. ',
' → logprob: -15.376333236694336
    7. 'mod' → logprob: -15.376333236694336
    8. ' mod' → logprob: -16.376333236694336
    9. '),' → logprob: -17.001333236694336
    10. '1' → logprob: -17.001333236694336

Token 104: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.0040807779878377914
    2. 'mod' → logprob: -5.504080772399902
    3. '	mod' → logprob: -13.379080772399902
    4. ')' → logprob: -15.504080772399902
    5. '(mod' → logprob: -15.504080772399902
    6. ' ' → logprob: -15.754080772399902
    7. ' ' → logprob: -16.75408172607422
    8. ' мод' → logprob: -17.00408172607422
    9. ' modul' → logprob: -17.25408172607422
    10. '_mod' → logprob: -17.37908172607422

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20148077607154846
    2. ')
' → logprob: -1.701480746269226
    3. ')
' → logprob: -9.701480865478516
    4. ')

' → logprob: -12.451480865478516
    5. '   ' → logprob: -13.701480865478516
    6. ' )' → logprob: -14.451480865478516
    7. ' )
' → logprob: -14.576480865478516
    8. ' ' → logprob: -16.576480865478516
    9. '),' → logprob: -16.951480865478516
    10. ')\' → logprob: -17.576480865478516

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.73183855926618e-05
    2. 'INV' → logprob: -10.000077247619629
    3. ' INV' → logprob: -10.375077247619629
    4. 'IN' → logprob: -15.750077247619629
    5. '
' → logprob: -15.875077247619629
    6. ' IN' → logprob: -16.500078201293945
    7. '```' → logprob: -16.500078201293945
    8. '       ' → logprob: -16.875078201293945
    9. '   ' → logprob: -17.000078201293945
    10. ' ' → logprob: -17.625078201293945

Token 107: ' INV' (ID: 67688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12055347114801407
    2. 'INV' (adapté à ' INV') → logprob: -2.245553493499756
    3. ' INV' → logprob: -4.870553493499756
    4. 'IN' → logprob: -10.745553016662598
    5. ' ' → logprob: -11.995553016662598
    6. '_INV' → logprob: -14.120553016662598
    7. '   ' → logprob: -14.245553016662598
    8. '	IN' → logprob: -14.745553016662598
    9. '    
' → logprob: -14.995553016662598
    10. ' IN' → logprob: -14.995553016662598

Token 108: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.875004768371582
    3. '[A' → logprob: -13.500004768371582
    4. 'a' → logprob: -14.875004768371582
    5. '```' → logprob: -15.250004768371582
    6. '\[' → logprob: -16.500003814697266
    7. '[...]' → logprob: -17.125003814697266
    8. '[
' → logprob: -18.000003814697266
    9. '__[' → logprob: -18.500003814697266
    10. ' [' → logprob: -18.500003814697266

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002174766268581152
    2. ' ]' → logprob: -6.5021748542785645
    3. '=' → logprob: -7.7521748542785645
    4. ']=' → logprob: -8.877174377441406
    5. ' =' → logprob: -9.252174377441406
    6. ' ' → logprob: -12.127174377441406
    7. ')' → logprob: -13.752174377441406
    8. ')]' → logprob: -15.877174377441406
    9. ',' → logprob: -16.002174377441406
    10. ' ' → logprob: -16.752174377441406

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.688261032104492
    4. ' =)' → logprob: -17.563261032104492
    5. '＝' → logprob: -17.688261032104492
    6. ' =
' → logprob: -17.938261032104492
    7. ')' → logprob: -18.563261032104492
    8. '   ' → logprob: -19.438261032104492
    9. ',' → logprob: -19.438261032104492
    10. ']' → logprob: -19.563261032104492

Token 111: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004306692280806601
    2. ' r' → logprob: -7.750430583953857
    3. '	r' → logprob: -19.250431060791016
    4. '_r' → logprob: -20.750431060791016
    5. '$r' → logprob: -21.750431060791016
    6. ' р' → logprob: -23.125431060791016
    7. '```' → logprob: -23.125431060791016
    8. '(r' → logprob: -23.125431060791016
    9. '=r' → logprob: -23.250431060791016
    10. '`' → logprob: -23.625431060791016

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.966313281329349e-05
    2. 'return' → logprob: -10.500049591064453
    3. ' return' → logprob: -10.750049591064453
    4. '   ' → logprob: -15.375049591064453
    5. '	return' → logprob: -15.625049591064453
    6. '    
' → logprob: -15.750049591064453
    7. ':return' → logprob: -16.750049591064453
    8. '       ' → logprob: -18.375049591064453
    9. '
' → logprob: -18.625049591064453
    10. '```' → logprob: -18.750049591064453

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7835754988482222e-05
    2. 'return' → logprob: -11.250018119812012
    3. ' return' → logprob: -12.250018119812012
    4. '```' → logprob: -16.875017166137695
    5. '	return' → logprob: -18.000017166137695
    6. '   ' → logprob: -18.250017166137695
    7. ':return' → logprob: -18.625017166137695
    8. '       ' → logprob: -19.750017166137695
    9. '    
' → logprob: -19.750017166137695
    10. '  ' → logprob: -20.500017166137695

Token 114: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04047683626413345
    2. '   ' → logprob: -3.5404767990112305
    3. ' return' → logprob: -4.5404767990112305
    4. '	return' → logprob: -14.79047679901123
    5. ' ' → logprob: -15.66547679901123
    6. '```' → logprob: -16.665477752685547
    7. ':return' → logprob: -17.290477752685547
    8. '  ' → logprob: -17.415477752685547
    9. 'eturn' → logprob: -17.540477752685547
    10. '
' → logprob: -20.040477752685547

Token 115: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0031777136027812958
    2. ' r' → logprob: -5.753177642822266
    3. '	r' → logprob: -19.628177642822266
    4. '(r' → logprob: -22.128177642822266
    5. ' ' → logprob: -23.128177642822266
    6. ' ' → logprob: -23.128177642822266
    7. '   ' → logprob: -24.128177642822266
    8. '_r' → logprob: -24.378177642822266
    9. '[r' → logprob: -25.003177642822266
    10. '$r' → logprob: -25.253177642822266

Token 116: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015288250870071352
    2. '<|end|>' → logprob: -9.750152587890625
    3. '#' → logprob: -10.125152587890625
    4. '```' → logprob: -10.500152587890625
    5. 'from' → logprob: -11.625152587890625
    6. 'import' → logprob: -12.250152587890625
    7. 'class' → logprob: -12.750152587890625
    8. '    
' → logprob: -13.250152587890625
    9. '  
' → logprob: -13.750152587890625
    10. ' def' → logprob: -13.750152587890625

Token 118: ' C' (ID: 363)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.7678661346435547
    2. ' mod' → logprob: -2.1428661346435547
    3. ' factorial' → logprob: -2.2678661346435547
    4. 'comb' → logprob: -2.3928661346435547
    5. 'mod' → logprob: -2.5178661346435547
    6. 'n' → logprob: -3.1428661346435547
    7. 'com' → logprob: -3.3928661346435547
    8. ' n' → logprob: -4.517866134643555
    9. 'factor' → logprob: -4.642866134643555
    10. 'inv' → logprob: -4.642866134643555

Token 119: '(F' (ID: 12044)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004113188479095697
    2. '(' → logprob: -5.62911319732666
    3. '(N' → logprob: -8.00411319732666
    4. 'n' → logprob: -9.00411319732666
    5. '(a' → logprob: -10.37911319732666
    6. ' (' → logprob: -12.00411319732666
    7. '(k' → logprob: -12.37911319732666
    8. 'N' → logprob: -12.37911319732666
    9. '_n' → logprob: -12.50411319732666
    10. '(i' → logprob: -13.25411319732666

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001306787133216858
    2. ',N' → logprob: -6.876307010650635
    3. ',n' → logprob: -8.626306533813477
    4. ' ,' → logprob: -10.501306533813477
    5. '[N' → logprob: -10.751306533813477
    6. '):' → logprob: -11.001306533813477
    7. '[],' → logprob: -12.001306533813477
    8. 'N' → logprob: -12.126306533813477
    9. ',F' → logprob: -12.751306533813477
    10. ',i' → logprob: -13.626306533813477

Token 121: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012161117047071457
    2. ' n' → logprob: -4.5121612548828125
    3. 'N' → logprob: -6.8871612548828125
    4. '```' → logprob: -9.887161254882812
    5. 'r' → logprob: -11.387161254882812
    6. 'a' → logprob: -12.137161254882812
    7. ' N' → logprob: -12.262161254882812
    8. 'k' → logprob: -12.387161254882812
    9. 'mod' → logprob: -12.387161254882812
    10. '	n' → logprob: -12.887161254882812

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023929782037157565
    2. ' ,' → logprob: -8.625239372253418
    3. ',b' → logprob: -9.875239372253418
    4. ',n' → logprob: -13.000239372253418
    5. 'b' → logprob: -13.250239372253418
    6. ')' → logprob: -14.000239372253418
    7. ',a' → logprob: -14.500239372253418
    8. '),' → logprob: -15.250239372253418
    9. ',r' → logprob: -15.250239372253418
    10. 'a' → logprob: -15.250239372253418

Token 123: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018150413408875465
    2. ' b' → logprob: -4.018150329589844
    3. 'a' → logprob: -15.268150329589844
    4. ' ' → logprob: -15.393150329589844
    5. '   ' → logprob: -17.143150329589844
    6. '	b' → logprob: -18.018150329589844
    7. '```' → logprob: -18.393150329589844
    8. '  ' → logprob: -18.768150329589844
    9. ' a' → logprob: -19.393150329589844
    10. ')b' → logprob: -19.643150329589844

Token 124: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005810889881104231
    2. '):
' → logprob: -5.630810737609863
    3. ')' → logprob: -6.130810737609863
    4. '):
' → logprob: -10.505810737609863
    5. ' ):' → logprob: -12.755810737609863
    6. ',' → logprob: -13.505810737609863
    7. '):

' → logprob: -14.255810737609863
    8. ')：' → logprob: -15.130810737609863
    9. ':' → logprob: -15.630810737609863
    10. ')):' → logprob: -15.880810737609863

Token 125: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02054363675415516
    2. ' mod' → logprob: -3.8955435752868652
    3. ' ' → logprob: -13.895544052124023
    4. '	mod' → logprob: -14.645544052124023
    5. '   ' → logprob: -15.895544052124023
    6. 'm' → logprob: -16.520544052124023
    7. ')' → logprob: -17.020544052124023
    8. 'MOD' → logprob: -17.645544052124023
    9. ' мод' → logprob: -17.770544052124023
    10. '  ' → logprob: -17.895544052124023

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00029279827140271664
    2. '):
' → logprob: -8.625292778015137
    3. ')' → logprob: -9.125292778015137
    4. '):
' → logprob: -12.625292778015137
    5. ' ):' → logprob: -14.125292778015137
    6. ')：' → logprob: -16.375293731689453
    7. ':' → logprob: -16.500293731689453
    8. '):

' → logprob: -17.000293731689453
    9. '   ' → logprob: -17.875293731689453
    10. ',' → logprob: -18.125293731689453

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017824919894337654
    2. ' return' → logprob: -5.267825126647949
    3. ':' → logprob: -5.392825126647949
    4. '(' → logprob: -5.892825126647949
    5. ')' → logprob: -7.142825126647949
    6. ' if' → logprob: -7.142825126647949
    7. '[' → logprob: -7.142825126647949
    8. '):' → logprob: -7.142825126647949
    9. ' (' → logprob: -7.892825126647949
    10. '    ' → logprob: -7.892825126647949

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04279248043894768
    2. 'if' → logprob: -3.292792558670044
    3. ' return' → logprob: -5.667792320251465
    4. '   ' → logprob: -6.917792320251465
    5. ' if' → logprob: -8.292792320251465
    6. 'a' → logprob: -10.792792320251465
    7. 'F' → logprob: -11.292792320251465
    8. 'b' → logprob: -12.542792320251465
    9. '	return' → logprob: -12.917792320251465
    10. 'c' → logprob: -13.792792320251465

Token 129: ' F' (ID: 454)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.5815617442131042
    2. 'F' → logprob: -0.8315617442131042
    3. ' F' → logprob: -5.83156156539917
    4. ' (' → logprob: -5.95656156539917
    5. '(' → logprob: -9.581562042236328
    6. '((' → logprob: -11.581562042236328
    7. '   ' → logprob: -13.081562042236328
    8. '	F' → logprob: -14.081562042236328
    9. '```' → logprob: -14.831562042236328
    10. '(
' → logprob: -14.956562042236328

Token 130: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.5570885807392187e-05
    2. 'a' → logprob: -11.625015258789062
    3. '[b' → logprob: -12.000015258789062
    4. '[' → logprob: -15.250015258789062
    5. '[A' → logprob: -17.000015258789062
    6. '```' → logprob: -17.125015258789062
    7. '[int' → logprob: -17.750015258789062
    8. '(a' → logprob: -18.500015258789062
    9. '[
' → logprob: -19.000015258789062
    10. '[-' → logprob: -19.250015258789062

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.794061770662665e-05
    2. ']*' → logprob: -9.25009822845459
    3. '*' → logprob: -13.75009822845459
    4. ' ]' → logprob: -14.50009822845459
    5. ']
' → logprob: -16.000097274780273
    6. '   ' → logprob: -16.250097274780273
    7. ')' → logprob: -17.125097274780273
    8. ' *' → logprob: -17.500097274780273
    9. '"]' → logprob: -18.125097274780273
    10. '']' → logprob: -18.375097274780273

Token 132: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1269797682762146
    2. ' *' → logprob: -2.1269798278808594
    3. '*b' → logprob: -10.62697982788086
    4. '**' → logprob: -11.25197982788086
    5. '   ' → logprob: -12.50197982788086
    6. '```' → logprob: -13.12697982788086
    7. ' ' → logprob: -13.25197982788086
    8. '
' → logprob: -13.37697982788086
    9. ' ' → logprob: -13.50197982788086
    10. '*(' → logprob: -14.00197982788086

Token 133: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.040045611560344696
    2. ' inv' → logprob: -3.4150454998016357
    3. 'pow' → logprob: -5.290045738220215
    4. '(inv' → logprob: -7.165045738220215
    5. ' pow' → logprob: -8.290045738220215
    6. 'INV' → logprob: -8.290045738220215
    7. ' INV' → logprob: -11.290045738220215
    8. 'in' → logprob: -11.665045738220215
    9. 'inverse' → logprob: -12.040045738220215
    10. '(pow' → logprob: -12.165045738220215

Token 134: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '((' → logprob: -15.62500286102295
    4. '(C' → logprob: -16.500003814697266
    5. '(
' → logprob: -17.000003814697266
    6. '(f' → logprob: -17.875003814697266
    7. 'F' → logprob: -18.125003814697266
    8. ' (' → logprob: -20.125003814697266
    9. '(

' → logprob: -20.250003814697266
    10. 'b' → logprob: -20.500003814697266

Token 135: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.8325677703833207e-05
    2. 'b' → logprob: -10.500028610229492
    3. '[a' → logprob: -15.000028610229492
    4. '[' → logprob: -15.250028610229492
    5. '```' → logprob: -16.375028610229492
    6. '	b' → logprob: -17.250028610229492
    7. ',b' → logprob: -17.375028610229492
    8. ' [' → logprob: -18.000028610229492
    9. ''b' → logprob: -18.125028610229492
    10. '(b' → logprob: -18.625028610229492

Token 136: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016074994346126914
    2. ' ,' → logprob: -8.750161170959473
    3. 'mod' → logprob: -14.375161170959473
    4. '],' → logprob: -14.500161170959473
    5. ',module' → logprob: -14.625161170959473
    6. '*,' → logprob: -15.750161170959473
    7. '),' → logprob: -16.125160217285156
    8. ',
' → logprob: -16.375160217285156
    9. '，' → logprob: -16.625160217285156
    10. ')' → logprob: -16.625160217285156

Token 137: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0024758970830589533
    2. ' mod' → logprob: -6.002475738525391
    3. '	mod' → logprob: -16.25247573852539
    4. '(mod' → logprob: -16.87747573852539
    5. '```' → logprob: -18.62747573852539
    6. ' ' → logprob: -18.75247573852539
    7. '   ' → logprob: -18.75247573852539
    8. '
' → logprob: -19.00247573852539
    9. '_mod' → logprob: -19.75247573852539
    10. ' ' → logprob: -20.12747573852539

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010032468708232045
    2. ',' → logprob: -9.375100135803223
    3. ' )' → logprob: -11.875100135803223
    4. ')*' → logprob: -13.125100135803223
    5. '   ' → logprob: -13.375100135803223
    6. '*' → logprob: -13.750100135803223
    7. '```' → logprob: -13.750100135803223
    8. ')
' → logprob: -14.625100135803223
    9. '）' → logprob: -15.125100135803223
    10. '*)' → logprob: -15.250100135803223

Token 139: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0730818584561348
    2. '*' → logprob: -2.6980819702148438
    3. '%' → logprob: -5.823081970214844
    4. ' %' → logprob: -8.698081970214844
    5. '   ' → logprob: -12.323081970214844
    6. ' ' → logprob: -13.073081970214844
    7. '```' → logprob: -13.073081970214844
    8. ')' → logprob: -13.448081970214844
    9. ' ' → logprob: -13.573081970214844
    10. '**' → logprob: -14.198081970214844

Token 140: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.004093242809176445
    2. ' inv' → logprob: -5.504093170166016
    3. '(inv' → logprob: -11.129093170166016
    4. '.inv' → logprob: -16.004093170166016
    5. 'INV' → logprob: -17.629093170166016
    6. '_inv' → logprob: -18.004093170166016
    7. 'inverse' → logprob: -18.129093170166016
    8. '   ' → logprob: -18.129093170166016
    9. '  ' → logprob: -19.004093170166016
    10. '```' → logprob: -19.379093170166016

Token 141: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -12.000009536743164
    3. '[F' → logprob: -12.625009536743164
    4. '((' → logprob: -15.625009536743164
    5. '<|end|>' → logprob: -17.750009536743164
    6. ' (' → logprob: -17.875009536743164
    7. '([' → logprob: -18.000009536743164
    8. '[' → logprob: -18.125009536743164
    9. '```' → logprob: -18.250009536743164
    10. '<|end|>' → logprob: -18.375009536743164

Token 142: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.3856492842023727e-06
    2. 'a' → logprob: -13.750000953674316
    3. '[' → logprob: -15.375000953674316
    4. '```' → logprob: -17.125001907348633
    5. '(a' → logprob: -18.500001907348633
    6. '[
' → logprob: -18.875001907348633
    7. ' [' → logprob: -19.125001907348633
    8. '#a' → logprob: -20.375001907348633
    9. '[A' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.500001907348633

Token 143: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6112545728683472
    2. '-b' → logprob: -0.8612545728683472
    3. ' -' → logprob: -3.3612546920776367
    4. 'b' → logprob: -13.236254692077637
    5. '[b' → logprob: -13.361254692077637
    6. '[-' → logprob: -13.861254692077637
    7. '[' → logprob: -13.861254692077637
    8. ' ' → logprob: -14.486254692077637
    9. '-б' → logprob: -15.111254692077637
    10. '-bi' → logprob: -15.486254692077637

Token 144: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.180879816180095e-05
    2. ' b' → logprob: -9.875051498413086
    3. '	b' → logprob: -15.500051498413086
    4. ')b' → logprob: -19.750051498413086
    5. '[b' → logprob: -20.125051498413086
    6. '   ' → logprob: -20.125051498413086
    7. ' б' → logprob: -20.250051498413086
    8. '_b' → logprob: -20.500051498413086
    9. 'б' → logprob: -20.875051498413086
    10. '<|end|>' → logprob: -21.125051498413086

Token 145: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -5.200166469876422e-06
    2. ']' → logprob: -12.625004768371582
    3. '])' → logprob: -13.625004768371582
    4. ' ],' → logprob: -14.750004768371582
    5. ''],' → logprob: -16.3750057220459
    6. '],
' → logprob: -16.6250057220459
    7. '),' → logprob: -17.5000057220459
    8. ',' → logprob: -17.7500057220459
    9. '1' → logprob: -19.8750057220459
    10. '},' → logprob: -20.1250057220459

Token 146: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4740851819515228
    2. 'mod' → logprob: -0.9740852117538452
    3. '(mod' → logprob: -12.349084854125977
    4. '	mod' → logprob: -13.099084854125977
    5. '```' → logprob: -14.349084854125977
    6. ' ' → logprob: -14.724084854125977
    7. ')' → logprob: -15.599084854125977
    8. '.mod' → logprob: -16.599084854125977
    9. ' мод' → logprob: -16.724084854125977
    10. '_mod' → logprob: -16.724084854125977

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005115681560710073
    2. '%' → logprob: -8.500511169433594
    3. ')%' → logprob: -8.500511169433594
    4. ' )' → logprob: -9.500511169433594
    5. ' %' → logprob: -10.750511169433594
    6. ',' → logprob: -12.125511169433594
    7. '%)' → logprob: -13.750511169433594
    8. ']' → logprob: -14.000511169433594
    9. '}' → logprob: -15.000511169433594
    10. ' ' → logprob: -15.500511169433594

Token 148: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10020732134580612
    2. ' %' → logprob: -2.3502073287963867
    3. ')' → logprob: -15.475207328796387
    4. ')%' → logprob: -16.47520637512207
    5. ' ' → logprob: -16.60020637512207
    6. '%c' → logprob: -16.60020637512207
    7. '%n' → logprob: -17.22520637512207
    8. ' %=' → logprob: -17.47520637512207
    9. '%s' → logprob: -18.22520637512207
    10. '%m' → logprob: -18.35020637512207

Token 149: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.25194409489631653
    2. ' mod' → logprob: -1.5019440650939941
    3. '(mod' → logprob: -11.126944541931152
    4. '	mod' → logprob: -15.001944541931152
    5. ' ' → logprob: -17.376943588256836
    6. '```' → logprob: -18.251943588256836
    7. ' ' → logprob: -18.376943588256836
    8. ' мод' → logprob: -19.126943588256836
    9. ' modul' → logprob: -20.001943588256836
    10. '.mod' → logprob: -20.501943588256836

Token 150: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053053438663482666
    2. '<|end|>' → logprob: -3.553053379058838
    3. '#' → logprob: -4.053053379058838
    4. '(' → logprob: -6.303053379058838
    5. ')' → logprob: -6.553053379058838
    6. '```' → logprob: -7.178053379058838
    7. '\' → logprob: -8.928053855895996
    8. 'N' → logprob: -9.178053855895996
    9. 'print' → logprob: -9.178053855895996
    10. 'import' → logprob: -9.178053855895996

Token 152: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.474735826253891
    2. 'main' → logprob: -0.9747358560562134
    3. 'solve' → logprob: -8.099736213684082
    4. ' solve' → logprob: -8.224736213684082
    5. ' factorial' → logprob: -10.349736213684082
    6. 'factor' → logprob: -11.099736213684082
    7. 'pow' → logprob: -11.224736213684082
    8. '	main' → logprob: -11.724736213684082
    9. 'comb' → logprob: -12.849736213684082
    10. 'count' → logprob: -12.849736213684082

Token 153: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013917774776928127
    2. '(' → logprob: -9.000139236450195
    3. '(N' → logprob: -12.000139236450195
    4. '()' → logprob: -12.500139236450195
    5. ' ():' → logprob: -12.625139236450195
    6. '(:' → logprob: -13.500139236450195
    7. '():
' → logprob: -14.375139236450195
    8. '(":' → logprob: -15.000139236450195
    9. ':' → logprob: -16.500139236450195
    10. 'def' → logprob: -17.375139236450195

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00148177077062428
    2. 'n' → logprob: -7.876481533050537
    3. ' n' → logprob: -7.876481533050537
    4. ' mod' → logprob: -7.876481533050537
    5. ' N' → logprob: -8.751482009887695
    6. 'mod' → logprob: -9.126482009887695
    7. 'N' → logprob: -10.251482009887695
    8. '```' → logprob: -11.626482009887695
    9. ' MOD' → logprob: -12.001482009887695
    10. '    ' → logprob: -12.376482009887695

Token 155: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.1665322333574295
    2. ' N' → logprob: -2.166532278060913
    3. '   ' → logprob: -3.791532278060913
    4. 'n' → logprob: -4.291532039642334
    5. ' n' → logprob: -6.291532039642334
    6. 'mod' → logprob: -8.041532516479492
    7. ' mod' → logprob: -8.416532516479492
    8. 'MOD' → logprob: -9.916532516479492
    9. 'import' → logprob: -10.166532516479492
    10. ' ' → logprob: -10.541532516479492

Token 156: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013653546338900924
    2. ' ,' → logprob: -6.6263651847839355
    3. ' =' → logprob: -10.626365661621094
    4. '=' → logprob: -12.376365661621094
    5. ',M' → logprob: -12.376365661621094
    6. ',K' → logprob: -12.501365661621094
    7. ' ' → logprob: -13.876365661621094
    8. ',k' → logprob: -14.376365661621094
    9. ',m' → logprob: -14.626365661621094
    10. ',int' → logprob: -15.876365661621094

Token 157: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.39517417550086975
    2. 'int' → logprob: -1.1451741456985474
    3. ' read' → logprob: -5.145174026489258
    4. 'read' → logprob: -6.020174026489258
    5. ' ' → logprob: -12.020174026489258
    6. '10' → logprob: -13.520174026489258
    7. '(int' → logprob: -14.395174026489258
    8. '<int' → logprob: -14.395174026489258
    9. '100' → logprob: -14.645174026489258
    10. '  ' → logprob: -14.770174026489258

Token 158: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007418495370075107
    2. '(' → logprob: -8.125741958618164
    3. 'input' → logprob: -8.125741958618164
    4. '(sys' → logprob: -9.125741958618164
    5. '()' → logprob: -10.125741958618164
    6. ' (' → logprob: -15.125741958618164
    7. ' input' → logprob: -15.625741958618164
    8. '(read' → logprob: -15.875741958618164
    9. 'sys' → logprob: -16.250741958618164
    10. '=input' → logprob: -16.625741958618164

Token 159: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06199883669614792
    2. '()' → logprob: -2.8119988441467285
    3. '().' → logprob: -10.68699836730957
    4. ')' → logprob: -12.43699836730957
    5. ' ())' → logprob: -12.93699836730957
    6. '();)' → logprob: -14.43699836730957
    7. '())
' → logprob: -14.81199836730957
    8. '(' → logprob: -15.18699836730957
    9. '()]' → logprob: -15.93699836730957
    10. '(),' → logprob: -16.06199836730957

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0693788230419159
    2. 'mod' → logprob: -3.5693788528442383
    3. ' mod' → logprob: -4.444378852844238
    4. ',' → logprob: -4.569378852844238
    5. '
' → logprob: -5.194378852844238
    6. '<|end|>' → logprob: -5.444378852844238
    7. '    
' → logprob: -6.444378852844238
    8. ' ' → logprob: -6.569378852844238
    9. ' 
' → logprob: -6.944378852844238
    10. '	mod' → logprob: -7.569378852844238

Token 161: ' F' (ID: 454)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.05850045755505562
    2. 'MOD' → logprob: -3.5585005283355713
    3. 'M' → logprob: -4.058500289916992
    4. 'A' → logprob: -4.808500289916992
    5. ' mod' → logprob: -7.433500289916992
    6. 'arr' → logprob: -7.558500289916992
    7. 'S' → logprob: -7.808500289916992
    8. 'a' → logprob: -8.058500289916992
    9. 'K' → logprob: -8.183500289916992
    10. '   ' → logprob: -8.558500289916992

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022513806819916
    2. '=' → logprob: -1.9102251529693604
    3. ',' → logprob: -14.910224914550781
    4. '[' → logprob: -15.660224914550781
    5. '  ' → logprob: -16.16022491455078
    6. ')' → logprob: -16.28522491455078
    7. '```' → logprob: -16.78522491455078
    8. '＝' → logprob: -16.78522491455078
    9. ' ' → logprob: -17.16022491455078
    10. ' ' → logprob: -17.53522491455078

Token 163: ' [' (ID: 723)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.20142170786857605
    2. ' func' → logprob: -1.7014217376708984
    3. '[' → logprob: -12.326421737670898
    4. '(func' → logprob: -12.576421737670898
    5. '	func' → logprob: -15.576421737670898
    6. ' [' → logprob: -15.826421737670898
    7. 'fun' → logprob: -16.2014217376709
    8. '   ' → logprob: -16.5764217376709
    9. '_func' → logprob: -17.0764217376709
    10. ' ' → logprob: -17.2014217376709

Token 164: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. ']' → logprob: -15.750000953674316
    4. '```' → logprob: -16.375
    5. ')' → logprob: -18.0
    6. '  ' → logprob: -18.125
    7. '   ' → logprob: -19.0
    8. '**' → logprob: -19.375
    9. '...' → logprob: -19.625
    10. '`' → logprob: -19.625

Token 165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016960110515356064
    2. ',' → logprob: -7.2516961097717285
    3. ']*(' → logprob: -7.3766961097717285
    4. ']+' → logprob: -8.12669563293457
    5. ')' → logprob: -11.25169563293457
    6. ']*' → logprob: -11.37669563293457
    7. ']
' → logprob: -11.87669563293457
    8. '1' → logprob: -12.00169563293457
    9. '0' → logprob: -12.12669563293457
    10. 'for' → logprob: -12.25169563293457

Token 166: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31507790088653564
    2. '<|end|>' → logprob: -2.940077781677246
    3. ']+' → logprob: -2.940077781677246
    4. '*' → logprob: -3.440077781677246
    5. '0' → logprob: -3.940077781677246
    6. ')' → logprob: -4.190077781677246
    7. '*(' → logprob: -4.315077781677246
    8. ' *' → logprob: -4.440077781677246
    9. '1' → logprob: -4.690077781677246
    10. '+' → logprob: -4.815077781677246

Token 167: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002396698109805584
    2. '(' → logprob: -6.377396583557129
    3. '(max' → logprob: -7.752396583557129
    4. '(n' → logprob: -8.502396583557129
    5. '(MAX' → logprob: -10.502396583557129
    6. ' (' → logprob: -11.627396583557129
    7. '100' → logprob: -12.502396583557129
    8. '101' → logprob: -12.627396583557129
    9. '((' → logprob: -13.002396583557129
    10. '51' → logprob: -13.377396583557129

Token 168: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1971413791179657
    2. ' +' → logprob: -2.572141408920288
    3. '<|end|>' → logprob: -2.947141408920288
    4. '
' → logprob: -3.197141408920288
    5. '(N' → logprob: -5.947141170501709
    6. '```' → logprob: -6.447141170501709
    7. ' 
' → logprob: -7.072141170501709
    8. '[' → logprob: -7.197141170501709
    9. '<|end|>' → logprob: -7.572141170501709
    10. '  
' → logprob: -8.072141647338867

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8641126751899719
    2. '<|end|>' → logprob: -0.8641126751899719
    3. '
' → logprob: -2.614112615585327
    4. '[' → logprob: -4.239112854003906
    5. 'F' → logprob: -4.489112854003906
    6. ' for' → logprob: -4.614112854003906
    7. '    
' → logprob: -4.614112854003906
    8. 'for' → logprob: -5.114112854003906
    9. ')' → logprob: -5.114112854003906
    10. ' ' → logprob: -5.239112854003906

Token 170: ' for' (ID: 395)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.33971038460731506
    2. ' F' → logprob: -2.7147104740142822
    3. ' mod' → logprob: -2.9647104740142822
    4. ' for' → logprob: -2.9647104740142822
    5. 'mod' → logprob: -2.9647104740142822
    6. 'for' (adapté à ' for') → logprob: -3.4647104740142822
    7. '   ' → logprob: -3.9647104740142822
    8. 'N' → logprob: -4.714710235595703
    9. '[' → logprob: -6.214710235595703
    10. ' N' → logprob: -7.089710235595703

Token 171: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004310480318963528
    2. 'i' → logprob: -5.504310607910156
    3. ' _' → logprob: -9.004310607910156
    4. '_' → logprob: -9.254310607910156
    5. ' ' → logprob: -11.504310607910156
    6. '	i' → logprob: -13.004310607910156
    7. '_i' → logprob: -14.129310607910156
    8. '  ' → logprob: -15.754310607910156
    9. '   ' → logprob: -16.004310607910156
    10. '(i' → logprob: -16.754310607910156

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005572509951889515
    2. 'in' → logprob: -5.255572319030762
    3. ' ' → logprob: -8.130572319030762
    4. '	in' → logprob: -11.380572319030762
    5. '_' → logprob: -12.130572319030762
    6. ' i' → logprob: -12.255572319030762
    7. '  ' → logprob: -12.630572319030762
    8. '	' → logprob: -12.880572319030762
    9. 'range' → logprob: -13.005572319030762
    10. ' ' → logprob: -13.005572319030762

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408273816108704
    2. ' range' → logprob: -0.9740827083587646
    3. ' ' → logprob: -13.224082946777344
    4. '(range' → logprob: -13.349082946777344
    5. '	range' → logprob: -13.599082946777344
    6. '   ' → logprob: -15.599082946777344
    7. '  ' → logprob: -15.849082946777344
    8. ')' → logprob: -15.974082946777344
    9. '(' → logprob: -16.224082946777344
    10. '```' → logprob: -16.474082946777344

Token 174: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04859315976500511
    2. '(N' → logprob: -3.048593044281006
    3. '(n' → logprob: -12.298593521118164
    4. ' (' → logprob: -14.298593521118164
    5. '(len' → logprob: -15.423593521118164
    6. '(
' → logprob: -15.548593521118164
    7. '1' → logprob: -15.798593521118164
    8. '(i' → logprob: -16.298593521118164
    9. '()' → logprob: -17.923593521118164
    10. '(

' → logprob: -18.048593521118164

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00732820201665163
    2. '):
' → logprob: -5.132328033447266
    3. '+' → logprob: -7.007328033447266
    4. ' ):' → logprob: -7.882328033447266
    5. '   ' → logprob: -9.882328033447266
    6. '-' → logprob: -10.757328033447266
    7. '():' → logprob: -11.382328033447266
    8. ')' → logprob: -11.632328033447266
    9. ':' → logprob: -12.007328033447266
    10. ' +' → logprob: -12.632328033447266

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041032370179891586
    2. ' F' → logprob: -3.291032314300537
    3. 'F' → logprob: -6.166032314300537
    4. '	   ' → logprob: -8.166032791137695
    5. '   ' → logprob: -8.291032791137695
    6. '	' → logprob: -10.166032791137695
    7. ' f' → logprob: -10.541032791137695
    8. 'input' → logprob: -10.791032791137695
    9. ' for' → logprob: -10.916032791137695
    10. ' ind' → logprob: -11.166032791137695

Token 177: ' P' (ID: 398)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.15055739879608154
    2. ' F' → logprob: -2.025557518005371
    3. '       ' → logprob: -5.400557518005371
    4. 'x' → logprob: -7.275557518005371
    5. 'f' → logprob: -7.525557518005371
    6. '   ' → logprob: -7.525557518005371
    7. 'a' → logprob: -7.775557518005371
    8. 'arr' → logprob: -8.775557518005371
    9. 'v' → logprob: -9.150557518005371
    10. 'val' → logprob: -9.525557518005371

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16686442494392395
    2. '[i' → logprob: -2.6668643951416016
    3. ',' → logprob: -2.9168643951416016
    4. '=' → logprob: -3.9168643951416016
    5. '[int' → logprob: -6.416864395141602
    6. '[' → logprob: -6.791864395141602
    7. ',i' → logprob: -7.041864395141602
    8. '   ' → logprob: -7.291864395141602
    9. '=int' → logprob: -7.291864395141602
    10. '()' → logprob: -7.541864395141602

Token 179: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8929839134216309
    2. 'read' → logprob: -1.1429839134216309
    3. ' read' → logprob: -1.7679839134216309
    4. ' int' → logprob: -2.517983913421631
    5. 'list' → logprob: -4.642983913421631
    6. ' list' → logprob: -5.517983913421631
    7. '[int' → logprob: -5.892983913421631
    8. '[i' → logprob: -6.767983913421631
    9. ' i' → logprob: -7.767983913421631
    10. ' input' → logprob: -8.017984390258789

Token 180: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00010819212911883369
    2. '()' → logprob: -9.250107765197754
    3. 'input' → logprob: -12.125107765197754
    4. '(' → logprob: -12.875107765197754
    5. '(sys' → logprob: -13.000107765197754
    6. ' (' → logprob: -14.000107765197754
    7. '=input' → logprob: -14.750107765197754
    8. ',input' → logprob: -15.250107765197754
    9. ' input' → logprob: -15.750107765197754
    10. '(
' → logprob: -17.87510871887207

Token 181: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0032149034086614847
    2. '()' → logprob: -5.7532148361206055
    3. '())
' → logprob: -10.628214836120605
    4. ')' → logprob: -11.753214836120605
    5. ' ())' → logprob: -13.378214836120605
    6. '())

' → logprob: -13.628214836120605
    7. '().' → logprob: -13.878214836120605
    8. '(' → logprob: -14.378214836120605
    9. '()
' → logprob: -15.003214836120605
    10. '();)' → logprob: -15.753214836120605

Token 182: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '<|end|>' → logprob: -16.250179290771484
    4. '```' → logprob: -17.625179290771484
    5. '   ' → logprob: -19.000179290771484
    6. '2' → logprob: -19.250179290771484
    7. '0' → logprob: -19.250179290771484
    8. '...' → logprob: -19.500179290771484
    9. '[' → logprob: -19.500179290771484
    10. 'i' → logprob: -19.875179290771484

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -14.875001907348633
    4. '[' → logprob: -17.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. '0' → logprob: -19.375001907348633
    7. '{' → logprob: -19.375001907348633
    8. '...' → logprob: -20.000001907348633
    9. 'i' → logprob: -20.250001907348633
    10. '(' → logprob: -20.375001907348633

Token 185: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0163682699203491
    2. '       ' → logprob: -1.0163682699203491
    3. '<|end|>' → logprob: -1.3913682699203491
    4. '   ' → logprob: -3.7663683891296387
    5. '        
' → logprob: -7.141368389129639
    6. '<|end|>' → logprob: -7.391368389129639
    7. ' ' → logprob: -7.766368389129639
    8. '    
' → logprob: -7.891368389129639
    9. ' 
' → logprob: -8.14136791229248
    10. '  
' → logprob: -8.14136791229248

Token 187: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.0034271120093762875
    2. 'if' → logprob: -6.128427028656006
    3. ' F' → logprob: -6.878427028656006
    4. ' if' → logprob: -9.878427505493164
    5. 'for' → logprob: -9.878427505493164
    6. '   ' → logprob: -10.378427505493164
    7. '       ' → logprob: -10.378427505493164
    8. 'P' → logprob: -12.128427505493164
    9. 'temp' → logprob: -12.503427505493164
    10. 'a' → logprob: -12.503427505493164

Token 188: '[P' (ID: 132164)
  Prédit: '[P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.08193205296993256
    2. '[i' → logprob: -2.5819320678710938
    3. '[F' → logprob: -6.331932067871094
    4. '[' → logprob: -6.706932067871094
    5. '[N' → logprob: -10.581932067871094
    6. '[I' → logprob: -12.581932067871094
    7. '[p' → logprob: -13.206932067871094
    8. ' [' → logprob: -14.206932067871094
    9. '```' → logprob: -14.331932067871094
    10. 'P' → logprob: -14.456932067871094

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002121353754773736
    2. '=' → logprob: -6.877121448516846
    3. ']=' → logprob: -6.877121448516846
    4. ')' → logprob: -10.502120971679688
    5. ' ]' → logprob: -11.252120971679688
    6. ' =' → logprob: -11.502120971679688
    7. ']+=' → logprob: -12.377120971679688
    8. ',' → logprob: -14.252120971679688
    9. '],' → logprob: -14.877120971679688
    10. '[' → logprob: -15.502120971679688

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06287797540426254
    2. ' =' → logprob: -2.812877893447876
    3. '+=' → logprob: -7.312878131866455
    4. ' +=' → logprob: -8.937877655029297
    5. ')' → logprob: -10.312877655029297
    6. '=True' → logprob: -10.437877655029297
    7. '<|end|>' → logprob: -11.312877655029297
    8. ')=' → logprob: -11.437877655029297
    9. '=int' → logprob: -12.812877655029297
    10. '=i' → logprob: -12.812877655029297

Token 191: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002888682356569916
    2. '1' → logprob: -8.750288963317871
    3. ' i' → logprob: -9.375288963317871
    4. 'True' → logprob: -10.625288963317871
    5. ''i' → logprob: -12.000288963317871
    6. 'str' → logprob: -12.500288963317871
    7. '0' → logprob: -12.875288963317871
    8. '(i' → logprob: -13.375288963317871
    9. 'P' → logprob: -13.375288963317871
    10. 'p' → logprob: -13.750288963317871

Token 192: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03188372775912285
    2. '<|end|>' → logprob: -3.531883716583252
    3. ')' → logprob: -6.906883716583252
    4. '    
' → logprob: -8.28188419342041
    5. 'for' → logprob: -8.28188419342041
    6. ' for' → logprob: -8.53188419342041
    7. '```' → logprob: -8.53188419342041
    8. '#' → logprob: -9.65688419342041
    9. '
' → logprob: -10.15688419342041
    10. '[' → logprob: -11.03188419342041

Token 194: ' res' (ID: 694)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.29210835695266724
    2. 'M' → logprob: -2.2921082973480225
    3. '   ' → logprob: -3.0421082973480225
    4. 'MOD' → logprob: -3.9171082973480225
    5. ' mod' → logprob: -4.042108535766602
    6. 'fact' → logprob: -4.667108535766602
    7. 'for' → logprob: -4.792108535766602
    8. 'F' → logprob: -4.917108535766602
    9. ' M' → logprob: -5.292108535766602
    10. 'dp' → logprob: -5.542108535766602

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017371822614222765
    2. '=' → logprob: -6.376737117767334
    3. 's' → logprob: -10.751737594604492
    4. '[' → logprob: -12.751737594604492
    5. ' ' → logprob: -13.001737594604492
    6. ',' → logprob: -13.626737594604492
    7. ')' → logprob: -14.001737594604492
    8. ' +=' → logprob: -14.126737594604492
    9. '_' → logprob: -14.501737594604492
    10. 'ult' → logprob: -14.501737594604492

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5997426509857178
    2. ' ' → logprob: -0.8497426509857178
    3. ' []' → logprob: -4.849742889404297
    4. '1' → logprob: -5.349742889404297
    5. ' [' → logprob: -5.724742889404297
    6. '[]' → logprob: -5.974742889404297
    7. '"' → logprob: -6.474742889404297
    8. '[' → logprob: -6.599742889404297
    9. ' N' → logprob: -6.724742889404297
    10. ' "' → logprob: -7.974742889404297

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05604039505124092
    2. '1' → logprob: -3.5560402870178223
    3. '[' → logprob: -4.306040287017822
    4. '[]' → logprob: -4.806040287017822
    5. '[N' → logprob: -6.681040287017822
    6. 'N' → logprob: -6.806040287017822
    7. '[-' → logprob: -8.05604076385498
    8. '-' → logprob: -8.18104076385498
    9. '(' → logprob: -8.43104076385498
    10. '[]
' → logprob: -8.43104076385498

Token 198: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7605339884757996
    2. '<|end|>' → logprob: -1.1355340480804443
    3. '
' → logprob: -1.7605340480804443
    4. '    
' → logprob: -3.7605340480804443
    5. ' ' → logprob: -5.635533809661865
    6. '<|end|>' → logprob: -5.885533809661865
    7. ' for' → logprob: -6.135533809661865
    8. ' 
' → logprob: -6.260533809661865
    9. '    ' → logprob: -6.385533809661865
    10. ')' → logprob: -7.510533809661865

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03252055495977402
    2. '<|end|>' → logprob: -4.032520771026611
    3. '
' → logprob: -5.157520771026611
    4. ' for' → logprob: -6.032520771026611
    5. '    ' → logprob: -6.782520771026611
    6. '    
' → logprob: -6.907520771026611
    7. ' mod' → logprob: -7.032520771026611
    8. ',' → logprob: -7.407520771026611
    9. ')' → logprob: -7.907520771026611
    10. '+' → logprob: -8.282520294189453

Token 200: ' tmp' (ID: 8919)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1892096847295761
    2. 'for' → logprob: -1.8142096996307373
    3. ' for' → logprob: -5.814209461212158
    4. ' mod' → logprob: -6.189209461212158
    5. 'factor' → logprob: -6.314209461212158
    6. 'fact' → logprob: -7.564209461212158
    7. 'MOD' → logprob: -7.814209461212158
    8. 'res' → logprob: -8.189209938049316
    9. 'N' → logprob: -8.189209938049316
    10. 'pow' → logprob: -8.314209938049316

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03043503127992153
    2. '=' → logprob: -3.530435085296631
    3. '_' → logprob: -8.030434608459473
    4. ',' → logprob: -9.405434608459473
    5. 'for' → logprob: -9.530434608459473
    6. ' ' → logprob: -10.030434608459473
    7. '[' → logprob: -10.280434608459473
    8. ' +=' → logprob: -10.780434608459473
    9. ' ,' → logprob: -11.280434608459473
    10. 'res' → logprob: -11.655434608459473

Token 202: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5781015753746033
    2. '1' → logprob: -1.078101634979248
    3. ' ' → logprob: -2.828101634979248
    4. '[' → logprob: -4.328101634979248
    5. 'N' → logprob: -4.828101634979248
    6. '[N' → logprob: -4.828101634979248
    7. 'F' → logprob: -5.828101634979248
    8. ' [' → logprob: -5.953101634979248
    9. '[]' → logprob: -6.078101634979248
    10. ' N' → logprob: -6.703101634979248

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3900766968727112
    2. '1' → logprob: -1.2650766372680664
    3. '[' → logprob: -3.8900766372680664
    4. '[]' → logprob: -5.265076637268066
    5. 'N' → logprob: -5.390076637268066
    6. '-' → logprob: -5.765076637268066
    7. 'F' → logprob: -6.015076637268066
    8. '[N' → logprob: -6.015076637268066
    9. '{}' → logprob: -6.765076637268066
    10. '{' → logprob: -7.765076637268066

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8039882183074951
    2. '   ' → logprob: -1.0539882183074951
    3. '<|end|>' → logprob: -1.6789882183074951
    4. '    
' → logprob: -5.553988456726074
    5. ' for' → logprob: -5.553988456726074
    6. '\n' → logprob: -6.428988456726074
    7. ' ' → logprob: -6.428988456726074
    8. ' 
' → logprob: -6.678988456726074
    9. '  
' → logprob: -6.928988456726074
    10. 'for' → logprob: -7.303988456726074

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005866459105163813
    2. ' for' → logprob: -5.505866527557373
    3. 'for' → logprob: -7.130866527557373
    4. '
' → logprob: -7.255866527557373
    5. '    
' → logprob: -9.005866050720215
    6. ',' → logprob: -10.005866050720215
    7. '<|end|>' → logprob: -10.755866050720215
    8. ')' → logprob: -11.005866050720215
    9. '	for' → logprob: -11.130866050720215
    10. '    ' → logprob: -11.380866050720215

Token 206: ' pre' (ID: 876)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4827894866466522
    2. ' for' → logprob: -0.9827895164489746
    3. '   ' → logprob: -4.982789516448975
    4. 'mod' → logprob: -8.107789039611816
    5. 'left' → logprob: -8.357789039611816
    6. 'prev' → logprob: -8.357789039611816
    7. 'l' → logprob: -8.607789039611816
    8. 'max' → logprob: -8.982789039611816
    9. 'i' → logprob: -8.982789039611816
    10. ' mod' → logprob: -9.857789039611816

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07390258461236954
    2. '=' → logprob: -3.4489026069641113
    3. 'v' → logprob: -4.198902606964111
    4. 'sum' → logprob: -5.073902606964111
    5. '_sum' → logprob: -5.198902606964111
    6. 'f' → logprob: -5.448902606964111
    7. 's' → logprob: -6.323902606964111
    8. '_' → logprob: -7.073902606964111
    9. 'fix' → logprob: -7.323902606964111
    10. 'vious' → logprob: -7.448902606964111

Token 208: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0273850429803133
    2. '0' → logprob: -3.6523849964141846
    3. ' -' → logprob: -8.527384757995605
    4. '-F' → logprob: -8.527384757995605
    5. '[-' → logprob: -8.652384757995605
    6. 'F' → logprob: -9.027384757995605
    7. 'N' → logprob: -9.152384757995605
    8. '-N' → logprob: -9.277384757995605
    9. '1' → logprob: -9.777384757995605
    10. '[' → logprob: -10.527384757995605

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. '2' → logprob: -11.87501335144043
    3. '-' → logprob: -12.50001335144043
    4. ' ' → logprob: -14.37501335144043
    5. 'res' → logprob: -15.00001335144043
    6. '10' → logprob: -15.31251335144043
    7. 'float' → logprob: -15.56251335144043
    8. '   ' → logprob: -15.56251335144043
    9. 'F' → logprob: -15.62501335144043
    10. 'sys' → logprob: -16.18751335144043

Token 210: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22462104260921478
    2. '   ' → logprob: -2.099621057510376
    3. '<|end|>' → logprob: -2.724621057510376
    4. ' for' → logprob: -5.224620819091797
    5. '    
' → logprob: -6.224620819091797
    6. ' 
' → logprob: -6.474620819091797
    7. '  
' → logprob: -6.474620819091797
    8. ' ' → logprob: -7.349620819091797
    9. '<|end|>' → logprob: -7.474620819091797
    10. '\n' → logprob: -7.474620819091797

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.506919801235199
    2. '<|end|>' → logprob: -1.0069198608398438
    3. '
' → logprob: -3.7569198608398438
    4. ' for' → logprob: -5.506919860839844
    5. '    
' → logprob: -6.631919860839844
    6. '<|end|>' → logprob: -7.006919860839844
    7. '  
' → logprob: -7.131919860839844
    8. ' ' → logprob: -7.381919860839844
    9. ' 
' → logprob: -8.131919860839844
    10. '  ' → logprob: -8.256919860839844

Token 212: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2535257637500763
    2. ' for' → logprob: -1.503525733947754
    3. '   ' → logprob: -6.503525733947754
    4. '
' → logprob: -9.753525733947754
    5. '	for' → logprob: -11.253525733947754
    6. ' ' → logprob: -12.128525733947754
    7. '```' → logprob: -12.378525733947754
    8. '<|end|>' → logprob: -12.628525733947754
    9. '    
' → logprob: -13.253525733947754
    10. ',' → logprob: -13.503525733947754

Token 213: ' f' (ID: 285)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4008890390396118
    2. 'i' → logprob: -1.1508890390396118
    3. ' x' → logprob: -5.150888919830322
    4. 'x' → logprob: -5.275888919830322
    5. ' f' → logprob: -7.150888919830322
    6. 'f' → logprob: -7.400888919830322
    7. ' p' → logprob: -8.52588939666748
    8. 'p' → logprob: -8.90088939666748
    9. 'pos' → logprob: -9.02588939666748
    10. ' v' → logprob: -9.02588939666748

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011077998206019402
    2. 'in' → logprob: -4.886077880859375
    3. ' ' → logprob: -5.761077880859375
    4. 'i' → logprob: -9.011077880859375
    5. '_' → logprob: -9.386077880859375
    6. '   ' → logprob: -10.761077880859375
    7. ',' → logprob: -10.886077880859375
    8. 'f' → logprob: -11.511077880859375
    9. '  ' → logprob: -11.511077880859375
    10. 'or' → logprob: -11.636077880859375

Token 215: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0010349531657993793
    2. ' F' → logprob: -6.876034736633301
    3. '(F' → logprob: -14.1260347366333
    4. 'range' → logprob: -14.2510347366333
    5. ' range' → logprob: -14.6260347366333
    6. '   ' → logprob: -14.8760347366333
    7. 'f' → logprob: -17.001035690307617
    8. ' ' → logprob: -17.001035690307617
    9. '[' → logprob: -17.501035690307617
    10. '[F' → logprob: -17.501035690307617

Token 216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010258166119456291
    2. ':
' → logprob: -4.635258197784424
    3. ',' → logprob: -9.010257720947266
    4. ' in' → logprob: -9.385257720947266
    5. ' :' → logprob: -9.635257720947266
    6. '<|end|>' → logprob: -10.010257720947266
    7. '   ' → logprob: -10.385257720947266
    8. '+' → logprob: -10.510257720947266
    9. '):' → logprob: -10.635257720947266
    10. '=' → logprob: -10.635257720947266

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007216249592602253
    2. '<|end|>' → logprob: -5.757216453552246
    3. ',' → logprob: -6.507216453552246
    4. ' if' → logprob: -7.382216453552246
    5. '        
' → logprob: -8.132216453552246
    6. '   ' → logprob: -8.257216453552246
    7. '+' → logprob: -8.257216453552246
    8. ' ' → logprob: -8.507216453552246
    9. '
' → logprob: -9.007216453552246
    10. ' 
' → logprob: -9.007216453552246

Token 218: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4028836190700531
    2. 'if' (adapté à ' if') → logprob: -1.1528836488723755
    3. '       ' → logprob: -4.152883529663086
    4. '+' → logprob: -10.152883529663086
    5. '   ' → logprob: -10.152883529663086
    6. '        ' → logprob: -10.902883529663086
    7. ' res' → logprob: -11.152883529663086
    8. '```' → logprob: -11.777883529663086
    9. ' ' → logprob: -12.152883529663086
    10. ' for' → logprob: -12.277883529663086

Token 219: ' pre' (ID: 876)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5039635896682739
    2. ' pre' → logprob: -1.003963589668274
    3. 'f' → logprob: -4.003963470458984
    4. 'pre' → logprob: -4.503963470458984
    5. ' ' → logprob: -9.753963470458984
    6. ' not' → logprob: -10.378963470458984
    7. ' abs' → logprob: -11.378963470458984
    8. '   ' → logprob: -11.878963470458984
    9. '(pre' → logprob: -11.878963470458984
    10. 'abs' → logprob: -13.066463470458984

Token 220: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08025316148996353
    2. '!=' → logprob: -3.8302531242370605
    3. '==' → logprob: -3.8302531242370605
    4. ' <' → logprob: -4.5802531242370605
    5. '>' → logprob: -4.7052531242370605
    6. ' ==' → logprob: -5.3302531242370605
    7. '>=' → logprob: -5.4552531242370605
    8. ' !=' → logprob: -5.8302531242370605
    9. '==-' → logprob: -6.9552531242370605
    10. '!=-' → logprob: -7.7052531242370605

Token 221: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01262501161545515
    2. ' f' → logprob: -4.387625217437744
    3. '0' → logprob: -9.387624740600586
    4. '=' → logprob: -11.137624740600586
    5. ' ' → logprob: -11.762624740600586
    6. '=f' → logprob: -12.137624740600586
    7. '<|end|>' → logprob: -13.762624740600586
    8. ' =' → logprob: -14.887624740600586
    9. '	f' → logprob: -15.137624740600586
    10. '   ' → logprob: -15.262624740600586

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3485131561756134
    2. ':
' → logprob: -1.723513126373291
    3. ' and' → logprob: -2.723513126373291
    4. '       ' → logprob: -3.098513126373291
    5. '+' → logprob: -6.848513126373291
    6. ' or' → logprob: -6.973513126373291
    7. ' +' → logprob: -7.473513126373291
    8. ' :' → logprob: -7.473513126373291
    9. 'and' → logprob: -7.473513126373291
    10. '           ' → logprob: -7.723513126373291

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40221911668777466
    2. '       ' → logprob: -1.1522190570831299
    3. ' pre' → logprob: -4.777219295501709
    4. 'pre' → logprob: -5.027219295501709
    5. '               ' → logprob: -9.77721881866455
    6. '+' → logprob: -10.27721881866455
    7. '	       ' → logprob: -10.52721881866455
    8. '```' → logprob: -10.52721881866455
    9. ' +' → logprob: -10.90221881866455
    10. '   ' → logprob: -10.90221881866455

Token 224: ' tmp' (ID: 8919)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.6013231873512268
    2. '           ' → logprob: -0.8513231873512268
    3. 'tmp' (adapté à ' tmp') → logprob: -4.351323127746582
    4. ' pre' → logprob: -5.226323127746582
    5. 'res' → logprob: -5.726323127746582
    6. '               ' → logprob: -6.601323127746582
    7. '
' → logprob: -6.726323127746582
    8. '       ' → logprob: -7.476323127746582
    9. ' tmp' → logprob: -8.851323127746582
    10. ' res' → logprob: -8.976323127746582

Token 225: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7001105546951294
    2. '+=' → logprob: -0.7001105546951294
    3. '=' → logprob: -5.45011043548584
    4. ' =' → logprob: -5.95011043548584
    5. '+' → logprob: -10.32511043548584
    6. ']+=' → logprob: -13.20011043548584
    7. ' +' → logprob: -14.20011043548584
    8. '   ' → logprob: -14.45011043548584
    9. ' ' → logprob: -14.57511043548584
    10. ' ' → logprob: -14.70011043548584

Token 226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015093892579898238
    2. ' ' → logprob: -6.501509189605713
    3. 'f' → logprob: -12.126509666442871
    4. ' f' → logprob: -13.626509666442871
    5. '0' → logprob: -16.001508712768555
    6. '   ' → logprob: -16.251508712768555
    7. '(' → logprob: -16.501508712768555
    8. '2' → logprob: -16.751508712768555
    9. '
' → logprob: -17.501508712768555
    10. ' (' → logprob: -17.501508712768555

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012058269931003451
    2. 'f' → logprob: -6.751205921173096
    3. ' ' → logprob: -11.376205444335938
    4. '(f' → logprob: -11.751205444335938
    5. '(' → logprob: -11.876205444335938
    6. 'N' → logprob: -12.751205444335938
    7. 'res' → logprob: -13.126205444335938
    8. '0' → logprob: -13.626205444335938
    9. '(N' → logprob: -14.376205444335938
    10. '2' → logprob: -14.501205444335938

Token 228: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006359235383570194
    2. 'else' → logprob: -6.006359100341797
    3. ' else' → logprob: -6.256359100341797
    4. '
' → logprob: -6.381359100341797
    5. '<|end|>' → logprob: -8.506359100341797
    6. ')' → logprob: -11.131359100341797
    7. '   ' → logprob: -11.756359100341797
    8. '}else' → logprob: -11.756359100341797
    9. '\n' → logprob: -12.506359100341797
    10. '```' → logprob: -12.881359100341797

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032485390547662973
    2. 'else' → logprob: -6.253248691558838
    3. ' else' → logprob: -6.878248691558838
    4. '<|end|>' → logprob: -8.50324821472168
    5. '
' → logprob: -10.37824821472168
    6. ')' → logprob: -11.37824821472168
    7. '           ' → logprob: -11.62824821472168
    8. '   ' → logprob: -11.75324821472168
    9. '}else' → logprob: -12.75324821472168
    10. '        
' → logprob: -13.00324821472168

Token 230: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7253277897834778
    2. ' else' → logprob: -0.9753277897834778
    3. '       ' → logprob: -1.975327730178833
    4. '           ' → logprob: -10.725327491760254
    5. '   ' → logprob: -11.600327491760254
    6. '
' → logprob: -12.600327491760254
    7. '```' → logprob: -12.600327491760254
    8. ' pre' → logprob: -12.725327491760254
    9. '	else' → logprob: -12.850327491760254
    10. 'elif' → logprob: -13.475327491760254

Token 231: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07288804650306702
    2. ':
' → logprob: -3.197888135910034
    3. '       ' → logprob: -4.322887897491455
    4. ':' → logprob: -4.947887897491455
    5. '
' → logprob: -5.072887897491455
    6. ',' → logprob: -6.697887897491455
    7. '               ' → logprob: -7.322887897491455
    8. '   ' → logprob: -8.822888374328613
    9. '          ' → logprob: -9.197888374328613
    10. '```' → logprob: -9.197888374328613

Token 232: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8070292472839355
    2. ' tmp' → logprob: -1.4320292472839355
    3. 'tmp' → logprob: -1.6820292472839355
    4. '           ' → logprob: -2.0570292472839355
    5. ' res' → logprob: -7.6820292472839355
    6. '```' → logprob: -8.182029724121094
    7. 'res' → logprob: -8.932029724121094
    8. '   ' → logprob: -9.182029724121094
    9. '               ' → logprob: -10.057029724121094
    10. '	tmp' → logprob: -10.057029724121094

Token 233: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.005517969373613596
    2. 'if' → logprob: -5.505517959594727
    3. '           ' → logprob: -7.255517959594727
    4. '   ' → logprob: -8.005517959594727
    5. ' res' → logprob: -8.505517959594727
    6. '       ' → logprob: -9.130517959594727
    7. 'tmp' → logprob: -9.880517959594727
    8. '```' → logprob: -11.630517959594727
    9. ' if' → logprob: -12.005517959594727
    10. '
' → logprob: -12.130517959594727

Token 234: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006765460595488548
    2. '+=' → logprob: -5.006765365600586
    3. ' =' → logprob: -10.131765365600586
    4. '=' → logprob: -12.381765365600586
    5. '+' → logprob: -13.006765365600586
    6. ' ' → logprob: -13.756765365600586
    7. ' -=' → logprob: -13.881765365600586
    8. ' +' → logprob: -14.006765365600586
    9. '    ' → logprob: -15.381765365600586
    10. ']+=' → logprob: -16.006765365600586

Token 235: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6109336614608765
    2. ' max' → logprob: -0.8609336614608765
    3. 'tmp' → logprob: -3.985933780670166
    4. ' tmp' → logprob: -4.610933780670166
    5. 'res' → logprob: -5.485933780670166
    6. ' res' → logprob: -6.735933780670166
    7. '(max' → logprob: -7.985933780670166
    8. '(tmp' → logprob: -9.610933303833008
    9. ' (' → logprob: -10.110933303833008
    10. '(res' → logprob: -11.360933303833008

Token 236: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.098748053773306e-05
    2. '(' → logprob: -9.75006103515625
    3. 'res' → logprob: -13.12506103515625
    4. '(tmp' → logprob: -14.62506103515625
    5. ' (' → logprob: -16.25006103515625
    6. '(
' → logprob: -17.87506103515625
    7. ',res' → logprob: -18.00006103515625
    8. '	res' → logprob: -18.75006103515625
    9. '=res' → logprob: -19.12506103515625
    10. ' res' → logprob: -19.37506103515625

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00764223700389266
    2. ',tmp' → logprob: -5.1326422691345215
    3. ' ,' → logprob: -6.3826422691345215
    4. ',res' → logprob: -11.757641792297363
    5. '(tmp' → logprob: -12.382641792297363
    6. 'tmp' → logprob: -12.632641792297363
    7. ',
' → logprob: -12.757641792297363
    8. ',temp' → logprob: -14.257641792297363
    9. ',t' → logprob: -14.757641792297363
    10. ' tmp' → logprob: -14.757641792297363

Token 238: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.12693262100219727
    2. 'tmp' → logprob: -2.1269326210021973
    3. '/tmp' → logprob: -13.501932144165039
    4. '	tmp' → logprob: -13.876932144165039
    5. '(tmp' → logprob: -14.001932144165039
    6. '$tmp' → logprob: -14.376932144165039
    7. '[tmp' → logprob: -15.126932144165039
    8. ',tmp' → logprob: -15.251932144165039
    9. '           ' → logprob: -15.751932144165039
    10. '_tmp' → logprob: -17.25193214416504

Token 239: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25368839502334595
    2. ')' → logprob: -1.5036883354187012
    3. ' )
' → logprob: -6.628688335418701
    4. '           ' → logprob: -8.75368881225586
    5. '       ' → logprob: -8.87868881225586
    6. ' )' → logprob: -9.50368881225586
    7. ')

' → logprob: -10.87868881225586
    8. ')
' → logprob: -11.25368881225586
    9. '+' → logprob: -11.62868881225586
    10. '   ' → logprob: -11.75368881225586

Token 240: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6329556107521057
    2. '           ' → logprob: -0.8829556107521057
    3. '\n' → logprob: -4.007955551147461
    4. ' 
' → logprob: -4.132955551147461
    5. '```' → logprob: -4.382955551147461
    6. '        
' → logprob: -6.382955551147461
    7. '   ' → logprob: -6.507955551147461
    8. '
' → logprob: -6.882955551147461
    9. '``' → logprob: -6.882955551147461
    10. '            
' → logprob: -7.382955551147461

Token 241: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0006963504129089415
    2. ' tmp' → logprob: -7.750696182250977
    3. '           ' → logprob: -8.250696182250977
    4. '   ' → logprob: -13.375696182250977
    5. '       ' → logprob: -13.500696182250977
    6. '	tmp' → logprob: -13.875696182250977
    7. '               ' → logprob: -16.000696182250977
    8. ' ' → logprob: -16.125696182250977
    9. '/tmp' → logprob: -16.375696182250977
    10. '(tmp' → logprob: -16.500696182250977

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '＝' → logprob: -17.27975082397461
    4. ' ' → logprob: -18.52975082397461
    5. '=
' → logprob: -18.77975082397461
    6. ',' → logprob: -18.77975082397461
    7. '.=' → logprob: -19.02975082397461
    8. '=

' → logprob: -19.65475082397461
    9. '=int' → logprob: -19.90475082397461
    10. ')' → logprob: -20.15475082397461

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '0' → logprob: -18.125001907348633
    5. '  ' → logprob: -22.125001907348633
    6. '2' → logprob: -22.375001907348633
    7. '```' → logprob: -22.625001907348633
    8. '１' → logprob: -22.875001907348633
    9. '<|end|>' → logprob: -23.187501907348633
    10. '۱' → logprob: -23.312501907348633

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '0' → logprob: -18.5
    4. '   ' → logprob: -21.5
    5. '```' → logprob: -22.625
    6. '１' → logprob: -22.875
    7. '2' → logprob: -23.375
    8. '۱' → logprob: -23.5
    9. '' → logprob: -23.75
    10. '१' → logprob: -24.125

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06470446288585663
    2. '
' → logprob: -2.939704418182373
    3. ' 
' → logprob: -5.939704418182373
    4. '        
' → logprob: -6.064704418182373
    5. '   ' → logprob: -6.314704418182373
    6. 'pre' → logprob: -7.064704418182373
    7. '<|end|>' → logprob: -7.189704418182373
    8. ' pre' → logprob: -7.814704418182373
    9. '\n' → logprob: -8.314704895019531
    10. '    
' → logprob: -8.814704895019531

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6478159427642822
    2. 'pre' → logprob: -1.0228159427642822
    3. ' pre' → logprob: -2.6478159427642822
    4. '   ' → logprob: -4.147815704345703
    5. '<|end|>' → logprob: -4.147815704345703
    6. '	pre' → logprob: -5.272815704345703
    7. '
' → logprob: -6.022815704345703
    8. '```' → logprob: -6.022815704345703
    9. '(pre' → logprob: -6.897815704345703
    10. '        
' → logprob: -7.147815704345703

Token 247: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -2.6537622034084052e-05
    2. '       ' → logprob: -11.25002670288086
    3. ' pre' → logprob: -11.87502670288086
    4. '   ' → logprob: -12.00002670288086
    5. '
' → logprob: -15.75002670288086
    6. '	pre' → logprob: -15.87502670288086
    7. '           ' → logprob: -16.87502670288086
    8. 'prev' → logprob: -18.12502670288086
    9. '(pre' → logprob: -18.12502670288086
    10. '```' → logprob: -18.25002670288086

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693041563034058
    2. ' =' → logprob: -2.1269304752349854
    3. '=f' → logprob: -13.001930236816406
    4. '＝' → logprob: -17.126930236816406
    5. ',' → logprob: -17.251930236816406
    6. ' ' → logprob: -17.751930236816406
    7. ')' → logprob: -18.876930236816406
    8. '.=' → logprob: -19.251930236816406
    9. '=
' → logprob: -19.376930236816406
    10. '<' → logprob: -19.501930236816406

Token 249: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002613358374219388
    2. ' f' → logprob: -8.250261306762695
    3. '	f' → logprob: -21.625261306762695
    4. '_f' → logprob: -22.375261306762695
    5. '$f' → logprob: -22.375261306762695
    6. '*f' → logprob: -23.625261306762695
    7. '   ' → logprob: -24.125261306762695
    8. '[f' → logprob: -24.875261306762695
    9. '<f' → logprob: -25.000261306762695
    10. 'ф' → logprob: -25.000261306762695

Token 250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5824569463729858
    2. '
' → logprob: -0.8324569463729858
    3. '<|end|>' → logprob: -5.207457065582275
    4. '    
' → logprob: -7.207457065582275
    5. '  
' → logprob: -9.707456588745117
    6. '
' → logprob: -9.832456588745117
    7. '\n' → logprob: -9.957456588745117
    8. ' 
' → logprob: -10.332456588745117
    9. '```' → logprob: -10.332456588745117
    10. '<|end|>' → logprob: -11.207456588745117

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034699127078056335
    2. '
' → logprob: -3.4096992015838623
    3. '<|end|>' → logprob: -7.159698963165283
    4. '    
' → logprob: -9.034699440002441
    5. ')' → logprob: -10.034699440002441
    6. '\n' → logprob: -10.659699440002441
    7. ' 
' → logprob: -10.659699440002441
    8. '```' → logprob: -10.784699440002441
    9. '       ' → logprob: -11.659699440002441
    10. '  
' → logprob: -11.784699440002441

Token 252: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0017201616428792477
    2. 'if' → logprob: -7.251719951629639
    3. '   ' → logprob: -8.126720428466797
    4. '
' → logprob: -8.251720428466797
    5. 'for' → logprob: -8.376720428466797
    6. ' res' → logprob: -8.626720428466797
    7. '```' → logprob: -11.251720428466797
    8. 'return' → logprob: -11.376720428466797
    9. '#' → logprob: -12.251720428466797
    10. '    
' → logprob: -12.376720428466797

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931551694869995
    2. ' =' → logprob: -0.6931551694869995
    3. '=max' → logprob: -11.818155288696289
    4. '   ' → logprob: -16.06815528869629
    5. 'max' → logprob: -16.06815528869629
    6. '＝' → logprob: -16.94315528869629
    7. '+=' → logprob: -17.31815528869629
    8. ',' → logprob: -17.31815528869629
    9. '>' → logprob: -17.31815528869629
    10. ' ' → logprob: -17.31815528869629

Token 254: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.615255839889869e-05
    2. ' max' → logprob: -9.250096321105957
    3. '(max' → logprob: -20.00009536743164
    4. '	max' → logprob: -20.00009536743164
    5. '   ' → logprob: -22.25009536743164
    6. '=max' → logprob: -22.37509536743164
    7. '[max' → logprob: -22.37509536743164
    8. '_max' → logprob: -23.62509536743164
    9. '```' → logprob: -24.12509536743164
    10. ',max' → logprob: -24.50009536743164

Token 255: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.00000286102295
    3. 'res' → logprob: -13.87500286102295
    4. ' (' → logprob: -17.625003814697266
    5. ',res' → logprob: -17.750003814697266
    6. '```' → logprob: -17.750003814697266
    7. '(
' → logprob: -18.250003814697266
    8. '(max' → logprob: -18.875003814697266
    9. '	res' → logprob: -19.000003814697266
    10. '$res' → logprob: -19.750003814697266

Token 256: ',' (ID: 11)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.433289498090744
    2. ',' → logprob: -1.4332895278930664
    3. ',res' → logprob: -2.1832895278930664
    4. 'res' → logprob: -7.933289527893066
    5. '(' → logprob: -10.183289527893066
    6. ')' → logprob: -10.808289527893066
    7. ' ,' → logprob: -11.808289527893066
    8. '```' → logprob: -13.058289527893066
    9. '   ' → logprob: -13.183289527893066
    10. '),' → logprob: -13.308289527893066

Token 257: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0019291093340143561
    2. ' tmp' → logprob: -6.25192928314209
    3. '(tmp' → logprob: -15.50192928314209
    4. '/tmp' → logprob: -16.251928329467773
    5. '	tmp' → logprob: -16.251928329467773
    6. 'temp' → logprob: -16.376928329467773
    7. '   ' → logprob: -16.376928329467773
    8. '$tmp' → logprob: -17.251928329467773
    9. '[tmp' → logprob: -17.376928329467773
    10. '
' → logprob: -18.001928329467773

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011711137369275093
    2. ')
' → logprob: -4.511711120605469
    3. '   ' → logprob: -7.636711120605469
    4. '<|end|>' → logprob: -9.136711120605469
    5. '
' → logprob: -10.011711120605469
    6. ' )' → logprob: -11.761711120605469
    7. ')

' → logprob: -12.386711120605469
    8. ')return' → logprob: -13.011711120605469
    9. '<|end|>' → logprob: -13.011711120605469
    10. '```' → logprob: -13.136711120605469

Token 259: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06333303451538086
    2. '   ' → logprob: -2.938333034515381
    3. '```' → logprob: -5.063333034515381
    4. '    
' → logprob: -6.938333034515381
    5. '<|end|>' → logprob: -7.188333034515381
    6. '

' → logprob: -9.688333511352539
    7. ' 
' → logprob: -9.938333511352539
    8. '  
' → logprob: -10.063333511352539
    9. '
' → logprob: -10.188333511352539
    10. ' return' → logprob: -10.313333511352539

Token 260: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05815375968813896
    2. '   ' → logprob: -2.9331538677215576
    3. ' print' → logprob: -5.9331536293029785
    4. 'return' → logprob: -8.183154106140137
    5. '```' → logprob: -8.683154106140137
    6. 'res' → logprob: -9.808154106140137
    7. 'pr' → logprob: -10.933154106140137
    8. 'result' → logprob: -10.933154106140137
    9. 'for' → logprob: -11.183154106140137
    10. 'mod' → logprob: -11.558154106140137

Token 261: '(N' (ID: 10564)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.005236360710114241
    2. '(' → logprob: -5.2552361488342285
    3. 'res' → logprob: -13.630236625671387
    4. '()' → logprob: -13.880236625671387
    5. ' (' → logprob: -15.380236625671387
    6. '(
' → logprob: -15.880236625671387
    7. '(max' → logprob: -16.63023567199707
    8. '(result' → logprob: -18.38023567199707
    9. ' res' → logprob: -18.50523567199707
    10. '('' → logprob: -18.75523567199707

Token 262: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3258894085884094
    2. '-' → logprob: -1.3258893489837646
    3. ')' → logprob: -4.450889587402344
    4. ',' → logprob: -7.825889587402344
    5. '-res' → logprob: -7.825889587402344
    6. '   ' → logprob: -10.325889587402344
    7. ' ' → logprob: -11.325889587402344
    8. ' ' → logprob: -11.825889587402344
    9. ' )' → logprob: -12.450889587402344
    10. '+' → logprob: -12.825889587402344

Token 263: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1269282102584839
    2. ' res' → logprob: -2.1269283294677734
    3. '(res' → logprob: -16.376928329467773
    4. '	res' → logprob: -17.376928329467773
    5. ' ' → logprob: -18.251928329467773
    6. ')' → logprob: -18.876928329467773
    7. '_res' → logprob: -19.251928329467773
    8. '   ' → logprob: -19.501928329467773
    9. ' ' → logprob: -19.751928329467773
    10. '
' → logprob: -20.126928329467773

Token 264: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')
' → logprob: -15.125001907348633
    4. '`)' → logprob: -15.625001907348633
    5. ')`' → logprob: -15.875001907348633
    6. '')' → logprob: -16.125001907348633
    7. '")' → logprob: -16.500001907348633
    8. '）' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '))' → logprob: -18.375001907348633

Token 265: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.030745120719075203
    2. ' _' → logprob: -4.030745029449463
    3. ' main' → logprob: -5.155745029449463
    4. '__' → logprob: -5.530745029449463
    5. '_' → logprob: -6.655745029449463
    6. ' ' → logprob: -7.155745029449463
    7. ' ' → logprob: -7.905745029449463
    8. '_main' → logprob: -8.905745506286621
    9. '  ' → logprob: -10.155745506286621
    10. ' ___' → logprob: -10.155745506286621

Token 267: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0031144956592470407
    2. ' __' → logprob: -6.003114700317383
    3. ' ==' → logprob: -7.628114700317383
    4. '==' → logprob: -9.128114700317383
    5. 'name' → logprob: -11.128114700317383
    6. '_' → logprob: -11.628114700317383
    7. '__.' → logprob: -11.628114700317383
    8. '.__' → logprob: -12.503114700317383
    9. '__.__' → logprob: -13.003114700317383
    10. '___' → logprob: -13.378114700317383

Token 268: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.988221684878226e-06
    2. '__.__' → logprob: -12.500006675720215
    3. '==' → logprob: -13.375006675720215
    4. '____' → logprob: -14.375006675720215
    5. '___' → logprob: -14.375006675720215
    6. '_' → logprob: -15.875006675720215
    7. '__
' → logprob: -16.25000762939453
    8. '__.' → logprob: -16.37500762939453
    9. '=="' → logprob: -16.62500762939453
    10. '__["' → logprob: -17.50000762939453

Token 269: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.060447562485933304
    2. '==' → logprob: -2.9354474544525146
    3. ' ==' → logprob: -5.310447692871094
    4. '=="' → logprob: -7.435447692871094
    5. '=='' → logprob: -11.435447692871094
    6. '__.__' → logprob: -12.560447692871094
    7. '___' → logprob: -13.435447692871094
    8. '__["' → logprob: -14.185447692871094
    9. '=' → logprob: -14.185447692871094
    10. '_' → logprob: -14.310447692871094

Token 270: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16023112833499908
    2. ''' → logprob: -1.910231113433838
    3. '__' → logprob: -12.410231590270996
    4. ' "__' → logprob: -13.285231590270996
    5. '"user' → logprob: -14.535231590270996
    6. '`' → logprob: -16.03523063659668
    7. ' '__' → logprob: -16.03523063659668
    8. '"_' → logprob: -16.41023063659668
    9. '"name' → logprob: -17.28523063659668
    10. ''user' → logprob: -17.53523063659668

Token 271: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006822916911914945
    2. '__' → logprob: -7.750682353973389
    3. 'name' → logprob: -9.12568187713623
    4. '"' → logprob: -9.12568187713623
    5. '_main' → logprob: -11.37568187713623
    6. '```' → logprob: -12.12568187713623
    7. ''' → logprob: -12.87568187713623
    8. ' main' → logprob: -13.12568187713623
    9. 'python' → logprob: -13.37568187713623
    10. '__":
' → logprob: -13.50068187713623

Token 272: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.5763607025146484
    2. '__' → logprob: -0.8263607025146484
    3. '__:' → logprob: -8.451360702514648
    4. '__':
' → logprob: -9.326360702514648
    5. '__.' → logprob: -9.326360702514648
    6. '__["' → logprob: -11.576360702514648
    7. '_' → logprob: -11.826360702514648
    8. '__.__' → logprob: -11.951360702514648
    9. '__
' → logprob: -13.826360702514648
    10. '__",' → logprob: -13.826360702514648

Token 273: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10420195758342743
    2. ' main' → logprob: -2.3542020320892334
    3. '   ' → logprob: -6.229201793670654
    4. '	main' → logprob: -6.229201793670654
    5. '_main' → logprob: -10.479202270507812
    6. '__' → logprob: -12.229202270507812
    7. '    
' → logprob: -12.229202270507812
    8. ' ' → logprob: -12.979202270507812
    9. ' ' → logprob: -13.479202270507812
    10. '(main' → logprob: -13.854202270507812

Token 274: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.011047935113310814
    2. ' main' → logprob: -4.511047840118408
    3. '	main' → logprob: -16.13604736328125
    4. '_main' → logprob: -21.13604736328125
    5. '.main' → logprob: -21.13604736328125
    6. '(main' → logprob: -21.38604736328125
    7. '   ' → logprob: -22.51104736328125
    8. 'Main' → logprob: -24.51104736328125
    9. 'mainwindow' → logprob: -25.76104736328125
    10. ' ' → logprob: -25.88604736328125

Token 275: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 273
Tokens correctement prédits (1ère position, stricte): 110
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 40.29%
Précision adaptée (1ère position): 45.05%
Précision (top 10): 87.55%
================================================================================
