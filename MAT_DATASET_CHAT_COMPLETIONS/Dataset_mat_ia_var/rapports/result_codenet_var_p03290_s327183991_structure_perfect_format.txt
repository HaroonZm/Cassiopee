================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

d, g = map(int, input().split())

arr = []

for i in range(d):
    arr.append(list(map(int, input().split())))

ans = 10**10

for i in itertools.product((0, 1), repeat=d):
    score = 0
    num = 0
    index = 0

    for j in range(d):
        if i[j] == 1:
            score += (j + 1) * 100 * arr[j][0] + arr[j][1]
            num += arr[j][0]
        else:
            index = max(j, index)

    if g - score <= 0:
        ans = min(ans, num)
    elif g - score <= (index + 1) * 100 * (arr[index][0] - 1):
        num += -(-(g - score) // (100 * (index + 1)))
        ans = min(ans, num)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'd' (ID: 67)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.310693111619912e-05
    2. '\' → logprob: -11.750042915344238
    3. 'import' → logprob: -11.875042915344238
    4. '(' → logprob: -12.250042915344238
    5. ' as' → logprob: -12.625042915344238
    6. '```' → logprob: -12.625042915344238
    7. 'as' → logprob: -12.750042915344238
    8. ',' → logprob: -12.750042915344238
    9. '\.' → logprob: -13.625042915344238
    10. '.import' → logprob: -14.250042915344238

Token 4: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9448566436767578
    2. 'e' → logprob: -1.1948566436767578
    3. '.' → logprob: -2.319856643676758
    4. 'a' → logprob: -2.319856643676758
    5. 'ata' → logprob: -3.694856643676758
    6. 'ictionary' → logprob: -3.819856643676758
    7. 'ict' → logprob: -4.444856643676758
    8. 'd' → logprob: -4.819856643676758
    9. 'ef' → logprob: -5.069856643676758
    10. '=' → logprob: -5.069856643676758

Token 5: ' g' (ID: 329)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5040842294692993
    2. ' ' → logprob: -2.1290841102600098
    3. ' e' → logprob: -2.5040841102600098
    4. '=' → logprob: -2.5040841102600098
    5. 'e' → logprob: -3.3790841102600098
    6. ' '' → logprob: -3.6290841102600098
    7. 'ata' → logprob: -5.12908411026001
    8. 'r' → logprob: -5.50408411026001
    9. '[' → logprob: -5.62908411026001
    10. ' r' → logprob: -5.75408411026001

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5428224205970764
    2. '=' → logprob: -0.9178224205970764
    3. '.' → logprob: -4.292822360992432
    4. ',' → logprob: -5.792822360992432
    5. ' ' → logprob: -6.167822360992432
    6. '_' → logprob: -8.79282283782959
    7. 'i' → logprob: -8.91782283782959
    8. ')' → logprob: -9.54282283782959
    9. 'a' → logprob: -9.66782283782959
    10. '[' → logprob: -9.66782283782959

Token 7: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9119693040847778
    2. ' itertools' → logprob: -1.1619693040847778
    3. ' {},' → logprob: -1.6619693040847778
    4. 'it' → logprob: -3.9119691848754883
    5. ' [' → logprob: -4.536969184875488
    6. ' [],' → logprob: -4.536969184875488
    7. ' {}' → logprob: -4.661969184875488
    8. ' map' → logprob: -4.786969184875488
    9. '1' → logprob: -5.536969184875488
    10. '10' → logprob: -5.661969184875488

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5393338799476624
    2. '(' → logprob: -1.0393338203430176
    3. '(lambda' → logprob: -3.0393338203430176
    4. '(str' → logprob: -4.289333820343018
    5. 'int' → logprob: -7.289333820343018
    6. '(eval' → logprob: -9.164334297180176
    7. '(
' → logprob: -9.289334297180176
    8. '[int' → logprob: -9.414334297180176
    9. '<|end|>' → logprob: -9.539334297180176
    10. '(list' → logprob: -9.914334297180176

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.35150954127311707
    2. '(' → logprob: -1.4765095710754395
    3. ')' → logprob: -2.8515095710754395
    4. 'input' → logprob: -5.6015095710754395
    5. '(range' → logprob: -6.6015095710754395
    6. '(data' → logprob: -7.1015095710754395
    7. ',' → logprob: -7.3515095710754395
    8. '(str' → logprob: -7.6015095710754395
    9. '(int' → logprob: -7.7265095710754395
    10. '```' → logprob: -8.101509094238281

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519460618495941
    2. ' input' → logprob: -1.5019460916519165
    3. '(input' → logprob: -12.001946449279785
    4. ')' → logprob: -12.501946449279785
    5. ' ' → logprob: -12.751946449279785
    6. ',input' → logprob: -12.751946449279785
    7. '=input' → logprob: -14.751946449279785
    8. '	input' → logprob: -15.251946449279785
    9. ' )' → logprob: -16.12694549560547
    10. '<input' → logprob: -16.62694549560547

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6489015817642212
    2. '()' → logprob: -0.8989015817642212
    3. '().' → logprob: -3.1489014625549316
    4. '('' → logprob: -3.8989014625549316
    5. '(' → logprob: -6.148901462554932
    6. ')' → logprob: -6.273901462554932
    7. '());' → logprob: -6.523901462554932
    8. '("' → logprob: -7.648901462554932
    9. '()))' → logprob: -8.27390193939209
    10. '();)' → logprob: -8.52390193939209

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001190702780149877
    2. 'strip' → logprob: -6.751190662384033
    3. ' split' → logprob: -11.251191139221191
    4. 'rstrip' → logprob: -12.001191139221191
    5. '(split' → logprob: -14.376191139221191
    6. 'read' → logprob: -15.001191139221191
    7. ')' → logprob: -15.501191139221191
    8. 'spl' → logprob: -16.126190185546875
    9. ' strip' → logprob: -16.751190185546875
    10. 'startswith' → logprob: -18.376190185546875

Token 13: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15443675220012665
    2. '())' → logprob: -2.1544368267059326
    3. '))' → logprob: -3.6544368267059326
    4. '()' → logprob: -7.0294365882873535
    5. '()))' → logprob: -8.529437065124512
    6. '`)' → logprob: -10.029437065124512
    7. ')))' → logprob: -10.529437065124512
    8. ')`' → logprob: -10.654437065124512
    9. '(' → logprob: -10.904437065124512
    10. '),' → logprob: -11.279437065124512

Token 14: 'arr' (ID: 1614)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4712708592414856
    2. 'a' → logprob: -1.9712707996368408
    3. 'nums' → logprob: -2.846270799636841
    4. 'n' → logprob: -3.096270799636841
    5. 'numbers' → logprob: -3.221270799636841
    6. 'x' → logprob: -4.47127103805542
    7. 'data' → logprob: -4.59627103805542
    8. 'result' → logprob: -4.97127103805542
    9. 'r' → logprob: -4.97127103805542
    10. 'arr' → logprob: -5.22127103805542

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08418305963277817
    2. '[:]' → logprob: -3.2091829776763916
    3. '.' → logprob: -4.334183216094971
    4. '=' → logprob: -4.459183216094971
    5. ' =' → logprob: -5.459183216094971
    6. '(' → logprob: -5.709183216094971
    7. '[]' → logprob: -6.209183216094971
    8. 's' → logprob: -6.459183216094971
    9. ')' → logprob: -6.834183216094971
    10. '[:' → logprob: -7.209183216094971

Token 16: ' []

' (ID: 32833)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.40504220128059387
    2. '[list' → logprob: -2.2800421714782715
    3. '[' → logprob: -2.5300421714782715
    4. '[]' → logprob: -2.7800421714782715
    5. ' list' → logprob: -2.9050421714782715
    6. '[it' → logprob: -4.5300421714782715
    7. ' [' → logprob: -4.6550421714782715
    8. 'it' → logprob: -5.0300421714782715
    9. ' []' → logprob: -5.9050421714782715
    10. '[int' → logprob: -5.9050421714782715

Token 17: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.372294698550832e-06
    2. ' for' → logprob: -11.625009536743164
    3. '```' → logprob: -15.875009536743164
    4. '[' → logprob: -16.500009536743164
    5. '	for' → logprob: -16.625009536743164
    6. '_' → logprob: -17.125009536743164
    7. 'd' → logprob: -17.750009536743164
    8. 'For' → logprob: -18.250009536743164
    9. 'f' → logprob: -18.750009536743164
    10. '_for' → logprob: -18.875009536743164

Token 18: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6599017977714539
    2. ' i' → logprob: -1.1599018573760986
    3. '_' → logprob: -1.7849018573760986
    4. ' ' → logprob: -6.7849016189575195
    5. 'i' → logprob: -7.4099016189575195
    6. '_i' → logprob: -11.28490161895752
    7. ' ‌' → logprob: -11.78490161895752
    8. ' ' → logprob: -12.53490161895752
    9. '	i' → logprob: -12.90990161895752
    10. ' I' → logprob: -14.03490161895752

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03876812011003494
    2. 'in' → logprob: -3.2887680530548096
    3. ' ' → logprob: -8.03876781463623
    4. 'n' → logprob: -8.16376781463623
    5. '  ' → logprob: -10.53876781463623
    6. ' n' → logprob: -10.53876781463623
    7. 'range' → logprob: -10.91376781463623
    8. ',' → logprob: -11.16376781463623
    9. '	in' → logprob: -11.78876781463623
    10. 'import' → logprob: -12.16376781463623

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014213353395462
    2. ' range' → logprob: -1.7014213800430298
    3. 'd' → logprob: -12.701421737670898
    4. '	range' → logprob: -13.826421737670898
    5. 'it' → logprob: -14.201421737670898
    6. 'rang' → logprob: -14.451421737670898
    7. ' ' → logprob: -14.826421737670898
    8. '(range' → logprob: -14.951421737670898
    9. 'ra' → logprob: -15.076421737670898
    10. 'r' → logprob: -15.201421737670898

Token 21: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.07985801249742508
    2. '(' → logprob: -2.5798580646514893
    3. '(g' → logprob: -6.95485782623291
    4. '(n' → logprob: -12.20485782623291
    5. '(s' → logprob: -12.45485782623291
    6. '(len' → logprob: -13.82985782623291
    7. 'd' → logprob: -14.07985782623291
    8. '(de' → logprob: -14.95485782623291
    9. '(a' → logprob: -15.07985782623291
    10. '(int' → logprob: -15.07985782623291

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006189120467752218
    2. ' ):' → logprob: -8.000618934631348
    3. ')' → logprob: -8.625618934631348
    4. '+' → logprob: -9.750618934631348
    5. '):
' → logprob: -10.875618934631348
    6. ':' → logprob: -10.875618934631348
    7. ',' → logprob: -12.500618934631348
    8. '():' → logprob: -14.375618934631348
    9. '}:' → logprob: -15.000618934631348
    10. ' ' → logprob: -15.000618934631348

Token 23: '   ' (ID: 271)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.4512184262275696
    2. '   ' → logprob: -1.7012183666229248
    3. ' ' → logprob: -2.576218366622925
    4. '    ' → logprob: -3.201218366622925
    5. 'arr' → logprob: -3.451218366622925
    6. '	arr' → logprob: -3.951218366622925
    7. '    
' → logprob: -5.576218605041504
    8. ' input' → logprob: -5.826218605041504
    9. ' 
' → logprob: -5.951218605041504
    10. '     
' → logprob: -6.701218605041504

Token 24: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.08583707362413406
    2. 'arr' (adapté à ' arr') → logprob: -2.5858371257781982
    3. '   ' → logprob: -5.085836887359619
    4. ' data' → logprob: -8.710837364196777
    5. 'data' → logprob: -9.335837364196777
    6. ' row' → logprob: -9.460837364196777
    7. '	arr' → logprob: -9.460837364196777
    8. '    ' → logprob: -9.835837364196777
    9. ' input' → logprob: -10.335837364196777
    10. '```' → logprob: -10.585837364196777

Token 25: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2022171914577484
    2. '.' → logprob: -1.7022172212600708
    3. '.extend' → logprob: -7.202217102050781
    4. ' .' → logprob: -10.202217102050781
    5. '.app' → logprob: -11.952217102050781
    6. '.ap' → logprob: -12.077217102050781
    7. ' =' → logprob: -13.077217102050781
    8. '.=' → logprob: -13.327217102050781
    9. ' +=' → logprob: -13.952217102050781
    10. '=' → logprob: -14.077217102050781

Token 26: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.06488782167434692
    2. '(' → logprob: -2.814887762069702
    3. '([]' → logprob: -6.939888000488281
    4. '([' → logprob: -7.564888000488281
    5. '(int' → logprob: -7.564888000488281
    6. '(tuple' → logprob: -7.564888000488281
    7. 'list' → logprob: -8.064888000488281
    8. '(
' → logprob: -11.189888000488281
    9. '(i' → logprob: -11.314888000488281
    10. '([])
' → logprob: -11.689888000488281

Token 27: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0013378625735640526
    2. '(' → logprob: -6.626338005065918
    3. '(int' → logprob: -12.126338005065918
    4. '(input' → logprob: -12.626338005065918
    5. 'map' → logprob: -13.126338005065918
    6. '(
' → logprob: -15.126338005065918
    7. '(filter' → logprob: -15.501338005065918
    8. '	map' → logprob: -15.876338005065918
    9. '(it' → logprob: -16.0013370513916
    10. '(range' → logprob: -16.0013370513916

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013333676906768233
    2. '(' → logprob: -9.625133514404297
    3. 'int' → logprob: -10.000133514404297
    4. '<int' → logprob: -11.375133514404297
    5. '[int' → logprob: -12.500133514404297
    6. '=int' → logprob: -12.500133514404297
    7. ',int' → logprob: -13.750133514404297
    8. ' int' → logprob: -14.500133514404297
    9. ']int' → logprob: -14.750133514404297
    10. '```' → logprob: -14.875133514404297

Token 29: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5708540081977844
    2. '(input' → logprob: -1.3208539485931396
    3. ',' → logprob: -1.8208539485931396
    4. '(' → logprob: -5.320854187011719
    5. 'input' → logprob: -6.695854187011719
    6. ' input' → logprob: -11.445854187011719
    7. ' ,' → logprob: -11.570854187011719
    8. ' (' → logprob: -12.570854187011719
    9. '```' → logprob: -12.695854187011719
    10. '=input' → logprob: -13.070854187011719

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269419640302658
    2. ' input' → logprob: -2.1269419193267822
    3. '(input' → logprob: -12.126941680908203
    4. ',input' → logprob: -12.751941680908203
    5. '	input' → logprob: -13.376941680908203
    6. ' ' → logprob: -13.626941680908203
    7. 'list' → logprob: -14.251941680908203
    8. '=input' → logprob: -14.376941680908203
    9. '_input' → logprob: -15.001941680908203
    10. '   ' → logprob: -15.001941680908203

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001830410328693688
    2. '()' → logprob: -8.62518310546875
    3. '().__' → logprob: -14.25018310546875
    4. '()))' → logprob: -14.75018310546875
    5. '())))' → logprob: -14.75018310546875
    6. '>().' → logprob: -15.00018310546875
    7. ' ().' → logprob: -15.25018310546875
    8. ')' → logprob: -15.62518310546875
    9. '.' → logprob: -15.62518310546875
    10. '(' → logprob: -15.75018310546875

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.027225754223764e-05
    2. 'strip' → logprob: -9.750060081481934
    3. 'rstrip' → logprob: -13.375060081481934
    4. '(split' → logprob: -16.50006103515625
    5. ' split' → logprob: -16.50006103515625
    6. 'read' → logprob: -16.62506103515625
    7. '.split' → logprob: -19.12506103515625
    8. 'spl' → logprob: -19.37506103515625
    9. '.readline' → logprob: -19.62506103515625
    10. '_split' → logprob: -19.75006103515625

Token 33: '()))' (ID: 16829)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.32089507579803467
    2. '())))' → logprob: -1.5708950757980347
    3. '()))' → logprob: -3.695895195007324
    4. ')' → logprob: -4.445895195007324
    5. '())' → logprob: -4.445895195007324
    6. '))' → logprob: -5.070895195007324
    7. '()' → logprob: -5.195895195007324
    8. '(' → logprob: -5.320895195007324
    9. '))))' → logprob: -6.570895195007324
    10. '())))
' → logprob: -9.570895195007324

Token 34: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47409185767173767
    2. '))' → logprob: -0.9740918874740601
    3. ')))' → logprob: -11.599091529846191
    4. ')
' → logprob: -12.974091529846191
    5. '))
' → logprob: -13.974091529846191
    6. '[' → logprob: -14.599091529846191
    7. '])' → logprob: -14.974091529846191
    8. ')\' → logprob: -15.349091529846191
    9. ' ))' → logprob: -15.474091529846191
    10. '   ' → logprob: -15.474091529846191

Token 35: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28345972299575806
    2. 'max' → logprob: -1.7834596633911133
    3. 'm' → logprob: -3.9084596633911133
    4. 'result' → logprob: -4.158459663391113
    5. 'c' → logprob: -5.158459663391113
    6. 's' → logprob: -5.533459663391113
    7. 'r' → logprob: -5.533459663391113
    8. '```' → logprob: -5.783459663391113
    9. 'a' → logprob: -5.908459663391113
    10. 'best' → logprob: -6.158459663391113

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13891540467739105
    2. '=' → logprob: -2.3889153003692627
    3. '_' → logprob: -3.5139153003692627
    4. '[:]' → logprob: -5.263915538787842
    5. '[' → logprob: -7.263915538787842
    6. ' +=' → logprob: -7.763915538787842
    7. '(' → logprob: -8.013915061950684
    8. '_space' → logprob: -8.263915061950684
    9. '=[]' → logprob: -8.388915061950684
    10. '[]' → logprob: -8.513915061950684

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6087641716003418
    2. ' float' → logprob: -1.7337641716003418
    3. ' ' → logprob: -2.108764171600342
    4. 'float' → logprob: -2.358764171600342
    5. '-' → logprob: -3.358764171600342
    6. ' -' → logprob: -5.233764171600342
    7. ' list' → logprob: -5.733764171600342
    8. ' max' → logprob: -5.733764171600342
    9. ' itertools' → logprob: -5.858764171600342
    10. '[]' → logprob: -5.983764171600342

Token 38: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3542020916938782
    2. 'float' → logprob: -1.6042020320892334
    3. '-' → logprob: -2.8542020320892334
    4. 'it' → logprob: -4.8542022705078125
    5. 'max' → logprob: -4.8542022705078125
    6. 'list' → logprob: -4.9792022705078125
    7. '[]' → logprob: -5.1042022705078125
    8. '-it' → logprob: -5.3542022705078125
    9. '[' → logprob: -6.8542022705078125
    10. '1' → logprob: -6.9792022705078125

Token 39: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.813025712966919
    2. '0' → logprob: -0.938025712966919
    3. '_' → logprob: -2.938025712966919
    4. ' **' → logprob: -3.063025712966919
    5. '^' → logprob: -4.31302547454834
    6. '*' → logprob: -4.56302547454834
    7. ' ' → logprob: -4.93802547454834
    8. ')' → logprob: -5.06302547454834
    9. '000' → logprob: -5.18802547454834
    10. 'd' → logprob: -5.18802547454834

Token 40: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.01743711531162262
    2. '15' → logprob: -4.767436981201172
    3. '10' → logprob: -5.267436981201172
    4. '6' → logprob: -6.767436981201172
    5. '18' → logprob: -7.142436981201172
    6. '12' → logprob: -7.517436981201172
    7. '8' → logprob: -8.142436981201172
    8. '7' → logprob: -8.392436981201172
    9. '16' → logprob: -8.392436981201172
    10. '5' → logprob: -9.017436981201172

Token 41: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00558211375027895
    2. '
' → logprob: -6.255582332611084
    3. ' for' → logprob: -6.380582332611084
    4. '\n' → logprob: -6.880582332611084
    5. '\' → logprob: -7.255582332611084
    6. '' → logprob: -9.880581855773926
    7. '_' → logprob: -10.880581855773926
    8. '```' → logprob: -11.130581855773926
    9. '<|end|>' → logprob: -11.255581855773926
    10. '#' → logprob: -11.380581855773926

Token 42: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00032473751343786716
    2. ' for' → logprob: -8.125325202941895
    3. 'f' → logprob: -11.375325202941895
    4. '```' → logprob: -11.875325202941895
    5. '\' → logprob: -12.750325202941895
    6. '\n' → logprob: -13.625325202941895
    7. 'a' → logprob: -13.625325202941895
    8. ':' → logprob: -13.750325202941895
    9. '_' → logprob: -14.500325202941895
    10. 'r' → logprob: -15.125325202941895

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011992109008133411
    2. ' _' → logprob: -5.63699197769165
    3. ' g' → logprob: -6.26199197769165
    4. ' ' → logprob: -6.63699197769165
    5. '_' → logprob: -6.88699197769165
    6. ' day' → logprob: -7.01199197769165
    7. ' a' → logprob: -7.63699197769165
    8. ' c' → logprob: -7.76199197769165
    9. ' itertools' → logprob: -8.136992454528809
    10. ' r' → logprob: -8.261992454528809

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05621464177966118
    2. 'in' → logprob: -2.9312145709991455
    3. ' ' → logprob: -6.806214809417725
    4. 'n' → logprob: -9.056214332580566
    5. '  ' → logprob: -10.431214332580566
    6. ',' → logprob: -11.056214332580566
    7. ' i' → logprob: -11.431214332580566
    8. '	in' → logprob: -11.431214332580566
    9. ' n' → logprob: -11.681214332580566
    10. 'range' → logprob: -12.431214332580566

Token 45: ' itertools' (ID: 103178)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0033068740740418434
    2. ' itertools' → logprob: -5.878306865692139
    3. 'range' → logprob: -7.628306865692139
    4. '(range' → logprob: -11.753307342529297
    5. ' xrange' → logprob: -12.378307342529297
    6. '	range' → logprob: -13.503307342529297
    7. ' ' → logprob: -14.503307342529297
    8. ' it' → logprob: -15.378307342529297
    9. '(' → logprob: -15.503307342529297
    10. 'it' → logprob: -15.503307342529297

Token 46: '.product' (ID: 21166)
  Prédit: '.product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -0.7177301645278931
    2. '.' → logprob: -0.9677301645278931
    3. '.com' → logprob: -2.2177300453186035
    4. '.per' → logprob: -3.9677300453186035
    5. '.chain' → logprob: -6.0927300453186035
    6. '.groupby' → logprob: -7.0927300453186035
    7. '.c' → logprob: -7.7177300453186035
    8. ' .' → logprob: -8.717730522155762
    9. '.prod' → logprob: -8.717730522155762
    10. '.arange' → logprob: -9.592730522155762

Token 47: '((' (ID: 2054)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.002070683054625988
    2. '(arr' → logprob: -6.627070903778076
    3. '((' → logprob: -7.627070903778076
    4. '(' → logprob: -9.002070426940918
    5. '([' → logprob: -9.127070426940918
    6. '(r' → logprob: -11.002070426940918
    7. ' (' → logprob: -12.502070426940918
    8. '(list' → logprob: -13.502070426940918
    9. 'range' → logprob: -14.252070426940918
    10. '(iter' → logprob: -14.877070426940918

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04661092907190323
    2. 'range' → logprob: -3.6716108322143555
    3. '1' → logprob: -4.0466108322143555
    4. '[' → logprob: -7.0466108322143555
    5. ' range' → logprob: -7.1716108322143555
    6. ' ' → logprob: -8.046610832214355
    7. 'g' → logprob: -8.921610832214355
    8. '   ' → logprob: -9.421610832214355
    9. '-' → logprob: -9.421610832214355
    10. '*' → logprob: -9.546610832214355

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.186122770188376e-05
    2. '1' → logprob: -9.875091552734375
    3. ' ,' → logprob: -10.125091552734375
    4. ' ' → logprob: -15.500091552734375
    5. ',)' → logprob: -17.250091552734375
    6. ',
' → logprob: -17.375091552734375
    7. ',),' → logprob: -17.750091552734375
    8. ',

' → logprob: -19.000091552734375
    9. '-' → logprob: -19.500091552734375
    10. '，' → logprob: -19.625091552734375

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048593275249004364
    2. ' ' → logprob: -3.048593282699585
    3. '2' → logprob: -13.548593521118164
    4. ',' → logprob: -14.173593521118164
    5. '   ' → logprob: -14.486093521118164
    6. ')' → logprob: -14.861093521118164
    7. '0' → logprob: -14.861093521118164
    8. ' -' → logprob: -14.923593521118164
    9. '9' → logprob: -15.048593521118164
    10. '  ' → logprob: -15.236093521118164

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.073596548754722e-05
    2. ' ' → logprob: -10.12505054473877
    3. '9' → logprob: -12.12505054473877
    4. '2' → logprob: -13.50005054473877
    5. '10' → logprob: -14.12505054473877
    6. 'd' → logprob: -14.50005054473877
    7. 'g' → logprob: -14.62505054473877
    8. '-' → logprob: -14.75005054473877
    9. '4' → logprob: -15.50005054473877
    10. '3' → logprob: -15.62505054473877

Token 52: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0002802855451591313
    2. ')' → logprob: -8.375280380249023
    3. ',),' → logprob: -10.875280380249023
    4. '),(' → logprob: -11.000280380249023
    5. ' ),' → logprob: -11.625280380249023
    6. ',' → logprob: -13.375280380249023
    7. '))' → logprob: -13.875280380249023
    8. '):' → logprob: -14.000280380249023
    9. '   ' → logprob: -15.000280380249023
    10. ')),' → logprob: -15.625280380249023

Token 53: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.005954156629741192
    2. 'repeat' → logprob: -5.130954265594482
    3. ' ' → logprob: -10.880953788757324
    4. ' range' → logprob: -12.755953788757324
    5. ')' → logprob: -13.630953788757324
    6. ' r' → logprob: -14.130953788757324
    7. ' reverse' → logprob: -14.380953788757324
    8. '  ' → logprob: -14.630953788757324
    9. '   ' → logprob: -16.00595474243164
    10. '    ' → logprob: -16.00595474243164

Token 54: '=d' (ID: 56413)
  Prédit: '=d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=d' → logprob: -0.0169697105884552
    2. '=' → logprob: -4.141969680786133
    3. '=g' → logprob: -7.016969680786133
    4. '=len' → logprob: -11.266969680786133
    5. 'd' → logprob: -11.516969680786133
    6. ')' → logprob: -12.266969680786133
    7. ' =' → logprob: -12.391969680786133
    8. ')d' → logprob: -12.766969680786133
    9. '=n' → logprob: -13.766969680786133
    10. ' d' → logprob: -14.016969680786133

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017328945687040687
    2. ')' → logprob: -6.37673282623291
    3. ':' → logprob: -10.62673282623291
    4. '):
' → logprob: -12.62673282623291
    5. ' ):' → logprob: -13.12673282623291
    6. ',' → logprob: -14.87673282623291
    7. '():' → logprob: -15.62673282623291
    8. ')):' → logprob: -15.75173282623291
    9. '}:' → logprob: -16.001733779907227
    10. ']:' → logprob: -16.501733779907227

Token 56: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29008689522743225
    2. '   ' → logprob: -1.5400868654251099
    3. ' :' → logprob: -4.41508674621582
    4. ' ' → logprob: -4.66508674621582
    5. ':
' → logprob: -5.54008674621582
    6. '    
' → logprob: -5.79008674621582
    7. '    ' → logprob: -6.16508674621582
    8. '[' → logprob: -7.04008674621582
    9. ' :
' → logprob: -7.04008674621582
    10. '):' → logprob: -7.04008674621582

Token 57: ' score' (ID: 8429)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.0795984268188477
    2. 'cost' → logprob: -1.7045984268188477
    3. ' total' → logprob: -2.4545984268188477
    4. ' sum' → logprob: -2.5795984268188477
    5. '   ' → logprob: -2.7045984268188477
    6. 'sum' → logprob: -3.0795984268188477
    7. 'score' (adapté à ' score') → logprob: -3.0795984268188477
    8. ' if' → logprob: -3.0795984268188477
    9. ' score' → logprob: -3.4545984268188477
    10. 'total' → logprob: -4.329598426818848

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013652939349412918
    2. '=' → logprob: -4.513652801513672
    3. ' +=' → logprob: -6.388652801513672
    4. 's' → logprob: -7.263652801513672
    5. ' ' → logprob: -9.013652801513672
    6. '_' → logprob: -9.638652801513672
    7. '_sum' → logprob: -11.763652801513672
    8. '+=' → logprob: -11.888652801513672
    9. 'sum' → logprob: -12.388652801513672
    10. '_space' → logprob: -13.013652801513672

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029828468337655067
    2. ' ' → logprob: -3.5298285484313965
    3. '   ' → logprob: -10.404828071594238
    4. '1' → logprob: -11.029828071594238
    5. 'sum' → logprob: -11.154828071594238
    6. ' sum' → logprob: -12.279828071594238
    7. '  ' → logprob: -12.842328071594238
    8. '10' → logprob: -13.467328071594238
    9. '    ' → logprob: -13.467328071594238
    10. '[]' → logprob: -13.717328071594238

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. 'sum' → logprob: -8.750296592712402
    3. '1' → logprob: -9.375296592712402
    4. ' ' → logprob: -10.750296592712402
    5. '[' → logprob: -11.250296592712402
    6. '100' → logprob: -12.125296592712402
    7. '10' → logprob: -12.500296592712402
    8. '[]' → logprob: -12.875296592712402
    9. '-' → logprob: -13.125296592712402
    10. 'g' → logprob: -13.625296592712402

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23445557057857513
    2. '<|end|>' → logprob: -1.8594555854797363
    3. '   ' → logprob: -3.7344555854797363
    4. '    
' → logprob: -4.484455585479736
    5. '    ' → logprob: -5.109455585479736
    6. ' ' → logprob: -5.484455585479736
    7. ' 
' → logprob: -5.984455585479736
    8. '<|end|>' → logprob: -6.984455585479736
    9. ',' → logprob: -7.359455585479736
    10. ' for' → logprob: -7.359455585479736

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7569560408592224
    2. '
' → logprob: -1.3819561004638672
    3. '<|end|>' → logprob: -2.006956100463867
    4. ' ' → logprob: -2.756956100463867
    5. '    
' → logprob: -3.381956100463867
    6. '    ' → logprob: -3.881956100463867
    7. ' 
' → logprob: -4.131956100463867
    8. ' for' → logprob: -6.381956100463867
    9. '  ' → logprob: -6.381956100463867
    10. ',' → logprob: -6.506956100463867

Token 63: ' num' (ID: 2269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6286104321479797
    2. 'cost' → logprob: -1.878610372543335
    3. 'for' → logprob: -2.253610372543335
    4. ' for' → logprob: -2.378610372543335
    5. ' cost' → logprob: -3.003610372543335
    6. '    
' → logprob: -4.878610610961914
    7. 'count' → logprob: -4.878610610961914
    8. 'time' → logprob: -5.503610610961914
    9. '\n' → logprob: -5.628610610961914
    10. 'score' → logprob: -5.753610610961914

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0798687934875488
    2. '_' → logprob: -1.3298687934875488
    3. '=' → logprob: -1.5798687934875488
    4. '_s' → logprob: -2.454868793487549
    5. '_selected' → logprob: -3.829868793487549
    6. '_b' → logprob: -4.579868793487549
    7. '_completed' → logprob: -4.704868793487549
    8. '_books' → logprob: -4.829868793487549
    9. 's' → logprob: -4.954868793487549
    10. '_items' → logprob: -4.954868793487549

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07988079637289047
    2. ' ' → logprob: -2.579880714416504
    3. 'sum' → logprob: -7.454880714416504
    4. ' sum' → logprob: -8.204880714416504
    5. 'g' → logprob: -10.329880714416504
    6. ' i' → logprob: -10.704880714416504
    7. 'i' → logprob: -11.329880714416504
    8. ' g' → logprob: -11.454880714416504
    9. '[' → logprob: -11.579880714416504
    10. 'len' → logprob: -11.829880714416504

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003561823396012187
    2. 'sum' → logprob: -5.753561973571777
    3. ' ' → logprob: -9.003561973571777
    4. 'i' → logprob: -9.503561973571777
    5. 'g' → logprob: -9.753561973571777
    6. 'len' → logprob: -9.878561973571777
    7. 'bin' → logprob: -11.003561973571777
    8. '[' → logprob: -11.128561973571777
    9. '[]' → logprob: -11.253561973571777
    10. 'd' → logprob: -11.753561973571777

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17438124120235443
    2. '<|end|>' → logprob: -2.4243812561035156
    3. '   ' → logprob: -2.7993812561035156
    4. '\n' → logprob: -5.299381256103516
    5. '    
' → logprob: -6.299381256103516
    6. ' for' → logprob: -7.174381256103516
    7. ' ' → logprob: -7.424381256103516
    8. ' 
' → logprob: -7.424381256103516
    9. '<|end|>' → logprob: -7.799381256103516
    10. 'for' → logprob: -7.924381256103516

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15827831625938416
    2. '<|end|>' → logprob: -2.908278226852417
    3. ' ' → logprob: -3.408278226852417
    4. '
' → logprob: -3.783278226852417
    5. '    
' → logprob: -4.033278465270996
    6. ' 
' → logprob: -5.033278465270996
    7. '    ' → logprob: -5.658278465270996
    8. ' for' → logprob: -6.033278465270996
    9. '\n' → logprob: -6.533278465270996
    10. '  ' → logprob: -6.658278465270996

Token 69: ' index' (ID: 3472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43235862255096436
    2. '
' → logprob: -2.182358741760254
    3. ' for' → logprob: -2.182358741760254
    4. '   ' → logprob: -2.432358741760254
    5. '\n' → logprob: -3.432358741760254
    6. '\t' → logprob: -6.432358741760254
    7. '	for' → logprob: -6.432358741760254
    8. '    
' → logprob: -7.557358741760254
    9. '<|end|>' → logprob: -7.807358741760254
    10. 'newline' → logprob: -8.182358741760254

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07042929530143738
    2. '=' → logprob: -2.6954293251037598
    3. 's' → logprob: -8.695428848266602
    4. '_' → logprob: -8.820428848266602
    5. ' ' → logprob: -9.320428848266602
    6. ')' → logprob: -10.195428848266602
    7. '0' → logprob: -11.820428848266602
    8. '_=' → logprob: -11.820428848266602
    9. '<|end|>' → logprob: -12.070428848266602
    10. '(' → logprob: -12.320428848266602

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06291693449020386
    2. ' ' → logprob: -2.8129169940948486
    3. '-' → logprob: -7.6879167556762695
    4. ' -' → logprob: -8.06291675567627
    5. '[]' → logprob: -9.93791675567627
    6. '[' → logprob: -10.06291675567627
    7. 'd' → logprob: -10.56291675567627
    8. ' []' → logprob: -11.18791675567627
    9. ' [' → logprob: -11.31291675567627
    10. '1' → logprob: -11.56291675567627

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007917720824480057
    2. '-' → logprob: -5.257917881011963
    3. ' ' → logprob: -7.257917881011963
    4. 'i' → logprob: -7.507917881011963
    5. 'd' → logprob: -7.632917881011963
    6. '[]' → logprob: -8.007917404174805
    7. '[' → logprob: -8.507917404174805
    8. '1' → logprob: -9.257917404174805
    9. 'len' → logprob: -9.507917404174805
    10. ' -' → logprob: -9.632917404174805

Token 73: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49290931224823
    2. '<|end|>' → logprob: -1.74290931224823
    3. '
' → logprob: -2.1179094314575195
    4. ' for' → logprob: -3.7429094314575195
    5. 'for' → logprob: -4.2429094314575195
    6. ' ' → logprob: -4.2429094314575195
    7. '    
' → logprob: -4.6179094314575195
    8. ' 
' → logprob: -5.1179094314575195
    9. '<|end|>' → logprob: -5.3679094314575195
    10. '    ' → logprob: -5.4929094314575195

Token 75: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12223401665687561
    2. 'while' → logprob: -2.7472341060638428
    3. '   ' → logprob: -3.2472341060638428
    4. ' for' → logprob: -4.497233867645264
    5. ' while' → logprob: -7.247233867645264
    6. 'if' → logprob: -8.622234344482422
    7. ' ' → logprob: -11.622234344482422
    8. '  ' → logprob: -11.872234344482422
    9. '	for' → logprob: -11.997234344482422
    10. '    ' → logprob: -12.122234344482422

Token 76: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.804730236530304
    2. 'range' → logprob: -1.3047301769256592
    3. 'i' → logprob: -2.554730176925659
    4. 'x' → logprob: -3.179730176925659
    5. 'arr' → logprob: -3.679730176925659
    6. 'a' → logprob: -3.679730176925659
    7. ' range' → logprob: -3.804730176925659
    8. 'idx' → logprob: -3.804730176925659
    9. ' j' → logprob: -4.054730415344238
    10. 'k' → logprob: -4.554730415344238

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1604851931333542
    2. 'in' → logprob: -1.9104851484298706
    3. ',' → logprob: -8.78548526763916
    4. ' ' → logprob: -10.03548526763916
    5. ' ,' → logprob: -11.16048526763916
    6. '   ' → logprob: -11.28548526763916
    7. '    ' → logprob: -11.28548526763916
    8. '	in' → logprob: -11.41048526763916
    9. '(' → logprob: -12.66048526763916
    10. '  ' → logprob: -13.28548526763916

Token 78: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5236352682113647
    2. 'range' → logprob: -0.8986352682113647
    3. 'arr' → logprob: -8.398634910583496
    4. 'i' → logprob: -8.898634910583496
    5. ' i' → logprob: -9.648634910583496
    6. ' arr' → logprob: -10.148634910583496
    7. '(range' → logprob: -11.148634910583496
    8. ')' → logprob: -11.898634910583496
    9. '	range' → logprob: -12.398634910583496
    10. ' ' → logprob: -12.398634910583496

Token 79: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.005503984168171883
    2. 'd' → logprob: -5.255504131317139
    3. '(' → logprob: -8.63050365447998
    4. '(len' → logprob: -9.88050365447998
    5. ' d' → logprob: -10.63050365447998
    6. '   ' → logprob: -11.75550365447998
    7. ' (' → logprob: -12.38050365447998
    8. '(
' → logprob: -14.00550365447998
    9. ')d' → logprob: -14.13050365447998
    10. 'len' → logprob: -14.13050365447998

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006832706276327372
    2. '):
' → logprob: -5.006832599639893
    3. '+' → logprob: -10.00683307647705
    4. ':' → logprob: -10.63183307647705
    5. '   ' → logprob: -10.88183307647705
    6. ')' → logprob: -11.13183307647705
    7. '       ' → logprob: -12.13183307647705
    8. '):
' → logprob: -12.38183307647705
    9. '):

' → logprob: -13.38183307647705
    10. ' ):' → logprob: -13.50683307647705

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023066561669111252
    2. '<|end|>' → logprob: -4.398066520690918
    3. '   ' → logprob: -4.898066520690918
    4. ' if' → logprob: -7.148066520690918
    5. '    ' → logprob: -7.148066520690918
    6. ' ' → logprob: -7.523066520690918
    7. 'if' → logprob: -8.523066520690918
    8. '        
' → logprob: -8.523066520690918
    9. '```' → logprob: -9.398066520690918
    10. '    
' → logprob: -9.648066520690918

Token 82: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21430036425590515
    2. ' if' → logprob: -1.9643003940582275
    3. 'if' (adapté à ' if') → logprob: -3.4643003940582275
    4. '   ' → logprob: -4.089300155639648
    5. '    ' → logprob: -6.464300155639648
    6. ' ' → logprob: -6.964300155639648
    7. '<|end|>' → logprob: -6.964300155639648
    8. '```' → logprob: -8.339300155639648
    9. '        
' → logprob: -8.964300155639648
    10. ' 
' → logprob: -9.214300155639648

Token 83: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00320433103479445
    2. 'i' → logprob: -5.753204345703125
    3. '   ' → logprob: -11.503204345703125
    4. '    ' → logprob: -12.503204345703125
    5. '(i' → logprob: -12.503204345703125
    6. '	i' → logprob: -12.753204345703125
    7. ' ' → logprob: -13.378204345703125
    8. ' not' → logprob: -13.378204345703125
    9. ' (' → logprob: -14.128204345703125
    10. ',i' → logprob: -14.378204345703125

Token 84: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004374638374429196
    2. '[' → logprob: -7.750437259674072
    3. ' [' → logprob: -12.50043773651123
    4. '[i' → logprob: -13.37543773651123
    5. '   ' → logprob: -15.00043773651123
    6. '```' → logprob: -15.12543773651123
    7. 'j' → logprob: -15.75043773651123
    8. '][' → logprob: -16.125436782836914
    9. '\[' → logprob: -16.250436782836914
    10. '[index' → logprob: -16.250436782836914

Token 85: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.3270731270313263
    2. ']' → logprob: -2.077073097229004
    3. '==' → logprob: -2.827073097229004
    4. '):' → logprob: -3.077073097229004
    5. ']:' → logprob: -3.327073097229004
    6. ')' → logprob: -5.077073097229004
    7. ')==' → logprob: -5.702073097229004
    8. ':' → logprob: -6.702073097229004
    9. ' ==' → logprob: -7.077073097229004
    10. '):
' → logprob: -7.952073097229004

Token 86: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.053667228668928146
    2. ':' → logprob: -3.3036673069000244
    3. ' ==' → logprob: -4.178667068481445
    4. '=' → logprob: -9.053667068481445
    5. '1' → logprob: -11.303667068481445
    6. ']==' → logprob: -11.553667068481445
    7. ':
' → logprob: -11.803667068481445
    8. ')==' → logprob: -11.928667068481445
    9. '):' → logprob: -12.428667068481445
    10. '<|end|>' → logprob: -12.428667068481445

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011188586242496967
    2. ' ' → logprob: -4.511188507080078
    3. '0' → logprob: -8.886188507080078
    4. '   ' → logprob: -13.698688507080078
    5. ' ' → logprob: -15.573688507080078
    6. '  ' → logprob: -15.948688507080078
    7. '">' → logprob: -16.573688507080078
    8. '(' → logprob: -16.636188507080078
    9. 'True' → logprob: -16.636188507080078
    10. '>' → logprob: -16.886188507080078

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014096579980105162
    2. ' ' → logprob: -9.500141143798828
    3. '0' → logprob: -9.625141143798828
    4. '   ' → logprob: -17.875141143798828
    5. '１' → logprob: -18.625141143798828
    6. '  ' → logprob: -18.687641143798828
    7. 'True' → logprob: -19.375141143798828
    8. '[' → logprob: -19.562641143798828
    9. '2' → logprob: -19.562641143798828
    10. '(' → logprob: -19.812641143798828

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006886577233672142
    2. ':
' → logprob: -5.0068864822387695
    3. '):' → logprob: -8.88188648223877
    4. ' and' → logprob: -11.38188648223877
    5. '):
' → logprob: -11.63188648223877
    6. ':

' → logprob: -12.88188648223877
    7. ')' → logprob: -13.38188648223877
    8. '<|end|>' → logprob: -13.38188648223877
    9. ' :' → logprob: -13.50688648223877
    10. ':
' → logprob: -13.63188648223877

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3613028824329376
    2. ' score' → logprob: -2.3613028526306152
    3. '       ' → logprob: -2.4863028526306152
    4. 'score' → logprob: -2.9863028526306152
    5. ':' → logprob: -3.6113028526306152
    6. ':
' → logprob: -3.6113028526306152
    7. '   ' → logprob: -5.861302852630615
    8. ' ' → logprob: -6.236302852630615
    9. '	score' → logprob: -6.236302852630615
    10. '<|end|>' → logprob: -6.486302852630615

Token 91: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.14848770201206207
    2. 'score' (adapté à ' score') → logprob: -2.0234878063201904
    3. '           ' → logprob: -5.773487567901611
    4. ' num' → logprob: -7.648487567901611
    5. '	score' → logprob: -7.648487567901611
    6. '   ' → logprob: -7.773487567901611
    7. 'num' → logprob: -8.02348804473877
    8. '               ' → logprob: -8.14848804473877
    9. '
' → logprob: -8.14848804473877
    10. ' ' → logprob: -9.14848804473877

Token 92: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2520222067832947
    2. '+=' → logprob: -1.5020222663879395
    3. ']+=' → logprob: -9.877021789550781
    4. '+' → logprob: -10.377021789550781
    5. ' +' → logprob: -13.127021789550781
    6. '+=(' → logprob: -13.252021789550781
    7. ' ' → logprob: -14.002021789550781
    8. '    ' → logprob: -14.002021789550781
    9. '=' → logprob: -14.127021789550781
    10. '   ' → logprob: -14.127021789550781

Token 93: ' (' (ID: 350)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.20072881877422333
    2. ' arr' → logprob: -1.8257287740707397
    3. ' sum' → logprob: -4.450728893280029
    4. 'sum' → logprob: -4.825728893280029
    5. 'g' → logprob: -8.325728416442871
    6. ' g' → logprob: -8.450728416442871
    7. ' ' → logprob: -8.575728416442871
    8. '	arr' → logprob: -8.950728416442871
    9. '   ' → logprob: -9.325728416442871
    10. '    ' → logprob: -10.388228416442871

Token 94: 'j' (ID: 73)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0058128912933170795
    2. ' arr' → logprob: -5.880813121795654
    3. 'sum' → logprob: -6.130813121795654
    4. '   ' → logprob: -8.005812644958496
    5. 'g' → logprob: -9.130812644958496
    6. ' sum' → logprob: -9.630812644958496
    7. ')' → logprob: -9.880812644958496
    8. '10' → logprob: -10.255812644958496
    9. ' ' → logprob: -10.380812644958496
    10. 'score' → logprob: -10.755812644958496

Token 95: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45036327838897705
    2. ']' → logprob: -1.700363278388977
    3. ' +' → logprob: -2.4503631591796875
    4. ']+' → logprob: -2.7003631591796875
    5. '][' → logprob: -3.9503631591796875
    6. ')' → logprob: -6.2003631591796875
    7. '   ' → logprob: -6.8253631591796875
    8. '][]' → logprob: -7.2003631591796875
    9. ')+' → logprob: -7.4503631591796875
    10. '])' → logprob: -8.075363159179688

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006706207641400397
    2. ' ' → logprob: -7.500670433044434
    3. '2' → logprob: -10.125670433044434
    4. ')' → logprob: -10.125670433044434
    5. '   ' → logprob: -11.188170433044434
    6. '+' → logprob: -12.000670433044434
    7. 'g' → logprob: -13.125670433044434
    8. 's' → logprob: -13.563170433044434
    9. '  ' → logprob: -13.750670433044434
    10. '10' → logprob: -13.875670433044434

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.875031471252441
    3. '2' → logprob: -12.562531471252441
    4. ')' → logprob: -12.750031471252441
    5. '100' → logprob: -13.062531471252441
    6. '10' → logprob: -14.625031471252441
    7. '   ' → logprob: -14.687531471252441
    8. '１' → logprob: -15.062531471252441
    9. '

' → logprob: -15.562531471252441
    10. 'g' → logprob: -15.625031471252441

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03415389358997345
    2. ')*' → logprob: -3.409153938293457
    3. ' )' → logprob: -8.159153938293457
    4. '）' → logprob: -10.034153938293457
    5. ')**' → logprob: -10.159153938293457
    6. ')*(' → logprob: -10.284153938293457
    7. '0' → logprob: -10.409153938293457
    8. '*' → logprob: -11.159153938293457
    9. '   ' → logprob: -11.534153938293457
    10. '*)' → logprob: -12.159153938293457

Token 99: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3342309594154358
    2. ' *' → logprob: -1.584230899810791
    3. 'g' → logprob: -3.709230899810791
    4. '+' → logprob: -4.459230899810791
    5. 'd' → logprob: -4.584230899810791
    6. '*d' → logprob: -4.834230899810791
    7. 'arr' → logprob: -4.959230899810791
    8. '*g' → logprob: -5.334230899810791
    9. ')' → logprob: -5.709230899810791
    10. '0' → logprob: -6.584230899810791

Token 100: ' ' (ID: 220)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.18555963039398193
    2. '100' → logprob: -1.935559630393982
    3. 'arr' → logprob: -3.8105597496032715
    4. ' ' → logprob: -6.6855597496032715
    5. '500' → logprob: -6.8105597496032715
    6. '   ' → logprob: -8.935559272766113
    7. ' g' → logprob: -9.185559272766113
    8. '_g' → logprob: -9.560559272766113
    9. '  ' → logprob: -10.185559272766113
    10. '`' → logprob: -10.310559272766113

Token 101: '100' (ID: 1353)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.044259507209062576
    2. '100' → logprob: -3.169259548187256
    3. 'arr' → logprob: -7.044259548187256
    4. '500' → logprob: -8.419259071350098
    5. '-g' → logprob: -9.919259071350098
    6. '`' → logprob: -10.544259071350098
    7. '_g' → logprob: -10.919259071350098
    8. '10' → logprob: -11.544259071350098
    9. ' ' → logprob: -11.669259071350098
    10. '```' → logprob: -11.669259071350098

Token 102: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16917173564434052
    2. 'arr' → logprob: -2.6691718101501465
    3. '0' → logprob: -4.0441718101501465
    4. '+' → logprob: -4.1691718101501465
    5. ' *' → logprob: -4.5441718101501465
    6. ')' → logprob: -4.6691718101501465
    7. '[arr' → logprob: -5.1691718101501465
    8. '*g' → logprob: -5.1691718101501465
    9. '    ' → logprob: -5.7941718101501465
    10. '   ' → logprob: -5.9191718101501465

Token 103: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.39458340406417847
    2. 'g' → logprob: -1.1445834636688232
    3. '(arr' → logprob: -5.644583225250244
    4. '(g' → logprob: -6.394583225250244
    5. ' arr' → logprob: -7.394583225250244
    6. '100' → logprob: -7.519583225250244
    7. ' g' → logprob: -8.019583702087402
    8. '10' → logprob: -8.144583702087402
    9. '(' → logprob: -8.644583702087402
    10. ' ' → logprob: -9.394583702087402

Token 104: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2519645690917969
    2. '[j' → logprob: -1.5019645690917969
    3. '[index' → logprob: -11.001964569091797
    4. '[' → logprob: -11.126964569091797
    5. '[idx' → logprob: -14.251964569091797
    6. '[g' → logprob: -14.251964569091797
    7. '[s' → logprob: -14.501964569091797
    8. '[d' → logprob: -14.751964569091797
    9. '```' → logprob: -15.126964569091797
    10. '[y' → logprob: -15.501964569091797

Token 105: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25268805027008057
    2. '[' → logprob: -1.5026880502700806
    3. '][-' → logprob: -8.12768840789795
    4. ')[' → logprob: -8.87768840789795
    5. '[-' → logprob: -9.37768840789795
    6. ']' → logprob: -9.37768840789795
    7. ' ][' → logprob: -10.37768840789795
    8. '-' → logprob: -10.62768840789795
    9. ' [' → logprob: -11.12768840789795
    10. '[j' → logprob: -11.25268840789795

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024989673402160406
    2. '1' → logprob: -6.002499103546143
    3. ' ' → logprob: -10.752498626708984
    4. '   ' → logprob: -14.377498626708984
    5. 'g' → logprob: -14.752498626708984
    6. '2' → logprob: -15.252498626708984
    7. '  ' → logprob: -16.439998626708984
    8. '    ' → logprob: -16.877498626708984
    9. '۰' → logprob: -16.877498626708984
    10. ']' → logprob: -17.064998626708984

Token 107: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6171038150787354
    2. '[' → logprob: -0.8671038150787354
    3. ']' → logprob: -3.8671038150787354
    4. '<|end|>' → logprob: -5.242103576660156
    5. '+' → logprob: -5.492103576660156
    6. ' )' → logprob: -5.742103576660156
    7. ' +' → logprob: -6.117103576660156
    8. ' ' → logprob: -6.992103576660156
    9. ')+' → logprob: -7.367103576660156
    10. '0' → logprob: -7.867103576660156

Token 108: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6387141942977905
    2. '+' → logprob: -1.0137141942977905
    3. ' -' → logprob: -2.63871431350708
    4. '           ' → logprob: -3.88871431350708
    5. '-' → logprob: -5.01371431350708
    6. '
' → logprob: -5.63871431350708
    7. ' *' → logprob: -6.38871431350708
    8. '*' → logprob: -6.88871431350708
    9. '0' → logprob: -7.38871431350708
    10. ' ' → logprob: -7.76371431350708

Token 109: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.05169035494327545
    2. ' arr' → logprob: -3.0516903400421143
    3. 'sum' → logprob: -7.051690578460693
    4. 'g' → logprob: -7.801690578460693
    5. '(arr' → logprob: -7.801690578460693
    6. '100' → logprob: -8.176690101623535
    7. ' ' → logprob: -8.301690101623535
    8. ' sum' → logprob: -8.676690101623535
    9. 'score' → logprob: -8.801690101623535
    10. '10' → logprob: -8.801690101623535

Token 110: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.125
    3. '[i' → logprob: -16.25
    4. '```' → logprob: -16.375
    5. '[g' → logprob: -17.0
    6. '[js' → logprob: -17.375
    7. ' [' → logprob: -19.625
    8. '[q' → logprob: -19.875
    9. '[user' → logprob: -20.0
    10. '[s' → logprob: -20.0

Token 111: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005590056534856558
    2. '[j' → logprob: -5.255589962005615
    3. '[' → logprob: -8.255590438842773
    4. ' ][' → logprob: -10.130590438842773
    5. ']' → logprob: -10.380590438842773
    6. '```' → logprob: -12.255590438842773
    7. '1' → logprob: -12.380590438842773
    8. '"][' → logprob: -12.380590438842773
    9. ''][' → logprob: -13.255590438842773
    10. '}[' → logprob: -13.630590438842773

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.329167369287461e-05
    2. '2' → logprob: -9.625093460083008
    3. ' ' → logprob: -10.625093460083008
    4. '0' → logprob: -13.875093460083008
    5. 'g' → logprob: -14.000093460083008
    6. '   ' → logprob: -15.125093460083008
    7. '-' → logprob: -15.250093460083008
    8. '][' → logprob: -15.875093460083008
    9. '

' → logprob: -16.625093460083008
    10. 'd' → logprob: -16.750093460083008

Token 113: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12341473996639252
    2. '<|end|>' → logprob: -2.2484147548675537
    3. ']' → logprob: -5.873414516448975
    4. '       ' → logprob: -6.123414516448975
    5. '
' → logprob: -6.748414516448975
    6. ')
' → logprob: -6.873414516448975
    7. '   ' → logprob: -6.998414516448975
    8. '<|end|>' → logprob: -7.248414516448975
    9. ' ' → logprob: -7.748414516448975
    10. ' )' → logprob: -8.123414993286133

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07449992001056671
    2. '
' → logprob: -3.1994998455047607
    3. 'num' → logprob: -3.6994998455047607
    4. '       ' → logprob: -6.57450008392334
    5. '            
' → logprob: -6.82450008392334
    6. ' num' → logprob: -6.82450008392334
    7. '               ' → logprob: -7.82450008392334
    8. '  
' → logprob: -8.44950008392334
    9. ' 
' → logprob: -8.44950008392334
    10. ' ' → logprob: -8.57450008392334

Token 115: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.007940074428915977
    2. ' num' → logprob: -5.007940292358398
    3. '           ' → logprob: -6.757940292358398
    4. '
' → logprob: -10.882940292358398
    5. '   ' → logprob: -11.632940292358398
    6. 'score' → logprob: -11.632940292358398
    7. '               ' → logprob: -11.882940292358398
    8. ' ' → logprob: -12.257940292358398
    9. '       ' → logprob: -12.757940292358398
    10. ',num' → logprob: -13.132940292358398

Token 116: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931775212287903
    2. '+=' → logprob: -0.6931775212287903
    3. '+' → logprob: -11.068177223205566
    4. '+=(' → logprob: -11.193177223205566
    5. ']+=' → logprob: -14.943177223205566
    6. ' +' → logprob: -14.943177223205566
    7. '=' → logprob: -15.943177223205566
    8. '+="' → logprob: -16.943178176879883
    9. '+='' → logprob: -16.943178176879883
    10. '++' → logprob: -17.193178176879883

Token 117: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.007137189619243145
    2. ' arr' → logprob: -5.257137298583984
    3. 'sum' → logprob: -6.507137298583984
    4. ' ' → logprob: -8.882137298583984
    5. ' sum' → logprob: -9.507137298583984
    6. '100' → logprob: -9.632137298583984
    7. '1' → logprob: -10.257137298583984
    8. '(arr' → logprob: -10.382137298583984
    9. '	arr' → logprob: -10.882137298583984
    10. '   ' → logprob: -11.382137298583984

Token 118: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.125000953674316
    3. '[i' → logprob: -15.375000953674316
    4. '```' → logprob: -16.25
    5. '[js' → logprob: -16.5
    6. '[s' → logprob: -17.875
    7. 'j' → logprob: -18.125
    8. '[g' → logprob: -18.5
    9. '[
' → logprob: -18.625
    10. ' [' → logprob: -19.375

Token 119: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.484132169745862e-05
    2. '[' → logprob: -9.375094413757324
    3. ']' → logprob: -12.500094413757324
    4. ' ][' → logprob: -13.250094413757324
    5. '0' → logprob: -13.375094413757324
    6. '"][' → logprob: -14.125094413757324
    7. '}[' → logprob: -14.250094413757324
    8. '   ' → logprob: -15.125094413757324
    9. '
' → logprob: -15.500094413757324
    10. '1' → logprob: -15.500094413757324

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.856408536899835e-05
    2. '1' → logprob: -10.875028610229492
    3. ' ' → logprob: -11.875028610229492
    4. '2' → logprob: -13.250028610229492
    5. '```' → logprob: -15.875028610229492
    6. '
' → logprob: -16.062528610229492
    7. '   ' → logprob: -16.125028610229492
    8. '[' → logprob: -16.375028610229492
    9. '

' → logprob: -16.812528610229492
    10. ']' → logprob: -16.937528610229492

Token 121: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.939617931842804
    2. '
' → logprob: -1.3146178722381592
    3. '       ' → logprob: -1.3146178722381592
    4. '   ' → logprob: -3.564617872238159
    5. '<|end|>' → logprob: -3.689617872238159
    6. '    
' → logprob: -5.939618110656738
    7. ',' → logprob: -5.939618110656738
    8. '\n' → logprob: -6.064618110656738
    9. '<|end|>' → logprob: -6.939618110656738
    10. '    ' → logprob: -6.939618110656738

Token 123: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8594070672988892
    2. '       ' → logprob: -1.3594070672988892
    3. ' else' → logprob: -1.7344070672988892
    4. '   ' → logprob: -1.9844070672988892
    5. '           ' → logprob: -5.8594069480896
    6. '
' → logprob: -6.9844069480896
    7. 'index' → logprob: -7.1094069480896
    8. '```' → logprob: -8.484407424926758
    9. ' ' → logprob: -8.609407424926758
    10. 'elif' → logprob: -8.859407424926758

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024086877703666687
    2. ':
' → logprob: -3.7740869522094727
    3. 'index' → logprob: -8.649086952209473
    4. '       ' → logprob: -8.774086952209473
    5. ':index' → logprob: -9.024086952209473
    6. '           ' → logprob: -9.274086952209473
    7. '[' → logprob: -9.774086952209473
    8. ' :' → logprob: -10.149086952209473
    9. ' index' → logprob: -10.524086952209473
    10. ' if' → logprob: -10.649086952209473

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31413760781288147
    2. 'index' → logprob: -1.564137578010559
    3. ' index' → logprob: -3.6891376972198486
    4. '       ' → logprob: -3.9391376972198486
    5. 'num' → logprob: -5.3141374588012695
    6. 'score' → logprob: -5.4391374588012695
    7. '   ' → logprob: -5.6891374588012695
    8. ' if' → logprob: -7.3141374588012695
    9. 'if' → logprob: -7.3141374588012695
    10. 'g' → logprob: -7.6891374588012695

Token 126: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.22362364828586578
    2. ' index' → logprob: -2.348623752593994
    3. 'score' → logprob: -2.973623752593994
    4. '           ' → logprob: -3.598623752593994
    5. '   ' → logprob: -5.098623752593994
    6. 'if' → logprob: -5.473623752593994
    7. ' score' → logprob: -5.473623752593994
    8. 'continue' → logprob: -5.723623752593994
    9. ' if' → logprob: -6.473623752593994
    10. ' continue' → logprob: -6.598623752593994

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02391461841762066
    2. ' +=' → logprob: -4.023914813995361
    3. '=' → logprob: -5.273914813995361
    4. '+=' → logprob: -7.398914813995361
    5. ' |=' → logprob: -12.523914337158203
    6. ' ' → logprob: -12.773914337158203
    7. '+' → logprob: -12.773914337158203
    8. ',' → logprob: -13.898914337158203
    9. ' -=' → logprob: -14.523914337158203
    10. ' +' → logprob: -14.898914337158203

Token 128: ' max' (ID: 2999)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009062051773071289
    2. ' j' → logprob: -4.759061813354492
    3. 'max' → logprob: -8.009061813354492
    4. 'd' → logprob: -9.509061813354492
    5. ' max' → logprob: -10.384061813354492
    6. ' d' → logprob: -12.634061813354492
    7. ' ' → logprob: -12.759061813354492
    8. '	j' → logprob: -13.634061813354492
    9. 'i' → logprob: -15.009061813354492
    10. ',j' → logprob: -15.134061813354492

Token 129: '(j' (ID: 4997)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.0298406220972538
    2. 'index' → logprob: -3.5298407077789307
    3. '(j' → logprob: -9.404840469360352
    4. '(' → logprob: -12.029840469360352
    5. 'j' → logprob: -14.529840469360352
    6. '(i' → logprob: -14.779840469360352
    7. ' index' → logprob: -15.154840469360352
    8. '	index' → logprob: -15.654840469360352
    9. ',index' → logprob: -16.02984046936035
    10. '#index' → logprob: -16.40484046936035

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02763044461607933
    2. ',index' → logprob: -4.02763032913208
    3. ' +' → logprob: -5.40263032913208
    4. '+' → logprob: -5.40263032913208
    5. ' ,' → logprob: -8.027630805969238
    6. ')' → logprob: -10.277630805969238
    7. ',j' → logprob: -10.777630805969238
    8. ',
' → logprob: -11.027630805969238
    9. 'index' → logprob: -11.777630805969238
    10. '   ' → logprob: -12.402630805969238

Token 131: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.018155328929424286
    2. ' index' → logprob: -4.018155097961426
    3. '   ' → logprob: -13.143155097961426
    4. '	index' → logprob: -13.768155097961426
    5. '0' → logprob: -14.018155097961426
    6. ' ' → logprob: -14.143155097961426
    7. '#index' → logprob: -15.518155097961426
    8. '  ' → logprob: -15.643155097961426
    9. '
' → logprob: -15.643155097961426
    10. '(index' → logprob: -16.393156051635742

Token 132: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001805377542041242
    2. ')
' → logprob: -9.2501802444458
    3. ' )' → logprob: -9.6251802444458
    4. '<|end|>' → logprob: -11.7501802444458
    5. '   ' → logprob: -12.7501802444458
    6. ')

' → logprob: -13.0001802444458
    7. '+' → logprob: -13.2501802444458
    8. '       ' → logprob: -14.0001802444458
    9. ')}' → logprob: -14.8751802444458
    10. ')**' → logprob: -15.1251802444458

Token 133: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8534062504768372
    2. ' for' → logprob: -1.1034061908721924
    3. '   ' → logprob: -1.9784061908721924
    4. 'if' → logprob: -3.2284061908721924
    5. ' if' → logprob: -3.9784061908721924
    6. '
' → logprob: -4.2284064292907715
    7. '    
' → logprob: -4.6034064292907715
    8. ' 
' → logprob: -4.7284064292907715
    9. ' ' → logprob: -5.4784064292907715
    10. '    ' → logprob: -6.8534064292907715

Token 134: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06856302917003632
    2. 'for' → logprob: -2.8185629844665527
    3. '   ' → logprob: -6.068562984466553
    4. ' if' → logprob: -6.818562984466553
    5. 'else' → logprob: -7.318562984466553
    6. 'rest' → logprob: -7.818562984466553
    7. '#' → logprob: -7.818562984466553
    8. '    
' → logprob: -7.943562984466553
    9. ' for' → logprob: -8.068563461303711
    10. 'score' → logprob: -8.818563461303711

Token 135: ' g' (ID: 329)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.38804757595062256
    2. ' num' → logprob: -1.1380475759506226
    3. 'score' → logprob: -7.138047695159912
    4. ' score' → logprob: -8.263047218322754
    5. ' ans' → logprob: -10.263047218322754
    6. ' ' → logprob: -11.013047218322754
    7. '(num' → logprob: -11.138047218322754
    8. '   ' → logprob: -11.638047218322754
    9. 'g' → logprob: -11.638047218322754
    10. 'ans' → logprob: -11.763047218322754

Token 136: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.39502257108688354
    2. ' >' → logprob: -1.3950226306915283
    3. '<=' → logprob: -3.1450226306915283
    4. '>' → logprob: -3.7700226306915283
    5. ' -' → logprob: -4.770022392272949
    6. ':' → logprob: -6.770022392272949
    7. '-' → logprob: -6.770022392272949
    8. ' in' → logprob: -7.770022392272949
    9. '==' → logprob: -7.895022392272949
    10. ' ==' → logprob: -7.895022392272949

Token 137: ' score' (ID: 8429)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03390282765030861
    2. ' num' → logprob: -3.408902883529663
    3. '0' → logprob: -8.283903121948242
    4. ' ' → logprob: -13.158903121948242
    5. '<num' → logprob: -13.658903121948242
    6. '	num' → logprob: -15.033903121948242
    7. '(num' → logprob: -15.658903121948242
    8. '1' → logprob: -15.658903121948242
    9. 'score' → logprob: -16.283903121948242
    10. ',num' → logprob: -16.283903121948242

Token 138: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4430892765522003
    2. ' <=' → logprob: -1.318089246749878
    3. '>' → logprob: -2.693089246749878
    4. '<=' → logprob: -3.818089246749878
    5. ' ' → logprob: -8.318089485168457
    6. ' >=' → logprob: -8.943089485168457
    7. ' ==' → logprob: -9.443089485168457
    8. ' <' → logprob: -9.443089485168457
    9. '>=' → logprob: -10.193089485168457
    10. '==' → logprob: -10.568089485168457

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011156057938933372
    2. ' ' → logprob: -4.51115608215332
    3. 'arr' → logprob: -9.38615608215332
    4. 'index' → logprob: -11.38615608215332
    5. '100' → logprob: -12.51115608215332
    6. '10' → logprob: -12.76115608215332
    7. '(' → logprob: -13.26115608215332
    8. ' (' → logprob: -13.38615608215332
    9. ' arr' → logprob: -13.88615608215332
    10. ' index' → logprob: -14.13615608215332

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00278776534833014
    2. ' ' → logprob: -6.0027875900268555
    3. 'arr' → logprob: -8.627787590026855
    4. '(' → logprob: -9.502787590026855
    5. '100' → logprob: -10.127787590026855
    6. ' (' → logprob: -12.252787590026855
    7. 'index' → logprob: -12.627787590026855
    8. '10' → logprob: -13.002787590026855
    9. '(arr' → logprob: -13.252787590026855
    10. '  ' → logprob: -13.502787590026855

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003566767554730177
    2. ':
' → logprob: -8.125356674194336
    3. ' :' → logprob: -10.250356674194336
    4. ' or' → logprob: -11.000356674194336
    5. '   ' → logprob: -12.250356674194336
    6. ':return' → logprob: -13.500356674194336
    7. ' and' → logprob: -13.875356674194336
    8. '):' → logprob: -14.625356674194336
    9. '.' → logprob: -15.125356674194336
    10. 'and' → logprob: -15.875356674194336

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01888998970389366
    2. '   ' → logprob: -4.268889904022217
    3. 'print' → logprob: -5.768889904022217
    4. ' print' → logprob: -7.768889904022217
    5. 'continue' → logprob: -7.768889904022217
    6. 'ans' → logprob: -8.393890380859375
    7. ' continue' → logprob: -8.393890380859375
    8. ' ans' → logprob: -9.143890380859375
    9. 'num' → logprob: -9.518890380859375
    10. 'answer' → logprob: -10.643890380859375

Token 143: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03368397057056427
    2. '   ' → logprob: -3.533684015274048
    3. ' ans' → logprob: -6.533683776855469
    4. '
' → logprob: -7.033683776855469
    5. '       ' → logprob: -7.283683776855469
    6. '           ' → logprob: -7.658683776855469
    7. 'if' → logprob: -8.158683776855469
    8. '	ans' → logprob: -9.408683776855469
    9. 'num' → logprob: -10.533683776855469
    10. '    
' → logprob: -11.658683776855469

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004622137639671564
    2. '=' → logprob: -5.379621982574463
    3. '=min' → logprob: -14.004622459411621
    4. ' ' → logprob: -14.504622459411621
    5. '   ' → logprob: -15.379622459411621
    6. ')' → logprob: -16.254621505737305
    7. ',' → logprob: -16.504621505737305
    8. 'min' → logprob: -16.879621505737305
    9. '.' → logprob: -17.129621505737305
    10. '  ' → logprob: -17.254621505737305

Token 145: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.817902173381299e-05
    2. 'num' → logprob: -9.62509822845459
    3. ' min' → logprob: -10.37509822845459
    4. '   ' → logprob: -14.75009822845459
    5. '[min' → logprob: -16.375097274780273
    6. '=min' → logprob: -17.000097274780273
    7. '(min' → logprob: -17.125097274780273
    8. 'mini' → logprob: -17.250097274780273
    9. '	min' → logprob: -17.250097274780273
    10. '0' → logprob: -18.125097274780273

Token 146: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004351555835455656
    2. '(num' → logprob: -5.629351615905762
    3. '(' → logprob: -7.879351615905762
    4. 'ans' → logprob: -8.504351615905762
    5. '(score' → logprob: -8.879351615905762
    6. '(i' → logprob: -11.504351615905762
    7. '(
' → logprob: -12.379351615905762
    8. 'num' → logprob: -12.629351615905762
    9. '(an' → logprob: -12.754351615905762
    10. '(abs' → logprob: -12.754351615905762

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38850146532058716
    2. '(num' → logprob: -1.6385014057159424
    3. ',num' → logprob: -2.1385014057159424
    4. '(ans' → logprob: -5.2635016441345215
    5. '(' → logprob: -6.0135016441345215
    6. 'ans' → logprob: -7.5135016441345215
    7. ' ,' → logprob: -7.5135016441345215
    8. '(score' → logprob: -7.7635016441345215
    9. '(len' → logprob: -8.763501167297363
    10. 'num' → logprob: -8.888501167297363

Token 148: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03820902109146118
    2. ' num' → logprob: -3.2882089614868164
    3. '   ' → logprob: -9.163208961486816
    4. 'sum' → logprob: -10.663208961486816
    5. ' ' → logprob: -11.163208961486816
    6. '    ' → logprob: -12.413208961486816
    7. '       ' → logprob: -12.538208961486816
    8. ' sum' → logprob: -12.663208961486816
    9. 'bin' → logprob: -12.913208961486816
    10. '  ' → logprob: -13.163208961486816

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4374569058418274
    2. '   ' → logprob: -1.0624568462371826
    3. ')
' → logprob: -5.312457084655762
    4. '       ' → logprob: -5.937457084655762
    5. ' )' → logprob: -8.312457084655762
    6. '
' → logprob: -8.562457084655762
    7. '<|end|>' → logprob: -8.687457084655762
    8. 'continue' → logprob: -8.812457084655762
    9. '	continue' → logprob: -9.312457084655762
    10. ' ' → logprob: -9.562457084655762

Token 150: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01463610865175724
    2. '   ' → logprob: -4.264636039733887
    3. ' else' → logprob: -7.889636039733887
    4. 'continue' → logprob: -9.389636039733887
    5. 'elif' → logprob: -11.889636039733887
    6. 'if' → logprob: -13.014636039733887
    7. '       ' → logprob: -13.389636039733887
    8. 'for' → logprob: -13.514636039733887
    9. '    
' → logprob: -14.139636039733887
    10. '	else' → logprob: -14.764636039733887

Token 151: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11308306455612183
    2. '   ' → logprob: -2.3630831241607666
    3. ' else' → logprob: -4.3630828857421875
    4. ' ' → logprob: -11.363082885742188
    5. '       ' → logprob: -11.488082885742188
    6. 'continue' → logprob: -11.488082885742188
    7. 'elif' (adapté à ' elif') → logprob: -12.113082885742188
    8. '  ' → logprob: -12.113082885742188
    9. '	else' → logprob: -12.488082885742188
    10. 'if' → logprob: -12.988082885742188

Token 152: ' g' (ID: 329)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.23114903271198273
    2. ' index' → logprob: -1.6061490774154663
    3. 'g' → logprob: -6.481149196624756
    4. 'score' → logprob: -7.106149196624756
    5. ' g' → logprob: -7.231149196624756
    6. 'num' → logprob: -7.356149196624756
    7. ' num' → logprob: -7.981149196624756
    8. ' ' → logprob: -8.231148719787598
    9. 'arr' → logprob: -8.481148719787598
    10. ' score' → logprob: -8.481148719787598

Token 153: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08877422660589218
    2. '-' → logprob: -2.5887742042541504
    3. ' >' → logprob: -4.71377420425415
    4. '>' → logprob: -7.08877420425415
    5. ' ' → logprob: -11.088774681091309
    6. ' ' → logprob: -13.088774681091309
    7. '[' → logprob: -13.588774681091309
    8. ',' → logprob: -13.588774681091309
    9. ' -
' → logprob: -13.588774681091309
    10. ' <' → logprob: -13.963774681091309

Token 154: ' score' (ID: 8429)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12366864830255508
    2. '(index' → logprob: -2.873668670654297
    3. '(((' → logprob: -4.373668670654297
    4. '(score' → logprob: -4.373668670654297
    5. '(arr' → logprob: -4.623668670654297
    6. 'arr' → logprob: -4.623668670654297
    7. 'score' → logprob: -5.123668670654297
    8. 'index' → logprob: -5.623668670654297
    9. '(' → logprob: -5.873668670654297
    10. ' ((' → logprob: -6.998668670654297

Token 155: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5564623475074768
    2. '<' → logprob: -1.556462287902832
    3. '<=' → logprob: -2.056462287902832
    4. ' >' → logprob: -3.056462287902832
    5. ' <' → logprob: -3.806462287902832
    6. ' <=' → logprob: -4.056462287902832
    7. '//' → logprob: -6.931462287902832
    8. ' ' → logprob: -8.681462287902832
    9. '>=' → logprob: -9.806462287902832
    10. ' //' → logprob: -10.056462287902832

Token 156: ' (' (ID: 350)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.02329683303833
    2. '(' → logprob: -1.14829683303833
    3. ' (' → logprob: -2.52329683303833
    4. '(arr' → logprob: -2.52329683303833
    5. '(index' → logprob: -2.52329683303833
    6. '100' → logprob: -3.27329683303833
    7. '((' → logprob: -3.89829683303833
    8. 'index' → logprob: -4.64829683303833
    9. ' ' → logprob: -4.89829683303833
    10. ' arr' → logprob: -5.52329683303833

Token 157: 'index' (ID: 2257)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.28897225856781
    2. '(' → logprob: -1.41397225856781
    3. '100' → logprob: -1.78897225856781
    4. '(arr' → logprob: -1.78897225856781
    5. '(index' → logprob: -2.0389723777770996
    6. 'index' → logprob: -5.0389723777771
    7. '((' → logprob: -5.5389723777771
    8. '(d' → logprob: -5.6639723777771
    9. ' (' → logprob: -7.0389723777771
    10. '(g' → logprob: -7.5389723777771

Token 158: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6331684589385986
    2. '+' → logprob: -0.7581684589385986
    3. '[' → logprob: -8.13316822052002
    4. ')' → logprob: -8.88316822052002
    5. '   ' → logprob: -9.50816822052002
    6. ')[' → logprob: -10.75816822052002
    7. ' ' → logprob: -11.13316822052002
    8. '][' → logprob: -12.50816822052002
    9. ',' → logprob: -12.88316822052002
    10. '＋' → logprob: -13.13316822052002

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. ' ' → logprob: -10.75003719329834
    3. ')' → logprob: -11.25003719329834
    4. '```' → logprob: -14.56253719329834
    5. ',' → logprob: -15.31253719329834
    6. '
' → logprob: -15.56253719329834
    7. '2' → logprob: -15.62503719329834
    8. ')(' → logprob: -15.75003719329834
    9. ')*' → logprob: -15.81253719329834
    10. '   ' → logprob: -15.81253719329834

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.750027656555176
    3. ')' → logprob: -12.500027656555176
    4. '10' → logprob: -14.625027656555176
    5. '```' → logprob: -14.625027656555176
    6. '2' → logprob: -14.750027656555176
    7. '100' → logprob: -15.125027656555176
    8. 'g' → logprob: -15.562527656555176
    9. '
' → logprob: -16.000028610229492
    10. ')(' → logprob: -16.437528610229492

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037528136745095253
    2. ')*' → logprob: -6.128752708435059
    3. ' )' → logprob: -6.503752708435059
    4. ' -' → logprob: -10.503752708435059
    5. '   ' → logprob: -11.253752708435059
    6. '-' → logprob: -11.378752708435059
    7. '*' → logprob: -12.253752708435059
    8. ' ' → logprob: -12.878752708435059
    9. '+' → logprob: -13.128752708435059
    10. '）' → logprob: -13.878752708435059

Token 162: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13901084661483765
    2. ')*' → logprob: -2.3890109062194824
    3. '*' → logprob: -3.8890109062194824
    4. ' -' → logprob: -5.139010906219482
    5. '-' → logprob: -5.389010906219482
    6. ' )' → logprob: -5.764010906219482
    7. ' *' → logprob: -5.889010906219482
    8. ':' → logprob: -7.389010906219482
    9. '):' → logprob: -8.889010429382324
    10. ' ' → logprob: -9.014010429382324

Token 163: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0005631613312289119
    2. ' ' → logprob: -7.750563144683838
    3. '(' → logprob: -9.625563621520996
    4. '
' → logprob: -10.750563621520996
    5. '   ' → logprob: -11.375563621520996
    6. '  ' → logprob: -12.125563621520996
    7. '```' → logprob: -12.250563621520996
    8. '10' → logprob: -12.750563621520996
    9. '

' → logprob: -13.000563621520996
    10. '500' → logprob: -13.375563621520996

Token 164: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.644463479053229e-05
    2. '
' → logprob: -10.750046730041504
    3. ' ' → logprob: -11.625046730041504
    4. '(' → logprob: -12.250046730041504
    5. '10' → logprob: -13.000046730041504
    6. '

' → logprob: -13.500046730041504
    7. '   ' → logprob: -13.750046730041504
    8. '```' → logprob: -13.750046730041504
    9. '1' → logprob: -14.000046730041504
    10. '
' → logprob: -14.750046730041504

Token 165: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06612959504127502
    2. ' and' → logprob: -2.941129684448242
    3. ':
' → logprob: -5.316129684448242
    4. 'and' → logprob: -5.316129684448242
    5. '*' → logprob: -7.816129684448242
    6. '   ' → logprob: -8.191129684448242
    7. '):' → logprob: -8.691129684448242
    8. '-' → logprob: -8.941129684448242
    9. ' :' → logprob: -9.316129684448242
    10. ' *' → logprob: -9.691129684448242

Token 166: ' (' (ID: 350)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.005351159255951643
    2. '(arr' → logprob: -5.2553510665893555
    3. '(' → logprob: -9.755351066589355
    4. ' arr' → logprob: -10.380351066589355
    5. ' (' → logprob: -11.130351066589355
    6. '(d' → logprob: -12.130351066589355
    7. 'd' → logprob: -13.005351066589355
    8. '	arr' → logprob: -14.130351066589355
    9. '(g' → logprob: -14.255351066589355
    10. '100' → logprob: -14.380351066589355

Token 167: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.006174790672957897
    2. '(arr' → logprob: -5.256174564361572
    3. '(' → logprob: -7.881174564361572
    4. 'd' → logprob: -8.75617504119873
    5. 'g' → logprob: -9.00617504119873
    6. ' (' → logprob: -9.50617504119873
    7. ' arr' → logprob: -9.63117504119873
    8. '(d' → logprob: -10.38117504119873
    9. '(g' → logprob: -10.50617504119873
    10. ')' → logprob: -10.63117504119873

Token 168: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.18400800228118896
    2. '][' → logprob: -2.0590081214904785
    3. 'index' → logprob: -3.5590081214904785
    4. ')[' → logprob: -4.4340081214904785
    5. ' index' → logprob: -10.43400764465332
    6. '#index' → logprob: -10.43400764465332
    7. '[' → logprob: -10.55900764465332
    8. ',index' → logprob: -11.18400764465332
    9. ')' → logprob: -11.68400764465332
    10. '```' → logprob: -12.18400764465332

Token 169: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0076184566132724285
    2. '[' → logprob: -5.257618427276611
    3. '0' → logprob: -7.007618427276611
    4. ')][' → logprob: -7.632618427276611
    5. '1' → logprob: -8.00761890411377
    6. ')[' → logprob: -8.25761890411377
    7. ' ][' → logprob: -8.88261890411377
    8. '])[' → logprob: -9.75761890411377
    9. ']' → logprob: -9.88261890411377
    10. '2' → logprob: -10.25761890411377

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4285862057004124e-05
    2. '1' → logprob: -10.75003433227539
    3. '2' → logprob: -12.00003433227539
    4. ' ' → logprob: -13.00003433227539
    5. '
' → logprob: -13.50003433227539
    6. '][' → logprob: -13.87503433227539
    7. '   ' → logprob: -13.87503433227539
    8. '```' → logprob: -14.87503433227539
    9. ']' → logprob: -15.25003433227539
    10. '[' → logprob: -16.00003433227539

Token 171: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6709372997283936
    2. ' -' → logprob: -1.2959372997283936
    3. ')' → logprob: -1.6709372997283936
    4. '[' → logprob: -4.045937538146973
    5. '   ' → logprob: -5.670937538146973
    6. '):' → logprob: -6.170937538146973
    7. ' ' → logprob: -7.045937538146973
    8. '):
' → logprob: -7.045937538146973
    9. ')-' → logprob: -7.670937538146973
    10. ' )' → logprob: -8.295937538146973

Token 172: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09515105187892914
    2. ':' → logprob: -3.220150947570801
    3. '):
' → logprob: -3.595150947570801
    4. ' and' → logprob: -4.595150947570801
    5. ' ):' → logprob: -5.095150947570801
    6. ')' → logprob: -5.720150947570801
    7. 'and' → logprob: -6.595150947570801
    8. '-' → logprob: -7.345150947570801
    9. ' ):
' → logprob: -7.345150947570801
    10. ' -' → logprob: -8.2201509475708

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18617185950279236
    2. 'num' → logprob: -1.8111718893051147
    3. 'sum' → logprob: -6.186172008514404
    4. '0' → logprob: -6.811172008514404
    5. '(num' → logprob: -7.186172008514404
    6. '(' → logprob: -7.311172008514404
    7. ' ' → logprob: -7.561172008514404
    8. ' num' → logprob: -7.936172008514404
    9. ')' → logprob: -8.311171531677246
    10. ' (' → logprob: -8.811171531677246

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025299990084022284
    2. 'num' → logprob: -6.502530097961426
    3. '(' → logprob: -8.252530097961426
    4. '0' → logprob: -8.877530097961426
    5. ' ' → logprob: -9.002530097961426
    6. ')' → logprob: -9.502530097961426
    7. '(i' → logprob: -9.502530097961426
    8. 'g' → logprob: -9.627530097961426
    9. 'i' → logprob: -9.627530097961426
    10. 'score' → logprob: -10.002530097961426

Token 175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.061698734760284424
    2. '):' → logprob: -2.9366986751556396
    3. ' and' → logprob: -5.936698913574219
    4. ')' → logprob: -6.186698913574219
    5. ':' → logprob: -7.311698913574219
    6. ':
' → logprob: -7.561698913574219
    7. ' ):
' → logprob: -7.686698913574219
    8. '):
' → logprob: -8.811698913574219
    9. '   ' → logprob: -9.061698913574219
    10. 'and' → logprob: -9.436698913574219

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44945836067199707
    2. ':' → logprob: -1.199458360671997
    3. ':
' → logprob: -3.699458360671997
    4. ' :' → logprob: -4.074458122253418
    5. ' and' → logprob: -5.324458122253418
    6. '   ' → logprob: -5.324458122253418
    7. '+' → logprob: -5.949458122253418
    8. ' :
' → logprob: -6.199458122253418
    9. '           ' → logprob: -7.074458122253418
    10. '):
' → logprob: -7.699458122253418

Token 177: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.05953361839056015
    2. ' num' → logprob: -3.5595335960388184
    3. '           ' → logprob: -4.184533596038818
    4. '       ' → logprob: -5.184533596038818
    5. 'temp' → logprob: -6.184533596038818
    6. 'ans' → logprob: -6.809533596038818
    7. 'diff' → logprob: -6.809533596038818
    8. ' ans' → logprob: -7.059533596038818
    9. 'tmp' → logprob: -7.934533596038818
    10. '   ' → logprob: -8.059534072875977

Token 178: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14279110729694366
    2. '+=' → logprob: -2.0177910327911377
    3. ' =' → logprob: -9.642790794372559
    4. '=' → logprob: -10.892790794372559
    5. '+' → logprob: -11.142790794372559
    6. ']+=' → logprob: -11.892790794372559
    7. '   ' → logprob: -12.767790794372559
    8. ' +' → logprob: -13.392790794372559
    9. '+=(' → logprob: -13.392790794372559
    10. '<|end|>' → logprob: -13.892790794372559

Token 179: ' -' (ID: 533)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.002855755155906081
    2. '((' → logprob: -6.1278557777404785
    3. ' (' → logprob: -8.25285530090332
    4. '(G' → logprob: -9.00285530090332
    5. '(' → logprob: -9.25285530090332
    6. '-' → logprob: -9.75285530090332
    7. '(math' → logprob: -10.25285530090332
    8. '(-' → logprob: -10.37785530090332
    9. '(int' → logprob: -10.50285530090332
    10. '-(' → logprob: -11.12785530090332

Token 180: '(-(' (ID: 174232)
  Prédit: '(-('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-(' → logprob: -0.1478114128112793
    2. '(-' → logprob: -2.1478114128112793
    3. '((' → logprob: -4.272811412811279
    4. '(g' → logprob: -5.647811412811279
    5. '(' → logprob: -6.772811412811279
    6. '-(' → logprob: -7.022811412811279
    7. ' (' → logprob: -7.522811412811279
    8. '((-' → logprob: -7.897811412811279
    9. '-' → logprob: -8.897811889648438
    10. ' -(' → logprob: -10.022811889648438

Token 181: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0028952136635780334
    2. '(g' → logprob: -5.877895355224609
    3. ' g' → logprob: -9.37789535522461
    4. ' (' → logprob: -13.37789535522461
    5. '(' → logprob: -13.75289535522461
    6. '   ' → logprob: -14.12789535522461
    7. '#g' → logprob: -14.75289535522461
    8. '_g' → logprob: -15.12789535522461
    9. '[g' → logprob: -15.12789535522461
    10. '	g' → logprob: -15.37789535522461

Token 182: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5762869715690613
    2. ' -' → logprob: -0.8262869715690613
    3. '-score' → logprob: -8.076287269592285
    4. ' ' → logprob: -10.951287269592285
    5. '   ' → logprob: -11.576287269592285
    6. '[' → logprob: -11.951287269592285
    7. 'score' → logprob: -14.451287269592285
    8. ' ' → logprob: -14.701287269592285
    9. '  ' → logprob: -14.826287269592285
    10. ')' → logprob: -14.826287269592285

Token 183: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -2.7729658540920354e-05
    2. ' score' → logprob: -10.500027656555176
    3. '(score' → logprob: -16.500028610229492
    4. '	score' → logprob: -18.500028610229492
    5. '-score' → logprob: -19.625028610229492
    6. 'code' → logprob: -19.875028610229492
    7. '_score' → logprob: -20.250028610229492
    8. '   ' → logprob: -20.375028610229492
    9. 'scores' → logprob: -21.250028610229492
    10. ')' → logprob: -21.500028610229492

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6475986242294312
    2. ' //' → logprob: -1.0225986242294312
    3. '//' → logprob: -2.3975987434387207
    4. ')//' → logprob: -3.7725987434387207
    5. ' )' → logprob: -6.147598743438721
    6. ' ' → logprob: -7.522598743438721
    7. ' //(' → logprob: -9.397598266601562
    8. '(index' → logprob: -9.522598266601562
    9. '(' → logprob: -10.147598266601562
    10. '```' → logprob: -10.397598266601562

Token 185: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3488350808620453
    2. '//' → logprob: -1.2238351106643677
    3. ')' → logprob: -8.723834991455078
    4. ' ' → logprob: -9.223834991455078
    5. '#' → logprob: -10.223834991455078
    6. ')//' → logprob: -11.098834991455078
    7. '```' → logprob: -11.223834991455078
    8. ' //(' → logprob: -11.598834991455078
    9. 'div' → logprob: -11.723834991455078
    10. ' ' → logprob: -11.973834991455078

Token 186: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.803360495017841e-05
    2. '(' → logprob: -10.000078201293945
    3. ' ((' → logprob: -10.375078201293945
    4. '(index' → logprob: -14.250078201293945
    5. '100' → logprob: -15.125078201293945
    6. '(((' → logprob: -15.875078201293945
    7. ' ' → logprob: -16.375078201293945
    8. '   ' → logprob: -17.125078201293945
    9. '(
' → logprob: -17.375078201293945
    10. ' (' → logprob: -17.500078201293945

Token 187: '100' (ID: 1353)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.32211631536483765
    2. '((' → logprob: -1.3221163749694824
    3. ' (' → logprob: -4.947116374969482
    4. '100' → logprob: -7.072116374969482
    5. ' ((' → logprob: -7.572116374969482
    6. '(' → logprob: -8.572115898132324
    7. ' ' → logprob: -8.947115898132324
    8. '(j' → logprob: -11.822115898132324
    9. '(idx' → logprob: -11.947115898132324
    10. 'index' → logprob: -12.322115898132324

Token 188: ' *' (ID: 425)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.14738942682743073
    2. '*(' → logprob: -2.1473894119262695
    3. ' (' → logprob: -4.0223894119262695
    4. '[index' → logprob: -7.3973894119262695
    5. ' *' → logprob: -7.6473894119262695
    6. ')' → logprob: -7.8973894119262695
    7. '(' → logprob: -8.27238941192627
    8. '*' → logprob: -8.64738941192627
    9. '
' → logprob: -9.02238941192627
    10. '(idx' → logprob: -9.27238941192627

Token 189: ' (' (ID: 350)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -7.004696090007201e-05
    2. ' (' → logprob: -9.625069618225098
    3. '(idx' → logprob: -13.375069618225098
    4. '[index' → logprob: -14.375069618225098
    5. '(' → logprob: -14.500069618225098
    6. '(ind' → logprob: -14.625069618225098
    7. '   ' → logprob: -15.500069618225098
    8. 'index' → logprob: -15.750069618225098
    9. '(i' → logprob: -15.875069618225098
    10. '((' → logprob: -16.000070571899414

Token 190: 'index' (ID: 2257)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.0026849217247217894
    2. 'index' → logprob: -6.002685070037842
    3. ' (' → logprob: -8.627684593200684
    4. '[index' → logprob: -10.877684593200684
    5. ' index' → logprob: -12.252684593200684
    6. '(' → logprob: -13.252684593200684
    7. '1' → logprob: -13.627684593200684
    8. '(idx' → logprob: -14.752684593200684
    9. '=index' → logprob: -14.877684593200684
    10. '   ' → logprob: -15.002684593200684

Token 191: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026372060179710388
    2. ' +' → logprob: -3.651371955871582
    3. '[index' → logprob: -10.151371955871582
    4. '[' → logprob: -10.401371955871582
    5. '1' → logprob: -14.651371955871582
    6. '+
' → logprob: -14.776371955871582
    7. 'index' → logprob: -15.151371955871582
    8. ')+' → logprob: -15.526371955871582
    9. '+j' → logprob: -15.651371955871582
    10. '+[' → logprob: -16.1513729095459

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -12.000014305114746
    3. 'index' → logprob: -13.125014305114746
    4. '+' → logprob: -13.375014305114746
    5. 'arr' → logprob: -13.500014305114746
    6. '(' → logprob: -13.875014305114746
    7. '
' → logprob: -14.000014305114746
    8. '```' → logprob: -15.125014305114746
    9. '0' → logprob: -15.500014305114746
    10. '(index' → logprob: -15.750014305114746

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.500011444091797
    3. '```' → logprob: -13.625011444091797
    4. '
' → logprob: -15.875011444091797
    5. '   ' → logprob: -16.562511444091797
    6. '``' → logprob: -16.750011444091797
    7. '+' → logprob: -17.312511444091797
    8. ')' → logprob: -17.875011444091797
    9. '１' → logprob: -17.937511444091797
    10. '۱' → logprob: -18.312511444091797

Token 194: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017067246371880174
    2. ' ))' → logprob: -7.001706600189209
    3. ')' → logprob: -7.501706600189209
    4. ')))' → logprob: -8.876707077026367
    5. '))
' → logprob: -9.251707077026367
    6. ' )' → logprob: -12.876707077026367
    7. '))

' → logprob: -13.251707077026367
    8. ' ' → logprob: -14.251707077026367
    9. ' ))
' → logprob: -14.376707077026367
    10. '0' → logprob: -14.501707077026367

Token 195: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.709984540939331
    2. '   ' → logprob: -1.084984540939331
    3. 'if' → logprob: -2.209984540939331
    4. 'print' → logprob: -3.834984540939331
    5. ' ans' → logprob: -4.58498477935791
    6. '       ' → logprob: -4.83498477935791
    7. '
' → logprob: -4.95998477935791
    8. ')' → logprob: -5.83498477935791
    9. '    
' → logprob: -5.83498477935791
    10. ' if' → logprob: -5.83498477935791

Token 196: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.002703112317249179
    2. ' ans' → logprob: -6.8777031898498535
    3. '   ' → logprob: -7.1277031898498535
    4. 'if' → logprob: -7.5027031898498535
    5. '
' → logprob: -9.002702713012695
    6. 'print' → logprob: -9.252702713012695
    7. '       ' → logprob: -9.502702713012695
    8. '	ans' → logprob: -12.002702713012695
    9. 'answer' → logprob: -12.127702713012695
    10. ' if' → logprob: -12.877702713012695

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519298195838928
    2. '=' → logprob: -1.501929759979248
    3. '=min' → logprob: -14.251930236816406
    4. 'min' → logprob: -17.751930236816406
    5. ')' → logprob: -17.876930236816406
    6. '＝' → logprob: -18.001930236816406
    7. ' ' → logprob: -20.251930236816406
    8. ',' → logprob: -20.376930236816406
    9. ' =)' → logprob: -20.626930236816406
    10. '```' → logprob: -20.751930236816406

Token 198: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.47407710552215576
    2. 'min' → logprob: -0.9740771055221558
    3. '(min' → logprob: -16.724077224731445
    4. '	min' → logprob: -17.349077224731445
    5. '[min' → logprob: -17.974077224731445
    6. ' ' → logprob: -18.599077224731445
    7. '=min' → logprob: -18.599077224731445
    8. 'num' → logprob: -18.849077224731445
    9. '_min' → logprob: -18.974077224731445
    10. ',min' → logprob: -19.099077224731445

Token 199: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. 'ans' → logprob: -16.625001907348633
    4. '(an' → logprob: -17.125001907348633
    5. '(num' → logprob: -17.250001907348633
    6. '(nums' → logprob: -17.750001907348633
    7. '(answer' → logprob: -18.500001907348633
    8. '(
' → logprob: -18.875001907348633
    9. ' (' → logprob: -19.250001907348633
    10. '	ans' → logprob: -20.375001907348633

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033229112159460783
    2. ',num' → logprob: -5.753323078155518
    3. '(num' → logprob: -8.87832260131836
    4. '(' → logprob: -12.25332260131836
    5. ' ,' → logprob: -14.12832260131836
    6. ',n' → logprob: -16.12832260131836
    7. 'num' → logprob: -16.50332260131836
    8. '(ans' → logprob: -16.62832260131836
    9. ',max' → logprob: -17.12832260131836
    10. ',(' → logprob: -17.50332260131836

Token 201: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0040785204619169235
    2. ' num' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.754077911376953
    4. ' ' → logprob: -18.379077911376953
    5. '	num' → logprob: -18.629077911376953
    6. '(num' → logprob: -19.754077911376953
    7. '[num' → logprob: -20.129077911376953
    8. '  ' → logprob: -20.254077911376953
    9. '
' → logprob: -20.629077911376953
    10. '       ' → logprob: -20.754077911376953

Token 202: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017791425809264183
    2. '<|end|>' → logprob: -4.267791271209717
    3. '
' → logprob: -6.017791271209717
    4. 'print' → logprob: -7.267791271209717
    5. ')
' → logprob: -8.267791748046875
    6. ')return' → logprob: -10.017791748046875
    7. '```' → logprob: -10.017791748046875
    8. '<|end|>' → logprob: -10.267791748046875
    9. 'return' → logprob: -10.642791748046875
    10. ')

' → logprob: -10.767791748046875

Token 203: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002983048325404525
    2. '
' → logprob: -5.877983093261719
    3. ' print' → logprob: -9.502983093261719
    4. ')' → logprob: -9.502983093261719
    5. ')
' → logprob: -11.627983093261719
    6. '

' → logprob: -12.627983093261719
    7. '```' → logprob: -12.877983093261719
    8. '(print' → logprob: -13.002983093261719
    9. ' 
' → logprob: -13.127983093261719
    10. '<|end|>' → logprob: -13.252983093261719

Token 204: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.25555816292762756
    2. '(' → logprob: -1.5055581331253052
    3. '()' → logprob: -5.630558013916016
    4. '('' → logprob: -11.380558013916016
    5. 'ans' → logprob: -12.255558013916016
    6. '(end' → logprob: -12.380558013916016
    7. '("("' → logprob: -12.880558013916016
    8. '(`' → logprob: -13.005558013916016
    9. '(len' → logprob: -13.255558013916016
    10. '(answer' → logprob: -13.380558013916016

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -14.375003814697266
    4. '())' → logprob: -15.500003814697266
    5. '()' → logprob: -15.750003814697266
    6. '')' → logprob: -16.000003814697266
    7. '+' → logprob: -16.625003814697266
    8. ')`' → logprob: -17.000003814697266
    9. '`)' → logprob: -17.125003814697266
    10. '))' → logprob: -17.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 203
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 45.32%
Précision adaptée (1ère position): 49.26%
Précision (top 10): 89.16%
================================================================================
