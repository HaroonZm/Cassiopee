================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
read_input = lambda: sys.stdin.readline().rstrip()
total_length, subseq_sum_limit = map(int, read_input().split())
modulo_value = 998244353

perm_count = [[0] * (2 * idx + 1) for idx in range(total_length + 1)]
perm_count[0][0] = 1
valid_perm_total = [0] * (total_length + 1)

for curr_len in range(total_length):
    for curr_sum in range(curr_len, 2 * curr_len + 1):
        next_len = curr_len + 1
        next_sum_1 = curr_sum + 1
        next_sum_2 = curr_sum + 2
        perm_count[next_len][next_sum_1] += perm_count[curr_len][curr_sum]
        perm_count[next_len][next_sum_2] += perm_count[curr_len][curr_sum]
        if perm_count[next_len][next_sum_1] >= modulo_value:
            perm_count[next_len][next_sum_1] -= modulo_value
        if perm_count[next_len][next_sum_2] >= modulo_value:
            perm_count[next_len][next_sum_2] -= modulo_value

for seq_len in range(total_length + 1):
    for seq_sum in range(seq_len, min(2 * seq_len + 1, subseq_sum_limit)):
        valid_perm_total[seq_len] += perm_count[seq_len][seq_sum]

if subseq_sum_limit % 2 == 1:
    for seq_len in range(subseq_sum_limit, total_length + 1):
        valid_perm_total[seq_len] += 1

for split_point in range(1, subseq_sum_limit):
    auxiliary_val = subseq_sum_limit - 1 - 2 * split_point
    if auxiliary_val < 0:
        continue
    for start_seq in range((auxiliary_val + 1) // 2, auxiliary_val + 1):
        target_len = start_seq + 2 * split_point
        if target_len > total_length:
            break
        valid_perm_total[target_len] += perm_count[start_seq][auxiliary_val]
        if valid_perm_total[target_len] >= modulo_value:
            valid_perm_total[target_len] -= modulo_value

final_answer = 0
for idx, val in enumerate(valid_perm_total):
    final_answer = (final_answer + val * perm_count[-1][-1 - idx]) % modulo_value

print(final_answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29734688997268677
    2. '\n' → logprob: -1.547346830368042
    3. '<|end|>' → logprob: -3.797346830368042
    4. '\' → logprob: -4.922347068786621
    5. 'newline' → logprob: -5.672347068786621
    6. 'import' → logprob: -5.672347068786621
    7. '<|end|>' → logprob: -6.047347068786621
    8. '
' → logprob: -6.922347068786621
    9. '```' → logprob: -6.922347068786621
    10. '' → logprob: -7.672347068786621

Token 4: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008534434251487255
    2. '_' → logprob: -6.1335344314575195
    3. 'line' → logprob: -6.2585344314575195
    4. ' (' → logprob: -6.5085344314575195
    5. '.' → logprob: -6.7585344314575195
    6. ')' → logprob: -8.13353443145752
    7. '_line' → logprob: -8.25853443145752
    8. 'er' → logprob: -8.63353443145752
    9. 'space' → logprob: -8.63353443145752
    10. '(
' → logprob: -8.88353443145752

Token 5: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010605561546981335
    2. '()' → logprob: -7.626060485839844
    3. '('' → logprob: -8.001060485839844
    4. '(
' → logprob: -9.126060485839844
    5. '("("' → logprob: -10.751060485839844
    6. '(

' → logprob: -10.876060485839844
    7. 's' → logprob: -11.126060485839844
    8. ' (' → logprob: -11.376060485839844
    9. '_' → logprob: -11.501060485839844
    10. '(`' → logprob: -11.501060485839844

Token 6: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.28133174777030945
    2. 'sys' → logprob: -1.4063317775726318
    3. '(sys' → logprob: -9.531332015991211
    4. 'input' → logprob: -10.406332015991211
    5. ' ' → logprob: -10.656332015991211
    6. ' lambda' → logprob: -11.156332015991211
    7. '	sys' → logprob: -11.281332015991211
    8. ' input' → logprob: -11.406332015991211
    9. '=sys' → logprob: -11.781332015991211
    10. 'lambda' → logprob: -12.031332015991211

Token 7: ':' (ID: 25)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.19413341581821442
    2. 'sys' → logprob: -3.0691335201263428
    3. ' :' → logprob: -3.4441335201263428
    4. ' line' → logprob: -3.6941335201263428
    5. ' input' → logprob: -4.069133281707764
    6. ':' → logprob: -4.319133281707764
    7. ' ' → logprob: -4.319133281707764
    8. 'input' → logprob: -4.694133281707764
    9. 'line' → logprob: -5.319133281707764
    10. 's' → logprob: -5.819133281707764

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1129477396607399
    2. 'sys' → logprob: -2.237947702407837
    3. ' input' → logprob: -9.362947463989258
    4. 'input' → logprob: -10.237947463989258
    5. '(sys' → logprob: -14.112947463989258
    6. '=sys' → logprob: -14.112947463989258
    7. ' system' → logprob: -14.362947463989258
    8. '	sys' → logprob: -14.487947463989258
    9. ' ' → logprob: -14.862947463989258
    10. 'int' → logprob: -15.237947463989258

Token 9: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.47513410449028015
    2. '.' → logprob: -1.1001341342926025
    3. '.stdout' → logprob: -3.3501341342926025
    4. '.argv' → logprob: -5.350133895874023
    5. '.readline' → logprob: -6.100133895874023
    6. ' .' → logprob: -6.350133895874023
    7. '.exit' → logprob: -7.725133895874023
    8. '.stderr' → logprob: -8.100133895874023
    9. '.std' → logprob: -8.225133895874023
    10. '.import' → logprob: -9.100133895874023

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5794475674629211
    2. '.read' → logprob: -1.4544475078582764
    3. '.' → logprob: -1.5794475078582764
    4. '.readlines' → logprob: -9.579447746276855
    5. '.Read' → logprob: -9.829447746276855
    6. '.write' → logprob: -11.329447746276855
    7. ' .' → logprob: -11.329447746276855
    8. '```' → logprob: -11.329447746276855
    9. 'read' → logprob: -12.079447746276855
    10. '.READ' → logprob: -13.579447746276855

Token 11: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04049389064311981
    2. '().' → logprob: -3.665493965148926
    3. '(' → logprob: -4.290493965148926
    4. ' ()' → logprob: -9.040493965148926
    5. '()
' → logprob: -9.790493965148926
    6. '()\' → logprob: -10.165493965148926
    7. '```' → logprob: -10.415493965148926
    8. '.' → logprob: -10.540493965148926
    9. '()(' → logprob: -10.540493965148926
    10. '(
' → logprob: -10.915493965148926

Token 12: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008619419299066067
    2. 'rstrip' → logprob: -4.75861930847168
    3. 'read' → logprob: -12.38361930847168
    4. ' strip' → logprob: -15.00861930847168
    5. 'decode' → logprob: -16.25861930847168
    6. 'replace' → logprob: -16.75861930847168
    7. '_strip' → logprob: -17.00861930847168
    8. 'split' → logprob: -17.25861930847168
    9. 'str' → logprob: -17.25861930847168
    10. '-strip' → logprob: -18.38361930847168

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011837085708975792
    2. '(
' → logprob: -5.261837005615234
    3. '()' → logprob: -5.761837005615234
    4. '\n' → logprob: -7.136837005615234
    5. '\' → logprob: -7.511837005615234
    6. ')' → logprob: -7.511837005615234
    7. '\(' → logprob: -7.761837005615234
    8. ' (' → logprob: -8.261837005615234
    9. '(

' → logprob: -8.386837005615234
    10. ' ' → logprob: -9.511837005615234

Token 14: 'total' (ID: 9577)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19609618186950684
    2. '()' → logprob: -2.446096181869507
    3. '(
' → logprob: -2.571096181869507
    4. 'def' → logprob: -5.446096420288086
    5. '(

' → logprob: -6.196096420288086
    6. '
' → logprob: -6.446096420288086
    7. '()
' → logprob: -7.071096420288086
    8. '#' → logprob: -7.196096420288086
    9. '\n' → logprob: -7.196096420288086
    10. 'import' → logprob: -7.196096420288086

Token 15: '_length' (ID: 11514)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027349082753062248
    2. '(' → logprob: -4.02734899520874
    3. '_count' → logprob: -5.77734899520874
    4. ' =' → logprob: -6.40234899520874
    5. '_sum' → logprob: -7.02734899520874
    6. '_space' → logprob: -7.15234899520874
    7. '=' → logprob: -7.40234899520874
    8. 's' → logprob: -7.65234899520874
    9. '_s' → logprob: -8.652349472045898
    10. '_amount' → logprob: -8.777349472045898

Token 16: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7199999094009399
    2. ' =' → logprob: -0.8449999094009399
    3. ' ' → logprob: -3.3449997901916504
    4. '=' → logprob: -3.5949997901916504
    5. ' +=' → logprob: -4.34499979019165
    6. '(' → logprob: -6.09499979019165
    7. ' _' → logprob: -6.34499979019165
    8. '_space' → logprob: -6.96999979019165
    9. '+' → logprob: -7.09499979019165
    10. ')' → logprob: -7.71999979019165

Token 17: ' subse' (ID: 19874)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.580326497554779
    2. 'total' → logprob: -1.9553265571594238
    3. ' =' → logprob: -2.580326557159424
    4. ' input' → logprob: -3.580326557159424
    5. ' num' → logprob: -3.580326557159424
    6. ' number' → logprob: -3.830326557159424
    7. 'max' → logprob: -4.080326557159424
    8. 'input' → logprob: -4.205326557159424
    9. ' max' → logprob: -4.330326557159424
    10. 'num' → logprob: -4.455326557159424

Token 18: 'q' (ID: 80)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.004192844033241272
    2. 'q' → logprob: -5.50419282913208
    3. 'quences' → logprob: -9.629193305969238
    4. 'quent' → logprob: -10.879193305969238
    5. '```' → logprob: -11.629193305969238
    6. '_' → logprob: -12.629193305969238
    7. 'QUENCE' → logprob: -12.629193305969238
    8. 't' → logprob: -12.879193305969238
    9. 'qu' → logprob: -13.254193305969238
    10. 'ction' → logprob: -13.754193305969238

Token 19: '_sum' (ID: 29859)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5882409811019897
    2. 'u' → logprob: -1.5882409811019897
    3. '_len' → logprob: -1.8382409811019897
    4. '_' → logprob: -2.8382411003112793
    5. ' =' → logprob: -4.213241100311279
    6. '_start' → logprob: -5.963241100311279
    7. '```' → logprob: -7.088241100311279
    8. '_end' → logprob: -7.213241100311279
    9. '_count' → logprob: -7.588241100311279
    10. 'ence' → logprob: -7.588241100311279

Token 20: '_limit' (ID: 34361)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059548718854784966
    2. '=' → logprob: -5.130954742431641
    3. ',' → logprob: -10.88095474243164
    4. ' ' → logprob: -12.50595474243164
    5. ' ,' → logprob: -12.75595474243164
    6. ' =
' → logprob: -15.88095474243164
    7. 's' → logprob: -16.00595474243164
    8. '=int' → logprob: -16.00595474243164
    9. '  ' → logprob: -16.25595474243164
    10. ' =)' → logprob: -16.25595474243164

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019868058152496815
    2. '=' → logprob: -6.251986980438232
    3. ' ' → logprob: -10.001986503601074
    4. ',' → logprob: -11.876986503601074
    5. ' ,' → logprob: -12.251986503601074
    6. ' =
' → logprob: -14.876986503601074
    7. ' =
' → logprob: -15.376986503601074
    8. ' =[' → logprob: -15.876986503601074
    9. ' =)' → logprob: -16.50198745727539
    10. '  ' → logprob: -16.62698745727539

Token 22: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.14531917870044708
    2. 'map' → logprob: -2.1453192234039307
    3. ' read' → logprob: -4.270318984985352
    4. 'read' → logprob: -5.645318984985352
    5. ' ' → logprob: -7.645318984985352
    6. ' list' → logprob: -9.895318984985352
    7. 'input' → logprob: -10.395318984985352
    8. ' input' → logprob: -10.395318984985352
    9. 'list' → logprob: -10.770318984985352
    10. '[' → logprob: -10.895318984985352

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.47419336438179016
    2. '(' → logprob: -1.0991933345794678
    3. '(lambda' → logprob: -3.2241933345794678
    4. '(str' → logprob: -6.224193572998047
    5. '<|end|>' → logprob: -6.849193572998047
    6. '(len' → logprob: -6.974193572998047
    7. '[int' → logprob: -9.474193572998047
    8. '(eval' → logprob: -9.849193572998047
    9. 'int' → logprob: -9.849193572998047
    10. '(float' → logprob: -9.974193572998047

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11473816633224487
    2. '(sys' → logprob: -2.3647382259368896
    3. '(read' → logprob: -5.1147379875183105
    4. ')' → logprob: -5.4897379875183105
    5. ',input' → logprob: -6.4897379875183105
    6. 'read' → logprob: -7.1147379875183105
    7. 'sys' → logprob: -7.3647379875183105
    8. '(' → logprob: -7.4897379875183105
    9. '),' → logprob: -8.489738464355469
    10. '(input' → logprob: -8.864738464355469

Token 25: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2212761789560318
    2. ' read' → logprob: -1.8462761640548706
    3. 'sys' → logprob: -3.97127628326416
    4. ' sys' → logprob: -4.47127628326416
    5. 'input' → logprob: -5.22127628326416
    6. ' input' → logprob: -5.59627628326416
    7. ')' → logprob: -6.72127628326416
    8. ' )' → logprob: -10.34627628326416
    9. '(read' → logprob: -11.47127628326416
    10. ' ' → logprob: -11.84627628326416

Token 26: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.747814349073451e-05
    2. '_' → logprob: -11.250017166137695
    3. '_in' → logprob: -13.125017166137695
    4. '_output' → logprob: -14.625017166137695
    5. ' _' → logprob: -14.875017166137695
    6. ')' → logprob: -14.875017166137695
    7. 'input' → logprob: -14.875017166137695
    8. '_inputs' → logprob: -15.000017166137695
    9. '_line' → logprob: -16.000017166137695
    10. '```' → logprob: -16.375017166137695

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6276829838752747
    2. '().' → logprob: -1.2526829242706299
    3. '()' → logprob: -1.7526829242706299
    4. ')' → logprob: -5.502683162689209
    5. '()))' → logprob: -6.127683162689209
    6. '()[' → logprob: -7.377683162689209
    7. '());' → logprob: -10.00268268585205
    8. '()),' → logprob: -10.25268268585205
    9. '()]' → logprob: -10.50268268585205
    10. '();)' → logprob: -10.75268268585205

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.999452772201039e-05
    2. 'strip' → logprob: -10.500029563903809
    3. ' split' → logprob: -13.000029563903809
    4. 'rstrip' → logprob: -17.000030517578125
    5. '(split' → logprob: -17.125030517578125
    6. 's' → logprob: -18.625030517578125
    7. ')' → logprob: -18.875030517578125
    8. 'spl' → logprob: -19.125030517578125
    9. '.split' → logprob: -19.250030517578125
    10. 'plit' → logprob: -20.375030517578125

Token 29: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02663489803671837
    2. '()' → logprob: -4.026634693145752
    3. ')' → logprob: -4.901634693145752
    4. '()))' → logprob: -7.401634693145752
    5. '('' → logprob: -8.40163516998291
    6. '))' → logprob: -9.65163516998291
    7. '(' → logprob: -9.65163516998291
    8. '())
' → logprob: -11.15163516998291
    9. ' ())' → logprob: -11.52663516998291
    10. '(','' → logprob: -12.15163516998291

Token 30: 'mod' (ID: 4847)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.618281364440918
    2. 'result' → logprob: -1.743281364440918
    3. 'sequence' → logprob: -2.118281364440918
    4. 'a' → logprob: -3.743281364440918
    5. 'total' → logprob: -3.993281364440918
    6. ' subse' → logprob: -3.993281364440918
    7. 'max' → logprob: -4.243281364440918
    8. 'data' → logprob: -4.618281364440918
    9. 'numbers' → logprob: -4.618281364440918
    10. 'remaining' → logprob: -4.868281364440918

Token 31: 'ulo' (ID: 5953)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12858518958091736
    2. '=' → logprob: -2.12858510017395
    3. '_' → logprob: -6.753585338592529
    4. ' ' → logprob: -7.753585338592529
    5. ',' → logprob: -11.003584861755371
    6. 'ulus' → logprob: -12.628584861755371
    7. 'ul' → logprob: -12.753584861755371
    8. '  ' → logprob: -12.753584861755371
    9. 'ulous' → logprob: -12.753584861755371
    10. 'ulation' → logprob: -12.878584861755371

Token 32: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07101985067129135
    2. '=' → logprob: -2.6960198879241943
    3. '_' → logprob: -7.196019649505615
    4. ' ' → logprob: -8.071020126342773
    5. '  ' → logprob: -12.821020126342773
    6. ')' → logprob: -12.821020126342773
    7. '(' → logprob: -13.071020126342773
    8. ' =)' → logprob: -13.196020126342773
    9. '_=' → logprob: -13.196020126342773
    10. '_space' → logprob: -13.571020126342773

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009800123982131481
    2. '=' → logprob: -4.634799957275391
    3. ' ' → logprob: -10.25979995727539
    4. ' =
' → logprob: -12.63479995727539
    5. '_' → logprob: -13.38479995727539
    6. ',' → logprob: -13.50979995727539
    7. ' =)' → logprob: -13.50979995727539
    8. '<|end|>' → logprob: -14.63479995727539
    9. ' ,' → logprob: -14.88479995727539
    10. ')' → logprob: -16.13479995727539

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06757298111915588
    2. '10' → logprob: -2.817573070526123
    3. '100' → logprob: -5.192573070526123
    4. '1' → logprob: -10.942572593688965
    5. '998' → logprob: -11.817572593688965
    6. ' int' → logprob: -13.317572593688965
    7. ' ' → logprob: -13.442572593688965
    8. ' (' → logprob: -13.692572593688965
    9. '0' → logprob: -14.567572593688965
    10. 'int' → logprob: -14.692572593688965

Token 35: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09487591683864594
    2. '100' → logprob: -2.4698758125305176
    3. '998' → logprob: -5.344875812530518
    4. '1' → logprob: -7.719875812530518
    5. ' ' → logprob: -8.219876289367676
    6. '(' → logprob: -8.219876289367676
    7. 'int' → logprob: -9.469876289367676
    8. '200' → logprob: -11.219876289367676
    9. '109' → logprob: -11.219876289367676
    10. '2' → logprob: -11.344876289367676

Token 36: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.00038467496051453054
    2. '247' → logprob: -7.87538480758667
    3. '4' → logprob: -13.375384330749512
    4. '```' → logprob: -13.500384330749512
    5. '447' → logprob: -14.875384330749512
    6. '245' → logprob: -15.375384330749512
    7. '24' → logprob: -15.625384330749512
    8. '242' → logprob: -15.625384330749512
    9. '243' → logprob: -16.000385284423828
    10. '444' → logprob: -16.125385284423828

Token 37: '353' (ID: 32996)
  Prédit: '257'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '257' → logprob: -0.015657499432563782
    2. '244' → logprob: -4.265657424926758
    3. '253' → logprob: -7.390657424926758
    4. '247' → logprob: -8.390657424926758
    5. '7' → logprob: -8.890657424926758
    6. '57' → logprob: -9.015657424926758
    7. '258' → logprob: -9.265657424926758
    8. '457' → logprob: -9.515657424926758
    9. '254' → logprob: -9.890657424926758
    10. '273' → logprob: -10.140657424926758

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4256807565689087
    2. '\n' → logprob: -1.3006807565689087
    3. ' 
' → logprob: -3.800680637359619
    4. '' → logprob: -4.300680637359619
    5. '\' → logprob: -4.550680637359619
    6. 'n' → logprob: -4.800680637359619
    7. '<|end|>' → logprob: -5.550680637359619
    8. 'newline' → logprob: -5.800680637359619
    9. 'result' → logprob: -5.925680637359619
    10. '
' → logprob: -5.925680637359619

Token 39: 'perm' (ID: 34794)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19462808966636658
    2. 'result' → logprob: -2.0696280002593994
    3. 'n' → logprob: -3.8196280002593994
    4. 'def' → logprob: -4.5696282386779785
    5. 'a' → logprob: -4.9446282386779785
    6. '#' → logprob: -6.0696282386779785
    7. 'answer' → logprob: -6.5696282386779785
    8. 'd' → logprob: -7.0696282386779785
    9. 'max' → logprob: -7.1946282386779785
    10. 'count' → logprob: -7.1946282386779785

Token 40: '_count' (ID: 7536)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.023881573230028152
    2. 'utations' → logprob: -3.773881673812866
    3. ' =' → logprob: -7.773881435394287
    4. '=' → logprob: -8.898881912231445
    5. 'ut' → logprob: -10.773881912231445
    6. '_' → logprob: -11.273881912231445
    7. 'utable' → logprob: -11.398881912231445
    8. 'ation' → logprob: -11.773881912231445
    9. 'utate' → logprob: -12.023881912231445
    10. 'utat' → logprob: -12.273881912231445

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10826761275529861
    2. '=' → logprob: -2.6082675457000732
    3. '_' → logprob: -4.108267784118652
    4. '(' → logprob: -4.483267784118652
    5. 's' → logprob: -7.233267784118652
    6. '[' → logprob: -8.983267784118652
    7. ' ' → logprob: -9.108267784118652
    8. ')' → logprob: -10.108267784118652
    9. '_space' → logprob: -10.233267784118652
    10. ',' → logprob: -10.608267784118652

Token 42: ' [[' (ID: 9237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39111360907554626
    2. ' [' → logprob: -1.5161136388778687
    3. '1' → logprob: -2.516113519668579
    4. '[' → logprob: -4.016113758087158
    5. '0' → logprob: -6.016113758087158
    6. ' total' → logprob: -6.391113758087158
    7. 'total' → logprob: -8.01611328125
    8. '[]' → logprob: -9.14111328125
    9. ' lambda' → logprob: -9.14111328125
    10. ' []' → logprob: -9.39111328125

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.621933451038785e-05
    2. ' ' → logprob: -10.500056266784668
    3. '-' → logprob: -11.625056266784668
    4. 'False' → logprob: -11.875056266784668
    5. ']' → logprob: -12.000056266784668
    6. '1' → logprob: -12.625056266784668
    7. '[' → logprob: -13.375056266784668
    8. ']]' → logprob: -15.125056266784668
    9. '(' → logprob: -15.250056266784668
    10. 'None' → logprob: -15.750056266784668

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06198180466890335
    2. ' for' → logprob: -3.1869819164276123
    3. ']*' → logprob: -4.436981678009033
    4. ']*(' → logprob: -5.436981678009033
    5. ' ]' → logprob: -6.686981678009033
    6. 'for' → logprob: -6.811981678009033
    7. ']]' → logprob: -8.686982154846191
    8. '][' → logprob: -10.811982154846191
    9. ' ' → logprob: -11.061982154846191
    10. ',' → logprob: -11.061982154846191

Token 45: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6230266690254211
    2. ']' → logprob: -0.9980266690254211
    3. ']*' → logprob: -2.7480266094207764
    4. 'for' → logprob: -4.1230268478393555
    5. ']*(' → logprob: -4.2480268478393555
    6. ' ]' → logprob: -8.123026847839355
    7. '[' → logprob: -9.623026847839355
    8. ']+' → logprob: -9.873026847839355
    9. '][' → logprob: -9.998026847839355
    10. ',' → logprob: -10.623026847839355

Token 46: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.2242407351732254
    2. '(sub' → logprob: -1.724240779876709
    3. '(' → logprob: -4.099240779876709
    4. '(max' → logprob: -5.474240779876709
    5. ' (' → logprob: -8.09924030303955
    6. '(n' → logprob: -8.34924030303955
    7. '501' → logprob: -8.47424030303955
    8. '(i' → logprob: -8.59924030303955
    9. '500' → logprob: -8.59924030303955
    10. '(sum' → logprob: -9.22424030303955

Token 47: '2' (ID: 17)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.47312864661216736
    2. 'sub' → logprob: -1.0981286764144897
    3. '(total' → logprob: -3.9731285572052
    4. ' total' → logprob: -4.598128795623779
    5. '(sub' → logprob: -4.598128795623779
    6. ' subse' → logprob: -7.348128795623779
    7. '(' → logprob: -7.473128795623779
    8. ' sub' → logprob: -7.848128795623779
    9. 's' → logprob: -8.098128318786621
    10. '100' → logprob: -8.348128318786621

Token 48: ' *' (ID: 425)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8542732000350952
    2. '*' → logprob: -2.4792733192443848
    3. ' *' → logprob: -2.4792733192443848
    4. '05' → logprob: -2.4792733192443848
    5. '01' → logprob: -2.4792733192443848
    6. '0' → logprob: -2.7292733192443848
    7. '+' → logprob: -3.4792733192443848
    8. ' +' → logprob: -3.7292733192443848
    9. ')' → logprob: -4.104273319244385
    10. '06' → logprob: -4.104273319244385

Token 49: ' idx' (ID: 14016)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.38572749495506287
    2. 'sub' → logprob: -1.3857275247573853
    3. ' total' → logprob: -3.2607274055480957
    4. '10' → logprob: -3.8857274055480957
    5. ' subse' → logprob: -5.510727405548096
    6. 'max' → logprob: -6.010727405548096
    7. '100' → logprob: -6.510727405548096
    8. '500' → logprob: -7.135727405548096
    9. ' ' → logprob: -7.635727405548096
    10. '(sub' → logprob: -7.885727405548096

Token 50: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26044654846191406
    2. ' +' → logprob: -1.510446548461914
    3. '_length' → logprob: -5.885446548461914
    4. '-' → logprob: -6.510446548461914
    5. ' -' → logprob: -6.760446548461914
    6. ')' → logprob: -6.760446548461914
    7. '_len' → logprob: -7.885446548461914
    8. 'total' → logprob: -8.260446548461914
    9. ' ' → logprob: -8.510446548461914
    10. '[' → logprob: -8.635446548461914

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14680978655815125
    2. '2' → logprob: -2.3968098163604736
    3. ' ' → logprob: -3.1468098163604736
    4. '3' → logprob: -6.0218095779418945
    5. '5' → logprob: -10.146809577941895
    6. '4' → logprob: -10.271809577941895
    7. '10' → logprob: -11.584309577941895
    8. '7' → logprob: -11.896809577941895
    9. '6' → logprob: -12.334309577941895
    10. '  ' → logprob: -12.459309577941895

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23388636112213135
    2. '2' → logprob: -1.6088863611221313
    3. '3' → logprob: -4.858886241912842
    4. ' ' → logprob: -7.983886241912842
    5. '5' → logprob: -8.73388671875
    6. '4' → logprob: -9.60888671875
    7. '10' → logprob: -9.73388671875
    8. '7' → logprob: -11.04638671875
    9. '11' → logprob: -12.35888671875
    10. '6' → logprob: -12.42138671875

Token 53: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2803846001625061
    2. ')' → logprob: -1.9053845405578613
    3. 'for' → logprob: -2.7803845405578613
    4. ']' → logprob: -3.7803845405578613
    5. ' ' → logprob: -5.030384540557861
    6. ' ]' → logprob: -6.030384540557861
    7. ' )' → logprob: -6.655384540557861
    8. ')]' → logprob: -7.530384540557861
    9. '[' → logprob: -10.03038501739502
    10. '```' → logprob: -10.90538501739502

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027589978650212288
    2. 'for' → logprob: -3.652590036392212
    3. ' ' → logprob: -7.777589797973633
    4. ')' → logprob: -7.902589797973633
    5. ']' → logprob: -8.152589797973633
    6. ' ]' → logprob: -9.027589797973633
    7. '<|end|>' → logprob: -10.152589797973633
    8. '	for' → logprob: -11.152589797973633
    9. ' )' → logprob: -11.277589797973633
    10. '[' → logprob: -11.277589797973633

Token 55: ' idx' (ID: 14016)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03110380284488201
    2. ' idx' → logprob: -3.5311038494110107
    3. 'range' → logprob: -6.781103610992432
    4. 'idx' → logprob: -9.15610408782959
    5. ' _' → logprob: -10.15610408782959
    6. ' in' → logprob: -11.03110408782959
    7. ' i' → logprob: -11.40610408782959
    8. ' ' → logprob: -11.65610408782959
    9. '	range' → logprob: -11.90610408782959
    10. ' xrange' → logprob: -12.03110408782959

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004662591964006424
    2. 'in' → logprob: -5.37966251373291
    3. '<|end|>' → logprob: -10.62966251373291
    4. ' range' → logprob: -11.62966251373291
    5. 'range' → logprob: -12.12966251373291
    6. ' ' → logprob: -13.25466251373291
    7. '<|end|>' → logprob: -14.12966251373291
    8. '(range' → logprob: -14.37966251373291
    9. '	in' → logprob: -15.25466251373291
    10. '(' → logprob: -16.379663467407227

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324605919420719
    2. ' range' → logprob: -3.7732460498809814
    3. '(range' → logprob: -14.773245811462402
    4. '	range' → logprob: -15.523245811462402
    5. ' ' → logprob: -18.14824676513672
    6. 'rang' → logprob: -18.52324676513672
    7. ' xrange' → logprob: -19.14824676513672
    8. '```' → logprob: -19.14824676513672
    9. 're' → logprob: -19.27324676513672
    10. 'r' → logprob: -19.64824676513672

Token 58: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0028744153678417206
    2. '(' → logprob: -5.877874374389648
    3. 'total' → logprob: -9.877874374389648
    4. ' (' → logprob: -11.502874374389648
    5. ' total' → logprob: -12.377874374389648
    6. '(len' → logprob: -12.627874374389648
    7. '(t' → logprob: -14.627874374389648
    8. '(n' → logprob: -17.00287437438965
    9. '(max' → logprob: -17.37787437438965
    10. '(per' → logprob: -17.75287437438965

Token 59: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00020950057660229504
    2. '_' → logprob: -8.75020980834961
    3. '_l' → logprob: -10.50020980834961
    4. '+' → logprob: -12.00020980834961
    5. '_lengths' → logprob: -12.25020980834961
    6. '_len' → logprob: -12.50020980834961
    7. ' _' → logprob: -13.12520980834961
    8. '_le' → logprob: -13.37520980834961
    9. ')' → logprob: -14.00020980834961
    10. 'length' → logprob: -14.12520980834961

Token 60: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014589221216738224
    2. '+' → logprob: -4.264589309692383
    3. ' +' → logprob: -7.889589309692383
    4. ' )' → logprob: -11.264589309692383
    5. ')' → logprob: -11.264589309692383
    6. ']' → logprob: -12.139589309692383
    7. ')])' → logprob: -12.139589309692383
    8. ')]
' → logprob: -12.389589309692383
    9. ')],' → logprob: -12.764589309692383
    10. ')][' → logprob: -13.264589309692383

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020940054208040237
    2. ' ' → logprob: -4.020939826965332
    3. '2' → logprob: -5.895939826965332
    4. '3' → logprob: -11.583439826965332
    5. '```' → logprob: -12.333439826965332
    6. '  ' → logprob: -12.833439826965332
    7. '5' → logprob: -13.020939826965332
    8. '10' → logprob: -13.020939826965332
    9. '0' → logprob: -13.208439826965332
    10. '   ' → logprob: -13.395939826965332

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027179757598787546
    2. '2' → logprob: -6.002717971801758
    3. ' ' → logprob: -8.377717971801758
    4. '3' → logprob: -11.877717971801758
    5. '0' → logprob: -13.690217971801758
    6. '5' → logprob: -13.815217971801758
    7. '10' → logprob: -14.252717971801758
    8. '4' → logprob: -14.690217971801758
    9. '   ' → logprob: -14.752717971801758
    10. '  ' → logprob: -14.877717971801758

Token 63: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.718606891809031e-05
    2. ']' → logprob: -9.750066757202148
    3. ')]
' → logprob: -12.875066757202148
    4. ')' → logprob: -12.875066757202148
    5. ' )' → logprob: -13.875066757202148
    6. ' ]' → logprob: -14.000066757202148
    7. ')],' → logprob: -14.750066757202148
    8. '])]' → logprob: -14.875066757202148
    9. '])' → logprob: -15.625066757202148
    10. ']]' → logprob: -15.625066757202148

Token 64: 'perm' (ID: 34794)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.73446003627032e-05
    2. '_counts' → logprob: -10.500097274780273
    3. 'ut' → logprob: -10.625097274780273
    4. 'utation' → logprob: -10.875097274780273
    5. 'utations' → logprob: -11.000097274780273
    6. '_' → logprob: -13.000097274780273
    7. 'uting' → logprob: -14.125097274780273
    8. 'ute' → logprob: -14.250097274780273
    9. '_cut' → logprob: -14.250097274780273
    10. 'utable' → logprob: -14.375097274780273

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0926494225859642
    2. '<|end|>' → logprob: -2.467649459838867
    3. '<|end|>' → logprob: -6.592649459838867
    4. '```' → logprob: -7.467649459838867
    5. '[user' → logprob: -7.967649459838867
    6. '[len' → logprob: -8.217649459838867
    7. '[]' → logprob: -8.467649459838867
    8. '[-' → logprob: -8.717649459838867
    9. ']' → logprob: -8.717649459838867
    10. '[
' → logprob: -9.342649459838867

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018530222587287426
    2. '1' → logprob: -8.875185012817383
    3. ' ' → logprob: -10.125185012817383
    4. '[' → logprob: -13.500185012817383
    5. '][' → logprob: -13.562685012817383
    6. '-' → logprob: -14.375185012817383
    7. ']' → logprob: -15.125185012817383
    8. '2' → logprob: -15.312685012817383
    9. '```' → logprob: -15.687685012817383
    10. '(' → logprob: -15.750185012817383

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00028612653841264546
    2. ']' → logprob: -8.625286102294922
    3. '[' → logprob: -9.625286102294922
    4. ' ][' → logprob: -10.250286102294922
    5. '][-' → logprob: -12.875286102294922
    6. ']=' → logprob: -13.250286102294922
    7. '][:' → logprob: -16.125286102294922
    8. '][]' → logprob: -16.500286102294922
    9. '][_' → logprob: -16.500286102294922
    10. '	' → logprob: -16.812786102294922

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603108085691929
    2. 'total' → logprob: -4.516031265258789
    3. '1' → logprob: -5.391031265258789
    4. ' total' → logprob: -9.141031265258789
    5. ' ' → logprob: -9.391031265258789
    6. ']' → logprob: -10.328531265258789
    7. 'tot' → logprob: -10.391031265258789
    8. '-' → logprob: -10.703531265258789
    9. 'len' → logprob: -10.953531265258789
    10. '(' → logprob: -11.266031265258789

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.666993507067673e-05
    2. ']=' → logprob: -10.750036239624023
    3. ' ]' → logprob: -11.125036239624023
    4. ']+=' → logprob: -15.500036239624023
    5. '=' → logprob: -16.000036239624023
    6. '`]' → logprob: -18.625036239624023
    7. ' =' → logprob: -19.375036239624023
    8. '[' → logprob: -19.375036239624023
    9. '()]' → logprob: -19.500036239624023
    10. '']' → logprob: -20.000036239624023

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014152854681015
    2. '=' → logprob: -1.7014153003692627
    3. '=True' → logprob: -14.326415061950684
    4. ']' → logprob: -14.826415061950684
    5. ' +=' → logprob: -14.951415061950684
    6. ' ' → logprob: -15.701415061950684
    7. ' |=' → logprob: -16.076416015625
    8. '<|end|>' → logprob: -16.326416015625
    9. '+=' → logprob: -16.701416015625
    10. ' ' → logprob: -17.076416015625

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -16.625003814697266
    4. '   ' → logprob: -19.375003814697266
    5. '  ' → logprob: -19.625003814697266
    6. '```' → logprob: -20.125003814697266
    7. '۱' → logprob: -20.250003814697266
    8. '<|end|>' → logprob: -20.437503814697266
    9. '১' → logprob: -20.500003814697266
    10. '...' → logprob: -20.875003814697266

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.625
    3. ' ' → logprob: -17.75
    4. '```' → logprob: -20.625
    5. '১' → logprob: -21.0
    6. '' → logprob: -21.25
    7. '`' → logprob: -21.75
    8. '۱' → logprob: -21.8125
    9. '...' → logprob: -21.9375
    10. '१' → logprob: -22.0

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6465098261833191
    2. '\n' → logprob: -1.7715098857879639
    3. '<|end|>' → logprob: -1.7715098857879639
    4. 'for' → logprob: -3.271509885787964
    5. '\' → logprob: -3.646509885787964
    6. '```' → logprob: -3.896509885787964
    7. '[' → logprob: -4.271509647369385
    8. ' for' → logprob: -5.021509647369385
    9. 'newline' → logprob: -5.021509647369385
    10. '  
' → logprob: -5.521509647369385

Token 75: 'valid' (ID: 3197)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3249068558216095
    2. ' for' → logprob: -1.324906826019287
    3. '
' → logprob: -5.699906826019287
    4. '```' → logprob: -5.699906826019287
    5. '\n' → logprob: -5.949906826019287
    6. '<|end|>' → logprob: -6.199906826019287
    7. '	for' → logprob: -9.699907302856445
    8. ' 
' → logprob: -10.074907302856445
    9. ' ' → logprob: -10.949907302856445
    10. '[' → logprob: -11.074907302856445

Token 76: '_perm' (ID: 128866)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1925538033246994
    2. '_count' → logprob: -2.192553758621216
    3. '_per' → logprob: -3.942553758621216
    4. '_counts' → logprob: -4.567553997039795
    5. '_indices' → logprob: -4.817553997039795
    6. '_sub' → logprob: -5.817553997039795
    7. '_lengths' → logprob: -5.942553997039795
    8. '_length' → logprob: -6.192553997039795
    9. '_range' → logprob: -6.192553997039795
    10. '_sum' → logprob: -6.317553997039795

Token 77: '_total' (ID: 23814)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7485314607620239
    2. '_count' → logprob: -0.7485314607620239
    3. 'utations' → logprob: -3.2485313415527344
    4. '_counts' → logprob: -4.373531341552734
    5. '_' → logprob: -6.748531341552734
    6. '[' → logprob: -7.623531341552734
    7. 'ut' → logprob: -9.123531341552734
    8. '=' → logprob: -9.123531341552734
    9. 'utation' → logprob: -9.123531341552734
    10. ' =' → logprob: -9.748531341552734

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20045483112335205
    2. ' +=' → logprob: -1.825454831123352
    3. '=' → logprob: -4.0754547119140625
    4. '[' → logprob: -6.3254547119140625
    5. '+=' → logprob: -6.9504547119140625
    6. '_' → logprob: -8.075454711914062
    7. ' ' → logprob: -9.200454711914062
    8. '<|end|>' → logprob: -9.450454711914062
    9. '[:]' → logprob: -10.075454711914062
    10. ')' → logprob: -10.075454711914062

Token 79: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08898930996656418
    2. ' ' → logprob: -2.4639892578125
    3. '1' → logprob: -9.9639892578125
    4. '[' → logprob: -13.9639892578125
    5. ' [' → logprob: -14.2139892578125
    6. ' ' → logprob: -15.0889892578125
    7. '(' → logprob: -16.5889892578125
    8. 'int' → logprob: -16.8389892578125
    9. '  ' → logprob: -16.8389892578125
    10. '2' → logprob: -16.9639892578125

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007581694517284632
    2. '1' → logprob: -7.250758171081543
    3. ' ' → logprob: -10.625758171081543
    4. ']' → logprob: -10.750758171081543
    5. ')' → logprob: -14.500758171081543
    6. '[' → logprob: -14.625758171081543
    7. '   ' → logprob: -15.313258171081543
    8. '```' → logprob: -15.813258171081543
    9. '-' → logprob: -16.063257217407227
    10. ' ]' → logprob: -16.438257217407227

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006827684701420367
    2. ' for' → logprob: -7.750682830810547
    3. 'for' → logprob: -9.125682830810547
    4. ']*(' → logprob: -9.875682830810547
    5. ',' → logprob: -10.250682830810547
    6. ' ]' → logprob: -10.625682830810547
    7. ']*' → logprob: -11.250682830810547
    8. '(' → logprob: -11.625682830810547
    9. ')' → logprob: -12.875682830810547
    10. ']+' → logprob: -13.250682830810547

Token 82: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.005648017395287752
    2. ' (' → logprob: -5.380648136138916
    3. '(sub' → logprob: -7.380648136138916
    4. '(' → logprob: -8.255647659301758
    5. '(max' → logprob: -9.755647659301758
    6. '(mod' → logprob: -9.755647659301758
    7. 'total' → logprob: -11.255647659301758
    8. '((' → logprob: -12.380647659301758
    9. '(per' → logprob: -12.880647659301758
    10. ' ' → logprob: -13.255647659301758

Token 84: 'total' (ID: 9577)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.3225700557231903
    2. 'total' → logprob: -1.3225700855255127
    3. '(' → logprob: -5.447569847106934
    4. ' total' → logprob: -5.822569847106934
    5. ' (' → logprob: -6.572569847106934
    6. '2' → logprob: -7.822569847106934
    7. '(max' → logprob: -9.822569847106934
    8. '1' → logprob: -10.572569847106934
    9. 'tot' → logprob: -10.697569847106934
    10. '((' → logprob: -10.697569847106934

Token 85: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.339278580620885e-06
    2. 'length' → logprob: -13.125001907348633
    3. '_l' → logprob: -16.125001907348633
    4. 'Length' → logprob: -16.875001907348633
    5. '+' → logprob: -17.375001907348633
    6. '_LENGTH' → logprob: -18.000001907348633
    7. '_len' → logprob: -18.000001907348633
    8. 'ength' → logprob: -18.250001907348633
    9. '_lengths' → logprob: -18.625001907348633
    10. '_' → logprob: -18.875001907348633

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02054515667259693
    2. ' +' → logprob: -3.895545244216919
    3. '1' → logprob: -13.02054500579834
    4. '+
' → logprob: -14.77054500579834
    5. '```' → logprob: -15.39554500579834
    6. '2' → logprob: -15.64554500579834
    7. '＋' → logprob: -16.520545959472656
    8. ')' → logprob: -16.645545959472656
    9. ' +
' → logprob: -16.770545959472656
    10. '_plus' → logprob: -17.020545959472656

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0069856722839176655
    2. '2' → logprob: -5.006985664367676
    3. ' ' → logprob: -8.256985664367676
    4. '3' → logprob: -12.381985664367676
    5. '```' → logprob: -13.631985664367676
    6. '   ' → logprob: -13.944485664367676
    7. '5' → logprob: -14.069485664367676
    8. '10' → logprob: -14.069485664367676
    9. '4' → logprob: -14.631985664367676
    10. '11' → logprob: -14.881985664367676

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046592652797698975
    2. '2' → logprob: -5.379659175872803
    3. ' ' → logprob: -10.504659652709961
    4. '3' → logprob: -12.129659652709961
    5. '11' → logprob: -13.692159652709961
    6. '10' → logprob: -13.879659652709961
    7. '5' → logprob: -14.254659652709961
    8. '```' → logprob: -14.692159652709961
    9. '4' → logprob: -14.817159652709961
    10. '   ' → logprob: -14.879659652709961

Token 89: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.726595241460018e-05
    2. ')
' → logprob: -10.25003719329834
    3. ' )' → logprob: -14.25003719329834
    4. ']' → logprob: -14.62503719329834
    5. ')

' → logprob: -15.25003719329834
    6. '])' → logprob: -15.75003719329834
    7. '）' → logprob: -16.250038146972656
    8. '))' → logprob: -16.750038146972656
    9. '```' → logprob: -16.750038146972656
    10. '`)' → logprob: -17.000038146972656

Token 90: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005282257683575153
    2. ' for' → logprob: -5.255282402038574
    3. '```' → logprob: -10.630282402038574
    4. 'valid' → logprob: -11.630282402038574
    5. ')' → logprob: -12.505282402038574
    6. '
' → logprob: -12.880282402038574
    7. '\n' → logprob: -13.130282402038574
    8. '[' → logprob: -14.005282402038574
    9. 'idx' → logprob: -14.255282402038574
    10. 'range' → logprob: -14.380282402038574

Token 91: ' curr' (ID: 10495)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.014701295644044876
    2. ' length' → logprob: -5.0147013664245605
    3. ' i' → logprob: -5.7647013664245605
    4. ' total' → logprob: -6.3897013664245605
    5. ' _' → logprob: -6.6397013664245605
    6. ' ' → logprob: -6.8897013664245605
    7. 'idx' → logprob: -7.6397013664245605
    8. '_' → logprob: -9.139700889587402
    9. ' current' → logprob: -9.764700889587402
    10. ' index' → logprob: -9.889700889587402

Token 92: '_len' (ID: 13683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04116222262382507
    2. '_idx' → logprob: -3.6661622524261475
    3. '_length' → logprob: -5.166162014007568
    4. ' in' → logprob: -5.416162014007568
    5. ' _' → logprob: -5.791162014007568
    6. '_len' → logprob: -6.791162014007568
    7. '_i' → logprob: -9.166162490844727
    8. '_in' → logprob: -9.291162490844727
    9. '_index' → logprob: -9.791162490844727
    10. '_num' → logprob: -10.041162490844727

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016087042167782784
    2. 'in' → logprob: -4.141087055206299
    3. ' ' → logprob: -10.01608657836914
    4. '	in' → logprob: -12.76608657836914
    5. ',' → logprob: -13.76608657836914
    6. '```' → logprob: -14.39108657836914
    7. 'range' → logprob: -15.01608657836914
    8. '_in' → logprob: -15.14108657836914
    9. 'In' → logprob: -15.26608657836914
    10. 'space' → logprob: -15.26608657836914

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687410950660706
    2. ' range' → logprob: -1.1368740797042847
    3. '(range' → logprob: -13.136874198913574
    4. '	range' → logprob: -14.511874198913574
    5. ' ' → logprob: -14.636874198913574
    6. '   ' → logprob: -16.636873245239258
    7. ')' → logprob: -17.261873245239258
    8. '1' → logprob: -17.511873245239258
    9. '```' → logprob: -18.136873245239258
    10. '  ' → logprob: -18.136873245239258

Token 95: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6537622034084052e-05
    2. '(total' → logprob: -10.87502670288086
    3. '1' → logprob: -11.87502670288086
    4. ' (' → logprob: -14.62502670288086
    5. 'total' → logprob: -16.25002670288086
    6. ' ' → logprob: -18.37502670288086
    7. '(
' → logprob: -19.12502670288086
    8. ' total' → logprob: -19.75002670288086
    9. ',' → logprob: -20.37502670288086
    10. '2' → logprob: -20.87502670288086

Token 96: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00018947436183225363
    2. '_len' → logprob: -8.750189781188965
    3. 'length' → logprob: -10.500189781188965
    4. '_lengths' → logprob: -13.625189781188965
    5. 'Length' → logprob: -14.250189781188965
    6. '_l' → logprob: -15.125189781188965
    7. 'ength' → logprob: -15.625189781188965
    8. '+' → logprob: -15.625189781188965
    9. '_' → logprob: -15.875189781188965
    10. '1' → logprob: -16.12518882751465

Token 97: '):
' (ID: 1883)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25256723165512085
    2. '+' → logprob: -1.5025672912597656
    3. '):' → logprob: -7.377567291259766
    4. '):
' → logprob: -12.127567291259766
    5. ' ' → logprob: -12.877567291259766
    6. ' ):' → logprob: -13.252567291259766
    7. '1' → logprob: -13.752567291259766
    8. '   ' → logprob: -14.627567291259766
    9. '+:' → logprob: -15.377567291259766
    10. ')' → logprob: -15.377567291259766

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2291930615901947
    2. ' for' → logprob: -1.604193091392517
    3. 'for' → logprob: -5.979193210601807
    4. '	for' → logprob: -7.979193210601807
    5. '```' → logprob: -8.104192733764648
    6. ' ' → logprob: -8.604192733764648
    7. '<|end|>' → logprob: -8.604192733764648
    8. '    ' → logprob: -9.354192733764648
    9. '   ' → logprob: -10.479192733764648
    10. '    
' → logprob: -10.729192733764648

Token 99: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026809226721525192
    2. 'for' (adapté à ' for') → logprob: -3.9018092155456543
    3. '   ' → logprob: -5.151809215545654
    4. ' next' → logprob: -8.776809692382812
    5. ' ' → logprob: -9.276809692382812
    6. ' curr' → logprob: -9.901809692382812
    7. '    ' → logprob: -9.901809692382812
    8. '	for' → logprob: -10.026809692382812
    9. 'next' → logprob: -11.526809692382812
    10. 'curr' → logprob: -11.526809692382812

Token 100: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.4994526207447052
    2. ' curr' → logprob: -2.249452590942383
    3. 'sum' → logprob: -3.249452590942383
    4. 'sub' → logprob: -3.374452590942383
    5. 'prev' → logprob: -3.624452590942383
    6. 'pos' → logprob: -3.999452590942383
    7. 'offset' → logprob: -4.124452590942383
    8. 'used' → logprob: -4.249452590942383
    9. ' subse' → logprob: -4.374452590942383
    10. 'diff' → logprob: -4.499452590942383

Token 101: '_sum' (ID: 29859)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.392824874026701e-05
    2. '_idx' → logprob: -11.00003433227539
    3. '_length' → logprob: -11.50003433227539
    4. '_val' → logprob: -12.87503433227539
    5. '_count' → logprob: -13.75003433227539
    6. '_size' → logprob: -14.50003433227539
    7. '_pos' → logprob: -14.62503433227539
    8. '_num' → logprob: -14.87503433227539
    9. '_l' → logprob: -15.12503433227539
    10. ')_' → logprob: -15.37503433227539

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006604921072721481
    2. 'in' → logprob: -7.375660419464111
    3. ' ' → logprob: -11.12566089630127
    4. ',' → logprob: -11.75066089630127
    5. '_' → logprob: -12.62566089630127
    6. '	in' → logprob: -13.00066089630127
    7. '_in' → logprob: -13.87566089630127
    8. '```' → logprob: -14.00066089630127
    9. 's' → logprob: -14.62566089630127
    10. '  ' → logprob: -14.75066089630127

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061981577426195145
    2. ' range' → logprob: -2.811981678009033
    3. '(range' → logprob: -11.311981201171875
    4. 'perm' → logprob: -14.311981201171875
    5. ' ' → logprob: -15.186981201171875
    6. '   ' → logprob: -15.311981201171875
    7. ')' → logprob: -15.436981201171875
    8. '	range' → logprob: -15.811981201171875
    9. '[' → logprob: -16.561981201171875
    10. '(' → logprob: -16.561981201171875

Token 104: '(curr' (ID: 49739)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.576153576374054
    2. '(' → logprob: -0.826153576374054
    3. '2' → logprob: -9.326153755187988
    4. '(-' → logprob: -9.701153755187988
    5. 'len' → logprob: -9.951153755187988
    6. '((' → logprob: -12.326153755187988
    7. '(curr' → logprob: -12.451153755187988
    8. '(total' → logprob: -12.826153755187988
    9. '(min' → logprob: -13.076153755187988
    10. '(sub' → logprob: -13.201153755187988

Token 105: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.009845804423093796
    2. '_sum' → logprob: -4.634845733642578
    3. '+' → logprob: -10.634845733642578
    4. 'sum' → logprob: -11.134845733642578
    5. '_length' → logprob: -11.634845733642578
    6. 'len' → logprob: -11.759845733642578
    7. 'Len' → logprob: -12.009845733642578
    8. '_sub' → logprob: -12.259845733642578
    9. '_count' → logprob: -12.259845733642578
    10. '*' → logprob: -12.884845733642578

Token 106: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14222688972949982
    2. '*' → logprob: -2.2672269344329834
    3. ' +' → logprob: -3.8922269344329834
    4. '+' → logprob: -4.767226696014404
    5. ',' → logprob: -11.017227172851562
    6. ' ' → logprob: -11.517227172851562
    7. '):' → logprob: -11.642227172851562
    8. '*(' → logprob: -12.017227172851562
    9. 's' → logprob: -12.142227172851562
    10. ')' → logprob: -12.267227172851562

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7042348980903625
    2. ' ' → logprob: -0.9542348980903625
    3. '-' → logprob: -3.4542348384857178
    4. ' curr' → logprob: -3.5792348384857178
    5. ' -' → logprob: -3.9542348384857178
    6. 'curr' → logprob: -4.329235076904297
    7. ' (' → logprob: -5.204235076904297
    8. ' len' → logprob: -5.329235076904297
    9. '(' → logprob: -5.454235076904297
    10. ' total' → logprob: -5.579235076904297

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7992072105407715
    2. 'curr' → logprob: -1.2992072105407715
    3. '-c' → logprob: -2.1742072105407715
    4. '-' → logprob: -2.2992072105407715
    5. 'len' → logprob: -4.1742072105407715
    6. ' curr' → logprob: -4.1742072105407715
    7. ' ' → logprob: -4.7992072105407715
    8. '(' → logprob: -4.9242072105407715
    9. 'total' → logprob: -5.5492072105407715
    10. ' -' → logprob: -5.9242072105407715

Token 109: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5760115385055542
    2. ' *' → logprob: -0.8260115385055542
    3. '[curr' → logprob: -9.951011657714844
    4. ' curr' → logprob: -11.201011657714844
    5. 'curr' → logprob: -12.076011657714844
    6. ' ' → logprob: -13.451011657714844
    7. '(curr' → logprob: -13.701011657714844
    8. '+' → logprob: -14.326011657714844
    9. ' +' → logprob: -14.701011657714844
    10. '*c' → logprob: -14.826011657714844

Token 110: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.01467498205602169
    2. '(curr' → logprob: -4.264675140380859
    3. ' curr' → logprob: -7.639675140380859
    4. 'total' → logprob: -11.13967514038086
    5. ' (' → logprob: -11.51467514038086
    6. '[curr' → logprob: -13.01467514038086
    7. '(' → logprob: -13.88967514038086
    8. 'idx' → logprob: -14.01467514038086
    9. '(total' → logprob: -14.38967514038086
    10. '	curr' → logprob: -14.63967514038086

Token 111: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0002719449403230101
    2. '_sum' → logprob: -8.250271797180176
    3. 'len' → logprob: -11.750271797180176
    4. '_length' → logprob: -13.875271797180176
    5. 'sum' → logprob: -14.375271797180176
    6. '+' → logprob: -15.000271797180176
    7. '_' → logprob: -16.250272750854492
    8. '<len' → logprob: -16.250272750854492
    9. '_l' → logprob: -16.375272750854492
    10. '_val' → logprob: -16.375272750854492

Token 112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2015201449394226
    2. '+' → logprob: -1.7015202045440674
    3. ')' → logprob: -10.076519966125488
    4. '   ' → logprob: -10.826519966125488
    5. ' ' → logprob: -11.326519966125488
    6. '):' → logprob: -11.326519966125488
    7. '):
' → logprob: -11.576519966125488
    8. ')+' → logprob: -12.951519966125488
    9. '-' → logprob: -13.951519966125488
    10. ' ' → logprob: -14.014019966125488

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009420731803402305
    2. '2' → logprob: -7.250942230224609
    3. ' ' → logprob: -8.37594223022461
    4. '0' → logprob: -14.56344223022461
    5. '   ' → logprob: -15.31344223022461
    6. '3' → logprob: -15.37594223022461
    7. '
' → logprob: -15.68844223022461
    8. ')' → logprob: -15.87594223022461
    9. '```' → logprob: -16.06344223022461
    10. '  ' → logprob: -16.81344223022461

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002263046189909801
    2. '2' → logprob: -8.875226020812988
    3. ' ' → logprob: -9.375226020812988
    4. ')' → logprob: -14.875226020812988
    5. '   ' → logprob: -15.125226020812988
    6. '0' → logprob: -15.875226020812988
    7. '```' → logprob: -15.875226020812988
    8. '+' → logprob: -16.125226974487305
    9. '
' → logprob: -16.312726974487305
    10. '3' → logprob: -16.375226974487305

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2911493182182312
    2. ':' → logprob: -1.541149377822876
    3. '):
' → logprob: -3.541149377822876
    4. '+' → logprob: -5.166149139404297
    5. '   ' → logprob: -6.416149139404297
    6. '       ' → logprob: -6.791149139404297
    7. ':
' → logprob: -7.916149139404297
    8. ']:' → logprob: -8.041149139404297
    9. ' +' → logprob: -9.416149139404297
    10. '):
' → logprob: -9.666149139404297

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008495326619595289
    2. ' for' → logprob: -8.500849723815918
    3. '[' → logprob: -8.750849723815918
    4. '<|end|>' → logprob: -8.875849723815918
    5. '```' → logprob: -9.750849723815918
    6. ' perm' → logprob: -10.125849723815918
    7. '   ' → logprob: -10.125849723815918
    8. '	' → logprob: -10.375849723815918
    9. ',' → logprob: -10.625849723815918
    10. '	   ' → logprob: -11.000849723815918

Token 117: ' next' (ID: 2613)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9628315567970276
    2. '       ' → logprob: -1.2128314971923828
    3. 'if' → logprob: -1.3378314971923828
    4. '           ' → logprob: -3.087831497192383
    5. 'count' → logprob: -5.212831497192383
    6. ' for' → logprob: -6.462831497192383
    7. 'perm' → logprob: -6.462831497192383
    8. ' perm' → logprob: -6.962831497192383
    9. ' count' → logprob: -7.462831497192383
    10. 'for' → logprob: -7.587831497192383

Token 118: '_len' (ID: 13683)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.23247550427913666
    2. '_len' → logprob: -1.7324755191802979
    3. '_val' → logprob: -4.107475280761719
    4. '_count' → logprob: -5.107475280761719
    5. '_' → logprob: -5.232475280761719
    6. '_perm' → logprob: -6.857475280761719
    7. '_value' → logprob: -7.482475280761719
    8. '_length' → logprob: -8.607475280761719
    9. '_s' → logprob: -8.607475280761719
    10. '_prob' → logprob: -8.982475280761719

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.053006526082754135
    2. '=' → logprob: -3.553006410598755
    3. ' in' → logprob: -4.428006649017334
    4. ']' → logprob: -5.053006649017334
    5. '+' → logprob: -6.053006649017334
    6. ' +' → logprob: -7.553006649017334
    7. ' +=' → logprob: -7.678006649017334
    8. ')' → logprob: -7.928006649017334
    9. '   ' → logprob: -8.303006172180176
    10. '][' → logprob: -8.803006172180176

Token 120: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.01605912297964096
    2. 'curr' → logprob: -4.141058921813965
    3. '   ' → logprob: -11.391058921813965
    4. '	curr' → logprob: -11.766058921813965
    5. ' ' → logprob: -13.141058921813965
    6. '(curr' → logprob: -13.641058921813965
    7. '    ' → logprob: -13.641058921813965
    8. '[curr' → logprob: -14.516058921813965
    9. '.curr' → logprob: -15.766058921813965
    10. ' curry' → logprob: -15.891058921813965

Token 121: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.981667537620524e-06
    2. '+' → logprob: -13.500001907348633
    3. 'len' → logprob: -15.750001907348633
    4. '_' → logprob: -16.000001907348633
    5. '<len' → logprob: -16.750001907348633
    6. '_LEN' → logprob: -17.000001907348633
    7. '__' → logprob: -17.000001907348633
    8. '_l' → logprob: -17.125001907348633
    9. ' _' → logprob: -17.250001907348633
    10. 'Len' → logprob: -17.625001907348633

Token 122: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931495070457458
    2. ' +' → logprob: -0.6931495070457458
    3. '+
' → logprob: -13.69314956665039
    4. ' +
' → logprob: -14.06814956665039
    5. ' plus' → logprob: -15.69314956665039
    6. '＋' → logprob: -16.06814956665039
    7. ' ' → logprob: -17.19314956665039
    8. '1' → logprob: -17.31814956665039
    9. '()+' → logprob: -17.69314956665039
    10. '
' → logprob: -17.69314956665039

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043233807082287967
    2. ' ' → logprob: -7.75043249130249
    3. '2' → logprob: -13.625432014465332
    4. '   ' → logprob: -15.625432014465332
    5. '```' → logprob: -16.00043296813965
    6. '0' → logprob: -16.37543296813965
    7. '
' → logprob: -17.93793296813965
    8. '  ' → logprob: -18.31293296813965
    9. 'import' → logprob: -18.37543296813965
    10. '3' → logprob: -18.43793296813965

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.125007629394531
    3. '2' → logprob: -13.125007629394531
    4. '
' → logprob: -15.875007629394531
    5. '```' → logprob: -16.25000762939453
    6. '   ' → logprob: -16.50000762939453
    7. '3' → logprob: -17.25000762939453
    8. '...' → logprob: -18.00000762939453
    9. '0' → logprob: -18.06250762939453
    10. 'import' → logprob: -18.12500762939453

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002854209393262863
    2. '
' → logprob: -6.752854347229004
    3. ' for' → logprob: -7.752854347229004
    4. '        
' → logprob: -8.252854347229004
    5. 'for' → logprob: -8.252854347229004
    6. '<|end|>' → logprob: -8.752854347229004
    7. ',' → logprob: -8.877854347229004
    8. ')' → logprob: -9.627854347229004
    9. '[' → logprob: -9.752854347229004
    10. ' next' → logprob: -10.002854347229004

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005943613592535257
    2. '<|end|>' → logprob: -5.755943775177002
    3. ' for' → logprob: -6.005943775177002
    4. ',' → logprob: -9.255943298339844
    5. 'for' → logprob: -10.005943298339844
    6. '<|end|>' → logprob: -10.380943298339844
    7. '        
' → logprob: -10.880943298339844
    8. ' if' → logprob: -11.005943298339844
    9. ')' → logprob: -11.130943298339844
    10. ' next' → logprob: -11.505943298339844

Token 127: ' next' (ID: 2613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15194953978061676
    2. ' for' → logprob: -2.401949644088745
    3. '       ' → logprob: -3.026949644088745
    4. 'next' (adapté à ' next') → logprob: -6.651949405670166
    5. 'if' → logprob: -8.151949882507324
    6. ' next' → logprob: -9.526949882507324
    7. '   ' → logprob: -10.026949882507324
    8. ' if' → logprob: -10.151949882507324
    9. 'curr' → logprob: -10.151949882507324
    10. 'perm' → logprob: -10.151949882507324

Token 128: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0006463141762651503
    2. '_' → logprob: -9.125646591186523
    3. 'sum' → logprob: -9.250646591186523
    4. '_s' → logprob: -9.625646591186523
    5. 'for' → logprob: -9.750646591186523
    6. '_count' → logprob: -9.750646591186523
    7. '_idx' → logprob: -9.875646591186523
    8. '_perm' → logprob: -9.875646591186523
    9. '_curr' → logprob: -10.750646591186523
    10. '_val' → logprob: -11.000646591186523

Token 129: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875575363636017
    2. '=' → logprob: -1.1375575065612793
    3. 's' → logprob: -8.012557983398438
    4. ')' → logprob: -9.887557983398438
    5. 'for' → logprob: -10.012557983398438
    6. ']' → logprob: -10.012557983398438
    7. ' in' → logprob: -10.387557983398438
    8. '_options' → logprob: -10.512557983398438
    9. '_range' → logprob: -10.512557983398438
    10. '_values' → logprob: -10.762557983398438

Token 130: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10029325634241104
    2. ' =' → logprob: -2.3502931594848633
    3. 's' → logprob: -9.600293159484863
    4. '=
' → logprob: -13.100293159484863
    5. '+=' → logprob: -13.225293159484863
    6. 'range' → logprob: -13.350293159484863
    7. ' ' → logprob: -13.350293159484863
    8. ',' → logprob: -13.600293159484863
    9. ']' → logprob: -13.975293159484863
    10. '0' → logprob: -14.225293159484863

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233189463615417
    2. '=' → logprob: -0.8983189463615417
    3. ']' → logprob: -9.023319244384766
    4. '][' → logprob: -11.523319244384766
    5. 's' → logprob: -11.523319244384766
    6. ' ' → logprob: -11.898319244384766
    7. ')' → logprob: -12.398319244384766
    8. ',' → logprob: -12.398319244384766
    9. '_' → logprob: -12.398319244384766
    10. '```' → logprob: -12.648319244384766

Token 132: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0708191841840744
    2. ' curr' → logprob: -2.695819139480591
    3. 'perm' → logprob: -8.070818901062012
    4. '   ' → logprob: -8.445818901062012
    5. 'next' → logprob: -9.070818901062012
    6. ' ' → logprob: -10.070818901062012
    7. ' perm' → logprob: -10.320818901062012
    8. '       ' → logprob: -10.570818901062012
    9. '(curr' → logprob: -10.570818901062012
    10. '2' → logprob: -10.820818901062012

Token 133: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0007524513057433069
    2. '_len' → logprob: -7.2507524490356445
    3. 'sum' → logprob: -10.125752449035645
    4. '_' → logprob: -13.375752449035645
    5. '__' → logprob: -15.500752449035645
    6. '+' → logprob: -16.50075340270996
    7. '_val' → logprob: -16.50075340270996
    8. 'len' → logprob: -16.75075340270996
    9. '._' → logprob: -17.37575340270996
    10. 'Sum' → logprob: -17.50075340270996

Token 134: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1386297345161438
    2. ' +' → logprob: -2.263629674911499
    3. '-' → logprob: -4.138629913330078
    4. '       ' → logprob: -5.513629913330078
    5. 'next' → logprob: -6.013629913330078
    6. ' -' → logprob: -6.638629913330078
    7. '
' → logprob: -7.763629913330078
    8. '   ' → logprob: -7.763629913330078
    9. '           ' → logprob: -8.263629913330078
    10. ' next' → logprob: -9.263629913330078

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41501864790916443
    2. '1' → logprob: -1.2900186777114868
    3. 'next' → logprob: -3.1650185585021973
    4. ' ' → logprob: -5.040018558502197
    5. 'curr' → logprob: -5.290018558502197
    6. ' next' → logprob: -5.665018558502197
    7. '(next' → logprob: -5.790018558502197
    8. '(' → logprob: -6.415018558502197
    9. ' (' → logprob: -7.665018558502197
    10. ' curr' → logprob: -7.915018558502197

Token 136: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20413392782211304
    2. '1' → logprob: -1.9541339874267578
    3. 'next' → logprob: -3.579133987426758
    4. '(next' → logprob: -4.954133987426758
    5. '(' → logprob: -5.954133987426758
    6. ' ' → logprob: -6.204133987426758
    7. 'curr' → logprob: -7.079133987426758
    8. ' next' → logprob: -7.329133987426758
    9. '2' → logprob: -7.579133987426758
    10. 'total' → logprob: -8.079133987426758

Token 137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08880826085805893
    2. '
' → logprob: -3.088808298110962
    3. '<|end|>' → logprob: -3.713808298110962
    4. ' next' → logprob: -5.588808059692383
    5. 'next' → logprob: -5.713808059692383
    6. '        
' → logprob: -6.213808059692383
    7. '[next' → logprob: -6.588808059692383
    8. '<|end|>' → logprob: -7.088808059692383
    9. ')' → logprob: -7.213808059692383
    10. '#' → logprob: -7.338808059692383

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00741815147921443
    2. '<|end|>' → logprob: -5.507418155670166
    3. ' next' → logprob: -6.882418155670166
    4. '
' → logprob: -7.132418155670166
    5. 'next' → logprob: -8.257417678833008
    6. '[next' → logprob: -8.507417678833008
    7. '        
' → logprob: -8.632417678833008
    8. ')' → logprob: -8.882417678833008
    9. '        ' → logprob: -9.007417678833008
    10. '#' → logprob: -9.007417678833008

Token 139: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07206226140260696
    2. ' next' → logprob: -3.3220622539520264
    3. 'next' (adapté à ' next') → logprob: -3.8220622539520264
    4. ' for' → logprob: -4.9470624923706055
    5. '
' → logprob: -6.4470624923706055
    6. 'for' → logprob: -6.9470624923706055
    7. '        
' → logprob: -7.4470624923706055
    8. '[next' → logprob: -8.447062492370605
    9. ' 
' → logprob: -8.572062492370605
    10. ' if' → logprob: -8.697062492370605

Token 140: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00027813989436253905
    2. '_len' → logprob: -8.37527847290039
    3. 'sum' → logprob: -10.75027847290039
    4. '_' → logprob: -11.62527847290039
    5. '_s' → logprob: -12.00027847290039
    6. '_val' → logprob: -13.12527847290039
    7. '_count' → logprob: -13.87527847290039
    8. ' _' → logprob: -14.00027847290039
    9. '
' → logprob: -14.12527847290039
    10. '_next' → logprob: -14.25027847290039

Token 141: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002910102193709463
    2. '=' → logprob: -8.250290870666504
    3. ' =' → logprob: -10.625290870666504
    4. '_=' → logprob: -12.375290870666504
    5. '```' → logprob: -14.750290870666504
    6. '=_' → logprob: -15.000290870666504
    7. '_plus' → logprob: -15.750290870666504
    8. '0' → logprob: -16.37529182434082
    9. '_
' → logprob: -17.00029182434082
    10. 'a' → logprob: -17.12529182434082

Token 142: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5897960662841797
    2. '2' → logprob: -0.8397960662841797
    3. '1' → logprob: -4.33979606628418
    4. '3' → logprob: -7.83979606628418
    5. '-' → logprob: -8.58979606628418
    6. '=' → logprob: -9.96479606628418
    7. ' ' → logprob: -10.96479606628418
    8. '5' → logprob: -10.96479606628418
    9. '
' → logprob: -11.71479606628418
    10. '+' → logprob: -11.96479606628418

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. ',' → logprob: -16.186967849731445
    4. ' ' → logprob: -16.561967849731445
    5. ' ' → logprob: -19.311967849731445
    6. ')' → logprob: -19.686967849731445
    7. 's' → logprob: -19.811967849731445
    8. ' =)' → logprob: -19.811967849731445
    9. '＝' → logprob: -19.811967849731445
    10. ' =
' → logprob: -19.936967849731445

Token 144: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.34895357489585876
    2. 'curr' → logprob: -1.2239536046981812
    3. ' next' → logprob: -8.348953247070312
    4. 'next' → logprob: -9.848953247070312
    5. '(curr' → logprob: -10.098953247070312
    6. '       ' → logprob: -10.348953247070312
    7. '   ' → logprob: -10.723953247070312
    8. '    ' → logprob: -10.848953247070312
    9. ' ' → logprob: -10.973953247070312
    10. '        ' → logprob: -11.098953247070312

Token 145: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00012582694762386382
    2. 'sum' → logprob: -9.000125885009766
    3. '_' → logprob: -13.625125885009766
    4. '+' → logprob: -14.875125885009766
    5. '_len' → logprob: -15.125125885009766
    6. 'Sum' → logprob: -16.375125885009766
    7. 'curr' → logprob: -16.375125885009766
    8. '_curr' → logprob: -16.500125885009766
    9. '_count' → logprob: -16.875125885009766
    10. '__' → logprob: -17.000125885009766

Token 146: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25066670775413513
    2. ' +' → logprob: -1.6256667375564575
    3. '-' → logprob: -4.000666618347168
    4. '<|end|>' → logprob: -5.625666618347168
    5. ' -' → logprob: -5.875666618347168
    6. '+
' → logprob: -10.125666618347168
    7. '<|end|>' → logprob: -10.250666618347168
    8. ' ' → logprob: -10.750666618347168
    9. ',' → logprob: -11.000666618347168
    10. '
' → logprob: -11.250666618347168

Token 147: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003944824915379286
    2. '3' → logprob: -6.3789448738098145
    3. ' ' → logprob: -6.3789448738098145
    4. '4' → logprob: -8.378944396972656
    5. '0' → logprob: -8.378944396972656
    6. 'next' → logprob: -10.378944396972656
    7. '5' → logprob: -11.628944396972656
    8. '(' → logprob: -11.628944396972656
    9. 'curr' → logprob: -12.128944396972656
    10. '(next' → logprob: -12.378944396972656

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014895245840307325
    2. '3' → logprob: -9.87514877319336
    3. ' ' → logprob: -9.87514877319336
    4. '0' → logprob: -10.12514877319336
    5. '4' → logprob: -12.87514877319336
    6. '1' → logprob: -14.06264877319336
    7. '
' → logprob: -14.62514877319336
    8. '-' → logprob: -14.81264877319336
    9. '   ' → logprob: -15.06264877319336
    10. '5' → logprob: -16.12514877319336

Token 149: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02246282808482647
    2. '<|end|>' → logprob: -3.897462844848633
    3. '<|end|>' → logprob: -8.022462844848633
    4. ')' → logprob: -8.022462844848633
    5. ' if' → logprob: -8.272462844848633
    6. ',' → logprob: -8.272462844848633
    7. '#' → logprob: -8.772462844848633
    8. '[' → logprob: -9.397462844848633
    9. '        ' → logprob: -9.772462844848633
    10. ']' → logprob: -10.022462844848633

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003753767115995288
    2. '<|end|>' → logprob: -5.753753662109375
    3. ' if' → logprob: -8.378753662109375
    4. ')' → logprob: -9.378753662109375
    5. ',' → logprob: -9.878753662109375
    6. '<|end|>' → logprob: -10.003753662109375
    7. 'if' → logprob: -10.128753662109375
    8. '#' → logprob: -10.753753662109375
    9. '        
' → logprob: -11.003753662109375
    10. '        ' → logprob: -11.628753662109375

Token 151: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' (adapté à ' perm') → logprob: -0.05329770967364311
    2. '       ' → logprob: -3.428297758102417
    3. 'if' → logprob: -4.053297519683838
    4. ' perm' → logprob: -6.928297519683838
    5. 'for' → logprob: -7.053297519683838
    6. ' if' → logprob: -8.553297996520996
    7. '           ' → logprob: -11.178297996520996
    8. ' for' → logprob: -11.678297996520996
    9. '   ' → logprob: -11.803297996520996
    10. '#' → logprob: -11.928297996520996

Token 152: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0921942703134846e-05
    2. '_counts' → logprob: -12.00001049041748
    3. '_' → logprob: -13.37501049041748
    4. 'count' → logprob: -14.12501049041748
    5. '_next' → logprob: -14.62501049041748
    6. ' _' → logprob: -15.12501049041748
    7. 's' → logprob: -15.62501049041748
    8. '_cnt' → logprob: -15.75001049041748
    9. 'Count' → logprob: -16.000011444091797
    10. ' =' → logprob: -16.375011444091797

Token 153: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.10021539777517319
    2. '[curr' → logprob: -2.350215435028076
    3. '[' → logprob: -12.350214958190918
    4. '[cur' → logprob: -13.100214958190918
    5. '[now' → logprob: -14.225214958190918
    6. '[current' → logprob: -14.475214958190918
    7. ' [' → logprob: -14.475214958190918
    8. 'next' → logprob: -15.100214958190918
    9. '][' → logprob: -16.350215911865234
    10. ')[' → logprob: -16.850215911865234

Token 154: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.001532355323433876
    2. '_count' → logprob: -6.501532554626465
    3. '[len' → logprob: -11.001532554626465
    4. 'len' → logprob: -12.251532554626465
    5. '[next' → logprob: -12.501532554626465
    6. '_length' → logprob: -12.876532554626465
    7. 'Len' → logprob: -14.376532554626465
    8. '_cnt' → logprob: -15.001532554626465
    9. 'count' → logprob: -15.376532554626465
    10. '[' → logprob: -15.376532554626465

Token 155: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2018715888261795
    2. '[next' → logprob: -1.701871633529663
    3. ' ][' → logprob: -8.576871871948242
    4. '[' → logprob: -8.576871871948242
    5. ']' → logprob: -9.826871871948242
    6. ']][' → logprob: -12.576871871948242
    7. '"][' → logprob: -12.826871871948242
    8. '   ' → logprob: -12.951871871948242
    9. 'next' → logprob: -13.076871871948242
    10. ''][' → logprob: -13.076871871948242

Token 156: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3544423381972592e-05
    2. ' next' → logprob: -11.50001335144043
    3. '(next' → logprob: -13.25001335144043
    4. '[next' → logprob: -13.37501335144043
    5. '	next' → logprob: -17.12501335144043
    6. '   ' → logprob: -17.62501335144043
    7. '
' → logprob: -18.25001335144043
    8. '.next' → logprob: -20.00001335144043
    9. ',next' → logprob: -20.12501335144043
    10. '       ' → logprob: -20.25001335144043

Token 157: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.750436007976532e-05
    2. 'sum' → logprob: -10.25003719329834
    3. '_' → logprob: -13.50003719329834
    4. '_len' → logprob: -14.62503719329834
    5. '_s' → logprob: -16.500038146972656
    6. ' sum' → logprob: -17.125038146972656
    7. ']' → logprob: -17.625038146972656
    8. '1' → logprob: -17.875038146972656
    9. '_SUM' → logprob: -18.000038146972656
    10. 'Sum' → logprob: -18.125038146972656

Token 158: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1994775377388578e-05
    2. '-' → logprob: -12.125012397766113
    3. '+' → logprob: -12.750012397766113
    4. '[' → logprob: -13.500012397766113
    5. ']' → logprob: -14.500012397766113
    6. '```' → logprob: -14.750012397766113
    7. ']_' → logprob: -15.000012397766113
    8. '1' → logprob: -15.250012397766113
    9. '_]' → logprob: -15.250012397766113
    10. '   ' → logprob: -16.250011444091797

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. '_' → logprob: -11.000027656555176
    3. '2' → logprob: -11.750027656555176
    4. '-' → logprob: -14.125027656555176
    5. ' ' → logprob: -14.375027656555176
    6. '```' → logprob: -14.375027656555176
    7. ']' → logprob: -15.000027656555176
    8. '   ' → logprob: -15.875027656555176
    9. '
' → logprob: -17.43752670288086
    10. '``' → logprob: -17.75002670288086

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16029682755470276
    2. ']+=' → logprob: -1.9102967977523804
    3. '+=' → logprob: -10.285296440124512
    4. ']=' → logprob: -11.285296440124512
    5. ' ]' → logprob: -11.410296440124512
    6. '[' → logprob: -12.660296440124512
    7. '+' → logprob: -12.910296440124512
    8. '=' → logprob: -12.910296440124512
    9. ']+' → logprob: -13.035296440124512
    10. '```' → logprob: -13.535296440124512

Token 161: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16853316128253937
    2. '=' → logprob: -1.918533205986023
    3. ' +=' → logprob: -5.2935333251953125
    4. ' =' → logprob: -6.0435333251953125
    5. ']+=' → logprob: -7.9185333251953125
    6. '=(' → logprob: -8.043533325195312
    7. '%=' → logprob: -8.918533325195312
    8. '(' → logprob: -10.543533325195312
    9. '+=(' → logprob: -10.918533325195312
    10. '```' → logprob: -12.668533325195312

Token 162: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.00103352265432477
    2. ' perm' → logprob: -6.876033306121826
    3. '   ' → logprob: -14.751033782958984
    4. '       ' → logprob: -15.876033782958984
    5. '           ' → logprob: -16.001033782958984
    6. 'per' → logprob: -16.626033782958984
    7. 'perf' → logprob: -17.876033782958984
    8. '               ' → logprob: -18.501033782958984
    9. ' ' → logprob: -18.626033782958984
    10. '_perm' → logprob: -18.751033782958984

Token 163: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -16.125
    3. ' _' → logprob: -16.5
    4. '\' → logprob: -16.75
    5. '_' → logprob: -17.0
    6. '_COUNT' → logprob: -18.25
    7. '[_' → logprob: -18.25
    8. '[count' → logprob: -18.5
    9. ']_' → logprob: -19.0
    10. '```' → logprob: -19.375

Token 164: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -5.466968650580384e-05
    2. '[next' → logprob: -10.500054359436035
    3. 'curr' → logprob: -10.625054359436035
    4. '[cur' → logprob: -13.625054359436035
    5. '[current' → logprob: -14.875054359436035
    6. '[' → logprob: -15.125054359436035
    7. '```' → logprob: -15.375054359436035
    8. ' curr' → logprob: -15.500054359436035
    9. '(curr' → logprob: -15.750054359436035
    10. '	curr' → logprob: -15.875054359436035

Token 165: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.392202976712724e-06
    2. 'len' → logprob: -12.000006675720215
    3. '_length' → logprob: -16.6250057220459
    4. '[len' → logprob: -17.0000057220459
    5. 'Len' → logprob: -17.0000057220459
    6. '_count' → logprob: -17.3750057220459
    7. '_LEN' → logprob: -18.0000057220459
    8. '<len' → logprob: -18.3750057220459
    9. '```' → logprob: -19.0000057220459
    10. '	len' → logprob: -19.2500057220459

Token 166: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0043465676717460155
    2. '[curr' → logprob: -5.5043463706970215
    3. ' ][' → logprob: -8.87934684753418
    4. '[' → logprob: -9.75434684753418
    5. ']' → logprob: -11.00434684753418
    6. 'curr' → logprob: -11.25434684753418
    7. '[cur' → logprob: -11.50434684753418
    8. '[next' → logprob: -12.25434684753418
    9. '"][' → logprob: -12.50434684753418
    10. '   ' → logprob: -12.75434684753418

Token 167: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -8.85235276655294e-05
    2. ' curr' → logprob: -9.375088691711426
    3. '[curr' → logprob: -13.000088691711426
    4. '(curr' → logprob: -14.625088691711426
    5. 'cur' → logprob: -14.750088691711426
    6. '	curr' → logprob: -15.000088691711426
    7. '   ' → logprob: -16.62508773803711
    8. '
' → logprob: -17.12508773803711
    9. ' ' → logprob: -17.37508773803711
    10. '```' → logprob: -17.87508773803711

Token 168: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0042057824321091175
    2. '_len' → logprob: -6.004205703735352
    3. 'sum' → logprob: -6.379205703735352
    4. '_count' → logprob: -10.504205703735352
    5. 'len' → logprob: -13.004205703735352
    6. '_' → logprob: -14.379205703735352
    7. 'Sum' → logprob: -14.879205703735352
    8. 's' → logprob: -15.879205703735352
    9. '_length' → logprob: -16.00420570373535
    10. ' sum' → logprob: -16.00420570373535

Token 169: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004388942907098681
    2. ' ]' → logprob: -8.375438690185547
    3. ']%' → logprob: -8.500438690185547
    4. ']
' → logprob: -12.375438690185547
    5. ')' → logprob: -15.125438690185547
    6. '%' → logprob: -16.125438690185547
    7. '[' → logprob: -16.375438690185547
    8. '']' → logprob: -17.125438690185547
    9. '   ' → logprob: -17.375438690185547
    10. ']*' → logprob: -17.875438690185547

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2933754324913025
    2. '%' → logprob: -2.4183754920959473
    3. '<|end|>' → logprob: -2.4183754920959473
    4. '
' → logprob: -3.0433754920959473
    5. ' %' → logprob: -3.9183754920959473
    6. '<|end|>' → logprob: -6.293375492095947
    7. ' %=' → logprob: -6.918375492095947
    8. '```' → logprob: -6.918375492095947
    9. ')' → logprob: -7.043375492095947
    10. '           ' → logprob: -7.543375492095947

Token 171: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' (adapté à ' perm') → logprob: -0.08125469833612442
    2. ' perm' → logprob: -2.706254720687866
    3. '       ' → logprob: -4.831254482269287
    4. 'if' → logprob: -6.456254482269287
    5. ' if' → logprob: -6.706254482269287
    6. '<|end|>' → logprob: -8.206254959106445
    7. 'per' → logprob: -9.706254959106445
    8. '```' → logprob: -10.081254959106445
    9. '=' → logprob: -11.081254959106445
    10. '           ' → logprob: -11.206254959106445

Token 172: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: 0.0
    2. 'count' → logprob: -17.875
    3. '_COUNT' → logprob: -18.875
    4. '```' → logprob: -19.75
    5. '\' → logprob: -20.0
    6. '[_' → logprob: -20.375
    7. ' _' → logprob: -20.375
    8. '[' → logprob: -20.625
    9. '_code' → logprob: -20.75
    10. 'ount' → logprob: -20.75

Token 173: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. 'next' → logprob: -17.625
    4. '```' → logprob: -18.875
    5. '[now' → logprob: -19.25
    6. '	next' → logprob: -20.125
    7. ',next' → logprob: -20.625
    8. ' next' → logprob: -20.75
    9. '[curr' → logprob: -20.875
    10. '(next' → logprob: -21.375

Token 174: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0006569160032086074
    2. 'len' → logprob: -7.750657081604004
    3. '_count' → logprob: -8.625657081604004
    4. 'next' → logprob: -10.625657081604004
    5. '[next' → logprob: -11.750657081604004
    6. '_length' → logprob: -12.000657081604004
    7. 'Len' → logprob: -12.625657081604004
    8. '[len' → logprob: -13.625657081604004
    9. 'count' → logprob: -14.375657081604004
    10. '][' → logprob: -14.625657081604004

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014216037467122078
    2. '[next' → logprob: -4.26421594619751
    3. '[' → logprob: -10.389216423034668
    4. ' ][' → logprob: -11.514216423034668
    5. ']' → logprob: -12.264216423034668
    6. ']][' → logprob: -13.514216423034668
    7. '```' → logprob: -13.514216423034668
    8. '[left' → logprob: -14.139216423034668
    9. '}[' → logprob: -14.639216423034668
    10. '       ' → logprob: -14.764216423034668

Token 176: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.9862216504407115e-05
    2. '[next' → logprob: -11.000020027160645
    3. ' next' → logprob: -13.250020027160645
    4. 'curr' → logprob: -14.125020027160645
    5. '(next' → logprob: -14.375020027160645
    6. '
' → logprob: -16.875019073486328
    7. '	next' → logprob: -17.250019073486328
    8. '   ' → logprob: -19.125019073486328
    9. '```' → logprob: -19.625019073486328
    10. '.next' → logprob: -20.125019073486328

Token 177: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0008910943870432675
    2. 'sum' → logprob: -7.125891208648682
    3. '2' → logprob: -10.125890731811523
    4. 'curr' → logprob: -11.000890731811523
    5. '_count' → logprob: -11.625890731811523
    6. '_' → logprob: -12.000890731811523
    7. 'Sum' → logprob: -12.250890731811523
    8. '1' → logprob: -12.500890731811523
    9. '
' → logprob: -13.750890731811523
    10. '_len' → logprob: -14.375890731811523

Token 178: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3514906167984009
    2. '2' → logprob: -1.2264906167984009
    3. '+' → logprob: -6.226490497589111
    4. '```' → logprob: -7.476490497589111
    5. '1' → logprob: -8.60149097442627
    6. '   ' → logprob: -9.22649097442627
    7. '
' → logprob: -9.97649097442627
    8. ']' → logprob: -10.47649097442627
    9. '       ' → logprob: -11.35149097442627
    10. '[' → logprob: -11.47649097442627

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026176320388913155
    2. '1' → logprob: -6.252617835998535
    3. 'curr' → logprob: -7.752617835998535
    4. '_' → logprob: -9.002617835998535
    5. 'sum' → logprob: -9.252617835998535
    6. '
' → logprob: -11.377617835998535
    7. '_sum' → logprob: -12.002617835998535
    8. '```' → logprob: -12.565117835998535
    9. '[curr' → logprob: -12.752617835998535
    10. '0' → logprob: -13.315117835998535

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003373694489710033
    2. ']+=' → logprob: -8.000337600708008
    3. ' ]' → logprob: -13.250337600708008
    4. '[' → logprob: -16.250337600708008
    5. '```' → logprob: -17.250337600708008
    6. ')' → logprob: -17.750337600708008
    7. '       ' → logprob: -18.125337600708008
    8. '   ' → logprob: -18.375337600708008
    9. ']+' → logprob: -18.625337600708008
    10. '}' → logprob: -19.125337600708008

Token 181: ' +=' (ID: 2757)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.5786594748497009
    2. '+=' → logprob: -1.7036595344543457
    3. '[' → logprob: -2.0786595344543457
    4. ']' → logprob: -2.2036595344543457
    5. ' +=' → logprob: -3.9536595344543457
    6. '```' → logprob: -6.953659534454346
    7. '%=' → logprob: -7.078659534454346
    8. '=' → logprob: -8.328659057617188
    9. '%' → logprob: -9.078659057617188
    10. '       ' → logprob: -9.328659057617188

Token 182: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.020543519407510757
    2. ' perm' → logprob: -3.8955435752868652
    3. 'per' → logprob: -14.270543098449707
    4. '   ' → logprob: -15.020543098449707
    5. 'perf' → logprob: -15.645543098449707
    6. '       ' → logprob: -16.270544052124023
    7. ' ' → logprob: -16.270544052124023
    8. '           ' → logprob: -16.520544052124023
    9. '```' → logprob: -16.520544052124023
    10. 'perl' → logprob: -17.145544052124023

Token 183: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.2246291337069124e-05
    2. 'count' → logprob: -10.875021934509277
    3. 'perm' → logprob: -13.625021934509277
    4. '[curr' → logprob: -14.625021934509277
    5. '```' → logprob: -14.750021934509277
    6. 'Count' → logprob: -15.250021934509277
    7. '[' → logprob: -15.625021934509277
    8. '[count' → logprob: -16.125022888183594
    9. '_COUNT' → logprob: -16.250022888183594
    10. '   ' → logprob: -16.625022888183594

Token 184: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -5.438573680294212e-06
    2. '[next' → logprob: -12.250005722045898
    3. 'curr' → logprob: -14.500005722045898
    4. '[cur' → logprob: -17.2500057220459
    5. '[' → logprob: -17.5000057220459
    6. '[current' → logprob: -17.6250057220459
    7. '[cnt' → logprob: -17.8750057220459
    8. '(curr' → logprob: -18.0000057220459
    9. '```' → logprob: -18.0000057220459
    10. '	curr' → logprob: -19.3750057220459

Token 185: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0010605561546981335
    2. 'curr' → logprob: -7.376060485839844
    3. 'len' → logprob: -8.126060485839844
    4. '[curr' → logprob: -9.126060485839844
    5. '_curr' → logprob: -10.626060485839844
    6. '_cnt' → logprob: -13.751060485839844
    7. 'Len' → logprob: -13.876060485839844
    8. '[len' → logprob: -14.251060485839844
    9. '_count' → logprob: -14.876060485839844
    10. '(curr' → logprob: -15.251060485839844

Token 186: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3879856467247009
    2. '[curr' → logprob: -1.1379857063293457
    3. '[' → logprob: -7.262985706329346
    4. '[cur' → logprob: -8.762985229492188
    5. 'curr' → logprob: -9.387985229492188
    6. ']' → logprob: -9.762985229492188
    7. ' ][' → logprob: -10.262985229492188
    8. '[next' → logprob: -10.887985229492188
    9. '}[' → logprob: -11.512985229492188
    10. '```' → logprob: -11.637985229492188

Token 187: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -9.686778503237292e-05
    2. '[curr' → logprob: -9.500097274780273
    3. ' curr' → logprob: -11.250097274780273
    4. '(curr' → logprob: -12.500097274780273
    5. '	curr' → logprob: -13.125097274780273
    6. '
' → logprob: -14.125097274780273
    7. '_curr' → logprob: -14.375097274780273
    8. 'cum' → logprob: -14.875097274780273
    9. '```' → logprob: -14.875097274780273
    10. '   ' → logprob: -15.375097274780273

Token 188: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0006765736034139991
    2. '[curr' → logprob: -8.250676155090332
    3. '_curr' → logprob: -8.500676155090332
    4. 'curr' → logprob: -9.250676155090332
    5. 'sum' → logprob: -9.625676155090332
    6. '_count' → logprob: -11.250676155090332
    7. ',' → logprob: -11.375676155090332
    8. ']' → logprob: -12.250676155090332
    9. '_s' → logprob: -12.250676155090332
    10. '(curr' → logprob: -12.500676155090332

Token 189: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009343287092633545
    2. ']
' → logprob: -7.75093412399292
    3. '       ' → logprob: -8.375934600830078
    4. ')' → logprob: -9.000934600830078
    5. ' ]' → logprob: -9.125934600830078
    6. '<|end|>' → logprob: -10.625934600830078
    7. ')]' → logprob: -12.625934600830078
    8. '   ' → logprob: -12.875934600830078
    9. '<|end|>' → logprob: -13.125934600830078
    10. ']

' → logprob: -13.250934600830078

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27968934178352356
    2. '<|end|>' → logprob: -1.5296893119812012
    3. '
' → logprob: -4.029689311981201
    4. '\' → logprob: -6.779689311981201
    5. '<|end|>' → logprob: -6.904689311981201
    6. '\n' → logprob: -6.904689311981201
    7. '        
' → logprob: -7.029689311981201
    8. ' 
' → logprob: -7.279689311981201
    9. '%' → logprob: -7.404689311981201
    10. '           ' → logprob: -7.779689311981201

Token 191: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12176404148340225
    2. 'perm' → logprob: -2.8717639446258545
    3. 'if' (adapté à ' if') → logprob: -3.7467639446258545
    4. 'mod' → logprob: -4.746764183044434
    5. ' perm' → logprob: -4.871764183044434
    6. ' if' → logprob: -4.871764183044434
    7. '<|end|>' → logprob: -5.871764183044434
    8. '
' → logprob: -6.121764183044434
    9. '[' → logprob: -6.871764183044434
    10. '        
' → logprob: -7.121764183044434

Token 192: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.40118467807769775
    2. ' next' → logprob: -1.6511846780776978
    3. 'perm' → logprob: -2.151184558868408
    4. 'next' → logprob: -3.901184558868408
    5. ' valid' → logprob: -6.651184558868408
    6. ' curr' → logprob: -8.151185035705566
    7. 'valid' → logprob: -9.151185035705566
    8. '       ' → logprob: -10.026185035705566
    9. 'curr' → logprob: -10.088685035705566
    10. ' not' → logprob: -10.151185035705566

Token 193: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.339278580620885e-06
    2. 'utation' → logprob: -14.500001907348633
    3. 'ut' → logprob: -14.625001907348633
    4. '_code' → logprob: -15.500001907348633
    5. 'utable' → logprob: -15.500001907348633
    6. 'u' → logprob: -15.875001907348633
    7. '_counts' → logprob: -16.000001907348633
    8. '_sum' → logprob: -16.125001907348633
    9. 'utations' → logprob: -16.250001907348633
    10. 'count' → logprob: -16.625001907348633

Token 194: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.9361264946837764e-07
    2. 'next' → logprob: -16.75
    3. '[now' → logprob: -17.625
    4. '[' → logprob: -17.875
    5. '	next' → logprob: -18.625
    6. ',next' → logprob: -18.875
    7. '[curr' → logprob: -19.0
    8. '```' → logprob: -19.625
    9. '(next' → logprob: -19.875
    10. '_next' → logprob: -20.5

Token 195: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0007747277268208563
    2. '_count' → logprob: -7.50077486038208
    3. '[next' → logprob: -8.875774383544922
    4. 'len' → logprob: -10.125774383544922
    5. '[len' → logprob: -10.875774383544922
    6. '_length' → logprob: -11.125774383544922
    7. 'next' → logprob: -12.750774383544922
    8. 'Len' → logprob: -13.375774383544922
    9. '_LEN' → logprob: -14.000774383544922
    10. '<len' → logprob: -14.125774383544922

Token 196: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6932117938995361
    2. '[next' → logprob: -0.6932117938995361
    3. '[curr' → logprob: -10.943211555480957
    4. '[' → logprob: -11.693211555480957
    5. ')[' → logprob: -11.943211555480957
    6. '}[' → logprob: -12.068211555480957
    7. '```' → logprob: -12.068211555480957
    8. '       ' → logprob: -12.318211555480957
    9. ']' → logprob: -12.818211555480957
    10. '[now' → logprob: -13.068211555480957

Token 197: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0003567959647625685
    2. '[next' → logprob: -8.000356674194336
    3. ' next' → logprob: -11.375356674194336
    4. 'curr' → logprob: -11.875356674194336
    5. '(next' → logprob: -12.875356674194336
    6. '	next' → logprob: -15.625356674194336
    7. '.next' → logprob: -17.000356674194336
    8. '```' → logprob: -17.000356674194336
    9. ',next' → logprob: -17.125356674194336
    10. '
' → logprob: -17.125356674194336

Token 198: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.034813109785318375
    2. '_len' → logprob: -3.409813165664673
    3. '_' → logprob: -7.409812927246094
    4. '[curr' → logprob: -8.534812927246094
    5. '_count' → logprob: -9.534812927246094
    6. 'sum' → logprob: -9.659812927246094
    7. '[next' → logprob: -10.034812927246094
    8. '][' → logprob: -10.284812927246094
    9. 'len' → logprob: -10.909812927246094
    10. '   ' → logprob: -11.284812927246094

Token 199: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003346314188092947
    2. '1' → logprob: -8.875334739685059
    3. '_len' → logprob: -9.500334739685059
    4. ']' → logprob: -10.000334739685059
    5. '_]' → logprob: -10.125334739685059
    6. '[next' → logprob: -11.500334739685059
    7. '```' → logprob: -11.625334739685059
    8. '[curr' → logprob: -13.000334739685059
    9. '[' → logprob: -13.000334739685059
    10. '[len' → logprob: -13.375334739685059

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003039035713300109
    2. 'next' → logprob: -6.7530388832092285
    3. '_' → logprob: -7.0030388832092285
    4. ']' → logprob: -7.8780388832092285
    5. '[next' → logprob: -7.8780388832092285
    6. '```' → logprob: -9.128039360046387
    7. '_sum' → logprob: -11.253039360046387
    8. '(next' → logprob: -11.378039360046387
    9. '_next' → logprob: -11.628039360046387
    10. '%' → logprob: -11.878039360046387

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040276817977428436
    2. ' %=' → logprob: -3.7902767658233643
    3. ' ]' → logprob: -5.540277004241943
    4. '>=' → logprob: -5.665277004241943
    5. ' >=' → logprob: -5.915277004241943
    6. '[' → logprob: -6.165277004241943
    7. '%=' → logprob: -6.290277004241943
    8. ']>=' → logprob: -6.665277004241943
    9. ')' → logprob: -8.165276527404785
    10. '%' → logprob: -8.290276527404785

Token 202: ' >=' (ID: 5064)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.04857192561030388
    2. '%=' → logprob: -3.298571825027466
    3. ' %' → logprob: -5.423572063446045
    4. ' >=' → logprob: -5.798572063446045
    5. '%' → logprob: -6.173572063446045
    6. '>=' → logprob: -7.173572063446045
    7. '>' → logprob: -9.673571586608887
    8. '=' → logprob: -10.298571586608887
    9. ' >' → logprob: -10.798571586608887
    10. ']' → logprob: -11.048571586608887

Token 203: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003605297766625881
    2. ' modulo' → logprob: -5.628605365753174
    3. 'module' → logprob: -13.253604888916016
    4. '	mod' → logprob: -13.753604888916016
    5. ' mod' → logprob: -14.128604888916016
    6. 'Modulo' → logprob: -14.128604888916016
    7. '   ' → logprob: -15.753604888916016
    8. '(mod' → logprob: -16.003604888916016
    9. 'moder' → logprob: -16.128604888916016
    10. 'modal' → logprob: -16.378604888916016

Token 204: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.512236498361744e-07
    2. 'value' → logprob: -15.500000953674316
    3. '_values' → logprob: -16.25
    4. '_' → logprob: -16.625
    5. '_VALUE' → logprob: -18.25
    6. '_Value' → logprob: -19.25
    7. '```' → logprob: -20.0
    8. '_mod' → logprob: -20.25
    9. '_val' → logprob: -20.875
    10. '\' → logprob: -21.125

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.202002614736557
    2. ':
' → logprob: -1.7020026445388794
    3. '           ' → logprob: -7.57700252532959
    4. ' :
' → logprob: -10.57700252532959
    5. '       ' → logprob: -11.57700252532959
    6. '):
' → logprob: -11.70200252532959
    7. '):' → logprob: -11.82700252532959
    8. ' :' → logprob: -12.07700252532959
    9. '=' → logprob: -12.57700252532959
    10. ':
' → logprob: -13.07700252532959

Token 206: '           ' (ID: 352)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.6244598627090454
    2. '=' → logprob: -1.9994598627090454
    3. ' %=' → logprob: -1.9994598627090454
    4. ' -=' → logprob: -2.624459743499756
    5. ' =' → logprob: -3.124459743499756
    6. '[' → logprob: -3.999459743499756
    7. '%' → logprob: -4.124459743499756
    8. '-=' → logprob: -4.249459743499756
    9. '+=' → logprob: -4.499459743499756
    10. ' +=' → logprob: -5.874459743499756

Token 207: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.19290615618228912
    2. 'perm' (adapté à ' perm') → logprob: -1.942906141281128
    3. '           ' → logprob: -3.442906141281128
    4. '               ' → logprob: -8.692906379699707
    5. 'per' → logprob: -12.692906379699707
    6. ' perms' → logprob: -12.942906379699707
    7. ' permiss' → logprob: -13.442906379699707
    8. '```' → logprob: -13.567906379699707
    9. '            ' → logprob: -13.692906379699707
    10. '_perm' → logprob: -14.067906379699707

Token 208: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. '[_' → logprob: -17.0
    3. ' _' → logprob: -17.375
    4. 'count' → logprob: -18.375
    5. '_' → logprob: -18.75
    6. '[count' → logprob: -18.75
    7. '_c' → logprob: -18.875
    8. '_COUNT' → logprob: -18.875
    9. '[' → logprob: -19.125
    10. '_value' → logprob: -19.375

Token 209: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. 'next' → logprob: -19.125
    4. '[now' → logprob: -20.875
    5. '	next' → logprob: -21.0
    6. ',next' → logprob: -21.0
    7. '```' → logprob: -21.625
    8. '(next' → logprob: -21.875
    9. '[curr' → logprob: -23.125
    10. ' [' → logprob: -23.5

Token 210: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0004689226043410599
    2. 'len' → logprob: -7.750468730926514
    3. '[next' → logprob: -10.500469207763672
    4. '[len' → logprob: -12.375469207763672
    5. 'next' → logprob: -12.625469207763672
    6. 'Len' → logprob: -13.875469207763672
    7. '_length' → logprob: -14.125469207763672
    8. '_sum' → logprob: -14.500469207763672
    9. '_LEN' → logprob: -14.875469207763672
    10. '<len' → logprob: -15.250469207763672

Token 211: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.008617408573627472
    2. '][' → logprob: -4.758617401123047
    3. ' ][' → logprob: -14.133617401123047
    4. '[' → logprob: -14.133617401123047
    5. '       ' → logprob: -15.508617401123047
    6. ',next' → logprob: -15.508617401123047
    7. ']' → logprob: -15.633617401123047
    8. ')[' → logprob: -15.758617401123047
    9. '[curr' → logprob: -16.008617401123047
    10. '}[' → logprob: -16.508617401123047

Token 212: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.000205566844670102
    2. '[next' → logprob: -8.500205993652344
    3. '(next' → logprob: -13.750205993652344
    4. ' next' → logprob: -14.000205993652344
    5. '	next' → logprob: -16.500205993652344
    6. ',next' → logprob: -18.500205993652344
    7. '_next' → logprob: -18.875205993652344
    8. '.next' → logprob: -18.875205993652344
    9. '```' → logprob: -19.125205993652344
    10. 'curr' → logprob: -20.750205993652344

Token 213: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001586866332218051
    2. '[next' → logprob: -6.6265869140625
    3. '_len' → logprob: -9.0015869140625
    4. 'sum' → logprob: -10.0015869140625
    5. '_count' → logprob: -10.8765869140625
    6. '_' → logprob: -10.8765869140625
    7. '][' → logprob: -11.0015869140625
    8. 'next' → logprob: -12.1265869140625
    9. '```' → logprob: -12.5015869140625
    10. ']' → logprob: -12.6265869140625

Token 214: '_' (ID: 62)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.2054998129606247
    2. '_' → logprob: -1.9554997682571411
    3. '][' → logprob: -3.2054998874664307
    4. '[' → logprob: -6.955499649047852
    5. '_count' → logprob: -7.455499649047852
    6. ']' → logprob: -8.080499649047852
    7. '1' → logprob: -8.080499649047852
    8. '_len' → logprob: -8.205499649047852
    9. '   ' → logprob: -8.330499649047852
    10. '_value' → logprob: -8.455499649047852

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13294215500354767
    2. '[next' → logprob: -2.2579421997070312
    3. 'next' → logprob: -4.132942199707031
    4. '_value' → logprob: -6.382942199707031
    5. '_' → logprob: -6.757942199707031
    6. '(next' → logprob: -7.882942199707031
    7. 'curr' → logprob: -8.882942199707031
    8. '_sum' → logprob: -9.007942199707031
    9. '[curr' → logprob: -9.507942199707031
    10. '```' → logprob: -9.507942199707031

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020711800083518028
    2. ']-' → logprob: -3.895711898803711
    3. '-=' → logprob: -9.020711898803711
    4. ' -=' → logprob: -10.895711898803711
    5. '-' → logprob: -10.895711898803711
    6. ']+=' → logprob: -12.770711898803711
    7. ' ]' → logprob: -12.895711898803711
    8. '[' → logprob: -13.270711898803711
    9. ')' → logprob: -13.395711898803711
    10. ']=' → logprob: -14.395711898803711

Token 217: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00137143034953624
    2. ' -=' → logprob: -7.001371383666992
    3. '-' → logprob: -7.876371383666992
    4. '%=' → logprob: -9.501371383666992
    5. '=' → logprob: -12.876371383666992
    6. '%-' → logprob: -14.126371383666992
    7. ']-' → logprob: -14.126371383666992
    8. '   ' → logprob: -14.626371383666992
    9. '%' → logprob: -14.876371383666992
    10. ' -' → logprob: -15.626371383666992

Token 218: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.700132997939363e-05
    2. ' modulo' → logprob: -11.000017166137695
    3. 'module' → logprob: -15.250017166137695
    4. '	mod' → logprob: -18.125017166137695
    5. 'Modulo' → logprob: -18.250017166137695
    6. 'modal' → logprob: -19.000017166137695
    7. '```' → logprob: -19.125017166137695
    8. '(mod' → logprob: -19.125017166137695
    9. 'moder' → logprob: -19.250017166137695
    10. '   ' → logprob: -20.625017166137695

Token 219: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.130576806142926e-05
    2. 'value' → logprob: -10.375031471252441
    3. '_VALUE' → logprob: -17.750030517578125
    4. 'Value' → logprob: -18.125030517578125
    5. 'mod' → logprob: -18.875030517578125
    6. '_' → logprob: -19.875030517578125
    7. '_Value' → logprob: -20.000030517578125
    8. 'alue' → logprob: -20.625030517578125
    9. '```' → logprob: -20.625030517578125
    10. 'valu' → logprob: -20.750030517578125

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.9292415749514475e-05
    2. '<|end|>' → logprob: -11.125039100646973
    3. '```' → logprob: -11.750039100646973
    4. '
' → logprob: -12.000039100646973
    5. '           ' → logprob: -12.000039100646973
    6. '        
' → logprob: -13.250039100646973
    7. 'if' → logprob: -14.375039100646973
    8. '   ' → logprob: -15.000039100646973
    9. '            
' → logprob: -15.250039100646973
    10. ',' → logprob: -15.500039100646973

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003700165543705225
    2. '```' → logprob: -8.250370025634766
    3. '        
' → logprob: -9.875370025634766
    4. '           ' → logprob: -10.750370025634766
    5. '	' → logprob: -11.000370025634766
    6. '<|end|>' → logprob: -12.625370025634766
    7. 'if' → logprob: -12.875370025634766
    8. '               ' → logprob: -13.250370025634766
    9. '
' → logprob: -13.375370025634766
    10. '            
' → logprob: -13.375370025634766

Token 222: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034203322138637304
    2. ' if' → logprob: -6.003420352935791
    3. 'if' (adapté à ' if') → logprob: -7.128420352935791
    4. '           ' → logprob: -9.753419876098633
    5. '   ' → logprob: -10.503419876098633
    6. '```' → logprob: -10.753419876098633
    7. '        ' → logprob: -10.878419876098633
    8. '        
' → logprob: -12.628419876098633
    9. '      ' → logprob: -12.753419876098633
    10. '               ' → logprob: -12.753419876098633

Token 223: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.014163863845169544
    2. 'perm' → logprob: -4.264163970947266
    3. '_perm' → logprob: -16.389163970947266
    4. ' perms' → logprob: -16.764163970947266
    5. 'per' → logprob: -16.889163970947266
    6. ' ' → logprob: -17.514163970947266
    7. 'Perm' → logprob: -17.764163970947266
    8. '   ' → logprob: -17.889163970947266
    9. ' perf' → logprob: -18.014163970947266
    10. ' ' → logprob: -18.139163970947266

Token 224: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. '_COUNT' → logprob: -16.125
    3. 'count' → logprob: -17.5
    4. '_counts' → logprob: -17.75
    5. '_code' → logprob: -18.375
    6. 'ount' → logprob: -18.625
    7. '_cost' → logprob: -18.625
    8. '_Count' → logprob: -19.125
    9. '[count' → logprob: -19.25
    10. '_cnt' → logprob: -19.5

Token 225: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: 0.0
    2. 'next' → logprob: -17.75
    3. '[' → logprob: -18.875
    4. '```' → logprob: -18.875
    5. '(next' → logprob: -19.625
    6. '[now' → logprob: -20.25
    7. ',next' → logprob: -20.75
    8. '	next' → logprob: -21.625
    9. ' [' → logprob: -22.25
    10. ' next' → logprob: -22.5

Token 226: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0902911126613617
    2. '[next' → logprob: -2.8402910232543945
    3. 'len' → logprob: -3.8402910232543945
    4. 'next' → logprob: -5.0902910232543945
    5. 'Len' → logprob: -9.215291023254395
    6. '[len' → logprob: -9.340291023254395
    7. '(next' → logprob: -10.465291023254395
    8. '_LEN' → logprob: -10.590291023254395
    9. ' next' → logprob: -11.965291023254395
    10. '```' → logprob: -12.465291023254395

Token 227: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.029769930988550186
    2. '][' → logprob: -3.5297698974609375
    3. '[' → logprob: -11.404769897460938
    4. '```' → logprob: -12.904769897460938
    5. '[curr' → logprob: -13.904769897460938
    6. ' ][' → logprob: -14.154769897460938
    7. '}[' → logprob: -14.154769897460938
    8. '           ' → logprob: -14.279769897460938
    9. ')[' → logprob: -14.779769897460938
    10. ']' → logprob: -14.779769897460938

Token 228: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -7.803360495017841e-05
    2. '[next' → logprob: -9.500078201293945
    3. ' next' → logprob: -13.000078201293945
    4. '(next' → logprob: -14.000078201293945
    5. '	next' → logprob: -17.500078201293945
    6. ',next' → logprob: -19.000078201293945
    7. '
' → logprob: -20.000078201293945
    8. '_next' → logprob: -20.625078201293945
    9. '.next' → logprob: -21.125078201293945
    10. '   ' → logprob: -21.750078201293945

Token 229: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.039986852556467056
    2. '[next' → logprob: -3.7899868488311768
    3. '_' → logprob: -4.164987087249756
    4. 'sum' → logprob: -7.289987087249756
    5. 'next' → logprob: -9.164986610412598
    6. '[' → logprob: -9.164986610412598
    7. '[curr' → logprob: -9.789986610412598
    8. '_[' → logprob: -11.164986610412598
    9. '```' → logprob: -11.164986610412598
    10. '1' → logprob: -11.289986610412598

Token 230: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005950252525508404
    2. '[next' → logprob: -5.755950450897217
    3. '_value' → logprob: -6.130950450897217
    4. '[' → logprob: -8.380949974060059
    5. '1' → logprob: -8.380949974060059
    6. '][' → logprob: -9.880949974060059
    7. '2' → logprob: -10.755949974060059
    8. 'next' → logprob: -10.755949974060059
    9. '           ' → logprob: -11.755949974060059
    10. '(next' → logprob: -12.130949974060059

Token 231: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8301538825035095
    2. '2' → logprob: -0.9551538825035095
    3. '_' → logprob: -2.0801539421081543
    4. '[next' → logprob: -3.0801539421081543
    5. 'next' → logprob: -4.955153942108154
    6. 'curr' → logprob: -7.955153942108154
    7. '[curr' → logprob: -8.330153465270996
    8. '```' → logprob: -8.455153465270996
    9. '[' → logprob: -8.705153465270996
    10. '
' → logprob: -9.330153465270996

Token 232: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009295677882619202
    2. ']>=' → logprob: -7.000929355621338
    3. ' ]' → logprob: -11.875929832458496
    4. '[' → logprob: -12.000929832458496
    5. '>=' → logprob: -13.375929832458496
    6. '           ' → logprob: -13.625929832458496
    7. ' >=' → logprob: -14.125929832458496
    8. '][' → logprob: -14.750929832458496
    9. '```' → logprob: -15.125929832458496
    10. '   ' → logprob: -15.250929832458496

Token 233: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.38754579424858093
    2. '>=' → logprob: -1.1375458240509033
    3. ']>=' → logprob: -7.637545585632324
    4. '[' → logprob: -8.887545585632324
    5. ']' → logprob: -10.512545585632324
    6. '>' → logprob: -12.137545585632324
    7. ')>=' → logprob: -12.137545585632324
    8. '   ' → logprob: -12.137545585632324
    9. '           ' → logprob: -12.637545585632324
    10. ' ' → logprob: -13.387545585632324

Token 234: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.009786427952349186
    2. ' modulo' → logprob: -4.634786605834961
    3. 'module' → logprob: -10.634786605834961
    4. '```' → logprob: -12.759786605834961
    5. 'Modulo' → logprob: -14.009786605834961
    6. '(mod' → logprob: -14.009786605834961
    7. '	mod' → logprob: -14.259786605834961
    8. 'modal' → logprob: -15.134786605834961
    9. '           ' → logprob: -15.884786605834961
    10. '   ' → logprob: -15.884786605834961

Token 235: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.8624639324116288e-06
    2. 'value' → logprob: -13.375001907348633
    3. 'mod' → logprob: -15.500001907348633
    4. '_VALUE' → logprob: -18.250001907348633
    5. '_' → logprob: -18.875001907348633
    6. '```' → logprob: -19.625001907348633
    7. '_Value' → logprob: -19.875001907348633
    8. 'Value' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.500001907348633
    10. '_mod' → logprob: -20.500001907348633

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09793476015329361
    2. ':
' → logprob: -2.7229347229003906
    3. '           ' → logprob: -3.5979347229003906
    4. '-' → logprob: -9.97293472290039
    5. '       ' → logprob: -10.09793472290039
    6. ':

' → logprob: -10.59793472290039
    7. '               ' → logprob: -10.84793472290039
    8. '=' → logprob: -10.97293472290039
    9. ',' → logprob: -11.09793472290039
    10. '[' → logprob: -11.09793472290039

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.7994282795116305e-05
    2. '               ' → logprob: -10.62504768371582
    3. '          ' → logprob: -11.25004768371582
    4. '-' → logprob: -12.87504768371582
    5. ' -=' → logprob: -13.87504768371582
    6. ' perm' → logprob: -13.87504768371582
    7. '   ' → logprob: -13.87504768371582
    8. 'perm' → logprob: -13.87504768371582
    9. '       ' → logprob: -14.12504768371582
    10. '            ' → logprob: -14.25004768371582

Token 238: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' (adapté à ' perm') → logprob: -0.0024775585625320673
    2. ' perm' → logprob: -6.002477645874023
    3. '           ' → logprob: -13.252477645874023
    4. '       ' → logprob: -16.252477645874023
    5. '   ' → logprob: -17.502477645874023
    6. '               ' → logprob: -17.627477645874023
    7. 'perf' → logprob: -17.752477645874023
    8. 'per' → logprob: -18.252477645874023
    9. '_perm' → logprob: -18.502477645874023
    10. 'pert' → logprob: -19.377477645874023

Token 239: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.981667537620524e-06
    2. 'count' → logprob: -13.750001907348633
    3. '_COUNT' → logprob: -15.125001907348633
    4. 'perm' → logprob: -15.750001907348633
    5. '               ' → logprob: -16.875001907348633
    6. '[' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '```' → logprob: -17.625001907348633
    9. 'Count' → logprob: -17.750001907348633
    10. '_value' → logprob: -17.875001907348633

Token 240: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.9361264946837764e-07
    2. 'next' → logprob: -16.0
    3. '```' → logprob: -19.0
    4. ',next' → logprob: -20.0
    5. '	next' → logprob: -20.0
    6. '(next' → logprob: -20.25
    7. '[now' → logprob: -20.375
    8. '[' → logprob: -20.625
    9. '[
' → logprob: -21.875
    10. ' next' → logprob: -22.0

Token 241: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.000500966387335211
    2. 'len' → logprob: -8.125500679016113
    3. '[next' → logprob: -8.875500679016113
    4. 'next' → logprob: -10.500500679016113
    5. '_LEN' → logprob: -11.000500679016113
    6. '[len' → logprob: -11.625500679016113
    7. 'Len' → logprob: -12.875500679016113
    8. '<len' → logprob: -13.125500679016113
    9. '_val' → logprob: -13.625500679016113
    10. '(next' → logprob: -14.125500679016113

Token 242: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.043059248477220535
    2. '][' → logprob: -3.1680593490600586
    3. '[' → logprob: -10.293059349060059
    4. '           ' → logprob: -11.918059349060059
    5. ']' → logprob: -12.293059349060059
    6. '[][' → logprob: -12.918059349060059
    7. '               ' → logprob: -13.168059349060059
    8. '       ' → logprob: -13.418059349060059
    9. 'next' → logprob: -13.543059349060059
    10. '(next' → logprob: -14.168059349060059

Token 243: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03815349563956261
    2. '[next' → logprob: -3.2881534099578857
    3. 'curr' → logprob: -10.288153648376465
    4. '(next' → logprob: -10.538153648376465
    5. ' next' → logprob: -11.038153648376465
    6. '[curr' → logprob: -11.163153648376465
    7. '2' → logprob: -11.913153648376465
    8. '	next' → logprob: -12.288153648376465
    9. '```' → logprob: -13.163153648376465
    10. '
' → logprob: -13.538153648376465

Token 244: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.20800530910491943
    2. '_len' → logprob: -1.8330053091049194
    3. '[next' → logprob: -4.208005428314209
    4. '_' → logprob: -4.458005428314209
    5. 'sum' → logprob: -7.708005428314209
    6. 'next' → logprob: -8.45800495147705
    7. 'len' → logprob: -8.58300495147705
    8. '[len' → logprob: -9.20800495147705
    9. '1' → logprob: -9.45800495147705
    10. '[' → logprob: -9.58300495147705

Token 245: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01133369468152523
    2. '2' → logprob: -4.636333465576172
    3. '1' → logprob: -6.761333465576172
    4. '[next' → logprob: -8.761333465576172
    5. '_value' → logprob: -9.011333465576172
    6. '[' → logprob: -9.386333465576172
    7. '+' → logprob: -11.011333465576172
    8. '           ' → logprob: -11.886333465576172
    9. '-' → logprob: -12.011333465576172
    10. '```' → logprob: -12.136333465576172

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8141188621520996
    2. '1' → logprob: -1.1891188621520996
    3. '353' → logprob: -2.1891188621520996
    4. '_value' → logprob: -2.5641188621520996
    5. 'value' → logprob: -3.0641188621520996
    6. '352' → logprob: -5.3141188621521
    7. '```' → logprob: -5.9391188621521
    8. '53' → logprob: -6.5641188621521
    9. '3' → logprob: -6.5641188621521
    10. 'Value' → logprob: -6.9391188621521

Token 247: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.08968471735715866
    2. '-=' → logprob: -2.5896847248077393
    3. '           ' → logprob: -5.08968448638916
    4. ']' → logprob: -5.71468448638916
    5. ']-' → logprob: -7.46468448638916
    6. '-' → logprob: -7.58968448638916
    7. '[' → logprob: -10.08968448638916
    8. '       ' → logprob: -10.21468448638916
    9. '   ' → logprob: -10.46468448638916
    10. '          ' → logprob: -10.71468448638916

Token 248: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03835013881325722
    2. ' -=' → logprob: -3.2883501052856445
    3. '-' → logprob: -8.538350105285645
    4. '           ' → logprob: -9.288350105285645
    5. '=' → logprob: -12.038350105285645
    6. '   ' → logprob: -12.538350105285645
    7. '```' → logprob: -12.538350105285645
    8. '       ' → logprob: -12.538350105285645
    9. '+=' → logprob: -13.788350105285645
    10. ' ' → logprob: -14.413350105285645

Token 249: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0009168167016468942
    2. ' modulo' → logprob: -7.000916957855225
    3. 'module' → logprob: -12.250916481018066
    4. '(mod' → logprob: -15.125916481018066
    5. 'Modulo' → logprob: -16.375917434692383
    6. '	mod' → logprob: -16.625917434692383
    7. '```' → logprob: -17.500917434692383
    8. 'modal' → logprob: -18.000917434692383
    9. 'mo' → logprob: -18.000917434692383
    10. 'modo' → logprob: -18.375917434692383

Token 250: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0683535037969705e-05
    2. 'value' → logprob: -11.50001049041748
    3. '_' → logprob: -15.87501049041748
    4. '_VALUE' → logprob: -16.000011444091797
    5. 'mod' → logprob: -16.500011444091797
    6. '_values' → logprob: -17.125011444091797
    7. '```' → logprob: -18.000011444091797
    8. '_Value' → logprob: -18.000011444091797
    9. '_code' → logprob: -18.250011444091797
    10. 'valu' → logprob: -18.625011444091797

Token 251: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08397306501865387
    2. 'valid' → logprob: -3.3339731693267822
    3. ' for' → logprob: -3.8339731693267822
    4. '
' → logprob: -4.083972930908203
    5. '   ' → logprob: -5.708972930908203
    6. '<|end|>' → logprob: -6.958972930908203
    7. ' valid' → logprob: -7.333972930908203
    8. ' 
' → logprob: -7.833972930908203
    9. '#' → logprob: -8.333972930908203
    10. ')' → logprob: -8.708972930908203

Token 252: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011468284763395786
    2. 'valid' → logprob: -4.511468410491943
    3. ' for' → logprob: -8.011467933654785
    4. '   ' → logprob: -10.261467933654785
    5. 'total' → logprob: -10.511467933654785
    6. 'if' → logprob: -11.511467933654785
    7. '```' → logprob: -11.761467933654785
    8. ' valid' → logprob: -12.136467933654785
    9. 'result' → logprob: -13.761467933654785
    10. 'sum' → logprob: -14.636467933654785

Token 253: ' seq' (ID: 26775)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.19467824697494507
    2. 'length' → logprob: -2.31967830657959
    3. ' curr' → logprob: -2.69467830657959
    4. ' length' → logprob: -4.94467830657959
    5. 'idx' → logprob: -6.31967830657959
    6. 'seq' → logprob: -7.56967830657959
    7. 'next' → logprob: -7.81967830657959
    8. 'valid' → logprob: -8.19467830657959
    9. 'sub' → logprob: -8.56967830657959
    10. 'i' → logprob: -9.06967830657959

Token 254: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00016563729150220752
    2. '_length' → logprob: -8.750165939331055
    3. '_' → logprob: -12.750165939331055
    4. '_idx' → logprob: -12.875165939331055
    5. 'u' → logprob: -14.875165939331055
    6. '_sum' → logprob: -15.000165939331055
    7. 'ence' → logprob: -15.375165939331055
    8. '_l' → logprob: -15.625165939331055
    9. '_num' → logprob: -15.750165939331055
    10. '_size' → logprob: -16.375165939331055

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0430021695792675
    2. 'in' → logprob: -3.168002128601074
    3. 'range' → logprob: -13.293002128601074
    4. 'In' → logprob: -14.668002128601074
    5. '	in' → logprob: -15.668002128601074
    6. ' ' → logprob: -16.04300308227539
    7. 'n' → logprob: -16.29300308227539
    8. '```' → logprob: -16.41800308227539
    9. 'import' → logprob: -16.54300308227539
    10. '_in' → logprob: -16.79300308227539

Token 256: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -19.37507438659668
    4. ' ' → logprob: -20.00007438659668
    5. '   ' → logprob: -20.50007438659668
    6. '
' → logprob: -20.62507438659668
    7. '	range' → logprob: -20.75007438659668
    8. 'in' → logprob: -21.12507438659668
    9. '  ' → logprob: -21.75007438659668
    10. 'length' → logprob: -22.62507438659668

Token 257: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741661846637726
    2. '(total' → logprob: -0.9741661548614502
    3. 'total' → logprob: -9.349165916442871
    4. '1' → logprob: -13.599165916442871
    5. ' total' → logprob: -14.974165916442871
    6. '(len' → logprob: -15.349165916442871
    7. ',total' → logprob: -15.349165916442871
    8. ' (' → logprob: -17.349166870117188
    9. ' ' → logprob: -17.474166870117188
    10. '(max' → logprob: -17.599166870117188

Token 258: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -5.319370302458992e-06
    2. 'length' → logprob: -12.875005722045898
    3. '+' → logprob: -13.750005722045898
    4. 'Length' → logprob: -14.500005722045898
    5. '_len' → logprob: -14.875005722045898
    6. '(' → logprob: -15.250005722045898
    7. '_LENGTH' → logprob: -15.875005722045898
    8. '_lengths' → logprob: -16.1250057220459
    9. '_l' → logprob: -16.2500057220459
    10. 'ength' → logprob: -17.1250057220459

Token 259: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31329524517059326
    2. ' +' → logprob: -1.3132952451705933
    3. '):' → logprob: -10.938295364379883
    4. '):
' → logprob: -11.188295364379883
    5. ',' → logprob: -13.813295364379883
    6. '   ' → logprob: -14.813295364379883
    7. '1' → logprob: -15.188295364379883
    8. '+
' → logprob: -16.313295364379883
    9. '```' → logprob: -16.813295364379883
    10. '=' → logprob: -16.938295364379883

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. 'total' → logprob: -15.625109672546387
    4. '   ' → logprob: -16.00010871887207
    5. '0' → logprob: -16.62510871887207
    6. '```' → logprob: -16.62510871887207
    7. '
' → logprob: -17.50010871887207
    8. '2' → logprob: -18.18760871887207
    9. ' total' → logprob: -18.25010871887207
    10. ')' → logprob: -18.75010871887207

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.375003814697266
    4. '0' → logprob: -18.250003814697266
    5. '   ' → logprob: -18.375003814697266
    6. ')' → logprob: -19.250003814697266
    7. '``' → logprob: -19.500003814697266
    8. '
' → logprob: -19.937503814697266
    9. '۱' → logprob: -20.000003814697266
    10. '2' → logprob: -20.250003814697266

Token 262: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07949475198984146
    2. '):
' → logprob: -2.5794947147369385
    3. '+' → logprob: -8.07949447631836
    4. ':' → logprob: -8.20449447631836
    5. ',' → logprob: -11.70449447631836
    6. '):
' → logprob: -12.07949447631836
    7. ' +' → logprob: -12.82949447631836
    8. ':
' → logprob: -13.57949447631836
    9. ']:' → logprob: -13.95449447631836
    10. '   ' → logprob: -14.07949447631836

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.110668618930504e-05
    2. ' valid' → logprob: -10.50006103515625
    3. 'valid' → logprob: -11.12506103515625
    4. ' for' → logprob: -11.62506103515625
    5. 'for' → logprob: -12.25006103515625
    6. '
' → logprob: -13.50006103515625
    7. 'total' → logprob: -13.75006103515625
    8. '    
' → logprob: -14.00006103515625
    9. '	valid' → logprob: -14.50006103515625
    10. ' total' → logprob: -15.37506103515625

Token 264: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4974362552165985
    2. 'valid' → logprob: -1.122436285018921
    3. 'total' → logprob: -3.247436285018921
    4. ' valid' → logprob: -4.747436046600342
    5. 'sum' → logprob: -5.247436046600342
    6. '   ' → logprob: -5.372436046600342
    7. ' for' → logprob: -5.747436046600342
    8. 'current' → logprob: -5.997436046600342
    9. 'curr' → logprob: -6.372436046600342
    10. 'seq' → logprob: -7.122436046600342

Token 265: ' seq' (ID: 26775)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.45675384998321533
    2. 'seq' → logprob: -1.5817538499832153
    3. 'sub' → logprob: -2.081753730773926
    4. ' curr' → logprob: -3.831753730773926
    5. ' subse' → logprob: -5.706753730773926
    6. 'sum' → logprob: -5.706753730773926
    7. ' seq' → logprob: -5.831753730773926
    8. 'perm' → logprob: -6.581753730773926
    9. 'total' → logprob: -7.081753730773926
    10. 's' → logprob: -7.581753730773926

Token 266: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00047356789582408965
    2. '_len' → logprob: -7.750473499298096
    3. 'sum' → logprob: -10.250473976135254
    4. '_length' → logprob: -12.750473976135254
    5. '_s' → logprob: -13.750473976135254
    6. '_' → logprob: -14.000473976135254
    7. '_sub' → logprob: -14.250473976135254
    8. '_max' → logprob: -14.875473976135254
    9. '_start' → logprob: -15.000473976135254
    10. '_min' → logprob: -15.125473976135254

Token 267: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740990400314331
    2. 'in' → logprob: -0.9740990400314331
    3. ' ' → logprob: -11.474099159240723
    4. '	in' → logprob: -12.724099159240723
    5. '   ' → logprob: -12.849099159240723
    6. ',' → logprob: -13.724099159240723
    7. '```' → logprob: -14.224099159240723
    8. ')' → logprob: -14.599099159240723
    9. '_in' → logprob: -14.724099159240723
    10. 'n' → logprob: -14.724099159240723

Token 268: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12726257741451263
    2. 'range' → logprob: -2.127262592315674
    3. ' perm' → logprob: -9.127262115478516
    4. '(range' → logprob: -9.252262115478516
    5. ' in' → logprob: -9.627262115478516
    6. 'perm' → logprob: -10.377262115478516
    7. ' valid' → logprob: -12.002262115478516
    8. '	range' → logprob: -12.002262115478516
    9. ' subse' → logprob: -12.502262115478516
    10. 'sub' → logprob: -12.627262115478516

Token 269: '(seq' (ID: 78669)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.019003216177225113
    2. '2' → logprob: -4.269003391265869
    3. '(seq' → logprob: -5.894003391265869
    4. 'total' → logprob: -6.894003391265869
    5. ' seq' → logprob: -7.519003391265869
    6. 'sub' → logprob: -8.144002914428711
    7. 'len' → logprob: -9.769002914428711
    8. 'max' → logprob: -9.894002914428711
    9. ' ' → logprob: -10.394002914428711
    10. '(' → logprob: -10.394002914428711

Token 270: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.4021237802808173e-05
    2. '_sum' → logprob: -11.750014305114746
    3. 'len' → logprob: -13.125014305114746
    4. '_seq' → logprob: -14.250014305114746
    5. '[' → logprob: -14.500014305114746
    6. 'Len' → logprob: -14.750014305114746
    7. 'seq' → logprob: -14.875014305114746
    8. '*' → logprob: -15.000014305114746
    9. '[len' → logprob: -15.000014305114746
    10. '_length' → logprob: -15.625014305114746

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027159531600773335
    2. 'seq' → logprob: -6.127716064453125
    3. ' ,' → logprob: -8.377716064453125
    4. '(seq' → logprob: -9.002716064453125
    5. '*' → logprob: -9.502716064453125
    6. '2' → logprob: -9.627716064453125
    7. ' seq' → logprob: -11.377716064453125
    8. '+' → logprob: -11.752716064453125
    9. ',
' → logprob: -12.377716064453125
    10. '[' → logprob: -13.127716064453125

Token 272: ' min' (ID: 1349)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27691778540611267
    2. 'sub' → logprob: -1.901917815208435
    3. ' subse' → logprob: -3.1519176959991455
    4. 'min' → logprob: -3.2769176959991455
    5. ' min' → logprob: -5.151917934417725
    6. ' ' → logprob: -5.776917934417725
    7. 'seq' → logprob: -6.276917934417725
    8. 'total' → logprob: -7.526917934417725
    9. 'subs' → logprob: -8.526917457580566
    10. '1' → logprob: -8.901917457580566

Token 273: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07257956266403198
    2. '(seq' → logprob: -2.6975796222686768
    3. '(sub' → logprob: -6.572579383850098
    4. '(total' → logprob: -6.822579383850098
    5. '((' → logprob: -9.572579383850098
    6. '2' → logprob: -9.697579383850098
    7. 'seq' → logprob: -11.822579383850098
    8. '(
' → logprob: -13.322579383850098
    9. '(sequence' → logprob: -13.322579383850098
    10. 'total' → logprob: -13.572579383850098

Token 274: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5989310145378113
    2. '(' → logprob: -0.9739310145378113
    3. 'sub' → logprob: -3.473931074142456
    4. '(sub' → logprob: -3.723931074142456
    5. 'total' → logprob: -4.598930835723877
    6. 'seq' → logprob: -5.598930835723877
    7. '(seq' → logprob: -6.223930835723877
    8. '(total' → logprob: -6.473930835723877
    9. '((' → logprob: -8.973931312561035
    10. ' subse' → logprob: -9.473931312561035

Token 275: ' *' (ID: 425)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.6687209010124207
    2. '*' → logprob: -1.2937209606170654
    3. '(seq' → logprob: -1.9187209606170654
    4. 'sub' → logprob: -3.4187209606170654
    5. '(sub' → logprob: -4.293720722198486
    6. ' *' → logprob: -5.168720722198486
    7. '_seq' → logprob: -5.293720722198486
    8. 'total' → logprob: -5.543720722198486
    9. '_sub' → logprob: -5.668720722198486
    10. ' seq' → logprob: -6.918720722198486

Token 276: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -2.45848218582978e-06
    2. ' seq' → logprob: -13.12500286102295
    3. '(seq' → logprob: -15.00000286102295
    4. 'total' → logprob: -16.375001907348633
    5. 'sequence' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '
' → logprob: -20.375001907348633
    8. '_seq' → logprob: -20.625001907348633
    9. '.seq' → logprob: -20.625001907348633
    10. 'Seq' → logprob: -22.000001907348633

Token 277: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.6312321753939614e-05
    2. '_sum' → logprob: -10.250036239624023
    3. 'len' → logprob: -14.375036239624023
    4. '_length' → logprob: -15.750036239624023
    5. 'sum' → logprob: -15.750036239624023
    6. 'Len' → logprob: -17.875036239624023
    7. '_seq' → logprob: -17.875036239624023
    8. '_LEN' → logprob: -18.250036239624023
    9. 'length' → logprob: -18.375036239624023
    10. 'seq' → logprob: -19.250036239624023

Token 278: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5662404894828796
    2. '+' → logprob: -0.9412404894828796
    3. ' +' → logprob: -3.3162405490875244
    4. '(sub' → logprob: -6.066240310668945
    5. 'sub' → logprob: -6.191240310668945
    6. '[sub' → logprob: -7.816240310668945
    7. 'total' → logprob: -8.191240310668945
    8. ',total' → logprob: -8.691240310668945
    9. '(seq' → logprob: -9.066240310668945
    10. ' subse' → logprob: -9.316240310668945

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008530654013156891
    2. '(seq' → logprob: -5.258530616760254
    3. 'seq' → logprob: -5.758530616760254
    4. '(sub' → logprob: -10.133530616760254
    5. 'sub' → logprob: -10.508530616760254
    6. ' ' → logprob: -11.133530616760254
    7. ')' → logprob: -11.508530616760254
    8. 'total' → logprob: -11.883530616760254
    9. ' seq' → logprob: -11.883530616760254
    10. '
' → logprob: -12.133530616760254

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010604646377032623
    2. '(sub' → logprob: -9.500105857849121
    3. '(seq' → logprob: -11.375105857849121
    4. '(' → logprob: -11.500105857849121
    5. 'sub' → logprob: -12.250105857849121
    6. ' ' → logprob: -13.250105857849121
    7. 'seq' → logprob: -14.000105857849121
    8. '(total' → logprob: -14.500105857849121
    9. '[sub' → logprob: -14.875105857849121
    10. ')' → logprob: -15.250105857849121

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004785744531545788
    2. '),' → logprob: -8.125478744506836
    3. '(sub' → logprob: -9.250478744506836
    4. ' ,' → logprob: -11.250478744506836
    5. '):' → logprob: -11.250478744506836
    6. ')' → logprob: -11.250478744506836
    7. 'sub' → logprob: -11.375478744506836
    8. '):
' → logprob: -12.000478744506836
    9. '(),' → logprob: -12.125478744506836
    10. ',
' → logprob: -12.250478744506836

Token 282: ' subse' (ID: 19874)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.007938416674733162
    2. ' subse' → logprob: -4.882938385009766
    3. '   ' → logprob: -9.132938385009766
    4. '(sub' → logprob: -9.632938385009766
    5. ' sub' → logprob: -10.507938385009766
    6. '[sub' → logprob: -10.507938385009766
    7. 'total' → logprob: -11.132938385009766
    8. '           ' → logprob: -11.132938385009766
    9. 'seq' → logprob: -11.632938385009766
    10. '               ' → logprob: -11.632938385009766

Token 283: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0031876976136118174
    2. 'seq' → logprob: -5.753187656402588
    3. 'eq' → logprob: -11.753188133239746
    4. '_seq' → logprob: -13.628188133239746
    5. 'c' → logprob: -15.503188133239746
    6. 'sq' → logprob: -15.628188133239746
    7. 'qc' → logprob: -15.878188133239746
    8. 'qs' → logprob: -16.37818717956543
    9. 'Q' → logprob: -16.62818717956543
    10. '(seq' → logprob: -16.87818717956543

Token 284: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.824579784530215e-05
    2. 'q' → logprob: -10.1250581741333
    3. '_seq' → logprob: -11.0000581741333
    4. 'sum' → logprob: -14.1250581741333
    5. 'm' → logprob: -14.8750581741333
    6. '_sub' → logprob: -16.000059127807617
    7. '_max' → logprob: -16.375059127807617
    8. 'c' → logprob: -17.250059127807617
    9. 's' → logprob: -17.500059127807617
    10. 'n' → logprob: -17.750059127807617

Token 285: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0003757383383344859
    2. '_sum' → logprob: -8.000375747680664
    3. 'limit' → logprob: -11.000375747680664
    4. '_lim' → logprob: -11.500375747680664
    5. ')' → logprob: -12.375375747680664
    6. '+' → logprob: -12.750375747680664
    7. '   ' → logprob: -14.625375747680664
    8. '_' → logprob: -14.750375747680664
    9. '_limits' → logprob: -14.750375747680664
    10. '_max' → logprob: -15.000375747680664

Token 286: ')):
' (ID: 22530)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2287408858537674
    2. ')):' → logprob: -2.228740930557251
    3. ' +' → logprob: -2.978740930557251
    4. ')):
' → logprob: -3.103740930557251
    5. ')+' → logprob: -7.603740692138672
    6. ')' → logprob: -8.103740692138672
    7. '):' → logprob: -9.603740692138672
    8. '))' → logprob: -9.728740692138672
    9. ')):
' → logprob: -9.978740692138672
    10. '):
' → logprob: -10.728740692138672

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.281485836254433e-05
    2. ' valid' → logprob: -10.750092506408691
    3. 'valid' → logprob: -10.875092506408691
    4. '   ' → logprob: -11.500092506408691
    5. '           ' → logprob: -11.625092506408691
    6. '```' → logprob: -11.750092506408691
    7. '
' → logprob: -12.125092506408691
    8. '        
' → logprob: -12.250092506408691
    9. '(valid' → logprob: -13.000092506408691
    10. ',' → logprob: -13.000092506408691

Token 288: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.01730555109679699
    2. ' valid' → logprob: -4.392305374145508
    3. '           ' → logprob: -5.767305374145508
    4. '       ' → logprob: -6.642305374145508
    5. '   ' → logprob: -8.017305374145508
    6. '	valid' → logprob: -11.267305374145508
    7. '
' → logprob: -12.392305374145508
    8. '```' → logprob: -13.267305374145508
    9. '(valid' → logprob: -13.767305374145508
    10. '               ' → logprob: -14.142305374145508

Token 289: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -1.1472419600977446e-06
    2. 'perm' → logprob: -13.750000953674316
    3. '_perf' → logprob: -17.125001907348633
    4. '_per' → logprob: -18.750001907348633
    5. '_prob' → logprob: -20.125001907348633
    6. '```' → logprob: -20.250001907348633
    7. '_permalink' → logprob: -21.125001907348633
    8. '\' → logprob: -21.250001907348633
    9. '_sum' → logprob: -21.375001907348633
    10. '_prod' → logprob: -21.750001907348633

Token 290: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.1008713702030946e-06
    2. 'total' → logprob: -13.625001907348633
    3. '_tot' → logprob: -14.875001907348633
    4. '_valid' → logprob: -15.000001907348633
    5. '_to' → logprob: -16.875001907348633
    6. '_count' → logprob: -17.000001907348633
    7. 'Total' → logprob: -17.625001907348633
    8. '_Total' → logprob: -17.750001907348633
    9. '_' → logprob: -17.875001907348633
    10. '```' → logprob: -18.375001907348633

Token 291: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -13.500004768371582
    3. ' [' → logprob: -13.750004768371582
    4. '       ' → logprob: -14.875004768371582
    5. '[idx' → logprob: -15.500004768371582
    6. '[
' → logprob: -15.500004768371582
    7. '
' → logprob: -15.500004768371582
    8. '   ' → logprob: -15.500004768371582
    9. '[val' → logprob: -15.500004768371582
    10. '[curr' → logprob: -16.2500057220459

Token 292: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -9.088346359931165e-07
    2. ' seq' → logprob: -14.500000953674316
    3. '
' → logprob: -15.625000953674316
    4. '[' → logprob: -17.0
    5. '_seq' → logprob: -17.375
    6. 'idx' → logprob: -17.375
    7. '(seq' → logprob: -17.5
    8. ']' → logprob: -18.125
    9. '   ' → logprob: -18.375
    10. 's' → logprob: -18.875

Token 293: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0028281768318265676
    2. '_sum' → logprob: -5.877828121185303
    3. 'len' → logprob: -10.877828598022461
    4. 'sum' → logprob: -12.877828598022461
    5. '_seq' → logprob: -14.877828598022461
    6. '_length' → logprob: -15.377828598022461
    7. '[len' → logprob: -15.377828598022461
    8. 'Len' → logprob: -15.502828598022461
    9. '_LEN' → logprob: -16.37782859802246
    10. 's' → logprob: -16.75282859802246

Token 294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029770854860544205
    2. ']+=' → logprob: -3.529770851135254
    3. '[' → logprob: -11.154770851135254
    4. '+=' → logprob: -12.779770851135254
    5. ' ]' → logprob: -13.904770851135254
    6. ']+' → logprob: -14.029770851135254
    7. ']=' → logprob: -14.654770851135254
    8. '```' → logprob: -14.904770851135254
    9. '
' → logprob: -15.779770851135254
    10. '+]' → logprob: -16.02977180480957

Token 295: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002807623823173344
    2. '=' → logprob: -8.750280380249023
    3. ' +=' → logprob: -9.250280380249023
    4. ']+=' → logprob: -10.625280380249023
    5. '+' → logprob: -13.625280380249023
    6. '+=(' → logprob: -15.250280380249023
    7. '%=' → logprob: -16.125280380249023
    8. '```' → logprob: -16.125280380249023
    9. '[' → logprob: -16.250280380249023
    10. '   ' → logprob: -17.750280380249023

Token 296: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.00020354038861114532
    2. ' perm' → logprob: -8.500203132629395
    3. 'per' → logprob: -18.62520408630371
    4. '   ' → logprob: -19.37520408630371
    5. '       ' → logprob: -19.62520408630371
    6. 'perf' → logprob: -20.75020408630371
    7. '_perm' → logprob: -21.12520408630371
    8. 'valid' → logprob: -21.62520408630371
    9. '           ' → logprob: -21.87520408630371
    10. 'permit' → logprob: -22.00020408630371

Token 297: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -15.375
    3. '_COUNT' → logprob: -16.5
    4. 'Count' → logprob: -16.875
    5. 'perm' → logprob: -16.875
    6. '_sum' → logprob: -17.875
    7. 'm' → logprob: -17.875
    8. 'valid' → logprob: -18.0
    9. '_cnt' → logprob: -18.5
    10. '_counts' → logprob: -18.75

Token 298: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. 'seq' → logprob: -14.000001907348633
    3. '```' → logprob: -14.875001907348633
    4. ' [' → logprob: -15.375001907348633
    5. '(seq' → logprob: -18.000001907348633
    6. '[
' → logprob: -18.750001907348633
    7. '
' → logprob: -18.875001907348633
    8. '[curr' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.375001907348633
    10. 'def' → logprob: -19.500001907348633

Token 299: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.250006675720215
    3. '(seq' → logprob: -13.875006675720215
    4. ' seq' → logprob: -15.000006675720215
    5. '```' → logprob: -15.625006675720215
    6. '_seq' → logprob: -17.3750057220459
    7. '.seq' → logprob: -17.7500057220459
    8. '<|end|>' → logprob: -19.1250057220459
    9. 'sq' → logprob: -19.2500057220459
    10. '
' → logprob: -19.3750057220459

Token 300: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.837811088189483e-05
    2. 'len' → logprob: -9.625068664550781
    3. '_sum' → logprob: -14.500068664550781
    4. 'Len' → logprob: -15.250068664550781
    5. 's' → logprob: -15.375068664550781
    6. 'sum' → logprob: -15.500068664550781
    7. 'm' → logprob: -15.500068664550781
    8. '[len' → logprob: -15.625068664550781
    9. 'seq' → logprob: -16.12506866455078
    10. '_LEN' → logprob: -16.37506866455078

Token 301: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004509301797952503
    2. '[' → logprob: -7.75045108795166
    3. ']' → logprob: -10.87545108795166
    4. '"][' → logprob: -14.62545108795166
    5. ' ][' → logprob: -14.87545108795166
    6. ''][' → logprob: -14.87545108795166
    7. ')[' → logprob: -16.500450134277344
    8. '}[' → logprob: -17.375450134277344
    9. '>[' → logprob: -17.875450134277344
    10. '```' → logprob: -18.000450134277344

Token 302: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -1.9361264946837764e-07
    2. ' seq' → logprob: -16.375
    3. '(seq' → logprob: -18.25
    4. '
' → logprob: -21.375
    5. '   ' → logprob: -21.375
    6. '_seq' → logprob: -21.5
    7. 'sq' → logprob: -22.75
    8. '.seq' → logprob: -23.0
    9. 'sequence' → logprob: -23.125
    10. '```' → logprob: -23.5

Token 303: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.537868779967539e-06
    2. '_len' → logprob: -11.750008583068848
    3. '_' → logprob: -14.875008583068848
    4. '_seq' → logprob: -15.875008583068848
    5. '_s' → logprob: -16.62500762939453
    6. 'sum' → logprob: -16.75000762939453
    7. ' _' → logprob: -18.25000762939453
    8. '__' → logprob: -18.50000762939453
    9. '_num' → logprob: -18.62500762939453
    10. '_SUM' → logprob: -19.37500762939453

Token 304: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: 'if' (ID: 366)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.2696199119091034
    2. ' valid' → logprob: -2.019619941711426
    3. '       ' → logprob: -3.019619941711426
    4. 'if' → logprob: -3.019619941711426
    5. '   ' → logprob: -6.144619941711426
    6. ' if' → logprob: -6.769619941711426
    7. '```' → logprob: -6.894619941711426
    8. 'for' → logprob: -7.019619941711426
    9. '
' → logprob: -7.894619941711426
    10. '	valid' → logprob: -8.769619941711426

Token 306: ' subse' (ID: 19874)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.2527227997779846
    2. ' __' → logprob: -2.12772274017334
    3. ' total' → logprob: -2.50272274017334
    4. '__' → logprob: -4.87772274017334
    5. ' subse' → logprob: -5.25272274017334
    6. 'valid' → logprob: -5.50272274017334
    7. 'total' → logprob: -6.25272274017334
    8. ' len' → logprob: -6.50272274017334
    9. ' seq' → logprob: -6.87772274017334
    10. ' not' → logprob: -7.37772274017334

Token 307: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4378848391061183e-05
    2. 'seq' → logprob: -11.250014305114746
    3. 'c' → logprob: -13.875014305114746
    4. 'eq' → logprob: -15.750014305114746
    5. '_seq' → logprob: -17.125015258789062
    6. 'qs' → logprob: -17.250015258789062
    7. 'Q' → logprob: -17.750015258789062
    8. 'qu' → logprob: -17.875015258789062
    9. 'cc' → logprob: -18.125015258789062
    10. 'cq' → logprob: -18.500015258789062

Token 308: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.13388703338569e-06
    2. '_' → logprob: -12.250009536743164
    3. ' _' → logprob: -13.875009536743164
    4. 'um' → logprob: -14.000009536743164
    5. 'sum' → logprob: -14.500009536743164
    6. 'm' → logprob: -15.125009536743164
    7. '_limit' → logprob: -15.375009536743164
    8. '__' → logprob: -15.375009536743164
    9. '_s' → logprob: -15.500009536743164
    10. '_total' → logprob: -15.875009536743164

Token 309: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -4.930552313453518e-05
    2. '_' → logprob: -10.625049591064453
    3. '_lim' → logprob: -11.250049591064453
    4. '<' → logprob: -13.125049591064453
    5. '_l' → logprob: -13.250049591064453
    6. '```' → logprob: -13.625049591064453
    7. ' <' → logprob: -14.125049591064453
    8. '_LIMIT' → logprob: -14.250049591064453
    9. ' _' → logprob: -14.250049591064453
    10. 'limit' → logprob: -14.375049591064453

Token 310: ' %' (ID: 1851)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0548330545425415
    2. ' >' → logprob: -1.6798330545425415
    3. ' ==' → logprob: -1.8048330545425415
    4. '>' → logprob: -2.054832935333252
    5. '==' → logprob: -2.429832935333252
    6. '<=' → logprob: -2.679832935333252
    7. ' <' → logprob: -4.554832935333252
    8. '<' → logprob: -6.554832935333252
    9. '```' → logprob: -6.554832935333252
    10. ':' → logprob: -6.679832935333252

Token 311: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05322650820016861
    2. 'mod' → logprob: -4.178226470947266
    3. '3' → logprob: -4.303226470947266
    4. 'sub' → logprob: -4.678226470947266
    5. '1' → logprob: -4.928226470947266
    6. 'total' → logprob: -6.178226470947266
    7. '998' → logprob: -6.428226470947266
    8. ' ' → logprob: -6.553226470947266
    9. '```' → logprob: -8.053226470947266
    10. '100' → logprob: -8.678226470947266

Token 312: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10508813709020615
    2. '3' → logprob: -3.230088233947754
    3. 'total' → logprob: -3.480088233947754
    4. '1' → logprob: -3.980088233947754
    5. 'mod' → logprob: -5.355088233947754
    6. '998' → logprob: -5.730088233947754
    7. 'sub' → logprob: -7.355088233947754
    8. '4' → logprob: -7.605088233947754
    9. '==' → logprob: -7.730088233947754
    10. '100' → logprob: -8.230088233947754

Token 313: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14231890439987183
    2. ' ==' → logprob: -2.1423189640045166
    3. '!=' → logprob: -4.6423187255859375
    4. ' !=' → logprob: -5.3923187255859375
    5. ':' → logprob: -6.8923187255859375
    6. '=' → logprob: -11.017318725585938
    7. '>' → logprob: -11.142318725585938
    8. '```' → logprob: -11.392318725585938
    9. '==
' → logprob: -12.017318725585938
    10. '===' → logprob: -12.892318725585938

Token 314: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005402965471148491
    2. '1' → logprob: -5.6304030418396
    3. ' ' → logprob: -6.3804030418396
    4. '2' → logprob: -9.505402565002441
    5. '==' → logprob: -10.630402565002441
    6. '=' → logprob: -12.380402565002441
    7. '```' → logprob: -12.880402565002441
    8. ' ==' → logprob: -14.255402565002441
    9. '
' → logprob: -15.755402565002441
    10. '   ' → logprob: -16.255403518676758

Token 315: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031897129956632853
    2. '1' → logprob: -5.753189563751221
    3. ' ' → logprob: -11.628190040588379
    4. '2' → logprob: -13.003190040588379
    5. '==' → logprob: -15.128190040588379
    6. '=' → logprob: -15.378190040588379
    7. '```' → logprob: -15.503190040588379
    8. '   ' → logprob: -17.690689086914062
    9. '
' → logprob: -17.690689086914062
    10. '

' → logprob: -18.003189086914062

Token 316: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5778700709342957
    2. ':' → logprob: -0.8278700709342957
    3. ' and' → logprob: -6.702869892120361
    4. '   ' → logprob: -7.452869892120361
    5. ' ==' → logprob: -10.45287036895752
    6. '==' → logprob: -10.70287036895752
    7. ' :
' → logprob: -10.70287036895752
    8. ' :' → logprob: -11.20287036895752
    9. 'and' → logprob: -11.45287036895752
    10. ' or' → logprob: -12.20287036895752

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027275074273347855
    2. ':' → logprob: -4.402275085449219
    3. ' valid' → logprob: -4.652275085449219
    4. ':
' → logprob: -5.527275085449219
    5. 'valid' → logprob: -7.902275085449219
    6. ' for' → logprob: -8.527275085449219
    7. ' :' → logprob: -8.902275085449219
    8. '       ' → logprob: -9.027275085449219
    9. '):
' → logprob: -9.777275085449219
    10. ' :
' → logprob: -10.277275085449219

Token 318: ' for' (ID: 395)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.630315899848938
    2. '   ' → logprob: -1.255315899848938
    3. 'valid' → logprob: -2.5053157806396484
    4. ' for' → logprob: -2.6303157806396484
    5. 'for' (adapté à ' for') → logprob: -3.8803157806396484
    6. ' print' → logprob: -5.880315780639648
    7. 'print' → logprob: -6.505315780639648
    8. ' result' → logprob: -6.630315780639648
    9. ' total' → logprob: -7.005315780639648
    10. 'result' → logprob: -7.880315780639648

Token 319: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.846760094165802
    2. ' idx' → logprob: -1.3467600345611572
    3. ' length' → logprob: -1.8467600345611572
    4. ' curr' → logprob: -2.9717600345611572
    5. ' i' → logprob: -3.3467600345611572
    6. ' subse' → logprob: -3.7217600345611572
    7. ' total' → logprob: -4.846760272979736
    8. ' valid' → logprob: -5.096760272979736
    9. ' val' → logprob: -5.221760272979736
    10. ' prev' → logprob: -5.346760272979736

Token 320: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0017762075876817107
    2. '_sum' → logprob: -6.376776218414307
    3. ' in' → logprob: -9.751775741577148
    4. '_length' → logprob: -12.126775741577148
    5. 'len' → logprob: -12.501775741577148
    6. '_' → logprob: -13.251775741577148
    7. '[len' → logprob: -14.251775741577148
    8. '_idx' → logprob: -14.251775741577148
    9. 'sum' → logprob: -14.376775741577148
    10. 'Len' → logprob: -14.501775741577148

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06999201327562332
    2. 'in' → logprob: -2.6949920654296875
    3. '[' → logprob: -10.569992065429688
    4. '	in' → logprob: -12.069992065429688
    5. ',' → logprob: -12.319992065429688
    6. '   ' → logprob: -12.569992065429688
    7. 'In' → logprob: -12.694992065429688
    8. 'n' → logprob: -12.819992065429688
    9. '```' → logprob: -12.944992065429688
    10. ' ' → logprob: -12.944992065429688

Token 322: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519776225090027
    2. 'range' → logprob: -1.5019776821136475
    3. 'valid' → logprob: -11.376977920532227
    4. ' ' → logprob: -11.501977920532227
    5. ' valid' → logprob: -12.126977920532227
    6. '[' → logprob: -12.501977920532227
    7. '(range' → logprob: -12.501977920532227
    8. ' reversed' → logprob: -13.126977920532227
    9. '  ' → logprob: -13.251977920532227
    10. '	range' → logprob: -13.626977920532227

Token 323: '(sub' (ID: 19764)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.02475138008594513
    2. '(' → logprob: -3.7747514247894287
    3. '(sub' → logprob: -6.52475118637085
    4. 'total' → logprob: -10.899751663208008
    5. '(len' → logprob: -11.274751663208008
    6. '1' → logprob: -12.899751663208008
    7. '(valid' → logprob: -13.774751663208008
    8. ' (' → logprob: -14.024751663208008
    9. ' total' → logprob: -14.399751663208008
    10. ' ' → logprob: -15.274751663208008

Token 324: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.034939173609018326
    2. 'q' → logprob: -3.5349392890930176
    3. 'sequence' → logprob: -6.034939289093018
    4. 'eq' → logprob: -7.034939289093018
    5. 'se' → logprob: -7.284939289093018
    6. '_len' → logprob: -7.659939289093018
    7. 's' → logprob: -8.40993881225586
    8. '1' → logprob: -8.90993881225586
    9. '_seq' → logprob: -9.28493881225586
    10. '_length' → logprob: -10.28493881225586

Token 325: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001878423965536058
    2. '_len' → logprob: -6.626878261566162
    3. '_length' → logprob: -7.876878261566162
    4. '_limit' → logprob: -8.87687873840332
    5. 'sum' → logprob: -10.87687873840332
    6. 'um' → logprob: -11.87687873840332
    7. '_seq' → logprob: -12.75187873840332
    8. 'q' → logprob: -13.25187873840332
    9. '_max' → logprob: -15.00187873840332
    10. 's' → logprob: -15.25187873840332

Token 326: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00021879478299524635
    2. 'limit' → logprob: -9.000218391418457
    3. '+' → logprob: -9.625218391418457
    4. '   ' → logprob: -12.625218391418457
    5. 'imit' → logprob: -12.750218391418457
    6. '_lim' → logprob: -12.875218391418457
    7. 'Limit' → logprob: -13.250218391418457
    8. ',' → logprob: -13.375218391418457
    9. '_LIMIT' → logprob: -13.375218391418457
    10. '```' → logprob: -13.375218391418457

Token 327: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3433011472225189
    2. ' +' → logprob: -1.4683011770248413
    3. ',' → logprob: -3.2183010578155518
    4. ' -' → logprob: -5.093301296234131
    5. '):
' → logprob: -5.218301296234131
    6. '-' → logprob: -5.593301296234131
    7. '):' → logprob: -5.718301296234131
    8. '%' → logprob: -7.593301296234131
    9. '//' → logprob: -7.718301296234131
    10. '   ' → logprob: -8.468300819396973

Token 328: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.018150413408875465
    2. ' total' → logprob: -4.018150329589844
    3. '(total' → logprob: -15.893150329589844
    4. ' ' → logprob: -16.018150329589844
    5. '   ' → logprob: -16.518150329589844
    6. '
' → logprob: -17.143150329589844
    7. '	total' → logprob: -17.268150329589844
    8. '...' → logprob: -18.643150329589844
    9. ',total' → logprob: -18.893150329589844
    10. ',' → logprob: -19.018150329589844

Token 329: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.088346359931165e-07
    2. 'length' → logprob: -14.500000953674316
    3. '+' → logprob: -16.0
    4. '_len' → logprob: -16.375
    5. 'Length' → logprob: -16.5
    6. '_LENGTH' → logprob: -17.5
    7. '-length' → logprob: -18.125
    8. 'ength' → logprob: -18.125
    9. '_lengths' → logprob: -18.375
    10. '```' → logprob: -18.875

Token 330: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2018851488828659
    2. ' +' → logprob: -1.7018851041793823
    3. '):
' → logprob: -8.326885223388672
    4. '-' → logprob: -9.451885223388672
    5. '):' → logprob: -9.701885223388672
    6. ' -' → logprob: -10.076885223388672
    7. '+
' → logprob: -10.951885223388672
    8. ',' → logprob: -11.076885223388672
    9. ' +
' → logprob: -12.826885223388672
    10. '[' → logprob: -12.951885223388672

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010480545461177826
    2. ' ' → logprob: -6.8760480880737305
    3. '0' → logprob: -12.37604808807373
    4. '   ' → logprob: -13.00104808807373
    5. '
' → logprob: -13.31354808807373
    6. '2' → logprob: -13.43854808807373
    7. ',' → logprob: -13.87604808807373
    8. ')' → logprob: -13.87604808807373
    9. '```' → logprob: -13.93854808807373
    10. ' -' → logprob: -15.06354808807373

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -11.250020027160645
    3. '0' → logprob: -12.625020027160645
    4. '2' → logprob: -12.875020027160645
    5. '   ' → logprob: -15.250020027160645
    6. '```' → logprob: -15.437520027160645
    7. 'sub' → logprob: -15.562520027160645
    8. '3' → logprob: -16.250019073486328
    9. '
' → logprob: -16.437519073486328
    10. '7' → logprob: -17.750019073486328

Token 333: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.33901146054267883
    2. ':
' → logprob: -1.5890114307403564
    3. ':' → logprob: -2.9640114307403564
    4. '       ' → logprob: -4.2140116691589355
    5. '   ' → logprob: -4.8390116691589355
    6. '):' → logprob: -4.9640116691589355
    7. '():
' → logprob: -6.4640116691589355
    8. ']:
' → logprob: -8.339011192321777
    9. '+' → logprob: -8.964011192321777
    10. '[' → logprob: -10.339011192321777

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016384923947043717
    2. '   ' → logprob: -9.125164031982422
    3. ' valid' → logprob: -11.000164031982422
    4. '```' → logprob: -11.250164031982422
    5. ',' → logprob: -12.250164031982422
    6. 'valid' → logprob: -12.375164031982422
    7. '	   ' → logprob: -12.500164031982422
    8. '	valid' → logprob: -12.875164031982422
    9. ' for' → logprob: -13.125164031982422
    10. '           ' → logprob: -13.375164031982422

Token 335: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.9986296892166138
    2. ' valid' → logprob: -0.9986296892166138
    3. '       ' → logprob: -1.6236296892166138
    4. '   ' → logprob: -2.873629570007324
    5. '           ' → logprob: -4.873629570007324
    6. '	valid' → logprob: -7.373629570007324
    7. '
' → logprob: -7.623629570007324
    8. ' for' → logprob: -8.248629570007324
    9. 'for' → logprob: -8.623629570007324
    10. '```' → logprob: -8.748629570007324

Token 336: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -1.981667537620524e-06
    2. 'perm' → logprob: -13.500001907348633
    3. '_per' → logprob: -15.250001907348633
    4. '_sum' → logprob: -15.625001907348633
    5. '_perf' → logprob: -16.875001907348633
    6. '_prob' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. '_' → logprob: -18.625001907348633
    9. '_count' → logprob: -18.750001907348633
    10. '_permission' → logprob: -19.500001907348633

Token 337: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.1472419600977446e-06
    2. 'total' → logprob: -13.875000953674316
    3. '_count' → logprob: -16.875001907348633
    4. '_tot' → logprob: -17.125001907348633
    5. 'otal' → logprob: -17.500001907348633
    6. 'Total' → logprob: -17.750001907348633
    7. '=' → logprob: -17.875001907348633
    8. '_TOTAL' → logprob: -18.250001907348633
    9. '_to' → logprob: -18.750001907348633
    10. '_' → logprob: -18.750001907348633

Token 338: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2723104848410003e-05
    2. '[idx' → logprob: -12.250022888183594
    3. '[sub' → logprob: -12.375022888183594
    4. '[-' → logprob: -13.000022888183594
    5. '```' → logprob: -13.500022888183594
    6. ' [' → logprob: -13.500022888183594
    7. '[len' → logprob: -14.000022888183594
    8. '][' → logprob: -14.250022888183594
    9. '   ' → logprob: -14.500022888183594
    10. '       ' → logprob: -14.625022888183594

Token 339: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.0006351164192892611
    2. '[' → logprob: -7.375635147094727
    3. ']' → logprob: -13.000635147094727
    4. 'sub' → logprob: -13.125635147094727
    5. ' seq' → logprob: -13.375635147094727
    6. '(seq' → logprob: -14.125635147094727
    7. '   ' → logprob: -14.250635147094727
    8. 'sq' → logprob: -15.000635147094727
    9. '][' → logprob: -15.125635147094727
    10. '```' → logprob: -15.875635147094727

Token 340: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.416665640543215e-05
    2. 'len' → logprob: -10.37503433227539
    3. 'en' → logprob: -13.75003433227539
    4. 'Len' → logprob: -14.25003433227539
    5. 'ength' → logprob: -15.37503433227539
    6. 'eng' → logprob: -15.50003433227539
    7. '[len' → logprob: -15.87503433227539
    8. 't' → logprob: -16.12503433227539
    9. '_LEN' → logprob: -16.37503433227539
    10. 'n' → logprob: -16.87503433227539

Token 341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009947087615728378
    2. ']+=' → logprob: -4.634947299957275
    3. ' ]' → logprob: -9.134946823120117
    4. '+=' → logprob: -10.884946823120117
    5. '-' → logprob: -11.009946823120117
    6. '[' → logprob: -11.134946823120117
    7. ']=' → logprob: -11.259946823120117
    8. ' +=' → logprob: -12.384946823120117
    9. '   ' → logprob: -12.384946823120117
    10. '+' → logprob: -12.509946823120117

Token 342: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1114027127623558
    2. '=' → logprob: -2.736402750015259
    3. ' +=' → logprob: -3.736402750015259
    4. '%=' → logprob: -4.98640251159668
    5. '-=' → logprob: -4.98640251159668
    6. ' =' → logprob: -6.36140251159668
    7. ' -=' → logprob: -7.61140251159668
    8. '*=' → logprob: -8.11140251159668
    9. '   ' → logprob: -8.23640251159668
    10. '[' → logprob: -8.86140251159668

Token 343: ' ' (ID: 220)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.04306153580546379
    2. ' valid' → logprob: -3.1680614948272705
    3. 'perm' → logprob: -10.168061256408691
    4. ' perm' → logprob: -11.918061256408691
    5. '(valid' → logprob: -11.918061256408691
    6. 'mod' → logprob: -12.543061256408691
    7. '	valid' → logprob: -13.168061256408691
    8. '   ' → logprob: -13.293061256408691
    9. '(' → logprob: -13.793061256408691
    10. '
' → logprob: -14.293061256408691

Token 344: '1' (ID: 16)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0009404043667018414
    2. ' valid' → logprob: -7.125940322875977
    3. 'perm' → logprob: -9.125940322875977
    4. '1' → logprob: -12.000940322875977
    5. 'mod' → logprob: -12.000940322875977
    6. '(valid' → logprob: -12.500940322875977
    7. 'total' → logprob: -13.375940322875977
    8. '(' → logprob: -13.375940322875977
    9. '
' → logprob: -13.375940322875977
    10. '	valid' → logprob: -13.625940322875977

Token 345: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03515142574906349
    2. '       ' → logprob: -4.410151481628418
    3. '
' → logprob: -5.535151481628418
    4. ' for' → logprob: -5.535151481628418
    5. '```' → logprob: -5.535151481628418
    6. '<|end|>' → logprob: -5.660151481628418
    7. 'print' → logprob: -5.910151481628418
    8. 'valid' → logprob: -6.410151481628418
    9. '   ' → logprob: -6.785151481628418
    10. '#' → logprob: -7.410151481628418

Token 346: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10917362570762634
    2. 'print' → logprob: -3.484173536300659
    3. 'valid' → logprob: -3.859173536300659
    4. '<|end|>' → logprob: -3.859173536300659
    5. '#' → logprob: -4.109173774719238
    6. '```' → logprob: -5.109173774719238
    7. ' for' → logprob: -5.609173774719238
    8. 'return' → logprob: -6.234173774719238
    9. 'total' → logprob: -7.484173774719238
    10. ')' → logprob: -7.609173774719238

Token 347: ' split' (ID: 12648)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.13581493496894836
    2. 'seq' → logprob: -3.260814905166626
    3. '_' → logprob: -3.385814905166626
    4. ' length' → logprob: -3.885814905166626
    5. ' _' → logprob: -4.010815143585205
    6. ' curr' → logprob: -5.260815143585205
    7. ' total' → logprob: -5.885815143585205
    8. ' valid' → logprob: -6.260815143585205
    9. ' i' → logprob: -6.385815143585205
    10. ' idx' → logprob: -6.885815143585205

Token 348: '_point' (ID: 15466)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.11797988414764404
    2. '_idx' → logprob: -2.3679800033569336
    3. '_point' → logprob: -4.617980003356934
    4. '_' → logprob: -5.242980003356934
    5. '_pos' → logprob: -6.617980003356934
    6. '_index' → logprob: -7.617980003356934
    7. '_length' → logprob: -8.367980003356934
    8. '_i' → logprob: -8.867980003356934
    9. '_in' → logprob: -9.367980003356934
    10. '_size' → logprob: -9.992980003356934

Token 349: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036031559575349092
    2. 'in' → logprob: -5.628602981567383
    3. ' ' → logprob: -13.378602981567383
    4. 'range' → logprob: -14.128602981567383
    5. '	in' → logprob: -15.503602981567383
    6. '_in' → logprob: -15.753602981567383
    7. '_' → logprob: -16.003602981567383
    8. '```' → logprob: -16.253602981567383
    9. ',' → logprob: -16.378602981567383
    10. 'In' → logprob: -16.628602981567383

Token 350: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804252669215202
    2. 'range' → logprob: -3.2880425453186035
    3. '(range' → logprob: -14.038042068481445
    4. '	range' → logprob: -15.788042068481445
    5. ' ' → logprob: -16.788042068481445
    6. '_range' → logprob: -18.538042068481445
    7. '  ' → logprob: -18.663042068481445
    8. 'Range' → logprob: -18.788042068481445
    9. '   ' → logprob: -19.038042068481445
    10. 'in' → logprob: -19.288042068481445

Token 351: '(' (ID: 7)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.4746204912662506
    2. '(' → logprob: -0.9746204614639282
    3. '1' → logprob: -8.099620819091797
    4. 'total' → logprob: -8.349620819091797
    5. ' total' → logprob: -13.974620819091797
    6. ' ' → logprob: -14.349620819091797
    7. '(len' → logprob: -14.474620819091797
    8. '(sub' → logprob: -14.974620819091797
    9. ',total' → logprob: -15.099620819091797
    10. ' (' → logprob: -15.849620819091797

Token 352: '1' (ID: 16)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0017728772945702076
    2. '1' → logprob: -6.876772880554199
    3. ' total' → logprob: -7.251772880554199
    4. '0' → logprob: -10.5017728805542
    5. ' ' → logprob: -13.0017728805542
    6. '(total' → logprob: -14.6267728805542
    7. '   ' → logprob: -15.2517728805542
    8. 'tot' → logprob: -16.251771926879883
    9. '	total' → logprob: -16.251771926879883
    10. '2' → logprob: -16.376771926879883

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005571202374994755
    2. ' ,' → logprob: -5.255571365356445
    3. ',total' → logprob: -8.005571365356445
    4. 'total' → logprob: -12.880571365356445
    5. ' ' → logprob: -14.880571365356445
    6. ',
' → logprob: -15.130571365356445
    7. '(total' → logprob: -15.255571365356445
    8. '   ' → logprob: -16.005571365356445
    9. ' total' → logprob: -16.130571365356445
    10. ',len' → logprob: -16.755571365356445

Token 354: ' subse' (ID: 19874)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.004078639671206474
    2. ' total' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.379077911376953
    4. 'len' → logprob: -18.004077911376953
    5. ' ' → logprob: -18.504077911376953
    6. '	total' → logprob: -18.754077911376953
    7. '(total' → logprob: -19.254077911376953
    8. ',total' → logprob: -21.004077911376953
    9. '  ' → logprob: -21.254077911376953
    10. 'length' → logprob: -21.629077911376953

Token 355: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.126521035796031e-05
    2. 'quence' → logprob: -10.125091552734375
    3. 'eq' → logprob: -10.500091552734375
    4. 'seq' → logprob: -10.875091552734375
    5. 'c' → logprob: -13.000091552734375
    6. '_q' → logprob: -14.625091552734375
    7. '_seq' → logprob: -14.875091552734375
    8. 'qu' → logprob: -16.000091552734375
    9. 'ce' → logprob: -16.000091552734375
    10. '_total' → logprob: -16.000091552734375

Token 356: '_sum' (ID: 29859)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.024759871885180473
    2. '_sum' → logprob: -4.149759769439697
    3. '_total' → logprob: -5.774759769439697
    4. '_point' → logprob: -6.274759769439697
    5. '_limit' → logprob: -6.399759769439697
    6. '_len' → logprob: -6.649759769439697
    7. '_' → logprob: -8.649760246276855
    8. '_count' → logprob: -8.774760246276855
    9. '+' → logprob: -9.149760246276855
    10. '_size' → logprob: -9.399760246276855

Token 357: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -3.702754474943504e-05
    2. 'limit' → logprob: -10.87503719329834
    3. '+' → logprob: -12.12503719329834
    4. '_length' → logprob: -12.37503719329834
    5. '_LIMIT' → logprob: -13.37503719329834
    6. ')' → logprob: -13.50003719329834
    7. 'Limit' → logprob: -13.62503719329834
    8. '_' → logprob: -14.25003719329834
    9. '```' → logprob: -14.25003719329834
    10. '   ' → logprob: -14.75003719329834

Token 358: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07543954253196716
    2. '+' → logprob: -2.825439453125
    3. '):
' → logprob: -4.575439453125
    4. ' +' → logprob: -5.825439453125
    5. '[' → logprob: -10.075439453125
    6. ' ):' → logprob: -10.450439453125
    7. '-' → logprob: -10.825439453125
    8. '   ' → logprob: -11.075439453125
    9. ':' → logprob: -12.325439453125
    10. '```' → logprob: -12.575439453125

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001625429606065154
    2. ' valid' → logprob: -6.6266255378723145
    3. '<|end|>' → logprob: -9.501625061035156
    4. 'valid' → logprob: -9.876625061035156
    5. '       ' → logprob: -10.001625061035156
    6. '    
' → logprob: -10.626625061035156
    7. '	valid' → logprob: -10.751625061035156
    8. '    ' → logprob: -11.126625061035156
    9. '```' → logprob: -11.251625061035156
    10. '(valid' → logprob: -11.376625061035156

Token 360: ' auxiliary' (ID: 97016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7928345799446106
    2. '   ' → logprob: -1.4178345203399658
    3. 'for' → logprob: -2.042834520339966
    4. ' valid' → logprob: -2.042834520339966
    5. 'valid' → logprob: -3.167834520339966
    6. ' total' → logprob: -6.417834758758545
    7. 'total' → logprob: -7.417834758758545
    8. ' if' → logprob: -7.792834758758545
    9. 'if' → logprob: -8.417834281921387
    10. '       ' → logprob: -8.792834281921387

Token 361: '_val' (ID: 13694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0113179683685303
    2. '_count' → logprob: -1.3863179683685303
    3. '_sum' → logprob: -2.1363179683685303
    4. '_value' → logprob: -2.7613179683685303
    5. '_dp' → logprob: -2.8863179683685303
    6. '_total' → logprob: -3.5113179683685303
    7. '_array' → logprob: -3.6363179683685303
    8. '=' → logprob: -4.011318206787109
    9. '_counts' → logprob: -4.011318206787109
    10. '_valid' → logprob: -4.011318206787109

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20608553290367126
    2. '=' → logprob: -1.7060855627059937
    3. '[' → logprob: -5.706085681915283
    4. ' ' → logprob: -7.706085681915283
    5. 's' → logprob: -8.331085205078125
    6. ' +=' → logprob: -8.706085205078125
    7. '   ' → logprob: -8.956085205078125
    8. '_' → logprob: -9.456085205078125
    9. 'for' → logprob: -10.206085205078125
    10. ',' → logprob: -10.331085205078125

Token 363: ' subse' (ID: 19874)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.34625473618507385
    2. ' valid' → logprob: -1.3462547063827515
    3. '(valid' → logprob: -4.721254825592041
    4. '(' → logprob: -5.471254825592041
    5. '(sub' → logprob: -5.596254825592041
    6. 'sub' → logprob: -5.721254825592041
    7. '0' → logprob: -5.846254825592041
    8. ' (' → logprob: -6.346254825592041
    9. 'split' → logprob: -6.471254825592041
    10. '1' → logprob: -6.971254825592041

Token 364: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.68022444692906e-05
    2. 'quence' → logprob: -10.875046730041504
    3. 'c' → logprob: -11.250046730041504
    4. 'qu' → logprob: -12.625046730041504
    5. '       ' → logprob: -12.750046730041504
    6. 'qs' → logprob: -13.375046730041504
    7. '_valid' → logprob: -13.750046730041504
    8. 'seq' → logprob: -14.000046730041504
    9. 'valid' → logprob: -14.000046730041504
    10. 'quences' → logprob: -14.500046730041504

Token 365: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0010331686353310943
    2. 'q' → logprob: -7.001033306121826
    3. 'sum' → logprob: -9.376032829284668
    4. '_split' → logprob: -11.251032829284668
    5. 'n' → logprob: -12.126032829284668
    6. '_seq' → logprob: -12.251032829284668
    7. 'm' → logprob: -12.876032829284668
    8. '_sub' → logprob: -13.251032829284668
    9. 's' → logprob: -13.251032829284668
    10. 'e' → logprob: -13.876032829284668

Token 366: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00011605957115534693
    2. 'limit' → logprob: -9.625116348266602
    3. '_value' → logprob: -11.125116348266602
    4. 'Limit' → logprob: -11.625116348266602
    5. '_split' → logprob: -11.750116348266602
    6. '_point' → logprob: -12.000116348266602
    7. '_sum' → logprob: -12.375116348266602
    8. '_' → logprob: -13.125116348266602
    9. '_val' → logprob: -13.625116348266602
    10. '[' → logprob: -14.125116348266602

Token 367: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22551564872264862
    2. '-' → logprob: -1.600515604019165
    3. '-s' → logprob: -9.725515365600586
    4. '+' → logprob: -10.725515365600586
    5. ' +' → logprob: -12.475515365600586
    6. '   ' → logprob: -12.725515365600586
    7. ' ' → logprob: -12.975515365600586
    8. '<|end|>' → logprob: -13.350515365600586
    9. ' ' → logprob: -14.100515365600586
    10. '#' → logprob: -14.225515365600586

Token 368: ' ' (ID: 220)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0033326568081974983
    2. '1' → logprob: -6.253332614898682
    3. ' split' → logprob: -6.628332614898682
    4. '   ' → logprob: -10.12833309173584
    5. '2' → logprob: -11.37833309173584
    6. '(split' → logprob: -11.87833309173584
    7. ' ' → logprob: -12.25333309173584
    8. '  ' → logprob: -12.37833309173584
    9. '
' → logprob: -13.81583309173584
    10. 'spl' → logprob: -13.81583309173584

Token 369: '1' (ID: 16)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003821933176368475
    2. '1' → logprob: -5.753821849822998
    3. ' split' → logprob: -7.503821849822998
    4. '   ' → logprob: -10.128822326660156
    5. '2' → logprob: -10.878822326660156
    6. '(split' → logprob: -12.003822326660156
    7. ' ' → logprob: -12.128822326660156
    8. '  ' → logprob: -12.628822326660156
    9. '           ' → logprob: -13.316322326660156
    10. '       ' → logprob: -13.378822326660156

Token 370: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0262322425842285
    2. '<|end|>' → logprob: -1.0262322425842285
    3. 'for' → logprob: -1.9012322425842285
    4. '   ' → logprob: -3.1512322425842285
    5. ' for' → logprob: -3.2762322425842285
    6. '-' → logprob: -4.6512322425842285
    7. '+' → logprob: -4.9012322425842285
    8. ' -' → logprob: -5.0262322425842285
    9. ')' → logprob: -5.0262322425842285
    10. '    
' → logprob: -5.4012322425842285

Token 371: ' ' (ID: 220)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.984787902794778e-05
    2. ' split' → logprob: -9.375100135803223
    3. '2' → logprob: -12.375100135803223
    4. '   ' → logprob: -12.625100135803223
    5. 'plit' → logprob: -13.125100135803223
    6. 'valid' → logprob: -13.500100135803223
    7. '(split' → logprob: -14.250100135803223
    8. ' ' → logprob: -14.375100135803223
    9. '  ' → logprob: -14.500100135803223
    10. '1' → logprob: -14.875100135803223

Token 372: '2' (ID: 17)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.538490950129926e-05
    2. ' split' → logprob: -10.000055313110352
    3. 'valid' → logprob: -13.000055313110352
    4. 'plit' → logprob: -13.125055313110352
    5. '   ' → logprob: -13.375055313110352
    6. '2' → logprob: -13.750055313110352
    7. '(split' → logprob: -14.250055313110352
    8. ' ' → logprob: -14.875055313110352
    9. '1' → logprob: -15.000055313110352
    10. '  ' → logprob: -15.250055313110352

Token 373: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06197720766067505
    2. ' *' → logprob: -2.8119771480560303
    3. ' ' → logprob: -13.18697738647461
    4. '[' → logprob: -13.56197738647461
    5. 'split' → logprob: -13.56197738647461
    6. ')' → logprob: -13.81197738647461
    7. '*(' → logprob: -14.06197738647461
    8. '+' → logprob: -14.31197738647461
    9. '**' → logprob: -14.68697738647461
    10. '   ' → logprob: -15.06197738647461

Token 374: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005904443096369505
    2. ' split' → logprob: -7.5005903244018555
    3. '(split' → logprob: -10.250590324401855
    4. '   ' → logprob: -13.875590324401855
    5. '(' → logprob: -14.125590324401855
    6. ' ' → logprob: -16.250591278076172
    7. 'spl' → logprob: -16.250591278076172
    8. ' (' → logprob: -16.250591278076172
    9. '  ' → logprob: -16.500591278076172
    10. '
' → logprob: -17.125591278076172

Token 375: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.500004768371582
    3. 'point' → logprob: -14.875004768371582
    4. '_points' → logprob: -15.875004768371582
    5. ' _' → logprob: -16.375003814697266
    6. '_p' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.375003814697266
    8. '_POINT' → logprob: -17.500003814697266
    9. '_Point' → logprob: -17.625003814697266
    10. '_po' → logprob: -18.250003814697266

Token 376: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15184058248996735
    2. '<|end|>' → logprob: -2.1518406867980957
    3. ')' → logprob: -4.651840686798096
    4. '
' → logprob: -5.026840686798096
    5. '+' → logprob: -6.651840686798096
    6. 'valid' → logprob: -6.901840686798096
    7. ' ' → logprob: -7.401840686798096
    8. ' for' → logprob: -7.401840686798096
    9. ' valid' → logprob: -7.401840686798096
    10. ' if' → logprob: -7.526840686798096

Token 378: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2230120450258255
    2. 'if' (adapté à ' if') → logprob: -1.723012089729309
    3. 'valid' → logprob: -4.4730119705200195
    4. ' for' → logprob: -4.9730119705200195
    5. ' if' → logprob: -6.5980119705200195
    6. 'aux' → logprob: -6.7230119705200195
    7. '   ' → logprob: -8.47301197052002
    8. ' valid' → logprob: -9.09801197052002
    9. 'continue' → logprob: -9.97301197052002
    10. 'total' → logprob: -11.22301197052002

Token 379: ' auxiliary' (ID: 97016)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.3494691252708435
    2. ' auxiliary' → logprob: -1.2244691848754883
    3. '0' → logprob: -7.349469184875488
    4. ' aux' → logprob: -8.724469184875488
    5. 'sub' → logprob: -10.099469184875488
    6. '(aux' → logprob: -10.099469184875488
    7. '   ' → logprob: -10.724469184875488
    8. ' ' → logprob: -11.099469184875488
    9. ' auxili' → logprob: -11.099469184875488
    10. ' auxiliar' → logprob: -11.224469184875488

Token 380: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.500006675720215
    3. 'val' → logprob: -13.250006675720215
    4. '
' → logprob: -15.500006675720215
    5. ' _' → logprob: -16.3750057220459
    6. '_value' → logprob: -16.3750057220459
    7. '>' → logprob: -16.8750057220459
    8. '_va' → logprob: -17.3750057220459
    9. 'Val' → logprob: -17.6250057220459
    10. '_var' → logprob: -17.6250057220459

Token 381: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4746887683868408
    2. '<' → logprob: -1.8496887683868408
    3. ' >' → logprob: -2.349688768386841
    4. ' >=' → logprob: -2.849688768386841
    5. '>' → logprob: -3.099688768386841
    6. '>=' → logprob: -4.099688529968262
    7. ' <=' → logprob: -5.724688529968262
    8. '<=' → logprob: -6.974688529968262
    9. ' ==' → logprob: -6.974688529968262
    10. '==' → logprob: -8.099688529968262

Token 382: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009563630446791649
    2. ' ' → logprob: -7.0009565353393555
    3. '-' → logprob: -11.375956535339355
    4. '   ' → logprob: -11.375956535339355
    5. '=' → logprob: -11.500956535339355
    6. ' -' → logprob: -13.125956535339355
    7. '1' → logprob: -13.250956535339355
    8. '
' → logprob: -13.500956535339355
    9. '       ' → logprob: -13.875956535339355
    10. '           ' → logprob: -14.250956535339355

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023679454170633107
    2. ' ' → logprob: -8.500236511230469
    3. '=' → logprob: -11.375236511230469
    4. '-' → logprob: -11.500236511230469
    5. '1' → logprob: -12.250236511230469
    6. '   ' → logprob: -13.375236511230469
    7. '
' → logprob: -14.562736511230469
    8. '2' → logprob: -14.625236511230469
    9. ' -' → logprob: -14.625236511230469
    10. 'total' → logprob: -14.875236511230469

Token 384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06109918653964996
    2. '       ' → logprob: -3.3110992908477783
    3. ':
' → logprob: -3.8110992908477783
    4. '   ' → logprob: -7.436099052429199
    5. ',' → logprob: -10.3110990524292
    6. '           ' → logprob: -10.9360990524292
    7. ' or' → logprob: -11.9360990524292
    8. '):
' → logprob: -12.5610990524292
    9. ' :' → logprob: -12.5610990524292
    10. ':return' → logprob: -12.8110990524292

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004658233083318919
    2. ':' → logprob: -8.000465393066406
    3. ':
' → logprob: -9.250465393066406
    4. '           ' → logprob: -11.750465393066406
    5. '   ' → logprob: -11.875465393066406
    6. '	' → logprob: -12.250465393066406
    7. ',' → logprob: -12.625465393066406
    8. '     ' → logprob: -13.375465393066406
    9. '	break' → logprob: -13.500465393066406
    10. ' break' → logprob: -13.625465393066406

Token 386: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.464911550283432
    2. '       ' → logprob: -1.2149115800857544
    3. ' break' → logprob: -2.964911460876465
    4. '           ' → logprob: -3.839911460876465
    5. '   ' → logprob: -6.964911460876465
    6. '	break' → logprob: -6.964911460876465
    7. '
' → logprob: -10.089911460876465
    8. '```' → logprob: -10.339911460876465
    9. '               ' → logprob: -10.964911460876465
    10. '_break' → logprob: -11.589911460876465

Token 387: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015812745550647378
    2. '<|end|>' → logprob: -9.875158309936523
    3. '```' → logprob: -10.500158309936523
    4. '       ' → logprob: -10.500158309936523
    5. 'for' → logprob: -10.875158309936523
    6. ' for' → logprob: -11.250158309936523
    7. '
' → logprob: -11.625158309936523
    8. '    
' → logprob: -12.125158309936523
    9. ',' → logprob: -13.625158309936523
    10. ')' → logprob: -13.875158309936523

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006076449062675238
    2. ' for' → logprob: -5.506076335906982
    3. 'for' → logprob: -6.381076335906982
    4. 'valid' → logprob: -9.25607681274414
    5. ' valid' → logprob: -9.50607681274414
    6. '       ' → logprob: -9.88107681274414
    7. '```' → logprob: -10.75607681274414
    8. '<|end|>' → logprob: -10.75607681274414
    9. 'aux' → logprob: -11.25607681274414
    10. '
' → logprob: -11.50607681274414

Token 389: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8684748411178589
    2. 'for' (adapté à ' for') → logprob: -1.1184748411178589
    3. ' valid' → logprob: -2.3684749603271484
    4. '   ' → logprob: -2.3684749603271484
    5. 'valid' → logprob: -2.7434749603271484
    6. 'aux' → logprob: -7.493474960327148
    7. ' if' → logprob: -8.243474960327148
    8. 'if' → logprob: -8.243474960327148
    9. '       ' → logprob: -8.618474960327148
    10. '
' → logprob: -8.993474960327148

Token 390: ' start' (ID: 1604)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -1.9728130102157593
    2. 'right' → logprob: -2.222813129425049
    3. ' curr' → logprob: -2.222813129425049
    4. ' right' → logprob: -2.597813129425049
    5. 'seq' → logprob: -2.722813129425049
    6. 'split' → logprob: -3.097813129425049
    7. ' part' → logprob: -3.222813129425049
    8. 'left' → logprob: -3.347813129425049
    9. ' seq' → logprob: -3.347813129425049
    10. 'second' → logprob: -3.472813129425049

Token 391: '_seq' (ID: 34260)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.3562111258506775
    2. ' in' → logprob: -1.3562111854553223
    3. '_idx' → logprob: -3.4812111854553223
    4. '_point' → logprob: -5.731211185455322
    5. '_in' → logprob: -5.856211185455322
    6. '_' → logprob: -6.356211185455322
    7. 'in' → logprob: -7.106211185455322
    8. '_pos' → logprob: -7.231211185455322
    9. '_seq' → logprob: -7.606211185455322
    10. '_range' → logprob: -7.981211185455322

Token 392: ' in' (ID: 306)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.011177618987858295
    2. ' in' → logprob: -4.6361775398254395
    3. 'in' → logprob: -7.2611775398254395
    4. '_length' → logprob: -7.8861775398254395
    5. 'len' → logprob: -9.136178016662598
    6. '_' → logprob: -9.261178016662598
    7. '_idx' → logprob: -9.886178016662598
    8. '_in' → logprob: -10.886178016662598
    9. 'Len' → logprob: -11.011178016662598
    10. '_start' → logprob: -11.261178016662598

Token 393: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02630726806819439
    2. ' range' → logprob: -3.6513073444366455
    3. '(range' → logprob: -12.776307106018066
    4. '   ' → logprob: -13.526307106018066
    5. 'split' → logprob: -13.651307106018066
    6. ' ' → logprob: -14.526307106018066
    7. '	range' → logprob: -15.276307106018066
    8. '[' → logprob: -15.776307106018066
    9. 'sub' → logprob: -16.151308059692383
    10. '
' → logprob: -16.526308059692383

Token 394: '((' (ID: 2054)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.7145780920982361
    2. '(sub' → logprob: -1.3395781517028809
    3. '(split' → logprob: -1.4645781517028809
    4. '(' → logprob: -4.339578151702881
    5. '(aux' → logprob: -5.839578151702881
    6. 'total' → logprob: -7.339578151702881
    7. 'split' → logprob: -7.714578151702881
    8. '(valid' → logprob: -9.214577674865723
    9. '(seq' → logprob: -9.339577674865723
    10. 'sub' → logprob: -9.839577674865723

Token 395: 'aux' (ID: 5454)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.573454737663269
    2. 'split' → logprob: -1.323454737663269
    3. 'sub' → logprob: -1.948454737663269
    4. 'aux' → logprob: -4.448454856872559
    5. '0' → logprob: -5.323454856872559
    6. '1' → logprob: -5.573454856872559
    7. ' total' → logprob: -5.573454856872559
    8. '   ' → logprob: -6.823454856872559
    9. ' split' → logprob: -6.948454856872559
    10. 'valid' → logprob: -7.573454856872559

Token 396: 'iliary' (ID: 58854)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5306944251060486
    2. '_len' → logprob: -1.5306944847106934
    3. 'sub' → logprob: -2.0306944847106934
    4. 'seq' → logprob: -3.9056944847106934
    5. 'total' → logprob: -4.280694484710693
    6. '_sub' → logprob: -4.780694484710693
    7. '_split' → logprob: -6.155694484710693
    8. '_size' → logprob: -6.155694484710693
    9. '_seq' → logprob: -6.155694484710693
    10. '_total' → logprob: -6.280694484710693

Token 397: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.03441261127591133
    2. '_len' → logprob: -3.4094126224517822
    3. '_length' → logprob: -8.909412384033203
    4. '_point' → logprob: -9.034412384033203
    5. '_sum' → logprob: -9.159412384033203
    6. '+' → logprob: -9.409412384033203
    7. 'val' → logprob: -9.784412384033203
    8. ')' → logprob: -10.159412384033203
    9. '1' → logprob: -10.409412384033203
    10. '_seq' → logprob: -10.409412384033203

Token 398: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4556480646133423
    2. '+' → logprob: -1.0806480646133423
    3. ' //' → logprob: -4.205647945404053
    4. '//' → logprob: -4.830647945404053
    5. ',' → logprob: -6.080647945404053
    6. '   ' → logprob: -7.205647945404053
    7. ')' → logprob: -8.455648422241211
    8. ' ' → logprob: -8.955648422241211
    9. ' ,' → logprob: -9.830648422241211
    10. ')+' → logprob: -9.830648422241211

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07666782289743423
    2. '2' → logprob: -2.7016677856445312
    3. ' ' → logprob: -5.701667785644531
    4. '3' → logprob: -6.076667785644531
    5. 'split' → logprob: -7.076667785644531
    6. ' split' → logprob: -10.139167785644531
    7. '0' → logprob: -10.389167785644531
    8. '4' → logprob: -10.451667785644531
    9. 'start' → logprob: -10.514167785644531
    10. 'total' → logprob: -11.389167785644531

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022421224042773247
    2. '2' → logprob: -3.89742112159729
    3. '3' → logprob: -7.522421360015869
    4. 'split' → logprob: -7.522421360015869
    5. ' ' → logprob: -7.772421360015869
    6. 'total' → logprob: -9.147420883178711
    7. 'start' → logprob: -9.147420883178711
    8. 'sub' → logprob: -9.397420883178711
    9. '4' → logprob: -11.584920883178711
    10. 'seq' → logprob: -11.709920883178711

Token 401: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5858137607574463
    2. '):
' → logprob: -0.8358137607574463
    3. ')' → logprob: -5.460813522338867
    4. ' //' → logprob: -6.460813522338867
    5. '//' → logprob: -6.460813522338867
    6. ')):
' → logprob: -7.210813522338867
    7. ' ):' → logprob: -7.335813522338867
    8. ')):' → logprob: -7.585813522338867
    9. ' ):
' → logprob: -8.335813522338867
    10. '   ' → logprob: -9.085813522338867

Token 402: ' //' (ID: 602)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4340386688709259
    2. '):
' → logprob: -1.0590386390686035
    3. '//' → logprob: -5.8090386390686035
    4. ' //' → logprob: -6.9340386390686035
    5. '+' → logprob: -7.5590386390686035
    6. '   ' → logprob: -7.8090386390686035
    7. ' +' → logprob: -8.434039115905762
    8. ' ):' → logprob: -9.434039115905762
    9. ',' → logprob: -10.309039115905762
    10. ' ):
' → logprob: -10.559039115905762

Token 403: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017107593594118953
    2. '3' → logprob: -7.126710891723633
    3. ' ' → logprob: -7.126710891723633
    4. '1' → logprob: -9.626710891723633
    5. '   ' → logprob: -11.251710891723633
    6. '4' → logprob: -11.376710891723633
    7. '  ' → logprob: -13.376710891723633
    8. '    ' → logprob: -13.564210891723633
    9. '
' → logprob: -13.876710891723633
    10. '=' → logprob: -13.939210891723633

Token 404: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009032421512529254
    2. '3' → logprob: -7.625903129577637
    3. '1' → logprob: -8.500903129577637
    4. ' ' → logprob: -9.000903129577637
    5. '4' → logprob: -10.000903129577637
    6. '   ' → logprob: -11.500903129577637
    7. 'total' → logprob: -12.125903129577637
    8. 'sub' → logprob: -12.375903129577637
    9. '5' → logprob: -13.000903129577637
    10. '6' → logprob: -13.188403129577637

Token 405: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0803548097610474
    2. '):
' → logprob: -1.2053548097610474
    3. '):' → logprob: -1.4553548097610474
    4. ',' → logprob: -2.205354690551758
    5. '+' → logprob: -4.205354690551758
    6. ' ,' → logprob: -6.455354690551758
    7. '   ' → logprob: -7.955354690551758
    8. ' ):' → logprob: -8.455354690551758
    9. ' ):
' → logprob: -8.580354690551758
    10. ',total' → logprob: -9.955354690551758

Token 406: ' auxiliary' (ID: 97016)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.17603138089179993
    2. ' total' → logprob: -2.1760313510894775
    3. 'split' → logprob: -3.9260313510894775
    4. 'sub' → logprob: -4.301031589508057
    5. 'seq' → logprob: -4.801031589508057
    6. ' split' → logprob: -6.301031589508057
    7. ' seq' → logprob: -6.801031589508057
    8. ' subse' → logprob: -6.926031589508057
    9. 'start' → logprob: -7.176031589508057
    10. '   ' → logprob: -7.301031589508057

Token 407: '_val' (ID: 13694)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.6543805003166199
    2. '(total' → logprob: -2.0293805599212646
    3. 'split' → logprob: -2.5293805599212646
    4. 'total' → logprob: -2.7793805599212646
    5. '(seq' → logprob: -2.7793805599212646
    6. '_len' → logprob: -2.9043805599212646
    7. 'start' → logprob: -3.5293805599212646
    8. '(split' → logprob: -4.2793803215026855
    9. '_val' → logprob: -4.6543803215026855
    10. '(start' → logprob: -4.7793803215026855

Token 408: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6422094106674194
    2. '+' → logprob: -0.7672094106674194
    3. '//' → logprob: -5.267209529876709
    4. ' //' → logprob: -5.642209529876709
    5. '   ' → logprob: -7.767209529876709
    6. ' ' → logprob: -9.14220905303955
    7. '):
' → logprob: -9.14220905303955
    8. ' -' → logprob: -10.01720905303955
    9. '):' → logprob: -10.51720905303955
    10. ',' → logprob: -10.64220905303955

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -10.250040054321289
    3. '2' → logprob: -12.625040054321289
    4. '3' → logprob: -15.437540054321289
    5. '   ' → logprob: -15.812540054321289
    6. '0' → logprob: -16.06254005432129
    7. '
' → logprob: -16.68754005432129
    8. ')' → logprob: -17.31254005432129
    9. '...' → logprob: -17.31254005432129
    10. '```' → logprob: -17.43754005432129

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.875011444091797
    3. '2' → logprob: -12.625011444091797
    4. '0' → logprob: -14.875011444091797
    5. '   ' → logprob: -15.125011444091797
    6. '3' → logprob: -15.562511444091797
    7. '
' → logprob: -15.625011444091797
    8. ')' → logprob: -17.000011444091797
    9. '```' → logprob: -17.187511444091797
    10. '  ' → logprob: -17.437511444091797

Token 411: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.352361261844635
    2. '):' → logprob: -1.2273612022399902
    3. ':' → logprob: -6.35236120223999
    4. '+' → logprob: -6.85236120223999
    5. '   ' → logprob: -7.72736120223999
    6. '       ' → logprob: -7.72736120223999
    7. ':
' → logprob: -8.727361679077148
    8. '):
' → logprob: -10.602361679077148
    9. ',' → logprob: -11.602361679077148
    10. ')' → logprob: -11.727361679077148

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3319124011322856e-05
    2. '           ' → logprob: -12.375022888183594
    3. '```' → logprob: -12.625022888183594
    4. '   ' → logprob: -12.750022888183594
    5. 'valid' → logprob: -12.750022888183594
    6. ' valid' → logprob: -13.000022888183594
    7. ' for' → logprob: -13.250022888183594
    8. '	   ' → logprob: -13.250022888183594
    9. '	' → logprob: -13.250022888183594
    10. '	valid' → logprob: -14.625022888183594

Token 413: ' target' (ID: 3783)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.26316478848457336
    2. ' valid' → logprob: -2.013164758682251
    3. '           ' → logprob: -2.388164758682251
    4. '   ' → logprob: -6.01316499710083
    5. '       ' → logprob: -7.01316499710083
    6. 'if' → logprob: -7.26316499710083
    7. 'for' → logprob: -7.38816499710083
    8. 'aux' → logprob: -7.51316499710083
    9. ' for' → logprob: -8.138164520263672
    10. ' if' → logprob: -8.763164520263672

Token 414: '_len' (ID: 13683)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.2950694262981415
    2. '_sum' → logprob: -1.6700694561004639
    3. '_seq' → logprob: -3.545069456100464
    4. '_count' → logprob: -4.420069217681885
    5. '_idx' → logprob: -4.920069217681885
    6. '_len' → logprob: -5.295069217681885
    7. '_value' → logprob: -5.795069217681885
    8. '_' → logprob: -5.795069217681885
    9. '_index' → logprob: -6.295069217681885
    10. '_start' → logprob: -6.920069217681885

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16313223540782928
    2. '=' → logprob: -1.9131321907043457
    3. ' +=' → logprob: -6.788132190704346
    4. ']' → logprob: -7.663132190704346
    5. ' +' → logprob: -8.538132667541504
    6. '+=' → logprob: -8.538132667541504
    7. '[' → logprob: -8.663132667541504
    8. ' in' → logprob: -8.913132667541504
    9. '+' → logprob: -8.913132667541504
    10. ',' → logprob: -9.163132667541504

Token 416: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8473191261291504
    2. 'split' → logprob: -1.2223191261291504
    3. 'sub' → logprob: -1.8473191261291504
    4. 'aux' → logprob: -3.3473191261291504
    5. 'total' → logprob: -3.4723191261291504
    6. ' start' → logprob: -3.7223191261291504
    7. 'valid' → logprob: -4.34731912612915
    8. ' split' → logprob: -4.84731912612915
    9. ' total' → logprob: -6.47231912612915
    10. ' subse' → logprob: -6.72231912612915

Token 417: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -2.7610454708337784e-05
    2. '_len' → logprob: -11.750027656555176
    3. 'seq' → logprob: -12.250027656555176
    4. '_split' → logprob: -12.375027656555176
    5. '_' → logprob: -12.750027656555176
    6. '_se' → logprob: -13.500027656555176
    7. '_start' → logprob: -13.625027656555176
    8. '+' → logprob: -13.875027656555176
    9. '_sequence' → logprob: -14.125027656555176
    10. 's' → logprob: -14.250027656555176

Token 418: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9715556502342224
    2. '<|end|>' → logprob: -1.4715557098388672
    3. '+' → logprob: -1.7215557098388672
    4. '-' → logprob: -2.721555709838867
    5. ' +' → logprob: -2.846555709838867
    6. ' -' → logprob: -3.471555709838867
    7. ' +=' → logprob: -3.971555709838867
    8. '[' → logprob: -4.471555709838867
    9. '       ' → logprob: -4.846555709838867
    10. '+=' → logprob: -5.346555709838867

Token 419: ' ' (ID: 220)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1506466120481491
    2. 'sub' → logprob: -2.525646686553955
    3. 'seq' → logprob: -4.275646686553955
    4. '(sub' → logprob: -4.275646686553955
    5. '1' → logprob: -4.900646686553955
    6. '(split' → logprob: -5.025646686553955
    7. 'total' → logprob: -5.400646686553955
    8. ' split' → logprob: -5.525646686553955
    9. ' subse' → logprob: -6.275646686553955
    10. 'aux' → logprob: -6.400646686553955

Token 420: '2' (ID: 17)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10413622856140137
    2. 'sub' → logprob: -2.6041362285614014
    3. '1' → logprob: -4.8541364669799805
    4. 'total' → logprob: -5.2291364669799805
    5. '(sub' → logprob: -5.6041364669799805
    6. 'seq' → logprob: -5.9791364669799805
    7. '(split' → logprob: -6.1041364669799805
    8. 'valid' → logprob: -7.2291364669799805
    9. ' split' → logprob: -7.2291364669799805
    10. 'start' → logprob: -7.7291364669799805

Token 421: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.021464435383677483
    2. '(split' → logprob: -3.8964643478393555
    3. 'sub' → logprob: -8.146464347839355
    4. '(sub' → logprob: -8.146464347839355
    5. ' split' → logprob: -8.646464347839355
    6. '(' → logprob: -9.896464347839355
    7. 'start' → logprob: -10.021464347839355
    8. '(s' → logprob: -10.271464347839355
    9. ' (' → logprob: -11.771464347839355
    10. 'total' → logprob: -12.521464347839355

Token 423: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -3.9292415749514475e-05
    2. '_seq' → logprob: -10.500039100646973
    3. 'point' → logprob: -11.750039100646973
    4. '_' → logprob: -13.125039100646973
    5. '_sequence' → logprob: -14.625039100646973
    6. 'seq' → logprob: -15.125039100646973
    7. '_points' → logprob: -15.500039100646973
    8. '_len' → logprob: -15.625039100646973
    9. '_val' → logprob: -16.00004005432129
    10. 'start' → logprob: -16.00004005432129

Token 424: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00414891866967082
    2. '<|end|>' → logprob: -5.629148960113525
    3. ',' → logprob: -9.379148483276367
    4. ' +=' → logprob: -9.629148483276367
    5. ' for' → logprob: -9.629148483276367
    6. '[' → logprob: -9.629148483276367
    7. '
' → logprob: -10.004148483276367
    8. ' valid' → logprob: -10.129148483276367
    9. 'for' → logprob: -10.629148483276367
    10. '+=' → logprob: -10.629148483276367

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07016394287347794
    2. '           ' → logprob: -3.3201639652252197
    3. '<|end|>' → logprob: -4.570163726806641
    4. '[' → logprob: -5.445163726806641
    5. '=' → logprob: -5.945163726806641
    6. 'valid' → logprob: -5.945163726806641
    7. '+' → logprob: -5.945163726806641
    8. ' for' → logprob: -6.195163726806641
    9. '```' → logprob: -6.320163726806641
    10. ' valid' → logprob: -6.445163726806641

Token 426: ' if' (ID: 538)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.39604952931404114
    2. 'if' (adapté à ' if') → logprob: -1.2710494995117188
    3. '       ' → logprob: -3.1460494995117188
    4. '           ' → logprob: -6.396049499511719
    5. 'for' → logprob: -7.271049499511719
    6. ' valid' → logprob: -7.521049499511719
    7. ' if' → logprob: -7.896049499511719
    8. '   ' → logprob: -9.271049499511719
    9. '               ' → logprob: -9.896049499511719
    10. 'break' → logprob: -11.896049499511719

Token 427: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.01627400331199169
    2. ' target' → logprob: -4.1412739753723145
    3. '0' → logprob: -8.391274452209473
    4. '           ' → logprob: -12.641274452209473
    5. '   ' → logprob: -13.266274452209473
    6. '(target' → logprob: -13.266274452209473
    7. 'start' → logprob: -13.391274452209473
    8. ' ' → logprob: -13.516274452209473
    9. '       ' → logprob: -13.516274452209473
    10. '               ' → logprob: -15.266274452209473

Token 428: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.128163257315464e-07
    2. 'len' → logprob: -15.75
    3. '<len' → logprob: -17.125
    4. '_val' → logprob: -17.25
    5. '_' → logprob: -18.5
    6. '_LEN' → logprob: -18.625
    7. '_length' → logprob: -19.125
    8. '_l' → logprob: -19.5
    9. ' _' → logprob: -20.125
    10. '```' → logprob: -20.5

Token 429: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7809032797813416
    2. '<=' → logprob: -1.6559033393859863
    3. ' >' → logprob: -2.1559033393859863
    4. ' <' → logprob: -2.5309033393859863
    5. '>' → logprob: -2.7809033393859863
    6. '<' → logprob: -2.7809033393859863
    7. ' >=' → logprob: -4.030903339385986
    8. '>=' → logprob: -4.280903339385986
    9. '<len' → logprob: -9.155902862548828
    10. '==' → logprob: -11.780902862548828

Token 430: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.029750604182481766
    2. ' total' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.02975082397461
    4. ' ' → logprob: -18.02975082397461
    5. '	total' → logprob: -18.27975082397461
    6. '(total' → logprob: -20.15475082397461
    7. 'sub' → logprob: -20.65475082397461
    8. '$total' → logprob: -21.77975082397461
    9. ',total' → logprob: -21.77975082397461
    10. 'target' → logprob: -21.90475082397461

Token 431: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.896309739408025e-07
    2. 'length' → logprob: -14.750000953674316
    3. '_len' → logprob: -14.750000953674316
    4. 'Length' → logprob: -17.875
    5. '_' → logprob: -19.75
    6. '_LENGTH' → logprob: -20.0
    7. '_l' → logprob: -20.0
    8. ' length' → logprob: -20.5
    9. '_lengths' → logprob: -20.875
    10. '_Length' → logprob: -20.875

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5896292328834534
    2. ':
' → logprob: -0.8396292328834534
    3. '           ' → logprob: -4.339629173278809
    4. '       ' → logprob: -8.214629173278809
    5. ':return' → logprob: -8.964629173278809
    6. '               ' → logprob: -10.589629173278809
    7. ' and' → logprob: -10.714629173278809
    8. ' or' → logprob: -10.964629173278809
    9. ' continue' → logprob: -10.964629173278809
    10. ' :
' → logprob: -11.339629173278809

Token 433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.349075556499884e-05
    2. ' continue' → logprob: -10.2500638961792
    3. 'continue' → logprob: -11.2500638961792
    4. ' break' → logprob: -11.7500638961792
    5. '               ' → logprob: -12.5000638961792
    6. 'break' → logprob: -13.6250638961792
    7. '       ' → logprob: -14.2500638961792
    8. ' valid' → logprob: -14.8750638961792
    9. '                   ' → logprob: -14.8750638961792
    10. '```' → logprob: -15.0000638961792

Token 434: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06276355683803558
    2. 'break' (adapté à ' break') → logprob: -3.0627634525299072
    3. ' break' → logprob: -4.312763690948486
    4. '               ' → logprob: -7.812763690948486
    5. 'continue' → logprob: -8.937763214111328
    6. '```' → logprob: -9.312763214111328
    7. '   ' → logprob: -10.812763214111328
    8. '	break' → logprob: -11.187763214111328
    9. ' continue' → logprob: -11.562763214111328
    10. '       ' → logprob: -12.062763214111328

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34870749711990356
    2. '           ' → logprob: -1.2237074375152588
    3. '               ' → logprob: -8.97370719909668
    4. ',' → logprob: -9.97370719909668
    5. '<|end|>' → logprob: -10.84870719909668
    6. '
' → logprob: -11.59870719909668
    7. '```' → logprob: -11.72370719909668
    8. 'valid' → logprob: -11.84870719909668
    9. ',
' → logprob: -11.97370719909668
    10. '	       ' → logprob: -12.22370719909668

Token 436: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004682288039475679
    2. '       ' → logprob: -6.1296820640563965
    3. 'valid' → logprob: -6.1296820640563965
    4. '               ' → logprob: -8.879682540893555
    5. ' valid' → logprob: -8.879682540893555
    6. '```' → logprob: -10.629682540893555
    7. '                   ' → logprob: -12.504682540893555
    8. '   ' → logprob: -13.504682540893555
    9. '(valid' → logprob: -13.504682540893555
    10. 'for' → logprob: -13.504682540893555

Token 437: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.0384429469704628
    2. ' valid' → logprob: -3.413442850112915
    3. '           ' → logprob: -5.913443088531494
    4. '       ' → logprob: -6.413443088531494
    5. '               ' → logprob: -8.913442611694336
    6. 'for' → logprob: -9.538442611694336
    7. '                   ' → logprob: -9.538442611694336
    8. '   ' → logprob: -10.163442611694336
    9. 'if' → logprob: -10.163442611694336
    10. '
' → logprob: -11.288442611694336

Token 438: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -1.7432603272027336e-06
    2. '_per' → logprob: -13.750001907348633
    3. '_perf' → logprob: -14.750001907348633
    4. 'perm' → logprob: -16.250001907348633
    5. '_' → logprob: -17.250001907348633
    6. '_prob' → logprob: -17.750001907348633
    7. '_p' → logprob: -19.250001907348633
    8. '_valid' → logprob: -19.500001907348633
    9. '\' → logprob: -19.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 439: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.9361264946837764e-07
    2. 'total' → logprob: -15.75
    3. '_count' → logprob: -18.875
    4. 'Total' → logprob: -19.125
    5. '_tot' → logprob: -20.25
    6. '_TOTAL' → logprob: -20.625
    7. '_Total' → logprob: -20.625
    8. '_valid' → logprob: -20.75
    9. 'otal' → logprob: -20.75
    10. ' total' → logprob: -21.125

Token 440: '[target' (ID: 123448)
  Prédit: '[target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -0.00013369438238441944
    2. '[' → logprob: -9.000133514404297
    3. '[start' → logprob: -13.000133514404297
    4. '][' → logprob: -13.250133514404297
    5. '[token' → logprob: -13.625133514404297
    6. '[temp' → logprob: -14.000133514404297
    7. '[tmp' → logprob: -14.000133514404297
    8. 'target' → logprob: -14.125133514404297
    9. ' [' → logprob: -14.125133514404297
    10. '       ' → logprob: -14.250133514404297

Token 441: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.650518920039758e-06
    2. 'len' → logprob: -12.625003814697266
    3. '_val' → logprob: -15.250003814697266
    4. '[len' → logprob: -17.250003814697266
    5. '_length' → logprob: -17.375003814697266
    6. '_LEN' → logprob: -17.750003814697266
    7. 'Len' → logprob: -17.750003814697266
    8. '```' → logprob: -17.875003814697266
    9. '_' → logprob: -18.625003814697266
    10. 's' → logprob: -18.875003814697266

Token 442: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06353162229061127
    2. ']+=' → logprob: -2.8135316371917725
    3. '[' → logprob: -6.938531398773193
    4. '+=' → logprob: -7.688531398773193
    5. '-=' → logprob: -10.313531875610352
    6. ' ]' → logprob: -10.563531875610352
    7. ']-' → logprob: -10.688531875610352
    8. '-' → logprob: -11.313531875610352
    9. ' +=' → logprob: -11.563531875610352
    10. '       ' → logprob: -11.938531875610352

Token 443: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15949374437332153
    2. '-=' → logprob: -2.0344936847686768
    3. '%=' → logprob: -5.159493923187256
    4. ' +=' → logprob: -5.159493923187256
    5. ' -=' → logprob: -5.534493923187256
    6. '=' → logprob: -6.909493923187256
    7. '[' → logprob: -9.659493446350098
    8. ']+=' → logprob: -9.784493446350098
    9. '-' → logprob: -9.909493446350098
    10. ' %=' → logprob: -10.659493446350098

Token 444: ' perm' (ID: 5961)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.03345826640725136
    2. ' valid' → logprob: -3.6584582328796387
    3. 'perm' → logprob: -5.158458232879639
    4. '1' → logprob: -7.783458232879639
    5. ' perm' → logprob: -8.533458709716797
    6. '   ' → logprob: -8.658458709716797
    7. 'aux' → logprob: -8.658458709716797
    8. '(' → logprob: -9.033458709716797
    9. '(valid' → logprob: -9.033458709716797
    10. 'mod' → logprob: -9.408458709716797

Token 445: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.438573680294212e-06
    2. 'count' → logprob: -12.625005722045898
    3. 'unt' → logprob: -15.125005722045898
    4. 'Count' → logprob: -15.125005722045898
    5. 'ount' → logprob: -15.250005722045898
    6. '[_' → logprob: -15.375005722045898
    7. '```' → logprob: -15.750005722045898
    8. '[' → logprob: -15.875005722045898
    9. '   ' → logprob: -16.1250057220459
    10. '[count' → logprob: -16.3750057220459

Token 446: '[start' (ID: 62179)
  Prédit: '[target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -0.638111412525177
    2. '[start' → logprob: -0.763111412525177
    3. '[' → logprob: -5.388111591339111
    4. 'target' → logprob: -7.888111591339111
    5. 'start' → logprob: -8.138111114501953
    6. '[next' → logprob: -8.763111114501953
    7. 'split' → logprob: -9.888111114501953
    8. '```' → logprob: -11.638111114501953
    9. '[end' → logprob: -11.638111114501953
    10. '[sub' → logprob: -11.638111114501953

Token 447: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.1624191552400589
    2. '_len' → logprob: -1.9124191999435425
    3. '_point' → logprob: -6.912419319152832
    4. '_val' → logprob: -7.037419319152832
    5. 'seq' → logprob: -8.412419319152832
    6. 'len' → logprob: -10.162419319152832
    7. 'Seq' → logprob: -11.037419319152832
    8. 'val' → logprob: -11.662419319152832
    9. '[len' → logprob: -11.912419319152832
    10. '_idx' → logprob: -12.412419319152832

Token 448: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00081796565791592
    2. ']' → logprob: -8.500818252563477
    3. '[start' → logprob: -8.500818252563477
    4. '[' → logprob: -8.875818252563477
    5. 'aux' → logprob: -8.875818252563477
    6. 'start' → logprob: -10.000818252563477
    7. ' ][' → logprob: -11.250818252563477
    8. '[sub' → logprob: -11.375818252563477
    9. '(aux' → logprob: -11.750818252563477
    10. '[target' → logprob: -11.875818252563477

Token 449: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.003690335899591446
    2. 'start' → logprob: -6.003690242767334
    3. 'split' → logprob: -7.628690242767334
    4. 'sub' → logprob: -8.253690719604492
    5. '(aux' → logprob: -8.753690719604492
    6. 'target' → logprob: -8.878690719604492
    7. 'seq' → logprob: -9.753690719604492
    8. ' auxiliary' → logprob: -10.128690719604492
    9. '2' → logprob: -10.503690719604492
    10. '(' → logprob: -11.253690719604492

Token 450: 'iliary' (ID: 58854)
  Prédit: 'iliary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iliary' → logprob: -0.7035497426986694
    2. 'x' → logprob: -0.8285497426986694
    3. 'val' → logprob: -4.203549861907959
    4. 'al' → logprob: -4.203549861907959
    5. 'aux' → logprob: -4.453549861907959
    6. '_val' → logprob: -4.703549861907959
    7. 'xi' → logprob: -5.078549861907959
    8. 'ivalent' → logprob: -6.078549861907959
    9. 'ial' → logprob: -7.328549861907959
    10. 'ary' → logprob: -7.453549861907959

Token 451: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00018697108316700906
    2. 'val' → logprob: -9.125186920166016
    3. '_sum' → logprob: -10.500186920166016
    4. '_len' → logprob: -11.125186920166016
    5. '_' → logprob: -11.250186920166016
    6. '```' → logprob: -12.500186920166016
    7. ']' → logprob: -13.000186920166016
    8. '_count' → logprob: -13.625186920166016
    9. '_VAL' → logprob: -13.625186920166016
    10. 'Val' → logprob: -14.000186920166016

Token 452: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007302763871848583
    2. ' -' → logprob: -5.007302761077881
    3. '-' → logprob: -8.132303237915039
    4. ' ]' → logprob: -8.757303237915039
    5. ']
' → logprob: -9.757303237915039
    6. '[' → logprob: -10.507303237915039
    7. '+' → logprob: -11.632303237915039
    8. ']]' → logprob: -12.007303237915039
    9. '-target' → logprob: -12.132303237915039
    10. '[start' → logprob: -12.132303237915039

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06326869130134583
    2. '<|end|>' → logprob: -2.9382686614990234
    3. '```' → logprob: -5.938268661499023
    4. 'for' → logprob: -6.188268661499023
    5. ' for' → logprob: -6.188268661499023
    6. '           ' → logprob: -7.063268661499023
    7. '
' → logprob: -8.313268661499023
    8. '   ' → logprob: -9.188268661499023
    9. '        ' → logprob: -9.563268661499023
    10. '               ' → logprob: -9.813268661499023

Token 454: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5498247146606445
    2. '       ' → logprob: -1.4248247146606445
    3. 'valid' → logprob: -1.9248247146606445
    4. ' if' → logprob: -3.5498247146606445
    5. 'for' → logprob: -5.7998247146606445
    6. ' valid' → logprob: -5.7998247146606445
    7. '```' → logprob: -6.6748247146606445
    8. '           ' → logprob: -8.674824714660645
    9. ' for' → logprob: -9.174824714660645
    10. '
' → logprob: -9.424824714660645

Token 455: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.6931568384170532
    2. ' valid' → logprob: -0.6931568384170532
    3. '(valid' → logprob: -11.693157196044922
    4. '	valid' → logprob: -14.193157196044922
    5. '   ' → logprob: -14.943157196044922
    6. '           ' → logprob: -16.693157196044922
    7. '.valid' → logprob: -16.943157196044922
    8. '_valid' → logprob: -17.068157196044922
    9. 'perm' → logprob: -17.318157196044922
    10. ' perm' → logprob: -17.318157196044922

Token 456: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -3.128163257315464e-07
    2. '_perf' → logprob: -16.0
    3. '```' → logprob: -16.5
    4. '_per' → logprob: -17.125
    5. 'perm' → logprob: -17.625
    6. '_prob' → logprob: -18.25
    7. '\' → logprob: -19.0
    8. '[_' → logprob: -19.625
    9. '_' → logprob: -19.75
    10. '_permission' → logprob: -20.25

Token 457: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -8.77627644513268e-06
    2. 'total' → logprob: -11.875008583068848
    3. '_perm' → logprob: -14.000008583068848
    4. '_tot' → logprob: -15.500008583068848
    5. 'Total' → logprob: -15.500008583068848
    6. '_per' → logprob: -15.875008583068848
    7. '_valid' → logprob: -16.375009536743164
    8. '_count' → logprob: -16.625009536743164
    9. '_target' → logprob: -17.125009536743164
    10. 'otal' → logprob: -17.125009536743164

Token 458: '[target' (ID: 123448)
  Prédit: '[target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -0.00012356207298580557
    2. '[' → logprob: -9.000123977661133
    3. '[next' → logprob: -17.125123977661133
    4. 'target' → logprob: -17.375123977661133
    5. '[start' → logprob: -17.625123977661133
    6. '[tmp' → logprob: -17.750123977661133
    7. '[token' → logprob: -17.875123977661133
    8. '[temp' → logprob: -18.000123977661133
    9. ' [' → logprob: -18.500123977661133
    10. '[source' → logprob: -18.750123977661133

Token 459: '_len' (ID: 13683)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.036058295518159866
    2. '[target' → logprob: -3.411058187484741
    3. '_len' → logprob: -6.41105842590332
    4. '_target' → logprob: -8.28605842590332
    5. 'len' → logprob: -8.41105842590332
    6. 'arget' → logprob: -9.28605842590332
    7. 'total' → logprob: -9.28605842590332
    8. 'valid' → logprob: -10.28605842590332
    9. ' target' → logprob: -11.16105842590332
    10. '[' → logprob: -11.16105842590332

Token 460: ']' (ID: 60)
  Prédit: '[target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -0.013256344944238663
    2. '[' → logprob: -4.763256549835205
    3. '[next' → logprob: -6.013256549835205
    4. ']' → logprob: -7.263256549835205
    5. '[start' → logprob: -7.388256549835205
    6. '>=' → logprob: -7.638256549835205
    7. ']>=' → logprob: -8.763256072998047
    8. '][' → logprob: -9.638256072998047
    9. '[temp' → logprob: -10.388256072998047
    10. '[token' → logprob: -10.513256072998047

Token 461: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5764557719230652
    2. ' >=' → logprob: -0.8264557719230652
    3. '[' → logprob: -7.701455593109131
    4. ']>=' → logprob: -10.451456069946289
    5. '   ' → logprob: -11.201456069946289
    6. ')>=' → logprob: -11.576456069946289
    7. '           ' → logprob: -12.951456069946289
    8. '>' → logprob: -13.076456069946289
    9. '	' → logprob: -13.576456069946289
    10. '[i' → logprob: -14.201456069946289

Token 462: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.048680588603019714
    2. ' modulo' → logprob: -3.048680543899536
    3. '```' → logprob: -10.048680305480957
    4. 'module' → logprob: -10.548680305480957
    5. '           ' → logprob: -11.548680305480957
    6. '	mod' → logprob: -12.673680305480957
    7. 'Modulo' → logprob: -13.173680305480957
    8. '   ' → logprob: -13.423680305480957
    9. '(mod' → logprob: -13.548680305480957
    10. ' mod' → logprob: -13.798680305480957

Token 463: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.000000953674316
    3. '```' → logprob: -15.875000953674316
    4. '_val' → logprob: -17.25
    5. '_values' → logprob: -17.75
    6. '   ' → logprob: -18.125
    7. ' _' → logprob: -18.25
    8. '_valid' → logprob: -18.375
    9. '_code' → logprob: -19.25
    10. '_VALUE' → logprob: -19.5

Token 464: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18048088252544403
    2. ':
' → logprob: -1.8054808378219604
    3. '           ' → logprob: -7.30548095703125
    4. '       ' → logprob: -10.43048095703125
    5. '=' → logprob: -11.80548095703125
    6. '):
' → logprob: -12.05548095703125
    7. ' :
' → logprob: -12.55548095703125
    8. '```' → logprob: -12.55548095703125
    9. ' :' → logprob: -12.93048095703125
    10. '   ' → logprob: -13.43048095703125

Token 465: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017589399591088295
    2. ' -=' → logprob: -4.392589569091797
    3. ' valid' → logprob: -6.267589569091797
    4. '```' → logprob: -7.392589569091797
    5. ' +=' → logprob: -7.517589569091797
    6. '=' → logprob: -7.767589569091797
    7. '               ' → logprob: -8.142589569091797
    8. '-' → logprob: -8.267589569091797
    9. '+=' → logprob: -8.267589569091797
    10. ' =' → logprob: -8.767589569091797

Token 466: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.011048170737922192
    2. ' valid' → logprob: -4.511048316955566
    3. '           ' → logprob: -15.011048316955566
    4. '(valid' → logprob: -16.88604736328125
    5. '_valid' → logprob: -18.88604736328125
    6. '	valid' → logprob: -19.01104736328125
    7. '               ' → logprob: -20.13604736328125
    8. '```' → logprob: -20.51104736328125
    9. '.valid' → logprob: -20.63604736328125
    10. 'Valid' → logprob: -21.13604736328125

Token 467: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -7.896309739408025e-07
    2. '_per' → logprob: -14.375000953674316
    3. '_perf' → logprob: -15.750000953674316
    4. 'perm' → logprob: -16.75
    5. '_valid' → logprob: -17.625
    6. '_prob' → logprob: -17.875
    7. '```' → logprob: -18.875
    8. '\' → logprob: -19.625
    9. '_permission' → logprob: -19.75
    10. '
' → logprob: -20.75

Token 468: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.696889623621246e-06
    2. 'total' → logprob: -12.87500286102295
    3. 'Total' → logprob: -16.000001907348633
    4. 'otal' → logprob: -16.875001907348633
    5. '_valid' → logprob: -17.750001907348633
    6. '_tot' → logprob: -19.750001907348633
    7. '_TOTAL' → logprob: -20.875001907348633
    8. '_target' → logprob: -21.125001907348633
    9. '_Total' → logprob: -21.250001907348633
    10. ' total' → logprob: -21.625001907348633

Token 469: '[target' (ID: 123448)
  Prédit: '[target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -1.8550976164988242e-05
    2. '[' → logprob: -11.000018119812012
    3. '[start' → logprob: -13.750018119812012
    4. '[temp' → logprob: -15.000018119812012
    5. '[tmp' → logprob: -15.875018119812012
    6. '[token' → logprob: -16.500019073486328
    7. 'target' → logprob: -17.250019073486328
    8. '[to' → logprob: -17.375019073486328
    9. '[tag' → logprob: -17.375019073486328
    10. 'valid' → logprob: -17.625019073486328

Token 470: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.01578388176858425
    2. 'target' → logprob: -4.890783786773682
    3. '[target' → logprob: -5.265783786773682
    4. 'len' → logprob: -6.890783786773682
    5. '_val' → logprob: -7.015783786773682
    6. 'total' → logprob: -8.01578426361084
    7. 'arget' → logprob: -8.26578426361084
    8. '_target' → logprob: -9.14078426361084
    9. 'ent' → logprob: -9.76578426361084
    10. 't' → logprob: -10.39078426361084

Token 471: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004625699482858181
    2. ' -=' → logprob: -6.0046257972717285
    3. '[' → logprob: -7.3796257972717285
    4. ']-' → logprob: -7.5046257972717285
    5. '           ' → logprob: -7.6296257972717285
    6. '-=' → logprob: -8.12962532043457
    7. ' ]' → logprob: -9.62962532043457
    8. ']+=' → logprob: -10.37962532043457
    9. '-' → logprob: -10.87962532043457
    10. '       ' → logprob: -11.12962532043457

Token 472: ' -=' (ID: 12583)
  Prédit: '[target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -0.5307810306549072
    2. '-=' → logprob: -1.0307810306549072
    3. '[' → logprob: -3.5307810306549072
    4. '[next' → logprob: -4.405780792236328
    5. ' -=' → logprob: -4.905780792236328
    6. '[start' → logprob: -5.405780792236328
    7. '[token' → logprob: -7.780780792236328
    8. '[top' → logprob: -8.030780792236328
    9. '[temp' → logprob: -8.655780792236328
    10. '[to' → logprob: -8.905780792236328

Token 473: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01417867373675108
    2. ' modulo' → logprob: -4.26417875289917
    3. 'module' → logprob: -11.389178276062012
    4. '           ' → logprob: -13.139178276062012
    5. '	mod' → logprob: -14.264178276062012
    6. '(mod' → logprob: -15.014178276062012
    7. '```' → logprob: -15.264178276062012
    8. '   ' → logprob: -15.764178276062012
    9. 'Modulo' → logprob: -15.764178276062012
    10. '               ' → logprob: -16.639179229736328

Token 474: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2200749754119897e-06
    2. 'value' → logprob: -13.625001907348633
    3. 'mod' → logprob: -13.875001907348633
    4. 'alue' → logprob: -16.875001907348633
    5. '_VALUE' → logprob: -17.750001907348633
    6. 'Value' → logprob: -19.750001907348633
    7. '_values' → logprob: -20.750001907348633
    8. '_mod' → logprob: -20.750001907348633
    9. '_Value' → logprob: -20.750001907348633
    10. 'valu' → logprob: -21.000001907348633

Token 475: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2620287239551544
    2. 'for' → logprob: -1.762028694152832
    3. 'result' → logprob: -3.637028694152832
    4. 'valid' → logprob: -3.887028694152832
    5. 'total' → logprob: -4.512028694152832
    6. 'answer' → logprob: -8.137028694152832
    7. 'output' → logprob: -8.512028694152832
    8. ' for' → logprob: -8.512028694152832
    9. '<|end|>' → logprob: -9.262028694152832
    10. ' valid' → logprob: -10.137028694152832

Token 476: 'final' (ID: 17196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012095519341528416
    2. 'print' → logprob: -4.6370954513549805
    3. '<|end|>' → logprob: -6.2620954513549805
    4. ' for' → logprob: -8.88709545135498
    5. 'valid' → logprob: -9.26209545135498
    6. '#' → logprob: -9.38709545135498
    7. '```' → logprob: -9.51209545135498
    8. 'result' → logprob: -11.26209545135498
    9. 'total' → logprob: -11.63709545135498
    10. ')' → logprob: -12.01209545135498

Token 477: '_answer' (ID: 65702)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.40300264954566956
    2. '_valid' → logprob: -1.7780026197433472
    3. '_' → logprob: -2.5280027389526367
    4. '_total' → logprob: -3.5280027389526367
    5. '_output' → logprob: -3.5280027389526367
    6. '_count' → logprob: -4.653002738952637
    7. '_value' → logprob: -5.278002738952637
    8. '_sum' → logprob: -5.528002738952637
    9. '_val' → logprob: -6.153002738952637
    10. '_answer' → logprob: -6.278002738952637

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2189851552248001
    2. '=' → logprob: -1.7189851999282837
    3. '_' → logprob: -4.093985080718994
    4. ' ' → logprob: -7.343985080718994
    5. '_=' → logprob: -10.218985557556152
    6. ' _' → logprob: -10.843985557556152
    7. '=_' → logprob: -11.468985557556152
    8. '_space' → logprob: -11.843985557556152
    9. ',' → logprob: -12.093985557556152
    10. ')' → logprob: -12.843985557556152

Token 479: ' ' (ID: 220)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5287937521934509
    2. ' valid' → logprob: -0.9037937521934509
    3. '0' → logprob: -5.653793811798096
    4. 'sum' → logprob: -6.653793811798096
    5. ' sum' → logprob: -7.153793811798096
    6. '(valid' → logprob: -10.528793334960938
    7. '1' → logprob: -10.778793334960938
    8. ' ' → logprob: -10.903793334960938
    9. '(' → logprob: -12.653793334960938
    10. ' (' → logprob: -13.278793334960938

Token 480: '0' (ID: 15)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.07437001168727875
    2. 'sum' → logprob: -2.6993699073791504
    3. '0' → logprob: -5.57436990737915
    4. '(valid' → logprob: -8.449370384216309
    5. ' valid' → logprob: -8.699370384216309
    6. '(' → logprob: -9.324370384216309
    7. '1' → logprob: -9.574370384216309
    8. '(sum' → logprob: -10.449370384216309
    9. 'pow' → logprob: -10.824370384216309
    10. 'max' → logprob: -11.074370384216309

Token 481: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00738726370036602
    2. ' for' → logprob: -5.882387161254883
    3. '
' → logprob: -6.007387161254883
    4. '<|end|>' → logprob: -6.257387161254883
    5. '```' → logprob: -8.632387161254883
    6. '[' → logprob: -12.382387161254883
    7. '  
' → logprob: -12.757387161254883
    8. '<|end|>' → logprob: -13.257387161254883
    9. '``' → logprob: -13.757387161254883
    10. ' 
' → logprob: -13.757387161254883

Token 482: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6240566083070007e-06
    2. ' for' → logprob: -13.375001907348633
    3. '```' → logprob: -17.000001907348633
    4. 'final' → logprob: -17.750001907348633
    5. '<|end|>' → logprob: -18.625001907348633
    6. 'total' → logprob: -20.250001907348633
    7. '
' → logprob: -20.375001907348633
    8. 'from' → logprob: -20.625001907348633
    9. 'range' → logprob: -20.750001907348633
    10. 'valid' → logprob: -21.500001907348633

Token 483: ' idx' (ID: 14016)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.44631558656692505
    2. ' length' → logprob: -1.5713155269622803
    3. 'seq' → logprob: -2.5713155269622803
    4. ' seq' → logprob: -3.0713155269622803
    5. ' curr' → logprob: -4.946315765380859
    6. 'curr' → logprob: -4.946315765380859
    7. 'val' → logprob: -5.071315765380859
    8. 'idx' → logprob: -6.071315765380859
    9. ' val' → logprob: -6.571315765380859
    10. 'i' → logprob: -7.071315765380859

Token 484: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029756972566246986
    2. 'in' → logprob: -3.529757022857666
    3. ',' → logprob: -12.529756546020508
    4. '	in' → logprob: -14.154756546020508
    5. '```' → logprob: -14.279756546020508
    6. ' ' → logprob: -14.404756546020508
    7. 'In' → logprob: -15.529756546020508
    8. '_in' → logprob: -15.779756546020508
    9. '_' → logprob: -16.404756546020508
    10. ' ,' → logprob: -16.404756546020508

Token 485: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6685072183609009
    2. 'value' → logprob: -1.4185072183609009
    3. 'count' → logprob: -1.6685072183609009
    4. ' val' → logprob: -2.9185070991516113
    5. ' value' → logprob: -6.418507099151611
    6. ' count' → logprob: -6.793507099151611
    7. 'cnt' → logprob: -9.04350757598877
    8. 'valid' → logprob: -10.54350757598877
    9. 'v' → logprob: -12.04350757598877
    10. ' cnt' → logprob: -12.54350757598877

Token 486: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693293392658234
    2. 'in' → logprob: -2.1269328594207764
    3. ' ' → logprob: -12.751933097839355
    4. ',' → logprob: -13.876933097839355
    5. '	in' → logprob: -14.751933097839355
    6. 'import' → logprob: -16.00193214416504
    7. '```' → logprob: -16.12693214416504
    8. '_in' → logprob: -16.25193214416504
    9. '  ' → logprob: -16.75193214416504
    10. ' ' → logprob: -16.87693214416504

Token 487: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.3868716359138489
    2. ' enumerate' → logprob: -1.136871576309204
    3. 'valid' → logprob: -14.636871337890625
    4. '(en' → logprob: -17.386871337890625
    5. 'range' → logprob: -17.386871337890625
    6. 'enum' → logprob: -17.761871337890625
    7. 'en' → logprob: -17.761871337890625
    8. ' enumer' → logprob: -17.886871337890625
    9. 'in' → logprob: -18.386871337890625
    10. ' valid' → logprob: -18.761871337890625

Token 488: '(valid' (ID: 76588)
  Prédit: '(valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(valid' → logprob: -9.627176768844947e-05
    2. 'valid' → logprob: -9.250096321105957
    3. ' valid' → logprob: -16.62509536743164
    4. ' (' → logprob: -16.87509536743164
    5. '(' → logprob: -18.12509536743164
    6. '	valid' → logprob: -19.12509536743164
    7. '(range' → logprob: -21.12509536743164
    8. '_valid' → logprob: -21.37509536743164
    9. '(validate' → logprob: -21.75009536743164
    10. ')' → logprob: -21.87509536743164

Token 489: '_perm' (ID: 128866)
  Prédit: '_perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -1.3306015716807451e-05
    2. 'perm' → logprob: -11.25001335144043
    3. '_perf' → logprob: -15.50001335144043
    4. '_per' → logprob: -19.00001335144043
    5. '_valid' → logprob: -19.00001335144043
    6. '_prob' → logprob: -19.12501335144043
    7. 'valid' → logprob: -19.62501335144043
    8. '```' → logprob: -19.62501335144043
    9. '_' → logprob: -20.25001335144043
    10. ' _' → logprob: -21.00001335144043

Token 490: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.4121114822482923e-06
    2. 'otal' → logprob: -13.250003814697266
    3. 'total' → logprob: -13.875003814697266
    4. 'al' → logprob: -14.250003814697266
    5. 'Total' → logprob: -18.875003814697266
    6. '_TOTAL' → logprob: -19.125003814697266
    7. '_' → logprob: -19.250003814697266
    8. ' total' → logprob: -19.500003814697266
    9. '_to' → logprob: -19.500003814697266
    10. 's' → logprob: -19.875003814697266

Token 491: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25218814611434937
    2. '):
' → logprob: -1.5021882057189941
    3. ':' → logprob: -8.377187728881836
    4. '):
' → logprob: -10.877187728881836
    5. ':
' → logprob: -12.127187728881836
    6. ' ):' → logprob: -13.252187728881836
    7. '():
' → logprob: -14.377187728881836
    8. '   ' → logprob: -14.627187728881836
    9. ' ):
' → logprob: -14.877187728881836
    10. ']:' → logprob: -15.002187728881836

Token 492: '   ' (ID: 271)
  Prédit: ' final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.15678663551807404
    2. '   ' → logprob: -2.1567866802215576
    3. 'final' → logprob: -3.9067866802215576
    4. '	final' → logprob: -4.9067864418029785
    5. '<|end|>' → logprob: -7.9067864418029785
    6. '(final' → logprob: -8.031786918640137
    7. '```' → logprob: -8.156786918640137
    8. ' 
' → logprob: -8.531786918640137
    9. '    
' → logprob: -9.156786918640137
    10. '.final' → logprob: -9.406786918640137

Token 493: ' final' (ID: 1721)
  Prédit: ' final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.03338459134101868
    2. 'final' (adapté à ' final') → logprob: -3.5333845615386963
    3. '   ' → logprob: -5.783384799957275
    4. '	final' → logprob: -8.033384323120117
    5. '```' → logprob: -8.533384323120117
    6. ' 
' → logprob: -11.533384323120117
    7. '``' → logprob: -12.158384323120117
    8. '    
' → logprob: -12.533384323120117
    9. ' if' → logprob: -12.783384323120117
    10. '_final' → logprob: -13.408384323120117

Token 494: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -1.5332478142227046e-05
    2. '_' → logprob: -11.625015258789062
    3. 'Answer' → logprob: -13.250015258789062
    4. '_ans' → logprob: -13.500015258789062
    5. 'answer' → logprob: -13.750015258789062
    6. ' _' → logprob: -14.250015258789062
    7. '_value' → logprob: -14.625015258789062
    8. '_question' → logprob: -15.375015258789062
    9. '_final' → logprob: -15.875015258789062
    10. '_answers' → logprob: -16.500015258789062

Token 495: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008754963055253029
    2. ' +=' → logprob: -4.883754730224609
    3. '=' → logprob: -6.883754730224609
    4. '   ' → logprob: -9.13375473022461
    5. ' =' → logprob: -11.63375473022461
    6. ']+=' → logprob: -12.63375473022461
    7. '```' → logprob: -13.63375473022461
    8. '+=(' → logprob: -14.13375473022461
    9. '+' → logprob: -14.75875473022461
    10. ' ^=' → logprob: -14.88375473022461

Token 496: ' (' (ID: 350)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.008633950725197792
    2. ' (' → logprob: -4.758634090423584
    3. '(' → logprob: -11.758633613586426
    4. '(valid' → logprob: -11.883633613586426
    5. '(fin' → logprob: -13.008633613586426
    6. '(full' → logprob: -14.883633613586426
    7. '(val' → logprob: -15.258633613586426
    8. '   ' → logprob: -15.258633613586426
    9. '(ans' → logprob: -15.383633613586426
    10. '(total' → logprob: -15.383633613586426

Token 497: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -2.15310683415737e-05
    2. ' final' → logprob: -11.000021934509277
    3. '(final' → logprob: -12.250021934509277
    4. '   ' → logprob: -20.12502098083496
    5. '
' → logprob: -20.50002098083496
    6. '	final' → logprob: -21.00002098083496
    7. 'Final' → logprob: -21.50002098083496
    8. '_final' → logprob: -21.75002098083496
    9. '.final' → logprob: -23.25002098083496
    10. 'FINAL' → logprob: -23.37502098083496

Token 498: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -2.45848218582978e-06
    2. 'Answer' → logprob: -13.75000286102295
    3. '+' → logprob: -14.12500286102295
    4. 'answer' → logprob: -14.87500286102295
    5. '_ans' → logprob: -15.75000286102295
    6. '_' → logprob: -17.125001907348633
    7. '
' → logprob: -17.125001907348633
    8. 'ANSWER' → logprob: -17.750001907348633
    9. 's' → logprob: -18.375001907348633
    10. ' _' → logprob: -19.125001907348633

Token 499: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132617771625519
    2. '+' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.938261032104492
    4. '＋' → logprob: -18.688261032104492
    5. '+
' → logprob: -19.438261032104492
    6. '
' → logprob: -19.688261032104492
    7. ' ' → logprob: -19.813261032104492
    8. ' +
' → logprob: -19.938261032104492
    9. '+c' → logprob: -20.188261032104492
    10. '```' → logprob: -20.313261032104492

Token 500: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.313262403011322
    2. 'val' → logprob: -1.3132624626159668
    3. '	val' → logprob: -15.313261985778809
    4. '(val' → logprob: -15.938261985778809
    5. '_val' → logprob: -16.688262939453125
    6. '[val' → logprob: -16.688262939453125
    7. '   ' → logprob: -17.063262939453125
    8. '.val' → logprob: -17.188262939453125
    9. ',val' → logprob: -18.063262939453125
    10. '```' → logprob: -18.063262939453125

Token 501: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011772842844948173
    2. ' )' → logprob: -9.875117301940918
    3. ' *' → logprob: -9.875117301940918
    4. ')%' → logprob: -11.750117301940918
    5. '*' → logprob: -12.125117301940918
    6. '   ' → logprob: -13.625117301940918
    7. '%' → logprob: -16.375118255615234
    8. '*)' → logprob: -16.750118255615234
    9. '`)' → logprob: -17.125118255615234
    10. '```' → logprob: -17.375118255615234

Token 502: ' perm' (ID: 5961)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.17451854050159454
    2. '(idx' → logprob: -3.174518585205078
    3. 'perm' → logprob: -3.299518585205078
    4. 'pow' → logprob: -3.424518585205078
    5. '2' → logprob: -4.174518585205078
    6. '(' → logprob: -4.299518585205078
    7. 'val' → logprob: -4.674518585205078
    8. 'valid' → logprob: -5.924518585205078
    9. ' idx' → logprob: -7.049518585205078
    10. 'mod' → logprob: -7.299518585205078

Token 503: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.054500666621607e-06
    2. 'count' → logprob: -13.37500286102295
    3. 'Count' → logprob: -15.12500286102295
    4. '_total' → logprob: -15.37500286102295
    5. 'final' → logprob: -15.50000286102295
    6. 'total' → logprob: -16.000003814697266
    7. 'ut' → logprob: -16.250003814697266
    8. '_valid' → logprob: -16.375003814697266
    9. '_COUNT' → logprob: -16.500003814697266
    10. '_cnt' → logprob: -16.500003814697266

Token 504: '[-' (ID: 17503)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.34899312257766724
    2. '[' → logprob: -1.2239930629730225
    3. '[len' → logprob: -8.348993301391602
    4. 'total' → logprob: -9.098993301391602
    5. 'idx' → logprob: -9.473993301391602
    6. ',total' → logprob: -10.848993301391602
    7. ' total' → logprob: -11.348993301391602
    8. '(total' → logprob: -11.348993301391602
    9. ' idx' → logprob: -11.473993301391602
    10. '[-' → logprob: -11.598993301391602

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012844886630773544
    2. 'total' → logprob: -4.387845039367676
    3. 'idx' → logprob: -8.512845039367676
    4. '(total' → logprob: -10.137845039367676
    5. '[' → logprob: -10.887845039367676
    6. ' total' → logprob: -11.012845039367676
    7. 'len' → logprob: -11.262845039367676
    8. '-' → logprob: -11.387845039367676
    9. '```' → logprob: -11.762845039367676
    10. '
' → logprob: -12.387845039367676

Token 506: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05341581255197525
    2. '[idx' → logprob: -4.053415775299072
    3. '[' → logprob: -4.303415775299072
    4. '[len' → logprob: -4.428415775299072
    5. '][-' → logprob: -5.053415775299072
    6. '[-' → logprob: -6.553415775299072
    7. ']' → logprob: -7.678415775299072
    8. ' ][' → logprob: -8.55341625213623
    9. ')[' → logprob: -9.67841625213623
    10. 'total' → logprob: -9.80341625213623

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. '2' → logprob: -12.062516212463379
    3. 'idx' → logprob: -13.375016212463379
    4. '```' → logprob: -13.812516212463379
    5. '0' → logprob: -13.875016212463379
    6. '
' → logprob: -14.125016212463379
    7. ' ' → logprob: -14.250016212463379
    8. '   ' → logprob: -14.250016212463379
    9. '-' → logprob: -14.375016212463379
    10. '3' → logprob: -14.625016212463379

Token 508: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38091662526130676
    2. '[idx' → logprob: -1.3809165954589844
    3. '])' → logprob: -2.7559165954589844
    4. ' )' → logprob: -7.880916595458984
    5. ']' → logprob: -8.005916595458984
    6. ')%' → logprob: -8.005916595458984
    7. '[' → logprob: -8.255916595458984
    8. '   ' → logprob: -8.380916595458984
    9. '```' → logprob: -9.880916595458984
    10. '[])' → logprob: -10.130916595458984

Token 509: ' idx' (ID: 14016)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07712271064519882
    2. 'idx' → logprob: -2.702122688293457
    3. '2' → logprob: -6.077122688293457
    4. ' idx' → logprob: -6.202122688293457
    5. ']' → logprob: -7.452122688293457
    6. 'val' → logprob: -7.577122688293457
    7. '0' → logprob: -7.702122688293457
    8. ' ' → logprob: -8.077122688293457
    9. '-' → logprob: -8.452122688293457
    10. '3' → logprob: -9.202122688293457

Token 510: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2262740284204483
    2. ')' → logprob: -1.601274013519287
    3. '   ' → logprob: -8.351274490356445
    4. ' )' → logprob: -8.726274490356445
    5. ']' → logprob: -8.851274490356445
    6. ' ])' → logprob: -9.226274490356445
    7. '[idx' → logprob: -9.476274490356445
    8. '[' → logprob: -10.226274490356445
    9. '`)' → logprob: -10.976274490356445
    10. ')
' → logprob: -11.101274490356445

Token 511: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.060659270733594894
    2. ' %' → logprob: -3.185659170150757
    3. ')' → logprob: -4.810659408569336
    4. '<|end|>' → logprob: -4.935659408569336
    5. '
' → logprob: -7.060659408569336
    6. ' ' → logprob: -7.685659408569336
    7. ')%' → logprob: -7.810659408569336
    8. '```' → logprob: -9.185659408569336
    9. '<|end|>' → logprob: -9.685659408569336
    10. '   ' → logprob: -10.310659408569336

Token 512: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00862426683306694
    2. ' modulo' → logprob: -4.758624076843262
    3. 'module' → logprob: -11.883624076843262
    4. '(mod' → logprob: -13.133624076843262
    5. '```' → logprob: -15.258624076843262
    6. '	mod' → logprob: -15.758624076843262
    7. 'mo' → logprob: -15.883624076843262
    8. 'modo' → logprob: -16.258625030517578
    9. 'modifier' → logprob: -17.633625030517578
    10. '999' → logprob: -17.633625030517578

Token 513: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0006327360169962049
    2. 'value' → logprob: -7.3756327629089355
    3. 'mod' → logprob: -12.250632286071777
    4. '_VALUE' → logprob: -15.125632286071777
    5. ' modulo' → logprob: -15.125632286071777
    6. 'Value' → logprob: -15.875632286071777
    7. 'module' → logprob: -15.875632286071777
    8. '```' → logprob: -16.500633239746094
    9. '_' → logprob: -16.750633239746094
    10. ' value' → logprob: -16.750633239746094

Token 514: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27818042039871216
    2. ']' → logprob: -2.0281803607940674
    3. ' ' → logprob: -2.6531803607940674
    4. ')' → logprob: -3.6531803607940674
    5. '<|end|>' → logprob: -5.4031805992126465
    6. '```' → logprob: -6.1531805992126465
    7. '[
' → logprob: -6.2781805992126465
    8. ' ]' → logprob: -6.6531805992126465
    9. '(' → logprob: -6.6531805992126465
    10. '#' → logprob: -7.2781805992126465

Token 516: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.12695057690143585
    2. '(' → logprob: -2.12695050239563
    3. '(valid' → logprob: -11.00195026397705
    4. '()' → logprob: -13.00195026397705
    5. 'final' → logprob: -13.12695026397705
    6. '(f' → logprob: -14.62695026397705
    7. ' (' → logprob: -15.12695026397705
    8. '(
' → logprob: -15.25195026397705
    9. '((' → logprob: -15.75195026397705
    10. '(fin' → logprob: -16.251951217651367

Token 517: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.0006355931982398033
    2. '_' → logprob: -8.250635147094727
    3. ')' → logprob: -8.875635147094727
    4. '_)' → logprob: -9.000635147094727
    5. 'answer' → logprob: -9.875635147094727
    6. 'Answer' → logprob: -10.625635147094727
    7. '_ans' → logprob: -11.500635147094727
    8. ')_' → logprob: -11.500635147094727
    9. '_value' → logprob: -11.750635147094727
    10. '_answers' → logprob: -13.250635147094727

Token 518: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -12.875003814697266
    3. '))' → logprob: -14.250003814697266
    4. ')
' → logprob: -15.125003814697266
    5. ')`' → logprob: -15.125003814697266
    6. '())' → logprob: -15.625003814697266
    7. '()' → logprob: -16.750003814697266
    8. '(' → logprob: -16.750003814697266
    9. '[' → logprob: -17.500003814697266
    10. ')}' → logprob: -18.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 516
Tokens correctement prédits (1ère position, stricte): 269
Tokens correctement prédits (1ère position, avec adaptation): 278
Tokens correctement prédits (top 10): 455
Précision stricte (1ère position): 52.13%
Précision adaptée (1ère position): 53.88%
Précision (top 10): 88.18%
================================================================================
