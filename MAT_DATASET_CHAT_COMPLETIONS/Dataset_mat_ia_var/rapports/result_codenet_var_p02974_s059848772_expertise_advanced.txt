================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import partial
from itertools import product

sys.setrecursionlimit(2**31 - 1)
INF = float('inf')
MOD = 10**9 + 7
input = sys.stdin.readline

def resolve():
    n, K = map(int, input().split())
    # Using only two layers to optimize space: dp[cur][j][k]
    dp = [ [ [0]*(K+2701) for _ in range(n+2) ] for _ in range(2) ]
    dp[0][0][0] = 1
    for i in range(n):
        cur, nxt = i % 2, (i+1) % 2
        for row in dp[nxt]:  # Clear next state
            row[:] = [0] * len(row)
        for j, k in product(range(i+1), range(K+1)):
            val = dp[cur][j][k]
            if not val:
                continue
            nj = j
            nk = k + 2*j
            add = (2*j+1)*val % MOD
            if nk <= K:
                dp[nxt][nj][nk] = (dp[nxt][nj][nk] + add) % MOD
            nj = j+1
            nk = k + 2*nj
            if nk <= K:
                dp[nxt][nj][nk] = (dp[nxt][nj][nk] + val) % MOD
            if j:
                nj = j-1
                nk = k + 2*nj
                add = j*j*val % MOD
                if nk <= K:
                    dp[nxt][nj][nk] = (dp[nxt][nj][nk] + add) % MOD
    print(dp[n%2][0][K])
resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11625275760889053
    2. 'import' → logprob: -2.2412526607513428
    3. '.' → logprob: -5.991252899169922
    4. ' ' → logprob: -7.366252899169922
    5. '_import' → logprob: -9.116252899169922
    6. '	import' → logprob: -10.116252899169922
    7. '_' → logprob: -10.366252899169922
    8. ' .' → logprob: -10.366252899169922
    9. '.import' → logprob: -10.491252899169922
    10. '```' → logprob: -10.741252899169922

Token 6: ' partial' (ID: 13664)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -1.0255804061889648
    2. 'wrap' → logprob: -1.2755804061889648
    3. 'partial' → logprob: -1.9005804061889648
    4. ' l' → logprob: -2.525580406188965
    5. ' partial' → logprob: -2.525580406188965
    6. 'l' → logprob: -3.525580406188965
    7. 'reduce' → logprob: -4.025580406188965
    8. ' reduce' → logprob: -5.525580406188965
    9. 'cmp' → logprob: -7.900580406188965
    10. 'cache' → logprob: -8.025580406188965

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6177314519882202
    2. '\' → logprob: -1.2427314519882202
    3. '.' → logprob: -2.9927315711975098
    4. '\n' → logprob: -3.2427315711975098
    5. '' → logprob: -4.11773157119751
    6. '```' → logprob: -4.24273157119751
    7. ' 

' → logprob: -4.49273157119751
    8. ',' → logprob: -4.86773157119751
    9. 'def' → logprob: -5.11773157119751
    10. '
' → logprob: -5.36773157119751

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5590270757675171
    2. '\' → logprob: -1.434027075767517
    3. '\n' → logprob: -2.9340271949768066
    4. ',' → logprob: -3.0590271949768066
    5. '```' → logprob: -3.3090271949768066
    6. 'def' → logprob: -4.184027194976807
    7. '[' → logprob: -5.184027194976807
    8. ' 

' → logprob: -5.184027194976807
    9. '.' → logprob: -5.434027194976807
    10. '`' → logprob: -5.809027194976807

Token 9: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.106164574623108
    2. ' os' → logprob: -1.481164574623108
    3. ' typing' → logprob: -1.606164574623108
    4. ' pathlib' → logprob: -2.7311644554138184
    5. ' ' → logprob: -3.2311644554138184
    6. ' itertools' → logprob: -3.4811644554138184
    7. ' math' → logprob: -3.7311644554138184
    8. ' tkinter' → logprob: -4.481164455413818
    9. ' concurrent' → logprob: -4.606164455413818
    10. ' threading' → logprob: -4.606164455413818

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07080896943807602
    2. 'import' → logprob: -2.6958088874816895
    3. '.' → logprob: -7.4458088874816895
    4. ' ' → logprob: -8.945809364318848
    5. '	import' → logprob: -9.445809364318848
    6. '<|end|>' → logprob: -10.820809364318848
    7. '_import' → logprob: -11.195809364318848
    8. '.import' → logprob: -11.320809364318848
    9. ' .' → logprob: -12.195809364318848
    10. '.im' → logprob: -12.695809364318848

Token 11: ' product' (ID: 1888)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9998607039451599
    2. 'chain' → logprob: -1.6248607635498047
    3. 'is' → logprob: -2.1248607635498047
    4. 'cycle' → logprob: -2.2498607635498047
    5. 'product' → logprob: -2.4998607635498047
    6. 'group' → logprob: -3.1248607635498047
    7. 'com' → logprob: -4.124860763549805
    8. ' is' → logprob: -4.249860763549805
    9. ' chain' → logprob: -4.374860763549805
    10. ' cycle' → logprob: -4.624860763549805

Token 12: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1216442584991455
    2. ',' → logprob: -1.2466442584991455
    3. '\n' → logprob: -1.4966442584991455
    4. '<|end|>' → logprob: -2.8716442584991455
    5. '\' → logprob: -3.1216442584991455
    6. '

' → logprob: -4.496644020080566
    7. '```' → logprob: -4.496644020080566
    8. '.' → logprob: -4.621644020080566
    9. '
' → logprob: -5.496644020080566
    10. '[' → logprob: -5.496644020080566

Token 13: 'sys' (ID: 17324)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3074733018875122
    2. '\n' → logprob: -1.4324733018875122
    3. 'import' → logprob: -1.4324733018875122
    4. '```' → logprob: -2.0574731826782227
    5. 'def' → logprob: -2.8074731826782227
    6. ',' → logprob: -3.8074731826782227
    7. '(' → logprob: -4.557473182678223
    8. '.' → logprob: -4.932473182678223
    9. 'from' → logprob: -5.557473182678223
    10. '[' → logprob: -5.557473182678223

Token 14: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5213274309644476e-05
    2. '.import' → logprob: -12.375015258789062
    3. ' .' → logprob: -13.125015258789062
    4. '.`' → logprob: -13.750015258789062
    5. '.user' → logprob: -13.875015258789062
    6. '."""' → logprob: -13.875015258789062
    7. '.exit' → logprob: -14.125015258789062
    8. '.readline' → logprob: -14.375015258789062
    9. '.​' → logprob: -15.000015258789062
    10. '<|end|>' → logprob: -15.250015258789062

Token 15: 'rec' (ID: 9285)
  Prédit: '_version'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_version' → logprob: -1.1879218816757202
    2. '_' → logprob: -1.6879218816757202
    3. '_limit' → logprob: -2.1879220008850098
    4. 'rec' → logprob: -2.6879220008850098
    5. '_trace' → logprob: -2.9379220008850098
    6. '_execution' → logprob: -3.0629220008850098
    7. '_encoding' → logprob: -3.0629220008850098
    8. '_int' → logprob: -3.8129220008850098
    9. '_ex' → logprob: -4.18792200088501
    10. ' _' → logprob: -4.31292200088501

Token 16: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007548353751190007
    2. 'urs' → logprob: -7.6257548332214355
    3. 'ursor' → logprob: -9.375755310058594
    4. 'limit' → logprob: -9.875755310058594
    5. 'ursive' → logprob: -10.500755310058594
    6. 'ur' → logprob: -10.500755310058594
    7. 'urse' → logprob: -10.625755310058594
    8. 'urf' → logprob: -11.000755310058594
    9. 'all' → logprob: -11.875755310058594
    10. 'urst' → logprob: -12.750755310058594

Token 17: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0006328551680780947
    2. '_limit' → logprob: -7.3756327629089355
    3. ' limit' → logprob: -12.375633239746094
    4. 'lim' → logprob: -13.750633239746094
    5. 'depth' → logprob: -15.000633239746094
    6. '-limit' → logprob: -15.375633239746094
    7. '-' → logprob: -16.125633239746094
    8. '_depth' → logprob: -16.375633239746094
    9. '_LIMIT' → logprob: -16.875633239746094
    10. '.limit' → logprob: -17.000633239746094

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. '(
' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.125001907348633
    4. '(

' → logprob: -15.000001907348633
    5. '((' → logprob: -15.625001907348633
    6. '()' → logprob: -16.875001907348633
    7. '```' → logprob: -17.000001907348633
    8. '(None' → logprob: -17.625001907348633
    9. '("("' → logprob: -17.875001907348633
    10. '('' → logprob: -18.125001907348633

Token 19: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.048709094524383545
    2. '100' → logprob: -3.0487091541290283
    3. '300' → logprob: -10.17370891571045
    4. '500' → logprob: -10.54870891571045
    5. ' ' → logprob: -10.67370891571045
    6. '1' → logprob: -11.42370891571045
    7. '999' → logprob: -11.42370891571045
    8. '200' → logprob: -11.92370891571045
    9. '400' → logprob: -13.42370891571045
    10. '250' → logprob: -14.04870891571045

Token 20: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2454763799905777
    2. '**' → logprob: -1.7454763650894165
    3. '147' → logprob: -3.995476484298706
    4. '00' → logprob: -4.495476245880127
    5. '10' → logprob: -5.245476245880127
    6. '0' → logprob: -5.370476245880127
    7. '50' → logprob: -6.495476245880127
    8. '500' → logprob: -7.495476245880127
    9. '100' → logprob: -7.870476245880127
    10. '048' → logprob: -8.370476722717285

Token 21: '31' (ID: 2911)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.2630605399608612
    2. '15' → logprob: -1.8880605697631836
    3. '20' → logprob: -2.6380605697631836
    4. '14' → logprob: -5.388060569763184
    5. '17' → logprob: -6.138060569763184
    6. '31' → logprob: -7.263060569763184
    7. '21' → logprob: -8.263060569763184
    8. '18' → logprob: -8.263060569763184
    9. '10' → logprob: -8.763060569763184
    10. '19' → logprob: -9.513060569763184

Token 22: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26632001996040344
    2. '-' → logprob: -1.516319990158081
    3. ' -' → logprob: -4.26632022857666
    4. ' )' → logprob: -8.51632022857666
    5. '-)' → logprob: -10.64132022857666
    6. '))' → logprob: -11.89132022857666
    7. '),' → logprob: -12.89132022857666
    8. '')' → logprob: -13.01632022857666
    9. '()' → logprob: -13.14132022857666
    10. '```' → logprob: -13.14132022857666

Token 23: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. ' ' → logprob: -10.87502670288086
    3. '2' → logprob: -12.00002670288086
    4. '-' → logprob: -14.87502670288086
    5. '```' → logprob: -15.12502670288086
    6. '11' → logprob: -15.50002670288086
    7. '12' → logprob: -16.25002670288086
    8. '9' → logprob: -16.62502670288086
    9. ')' → logprob: -16.75002670288086
    10. '7' → logprob: -17.06252670288086

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '2' → logprob: -12.125007629394531
    3. '-' → logprob: -13.375007629394531
    4. '```' → logprob: -16.12500762939453
    5. ' ' → logprob: -16.18750762939453
    6. '3' → logprob: -16.43750762939453
    7. '9' → logprob: -16.81250762939453
    8. '11' → logprob: -17.31250762939453
    9. '10' → logprob: -17.43750762939453
    10. '12' → logprob: -17.50000762939453

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '))' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')
' → logprob: -15.500001907348633
    5. '`)' → logprob: -17.500001907348633
    6. ')

' → logprob: -17.750001907348633
    7. ')))' → logprob: -17.750001907348633
    8. '）' → logprob: -17.875001907348633
    9. '()' → logprob: -18.500001907348633
    10. ' ' → logprob: -18.500001907348633

Token 26: 'INF' (ID: 64358)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.23412229120731354
    2. '
' → logprob: -1.6091222763061523
    3. '
' → logprob: -6.109122276306152
    4. '' → logprob: -6.734122276306152
    5. '\' → logprob: -6.859122276306152
    6. '\n' → logprob: -6.859122276306152
    7. '


' → logprob: -6.984122276306152
    8. 'def' → logprob: -7.484122276306152
    9. 'newline' → logprob: -7.734122276306152
    10. '

' → logprob: -7.984122276306152

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1013958752155304
    2. '=' → logprob: -2.351395845413208
    3. ')' → logprob: -6.851396083831787
    4. ',' → logprob: -10.101395606994629
    5. ' =)' → logprob: -10.351395606994629
    6. '_' → logprob: -10.851395606994629
    7. ' )' → logprob: -11.851395606994629
    8. '=int' → logprob: -12.101395606994629
    9. ')=' → logprob: -12.226395606994629
    10. '    ' → logprob: -13.101395606994629

Token 28: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5423778295516968
    2. ' ' → logprob: -1.1673778295516968
    3. 'float' → logprob: -2.6673779487609863
    4. '10' → logprob: -3.2923779487609863
    5. ' int' → logprob: -7.542377948760986
    6. 'int' → logprob: -9.042377471923828
    7. '1' → logprob: -9.167377471923828
    8. '100' → logprob: -11.167377471923828
    9. '2' → logprob: -11.417377471923828
    10. ' ' → logprob: -11.542377471923828

Token 29: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0001354824344161898
    2. '(' → logprob: -9.50013542175293
    3. '("' → logprob: -10.87513542175293
    4. '('+' → logprob: -11.25013542175293
    5. '32' → logprob: -11.37513542175293
    6. ''' → logprob: -11.50013542175293
    7. '('-' → logprob: -13.62513542175293
    8. '('.')' → logprob: -13.75013542175293
    9. 'inf' → logprob: -14.12513542175293
    10. '64' → logprob: -14.25013542175293

Token 30: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.10827809572219849
    2. ''' → logprob: -2.6082780361175537
    3. 'inf' → logprob: -3.7332780361175537
    4. '32' → logprob: -6.733278274536133
    5. ''i' → logprob: -7.108278274536133
    6. ''ins' → logprob: -7.733278274536133
    7. ''a' → logprob: -8.233278274536133
    8. ''information' → logprob: -8.358278274536133
    9. ''ex' → logprob: -8.608278274536133
    10. ''im' → logprob: -8.733278274536133

Token 31: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142386853694916
    2. '')' → logprob: -1.7014238834381104
    3. '")' → logprob: -12.826423645019531
    4. '()' → logprob: -13.451423645019531
    5. ''' → logprob: -13.701423645019531
    6. '')
' → logprob: -13.951423645019531
    7. '))' → logprob: -13.951423645019531
    8. ' )' → logprob: -14.326423645019531
    9. '('' → logprob: -14.576423645019531
    10. ')
' → logprob: -14.951423645019531

Token 32: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6415932774543762
    2. '

' → logprob: -1.0165932178497314
    3. 'def' → logprob: -2.3915932178497314
    4. '
' → logprob: -4.7665934562683105
    5. '\' → logprob: -5.3915934562683105
    6. '' → logprob: -6.2665934562683105
    7. '```' → logprob: -6.2665934562683105
    8. '\n' → logprob: -6.8915934562683105
    9. '#' → logprob: -7.6415934562683105
    10. 'class' → logprob: -7.6415934562683105

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04303869605064392
    2. '=' → logprob: -3.1680386066436768
    3. ' ' → logprob: -11.168038368225098
    4. ')' → logprob: -11.293038368225098
    5. ' =)' → logprob: -11.918038368225098
    6. ',' → logprob: -13.668038368225098
    7. ' )' → logprob: -13.668038368225098
    8. '_' → logprob: -14.043038368225098
    9. '<|end|>' → logprob: -14.043038368225098
    10. ' =
' → logprob: -14.293038368225098

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2040414810180664
    2. '10' → logprob: -1.7040414810180664
    3. '100' → logprob: -5.954041481018066
    4. '1' → logprob: -11.079041481018066
    5. '(' → logprob: -12.454041481018066
    6. 'int' → logprob: -12.829041481018066
    7. ' (' → logprob: -13.204041481018066
    8. '_' → logprob: -13.954041481018066
    9. ' ' → logprob: -14.204041481018066
    10. ')' → logprob: -14.454041481018066

Token 35: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008806014433503151
    2. '100' → logprob: -4.758806228637695
    3. ' ' → logprob: -9.258806228637695
    4. '998' → logprob: -9.383806228637695
    5. '1' → logprob: -11.383806228637695
    6. 'int' → logprob: -15.008806228637695
    7. '(' → logprob: -15.008806228637695
    8. '2' → logprob: -16.008806228637695
    9. '109' → logprob: -17.133806228637695
    10. '999' → logprob: -17.383806228637695

Token 36: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0007761581800878048
    2. '**' → logprob: -7.375776290893555
    3. '09' → logprob: -8.875776290893555
    4. ' ' → logprob: -12.250776290893555
    5. '7' → logprob: -12.875776290893555
    6. '```' → logprob: -14.250776290893555
    7. '10' → logprob: -14.750776290893555
    8. '0' → logprob: -14.875776290893555
    9. '07' → logprob: -15.500776290893555
    10. '6' → logprob: -15.750776290893555

Token 37: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -15.0
    3. '10' → logprob: -18.625
    4. '+' → logprob: -18.75
    5. '18' → logprob: -19.125
    6. '```' → logprob: -19.75
    7. ' ' → logprob: -20.0
    8. '９' → logprob: -20.625
    9. '19' → logprob: -20.875
    10. '15' → logprob: -21.5

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0029299184679985046
    2. ' +' → logprob: -5.8779296875
    3. '7' → logprob: -9.0029296875
    4. '＋' → logprob: -14.5029296875
    5. ' ' → logprob: -14.6279296875
    6. '+
' → logprob: -14.8779296875
    7. '```' → logprob: -15.8779296875
    8. ' plus' → logprob: -16.0029296875
    9. ' ' → logprob: -16.0029296875
    10. '+

' → logprob: -16.0029296875

Token 39: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -16.25
    3. '9' → logprob: -16.25
    4. ' ' → logprob: -16.5
    5. '```' → logprob: -19.25
    6. '07' → logprob: -20.375
    7. '   ' → logprob: -20.5
    8. '  ' → logprob: -21.875
    9. '

' → logprob: -21.9375
    10. '' → logprob: -22.25

Token 40: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.625
    3. ' ' → logprob: -19.5
    4. '9' → logprob: -19.75
    5. '```' → logprob: -20.0
    6. '

' → logprob: -20.875
    7. '７' → logprob: -21.125
    8. '07' → logprob: -21.375
    9. '   ' → logprob: -21.375
    10. '' → logprob: -21.6875

Token 41: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21430383622646332
    2. '
' → logprob: -1.8393038511276245
    3. 'def' → logprob: -4.214303970336914
    4. '\n' → logprob: -4.589303970336914
    5. '' → logprob: -6.089303970336914
    6. '
' → logprob: -6.089303970336914
    7. '```' → logprob: -6.464303970336914
    8. '\' → logprob: -6.589303970336914
    9. '#' → logprob: -7.214303970336914
    10. 'class' → logprob: -7.839303970336914

Token 42: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.15440325438976288
    2. '
' → logprob: -2.1544032096862793
    3. 'def' → logprob: -3.6544032096862793
    4. '
' → logprob: -7.654403209686279
    5. 'class' → logprob: -8.404403686523438
    6. '\n' → logprob: -8.904403686523438
    7. '```' → logprob: -8.904403686523438
    8. '' → logprob: -9.154403686523438
    9. '\' → logprob: -10.029403686523438
    10. '#' → logprob: -10.404403686523438

Token 43: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8194406628608704
    2. ' =' → logprob: -1.5694406032562256
    3. '(' → logprob: -1.9444406032562256
    4. '=' → logprob: -2.1944406032562256
    5. '_data' → logprob: -2.5694406032562256
    6. '_' → logprob: -4.569440841674805
    7. '.' → logprob: -6.069440841674805
    8. 'data' → logprob: -6.319440841674805
    9. '_line' → logprob: -7.319440841674805
    10. '_text' → logprob: -7.569440841674805

Token 44: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.554086446762085
    2. ' sys' → logprob: -0.929086446762085
    3. 'input' → logprob: -3.679086446762085
    4. 'sys' → logprob: -5.679086685180664
    5. ' lambda' → logprob: -6.554086685180664
    6. ' open' → logprob: -8.429086685180664
    7. ' raw' → logprob: -9.554086685180664
    8. ' ' → logprob: -10.179086685180664
    9. 'lambda' → logprob: -10.304086685180664
    10. 'open' → logprob: -11.804086685180664

Token 45: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003241881961002946
    2. '.readline' → logprob: -6.128242015838623
    3. '.' → logprob: -7.128242015838623
    4. '.stdout' → logprob: -9.003241539001465
    5. '.input' → logprob: -9.503241539001465
    6. ' .' → logprob: -11.128241539001465
    7. '.std' → logprob: -11.628241539001465
    8. '.setdefault' → logprob: -11.753241539001465
    9. '.read' → logprob: -12.253241539001465
    10. '.argv' → logprob: -12.378241539001465

Token 46: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006864601746201515
    2. '.read' → logprob: -7.8756866455078125
    3. 'read' → logprob: -8.750686645507812
    4. 'buffer' → logprob: -9.125686645507812
    5. '.buffer' → logprob: -10.250686645507812
    6. '.' → logprob: -13.250686645507812
    7. '.readlines' → logprob: -13.875686645507812
    8. ' readline' → logprob: -14.875686645507812
    9. 'reader' → logprob: -15.125686645507812
    10. '.Read' → logprob: -16.125686645507812

Token 47: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.676689863204956
    2. '
' → logprob: -1.426689863204956
    3. 'def' → logprob: -1.426689863204956
    4. '\n' → logprob: -5.301690101623535
    5. '
' → logprob: -5.926690101623535
    6. '\' → logprob: -7.051690101623535
    7. '```' → logprob: -7.176690101623535
    8. '' → logprob: -7.676690101623535
    9. '


' → logprob: -7.801690101623535
    10. '(' → logprob: -8.426690101623535

Token 48: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019596289843320847
    2. 'n' → logprob: -4.519596099853516
    3. 'class' → logprob: -4.894596099853516
    4. '
' → logprob: -7.519596099853516
    5. 'N' → logprob: -9.019596099853516
    6. '

' → logprob: -9.019596099853516
    7. '\' → logprob: -9.144596099853516
    8. 'd' → logprob: -10.269596099853516
    9. '#' → logprob: -10.269596099853516
    10. '\n' → logprob: -11.019596099853516

Token 49: ' resolve' (ID: 14062)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19516265392303467
    2. ' solve' → logprob: -2.445162773132324
    3. ' dfs' → logprob: -2.445162773132324
    4. ' dp' → logprob: -6.320162773132324
    5. ' calculate' → logprob: -7.820162773132324
    6. ' factorial' → logprob: -8.320162773132324
    7. ' f' → logprob: -8.695162773132324
    8. ' parse' → logprob: -9.445162773132324
    9. ' factor' → logprob: -9.445162773132324
    10. ' bfs' → logprob: -9.570162773132324

Token 50: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019626514986157417
    2. ' ():' → logprob: -6.251962661743164
    3. '()' → logprob: -10.501962661743164
    4. '(' → logprob: -12.626962661743164
    5. '():
' → logprob: -14.126962661743164
    6. ' ()' → logprob: -14.251962661743164
    7. '(line' → logprob: -14.876962661743164
    8. '(args' → logprob: -15.251962661743164
    9. '(a' → logprob: -15.751962661743164
    10. '(n' → logprob: -15.751962661743164

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020461321400944144
    2. '    
' → logprob: -9.500205039978027
    3. 'n' → logprob: -9.875205039978027
    4. '(n' → logprob: -10.750205039978027
    5. '\n' → logprob: -11.375205039978027
    6. '
' → logprob: -12.500205039978027
    7. '	n' → logprob: -12.500205039978027
    8. '<|end|>' → logprob: -12.500205039978027
    9. '   ' → logprob: -12.625205039978027
    10. ' ' → logprob: -12.625205039978027

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1452556848526001
    2. 'n' (adapté à ' n') → logprob: -2.1452555656433105
    3. ' N' → logprob: -4.6452555656433105
    4. ' ' → logprob: -5.3952555656433105
    5. ' A' → logprob: -7.1452555656433105
    6. '    ' → logprob: -7.3952555656433105
    7. ' H' → logprob: -7.3952555656433105
    8. ' h' → logprob: -7.5202555656433105
    9. '   ' → logprob: -7.7702555656433105
    10. 'N' → logprob: -8.020256042480469

Token 53: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24538610875606537
    2. ',' → logprob: -1.6203861236572266
    3. ' ,' → logprob: -4.120386123657227
    4. '=' → logprob: -5.745386123657227
    5. '=int' → logprob: -8.620386123657227
    6. ' ' → logprob: -8.995386123657227
    7. ',int' → logprob: -12.120386123657227
    8. ',m' → logprob: -12.370386123657227
    9. ',n' → logprob: -12.370386123657227
    10. ',a' → logprob: -12.495386123657227

Token 54: ' K' (ID: 658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7820432186126709
    2. 'k' → logprob: -1.032043218612671
    3. ' m' → logprob: -2.407043218612671
    4. ' k' → logprob: -2.532043218612671
    5. 'a' → logprob: -5.53204345703125
    6. 'x' → logprob: -6.15704345703125
    7. 'q' → logprob: -6.15704345703125
    8. 'w' → logprob: -6.65704345703125
    9. 'r' → logprob: -6.90704345703125
    10. 'd' → logprob: -7.15704345703125

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693114578723907
    2. '=' → logprob: -2.1269311904907227
    3. ',' → logprob: -13.001931190490723
    4. ' ' → logprob: -14.626931190490723
    5. '=input' → logprob: -15.751931190490723
    6. ')' → logprob: -16.001930236816406
    7. '＝' → logprob: -17.126930236816406
    8. '   ' → logprob: -17.251930236816406
    9. '  ' → logprob: -17.376930236816406
    10. '=int' → logprob: -17.751930236816406

Token 56: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.009823502041399479
    2. 'map' → logprob: -4.634823322296143
    3. ' input' → logprob: -9.7598237991333
    4. ' ' → logprob: -12.1348237991333
    5. 'input' → logprob: -12.5098237991333
    6. ' list' → logprob: -15.0098237991333
    7. '	map' → logprob: -15.7598237991333
    8. ' ' → logprob: -16.634822845458984
    9. '   ' → logprob: -17.384822845458984
    10. '  ' → logprob: -17.634822845458984

Token 57: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.100416399538517
    2. '(' → logprob: -2.350416421890259
    3. '(input' → logprob: -8.60041618347168
    4. '(str' → logprob: -11.72541618347168
    5. '(list' → logprob: -12.22541618347168
    6. '(map' → logprob: -12.35041618347168
    7. ' (' → logprob: -13.35041618347168
    8. '(lambda' → logprob: -13.60041618347168
    9. '(in' → logprob: -13.72541618347168
    10. '(eval' → logprob: -13.72541618347168

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14283844828605652
    2. ',input' → logprob: -2.017838478088379
    3. '(input' → logprob: -9.642838478088379
    4. 'input' → logprob: -10.017838478088379
    5. '(' → logprob: -10.392838478088379
    6. ' ,' → logprob: -11.267838478088379
    7. ',int' → logprob: -12.142838478088379
    8. ',(' → logprob: -13.392838478088379
    9. ' input' → logprob: -14.392838478088379
    10. '，' → logprob: -14.642838478088379

Token 59: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47408947348594666
    2. 'input' → logprob: -0.974089503288269
    3. ' ' → logprob: -11.974089622497559
    4. ')' → logprob: -12.974089622497559
    5. ',input' → logprob: -13.849089622497559
    6. ' sys' → logprob: -13.974089622497559
    7. '=input' → logprob: -14.349089622497559
    8. 'sys' → logprob: -15.099089622497559
    9. '(input' → logprob: -15.474089622497559
    10. '	input' → logprob: -15.849089622497559

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3557529857498594e-05
    2. '()' → logprob: -10.75002384185791
    3. '())' → logprob: -13.50002384185791
    4. ' ().' → logprob: -14.50002384185791
    5. '(' → logprob: -17.625022888183594
    6. '()
' → logprob: -18.000022888183594
    7. ')' → logprob: -18.375022888183594
    8. '.strip' → logprob: -19.375022888183594
    9. '.split' → logprob: -19.500022888183594
    10. '()))' → logprob: -19.625022888183594

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08027902245521545
    2. 'strip' → logprob: -2.5802791118621826
    3. 'rstrip' → logprob: -6.5802788734436035
    4. 'read' → logprob: -15.205279350280762
    5. '(split' → logprob: -15.455279350280762
    6. ' split' → logprob: -15.455279350280762
    7. '().' → logprob: -16.330278396606445
    8. ' strip' → logprob: -16.830278396606445
    9. ')' → logprob: -17.705278396606445
    10. 's' → logprob: -18.205278396606445

Token 62: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015048112720251083
    2. '())' → logprob: -4.265048027038574
    3. '()' → logprob: -7.515048027038574
    4. '))' → logprob: -8.015048027038574
    5. ')`' → logprob: -12.390048027038574
    6. ' )' → logprob: -13.765048027038574
    7. ')
' → logprob: -13.890048027038574
    8. '(' → logprob: -14.140048027038574
    9. ')")' → logprob: -14.640048027038574
    10. '),' → logprob: -14.765048027038574

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015006428584456444
    2. '    
' → logprob: -5.5150065422058105
    3. 'dp' → logprob: -6.2650065422058105
    4. '
' → logprob: -6.3900065422058105
    5. '    ' → logprob: -6.7650065422058105
    6. '<|end|>' → logprob: -6.7650065422058105
    7. 'n' → logprob: -7.2650065422058105
    8. 'a' → logprob: -7.5150065422058105
    9. 'tokens' → logprob: -7.7650065422058105
    10. ')' → logprob: -7.7650065422058105

Token 64: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40071171522140503
    2. 'A' → logprob: -2.02571177482605
    3. ' dp' → logprob: -2.77571177482605
    4. 'a' → logprob: -2.90071177482605
    5. 'S' → logprob: -4.150711536407471
    6. ' A' → logprob: -4.275711536407471
    7. 'H' → logprob: -5.150711536407471
    8. 'arr' → logprob: -5.150711536407471
    9. 'd' → logprob: -5.650711536407471
    10. ' a' → logprob: -5.775711536407471

Token 65: ' Using' (ID: 17511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36792829632759094
    2. '    ' → logprob: -2.7429282665252686
    3. 'data' → logprob: -3.6179282665252686
    4. 'dp' → logprob: -3.6179282665252686
    5. 'product' → logprob: -3.6179282665252686
    6. ' dp' → logprob: -3.8679282665252686
    7. ' product' → logprob: -3.9929282665252686
    8. 'for' → logprob: -4.242928504943848
    9. '_' → logprob: -4.617928504943848
    10. ' for' → logprob: -4.742928504943848

Token 66: ' only' (ID: 1606)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.8433861136436462
    2. ' dynamic' → logprob: -1.093386173248291
    3. 'product' → logprob: -2.343386173248291
    4. ' itertools' → logprob: -3.593386173248291
    5. ' partial' → logprob: -3.843386173248291
    6. ' combinations' → logprob: -3.843386173248291
    7. 'dynamic' → logprob: -4.718386173248291
    8. ' a' → logprob: -4.968386173248291
    9. 'pow' → logprob: -5.343386173248291
    10. ' pow' → logprob: -5.343386173248291

Token 67: ' two' (ID: 1920)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.94243323802948
    2. 'the' → logprob: -1.94243323802948
    3. 'K' → logprob: -2.4424333572387695
    4. 'a' → logprob: -2.8174333572387695
    5. 'numbers' → logprob: -2.9424333572387695
    6. 'one' → logprob: -3.1924333572387695
    7. ' one' → logprob: -3.3174333572387695
    8. ' a' → logprob: -3.3174333572387695
    9. ' K' → logprob: -3.4424333572387695
    10. 'digits' → logprob: -3.5674333572387695

Token 68: ' layers' (ID: 22119)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -1.1775270700454712
    2. ' arrays' → logprob: -1.4275270700454712
    3. ' lines' → logprob: -1.5525270700454712
    4. ' dp' → logprob: -2.5525269508361816
    5. 'dp' → logprob: -2.6775269508361816
    6. ' layers' → logprob: -4.552526950836182
    7. '_dp' → logprob: -4.552526950836182
    8. '-dimensional' → logprob: -4.802526950836182
    9. 'arrays' → logprob: -4.802526950836182
    10. ' ' → logprob: -5.302526950836182

Token 69: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16856075823307037
    2. ' dp' → logprob: -2.168560743331909
    3. '_dp' → logprob: -4.793560981750488
    4. ' of' → logprob: -4.918560981750488
    5. ' ' → logprob: -5.168560981750488
    6. '<|end|>' → logprob: -5.293560981750488
    7. ' for' → logprob: -5.793560981750488
    8. ',' → logprob: -6.043560981750488
    9. '    ' → logprob: -6.168560981750488
    10. 'DP' → logprob: -6.668560981750488

Token 70: ' optimize' (ID: 40398)
  Prédit: ' store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -1.1160879135131836
    2. ' save' → logprob: -1.2410879135131836
    3. 'dp' → logprob: -1.8660879135131836
    4. 'save' → logprob: -2.7410879135131836
    5. 'store' → logprob: -2.9910879135131836
    6. ' reduce' → logprob: -3.6160879135131836
    7. ' dp' → logprob: -3.8660879135131836
    8. 'reduce' → logprob: -4.616087913513184
    9. ' optimize' → logprob: -4.991087913513184
    10. ' represent' → logprob: -5.241087913513184

Token 71: ' space' (ID: 4918)
  Prédit: ' memory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memory' → logprob: -0.6446467638015747
    2. ' dp' → logprob: -1.1446467638015747
    3. 'dp' → logprob: -2.519646644592285
    4. ' space' → logprob: -3.019646644592285
    5. ' the' → logprob: -4.144646644592285
    6. ' DP' → logprob: -5.644646644592285
    7. 'memory' → logprob: -5.769646644592285
    8. 'DP' → logprob: -6.644646644592285
    9. ' for' → logprob: -7.019646644592285
    10. 'space' → logprob: -7.394646644592285

Token 72: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7429780960083008
    2. '
' → logprob: -1.3679780960083008
    3. '   ' → logprob: -1.9929780960083008
    4. ' dp' → logprob: -3.617978096008301
    5. '    ' → logprob: -3.867978096008301
    6. '_dp' → logprob: -4.242978096008301
    7. ',' → logprob: -4.367978096008301
    8. '    
' → logprob: -4.367978096008301
    9. '<|end|>' → logprob: -4.492978096008301
    10. ' for' → logprob: -4.867978096008301

Token 73: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.04870080202817917
    2. 'dp' → logprob: -3.5487008094787598
    3. ' prev' → logprob: -4.42370080947876
    4. '   ' → logprob: -5.54870080947876
    5. 'prev' → logprob: -6.92370080947876
    6. '    ' → logprob: -7.29870080947876
    7. '	dp' → logprob: -8.423700332641602
    8. ' DP' → logprob: -8.548700332641602
    9. ' previous' → logprob: -8.673700332641602
    10. '```' → logprob: -9.048700332641602

Token 74: '[cur' (ID: 81868)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009302830439992249
    2. '_prev' → logprob: -8.125929832458496
    3. '=' → logprob: -8.750929832458496
    4. '[' → logprob: -8.875929832458496
    5. '_current' → logprob: -9.750929832458496
    6. '_' → logprob: -9.750929832458496
    7. '0' → logprob: -9.875929832458496
    8. '```' → logprob: -10.125929832458496
    9. ' ' → logprob: -10.750929832458496
    10. ' =[' → logprob: -11.125929832458496

Token 75: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.114561676979065
    2. '][' → logprob: -1.114561676979065
    3. '],' → logprob: -1.364561676979065
    4. '_layer' → logprob: -2.8645615577697754
    5. '_idx' → logprob: -4.864561557769775
    6. '%' → logprob: -5.239561557769775
    7. ' ^' → logprob: -5.489561557769775
    8. ' ][' → logprob: -5.989561557769775
    9. ' ' → logprob: -6.114561557769775
    10. '   ' → logprob: -6.489561557769775

Token 76: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09078742563724518
    2. 'j' → logprob: -3.840787410736084
    3. 'K' → logprob: -4.340787410736084
    4. 'sum' → logprob: -4.465787410736084
    5. ']' → logprob: -4.715787410736084
    6. 's' → logprob: -4.965787410736084
    7. '0' → logprob: -5.090787410736084
    8. 'value' → logprob: -5.840787410736084
    9. 'v' → logprob: -5.965787410736084
    10. 'w' → logprob: -6.340787410736084

Token 77: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07129373401403427
    2. ' ]' → logprob: -2.821293830871582
    3. '][' → logprob: -5.321293830871582
    4. '+' → logprob: -6.571293830871582
    5. ' ][' → logprob: -6.821293830871582
    6. ']=' → logprob: -7.571293830871582
    7. ',' → logprob: -7.821293830871582
    8. '],' → logprob: -8.821293830871582
    9. ' +' → logprob: -8.946293830871582
    10. ' ' → logprob: -9.446293830871582

Token 78: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09761713445186615
    2. 'v' → logprob: -3.4726171493530273
    3. 's' → logprob: -4.472617149353027
    4. 'd' → logprob: -5.097617149353027
    5. 'l' → logprob: -5.097617149353027
    6. 'c' → logprob: -5.222617149353027
    7. 'i' → logprob: -5.347617149353027
    8. 'x' → logprob: -5.347617149353027
    9. 'm' → logprob: -5.472617149353027
    10. ']' → logprob: -5.597617149353027

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009989929385483265
    2. ' ]' → logprob: -4.6349897384643555
    3. ']=' → logprob: -9.134989738464355
    4. '],' → logprob: -10.009989738464355
    5. '][' → logprob: -10.509989738464355
    6. ' ' → logprob: -11.509989738464355
    7. '[' → logprob: -12.134989738464355
    8. '=' → logprob: -12.509989738464355
    9. '`]' → logprob: -12.634989738464355
    10. ']:' → logprob: -12.884989738464355

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033230306580662727
    2. '    ' → logprob: -6.753323078155518
    3. ' ' → logprob: -7.128323078155518
    4. ' =' → logprob: -8.25332260131836
    5. ',' → logprob: -8.50332260131836
    6. '_' → logprob: -8.87832260131836
    7. '=' → logprob: -9.00332260131836
    8. '  ' → logprob: -9.12832260131836
    9. '    
' → logprob: -9.12832260131836
    10. '[' → logprob: -9.25332260131836

Token 81: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7124113440513611
    2. 'dp' (adapté à ' dp') → logprob: -0.8374113440513611
    3. '   ' → logprob: -2.587411403656006
    4. ' ' → logprob: -7.587411403656006
    5. '    ' → logprob: -8.462410926818848
    6. '	dp' → logprob: -8.712410926818848
    7. '
' → logprob: -9.087410926818848
    8. '  ' → logprob: -9.587410926818848
    9. ' for' → logprob: -9.587410926818848
    10. '_dp' → logprob: -9.962410926818848

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06998512148857117
    2. '=' → logprob: -2.6949851512908936
    3. '[' → logprob: -10.694985389709473
    4. '=[' → logprob: -12.069985389709473
    5. ' ' → logprob: -12.694985389709473
    6. ']' → logprob: -12.944985389709473
    7. '=[]' → logprob: -12.944985389709473
    8. ')' → logprob: -13.069985389709473
    9. ' =[' → logprob: -13.194985389709473
    10. '  ' → logprob: -13.444985389709473

Token 83: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.012385912239551544
    2. '[' → logprob: -5.137385845184326
    3. ' [[[' → logprob: -5.137385845184326
    4. ' [[' → logprob: -7.637385845184326
    5. ' [' → logprob: -10.262386322021484
    6. '[{' → logprob: -10.262386322021484
    7. '[
' → logprob: -13.262386322021484
    8. '[(' → logprob: -13.637386322021484
    9. '[n' → logprob: -13.887386322021484
    10. '([[' → logprob: -14.012386322021484

Token 84: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.05519898235797882
    2. '[' → logprob: -2.930198907852173
    3. '0' → logprob: -9.305198669433594
    4. ' [[' → logprob: -9.430198669433594
    5. ' [[[' → logprob: -9.805198669433594
    6. '[-' → logprob: -10.930198669433594
    7. ' [' → logprob: -10.930198669433594
    8. '[(' → logprob: -11.180198669433594
    9. '[
' → logprob: -11.180198669433594
    10. ']' → logprob: -12.430198669433594

Token 85: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14217020571231842
    2. '[' → logprob: -2.3921701908111572
    3. 'INF' → logprob: -3.6421701908111572
    4. '-' → logprob: -5.142170429229736
    5. 'False' → logprob: -5.642170429229736
    6. '[-' → logprob: -5.892170429229736
    7. ' [' → logprob: -7.142170429229736
    8. '(' → logprob: -7.392170429229736
    9. ' ' → logprob: -8.267169952392578
    10. '[[' → logprob: -8.392169952392578

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09024875611066818
    2. 'INF' → logprob: -2.5902488231658936
    3. '-' → logprob: -4.8402485847473145
    4. 'False' → logprob: -6.0902485847473145
    5. '-inf' → logprob: -7.9652485847473145
    6. '-INF' → logprob: -7.9652485847473145
    7. ' ' → logprob: -8.965249061584473
    8. 'inf' → logprob: -8.965249061584473
    9. '(' → logprob: -9.715249061584473
    10. ' -' → logprob: -11.340249061584473

Token 87: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12237747013568878
    2. ' for' → logprob: -2.997377395629883
    3. ']*' → logprob: -3.497377395629883
    4. ']*(' → logprob: -3.997377395629883
    5. 'for' → logprob: -4.122377395629883
    6. ')' → logprob: -8.122377395629883
    7. ',' → logprob: -9.247377395629883
    8. ' ]' → logprob: -11.872377395629883
    9. ']+' → logprob: -12.497377395629883
    10. '	for' → logprob: -12.747377395629883

Token 88: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0027595835272222757
    2. '101' → logprob: -7.1277594566345215
    3. '(K' → logprob: -7.1277594566345215
    4. '201' → logprob: -8.62775993347168
    5. '11' → logprob: -9.12775993347168
    6. '51' → logprob: -9.12775993347168
    7. 'n' → logprob: -9.37775993347168
    8. '2' → logprob: -9.37775993347168
    9. '501' → logprob: -9.75275993347168
    10. '10' → logprob: -9.75275993347168

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021867838222533464
    2. ' +' → logprob: -6.1271867752075195
    3. ')' → logprob: -14.50218677520752
    4. ' ' → logprob: -14.87718677520752
    5. '+
' → logprob: -15.25218677520752
    6. '```' → logprob: -16.127187728881836
    7. '+n' → logprob: -16.252187728881836
    8. ')+' → logprob: -16.689687728881836
    9. '
' → logprob: -16.939687728881836
    10. '+k' → logprob: -16.939687728881836

Token 90: '270' (ID: 17820)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -10.500054359436035
    3. '2' → logprob: -11.125054359436035
    4. '0' → logprob: -12.375054359436035
    5. '   ' → logprob: -13.062554359436035
    6. '5' → logprob: -14.125054359436035
    7. '3' → logprob: -14.187554359436035
    8. ')' → logprob: -14.562554359436035
    9. '  ' → logprob: -14.562554359436035
    10. '```' → logprob: -14.625054359436035

Token 91: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056926727294921875
    2. '1' → logprob: -2.931926727294922
    3. '+' → logprob: -7.181926727294922
    4. '0' → logprob: -7.931926727294922
    5. '2' → logprob: -8.306926727294922
    6. '7' → logprob: -8.431926727294922
    7. '3' → logprob: -9.306926727294922
    8. '6' → logprob: -9.431926727294922
    9. '4' → logprob: -9.556926727294922
    10. '5' → logprob: -9.556926727294922

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001427538663847372
    2. ' )' → logprob: -9.000143051147461
    3. '+' → logprob: -12.125143051147461
    4. '7' → logprob: -13.625143051147461
    5. '6' → logprob: -13.750143051147461
    6. '0' → logprob: -13.750143051147461
    7. ')]' → logprob: -13.750143051147461
    8. ']' → logprob: -13.875143051147461
    9. '))' → logprob: -14.000143051147461
    10. ' ' → logprob: -14.125143051147461

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20156019926071167
    2. 'for' → logprob: -1.7015602588653564
    3. ')' → logprob: -9.326560020446777
    4. ' ' → logprob: -10.451560020446777
    5. ']' → logprob: -10.826560020446777
    6. '	for' → logprob: -13.076560020446777
    7. '   ' → logprob: -13.201560020446777
    8. '  ' → logprob: -14.201560020446777
    9. ' )' → logprob: -14.201560020446777
    10. '```' → logprob: -14.451560020446777

Token 94: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5132643580436707
    2. ' in' → logprob: -1.1382644176483154
    3. '_' → logprob: -2.7632644176483154
    4. ' j' → logprob: -4.388264179229736
    5. '<|end|>' → logprob: -6.013264179229736
    6. ' ' → logprob: -6.263264179229736
    7. 'in' → logprob: -8.263264656066895
    8. 'j' → logprob: -8.388264656066895
    9. '_j' → logprob: -8.638264656066895
    10. '<|end|>' → logprob: -8.888264656066895

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13408631086349487
    2. ' range' → logprob: -2.3840863704681396
    3. 'in' → logprob: -3.7590863704681396
    4. 'range' → logprob: -4.6340861320495605
    5. ' j' → logprob: -9.134086608886719
    6. '_' → logprob: -9.759086608886719
    7. ' ' → logprob: -9.884086608886719
    8. ' _' → logprob: -10.759086608886719
    9. ' xrange' → logprob: -11.384086608886719
    10. '_range' → logprob: -11.759086608886719

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14269736409187317
    2. 'range' → logprob: -2.017697334289551
    3. '(range' → logprob: -11.14269733428955
    4. '	range' → logprob: -12.51769733428955
    5. '```' → logprob: -14.01769733428955
    6. ' ' → logprob: -14.01769733428955
    7. ' xrange' → logprob: -14.39269733428955
    8. '   ' → logprob: -14.76769733428955
    9. ')' → logprob: -15.14269733428955
    10. ']' → logprob: -15.39269733428955

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04939930513501167
    2. '(' → logprob: -3.4243993759155273
    3. '(K' → logprob: -4.174399375915527
    4. '(N' → logprob: -9.424399375915527
    5. '(j' → logprob: -9.674399375915527
    6. '((' → logprob: -10.424399375915527
    7. '(k' → logprob: -10.799399375915527
    8. ' (' → logprob: -11.549399375915527
    9. '(M' → logprob: -11.799399375915527
    10. '(max' → logprob: -12.174399375915527

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01663997583091259
    2. ')' → logprob: -4.2666401863098145
    3. ')]' → logprob: -6.1416401863098145
    4. ' +' → logprob: -8.141639709472656
    5. ']' → logprob: -11.266639709472656
    6. ' )' → logprob: -11.766639709472656
    7. '```' → logprob: -13.266639709472656
    8. ')])' → logprob: -13.516639709472656
    9. '+)' → logprob: -13.641639709472656
    10. '*' → logprob: -14.641639709472656

Token 99: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006862253649160266
    2. '2' → logprob: -7.500686168670654
    3. ' ' → logprob: -9.000686645507812
    4. '3' → logprob: -12.375686645507812
    5. '270' → logprob: -14.250686645507812
    6. '271' → logprob: -14.313186645507812
    7. 'n' → logprob: -14.438186645507812
    8. '   ' → logprob: -14.938186645507812
    9. '5' → logprob: -14.938186645507812
    10. '4' → logprob: -15.188186645507812

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02640921249985695
    2. ')]' → logprob: -3.651409149169922
    3. ']' → logprob: -9.151409149169922
    4. ' )' → logprob: -14.026409149169922
    5. '))' → logprob: -14.276409149169922
    6. ')])' → logprob: -15.026409149169922
    7. '   ' → logprob: -15.151409149169922
    8. ' ]' → logprob: -16.776409149169922
    9. ' ' → logprob: -16.776409149169922
    10. '2' → logprob: -16.776409149169922

Token 101: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003066222125198692
    2. ' ]' → logprob: -8.125307083129883
    3. '   ' → logprob: -12.125307083129883
    4. '       ' → logprob: -13.000307083129883
    5. ')' → logprob: -13.250307083129883
    6. ' ' → logprob: -15.375307083129883
    7. ')]' → logprob: -15.500307083129883
    8. '           ' → logprob: -15.500307083129883
    9. '])' → logprob: -15.750307083129883
    10. '],' → logprob: -16.125307083129883

Token 102: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.041779689490795135
    2. 'for' → logprob: -3.6667797565460205
    3. '   ' → logprob: -4.791779518127441
    4. ']' → logprob: -5.041779518127441
    5. ' ' → logprob: -8.541779518127441
    6. ' ]' → logprob: -8.666779518127441
    7. '       ' → logprob: -9.541779518127441
    8. ',' → logprob: -10.166779518127441
    9. '	for' → logprob: -10.291779518127441
    10. '  ' → logprob: -10.666779518127441

Token 103: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0028989017009735107
    2. ' _' → logprob: -6.377898693084717
    3. 'range' → logprob: -6.877898693084717
    4. '_' → logprob: -9.127899169921875
    5. ' ' → logprob: -10.252899169921875
    6. '_range' → logprob: -11.627899169921875
    7. ' xrange' → logprob: -12.502899169921875
    8. '(range' → logprob: -12.752899169921875
    9. '	range' → logprob: -13.002899169921875
    10. '<|end|>' → logprob: -13.252899169921875

Token 104: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1823187619447708
    2. ' in' → logprob: -2.057318687438965
    3. '(' → logprob: -3.932318687438965
    4. 'range' → logprob: -4.307318687438965
    5. ' range' → logprob: -5.182318687438965
    6. ' ' → logprob: -9.807318687438965
    7. ' (' → logprob: -10.057318687438965
    8. '2' → logprob: -10.307318687438965
    9. '1' → logprob: -11.307318687438965
    10. '[' → logprob: -11.307318687438965

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10033466666936874
    2. ' range' → logprob: -2.350334644317627
    3. '2' → logprob: -9.600335121154785
    4. '(' → logprob: -10.350335121154785
    5. '[' → logprob: -10.600335121154785
    6. '(range' → logprob: -12.850335121154785
    7. '	range' → logprob: -14.600335121154785
    8. ' ' → logprob: -15.725335121154785
    9. ' xrange' → logprob: -16.60033416748047
    10. '   ' → logprob: -17.10033416748047

Token 106: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005514891818165779
    2. '(' → logprob: -5.255515098571777
    3. ' ' → logprob: -8.380515098571777
    4. '3' → logprob: -10.755515098571777
    5. 'n' → logprob: -11.880515098571777
    6. '=' → logprob: -12.630515098571777
    7. '(n' → logprob: -12.630515098571777
    8. ')' → logprob: -12.943015098571777
    9. '1' → logprob: -13.005515098571777
    10. '   ' → logprob: -13.443015098571777

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9160102712921798e-05
    2. '3' → logprob: -10.750029563903809
    3. ' ' → logprob: -13.125029563903809
    4. 'n' → logprob: -13.187529563903809
    5. '1' → logprob: -13.437529563903809
    6. '```' → logprob: -15.187529563903809
    7. ')' → logprob: -15.437529563903809
    8. '4' → logprob: -15.500029563903809
    9. '２' → logprob: -16.187528610229492
    10. 'two' → logprob: -16.250028610229492

Token 108: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12035701423883438
    2. ')' → logprob: -2.870357036590576
    3. ']' → logprob: -2.870357036590576
    4. ' ]' → logprob: -10.870356559753418
    5. ' )' → logprob: -11.870356559753418
    6. '])' → logprob: -12.495356559753418
    7. '))' → logprob: -13.620356559753418
    8. ')][' → logprob: -13.620356559753418
    9. ')])' → logprob: -13.745356559753418
    10. '}]' → logprob: -14.370356559753418

Token 109: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41577187180519104
    2. ')' → logprob: -1.6657718420028687
    3. ']' → logprob: -1.9157718420028687
    4. '<|end|>' → logprob: -6.290771961212158
    5. ' ' → logprob: -7.415771961212158
    6. ' ]' → logprob: -8.165771484375
    7. '<|end|>' → logprob: -8.165771484375
    8. '
' → logprob: -8.665771484375
    9. '  ' → logprob: -8.915771484375
    10. ')]' → logprob: -8.915771484375

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06934823840856552
    2. '<|end|>' → logprob: -3.6943483352661133
    3. '[' → logprob: -4.069348335266113
    4. ')' → logprob: -4.569348335266113
    5. ' ' → logprob: -5.069348335266113
    6. '\' → logprob: -6.319348335266113
    7. '    ' → logprob: -6.569348335266113
    8. ',' → logprob: -6.944348335266113
    9. '       ' → logprob: -7.069348335266113
    10. '  ' → logprob: -7.694348335266113

Token 111: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020369380712509155
    2. 'cur' → logprob: -4.395369529724121
    3. ' ' → logprob: -6.020369529724121
    4. ' cur' → logprob: -6.270369529724121
    5. '    ' → logprob: -7.020369529724121
    6. ' for' → logprob: -7.270369529724121
    7. ')' → logprob: -7.770369529724121
    8. '    
' → logprob: -7.895369529724121
    9. '  ' → logprob: -8.270369529724121
    10. 'for' → logprob: -8.770369529724121

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -14.750000953674316
    3. ' [' → logprob: -15.250000953674316
    4. '][' → logprob: -16.125001907348633
    5. '```' → logprob: -16.125001907348633
    6. '[cur' → logprob: -16.250001907348633
    7. '<|end|>' → logprob: -16.250001907348633
    8. '[
' → logprob: -17.375001907348633
    9. '[now' → logprob: -17.500001907348633
    10. '__[' → logprob: -17.500001907348633

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.817902173381299e-05
    2. '1' → logprob: -9.25009822845459
    3. ' ' → logprob: -13.37509822845459
    4. '[' → logprob: -16.687597274780273
    5. 's' → logprob: -17.000097274780273
    6. '۰' → logprob: -17.250097274780273
    7. '０' → logprob: -17.312597274780273
    8. '(' → logprob: -18.000097274780273
    9. ')' → logprob: -18.125097274780273
    10. '-' → logprob: -18.250097274780273

Token 114: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007444719667546451
    2. '[' → logprob: -7.375744342803955
    3. ']' → logprob: -9.125744819641113
    4. ' ][' → logprob: -11.875744819641113
    5. ')[' → logprob: -14.375744819641113
    6. '0' → logprob: -15.625744819641113
    7. '"][' → logprob: -15.750744819641113
    8. '1' → logprob: -15.875744819641113
    9. ')][' → logprob: -16.000743865966797
    10. '   ' → logprob: -16.063243865966797

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012522248551249504
    2. '1' → logprob: -4.387522220611572
    3. 'n' → logprob: -12.26252269744873
    4. '2' → logprob: -13.13752269744873
    5. '(' → logprob: -14.01252269744873
    6. ' ' → logprob: -14.32502269744873
    7. '-' → logprob: -14.51252269744873
    8. '][' → logprob: -14.82502269744873
    9. 's' → logprob: -15.01252269744873
    10. '[' → logprob: -15.32502269744873

Token 116: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002238013403257355
    2. '[' → logprob: -8.625224113464355
    3. ']' → logprob: -10.125224113464355
    4. ' ][' → logprob: -13.375224113464355
    5. '0' → logprob: -13.500224113464355
    6. '][-' → logprob: -14.750224113464355
    7. ''][' → logprob: -15.625224113464355
    8. '"][' → logprob: -15.750224113464355
    9. 'a' → logprob: -16.75022315979004
    10. '1' → logprob: -16.81272315979004

Token 117: '0' (ID: 15)
  Prédit: '135'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '135' → logprob: -0.24420329928398132
    2. '0' → logprob: -2.1192033290863037
    3. '270' → logprob: -2.4942033290863037
    4. '130' → logprob: -5.119203090667725
    5. '134' → logprob: -5.494203090667725
    6. 'K' → logprob: -6.619203090667725
    7. '100' → logprob: -7.494203090667725
    8. '136' → logprob: -7.869203090667725
    9. '271' → logprob: -8.494203567504883
    10. '540' → logprob: -8.619203567504883

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00033951509976759553
    2. ']=' → logprob: -8.00033950805664
    3. ' ]' → logprob: -12.87533950805664
    4. '=' → logprob: -13.75033950805664
    5. ']+=' → logprob: -15.25033950805664
    6. ' =' → logprob: -16.50033950805664
    7. '1' → logprob: -16.62533950805664
    8. '[' → logprob: -17.12533950805664
    9. '']' → logprob: -18.75033950805664
    10. ')' → logprob: -18.87533950805664

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. ']' → logprob: -16.751928329467773
    4. '[' → logprob: -17.001928329467773
    5. ']=' → logprob: -17.251928329467773
    6. '＝' → logprob: -17.251928329467773
    7. '1' → logprob: -18.251928329467773
    8. '=True' → logprob: -18.251928329467773
    9. ' ' → logprob: -18.751928329467773
    10. '```' → logprob: -19.126928329467773

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -19.5
    4. '１' → logprob: -20.25
    5. '   ' → logprob: -21.125
    6. '۱' → logprob: -21.125
    7. '(' → logprob: -21.9375
    8. '```' → logprob: -21.9375
    9. '{' → logprob: -22.3125
    10. '2' → logprob: -22.5625

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -17.875
    4. '１' → logprob: -19.25
    5. '{' → logprob: -19.9375
    6. '   ' → logprob: -20.1875
    7. '(' → logprob: -20.375
    8. 'True' → logprob: -20.5
    9. '۱' → logprob: -20.5
    10. '```' → logprob: -20.5625

Token 122: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03575340658426285
    2. ' ' → logprob: -4.53575325012207
    3. '<|end|>' → logprob: -4.66075325012207
    4. ' 
' → logprob: -5.66075325012207
    5. '    
' → logprob: -5.78575325012207
    6. '\n' → logprob: -6.16075325012207
    7. ')' → logprob: -6.66075325012207
    8. '    ' → logprob: -7.03575325012207
    9. '\' → logprob: -7.28575325012207
    10. '
' → logprob: -7.28575325012207

Token 124: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7213109135627747
    2. ' \' → logprob: -1.4713108539581299
    3. '   ' → logprob: -2.09631085395813
    4. '\n' → logprob: -2.72131085395813
    5. ' for' → logprob: -3.09631085395813
    6. ' 
' → logprob: -3.72131085395813
    7. '\' → logprob: -5.096311092376709
    8. '' → logprob: -5.846311092376709
    9. 'for' (adapté à ' for') → logprob: -5.846311092376709
    10. '\t' → logprob: -6.096311092376709

Token 125: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007708600256592035
    2. 'i' → logprob: -4.882708549499512
    3. ' _' → logprob: -11.007708549499512
    4. ' ' → logprob: -11.132708549499512
    5. ' cur' → logprob: -11.132708549499512
    6. '_i' → logprob: -11.507708549499512
    7. '_' → logprob: -11.757708549499512
    8. ' x' → logprob: -12.382708549499512
    9. '	i' → logprob: -12.382708549499512
    10. ' length' → logprob: -12.632708549499512

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0087038055062294
    2. 'in' → logprob: -4.758703708648682
    3. ' ' → logprob: -9.50870418548584
    4. ',' → logprob: -12.75870418548584
    5. '1' → logprob: -12.75870418548584
    6. '	in' → logprob: -13.00870418548584
    7. ' _' → logprob: -13.50870418548584
    8. '_' → logprob: -13.63370418548584
    9. '_in' → logprob: -13.63370418548584
    10. ' ,' → logprob: -14.50870418548584

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197541579604149
    2. ' range' → logprob: -2.8119754791259766
    3. '(range' → logprob: -12.061975479125977
    4. '	range' → logprob: -14.436975479125977
    5. ' ' → logprob: -14.936975479125977
    6. ')' → logprob: -15.561975479125977
    7. 'ange' → logprob: -15.686975479125977
    8. ' xrange' → logprob: -15.936975479125977
    9. ',' → logprob: -16.061975479125977
    10. '(' → logprob: -16.436975479125977

Token 128: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005610156804323196
    2. '(n' → logprob: -7.500561237335205
    3. '1' → logprob: -11.750560760498047
    4. 'n' → logprob: -16.750560760498047
    5. ',' → logprob: -16.875560760498047
    6. ' (' → logprob: -17.125560760498047
    7. ' ' → logprob: -18.250560760498047
    8. '(
' → logprob: -18.625560760498047
    9. ',n' → logprob: -18.750560760498047
    10. '   ' → logprob: -19.500560760498047

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012801569886505604
    2. '):
' → logprob: -4.637801647186279
    3. ' ):' → logprob: -6.012801647186279
    4. '+' → logprob: -7.637801647186279
    5. '1' → logprob: -9.887801170349121
    6. ' ' → logprob: -11.387801170349121
    7. ' ):
' → logprob: -11.512801170349121
    8. ',' → logprob: -11.762801170349121
    9. ':' → logprob: -11.887801170349121
    10. ')' → logprob: -11.887801170349121

Token 130: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7248523235321045
    2. '       ' → logprob: -1.2248523235321045
    3. '    ' → logprob: -1.9748523235321045
    4. '   ' → logprob: -3.2248523235321045
    5. '     
' → logprob: -4.599852561950684
    6. ',' → logprob: -5.099852561950684
    7. ' 
' → logprob: -5.474852561950684
    8. '        
' → logprob: -5.599852561950684
    9. ' for' → logprob: -5.599852561950684
    10. '	' → logprob: -5.974852561950684

Token 131: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.029506416991353035
    2. 'for' → logprob: -4.154506206512451
    3. ' cur' → logprob: -4.654506206512451
    4. ' for' → logprob: -6.154506206512451
    5. 'curr' → logprob: -7.279506206512451
    6. '   ' → logprob: -7.654506206512451
    7. 'c' → logprob: -8.15450668334961
    8. 'ci' → logprob: -9.77950668334961
    9. '       ' → logprob: -10.15450668334961
    10. ' ' → logprob: -10.27950668334961

Token 132: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48340585827827454
    2. ',' → logprob: -1.6084058284759521
    3. ' ,' → logprob: -1.8584058284759521
    4. ']' → logprob: -4.858406066894531
    5. '=' → logprob: -4.858406066894531
    6. ' ' → logprob: -5.358406066894531
    7. ' ^' → logprob: -5.983406066894531
    8. ')' → logprob: -6.858406066894531
    9. ' ^=' → logprob: -6.983406066894531
    10. ' ]' → logprob: -7.233406066894531

Token 133: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8303987383842468
    2. '1' → logprob: -1.3303987979888916
    3. ' nxt' → logprob: -1.9553987979888916
    4. 'cur' → logprob: -2.4553987979888916
    5. 'next' → logprob: -2.7053987979888916
    6. ' nex' → logprob: -6.2053985595703125
    7. 'nx' → logprob: -6.7053985595703125
    8. '(n' → logprob: -7.5803985595703125
    9. ' ' → logprob: -8.205398559570312
    10. 'new' → logprob: -8.205398559570312

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011050650849938393
    2. ' =' → logprob: -4.511050701141357
    3. '=i' → logprob: -12.7610502243042
    4. '＝' → logprob: -18.386051177978516
    5. '=
' → logprob: -18.761051177978516
    6. '=

' → logprob: -18.761051177978516
    7. '=}' → logprob: -19.386051177978516
    8. ',' → logprob: -19.386051177978516
    9. '=`' → logprob: -20.011051177978516
    10. '=n' → logprob: -20.011051177978516

Token 135: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10030986368656158
    2. ' i' → logprob: -2.3503098487854004
    3. '(i' → logprob: -9.600310325622559
    4. ' (' → logprob: -10.725310325622559
    5. '0' → logprob: -12.350310325622559
    6. ' ' → logprob: -12.475310325622559
    7. '   ' → logprob: -12.850310325622559
    8. '	i' → logprob: -13.975310325622559
    9. '(' → logprob: -14.475310325622559
    10. '    ' → logprob: -14.975310325622559

Token 136: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6392642259597778
    2. '%' → logprob: -0.7642642259597778
    3. ' ' → logprob: -5.264264106750488
    4. ',' → logprob: -6.889264106750488
    5. ' ' → logprob: -8.764264106750488
    6. ' ,' → logprob: -9.014264106750488
    7. ' &' → logprob: -9.764264106750488
    8. '
' → logprob: -10.139264106750488
    9. ' 
' → logprob: -10.389264106750488
    10. '&' → logprob: -10.514264106750488

Token 137: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -16.875001907348633
    4. '۲' → logprob: -19.375001907348633
    5. '   ' → logprob: -20.312501907348633
    6. '२' → logprob: -20.375001907348633
    7. '২' → logprob: -20.375001907348633
    8. '  ' → logprob: -20.875001907348633
    9. '２' → logprob: -20.937501907348633
    10. '``' → logprob: -21.562501907348633

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -16.0
    4. '۲' → logprob: -19.375
    5. '२' → logprob: -19.625
    6. '২' → logprob: -19.875
    7. '1' → logprob: -20.3125
    8. '...' → logprob: -20.75
    9. '   ' → logprob: -20.75
    10. '２' → logprob: -20.875

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006738811731338501
    2. ' ,' → logprob: -5.006738662719727
    3. '=' → logprob: -11.631738662719727
    4. ' =' → logprob: -11.881738662719727
    5. ',i' → logprob: -12.631738662719727
    6. ',n' → logprob: -13.756738662719727
    7. ' ' → logprob: -13.881738662719727
    8. ',
' → logprob: -14.006738662719727
    9. '       ' → logprob: -14.881738662719727
    10. '_,' → logprob: -15.131738662719727

Token 140: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1187981441617012
    2. '(cur' → logprob: -3.11879825592041
    3. ' (' → logprob: -3.24379825592041
    4. '(n' → logprob: -3.99379825592041
    5. '(' → logprob: -4.99379825592041
    6. '1' → logprob: -5.86879825592041
    7. '(ii' → logprob: -7.86879825592041
    8. '(iv' → logprob: -9.36879825592041
    9. '(not' → logprob: -9.74379825592041
    10. ' ' → logprob: -9.99379825592041

Token 141: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01159213948994875
    2. 'cur' → logprob: -4.636591911315918
    3. '(i' → logprob: -6.386591911315918
    4. '(cur' → logprob: -9.136591911315918
    5. ' i' → logprob: -10.636591911315918
    6. '1' → logprob: -11.261591911315918
    7. ' (' → logprob: -13.636591911315918
    8. ' cur' → logprob: -13.886591911315918
    9. '{i' → logprob: -14.511591911315918
    10. '(' → logprob: -14.636591911315918

Token 142: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2007811963558197
    2. ' +' → logprob: -1.950781226158142
    3. '%' → logprob: -3.3257811069488525
    4. ' %' → logprob: -5.575781345367432
    5. ' ' → logprob: -11.575780868530273
    6. '1' → logprob: -13.950780868530273
    7. '```' → logprob: -14.450780868530273
    8. ' ' → logprob: -14.700780868530273
    9. ' %+' → logprob: -15.575780868530273
    10. '+i' → logprob: -15.700780868530273

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -17.500001907348633
    4. '2' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '１' → logprob: -19.562501907348633
    7. '```' → logprob: -19.625001907348633
    8. '%i' → logprob: -20.187501907348633
    9. 'i' → logprob: -20.312501907348633
    10. '  ' → logprob: -20.437501907348633

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013511877041310072
    2. ')%' → logprob: -6.751351356506348
    3. '%' → logprob: -8.876351356506348
    4. ' )' → logprob: -10.126351356506348
    5. ' %' → logprob: -15.001351356506348
    6. '%)' → logprob: -15.251351356506348
    7. ']' → logprob: -15.626351356506348
    8. '```' → logprob: -15.876351356506348
    9. '）' → logprob: -16.37635040283203
    10. '   ' → logprob: -16.37635040283203

Token 145: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.11282464116811752
    2. ' %' → logprob: -2.2378246784210205
    3. ' ' → logprob: -13.737824440002441
    4. '()%' → logprob: -15.112824440002441
    5. ')' → logprob: -15.737824440002441
    6. '```' → logprob: -15.737824440002441
    7. ')%' → logprob: -15.862824440002441
    8. '%i' → logprob: -16.112825393676758
    9. 'import' → logprob: -16.862825393676758
    10. ' `%' → logprob: -16.987825393676758

Token 146: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.50004005432129
    4. '   ' → logprob: -16.81254005432129
    5. '۲' → logprob: -17.75004005432129
    6. 'import' → logprob: -18.18754005432129
    7. '`' → logprob: -18.31254005432129
    8. '  ' → logprob: -18.31254005432129
    9. '२' → logprob: -18.50004005432129
    10. '...' → logprob: -18.62504005432129

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '216' → logprob: -18.187501907348633
    4. '```' → logprob: -18.187501907348633
    5. '२' → logprob: -18.875001907348633
    6. '۲' → logprob: -18.875001907348633
    7. '２' → logprob: -19.375001907348633
    8. '230' → logprob: -19.437501907348633
    9. '210' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.687501907348633

Token 148: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05544396862387657
    2. '
' → logprob: -2.9304440021514893
    3. '<|end|>' → logprob: -8.18044376373291
    4. '        
' → logprob: -8.93044376373291
    5. '
' → logprob: -9.93044376373291
    6. ' for' → logprob: -10.55544376373291
    7. '  
' → logprob: -11.30544376373291
    8. '<|end|>' → logprob: -11.43044376373291
    9. 'for' → logprob: -12.05544376373291
    10. '' → logprob: -12.18044376373291

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005643534241244197
    2. '
' → logprob: -7.8755645751953125
    3. ' for' → logprob: -9.625564575195312
    4. '        
' → logprob: -9.875564575195312
    5. '<|end|>' → logprob: -10.500564575195312
    6. 'for' → logprob: -11.000564575195312
    7. '```' → logprob: -11.750564575195312
    8. '   ' → logprob: -12.500564575195312
    9. '  
' → logprob: -13.000564575195312
    10. ' 
' → logprob: -13.375564575195312

Token 150: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01861528865993023
    2. ' for' → logprob: -4.018615245819092
    3. '#' → logprob: -8.14361572265625
    4. '       ' → logprob: -8.76861572265625
    5. '   ' → logprob: -11.76861572265625
    6. ' #' → logprob: -12.26861572265625
    7. '```' → logprob: -13.01861572265625
    8. 'dp' → logprob: -13.51861572265625
    9. '        
' → logprob: -14.01861572265625
    10. '	for' → logprob: -14.39361572265625

Token 151: ' row' (ID: 5225)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0012711855815723538
    2. ' j' → logprob: -6.7512712478637695
    3. 'a' → logprob: -10.25127124786377
    4. 'k' → logprob: -10.62627124786377
    5. 'x' → logprob: -11.50127124786377
    6. 'used' → logprob: -12.12627124786377
    7. '_j' → logprob: -12.37627124786377
    8. 'num' → logprob: -12.50127124786377
    9. 'cnt' → logprob: -12.87627124786377
    10. 'v' → logprob: -13.37627124786377

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3519330620765686
    2. 'in' → logprob: -1.2269330024719238
    3. ',' → logprob: -6.226933002471924
    4. '[' → logprob: -6.976933002471924
    5. ' ' → logprob: -8.976933479309082
    6. ')' → logprob: -9.101933479309082
    7. ' ,' → logprob: -9.476933479309082
    8. '   ' → logprob: -9.976933479309082
    9. '0' → logprob: -10.226933479309082
    10. '+' → logprob: -11.101933479309082

Token 153: ' dp' (ID: 21546)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021886874455958605
    2. ' range' → logprob: -6.127188682556152
    3. ' ' → logprob: -14.002188682556152
    4. ')' → logprob: -14.252188682556152
    5. '   ' → logprob: -14.627188682556152
    6. 'dp' → logprob: -15.127188682556152
    7. '

' → logprob: -15.377188682556152
    8. '(range' → logprob: -15.502188682556152
    9. 'n' → logprob: -15.627188682556152
    10. '
' → logprob: -15.877188682556152

Token 154: '[n' (ID: 15433)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -6.034592388459714e-06
    2. 'cur' → logprob: -12.625005722045898
    3. '(cur' → logprob: -14.625005722045898
    4. '[' → logprob: -14.625005722045898
    5. '[curr' → logprob: -15.000005722045898
    6. '[current' → logprob: -15.250005722045898
    7. '<|end|>' → logprob: -15.625005722045898
    8. '[now' → logprob: -15.750005722045898
    9. '```' → logprob: -15.875005722045898
    10. '[
' → logprob: -16.1250057220459

Token 155: 'xt' (ID: 711)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0131254056468606
    2. 'cur' → logprob: -4.388125419616699
    3. ' cur' → logprob: -8.7631254196167
    4. '][' → logprob: -8.7631254196167
    5. '[' → logprob: -9.0131254196167
    6. '(cur' → logprob: -10.0131254196167
    7. ']' → logprob: -10.6381254196167
    8. '_cur' → logprob: -10.8881254196167
    9. 'ext' → logprob: -11.1381254196167
    10. 'ex' → logprob: -11.5131254196167

Token 156: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0896812230348587
    2. '][' → logprob: -2.9646811485290527
    3. ']' → logprob: -3.4646811485290527
    4. ']:
' → logprob: -6.964681148529053
    5. '[' → logprob: -7.464681148529053
    6. '[j' → logprob: -8.089681625366211
    7. ':' → logprob: -8.464681625366211
    8. ']):' → logprob: -9.464681625366211
    9. '][]' → logprob: -9.464681625366211
    10. ']][' → logprob: -9.589681625366211

Token 157: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12836356461048126
    2. ' for' → logprob: -2.253363609313965
    3. '           ' → logprob: -5.003363609313965
    4. '[:]' → logprob: -5.253363609313965
    5. '[' → logprob: -6.128363609313965
    6. '0' → logprob: -7.253363609313965
    7. ' ' → logprob: -8.378363609313965
    8. ' [' → logprob: -9.253363609313965
    9. '[row' → logprob: -10.003363609313965
    10. 'row' → logprob: -10.003363609313965

Token 158: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037971078418195248
    2. ' for' → logprob: -5.6287970542907715
    3. '           ' → logprob: -8.62879753112793
    4. '[' → logprob: -12.50379753112793
    5. ' ' → logprob: -12.62879753112793
    6. '[:]' → logprob: -13.25379753112793
    7. '   ' → logprob: -13.37879753112793
    8. '0' → logprob: -13.37879753112793
    9. '       ' → logprob: -13.50379753112793
    10. '	for' → logprob: -13.75379753112793

Token 159: ' Clear' (ID: 22550)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03886306285858154
    2. ' for' → logprob: -3.413863182067871
    3. 'row' → logprob: -5.413863182067871
    4. 'del' → logprob: -8.913863182067871
    5. ' row' → logprob: -9.288863182067871
    6. 'range' → logprob: -9.288863182067871
    7. '[row' → logprob: -9.288863182067871
    8. ' ' → logprob: -9.538863182067871
    9. '[:]' → logprob: -9.663863182067871
    10. '0' → logprob: -9.913863182067871

Token 160: ' next' (ID: 2613)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0809062272310257
    2. 'for' → logprob: -2.9559061527252197
    3. 'range' → logprob: -4.705906391143799
    4. 'r' → logprob: -4.830906391143799
    5. ' row' → logprob: -5.455906391143799
    6. ' for' → logprob: -7.080906391143799
    7. '[row' → logprob: -7.205906391143799
    8. '[j' → logprob: -7.455906391143799
    9. 'j' → logprob: -7.955906391143799
    10. '[' → logprob: -7.955906391143799

Token 161: ' state' (ID: 2608)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6698506474494934
    2. ' for' → logprob: -1.2948505878448486
    3. ':' → logprob: -2.2948505878448486
    4. '[:]' → logprob: -2.5448505878448486
    5. '           ' → logprob: -4.544850826263428
    6. ')' → logprob: -4.919850826263428
    7. ' ' → logprob: -5.294850826263428
    8. '):' → logprob: -5.919850826263428
    9. '[' → logprob: -5.919850826263428
    10. '       ' → logprob: -6.419850826263428

Token 162: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20629611611366272
    2. '[:]' → logprob: -1.9562960863113403
    3. 'for' → logprob: -4.081295967102051
    4. '           ' → logprob: -4.706295967102051
    5. '       ' → logprob: -4.831295967102051
    6. ' for' → logprob: -5.456295967102051
    7. '.clear' → logprob: -6.331295967102051
    8. ':
' → logprob: -7.081295967102051
    9. '=' → logprob: -7.331295967102051
    10. '[:' → logprob: -7.456295967102051

Token 163: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1427607387304306
    2. ' for' → logprob: -2.142760753631592
    3. '           ' → logprob: -4.392760753631592
    4. '       ' → logprob: -6.017760753631592
    5. '   ' → logprob: -7.767760753631592
    6. '	for' → logprob: -8.267760276794434
    7. '0' → logprob: -9.267760276794434
    8. ' ' → logprob: -9.892760276794434
    9. '	       ' → logprob: -10.892760276794434
    10. '	   ' → logprob: -11.142760276794434

Token 164: ' row' (ID: 5225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6286106983898208e-05
    2. ' for' → logprob: -11.250016212463379
    3. '           ' → logprob: -12.750016212463379
    4. '   ' → logprob: -16.125017166137695
    5. '            
' → logprob: -16.875017166137695
    6. 'row' (adapté à ' row') → logprob: -17.750017166137695
    7. '               ' → logprob: -17.750017166137695
    8. '	for' → logprob: -18.000017166137695
    9. '            ' → logprob: -18.500017166137695
    10. '
' → logprob: -18.875017166137695

Token 165: '[:]' (ID: 194237)
  Prédit: '.clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.437007874250412
    2. '[:]' → logprob: -1.0620079040527344
    3. '.fill' → logprob: -5.187007904052734
    4. '[' → logprob: -7.187007904052734
    5. '[:' → logprob: -7.687007904052734
    6. '=' → logprob: -7.687007904052734
    7. '.' → logprob: -8.437007904052734
    8. ':' → logprob: -8.437007904052734
    9. 'clear' → logprob: -8.562007904052734
    10. ' =' → logprob: -10.187007904052734

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00026884564431384206
    2. '=[' → logprob: -8.625268936157227
    3. ' =' → logprob: -9.375268936157227
    4. '[:]' → logprob: -13.125268936157227
    5. '[' → logprob: -13.625268936157227
    6. ']=' → logprob: -14.250268936157227
    7. '[:' → logprob: -16.125268936157227
    8. '=[]' → logprob: -16.375268936157227
    9. '0' → logprob: -16.500268936157227
    10. ')=' → logprob: -16.750268936157227

Token 167: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.754368223482743e-05
    2. '0' → logprob: -9.625067710876465
    3. ' [' → logprob: -13.625067710876465
    4. '([' → logprob: -15.125067710876465
    5. '(' → logprob: -17.25006675720215
    6. '{' → logprob: -18.12506675720215
    7. '\[' → logprob: -18.87506675720215
    8. ' ' → logprob: -19.12506675720215
    9. '[-' → logprob: -19.62506675720215
    10. '\' → logprob: -19.62506675720215

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -16.625
    4. '000' → logprob: -16.75
    5. '```' → logprob: -18.375
    6. '０' → logprob: -18.875
    7. '00' → logprob: -18.875
    8. '   ' → logprob: -18.875
    9. '٠' → logprob: -19.6875
    10. '০' → logprob: -19.6875

Token 169: ']' (ID: 60)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.013361389748752117
    2. ']' → logprob: -4.76336145401001
    3. ']*' → logprob: -5.51336145401001
    4. '*(' → logprob: -7.26336145401001
    5. '*' → logprob: -13.763360977172852
    6. ']+' → logprob: -14.013360977172852
    7. ')*(' → logprob: -15.638360977172852
    8. ' *' → logprob: -15.763360977172852
    9. '0' → logprob: -16.26336097717285
    10. ' for' → logprob: -16.38836097717285

Token 170: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.061306182295084
    2. '*(' → logprob: -3.9363062381744385
    3. '<|end|>' → logprob: -4.061305999755859
    4. ' *' → logprob: -4.561305999755859
    5. '*[' → logprob: -5.311305999755859
    6. ')' → logprob: -5.936305999755859
    7. '0' → logprob: -7.061305999755859
    8. ' for' → logprob: -7.436305999755859
    9. '[' → logprob: -7.561305999755859
    10. '```' → logprob: -7.811305999755859

Token 171: ' len' (ID: 4631)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.02954704500734806
    2. '(len' → logprob: -3.6545469760894775
    3. 'len' → logprob: -6.029547214508057
    4. '(' → logprob: -7.904547214508057
    5. ' (' → logprob: -8.279546737670898
    6. '((' → logprob: -8.779546737670898
    7. '(k' → logprob: -10.029546737670898
    8. '(Q' → logprob: -11.904546737670898
    9. ' len' → logprob: -12.529546737670898
    10. '(J' → logprob: -14.029546737670898

Token 172: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -9.960946772480384e-05
    2. 'row' → logprob: -9.250099182128906
    3. '(dp' → logprob: -12.750099182128906
    4. '(' → logprob: -14.875099182128906
    5. ' row' → logprob: -16.000099182128906
    6. '[row' → logprob: -16.375099182128906
    7. '=row' → logprob: -17.875099182128906
    8. '	row' → logprob: -18.375099182128906
    9. 'dp' → logprob: -18.375099182128906
    10. '(n' → logprob: -19.125099182128906

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011951648048125207
    2. '[' → logprob: -9.37511920928955
    3. '<|end|>' → logprob: -11.37511920928955
    4. ')
' → logprob: -11.50011920928955
    5. '[])' → logprob: -12.62511920928955
    6. ' )' → logprob: -12.75011920928955
    7. '       ' → logprob: -13.25011920928955
    8. '])' → logprob: -13.50011920928955
    9. '())' → logprob: -14.62511920928955
    10. ')]' → logprob: -14.75011920928955

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003546502848621458
    2. '<|end|>' → logprob: -8.250354766845703
    3. '   ' → logprob: -9.875354766845703
    4. ' for' → logprob: -10.875354766845703
    5. 'for' → logprob: -12.500354766845703
    6. ',' → logprob: -12.750354766845703
    7. '<|end|>' → logprob: -12.750354766845703
    8. '           ' → logprob: -13.000354766845703
    9. '
' → logprob: -13.125354766845703
    10. ')' → logprob: -13.125354766845703

Token 175: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7457908391952515
    2. 'for' (adapté à ' for') → logprob: -0.7457908391952515
    3. '       ' → logprob: -3.495790958404541
    4. '   ' → logprob: -3.870790958404541
    5. '	for' → logprob: -9.870790481567383
    6. ' ' → logprob: -10.745790481567383
    7. ')' → logprob: -11.495790481567383
    8. '  ' → logprob: -12.120790481567383
    9. ' ' → logprob: -12.120790481567383
    10. '```' → logprob: -12.370790481567383

Token 176: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4762499928474426
    2. ' j' → logprob: -0.9762499928474426
    3. 'i' → logprob: -7.976250171661377
    4. 'k' → logprob: -8.226249694824219
    5. ' i' → logprob: -8.226249694824219
    6. 'x' → logprob: -8.788749694824219
    7. ' x' → logprob: -8.913749694824219
    8. ' k' → logprob: -9.288749694824219
    9. 'a' → logprob: -9.663749694824219
    10. 'r' → logprob: -9.913749694824219

Token 177: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00038991993642412126
    2. 'in' → logprob: -7.87539005279541
    3. '<|end|>' → logprob: -12.00039005279541
    4. ' ' → logprob: -13.75039005279541
    5. ',' → logprob: -14.37539005279541
    6. 'range' → logprob: -14.62539005279541
    7. '0' → logprob: -14.87539005279541
    8. '	in' → logprob: -15.75039005279541
    9. '<|end|>' → logprob: -15.87539005279541
    10. 'In' → logprob: -16.000389099121094

Token 178: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.8312404155731201
    2. ' layer' → logprob: -2.08124041557312
    3. ' row' → logprob: -2.08124041557312
    4. ' dp' → logprob: -2.45624041557312
    5. ' arr' → logprob: -2.58124041557312
    6. 'dp' → logprob: -2.95624041557312
    7. 'row' → logprob: -3.20624041557312
    8. 'layer' → logprob: -3.20624041557312
    9. ' k' → logprob: -3.33124041557312
    10. 'arr' → logprob: -3.70624041557312

Token 179: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25655773282051086
    2. ' in' → logprob: -1.5065577030181885
    3. ',' → logprob: -5.381557941436768
    4. ',in' → logprob: -11.88155746459961
    5. '_in' → logprob: -13.00655746459961
    6. ' ,' → logprob: -13.13155746459961
    7. 'In' → logprob: -13.88155746459961
    8. '	in' → logprob: -14.25655746459961
    9. '```' → logprob: -14.25655746459961
    10. '[' → logprob: -14.38155746459961

Token 180: ' product' (ID: 1888)
  Prédit: ' enumerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.18590772151947021
    2. 'enumer' → logprob: -1.8109077215194702
    3. ' product' → logprob: -5.56090784072876
    4. 'product' → logprob: -6.68590784072876
    5. 'range' → logprob: -7.56090784072876
    6. ' range' → logprob: -7.68590784072876
    7. '((' → logprob: -10.560907363891602
    8. '[(' → logprob: -10.685907363891602
    9. '(product' → logprob: -12.060907363891602
    10. ' zip' → logprob: -12.185907363891602

Token 181: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -8.113290095934644e-05
    2. 'range' → logprob: -9.500081062316895
    3. '(' → logprob: -12.000081062316895
    4. ' range' → logprob: -17.12508201599121
    5. ' (' → logprob: -19.25008201599121
    6. '((' → logprob: -19.87508201599121
    7. '	range' → logprob: -20.62508201599121
    8. '(
' → logprob: -21.00008201599121
    9. '```' → logprob: -21.50008201599121
    10. '([' → logprob: -21.87508201599121

Token 182: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06235909461975098
    2. '(i' → logprob: -2.812359094619751
    3. '(' → logprob: -9.062358856201172
    4. 'n' → logprob: -9.312358856201172
    5. '(len' → logprob: -9.312358856201172
    6. '(j' → logprob: -9.937358856201172
    7. '((' → logprob: -10.937358856201172
    8. '(dp' → logprob: -11.312358856201172
    9. 'i' → logprob: -11.437358856201172
    10. ' (' → logprob: -13.187358856201172

Token 183: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002043748099822551
    2. ' +' → logprob: -8.500204086303711
    3. '+
' → logprob: -15.750204086303711
    4. '+n' → logprob: -16.00020408630371
    5. '```' → logprob: -16.25020408630371
    6. ' ' → logprob: -16.25020408630371
    7. '1' → logprob: -16.37520408630371
    8. '2' → logprob: -16.50020408630371
    9. '
' → logprob: -16.62520408630371
    10. ')+' → logprob: -16.62520408630371

Token 184: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3970905542373657
    2. '1' → logprob: -1.1470905542373657
    3. '+' → logprob: -4.772090435028076
    4. 'n' → logprob: -6.772090435028076
    5. ' ' → logprob: -8.022090911865234
    6. 'i' → logprob: -10.022090911865234
    7. '
' → logprob: -10.022090911865234
    8. '3' → logprob: -10.522090911865234
    9. ' n' → logprob: -10.772090911865234
    10. ' +' → logprob: -10.772090911865234

Token 185: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0058645629324018955
    2. '+' → logprob: -5.38086462020874
    3. ',' → logprob: -8.130864143371582
    4. '),
' → logprob: -8.380864143371582
    5. '1' → logprob: -9.005864143371582
    6. ' ' → logprob: -9.255864143371582
    7. ' ),' → logprob: -9.380864143371582
    8. ' +' → logprob: -9.505864143371582
    9. ')' → logprob: -9.630864143371582
    10. 'n' → logprob: -10.005864143371582

Token 186: ' range' (ID: 3352)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.021760402247309685
    2. 'range' → logprob: -3.8967604637145996
    3. ' K' → logprob: -7.7717604637146
    4. ' range' → logprob: -7.7717604637146
    5. 'len' → logprob: -9.271759986877441
    6. '270' → logprob: -10.021759986877441
    7. '(K' → logprob: -10.146759986877441
    8. '271' → logprob: -10.146759986877441
    9. '(' → logprob: -10.271759986877441
    10. '273' → logprob: -11.271759986877441

Token 187: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0023738660383969545
    2. '(' → logprob: -6.627373695373535
    3. 'K' → logprob: -7.252373695373535
    4. '(k' → logprob: -8.377373695373535
    5. '((' → logprob: -9.502373695373535
    6. '(len' → logprob: -11.752373695373535
    7. '(-' → logprob: -12.252373695373535
    8. '(i' → logprob: -12.752373695373535
    9. ' (' → logprob: -13.002373695373535
    10. '(j' → logprob: -13.377373695373535

Token 188: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005925900186412036
    2. ')):' → logprob: -8.125592231750488
    3. ' +' → logprob: -8.500592231750488
    4. '-' → logprob: -10.375592231750488
    5. '270' → logprob: -11.500592231750488
    6. '))' → logprob: -11.750592231750488
    7. ')):
' → logprob: -12.000592231750488
    8. '+
' → logprob: -12.375592231750488
    9. '):' → logprob: -12.375592231750488
    10. '271' → logprob: -12.375592231750488

Token 189: '1' (ID: 16)
  Prédit: '270'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.01301904208958149
    2. '1' → logprob: -4.63801908493042
    3. '271' → logprob: -5.76301908493042
    4. 'k' → logprob: -10.138018608093262
    5. ' ' → logprob: -10.638018608093262
    6. 'K' → logprob: -11.638018608093262
    7. '(' → logprob: -12.013018608093262
    8. 'i' → logprob: -12.200518608093262
    9. '701' → logprob: -12.638018608093262
    10. 'j' → logprob: -13.325518608093262

Token 190: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3128132224082947
    2. ')):' → logprob: -1.5628132820129395
    3. '):
' → logprob: -3.8128132820129395
    4. '+' → logprob: -3.9378132820129395
    5. '),' → logprob: -4.9378132820129395
    6. ')):
' → logprob: -5.0628132820129395
    7. ',' → logprob: -6.8128132820129395
    8. ' ):' → logprob: -7.1878132820129395
    9. '))' → logprob: -7.3128132820129395
    10. ')' → logprob: -8.312812805175781

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025575585663318634
    2. ':' → logprob: -3.900575637817383
    3. ',' → logprob: -6.525575637817383
    4. ' :' → logprob: -6.775575637817383
    5. '):' → logprob: -7.400575637817383
    6. '       ' → logprob: -7.650575637817383
    7. '               ' → logprob: -7.775575637817383
    8. ':
' → logprob: -8.525575637817383
    9. '<|end|>' → logprob: -8.775575637817383
    10. '            ' → logprob: -9.525575637817383

Token 192: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4837503433227539
    2. 'if' → logprob: -1.233750343322754
    3. '           ' → logprob: -2.483750343322754
    4. 'dp' → logprob: -5.358750343322754
    5. '               ' → logprob: -5.858750343322754
    6. ' dp' → logprob: -7.108750343322754
    7. 'v' → logprob: -9.608750343322754
    8. 'val' (adapté à ' val') → logprob: -9.608750343322754
    9. '                           ' → logprob: -9.983750343322754
    10. '                       ' → logprob: -9.983750343322754

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326448917388916
    2. '=' → logprob: -1.3132644891738892
    3. ')' → logprob: -14.563264846801758
    4. ' ' → logprob: -15.063264846801758
    5. ' ' → logprob: -15.063264846801758
    6. ']=' → logprob: -15.438264846801758
    7. ']' → logprob: -15.563264846801758
    8. ')=' → logprob: -15.563264846801758
    9. '+=' → logprob: -16.063264846801758
    10. ',' → logprob: -16.188264846801758

Token 194: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0067167943343520164
    2. ' dp' → logprob: -5.006716728210449
    3. '           ' → logprob: -13.88171672821045
    4. '	dp' → logprob: -15.13171672821045
    5. '               ' → logprob: -16.881717681884766
    6. '(dp' → logprob: -17.006717681884766
    7. ' ' → logprob: -17.756717681884766
    8. '   ' → logprob: -18.006717681884766
    9. '_dp' → logprob: -18.631717681884766
    10. ' ' → logprob: -19.006717681884766

Token 195: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.00033581978641450405
    2. 'cur' → logprob: -8.000335693359375
    3. '(cur' → logprob: -15.500335693359375
    4. ' cur' → logprob: -16.875335693359375
    5. '```' → logprob: -16.875335693359375
    6. '	cur' → logprob: -17.250335693359375
    7. '[' → logprob: -18.000335693359375
    8. '_cur' → logprob: -19.375335693359375
    9. '[
' → logprob: -19.500335693359375
    10. '.cur' → logprob: -19.750335693359375

Token 196: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5238150954246521
    2. '][' → logprob: -0.8988150954246521
    3. '[i' → logprob: -8.398815155029297
    4. '[' → logprob: -8.773815155029297
    5. ']' → logprob: -9.023815155029297
    6. ')[' → logprob: -9.273815155029297
    7. '[cur' → logprob: -10.773815155029297
    8. ' ][' → logprob: -11.273815155029297
    9. ' [' → logprob: -11.648815155029297
    10. '])' → logprob: -11.773815155029297

Token 197: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.013994814362377e-05
    2. ' j' → logprob: -10.00005054473877
    3. 'i' → logprob: -12.37505054473877
    4. '	j' → logprob: -15.75005054473877
    5. '[j' → logprob: -15.75005054473877
    6. '_j' → logprob: -16.625049591064453
    7. '```' → logprob: -17.125049591064453
    8. '$j' → logprob: -17.750049591064453
    9. 'k' → logprob: -18.000049591064453
    10. '   ' → logprob: -18.000049591064453

Token 198: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004294096026569605
    2. '[k' → logprob: -5.504293918609619
    3. 'k' → logprob: -8.629294395446777
    4. ' ][' → logprob: -11.129294395446777
    5. '[' → logprob: -11.629294395446777
    6. ']' → logprob: -12.129294395446777
    7. '"][' → logprob: -13.129294395446777
    8. ',k' → logprob: -13.754294395446777
    9. ' [' → logprob: -13.754294395446777
    10. ''][' → logprob: -14.379294395446777

Token 199: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.008129963040119e-06
    2. ' k' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.375003814697266
    4. '	k' → logprob: -18.000003814697266
    5. '[k' → logprob: -18.625003814697266
    6. '   ' → logprob: -18.750003814697266
    7. ']' → logprob: -19.125003814697266
    8. '{k' → logprob: -19.125003814697266
    9. '(k' → logprob: -19.750003814697266
    10. '  ' → logprob: -19.750003814697266

Token 200: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11786758154630661
    2. ']
' → logprob: -2.2428674697875977
    3. ')' → logprob: -5.992867469787598
    4. '])' → logprob: -6.742867469787598
    5. '           ' → logprob: -7.617867469787598
    6. ')
' → logprob: -7.617867469787598
    7. ']%' → logprob: -8.867867469787598
    8. '])
' → logprob: -9.617867469787598
    9. 'if' → logprob: -9.867867469787598
    10. ']
' → logprob: -10.492867469787598

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001290236134082079
    2. '<|end|>' → logprob: -7.126290321350098
    3. ' if' → logprob: -8.501290321350098
    4. ' ' → logprob: -9.376290321350098
    5. '               ' → logprob: -10.001290321350098
    6. '       ' → logprob: -10.626290321350098
    7. 'if' → logprob: -11.126290321350098
    8. ')' → logprob: -11.251290321350098
    9. ' 
' → logprob: -11.251290321350098
    10. '<|end|>' → logprob: -11.251290321350098

Token 202: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008210873231291771
    2. ' if' → logprob: -5.0082106590271
    3. '           ' → logprob: -6.5082106590271
    4. 'for' → logprob: -13.758211135864258
    5. 'dp' → logprob: -14.008211135864258
    6. '               ' → logprob: -14.383211135864258
    7. 'If' → logprob: -15.758211135864258
    8. '                   ' → logprob: -15.883211135864258
    9. '          ' → logprob: -16.633211135864258
    10. '	if' → logprob: -16.758211135864258

Token 203: ' not' (ID: 625)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.06198505312204361
    2. 'val' → logprob: -2.8119850158691406
    3. ' not' → logprob: -11.06198501586914
    4. '	val' → logprob: -14.31198501586914
    5. 'not' → logprob: -14.56198501586914
    6. ' ' → logprob: -14.68698501586914
    7. '(val' → logprob: -16.31198501586914
    8. '_val' → logprob: -16.93698501586914
    9. '[val' → logprob: -17.06198501586914
    10. ',val' → logprob: -17.81198501586914

Token 204: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06994476169347763
    2. ' val' → logprob: -2.6949448585510254
    3. '	val' → logprob: -12.569944381713867
    4. '_val' → logprob: -13.194944381713867
    5. '(val' → logprob: -13.569944381713867
    6. '[val' → logprob: -14.694944381713867
    7. '.val' → logprob: -15.319944381713867
    8. '
' → logprob: -15.319944381713867
    9. ',val' → logprob: -15.569944381713867
    10. ' ' → logprob: -15.819944381713867

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032366468803957105
    2. ':
' → logprob: -8.375323295593262
    3. ':return' → logprob: -9.625323295593262
    4. ' :' → logprob: -11.375323295593262
    5. '):' → logprob: -12.125323295593262
    6. ' continue' → logprob: -12.750323295593262
    7. '=' → logprob: -12.875323295593262
    8. 'continue' → logprob: -13.000323295593262
    9. ')' → logprob: -14.875323295593262
    10. '==' → logprob: -15.125323295593262

Token 206: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010949020273983479
    2. ' continue' → logprob: -4.63594913482666
    3. 'continue' → logprob: -6.76094913482666
    4. '           ' → logprob: -11.51094913482666
    5. ',' → logprob: -12.26094913482666
    6. '_continue' → logprob: -12.63594913482666
    7. '	continue' → logprob: -12.76094913482666
    8. ' for' → logprob: -13.38594913482666
    9. ' continues' → logprob: -13.51094913482666
    10. '                   ' → logprob: -13.51094913482666

Token 207: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.19693726301193237
    2. '               ' → logprob: -2.196937322616577
    3. 'continue' (adapté à ' continue') → logprob: -2.696937322616577
    4. '                   ' → logprob: -9.071937561035156
    5. '	continue' → logprob: -10.196937561035156
    6. '           ' → logprob: -10.696937561035156
    7. '_continue' → logprob: -11.071937561035156
    8. '   ' → logprob: -12.696937561035156
    9. '                       ' → logprob: -13.946937561035156
    10. ' continu' → logprob: -13.946937561035156

Token 208: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047132011502981186
    2. ' for' → logprob: -3.1721320152282715
    3. 'for' → logprob: -5.6721320152282715
    4. '       ' → logprob: -8.047131538391113
    5. '<|end|>' → logprob: -8.422131538391113
    6. '               ' → logprob: -9.922131538391113
    7. '            
' → logprob: -10.797131538391113
    8. '```' → logprob: -11.047131538391113
    9. ',' → logprob: -11.922131538391113
    10. '<|end|>' → logprob: -12.172131538391113

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04081975668668747
    2. ' for' → logprob: -3.2908196449279785
    3. 'for' → logprob: -7.0408196449279785
    4. '<|end|>' → logprob: -7.6658196449279785
    5. '            
' → logprob: -7.7908196449279785
    6. '       ' → logprob: -8.165820121765137
    7. '               ' → logprob: -8.665820121765137
    8. ' 
' → logprob: -9.040820121765137
    9. ',' → logprob: -9.415820121765137
    10. '            ' → logprob: -9.665820121765137

Token 210: ' nj' (ID: 8979)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2374330759048462
    2. 'for' → logprob: -1.6124330759048462
    3. '           ' → logprob: -4.487432956695557
    4. ' dp' → logprob: -7.737432956695557
    5. 'dp' → logprob: -8.362433433532715
    6. '            ' → logprob: -11.362433433532715
    7. '```' → logprob: -12.112433433532715
    8. '               ' → logprob: -12.862433433532715
    9. '       ' → logprob: -13.487433433532715
    10. '   ' → logprob: -13.487433433532715

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15686409175395966
    2. ' =' → logprob: -2.0318641662597656
    3. '=j' → logprob: -4.281864166259766
    4. ',' → logprob: -9.156864166259766
    5. ',j' → logprob: -10.156864166259766
    6. ')' → logprob: -10.281864166259766
    7. '=
' → logprob: -10.656864166259766
    8. '[j' → logprob: -10.781864166259766
    9. ']' → logprob: -12.156864166259766
    10. '=n' → logprob: -12.281864166259766

Token 212: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0028060602489858866
    2. ' j' → logprob: -5.877806186676025
    3. '           ' → logprob: -14.752805709838867
    4. '[j' → logprob: -15.127805709838867
    5. '	j' → logprob: -15.627805709838867
    6. '0' → logprob: -16.377805709838867
    7. '$j' → logprob: -16.377805709838867
    8. 'k' → logprob: -16.627805709838867
    9. '
' → logprob: -17.252805709838867
    10. '   ' → logprob: -17.627805709838867

Token 213: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04940032958984375
    2. ' +' → logprob: -3.1744003295898438
    3. '+j' → logprob: -5.299400329589844
    4. '           ' → logprob: -7.674400329589844
    5. '+
' → logprob: -8.424400329589844
    6. '+=' → logprob: -8.924400329589844
    7. '<|end|>' → logprob: -9.174400329589844
    8. '=' → logprob: -9.424400329589844
    9. ' +=' → logprob: -9.674400329589844
    10. '<|end|>' → logprob: -9.924400329589844

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7754483222961426
    2. '<|end|>' → logprob: -1.5254483222961426
    3. ' for' → logprob: -2.0254483222961426
    4. ',' → logprob: -2.6504483222961426
    5. '+' → logprob: -2.7754483222961426
    6. '
' → logprob: -4.025448322296143
    7. 'for' → logprob: -4.275448322296143
    8. ' if' → logprob: -5.525448322296143
    9. ')' → logprob: -5.900448322296143
    10. '<|end|>' → logprob: -6.150448322296143

Token 215: ' nk' (ID: 18437)
  Prédit: 'nk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' (adapté à ' nk') → logprob: -0.02553747594356537
    2. ' nk' → logprob: -5.150537490844727
    3. 'n' → logprob: -5.400537490844727
    4. 'for' → logprob: -5.525537490844727
    5. ',' → logprob: -6.025537490844727
    6. '           ' → logprob: -6.525537490844727
    7. 'nj' → logprob: -6.775537490844727
    8. 'next' → logprob: -7.400537490844727
    9. ',n' → logprob: -7.400537490844727
    10. '+' → logprob: -7.400537490844727

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16487078368663788
    2. ' =' → logprob: -2.1648707389831543
    3. '=k' → logprob: -3.7898707389831543
    4. '+k' → logprob: -4.664870738983154
    5. '+' → logprob: -5.539870738983154
    6. ' +' → logprob: -6.914870738983154
    7. '=
' → logprob: -9.414871215820312
    8. 'k' → logprob: -9.789871215820312
    9. '+=' → logprob: -10.664871215820312
    10. '[k' → logprob: -10.914871215820312

Token 217: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00018732868193183094
    2. ' k' → logprob: -8.625186920166016
    3. ' ' → logprob: -12.875186920166016
    4. '0' → logprob: -13.250186920166016
    5. '           ' → logprob: -13.875186920166016
    6. '1' → logprob: -15.625186920166016
    7. 'max' → logprob: -15.625186920166016
    8. '(k' → logprob: -15.750186920166016
    9. '          ' → logprob: -15.875186920166016
    10. '            ' → logprob: -16.000186920166016

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05945915728807449
    2. '<|end|>' → logprob: -3.6844592094421387
    3. ' +' → logprob: -3.9344592094421387
    4. '+n' → logprob: -6.059459209442139
    5. '<|end|>' → logprob: -6.059459209442139
    6. '+=' → logprob: -6.559459209442139
    7. '           ' → logprob: -6.684459209442139
    8. '+
' → logprob: -6.684459209442139
    9. ']' → logprob: -7.059459209442139
    10. ')' → logprob: -7.434459209442139

Token 219: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41623106598854065
    2. '(i' → logprob: -2.291231155395508
    3. '1' → logprob: -2.416231155395508
    4. 'j' → logprob: -3.291231155395508
    5. '0' → logprob: -3.416231155395508
    6. '(n' → logprob: -3.416231155395508
    7. '(' → logprob: -4.166231155395508
    8. '(j' → logprob: -4.791231155395508
    9. 'n' → logprob: -5.791231155395508
    10. 'a' → logprob: -6.041231155395508

Token 220: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.070231556892395
    2. 'j' → logprob: -1.320231556892395
    3. '1' → logprob: -1.570231556892395
    4. '0' → logprob: -2.3202314376831055
    5. 'val' → logprob: -3.9452314376831055
    6. '(i' → logprob: -3.9452314376831055
    7. '(n' → logprob: -4.1952314376831055
    8. 'nj' → logprob: -4.9452314376831055
    9. '(j' → logprob: -5.3202314376831055
    10. '(' → logprob: -5.6952314376831055

Token 221: '*j' (ID: 138193)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020681092515587807
    2. ' if' → logprob: -4.770680904388428
    3. '
' → logprob: -5.520680904388428
    4. '<|end|>' → logprob: -5.520680904388428
    5. 'if' → logprob: -6.520680904388428
    6. '               ' → logprob: -7.770680904388428
    7. '+' → logprob: -8.020681381225586
    8. ')' → logprob: -8.145681381225586
    9. '            
' → logprob: -8.645681381225586
    10. '<|end|>' → logprob: -8.770681381225586

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04263497143983841
    2. ' if' → logprob: -3.667634963989258
    3. '<|end|>' → logprob: -5.667634963989258
    4. 'if' → logprob: -5.792634963989258
    5. 'dp' → logprob: -5.792634963989258
    6. ' dp' → logprob: -6.292634963989258
    7. '               ' → logprob: -7.042634963989258
    8. '            
' → logprob: -7.542634963989258
    9. ')' → logprob: -7.667634963989258
    10. '            ' → logprob: -7.667634963989258

Token 224: ' add' (ID: 1147)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11137253046035767
    2. ' if' → logprob: -2.736372470855713
    3. 'dp' → logprob: -3.361372470855713
    4. '           ' → logprob: -5.486372470855713
    5. ' dp' → logprob: -6.611372470855713
    6. 'for' → logprob: -8.861372947692871
    7. 'while' → logprob: -9.111372947692871
    8. 'val' → logprob: -9.236372947692871
    9. '```' → logprob: -11.486372947692871
    10. '               ' → logprob: -11.611372947692871

Token 225: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.08995505422353745
    2. 'val' → logprob: -2.7149550914764404
    3. ' =' → logprob: -4.464954853057861
    4. ' val' → logprob: -6.214954853057861
    5. 'ed' → logprob: -6.339954853057861
    6. '=' → logprob: -6.464954853057861
    7. '   ' → logprob: -7.089954853057861
    8. 'ing' → logprob: -7.714954853057861
    9. '           ' → logprob: -7.714954853057861
    10. '_' → logprob: -8.46495532989502

Token 226: ' (' (ID: 350)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.25593045353889465
    2. ' val' → logprob: -1.7559304237365723
    3. '(val' → logprob: -3.0059304237365723
    4. ' (' → logprob: -6.880930423736572
    5. '           ' → logprob: -7.130930423736572
    6. 'dp' → logprob: -7.130930423736572
    7. ' dp' → logprob: -8.00593090057373
    8. '(' → logprob: -8.75593090057373
    9. '(dp' → logprob: -8.75593090057373
    10. '1' → logprob: -9.88093090057373

Token 227: '2' (ID: 17)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11569864302873611
    2. ' val' → logprob: -2.2406985759735107
    3. '(val' → logprob: -6.11569881439209
    4. 'dp' → logprob: -8.61569881439209
    5. '           ' → logprob: -8.99069881439209
    6. ' dp' → logprob: -9.11569881439209
    7. ' (' → logprob: -9.74069881439209
    8. '(' → logprob: -10.61569881439209
    9. '[val' → logprob: -10.74069881439209
    10. '(n' → logprob: -10.99069881439209

Token 228: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.5371110439300537
    2. ' *' → logprob: -1.4121110439300537
    3. '*' → logprob: -2.0371110439300537
    4. ')' → logprob: -3.7871110439300537
    5. '[j' → logprob: -5.037111282348633
    6. ' +' → logprob: -6.287111282348633
    7. ' )' → logprob: -6.412111282348633
    8. '+' → logprob: -6.537111282348633
    9. ',' → logprob: -6.787111282348633
    10. '+j' → logprob: -7.287111282348633

Token 229: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29150253534317017
    2. ' +' → logprob: -1.9165024757385254
    3. ')' → logprob: -2.4165024757385254
    4. ')+' → logprob: -5.041502475738525
    5. '-' → logprob: -5.291502475738525
    6. ' -' → logprob: -6.166502475738525
    7. '*' → logprob: -7.166502475738525
    8. ')%' → logprob: -7.791502475738525
    9. ')*' → logprob: -8.166502952575684
    10. '           ' → logprob: -8.291502952575684

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004661403596401215
    2. ' ' → logprob: -5.629661560058594
    3. '2' → logprob: -7.254661560058594
    4. '3' → logprob: -8.879661560058594
    5. ')' → logprob: -9.254661560058594
    6. '+' → logprob: -10.504661560058594
    7. '
' → logprob: -10.879661560058594
    8. ' )' → logprob: -11.504661560058594
    9. ' +' → logprob: -11.879661560058594
    10. '')' → logprob: -12.379661560058594

Token 231: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052554305642843246
    2. ')
' → logprob: -3.5525543689727783
    3. ')*' → logprob: -4.052554130554199
    4. '+' → logprob: -6.052554130554199
    5. '           ' → logprob: -6.802554130554199
    6. ' )' → logprob: -8.0525541305542
    7. '*' → logprob: -8.0525541305542
    8. ' +' → logprob: -8.4275541305542
    9. ')%' → logprob: -8.4275541305542
    10. ')*(' → logprob: -9.3025541305542

Token 232: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5560800433158875
    2. ' val' → logprob: -1.5560801029205322
    3. '(i' → logprob: -2.9310801029205322
    4. '(n' → logprob: -3.1810801029205322
    5. 'i' → logprob: -3.3060801029205322
    6. ' (' → logprob: -3.5560801029205322
    7. '(val' → logprob: -3.6810801029205322
    8. ' i' → logprob: -4.681079864501953
    9. '(' → logprob: -5.306079864501953
    10. '1' → logprob: -6.181079864501953

Token 233: ' %' (ID: 1851)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07219934463500977
    2. '%' → logprob: -3.4471993446350098
    3. '
' → logprob: -3.4471993446350098
    4. ' %' → logprob: -5.94719934463501
    5. ')' → logprob: -6.69719934463501
    6. '               ' → logprob: -7.07219934463501
    7. '            
' → logprob: -7.82219934463501
    8. '<|end|>' → logprob: -8.572198867797852
    9. '%n' → logprob: -8.822198867797852
    10. '%
' → logprob: -9.697198867797852

Token 234: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01814994215965271
    2. ' MOD' → logprob: -4.0181498527526855
    3. '_MOD' → logprob: -17.393150329589844
    4. '(M' → logprob: -17.893150329589844
    5. '.MOD' → logprob: -18.893150329589844
    6. '```' → logprob: -20.018150329589844
    7. '(Mod' → logprob: -20.393150329589844
    8. 'M' → logprob: -20.893150329589844
    9. 'MO' → logprob: -20.893150329589844
    10. ' ' → logprob: -20.893150329589844

Token 235: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009755381383001804
    2. '
' → logprob: -4.759755611419678
    3. ',' → logprob: -8.13475513458252
    4. '            
' → logprob: -8.25975513458252
    5. '<|end|>' → logprob: -8.63475513458252
    6. ')' → logprob: -8.88475513458252
    7. '               ' → logprob: -10.25975513458252
    8. ',
' → logprob: -10.25975513458252
    9. ' if' → logprob: -10.38475513458252
    10. '		' → logprob: -10.50975513458252

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05388853698968887
    2. '
' → logprob: -3.6788885593414307
    3. '<|end|>' → logprob: -3.9288885593414307
    4. '            
' → logprob: -6.553888320922852
    5. '\n' → logprob: -6.678888320922852
    6. ')' → logprob: -6.928888320922852
    7. '               ' → logprob: -7.303888320922852
    8. ' if' → logprob: -7.553888320922852
    9. '<|end|>' → logprob: -7.678888320922852
    10. '		' → logprob: -8.178888320922852

Token 237: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09194941818714142
    2. '           ' → logprob: -2.841949462890625
    3. ' dp' → logprob: -3.841949462890625
    4. 'if' (adapté à ' if') → logprob: -4.966949462890625
    5. ' if' → logprob: -7.091949462890625
    6. 'for' → logprob: -8.841949462890625
    7. '               ' → logprob: -9.966949462890625
    8. ' for' → logprob: -10.841949462890625
    9. '	dp' → logprob: -10.966949462890625
    10. '(dp' → logprob: -11.216949462890625

Token 238: ' nk' (ID: 18437)
  Prédit: ' nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nk' → logprob: -0.31022077798843384
    2. ' nj' → logprob: -1.810220718383789
    3. 'nk' → logprob: -2.560220718383789
    4. 'nj' → logprob: -3.810220718383789
    5. ' k' → logprob: -6.435220718383789
    6. 'k' → logprob: -7.435220718383789
    7. ' n' → logprob: -8.560220718383789
    8. 'n' → logprob: -8.560220718383789
    9. '   ' → logprob: -8.685220718383789
    10. ' ' → logprob: -8.935220718383789

Token 239: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28463226556777954
    2. '<=' → logprob: -1.4096322059631348
    3. ' <' → logprob: -5.909632205963135
    4. '<' → logprob: -7.409632205963135
    5. '<K' → logprob: -10.409632682800293
    6. '>=' → logprob: -10.784632682800293
    7. ' >=' → logprob: -10.784632682800293
    8. '[' → logprob: -11.034632682800293
    9. '```' → logprob: -11.159632682800293
    10. '+' → logprob: -11.284632682800293

Token 240: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001238004770129919
    2. ' K' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.250123977661133
    4. ' ' → logprob: -16.625123977661133
    5. '(K' → logprob: -17.125123977661133
    6. '	K' → logprob: -17.125123977661133
    7. ')' → logprob: -18.125123977661133
    8. '>K' → logprob: -18.250123977661133
    9. 'k' → logprob: -18.750123977661133
    10. ',K' → logprob: -18.750123977661133

Token 241: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3878494203090668
    2. ':' → logprob: -1.1378494501113892
    3. '               ' → logprob: -7.1378493309021
    4. '           ' → logprob: -9.637849807739258
    5. ' and' → logprob: -10.137849807739258
    6. '):
' → logprob: -10.512849807739258
    7. '[' → logprob: -11.137849807739258
    8. ':

' → logprob: -11.762849807739258
    9. ':
' → logprob: -11.887849807739258
    10. '                       ' → logprob: -12.387849807739258

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047690561041235924
    2. ' dp' → logprob: -8.625476837158203
    3. '<|end|>' → logprob: -9.250476837158203
    4. '           ' → logprob: -9.625476837158203
    5. '                   ' → logprob: -10.875476837158203
    6. '              ' → logprob: -11.000476837158203
    7. '                
' → logprob: -11.125476837158203
    8. '                ' → logprob: -11.250476837158203
    9. 'dp' → logprob: -11.625476837158203
    10. '```' → logprob: -11.875476837158203

Token 243: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.5760980248451233
    2. ' dp' → logprob: -0.8260980248451233
    3. '                   ' → logprob: -9.701098442077637
    4. '	dp' → logprob: -10.076098442077637
    5. '               ' → logprob: -10.451098442077637
    6. '(dp' → logprob: -10.701098442077637
    7. '_dp' → logprob: -13.826098442077637
    8. '                       ' → logprob: -13.951098442077637
    9. '.dp' → logprob: -14.076098442077637
    10. '```' → logprob: -14.701098442077637

Token 244: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0005255113355815411
    2. '[cur' → logprob: -7.75052547454834
    3. 'n' → logprob: -10.12552547454834
    4. '[' → logprob: -10.62552547454834
    5. '[next' → logprob: -11.12552547454834
    6. 'cur' → logprob: -11.50052547454834
    7. '```' → logprob: -12.62552547454834
    8. '   ' → logprob: -15.12552547454834
    9. '][' → logprob: -15.25052547454834
    10. '\[' → logprob: -15.37552547454834

Token 245: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.21076403558254242
    2. 'x' → logprob: -2.585763931274414
    3. '[cur' → logprob: -2.835763931274414
    4. 'n' → logprob: -4.085763931274414
    5. '[n' → logprob: -4.210763931274414
    6. 'ext' → logprob: -4.585763931274414
    7. '[' → logprob: -5.335763931274414
    8. 'cur' → logprob: -5.835763931274414
    9. '[next' → logprob: -5.960763931274414
    10. '][' → logprob: -6.085763931274414

Token 246: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5566069483757019
    2. '[n' → logprob: -1.4316070079803467
    3. '[j' → logprob: -1.6816070079803467
    4. '[' → logprob: -6.806606769561768
    5. 'nj' → logprob: -8.556607246398926
    6. ']' → logprob: -9.556607246398926
    7. '   ' → logprob: -9.806607246398926
    8. '           ' → logprob: -9.806607246398926
    9. ' ][' → logprob: -9.806607246398926
    10. ' [' → logprob: -9.931607246398926

Token 247: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0002249933750135824
    2. 'j' → logprob: -8.625225067138672
    3. '   ' → logprob: -10.750225067138672
    4. 'n' → logprob: -11.500225067138672
    5. ' nj' → logprob: -11.875225067138672
    6. 'nk' → logprob: -13.250225067138672
    7. '
' → logprob: -13.500225067138672
    8. 'jn' → logprob: -14.000225067138672
    9. '0' → logprob: -14.875225067138672
    10. 'ni' → logprob: -14.875225067138672

Token 248: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0037014971021562815
    2. '[n' → logprob: -6.253701686859131
    3. '[j' → logprob: -7.503701686859131
    4. 'nk' → logprob: -8.003701210021973
    5. '[k' → logprob: -8.378701210021973
    6. '[' → logprob: -8.503701210021973
    7. 'nj' → logprob: -8.878701210021973
    8. ']' → logprob: -9.503701210021973
    9. ' ][' → logprob: -10.003701210021973
    10. '           ' → logprob: -10.128701210021973

Token 249: 'nk' (ID: 55159)
  Prédit: 'nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -1.9361264946837764e-07
    2. ' nk' → logprob: -16.125
    3. '
' → logprob: -18.5
    4. '   ' → logprob: -19.375
    5. 'NK' → logprob: -20.125
    6. ']' → logprob: -21.0
    7. 'k' → logprob: -21.5
    8. 'n' → logprob: -21.625
    9. '```' → logprob: -21.625
    10. 'Nk' → logprob: -21.75

Token 250: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28460901975631714
    2. ']+=' → logprob: -1.534609079360962
    3. ']=(' → logprob: -4.159608840942383
    4. ']=' → logprob: -4.534608840942383
    5. '(' → logprob: -6.409608840942383
    6. '[' → logprob: -6.659608840942383
    7. '               ' → logprob: -6.909608840942383
    8. '+=' → logprob: -7.159608840942383
    9. '=' → logprob: -8.159608840942383
    10. '=(' → logprob: -8.284608840942383

Token 251: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1650526225566864
    2. '=' → logprob: -1.9150526523590088
    3. '=(' → logprob: -5.54005241394043
    4. ']+=' → logprob: -8.16505241394043
    5. '               ' → logprob: -8.66505241394043
    6. '(' → logprob: -8.66505241394043
    7. ' =' → logprob: -9.66505241394043
    8. '[' → logprob: -9.91505241394043
    9. '%=' → logprob: -10.16505241394043
    10. ' +=' → logprob: -10.79005241394043

Token 252: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.09069990366697311
    2. '(add' → logprob: -2.5906999111175537
    3. ' (' → logprob: -4.590699672698975
    4. '(val' → logprob: -6.715699672698975
    5. '(ans' → logprob: -9.090700149536133
    6. '(' → logprob: -9.215700149536133
    7. '(dep' → logprob: -10.715700149536133
    8. '(adj' → logprob: -11.090700149536133
    9. '(dd' → logprob: -11.215700149536133
    10. '(diff' → logprob: -11.465700149536133

Token 253: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.27099974633893e-05
    2. '(dp' → logprob: -11.625012397766113
    3. ' dp' → logprob: -12.625012397766113
    4. '               ' → logprob: -15.375012397766113
    5. '           ' → logprob: -16.62501335144043
    6. '                   ' → logprob: -17.12501335144043
    7. '	dp' → logprob: -17.12501335144043
    8. '              ' → logprob: -20.00001335144043
    9. '_dp' → logprob: -20.00001335144043
    10. '   ' → logprob: -20.12501335144043

Token 254: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00259539601393044
    2. 'n' → logprob: -6.0025954246521
    3. '```' → logprob: -10.252594947814941
    4. '[next' → logprob: -10.502594947814941
    5. '[' → logprob: -11.502594947814941
    6. '_n' → logprob: -11.627594947814941
    7. '<n' → logprob: -11.627594947814941
    8. '   ' → logprob: -12.377594947814941
    9. '	n' → logprob: -12.502594947814941
    10. 'def' → logprob: -12.877594947814941

Token 255: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -6.992775888647884e-05
    2. 'st' → logprob: -9.625069618225098
    3. '[' → logprob: -13.500069618225098
    4. '```' → logprob: -14.000069618225098
    5. '[n' → logprob: -14.250069618225098
    6. 't' → logprob: -15.750069618225098
    7. 'ext' → logprob: -15.875069618225098
    8. 'x' → logprob: -16.000070571899414
    9. '   ' → logprob: -16.250070571899414
    10. 'zt' → logprob: -16.750070571899414

Token 256: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5233982801437378
    2. '][' → logprob: -0.8983982801437378
    3. ')[' → logprob: -9.398398399353027
    4. 'n' → logprob: -10.648398399353027
    5. ' ][' → logprob: -10.648398399353027
    6. '<n' → logprob: -10.898398399353027
    7. ']' → logprob: -10.898398399353027
    8. '```' → logprob: -10.898398399353027
    9. '[' → logprob: -11.148398399353027
    10. '(n' → logprob: -11.273398399353027

Token 257: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.2549506723880768
    2. 'nk' → logprob: -1.5049506425857544
    3. 'n' → logprob: -6.004950523376465
    4. '[n' → logprob: -7.754950523376465
    5. 'k' → logprob: -10.879950523376465
    6. 'kj' → logprob: -11.254950523376465
    7. 'nz' → logprob: -11.379950523376465
    8. '(n' → logprob: -11.504950523376465
    9. 'nx' → logprob: -11.504950523376465
    10. 'j' → logprob: -11.754950523376465

Token 258: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002409542677924037
    2. '[n' → logprob: -6.1274094581604
    3. ']' → logprob: -9.252409934997559
    4. '[' → logprob: -9.877409934997559
    5. 'nj' → logprob: -10.752409934997559
    6. '       ' → logprob: -11.627409934997559
    7. ' ][' → logprob: -12.002409934997559
    8. '[j' → logprob: -12.252409934997559
    9. 'nk' → logprob: -12.252409934997559
    10. '+' → logprob: -12.377409934997559

Token 259: 'nk' (ID: 55159)
  Prédit: 'nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -0.007334718015044928
    2. 'nj' → logprob: -5.3823347091674805
    3. '[n' → logprob: -6.0073347091674805
    4. 'k' → logprob: -8.75733470916748
    5. 'n' → logprob: -10.00733470916748
    6. '[k' → logprob: -11.38233470916748
    7. 'kj' → logprob: -11.63233470916748
    8. '(n' → logprob: -11.75733470916748
    9. 'nz' → logprob: -12.63233470916748
    10. '
' → logprob: -12.63233470916748

Token 260: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740775227546692
    2. '+' → logprob: -0.9740775227546692
    3. '＋' → logprob: -15.974077224731445
    4. ']' → logprob: -16.724077224731445
    5. ']+' → logprob: -16.849077224731445
    6. ' ' → logprob: -16.974077224731445
    7. ' ' → logprob: -17.349077224731445
    8. ')' → logprob: -17.474077224731445
    9. '+c' → logprob: -17.474077224731445
    10. '+
' → logprob: -17.724077224731445

Token 261: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269282102584839
    2. ' +' → logprob: -2.1269283294677734
    3. '+n' → logprob: -17.751928329467773
    4. '+
' → logprob: -18.251928329467773
    5. '+d' → logprob: -18.376928329467773
    6. '＋' → logprob: -18.501928329467773
    7. '+k' → logprob: -18.751928329467773
    8. '+c' → logprob: -18.876928329467773
    9. ' ' → logprob: -19.251928329467773
    10. '+r' → logprob: -19.251928329467773

Token 262: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0031958934850990772
    2. ' add' → logprob: -5.753195762634277
    3. '           ' → logprob: -11.253195762634277
    4. '   ' → logprob: -12.878195762634277
    5. '               ' → logprob: -14.003195762634277
    6. '                   ' → logprob: -14.878195762634277
    7. '       ' → logprob: -14.878195762634277
    8. ' ' → logprob: -15.878195762634277
    9. '	add' → logprob: -16.003196716308594
    10. '(add' → logprob: -16.003196716308594

Token 263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032390307751484215
    2. ')%' → logprob: -8.250324249267578
    3. ' )' → logprob: -9.750324249267578
    4. '           ' → logprob: -12.875324249267578
    5. '       ' → logprob: -14.250324249267578
    6. '               ' → logprob: -14.625324249267578
    7. '                   ' → logprob: -14.875324249267578
    8. '   ' → logprob: -15.625324249267578
    9. '                       ' → logprob: -16.500324249267578
    10. '%' → logprob: -17.750324249267578

Token 264: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07013349235057831
    2. ' %' → logprob: -2.6951334476470947
    3. ')%' → logprob: -9.320133209228516
    4. ')' → logprob: -9.445133209228516
    5. '```' → logprob: -12.195133209228516
    6. '%n' → logprob: -12.570133209228516
    7. '%
' → logprob: -12.945133209228516
    8. '           ' → logprob: -13.070133209228516
    9. ']%' → logprob: -13.195133209228516
    10. '       ' → logprob: -13.320133209228516

Token 265: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.836499985889532e-05
    2. ' MOD' → logprob: -9.7500581741333
    3. 'MO' → logprob: -19.375059127807617
    4. '_MOD' → logprob: -21.000059127807617
    5. '.MOD' → logprob: -22.125059127807617
    6. '```' → logprob: -22.500059127807617
    7. 'M' → logprob: -23.125059127807617
    8. '   ' → logprob: -23.750059127807617
    9. ' ' → logprob: -24.000059127807617
    10. 'MODE' → logprob: -24.750059127807617

Token 266: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36029720306396484
    2. '\n' → logprob: -2.110297203063965
    3. '
' → logprob: -2.735297203063965
    4. '<|end|>' → logprob: -2.860297203063965
    5. '       ' → logprob: -3.985297203063965
    6. '               ' → logprob: -4.610297203063965
    7. '            
' → logprob: -4.860297203063965
    8. ')' → logprob: -5.735297203063965
    9. '          ' → logprob: -6.485297203063965
    10. '            ' → logprob: -6.485297203063965

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9048184156417847
    2. '<|end|>' → logprob: -1.6548184156417847
    3. '       ' → logprob: -2.529818534851074
    4. '            ' → logprob: -2.779818534851074
    5. ' ' → logprob: -3.154818534851074
    6. '\n' → logprob: -3.404818534851074
    7. ')' → logprob: -3.779818534851074
    8. '    ' → logprob: -3.779818534851074
    9. '        ' → logprob: -3.779818534851074
    10. ' 
' → logprob: -4.404818534851074

Token 268: ' nj' (ID: 8979)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.353548526763916
    2. ' for' → logprob: -1.978548526763916
    3. 'nj' (adapté à ' nj') → logprob: -2.728548526763916
    4. 'for' → logprob: -2.853548526763916
    5. ' nj' → logprob: -3.853548526763916
    6. '       ' → logprob: -5.228548526763916
    7. '               ' → logprob: -6.603548526763916
    8. '            ' → logprob: -6.728548526763916
    9. '+' → logprob: -6.728548526763916
    10. '            
' → logprob: -6.978548526763916

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39095059037208557
    2. ' =' → logprob: -1.7659505605697632
    3. '+=' → logprob: -2.1409506797790527
    4. ' +=' → logprob: -4.015950679779053
    5. '+' → logprob: -4.140950679779053
    6. '=j' → logprob: -7.640950679779053
    7. ' +' → logprob: -8.265950202941895
    8. '           ' → logprob: -9.390950202941895
    9. '=n' → logprob: -10.265950202941895
    10. '=
' → logprob: -10.390950202941895

Token 270: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.7146746763028204e-05
    2. ' j' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.62503719329834
    4. 'i' → logprob: -14.50003719329834
    5. ' ' → logprob: -17.000036239624023
    6. '           ' → logprob: -17.375036239624023
    7. '       ' → logprob: -17.625036239624023
    8. '	j' → logprob: -17.625036239624023
    9. '     ' → logprob: -18.750036239624023
    10. '    ' → logprob: -18.750036239624023

Token 271: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013545217225328088
    2. ' +' → logprob: -6.626354694366455
    3. '
' → logprob: -11.626354217529297
    4. '+j' → logprob: -11.626354217529297
    5. '+
' → logprob: -11.751354217529297
    6. '           ' → logprob: -13.751354217529297
    7. '+n' → logprob: -14.126354217529297
    8. '+k' → logprob: -14.626354217529297
    9. '```' → logprob: -15.126354217529297
    10. '+i' → logprob: -16.751354217529297

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015955790877342224
    2. ' ' → logprob: -8.75015926361084
    3. '
' → logprob: -14.75015926361084
    4. '   ' → logprob: -15.00015926361084
    5. '```' → logprob: -15.62515926361084
    6. '           ' → logprob: -16.375160217285156
    7. '0' → logprob: -16.625160217285156
    8. '+' → logprob: -18.062660217285156
    9. '       ' → logprob: -18.250160217285156
    10. '2' → logprob: -18.250160217285156

Token 273: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5925737023353577
    2. '<|end|>' → logprob: -0.8425737023353577
    3. ',' → logprob: -4.967573642730713
    4. ',n' → logprob: -5.467573642730713
    5. '<|end|>' → logprob: -6.217573642730713
    6. ',
' → logprob: -6.967573642730713
    7. ' nk' → logprob: -6.967573642730713
    8. 'nk' → logprob: -7.967573642730713
    9. '[n' → logprob: -7.967573642730713
    10. ',k' → logprob: -8.717574119567871

Token 274: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' nk' (ID: 18437)
  Prédit: 'nk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' (adapté à ' nk') → logprob: -0.002813432365655899
    2. '           ' → logprob: -6.377813339233398
    3. 'k' → logprob: -7.502813339233398
    4. ' nk' → logprob: -8.377813339233398
    5. 'nj' → logprob: -8.502813339233398
    6. '
' → logprob: -9.502813339233398
    7. 'if' → logprob: -10.502813339233398
    8. 'n' → logprob: -12.502813339233398
    9. '            
' → logprob: -12.752813339233398
    10. ',k' → logprob: -13.127813339233398

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410818934440613
    2. '=' → logprob: -0.9741082191467285
    3. '=k' → logprob: -10.72410774230957
    4. '           ' → logprob: -13.09910774230957
    5. ' +=' → logprob: -13.72410774230957
    6. ' ' → logprob: -13.84910774230957
    7. '+=' → logprob: -13.97410774230957
    8. '            ' → logprob: -14.22410774230957
    9. '```' → logprob: -14.34910774230957
    10. '=
' → logprob: -14.34910774230957

Token 277: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000627014203928411
    2. ' k' → logprob: -7.375627040863037
    3. '	k' → logprob: -16.375627517700195
    4. ' ' → logprob: -16.500627517700195
    5. '           ' → logprob: -16.750627517700195
    6. '{k' → logprob: -17.250627517700195
    7. 'K' → logprob: -17.750627517700195
    8. '<|end|>' → logprob: -17.875627517700195
    9. '=k' → logprob: -18.125627517700195
    10. ',k' → logprob: -18.250627517700195

Token 278: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.46844661235809326
    2. '+' → logprob: -1.0934466123580933
    3. ' +' → logprob: -3.343446731567383
    4. 'k' → logprob: -5.968446731567383
    5. '[k' → logprob: -7.468446731567383
    6. ' k' → logprob: -8.218446731567383
    7. '+j' → logprob: -9.718446731567383
    8. ',k' → logprob: -9.968446731567383
    9. '(k' → logprob: -10.593446731567383
    10. '[' → logprob: -11.093446731567383

Token 279: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1411612331867218
    2. '1' → logprob: -2.8911612033843994
    3. '0' → logprob: -3.5161612033843994
    4. 'j' → logprob: -3.5161612033843994
    5. '(' → logprob: -4.5161614418029785
    6. 'K' → logprob: -5.7661614418029785
    7. '3' → logprob: -6.6411614418029785
    8. 'i' → logprob: -7.8911614418029785
    9. ' ' → logprob: -8.76616096496582
    10. '(j' → logprob: -8.76616096496582

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.138397678732872
    2. '1' → logprob: -2.763397693634033
    3. '0' → logprob: -3.263397693634033
    4. '(' → logprob: -4.513397693634033
    5. 'j' → logprob: -5.013397693634033
    6. '3' → logprob: -5.763397693634033
    7. 'K' → logprob: -5.888397693634033
    8. 'i' → logprob: -5.888397693634033
    9. 'k' → logprob: -7.763397693634033
    10. '(i' → logprob: -7.888397693634033

Token 281: '*' (ID: 9)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2513369917869568
    2. '*j' → logprob: -2.0013370513916016
    3. 'nj' → logprob: -2.5013370513916016
    4. '*' → logprob: -5.876337051391602
    5. '[j' → logprob: -6.876337051391602
    6. ' *' → logprob: -8.626337051391602
    7. '```' → logprob: -8.876337051391602
    8. '(j' → logprob: -9.001337051391602
    9. '           ' → logprob: -9.126337051391602
    10. '+' → logprob: -9.501337051391602

Token 282: 'nj' (ID: 30318)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21495643258094788
    2. 'nj' → logprob: -1.7149564027786255
    3. '(j' → logprob: -4.714956283569336
    4. '(n' → logprob: -5.839956283569336
    5. 'jn' → logprob: -7.214956283569336
    6. '(' → logprob: -8.589956283569336
    7. ' nj' → logprob: -8.839956283569336
    8. 'i' → logprob: -8.839956283569336
    9. '(i' → logprob: -9.339956283569336
    10. 'n' → logprob: -9.589956283569336

Token 283: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6441712975502014
    2. ' <=' → logprob: -1.1441712379455566
    3. '<=' → logprob: -2.1441712379455566
    4. '<|end|>' → logprob: -4.019171237945557
    5. ' if' → logprob: -4.394171237945557
    6. '```' → logprob: -5.519171237945557
    7. '            ' → logprob: -7.144171237945557
    8. '          ' → logprob: -7.644171237945557
    9. ')' → logprob: -7.769171237945557
    10. '       ' → logprob: -7.769171237945557

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020719971507787704
    2. '```' → logprob: -4.1457200050354
    3. ' if' → logprob: -5.6457200050354
    4. '<|end|>' → logprob: -7.2707200050354
    5. '       ' → logprob: -9.020719528198242
    6. 'if' → logprob: -9.145719528198242
    7. '          ' → logprob: -9.520719528198242
    8. '               ' → logprob: -9.770719528198242
    9. '            ' → logprob: -10.395719528198242
    10. '[' → logprob: -11.770719528198242

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.730742335319519
    2. 'dp' → logprob: -1.480742335319519
    3. '           ' → logprob: -1.605742335319519
    4. 'add' → logprob: -2.9807424545288086
    5. ' if' → logprob: -3.3557424545288086
    6. ' dp' → logprob: -5.980742454528809
    7. '```' → logprob: -6.480742454528809
    8. ' add' → logprob: -7.605742454528809
    9. 'for' → logprob: -11.480742454528809
    10. '   ' → logprob: -12.230742454528809

Token 286: ' nk' (ID: 18437)
  Prédit: ' nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nk' → logprob: -0.16540782153606415
    2. 'nk' → logprob: -2.04040789604187
    3. ' nj' → logprob: -3.91540789604187
    4. 'nj' → logprob: -6.040407657623291
    5. '   ' → logprob: -9.54040813446045
    6. 'n' → logprob: -10.16540813446045
    7. '(n' → logprob: -11.41540813446045
    8. ' ' → logprob: -12.04040813446045
    9. 'k' → logprob: -12.29040813446045
    10. '(' → logprob: -12.54040813446045

Token 287: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20142552256584167
    2. '<=' → logprob: -1.701425552368164
    3. ' >' → logprob: -12.951425552368164
    4. '```' → logprob: -13.076425552368164
    5. ' <' → logprob: -13.326425552368164
    6. '>' → logprob: -13.326425552368164
    7. '<' → logprob: -13.701425552368164
    8. '[' → logprob: -13.826425552368164
    9. ')<=' → logprob: -14.201425552368164
    10. ' ' → logprob: -15.201425552368164

Token 288: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0031777136027812958
    2. ' K' → logprob: -5.753177642822266
    3. '```' → logprob: -17.503177642822266
    4. 'k' → logprob: -18.003177642822266
    5. ' ' → logprob: -18.003177642822266
    6. '>K' → logprob: -18.003177642822266
    7. '	K' → logprob: -18.878177642822266
    8. ')' → logprob: -19.378177642822266
    9. '`' → logprob: -19.878177642822266
    10. '<K' → logprob: -20.378177642822266

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4292614161968231
    2. ':
' → logprob: -1.0542614459991455
    3. '               ' → logprob: -8.179261207580566
    4. ' and' → logprob: -9.304261207580566
    5. '           ' → logprob: -9.429261207580566
    6. ':

' → logprob: -9.929261207580566
    7. '):
' → logprob: -10.929261207580566
    8. '       ' → logprob: -11.179261207580566
    9. '```' → logprob: -11.429261207580566
    10. ',' → logprob: -12.054261207580566

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001532401074655354
    2. ' dp' → logprob: -9.750153541564941
    3. '           ' → logprob: -10.125153541564941
    4. '```' → logprob: -10.750153541564941
    5. 'dp' → logprob: -11.000153541564941
    6. '              ' → logprob: -12.000153541564941
    7. '                   ' → logprob: -12.250153541564941
    8. '             ' → logprob: -13.625153541564941
    9. '                ' → logprob: -13.875153541564941
    10. '       ' → logprob: -14.375153541564941

Token 291: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0002707529056351632
    2. ' dp' → logprob: -8.25027084350586
    3. '               ' → logprob: -11.62527084350586
    4. '	dp' → logprob: -15.37527084350586
    5. '           ' → logprob: -15.75027084350586
    6. '
' → logprob: -16.12527084350586
    7. '```' → logprob: -16.75027084350586
    8. '(dp' → logprob: -17.12527084350586
    9. '                   ' → logprob: -17.12527084350586
    10. '_dp' → logprob: -18.00027084350586

Token 292: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.968312951968983e-06
    2. '[' → logprob: -12.000009536743164
    3. 'n' → logprob: -12.875009536743164
    4. '[next' → logprob: -15.000009536743164
    5. '       ' → logprob: -15.375009536743164
    6. '   ' → logprob: -15.625009536743164
    7. '```' → logprob: -16.000009536743164
    8. ' [' → logprob: -16.125009536743164
    9. '][' → logprob: -16.500009536743164
    10. '\[' → logprob: -17.375009536743164

Token 293: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -2.2961512513575144e-05
    2. 't' → logprob: -10.875022888183594
    3. 'x' → logprob: -12.750022888183594
    4. '[n' → logprob: -14.750022888183594
    5. 'st' → logprob: -14.875022888183594
    6. '[' → logprob: -16.375022888183594
    7. '[t' → logprob: -16.750022888183594
    8. '```' → logprob: -16.750022888183594
    9. 'n' → logprob: -17.125022888183594
    10. 'zt' → logprob: -17.250022888183594

Token 294: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5774694085121155
    2. '[n' → logprob: -0.8274694085121155
    3. '[j' → logprob: -6.702469348907471
    4. '[' → logprob: -8.952469825744629
    5. '```' → logprob: -10.452469825744629
    6. '}[' → logprob: -10.702469825744629
    7. ']' → logprob: -10.702469825744629
    8. 'nj' → logprob: -11.202469825744629
    9. '           ' → logprob: -11.452469825744629
    10. '       ' → logprob: -11.452469825744629

Token 295: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0001612267515156418
    2. 'j' → logprob: -8.875161170959473
    3. 'jn' → logprob: -12.000161170959473
    4. '[j' → logprob: -12.625161170959473
    5. ' nj' → logprob: -12.750161170959473
    6. '[n' → logprob: -13.500161170959473
    7. '```' → logprob: -13.625161170959473
    8. 'n' → logprob: -13.750161170959473
    9. 'Nj' → logprob: -14.250161170959473
    10. 'nk' → logprob: -14.500161170959473

Token 296: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.949026571121067e-05
    2. ']' → logprob: -9.375099182128906
    3. '[n' → logprob: -11.875099182128906
    4. '[' → logprob: -12.750099182128906
    5. ' ][' → logprob: -13.250099182128906
    6. '[j' → logprob: -13.625099182128906
    7. ']][' → logprob: -14.875099182128906
    8. '"][' → logprob: -15.125099182128906
    9. '][]' → logprob: -15.375099182128906
    10. ''][' → logprob: -15.500099182128906

Token 297: 'nk' (ID: 55159)
  Prédit: 'nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -2.696889623621246e-06
    2. 'k' → logprob: -13.50000286102295
    3. ' nk' → logprob: -13.62500286102295
    4. 'NK' → logprob: -18.125001907348633
    5. 'nj' → logprob: -18.875001907348633
    6. 'n' → logprob: -19.375001907348633
    7. 'Nk' → logprob: -19.500001907348633
    8. '[n' → logprob: -20.500001907348633
    9. '```' → logprob: -20.750001907348633
    10. '   ' → logprob: -20.875001907348633

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14585094153881073
    2. '=' → logprob: -2.270850896835327
    3. ']=' → logprob: -3.645850896835327
    4. ']+=' → logprob: -5.145851135253906
    5. ' =' → logprob: -8.520851135253906
    6. '+=' → logprob: -9.020851135253906
    7. ')' → logprob: -9.145851135253906
    8. ']=(' → logprob: -9.520851135253906
    9. '           ' → logprob: -10.520851135253906
    10. '               ' → logprob: -11.395851135253906

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011957057286053896
    2. '+=' → logprob: -7.376195907592773
    3. ' =' → logprob: -7.751195907592773
    4. ']=' → logprob: -9.626195907592773
    5. '```' → logprob: -10.126195907592773
    6. ']+=' → logprob: -11.001195907592773
    7. ']' → logprob: -12.001195907592773
    8. '=(' → logprob: -12.626195907592773
    9. '[' → logprob: -13.751195907592773
    10. '%=' → logprob: -13.751195907592773

Token 300: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.3132759928703308
    2. ' (' → logprob: -1.3132760524749756
    3. '(' → logprob: -11.438276290893555
    4. '(df' → logprob: -14.813276290893555
    5. '(dx' → logprob: -15.063276290893555
    6. '(draw' → logprob: -15.438276290893555
    7. '(ans' → logprob: -15.563276290893555
    8. '(dt' → logprob: -15.813276290893555
    9. '(dc' → logprob: -15.813276290893555
    10. '(dm' → logprob: -15.813276290893555

Token 301: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.251091377227567e-05
    2. ' (' → logprob: -10.125042915344238
    3. 'dp' → logprob: -13.625042915344238
    4. '(' → logprob: -14.625042915344238
    5. '(dx' → logprob: -16.250041961669922
    6. '(df' → logprob: -16.250041961669922
    7. '0' → logprob: -16.250041961669922
    8. '(dc' → logprob: -16.625041961669922
    9. '(d' → logprob: -17.000041961669922
    10. '(ds' → logprob: -17.125041961669922

Token 302: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0016184075502678752
    2. 'n' → logprob: -6.501618385314941
    3. '[next' → logprob: -10.251618385314941
    4. '[' → logprob: -10.501618385314941
    5. '```' → logprob: -10.876618385314941
    6. 'cur' → logprob: -12.251618385314941
    7. 'next' → logprob: -12.501618385314941
    8. ',n' → logprob: -12.626618385314941
    9. '
' → logprob: -13.001618385314941
    10. '<n' → logprob: -13.001618385314941

Token 303: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0003420183784328401
    2. 'j' → logprob: -9.12534236907959
    3. 'st' → logprob: -9.37534236907959
    4. '[n' → logprob: -9.87534236907959
    5. '```' → logprob: -10.25034236907959
    6. '[j' → logprob: -11.12534236907959
    7. 'ext' → logprob: -11.62534236907959
    8. 'x' → logprob: -12.00034236907959
    9. '[next' → logprob: -12.12534236907959
    10. ' nxt' → logprob: -12.37534236907959

Token 304: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.04188886657357216
    2. '][' → logprob: -3.416888952255249
    3. '[j' → logprob: -5.16688871383667
    4. 'nj' → logprob: -7.16688871383667
    5. '[next' → logprob: -7.54188871383667
    6. 'n' → logprob: -8.666889190673828
    7. '       ' → logprob: -8.666889190673828
    8. '           ' → logprob: -8.791889190673828
    9. '[i' → logprob: -8.791889190673828
    10. '[' → logprob: -9.416889190673828

Token 305: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0020843585953116417
    2. 'j' → logprob: -6.877084255218506
    3. '[n' → logprob: -7.502084255218506
    4. '[j' → logprob: -8.502084732055664
    5. 'nk' → logprob: -8.877084732055664
    6. ' nj' → logprob: -10.877084732055664
    7. 'jn' → logprob: -11.002084732055664
    8. '
' → logprob: -11.127084732055664
    9. '   ' → logprob: -11.127084732055664
    10. 'n' → logprob: -11.252084732055664

Token 306: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.02415226772427559
    2. '][' → logprob: -4.0241522789001465
    3. '[j' → logprob: -5.3991522789001465
    4. 'nj' → logprob: -7.2741522789001465
    5. '[' → logprob: -7.8991522789001465
    6. ']' → logprob: -9.274151802062988
    7. ']+' → logprob: -9.274151802062988
    8. '   ' → logprob: -10.149151802062988
    9. '[[' → logprob: -10.274151802062988
    10. '+' → logprob: -10.524151802062988

Token 307: 'nk' (ID: 55159)
  Prédit: 'nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -0.01822451315820217
    2. 'k' → logprob: -4.268224716186523
    3. ' nk' → logprob: -6.143224716186523
    4. 'K' → logprob: -6.893224716186523
    5. '(k' → logprob: -7.518224716186523
    6. '(n' → logprob: -9.018224716186523
    7. '[k' → logprob: -10.018224716186523
    8. ' (' → logprob: -10.393224716186523
    9. 'kp' → logprob: -10.643224716186523
    10. ' k' → logprob: -10.643224716186523

Token 308: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3485935926437378
    2. '+' → logprob: -1.2235935926437378
    3. ']' → logprob: -9.473593711853027
    4. '+n' → logprob: -10.473593711853027
    5. ']+' → logprob: -10.598593711853027
    6. '+k' → logprob: -12.348593711853027
    7. '               ' → logprob: -12.598593711853027
    8. '[' → logprob: -13.098593711853027
    9. '                ' → logprob: -13.723593711853027
    10. '+[' → logprob: -13.723593711853027

Token 309: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687223196029663
    2. '+' → logprob: -1.1368722915649414
    3. '+(' → logprob: -14.511872291564941
    4. '+[' → logprob: -16.011871337890625
    5. ' ' → logprob: -16.136871337890625
    6. '               ' → logprob: -16.386871337890625
    7. '＋' → logprob: -16.386871337890625
    8. '+n' → logprob: -16.636871337890625
    9. '                   ' → logprob: -17.511871337890625
    10. '()+' → logprob: -17.511871337890625

Token 310: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3104589581489563
    2. ' val' → logprob: -1.4354588985443115
    3. 'add' → logprob: -3.9354588985443115
    4. ' add' → logprob: -4.810459136962891
    5. '(val' → logprob: -7.060459136962891
    6. ' (' → logprob: -8.81045913696289
    7. '           ' → logprob: -9.56045913696289
    8. '(' → logprob: -10.68545913696289
    9. '(add' → logprob: -10.68545913696289
    10. '               ' → logprob: -11.43545913696289

Token 311: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014358828775584698
    2. ')%' → logprob: -9.625144004821777
    3. '%' → logprob: -10.250144004821777
    4. ' )' → logprob: -10.375144004821777
    5. '[n' → logprob: -11.750144004821777
    6. ' %' → logprob: -14.250144004821777
    7. '*' → logprob: -15.000144004821777
    8. ']' → logprob: -15.375144004821777
    9. '[k' → logprob: -15.500144004821777
    10. '[cur' → logprob: -15.500144004821777

Token 312: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4315677881240845
    2. ' %' → logprob: -1.0565677881240845
    3. '[n' → logprob: -6.431567668914795
    4. '%n' → logprob: -6.931567668914795
    5. '```' → logprob: -9.306568145751953
    6. '[' → logprob: -9.431568145751953
    7. '       ' → logprob: -10.681568145751953
    8. ')%' → logprob: -11.056568145751953
    9. ']%' → logprob: -11.306568145751953
    10. '               ' → logprob: -11.931568145751953

Token 313: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03804321587085724
    2. ' MOD' → logprob: -3.288043260574341
    3. '_MOD' → logprob: -14.163043022155762
    4. '```' → logprob: -14.538043022155762
    5. '.MOD' → logprob: -15.663043022155762
    6. 'MO' → logprob: -16.038043975830078
    7. '`' → logprob: -16.413043975830078
    8. ' ' → logprob: -16.663043975830078
    9. '(M' → logprob: -16.788043975830078
    10. ' ' → logprob: -16.913043975830078

Token 314: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ' j' (ID: 441)
  Prédit: ' nk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nk' → logprob: -0.9330481886863708
    2. ' not' → logprob: -1.4330482482910156
    3. ' nj' → logprob: -1.6830482482910156
    4. ' j' → logprob: -2.5580482482910156
    5. ' k' → logprob: -3.6830482482910156
    6. ' n' → logprob: -3.9330482482910156
    7. ' K' → logprob: -4.808048248291016
    8. 'nk' → logprob: -4.933048248291016
    9. ' __' → logprob: -5.183048248291016
    10. ' False' → logprob: -5.183048248291016

Token 318: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7050226330757141
    2. '>' → logprob: -0.8300226330757141
    3. '<|end|>' → logprob: -3.8300225734710693
    4. '+' → logprob: -4.080022811889648
    5. ' <' → logprob: -5.330022811889648
    6. ' ==' → logprob: -5.455022811889648
    7. '           ' → logprob: -5.580022811889648
    8. '==' → logprob: -5.705022811889648
    9. '<|end|>' → logprob: -5.830022811889648
    10. ' +' → logprob: -5.955022811889648

Token 319: '               ' (ID: 506)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7645878195762634
    2. '               ' → logprob: -1.5145878791809082
    3. '[n' → logprob: -2.139587879180908
    4. '<|end|>' → logprob: -2.764587879180908
    5. ':
' → logprob: -3.264587879180908
    6. '```' → logprob: -4.014587879180908
    7. '[' → logprob: -4.139587879180908
    8. '           ' → logprob: -4.514587879180908
    9. ':' → logprob: -4.639587879180908
    10. '<|end|>' → logprob: -5.514587879180908

Token 320: ' nj' (ID: 8979)
  Prédit: ' nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nj' → logprob: -0.13044020533561707
    2. 'nj' (adapté à ' nj') → logprob: -2.5054402351379395
    3. '               ' → logprob: -3.7554402351379395
    4. '                   ' → logprob: -5.5054402351379395
    5. ' nk' → logprob: -5.7554402351379395
    6. '           ' → logprob: -5.7554402351379395
    7. ' val' → logprob: -6.0054402351379395
    8. ' for' → logprob: -6.6304402351379395
    9. '
' → logprob: -6.7554402351379395
    10. '```' → logprob: -7.0054402351379395

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16077999770641327
    2. ' =' → logprob: -1.9107799530029297
    3. '=j' → logprob: -7.53577995300293
    4. '=
' → logprob: -11.03577995300293
    5. '=n' → logprob: -13.03577995300293
    6. ' =
' → logprob: -14.16077995300293
    7. '<|end|>' → logprob: -14.16077995300293
    8. '=k' → logprob: -14.78577995300293
    9. ',' → logprob: -14.78577995300293
    10. '           ' → logprob: -15.03577995300293

Token 322: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0028067755047231913
    2. ' j' → logprob: -5.877806663513184
    3. '   ' → logprob: -13.502806663513184
    4. '	j' → logprob: -15.752806663513184
    5. '0' → logprob: -16.2528076171875
    6. ' ' → logprob: -16.3778076171875
    7. '[j' → logprob: -16.8778076171875
    8. '           ' → logprob: -18.0028076171875
    9. '(j' → logprob: -18.1278076171875
    10. '       ' → logprob: -18.2528076171875

Token 323: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009717292850837111
    2. ' -' → logprob: -7.500971794128418
    3. '=' → logprob: -7.875971794128418
    4. '           ' → logprob: -10.500971794128418
    5. '-=' → logprob: -12.250971794128418
    6. '−' → logprob: -13.125971794128418
    7. '
' → logprob: -13.250971794128418
    8. '-
' → logprob: -15.000971794128418
    9. '```' → logprob: -15.000971794128418
    10. '   ' → logprob: -15.250971794128418

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '           ' → logprob: -16.5
    4. '<|end|>' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. '0' → logprob: -18.25
    8. 'j' → logprob: -19.25
    9. '2' → logprob: -19.75
    10. ',' → logprob: -19.75

Token 325: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5592482686042786
    2. ',' → logprob: -2.059248208999634
    3. '           ' → logprob: -2.059248208999634
    4. ',n' → logprob: -2.309248208999634
    5. '<|end|>' → logprob: -3.684248208999634
    6. ',k' → logprob: -4.809248447418213
    7. ' nk' → logprob: -4.934248447418213
    8. '```' → logprob: -5.309248447418213
    9. '	           ' → logprob: -5.559248447418213
    10. '                   ' → logprob: -5.684248447418213

Token 326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1316967010498047
    2. ',' → logprob: -3.7566967010498047
    3. '           ' → logprob: -3.7566967010498047
    4. ',k' → logprob: -3.8816967010498047
    5. '<|end|>' → logprob: -4.256696701049805
    6. '                   ' → logprob: -4.631696701049805
    7. '	           ' → logprob: -4.756696701049805
    8. ',n' → logprob: -5.006696701049805
    9. ' nk' → logprob: -5.631696701049805
    10. 'nk' → logprob: -6.006696701049805

Token 327: ' nk' (ID: 18437)
  Prédit: 'nk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' (adapté à ' nk') → logprob: -0.4062640070915222
    2. ' nk' → logprob: -1.281264066696167
    3. 'k' → logprob: -3.031264066696167
    4. ' k' → logprob: -5.156263828277588
    5. '           ' → logprob: -7.031263828277588
    6. '               ' → logprob: -8.031264305114746
    7. '            ' → logprob: -8.031264305114746
    8. 'n' → logprob: -8.281264305114746
    9. 'nj' → logprob: -8.406264305114746
    10. '                   ' → logprob: -10.031264305114746

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20154255628585815
    2. '=' → logprob: -1.701542615890503
    3. '=k' → logprob: -9.201542854309082
    4. '<|end|>' → logprob: -11.076542854309082
    5. ',' → logprob: -12.701542854309082
    6. '```' → logprob: -12.701542854309082
    7. '           ' → logprob: -13.451542854309082
    8. '            ' → logprob: -13.826542854309082
    9. ' ' → logprob: -14.326542854309082
    10. '                ' → logprob: -14.826542854309082

Token 329: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3868747651576996
    2. ' k' → logprob: -1.136874794960022
    3. '               ' → logprob: -13.51187515258789
    4. '(k' → logprob: -14.51187515258789
    5. '                ' → logprob: -15.13687515258789
    6. '=k' → logprob: -15.13687515258789
    7. '	k' → logprob: -15.51187515258789
    8. '            ' → logprob: -15.88687515258789
    9. ',k' → logprob: -16.01187515258789
    10. '[k' → logprob: -16.01187515258789

Token 330: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602942943572998
    2. '+' → logprob: -1.9102942943572998
    3. '           ' → logprob: -11.035294532775879
    4. ' ' → logprob: -11.035294532775879
    5. '          ' → logprob: -11.910294532775879
    6. '```' → logprob: -12.285294532775879
    7. '            ' → logprob: -12.660294532775879
    8. '        ' → logprob: -12.785294532775879
    9. '<|end|>' → logprob: -12.785294532775879
    10. '               ' → logprob: -13.035294532775879

Token 331: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022530299611389637
    2. ' ' → logprob: -6.12725305557251
    3. '(' → logprob: -10.127252578735352
    4. '1' → logprob: -11.502252578735352
    5. '0' → logprob: -12.252252578735352
    6. '               ' → logprob: -13.252252578735352
    7. '                   ' → logprob: -13.502252578735352
    8. ' (' → logprob: -13.502252578735352
    9. '                               ' → logprob: -14.127252578735352
    10. 'k' → logprob: -14.127252578735352

Token 332: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016218038217630237
    2. '(' → logprob: -9.750162124633789
    3. ' ' → logprob: -9.750162124633789
    4. '1' → logprob: -10.125162124633789
    5. '0' → logprob: -13.375162124633789
    6. 'j' → logprob: -14.375162124633789
    7. 'nk' → logprob: -14.500162124633789
    8. 'nj' → logprob: -15.125162124633789
    9. 'k' → logprob: -15.375162124633789
    10. '```' → logprob: -15.375162124633789

Token 333: '*' (ID: 9)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.22584623098373413
    2. '*' → logprob: -1.975846290588379
    3. '(n' → logprob: -3.350846290588379
    4. '*(' → logprob: -3.600846290588379
    5. '(j' → logprob: -7.725846290588379
    6. ' nj' → logprob: -8.600846290588379
    7. 'j' → logprob: -8.725846290588379
    8. '*j' → logprob: -8.975846290588379
    9. 'n' → logprob: -9.850846290588379
    10. '*n' → logprob: -9.975846290588379

Token 334: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.055494274944067
    2. '(n' → logprob: -2.9304943084716797
    3. '(j' → logprob: -8.30549430847168
    4. ' nj' → logprob: -8.93049430847168
    5. 'n' → logprob: -9.68049430847168
    6. 'j' → logprob: -10.05549430847168
    7. '(' → logprob: -10.18049430847168
    8. 'jn' → logprob: -10.68049430847168
    9. 'nij' → logprob: -11.30549430847168
    10. ' (' → logprob: -11.68049430847168

Token 335: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004373393952846527
    2. '```' → logprob: -5.754373550415039
    3. ' if' → logprob: -7.504373550415039
    4. 'if' → logprob: -8.004373550415039
    5. '           ' → logprob: -8.629373550415039
    6. '                ' → logprob: -10.254373550415039
    7. '              ' → logprob: -10.379373550415039
    8. '<|end|>' → logprob: -10.504373550415039
    9. '                   ' → logprob: -11.129373550415039
    10. '``' → logprob: -12.004373550415039

Token 336: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005633997498080134
    2. '```' → logprob: -7.750563621520996
    3. '           ' → logprob: -9.875563621520996
    4. ' if' → logprob: -10.375563621520996
    5. '              ' → logprob: -11.375563621520996
    6. '                   ' → logprob: -11.500563621520996
    7. '<|end|>' → logprob: -11.625563621520996
    8. 'if' → logprob: -11.625563621520996
    9. '                ' → logprob: -12.000563621520996
    10. '             ' → logprob: -14.125563621520996

Token 337: ' add' (ID: 1147)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17679555714130402
    2. 'if' → logprob: -1.9267956018447876
    3. '               ' → logprob: -4.301795482635498
    4. ' dp' → logprob: -6.301795482635498
    5. ' if' → logprob: -6.926795482635498
    6. '(dp' → logprob: -10.176795959472656
    7. '                   ' → logprob: -11.176795959472656
    8. '```' → logprob: -11.176795959472656
    9. '	dp' → logprob: -12.676795959472656
    10. '                ' → logprob: -12.926795959472656

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741056561470032
    2. ' =' → logprob: -0.9741056561470032
    3. '=(' → logprob: -11.099105834960938
    4. '           ' → logprob: -11.724105834960938
    5. ' =(' → logprob: -12.849105834960938
    6. '               ' → logprob: -13.974105834960938
    7. 'val' → logprob: -15.099105834960938
    8. '   ' → logprob: -15.224105834960938
    9. '                   ' → logprob: -15.349105834960938
    10. ',val' → logprob: -15.849105834960938

Token 339: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7374191284179688
    2. '(j' → logprob: -1.4874191284179688
    3. '(' → logprob: -1.8624191284179688
    4. ' j' → logprob: -2.8624191284179688
    5. 'val' → logprob: -3.3624191284179688
    6. ' (' → logprob: -3.7374191284179688
    7. ' val' → logprob: -4.862419128417969
    8. '((' → logprob: -5.112419128417969
    9. '(val' → logprob: -5.237419128417969
    10. '2' → logprob: -5.487419128417969

Token 340: '*j' (ID: 138193)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05559982359409332
    2. ' *' → logprob: -2.9305999279022217
    3. '[val' → logprob: -7.930599689483643
    4. ',val' → logprob: -9.1806001663208
    5. '*(' → logprob: -9.4306001663208
    6. '-val' → logprob: -10.1806001663208
    7. ' val' → logprob: -11.1806001663208
    8. '_val' → logprob: -11.1806001663208
    9. '
' → logprob: -11.1806001663208
    10. '*v' → logprob: -11.5556001663208

Token 341: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0005543439765460789
    2. ' *' → logprob: -7.62555456161499
    3. '[val' → logprob: -10.500554084777832
    4. 'val' → logprob: -11.125554084777832
    5. ',val' → logprob: -11.250554084777832
    6. '
' → logprob: -13.250554084777832
    7. '```' → logprob: -13.375554084777832
    8. ')*' → logprob: -13.750554084777832
    9. '	val' → logprob: -13.750554084777832
    10. ' val' → logprob: -13.750554084777832

Token 342: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.023282986134290695
    2. ' val' → logprob: -3.773283004760742
    3. '(val' → logprob: -10.273283004760742
    4. '	val' → logprob: -13.523283004760742
    5. '[val' → logprob: -14.648283004760742
    6. '_val' → logprob: -14.898283004760742
    7. ' (' → logprob: -15.523283004760742
    8. 'v' → logprob: -15.523283004760742
    9. ',val' → logprob: -16.023283004760742
    10. '(' → logprob: -16.523283004760742

Token 343: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.029760096222162247
    2. '%' → logprob: -3.5297601222991943
    3. ' ' → logprob: -12.279760360717773
    4. ')' → logprob: -13.279760360717773
    5. ')%' → logprob: -13.404760360717773
    6. ' ' → logprob: -15.154760360717773
    7. '```' → logprob: -15.154760360717773
    8. ' %=' → logprob: -15.279760360717773
    9. '%n' → logprob: -15.654760360717773
    10. '           ' → logprob: -15.654760360717773

Token 344: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04859350249171257
    2. ' MOD' → logprob: -3.048593521118164
    3. '_MOD' → logprob: -13.173593521118164
    4. '(M' → logprob: -13.548593521118164
    5. ' ' → logprob: -14.048593521118164
    6. ' ' → logprob: -14.548593521118164
    7. '```' → logprob: -14.548593521118164
    8. '.MOD' → logprob: -15.048593521118164
    9. '`' → logprob: -15.423593521118164
    10. '
' → logprob: -15.548593521118164

Token 345: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005475890357047319
    2. ' if' → logprob: -6.130475997924805
    3. 'if' → logprob: -6.880475997924805
    4. '<|end|>' → logprob: -7.255475997924805
    5. '```' → logprob: -7.380475997924805
    6. '
' → logprob: -8.005475997924805
    7. '           ' → logprob: -8.005475997924805
    8. '                
' → logprob: -9.130475997924805
    9. '              ' → logprob: -10.380475997924805
    10. '                ' → logprob: -10.505475997924805

Token 346: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008065330912359059
    2. ' if' → logprob: -8.00080680847168
    3. '<|end|>' → logprob: -8.62580680847168
    4. '```' → logprob: -8.87580680847168
    5. 'if' → logprob: -9.87580680847168
    6. '           ' → logprob: -10.12580680847168
    7. '              ' → logprob: -10.87580680847168
    8. '                ' → logprob: -11.25080680847168
    9. '                
' → logprob: -11.62580680847168
    10. ')' → logprob: -11.87580680847168

Token 347: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02982662059366703
    2. '               ' → logprob: -3.7798266410827637
    3. ' if' → logprob: -5.029826641082764
    4. '           ' → logprob: -11.029826164245605
    5. '              ' → logprob: -14.029826164245605
    6. '```' → logprob: -14.404826164245605
    7. '	if' → logprob: -14.779826164245605
    8. '             ' → logprob: -15.404826164245605
    9. '                   ' → logprob: -15.529826164245605
    10. 'If' → logprob: -15.654826164245605

Token 348: ' nk' (ID: 18437)
  Prédit: ' nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nk' → logprob: -0.523156464099884
    2. 'nk' → logprob: -0.898156464099884
    3. 'n' → logprob: -11.27315616607666
    4. '(n' → logprob: -12.02315616607666
    5. '               ' → logprob: -12.89815616607666
    6. ' nj' → logprob: -13.27315616607666
    7. '   ' → logprob: -13.27315616607666
    8. '```' → logprob: -13.39815616607666
    9. 'nj' → logprob: -14.02315616607666
    10. '                   ' → logprob: -14.27315616607666

Token 349: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.34848180413246155
    2. '<=' → logprob: -1.2234817743301392
    3. '```' → logprob: -11.223482131958008
    4. ')<=' → logprob: -12.348482131958008
    5. '>=' → logprob: -12.598482131958008
    6. '               ' → logprob: -12.723482131958008
    7. ' <' → logprob: -12.973482131958008
    8. '<|end|>' → logprob: -12.973482131958008
    9. ' >=' → logprob: -13.348482131958008
    10. '<' → logprob: -13.598482131958008

Token 350: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00861468818038702
    2. ' K' → logprob: -4.758614540100098
    3. 'k' → logprob: -17.008615493774414
    4. '```' → logprob: -17.133615493774414
    5. '(K' → logprob: -17.258615493774414
    6. ' ' → logprob: -17.383615493774414
    7. '	K' → logprob: -18.758615493774414
    8. '               ' → logprob: -18.758615493774414
    9. '>K' → logprob: -18.883615493774414
    10. '                   ' → logprob: -19.008615493774414

Token 351: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3947453498840332
    2. ':' → logprob: -1.2697453498840332
    3. '               ' → logprob: -3.269745349884033
    4. '```' → logprob: -5.394745349884033
    5. '):
' → logprob: -6.519745349884033
    6. '                   ' → logprob: -7.269745349884033
    7. '):' → logprob: -8.269744873046875
    8. '():
' → logprob: -9.269744873046875
    9. '           ' → logprob: -10.019744873046875
    10. ':

' → logprob: -10.394744873046875

Token 352: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10166436433792114
    2. '               ' → logprob: -2.3516643047332764
    3. 'dp' → logprob: -6.8516645431518555
    4. '```' → logprob: -8.726664543151855
    5. '                       ' → logprob: -8.976664543151855
    6. ' dp' → logprob: -10.226664543151855
    7. '           ' → logprob: -10.726664543151855
    8. '                ' → logprob: -10.976664543151855
    9. '                  ' → logprob: -11.476664543151855
    10. '                    ' → logprob: -12.351664543151855

Token 353: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03815222531557083
    2. ' dp' → logprob: -3.2881522178649902
    3. '                   ' → logprob: -9.163152694702148
    4. '                       ' → logprob: -12.413152694702148
    5. '               ' → logprob: -14.038152694702148
    6. '	dp' → logprob: -14.913152694702148
    7. '(dp' → logprob: -15.038152694702148
    8. '```' → logprob: -16.41315269470215
    9. '                    ' → logprob: -16.66315269470215
    10. '           ' → logprob: -17.03815269470215

Token 354: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1279553291387856e-05
    2. 'n' → logprob: -11.875011444091797
    3. '[' → logprob: -12.875011444091797
    4. '```' → logprob: -14.125011444091797
    5. ' [' → logprob: -14.875011444091797
    6. '       ' → logprob: -15.375011444091797
    7. '   ' → logprob: -15.875011444091797
    8. '[next' → logprob: -16.250011444091797
    9. ' n' → logprob: -17.500011444091797
    10. '[
' → logprob: -17.500011444091797

Token 355: 'xt' (ID: 711)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019774071406573057
    2. '[n' → logprob: -6.751977443695068
    3. 'xt' → logprob: -7.751977443695068
    4. ' nxt' → logprob: -8.75197696685791
    5. 'nt' → logprob: -9.75197696685791
    6. 'nst' → logprob: -10.25197696685791
    7. 't' → logprob: -10.50197696685791
    8. '   ' → logprob: -10.62697696685791
    9. '```' → logprob: -11.00197696685791
    10. 'st' → logprob: -11.00197696685791

Token 356: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.1431681513786316
    2. '][' → logprob: -2.1431682109832764
    3. '[' → logprob: -4.768167972564697
    4. '[j' → logprob: -5.268167972564697
    5. '[cur' → logprob: -6.393167972564697
    6. '               ' → logprob: -7.768167972564697
    7. '}[' → logprob: -9.518168449401855
    8. '   ' → logprob: -10.518168449401855
    9. 'nj' → logprob: -10.518168449401855
    10. '           ' → logprob: -10.643168449401855

Token 357: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.000386105413781479
    2. 'n' → logprob: -8.750386238098145
    3. 'nk' → logprob: -8.750386238098145
    4. '[n' → logprob: -10.000386238098145
    5. 'cur' → logprob: -11.750386238098145
    6. ' nj' → logprob: -12.250386238098145
    7. '   ' → logprob: -12.750386238098145
    8. 'ni' → logprob: -13.125386238098145
    9. 'j' → logprob: -13.500386238098145
    10. 'nij' → logprob: -13.625386238098145

Token 358: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07952006906270981
    2. '[n' → logprob: -2.5795199871063232
    3. '[' → logprob: -7.579520225524902
    4. ']' → logprob: -10.454520225524902
    5. '```' → logprob: -10.829520225524902
    6. ' ][' → logprob: -11.204520225524902
    7. '"][' → logprob: -11.329520225524902
    8. '               ' → logprob: -11.579520225524902
    9. '[j' → logprob: -12.079520225524902
    10. '   ' → logprob: -12.454520225524902

Token 359: 'nk' (ID: 55159)
  Prédit: 'nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -6.869017852295656e-06
    2. '[n' → logprob: -12.375006675720215
    3. ' nk' → logprob: -13.250006675720215
    4. 'k' → logprob: -15.250006675720215
    5. '(n' → logprob: -15.500006675720215
    6. '[k' → logprob: -16.00000762939453
    7. 'n' → logprob: -16.75000762939453
    8. '[' → logprob: -17.12500762939453
    9. '
' → logprob: -17.50000762939453
    10. '```' → logprob: -17.87500762939453

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020491473842412233
    2. '=' → logprob: -6.877048969268799
    3. ']=' → logprob: -7.502048969268799
    4. '                   ' → logprob: -8.002049446105957
    5. ' =' → logprob: -9.627049446105957
    6. ']+=' → logprob: -10.752049446105957
    7. ')' → logprob: -11.377049446105957
    8. '               ' → logprob: -11.377049446105957
    9. ' ]' → logprob: -12.002049446105957
    10. '                    ' → logprob: -12.877049446105957

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008661486208438873
    2. ' =' → logprob: -4.758661270141602
    3. '                   ' → logprob: -10.383661270141602
    4. '```' → logprob: -12.258661270141602
    5. '                       ' → logprob: -12.383661270141602
    6. ']' → logprob: -13.508661270141602
    7. ']=' → logprob: -13.633661270141602
    8. '[' → logprob: -14.133661270141602
    9. '               ' → logprob: -14.258661270141602
    10. '=(' → logprob: -14.258661270141602

Token 362: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5759466886520386
    2. ' (' → logprob: -0.8259466886520386
    3. '(' → logprob: -12.325946807861328
    4. '                   ' → logprob: -14.325946807861328
    5. '(dx' → logprob: -14.825946807861328
    6. '(df' → logprob: -14.950946807861328
    7. '   ' → logprob: -15.075946807861328
    8. '(dc' → logprob: -15.825946807861328
    9. '(pid' → logprob: -15.950946807861328
    10. ' ' → logprob: -16.200946807861328

Token 363: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.4656579120783135e-05
    2. ' (' → logprob: -10.250044822692871
    3. 'dp' → logprob: -11.750044822692871
    4. '(' → logprob: -14.375044822692871
    5. '   ' → logprob: -16.250043869018555
    6. '(dx' → logprob: -16.375043869018555
    7. '(dc' → logprob: -16.375043869018555
    8. ' dp' → logprob: -16.500043869018555
    9. '(ds' → logprob: -16.625043869018555
    10. '	dp' → logprob: -16.750043869018555

Token 364: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.010125295259058475
    2. '(n' → logprob: -4.635125160217285
    3. '(dp' → logprob: -8.135125160217285
    4. '[' → logprob: -11.260125160217285
    5. '[(' → logprob: -11.635125160217285
    6. '   ' → logprob: -11.635125160217285
    7. 'n' → logprob: -11.885125160217285
    8. 'dp' → logprob: -11.885125160217285
    9. '[next' → logprob: -12.260125160217285
    10. '[
' → logprob: -12.635125160217285

Token 365: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -7.088138227118179e-05
    2. '[n' → logprob: -9.750070571899414
    3. 'st' → logprob: -12.750070571899414
    4. 'ext' → logprob: -13.000070571899414
    5. '[' → logprob: -13.625070571899414
    6. 'zt' → logprob: -13.750070571899414
    7. '[k' → logprob: -13.875070571899414
    8. '```' → logprob: -14.125070571899414
    9. 'x' → logprob: -14.500070571899414
    10. ']' → logprob: -14.750070571899414

Token 366: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4840666949748993
    2. '[n' → logprob: -0.9840667247772217
    3. 'nj' → logprob: -4.859066486358643
    4. '[' → logprob: -7.109066486358643
    5. '[j' → logprob: -8.1090669631958
    6. '<n' → logprob: -8.4840669631958
    7. '(n' → logprob: -8.9840669631958
    8. '               ' → logprob: -9.2340669631958
    9. ']' → logprob: -9.4840669631958
    10. '+' → logprob: -9.4840669631958

Token 367: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.47433891892433167
    2. 'nk' → logprob: -0.9743388891220093
    3. '[n' → logprob: -8.72433853149414
    4. 'k' → logprob: -10.22433853149414
    5. '
' → logprob: -11.22433853149414
    6. 'kj' → logprob: -11.59933853149414
    7. '(n' → logprob: -11.72433853149414
    8. 'n' → logprob: -12.47433853149414
    9. 'jk' → logprob: -12.59933853149414
    10. 'j' → logprob: -12.72433853149414

Token 368: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07766874134540558
    2. '[n' → logprob: -2.8276686668395996
    3. ']' → logprob: -4.8276686668396
    4. '[k' → logprob: -6.7026686668396
    5. 'nj' → logprob: -6.7026686668396
    6. '[j' → logprob: -6.9526686668396
    7. '(n' → logprob: -7.0776686668396
    8. '<n' → logprob: -7.3276686668396
    9. '               ' → logprob: -7.5776686668396
    10. ']+' → logprob: -7.7026686668396

Token 369: 'nk' (ID: 55159)
  Prédit: 'nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -0.005811840295791626
    2. '(n' → logprob: -5.50581169128418
    3. '[n' → logprob: -6.75581169128418
    4. 'k' → logprob: -7.88081169128418
    5. '[k' → logprob: -10.00581169128418
    6. 'dp' → logprob: -10.13081169128418
    7. ' nk' → logprob: -11.13081169128418
    8. '(k' → logprob: -11.25581169128418
    9. 'dk' → logprob: -11.38081169128418
    10. ']' → logprob: -11.50581169128418

Token 370: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.201427161693573
    2. '+' → logprob: -1.7014272212982178
    3. '+(' → logprob: -12.326427459716797
    4. ']' → logprob: -12.951427459716797
    5. ' ' → logprob: -13.201427459716797
    6. ')' → logprob: -13.451427459716797
    7. ']+' → logprob: -14.451427459716797
    8. '+n' → logprob: -14.451427459716797
    9. ' +(' → logprob: -14.951427459716797
    10. '+[' → logprob: -15.326427459716797

Token 371: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38688650727272034
    2. ' +' → logprob: -1.136886477470398
    3. '+(' → logprob: -12.261886596679688
    4. '                   ' → logprob: -12.511886596679688
    5. ')' → logprob: -13.136886596679688
    6. '                       ' → logprob: -14.011886596679688
    7. ' ' → logprob: -14.886886596679688
    8. '                    ' → logprob: -15.011886596679688
    9. '=' → logprob: -15.136886596679688
    10. '+
' → logprob: -15.136886596679688

Token 372: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.04858794063329697
    2. ' add' → logprob: -3.0485880374908447
    3. '(add' → logprob: -14.923587799072266
    4. ')add' → logprob: -17.048587799072266
    5. '               ' → logprob: -17.423587799072266
    6. '```' → logprob: -17.548587799072266
    7. '           ' → logprob: -17.798587799072266
    8. '                   ' → logprob: -17.798587799072266
    9. '	add' → logprob: -18.423587799072266
    10. '_add' → logprob: -19.298587799072266

Token 373: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03172829747200012
    2. ')%' → logprob: -3.6567282676696777
    3. '%' → logprob: -5.781728267669678
    4. ' %' → logprob: -6.156728267669678
    5. ' )' → logprob: -8.531728744506836
    6. ']%' → logprob: -11.906728744506836
    7. ']' → logprob: -12.906728744506836
    8. '%)' → logprob: -13.156728744506836
    9. ' %)' → logprob: -14.781728744506836
    10. '```' → logprob: -14.906728744506836

Token 374: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2519390881061554
    2. '%' → logprob: -1.501939058303833
    3. ')%' → logprob: -11.751938819885254
    4. ')' → logprob: -13.501938819885254
    5. '```' → logprob: -15.876938819885254
    6. '                   ' → logprob: -16.37693977355957
    7. ']%' → logprob: -16.50193977355957
    8. ' ' → logprob: -16.50193977355957
    9. '%s' → logprob: -16.62693977355957
    10. '()%' → logprob: -16.75193977355957

Token 375: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0011703446507453918
    2. ' MOD' → logprob: -6.7511701583862305
    3. '_MOD' → logprob: -16.376171112060547
    4. '(M' → logprob: -19.001171112060547
    5. '.MOD' → logprob: -20.001171112060547
    6. '(Mod' → logprob: -21.251171112060547
    7. '```' → logprob: -21.751171112060547
    8. 'MO' → logprob: -21.876171112060547
    9. 'M' → logprob: -22.001171112060547
    10. '(mod' → logprob: -23.001171112060547

Token 376: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03918751701712608
    2. '   ' → logprob: -3.289187431335449
    3. 'return' → logprob: -7.539187431335449
    4. '```' → logprob: -8.03918743133545
    5. 'for' → logprob: -9.78918743133545
    6. '<|end|>' → logprob: -9.91418743133545
    7. '           ' → logprob: -10.41418743133545
    8. ' for' → logprob: -10.41418743133545
    9. ' return' → logprob: -10.53918743133545
    10. 'print' → logprob: -10.91418743133545

Token 378: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1185859888792038
    2. '   ' → logprob: -2.2435860633850098
    3. 'print' (adapté à ' print') → logprob: -6.24358606338501
    4. 'return' → logprob: -6.86858606338501
    5. ')' → logprob: -7.36858606338501
    6. '\n' → logprob: -7.49358606338501
    7. '           ' → logprob: -8.118585586547852
    8. '\' → logprob: -8.743585586547852
    9. '    ' → logprob: -8.868585586547852
    10. '<|end|>' → logprob: -8.993585586547852

Token 379: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.11075422167778015
    2. '(' → logprob: -2.8607542514801025
    3. '(sum' → logprob: -3.1107542514801025
    4. '((' → logprob: -6.985754013061523
    5. '()' → logprob: -6.985754013061523
    6. '(n' → logprob: -7.360754013061523
    7. 'sum' → logprob: -8.235754013061523
    8. 'dp' → logprob: -9.485754013061523
    9. ' (' → logprob: -9.610754013061523
    10. '(
' → logprob: -9.735754013061523

Token 380: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7555363774299622
    2. '[(' → logprob: -1.0055363178253174
    3. '[n' → logprob: -2.2555363178253174
    4. '[cur' → logprob: -3.2555363178253174
    5. '1' → logprob: -5.0055365562438965
    6. '(' → logprob: -5.1305365562438965
    7. '(n' → logprob: -5.3805365562438965
    8. '[i' → logprob: -7.1305365562438965
    9. ')' → logprob: -7.1305365562438965
    10. ')[' → logprob: -7.6305365562438965

Token 381: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.040420740842819214
    2. '[n' → logprob: -3.6654207706451416
    3. ' %' → logprob: -5.5404205322265625
    4. '[(' → logprob: -5.7904205322265625
    5. '%n' → logprob: -6.4154205322265625
    6. '[' → logprob: -6.5404205322265625
    7. '(n' → logprob: -6.7904205322265625
    8. 't' → logprob: -7.2904205322265625
    9. '%s' → logprob: -7.4154205322265625
    10. '%d' → logprob: -7.9154205322265625

Token 382: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.024604277219623e-05
    2. '1' → logprob: -10.750040054321289
    3. ' ' → logprob: -11.375040054321289
    4. '(' → logprob: -12.875040054321289
    5. '0' → logprob: -14.125040054321289
    6. '(n' → logprob: -14.125040054321289
    7. '```' → logprob: -14.125040054321289
    8. '   ' → logprob: -14.250040054321289
    9. '31' → logprob: -14.687540054321289
    10. '  ' → logprob: -15.250040054321289

Token 383: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0042663197964429855
    2. '])' → logprob: -6.504266262054443
    3. ']' → logprob: -6.629266262054443
    4. '0' → logprob: -7.629266262054443
    5. '1' → logprob: -7.629266262054443
    6. '].' → logprob: -9.004266738891602
    7. '[' → logprob: -9.004266738891602
    8. '][-' → logprob: -9.879266738891602
    9. '][:' → logprob: -10.504266738891602
    10. ')[' → logprob: -10.754266738891602

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5560435652732849
    2. 'n' → logprob: -1.1810436248779297
    3. 'K' → logprob: -2.1810436248779297
    4. ':' → logprob: -6.55604362487793
    5. ':,' → logprob: -6.68104362487793
    6. '1' → logprob: -6.93104362487793
    7. 'range' → logprob: -7.18104362487793
    8. '-' → logprob: -7.30604362487793
    9. 'j' → logprob: -7.93104362487793
    10. '::-' → logprob: -8.68104362487793

Token 385: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006065295310690999
    2. '])' → logprob: -7.625606536865234
    3. ']' → logprob: -10.000606536865234
    4. '][-' → logprob: -10.125606536865234
    5. '0' → logprob: -11.000606536865234
    6. '[' → logprob: -12.125606536865234
    7. '][:' → logprob: -12.500606536865234
    8. ' ][' → logprob: -13.000606536865234
    9. '][_' → logprob: -14.000606536865234
    10. '][]' → logprob: -14.125606536865234

Token 386: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: 0.0
    2. ' K' → logprob: -17.0
    3. '0' → logprob: -18.125
    4. ':' → logprob: -19.875
    5. '
' → logprob: -19.875
    6. '   ' → logprob: -20.75
    7. ' ' → logprob: -21.25
    8. '	K' → logprob: -22.125
    9. '  ' → logprob: -22.5
    10. '[K' → logprob: -22.875

Token 387: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001847062085289508
    2. ')' → logprob: -8.625185012817383
    3. '])
' → logprob: -13.125185012817383
    4. ']' → logprob: -13.875185012817383
    5. '))' → logprob: -14.375185012817383
    6. ' ])' → logprob: -14.375185012817383
    7. ')])' → logprob: -14.625185012817383
    8. ')]' → logprob: -15.375185012817383
    9. '})' → logprob: -15.750185012817383
    10. ''])' → logprob: -16.625185012817383

Token 388: 'resolve' (ID: 31567)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 387
Tokens correctement prédits (1ère position, stricte): 172
Tokens correctement prédits (1ère position, avec adaptation): 183
Tokens correctement prédits (top 10): 332
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 47.29%
Précision (top 10): 85.79%
================================================================================
