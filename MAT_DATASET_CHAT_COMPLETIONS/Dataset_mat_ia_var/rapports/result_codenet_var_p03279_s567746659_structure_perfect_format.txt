================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

from bisect import bisect_left

MOD = 10**9 + 7

N, M = map(int, readline().split())
X = list(map(int, readline().split()))
Y = list(map(int, readline().split()))

L = []
R = []
for x in X:
    i = bisect_left(Y, x)
    if i in [0, M]:
        continue
    y0, y1 = Y[i - 1:i + 1]
    L.append(y0 - x)
    R.append(y1 - x)

Rtoi = {x: i for i, x in enumerate(sorted(set(R)), 1)}
R = [Rtoi[r] for r in R]

if len(R) == 0:
    print(1)
    exit()

class BIT():
    def __init__(self, max_n):
        self.size = max_n + 1
        self.tree = [0] * self.size

    def get_sum(self, i):
        s = 0
        while i:
            s += self.tree[i]
            i -= i & -i
        return s

    def add(self, i, x):
        while i < self.size:
            self.tree[i] += x
            i += i & -i

dp = BIT(max_n=max(R))
for _, r in sorted(set(zip(L, R)), reverse=True):
    x = dp.get_sum(r - 1) + 1
    x %= MOD
    dp.add(r, x)
answer = 1 + dp.get_sum(max(R))
answer %= MOD
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009628107771277428
    2. '_' → logprob: -6.0096282958984375
    3. 'line' → logprob: -6.1346282958984375
    4. ' (' → logprob: -6.3846282958984375
    5. '.' → logprob: -6.6346282958984375
    6. ')' → logprob: -8.009628295898438
    7. '_line' → logprob: -8.134628295898438
    8. 'space' → logprob: -8.509628295898438
    9. 'er' → logprob: -8.634628295898438
    10. '(
' → logprob: -8.759628295898438

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2815498411655426
    2. 'sys' → logprob: -1.4065498113632202
    3. ' lambda' → logprob: -9.281549453735352
    4. '(sys' → logprob: -9.281549453735352
    5. ' open' → logprob: -9.906549453735352
    6. '=sys' → logprob: -9.906549453735352
    7. 'open' → logprob: -10.281549453735352
    8. 'lambda' → logprob: -10.406549453735352
    9. '	sys' → logprob: -10.906549453735352
    10. ' ' → logprob: -11.156549453735352

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008454885333776474
    2. '.stdin' → logprob: -5.2584547996521
    3. '.readline' → logprob: -6.5084547996521
    4. '.stdout' → logprob: -7.0084547996521
    5. '.read' → logprob: -7.3834547996521
    6. '.argv' → logprob: -9.633455276489258
    7. ' .' → logprob: -10.508455276489258
    8. '.import' → logprob: -10.633455276489258
    9. '.exit' → logprob: -11.258455276489258
    10. '.write' → logprob: -11.383455276489258

Token 7: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.13131020963191986
    2. '.read' → logprob: -2.256310224533081
    3. '.' → logprob: -4.006309986114502
    4. '.readlines' → logprob: -9.38131046295166
    5. 'read' → logprob: -10.75631046295166
    6. '.Read' → logprob: -12.13131046295166
    7. '.buffer' → logprob: -13.38131046295166
    8. ' .' → logprob: -13.63131046295166
    9. '.write' → logprob: -14.38131046295166
    10. '.READ' → logprob: -14.38131046295166

Token 8: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3877542018890381
    2. '.read' → logprob: -1.137754201889038
    3. '.' → logprob: -7.137754440307617
    4. 'read' → logprob: -9.637754440307617
    5. '.readlines' → logprob: -11.137754440307617
    6. '.write' → logprob: -13.012754440307617
    7. '.re' → logprob: -13.262754440307617
    8. ' readline' → logprob: -13.512754440307617
    9. ' .' → logprob: -14.012754440307617
    10. '```' → logprob: -14.512754440307617

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20257413387298584
    2. '()' → logprob: -1.7025741338729858
    3. '(
' → logprob: -6.827574253082275
    4. '()
' → logprob: -10.202573776245117
    5. '(

' → logprob: -10.827573776245117
    6. ' ()' → logprob: -12.577573776245117
    7. '().' → logprob: -12.702573776245117
    8. ' (' → logprob: -13.202573776245117
    9. '()

' → logprob: -13.202573776245117
    10. ',' → logprob: -13.452573776245117

Token 10: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11648832261562347
    2. '(' → logprob: -2.241488218307495
    3. '(
' → logprob: -6.241488456726074
    4. '()
' → logprob: -7.616488456726074
    5. '_' → logprob: -8.116488456726074
    6. '\n' → logprob: -8.741488456726074
    7. ',' → logprob: -9.116488456726074
    8. ' ()' → logprob: -9.366488456726074
    9. '()

' → logprob: -9.491488456726074
    10. ')' → logprob: -9.616488456726074

Token 11: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22574424743652344
    2. '()' → logprob: -1.6007442474365234
    3. '(
' → logprob: -8.600744247436523
    4. '(

' → logprob: -10.225744247436523
    5. ' ()' → logprob: -10.725744247436523
    6. ' (' → logprob: -10.850744247436523
    7. ')' → logprob: -10.850744247436523
    8. '```' → logprob: -11.475744247436523
    9. '()
' → logprob: -11.975744247436523
    10. ' ' → logprob: -12.725744247436523

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.057624444365501404
    2. '()' → logprob: -2.932624340057373
    3. '=' → logprob: -6.182624340057373
    4. ' =' → logprob: -8.682624816894531
    5. ' (' → logprob: -8.932624816894531
    6. ')' → logprob: -9.057624816894531
    7. '(
' → logprob: -9.682624816894531
    8. 's' → logprob: -9.682624816894531
    9. '```' → logprob: -10.307624816894531
    10. '_' → logprob: -10.682624816894531

Token 13: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03804401680827141
    2. ' sys' → logprob: -3.288043975830078
    3. '=sys' → logprob: -13.413043975830078
    4. '	sys' → logprob: -14.538043975830078
    5. '(sys' → logprob: -15.038043975830078
    6. '/sys' → logprob: -16.788043975830078
    7. 'lambda' → logprob: -17.538043975830078
    8. ' ' → logprob: -17.663043975830078
    9. '_sys' → logprob: -17.788043975830078
    10. '.sys' → logprob: -18.163043975830078

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.6585650444030762
    2. '.readline' → logprob: -0.9085650444030762
    3. '.' → logprob: -2.658565044403076
    4. '.stdout' → logprob: -4.783565044403076
    5. ' .' → logprob: -8.158565521240234
    6. '.argv' → logprob: -8.408565521240234
    7. '.read' → logprob: -9.533565521240234
    8. '.stderr' → logprob: -9.658565521240234
    9. '.readlines' → logprob: -10.158565521240234
    10. '.input' → logprob: -10.658565521240234

Token 15: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01613900251686573
    2. '.buffer' → logprob: -4.141139030456543
    3. '.' → logprob: -9.391139030456543
    4. '.read' → logprob: -11.766139030456543
    5. 'buffer' → logprob: -12.266139030456543
    6. '.readlines' → logprob: -12.891139030456543
    7. '.stdin' → logprob: -13.016139030456543
    8. '.write' → logprob: -14.016139030456543
    9. ' .' → logprob: -14.391139030456543
    10. '.Buffer' → logprob: -15.141139030456543

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016599490481894463
    2. 'read' → logprob: -9.125165939331055
    3. ' readline' → logprob: -10.000165939331055
    4. '.read' → logprob: -11.500165939331055
    5. '.readlines' → logprob: -14.125165939331055
    6. 'line' → logprob: -14.750165939331055
    7. '_read' → logprob: -16.000165939331055
    8. '.' → logprob: -16.375165939331055
    9. 'getline' → logprob: -16.750165939331055
    10. '```' → logprob: -18.625165939331055

Token 17: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7646316885948181
    2. '()' → logprob: -1.639631748199463
    3. '
' → logprob: -2.139631748199463
    4. '\n' → logprob: -2.514631748199463
    5. 'def' → logprob: -2.639631748199463
    6. '(
' → logprob: -3.514631748199463
    7. '#' → logprob: -4.514631748199463
    8. 'import' → logprob: -5.014631748199463
    9. '\' → logprob: -5.139631748199463
    10. 'data' → logprob: -5.764631748199463

Token 18: 'read' (ID: 1293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1683005690574646
    2. '\n' → logprob: -3.2933006286621094
    3. '()' → logprob: -3.6683006286621094
    4. '(
' → logprob: -4.293300628662109
    5. '
' → logprob: -4.293300628662109
    6. 'data' → logprob: -4.418300628662109
    7. '\' → logprob: -4.793300628662109
    8. '_' → logprob: -4.918300628662109
    9. 'import' → logprob: -4.918300628662109
    10. 'def' → logprob: -5.168300628662109

Token 19: 'lines' (ID: 10105)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32267165184020996
    2. '()' → logprob: -1.32267165184021
    3. '(
' → logprob: -4.947671890258789
    4. '(

' → logprob: -6.697671890258789
    5. '```' → logprob: -8.697671890258789
    6. '\' → logprob: -8.947671890258789
    7. '(\' → logprob: -8.947671890258789
    8. '.' → logprob: -9.072671890258789
    9. '()
' → logprob: -9.322671890258789
    10. ')' → logprob: -9.447671890258789

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19300614297389984
    2. ' =' → logprob: -2.1930060386657715
    3. '()' → logprob: -2.9430060386657715
    4. '(' → logprob: -4.9430060386657715
    5. ')' → logprob: -6.3180060386657715
    6. '.' → logprob: -6.8180060386657715
    7. '```' → logprob: -8.19300651550293
    8. ' ' → logprob: -8.94300651550293
    9. '[:]' → logprob: -9.19300651550293
    10. '\' → logprob: -9.44300651550293

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17976056039333344
    2. 'sys' → logprob: -1.8047605752944946
    3. '=sys' → logprob: -12.054760932922363
    4. '(sys' → logprob: -12.554760932922363
    5. '	sys' → logprob: -12.929760932922363
    6. 'read' → logprob: -13.429760932922363
    7. 's' → logprob: -13.554760932922363
    8. '.sys' → logprob: -15.054760932922363
    9. '/sys' → logprob: -15.054760932922363
    10. ' read' → logprob: -15.679760932922363

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.012364253401756287
    2. '.' → logprob: -5.137364387512207
    3. '.stdout' → logprob: -5.387364387512207
    4. '.readline' → logprob: -7.137364387512207
    5. '.stderr' → logprob: -8.387364387512207
    6. '.argv' → logprob: -8.387364387512207
    7. ' .' → logprob: -8.512364387512207
    8. '.readlines' → logprob: -8.887364387512207
    9. 'stdin' → logprob: -9.637364387512207
    10. '​.' → logprob: -9.762364387512207

Token 23: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.1262388676404953
    2. '.readline' → logprob: -2.3762388229370117
    3. '.readlines' → logprob: -4.251238822937012
    4. '.' → logprob: -4.751238822937012
    5. 'buffer' → logprob: -6.376238822937012
    6. '.read' → logprob: -7.501238822937012
    7. ' .' → logprob: -8.626238822937012
    8. '.stdin' → logprob: -9.376238822937012
    9. '.Buffer' → logprob: -9.751238822937012
    10. '.lines' → logprob: -10.251238822937012

Token 24: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.5803262591362
    2. '.readline' → logprob: -1.0803263187408447
    3. 'read' → logprob: -2.4553263187408447
    4. '.read' → logprob: -4.205326080322266
    5. ' readline' → logprob: -10.955326080322266
    6. 'lines' → logprob: -11.455326080322266
    7. '.' → logprob: -11.455326080322266
    8. '```' → logprob: -12.830326080322266
    9. '_read' → logprob: -13.330326080322266
    10. 're' → logprob: -13.580326080322266

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33338144421577454
    2. 'def' → logprob: -2.333381414413452
    3. '#' → logprob: -2.583381414413452
    4. '\n' → logprob: -2.958381414413452
    5. '

' → logprob: -4.333381652832031
    6. '```' → logprob: -4.333381652832031
    7. '' → logprob: -4.583381652832031
    8. '\' → logprob: -4.958381652832031
    9. 'import' → logprob: -5.083381652832031
    10. '<|end|>' → logprob: -5.958381652832031

Token 26: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08844977617263794
    2. 'data' → logprob: -3.213449716567993
    3. '#' → logprob: -4.088449954986572
    4. 'd' → logprob: -5.213449954986572
    5. '\n' → logprob: -5.838449954986572
    6. '\' → logprob: -6.088449954986572
    7. '
' → logprob: -6.088449954986572
    8. 'class' → logprob: -6.213449954986572
    9. '(' → logprob: -6.213449954986572
    10. 'n' → logprob: -6.463449954986572

Token 27: ' bis' (ID: 7204)
  Prédit: ' io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' io' → logprob: -0.1056898906826973
    2. ' collections' → logprob: -3.2306900024414062
    3. ' os' → logprob: -3.7306900024414062
    4. ' sys' → logprob: -4.105690002441406
    5. ' ' → logprob: -4.480690002441406
    6. 'io' → logprob: -5.230690002441406
    7. 'collections' → logprob: -7.105690002441406
    8. ' typing' → logprob: -7.230690002441406
    9. ' math' → logprob: -7.480690002441406
    10. ' itertools' → logprob: -7.855690002441406

Token 28: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.143808109802194e-05
    2. 'e' → logprob: -10.625041007995605
    3. 'ectl' → logprob: -12.375041007995605
    4. 'ec' → logprob: -12.500041007995605
    5. 'ected' → logprob: -13.250041007995605
    6. 'ector' → logprob: -13.250041007995605
    7. '>' → logprob: -13.250041007995605
    8. 'import' → logprob: -13.625041007995605
    9. 'ections' → logprob: -14.250041007995605
    10. 'ection' → logprob: -14.750041007995605

Token 29: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.17983277142047882
    2. 'import' → logprob: -1.8048328161239624
    3. ' ' → logprob: -9.679832458496094
    4. '	import' → logprob: -10.929832458496094
    5. '_import' → logprob: -12.429832458496094
    6. ' ' → logprob: -13.054832458496094
    7. 'ort' → logprob: -14.929832458496094
    8. ' im' → logprob: -15.429832458496094
    9. ' importar' → logprob: -15.554832458496094
    10. ' impor' → logprob: -15.929832458496094

Token 30: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.07925250381231308
    2. 'bis' → logprob: -2.5792524814605713
    3. 'ins' → logprob: -8.079252243041992
    4. ' ins' → logprob: -9.954252243041992
    5. 'b' → logprob: -12.454252243041992
    6. '	b' → logprob: -15.079252243041992
    7. 'import' → logprob: -15.079252243041992
    8. ' b' → logprob: -15.204252243041992
    9. 'in' → logprob: -15.829252243041992
    10. 'bl' → logprob: -15.829252243041992

Token 31: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.5332478142227046e-05
    2. 'e' → logprob: -11.250015258789062
    3. 'ec' → logprob: -13.125015258789062
    4. 'ectl' → logprob: -15.875015258789062
    5. 'ected' → logprob: -16.375015258789062
    6. 'ecta' → logprob: -17.625015258789062
    7. 'ector' → logprob: -18.000015258789062
    8. '```' → logprob: -18.000015258789062
    9. 'ection' → logprob: -18.625015258789062
    10. 'ext' → logprob: -18.750015258789062

Token 32: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.6707587838172913
    2. '_right' → logprob: -1.1707587242126465
    3. '_' → logprob: -1.9207587242126465
    4. '<|end|>' → logprob: -4.7957587242126465
    5. 'import' → logprob: -5.0457587242126465
    6. '
' → logprob: -5.0457587242126465
    7. '_ins' → logprob: -6.0457587242126465
    8. 'def' → logprob: -7.0457587242126465
    9. ',' → logprob: -7.2957587242126465
    10. 'right' → logprob: -7.5457587242126465

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5144430994987488
    2. '

' → logprob: -1.0144431591033936
    3. 'def' → logprob: -4.3894429206848145
    4. '' → logprob: -5.1394429206848145
    5. '\n' → logprob: -5.3894429206848145
    6. 'import' → logprob: -5.3894429206848145
    7. '
' → logprob: -5.7644429206848145
    8. '<|end|>' → logprob: -5.8894429206848145
    9. '\' → logprob: -6.3894429206848145
    10. '```' → logprob: -6.8894429206848145

Token 34: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2039612978696823
    2. 'class' → logprob: -2.0789613723754883
    3. 'n' → logprob: -2.9539613723754883
    4. 'N' → logprob: -5.203961372375488
    5. 'data' → logprob: -7.453961372375488
    6. 'import' → logprob: -8.078961372375488
    7. 'input' → logprob: -8.703961372375488
    8. 'from' → logprob: -8.953961372375488
    9. '
' → logprob: -9.328961372375488
    10. 'A' → logprob: -9.453961372375488

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199704483151436
    2. '=' → logprob: -2.8119969367980957
    3. ' ' → logprob: -10.686997413635254
    4. ',' → logprob: -12.936997413635254
    5. '_' → logprob: -12.936997413635254
    6. ' =
' → logprob: -14.311997413635254
    7. ':' → logprob: -15.561997413635254
    8. ' =)' → logprob: -15.561997413635254
    9. '  ' → logprob: -15.686997413635254
    10. '.' → logprob: -15.936997413635254

Token 36: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0701293870806694
    2. '100' → logprob: -2.82012939453125
    3. ' ' → logprob: -4.82012939453125
    4. '998' → logprob: -9.94512939453125
    5. '1' → logprob: -11.19512939453125
    6. 'int' → logprob: -15.19512939453125
    7. '(' → logprob: -15.69512939453125
    8. 'pow' → logprob: -16.19512939453125
    9. '2' → logprob: -16.32012939453125
    10. '0' → logprob: -16.69512939453125

Token 37: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10095351189374924
    2. '100' → logprob: -2.3509535789489746
    3. '998' → logprob: -7.225953578948975
    4. '1' → logprob: -10.975953102111816
    5. ' ' → logprob: -13.600953102111816
    6. 'int' → logprob: -15.725953102111816
    7. '2' → logprob: -15.975953102111816
    8. '(' → logprob: -16.600954055786133
    9. '101' → logprob: -16.850954055786133
    10. '```' → logprob: -16.975954055786133

Token 38: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0009610046399757266
    2. '**' → logprob: -7.250960826873779
    3. '09' → logprob: -8.375961303710938
    4. '7' → logprob: -12.000961303710938
    5. '000' → logprob: -12.000961303710938
    6. '0' → logprob: -12.125961303710938
    7. '00' → logprob: -14.000961303710938
    8. '07' → logprob: -14.125961303710938
    9. '```' → logprob: -14.625961303710938
    10. '6' → logprob: -14.875961303710938

Token 39: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.75
    3. '```' → logprob: -18.875
    4. '+' → logprob: -19.25
    5. '10' → logprob: -20.75
    6. ' ' → logprob: -20.875
    7. '18' → logprob: -21.0
    8. '19' → logprob: -21.5
    9. '4' → logprob: -22.5
    10. '``' → logprob: -22.625

Token 40: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011876109056174755
    2. ' +' → logprob: -7.126187801361084
    3. '7' → logprob: -7.876187801361084
    4. '+
' → logprob: -13.376187324523926
    5. '＋' → logprob: -14.251187324523926
    6. '+

' → logprob: -14.876187324523926
    7. '```' → logprob: -15.001187324523926
    8. ' ' → logprob: -16.501188278198242
    9. 'plus' → logprob: -16.751188278198242
    10. '\' → logprob: -16.876188278198242

Token 41: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '+' → logprob: -17.125
    4. '```' → logprob: -18.875
    5. '   ' → logprob: -19.125
    6. '9' → logprob: -19.25
    7. '07' → logprob: -19.625
    8. '  ' → logprob: -20.5625
    9. '７' → logprob: -21.0
    10. '' → logprob: -21.4375

Token 42: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.0
    3. ' ' → logprob: -18.625
    4. '```' → logprob: -19.5
    5. '07' → logprob: -20.375
    6. '   ' → logprob: -20.5
    7. '７' → logprob: -21.0
    8. '9' → logprob: -21.5
    9. '

' → logprob: -21.5
    10. ' ' → logprob: -21.75

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28747716546058655
    2. '

' → logprob: -2.2874772548675537
    3. 'def' → logprob: -2.4124772548675537
    4. '\n' → logprob: -3.6624772548675537
    5. '```' → logprob: -4.037477016448975
    6. '' → logprob: -5.412477016448975
    7. 'newline' → logprob: -5.537477016448975
    8. '
' → logprob: -6.037477016448975
    9. 'class' → logprob: -6.787477016448975
    10. '<|end|>' → logprob: -7.287477016448975

Token 44: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001362020499072969
    2. 'class' → logprob: -6.876361846923828
    3. 'n' → logprob: -8.126361846923828
    4. 'N' → logprob: -11.001361846923828
    5. '\' → logprob: -12.376361846923828
    6. 'input' → logprob: -12.751361846923828
    7. 'import' → logprob: -13.001361846923828
    8. '```' → logprob: -13.251361846923828
    9. '
' → logprob: -13.751361846923828
    10. '#' → logprob: -14.001361846923828

Token 45: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6605091691017151
    2. ',' → logprob: -0.9105091691017151
    3. '=' → logprob: -2.5355091094970703
    4. ' ,' → logprob: -6.53550910949707
    5. ' ' → logprob: -7.91050910949707
    6. '=int' → logprob: -10.66050910949707
    7. '  ' → logprob: -12.41050910949707
    8. ')' → logprob: -12.53550910949707
    9. ' =
' → logprob: -13.16050910949707
    10. ' =)' → logprob: -13.16050910949707

Token 46: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7272367477416992
    2. 'M' → logprob: -1.4772367477416992
    3. ' K' → logprob: -2.352236747741699
    4. ' M' → logprob: -2.852236747741699
    5. '=' → logprob: -2.977236747741699
    6. 'Q' → logprob: -3.352236747741699
    7. ' =' → logprob: -4.227236747741699
    8. '_' → logprob: -5.102236747741699
    9. '*' → logprob: -5.352236747741699
    10. 'a' → logprob: -5.352236747741699

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760573744773865
    2. ' =' → logprob: -0.8260573744773865
    3. ',' → logprob: -9.076057434082031
    4. '=input' → logprob: -13.826057434082031
    5. '=

' → logprob: -13.951057434082031
    6. ' ' → logprob: -14.451057434082031
    7. '=int' → logprob: -15.201057434082031
    8. ' =
' → logprob: -15.326057434082031
    9. '＝' → logprob: -15.326057434082031
    10. ')' → logprob: -16.57605743408203

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08118502050638199
    2. 'map' → logprob: -2.5811851024627686
    3. ' read' → logprob: -6.4561848640441895
    4. 'read' → logprob: -7.7061848640441895
    5. ' ' → logprob: -8.831185340881348
    6. ' readline' → logprob: -9.706185340881348
    7. '0' → logprob: -10.456185340881348
    8. ' [' → logprob: -11.956185340881348
    9. ' div' → logprob: -12.081185340881348
    10. ' list' → logprob: -12.206185340881348

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05967581272125244
    2. '(' → logprob: -2.934675693511963
    3. '(str' → logprob: -5.934675693511963
    4. '(lambda' → logprob: -6.309675693511963
    5. '(input' → logprob: -8.934676170349121
    6. '(read' → logprob: -9.559676170349121
    7. 'int' → logprob: -10.059676170349121
    8. '(eval' → logprob: -11.434676170349121
    9. '(len' → logprob: -11.684676170349121
    10. '()' → logprob: -11.934676170349121

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01859433576464653
    2. ',input' → logprob: -4.268594264984131
    3. ',int' → logprob: -5.768594264984131
    4. ' ,' → logprob: -7.143594264984131
    5. '(' → logprob: -7.893594264984131
    6. ')' → logprob: -10.643594741821289
    7. '(input' → logprob: -10.893594741821289
    8. 'input' → logprob: -11.268594741821289
    9. '(sys' → logprob: -11.268594741821289
    10. ',(' → logprob: -11.643594741821289

Token 51: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12093570828437805
    2. 'input' → logprob: -2.3709356784820557
    3. ' read' → logprob: -4.620935916900635
    4. ' input' → logprob: -4.620935916900635
    5. 'sys' → logprob: -7.745935916900635
    6. ')' → logprob: -8.495935440063477
    7. ' readline' → logprob: -9.245935440063477
    8. ' sys' → logprob: -9.870935440063477
    9. ' ' → logprob: -11.495935440063477
    10. 'int' → logprob: -11.995935440063477

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.039262477308511734
    2. '()' → logprob: -3.539262533187866
    3. '())' → logprob: -4.664262294769287
    4. '()[' → logprob: -11.539262771606445
    5. '()]' → logprob: -12.039262771606445
    6. '(' → logprob: -12.789262771606445
    7. '()
' → logprob: -12.789262771606445
    8. ' ()' → logprob: -13.039262771606445
    9. '()))' → logprob: -13.164262771606445
    10. ')' → logprob: -13.289262771606445

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0029963627457618713
    2. 'strip' → logprob: -6.002996444702148
    3. 'rstrip' → logprob: -7.627996444702148
    4. 'decode' → logprob: -10.627996444702148
    5. ' split' → logprob: -11.877996444702148
    6. 'spl' → logprob: -13.877996444702148
    7. '(split' → logprob: -14.002996444702148
    8. ')' → logprob: -14.252996444702148
    9. 'read' → logprob: -15.752996444702148
    10. ' ' → logprob: -16.50299644470215

Token 54: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3945963382720947
    2. '())' → logprob: -1.1445963382720947
    3. '()' → logprob: -4.894596099853516
    4. '))' → logprob: -8.644596099853516
    5. '()))' → logprob: -11.394596099853516
    6. '(' → logprob: -11.519596099853516
    7. '())
' → logprob: -13.019596099853516
    8. ' ())' → logprob: -13.269596099853516
    9. ')`' → logprob: -13.894596099853516
    10. '`)' → logprob: -14.019596099853516

Token 55: 'X' (ID: 55)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.021907953545451164
    2. 'a' → logprob: -4.646907806396484
    3. 'data' → logprob: -5.271907806396484
    4. 'arr' → logprob: -6.021907806396484
    5. 'S' → logprob: -6.771907806396484
    6. 'H' → logprob: -7.146907806396484
    7. 'numbers' → logprob: -7.646907806396484
    8. 'cards' → logprob: -8.646907806396484
    9. 'array' → logprob: -8.771907806396484
    10. 'graph' → logprob: -9.021907806396484

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3710637092590332
    2. '=' → logprob: -1.3710637092590332
    3. ',' → logprob: -2.996063709259033
    4. 's' → logprob: -5.121063709259033
    5. ' ' → logprob: -9.746063232421875
    6. ' ,' → logprob: -9.871063232421875
    7. '_' → logprob: -10.121063232421875
    8. '_list' → logprob: -11.371063232421875
    9. ')' → logprob: -12.246063232421875
    10. '_values' → logprob: -12.371063232421875

Token 57: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05113357678055763
    2. ' list' → logprob: -3.051133632659912
    3. '[]' → logprob: -6.926133632659912
    4. '[' → logprob: -7.426133632659912
    5. '[list' → logprob: -7.551133632659912
    6. 'sorted' → logprob: -8.676133155822754
    7. ' [' → logprob: -9.301133155822754
    8. 'read' → logprob: -9.676133155822754
    9. ' []' → logprob: -10.176133155822754
    10. '[int' → logprob: -10.301133155822754

Token 58: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.21789513528347015
    2. '(' → logprob: -1.7178951501846313
    3. '(int' → logprob: -4.717895030975342
    4. '(read' → logprob: -5.092895030975342
    5. '(range' → logprob: -7.217895030975342
    6. '()' → logprob: -9.0928955078125
    7. '(X' → logprob: -9.5928955078125
    8. '(data' → logprob: -9.9678955078125
    9. '(eval' → logprob: -10.0928955078125
    10. '(x' → logprob: -10.2178955078125

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000694919959641993
    2. '(' → logprob: -7.375694751739502
    3. 'int' → logprob: -9.87569522857666
    4. ',int' → logprob: -11.75069522857666
    5. '<int' → logprob: -12.37569522857666
    6. ']int' → logprob: -13.37569522857666
    7. '[int' → logprob: -13.75069522857666
    8. '=int' → logprob: -14.12569522857666
    9. '(
' → logprob: -14.62569522857666
    10. '	int' → logprob: -15.00069522857666

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018101456225849688
    2. ' ,' → logprob: -9.500181198120117
    3. '(read' → logprob: -10.500181198120117
    4. ',line' → logprob: -10.500181198120117
    5. ',int' → logprob: -10.625181198120117
    6. 'read' → logprob: -11.500181198120117
    7. ',input' → logprob: -12.250181198120117
    8. ',map' → logprob: -12.875181198120117
    9. ',(' → logprob: -13.375181198120117
    10. ',list' → logprob: -13.875181198120117

Token 61: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.013234462589025497
    2. ' readline' → logprob: -4.388234615325928
    3. ' read' → logprob: -7.263234615325928
    4. 'range' → logprob: -11.88823413848877
    5. '(read' → logprob: -11.88823413848877
    6. '.readline' → logprob: -13.13823413848877
    7. '	read' → logprob: -13.38823413848877
    8. 'readonly' → logprob: -13.51323413848877
    9. 'lambda' → logprob: -13.88823413848877
    10. ' ' → logprob: -13.88823413848877

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.875006675720215
    4. '().'' → logprob: -17.7500057220459
    5. '().__' → logprob: -17.8750057220459
    6. '()
' → logprob: -18.0000057220459
    7. '()?.' → logprob: -18.2500057220459
    8. '>().' → logprob: -18.6250057220459
    9. '()[' → logprob: -18.8750057220459
    10. '()].' → logprob: -19.0000057220459

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1888679839321412e-05
    2. 'strip' → logprob: -11.000021934509277
    3. ' split' → logprob: -12.875021934509277
    4. 'rstrip' → logprob: -13.750021934509277
    5. '(split' → logprob: -14.125021934509277
    6. 'decode' → logprob: -14.625021934509277
    7. 'read' → logprob: -16.25002098083496
    8. 'spl' → logprob: -16.75002098083496
    9. ')' → logprob: -17.37502098083496
    10. '().' → logprob: -17.87502098083496

Token 64: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20911893248558044
    2. '))' → logprob: -1.7091189622879028
    3. '()' → logprob: -5.334118843078613
    4. '())' → logprob: -5.959118843078613
    5. ')' → logprob: -8.584118843078613
    6. '(' → logprob: -9.834118843078613
    7. '()))
' → logprob: -11.584118843078613
    8. '()));' → logprob: -11.709118843078613
    9. '()))

' → logprob: -13.084118843078613
    10. '(),' → logprob: -13.084118843078613

Token 65: 'Y' (ID: 56)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.26456981897354126
    2. 'Y' → logprob: -2.2645697593688965
    3. 'A' → logprob: -3.5145697593688965
    4. 'D' → logprob: -3.5145697593688965
    5. 'C' → logprob: -4.0145697593688965
    6. 'Q' → logprob: -4.3895697593688965
    7. 'H' → logprob: -4.3895697593688965
    8. '#' → logprob: -5.2645697593688965
    9. 'L' → logprob: -5.3895697593688965
    10. 'S' → logprob: -5.7645697593688965

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687199354171753
    2. '=' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.761872291564941
    4. ',' → logprob: -15.136872291564941
    5. '=list' → logprob: -16.011871337890625
    6. ')' → logprob: -17.011871337890625
    7. '＝' → logprob: -17.261871337890625
    8. ' =)' → logprob: -17.386871337890625
    9. '<|end|>' → logprob: -17.511871337890625
    10. '=int' → logprob: -17.511871337890625

Token 67: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07900524139404297
    2. ' list' → logprob: -2.579005241394043
    3. '(list' → logprob: -9.079005241394043
    4. '=list' → logprob: -14.579005241394043
    5. 'map' → logprob: -15.329005241394043
    6. 'int' → logprob: -15.454005241394043
    7. 'sorted' → logprob: -15.579005241394043
    8. '[list' → logprob: -16.20400619506836
    9. '	list' → logprob: -16.57900619506836
    10. ':list' → logprob: -16.95400619506836

Token 68: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02643417753279209
    2. '(' → logprob: -3.6514341831207275
    3. '(int' → logprob: -9.026433944702148
    4. ' (' → logprob: -12.276433944702148
    5. '(range' → logprob: -13.276433944702148
    6. '(
' → logprob: -13.276433944702148
    7. '(s' → logprob: -13.526433944702148
    8. '(m' → logprob: -14.401433944702148
    9. 'map' → logprob: -14.526433944702148
    10. '(list' → logprob: -14.901433944702148

Token 69: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015400926349684596
    2. 'int' → logprob: -6.626540184020996
    3. '=int' → logprob: -9.376540184020996
    4. '<int' → logprob: -9.626540184020996
    5. ',int' → logprob: -10.376540184020996
    6. ']int' → logprob: -11.126540184020996
    7. '[int' → logprob: -11.251540184020996
    8. ' int' → logprob: -12.876540184020996
    9. ':int' → logprob: -13.876540184020996
    10. '	int' → logprob: -14.751540184020996

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08549666404724121
    2. ',int' → logprob: -2.960496664047241
    3. '(int' → logprob: -3.585496664047241
    4. 'int' → logprob: -6.08549690246582
    5. ' ,' → logprob: -9.33549690246582
    6. '=int' → logprob: -10.83549690246582
    7. '[int' → logprob: -11.33549690246582
    8. '),' → logprob: -11.58549690246582
    9. '<int' → logprob: -11.96049690246582
    10. ' int' → logprob: -12.46049690246582

Token 71: ' readline' (ID: 179561)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12142392247915268
    2. 'read' → logprob: -2.2464239597320557
    3. ' readline' → logprob: -4.871423721313477
    4. ' int' → logprob: -7.371423721313477
    5. '(int' → logprob: -8.621423721313477
    6. ' read' → logprob: -10.996423721313477
    7. '[int' → logprob: -11.121423721313477
    8. '.readline' → logprob: -11.371423721313477
    9. '<int' → logprob: -11.621423721313477
    10. ')' → logprob: -11.871423721313477

Token 72: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -13.625001907348633
    3. ' ().' → logprob: -16.125001907348633
    4. '())' → logprob: -16.250001907348633
    5. '()).' → logprob: -17.750001907348633
    6. '()[' → logprob: -18.250001907348633
    7. '.' → logprob: -18.500001907348633
    8. ')' → logprob: -18.750001907348633
    9. '().__' → logprob: -18.875001907348633
    10. '()))' → logprob: -19.125001907348633

Token 73: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.153795766294934e-06
    2. 'read' → logprob: -13.125005722045898
    3. 'strip' → logprob: -13.500005722045898
    4. ')' → logprob: -13.625005722045898
    5. ' split' → logprob: -14.500005722045898
    6. 'decode' → logprob: -15.500005722045898
    7. 'int' → logprob: -16.0000057220459
    8. 'rstrip' → logprob: -16.0000057220459
    9. '.split' → logprob: -16.1250057220459
    10. '(split' → logprob: -16.3750057220459

Token 74: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11764540523290634
    2. '))' → logprob: -2.367645502090454
    3. '())' → logprob: -4.367645263671875
    4. '()' → logprob: -5.617645263671875
    5. ')' → logprob: -6.992645263671875
    6. '()));' → logprob: -10.492645263671875
    7. '()))
' → logprob: -11.617645263671875
    8. '(' → logprob: -11.617645263671875
    9. '()))

' → logprob: -13.492645263671875
    10. '())).' → logprob: -13.742645263671875

Token 75: 'L' (ID: 43)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.01402199361473322
    2. 'A' → logprob: -5.889021873474121
    3. 'dp' → logprob: -6.639021873474121
    4. '```' → logprob: -6.764021873474121
    5. 'def' → logprob: -6.889021873474121
    6. '#' → logprob: -7.139021873474121
    7. 'sorted' → logprob: -7.764021873474121
    8. 'x' → logprob: -7.889021873474121
    9. 'a' → logprob: -7.889021873474121
    10. 'ans' → logprob: -8.139021873474121

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4317953586578369
    2. '=' → logprob: -1.181795358657837
    3. 'en' → logprob: -4.681795120239258
    4. '=[]' → logprob: -4.681795120239258
    5. 'X' → logprob: -4.931795120239258
    6. 'EN' → logprob: -5.431795120239258
    7. '_sorted' → logprob: -6.181795120239258
    8. 'eft' → logprob: -6.181795120239258
    9. 'e' → logprob: -6.806795120239258
    10. 'x' → logprob: -6.806795120239258

Token 77: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.48268038034439087
    2. '[' → logprob: -1.857680320739746
    3. '[len' → logprob: -2.107680320739746
    4. 'sorted' → logprob: -3.607680320739746
    5. '[N' → logprob: -3.982680320739746
    6. '0' → logprob: -4.482680320739746
    7. 'len' → logprob: -4.982680320739746
    8. 'X' → logprob: -4.982680320739746
    9. '[M' → logprob: -5.107680320739746
    10. '[X' → logprob: -5.107680320739746

Token 78: 'R' (ID: 49)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036942551378160715
    2. ' for' → logprob: -6.2536940574646
    3. 'i' → logprob: -7.1286940574646
    4. 'x' → logprob: -8.378694534301758
    5. 'prev' → logprob: -9.128694534301758
    6. 'idx' → logprob: -9.503694534301758
    7. 'a' → logprob: -9.753694534301758
    8. 'pos' → logprob: -10.128694534301758
    9. 'p' → logprob: -10.128694534301758
    10. 'X' → logprob: -10.128694534301758

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255360186100006
    2. '=' → logprob: -1.6005359888076782
    3. '=[]' → logprob: -9.600536346435547
    4. '.append' → logprob: -10.975536346435547
    5. ',' → logprob: -11.225536346435547
    6. '.' → logprob: -11.475536346435547
    7. '_' → logprob: -13.225536346435547
    8. ' ' → logprob: -13.225536346435547
    9. '.extend' → logprob: -13.475536346435547
    10. '[' → logprob: -13.600536346435547

Token 80: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2266702950000763
    2. ' []' → logprob: -1.601670265197754
    3. '[' → logprob: -7.851670265197754
    4. '[len' → logprob: -8.226670265197754
    5. 'X' → logprob: -9.226670265197754
    6. ' [' → logprob: -9.476670265197754
    7. ' ' → logprob: -9.851670265197754
    8. 'L' → logprob: -10.226670265197754
    9. '[]
' → logprob: -10.351670265197754
    10. ' X' → logprob: -10.351670265197754

Token 81: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04553631693124771
    2. ' for' → logprob: -5.170536518096924
    3. 'pos' → logprob: -5.295536518096924
    4. 'idx' → logprob: -5.295536518096924
    5. 'cur' → logprob: -5.295536518096924
    6. 'dp' → logprob: -6.170536518096924
    7. 'count' → logprob: -6.295536518096924
    8. 'curr' → logprob: -6.420536518096924
    9. 'cum' → logprob: -6.420536518096924
    10. 'prev' → logprob: -6.670536518096924

Token 82: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0857584476470947
    2. 'x' → logprob: -1.2107584476470947
    3. 'i' → logprob: -1.5857584476470947
    4. ' x' → logprob: -2.2107584476470947
    5. '_' → logprob: -3.5857584476470947
    6. ' _' → logprob: -4.710758209228516
    7. '_i' → logprob: -5.460758209228516
    8. '_x' → logprob: -5.585758209228516
    9. 'a' → logprob: -5.960758209228516
    10. ' ' → logprob: -7.210758209228516

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.039197154343128204
    2. 'in' → logprob: -3.2891972064971924
    3. ' ' → logprob: -6.914196968078613
    4. 'x' → logprob: -10.539196968078613
    5. '_in' → logprob: -10.664196968078613
    6. ',' → logprob: -10.789196968078613
    7. '_' → logprob: -10.789196968078613
    8. 'n' → logprob: -11.039196968078613
    9. '  ' → logprob: -11.664196968078613
    10. 's' → logprob: -11.664196968078613

Token 84: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0004348413785919547
    2. ' X' → logprob: -7.750434875488281
    3. 'range' → logprob: -13.125434875488281
    4. ' ' → logprob: -13.875434875488281
    5. 'Y' → logprob: -14.625434875488281
    6. ' range' → logprob: -14.750434875488281
    7. '  ' → logprob: -15.500434875488281
    8. 'sorted' → logprob: -15.750434875488281
    9. '   ' → logprob: -17.62543487548828
    10. '(X' → logprob: -18.00043487548828

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044163595885038376
    2. ':
' → logprob: -7.875441551208496
    3. ' :' → logprob: -10.125441551208496
    4. ':L' → logprob: -12.250441551208496
    5. '   ' → logprob: -12.875441551208496
    6. 'L' → logprob: -12.875441551208496
    7. ',' → logprob: -13.125441551208496
    8. '=' → logprob: -13.750441551208496
    9. '):' → logprob: -14.250441551208496
    10. '>' → logprob: -14.375441551208496

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022778885904699564
    2. ' L' → logprob: -7.127277851104736
    3. ' if' → logprob: -7.877277851104736
    4. ' ' → logprob: -8.377278327941895
    5. 'L' → logprob: -8.627278327941895
    6. '    ' → logprob: -9.002278327941895
    7. ' bis' → logprob: -9.002278327941895
    8. 'bis' → logprob: -9.627278327941895
    9. '[' → logprob: -9.752278327941895
    10. 'if' → logprob: -10.252278327941895

Token 87: ' i' (ID: 575)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7604501247406006
    2. 'pos' → logprob: -1.8854501247406006
    3. ' L' → logprob: -2.2604501247406006
    4. 'i' (adapté à ' i') → logprob: -2.5104501247406006
    5. 'idx' → logprob: -2.5104501247406006
    6. ' idx' → logprob: -3.7604501247406006
    7. '   ' → logprob: -4.38545036315918
    8. ' i' → logprob: -4.51045036315918
    9. ' pos' → logprob: -4.51045036315918
    10. 'l' → logprob: -4.51045036315918

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08926071226596832
    2. '=' → logprob: -2.4642608165740967
    3. 'nd' → logprob: -8.964261054992676
    4. 'f' → logprob: -8.964261054992676
    5. 'n' → logprob: -10.589261054992676
    6. 'dx' → logprob: -11.589261054992676
    7. 'x' → logprob: -11.964261054992676
    8. ' ' → logprob: -12.464261054992676
    9. '   ' → logprob: -12.839261054992676
    10. 'nt' → logprob: -13.089261054992676

Token 89: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.474090576171875
    2. 'bis' → logprob: -0.974090576171875
    3. ' ' → logprob: -12.224090576171875
    4. '0' → logprob: -12.474090576171875
    5. 'len' → logprob: -13.474090576171875
    6. 'b' → logprob: -13.724090576171875
    7. '	b' → logprob: -14.474090576171875
    8. ' len' → logprob: -14.974090576171875
    9. '-b' → logprob: -15.349090576171875
    10. '   ' → logprob: -15.911590576171875

Token 90: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.023353440687060356
    2. 'sect' → logprob: -3.773353338241577
    3. 'ct' → logprob: -9.648353576660156
    4. 'ce' → logprob: -11.398353576660156
    5. 'с' → logprob: -11.648353576660156
    6. 'e' → logprob: -12.023353576660156
    7. 's' → logprob: -12.273353576660156
    8. 'c' → logprob: -12.273353576660156
    9. 'ected' → logprob: -13.273353576660156
    10. '```' → logprob: -13.273353576660156

Token 91: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.3306015716807451e-05
    2. '_right' → logprob: -11.50001335144043
    3. 'left' → logprob: -14.00001335144043
    4. '_LEFT' → logprob: -14.25001335144043
    5. '_le' → logprob: -14.50001335144043
    6. '_' → logprob: -14.62501335144043
    7. '_Left' → logprob: -14.87501335144043
    8. 'Left' → logprob: -15.50001335144043
    9. '_l' → logprob: -16.12501335144043
    10. '_lower' → logprob: -17.87501335144043

Token 92: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.011155818589031696
    2. '(R' → logprob: -4.511155605316162
    3. '(' → logprob: -10.01115608215332
    4. '(L' → logprob: -10.13615608215332
    5. '(X' → logprob: -11.76115608215332
    6. '(M' → logprob: -11.88615608215332
    7. '(y' → logprob: -12.88615608215332
    8. 'Y' → logprob: -13.13615608215332
    9. '(A' → logprob: -13.88615608215332
    10. ')' → logprob: -13.88615608215332

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06228427588939667
    2. ',x' → logprob: -2.812284231185913
    3. ' ,' → logprob: -8.187284469604492
    4. ',y' → logprob: -11.312284469604492
    5. ',i' → logprob: -11.437284469604492
    6. '(x' → logprob: -12.562284469604492
    7. 'x' → logprob: -12.937284469604492
    8. ',(' → logprob: -13.062284469604492
    9. '(' → logprob: -13.437284469604492
    10. '),' → logprob: -14.437284469604492

Token 94: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022849082946777
    2. ' x' → logprob: -1.9102284908294678
    3. '(x' → logprob: -13.160228729248047
    4. ')x' → logprob: -13.285228729248047
    5. '	x' → logprob: -14.910228729248047
    6. ')' → logprob: -15.285228729248047
    7. ',x' → logprob: -17.285228729248047
    8. '(' → logprob: -17.410228729248047
    9. '>x' → logprob: -18.035228729248047
    10. '<x' → logprob: -18.035228729248047

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07032152265310287
    2. ')
' → logprob: -2.695321559906006
    3. ' )' → logprob: -8.570321083068848
    4. '+' → logprob: -9.445321083068848
    5. ' )
' → logprob: -9.945321083068848
    6. ')
' → logprob: -10.445321083068848
    7. ')

' → logprob: -11.445321083068848
    8. '-' → logprob: -11.820321083068848
    9. '))' → logprob: -12.570321083068848
    10. ' ' → logprob: -12.820321083068848

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09295287728309631
    2. 'L' → logprob: -2.4679529666900635
    3. 'if' → logprob: -6.342952728271484
    4. ' if' → logprob: -6.592952728271484
    5. ' L' → logprob: -7.467952728271484
    6. '<|end|>' → logprob: -8.842952728271484
    7. 'R' → logprob: -10.342952728271484
    8. ')' → logprob: -10.592952728271484
    9. ',' → logprob: -10.592952728271484
    10. '    
' → logprob: -11.217952728271484

Token 97: ' if' (ID: 538)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4355349540710449
    2. 'if' (adapté à ' if') → logprob: -1.185534954071045
    3. ' if' → logprob: -3.185534954071045
    4. ' L' → logprob: -5.685534954071045
    5. 'R' → logprob: -6.560534954071045
    6. '   ' → logprob: -6.685534954071045
    7. ' R' → logprob: -10.935535430908203
    8. 'i' → logprob: -11.185535430908203
    9. 'l' → logprob: -11.435535430908203
    10. '#' → logprob: -12.310535430908203

Token 98: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1801982820034027
    2. 'i' → logprob: -1.805198311805725
    3. ' ' → logprob: -8.055198669433594
    4. 'x' → logprob: -9.805198669433594
    5. '0' → logprob: -10.930198669433594
    6. '   ' → logprob: -10.930198669433594
    7. ' x' → logprob: -11.430198669433594
    8. '	i' → logprob: -11.680198669433594
    9. '  ' → logprob: -11.930198669433594
    10. 'len' → logprob: -12.680198669433594

Token 99: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32547512650489807
    2. '==' → logprob: -1.7004750967025757
    3. ' <' → logprob: -2.4504752159118652
    4. '<' → logprob: -5.325475215911865
    5. ' >' → logprob: -6.200475215911865
    6. '>' → logprob: -7.700475215911865
    7. '=' → logprob: -7.700475215911865
    8. ' ' → logprob: -7.700475215911865
    9. '<|end|>' → logprob: -8.325474739074707
    10. ':' → logprob: -8.825474739074707

Token 100: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10860613733530045
    2. '[' → logprob: -3.7336061000823975
    3. '{' → logprob: -3.8586061000823975
    4. ' {' → logprob: -4.108606338500977
    5. ' (' → logprob: -4.358606338500977
    6. 'range' → logprob: -4.358606338500977
    7. ' [' → logprob: -5.233606338500977
    8. '(' → logprob: -5.358606338500977
    9. ' R' → logprob: -6.233606338500977
    10. '(range' → logprob: -6.608606338500977

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005077573587186635
    2. ' ' → logprob: -7.625507831573486
    3. 'len' → logprob: -11.750507354736328
    4. 'range' → logprob: -12.125507354736328
    5. ',' → logprob: -13.125507354736328
    6. '{' → logprob: -13.625507354736328
    7. ' range' → logprob: -14.250507354736328
    8. ']' → logprob: -14.750507354736328
    9. ')' → logprob: -14.875507354736328
    10. 'L' → logprob: -15.250507354736328

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007742793299257755
    2. ' ,' → logprob: -5.632742881774902
    3. ',i' → logprob: -6.257742881774902
    4. ',len' → logprob: -6.507742881774902
    5. ' or' → logprob: -8.632742881774902
    6. ' ' → logprob: -9.382742881774902
    7. ']:' → logprob: -9.382742881774902
    8. ',N' → logprob: -9.507742881774902
    9. ',n' → logprob: -9.757742881774902
    10. ']' → logprob: -10.007742881774902

Token 103: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3813672661781311
    2. ' M' → logprob: -1.2563672065734863
    3. 'len' → logprob: -3.7563672065734863
    4. ' len' → logprob: -4.756367206573486
    5. ' ' → logprob: -8.381367683410645
    6. 'N' → logprob: -9.756367683410645
    7. '  ' → logprob: -10.256367683410645
    8. 'm' → logprob: -11.131367683410645
    9. '   ' → logprob: -11.256367683410645
    10. ' N' → logprob: -11.693867683410645

Token 104: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.014370576478540897
    2. ']' → logprob: -4.639370441436768
    3. ']:
' → logprob: -5.764370441436768
    4. '):' → logprob: -8.014370918273926
    5. ']):' → logprob: -8.014370918273926
    6. '-' → logprob: -8.139370918273926
    7. ' ]' → logprob: -8.264370918273926
    8. ']:

' → logprob: -9.764370918273926
    9. ' -' → logprob: -9.889370918273926
    10. ',' → logprob: -10.889370918273926

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007862604223191738
    2. ' L' → logprob: -5.632862567901611
    3. 'L' → logprob: -6.132862567901611
    4. '   ' → logprob: -7.007862567901611
    5. ' continue' → logprob: -7.507862567901611
    6. 'continue' → logprob: -8.13286304473877
    7. 'R' → logprob: -9.25786304473877
    8. ' R' → logprob: -9.38286304473877
    9. '           ' → logprob: -10.50786304473877
    10. '        
' → logprob: -10.75786304473877

Token 106: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47801411151885986
    2. 'continue' (adapté à ' continue') → logprob: -1.8530141115188599
    3. ' continue' → logprob: -2.1030139923095703
    4. 'L' → logprob: -2.6030139923095703
    5. ' L' → logprob: -4.10301399230957
    6. 'print' → logprob: -5.85301399230957
    7. ' pass' → logprob: -5.97801399230957
    8. 'pass' → logprob: -6.22801399230957
    9. '       ' → logprob: -6.60301399230957
    10. ' ' → logprob: -7.35301399230957

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03494573384523392
    2. 'L' → logprob: -3.4099457263946533
    3. ' L' → logprob: -7.534945964813232
    4. '  ' → logprob: -8.284945487976074
    5. '<|end|>' → logprob: -9.034945487976074
    6. '
' → logprob: -9.534945487976074
    7. '    
' → logprob: -9.659945487976074
    8. ' ' → logprob: -9.659945487976074
    9. 'R' → logprob: -9.784945487976074
    10. '  
' → logprob: -10.659945487976074

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02070140838623047
    2. 'L' → logprob: -3.8957014083862305
    3. ' L' → logprob: -9.39570140838623
    4. '    
' → logprob: -11.14570140838623
    5. '       ' → logprob: -11.39570140838623
    6. '  ' → logprob: -11.89570140838623
    7. 'for' → logprob: -12.02070140838623
    8. 'if' → logprob: -12.02070140838623
    9. 'else' → logprob: -12.14570140838623
    10. '
' → logprob: -12.27070140838623

Token 109: ' y' (ID: 342)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.018451575189828873
    2. '   ' → logprob: -4.393451690673828
    3. ' L' → logprob: -6.268451690673828
    4. 'l' → logprob: -6.268451690673828
    5. 'if' → logprob: -6.643451690673828
    6. 'else' → logprob: -7.643451690673828
    7. 'left' → logprob: -9.518451690673828
    8. 'a' → logprob: -9.768451690673828
    9. 'elif' → logprob: -10.143451690673828
    10. ' if' → logprob: -10.518451690673828

Token 110: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7569102048873901
    2. ' =' → logprob: -1.0069102048873901
    3. '_left' → logprob: -2.0069103240966797
    4. 'L' → logprob: -4.13191032409668
    5. '0' → logprob: -5.50691032409668
    6. '_lower' → logprob: -5.63191032409668
    7. '_low' → logprob: -6.00691032409668
    8. 'left' → logprob: -6.88191032409668
    9. '-' → logprob: -7.13191032409668
    10. '_' → logprob: -7.38191032409668

Token 111: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04548780247569084
    2. '=' → logprob: -3.295487880706787
    3. ',' → logprob: -4.920487880706787
    4. ' ,' → logprob: -9.795487403869629
    5. ' ' → logprob: -10.545487403869629
    6. ',y' → logprob: -10.670487403869629
    7. '=y' → logprob: -11.545487403869629
    8. ' =
' → logprob: -12.795487403869629
    9. '   ' → logprob: -12.920487403869629
    10. ',Y' → logprob: -14.170487403869629

Token 112: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2018212527036667
    2. 'y' → logprob: -1.701821208000183
    3. 'Y' → logprob: -8.701821327209473
    4. ' =' → logprob: -9.201821327209473
    5. '=' → logprob: -9.576821327209473
    6. ' Y' → logprob: -9.951821327209473
    7. '=y' → logprob: -12.201821327209473
    8. ' ' → logprob: -12.576821327209473
    9. ' ' → logprob: -12.701821327209473
    10. '    ' → logprob: -13.076821327209473

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1881679743528366
    2. '=' → logprob: -2.0631680488586426
    3. 'y' → logprob: -4.438168048858643
    4. ',' → logprob: -4.563168048858643
    5. ' =' → logprob: -4.563168048858643
    6. '=y' → logprob: -5.063168048858643
    7. ',y' → logprob: -5.813168048858643
    8. ' y' → logprob: -6.563168048858643
    9. ' ' → logprob: -8.438167572021484
    10. '-' → logprob: -8.438167572021484

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931546926498413
    2. ' =' → logprob: -0.6931546926498413
    3. '=y' → logprob: -12.443154335021973
    4. ' ' → logprob: -13.568154335021973
    5. ',' → logprob: -13.818154335021973
    6. '   ' → logprob: -14.693154335021973
    7. '    ' → logprob: -15.318154335021973
    8. '=

' → logprob: -15.818154335021973
    9. '  ' → logprob: -16.44315528869629
    10. '=
' → logprob: -16.56815528869629

Token 115: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.02332025021314621
    2. ' Y' → logprob: -3.773320198059082
    3. '   ' → logprob: -9.523320198059082
    4. '	Y' → logprob: -13.773320198059082
    5. '    ' → logprob: -14.773320198059082
    6. '(Y' → logprob: -15.648320198059082
    7. ' ' → logprob: -17.1483211517334
    8. '  ' → logprob: -18.0233211517334
    9. 'y' → logprob: -18.1483211517334
    10. ',Y' → logprob: -18.5233211517334

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. 'i' → logprob: -12.500004768371582
    3. '[' → logprob: -14.375004768371582
    4. '   ' → logprob: -15.250004768371582
    5. '[
' → logprob: -15.625004768371582
    6. '
' → logprob: -15.875004768371582
    7. '[I' → logprob: -16.7500057220459
    8. 's' → logprob: -17.1250057220459
    9. '

' → logprob: -18.3750057220459
    10. '{i' → logprob: -18.5000057220459

Token 117: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009773205034434795
    2. ' -' → logprob: -4.634773254394531
    3. '],' → logprob: -11.509773254394531
    4. '1' → logprob: -12.259773254394531
    5. ' ' → logprob: -13.759773254394531
    6. ']' → logprob: -14.509773254394531
    7. '   ' → logprob: -15.009773254394531
    8. '0' → logprob: -15.509773254394531
    9. '−' → logprob: -15.884773254394531
    10. '2' → logprob: -16.38477325439453

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021899950224906206
    2. ' ' → logprob: -6.127190113067627
    3. ']' → logprob: -13.377189636230469
    4. '<|end|>' → logprob: -14.127189636230469
    5. '  ' → logprob: -14.252189636230469
    6. ',' → logprob: -14.627189636230469
    7. '0' → logprob: -15.252189636230469
    8. '   ' → logprob: -15.252189636230469
    9. '+' → logprob: -15.377189636230469
    10. '<|end|>' → logprob: -15.627189636230469

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. ']' → logprob: -15.125014305114746
    4. '   ' → logprob: -15.250014305114746
    5. '  ' → logprob: -16.56251335144043
    6. '<|end|>' → logprob: -16.93751335144043
    7. ',' → logprob: -17.00001335144043
    8. '```' → logprob: -17.12501335144043
    9. '<|end|>' → logprob: -17.31251335144043
    10. '１' → logprob: -17.37501335144043

Token 120: ':i' (ID: 34041)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.20191194117069244
    2. ',' → logprob: -1.7019119262695312
    3. ' ,' → logprob: -7.701911926269531
    4. ']' → logprob: -10.826911926269531
    5. ' ],' → logprob: -10.951911926269531
    6. ',i' → logprob: -12.826911926269531
    7. ',y' → logprob: -13.201911926269531
    8. '),' → logprob: -13.826911926269531
    9. ' ' → logprob: -14.076911926269531
    10. '>,' → logprob: -14.076911926269531

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000982435536570847
    2. '+i' → logprob: -7.625982284545898
    3. ' +' → logprob: -7.875982284545898
    4. '1' → logprob: -9.750982284545898
    5. 'i' → logprob: -9.875982284545898
    6. '2' → logprob: -12.625982284545898
    7. '＋' → logprob: -14.250982284545898
    8. '[i' → logprob: -15.375982284545898
    9. ' i' → logprob: -15.500982284545898
    10. '```' → logprob: -16.0009822845459

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006872728932648897
    2. '2' → logprob: -5.631872653961182
    3. '+' → logprob: -5.756872653961182
    4. ' ' → logprob: -9.25687313079834
    5. ' +' → logprob: -12.38187313079834
    6. ']' → logprob: -13.13187313079834
    7. '   ' → logprob: -13.63187313079834
    8. '```' → logprob: -14.06937313079834
    9. '11' → logprob: -14.69437313079834
    10. '=' → logprob: -15.13187313079834

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004278083215467632
    2. '2' → logprob: -7.875427722930908
    3. '+' → logprob: -10.000428199768066
    4. ' ' → logprob: -13.125428199768066
    5. '11' → logprob: -16.25042724609375
    6. '```' → logprob: -16.37542724609375
    7. '   ' → logprob: -16.93792724609375
    8. ']' → logprob: -17.12542724609375
    9. '3' → logprob: -17.68792724609375
    10. ' +' → logprob: -18.06292724609375

Token 124: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005064461147412658
    2. ']
' → logprob: -7.625506401062012
    3. ']

' → logprob: -11.500506401062012
    4. ' ]' → logprob: -12.625506401062012
    5. ']
' → logprob: -13.000506401062012
    6. '],' → logprob: -13.500506401062012
    7. '2' → logprob: -14.625506401062012
    8. '0' → logprob: -15.500506401062012
    9. '1' → logprob: -16.250507354736328
    10. '[' → logprob: -16.500507354736328

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10993754863739014
    2. 'L' → logprob: -2.4849376678466797
    3. ' L' → logprob: -4.35993766784668
    4. '
' → logprob: -5.98493766784668
    5. ' if' → logprob: -6.23493766784668
    6. '<|end|>' → logprob: -6.85993766784668
    7. ',' → logprob: -6.98493766784668
    8. 'if' → logprob: -8.23493766784668
    9. '[' → logprob: -8.48493766784668
    10. ',
' → logprob: -9.10993766784668

Token 126: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.9740657806396484
    2. 'd' → logprob: -1.2240657806396484
    3. 'if' → logprob: -1.7240657806396484
    4. ' if' → logprob: -3.4740657806396484
    5. '   ' → logprob: -3.7240657806396484
    6. ' L' → logprob: -3.9740657806396484
    7. 'diff' → logprob: -3.9740657806396484
    8. 'dist' → logprob: -4.099065780639648
    9. ' d' → logprob: -4.224065780639648
    10. 'dx' → logprob: -5.224065780639648

Token 127: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01277709100395441
    2. '.' → logprob: -4.387777328491211
    3. '.ap' → logprob: -8.887777328491211
    4. '.app' → logprob: -9.512777328491211
    5. 'append' → logprob: -10.762777328491211
    6. '.=' → logprob: -11.762777328491211
    7. '_append' → logprob: -12.012777328491211
    8. '.extend' → logprob: -12.137777328491211
    9. ' .' → logprob: -12.262777328491211
    10. '.a' → logprob: -12.387777328491211

Token 128: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.30130305886268616
    2. '(x' → logprob: -1.9263030290603638
    3. '((' → logprob: -2.9263031482696533
    4. '(abs' → logprob: -3.4263031482696533
    5. '(' → logprob: -4.051302909851074
    6. '(min' → logprob: -5.176302909851074
    7. 'y' → logprob: -6.176302909851074
    8. '(max' → logprob: -6.176302909851074
    9. 'x' → logprob: -7.551302909851074
    10. 'abs' → logprob: -8.301302909851074

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021474185632541776
    2. '1' → logprob: -9.125214576721191
    3. ')' → logprob: -10.375214576721191
    4. ' -' → logprob: -10.375214576721191
    5. ' ' → logprob: -11.625214576721191
    6. 'y' → logprob: -12.125214576721191
    7. ' y' → logprob: -12.375214576721191
    8. '-' → logprob: -12.500214576721191
    9. '[' → logprob: -12.812714576721191
    10. ',' → logprob: -13.125214576721191

Token 130: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18927013874053955
    2. '+' → logprob: -2.18927001953125
    3. ' -' → logprob: -3.81427001953125
    4. ' +' → logprob: -3.93927001953125
    5. '-' → logprob: -4.43927001953125
    6. ',' → logprob: -5.31427001953125
    7. '+x' → logprob: -7.43927001953125
    8. '-x' → logprob: -8.06427001953125
    9. ' )' → logprob: -8.43927001953125
    10. ')
' → logprob: -8.56427001953125

Token 131: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.054984625428915024
    2. ' x' → logprob: -2.9299845695495605
    3. '1' → logprob: -10.179985046386719
    4. 'X' → logprob: -11.179985046386719
    5. ')' → logprob: -11.429985046386719
    6. '0' → logprob: -11.804985046386719
    7. ' ' → logprob: -12.054985046386719
    8. 'y' → logprob: -12.429985046386719
    9. '   ' → logprob: -12.679985046386719
    10. '(x' → logprob: -12.679985046386719

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050443872809410095
    2. ')
' → logprob: -3.0504438877105713
    3. '+' → logprob: -6.425443649291992
    4. ' )' → logprob: -9.425443649291992
    5. '-' → logprob: -9.800443649291992
    6. ' +' → logprob: -10.425443649291992
    7. ' )
' → logprob: -10.675443649291992
    8. ')
' → logprob: -11.300443649291992
    9. ')

' → logprob: -11.300443649291992
    10. '   ' → logprob: -12.175443649291992

Token 133: '   ' (ID: 271)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.09150534123182297
    2. ' R' → logprob: -3.216505289077759
    3. ')' → logprob: -3.341505289077759
    4. '   ' → logprob: -4.716505527496338
    5. ')
' → logprob: -6.091505527496338
    6. ',' → logprob: -8.34150505065918
    7. '
' → logprob: -9.09150505065918
    8. '	R' → logprob: -9.71650505065918
    9. '<|end|>' → logprob: -10.21650505065918
    10. ',
' → logprob: -10.34150505065918

Token 134: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.006763683166354895
    2. 'L' → logprob: -5.256763458251953
    3. 'x' → logprob: -7.131763458251953
    4. '   ' → logprob: -7.631763458251953
    5. 'y' → logprob: -9.256763458251953
    6. ' R' → logprob: -10.006763458251953
    7. '(x' → logprob: -10.381763458251953
    8. '(R' → logprob: -10.631763458251953
    9. '(' → logprob: -10.881763458251953
    10. '(y' → logprob: -12.256763458251953

Token 135: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000639765290543437
    2. '.' → logprob: -7.375639915466309
    3. '.extend' → logprob: -11.875639915466309
    4. 'append' → logprob: -12.875639915466309
    5. '.app' → logprob: -13.875639915466309
    6. ' .' → logprob: -13.875639915466309
    7. '.ap' → logprob: -13.875639915466309
    8. ').' → logprob: -14.250639915466309
    9. '.Append' → logprob: -16.875638961791992
    10. '>.' → logprob: -17.125638961791992

Token 136: '(y' (ID: 14684)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4315037429332733
    2. '(y' → logprob: -1.0565037727355957
    3. '(' → logprob: -6.181503772735596
    4. 'x' → logprob: -7.431503772735596
    5. 'y' → logprob: -9.056503295898438
    6. ' (' → logprob: -11.681503295898438
    7. '(i' → logprob: -12.181503295898438
    8. ' y' → logprob: -13.181503295898438
    9. ' x' → logprob: -13.431503295898438
    10. '(abs' → logprob: -13.431503295898438

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19981299340724945
    2. ' -' → logprob: -2.449812889099121
    3. '-' → logprob: -3.699812889099121
    4. ' y' → logprob: -4.074812889099121
    5. '[' → logprob: -4.324812889099121
    6. ' ' → logprob: -4.824812889099121
    7. 'x' → logprob: -4.824812889099121
    8. ' x' → logprob: -4.949812889099121
    9. '[i' → logprob: -5.699812889099121
    10. ')' → logprob: -5.699812889099121

Token 138: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0431099496781826
    2. '-' → logprob: -3.168109893798828
    3. ' ' → logprob: -9.418109893798828
    4. ')' → logprob: -11.418109893798828
    5. '[' → logprob: -11.918109893798828
    6. '   ' → logprob: -13.168109893798828
    7. '-x' → logprob: -13.168109893798828
    8. ' ' → logprob: -13.793109893798828
    9. 'x' → logprob: -13.855609893798828
    10. ',' → logprob: -13.980609893798828

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011049231514334679
    2. ' x' → logprob: -4.511049270629883
    3. ')x' → logprob: -14.136049270629883
    4. ')' → logprob: -14.886049270629883
    5. '	x' → logprob: -15.886049270629883
    6. ' ' → logprob: -16.511049270629883
    7. '   ' → logprob: -16.761049270629883
    8. '<|end|>' → logprob: -17.011049270629883
    9. '1' → logprob: -17.386049270629883
    10. '(x' → logprob: -17.761049270629883

Token 140: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.492120155598968e-05
    2. ')
' → logprob: -10.250064849853516
    3. ' )' → logprob: -11.000064849853516
    4. '<|end|>' → logprob: -12.250064849853516
    5. '   ' → logprob: -12.750064849853516
    6. '))' → logprob: -14.375064849853516
    7. '```' → logprob: -14.375064849853516
    8. '
' → logprob: -14.875064849853516
    9. '+' → logprob: -14.875064849853516
    10. '+)' → logprob: -15.000064849853516

Token 141: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.19062525033950806
    2. 'ans' → logprob: -2.8156251907348633
    3. 'if' → logprob: -3.1906251907348633
    4. 'answer' → logprob: -4.190625190734863
    5. 'dp' → logprob: -4.690625190734863
    6. 'result' → logprob: -4.815625190734863
    7. 'total' → logprob: -5.065625190734863
    8. 'for' → logprob: -5.190625190734863
    9. 'res' → logprob: -5.565625190734863
    10. 'd' → logprob: -5.565625190734863

Token 142: 'toi' (ID: 99509)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06126412749290466
    2. '=' → logprob: -2.9362640380859375
    3. '[' → logprob: -5.8112640380859375
    4. 'r' → logprob: -7.3112640380859375
    5. ' ' → logprob: -7.9362640380859375
    6. 'p' → logprob: -8.061264038085938
    7. 't' → logprob: -8.186264038085938
    8. '_idx' → logprob: -8.186264038085938
    9. '_' → logprob: -8.561264038085938
    10. '.append' → logprob: -8.936264038085938

Token 144: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3650762438774109
    2. '{}' → logprob: -1.3650763034820557
    3. 'dict' → logprob: -3.3650763034820557
    4. 'sorted' → logprob: -4.990076065063477
    5. 'len' → logprob: -6.115076065063477
    6. 'R' → logprob: -6.115076065063477
    7. '{-' → logprob: -7.365076065063477
    8. '[' → logprob: -7.615076065063477
    9. 'bis' → logprob: -7.615076065063477
    10. 'lambda' → logprob: -7.615076065063477

Token 145: 'x' (ID: 87)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023101046681404114
    2. 'v' → logprob: -3.8981010913848877
    3. '0' → logprob: -7.023100852966309
    4. 'val' → logprob: -7.773100852966309
    5. 'R' → logprob: -7.898100852966309
    6. 'x' → logprob: -7.898100852966309
    7. ' r' → logprob: -8.773100852966309
    8. 'i' → logprob: -9.898100852966309
    9. '(r' → logprob: -9.898100852966309
    10. 'b' → logprob: -10.273100852966309

Token 146: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25317153334617615
    2. ':i' → logprob: -1.5031715631484985
    3. ':index' → logprob: -7.253171443939209
    4. ':R' → logprob: -8.253171920776367
    5. ' :' → logprob: -8.753171920776367
    6. ':x' → logprob: -10.253171920776367
    7. ':-' → logprob: -10.628171920776367
    8. ':j' → logprob: -11.003171920776367
    9. ':right' → logprob: -11.378171920776367
    10. ':k' → logprob: -11.878171920776367

Token 147: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001422770437784493
    2. 'idx' → logprob: -9.625142097473145
    3. ' i' → logprob: -9.750142097473145
    4. '0' → logprob: -12.500142097473145
    5. 'j' → logprob: -12.750142097473145
    6. 'x' → logprob: -13.125142097473145
    7. 'R' → logprob: -13.250142097473145
    8. 'r' → logprob: -13.375142097473145
    9. '(i' → logprob: -13.375142097473145
    10. '[i' → logprob: -14.125142097473145

Token 148: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931635141372681
    2. 'for' → logprob: -0.6931635141372681
    3. ' ' → logprob: -11.443163871765137
    4. '	for' → logprob: -13.318163871765137
    5. ':' → logprob: -13.693163871765137
    6. '
' → logprob: -13.943163871765137
    7. '+' → logprob: -14.193163871765137
    8. 'x' → logprob: -14.693163871765137
    9. 'n' → logprob: -15.318163871765137
    10. '   ' → logprob: -15.818163871765137

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002639582962729037
    2. ' i' → logprob: -8.250264167785645
    3. ',i' → logprob: -13.125264167785645
    4. ',' → logprob: -14.375264167785645
    5. 'x' → logprob: -16.875263214111328
    6. '
' → logprob: -17.500263214111328
    7. '(i' → logprob: -18.500263214111328
    8. '	i' → logprob: -19.000263214111328
    9. '```' → logprob: -20.250263214111328
    10. ')i' → logprob: -20.500263214111328

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023449400439858437
    2. ',i' → logprob: -4.023449420928955
    3. 'enumer' → logprob: -6.148449420928955
    4. 'i' → logprob: -6.523449420928955
    5. ',x' → logprob: -7.273449420928955
    6. 'range' → logprob: -7.773449420928955
    7. 'in' → logprob: -8.023448944091797
    8. 'x' → logprob: -8.898448944091797
    9. ' in' → logprob: -10.398448944091797
    10. ' range' → logprob: -10.773448944091797

Token 151: ' x' (ID: 1215)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.3894210755825043
    2. 'x' → logprob: -1.2644211053848267
    3. ' enumerate' → logprob: -4.014420986175537
    4. ' in' → logprob: -4.264420986175537
    5. 'in' → logprob: -6.014420986175537
    6. '<|end|>' → logprob: -6.639420986175537
    7. ' x' → logprob: -6.889420986175537
    8. '
' → logprob: -7.014420986175537
    9. 'value' → logprob: -7.139420986175537
    10. '```' → logprob: -8.014421463012695

Token 152: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22543755173683167
    2. ' in' → logprob: -1.6004375219345093
    3. 'n' → logprob: -11.35043716430664
    4. ' ' → logprob: -13.22543716430664
    5. ')' → logprob: -13.35043716430664
    6. 'In' → logprob: -13.35043716430664
    7. '```' → logprob: -13.85043716430664
    8. '
' → logprob: -13.97543716430664
    9. ',' → logprob: -13.97543716430664
    10. '}' → logprob: -14.10043716430664

Token 153: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.25193315744400024
    2. 'enumer' → logprob: -1.5019330978393555
    3. 'en' → logprob: -13.001933097839355
    4. '```' → logprob: -14.376933097839355
    5. '
' → logprob: -14.876933097839355
    6. 'enum' → logprob: -15.001933097839355
    7. 'Enumer' → logprob: -15.001933097839355
    8. 'in' → logprob: -16.876934051513672
    9. '(en' → logprob: -17.001934051513672
    10. '`' → logprob: -17.251934051513672

Token 154: '(sorted' (ID: 92488)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.002259806264191866
    2. 'R' → logprob: -6.377259731292725
    3. '(L' → logprob: -7.627259731292725
    4. ')' → logprob: -10.627260208129883
    5. '(Y' → logprob: -10.752260208129883
    6. ' R' → logprob: -11.627260208129883
    7. 'L' → logprob: -12.252260208129883
    8. '(' → logprob: -13.252260208129883
    9. '(sorted' → logprob: -13.377260208129883
    10. ')(' → logprob: -13.627260208129883

Token 155: '(set' (ID: 25904)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.03506164997816086
    2. '(L' → logprob: -3.7850615978240967
    3. '(set' → logprob: -4.785061836242676
    4. 'R' → logprob: -5.785061836242676
    5. 'L' → logprob: -8.410061836242676
    6. 'set' → logprob: -10.410061836242676
    7. '(list' → logprob: -10.660061836242676
    8. '(r' → logprob: -11.660061836242676
    9. '((' → logprob: -11.910061836242676
    10. '(' → logprob: -12.035061836242676

Token 156: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.6329537630081177
    2. '(L' → logprob: -0.7579537630081177
    3. 'L' → logprob: -8.507953643798828
    4. 'R' → logprob: -9.382953643798828
    5. '(' → logprob: -10.507953643798828
    6. '(
' → logprob: -10.632953643798828
    7. ' (' → logprob: -12.632953643798828
    8. '(r' → logprob: -13.132953643798828
    9. ' R' → logprob: -13.257953643798828
    10. ' L' → logprob: -13.507953643798828

Token 157: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25200867652893066
    2. ')))' → logprob: -1.5020086765289307
    3. ' ' → logprob: -10.627008438110352
    4. '))))' → logprob: -10.877008438110352
    5. ' ))' → logprob: -11.252008438110352
    6. ')' → logprob: -11.752008438110352
    7. '))}
' → logprob: -11.877008438110352
    8. '}))' → logprob: -12.502008438110352
    9. '   ' → logprob: -14.377008438110352
    10. '}' → logprob: -14.377008438110352

Token 158: ' ' (ID: 220)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6644247174263
    2. 'reverse' → logprob: -1.2894246578216553
    3. ')' → logprob: -2.4144246578216553
    4. '0' → logprob: -3.0394246578216553
    5. ' ' → logprob: -3.6644246578216553
    6. 'range' → logprob: -3.9144246578216553
    7. ' start' → logprob: -4.539424896240234
    8. 'enumer' → logprob: -5.289424896240234
    9. '  ' → logprob: -5.664424896240234
    10. '1' → logprob: -6.414424896240234

Token 159: '1' (ID: 16)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.14758403599262238
    2. 'start' → logprob: -2.2725839614868164
    3. ')' → logprob: -4.147583961486816
    4. 'range' → logprob: -4.897583961486816
    5. 'enumer' → logprob: -4.897583961486816
    6. '0' → logprob: -6.647583961486816
    7. ')}' → logprob: -7.647583961486816
    8. '1' → logprob: -8.272583961486816
    9. ' ' → logprob: -8.522583961486816
    10. 'True' → logprob: -8.522583961486816

Token 160: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00011439072113716975
    2. ')' → logprob: -9.125114440917969
    3. '}' → logprob: -12.625114440917969
    4. ')}
' → logprob: -13.750114440917969
    5. ' )' → logprob: -14.250114440917969
    6. ');}' → logprob: -15.750114440917969
    7. '})' → logprob: -16.37511444091797
    8. ')}
' → logprob: -16.75011444091797
    9. ')}}' → logprob: -17.25011444091797
    10. '))' → logprob: -17.50011444091797

Token 161: 'R' (ID: 49)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.570943832397461
    2. 'L' → logprob: -1.945943832397461
    3. 'bit' → logprob: -2.445943832397461
    4. 'class' → logprob: -2.570943832397461
    5. 'dp' → logprob: -2.695943832397461
    6. 'R' → logprob: -2.820943832397461
    7. 'size' → logprob: -2.945943832397461
    8. 'BIT' → logprob: -3.195943832397461
    9. 'Fen' → logprob: -3.695943832397461
    10. 'fen' → logprob: -3.820943832397461

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1725579500198364
    2. ' =' → logprob: -1.4225579500198364
    3. 'toi' → logprob: -1.7975579500198364
    4. 'to' → logprob: -2.172557830810547
    5. '.sort' → logprob: -3.172557830810547
    6. ')' → logprob: -3.172557830810547
    7. '.' → logprob: -4.172557830810547
    8. '_sorted' → logprob: -4.547557830810547
    9. '.setdefault' → logprob: -4.797557830810547
    10. '_counts' → logprob: -5.047557830810547

Token 163: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9629265666007996
    2. '[R' → logprob: -0.9629265666007996
    3. '[' → logprob: -1.4629266262054443
    4. '[list' → logprob: -5.587926387786865
    5. '[r' → logprob: -7.587926387786865
    6. '[int' → logprob: -8.587926864624023
    7. '[i' → logprob: -8.837926864624023
    8. '[len' → logprob: -9.087926864624023
    9. '[List' → logprob: -9.587926864624023
    10. 'list' → logprob: -10.212926864624023

Token 164: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0021860685665160418
    2. ' R' → logprob: -6.127186298370361
    3. '
' → logprob: -14.752185821533203
    4. ' ' → logprob: -14.877185821533203
    5. '	R' → logprob: -17.002185821533203
    6. '   ' → logprob: -17.252185821533203
    7. '
' → logprob: -17.752185821533203
    8. '

' → logprob: -17.752185821533203
    9. '[R' → logprob: -17.877185821533203
    10. 'RO' → logprob: -18.127185821533203

Token 165: 'toi' (ID: 99509)
  Prédit: 'toi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'toi' → logprob: -0.00512737687677145
    2. 'to' → logprob: -5.380127429962158
    3. '[' → logprob: -8.630126953125
    4. '[i' → logprob: -9.130126953125
    5. '[to' → logprob: -10.130126953125
    6. '.index' → logprob: -10.380126953125
    7. ')' → logprob: -10.630126953125
    8. 'stoi' → logprob: -11.005126953125
    9. 'toj' → logprob: -11.130126953125
    10. 'TO' → logprob: -11.130126953125

Token 166: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.018213976174592972
    2. '[x' → logprob: -4.018213748931885
    3. '[v' → logprob: -11.018214225769043
    4. '(r' → logprob: -11.018214225769043
    5. '[' → logprob: -11.268214225769043
    6. '[_' → logprob: -12.143214225769043
    7. '[y' → logprob: -12.643214225769043
    8. '[a' → logprob: -12.768214225769043
    9. '[i' → logprob: -12.893214225769043
    10. '[val' → logprob: -13.768214225769043

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.080963092041202e-06
    2. ' ]' → logprob: -12.250004768371582
    3. ')' → logprob: -16.1250057220459
    4. ']]' → logprob: -16.8750057220459
    5. ']
' → logprob: -18.1250057220459
    6. ')]' → logprob: -18.2500057220459
    7. 'r' → logprob: -19.1250057220459
    8. '']' → logprob: -19.2500057220459
    9. 'for' → logprob: -19.6250057220459
    10. ' for' → logprob: -19.8750057220459

Token 168: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519593834877014
    2. 'for' → logprob: -1.5019593238830566
    3. ' ' → logprob: -10.751959800720215
    4. ')' → logprob: -12.501959800720215
    5. '	for' → logprob: -13.001959800720215
    6. 'r' → logprob: -13.126959800720215
    7. ']' → logprob: -15.126959800720215
    8. ' r' → logprob: -15.501959800720215
    9. ' ' → logprob: -15.876959800720215
    10. '-' → logprob: -16.1269588470459

Token 169: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4243963658809662
    2. ' r' → logprob: -1.5493963956832886
    3. 'R' → logprob: -2.174396276473999
    4. ' R' → logprob: -3.924396276473999
    5. ' ' → logprob: -11.424396514892578
    6. '_r' → logprob: -11.924396514892578
    7. '   ' → logprob: -12.924396514892578
    8. '  ' → logprob: -13.361896514892578
    9. '	r' → logprob: -13.736896514892578
    10. ' ' → logprob: -14.299396514892578

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15363915264606476
    2. 'R' → logprob: -2.403639078140259
    3. 'in' → logprob: -3.403639078140259
    4. 'r' → logprob: -4.403639316558838
    5. ' R' → logprob: -5.278639316558838
    6. ']' → logprob: -7.403639316558838
    7. ' r' → logprob: -7.653639316558838
    8. ' ' → logprob: -8.27863883972168
    9. 's' → logprob: -10.52863883972168
    10. ')' → logprob: -10.65363883972168

Token 171: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.004078639671206474
    2. ' R' → logprob: -5.5040788650512695
    3. 'r' → logprob: -16.379077911376953
    4. ' ' → logprob: -17.004077911376953
    5. '
' → logprob: -17.879077911376953
    6. '(R' → logprob: -18.504077911376953
    7. ']' → logprob: -19.129077911376953
    8. ')' → logprob: -19.129077911376953
    9. '_R' → logprob: -19.254077911376953
    10. '   ' → logprob: -19.379077911376953

Token 172: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015229015843942761
    2. ' ]' → logprob: -8.875152587890625
    3. ')]' → logprob: -12.000152587890625
    4. ')' → logprob: -12.500152587890625
    5. ']
' → logprob: -13.125152587890625
    6. '])' → logprob: -15.750152587890625
    7. '()]' → logprob: -16.000152587890625
    8. '`]' → logprob: -16.000152587890625
    9. ']

' → logprob: -16.500152587890625
    10. '}' → logprob: -17.250152587890625

Token 173: 'if' (ID: 366)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0324729681015015
    2. 'class' → logprob: -1.1574729681015015
    3. 'from' → logprob: -1.6574729681015015
    4. 'bit' → logprob: -3.157473087310791
    5. 'size' → logprob: -3.407473087310791
    6. 'L' → logprob: -4.407473087310791
    7. 'max' → logprob: -4.407473087310791
    8. 'import' → logprob: -4.657473087310791
    9. 'BIT' → logprob: -5.157473087310791
    10. 'seg' → logprob: -5.157473087310791

Token 174: ' len' (ID: 4631)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4434766471385956
    2. ' not' → logprob: -1.818476676940918
    3. ' len' → logprob: -2.193476676940918
    4. 'L' → logprob: -3.318476676940918
    5. ' R' → logprob: -3.443476676940918
    6. ' ' → logprob: -5.068476676940918
    7. 'len' → logprob: -5.568476676940918
    8. 'not' → logprob: -5.693476676940918
    9. 'R' → logprob: -6.568476676940918
    10. ' M' → logprob: -7.693476676940918

Token 175: '(R' (ID: 4092)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.005439727567136288
    2. '(R' → logprob: -5.380439758300781
    3. '(' → logprob: -7.130439758300781
    4. 'L' → logprob: -11.755439758300781
    5. ' (' → logprob: -12.130439758300781
    6. ' L' → logprob: -14.130439758300781
    7. '(
' → logprob: -14.255439758300781
    8. '(l' → logprob: -14.505439758300781
    9. '(S' → logprob: -15.130439758300781
    10. '(B' → logprob: -15.130439758300781

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037296530790627003
    2. ')==' → logprob: -6.753729820251465
    3. ')>' → logprob: -6.878729820251465
    4. ' )' → logprob: -7.128729820251465
    5. ')<' → logprob: -8.253729820251465
    6. '==' → logprob: -8.253729820251465
    7. '>' → logprob: -9.628729820251465
    8. ' ==' → logprob: -10.003729820251465
    9. '[' → logprob: -10.503729820251465
    10. '<' → logprob: -10.878729820251465

Token 177: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6284906268119812
    2. ' <' → logprob: -1.003490686416626
    3. '==' → logprob: -2.753490686416626
    4. '<' → logprob: -3.503490686416626
    5. ' >' → logprob: -6.128490447998047
    6. ' <=' → logprob: -6.878490447998047
    7. '>' → logprob: -7.128490447998047
    8. ' !=' → logprob: -7.378490447998047
    9. ' ' → logprob: -7.503490447998047
    10. ' >=' → logprob: -7.753490447998047

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5761367678642273
    2. ' ' → logprob: -0.8261367678642273
    3. '1' → logprob: -8.576136589050293
    4. '2' → logprob: -12.763636589050293
    5. '  ' → logprob: -13.951136589050293
    6. ' ' → logprob: -14.138636589050293
    7. 'len' → logprob: -14.576136589050293
    8. ' M' → logprob: -14.826136589050293
    9. ' len' → logprob: -15.138636589050293
    10. '   ' → logprob: -15.326136589050293

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001159623614512384
    2. ' ' → logprob: -6.87615966796875
    3. '1' → logprob: -9.00115966796875
    4. '2' → logprob: -13.25115966796875
    5. '   ' → logprob: -14.93865966796875
    6. '  ' → logprob: -15.43865966796875
    7. '    ' → logprob: -15.50115966796875
    8. 'N' → logprob: -15.93865966796875
    9. '

' → logprob: -16.25115966796875
    10. '```' → logprob: -16.37615966796875

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043057654052972794
    2. ':
' → logprob: -3.168057680130005
    3. ':return' → logprob: -10.043057441711426
    4. '   ' → logprob: -11.918057441711426
    5. ' or' → logprob: -12.293057441711426
    6. ' :' → logprob: -13.668057441711426
    7. ':

' → logprob: -14.543057441711426
    8. ':
' → logprob: -14.543057441711426
    9. '):' → logprob: -15.043057441711426
    10. ' :
' → logprob: -15.168057441711426

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06994444131851196
    2. 'print' → logprob: -3.194944381713867
    3. ' print' → logprob: -3.819944381713867
    4. '0' → logprob: -5.569944381713867
    5. ':
' → logprob: -8.694944381713867
    6. '
' → logprob: -8.819944381713867
    7. ':' → logprob: -8.944944381713867
    8. ' return' → logprob: -9.444944381713867
    9. 'return' → logprob: -9.694944381713867
    10. '	print' → logprob: -10.319944381713867

Token 182: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4442315995693207
    2. ' print' → logprob: -1.194231629371643
    3. '
' → logprob: -2.9442315101623535
    4. '   ' → logprob: -6.0692315101623535
    5. '    
' → logprob: -8.694231986999512
    6. ':
' → logprob: -8.694231986999512
    7. ' 
' → logprob: -9.069231986999512
    8. '```' → logprob: -9.319231986999512
    9. '0' → logprob: -9.944231986999512
    10. '    ' → logprob: -10.444231986999512

Token 183: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01181693933904171
    2. '(-' → logprob: -5.01181697845459
    3. '0' → logprob: -5.38681697845459
    4. '(N' → logprob: -8.63681697845459
    5. '("' → logprob: -8.76181697845459
    6. '('' → logprob: -10.26181697845459
    7. '()' → logprob: -10.26181697845459
    8. '(
' → logprob: -10.26181697845459
    9. '(M' → logprob: -10.38681697845459
    10. '-' → logprob: -11.51181697845459

Token 184: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03894229605793953
    2. '-' → logprob: -3.288942337036133
    3. 'N' → logprob: -7.663942337036133
    4. 'M' → logprob: -9.163942337036133
    5. '-M' → logprob: -9.663942337036133
    6. '1' → logprob: -9.788942337036133
    7. '-N' → logprob: -10.663942337036133
    8. '(' → logprob: -10.663942337036133
    9. ' ' → logprob: -10.913942337036133
    10. '"' → logprob: -11.038942337036133

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6939484477043152
    2. ')
' → logprob: -0.6939484477043152
    3. '   ' → logprob: -7.943948268890381
    4. 'else' → logprob: -8.818948745727539
    5. '
' → logprob: -9.193948745727539
    6. ' )
' → logprob: -9.443948745727539
    7. ' )' → logprob: -9.943948745727539
    8. ')
' → logprob: -11.193948745727539
    9. ')return' → logprob: -11.193948745727539
    10. 'import' → logprob: -11.443948745727539

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16179949045181274
    2. 'else' → logprob: -1.911799430847168
    3. ')' → logprob: -7.286799430847168
    4. '
' → logprob: -8.036799430847168
    5. 'import' → logprob: -8.411799430847168
    6. 'elif' → logprob: -9.036799430847168
    7. 'exit' → logprob: -9.661799430847168
    8. '    
' → logprob: -9.786799430847168
    9. ' else' → logprob: -10.036799430847168
    10. '  ' → logprob: -11.161799430847168

Token 187: ' exit' (ID: 10654)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13049931824207306
    2. 'else' → logprob: -2.1304993629455566
    3. 'exit' (adapté à ' exit') → logprob: -6.005499362945557
    4. 'sys' → logprob: -7.255499362945557
    5. 'import' → logprob: -8.255498886108398
    6. 'elif' → logprob: -10.255498886108398
    7. '    
' → logprob: -10.630498886108398
    8. '
' → logprob: -11.255498886108398
    9. '```' → logprob: -11.255498886108398
    10. '0' → logprob: -11.505498886108398

Token 188: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1611349880695343
    2. '(' → logprob: -1.911134958267212
    3. '0' → logprob: -7.661135196685791
    4. '()
' → logprob: -7.786135196685791
    5. '()

' → logprob: -11.536134719848633
    6. '()`' → logprob: -12.286134719848633
    7. '()\' → logprob: -12.536134719848633
    8. '(
' → logprob: -12.786134719848633
    9. ' ()' → logprob: -13.536134719848633
    10. '())' → logprob: -14.286134719848633

Token 189: 'class' (ID: 1444)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.46036311984062195
    2. 'class' → logprob: -1.4603631496429443
    3. 'from' → logprob: -2.8353631496429443
    4. 'bit' → logprob: -3.9603631496429443
    5. 'size' → logprob: -4.335362911224365
    6. 'BIT' → logprob: -4.460362911224365
    7. 'max' → logprob: -4.710362911224365
    8. '#' → logprob: -5.085362911224365
    9. 'import' → logprob: -5.335362911224365
    10. 'tree' → logprob: -5.710362911224365

Token 190: ' BIT' (ID: 52185)
  Prédit: ' Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fen' → logprob: -0.5200473070144653
    2. 'Fen' → logprob: -1.7700473070144653
    3. ' Segment' → logprob: -1.8950473070144653
    4. 'Segment' → logprob: -2.770047187805176
    5. ' BIT' → logprob: -4.770047187805176
    6. 'BIT' → logprob: -5.145047187805176
    7. ' Seg' → logprob: -5.395047187805176
    8. 'Seg' → logprob: -5.895047187805176
    9. ' fen' → logprob: -8.395047187805176
    10. ' Bit' → logprob: -9.395047187805176

Token 191: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003426754381507635
    2. ':
' → logprob: -5.753426551818848
    3. '():' → logprob: -9.378426551818848
    4. '(' → logprob: -10.003426551818848
    5. ' :' → logprob: -10.378426551818848
    6. '(object' → logprob: -10.628426551818848
    7. '>:' → logprob: -11.003426551818848
    8. '(size' → logprob: -11.378426551818848
    9. '):' → logprob: -11.753426551818848
    10. '(n' → logprob: -12.003426551818848

Token 192: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.385855495929718
    2. '   ' → logprob: -1.6358554363250732
    3. ':
' → logprob: -2.6358554363250732
    4. '<|end|>' → logprob: -4.260855674743652
    5. ' def' → logprob: -4.760855674743652
    6. '(object' → logprob: -4.885855674743652
    7. 'def' → logprob: -5.260855674743652
    8. '  
' → logprob: -5.510855674743652
    9. '  ' → logprob: -5.635855674743652
    10. '    
' → logprob: -5.760855674743652

Token 193: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12139710038900375
    2. 'def' (adapté à ' def') → logprob: -2.746397018432617
    3. '   ' → logprob: -2.996397018432617
    4. '	def' → logprob: -9.246397018432617
    5. '    
' → logprob: -9.871397018432617
    6. ' 
' → logprob: -10.746397018432617
    7. '    ' → logprob: -12.371397018432617
    8. '  ' → logprob: -12.371397018432617
    9. ' ' → logprob: -12.371397018432617
    10. '  
' → logprob: -13.496397018432617

Token 194: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6282522082328796
    2. ' __' → logprob: -0.8782522082328796
    3. 'init' → logprob: -3.0032522678375244
    4. '_init' → logprob: -7.378252029418945
    5. ' init' → logprob: -7.378252029418945
    6. '_' → logprob: -11.003252029418945
    7. 'int' → logprob: -11.003252029418945
    8. '```' → logprob: -11.253252029418945
    9. ' def' → logprob: -11.503252029418945
    10. ' ' → logprob: -11.753252029418945

Token 195: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2723104848410003e-05
    2. 'nit' → logprob: -10.875022888183594
    3. 'ini' → logprob: -13.125022888183594
    4. 'inite' → logprob: -14.250022888183594
    5. ' init' → logprob: -14.875022888183594
    6. 'int' → logprob: -15.125022888183594
    7. '_init' → logprob: -16.125022888183594
    8. '	init' → logprob: -16.125022888183594
    9. 'in' → logprob: -16.625022888183594
    10. 'innit' → logprob: -16.625022888183594

Token 196: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001550809945911169
    2. '__' → logprob: -6.751550674438477
    3. '(self' → logprob: -7.876550674438477
    4. '__((' → logprob: -14.876550674438477
    5. '__(
' → logprob: -15.251550674438477
    6. '__('' → logprob: -16.251550674438477
    7. '_(' → logprob: -16.376550674438477
    8. '(' → logprob: -16.501550674438477
    9. '__[' → logprob: -17.251550674438477
    10. '__,' → logprob: -17.251550674438477

Token 197: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.576873758807778e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -14.500075340270996
    4. '   ' → logprob: -15.500075340270996
    5. ' ' → logprob: -16.750076293945312
    6. ',self' → logprob: -16.875076293945312
    7. 'n' → logprob: -17.000076293945312
    8. '	self' → logprob: -17.875076293945312
    9. ',' → logprob: -18.125076293945312
    10. '
' → logprob: -18.250076293945312

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011185461189597845
    2. 'self' → logprob: -7.0011186599731445
    3. ',self' → logprob: -9.251118659973145
    4. ' ,' → logprob: -9.626118659973145
    5. ',n' → logprob: -10.251118659973145
    6. '__,' → logprob: -12.501118659973145
    7. ',size' → logprob: -13.001118659973145
    8. '_,' → logprob: -14.376118659973145
    9. ' self' → logprob: -14.376118659973145
    10. ',num' → logprob: -14.626118659973145

Token 199: ' max' (ID: 2999)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1321336030960083
    2. 'self' → logprob: -2.1321334838867188
    3. ' n' → logprob: -5.507133483886719
    4. 'size' → logprob: -7.507133483886719
    5. ' self' → logprob: -8.132133483886719
    6. '   ' → logprob: -8.632133483886719
    7. 'N' → logprob: -9.382133483886719
    8. ' size' → logprob: -11.007133483886719
    9. '       ' → logprob: -12.007133483886719
    10. ' ' → logprob: -13.632133483886719

Token 200: '_n' (ID: 2170)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.8799928426742554
    2. '_size' → logprob: -1.1299928426742554
    3. '_val' → logprob: -2.004992961883545
    4. '_n' → logprob: -2.879992961883545
    5. 'val' → logprob: -3.004992961883545
    6. 'n' → logprob: -4.379992961883545
    7. 'v' → logprob: -6.004992961883545
    8. '_len' → logprob: -6.879992961883545
    9. '_' → logprob: -7.004992961883545
    10. ')' → logprob: -7.004992961883545

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47588682174682617
    2. '):
' → logprob: -0.9758868217468262
    3. '+' → logprob: -7.350886821746826
    4. '=' → logprob: -7.600886821746826
    5. '):
' → logprob: -8.100887298583984
    6. ' ):' → logprob: -8.600887298583984
    7. ',' → logprob: -9.725887298583984
    8. '   ' → logprob: -10.350887298583984
    9. ' ):
' → logprob: -10.600887298583984
    10. ':' → logprob: -11.100887298583984

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024299313372466713
    2. '   ' → logprob: -9.250243186950684
    3. ' self' → logprob: -9.375243186950684
    4. 'self' → logprob: -10.375243186950684
    5. '	' → logprob: -12.000243186950684
    6. '<|end|>' → logprob: -12.000243186950684
    7. '	   ' → logprob: -12.500243186950684
    8. '0' → logprob: -13.125243186950684
    9. '           ' → logprob: -13.500243186950684
    10. ',' → logprob: -13.500243186950684

Token 203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1474682241678238
    2. ' self' → logprob: -2.147468328475952
    3. '       ' → logprob: -3.897468328475952
    4. '   ' → logprob: -10.522468566894531
    5. '	self' → logprob: -11.647468566894531
    6. ' ' → logprob: -14.647468566894531
    7. 'super' → logprob: -14.772468566894531
    8. ' super' → logprob: -15.772468566894531
    9. '0' → logprob: -15.772468566894531
    10. '[self' → logprob: -15.772468566894531

Token 204: '.size' (ID: 4463)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3971845805644989
    2. ' =' → logprob: -1.8971846103668213
    3. '.max' → logprob: -2.5221846103668213
    4. 'max' → logprob: -2.7721846103668213
    5. '.size' → logprob: -4.772184371948242
    6. '.n' → logprob: -5.147184371948242
    7. '=max' → logprob: -5.522184371948242
    8. '.' → logprob: -6.022184371948242
    9. '_max' → logprob: -6.272184371948242
    10. ' max' → logprob: -6.272184371948242

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024758970830589533
    2. ' =' → logprob: -6.002475738525391
    3. '=int' → logprob: -16.00247573852539
    4. '=self' → logprob: -17.00247573852539
    5. '＝' → logprob: -17.12747573852539
    6. '   ' → logprob: -17.50247573852539
    7. '=}' → logprob: -17.87747573852539
    8. '=size' → logprob: -18.12747573852539
    9. '=
' → logprob: -18.37747573852539
    10. ' ' → logprob: -19.00247573852539

Token 206: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029751179739832878
    2. ' max' → logprob: -3.5297510623931885
    3. '(max' → logprob: -15.40475082397461
    4. '[max' → logprob: -15.40475082397461
    5. '1' → logprob: -15.77975082397461
    6. ' ' → logprob: -17.27975082397461
    7. '	max' → logprob: -17.40475082397461
    8. '0' → logprob: -17.40475082397461
    9. '   ' → logprob: -18.90475082397461
    10. 'size' → logprob: -19.27975082397461

Token 207: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.0802738870552275e-05
    2. 'size' → logprob: -12.50001049041748
    3. '_size' → logprob: -12.75001049041748
    4. '   ' → logprob: -13.87501049041748
    5. 'n' → logprob: -14.25001049041748
    6. '_' → logprob: -14.37501049041748
    7. '```' → logprob: -14.37501049041748
    8. 'max' → logprob: -15.87501049041748
    9. '=max' → logprob: -16.250011444091797
    10. '_max' → logprob: -16.375011444091797

Token 208: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23452535271644592
    2. '+' → logprob: -2.234525442123413
    3. '
' → logprob: -2.484525442123413
    4. 'self' → logprob: -4.484525203704834
    5. ' +' → logprob: -4.984525203704834
    6. '+self' → logprob: -9.359525680541992
    7. '        
' → logprob: -9.484525680541992
    8. '   ' → logprob: -9.609525680541992
    9. '=' → logprob: -9.609525680541992
    10. ' self' → logprob: -9.859525680541992

Token 209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026672041043639183
    2. '2' → logprob: -3.651672124862671
    3. ' ' → logprob: -7.901671886444092
    4. '
' → logprob: -14.77667236328125
    5. '10' → logprob: -14.90167236328125
    6. '5' → logprob: -15.27667236328125
    7. '   ' → logprob: -15.52667236328125
    8. '  ' → logprob: -15.65167236328125
    9. '3' → logprob: -16.40167236328125
    10. '```' → logprob: -16.77667236328125

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05503934994339943
    2. '2' → logprob: -2.930039405822754
    3. ' ' → logprob: -9.180039405822754
    4. '5' → logprob: -10.430039405822754
    5. '10' → logprob: -10.680039405822754
    6. '3' → logprob: -14.430039405822754
    7. '
' → logprob: -14.555039405822754
    8. '   ' → logprob: -15.555039405822754
    9. '  ' → logprob: -15.680039405822754
    10. '4' → logprob: -17.180038452148438

Token 211: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03889104723930359
    2. '       ' → logprob: -3.288891077041626
    3. '<|end|>' → logprob: -8.163890838623047
    4. '        
' → logprob: -8.788890838623047
    5. '   ' → logprob: -9.038890838623047
    6. '  
' → logprob: -9.413890838623047
    7. '
' → logprob: -9.788890838623047
    8. 'self' → logprob: -10.163890838623047
    9. '    
' → logprob: -10.163890838623047
    10. ' 
' → logprob: -10.913890838623047

Token 212: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06653288751840591
    2. '       ' → logprob: -2.816532850265503
    3. '<|end|>' → logprob: -6.066533088684082
    4. 'self' → logprob: -7.191533088684082
    5. '   ' → logprob: -7.566533088684082
    6. '```' → logprob: -8.441533088684082
    7. '	self' → logprob: -8.816533088684082
    8. '        
' → logprob: -8.816533088684082
    9. 'def' → logprob: -9.441533088684082
    10. '
' → logprob: -9.691533088684082

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009731597383506596
    2. ' self' → logprob: -7.250973224639893
    3. 'tree' → logprob: -8.875972747802734
    4. '       ' → logprob: -9.250972747802734
    5. '   ' → logprob: -11.250972747802734
    6. 'data' → logprob: -11.750972747802734
    7. '	self' → logprob: -12.500972747802734
    8. 's' → logprob: -14.125972747802734
    9. 'def' → logprob: -14.500972747802734
    10. '0' → logprob: -15.000972747802734

Token 214: '.tree' (ID: 49211)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.02463158778846264
    2. 'bit' → logprob: -4.024631500244141
    3. ' tree' → logprob: -6.024631500244141
    4. 'data' → logprob: -6.149631500244141
    5. '.tree' → logprob: -6.399631500244141
    6. ' bit' → logprob: -9.64963150024414
    7. '   ' → logprob: -9.64963150024414
    8. '.data' → logprob: -10.14963150024414
    9. '.bit' → logprob: -10.64963150024414
    10. 'dat' → logprob: -10.89963150024414

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740934669971466
    2. ' =' → logprob: -0.9740934371948242
    3. '[' → logprob: -11.724093437194824
    4. '=[' → logprob: -12.724093437194824
    5. ' ' → logprob: -12.849093437194824
    6. ' =[' → logprob: -13.099093437194824
    7. '   ' → logprob: -14.849093437194824
    8. '=[]' → logprob: -16.59909439086914
    9. ',' → logprob: -16.72409439086914
    10. '```' → logprob: -16.84909439086914

Token 216: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019286326132714748
    2. ' [' → logprob: -6.251928806304932
    3. '[self' → logprob: -18.626928329467773
    4. ' ' → logprob: -19.251928329467773
    5. '0' → logprob: -19.501928329467773
    6. '   ' → logprob: -19.626928329467773
    7. '[-' → logprob: -21.501928329467773
    8. ' ' → logprob: -21.876928329467773
    9. '[int' → logprob: -22.126928329467773
    10. '{' → logprob: -22.751928329467773

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'None' → logprob: -20.375001907348633
    4. '۰' → logprob: -20.500001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '(' → logprob: -21.000001907348633
    7. '-' → logprob: -21.250001907348633
    8. '[' → logprob: -21.625001907348633
    9. '０' → logprob: -21.875001907348633
    10. '00' → logprob: -22.000001907348633

Token 218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019461298361420631
    2. ']*(' → logprob: -6.251945972442627
    3. ']*' → logprob: -11.001946449279785
    4. ',' → logprob: -14.126946449279785
    5. ')' → logprob: -16.50194549560547
    6. ' for' → logprob: -17.50194549560547
    7. ']int' → logprob: -17.62694549560547
    8. ' ]' → logprob: -18.50194549560547
    9. '}' → logprob: -19.25194549560547
    10. '*(' → logprob: -19.37694549560547

Token 219: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5472702980041504
    2. '*(' → logprob: -1.4222702980041504
    3. '*' → logprob: -2.1722702980041504
    4. ']' → logprob: -2.9222702980041504
    5. ']*(' → logprob: -4.54727029800415
    6. ',' → logprob: -6.92227029800415
    7. '(' → logprob: -8.047269821166992
    8. ']*' → logprob: -8.797269821166992
    9. '*[' → logprob: -9.047269821166992
    10. '
' → logprob: -9.547269821166992

Token 220: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06286140531301498
    2. 'self' → logprob: -2.812861442565918
    3. ' (' → logprob: -7.312861442565918
    4. ' self' → logprob: -8.687861442565918
    5. '(' → logprob: -9.812861442565918
    6. '(size' → logprob: -13.062861442565918
    7. '   ' → logprob: -14.312861442565918
    8. '(this' → logprob: -15.812861442565918
    9. '[self' → logprob: -16.1878604888916
    10. '((' → logprob: -16.4378604888916

Token 221: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.023268774151802063
    2. 'size' → logprob: -3.773268699645996
    3. '.' → logprob: -12.023268699645996
    4. '       ' → logprob: -12.148268699645996
    5. '   ' → logprob: -12.523268699645996
    6. ' size' → logprob: -12.523268699645996
    7. 'self' → logprob: -13.523268699645996
    8. '	size' → logprob: -13.773268699645996
    9. '(size' → logprob: -14.773268699645996
    10. '<size' → logprob: -15.023268699645996

Token 222: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16263823211193085
    2. '   ' → logprob: -2.1626381874084473
    3. '    
' → logprob: -3.4126381874084473
    4. 'def' → logprob: -7.412638187408447
    5. '  
' → logprob: -7.912638187408447
    6. ' 
' → logprob: -7.912638187408447
    7. '        
' → logprob: -8.287638664245605
    8. '<|end|>' → logprob: -8.787638664245605
    9. ' def' → logprob: -9.162638664245605
    10. '   
' → logprob: -9.412638664245605

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06370791792869568
    2. '
' → logprob: -3.6887078285217285
    3. ' def' → logprob: -4.1887078285217285
    4. 'def' → logprob: -4.1887078285217285
    5. '    
' → logprob: -5.4387078285217285
    6. ' 
' → logprob: -6.5637078285217285
    7. '  
' → logprob: -8.438708305358887
    8. '	def' → logprob: -8.938708305358887
    9. '```' → logprob: -9.188708305358887
    10. '<|end|>' → logprob: -9.688708305358887

Token 224: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8908587662735954e-05
    2. ' def' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.125019073486328
    4. '	def' → logprob: -16.250019073486328
    5. '
' → logprob: -17.375019073486328
    6. '    
' → logprob: -18.625019073486328
    7. '```' → logprob: -20.125019073486328
    8. ' ' → logprob: -21.125019073486328
    9. '       ' → logprob: -21.250019073486328
    10. 'de' → logprob: -22.000019073486328

Token 225: ' get' (ID: 717)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.9472888708114624
    2. ' update' → logprob: -1.4472888708114624
    3. 'update' → logprob: -1.5722888708114624
    4. 'add' → logprob: -1.8222888708114624
    5. '_add' → logprob: -6.322288990020752
    6. '_update' → logprob: -6.447288990020752
    7. ' _' → logprob: -6.572288990020752
    8. '_' → logprob: -6.947288990020752
    9. 'sum' → logprob: -7.072288990020752
    10. 'query' → logprob: -7.947288990020752

Token 226: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2606838345527649
    2. 'sum' → logprob: -1.7606837749481201
    3. '(self' → logprob: -3.01068377494812
    4. '(' → logprob: -5.510684013366699
    5. 'Sum' → logprob: -6.635684013366699
    6. '(k' → logprob: -6.635684013366699
    7. '(sum' → logprob: -7.760684013366699
    8. ' sum' → logprob: -8.6356840133667
    9. '_max' → logprob: -8.7606840133667
    10. '_prefix' → logprob: -8.8856840133667

Token 227: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023657355457544327
    2. '(' → logprob: -3.7736573219299316
    3. ' (' → logprob: -7.898657321929932
    4. '(s' → logprob: -11.14865779876709
    5. '(
' → logprob: -11.89865779876709
    6. '   ' → logprob: -12.39865779876709
    7. 'self' → logprob: -13.14865779876709
    8. '(index' → logprob: -13.52365779876709
    9. '(idx' → logprob: -13.52365779876709
    10. ' ' → logprob: -13.64865779876709

Token 228: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00975868571549654
    2. ',' → logprob: -4.884758472442627
    3. '(' → logprob: -6.634758472442627
    4. '(idx' → logprob: -8.134758949279785
    5. '(index' → logprob: -9.134758949279785
    6. ' (' → logprob: -9.134758949279785
    7. '   ' → logprob: -9.509758949279785
    8. ')' → logprob: -9.759758949279785
    9. '(i' → logprob: -10.759758949279785
    10. '(k' → logprob: -10.884758949279785

Token 229: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5350115299224854
    2. 'idx' → logprob: -1.1600115299224854
    3. ' i' → logprob: -3.0350115299224854
    4. ' idx' → logprob: -3.2850115299224854
    5. 'self' → logprob: -4.785011291503906
    6. 'r' → logprob: -6.285011291503906
    7. 'k' → logprob: -6.410011291503906
    8. 'index' → logprob: -6.410011291503906
    9. ' self' → logprob: -7.410011291503906
    10. 'x' → logprob: -8.285011291503906

Token 230: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5776451826095581
    2. '):
' → logprob: -0.8276451826095581
    3. ',' → logprob: -7.827645301818848
    4. ')' → logprob: -7.952645301818848
    5. '   ' → logprob: -8.077645301818848
    6. '       ' → logprob: -8.327645301818848
    7. '):
' → logprob: -9.327645301818848
    8. ':' → logprob: -9.452645301818848
    9. '<|end|>' → logprob: -9.577645301818848
    10. 'self' → logprob: -10.327645301818848

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021111181005835533
    2. '
' → logprob: -4.021111011505127
    3. ' 
' → logprob: -6.646111011505127
    4. '   ' → logprob: -7.396111011505127
    5. '0' → logprob: -8.521111488342285
    6. ' ' → logprob: -9.021111488342285
    7. '	' → logprob: -9.271111488342285
    8. '  
' → logprob: -9.271111488342285
    9. '    
' → logprob: -9.646111488342285
    10. '        
' → logprob: -9.646111488342285

Token 232: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0889699459075928
    2. ' res' → logprob: -1.0889699459075928
    3. ' s' → logprob: -1.8389699459075928
    4. 's' (adapté à ' s') → logprob: -2.5889699459075928
    5. 'result' → logprob: -3.4639699459075928
    6. '0' → logprob: -3.5889699459075928
    7. '       ' → logprob: -3.7139699459075928
    8. ' result' → logprob: -4.838970184326172
    9. '   ' → logprob: -7.588970184326172
    10. 'total' → logprob: -8.463970184326172

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31372445821762085
    2. '=' → logprob: -1.3137245178222656
    3. ' +=' → logprob: -8.438724517822266
    4. ' ' → logprob: -8.813724517822266
    5. '   ' → logprob: -10.313724517822266
    6. '  ' → logprob: -10.563724517822266
    7. '+=' → logprob: -11.188724517822266
    8. '	' → logprob: -11.688724517822266
    9. '       ' → logprob: -12.438724517822266
    10. '    ' → logprob: -12.688724517822266

Token 234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.139163970947266
    4. 'self' → logprob: -16.639163970947266
    5. ' self' → logprob: -17.639163970947266
    6. '       ' → logprob: -18.264163970947266
    7. ' ' → logprob: -20.264163970947266
    8. '  ' → logprob: -20.639163970947266
    9. '	' → logprob: -21.264163970947266
    10. '           ' → logprob: -21.639163970947266

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. 'self' → logprob: -17.25009536743164
    4. '   ' → logprob: -18.87509536743164
    5. 'i' → logprob: -20.12509536743164
    6. ' self' → logprob: -21.00009536743164
    7. '  ' → logprob: -21.25009536743164
    8. '       ' → logprob: -21.50009536743164
    9. '
' → logprob: -22.12509536743164
    10. '۰' → logprob: -22.50009536743164

Token 236: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15360847115516663
    2. '       ' → logprob: -2.028608560562134
    3. '<|end|>' → logprob: -6.028608322143555
    4. '  
' → logprob: -6.153608322143555
    5. ' 
' → logprob: -6.403608322143555
    6. '        
' → logprob: -6.778608322143555
    7. ';' → logprob: -7.028608322143555
    8. '
' → logprob: -7.653608322143555
    9. ' while' → logprob: -7.653608322143555
    10. 'while' → logprob: -7.778608322143555

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022128233686089516
    2. '
' → logprob: -7.002213001251221
    3. ' while' → logprob: -7.502213001251221
    4. '   ' → logprob: -8.502212524414062
    5. 'while' → logprob: -8.627212524414062
    6. '	' → logprob: -9.252212524414062
    7. '	while' → logprob: -9.627212524414062
    8. '        
' → logprob: -9.752212524414062
    9. ' i' → logprob: -10.752212524414062
    10. ' 
' → logprob: -11.252212524414062

Token 238: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2811830937862396
    2. ' while' → logprob: -1.906183123588562
    3. '       ' → logprob: -2.4061830043792725
    4. 'i' → logprob: -5.531183242797852
    5. ' i' → logprob: -6.656183242797852
    6. '   ' → logprob: -7.156183242797852
    7. '	while' → logprob: -8.656183242797852
    8. ' ' → logprob: -11.156183242797852
    9. '    ' → logprob: -11.281183242797852
    10. '           ' → logprob: -11.406183242797852

Token 239: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132671117782593
    2. ' i' → logprob: -1.3132671117782593
    3. '   ' → logprob: -12.68826675415039
    4. '	i' → logprob: -13.43826675415039
    5. '>' → logprob: -15.56326675415039
    6. ' ' → logprob: -15.93826675415039
    7. '(i' → logprob: -16.18826675415039
    8. '    ' → logprob: -16.31326675415039
    9. '       ' → logprob: -16.31326675415039
    10. '
' → logprob: -16.31326675415039

Token 240: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.001182607957161963
    2. ' >' → logprob: -6.751182556152344
    3. '>=' → logprob: -11.376182556152344
    4. '&gt' → logprob: -14.751182556152344
    5. '   ' → logprob: -15.751182556152344
    6. ' ' → logprob: -16.376182556152344
    7. ' >=' → logprob: -16.751182556152344
    8. '＞' → logprob: -17.251182556152344
    9. '>
' → logprob: -17.501182556152344
    10. '
' → logprob: -17.751182556152344

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10903692245483398
    2. '
' → logprob: -2.859036922454834
    3. ':
' → logprob: -3.734036922454834
    4. '       ' → logprob: -4.359036922454834
    5. ' s' → logprob: -6.484036922454834
    6. '```' → logprob: -6.484036922454834
    7. 'i' → logprob: -7.109036922454834
    8. ' i' → logprob: -7.234036922454834
    9. '   ' → logprob: -7.484036922454834
    10. '               ' → logprob: -7.609036922454834

Token 242: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.08099912852048874
    2. ' s' → logprob: -2.5809991359710693
    3. '           ' → logprob: -6.45599889755249
    4. '               ' → logprob: -8.830999374389648
    5. '```' → logprob: -8.830999374389648
    6. '
' → logprob: -8.955999374389648
    7. '       ' → logprob: -9.455999374389648
    8. '   ' → logprob: -11.205999374389648
    9. '<s' → logprob: -12.205999374389648
    10. '``' → logprob: -12.580999374389648

Token 243: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.28042691946029663
    2. ' +=' → logprob: -1.6554269790649414
    3. '-=' → logprob: -3.4054269790649414
    4. ' -=' → logprob: -4.155426979064941
    5. '   ' → logprob: -5.905426979064941
    6. '=' → logprob: -7.405426979064941
    7. '       ' → logprob: -8.280426979064941
    8. '[' → logprob: -8.905426979064941
    9. ' ^=' → logprob: -9.030426979064941
    10. '           ' → logprob: -9.155426979064941

Token 244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163863845169544
    2. ' self' → logprob: -4.264163970947266
    3. '           ' → logprob: -15.514163970947266
    4. '[self' → logprob: -16.764163970947266
    5. '(self' → logprob: -17.264163970947266
    6. '	self' → logprob: -17.389163970947266
    7. 'tree' → logprob: -17.389163970947266
    8. '       ' → logprob: -17.639163970947266
    9. '   ' → logprob: -17.764163970947266
    10. '```' → logprob: -18.514163970947266

Token 245: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0028719231486320496
    2. 'tree' → logprob: -6.252871990203857
    3. 'ree' → logprob: -7.002871990203857
    4. '	tree' → logprob: -10.8778715133667
    5. '-tree' → logprob: -12.6278715133667
    6. ' tree' → logprob: -13.1278715133667
    7. '[' → logprob: -13.1278715133667
    8. '[i' → logprob: -13.5028715133667
    9. '.' → logprob: -13.6278715133667
    10. '   ' → logprob: -13.7528715133667

Token 246: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -12.125007629394531
    3. 'i' → logprob: -13.125007629394531
    4. ' i' → logprob: -16.62500762939453
    5. ' [' → logprob: -17.37500762939453
    6. '(i' → logprob: -17.62500762939453
    7. ',i' → logprob: -17.87500762939453
    8. '           ' → logprob: -17.87500762939453
    9. '[
' → logprob: -17.87500762939453
    10. '       ' → logprob: -18.00000762939453

Token 247: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022924326360225677
    2. '       ' → logprob: -4.647924423217773
    3. '
' → logprob: -5.397924423217773
    4. '   ' → logprob: -6.022924423217773
    5. '               ' → logprob: -6.647924423217773
    6. '%' → logprob: -7.022924423217773
    7. '<|end|>' → logprob: -7.147924423217773
    8. '```' → logprob: -7.522924423217773
    9. '            
' → logprob: -7.647924423217773
    10. '  
' → logprob: -8.647924423217773

Token 249: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.051207534968853
    2. 'i' (adapté à ' i') → logprob: -3.0512075424194336
    3. ' s' → logprob: -6.301207542419434
    4. 's' → logprob: -8.176207542419434
    5. '           ' → logprob: -8.176207542419434
    6. ' 
' → logprob: -9.551207542419434
    7. '```' → logprob: -10.426207542419434
    8. '   ' → logprob: -10.801207542419434
    9. '       ' → logprob: -10.801207542419434
    10. '
' → logprob: -10.801207542419434

Token 250: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.1760893613100052
    2. '-=' → logprob: -1.9260894060134888
    3. '&' → logprob: -5.176089286804199
    4. '=' → logprob: -5.301089286804199
    5. ' &=' → logprob: -5.926089286804199
    6. '-' → logprob: -6.926089286804199
    7. '   ' → logprob: -7.801089286804199
    8. ' &' → logprob: -8.1760892868042
    9. ' ^=' → logprob: -8.6760892868042
    10. '>' → logprob: -9.3010892868042

Token 251: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020699729793705046
    2. ' i' → logprob: -8.50020694732666
    3. '(i' → logprob: -12.75020694732666
    4. '(' → logprob: -15.50020694732666
    5. '	i' → logprob: -15.75020694732666
    6. ' (' → logprob: -16.000207901000977
    7. '   ' → logprob: -16.875207901000977
    8. ' ' → logprob: -18.125207901000977
    9. '  ' → logprob: -18.250207901000977
    10. '
' → logprob: -19.000207901000977

Token 252: ' &' (ID: 827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011713240382960066
    2. ' i' → logprob: -9.250117301940918
    3. '(i' → logprob: -11.000117301940918
    4. '   ' → logprob: -13.125117301940918
    5. '	i' → logprob: -14.125117301940918
    6. '(' → logprob: -14.625117301940918
    7. ' (' → logprob: -15.125117301940918
    8. '           ' → logprob: -15.625117301940918
    9. ',i' → logprob: -16.0001163482666
    10. '```' → logprob: -16.0001163482666

Token 253: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03248004615306854
    2. '-i' → logprob: -3.532480001449585
    3. ' i' → logprob: -6.657480239868164
    4. '-' → logprob: -7.032480239868164
    5. ' -' → logprob: -7.532480239868164
    6. '(-' → logprob: -11.157480239868164
    7. '	i' → logprob: -12.532480239868164
    8. '(i' → logprob: -13.157480239868164
    9. '_i' → logprob: -13.532480239868164
    10. ' ' → logprob: -13.907480239868164

Token 254: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1875571544806007e-05
    2. ' i' → logprob: -11.375011444091797
    3. '	i' → logprob: -15.875011444091797
    4. '(i' → logprob: -16.375011444091797
    5. '-i' → logprob: -17.375011444091797
    6. '```' → logprob: -17.875011444091797
    7. '   ' → logprob: -18.125011444091797
    8. '_i' → logprob: -18.250011444091797
    9. '  ' → logprob: -18.500011444091797
    10. 's' → logprob: -18.625011444091797

Token 255: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00172718008980155
    2. ' i' → logprob: -6.376727104187012
    3. '(i' → logprob: -12.001727104187012
    4. '	i' → logprob: -12.251727104187012
    5. '<|end|>' → logprob: -12.501727104187012
    6. '_i' → logprob: -12.751727104187012
    7. ',i' → logprob: -12.876727104187012
    8. ' ' → logprob: -13.376727104187012
    9. '  ' → logprob: -14.251727104187012
    10. ',' → logprob: -14.751727104187012

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43766865134239197
    2. '           ' → logprob: -1.9376686811447144
    3. '```' → logprob: -3.062668561935425
    4. '<|end|>' → logprob: -3.437668561935425
    5. '        
' → logprob: -3.687668561935425
    6. '1' → logprob: -4.062668800354004
    7. '
' → logprob: -4.437668800354004
    8. '            
' → logprob: -4.437668800354004
    9. ' ' → logprob: -4.562668800354004
    10. '    
' → logprob: -4.562668800354004

Token 257: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16094158589839935
    2. 'return' (adapté à ' return') → logprob: -2.0359416007995605
    3. '   ' → logprob: -4.6609416007995605
    4. ' return' → logprob: -5.6609416007995605
    5. 's' → logprob: -6.1609416007995605
    6. '        
' → logprob: -7.2859416007995605
    7. '
' → logprob: -7.6609416007995605
    8. '```' → logprob: -7.7859416007995605
    9. '[' → logprob: -8.160941123962402
    10. '    
' → logprob: -8.285941123962402

Token 258: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031777136027812958
    2. ' s' → logprob: -5.753177642822266
    3. '(s' → logprob: -17.628177642822266
    4. ' ' → logprob: -19.128177642822266
    5. '<s' → logprob: -19.378177642822266
    6. '	s' → logprob: -19.878177642822266
    7. 'int' → logprob: -20.378177642822266
    8. '   ' → logprob: -20.628177642822266
    9. '`s' → logprob: -20.753177642822266
    10. '{s' → logprob: -20.753177642822266

Token 259: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06327742338180542
    2. '   ' → logprob: -3.93827748298645
    3. '    
' → logprob: -4.063277244567871
    4. '<|end|>' → logprob: -4.313277244567871
    5. '

' → logprob: -5.188277244567871
    6. '  
' → logprob: -5.688277244567871
    7. ' 
' → logprob: -7.438277244567871
    8. '   
' → logprob: -8.313277244567871
    9. '```' → logprob: -8.313277244567871
    10. '        
' → logprob: -8.438277244567871

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10025132447481155
    2. '    
' → logprob: -2.4752514362335205
    3. ' 
' → logprob: -4.975251197814941
    4. '   
' → logprob: -6.600251197814941
    5. '        
' → logprob: -6.725251197814941
    6. '  
' → logprob: -7.350251197814941
    7. '```' → logprob: -7.850251197814941
    8. '
' → logprob: -8.225251197814941
    9. '<|end|>' → logprob: -8.975251197814941
    10. '     
' → logprob: -9.225251197814941

Token 261: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6070249080657959
    2. '   ' → logprob: -0.8570249080657959
    3. ' def' → logprob: -3.857024908065796
    4. '    
' → logprob: -5.482025146484375
    5. '  
' → logprob: -6.732025146484375
    6. '  ' → logprob: -6.857025146484375
    7. ' 
' → logprob: -6.982025146484375
    8. ' ' → logprob: -7.107025146484375
    9. '   
' → logprob: -7.607025146484375
    10. '        
' → logprob: -7.982025146484375

Token 262: ' add' (ID: 1147)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.2929759621620178
    2. 'update' → logprob: -1.667975902557373
    3. ' add' → logprob: -3.042975902557373
    4. 'add' → logprob: -4.417975902557373
    5. 'def' → logprob: -5.292975902557373
    6. ' def' → logprob: -8.792976379394531
    7. '_update' → logprob: -9.542976379394531
    8. 'put' → logprob: -10.292976379394531
    9. 's' → logprob: -10.417976379394531
    10. '1' → logprob: -10.417976379394531

Token 263: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015268022194504738
    2. '(' → logprob: -4.390267848968506
    3. '(i' → logprob: -6.015267848968506
    4. ' (' → logprob: -8.390268325805664
    5. '<|end|>' → logprob: -9.515268325805664
    6. '(
' → logprob: -12.015268325805664
    7. 'self' → logprob: -13.265268325805664
    8. '<|end|>' → logprob: -13.640268325805664
    9. '(I' → logprob: -14.265268325805664
    10. ' self' → logprob: -14.890268325805664

Token 264: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00034595211036503315
    2. '(' → logprob: -8.125346183776855
    3. '(i' → logprob: -10.500346183776855
    4. ' (' → logprob: -10.875346183776855
    5. '(
' → logprob: -13.375346183776855
    6. 'self' → logprob: -14.750346183776855
    7. ',' → logprob: -14.750346183776855
    8. '<|end|>' → logprob: -14.875346183776855
    9. ' ' → logprob: -15.875346183776855
    10. ' self' → logprob: -16.25034523010254

Token 265: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47410789132118225
    2. 'i' → logprob: -0.9741078615188599
    3. '<|end|>' → logprob: -10.97410774230957
    4. ' ' → logprob: -11.59910774230957
    5. '   ' → logprob: -13.47410774230957
    6. '	i' → logprob: -14.22410774230957
    7. '1' → logprob: -14.59910774230957
    8. 'index' → logprob: -14.59910774230957
    9. ' idx' → logprob: -14.84910774230957
    10. 'idx' → logprob: -15.22410774230957

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006223689415492117
    2. ' ,' → logprob: -7.500622272491455
    3. 'self' → logprob: -10.500622749328613
    4. ',i' → logprob: -10.875622749328613
    5. ',self' → logprob: -11.125622749328613
    6. '(self' → logprob: -12.500622749328613
    7. ',
' → logprob: -13.250622749328613
    8. '   ' → logprob: -14.125622749328613
    9. ',int' → logprob: -15.000622749328613
    10. '       ' → logprob: -15.250622749328613

Token 267: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012510710395872593
    2. ' ' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.262510299682617
    4. 'value' → logprob: -15.387510299682617
    5. '       ' → logprob: -16.637510299682617
    6. '  ' → logprob: -16.887510299682617
    7. '    ' → logprob: -16.887510299682617
    8. '+' → logprob: -17.262510299682617
    9. ' value' → logprob: -17.637510299682617
    10. 'v' → logprob: -18.012510299682617

Token 268: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25238916277885437
    2. '):' → logprob: -1.5023891925811768
    3. '):
' → logprob: -8.252388954162598
    4. ',' → logprob: -9.752388954162598
    5. '       ' → logprob: -9.752388954162598
    6. '   ' → logprob: -10.252388954162598
    7. 'self' → logprob: -11.127388954162598
    8. '):

' → logprob: -11.627388954162598
    9. ':' → logprob: -12.127388954162598
    10. ' ):
' → logprob: -12.377388954162598

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040702108293771744
    2. ' 
' → logprob: -4.2907023429870605
    3. '<|end|>' → logprob: -4.6657023429870605
    4. '
' → logprob: -5.0407023429870605
    5. '        ' → logprob: -5.9157023429870605
    6. '        
' → logprob: -6.2907023429870605
    7. '   ' → logprob: -6.4157023429870605
    8. ' i' → logprob: -7.1657023429870605
    9. ' ' → logprob: -7.7907023429870605
    10. '    
' → logprob: -7.9157023429870605

Token 270: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03506199270486832
    2. ' i' → logprob: -3.910062074661255
    3. ' while' → logprob: -4.535061836242676
    4. '        ' → logprob: -6.535061836242676
    5. 'while' (adapté à ' while') → logprob: -6.785061836242676
    6. '   ' → logprob: -7.285061836242676
    7. 'i' → logprob: -8.660061836242676
    8. '```' → logprob: -9.160061836242676
    9. '    ' → logprob: -10.285061836242676
    10. '           ' → logprob: -10.535061836242676

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132629990577698
    2. ' i' → logprob: -1.313262939453125
    3. 'self' → logprob: -13.938262939453125
    4. ' self' → logprob: -15.688262939453125
    5. '   ' → logprob: -16.188262939453125
    6. '	i' → logprob: -17.188262939453125
    7. '       ' → logprob: -18.063262939453125
    8. '(i' → logprob: -18.313262939453125
    9. ' ' → logprob: -18.563262939453125
    10. '_i' → logprob: -18.938262939453125

Token 272: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7182834148406982
    2. ' <' → logprob: -0.7182834148406982
    3. ' +=' → logprob: -4.093283653259277
    4. '<size' → logprob: -5.218283653259277
    5. '+=' → logprob: -6.218283653259277
    6. '<int' → logprob: -8.718283653259277
    7. '<n' → logprob: -8.968283653259277
    8. '<i' → logprob: -9.218283653259277
    9. '<len' → logprob: -9.468283653259277
    10. '<s' → logprob: -9.843283653259277

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.56102097814437e-05
    2. ' self' → logprob: -10.000045776367188
    3. '       ' → logprob: -15.625045776367188
    4. 'size' → logprob: -20.250045776367188
    5. '[self' → logprob: -20.250045776367188
    6. 'len' → logprob: -20.500045776367188
    7. '   ' → logprob: -20.875045776367188
    8. '(self' → logprob: -21.375045776367188
    9. '	self' → logprob: -21.625045776367188
    10. '
' → logprob: -21.625045776367188

Token 274: '.size' (ID: 4463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16026759147644043
    2. 'size' → logprob: -1.9102675914764404
    3. ' self' → logprob: -10.66026782989502
    4. ' size' → logprob: -11.16026782989502
    5. '.size' → logprob: -12.41026782989502
    6. '   ' → logprob: -14.91026782989502
    7. 'len' → logprob: -15.03526782989502
    8. '
' → logprob: -15.53526782989502
    9. '       ' → logprob: -15.66026782989502
    10. '[self' → logprob: -15.91026782989502

Token 275: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0012376103550195694
    2. ':' → logprob: -7.001237392425537
    3. '):
' → logprob: -8.376237869262695
    4. ' :
' → logprob: -10.126237869262695
    5. '           ' → logprob: -10.751237869262695
    6. '       ' → logprob: -11.001237869262695
    7. '():
' → logprob: -11.626237869262695
    8. ':
' → logprob: -13.376237869262695
    9. '[' → logprob: -13.376237869262695
    10. ' +=' → logprob: -13.626237869262695

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012719007208943367
    2. 'self' → logprob: -7.376271724700928
    3. ' self' → logprob: -7.376271724700928
    4. '   ' → logprob: -11.876272201538086
    5. '```' → logprob: -12.376272201538086
    6. '       ' → logprob: -12.501272201538086
    7. '	       ' → logprob: -13.626272201538086
    8. '               ' → logprob: -14.001272201538086
    9. '+' → logprob: -14.751272201538086
    10. '
' → logprob: -15.251272201538086

Token 277: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010611492209136486
    2. '           ' → logprob: -5.135611534118652
    3. ' self' → logprob: -5.385611534118652
    4. '               ' → logprob: -9.760611534118652
    5. '       ' → logprob: -11.385611534118652
    6. '```' → logprob: -11.760611534118652
    7. '   ' → logprob: -12.010611534118652
    8. '[self' → logprob: -13.010611534118652
    9. '	self' → logprob: -13.385611534118652
    10. '+' → logprob: -14.135611534118652

Token 278: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -4.167648876318708e-05
    2. '.' → logprob: -10.875041961669922
    3. 'tree' → logprob: -11.625041961669922
    4. '	tree' → logprob: -12.500041961669922
    5. '       ' → logprob: -12.750041961669922
    6. '           ' → logprob: -12.750041961669922
    7. ' .' → logprob: -13.250041961669922
    8. '   ' → logprob: -13.875041961669922
    9. '```' → logprob: -15.250041961669922
    10. '>.' → logprob: -15.500041961669922

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.375001907348633
    3. '[++' → logprob: -14.875001907348633
    4. '[I' → logprob: -14.875001907348633
    5. '```' → logprob: -15.625001907348633
    6. '           ' → logprob: -16.500001907348633
    7. '       ' → logprob: -16.500001907348633
    8. ' [' → logprob: -17.250001907348633
    9. '[index' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.250001907348633

Token 280: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25268110632896423
    2. '+=' → logprob: -1.5026811361312866
    3. ']+=' → logprob: -8.127680778503418
    4. '        ' → logprob: -8.127680778503418
    5. '       ' → logprob: -9.252680778503418
    6. '           ' → logprob: -10.252680778503418
    7. '    ' → logprob: -11.377680778503418
    8. '            ' → logprob: -12.252680778503418
    9. '         ' → logprob: -12.877680778503418
    10. ']' → logprob: -13.252680778503418

Token 281: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018154505640268326
    2. ' +=' → logprob: -4.018154621124268
    3. ']+=' → logprob: -12.76815414428711
    4. '=' → logprob: -13.76815414428711
    5. '+=(' → logprob: -14.89315414428711
    6. '       ' → logprob: -16.01815414428711
    7. '+' → logprob: -16.39315414428711
    8. '           ' → logprob: -16.64315414428711
    9. '        ' → logprob: -16.76815414428711
    10. '```' → logprob: -17.64315414428711

Token 282: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '           ' → logprob: -17.913042068481445
    4. '	x' → logprob: -18.788042068481445
    5. '               ' → logprob: -20.913042068481445
    6. '(x' → logprob: -21.788042068481445
    7. '```' → logprob: -22.038042068481445
    8. ')x' → logprob: -22.538042068481445
    9. ' ' → logprob: -23.038042068481445
    10. '       ' → logprob: -23.288042068481445

Token 283: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4617256056226324e-05
    2. ',' → logprob: -12.000014305114746
    3. '<|end|>' → logprob: -12.375014305114746
    4. '       ' → logprob: -13.750014305114746
    5. '<|end|>' → logprob: -14.125014305114746
    6. '               ' → logprob: -14.625014305114746
    7. '          ' → logprob: -15.250014305114746
    8. 'i' → logprob: -15.625014305114746
    9. '```' → logprob: -15.625014305114746
    10. '		' → logprob: -15.750014305114746

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.580929347255733e-05
    2. '       ' → logprob: -11.625016212463379
    3. ',' → logprob: -13.250016212463379
    4. '               ' → logprob: -13.625016212463379
    5. '          ' → logprob: -14.250016212463379
    6. '		' → logprob: -14.375016212463379
    7. '   ' → logprob: -14.500016212463379
    8. 'i' → logprob: -14.500016212463379
    9. '<|end|>' → logprob: -14.875016212463379
    10. '
' → logprob: -15.125016212463379

Token 285: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004307634197175503
    2. ' i' → logprob: -6.129307746887207
    3. 'i' (adapté à ' i') → logprob: -6.504307746887207
    4. 'x' → logprob: -7.504307746887207
    5. ' x' → logprob: -10.004307746887207
    6. '               ' → logprob: -11.754307746887207
    7. '       ' → logprob: -11.754307746887207
    8. '   ' → logprob: -12.254307746887207
    9. '          ' → logprob: -13.129307746887207
    10. 'def' → logprob: -13.504307746887207

Token 286: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0319637060165405
    2. '       ' → logprob: -1.6569637060165405
    3. '           ' → logprob: -2.53196382522583
    4. '%=' → logprob: -2.53196382522583
    5. ' %=' → logprob: -3.03196382522583
    6. '+=' → logprob: -3.15696382522583
    7. '<|end|>' → logprob: -3.28196382522583
    8. '   ' → logprob: -3.78196382522583
    9. ' <<=' → logprob: -3.90696382522583
    10. ')' → logprob: -4.15696382522583

Token 287: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018157200887799263
    2. ' i' → logprob: -4.018157005310059
    3. '(i' → logprob: -12.143157005310059
    4. ' (' → logprob: -13.643157005310059
    5. '   ' → logprob: -15.018157005310059
    6. '	i' → logprob: -15.518157005310059
    7. '(' → logprob: -15.768157005310059
    8. ' ' → logprob: -16.143157958984375
    9. '  ' → logprob: -16.393157958984375
    10. '```' → logprob: -17.643157958984375

Token 288: ' &' (ID: 827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47410789132118225
    2. ' i' → logprob: -0.9741078615188599
    3. ' ' → logprob: -11.47410774230957
    4. ' (' → logprob: -12.09910774230957
    5. '	i' → logprob: -12.59910774230957
    6. '(i' → logprob: -12.84910774230957
    7. '1' → logprob: -12.97410774230957
    8. '  ' → logprob: -13.34910774230957
    9. '&i' → logprob: -13.47410774230957
    10. '```' → logprob: -14.09910774230957

Token 289: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3220260441303253
    2. '-i' → logprob: -1.322026014328003
    3. ' i' → logprob: -5.447026252746582
    4. ' -' → logprob: -5.572026252746582
    5. '-' → logprob: -7.447026252746582
    6. '   ' → logprob: -11.197026252746582
    7. ' ' → logprob: -11.822026252746582
    8. '	i' → logprob: -12.447026252746582
    9. '  ' → logprob: -13.072026252746582
    10. '(-' → logprob: -13.697026252746582

Token 290: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00016313401283696294
    2. '-i' → logprob: -9.125163078308105
    3. ' i' → logprob: -9.875163078308105
    4. '-' → logprob: -13.500163078308105
    5. ' -' → logprob: -13.750163078308105
    6. ' ' → logprob: -16.750164031982422
    7. '	i' → logprob: -16.750164031982422
    8. 'x' → logprob: -17.500164031982422
    9. '```' → logprob: -17.625164031982422
    10. '   ' → logprob: -17.875164031982422

Token 291: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11569056659936905
    2. ' i' → logprob: -2.2406904697418213
    3. '1' → logprob: -6.1156907081604
    4. '0' → logprob: -8.740690231323242
    5. '(i' → logprob: -8.865690231323242
    6. ' ' → logprob: -8.865690231323242
    7. 'x' → logprob: -9.990690231323242
    8. '   ' → logprob: -10.240690231323242
    9. '-i' → logprob: -10.615690231323242
    10. '       ' → logprob: -10.740690231323242

Token 292: 'dp' (ID: 19037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014868320897221565
    2. 'def' → logprob: -4.389868259429932
    3. '    
' → logprob: -6.514868259429932
    4. '
' → logprob: -7.764868259429932
    5. '```' → logprob: -8.76486873626709
    6. 'from' → logprob: -9.13986873626709
    7. ' def' → logprob: -10.13986873626709
    8. '  
' → logprob: -10.88986873626709
    9. 'dp' → logprob: -10.88986873626709
    10. '        
' → logprob: -10.88986873626709

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0430138073861599
    2. '=' → logprob: -3.29301381111145
    3. '_' → logprob: -5.543013572692871
    4. '[' → logprob: -7.043013572692871
    5. ' ' → logprob: -10.168013572692871
    6. '1' → logprob: -10.793013572692871
    7. '0' → logprob: -10.918013572692871
    8. ',' → logprob: -11.293013572692871
    9. '   ' → logprob: -11.668013572692871
    10. 's' → logprob: -11.668013572692871

Token 294: ' BIT' (ID: 52185)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006583446636795998
    2. '{}' → logprob: -5.881583213806152
    3. ' [' → logprob: -6.381583213806152
    4. 'BIT' → logprob: -6.756583213806152
    5. '{' → logprob: -8.006583213806152
    6. '1' → logprob: -8.756583213806152
    7. '[B' → logprob: -9.006583213806152
    8. '[-' → logprob: -9.881583213806152
    9. '0' → logprob: -10.131583213806152
    10. '[len' → logprob: -10.256583213806152

Token 295: '(max' (ID: 17178)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.21231022477149963
    2. '(M' → logprob: -1.8373101949691772
    3. '(N' → logprob: -3.712310314178467
    4. '(' → logprob: -5.712310314178467
    5. '(L' → logprob: -5.837310314178467
    6. '(max' → logprob: -6.712310314178467
    7. '(R' → logprob: -9.337309837341309
    8. '(MAX' → logprob: -10.837309837341309
    9. '(B' → logprob: -11.087309837341309
    10. '((' → logprob: -11.087309837341309

Token 296: '_n' (ID: 2170)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.12232041358947754
    2. 'R' → logprob: -2.3723204135894775
    3. '_R' → logprob: -4.497320175170898
    4. 'len' → logprob: -5.497320175170898
    5. 'N' → logprob: -6.122320175170898
    6. '_r' → logprob: -6.497320175170898
    7. '(len' → logprob: -7.497320175170898
    8. '_n' → logprob: -7.622320175170898
    9. '(max' → logprob: -7.872320175170898
    10. 'max' → logprob: -7.997320175170898

Token 297: '=max' (ID: 102952)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -1.2902220487594604
    2. '=len' → logprob: -1.2902220487594604
    3. '=' → logprob: -1.9152220487594604
    4. '(len' → logprob: -2.16522216796875
    5. '=max' → logprob: -2.66522216796875
    6. ')' → logprob: -2.66522216796875
    7. 'len' → logprob: -3.66522216796875
    8. ' =' → logprob: -4.54022216796875
    9. '(max' → logprob: -5.66522216796875
    10. ':=' → logprob: -5.91522216796875

Token 298: '(R' (ID: 4092)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5957080721855164
    2. 'R' → logprob: -0.8457080721855164
    3. 'max' → logprob: -5.095707893371582
    4. '(R' → logprob: -5.345707893371582
    5. '(len' → logprob: -5.595707893371582
    6. 'N' → logprob: -6.595707893371582
    7. '=len' → logprob: -6.970707893371582
    8. 'L' → logprob: -7.220707893371582
    9. ')' → logprob: -7.720707893371582
    10. '=max' → logprob: -7.970707893371582

Token 299: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000805341056548059
    2. ')' → logprob: -7.625805377960205
    3. '))
' → logprob: -8.125804901123047
    4. ')))' → logprob: -11.500804901123047
    5. ' ))' → logprob: -12.250804901123047
    6. '   ' → logprob: -13.625804901123047
    7. '))

' → logprob: -13.750804901123047
    8. '[' → logprob: -13.750804901123047
    9. ''))' → logprob: -14.625804901123047
    10. '),' → logprob: -14.750804901123047

Token 300: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0481867790222168
    2. 'dp' → logprob: -1.1731867790222168
    3. 'L' → logprob: -1.4231867790222168
    4. 'prev' → logprob: -3.298186779022217
    5. 'sorted' → logprob: -4.048186779022217
    6. 'last' → logprob: -4.673186779022217
    7. 'result' → logprob: -4.798186779022217
    8. 'print' → logprob: -4.798186779022217
    9. 'res' → logprob: -6.298186779022217
    10. 'idx' → logprob: -6.298186779022217

Token 301: ' _,' (ID: 18042)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8387918472290039
    2. 'L' → logprob: -1.838791847229004
    3. 'l' → logprob: -1.963791847229004
    4. ' L' → logprob: -2.088791847229004
    5. ' i' → logprob: -2.838791847229004
    6. 'i' → logprob: -3.338791847229004
    7. ' (' → logprob: -4.338791847229004
    8. '(L' → logprob: -4.963791847229004
    9. ' r' → logprob: -5.088791847229004
    10. 'r' → logprob: -5.338791847229004

Token 302: ' r' (ID: 428)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.602763295173645
    2. 'r' → logprob: -0.852763295173645
    3. '(l' → logprob: -4.9777631759643555
    4. ' (' → logprob: -4.9777631759643555
    5. ' r' → logprob: -5.1027631759643555
    6. '(' → logprob: -5.4777631759643555
    7. 'l' → logprob: -7.4777631759643555
    8. '(L' → logprob: -7.8527631759643555
    9. '(R' → logprob: -8.352763175964355
    10. '(rt' → logprob: -8.602763175964355

Token 303: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14514803886413574
    2. ' in' → logprob: -2.0201480388641357
    3. ',' → logprob: -6.020148277282715
    4. ' ,' → logprob: -11.520148277282715
    5. ')' → logprob: -11.770148277282715
    6. ' ' → logprob: -12.020148277282715
    7. 'r' → logprob: -12.270148277282715
    8. ',r' → logprob: -13.020148277282715
    9. '   ' → logprob: -13.145148277282715
    10. 'import' → logprob: -13.770148277282715

Token 304: ' sorted' (ID: 20099)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.398658812046051
    2. 'sorted' → logprob: -1.1486587524414062
    3. 'L' → logprob: -4.898658752441406
    4. 'enumer' → logprob: -5.648658752441406
    5. ' zip' → logprob: -7.398658752441406
    6. '(zip' → logprob: -9.773658752441406
    7. ' sorted' → logprob: -10.398658752441406
    8. '   ' → logprob: -10.773658752441406
    9. ' L' → logprob: -12.148658752441406
    10. 'list' → logprob: -12.648658752441406

Token 305: '(set' (ID: 25904)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.0005177667480893433
    2. '(L' → logprob: -7.625517845153809
    3. '(sorted' → logprob: -11.625517845153809
    4. 'zip' → logprob: -11.875517845153809
    5. '(en' → logprob: -11.875517845153809
    6. '(list' → logprob: -12.750517845153809
    7. '(' → logprob: -13.375517845153809
    8. ' zip' → logprob: -14.000517845153809
    9. '(range' → logprob: -14.250517845153809
    10. '((' → logprob: -15.125517845153809

Token 306: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.25579023361206055
    2. '(L' → logprob: -1.5057902336120605
    3. '(R' → logprob: -6.8807902336120605
    4. '(en' → logprob: -7.0057902336120605
    5. 'zip' → logprob: -7.6307902336120605
    6. '((' → logprob: -7.7557902336120605
    7. '(list' → logprob: -8.255790710449219
    8. '([(' → logprob: -8.630790710449219
    9. '(sorted' → logprob: -9.005790710449219
    10. '(' → logprob: -9.380790710449219

Token 307: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.002903897315263748
    2. 'L' → logprob: -5.877903938293457
    3. '(R' → logprob: -9.502903938293457
    4. ',L' → logprob: -11.877903938293457
    5. '(sorted' → logprob: -12.752903938293457
    6. ')L' → logprob: -13.002903938293457
    7. '(' → logprob: -13.252903938293457
    8. '[L' → logprob: -13.252903938293457
    9. 'R' → logprob: -13.377903938293457
    10. '(
' → logprob: -13.502903938293457

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028965413570404053
    2. '),' → logprob: -4.278965473175049
    3. ',L' → logprob: -5.278965473175049
    4. ',R' → logprob: -5.528965473175049
    5. ' ,' → logprob: -6.028965473175049
    6. ')),' → logprob: -6.403965473175049
    7. '(R' → logprob: -7.653965473175049
    8. '(sorted' → logprob: -8.02896499633789
    9. '(L' → logprob: -9.02896499633789
    10. 'sorted' → logprob: -9.40396499633789

Token 309: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.000737442634999752
    2. ' R' → logprob: -7.37573766708374
    3. '[' → logprob: -9.750737190246582
    4. 'r' → logprob: -10.500737190246582
    5. '[R' → logprob: -11.375737190246582
    6. ' ' → logprob: -12.625737190246582
    7. 'range' → logprob: -12.875737190246582
    8. '   ' → logprob: -12.875737190246582
    9. '[-' → logprob: -13.500737190246582
    10. 'L' → logprob: -14.000737190246582

Token 310: ')),' (ID: 12098)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.517729640007019
    2. ')):' → logprob: -1.267729640007019
    3. '))' → logprob: -2.1427297592163086
    4. '),' → logprob: -5.392729759216309
    5. ')):
' → logprob: -8.017729759216309
    6. ')),' → logprob: -8.642729759216309
    7. '))[' → logprob: -8.892729759216309
    8. ' ' → logprob: -10.392729759216309
    9. ')))' → logprob: -11.142729759216309
    10. ')' → logprob: -11.142729759216309

Token 311: ' reverse' (ID: 18199)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.014459291473031044
    2. ' key' → logprob: -4.264459133148193
    3. 'reverse' → logprob: -8.264459609985352
    4. '(key' → logprob: -10.264459609985352
    5. ' reverse' → logprob: -12.764459609985352
    6. '[key' → logprob: -15.889459609985352
    7. ',key' → logprob: -16.51445960998535
    8. ')' → logprob: -16.51445960998535
    9. '	key' → logprob: -16.76445960998535
    10. ' ' → logprob: -16.88945960998535

Token 312: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.002694555325433612
    2. '(True' → logprob: -6.002694606781006
    3. '(),' → logprob: -9.127694129943848
    4. '=' → logprob: -10.377694129943848
    5. ',' → logprob: -10.502694129943848
    6. '())' → logprob: -11.377694129943848
    7. '()' → logprob: -11.502694129943848
    8. '(key' → logprob: -11.627694129943848
    9. '   ' → logprob: -11.877694129943848
    10. '(' → logprob: -12.627694129943848

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8862888813018799
    2. '):' → logprob: -0.8862888813018799
    3. ',' → logprob: -1.7612888813018799
    4. '()):
' → logprob: -6.761288642883301
    5. '   ' → logprob: -7.011288642883301
    6. '()' → logprob: -7.886288642883301
    7. ' ,' → logprob: -8.2612886428833
    8. '(' → logprob: -8.3862886428833
    9. '(),' → logprob: -9.2612886428833
    10. '):
' → logprob: -9.3862886428833

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.597226619720459
    2. ' dp' → logprob: -1.097226619720459
    3. 'dp' → logprob: -2.222226619720459
    4. '	dp' → logprob: -5.847226619720459
    5. '    
' → logprob: -6.472226619720459
    6. '(dp' → logprob: -6.722226619720459
    7. '```' → logprob: -7.972226619720459
    8. ' 
' → logprob: -8.097227096557617
    9. ',' → logprob: -9.222227096557617
    10. ')' → logprob: -9.222227096557617

Token 315: ' x' (ID: 1215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08712194859981537
    2. '   ' → logprob: -2.8371219635009766
    3. 'val' → logprob: -4.837121963500977
    4. ' dp' → logprob: -4.962121963500977
    5. 's' → logprob: -5.462121963500977
    6. 'current' → logprob: -6.962121963500977
    7. 'sum' → logprob: -7.212121963500977
    8. 'cnt' → logprob: -7.587121963500977
    9. 'v' → logprob: -7.837121963500977
    10. 'cur' → logprob: -7.837121963500977

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5012509226799011
    2. '=' → logprob: -1.001250982284546
    3. 'dp' → logprob: -3.751250982284546
    4. ',' → logprob: -7.001250743865967
    5. ' dp' → logprob: -7.126250743865967
    6. '   ' → logprob: -7.126250743865967
    7. '(dp' → logprob: -8.501251220703125
    8. '_dp' → logprob: -8.751251220703125
    9. ' ' → logprob: -9.251251220703125
    10. 'sum' → logprob: -10.001251220703125

Token 317: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003473913297057152
    2. '(dp' → logprob: -5.75347375869751
    3. '(' → logprob: -8.378474235534668
    4. ' dp' → logprob: -10.378474235534668
    5. '1' → logprob: -10.503474235534668
    6. '
' → logprob: -13.378474235534668
    7. ' (' → logprob: -13.878474235534668
    8. '(d' → logprob: -14.128474235534668
    9. '(L' → logprob: -14.503474235534668
    10. '   ' → logprob: -14.503474235534668

Token 318: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.005303488578647375
    2. '.add' → logprob: -5.255303382873535
    3. 'get' → logprob: -10.255303382873535
    4. '.' → logprob: -10.630303382873535
    5. ' .' → logprob: -12.380303382873535
    6. 'add' → logprob: -12.380303382873535
    7. '_get' → logprob: -14.630303382873535
    8. '   ' → logprob: -15.505303382873535
    9. '.setdefault' → logprob: -15.755303382873535
    10. '
' → logprob: -15.880303382873535

Token 319: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.676981345459353e-06
    2. 'sum' → logprob: -12.375005722045898
    3. '(r' → logprob: -15.125005722045898
    4. 'dp' → logprob: -15.500005722045898
    5. ' sum' → logprob: -15.625005722045898
    6. '_s' → logprob: -15.875005722045898
    7. ')' → logprob: -16.1250057220459
    8. '(sum' → logprob: -16.3750057220459
    9. '(R' → logprob: -16.5000057220459
    10. '_' → logprob: -16.5000057220459

Token 320: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.87501049041748
    3. 'r' → logprob: -13.25001049041748
    4. '(R' → logprob: -13.62501049041748
    5. '[r' → logprob: -15.75001049041748
    6. ' (' → logprob: -16.125011444091797
    7. '(len' → logprob: -16.750011444091797
    8. '   ' → logprob: -17.500011444091797
    9. '(max' → logprob: -17.625011444091797
    10. '(
' → logprob: -18.000011444091797

Token 321: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7446764707565308
    2. ')' → logprob: -0.9946764707565308
    3. '-' → logprob: -1.8696764707565308
    4. ' )' → logprob: -6.99467658996582
    5. ')-' → logprob: -9.49467658996582
    6. '   ' → logprob: -10.11967658996582
    7. ')
' → logprob: -10.61967658996582
    8. '-)' → logprob: -11.11967658996582
    9. 'r' → logprob: -12.36967658996582
    10. '1' → logprob: -12.99467658996582

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.375001907348633
    4. ')' → logprob: -19.000001907348633
    5. '```' → logprob: -19.000001907348633
    6. 'r' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.062501907348633
    8. '0' → logprob: -20.125001907348633
    9. '
' → logprob: -20.375001907348633
    10. '-' → logprob: -20.375001907348633

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.750001907348633
    4. ')' → logprob: -17.375001907348633
    5. '```' → logprob: -18.312501907348633
    6. '
' → logprob: -18.875001907348633
    7. '0' → logprob: -18.937501907348633
    8. '  ' → logprob: -19.125001907348633
    9. '-' → logprob: -19.750001907348633
    10. '﻿' → logprob: -19.812501907348633

Token 324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03409040719270706
    2. ')
' → logprob: -3.409090518951416
    3. ')+' → logprob: -8.409090042114258
    4. '+' → logprob: -9.284090042114258
    5. ' )' → logprob: -9.284090042114258
    6. '   ' → logprob: -11.034090042114258
    7. ' +' → logprob: -11.784090042114258
    8. ' )
' → logprob: -11.909090042114258
    9. ')

' → logprob: -13.284090042114258
    10. '+)' → logprob: -14.034090042114258

Token 325: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5366898775100708
    2. ' +' → logprob: -0.9116898775100708
    3. '   ' → logprob: -4.786689758300781
    4. 'dp' → logprob: -5.661689758300781
    5. '+
' → logprob: -7.286689758300781
    6. '
' → logprob: -7.536689758300781
    7. '    
' → logprob: -8.911689758300781
    8. ' dp' → logprob: -9.536689758300781
    9. '(dp' → logprob: -9.661689758300781
    10. '	dp' → logprob: -10.411689758300781

Token 326: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001601539261173457
    2. ' ' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.875160217285156
    4. 'dp' → logprob: -15.375160217285156
    5. 'MOD' → logprob: -16.000160217285156
    6. '0' → logprob: -16.250160217285156
    7. 'mod' → logprob: -16.750160217285156
    8. 'pow' → logprob: -16.875160217285156
    9. '  ' → logprob: -17.375160217285156
    10. '(' → logprob: -17.687660217285156

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.375041007995605
    4. 'dp' → logprob: -16.00004005432129
    5. 'MOD' → logprob: -16.50004005432129
    6. '2' → logprob: -16.62504005432129
    7. 'mod' → logprob: -17.12504005432129
    8. '0' → logprob: -17.31254005432129
    9. 'pow' → logprob: -17.56254005432129
    10. '<|end|>' → logprob: -17.62504005432129

Token 328: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6545882225036621
    2. 'dp' → logprob: -1.529588222503662
    3. ' dp' → logprob: -2.029588222503662
    4. '(dp' → logprob: -3.029588222503662
    5. '   ' → logprob: -3.404588222503662
    6. '    
' → logprob: -3.779588222503662
    7. '	dp' → logprob: -4.529588222503662
    8. ' 
' → logprob: -5.279588222503662
    9. '  
' → logprob: -5.279588222503662
    10. ')' → logprob: -6.154588222503662

Token 329: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4871319532394409
    2. ' dp' → logprob: -1.612131953239441
    3. '   ' → logprob: -1.737131953239441
    4. '	dp' → logprob: -5.6121320724487305
    5. '(dp' → logprob: -6.2371320724487305
    6. '
' → logprob: -6.3621320724487305
    7. ',' → logprob: -7.2371320724487305
    8. '    
' → logprob: -7.3621320724487305
    9. '.dp' → logprob: -7.4871320724487305
    10. '_dp' → logprob: -8.36213207244873

Token 330: ' x' (ID: 1215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002042840700596571
    2. '   ' → logprob: -6.377042770385742
    3. 'x' (adapté à ' x') → logprob: -8.627042770385742
    4. ' dp' → logprob: -8.752042770385742
    5. '	dp' → logprob: -13.502042770385742
    6. '(dp' → logprob: -14.752042770385742
    7. '    
' → logprob: -14.877042770385742
    8. '```' → logprob: -14.877042770385742
    9. ' x' → logprob: -15.627042770385742
    10. 'if' → logprob: -15.752042770385742

Token 331: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.7800988554954529
    2. '%' → logprob: -1.6550989151000977
    3. '%=' → logprob: -1.7800989151000977
    4. '=' → logprob: -2.4050989151000977
    5. ' =' → logprob: -3.2800989151000977
    6. ')' → logprob: -3.5300989151000977
    7. ' %' → logprob: -4.155098915100098
    8. ',' → logprob: -5.155098915100098
    9. ')%' → logprob: -7.280098915100098
    10. '<|end|>' → logprob: -7.280098915100098

Token 332: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.842555426876061e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '_MOD' → logprob: -20.1250057220459
    4. '.MOD' → logprob: -21.6250057220459
    5. '
' → logprob: -22.3750057220459
    6. '```' → logprob: -22.8750057220459
    7. 'MO' → logprob: -23.1250057220459
    8. 'MD' → logprob: -24.5000057220459
    9. '   ' → logprob: -24.5000057220459
    10. ' ' → logprob: -25.6250057220459

Token 333: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14695027470588684
    2. 'dp' → logprob: -2.2719502449035645
    3. ' dp' → logprob: -3.8969502449035645
    4. '
' → logprob: -4.7719502449035645
    5. '    
' → logprob: -6.1469502449035645
    6. '(dp' → logprob: -6.5219502449035645
    7. '	dp' → logprob: -7.3969502449035645
    8. '  
' → logprob: -8.021950721740723
    9. '  ' → logprob: -10.146950721740723
    10. ',' → logprob: -10.146950721740723

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.387747585773468
    2. 'dp' → logprob: -1.1377475261688232
    3. ' dp' → logprob: -7.137747764587402
    4. '```' → logprob: -10.637747764587402
    5. '	dp' → logprob: -10.762747764587402
    6. '    
' → logprob: -11.262747764587402
    7. '(dp' → logprob: -11.262747764587402
    8. '  ' → logprob: -12.887747764587402
    9. ' ' → logprob: -13.012747764587402
    10. '
' → logprob: -13.387747764587402

Token 335: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -7.226628895296017e-06
    2. ' dp' → logprob: -12.500007629394531
    3. '   ' → logprob: -12.625007629394531
    4. '	dp' → logprob: -17.25000762939453
    5. '(dp' → logprob: -17.37500762939453
    6. 'print' → logprob: -17.50000762939453
    7. '```' → logprob: -18.12500762939453
    8. '
' → logprob: -18.37500762939453
    9. 'db' → logprob: -19.87500762939453
    10. 'd' → logprob: -20.00000762939453

Token 336: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.750001907348633
    3. 'add' → logprob: -15.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. ' .' → logprob: -16.125001907348633
    6. '`.' → logprob: -16.875001907348633
    7. ').' → logprob: -18.250001907348633
    8. '.Add' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '.ad' → logprob: -18.875001907348633

Token 337: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. '(R' → logprob: -15.250001907348633
    4. 'r' → logprob: -15.250001907348633
    5. '(
' → logprob: -16.000001907348633
    6. '[r' → logprob: -17.125001907348633
    7. '(re' → logprob: -17.625001907348633
    8. '	r' → logprob: -18.125001907348633
    9. ' (' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.750001907348633

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025964321568608284
    2. ',r' → logprob: -3.7759642601013184
    3. '(r' → logprob: -6.150964260101318
    4. 'r' → logprob: -7.775964260101318
    5. ',x' → logprob: -9.400964736938477
    6. ' ,' → logprob: -10.275964736938477
    7. ')' → logprob: -11.275964736938477
    8. '(x' → logprob: -11.400964736938477
    9. 'x' → logprob: -11.900964736938477
    10. '(' → logprob: -12.150964736938477

Token 339: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750484973192215
    2. ' x' → logprob: -3.5297505855560303
    3. '	x' → logprob: -18.77975082397461
    4. ')x' → logprob: -19.40475082397461
    5. '(x' → logprob: -20.40475082397461
    6. '$x' → logprob: -20.77975082397461
    7. '%x' → logprob: -20.90475082397461
    8. ')' → logprob: -21.77975082397461
    9. '"x' → logprob: -21.77975082397461
    10. '{x' → logprob: -22.52975082397461

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002619318547658622
    2. ')
' → logprob: -9.125262260437012
    3. '<|end|>' → logprob: -9.125262260437012
    4. '
' → logprob: -10.375262260437012
    5. ' )' → logprob: -11.875262260437012
    6. '```' → logprob: -13.250262260437012
    7. ')

' → logprob: -14.625262260437012
    8. '#' → logprob: -14.625262260437012
    9. '<|end|>' → logprob: -14.750262260437012
    10. '  
' → logprob: -15.000262260437012

Token 341: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016679229447618127
    2. 'result' → logprob: -6.7516679763793945
    3. 'total' → logprob: -8.251667976379395
    4. 'ans' → logprob: -8.751667976379395
    5. 'answer' → logprob: -9.751667976379395
    6. 'res' → logprob: -11.251667976379395
    7. 'p' → logprob: -13.626667976379395
    8. 'pr' → logprob: -13.751667976379395
    9. '```' → logprob: -14.001667976379395
    10. 's' → logprob: -14.126667976379395

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2295483946800232
    2. '=' → logprob: -1.604548454284668
    3. '_' → logprob: -5.604548454284668
    4. '.' → logprob: -8.604548454284668
    5. ',' → logprob: -9.104548454284668
    6. 's' → logprob: -10.354548454284668
    7. ':' → logprob: -10.479548454284668
    8. ')' → logprob: -10.979548454284668
    9. '_=' → logprob: -11.229548454284668
    10. ' ' → logprob: -11.479548454284668

Token 343: ' ' (ID: 220)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3871120512485504
    2. 'dp' → logprob: -1.137112021446228
    3. '(dp' → logprob: -8.51211166381836
    4. ' (' → logprob: -10.26211166381836
    5. '(' → logprob: -12.63711166381836
    6. '0' → logprob: -15.13711166381836
    7. ' ' → logprob: -15.26211166381836
    8. ' sum' → logprob: -15.38711166381836
    9. 'sum' → logprob: -15.51211166381836
    10. ' ' → logprob: -15.88711166381836

Token 344: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002301204949617386
    2. '(dp' → logprob: -6.252301216125488
    3. ' dp' → logprob: -8.002301216125488
    4. '(' → logprob: -11.627301216125488
    5. 'max' → logprob: -11.752301216125488
    6. ' (' → logprob: -12.002301216125488
    7. 'sum' → logprob: -12.377301216125488
    8. 'MOD' → logprob: -12.502301216125488
    9. '(M' → logprob: -13.002301216125488
    10. '(max' → logprob: -13.252301216125488

Token 345: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3331741392612457
    2. '
' → logprob: -1.3331741094589233
    3. 'print' → logprob: -4.458174228668213
    4. '+' → logprob: -5.208174228668213
    5. ' for' → logprob: -7.208174228668213
    6. '+
' → logprob: -7.208174228668213
    7. 'answer' → logprob: -7.458174228668213
    8. ' +' → logprob: -8.833173751831055
    9. '

' → logprob: -9.208173751831055
    10. 'dp' → logprob: -9.458173751831055

Token 346: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002244227332994342
    2. ' dp' → logprob: -6.252243995666504
    3. '(dp' → logprob: -8.127243995666504
    4. ' (' → logprob: -12.002243995666504
    5. 'max' → logprob: -12.127243995666504
    6. 'sum' → logprob: -12.627243995666504
    7. '(' → logprob: -12.877243995666504
    8. 'MOD' → logprob: -13.877243995666504
    9. ' ' → logprob: -14.877243995666504
    10. '(M' → logprob: -15.377243995666504

Token 347: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.002663408173248172
    2. '.tree' → logprob: -6.002663612365723
    3. 'get' → logprob: -9.127663612365723
    4. '.size' → logprob: -9.752663612365723
    5. '.' → logprob: -11.252663612365723
    6. ' .' → logprob: -12.752663612365723
    7. 'tree' → logprob: -13.252663612365723
    8. '.add' → logprob: -14.127663612365723
    9. '.sum' → logprob: -14.252663612365723
    10. '.answer' → logprob: -15.002663612365723

Token 348: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9146995327901095e-05
    2. 'sum' → logprob: -10.875019073486328
    3. 'Sum' → logprob: -17.125019073486328
    4. '_size' → logprob: -17.125019073486328
    5. '_SUM' → logprob: -17.250019073486328
    6. '_max' → logprob: -17.500019073486328
    7. 'answer' → logprob: -18.000019073486328
    8. '(R' → logprob: -18.500019073486328
    9. '(' → logprob: -18.750019073486328
    10. 'SUM' → logprob: -19.000019073486328

Token 349: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5487977862358093
    2. '(dp' → logprob: -1.048797845840454
    3. '(len' → logprob: -2.673797845840454
    4. '(' → logprob: -6.548797607421875
    5. '(R' → logprob: -7.298797607421875
    6. '(bit' → logprob: -7.423797607421875
    7. 'dp' → logprob: -9.423797607421875
    8. '(M' → logprob: -9.548797607421875
    9. '(MAX' → logprob: -9.923797607421875
    10. '(B' → logprob: -10.798797607421875

Token 350: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.0002814775798469782
    2. '_R' → logprob: -9.00028133392334
    3. '_r' → logprob: -9.12528133392334
    4. '_n' → logprob: -10.50028133392334
    5. 'R' → logprob: -11.50028133392334
    6. '(' → logprob: -12.37528133392334
    7. '(r' → logprob: -12.50028133392334
    8. '[R' → logprob: -13.12528133392334
    9. '(_' → logprob: -15.25028133392334
    10. ' R' → logprob: -15.25028133392334

Token 351: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010582361370325089
    2. '()))' → logprob: -4.635582447052002
    3. ')' → logprob: -7.885582447052002
    4. '))
' → logprob: -8.385581970214844
    5. '())' → logprob: -9.385581970214844
    6. ' ))' → logprob: -10.135581970214844
    7. '()' → logprob: -10.260581970214844
    8. ')))' → logprob: -10.260581970214844
    9. '()))
' → logprob: -11.510581970214844
    10. '(' → logprob: -11.635581970214844

Token 352: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16176044940948486
    2. '
' → logprob: -1.9117604494094849
    3. ' print' → logprob: -6.661760330200195
    4. '<|end|>' → logprob: -9.036760330200195
    5. '```' → logprob: -10.286760330200195
    6. ' 
' → logprob: -10.286760330200195
    7. '\n' → logprob: -10.411760330200195
    8. '\' → logprob: -11.911760330200195
    9. '.print' → logprob: -11.911760330200195
    10. '  
' → logprob: -12.036760330200195

Token 353: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3893609344959259
    2. '<|end|>' → logprob: -1.2643609046936035
    3. '
' → logprob: -3.7643609046936035
    4. 'print' → logprob: -5.3893609046936035
    5. ')' → logprob: -5.8893609046936035
    6. ' %' → logprob: -6.1393609046936035
    7. '```' → logprob: -6.1393609046936035
    8. '=' → logprob: -6.3893609046936035
    9. '%=' → logprob: -7.1393609046936035
    10. ' %=' → logprob: -7.7643609046936035

Token 354: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.7610454708337784e-05
    2. ' MOD' → logprob: -10.500027656555176
    3. '(M' → logprob: -20.12502670288086
    4. '_MOD' → logprob: -20.12502670288086
    5. '```' → logprob: -20.50002670288086
    6. 'MO' → logprob: -22.12502670288086
    7. '.MOD' → logprob: -22.25002670288086
    8. '   ' → logprob: -22.37502670288086
    9. '10' → logprob: -22.87502670288086
    10. 'MD' → logprob: -23.87502670288086

Token 355: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.875000953674316
    3. '```' → logprob: -16.125
    4. '
' → logprob: -17.875
    5. '#print' → logprob: -19.75
    6. '(print' → logprob: -20.5
    7. '<|end|>' → logprob: -20.75
    8. '``' → logprob: -20.875
    9. '.print' → logprob: -21.25
    10. '	print' → logprob: -21.375

Token 356: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. '
' → logprob: -20.125
    5. '#print' → logprob: -22.5
    6. '``' → logprob: -23.125
    7. '	print' → logprob: -23.375
    8. '(print' → logprob: -23.625
    9. 'for' → logprob: -24.25
    10. '-print' → logprob: -24.5

Token 357: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. '(ans' → logprob: -15.500008583068848
    4. 'answer' → logprob: -16.00000762939453
    5. '(question' → logprob: -17.37500762939453
    6. ' (' → logprob: -18.50000762939453
    7. '(
' → logprob: -18.75000762939453
    8. '((' → logprob: -19.37500762939453
    9. '()' → logprob: -19.62500762939453
    10. '(address' → logprob: -19.75000762939453

Token 358: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.17420256882906e-05
    2. '()' → logprob: -9.750091552734375
    3. '())' → logprob: -10.500091552734375
    4. ' )' → logprob: -12.750091552734375
    5. ')
' → logprob: -13.750091552734375
    6. '(' → logprob: -13.750091552734375
    7. '))' → logprob: -15.500091552734375
    8. '```' → logprob: -15.500091552734375
    9. '`)' → logprob: -16.000091552734375
    10. ')`' → logprob: -16.250091552734375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 356
Tokens correctement prédits (1ère position, stricte): 152
Tokens correctement prédits (1ère position, avec adaptation): 163
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 42.70%
Précision adaptée (1ère position): 45.79%
Précision (top 10): 87.92%
================================================================================
