================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Utiliser la fonction input() pour lire une ligne entière depuis l'entrée standard (typiquement, le clavier de l'utilisateur).
# La méthode split() coupe la chaîne de caractères lue en sous-chaînes selon l'espace comme séparateur par défaut.
# Ensuite, map(int, ...) applique la fonction int à chaque élément résultant de split(), convertissant chaque sous-chaîne en un entier.
# Enfin, les deux valeurs entières sont simultanément affectées (assignées) aux variables A et B grâce à l'affectation multiple.
A, B = map(int, input().split())

# Vérifie si les deux valeurs A et B sont inférieures ou égales à 9 :
# max(A, B) retourne la valeur la plus grande entre A et B.
# On compare cette valeur maximale à 9 à l'aide de l'opérateur <= (inférieur ou égal).
# Si cette condition est vraie (c'est-à-dire que les deux valeurs sont ≤ 9), alors :
#   On calcule le produit de A et B (A * B).
# Sinon (au moins un des nombres est strictement supérieur à 9) :
#   On retourne -1 pour signaler une condition non acceptable selon l'énoncé.
# L'opérateur ternaire if ... else permet d'effectuer cette sélection en une ligne.
# Enfin, print(...) affiche le résultat à l'écran.
print(A * B if max(A, B) <= 9 else -1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Util' (ID: 13564)
  → Token d'amorce (pas de prédiction)

Token 2: 'iser' (ID: 7466)
  → Token d'amorce (pas de prédiction)

Token 3: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.131002426147461
    2. ' la' → logprob: -2.131002426147461
    3. ' le' → logprob: -2.256002426147461
    4. '-' → logprob: -2.381002426147461
    5. '_' → logprob: -2.506002426147461
    6. 'le' → logprob: -3.506002426147461
    7. ':' → logprob: -3.631002426147461
    8. '-le' → logprob: -3.631002426147461
    9. 'l' → logprob: -4.256002426147461
    10. '.' → logprob: -4.381002426147461

Token 4: ' fonction' (ID: 17610)
  Prédit: 'bibli'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bibli' → logprob: -0.11665064841508865
    2. ' bibliothèque' → logprob: -2.7416505813598633
    3. 'fonction' → logprob: -5.116650581359863
    4. 'lib' → logprob: -5.366650581359863
    5. ' bibli' → logprob: -5.366650581359863
    6. 'mé' → logprob: -5.491650581359863
    7. 'b' → logprob: -5.866650581359863
    8. 'p' → logprob: -6.241650581359863
    9. ' #' → logprob: -6.241650581359863
    10. '#' → logprob: -6.491650581359863

Token 5: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38975122570991516
    2. '`' → logprob: -2.3897511959075928
    3. '```' → logprob: -2.6397511959075928
    4. '.' → logprob: -3.1397511959075928
    5. ' ' → logprob: -3.1397511959075928
    6. '(' → logprob: -4.389751434326172
    7. ':' → logprob: -4.514751434326172
    8. 's' → logprob: -5.014751434326172
    9. 'space' → logprob: -5.514751434326172
    10. ' `' → logprob: -5.639751434326172

Token 6: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00516378553584218
    2. '()' → logprob: -5.380163669586182
    3. '```' → logprob: -8.63016414642334
    4. ':' → logprob: -9.88016414642334
    5. '(
' → logprob: -10.00516414642334
    6. '`' → logprob: -10.00516414642334
    7. '.' → logprob: -10.25516414642334
    8. 's' → logprob: -10.38016414642334
    9. '_' → logprob: -10.50516414642334
    10. '#' → logprob: -10.75516414642334

Token 7: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01283970382064581
    2. ':' → logprob: -5.6378397941589355
    3. '#' → logprob: -6.2628397941589355
    4. '()' → logprob: -6.2628397941589355
    5. '(
' → logprob: -6.7628397941589355
    6. '.' → logprob: -7.0128397941589355
    7. 's' → logprob: -7.5128397941589355
    8. '```' → logprob: -7.6378397941589355
    9. '[' → logprob: -8.012839317321777
    10. 'a' → logprob: -8.012839317321777

Token 8: ' lire' (ID: 46082)
  Prédit: ' récupérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' récupérer' → logprob: -0.53269362449646
    2. ' obtenir' → logprob: -1.53269362449646
    3. ' recevoir' → logprob: -2.65769362449646
    4. ' saisir' → logprob: -2.78269362449646
    5. ' demander' → logprob: -3.78269362449646
    6. 'r' → logprob: -4.157693862915039
    7. ' recue' → logprob: -4.907693862915039
    8. ' continuer' → logprob: -5.532693862915039
    9. ' récup' → logprob: -5.657693862915039
    10. ' lire' → logprob: -6.282693862915039

Token 9: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05470431223511696
    2. '_' → logprob: -3.179704427719116
    3. '()' → logprob: -6.054704189300537
    4. '.' → logprob: -6.554704189300537
    5. '('' → logprob: -6.554704189300537
    6. 's' → logprob: -6.804704189300537
    7. ''' → logprob: -6.929704189300537
    8. '```' → logprob: -7.179704189300537
    9. '("' → logprob: -7.429704189300537
    10. ':' → logprob: -7.554704189300537

Token 10: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1755882352590561
    2. ' ligne' → logprob: -2.0505881309509277
    3. ' chaîne' → logprob: -3.6755881309509277
    4. ' valeur' → logprob: -6.675588130950928
    5. 's' → logprob: -7.050588130950928
    6. '_' → logprob: -7.175588130950928
    7. 'ligne' → logprob: -7.300588130950928
    8. '  ' → logprob: -7.425588130950928
    9. ' string' → logprob: -7.675588130950928
    10. ' chaine' → logprob: -7.675588130950928

Token 11: ' entière' (ID: 61583)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4091511368751526
    2. '.' → logprob: -2.034151077270508
    3. '_' → logprob: -3.034151077270508
    4. 'user' → logprob: -3.534151077270508
    5. '`' → logprob: -3.784151077270508
    6. '```' → logprob: -4.034151077270508
    7. '()' → logprob: -4.159151077270508
    8. '#' → logprob: -4.284151077270508
    9. ')' → logprob: -4.909151077270508
    10. ':' → logprob: -5.034151077270508

Token 12: ' depuis' (ID: 16277)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5423943400382996
    2. '(' → logprob: -2.5423943996429443
    3. '_' → logprob: -2.7923943996429443
    4. 'u' → logprob: -3.0423943996429443
    5. 'input' → logprob: -3.7923943996429443
    6. 's' → logprob: -3.9173943996429443
    7. 'v' → logprob: -3.9173943996429443
    8. '#' → logprob: -3.9173943996429443
    9. '`' → logprob: -4.167394161224365
    10. '```' → logprob: -4.292394161224365

Token 13: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.640753448009491
    2. 'l' → logprob: -1.1407535076141357
    3. ' input' → logprob: -2.6407535076141357
    4. 'input' → logprob: -3.7657535076141357
    5. ' la' → logprob: -4.015753269195557
    6. ' stdin' → logprob: -4.515753269195557
    7. ' ' → logprob: -4.515753269195557
    8. 'le' → logprob: -5.390753269195557
    9. 'la' → logprob: -5.765753269195557
    10. ' le' → logprob: -6.390753269195557

Token 14: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.9068576097488403
    2. ''utilisateur' → logprob: -0.9068576097488403
    3. ''' → logprob: -1.7818576097488403
    4. 'a' → logprob: -4.406857490539551
    5. 'entrée' → logprob: -5.781857490539551
    6. 'input' → logprob: -6.156857490539551
    7. 'u' → logprob: -6.406857490539551
    8. ''util' → logprob: -7.281857490539551
    9. '')' → logprob: -7.656857490539551
    10. '’utilisateur' → logprob: -7.656857490539551

Token 15: ' standard' (ID: 7024)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.9437237977981567
    2. '(' → logprob: -1.8187237977981567
    3. '_' → logprob: -2.193723678588867
    4. 'u' → logprob: -2.943723678588867
    5. 'v' → logprob: -2.943723678588867
    6. '#' → logprob: -3.443723678588867
    7. 's' → logprob: -3.943723678588867
    8. '`' → logprob: -4.068723678588867
    9. 'input' → logprob: -4.193723678588867
    10. ',' → logprob: -4.318723678588867

Token 16: ' (' (ID: 350)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.8380751013755798
    2. '.' → logprob: -1.9630751609802246
    3. '_' → logprob: -2.5880751609802246
    4. '(' → logprob: -2.9630751609802246
    5. '\' → logprob: -3.0880751609802246
    6. '\n' → logprob: -3.3380751609802246
    7. ':' → logprob: -3.4630751609802246
    8. ',' → logprob: -3.7130751609802246
    9. '`' → logprob: -4.088075160980225
    10. 'input' → logprob: -4.088075160980225

Token 17: 'ty' (ID: 1206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005888947052881122
    2. '):' → logprob: -9.500589370727539
    3. 'user' → logprob: -9.625589370727539
    4. ',' → logprob: -9.750589370727539
    5. ' )' → logprob: -9.750589370727539
    6. ').' → logprob: -9.875589370727539
    7. '`)' → logprob: -10.000589370727539
    8. ')#' → logprob: -10.125589370727539
    9. '')' → logprob: -10.250589370727539
    10. 'input' → logprob: -10.625589370727539

Token 18: 'pi' (ID: 3455)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9911471605300903
    2. 'n' → logprob: -1.4911471605300903
    3. 'e' → logprob: -2.116147041320801
    4. ' ' → logprob: -2.616147041320801
    5. 'p' → logprob: -2.866147041320801
    6. ' )' → logprob: -3.366147041320801
    7. 'u' → logprob: -4.116147041320801
    8. ':' → logprob: -4.366147041320801
    9. '_' → logprob: -4.616147041320801
    10. '=' → logprob: -4.741147041320801

Token 19: 'quement' (ID: 42437)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.15587912499904633
    2. 'q' → logprob: -2.030879020690918
    3. 'qu' → logprob: -4.530879020690918
    4. 'quement' → logprob: -7.030879020690918
    5. 'ques' → logprob: -7.780879020690918
    6. 'c' → logprob: -7.780879020690918
    7. '#' → logprob: -8.905879020690918
    8. 'e' → logprob: -9.155879020690918
    9. '```' → logprob: -9.155879020690918
    10. '`' → logprob: -9.780879020690918

Token 20: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051605790853500366
    2. ' )' → logprob: -3.051605701446533
    3. ' utilisateur' → logprob: -7.551605701446533
    4. '`)' → logprob: -7.801605701446533
    5. ',' → logprob: -7.926605701446533
    6. ' de' → logprob: -8.176606178283691
    7. ').' → logprob: -8.676606178283691
    8. 'user' → logprob: -8.801606178283691
    9. ' user' → logprob: -9.176606178283691
    10. 'util' → logprob: -9.301606178283691

Token 21: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.196351408958435
    2. ' l' → logprob: -1.196351408958435
    3. ' )' → logprob: -1.571351408958435
    4. ')' → logprob: -2.9463515281677246
    5. ' la' → logprob: -2.9463515281677246
    6. 'le' → logprob: -3.8213515281677246
    7. ' ' → logprob: -4.196351528167725
    8. ' le' → logprob: -4.696351528167725
    9. ' ' → logprob: -5.071351528167725
    10. ' utilisateur' → logprob: -5.196351528167725

Token 22: ' clavier' (ID: 187878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35225793719291687
    2. ' )' → logprob: -2.7272579669952393
    3. '\n' → logprob: -2.8522579669952393
    4. ''' → logprob: -2.9772579669952393
    5. '`' → logprob: -4.10225772857666
    6. '')' → logprob: -4.85225772857666
    7. ' ' → logprob: -4.85225772857666
    8. '\' → logprob: -4.97725772857666
    9. 's' → logprob: -5.10225772857666
    10. '_' → logprob: -5.10225772857666

Token 23: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011406922712922096
    2. '#' → logprob: -7.251140594482422
    3. ' )' → logprob: -9.001140594482422
    4. ')#' → logprob: -9.001140594482422
    5. '`)' → logprob: -9.751140594482422
    6. '")' → logprob: -10.876140594482422
    7. '```' → logprob: -11.251140594482422
    8. '.' → logprob: -11.251140594482422
    9. '')' → logprob: -11.376140594482422
    10. ')`' → logprob: -11.501140594482422

Token 24: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.47862181067466736
    2. ' l' → logprob: -0.9786218404769897
    3. ')' → logprob: -5.728621959686279
    4. ' )' → logprob: -8.228621482849121
    5. 's' → logprob: -8.353621482849121
    6. ' utilisateur' → logprob: -8.853621482849121
    7. 'util' → logprob: -8.978621482849121
    8. '	l' → logprob: -9.728621482849121
    9. ' ' → logprob: -9.853621482849121
    10. 'user' → logprob: -9.853621482849121

Token 25: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.014906727708876133
    2. '')' → logprob: -4.889906883239746
    3. ''' → logprob: -5.264906883239746
    4. '’utilisateur' → logprob: -7.264906883239746
    5. ''util' → logprob: -8.014906883239746
    6. 'u' → logprob: -8.139906883239746
    7. ''u' → logprob: -8.139906883239746
    8. ''user' → logprob: -8.889906883239746
    9. ')' → logprob: -9.139906883239746
    10. 'util' → logprob: -9.764906883239746

Token 26: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003967071825172752
    2. '#' → logprob: -8.500396728515625
    3. '')' → logprob: -10.000396728515625
    4. '")' → logprob: -10.250396728515625
    5. ')#' → logprob: -10.375396728515625
    6. '`)' → logprob: -11.000396728515625
    7. ' )' → logprob: -11.250396728515625
    8. '```' → logprob: -11.625396728515625
    9. ')`' → logprob: -11.750396728515625
    10. ')
' → logprob: -12.000396728515625

Token 27: '#' (ID: 2)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.381381094455719
    2. '\n' → logprob: -3.381381034851074
    3. 's' → logprob: -3.381381034851074
    4. '```' → logprob: -3.631381034851074
    5. 'input' → logprob: -3.756381034851074
    6. '\' → logprob: -3.756381034851074
    7. 'entrée' → logprob: -4.006381034851074
    8. '_' → logprob: -4.381381034851074
    9. 'n' → logprob: -4.381381034851074
    10. '.' → logprob: -4.506381034851074

Token 28: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.05113017559051514
    2. 'input' → logprob: -4.926130294799805
    3. ' ' → logprob: -5.051130294799805
    4. ' user' → logprob: -5.051130294799805
    5. 's' → logprob: -5.426130294799805
    6. 'n' → logprob: -5.551130294799805
    7. 'nom' → logprob: -5.551130294799805
    8. 'name' → logprob: -5.926130294799805
    9. 'u' → logprob: -6.676130294799805
    10. 'ent' → logprob: -6.676130294799805

Token 29: ' méthode' (ID: 71490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03939303010702133
    2. ' ligne' → logprob: -5.039392948150635
    3. 's' → logprob: -5.414392948150635
    4. 'l' → logprob: -5.414392948150635
    5. ' =' → logprob: -5.539392948150635
    6. ' input' → logprob: -6.289392948150635
    7. 'r' → logprob: -6.539392948150635
    8. 'n' → logprob: -6.664392948150635
    9. ' valeur' → logprob: -6.664392948150635
    10. '_' → logprob: -6.914392948150635

Token 30: ' split' (ID: 12648)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2673840820789337
    2. 'split' → logprob: -1.6423840522766113
    3. ' strip' → logprob: -4.017384052276611
    4. ' split' → logprob: -4.267384052276611
    5. 'rstrip' → logprob: -5.892384052276611
    6. 'read' → logprob: -6.267384052276611
    7. ' readline' → logprob: -6.642384052276611
    8. ' input' → logprob: -7.017384052276611
    9. '.' → logprob: -7.392384052276611
    10. 'input' → logprob: -7.392384052276611

Token 31: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25903257727622986
    2. '()' → logprob: -1.5090326070785522
    3. '('' → logprob: -5.009032726287842
    4. '("' → logprob: -9.009032249450684
    5. '(
' → logprob: -9.259032249450684
    6. '("("' → logprob: -9.509032249450684
    7. ''' → logprob: -11.009032249450684
    8. '#' → logprob: -11.509032249450684
    9. '('.')' → logprob: -11.634032249450684
    10. '("")' → logprob: -11.634032249450684

Token 32: ' coupe' (ID: 71780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04689453914761543
    2. '()' → logprob: -3.1718945503234863
    3. '('' → logprob: -5.921894550323486
    4. '(
' → logprob: -8.046894073486328
    5. '.' → logprob: -8.671894073486328
    6. ''' → logprob: -8.921894073486328
    7. '#' → logprob: -8.921894073486328
    8. ')' → logprob: -9.046894073486328
    9. '("' → logprob: -9.921894073486328
    10. ' (' → logprob: -10.046894073486328

Token 33: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3915032148361206
    2. '(' → logprob: -1.2665032148361206
    3. '('' → logprob: -3.39150333404541
    4. ''' → logprob: -5.39150333404541
    5. 'l' → logprob: -7.39150333404541
    6. ' ' → logprob: -7.64150333404541
    7. ' la' → logprob: -8.39150333404541
    8. 'a' → logprob: -8.39150333404541
    9. ' (' → logprob: -8.51650333404541
    10. 'la' → logprob: -8.64150333404541

Token 34: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1346733719110489
    2. 'chaine' → logprob: -2.3846733570098877
    3. 'ligne' → logprob: -4.634673595428467
    4. ' chaine' → logprob: -4.634673595428467
    5. ' ligne' → logprob: -5.009673595428467
    6. 'string' → logprob: -6.134673595428467
    7. 's' → logprob: -6.509673595428467
    8. 'cha' → logprob: -6.759673595428467
    9. ' ' → logprob: -7.134673595428467
    10. ' string' → logprob: -7.384673595428467

Token 35: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23378700017929077
    2. '()' → logprob: -2.2337870597839355
    3. '('' → logprob: -2.9837870597839355
    4. ''' → logprob: -3.2337870597839355
    5. ' (' → logprob: -5.9837870597839355
    6. '"' → logprob: -6.1087870597839355
    7. ' ' → logprob: -6.4837870597839355
    8. ')' → logprob: -6.9837870597839355
    9. 's' → logprob: -7.4837870597839355
    10. '_' → logprob: -7.7337870597839355

Token 36: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0399126298725605
    2. ' caractères' → logprob: -3.789912700653076
    3. 'la' → logprob: -5.289912700653076
    4. ' car' → logprob: -5.914912700653076
    5. 'chaine' → logprob: -6.039912700653076
    6. 'l' → logprob: -6.289912700653076
    7. ' la' → logprob: -6.289912700653076
    8. 'texte' → logprob: -7.789912700653076
    9. '```' → logprob: -7.789912700653076
    10. ' caract' → logprob: -7.914912700653076

Token 37: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22792525589466095
    2. '(' → logprob: -2.3529253005981445
    3. ''' → logprob: -3.3529253005981445
    4. 'par' → logprob: -4.6029253005981445
    5. '('' → logprob: -4.6029253005981445
    6. ' (' → logprob: -4.9779253005981445
    7. ')' → logprob: -5.1029253005981445
    8. '<|end|>' → logprob: -5.1029253005981445
    9. 'en' → logprob: -5.6029253005981445
    10. ' par' → logprob: -5.7279253005981445

Token 38: 'ue' (ID: 466)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6041744947433472
    2. 'a' → logprob: -0.9791744947433472
    3. 'e' → logprob: -2.9791746139526367
    4. ''a' → logprob: -4.229174613952637
    5. 'u' → logprob: -5.854174613952637
    6. ''espace' → logprob: -5.854174613952637
    7. ' a' → logprob: -6.479174613952637
    8. ''''' → logprob: -7.104174613952637
    9. ''en' → logprob: -7.854174613952637
    10. ''à' → logprob: -7.979174613952637

Token 39: ' en' (ID: 469)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7406272292137146
    2. '(' → logprob: -1.9906272888183594
    3. '[' → logprob: -1.9906272888183594
    4. ''' → logprob: -2.8656272888183594
    5. ')' → logprob: -3.2406272888183594
    6. ',' → logprob: -3.4906272888183594
    7. '_' → logprob: -3.6156272888183594
    8. ' ' → logprob: -3.6156272888183594
    9. '()' → logprob: -3.8656272888183594
    10. '```' → logprob: -4.365627288818359

Token 40: ' sous' (ID: 14487)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.2982592284679413
    2. ' ['' → logprob: -2.9232592582702637
    3. ''' → logprob: -3.2982592582702637
    4. '```' → logprob: -3.4232592582702637
    5. '[]' → logprob: -3.5482592582702637
    6. '["' → logprob: -3.9232592582702637
    7. ' une' → logprob: -4.298259258270264
    8. ' ' → logprob: -4.673259258270264
    9. '[' → logprob: -4.673259258270264
    10. 'tokens' → logprob: -5.048259258270264

Token 41: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.07100330293178558
    2. '-' → logprob: -3.5710031986236572
    3. '-chain' → logprob: -4.071003437042236
    4. 'chain' → logprob: -4.821003437042236
    5. '-cha' → logprob: -5.071003437042236
    6. ' chain' → logprob: -6.321003437042236
    7. '_' → logprob: -6.946003437042236
    8. ' chaîne' → logprob: -7.321003437042236
    9. 'chaine' → logprob: -7.321003437042236
    10. 'cha' → logprob: -7.571003437042236

Token 42: 'înes' (ID: 171517)
  Prédit: 'î'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'î' → logprob: -0.2671002149581909
    2. 'i' → logprob: -2.0171003341674805
    3. 'înes' → logprob: -2.5171003341674805
    4. 'ı' → logprob: -5.6421003341674805
    5. 'n' → logprob: -5.8921003341674805
    6. 'u' → logprob: -6.2671003341674805
    7. '```' → logprob: -6.5171003341674805
    8. 'r' → logprob: -6.7671003341674805
    9. 'ì' → logprob: -6.8921003341674805
    10. 'îne' → logprob: -6.8921003341674805

Token 43: ' selon' (ID: 27571)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.42738693952560425
    2. '[' → logprob: -1.802386999130249
    3. '(' → logprob: -2.427386999130249
    4. ',' → logprob: -3.177386999130249
    5. ')' → logprob: -4.42738676071167
    6. 's' → logprob: -4.67738676071167
    7. ''' → logprob: -5.05238676071167
    8. ' ' → logprob: -5.67738676071167
    9. '```' → logprob: -5.67738676071167
    10. '#' → logprob: -5.80238676071167

Token 44: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8608701229095459
    2. ' l' → logprob: -1.485870122909546
    3. ''' → logprob: -1.610870122909546
    4. ''un' → logprob: -3.110870122909546
    5. 'le' → logprob: -3.610870122909546
    6. 'un' → logprob: -4.235870361328125
    7. 'la' → logprob: -4.360870361328125
    8. 'les' → logprob: -4.485870361328125
    9. ' les' → logprob: -4.735870361328125
    10. ' la' → logprob: -5.110870361328125

Token 45: ''espace' (ID: 118124)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.0095151662826538
    2. 'a' → logprob: -1.2595151662826538
    3. ''' → logprob: -2.0095152854919434
    4. ''espace' → logprob: -2.1345152854919434
    5. ''esp' → logprob: -2.8845152854919434
    6. 'e' → logprob: -3.7595152854919434
    7. ''a' → logprob: -5.009515285491943
    8. ''un' → logprob: -5.884515285491943
    9. ''e' → logprob: -6.259515285491943
    10. ''é' → logprob: -6.384515285491943

Token 46: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7692227363586426
    2. '[' → logprob: -1.6442227363586426
    3. '#' → logprob: -2.2692227363586426
    4. ')' → logprob: -2.8942227363586426
    5. 's' → logprob: -2.8942227363586426
    6. ',' → logprob: -3.3942227363586426
    7. '```' → logprob: -3.5192227363586426
    8. '(' → logprob: -4.519222736358643
    9. '\' → logprob: -4.519222736358643
    10. '[
' → logprob: -4.769222736358643

Token 47: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8421503901481628
    2. ' sépar' → logprob: -1.3421504497528076
    3. 'sé' → logprob: -2.3421504497528076
    4. 'se' → logprob: -2.5921504497528076
    5. 'delimiter' → logprob: -3.0921504497528076
    6. 'le' → logprob: -3.8421504497528076
    7. ''' → logprob: -4.4671502113342285
    8. 'dé' → logprob: -4.5921502113342285
    9. ' le' → logprob: -4.8421502113342285
    10. 'del' → logprob: -4.8421502113342285

Token 48: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.3611328899860382
    2. 'a' → logprob: -1.9861328601837158
    3. 'ate' → logprob: -2.986132860183716
    4. 'r' → logprob: -3.236132860183716
    5. 'ur' → logprob: -3.736132860183716
    6. 'at' → logprob: -4.861133098602295
    7. 'ation' → logprob: -4.861133098602295
    8. ')' → logprob: -5.361133098602295
    9. '```' → logprob: -5.486133098602295
    10. 'es' → logprob: -5.486133098602295

Token 49: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0422900915145874
    2. '[' → logprob: -1.1672900915145874
    3. '.' → logprob: -2.917290210723877
    4. 'tokens' → logprob: -3.042290210723877
    5. ',' → logprob: -3.167290210723877
    6. 'n' → logprob: -3.292290210723877
    7. '#' → logprob: -3.542290210723877
    8. '[
' → logprob: -3.542290210723877
    9. '```' → logprob: -4.417290210723877
    10. '\' → logprob: -4.792290210723877

Token 50: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.2625901401042938
    2. ' défaut' → logprob: -1.6375901699066162
    3. 'default' → logprob: -3.387590169906616
    4. 'def' → logprob: -6.137589931488037
    5. 'd' → logprob: -8.262590408325195
    6. ' default' → logprob: -9.137590408325195
    7. '#' → logprob: -9.512590408325195
    8. ' déf' → logprob: -11.012590408325195
    9. '```' → logprob: -11.387590408325195
    10. ' dé' → logprob: -11.512590408325195

Token 51: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.355820655822754
    2. 's' → logprob: -1.480820655822754
    3. '.' → logprob: -1.730820655822754
    4. ',' → logprob: -1.980820655822754
    5. 'n' → logprob: -3.105820655822754
    6. '#' → logprob: -3.605820655822754
    7. '```' → logprob: -3.980820655822754
    8. 'tokens' → logprob: -4.355820655822754
    9. ')' → logprob: -4.480820655822754
    10. '\' → logprob: -4.730820655822754

Token 52: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21811062097549438
    2. '#' → logprob: -3.4681105613708496
    3. 's' → logprob: -3.4681105613708496
    4. 'a' → logprob: -3.7181105613708496
    5. 'm' → logprob: -4.09311056137085
    6. 'l' → logprob: -4.21811056137085
    7. 'r' → logprob: -4.46811056137085
    8. 'i' → logprob: -4.71811056137085
    9. 't' → logprob: -4.96811056137085
    10. 'e' → logprob: -5.21811056137085

Token 53: ' Ensuite' (ID: 113884)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40426838397979736
    2. 'l' → logprob: -2.279268264770508
    3. '#' → logprob: -2.654268264770508
    4. 'a' → logprob: -3.779268264770508
    5. 'r' → logprob: -4.154268264770508
    6. 'm' → logprob: -4.404268264770508
    7. 's' → logprob: -4.529268264770508
    8. 'u' → logprob: -4.529268264770508
    9. 'user' → logprob: -4.779268264770508
    10. 'd' → logprob: -4.779268264770508

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016211456386372447
    2. ' on' → logprob: -7.876621246337891
    3. ' ,' → logprob: -8.00162124633789
    4. '[' → logprob: -9.25162124633789
    5. 's' → logprob: -9.37662124633789
    6. ' ' → logprob: -9.50162124633789
    7. ' la' → logprob: -10.00162124633789
    8. 'nous' → logprob: -10.00162124633789
    9. '#' → logprob: -10.12662124633789
    10. '(' → logprob: -10.31412124633789

Token 55: ' map' (ID: 4014)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1504109501838684
    2. ' for' → logprob: -3.0254108905792236
    3. 'for' → logprob: -3.6504108905792236
    4. ' la' → logprob: -4.150411128997803
    5. 'on' → logprob: -4.525411128997803
    6. ' chaque' → logprob: -4.650411128997803
    7. ' les' → logprob: -4.900411128997803
    8. '#' → logprob: -5.275411128997803
    9. ' tokens' → logprob: -6.650411128997803
    10. 'les' → logprob: -6.650411128997803

Token 56: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015185370109975338
    2. '(lambda' → logprob: -4.265185356140137
    3. '(
' → logprob: -8.015185356140137
    4. '(int' → logprob: -8.390185356140137
    5. '(str' → logprob: -8.640185356140137
    6. '()' → logprob: -9.265185356140137
    7. '(f' → logprob: -10.390185356140137
    8. '(print' → logprob: -10.765185356140137
    9. '(

' → logprob: -11.140185356140137
    10. '(function' → logprob: -11.265185356140137

Token 57: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012023169983876869
    2. ',' → logprob: -9.750120162963867
    3. ')`' → logprob: -11.375120162963867
    4. ' )' → logprob: -11.500120162963867
    5. '(' → logprob: -11.875120162963867
    6. '())' → logprob: -12.000120162963867
    7. ')#' → logprob: -12.125120162963867
    8. '),' → logprob: -12.500120162963867
    9. ',)' → logprob: -12.875120162963867
    10. ')
' → logprob: -12.875120162963867

Token 58: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8915342092514038
    2. ' input' → logprob: -1.1415342092514038
    3. ')' → logprob: -1.3915342092514038
    4. ' )' → logprob: -4.516534328460693
    5. '...)' → logprob: -4.766534328460693
    6. '...' → logprob: -7.016534328460693
    7. ' ...)' → logprob: -8.016533851623535
    8. 's' → logprob: -8.641533851623535
    9. '(input' → logprob: -8.641533851623535
    10. ')>' → logprob: -9.391533851623535

Token 59: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07980363816022873
    2. '(' → logprob: -2.704803705215454
    3. '()' → logprob: -6.329803466796875
    4. 'convert' → logprob: -6.454803466796875
    5. '(
' → logprob: -6.454803466796875
    6. '())' → logprob: -6.829803466796875
    7. '(convert' → logprob: -6.829803466796875
    8. '))' → logprob: -7.829803466796875
    9. '(

' → logprob: -8.329803466796875
    10. '(input' → logprob: -8.329803466796875

Token 60: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4006694555282593
    2. ' int' → logprob: -1.4006694555282593
    3. ' la' → logprob: -3.150669574737549
    4. '(int' → logprob: -3.650669574737549
    5. ' à' → logprob: -5.025669574737549
    6. 'la' → logprob: -5.275669574737549
    7. 'lambda' → logprob: -6.900669574737549
    8. ' lambda' → logprob: -7.650669574737549
    9. '()' → logprob: -8.02566909790039
    10. 'à' → logprob: -8.15066909790039

Token 61: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.2531789541244507
    2. ' fonction' → logprob: -2.2531790733337402
    3. 'int' → logprob: -2.3781790733337402
    4. ' int' → logprob: -3.8781790733337402
    5. ' conversion' → logprob: -6.12817907333374
    6. ' function' → logprob: -6.25317907333374
    7. 'function' → logprob: -8.128178596496582
    8. 'fon' → logprob: -8.503178596496582
    9. 'conversion' → logprob: -9.128178596496582
    10. ' transformation' → logprob: -9.753178596496582

Token 62: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8471828699111938
    2. '(int' → logprob: -0.9721828699111938
    3. '(' → logprob: -2.0971827507019043
    4. 'int' → logprob: -2.7221827507019043
    5. '(lambda' → logprob: -7.347182750701904
    6. '()' → logprob: -7.472182750701904
    7. '(
' → logprob: -7.597182750701904
    8. '<int' → logprob: -7.597182750701904
    9. '```' → logprob: -7.847182750701904
    10. ')' → logprob: -8.097183227539062

Token 63: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26470568776130676
    2. '(' → logprob: -2.2647056579589844
    3. '()' → logprob: -2.2647056579589844
    4. 'sur' → logprob: -4.514705657958984
    5. 's' → logprob: -6.139705657958984
    6. '())' → logprob: -6.514705657958984
    7. ' sur' → logprob: -6.639705657958984
    8. '(s' → logprob: -6.639705657958984
    9. '(...)' → logprob: -6.639705657958984
    10. ' à' → logprob: -7.264705657958984

Token 64: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.15625299513339996
    2. 'cha' → logprob: -2.4062530994415283
    3. ' chacune' → logprob: -3.2812530994415283
    4. 't' → logprob: -5.406252861022949
    5. 'Chaque' → logprob: -6.406252861022949
    6. ' toutes' → logprob: -6.406252861022949
    7. ' each' → logprob: -6.531252861022949
    8. 'la' → logprob: -6.531252861022949
    9. 'l' → logprob: -6.656252861022949
    10. ' chacun' → logprob: -6.906252861022949

Token 65: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.026475386694073677
    2. ' élément' → logprob: -3.651475429534912
    3. 'element' → logprob: -9.901474952697754
    4. 'él' → logprob: -10.901474952697754
    5. ' element' → logprob: -11.026474952697754
    6. ' éléments' → logprob: -11.401474952697754
    7. 'é' → logprob: -11.526474952697754
    8. 's' → logprob: -11.526474952697754
    9. '```' → logprob: -11.526474952697754
    10. ' chaîne' → logprob: -11.776474952697754

Token 66: ' résult' (ID: 31657)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.537519097328186
    2. ')' → logprob: -1.662519097328186
    3. 's' → logprob: -2.1625189781188965
    4. '(s' → logprob: -3.6625189781188965
    5. '()' → logprob: -3.7875189781188965
    6. ' de' → logprob: -3.9125189781188965
    7. '(
' → logprob: -4.6625189781188965
    8. ' des' → logprob: -4.9125189781188965
    9. ' )' → logprob: -5.4125189781188965
    10. 'des' → logprob: -5.5375189781188965

Token 67: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.04673813283443451
    2. 'uant' → logprob: -3.9217381477355957
    3. 'ante' → logprob: -4.046738147735596
    4. 'u' → logprob: -5.296738147735596
    5. 'ue' → logprob: -6.671738147735596
    6. 'ent' → logprob: -7.421738147735596
    7. '#' → logprob: -7.921738147735596
    8. ' de' → logprob: -8.296737670898438
    9. 'uent' → logprob: -8.546737670898438
    10. 'from' → logprob: -8.671737670898438

Token 68: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3139943480491638
    2. 's' → logprob: -2.8139944076538086
    3. ',' → logprob: -3.0639944076538086
    4. '.' → logprob: -3.4389944076538086
    5. '(' → logprob: -3.5639944076538086
    6. '()' → logprob: -3.6889944076538086
    7. ' de' → logprob: -3.8139944076538086
    8. ' )' → logprob: -4.063994407653809
    9. '(
' → logprob: -5.938994407653809
    10. 'de' → logprob: -5.938994407653809

Token 69: ' split' (ID: 12648)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8817549347877502
    2. 'la' → logprob: -1.0067548751831055
    3. ' la' → logprob: -2.0067548751831055
    4. ' l' → logprob: -2.5067548751831055
    5. 'split' → logprob: -7.0067548751831055
    6. ' ' → logprob: -7.5067548751831055
    7. 'spl' → logprob: -7.6317548751831055
    8. 's' → logprob: -7.7567548751831055
    9. ' input' → logprob: -8.006754875183105
    10. 'input' → logprob: -8.006754875183105

Token 70: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04914715513586998
    2. ')' → logprob: -3.174147129058838
    3. '(
' → logprob: -5.549147129058838
    4. ',' → logprob: -7.299147129058838
    5. '#' → logprob: -8.049147605895996
    6. '()' → logprob: -8.424147605895996
    7. 's' → logprob: -8.549147605895996
    8. '.' → logprob: -9.174147605895996
    9. 'def' → logprob: -9.424147605895996
    10. '(input' → logprob: -9.424147605895996

Token 71: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.054204311221838
    2. ' )' → logprob: -3.929204225540161
    3. 'result' → logprob: -5.17920446395874
    4. '#' → logprob: -6.30420446395874
    5. 'et' → logprob: -6.67920446395874
    6. '*' → logprob: -6.80420446395874
    7. 'list' → logprob: -6.80420446395874
    8. ' ce' → logprob: -6.92920446395874
    9. ' et' → logprob: -6.92920446395874
    10. 'ens' → logprob: -6.99170446395874

Token 72: 'issant' (ID: 31359)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2331913262605667
    2. 'issant' → logprob: -2.4831912517547607
    3. 'it' → logprob: -2.4831912517547607
    4. 'ir' → logprob: -4.10819149017334
    5. 'ie' → logprob: -5.10819149017334
    6. 'is' → logprob: -5.23319149017334
    7. 'issent' → logprob: -6.48319149017334
    8. '```' → logprob: -6.48319149017334
    9. 'e' → logprob: -6.73319149017334
    10. 'issez' → logprob: -6.85819149017334

Token 73: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.24211789667606354
    2. ' chaque' → logprob: -2.3671178817749023
    3. ' les' → logprob: -2.3671178817749023
    4. 'la' → logprob: -4.992117881774902
    5. 'les' → logprob: -5.367117881774902
    6. ' chacun' → logprob: -5.367117881774902
    7. ' en' → logprob: -6.117117881774902
    8. ' ' → logprob: -6.617117881774902
    9. ' le' → logprob: -6.617117881774902
    10. ')' → logprob: -7.367117881774902

Token 74: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.09687524288892746
    2. ' élément' → logprob: -3.4718751907348633
    3. ' chaîne' → logprob: -3.7218751907348633
    4. ' ' → logprob: -4.221875190734863
    5. 'chaine' → logprob: -4.846875190734863
    6. ' string' → logprob: -5.596875190734863
    7. ')' → logprob: -6.096875190734863
    8. ' chaine' → logprob: -6.346875190734863
    9. ' en' → logprob: -6.721875190734863
    10. ' )' → logprob: -7.096875190734863

Token 75: '-cha' (ID: 163177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3733636438846588
    2. 'chaine' → logprob: -2.123363733291626
    3. ' chaîne' → logprob: -2.498363733291626
    4. '-' → logprob: -2.873363733291626
    5. 'string' → logprob: -4.373363494873047
    6. ' chaînes' → logprob: -5.123363494873047
    7. ' chaine' → logprob: -5.498363494873047
    8. '_string' → logprob: -5.873363494873047
    9. 'chain' → logprob: -6.123363494873047
    10. ')' → logprob: -6.248363494873047

Token 76: 'îne' (ID: 55188)
  Prédit: 'î'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'î' → logprob: -0.6441071629524231
    2. 'îne' → logprob: -0.7691071629524231
    3. 'înes' → logprob: -4.769107341766357
    4. 'în' → logprob: -7.019107341766357
    5. 'ïne' → logprob: -7.769107341766357
    6. '\' → logprob: -8.3941068649292
    7. 'Î' → logprob: -8.7691068649292
    8. 'ï' → logprob: -8.8941068649292
    9. 'ì' → logprob: -8.8941068649292
    10. 'ı' → logprob: -9.1441068649292

Token 77: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.013738662004470825
    2. 'en' → logprob: -5.013738632202148
    3. ')' → logprob: -5.263738632202148
    4. 's' → logprob: -7.263738632202148
    5. ' ' → logprob: -8.513738632202148
    6. 'es' → logprob: -8.763738632202148
    7. ' )' → logprob: -8.888738632202148
    8. '```' → logprob: -9.138738632202148
    9. '()' → logprob: -9.513738632202148
    10. '(en' → logprob: -9.763738632202148

Token 78: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.13721558451652527
    2. ' des' → logprob: -2.1372156143188477
    3. ' une' → logprob: -5.012215614318848
    4. 'un' → logprob: -6.762215614318848
    5. ' ' → logprob: -7.387215614318848
    6. ' entier' → logprob: -7.637215614318848
    7. ' int' → logprob: -8.012215614318848
    8. ' ent' → logprob: -8.637215614318848
    9. ' nombre' → logprob: -8.637215614318848
    10. 'ent' → logprob: -9.012215614318848

Token 79: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.37947145104408264
    2. ' nombre' → logprob: -1.5044714212417603
    3. 'ent' → logprob: -3.12947154045105
    4. ' ' → logprob: -4.129471302032471
    5. 'nombre' → logprob: -4.754471302032471
    6. ' ent' → logprob: -4.754471302032471
    7. 'élé' → logprob: -5.504471302032471
    8. ' espace' → logprob: -5.754471302032471
    9. ' int' → logprob: -5.754471302032471
    10. ' élément' → logprob: -6.629471302032471

Token 80: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.163119912147522
    2. '[' → logprob: -2.0381197929382324
    3. 's' → logprob: -2.2881197929382324
    4. '(' → logprob: -2.6631197929382324
    5. '\' → logprob: -2.9131197929382324
    6. ',' → logprob: -3.0381197929382324
    7. 'n' → logprob: -3.1631197929382324
    8. ' ' → logprob: -3.1631197929382324
    9. '#' → logprob: -3.2881197929382324
    10. '.' → logprob: -4.038119792938232

Token 81: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3667292892932892
    2. 'a' → logprob: -1.9917292594909668
    3. 'x' → logprob: -2.616729259490967
    4. 'r' → logprob: -3.491729259490967
    5. 's' → logprob: -3.991729259490967
    6. 'ent' → logprob: -4.741729259490967
    7. 'numbers' → logprob: -5.116729259490967
    8. 'result' → logprob: -5.366729259490967
    9. 'val' → logprob: -5.366729259490967
    10. 'nombre' → logprob: -5.741729259490967

Token 82: ' Enfin' (ID: 85274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39994016289711
    2. 'a' → logprob: -2.024940252304077
    3. 'numbers' → logprob: -3.024940252304077
    4. 'r' → logprob: -3.274940252304077
    5. 'x' → logprob: -4.274940013885498
    6. 's' → logprob: -4.274940013885498
    7. 'result' → logprob: -4.399940013885498
    8. 'l' → logprob: -4.399940013885498
    9. 'ent' → logprob: -4.399940013885498
    10. 'values' → logprob: -5.274940013885498

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08659407496452332
    2. ')' → logprob: -4.086594104766846
    3. ' la' → logprob: -4.086594104766846
    4. ' ,' → logprob: -4.836594104766846
    5. ' les' → logprob: -5.086594104766846
    6. ' numbers' → logprob: -5.461594104766846
    7. ' list' → logprob: -5.836594104766846
    8. ' a' → logprob: -5.836594104766846
    9. 'result' → logprob: -6.461594104766846
    10. 'values' → logprob: -6.461594104766846

Token 84: ' les' (ID: 1341)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5811237096786499
    2. 'list' → logprob: -1.08112370967865
    3. ' la' → logprob: -3.3311238288879395
    4. ' tuple' → logprob: -3.4561238288879395
    5. ' a' → logprob: -4.9561238288879395
    6. 'tuple' → logprob: -5.0811238288879395
    7. 'liste' → logprob: -5.9561238288879395
    8. ' lst' → logprob: -5.9561238288879395
    9. ' result' → logprob: -6.5811238288879395
    10. ' les' → logprob: -6.5811238288879395

Token 85: ' deux' (ID: 10301)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -1.1287895441055298
    2. 'ent' → logprob: -1.2537895441055298
    3. ' nombres' → logprob: -1.6287895441055298
    4. 'n' → logprob: -2.1287894248962402
    5. ' valeurs' → logprob: -3.7537894248962402
    6. ' n' → logprob: -3.8787894248962402
    7. 'val' → logprob: -4.25378942489624
    8. ' ' → logprob: -5.87878942489624
    9. 'int' → logprob: -6.37878942489624
    10. 'nombre' → logprob: -6.37878942489624

Token 86: ' valeurs' (ID: 73668)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.7608410716056824
    2. ' ent' → logprob: -1.5108411312103271
    3. 'ent' → logprob: -2.510841131210327
    4. 'n' → logprob: -2.885841131210327
    5. 'a' → logprob: -3.010841131210327
    6. ' a' → logprob: -3.635841131210327
    7. 'x' → logprob: -3.885841131210327
    8. 'nombre' → logprob: -4.135840892791748
    9. ' nombre' → logprob: -5.010840892791748
    10. ' n' → logprob: -5.010840892791748

Token 87: ' ent' (ID: 1121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9674237966537476
    2. ' x' → logprob: -1.4674237966537476
    3. 'a' → logprob: -1.5924237966537476
    4. 'x' → logprob: -2.592423915863037
    5. ' a' → logprob: -2.717423915863037
    6. '=' → logprob: -4.092423915863037
    7. 's' → logprob: -4.217423915863037
    8. ' n' → logprob: -5.842423915863037
    9. 'n' → logprob: -6.592423915863037
    10. ' ' → logprob: -6.592423915863037

Token 88: 'ières' (ID: 44864)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014757329598069191
    2. 'iers' → logprob: -5.76475715637207
    3. 'rs' → logprob: -5.76475715637207
    4. 'ières' → logprob: -6.01475715637207
    5. 't' → logprob: -7.01475715637207
    6. 'ré' → logprob: -7.13975715637207
    7. 's' → logprob: -7.26475715637207
    8. 'ires' → logprob: -7.26475715637207
    9. 'd' → logprob: -7.38975715637207
    10. 'ries' → logprob: -7.76475715637207

Token 89: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5299975275993347
    2. ' =' → logprob: -1.7799975872039795
    3. ' sont' → logprob: -2.1549975872039795
    4. '=' → logprob: -3.5299975872039795
    5. ',' → logprob: -3.6549975872039795
    6. ' ' → logprob: -3.9049975872039795
    7. ' x' → logprob: -4.5299973487854
    8. ')' → logprob: -4.6549973487854
    9. ' s' → logprob: -4.9049973487854
    10. 'a' → logprob: -5.2799973487854

Token 90: ' simult' (ID: 27260)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' affect' → logprob: -0.45460405945777893
    2. ' stock' → logprob: -1.8296040296554565
    3. ' unpack' → logprob: -2.329604148864746
    4. ' assign' → logprob: -2.704604148864746
    5. 'assign' → logprob: -3.829604148864746
    6. ' attrib' → logprob: -4.829604148864746
    7. 'aff' → logprob: -5.579604148864746
    8. ' retourn' → logprob: -6.204604148864746
    9. 'stock' → logprob: -6.704604148864746
    10. ' récup' → logprob: -6.829604148864746

Token 91: 'anément' (ID: 193192)
  Prédit: 'anément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anément' → logprob: -0.2815791666507721
    2. 'an' → logprob: -1.4065791368484497
    3. 'ané' → logprob: -8.65657901763916
    4. 'a' → logprob: -9.15657901763916
    5. 'ément' → logprob: -9.65657901763916
    6. '#' → logprob: -10.78157901763916
    7. 'án' → logprob: -10.90657901763916
    8. '```' → logprob: -12.28157901763916
    9. 'ans' → logprob: -12.40657901763916
    10. 'à' → logprob: -12.53157901763916

Token 92: ' affect' (ID: 7902)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19074316322803497
    2. ' =' → logprob: -2.4407432079315186
    3. ',' → logprob: -3.4407432079315186
    4. ' affect' → logprob: -4.4407429695129395
    5. 'r' → logprob: -4.6907429695129395
    6. 'assign' → logprob: -5.0657429695129395
    7. ')' → logprob: -5.0657429695129395
    8. ' récup' → logprob: -5.0657429695129395
    9. 'l' → logprob: -6.1907429695129395
    10. ' attrib' → logprob: -6.3157429695129395

Token 93: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.06913166493177414
    2. 'u' → logprob: -3.06913161277771
    3. 'é' → logprob: -3.94413161277771
    4. 'és' → logprob: -7.444131851196289
    5. 'ée' → logprob: -9.319131851196289
    6. 'ué' → logprob: -9.444131851196289
    7. 'uée' → logprob: -9.694131851196289
    8. ' é' → logprob: -9.819131851196289
    9. 'ues' → logprob: -11.069131851196289
    10. 'er' → logprob: -11.194131851196289

Token 94: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8247626423835754
    2. ' ' → logprob: -1.5747625827789307
    3. ' a' → logprob: -1.9497625827789307
    4. ' à' → logprob: -3.0747625827789307
    5. 'e' → logprob: -3.3247625827789307
    6. ' =' → logprob: -3.5747625827789307
    7. 'r' → logprob: -3.9497625827789307
    8. '=' → logprob: -4.32476282119751
    9. 'a' → logprob: -4.44976282119751
    10. 's' → logprob: -4.82476282119751

Token 95: 'assign' (ID: 14297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05884938687086105
    2. ' à' → logprob: -3.433849334716797
    3. ' )' → logprob: -3.933849334716797
    4. ' aux' → logprob: -5.683849334716797
    5. 'à' → logprob: -7.308849334716797
    6. 'a' → logprob: -8.058849334716797
    7. ' au' → logprob: -8.183849334716797
    8. 'aux' → logprob: -8.558849334716797
    9. 'au' → logprob: -9.308849334716797
    10. ' a' → logprob: -9.433849334716797

Token 96: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.22799472510814667
    2. 'é' → logprob: -1.602994680404663
    3. 'ée' → logprob: -6.227994918823242
    4. 'és' → logprob: -7.602994918823242
    5. ' é' → logprob: -9.352994918823242
    6. '=' → logprob: -11.977994918823242
    7. 'e' → logprob: -12.727994918823242
    8. 'es' → logprob: -13.227994918823242
    9. ')' → logprob: -13.727994918823242
    10. 'nées' → logprob: -13.727994918823242

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30794110894203186
    2. ' )' → logprob: -1.9329410791397095
    3. ' à' → logprob: -2.182941198348999
    4. ' ' → logprob: -5.30794095993042
    5. ' au' → logprob: -6.55794095993042
    6. ' aux' → logprob: -7.43294095993042
    7. 'à' → logprob: -8.807941436767578
    8. 'au' → logprob: -9.057941436767578
    9. ' en' → logprob: -9.432941436767578
    10. ',' → logprob: -9.932941436767578

Token 98: ' aux' (ID: 5850)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0259482860565186
    2. 'a' → logprob: -1.7759482860565186
    3. ',' → logprob: -2.0259482860565186
    4. 's' → logprob: -2.2759482860565186
    5. ' ' → logprob: -2.6509482860565186
    6. ' à' → logprob: -3.5259482860565186
    7. 'x' → logprob: -3.6509482860565186
    8. 'n' → logprob: -3.9009482860565186
    9. ' ,' → logprob: -3.9009482860565186
    10. 'e' → logprob: -4.400948524475098

Token 99: ' variables' (ID: 13955)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5327826738357544
    2. 'a' → logprob: -0.9077826738357544
    3. ' variables' → logprob: -5.282782554626465
    4. ' x' → logprob: -6.032782554626465
    5. 'x' → logprob: -6.407782554626465
    6. ' nombre' → logprob: -9.407782554626465
    7. ' variable' → logprob: -9.907782554626465
    8. ' i' → logprob: -10.032782554626465
    9. ' deux' → logprob: -10.032782554626465
    10. 'i' → logprob: -10.032782554626465

Token 100: ' A' (ID: 355)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5509654879570007
    2. 'a' → logprob: -1.0509655475616455
    3. ' x' → logprob: -2.9259655475616455
    4. 'x' → logprob: -3.9259655475616455
    5. 'i' → logprob: -9.300965309143066
    6. 'n' → logprob: -9.425965309143066
    7. ' ' → logprob: -9.425965309143066
    8. ' i' → logprob: -9.550965309143066
    9. 'u' → logprob: -9.800965309143066
    10. ' n' → logprob: -9.800965309143066

Token 101: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021666751708835363
    2. ' ,' → logprob: -6.377166748046875
    3. ',B' → logprob: -8.377166748046875
    4. ',A' → logprob: -9.002166748046875
    5. '1' → logprob: -10.877166748046875
    6. ' et' → logprob: -11.127166748046875
    7. 'et' → logprob: -11.127166748046875
    8. 's' → logprob: -11.502166748046875
    9. 'a' → logprob: -11.752166748046875
    10. 'A' → logprob: -12.002166748046875

Token 102: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.22543488442897797
    2. 'B' → logprob: -1.6004348993301392
    3. ' ' → logprob: -11.475435256958008
    4. 's' → logprob: -12.600435256958008
    5. ' ' → logprob: -12.975435256958008
    6. '>B' → logprob: -13.725435256958008
    7. ',' → logprob: -14.600435256958008
    8. '	B' → logprob: -14.600435256958008
    9. '_B' → logprob: -14.725435256958008
    10. '  ' → logprob: -14.850435256958008

Token 103: ' grâce' (ID: 31589)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0027803927659988403
    2. 'a' → logprob: -6.127780437469482
    3. ' A' → logprob: -8.627779960632324
    4. ',' → logprob: -9.002779960632324
    5. '
' → logprob: -9.627779960632324
    6. ' 
' → logprob: -9.877779960632324
    7. '#' → logprob: -10.252779960632324
    8. 'n' → logprob: -10.377779960632324
    9. 'x' → logprob: -10.502779960632324
    10. '[' → logprob: -10.877779960632324

Token 104: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03248455375432968
    2. ' au' → logprob: -3.782484531402588
    3. ' =' → logprob: -5.782484531402588
    4. '<|end|>' → logprob: -6.032484531402588
    5. '=' → logprob: -6.532484531402588
    6. 'à' → logprob: -7.407484531402588
    7. ' ' → logprob: -8.407485008239746
    8. ' a' → logprob: -8.532485008239746
    9. ''à' → logprob: -8.532485008239746
    10. ' aux' → logprob: -8.657485008239746

Token 105: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2308165282011032
    2. ' la' → logprob: -2.105816602706909
    3. 'l' → logprob: -2.605816602706909
    4. 'la' → logprob: -5.73081636428833
    5. 'a' → logprob: -7.10581636428833
    6. ' une' → logprob: -7.23081636428833
    7. ' A' → logprob: -7.48081636428833
    8. ' ' → logprob: -7.60581636428833
    9. 'A' → logprob: -7.60581636428833
    10. 's' → logprob: -7.73081636428833

Token 106: ''aff' (ID: 53397)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5629088282585144
    2. ''' → logprob: -1.4379088878631592
    3. 'a' → logprob: -1.9379088878631592
    4. 'es' → logprob: -4.31290864944458
    5. ''aff' → logprob: -4.31290864944458
    6. 'u' → logprob: -5.93790864944458
    7. ''é' → logprob: -6.18790864944458
    8. 'A' → logprob: -6.18790864944458
    9. ''a' → logprob: -6.18790864944458
    10. ''espace' → logprob: -6.56290864944458

Token 107: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.007750129327178001
    2. 'ection' → logprob: -4.882750034332275
    3. 'ecta' → logprob: -9.632750511169434
    4. 'ec' → logprob: -10.007750511169434
    5. 'e' → logprob: -11.007750511169434
    6. 'exion' → logprob: -12.757750511169434
    7. 'ects' → logprob: -12.757750511169434
    8. 'et' → logprob: -12.882750511169434
    9. 'ective' → logprob: -13.632750511169434
    10. '#' → logprob: -13.757750511169434

Token 108: 'ation' (ID: 387)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -1.0490885972976685
    2. 'ation' → logprob: -1.6740885972976685
    3. '=' → logprob: -2.424088478088379
    4. 'ment' → logprob: -2.549088478088379
    5. ' A' → logprob: -2.799088478088379
    6. ' =' → logprob: -3.049088478088379
    7. 'er' → logprob: -3.049088478088379
    8. 'e' → logprob: -3.049088478088379
    9. ' a' → logprob: -4.049088478088379
    10. 'A' → logprob: -4.049088478088379

Token 109: ' multiple' (ID: 7598)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4485221803188324
    2. ' =' → logprob: -1.1985222101211548
    3. '=' → logprob: -3.4485220909118652
    4. ' A' → logprob: -4.448522090911865
    5. ',' → logprob: -4.948522090911865
    6. 's' → logprob: -5.073522090911865
    7. '=A' → logprob: -6.448522090911865
    8. 'a' → logprob: -7.323522090911865
    9. ')' → logprob: -8.698522567749023
    10. '=input' → logprob: -9.698522567749023

Token 110: '.
' (ID: 558)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005598121788352728
    2. 'a' → logprob: -5.380598068237305
    3. ' A' → logprob: -7.505598068237305
    4. 'n' → logprob: -9.505598068237305
    5. 'x' → logprob: -9.505598068237305
    6. '#' → logprob: -9.755598068237305
    7. ',' → logprob: -10.005598068237305
    8. '
' → logprob: -10.505598068237305
    9. 's' → logprob: -10.505598068237305
    10. '[' → logprob: -11.130598068237305

Token 111: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.7146746763028204e-05
    2. ' A' → logprob: -10.87503719329834
    3. 'a' → logprob: -11.12503719329834
    4. '#' → logprob: -13.87503719329834
    5. 'x' → logprob: -13.87503719329834
    6. '```' → logprob: -15.00003719329834
    7. 'n' → logprob: -15.12503719329834
    8. '[A' → logprob: -15.25003719329834
    9. 's' → logprob: -15.87503719329834
    10. ',' → logprob: -16.000036239624023

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021446701139211655
    2. ' ,' → logprob: -6.627144813537598
    3. ',B' → logprob: -7.127144813537598
    4. 'B' → logprob: -11.252144813537598
    5. ',b' → logprob: -14.127144813537598
    6. ' B' → logprob: -14.252144813537598
    7. 's' → logprob: -15.502144813537598
    8. ',A' → logprob: -16.12714385986328
    9. '_,' → logprob: -16.25214385986328
    10. ' =' → logprob: -16.25214385986328

Token 113: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.11326808482408524
    2. 'B' → logprob: -2.2382681369781494
    3. ' ' → logprob: -7.73826789855957
    4. ' ' → logprob: -12.61326789855957
    5. '=' → logprob: -13.11326789855957
    6. ' =' → logprob: -13.61326789855957
    7. '  ' → logprob: -13.86326789855957
    8. '=B' → logprob: -14.11326789855957
    9. '<|end|>' → logprob: -14.73826789855957
    10. '    ' → logprob: -15.36326789855957

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048595886677503586
    2. '=' → logprob: -3.048595905303955
    3. '=input' → logprob: -11.923595428466797
    4. ' =
' → logprob: -14.298595428466797
    5. ',' → logprob: -14.798595428466797
    6. '=int' → logprob: -15.173595428466797
    7. '=A' → logprob: -15.673595428466797
    8. ')' → logprob: -15.923595428466797
    9. ' =
' → logprob: -16.298595428466797
    10. ' ' → logprob: -17.048595428466797

Token 115: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04858794063329697
    2. ' map' → logprob: -3.0485880374908447
    3. 'input' → logprob: -15.548587799072266
    4. 'int' → logprob: -15.798587799072266
    5. '	map' → logprob: -16.298587799072266
    6. '(map' → logprob: -16.798587799072266
    7. 'list' → logprob: -17.673587799072266
    8. 'm' → logprob: -18.423587799072266
    9. '.map' → logprob: -18.923587799072266
    10. ' ' → logprob: -19.173587799072266

Token 116: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00044496997725218534
    2. '(' → logprob: -8.000445365905762
    3. '(input' → logprob: -9.250445365905762
    4. ' (' → logprob: -11.625445365905762
    5. 'int' → logprob: -13.250445365905762
    6. '(str' → logprob: -13.500445365905762
    7. '<int' → logprob: -14.250445365905762
    8. '[int' → logprob: -15.250445365905762
    9. '(in' → logprob: -15.875445365905762
    10. '=int' → logprob: -16.250444412231445

Token 117: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00040302498382516205
    2. '(' → logprob: -8.62540340423584
    3. 'input' → logprob: -8.62540340423584
    4. ' (' → logprob: -10.12540340423584
    5. ',input' → logprob: -13.12540340423584
    6. ' input' → logprob: -14.00040340423584
    7. ')' → logprob: -14.12540340423584
    8. '=input' → logprob: -15.62540340423584
    9. ',' → logprob: -17.375402450561523
    10. '(i' → logprob: -17.500402450561523

Token 118: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0067161982879042625
    2. ' input' → logprob: -5.006716251373291
    3. '(input' → logprob: -14.256715774536133
    4. ')' → logprob: -17.006715774536133
    5. ' ' → logprob: -17.006715774536133
    6. '<input' → logprob: -18.131715774536133
    7. '	input' → logprob: -18.381715774536133
    8. '=input' → logprob: -18.506715774536133
    9. '   ' → logprob: -18.631715774536133
    10. ',input' → logprob: -18.756715774536133

Token 119: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.02231764793396
    2. '().' → logprob: -1.02231764793396
    3. '())' → logprob: -1.27231764793396
    4. '()))' → logprob: -9.647317886352539
    5. '()).' → logprob: -9.772317886352539
    6. ' ())' → logprob: -10.272317886352539
    7. '()`' → logprob: -10.897317886352539
    8. ' ()' → logprob: -11.022317886352539
    9. '());' → logprob: -11.147317886352539
    10. '()]' → logprob: -11.147317886352539

Token 120: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.869017852295656e-06
    2. 'strip' → logprob: -12.000006675720215
    3. ' split' → logprob: -14.250006675720215
    4. 'rstrip' → logprob: -17.75000762939453
    5. '(split' → logprob: -18.87500762939453
    6. ')' → logprob: -19.75000762939453
    7. 'spl' → logprob: -21.25000762939453
    8. '_split' → logprob: -23.25000762939453
    9. '.split' → logprob: -24.00000762939453
    10. 'read' → logprob: -24.12500762939453

Token 121: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004518177360296249
    2. '()' → logprob: -5.754518032073975
    3. '()))' → logprob: -6.629518032073975
    4. ')' → logprob: -11.754518508911133
    5. ' ())' → logprob: -12.129518508911133
    6. '(' → logprob: -13.379518508911133
    7. '())
' → logprob: -13.379518508911133
    8. '());' → logprob: -15.004518508911133
    9. '))' → logprob: -15.254518508911133
    10. '().' → logprob: -15.254518508911133

Token 122: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' Vér' (ID: 159169)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10277266055345535
    2. '#' → logprob: -3.3527727127075195
    3. 'result' → logprob: -3.7277727127075195
    4. 'if' → logprob: -3.7277727127075195
    5. 's' → logprob: -5.2277727127075195
    6. 'sum' → logprob: -5.4777727127075195
    7. 'C' → logprob: -5.6027727127075195
    8. ' print' → logprob: -8.35277271270752
    9. 'total' → logprob: -8.85277271270752
    10. 'A' → logprob: -9.10277271270752

Token 124: 'ifie' (ID: 46409)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.006354258395731449
    2. 'ification' → logprob: -5.256354331970215
    3. 'ifie' → logprob: -7.631354331970215
    4. 'if' → logprob: -8.131354331970215
    5. 'i' → logprob: -9.256354331970215
    6. '#' → logprob: -9.381354331970215
    7. 'ifiez' → logprob: -9.756354331970215
    8. 'ifer' → logprob: -10.131354331970215
    9. 'ify' → logprob: -11.006354331970215
    10. 'ifi' → logprob: -11.256354331970215

Token 125: ' si' (ID: 1784)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.43518903851509094
    2. 'A' → logprob: -1.9351890087127686
    3. ' if' → logprob: -2.4351890087127686
    4. 'if' → logprob: -2.9351890087127686
    5. '(' → logprob: -3.6851890087127686
    6. ' ' → logprob: -4.185189247131348
    7. ' (' → logprob: -4.685189247131348
    8. '()' → logprob: -5.435189247131348
    9. ' si' → logprob: -5.435189247131348
    10. '(A' → logprob: -5.560189247131348

Token 126: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.42924970388412476
    2. ' A' → logprob: -1.0542497634887695
    3. 'B' → logprob: -7.9292497634887695
    4. ' B' → logprob: -9.05424976348877
    5. ' ' → logprob: -9.92924976348877
    6. '(A' → logprob: -11.55424976348877
    7. ' ' → logprob: -12.42924976348877
    8. ' (' → logprob: -12.80424976348877
    9. '(' → logprob: -13.17924976348877
    10. '	A' → logprob: -14.49174976348877

Token 127: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09177748113870621
    2. ' A' → logprob: -2.5917775630950928
    3. 'B' → logprob: -4.466777324676514
    4. ' B' → logprob: -7.466777324676514
    5. '(A' → logprob: -8.841777801513672
    6. ' deux' → logprob: -9.091777801513672
    7. ' (' → logprob: -9.591777801513672
    8. 'de' → logprob: -9.716777801513672
    9. ' nombres' → logprob: -9.966777801513672
    10. ' ' → logprob: -9.966777801513672

Token 128: ' valeurs' (ID: 73668)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17240971326828003
    2. ' nombres' → logprob: -2.422409772872925
    3. ' A' → logprob: -2.797409772872925
    4. ' valeurs' → logprob: -5.172409534454346
    5. '#' → logprob: -7.297409534454346
    6. 'nombre' → logprob: -7.297409534454346
    7. ' variables' → logprob: -7.922409534454346
    8. ' nombre' → logprob: -8.047410011291504
    9. 'variables' → logprob: -8.922410011291504
    10. 'val' → logprob: -9.172410011291504

Token 129: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8134453892707825
    2. ' sont' → logprob: -0.9384453892707825
    3. ' A' → logprob: -2.4384453296661377
    4. 's' → logprob: -2.6884453296661377
    5. 'S' → logprob: -5.688445568084717
    6. '#' → logprob: -5.688445568084717
    7. 'diff' → logprob: -7.563445568084717
    8. ' #' → logprob: -7.563445568084717
    9. ' ' → logprob: -7.688445568084717
    10. 'ont' → logprob: -7.813445568084717

Token 130: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.2876023054122925
    2. ' ==' → logprob: -1.2876023054122925
    3. '==' → logprob: -1.4126023054122925
    4. ' et' → logprob: -2.162602424621582
    5. '>' → logprob: -3.662602424621582
    6. '%' → logprob: -3.662602424621582
    7. ' >' → logprob: -4.162602424621582
    8. ' !=' → logprob: -5.787602424621582
    9. '+' → logprob: -5.912602424621582
    10. 'and' → logprob: -6.037602424621582

Token 131: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004620241466909647
    2. ' B' → logprob: -5.37962007522583
    3. ' ' → logprob: -17.129619598388672
    4. ' ' → logprob: -18.129619598388672
    5. '>B' → logprob: -18.504619598388672
    6. 'b' → logprob: -19.504619598388672
    7. '#' → logprob: -19.754619598388672
    8. '	B' → logprob: -19.879619598388672
    9. '<B' → logprob: -19.879619598388672
    10. '=B' → logprob: -20.004619598388672

Token 132: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7021650671958923
    2. ' sont' → logprob: -1.327165126800537
    3. ' ==' → logprob: -2.202165126800537
    4. '==' → logprob: -3.202165126800537
    5. ':' → logprob: -3.952165126800537
    6. '>' → logprob: -4.202165126800537
    7. '%' → logprob: -4.577165126800537
    8. ' are' → logprob: -4.827165126800537
    9. ' ' → logprob: -5.077165126800537
    10. ' >' → logprob: -5.202165126800537

Token 133: ' inf' (ID: 5603)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.35985127091407776
    2. 'ég' → logprob: -1.8598512411117554
    3. 'strict' → logprob: -2.484851360321045
    4. 'diff' → logprob: -4.484851360321045
    5. 'sup' → logprob: -4.734851360321045
    6. 'égal' → logprob: -5.359851360321045
    7. 'inf' → logprob: -5.484851360321045
    8. 'eg' → logprob: -5.609851360321045
    9. ' différentes' → logprob: -5.609851360321045
    10. 'dans' → logprob: -5.859851360321045

Token 134: 'érieures' (ID: 108978)
  Prédit: 'érieures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieures' → logprob: -0.006917603313922882
    2. 'é' → logprob: -6.381917476654053
    3. 'érieurs' → logprob: -6.631917476654053
    4. 'érie' → logprob: -7.131917476654053
    5. '{' → logprob: -7.256917476654053
    6. 'érieure' → logprob: -7.506917476654053
    7. 'e' → logprob: -7.756917476654053
    8. 'erie' → logprob: -8.256917953491211
    9. 'érieur' → logprob: -8.381917953491211
    10. '[' → logprob: -9.006917953491211

Token 135: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.853452205657959
    2. 'à' → logprob: -1.228452205657959
    3. 'ou' → logprob: -1.603452205657959
    4. ' ou' → logprob: -2.728452205657959
    5. 'strict' → logprob: -4.728452205657959
    6. ' ' → logprob: -7.228452205657959
    7. ' strict' → logprob: -7.228452205657959
    8. 'a' → logprob: -7.353452205657959
    9. '=' → logprob: -7.478452205657959
    10. 's' → logprob: -7.853452205657959

Token 136: ' ég' (ID: 33150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.495532512664795
    2. 'ou' → logprob: -1.495532512664795
    3. ' ég' → logprob: -1.495532512664795
    4. 'égal' → logprob: -2.370532512664795
    5. ' ' → logprob: -3.120532512664795
    6. ' à' → logprob: -3.245532512664795
    7. 'strict' → logprob: -3.245532512664795
    8. 'à' → logprob: -3.370532512664795
    9. '100' → logprob: -3.870532512664795
    10. ' ou' → logprob: -4.245532512664795

Token 137: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.02710604853928089
    2. 'ale' → logprob: -4.402106285095215
    3. 'a' → logprob: -4.777106285095215
    4. 'al' → logprob: -5.652106285095215
    5. '{' → logprob: -6.902106285095215
    6. '```' → logprob: -8.152106285095215
    7. '>' → logprob: -9.027106285095215
    8. '#' → logprob: -9.527106285095215
    9. '%' → logprob: -9.652106285095215
    10. '=' → logprob: -9.652106285095215

Token 138: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.026337916031479836
    2. 'à' → logprob: -3.7763378620147705
    3. ' ' → logprob: -5.90133810043335
    4. ' a' → logprob: -9.151337623596191
    5. 'a' → logprob: -10.026337623596191
    6. '  ' → logprob: -10.276337623596191
    7. ''à' → logprob: -10.276337623596191
    8. ' ' → logprob: -10.526337623596191
    9. '100' → logprob: -11.151337623596191
    10. 'au' → logprob: -11.526337623596191

Token 139: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5016783475875854
    2. '10' → logprob: -1.0016783475875854
    3. ' ' → logprob: -4.126678466796875
    4. '1' → logprob: -5.501678466796875
    5. '20' → logprob: -5.876678466796875
    6. '0' → logprob: -7.001678466796875
    7. '50' → logprob: -7.626678466796875
    8. '9' → logprob: -7.876678466796875
    9. '21' → logprob: -8.126678466796875
    10. '5' → logprob: -8.126678466796875

Token 140: '9' (ID: 24)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.13859155774116516
    2. '10' → logprob: -2.2635915279388428
    3. ' ' → logprob: -4.138591766357422
    4. '1' → logprob: -5.513591766357422
    5. '50' → logprob: -7.138591766357422
    6. '0' → logprob: -7.263591766357422
    7. '20' → logprob: -7.388591766357422
    8. '9' → logprob: -7.888591766357422
    9. '5' → logprob: -8.013591766357422
    10. '999' → logprob: -8.263591766357422

Token 141: ' :
' (ID: 10039)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01790688745677471
    2. 'if' → logprob: -4.517906665802002
    3. ' if' → logprob: -6.267906665802002
    4. '  
' → logprob: -6.642906665802002
    5. ' 
' → logprob: -7.017906665802002
    6. ':
' → logprob: -7.267906665802002
    7. '

' → logprob: -7.392906665802002
    8. ':' → logprob: -7.517906665802002
    9. '<|end|>' → logprob: -8.39290714263916
    10. '
' → logprob: -9.14290714263916

Token 142: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018642311915755272
    2. ' if' → logprob: -4.143642425537109
    3. '
' → logprob: -6.018642425537109
    4. 'i' → logprob: -9.39364242553711
    5. ':' → logprob: -10.76864242553711
    6. ':
' → logprob: -10.76864242553711
    7. ' 
' → logprob: -11.01864242553711
    8. '```' → logprob: -11.89364242553711
    9. '  
' → logprob: -12.26864242553711
    10. '#' → logprob: -12.26864242553711

Token 143: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0052758571691811085
    2. ' if' → logprob: -5.255275726318359
    3. 'i' → logprob: -10.88027572631836
    4. '
' → logprob: -10.88027572631836
    5. ' 
' → logprob: -12.75527572631836
    6. ' ' → logprob: -14.75527572631836
    7. ' i' → logprob: -15.00527572631836
    8. 's' → logprob: -15.75527572631836
    9. '```' → logprob: -15.75527572631836
    10. ':' → logprob: -16.25527572631836

Token 144: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.21275705099105835
    2. '(' → logprob: -2.712757110595703
    3. '_val' → logprob: -3.087757110595703
    4. 'if' → logprob: -3.962757110595703
    5. '_value' → logprob: -3.962757110595703
    6. ')' → logprob: -3.962757110595703
    7. '_' → logprob: -4.712757110595703
    8. 'A' → logprob: -6.087757110595703
    9. ' <=' → logprob: -6.837757110595703
    10. ' if' → logprob: -6.962757110595703

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010849024169147015
    2. ' ,' → logprob: -4.7608489990234375
    3. ',B' → logprob: -6.2608489990234375
    4. ')' → logprob: -8.260848999023438
    5. ',A' → logprob: -10.510848999023438
    6. 'B' → logprob: -11.760848999023438
    7. ' ' → logprob: -11.885848999023438
    8. '(),' → logprob: -12.135848999023438
    9. ' )' → logprob: -12.760848999023438
    10. ',max' → logprob: -13.260848999023438

Token 146: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014166327193379402
    2. ' B' → logprob: -4.264166355133057
    3. ')' → logprob: -13.014165878295898
    4. ' ' → logprob: -14.889165878295898
    5. ',' → logprob: -16.0141658782959
    6. ',B' → logprob: -17.2641658782959
    7. '   ' → logprob: -17.8891658782959
    8. '	B' → logprob: -17.8891658782959
    9. '9' → logprob: -18.3891658782959
    10. 'max' → logprob: -18.6391658782959

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003349890175741166
    2. ')<=' → logprob: -8.500334739685059
    3. ' )' → logprob: -9.125334739685059
    4. '()' → logprob: -11.250334739685059
    5. '<=' → logprob: -12.625334739685059
    6. '())' → logprob: -13.500334739685059
    7. 'le' → logprob: -13.625334739685059
    8. '）' → logprob: -14.625334739685059
    9. ' <=' → logprob: -15.000334739685059
    10. '))' → logprob: -15.000334739685059

Token 148: ' retourne' (ID: 178818)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6136913895606995
    2. ')' → logprob: -0.8636913895606995
    3. '<=' → logprob: -3.8636913299560547
    4. '()' → logprob: -4.863691329956055
    5. ' )' → logprob: -5.113691329956055
    6. ')<=' → logprob: -6.363691329956055
    7. '(' → logprob: -8.238691329956055
    8. ' ' → logprob: -9.363691329956055
    9. '>' → logprob: -9.738691329956055
    10. ' <' → logprob: -10.738691329956055

Token 149: ' la' (ID: 557)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.013533231802284718
    2. ' ' → logprob: -4.513533115386963
    3. ')' → logprob: -6.513533115386963
    4. '10' → logprob: -7.388533115386963
    5. 'max' → logprob: -8.388533592224121
    6. '0' → logprob: -10.763533592224121
    7. ' max' → logprob: -11.013533592224121
    8. ' ' → logprob: -11.138533592224121
    9. ' )' → logprob: -11.263533592224121
    10. 'le' → logprob: -11.388533592224121

Token 150: ' valeur' (ID: 41664)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.033410668373108
    2. 'max' → logprob: -1.658410668373108
    3. 'val' → logprob: -1.783410668373108
    4. ' plus' → logprob: -2.0334105491638184
    5. ' valeur' → logprob: -3.0334105491638184
    6. ' maximum' → logprob: -3.1584105491638184
    7. 'maximum' → logprob: -3.4084105491638184
    8. '9' → logprob: -4.033410549163818
    9. ' max' → logprob: -4.908410549163818
    10. ' ' → logprob: -6.283410549163818

Token 151: ' la' (ID: 557)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.36722123622894287
    2. 'des' → logprob: -2.6172213554382324
    3. 'max' → logprob: -2.8672213554382324
    4. ')' → logprob: -3.2422213554382324
    5. '9' → logprob: -3.2422213554382324
    6. ' maximale' → logprob: -3.2422213554382324
    7. ' entre' → logprob: -4.492221355438232
    8. ' ' → logprob: -4.867221355438232
    9. ' la' → logprob: -4.992221355438232
    10. 'de' → logprob: -4.992221355438232

Token 152: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.38986483216285706
    2. 'plus' → logprob: -1.1398648023605347
    3. '_plus' → logprob: -7.389864921569824
    4. '   ' → logprob: -7.514864921569824
    5. 'max' → logprob: -8.014864921569824
    6. '+' → logprob: -8.139864921569824
    7. ' maximale' → logprob: -8.389864921569824
    8. ')' → logprob: -8.639864921569824
    9. '-plus' → logprob: -8.889864921569824
    10. 'Plus' → logprob: -9.014864921569824

Token 153: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.01788850873708725
    2. 'é' → logprob: -4.76788854598999
    3. 'grand' → logprob: -4.89288854598999
    4. 'import' → logprob: -6.64288854598999
    5. 'élé' → logprob: -8.642888069152832
    6. ' grande' → logprob: -9.767888069152832
    7. 'large' → logprob: -9.892888069152832
    8. 'ha' → logprob: -10.392888069152832
    9. ' élevée' → logprob: -10.392888069152832
    10. 'pet' → logprob: -10.517888069152832

Token 154: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2237757444381714
    2. '()' → logprob: -2.223775863647461
    3. '(' → logprob: -3.348775863647461
    4. '(A' → logprob: -4.348775863647461
    5. ',' → logprob: -4.473775863647461
    6. '9' → logprob: -5.223775863647461
    7. ' )' → logprob: -5.473775863647461
    8. 'if' → logprob: -5.473775863647461
    9. '<=' → logprob: -5.723775863647461
    10. 'print' → logprob: -6.348775863647461

Token 155: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015406885650008917
    2. '9' → logprob: -6.876540660858154
    3. ' A' → logprob: -8.001541137695312
    4. '(A' → logprob: -9.126541137695312
    5. ')' → logprob: -10.751541137695312
    6. 'les' → logprob: -11.126541137695312
    7. '(' → logprob: -11.626541137695312
    8. ',' → logprob: -11.751541137695312
    9. '10' → logprob: -12.751541137695312
    10. ' ' → logprob: -13.251541137695312

Token 156: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003884511534124613
    2. ')' → logprob: -6.128884315490723
    3. ' ,' → logprob: -6.628884315490723
    4. ' et' → logprob: -8.753884315490723
    5. 'et' → logprob: -9.128884315490723
    6. ',A' → logprob: -10.378884315490723
    7. ' and' → logprob: -11.378884315490723
    8. 'and' → logprob: -11.378884315490723
    9. ',B' → logprob: -11.503884315490723
    10. ' ' → logprob: -11.503884315490723

Token 157: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0865127295255661
    2. ' B' → logprob: -3.086512804031372
    3. 'max' → logprob: -3.961512804031372
    4. '9' → logprob: -4.211512565612793
    5. 'A' → logprob: -6.086512565612793
    6. ' max' → logprob: -7.836512565612793
    7. ' ' → logprob: -7.961512565612793
    8. '10' → logprob: -9.086512565612793
    9. ' A' → logprob: -9.086512565612793
    10. '8' → logprob: -10.086512565612793

Token 158: '.
' (ID: 558)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.633426308631897
    2. '<=' → logprob: -1.633426308631897
    3. ')' → logprob: -1.758426308631897
    4. 'print' → logprob: -3.1334261894226074
    5. 'if' → logprob: -3.7584261894226074
    6. '>' → logprob: -4.633426189422607
    7. '#' → logprob: -5.258426189422607
    8. ' if' → logprob: -5.758426189422607
    9. ' print' → logprob: -6.133426189422607
    10. ')<=' → logprob: -6.258426189422607

Token 159: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27054643630981445
    2. 'print' → logprob: -2.3955464363098145
    3. ' if' → logprob: -2.5205464363098145
    4. '<=' → logprob: -3.6455464363098145
    5. ' <=' → logprob: -4.0205464363098145
    6. ')' → logprob: -4.1455464363098145
    7. ' print' → logprob: -6.5205464363098145
    8. '>' → logprob: -7.1455464363098145
    9. ',' → logprob: -7.5205464363098145
    10. '9' → logprob: -7.6455464363098145

Token 160: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3667041063308716
    2. 'print' → logprob: -1.2417041063308716
    3. ' if' → logprob: -4.116703987121582
    4. ' print' → logprob: -7.116703987121582
    5. '<=' → logprob: -7.741703987121582
    6. '9' → logprob: -8.741703987121582
    7. 'max' → logprob: -9.616703987121582
    8. '
' → logprob: -9.616703987121582
    9. ')' → logprob: -9.741703987121582
    10. ' <=' → logprob: -9.991703987121582

Token 161: ' compare' (ID: 12221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4453885853290558
    2. 'print' → logprob: -1.9453885555267334
    3. ' if' → logprob: -1.9453885555267334
    4. ' print' → logprob: -2.6953885555267334
    5. '=' → logprob: -6.4453887939453125
    6. '>' → logprob: -7.0703887939453125
    7. ' =' → logprob: -7.1953887939453125
    8. ',' → logprob: -8.195388793945312
    9. ' continue' → logprob: -8.570388793945312
    10. '_print' → logprob: -8.570388793945312

Token 162: ' cette' (ID: 7696)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7054080963134766
    2. '(max' → logprob: -0.9554080963134766
    3. ' max' → logprob: -2.9554080963134766
    4. '(' → logprob: -3.4554080963134766
    5. ' si' → logprob: -4.205408096313477
    6. 'le' → logprob: -4.705408096313477
    7. 'si' → logprob: -5.455408096313477
    8. ' if' → logprob: -6.205408096313477
    9. ' (' → logprob: -6.330408096313477
    10. ' le' → logprob: -6.330408096313477

Token 163: ' valeur' (ID: 41664)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6052435040473938
    2. ' max' → logprob: -0.8552435040473938
    3. ' maximum' → logprob: -4.355243682861328
    4. ' à' → logprob: -4.980243682861328
    5. ' ' → logprob: -6.355243682861328
    6. ' ' → logprob: -6.855243682861328
    7. ' maximal' → logprob: -7.355243682861328
    8. ' <=' → logprob: -7.480243682861328
    9. 'maximum' → logprob: -7.605243682861328
    10. ' maximale' → logprob: -7.730243682861328

Token 164: ' maximale' (ID: 76380)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3506234884262085
    2. ' à' → logprob: -2.100623607635498
    3. '<=' → logprob: -2.100623607635498
    4. ' ' → logprob: -4.100623607635498
    5. ')' → logprob: -4.725623607635498
    6. '>' → logprob: -4.975623607635498
    7. ' >' → logprob: -5.350623607635498
    8. 'max' → logprob: -6.350623607635498
    9. ' au' → logprob: -6.475623607635498
    10. ' )' → logprob: -6.975623607635498

Token 165: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7547234892845154
    2. '<=' → logprob: -1.5047235488891602
    3. ' à' → logprob: -2.12972354888916
    4. ' <=' → logprob: -3.00472354888916
    5. '>' → logprob: -3.25472354888916
    6. 'max' → logprob: -3.62972354888916
    7. ',' → logprob: -3.75472354888916
    8. ' ' → logprob: -4.37972354888916
    9. ' )' → logprob: -5.25472354888916
    10. 'if' → logprob: -5.25472354888916

Token 166: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.038188375532627106
    2. ' ' → logprob: -3.2881884574890137
    3. '10' → logprob: -8.913187980651855
    4. ' ' → logprob: -12.038187980651855
    5. '1' → logprob: -13.288187980651855
    6. 's' → logprob: -14.288187980651855
    7. '```' → logprob: -15.038187980651855
    8. ')' → logprob: -15.100687980651855
    9. '  ' → logprob: -15.163187980651855
    10. '"' → logprob: -15.725687980651855

Token 167: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.005931878462433815
    2. ' ' → logprob: -5.130931854248047
    3. '10' → logprob: -13.005931854248047
    4. '1' → logprob: -15.255931854248047
    5. ' ' → logprob: -15.505931854248047
    6. '  ' → logprob: -16.068431854248047
    7. '   ' → logprob: -16.318431854248047
    8. '```' → logprob: -16.568431854248047
    9. 's' → logprob: -17.068431854248047
    10. ' neuf' → logprob: -17.505931854248047

Token 168: ' à' (ID: 1221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020862767472863197
    2. ' if' → logprob: -4.645862579345703
    3. '
' → logprob: -5.645862579345703
    4. 'max' → logprob: -6.145862579345703
    5. ':
' → logprob: -6.645862579345703
    6. ':' → logprob: -6.770862579345703
    7. '9' → logprob: -7.145862579345703
    8. ')' → logprob: -7.145862579345703
    9. ',' → logprob: -7.645862579345703
    10. 'print' → logprob: -8.520862579345703

Token 169: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2335987538099289
    2. ':' → logprob: -2.4835987091064453
    3. '9' → logprob: -2.7335987091064453
    4. ' <=' → logprob: -3.8585987091064453
    5. '<=' → logprob: -4.608598709106445
    6. '<' → logprob: -5.233598709106445
    7. '>' → logprob: -5.483598709106445
    8. ' :' → logprob: -5.483598709106445
    9. '=' → logprob: -6.233598709106445
    10. ',' → logprob: -6.358598709106445

Token 170: ''aide' (ID: 75684)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03476153314113617
    2. 'if' → logprob: -4.534761428833008
    3. ''aide' → logprob: -5.284761428833008
    4. 'fin' → logprob: -5.659761428833008
    5. '1' → logprob: -6.034761428833008
    6. ' ' → logprob: -6.784761428833008
    7. '```' → logprob: -6.784761428833008
    8. 'continue' → logprob: -6.909761428833008
    9. 'a' → logprob: -7.284761428833008
    10. '0' → logprob: -7.284761428833008

Token 171: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.036593303084373474
    2. ' de' → logprob: -3.786593198776245
    3. 'd' → logprob: -4.536593437194824
    4. 'de' → logprob: -7.536593437194824
    5. ' à' → logprob: -7.911593437194824
    6. '<' → logprob: -8.536593437194824
    7. ' du' → logprob: -8.536593437194824
    8. ' a' → logprob: -8.661593437194824
    9. 'au' → logprob: -8.661593437194824
    10. ')' → logprob: -8.911593437194824

Token 172: ' l' (ID: 305)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.482045978307724
    2. '<=' → logprob: -1.1070460081100464
    3. '9' → logprob: -3.357045888900757
    4. ' ' → logprob: -5.357046127319336
    5. '<' → logprob: -5.482046127319336
    6. 'if' → logprob: -5.982046127319336
    7. '10' → logprob: -7.107046127319336
    8. 'un' → logprob: -8.107046127319336
    9. ' ' → logprob: -8.107046127319336
    10. ' <' → logprob: -8.232046127319336

Token 173: ''op' (ID: 70747)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8789854049682617
    2. '<' → logprob: -1.8789854049682617
    3. '<=' → logprob: -2.0039854049682617
    4. ' if' → logprob: -2.1289854049682617
    5. ''op' → logprob: -3.3789854049682617
    6. ''' → logprob: -3.7539854049682617
    7. ''in' → logprob: -4.003985404968262
    8. ' operator' → logprob: -4.128985404968262
    9. ' <=' → logprob: -4.128985404968262
    10. 'operator' → logprob: -4.378985404968262

Token 174: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.23447850346565247
    2. 'ér' → logprob: -1.85947847366333
    3. 'er' → logprob: -3.35947847366333
    4. 'ération' → logprob: -4.35947847366333
    5. '<=' → logprob: -6.10947847366333
    6. '<' → logprob: -7.23447847366333
    7. 'éra' → logprob: -7.60947847366333
    8. 'é' → logprob: -7.60947847366333
    9. 'érations' → logprob: -8.234478950500488
    10. 'èr' → logprob: -8.859478950500488

Token 175: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.35021477937698364
    2. '<=' → logprob: -1.2252147197723389
    3. '<' → logprob: -6.725214958190918
    4. ' ' → logprob: -9.225214958190918
    5. ' <' → logprob: -9.475214958190918
    6. ' if' → logprob: -10.100214958190918
    7. 'if' → logprob: -10.100214958190918
    8. '"' → logprob: -10.225214958190918
    9. '>' → logprob: -10.600214958190918
    10. ''' → logprob: -10.725214958190918

Token 176: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4236046075820923
    2. 'if' → logprob: -1.5486046075820923
    3. ':
' → logprob: -2.7986044883728027
    4. ' :' → logprob: -3.6736044883728027
    5. ' if' → logprob: -4.048604488372803
    6. ' :
' → logprob: -4.798604488372803
    7. 'max' → logprob: -5.798604488372803
    8. ',' → logprob: -5.923604488372803
    9. '9' → logprob: -5.923604488372803
    10. '.' → logprob: -6.048604488372803

Token 177: 'inf' (ID: 22226)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7835351228713989
    2. ' ' → logprob: -1.033535122871399
    3. '9' → logprob: -1.908535122871399
    4. ' )' → logprob: -3.2835350036621094
    5. 'max' → logprob: -8.40853500366211
    6. '=' → logprob: -8.65853500366211
    7. 'if' → logprob: -9.03353500366211
    8. '')' → logprob: -9.03353500366211
    9. '`)' → logprob: -9.03353500366211
    10. ' ')' → logprob: -9.15853500366211

Token 178: 'érieur' (ID: 24251)
  Prédit: 'érieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieur' → logprob: -0.14161814749240875
    2. 'érieure' → logprob: -2.141618251800537
    3. 'é' → logprob: -4.516618251800537
    4. 'érie' → logprob: -6.391618251800537
    5. 'érieures' → logprob: -7.516618251800537
    6. 'érieurs' → logprob: -7.766618251800537
    7. 'er' → logprob: -7.891618251800537
    8. '```' → logprob: -9.016617774963379
    9. ')' → logprob: -9.641617774963379
    10. '�' → logprob: -9.766617774963379

Token 179: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12124969810247421
    2. ' ou' → logprob: -2.7462496757507324
    3. 'ou' → logprob: -3.9962496757507324
    4. ')' → logprob: -4.246249675750732
    5. 'à' → logprob: -4.746249675750732
    6. ' à' → logprob: -5.121249675750732
    7. ' or' → logprob: -6.621249675750732
    8. ' =' → logprob: -7.496249675750732
    9. ' ' → logprob: -8.87125015258789
    10. ' )' → logprob: -9.24625015258789

Token 180: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013556169345974922
    2. ' égal' → logprob: -4.763556003570557
    3. 'égal' → logprob: -5.638556003570557
    4. ' ég' → logprob: -7.388556003570557
    5. 'à' → logprob: -7.638556003570557
    6. 'egal' → logprob: -10.013556480407715
    7. '_' → logprob: -10.138556480407715
    8. ' à' → logprob: -10.388556480407715
    9. 'égalité' → logprob: -10.513556480407715
    10. 'é' → logprob: -10.638556480407715

Token 181: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021742094308137894
    2. ').' → logprob: -4.64674186706543
    3. '):' → logprob: -5.27174186706543
    4. '9' → logprob: -5.27174186706543
    5. ' )' → logprob: -7.27174186706543
    6. ')
' → logprob: -7.64674186706543
    7. '):
' → logprob: -8.89674186706543
    8. ' ' → logprob: -9.39674186706543
    9. ':' → logprob: -10.27174186706543
    10. '),' → logprob: -10.27174186706543

Token 182: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36588379740715027
    2. '
' → logprob: -1.2408838272094727
    3. ' if' → logprob: -4.490883827209473
    4. 'max' → logprob: -6.240883827209473
    5. ':' → logprob: -7.240883827209473
    6. '

' → logprob: -7.365883827209473
    7. ':
' → logprob: -7.490883827209473
    8. ' 
' → logprob: -7.740883827209473
    9. '9' → logprob: -7.865883827209473
    10. '
' → logprob: -8.490883827209473

Token 183: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011999934213235974
    2. ' if' → logprob: -6.751200199127197
    3. 'max' → logprob: -11.001199722290039
    4. '
' → logprob: -12.001199722290039
    5. '9' → logprob: -13.001199722290039
    6. 'i' → logprob: -13.501199722290039
    7. 'while' → logprob: -14.001199722290039
    8. '#' → logprob: -14.501199722290039
    9. 'print' → logprob: -14.626199722290039
    10. 'result' → logprob: -15.626199722290039

Token 184: ' cette' (ID: 7696)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.026376819238066673
    2. 'max' → logprob: -3.651376724243164
    3. ' A' → logprob: -10.151376724243164
    4. 'A' → logprob: -10.901376724243164
    5. ' ' → logprob: -11.776376724243164
    6. '(max' → logprob: -12.151376724243164
    7. ' not' → logprob: -12.901376724243164
    8. ' ' → logprob: -12.901376724243164
    9. '	max' → logprob: -15.651376724243164
    10. ' maximum' → logprob: -15.901376724243164

Token 185: ' condition' (ID: 7060)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6933586597442627
    2. ' max' → logprob: -1.0683586597442627
    3. ' condition' → logprob: -2.0683586597442627
    4. 'condition' → logprob: -3.5683586597442627
    5. 'cond' → logprob: -8.068358421325684
    6. ' ' → logprob: -8.318358421325684
    7. ' A' → logprob: -8.568358421325684
    8. 'est' → logprob: -8.818358421325684
    9. ' est' → logprob: -9.193358421325684
    10. ' test' → logprob: -9.193358421325684

Token 186: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003175889723934233
    2. ' :' → logprob: -8.125317573547363
    3. ':
' → logprob: -11.375317573547363
    4. 'est' → logprob: -12.000317573547363
    5. ' est' → logprob: -13.000317573547363
    6. 's' → logprob: -14.750317573547363
    7. 'e' → logprob: -15.500317573547363
    8. ':
' → logprob: -15.500317573547363
    9. ':\' → logprob: -16.37531852722168
    10. ' ' → logprob: -16.50031852722168

Token 187: ' vraie' (ID: 105841)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6381229162216187
    2. 'True' → logprob: -0.8881229162216187
    3. 'v' → logprob: -2.888123035430908
    4. ' vraie' → logprob: -5.763123035430908
    5. ' true' → logprob: -8.13812255859375
    6. 'true' → logprob: -8.26312255859375
    7. ' vér' → logprob: -8.26312255859375
    8. 'V' → logprob: -8.38812255859375
    9. ' vrai' → logprob: -8.76312255859375
    10. ' respect' → logprob: -9.26312255859375

Token 188: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036275084130465984
    2. ':
' → logprob: -6.253627300262451
    3. ' :' → logprob: -6.503627300262451
    4. ',' → logprob: -8.62862777709961
    5. ' :
' → logprob: -11.00362777709961
    6. '):' → logprob: -14.12862777709961
    7. ':

' → logprob: -14.87862777709961
    8. 'if' → logprob: -15.00362777709961
    9. ' ' → logprob: -15.00362777709961
    10. ' ,' → logprob: -15.00362777709961

Token 189: 'c' (ID: 66)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4763958156108856
    2. ':' → logprob: -1.851395845413208
    3. 'max' → logprob: -2.226395845413208
    4. ' max' → logprob: -3.101395845413208
    5. ')' → logprob: -3.226395845413208
    6. ' ):' → logprob: -4.726395606994629
    7. ' True' → logprob: -5.226395606994629
    8. ' :' → logprob: -5.476395606994629
    9. ' ' → logprob: -5.726395606994629
    10. 'True' → logprob: -5.726395606994629

Token 190: ''est' (ID: 6616)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.4644219875335693
    2. 'ond' → logprob: -1.5894219875335693
    3. ':' → logprob: -2.2144219875335693
    4. 'A' → logprob: -2.3394219875335693
    5. ''est' → logprob: -2.4644219875335693
    6. 'ont' → logprob: -2.5894219875335693
    7. 'e' → logprob: -3.0894219875335693
    8. 'max' → logprob: -3.5894219875335693
    9. 'om' → logprob: -4.089422225952148
    10. ' max' → logprob: -4.214422225952148

Token 191: '-à' (ID: 56297)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.873751163482666
    2. 'True' → logprob: -1.748751163482666
    3. ' que' → logprob: -1.998751163482666
    4. ' vrai' → logprob: -2.498751163482666
    5. ' à' → logprob: -3.373751163482666
    6. '-à' → logprob: -3.623751163482666
    7. 'à' → logprob: -3.623751163482666
    8. 'A' → logprob: -3.748751163482666
    9. ':' → logprob: -3.998751163482666
    10. 'le' → logprob: -4.373751163482666

Token 192: '-dire' (ID: 76064)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.18366678059101105
    2. 'dire' → logprob: -1.9336668252944946
    3. 'tout' → logprob: -4.933666706085205
    4. 't' → logprob: -5.558666706085205
    5. '#' → logprob: -6.058666706085205
    6. 'à' → logprob: -6.308666706085205
    7. 'que' → logprob: -6.683666706085205
    8. ' ce' → logprob: -6.683666706085205
    9. 'v' → logprob: -6.808666706085205
    10. 'quoi' → logprob: -7.058666706085205

Token 193: ' que' (ID: 661)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06258351355791092
    2. 'max' → logprob: -3.3125834465026855
    3. ' True' → logprob: -4.3125834465026855
    4. ' que' → logprob: -5.4375834465026855
    5. ' ' → logprob: -5.6875834465026855
    6. ' A' → logprob: -6.6875834465026855
    7. ':' → logprob: -7.8125834465026855
    8. ' true' → logprob: -7.9375834465026855
    9. ' not' → logprob: -8.062583923339844
    10. 'True' → logprob: -8.312583923339844

Token 194: ' les' (ID: 1341)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31329673528671265
    2. 'max' → logprob: -1.3132967948913574
    3. ' ' → logprob: -10.9382963180542
    4. ' ' → logprob: -12.4382963180542
    5. ' A' → logprob: -12.4382963180542
    6. '9' → logprob: -12.5632963180542
    7. 'A' → logprob: -13.0632963180542
    8. ' maximum' → logprob: -14.0632963180542
    9. ' la' → logprob: -14.3132963180542
    10. '(max' → logprob: -14.5632963180542

Token 195: ' deux' (ID: 10301)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18306423723697662
    2. ' max' → logprob: -1.8080642223358154
    3. 'A' → logprob: -6.1830644607543945
    4. ' A' → logprob: -7.0580644607543945
    5. '9' → logprob: -8.433064460754395
    6. 'val' → logprob: -10.058064460754395
    7. ' maximum' → logprob: -10.308064460754395
    8. ' ' → logprob: -10.683064460754395
    9. ' ' → logprob: -11.058064460754395
    10. 'maximum' → logprob: -11.183064460754395

Token 196: ' valeurs' (ID: 73668)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3728172481060028
    2. ' A' → logprob: -1.6228172779083252
    3. 'max' → logprob: -2.622817277908325
    4. ' max' → logprob: -4.122817039489746
    5. 'val' → logprob: -4.747817039489746
    6. 'values' → logprob: -5.622817039489746
    7. '9' → logprob: -5.997817039489746
    8. ' values' → logprob: -5.997817039489746
    9. ' valeurs' → logprob: -5.997817039489746
    10. ' ' → logprob: -6.372817039489746

Token 197: ' sont' (ID: 5242)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7306308746337891
    2. 's' → logprob: -1.480630874633789
    3. ' sont' → logprob: -2.230630874633789
    4. 'max' → logprob: -2.355630874633789
    5. ' <=' → logprob: -2.730630874633789
    6. 'A' → logprob: -4.605630874633789
    7. '#' → logprob: -5.605630874633789
    8. 'ont' → logprob: -5.730630874633789
    9. ')' → logprob: -6.480630874633789
    10. ' max' → logprob: -6.605630874633789

Token 198: ' ≤' (ID: 72554)
  Prédit: ' inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inf' → logprob: -0.5319503545761108
    2. 'inf' → logprob: -0.9069503545761108
    3. '<=' → logprob: -5.2819504737854
    4. 'infer' → logprob: -6.9069504737854
    5. ' <=' → logprob: -7.0319504737854
    6. ' bien' → logprob: -7.2819504737854
    7. ' ' → logprob: -8.656949996948242
    8. ' toutes' → logprob: -8.781949996948242
    9. ' inférieur' → logprob: -8.906949996948242
    10. 'bien' → logprob: -9.156949996948242

Token 199: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4742025136947632
    2. ' ' → logprob: -0.9742025136947632
    3. ' ' → logprob: -9.224202156066895
    4. ')' → logprob: -11.724202156066895
    5. ' à' → logprob: -12.474202156066895
    6. '10' → logprob: -12.724202156066895
    7. ' neuf' → logprob: -13.099202156066895
    8. ' )' → logprob: -13.349202156066895
    9. '1' → logprob: -13.724202156066895
    10. '  ' → logprob: -14.099202156066895

Token 200: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.020557889714837074
    2. ' ' → logprob: -3.8955578804016113
    3. ')' → logprob: -11.64555835723877
    4. ' ' → logprob: -12.89555835723877
    5. ' )' → logprob: -13.95805835723877
    6. '```' → logprob: -14.45805835723877
    7. '10' → logprob: -14.52055835723877
    8. '),' → logprob: -14.58305835723877
    9. '  ' → logprob: -14.89555835723877
    10. '1' → logprob: -15.02055835723877

Token 201: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014255886897444725
    2. ')' → logprob: -5.139256000518799
    3. '):
' → logprob: -5.514256000518799
    4. ':' → logprob: -5.889256000518799
    5. '),' → logprob: -7.139256000518799
    6. ' ):' → logprob: -7.514256000518799
    7. ' and' → logprob: -10.38925552368164
    8. ',' → logprob: -10.63925552368164
    9. ' :' → logprob: -11.01425552368164
    10. ' )' → logprob: -11.26425552368164

Token 202: ' alors' (ID: 17971)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2593344748020172
    2. '   ' → logprob: -2.3843345642089844
    3. ' print' → logprob: -3.1343345642089844
    4. ' if' → logprob: -3.5093345642089844
    5. ' :' → logprob: -3.5093345642089844
    6. 'print' → logprob: -4.384334564208984
    7. ':
' → logprob: -4.759334564208984
    8. 'if' → logprob: -4.759334564208984
    9. ' :
' → logprob: -6.759334564208984
    10. ' ' → logprob: -7.759334564208984

Token 203: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22862139344215393
    2. '   ' → logprob: -2.103621482849121
    3. ' print' → logprob: -3.228621482849121
    4. ':
' → logprob: -3.853621482849121
    5. 'print' → logprob: -4.103621482849121
    6. ' :' → logprob: -6.353621482849121
    7. ' if' → logprob: -6.728621482849121
    8. 'if' → logprob: -7.728621482849121
    9. '#' → logprob: -7.978621482849121
    10. ' ' → logprob: -8.603621482849121

Token 204: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016422472894191742
    2. ' if' → logprob: -4.141422271728516
    3. ':' → logprob: -8.391422271728516
    4. '   ' → logprob: -8.891422271728516
    5. ':
' → logprob: -11.141422271728516
    6. 'print' → logprob: -12.641422271728516
    7. '
' → logprob: -13.391422271728516
    8. '#' → logprob: -14.391422271728516
    9. '```' → logprob: -14.516422271728516
    10. ' 
' → logprob: -14.766422271728516

Token 205: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2972553074359894
    2. ' if' → logprob: -1.547255277633667
    3. 'print' → logprob: -3.422255277633667
    4. ' print' → logprob: -4.672255516052246
    5. '   ' → logprob: -6.172255516052246
    6. '#' → logprob: -9.922255516052246
    7. ' ' → logprob: -10.297255516052246
    8. 'C' → logprob: -10.922255516052246
    9. 'for' → logprob: -10.922255516052246
    10. 'A' → logprob: -10.922255516052246

Token 206: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14312651753425598
    2. 'if' → logprob: -2.2681264877319336
    3. ' print' → logprob: -3.8931264877319336
    4. ' if' → logprob: -5.143126487731934
    5. 'C' → logprob: -6.518126487731934
    6. 'result' → logprob: -6.893126487731934
    7. '   ' → logprob: -8.268126487731934
    8. ' ' → logprob: -8.643126487731934
    9. 'for' → logprob: -9.018126487731934
    10. 'A' → logprob: -9.518126487731934

Token 207: ' calc' (ID: 25691)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6259822249412537
    2. 'print' → logprob: -0.8759822249412537
    3. ':' → logprob: -4.125982284545898
    4. ' if' → logprob: -4.125982284545898
    5. 'if' → logprob: -4.375982284545898
    6. '   ' → logprob: -6.375982284545898
    7. ' ' → logprob: -7.625982284545898
    8. ' :' → logprob: -8.125982284545898
    9. 'pr' → logprob: -8.375982284545898
    10. '#' → logprob: -9.375982284545898

Token 208: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.006051685661077499
    2. 'ul' → logprob: -5.631051540374756
    3. 'cule' → logprob: -6.631051540374756
    4. '#' → logprob: -8.381052017211914
    5. 'ulé' → logprob: -8.506052017211914
    6. 'ulte' → logprob: -9.006052017211914
    7. 'le' → logprob: -9.131052017211914
    8. 'print' → logprob: -9.256052017211914
    9. 'uler' → logprob: -9.381052017211914
    10. 'l' → logprob: -10.006052017211914

Token 209: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.184818297624588
    2. ' A' → logprob: -2.8098182678222656
    3. 'print' → logprob: -2.9348182678222656
    4. 'C' → logprob: -4.059818267822266
    5. 'max' → logprob: -4.059818267822266
    6. ' ' → logprob: -5.434818267822266
    7. ' print' → logprob: -5.934818267822266
    8. '(' → logprob: -6.434818267822266
    9. ' max' → logprob: -6.434818267822266
    10. 'le' → logprob: -6.559818267822266

Token 210: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.8246803283691406
    2. 'A' → logprob: -1.3246803283691406
    3. 'result' → logprob: -2.6996803283691406
    4. 'print' → logprob: -2.6996803283691406
    5. 'max' → logprob: -3.1996803283691406
    6. 's' → logprob: -3.3246803283691406
    7. 'C' → logprob: -3.9496803283691406
    8. ' produit' → logprob: -4.324680328369141
    9. 'product' → logprob: -4.699680328369141
    10. ' A' → logprob: -4.824680328369141

Token 211: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5194401741027832
    2. ' =' → logprob: -1.7694401741027832
    3. ' A' → logprob: -2.769440174102783
    4. '=' → logprob: -3.019440174102783
    5. 'print' → logprob: -3.144440174102783
    6. 'C' → logprob: -3.269440174102783
    7. 'result' → logprob: -4.519440174102783
    8. ' C' → logprob: -5.269440174102783
    9. '=A' → logprob: -5.394440174102783
    10. ' de' → logprob: -5.519440174102783

Token 212: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018301062285900116
    2. ' A' → logprob: -4.018301010131836
    3. '10' → logprob: -10.268301010131836
    4. '(' → logprob: -10.518301010131836
    5. '(A' → logprob: -10.643301010131836
    6. ' ' → logprob: -10.768301010131836
    7. ' (' → logprob: -11.268301010131836
    8. '100' → logprob: -11.893301010131836
    9. '9' → logprob: -12.393301010131836
    10. 'max' → logprob: -12.768301010131836

Token 213: ' et' (ID: 859)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4307604134082794
    2. ' *' → logprob: -1.055760383605957
    3. ',' → logprob: -6.930760383605957
    4. ' ' → logprob: -7.180760383605957
    5. '*A' → logprob: -9.180760383605957
    6. '   ' → logprob: -9.430760383605957
    7. ' and' → logprob: -10.305760383605957
    8. 'B' → logprob: -11.055760383605957
    9. 'A' → logprob: -11.555760383605957
    10. '  ' → logprob: -11.680760383605957

Token 214: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25198596715927124
    2. ' B' → logprob: -1.501986026763916
    3. ' ' → logprob: -9.876985549926758
    4. '  ' → logprob: -13.376985549926758
    5. ' ' → logprob: -13.626985549926758
    6. '#' → logprob: -14.251985549926758
    7. '10' → logprob: -15.439485549926758
    8. ',' → logprob: -15.626985549926758
    9. '100' → logprob: -15.876985549926758
    10. '   ' → logprob: -15.939485549926758

Token 215: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9547156691551208
    2. '*' → logprob: -1.4547157287597656
    3. ' if' → logprob: -1.8297157287597656
    4. '   ' → logprob: -2.2047157287597656
    5. 'print' → logprob: -3.3297157287597656
    6. ' ' → logprob: -3.9547157287597656
    7. '*
' → logprob: -3.9547157287597656
    8. ',' → logprob: -4.454715728759766
    9. '
' → logprob: -4.954715728759766
    10. ' *' → logprob: -5.329715728759766

Token 216: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7498677372932434
    2. ')' → logprob: -1.1248676776885986
    3. ' A' → logprob: -2.1248676776885986
    4. 'print' → logprob: -3.1248676776885986
    5. ' )' → logprob: -4.499867916107178
    6. '*' → logprob: -4.999867916107178
    7. ',' → logprob: -5.124867916107178
    8. '   ' → logprob: -5.499867916107178
    9. '),' → logprob: -5.499867916107178
    10. ' print' → logprob: -6.124867916107178

Token 217: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6418477892875671
    2. ' *' → logprob: -0.7668477892875671
    3. ')' → logprob: -4.766847610473633
    4. ' )' → logprob: -8.641847610473633
    5. ' ' → logprob: -9.016847610473633
    6. ')*' → logprob: -9.391847610473633
    7. '*)' → logprob: -9.391847610473633
    8. ' ' → logprob: -10.016847610473633
    9. '*b' → logprob: -10.641847610473633
    10. '*A' → logprob: -10.766847610473633

Token 218: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02631957456469536
    2. ' B' → logprob: -3.6513195037841797
    3. ' ' → logprob: -11.02631950378418
    4. ')' → logprob: -13.77631950378418
    5. ' ' → logprob: -14.02631950378418
    6. 'A' → logprob: -15.27631950378418
    7. '	B' → logprob: -16.15131950378418
    8. '100' → logprob: -16.27631950378418
    9. '9' → logprob: -16.27631950378418
    10. '8' → logprob: -16.40131950378418

Token 219: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019266240298748016
    2. ')
' → logprob: -4.144266128540039
    3. 'print' → logprob: -6.644266128540039
    4. ' )' → logprob: -6.769266128540039
    5. 'if' → logprob: -9.269266128540039
    6. '*' → logprob: -9.269266128540039
    7. '   ' → logprob: -9.519266128540039
    8. ')
' → logprob: -9.519266128540039
    9. '))' → logprob: -9.644266128540039
    10. ' )
' → logprob: -9.894266128540039

Token 220: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0193769633769989
    2. 'print' → logprob: -4.144376754760742
    3. ' if' → logprob: -5.894376754760742
    4. '   ' → logprob: -7.894376754760742
    5. '
' → logprob: -9.019376754760742
    6. ' print' → logprob: -10.269376754760742
    7. ' ' → logprob: -11.519376754760742
    8. '*' → logprob: -12.019376754760742
    9. 'A' → logprob: -12.269376754760742
    10. ',' → logprob: -12.269376754760742

Token 221: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10207293182611465
    2. 'print' → logprob: -2.3520729541778564
    3. ' if' → logprob: -6.477072715759277
    4. 'else' → logprob: -9.352072715759277
    5. ' print' → logprob: -9.727072715759277
    6. '   ' → logprob: -9.727072715759277
    7. '#' → logprob: -9.852072715759277
    8. ' ' → logprob: -11.352072715759277
    9. 'result' → logprob: -11.727072715759277
    10. '```' → logprob: -11.727072715759277

Token 222: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014850820414721966
    2. ':
' → logprob: -4.264850616455078
    3. ' :' → logprob: -7.389850616455078
    4. 'print' → logprob: -10.389850616455078
    5. ' :
' → logprob: -10.389850616455078
    6. ':#' → logprob: -13.264850616455078
    7. 'if' → logprob: -13.389850616455078
    8. '#' → logprob: -13.639850616455078
    9. ' print' → logprob: -14.014850616455078
    10. ',' → logprob: -14.389850616455078

Token 223: 'au' (ID: 753)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06469764560461044
    2. ':
' → logprob: -4.189697742462158
    3. 'print' → logprob: -4.439697742462158
    4. ' :' → logprob: -4.814697742462158
    5. ' print' → logprob: -4.814697742462158
    6. '#' → logprob: -4.939697742462158
    7. ')' → logprob: -4.939697742462158
    8. '   ' → logprob: -6.689697742462158
    9. ' ' → logprob: -6.689697742462158
    10. ' #' → logprob: -7.439697742462158

Token 224: ' moins' (ID: 15924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2939434349536896
    2. '#' → logprob: -1.9189434051513672
    3. '   ' → logprob: -3.293943405151367
    4. '```' → logprob: -4.043943405151367
    5. ' else' → logprob: -4.793943405151367
    6. 'print' → logprob: -5.168943405151367
    7. ' ' → logprob: -5.543943405151367
    8. 'd' → logprob: -5.668943405151367
    9. 'x' → logprob: -6.043943405151367
    10. 'moins' → logprob: -6.168943405151367

Token 225: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0448646545410156
    2. ' l' → logprob: -1.0448646545410156
    3. 'une' → logprob: -2.0448646545410156
    4. 'A' → logprob: -3.4198646545410156
    5. ' si' → logprob: -3.4198646545410156
    6. ' une' → logprob: -3.7948646545410156
    7. ' A' → logprob: -3.9198646545410156
    8. ' ' → logprob: -4.169864654541016
    9. ')' → logprob: -4.669864654541016
    10. 'que' → logprob: -5.169864654541016

Token 226: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1944275051355362
    2. 'des' → logprob: -2.569427490234375
    3. 'A' → logprob: -3.194427490234375
    4. 'if' → logprob: -4.194427490234375
    5. ')' → logprob: -4.319427490234375
    6. '#' → logprob: -4.694427490234375
    7. ' de' → logprob: -4.944427490234375
    8. ' A' → logprob: -5.319427490234375
    9. 'de' → logprob: -5.569427490234375
    10. ' ' → logprob: -6.569427490234375

Token 227: ' nombres' (ID: 76205)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18294978141784668
    2. ' nombres' → logprob: -2.6829497814178467
    3. ' deux' → logprob: -3.6829497814178467
    4. ' A' → logprob: -3.8079497814178467
    5. 'de' → logprob: -4.182950019836426
    6. 'val' → logprob: -4.807950019836426
    7. ' ' → logprob: -4.932950019836426
    8. '#' → logprob: -5.182950019836426
    9. 'nombre' → logprob: -5.557950019836426
    10. ' valeurs' → logprob: -5.807950019836426

Token 228: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.09565787017345428
    2. 'est' → logprob: -3.0956578254699707
    3. '>' → logprob: -3.5956578254699707
    4. ' >' → logprob: -5.095657825469971
    5. ' dépasse' → logprob: -5.220657825469971
    6. 'n' → logprob: -6.345657825469971
    7. 'des' → logprob: -6.595657825469971
    8. ' des' → logprob: -6.845657825469971
    9. 'A' → logprob: -7.345657825469971
    10. '#' → logprob: -7.970657825469971

Token 229: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1138063371181488
    2. ' >' → logprob: -2.4888062477111816
    3. ' supérieur' → logprob: -3.8638062477111816
    4. 'sup' → logprob: -5.863806247711182
    5. ')' → logprob: -8.61380672454834
    6. ' sup' → logprob: -8.86380672454834
    7. 'strict' → logprob: -9.23880672454834
    8. 'greater' → logprob: -9.73880672454834
    9. 'super' → logprob: -10.23880672454834
    10. ' ' → logprob: -10.36380672454834

Token 230: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.009321209043264389
    2. ' <' → logprob: -5.384321212768555
    3. '<' → logprob: -6.009321212768555
    4. 'e' → logprob: -7.509321212768555
    5. ' inférieur' → logprob: -7.759321212768555
    6. ')' → logprob: -7.884321212768555
    7. 'rement' → logprob: -8.259321212768555
    8. ' ' → logprob: -9.259321212768555
    9. 'ément' → logprob: -9.884321212768555
    10. ' strict' → logprob: -10.009321212768555

Token 231: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6352730393409729
    2. ' supérieur' → logprob: -1.1352729797363281
    3. 'sup' → logprob: -2.010272979736328
    4. 'super' → logprob: -4.760272979736328
    5. ' >' → logprob: -5.885272979736328
    6. ' sup' → logprob: -6.385272979736328
    7. 'greater' → logprob: -7.010272979736328
    8. ')' → logprob: -8.510272979736328
    9. 'plus' → logprob: -8.635272979736328
    10. ' greater' → logprob: -8.760272979736328

Token 232: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43115535378456116
    2. 'à' → logprob: -1.0561553239822388
    3. ' ' → logprob: -6.806155204772949
    4. '9' → logprob: -7.306155204772949
    5. ')' → logprob: -8.43115520477295
    6. ''à' → logprob: -8.93115520477295
    7. 'a' → logprob: -9.30615520477295
    8. '),' → logprob: -10.18115520477295
    9. '7' → logprob: -10.18115520477295
    10. 'À' → logprob: -10.43115520477295

Token 233: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.006716436706483364
    2. ' ' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.50671672821045
    4. ')' → logprob: -15.38171672821045
    5. ' neuf' → logprob: -15.75671672821045
    6. '10' → logprob: -16.381715774536133
    7. '  ' → logprob: -17.506715774536133
    8. '９' → logprob: -17.881715774536133
    9. ' nine' → logprob: -17.881715774536133
    10. '```' → logprob: -18.256715774536133

Token 234: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. ' neuf' → logprob: -16.875261306762695
    4. '10' → logprob: -17.375261306762695
    5. ')' → logprob: -17.875261306762695
    6. ' ' → logprob: -18.125261306762695
    7. '09' → logprob: -18.875261306762695
    8. '  ' → logprob: -18.875261306762695
    9. '９' → logprob: -18.875261306762695
    10. '   ' → logprob: -19.187761306762695

Token 235: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39520037174224854
    2. ')' → logprob: -1.7702003717422485
    3. '),' → logprob: -2.145200252532959
    4. '):
' → logprob: -3.770200252532959
    5. ':' → logprob: -4.270200252532959
    6. ' ):' → logprob: -7.020200252532959
    7. ' )' → logprob: -8.020200729370117
    8. ' ),' → logprob: -8.145200729370117
    9. ' :' → logprob: -9.145200729370117
    10. 'print' → logprob: -9.395200729370117

Token 236: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03502481430768967
    2. ':
' → logprob: -3.410024881362915
    3. 'print' → logprob: -6.910024642944336
    4. ' :' → logprob: -8.410024642944336
    5. 'else' → logprob: -9.910024642944336
    6. ' :
' → logprob: -10.660024642944336
    7. ' print' → logprob: -11.035024642944336
    8. 'if' → logprob: -11.160024642944336
    9. ',' → logprob: -11.160024642944336
    10. '#' → logprob: -11.410024642944336

Token 237: '#' (ID: 2)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.44284358620643616
    2. 'print' → logprob: -1.1928435564041138
    3. '   ' → logprob: -3.1928436756134033
    4. ' ' → logprob: -5.567843437194824
    5. ' if' → logprob: -6.192843437194824
    6. 'if' → logprob: -6.192843437194824
    7. '    ' → logprob: -6.817843437194824
    8. '    
' → logprob: -7.067843437194824
    9. '#' → logprob: -7.192843437194824
    10. '
' → logprob: -7.942843437194824

Token 238: '  ' (ID: 256)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2022394835948944
    2. ' print' → logprob: -1.7022395133972168
    3. '   ' → logprob: -8.702239036560059
    4. '#' → logprob: -8.952239036560059
    5. 'A' → logprob: -9.077239036560059
    6. ' pass' → logprob: -9.327239036560059
    7. ' ' → logprob: -9.452239036560059
    8. ' A' → logprob: -9.702239036560059
    9. 'C' → logprob: -10.202239036560059
    10. 'pr' → logprob: -10.327239036560059

Token 239: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016161762177944183
    2. ' print' → logprob: -4.141161918640137
    3. 'pr' → logprob: -10.016161918640137
    4. 'A' → logprob: -10.766161918640137
    5. ' ' → logprob: -11.141161918640137
    6. 'prin' → logprob: -11.141161918640137
    7. '   ' → logprob: -12.141161918640137
    8. 'pass' → logprob: -12.266161918640137
    9. ' A' → logprob: -12.391161918640137
    10. '#' → logprob: -12.766161918640137

Token 240: ' retourne' (ID: 178818)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10470698028802872
    2. ' print' → logprob: -2.3547070026397705
    3. 'pr' → logprob: -5.729706764221191
    4. ' imprime' → logprob: -7.854706764221191
    5. 'prin' → logprob: -8.979706764221191
    6. ' ' → logprob: -9.104706764221191
    7. '   ' → logprob: -9.479706764221191
    8. 'prit' → logprob: -9.479706764221191
    9. ' prin' → logprob: -9.979706764221191
    10. ' affiche' → logprob: -10.292206764221191

Token 241: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2907765507698059
    2. '0' → logprob: -2.790776491165161
    3. ' A' → logprob: -3.290776491165161
    4. ' -' → logprob: -3.290776491165161
    5. 'A' → logprob: -3.665776491165161
    6. '"' → logprob: -3.790776491165161
    7. ' ' → logprob: -3.915776491165161
    8. 'max' → logprob: -4.16577672958374
    9. ' max' → logprob: -4.41577672958374
    10. '100' → logprob: -5.66577672958374

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.75002670288086
    3. '100' → logprob: -13.62502670288086
    4. '10' → logprob: -14.25002670288086
    5. '9' → logprob: -14.62502670288086
    6. 'A' → logprob: -14.62502670288086
    7. '999' → logprob: -14.75002670288086
    8. '2' → logprob: -15.12502670288086
    9. '(' → logprob: -15.81252670288086
    10. '-' → logprob: -15.87502670288086

Token 243: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00027349460287950933
    2. '
' → logprob: -8.750273704528809
    3. 'print' → logprob: -9.375273704528809
    4. ' if' → logprob: -10.625273704528809
    5. 'result' → logprob: -12.750273704528809
    6. '```' → logprob: -13.250273704528809
    7. 'max' → logprob: -14.250273704528809
    8. 'i' → logprob: -16.500272750854492
    9. '
' → logprob: -16.500272750854492
    10. '

' → logprob: -17.000272750854492

Token 244: ' signal' (ID: 12884)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.39556989073753357
    2. 'sign' → logprob: -1.645569920539856
    3. 'indi' → logprob: -2.6455698013305664
    4. ' ind' → logprob: -2.8955698013305664
    5. 'signal' → logprob: -5.145569801330566
    6. 'l' → logprob: -7.145569801330566
    7. ' signal' → logprob: -7.770569801330566
    8. 'la' → logprob: -9.020569801330566
    9. 'respect' → logprob: -9.020569801330566
    10. ' sign' → logprob: -10.395569801330566

Token 245: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.001047339290380478
    2. 'e' → logprob: -6.876047134399414
    3. ' er' → logprob: -11.751047134399414
    4. '#' → logprob: -13.376047134399414
    5. 'ent' → logprob: -14.001047134399414
    6. 'ER' → logprob: -14.251047134399414
    7. ' e' → logprob: -14.501047134399414
    8. '­er' → logprob: -14.626047134399414
    9. 'ner' → logprob: -14.751047134399414
    10. 'ant' → logprob: -15.251047134399414

Token 246: ' une' (ID: 2463)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5150473117828369
    2. ' -' → logprob: -1.015047311782837
    3. ' une' → logprob: -4.265047073364258
    4. ' ' → logprob: -4.765047073364258
    5. '-l' → logprob: -5.640047073364258
    6. ' un' → logprob: -5.890047073364258
    7. ' la' → logprob: -6.015047073364258
    8. '9' → logprob: -6.390047073364258
    9. ' l' → logprob: -6.890047073364258
    10. '<|end|>' → logprob: -6.890047073364258

Token 247: ' condition' (ID: 7060)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.804526150226593
    2. ' problème' → logprob: -1.8045260906219482
    3. 'e' → logprob: -2.8045260906219482
    4. 'é' → logprob: -2.9295260906219482
    5. ' signal' → logprob: -3.1795260906219482
    6. 'entrée' → logprob: -3.8045260906219482
    7. 'error' → logprob: -3.9295260906219482
    8. 'invalid' → logprob: -3.9295260906219482
    9. ' résultat' → logprob: -4.054526329040527
    10. ' error' → logprob: -4.054526329040527

Token 248: ' non' (ID: 2893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4286411702632904
    2. 'else' → logprob: -1.9286412000656128
    3. ':' → logprob: -2.6786410808563232
    4. 'if' → logprob: -3.3036410808563232
    5. ' -' → logprob: -4.303641319274902
    6. ' else' → logprob: -4.928641319274902
    7. 'd' → logprob: -5.053641319274902
    8. 's' → logprob: -5.428641319274902
    9. ' print' → logprob: -5.428641319274902
    10. 'result' → logprob: -5.553641319274902

Token 249: ' acceptable' (ID: 34028)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4225957691669464
    2. 'valid' → logprob: -1.172595739364624
    3. ' valide' → logprob: -3.797595739364624
    4. ' valid' → logprob: -5.422595977783203
    5. 'acceptable' → logprob: -5.797595977783203
    6. 'accept' → logprob: -6.172595977783203
    7. 's' → logprob: -6.797595977783203
    8. 'respect' → logprob: -7.172595977783203
    9. ' val' → logprob: -8.547595977783203
    10. 'autor' → logprob: -8.922595977783203

Token 250: ' selon' (ID: 27571)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021168487146496773
    2. '
' → logprob: -3.8961684703826904
    3. ' if' → logprob: -8.02116870880127
    4. 'print' → logprob: -8.77116870880127
    5. '```' → logprob: -10.14616870880127
    6. 'result' → logprob: -10.27116870880127
    7. '
' → logprob: -11.64616870880127
    8. 'max' → logprob: -11.64616870880127
    9. '

' → logprob: -11.77116870880127
    10. '' → logprob: -12.02116870880127

Token 251: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2131209522485733
    2. 'le' → logprob: -2.213120937347412
    3. 'les' → logprob: -3.088120937347412
    4. ' la' → logprob: -3.713120937347412
    5. 'l' → logprob: -4.713120937347412
    6. ' les' → logprob: -5.963120937347412
    7. ' le' → logprob: -7.588120937347412
    8. 'ce' → logprob: -8.58812141418457
    9. 'the' → logprob: -9.08812141418457
    10. '#' → logprob: -9.96312141418457

Token 252: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9000771045684814
    2. ''' → logprob: -1.1500771045684814
    3. 'a' → logprob: -2.1500771045684814
    4. 'en' → logprob: -3.6500771045684814
    5. ''in' → logprob: -3.7750771045684814
    6. 'if' → logprob: -4.275076866149902
    7. 'elif' → logprob: -4.275076866149902
    8. ''en' → logprob: -4.400076866149902
    9. 'A' → logprob: -4.650076866149902
    10. ''ex' → logprob: -4.650076866149902

Token 253: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.539247453212738
    2. 'en' → logprob: -1.1642475128173828
    3. 'elif' → logprob: -3.789247512817383
    4. 'é' → logprob: -4.039247512817383
    5. 'else' → logprob: -4.289247512817383
    6. 'instruction' → logprob: -4.414247512817383
    7. 's' → logprob: -4.539247512817383
    8. 'instructions' → logprob: -5.039247512817383
    9. 'ex' → logprob: -5.289247512817383
    10. '```' → logprob: -5.914247512817383

Token 254: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.0047938222996890545
    2. 'onc' → logprob: -5.754793643951416
    3. 'once' → logprob: -6.754793643951416
    4. 'non' → logprob: -8.254794120788574
    5. 'on' → logprob: -8.879794120788574
    6. 'oncer' → logprob: -10.004794120788574
    7. 'nonce' → logprob: -13.254794120788574
    8. 'onces' → logprob: -14.379794120788574
    9. 'cé' → logprob: -14.504794120788574
    10. 'um' → logprob: -15.129794120788574

Token 255: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004265044699423015
    2. '
' → logprob: -7.875426292419434
    3. ' if' → logprob: -10.500426292419434
    4. 'max' → logprob: -12.375426292419434
    5. 'print' → logprob: -12.375426292419434
    6. '```' → logprob: -12.625426292419434
    7. 'result' → logprob: -12.875426292419434
    8. 'i' → logprob: -13.125426292419434
    9. 's' → logprob: -14.875426292419434
    10. ' 
' → logprob: -15.000426292419434

Token 256: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10071209818124771
    2. 'print' → logprob: -2.3507120609283447
    3. 'result' → logprob: -7.850712299346924
    4. '```' → logprob: -9.225711822509766
    5. ' if' → logprob: -11.725711822509766
    6. '
' → logprob: -12.850711822509766
    7. '``' → logprob: -13.475711822509766
    8. 'return' → logprob: -14.100711822509766
    9. 'output' → logprob: -14.100711822509766
    10. 'max' → logprob: -14.850711822509766

Token 257: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3162725269794464
    2. 'print' → logprob: -1.316272497177124
    3. 'result' → logprob: -5.816272735595703
    4. ' if' → logprob: -11.066272735595703
    5. 'res' → logprob: -12.191272735595703
    6. '```' → logprob: -13.441272735595703
    7. 'r' → logprob: -13.566272735595703
    8. 'answer' → logprob: -13.691272735595703
    9. 'output' → logprob: -14.066272735595703
    10. ' print' → logprob: -14.191272735595703

Token 258: ''op' (ID: 70747)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24860352277755737
    2. 'if' → logprob: -1.9986035823822021
    3. 'result' → logprob: -2.998603582382202
    4. 'e' → logprob: -4.998603343963623
    5. 'im' → logprob: -5.123603343963623
    6. '#' → logprob: -5.373603343963623
    7. '```' → logprob: -5.373603343963623
    8. 'r' → logprob: -5.873603343963623
    9. 'a' → logprob: -6.373603343963623
    10. 'max' → logprob: -6.873603343963623

Token 259: 'érateur' (ID: 108528)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16352130472660065
    2. 'er' → logprob: -2.9135212898254395
    3. 'print' → logprob: -3.1635212898254395
    4. 'os' → logprob: -4.9135212898254395
    5. 'ération' → logprob: -4.9135212898254395
    6. 'r' → logprob: -5.0385212898254395
    7. 'rés' → logprob: -5.5385212898254395
    8. '=' → logprob: -5.6635212898254395
    9. 'if' → logprob: -5.6635212898254395
    10. '_result' → logprob: -5.6635212898254395

Token 260: ' ter' (ID: 3069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36966896057128906
    2. 'print' → logprob: -1.744668960571289
    3. ' result' → logprob: -2.619668960571289
    4. ' print' → logprob: -3.869668960571289
    5. '=' → logprob: -3.994668960571289
    6. ' =' → logprob: -4.369668960571289
    7. ' résultat' → logprob: -5.744668960571289
    8. ' resultat' → logprob: -6.244668960571289
    9. 'output' → logprob: -7.494668960571289
    10. 'if' → logprob: -7.994668960571289

Token 261: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.016062287613749504
    2. 'er' → logprob: -5.266062259674072
    3. 'n' → logprob: -5.391062259674072
    4. 'érateur' → logprob: -6.141062259674072
    5. 'r' → logprob: -6.766062259674072
    6. 'ern' → logprob: -7.641062259674072
    7. 'ra' → logprob: -8.14106273651123
    8. 'ary' → logprob: -8.26606273651123
    9. '?' → logprob: -8.39106273651123
    10. 'ner' → logprob: -8.39106273651123

Token 262: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3215523362159729
    2. ' result' → logprob: -2.321552276611328
    3. 'print' → logprob: -2.446552276611328
    4. '-' → logprob: -3.571552276611328
    5. ' :' → logprob: -4.571552276611328
    6. ' -' → logprob: -4.571552276611328
    7. ':' → logprob: -4.571552276611328
    8. ' print' → logprob: -4.696552276611328
    9. ' A' → logprob: -5.821552276611328
    10. 'res' → logprob: -5.946552276611328

Token 263: ' ...' (ID: 2550)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6880136132240295
    2. ' -' → logprob: -1.3130135536193848
    3. '-' → logprob: -2.8130135536193848
    4. 'A' → logprob: -2.8130135536193848
    5. ' (' → logprob: -3.0630135536193848
    6. ' max' → logprob: -3.3130135536193848
    7. 'max' → logprob: -4.938013553619385
    8. ' ' → logprob: -5.063013553619385
    9. '(A' → logprob: -5.563013553619385
    10. ' product' → logprob: -6.313013553619385

Token 264: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8203401565551758
    2. '-' → logprob: -1.4453401565551758
    3. ' -' → logprob: -1.9453401565551758
    4. ' else' → logprob: -1.9453401565551758
    5. 'A' → logprob: -3.820340156555176
    6. ' A' → logprob: -4.695340156555176
    7. '_else' → logprob: -6.195340156555176
    8. ' ' → logprob: -6.695340156555176
    9. '```' → logprob: -7.820340156555176
    10. '...' → logprob: -7.945340156555176

Token 265: ' permet' (ID: 11798)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6650764346122742
    2. 'print' → logprob: -1.540076494216919
    3. ' result' → logprob: -2.665076494216919
    4. 'A' → logprob: -3.040076494216919
    5. ' print' → logprob: -3.665076494216919
    6. ':' → logprob: -3.665076494216919
    7. ' est' → logprob: -3.915076494216919
    8. ' A' → logprob: -4.04007625579834
    9. 'res' → logprob: -4.91507625579834
    10. ' produit' → logprob: -5.16507625579834

Token 266: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6457799673080444
    2. ' de' → logprob: -0.7707799673080444
    3. 'd' → logprob: -4.895780086517334
    4. 'de' → logprob: -5.520780086517334
    5. ' ' → logprob: -7.395780086517334
    6. ' A' → logprob: -8.270779609680176
    7. 'print' → logprob: -8.395779609680176
    8. 'A' → logprob: -9.020779609680176
    9. 'return' → logprob: -9.270779609680176
    10. ' print' → logprob: -9.270779609680176

Token 267: ''effect' (ID: 198544)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40046873688697815
    2. 'aff' → logprob: -2.4004688262939453
    3. 'A' → logprob: -3.1504688262939453
    4. 'return' → logprob: -3.1504688262939453
    5. 'expr' → logprob: -3.6504688262939453
    6. ' retourner' → logprob: -3.6504688262939453
    7. ' print' → logprob: -4.275468826293945
    8. 'é' → logprob: -4.650468826293945
    9. 'e' → logprob: -4.650468826293945
    10. 'r' → logprob: -4.900468826293945

Token 268: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.0013934499584138393
    2. 'ue' → logprob: -7.3763933181762695
    3. 'ué' → logprob: -8.12639331817627
    4. 'u' → logprob: -8.37639331817627
    5. 'er' → logprob: -9.50139331817627
    6. 'uée' → logprob: -9.62639331817627
    7. 'uez' → logprob: -10.62639331817627
    8. 'rer' → logprob: -10.62639331817627
    9. '#' → logprob: -11.62639331817627
    10. 'uere' → logprob: -12.00139331817627

Token 269: ' cette' (ID: 7696)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.45276686549186707
    2. ' print' → logprob: -1.0777668952941895
    3. ' A' → logprob: -4.4527668952941895
    4. 'A' → logprob: -5.2027668952941895
    5. '-' → logprob: -6.3277668952941895
    6. ' -' → logprob: -6.5777668952941895
    7. ' le' → logprob: -6.8277668952941895
    8. ' ' → logprob: -6.8277668952941895
    9. ' une' → logprob: -7.8277668952941895
    10. ' la' → logprob: -8.827766418457031

Token 270: ' sélection' (ID: 43472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011463687755167484
    2. 'result' → logprob: -4.511463642120361
    3. 'rés' → logprob: -9.01146411895752
    4. '#' → logprob: -9.13646411895752
    5. ' print' → logprob: -9.88646411895752
    6. 'prin' → logprob: -10.13646411895752
    7. 'product' → logprob: -11.01146411895752
    8. 'val' → logprob: -11.13646411895752
    9. '```' → logprob: -11.51146411895752
    10. 'produ' → logprob: -11.51146411895752

Token 271: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3895123302936554
    2. 'result' → logprob: -1.139512300491333
    3. 'res' → logprob: -7.139512538909912
    4. ' result' → logprob: -7.764512538909912
    5. ' print' → logprob: -8.014512062072754
    6. 'answer' → logprob: -8.139512062072754
    7. 'output' → logprob: -8.764512062072754
    8. ':' → logprob: -9.139512062072754
    9. '
' → logprob: -9.139512062072754
    10. 'r' → logprob: -9.389512062072754

Token 272: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023443729151040316
    2. ' print' → logprob: -6.127344608306885
    3. 'result' → logprob: -10.002344131469727
    4. '-print' → logprob: -10.502344131469727
    5. 'une' → logprob: -11.127344131469727
    6. '1' → logprob: -11.377344131469727
    7. '```' → logprob: -11.627344131469727
    8. 'im' → logprob: -11.627344131469727
    9. 'pr' → logprob: -11.877344131469727
    10. '-' → logprob: -11.877344131469727

Token 273: ' ligne' (ID: 19583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5898746252059937
    2. 'result' → logprob: -1.0898746252059937
    3. 'se' → logprob: -3.339874744415283
    4. 'val' → logprob: -4.089874744415283
    5. ' seule' → logprob: -4.089874744415283
    6. ' print' → logprob: -4.589874744415283
    7. 'rés' → logprob: -5.089874744415283
    8. ' result' → logprob: -5.214874744415283
    9. ' résultat' → logprob: -5.214874744415283
    10. ' seul' → logprob: -5.589874744415283

Token 274: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03397403284907341
    2. 'result' → logprob: -3.4089739322662354
    3. ' print' → logprob: -8.283973693847656
    4. ' result' → logprob: -10.658973693847656
    5. 'answer' → logprob: -11.033973693847656
    6. 'res' → logprob: -11.783973693847656
    7. 'product' → logprob: -12.033973693847656
    8. 'output' → logprob: -12.158973693847656
    9. '
' → logprob: -12.283973693847656
    10. 'pr' → logprob: -12.908973693847656

Token 275: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06997744739055634
    2. 'result' → logprob: -2.6949775218963623
    3. 'answer' → logprob: -11.319977760314941
    4. 'res' → logprob: -11.944977760314941
    5. ' print' → logprob: -11.944977760314941
    6. 'output' → logprob: -12.819977760314941
    7. 'product' → logprob: -12.819977760314941
    8. 'C' → logprob: -13.319977760314941
    9. ' result' → logprob: -13.319977760314941
    10. 'max' → logprob: -13.444977760314941

Token 276: ' Enfin' (ID: 85274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1603129804134369
    2. 'result' → logprob: -1.9103130102157593
    3. ' print' → logprob: -10.41031265258789
    4. 'product' → logprob: -11.28531265258789
    5. 'answer' → logprob: -11.41031265258789
    6. ' result' → logprob: -11.41031265258789
    7. 'res' → logprob: -11.66031265258789
    8. 'output' → logprob: -11.91031265258789
    9. 'r' → logprob: -12.91031265258789
    10. '```' → logprob: -13.41031265258789

Token 277: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01853196881711483
    2. ' print' → logprob: -4.018531799316406
    3. 'result' → logprob: -8.518531799316406
    4. '
' → logprob: -8.768531799316406
    5. 'r' → logprob: -11.893531799316406
    6. ' result' → logprob: -12.143531799316406
    7. 'prin' → logprob: -12.143531799316406
    8. '#' → logprob: -13.768531799316406
    9. '

' → logprob: -13.768531799316406
    10. ':' → logprob: -13.893531799316406

Token 278: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011899876408278942
    2. 'result' → logprob: -6.751190185546875
    3. ' print' → logprob: -10.876190185546875
    4. 'prin' → logprob: -14.626190185546875
    5. ' result' → logprob: -15.626190185546875
    6. 'r' → logprob: -15.626190185546875
    7. 'res' → logprob: -16.876190185546875
    8. 'pr' → logprob: -16.876190185546875
    9. ' resultat' → logprob: -18.251190185546875
    10. 'rés' → logprob: -18.251190185546875

Token 279: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05246981233358383
    2. '(print' → logprob: -3.8024697303771973
    3. '(A' → logprob: -3.9274697303771973
    4. '(max' → logprob: -4.927469730377197
    5. '(
' → logprob: -7.302469730377197
    6. '((' → logprob: -7.552469730377197
    7. '()' → logprob: -8.052470207214355
    8. '(

' → logprob: -9.177470207214355
    9. ' (' → logprob: -9.302470207214355
    10. 'print' → logprob: -10.052470207214355

Token 280: ' affiche' (ID: 127479)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.5047460198402405
    2. '(' → logprob: -1.0047459602355957
    3. '(max' → logprob: -4.254745960235596
    4. '(A' → logprob: -4.629745960235596
    5. 'print' → logprob: -5.754745960235596
    6. '((' → logprob: -6.629745960235596
    7. '(
' → logprob: -7.129745960235596
    8. '(f' → logprob: -7.754745960235596
    9. '(min' → logprob: -8.504746437072754
    10. '()' → logprob: -9.379746437072754

Token 281: ' le' (ID: 505)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3187650442123413
    2. '(' → logprob: -2.568765163421631
    3. '(max' → logprob: -2.568765163421631
    4. '(print' → logprob: -2.943765163421631
    5. '(-' → logprob: -3.068765163421631
    6. '((' → logprob: -4.443765163421631
    7. 'print' → logprob: -5.068765163421631
    8. '(
' → logprob: -7.568765163421631
    9. 'max' → logprob: -8.068764686584473
    10. 'A' → logprob: -8.068764686584473

Token 282: ' résultat' (ID: 62556)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3817062973976135
    2. 'A' → logprob: -1.7567062377929688
    3. 'result' → logprob: -2.8817062377929688
    4. '(' → logprob: -2.8817062377929688
    5. ' A' → logprob: -4.506706237792969
    6. ' (' → logprob: -5.131706237792969
    7. 'produ' → logprob: -5.631706237792969
    8. 'product' → logprob: -5.631706237792969
    9. 'print' → logprob: -6.256706237792969
    10. 'rés' → logprob: -6.631706237792969

Token 283: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015514317899942398
    2. '(print' → logprob: -4.390514373779297
    3. '(' → logprob: -6.265514373779297
    4. 'result' → logprob: -7.765514373779297
    5. '(A' → logprob: -8.015514373779297
    6. '(result' → logprob: -8.640514373779297
    7. '(max' → logprob: -9.640514373779297
    8. '(
' → logprob: -10.015514373779297
    9. '(min' → logprob: -10.640514373779297
    10. '((' → logprob: -12.140514373779297

Token 284: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6578413248062134
    2. 'la' → logprob: -0.7828413248062134
    3. 'l' → logprob: -3.907841205596924
    4. ')' → logprob: -6.657841205596924
    5. 'stdout' → logprob: -7.282841205596924
    6. 'x' → logprob: -8.282841682434082
    7. '#' → logprob: -8.282841682434082
    8. 'a' → logprob: -8.532841682434082
    9. 'sys' → logprob: -8.532841682434082
    10. 'console' → logprob: -8.782841682434082

Token 285: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02725686877965927
    2. ''écran' → logprob: -3.777256965637207
    3. 'print' → logprob: -6.152256965637207
    4. 'im' → logprob: -8.027256965637207
    5. '’écran' → logprob: -8.277256965637207
    6. ''utilisateur' → logprob: -8.527256965637207
    7. 'end' → logprob: -8.777256965637207
    8. 'e' → logprob: -8.902256965637207
    9. 'igne' → logprob: -9.152256965637207
    10. 'imité' → logprob: -9.527256965637207

Token 286: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00032378386822529137
    2. '(print' → logprob: -8.375324249267578
    3. '(' → logprob: -10.250324249267578
    4. '(
' → logprob: -10.625324249267578
    5. '
' → logprob: -11.000324249267578
    6. ' print' → logprob: -12.000324249267578
    7. 'result' → logprob: -12.875324249267578
    8. '(A' → logprob: -13.500324249267578
    9. '(max' → logprob: -13.750324249267578
    10. 'max' → logprob: -14.125324249267578

Token 287: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. ' print' → logprob: -17.125
    4. 'result' → logprob: -17.375
    5. '
' → logprob: -20.375
    6. 'pr' → logprob: -21.25
    7. 'prin' → logprob: -21.375
    8. '#' → logprob: -23.0
    9. '(print' → logprob: -23.125
    10. '#print' → logprob: -23.25

Token 288: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.4352395534515381
    2. '(' → logprob: -1.185239553451538
    3. '((' → logprob: -3.185239553451538
    4. '(max' → logprob: -5.185239791870117
    5. '(-' → logprob: -8.935239791870117
    6. ' (' → logprob: -9.435239791870117
    7. '(print' → logprob: -11.435239791870117
    8. '("' → logprob: -12.310239791870117
    9. '(MAX' → logprob: -12.435239791870117
    10. '(
' → logprob: -12.560239791870117

Token 289: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20349270105361938
    2. '*' → logprob: -1.7034926414489746
    3. ' if' → logprob: -6.328492641448975
    4. ',' → logprob: -8.828493118286133
    5. 'if' → logprob: -8.953493118286133
    6. ' ' → logprob: -11.578493118286133
    7. ' ,' → logprob: -12.328493118286133
    8. ')' → logprob: -13.578493118286133
    9. '```' → logprob: -14.578493118286133
    10. '*,' → logprob: -14.828493118286133

Token 290: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06196802109479904
    2. ' B' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.061967849731445
    4. '	B' → logprob: -17.561967849731445
    5. ' ' → logprob: -18.311967849731445
    6. '  ' → logprob: -19.186967849731445
    7. 'b' → logprob: -20.311967849731445
    8. ')' → logprob: -20.311967849731445
    9. '   ' → logprob: -20.311967849731445
    10. '_B' → logprob: -20.561967849731445

Token 291: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12695226073265076
    2. 'if' → logprob: -2.1269521713256836
    3. ')' → logprob: -11.001952171325684
    4. ' ' → logprob: -11.876952171325684
    5. '```' → logprob: -15.251952171325684
    6. '   ' → logprob: -15.626952171325684
    7. '  ' → logprob: -16.876953125
    8. ',' → logprob: -17.001953125
    9. ' ' → logprob: -17.501953125
    10. '	if' → logprob: -17.501953125

Token 292: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015024791937321424
    2. ' max' → logprob: -6.501502513885498
    3. '(max' → logprob: -15.87650203704834
    4. ' ' → logprob: -18.501502990722656
    5. '	max' → logprob: -19.626502990722656
    6. '   ' → logprob: -19.876502990722656
    7. 'A' → logprob: -21.251502990722656
    8. 'ma' → logprob: -21.501502990722656
    9. '  ' → logprob: -21.626502990722656
    10. '[max' → logprob: -21.751502990722656

Token 293: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -10.750029563903809
    3. ' (' → logprob: -11.750029563903809
    4. ')' → logprob: -17.500028610229492
    5. ' ' → logprob: -18.875028610229492
    6. 'A' → logprob: -19.125028610229492
    7. ',' → logprob: -19.375028610229492
    8. '(B' → logprob: -19.750028610229492
    9. '(
' → logprob: -19.875028610229492
    10. '(I' → logprob: -20.125028610229492

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006285638664849102
    2. ' ,' → logprob: -7.500628471374512
    3. ',B' → logprob: -9.625628471374512
    4. ')' → logprob: -12.875628471374512
    5. '(B' → logprob: -13.125628471374512
    6. 'B' → logprob: -13.250628471374512
    7. ',A' → logprob: -13.625628471374512
    8. '(A' → logprob: -14.000628471374512
    9. ' B' → logprob: -14.375628471374512
    10. 'A' → logprob: -15.500628471374512

Token 295: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20141392946243286
    2. ' B' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.326414108276367
    4. ')' → logprob: -17.201414108276367
    5. 'b' → logprob: -17.701414108276367
    6. '	B' → logprob: -18.451414108276367
    7. ' ' → logprob: -19.076414108276367
    8. ',' → logprob: -19.326414108276367
    9. '_B' → logprob: -19.326414108276367
    10. '   ' → logprob: -20.076414108276367

Token 296: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009376833215355873
    2. ' <=' → logprob: -5.2593770027160645
    3. '<=' → logprob: -6.2593770027160645
    4. ')<=' → logprob: -6.6343770027160645
    5. ' )' → logprob: -7.0093770027160645
    6. '()' → logprob: -12.634376525878906
    7. ' ' → logprob: -15.634376525878906
    8. ']<=' → logprob: -15.884376525878906
    9. 'le' → logprob: -16.009376525878906
    10. '')' → logprob: -16.384376525878906

Token 297: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02332257851958275
    2. '<=' → logprob: -3.773322582244873
    3. ')' → logprob: -10.148322105407715
    4. ')<=' → logprob: -10.273322105407715
    5. ' ' → logprob: -13.398322105407715
    6. '()' → logprob: -13.773322105407715
    7. ' )' → logprob: -14.773322105407715
    8. ']<=' → logprob: -15.773322105407715
    9. '```' → logprob: -16.27332305908203
    10. ' ' → logprob: -16.77332305908203

Token 298: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.12692810595035553
    2. ' ' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.751928329467773
    4. '```' → logprob: -17.751928329467773
    5. '   ' → logprob: -18.501928329467773
    6. '  ' → logprob: -18.501928329467773
    7. '10' → logprob: -18.876928329467773
    8. '`' → logprob: -20.251928329467773
    9. ')' → logprob: -20.876928329467773
    10. '99' → logprob: -21.126928329467773

Token 299: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '09' → logprob: -21.250003814697266
    4. '```' → logprob: -21.250003814697266
    5. '   ' → logprob: -21.500003814697266
    6. '  ' → logprob: -22.375003814697266
    7. '９' → logprob: -22.750003814697266
    8. '99' → logprob: -23.000003814697266
    9. '
' → logprob: -23.000003814697266
    10. '۹' → logprob: -23.625003814697266

Token 300: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25192955136299133
    2. 'else' → logprob: -1.501929521560669
    3. '	else' → logprob: -15.25192928314209
    4. ')' → logprob: -17.251930236816406
    5. 'Else' → logprob: -17.501930236816406
    6. ' ' → logprob: -17.876930236816406
    7. '_else' → logprob: -17.876930236816406
    8. ' ' → logprob: -18.001930236816406
    9. '```' → logprob: -18.376930236816406
    10. ',' → logprob: -19.376930236816406

Token 301: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020354038861114532
    2. ' -' → logprob: -8.500203132629395
    3. ' ' → logprob: -21.00020408630371
    4. '−' → logprob: -21.75020408630371
    5. '(-' → logprob: -22.50020408630371
    6. '-print' → logprob: -22.62520408630371
    7. '\-' → logprob: -22.87520408630371
    8. '   ' → logprob: -23.12520408630371
    9. '
' → logprob: -23.37520408630371
    10. ' ' → logprob: -23.50020408630371

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. ')' → logprob: -19.375
    4. '１' → logprob: -21.0
    5. '```' → logprob: -21.25
    6. '   ' → logprob: -21.625
    7. '۱' → logprob: -22.0625
    8. '-' → logprob: -22.4375
    9. ' ' → logprob: -22.5
    10. '2' → logprob: -22.5

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -16.375
    5. ')`' → logprob: -16.375
    6. '())' → logprob: -17.25
    7. '`)' → logprob: -17.875
    8. '()' → logprob: -18.625
    9. '')' → logprob: -19.125
    10. ')#' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 301
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 169
Précision stricte (1ère position): 21.59%
Précision adaptée (1ère position): 21.59%
Précision (top 10): 56.15%
================================================================================
