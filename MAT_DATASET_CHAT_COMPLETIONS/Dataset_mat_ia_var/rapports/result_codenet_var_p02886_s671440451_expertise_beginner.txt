================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
d = input().split()
for i in range(len(d)):
    d[i] = int(d[i])
ans = 0
total = 0
for num in d:
    total = total + num
for i in range(len(d)):
    ans = ans + d[i] * (total - d[i])
print(ans // 2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39131131768226624
    2. '=' → logprob: -1.8913112878799438
    3. '[' → logprob: -2.8913114070892334
    4. 'e' → logprob: -3.0163114070892334
    5. '[i' → logprob: -3.8913114070892334
    6. 'i' → logprob: -4.266311168670654
    7. '.' → logprob: -4.516311168670654
    8. 'a' → logprob: -5.766311168670654
    9. '[:]' → logprob: -6.141311168670654
    10. 'p' → logprob: -6.266311168670654

Token 7: ' input' (ID: 3422)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.04754587262868881
    2. ' {}' → logprob: -3.172545909881592
    3. 'dict' → logprob: -5.547545909881592
    4. '{' → logprob: -8.297545433044434
    5. ' dict' → logprob: -9.297545433044434
    6. '[]' → logprob: -9.547545433044434
    7. 'input' → logprob: -9.922545433044434
    8. 'list' → logprob: -10.172545433044434
    9. '0' → logprob: -10.672545433044434
    10. ' ' → logprob: -10.672545433044434

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005769872572273016
    2. '('' → logprob: -5.380769729614258
    3. ''' → logprob: -7.255769729614258
    4. '("("' → logprob: -8.505769729614258
    5. '(
' → logprob: -9.255769729614258
    6. '"' → logprob: -10.005769729614258
    7. ')' → logprob: -11.005769729614258
    8. ' (' → logprob: -11.255769729614258
    9. '`' → logprob: -11.505769729614258
    10. '[' → logprob: -11.505769729614258

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008644474670290947
    2. 'strip' → logprob: -4.7586445808410645
    3. 'rstrip' → logprob: -10.633644104003906
    4. 'spl' → logprob: -13.133644104003906
    5. 'replace' → logprob: -13.383644104003906
    6. ' split' → logprob: -13.633644104003906
    7. 'isdigit' → logprob: -15.133644104003906
    8. 's' → logprob: -15.133644104003906
    9. 'rs' → logprob: -15.383644104003906
    10. 'sp' → logprob: -16.383644104003906

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02525017224252224
    2. '('' → logprob: -4.27524995803833
    3. '("("' → logprob: -4.77524995803833
    4. '()' → logprob: -6.65024995803833
    5. '(`' → logprob: -8.150250434875488
    6. '`' → logprob: -8.150250434875488
    7. '((' → logprob: -8.650250434875488
    8. ' (' → logprob: -9.275250434875488
    9. '```' → logprob: -9.275250434875488
    10. '(

' → logprob: -9.525250434875488

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7719312906265259
    2. 'a' → logprob: -1.2719312906265259
    3. 'd' → logprob: -2.1469311714172363
    4. 'A' → logprob: -3.5219311714172363
    5. 'c' → logprob: -3.6469311714172363
    6. '[' → logprob: -4.521931171417236
    7. 'count' → logprob: -4.521931171417236
    8. 'result' → logprob: -4.521931171417236
    9. 's' → logprob: -4.771931171417236
    10. 'arr' → logprob: -4.896931171417236

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4380946457386017
    2. ' ' → logprob: -1.4380946159362793
    3. '_' → logprob: -2.3130946159362793
    4. 'i' → logprob: -4.438094615936279
    5. ' _' → logprob: -6.188094615936279
    6. '  ' → logprob: -6.438094615936279
    7. ' ‌' → logprob: -7.563094615936279
    8. ' d' → logprob: -7.813094615936279
    9. ' item' → logprob: -7.813094615936279
    10. ' ' → logprob: -7.938094615936279

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4815068244934082
    2. ' in' → logprob: -0.9815068244934082
    3. ' ' → logprob: -5.356506824493408
    4. '_' → logprob: -6.606506824493408
    5. '  ' → logprob: -7.606506824493408
    6. 'n' → logprob: -8.35650634765625
    7. '=' → logprob: -9.10650634765625
    8. ' n' → logprob: -9.73150634765625
    9. ')' → logprob: -9.85650634765625
    10. '	in' → logprob: -9.98150634765625

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3134879171848297
    2. ' range' → logprob: -1.3134878873825073
    3. 'd' → logprob: -8.688488006591797
    4. ' d' → logprob: -9.813488006591797
    5. '	range' → logprob: -13.688488006591797
    6. '(range' → logprob: -14.438488006591797
    7. ')' → logprob: -15.063488006591797
    8. ' ' → logprob: -15.563488006591797
    9. '```' → logprob: -15.563488006591797
    10. ' xrange' → logprob: -15.688488006591797

Token 15: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04310949146747589
    2. '(N' → logprob: -3.16810941696167
    3. '(len' → logprob: -10.043109893798828
    4. '(n' → logprob: -10.418109893798828
    5. ' (' → logprob: -10.793109893798828
    6. '(
' → logprob: -11.668109893798828
    7. '()' → logprob: -13.418109893798828
    8. ' ' → logprob: -13.543109893798828
    9. '(`' → logprob: -14.168109893798828
    10. '(range' → logprob: -14.293109893798828

Token 16: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.1002795621752739
    2. '(' → logprob: -2.3502795696258545
    3. 'd' → logprob: -10.225279808044434
    4. '(N' → logprob: -10.975279808044434
    5. '(s' → logprob: -12.100279808044434
    6. ' (' → logprob: -12.475279808044434
    7. '(
' → logprob: -12.600279808044434
    8. '(n' → logprob: -12.975279808044434
    9. ')' → logprob: -13.600279808044434
    10. '(

' → logprob: -14.725279808044434

Token 17: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1429198831319809
    2. '):' → logprob: -3.0179197788238525
    3. '))' → logprob: -3.2679197788238525
    4. '[' → logprob: -3.2679197788238525
    5. '[i' → logprob: -5.517920017242432
    6. ')' → logprob: -6.267920017242432
    7. '[d' → logprob: -6.517920017242432
    8. ')):
' → logprob: -8.642919540405273
    9. ')d' → logprob: -8.892919540405273
    10. 'd' → logprob: -9.767919540405273

Token 18: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.932614266872406
    2. ' ' → logprob: -1.4326143264770508
    3. 'd' → logprob: -2.432614326477051
    4. '   ' → logprob: -2.432614326477051
    5. '    ' → logprob: -2.807614326477051
    6. ' if' → logprob: -2.932614326477051
    7. 'if' → logprob: -3.932614326477051
    8. '[' → logprob: -3.932614326477051
    9. ':' → logprob: -4.557614326477051
    10. ' =' → logprob: -5.057614326477051

Token 19: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.589420735836029
    2. 'if' → logprob: -1.8394207954406738
    3. ' if' → logprob: -2.089420795440674
    4. '   ' → logprob: -2.464420795440674
    5. ' d' → logprob: -2.589420795440674
    6. 'print' → logprob: -7.214420795440674
    7. 'for' → logprob: -7.464420795440674
    8. ' ' → logprob: -7.964420795440674
    9. '    ' → logprob: -8.214420318603516
    10. ' for' → logprob: -8.464420318603516

Token 20: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16165407001972198
    2. '[i' → logprob: -1.9116541147232056
    3. '[d' → logprob: -7.036653995513916
    4. '\[' → logprob: -8.661654472351074
    5. '[...]' → logprob: -9.411654472351074
    6. '```' → logprob: -9.661654472351074
    7. '[:]' → logprob: -9.911654472351074
    8. '[]' → logprob: -10.161654472351074
    9. '.append' → logprob: -11.036654472351074
    10. '[int' → logprob: -11.286654472351074

Token 21: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043756552040576935
    2. ']' → logprob: -3.9187564849853516
    3. ' )' → logprob: -4.668756484985352
    4. '[' → logprob: -5.668756484985352
    5. '=' → logprob: -5.668756484985352
    6. ' =' → logprob: -6.543756484985352
    7. '   ' → logprob: -7.043756484985352
    8. ')=' → logprob: -7.043756484985352
    9. ' +=' → logprob: -7.668756484985352
    10. ').' → logprob: -7.668756484985352

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023498425260186195
    2. ' =' → logprob: -3.89849853515625
    3. '=int' → logprob: -6.14849853515625
    4. '+=' → logprob: -7.39849853515625
    5. ' +=' → logprob: -9.77349853515625
    6. '+' → logprob: -10.14849853515625
    7. '[' → logprob: -11.02349853515625
    8. '+='' → logprob: -11.14849853515625
    9. 'int' → logprob: -11.27349853515625
    10. ')' → logprob: -11.27349853515625

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016043636947870255
    2. ' int' → logprob: -4.141043663024902
    3. 'float' → logprob: -12.141043663024902
    4. '(int' → logprob: -13.641043663024902
    5. '[int' → logprob: -14.141043663024902
    6. 'd' → logprob: -14.641043663024902
    7. ' ' → logprob: -15.266043663024902
    8. ' float' → logprob: -15.516043663024902
    9. '=int' → logprob: -15.516043663024902
    10. '   ' → logprob: -15.641043663024902

Token 24: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519524395465851
    2. '(d' → logprob: -1.5019524097442627
    3. '(
' → logprob: -12.126952171325684
    4. '('' → logprob: -12.501952171325684
    5. '(

' → logprob: -12.626952171325684
    6. '((' → logprob: -12.751952171325684
    7. ' (' → logprob: -12.751952171325684
    8. '(`' → logprob: -13.626952171325684
    9. '("("' → logprob: -13.876952171325684
    10. '()' → logprob: -14.751952171325684

Token 25: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014699879102408886
    2. '[' → logprob: -6.62647008895874
    3. ' [' → logprob: -10.001469612121582
    4. ']' → logprob: -10.251469612121582
    5. ')' → logprob: -10.501469612121582
    6. '[
' → logprob: -10.626469612121582
    7. '[I' → logprob: -12.626469612121582
    8. '[d' → logprob: -12.876469612121582
    9. '])' → logprob: -13.751469612121582
    10. '\[' → logprob: -14.376469612121582

Token 26: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29070553183555603
    2. '])' → logprob: -1.5407055616378784
    3. '))' → logprob: -3.290705442428589
    4. ')])' → logprob: -7.790705680847168
    5. ']' → logprob: -8.790705680847168
    6. ')]' → logprob: -8.915705680847168
    7. ']))' → logprob: -9.915705680847168
    8. ''])' → logprob: -11.415705680847168
    9. '[i' → logprob: -11.665705680847168
    10. '[' → logprob: -11.915705680847168

Token 27: 'ans' (ID: 616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9127181768417358
    2. '[' → logprob: -1.6627181768417358
    3. ')' → logprob: -2.6627182960510254
    4. '#' → logprob: -2.6627182960510254
    5. 'd' → logprob: -2.7877182960510254
    6. 'i' → logprob: -3.7877182960510254
    7. ''' → logprob: -3.7877182960510254
    8. '+' → logprob: -3.7877182960510254
    9. ',' → logprob: -4.037718296051025
    10. ' 
' → logprob: -4.287718296051025

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7930037975311279
    2. '=' → logprob: -1.418003797531128
    3. '.append' → logprob: -1.793003797531128
    4. '[' → logprob: -2.543003797531128
    5. '.' → logprob: -3.668003797531128
    6. '[:]' → logprob: -4.543004035949707
    7. 's' → logprob: -4.668004035949707
    8. '_' → logprob: -5.168004035949707
    9. ' +=' → logprob: -5.668004035949707
    10. '[]' → logprob: -6.543004035949707

Token 29: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3457377851009369
    2. ' ' → logprob: -1.8457378149032593
    3. ' max' → logprob: -3.3457376956939697
    4. 'max' → logprob: -3.5957376956939697
    5. 'sum' → logprob: -4.095737934112549
    6. ' []' → logprob: -4.220737934112549
    7. '[]' → logprob: -4.345737934112549
    8. ' sum' → logprob: -4.595737934112549
    9. ' d' → logprob: -5.345737934112549
    10. ' [' → logprob: -5.595737934112549

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0900593176484108
    2. 'max' → logprob: -2.965059280395508
    3. 'sum' → logprob: -4.340059280395508
    4. '[]' → logprob: -4.840059280395508
    5. 'd' → logprob: -5.465059280395508
    6. '[' → logprob: -5.590059280395508
    7. 'min' → logprob: -6.840059280395508
    8. 'len' → logprob: -7.090059280395508
    9. '[max' → logprob: -7.090059280395508
    10. '1' → logprob: -7.340059280395508

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05593816563487053
    2. 'for' → logprob: -3.930938243865967
    3. ' 
' → logprob: -4.055938243865967
    4. ' for' → logprob: -4.680938243865967
    5. '<|end|>' → logprob: -5.805938243865967
    6. '\n' → logprob: -6.180938243865967
    7. ' ' → logprob: -6.805938243865967
    8. '' → logprob: -7.055938243865967
    9. '
' → logprob: -7.055938243865967
    10. '  
' → logprob: -9.055937767028809

Token 32: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00778252724558115
    2. ' for' → logprob: -4.882782459259033
    3. '
' → logprob: -9.507782936096191
    4. '\n' → logprob: -10.632782936096191
    5. 'f' → logprob: -11.132782936096191
    6. 's' → logprob: -11.257782936096191
    7. 'n' → logprob: -11.382782936096191
    8. '\' → logprob: -11.882782936096191
    9. 'i' → logprob: -11.882782936096191
    10. '```' → logprob: -12.007782936096191

Token 33: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.21480335295200348
    2. '_' → logprob: -1.9648033380508423
    3. '+' → logprob: -3.589803457260132
    4. ' ' → logprob: -4.589803218841553
    5. ' +' → logprob: -5.214803218841553
    6. ' =' → logprob: -5.589803218841553
    7. '+=' → logprob: -5.839803218841553
    8. '<|end|>' → logprob: -7.089803218841553
    9. '=' → logprob: -7.214803218841553
    10. '_space' → logprob: -7.464803218841553

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.523531973361969
    2. '0' → logprob: -0.898531973361969
    3. 'sum' → logprob: -8.773531913757324
    4. ' sum' → logprob: -9.148531913757324
    5. ' d' → logprob: -9.773531913757324
    6. 'd' → logprob: -10.023531913757324
    7. ' ' → logprob: -10.898531913757324
    8. 'len' → logprob: -11.523531913757324
    9. ' len' → logprob: -11.648531913757324
    10. ' ans' → logprob: -13.398531913757324

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036063581705093384
    2. ' ' → logprob: -3.9110636711120605
    3. 'sum' → logprob: -4.2860636711120605
    4. ' sum' → logprob: -6.5360636711120605
    5. 'd' → logprob: -9.536063194274902
    6. 'len' → logprob: -9.786063194274902
    7. ' d' → logprob: -10.786063194274902
    8. '100' → logprob: -11.411063194274902
    9. '1' → logprob: -11.911063194274902
    10. ' len' → logprob: -12.161063194274902

Token 36: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9269067645072937
    2. ' ' → logprob: -1.8019068241119385
    3. 'for' → logprob: -1.8019068241119385
    4. ' 
' → logprob: -2.1769068241119385
    5. '<|end|>' → logprob: -2.3019068241119385
    6. '
' → logprob: -3.0519068241119385
    7. '+' → logprob: -5.176906585693359
    8. '\' → logprob: -5.676906585693359
    9. '\n' → logprob: -6.551906585693359
    10. ' \' → logprob: -7.676906585693359

Token 37: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3861125111579895
    2. 'for' → logprob: -1.2611124515533447
    3. '
' → logprob: -4.011112689971924
    4. ' 
' → logprob: -4.136112689971924
    5. ' ' → logprob: -6.636112689971924
    6. '<|end|>' → logprob: -6.761112689971924
    7. '```' → logprob: -9.011112213134766
    8. '\n' → logprob: -10.136112213134766
    9. '+' → logprob: -10.261112213134766
    10. '\' → logprob: -10.886112213134766

Token 38: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05795477703213692
    2. ' d' → logprob: -3.307954788208008
    3. ' ' → logprob: -4.557954788208008
    4. 'i' → logprob: -5.807954788208008
    5. ' x' → logprob: -5.807954788208008
    6. ' num' → logprob: -6.682954788208008
    7. 'd' → logprob: -6.807954788208008
    8. ' value' → logprob: -8.682954788208008
    9. ' n' → logprob: -9.432954788208008
    10. ' val' → logprob: -9.682954788208008

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020689141005277634
    2. 'in' → logprob: -3.8956892490386963
    3. ' ' → logprob: -9.520689010620117
    4. 's' → logprob: -10.520689010620117
    5. '	in' → logprob: -11.770689010620117
    6. '  ' → logprob: -12.020689010620117
    7. '   ' → logprob: -12.395689010620117
    8. '_in' → logprob: -12.645689010620117
    9. 'In' → logprob: -12.645689010620117
    10. 'd' → logprob: -13.145689010620117

Token 40: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20142073929309845
    2. 'd' → logprob: -1.701420783996582
    3. ')d' → logprob: -13.326420783996582
    4. ' ' → logprob: -13.701420783996582
    5. ' range' → logprob: -13.951420783996582
    6. '(d' → logprob: -14.201420783996582
    7. '>d' → logprob: -14.201420783996582
    8. '	d' → logprob: -14.576420783996582
    9. '<|end|>' → logprob: -15.076420783996582
    10. 'range' → logprob: -15.326420783996582

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018758014775812626
    2. '+' → logprob: -6.751875877380371
    3. '+:' → logprob: -8.126875877380371
    4. ' :' → logprob: -8.626875877380371
    5. '   ' → logprob: -9.626875877380371
    6. ':
' → logprob: -9.876875877380371
    7. ' +=' → logprob: -10.126875877380371
    8. ' +' → logprob: -10.501875877380371
    9. '>' → logprob: -10.876875877380371
    10. '+=' → logprob: -12.376875877380371

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026004860177636147
    2. ' ' → logprob: -4.401004791259766
    3. ' total' → logprob: -4.776004791259766
    4. '    ' → logprob: -6.276004791259766
    5. '<|end|>' → logprob: -7.026004791259766
    6. ' 
' → logprob: -7.526004791259766
    7. '    
' → logprob: -7.776004791259766
    8. '+' → logprob: -7.901004791259766
    9. ' if' → logprob: -8.276004791259766
    10. '  ' → logprob: -8.526004791259766

Token 43: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.04661969467997551
    2. '   ' → logprob: -3.6716196537017822
    3. 'total' (adapté à ' total') → logprob: -4.796619892120361
    4. ' if' → logprob: -4.796619892120361
    5. ' ans' → logprob: -6.671619892120361
    6. ' ' → logprob: -7.046619892120361
    7. '    ' → logprob: -7.046619892120361
    8. '+' → logprob: -8.671619415283203
    9. ' 
' → logprob: -9.421619415283203
    10. 'if' → logprob: -9.796619415283203

Token 44: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0925033837556839
    2. '+=' → logprob: -2.592503309249878
    3. '+' → logprob: -4.342503547668457
    4. ' +' → logprob: -7.717503547668457
    5. '<|end|>' → logprob: -10.717503547668457
    6. ' >=' → logprob: -11.967503547668457
    7. ' -=' → logprob: -12.092503547668457
    8. ' =' → logprob: -12.217503547668457
    9. ' <=' → logprob: -12.467503547668457
    10. '<' → logprob: -12.467503547668457

Token 45: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7784372568130493
    2. ' max' → logprob: -1.0284372568130493
    3. 'total' → logprob: -2.2784371376037598
    4. 'max' → logprob: -2.9034371376037598
    5. 'num' → logprob: -4.40343713760376
    6. ' num' → logprob: -4.65343713760376
    7. '+' → logprob: -6.15343713760376
    8. '0' → logprob: -6.90343713760376
    9. ' ' → logprob: -7.77843713760376
    10. '(total' → logprob: -7.77843713760376

Token 46: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25194114446640015
    2. ' +' → logprob: -1.501941204071045
    3. '+n' → logprob: -12.626940727233887
    4. '<num' → logprob: -13.501940727233887
    5. ' ' → logprob: -13.751940727233887
    6. ' plus' → logprob: -14.001940727233887
    7. '+
' → logprob: -14.126940727233887
    8. '+i' → logprob: -14.376940727233887
    9. '＋' → logprob: -14.626940727233887
    10. '<|end|>' → logprob: -14.626940727233887

Token 47: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.003184959525242448
    2. ' num' → logprob: -5.753184795379639
    3. '1' → logprob: -12.128185272216797
    4. ' ' → logprob: -13.753185272216797
    5. '(num' → logprob: -15.128185272216797
    6. '<num' → logprob: -15.753185272216797
    7. '	num' → logprob: -16.628185272216797
    8. 'int' → logprob: -17.003185272216797
    9. '[num' → logprob: -17.253185272216797
    10. '   ' → logprob: -17.378185272216797

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.057056766003370285
    2. ' if' → logprob: -3.5570566654205322
    3. '<|end|>' → logprob: -4.557056903839111
    4. 'if' → logprob: -5.182056903839111
    5. ' ' → logprob: -5.557056903839111
    6. '+' → logprob: -6.432056903839111
    7. ' 
' → logprob: -6.557056903839111
    8. '  
' → logprob: -7.182056903839111
    9. '\n' → logprob: -7.182056903839111
    10. '    
' → logprob: -7.557056903839111

Token 49: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1081891059875488
    2. ' if' → logprob: -1.4831891059875488
    3. '   ' → logprob: -1.8581891059875488
    4. ' 
' → logprob: -2.358189105987549
    5. '    
' → logprob: -2.983189105987549
    6. '<|end|>' → logprob: -3.233189105987549
    7. ' ' → logprob: -3.608189105987549
    8. '\n' → logprob: -3.858189105987549
    9. 'if' → logprob: -4.358189105987549
    10. '  
' → logprob: -4.483189105987549

Token 50: ' i' (ID: 575)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.00627584382891655
    2. 'num' → logprob: -5.506275653839111
    3. ' ' → logprob: -7.006275653839111
    4. ' d' → logprob: -7.256275653839111
    5. ' i' → logprob: -8.88127613067627
    6. '(num' → logprob: -9.25627613067627
    7. ' total' → logprob: -9.38127613067627
    8. ' range' → logprob: -9.50627613067627
    9. '_' → logprob: -9.88127613067627
    10. 'd' → logprob: -10.25627613067627

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035451777279376984
    2. 'in' → logprob: -3.410451889038086
    3. ' ' → logprob: -6.535451889038086
    4. '  ' → logprob: -8.285451889038086
    5. '	in' → logprob: -11.160451889038086
    6. 'In' → logprob: -11.785451889038086
    7. 'n' → logprob: -11.910451889038086
    8. '   ' → logprob: -12.035451889038086
    9. '<|end|>' → logprob: -12.035451889038086
    10. ')' → logprob: -12.160451889038086

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4786566495895386
    2. 'range' → logprob: -0.9786566495895386
    3. 'd' → logprob: -5.978656768798828
    4. ' d' → logprob: -6.228656768798828
    5. ' ' → logprob: -10.603656768798828
    6. '  ' → logprob: -11.978656768798828
    7. '   ' → logprob: -12.228656768798828
    8. '(range' → logprob: -12.228656768798828
    9. '	range' → logprob: -12.416156768798828
    10. 'len' → logprob: -12.728656768798828

Token 53: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.27052468061447144
    2. '(' → logprob: -1.5205247402191162
    3. '(N' → logprob: -4.020524501800537
    4. '(total' → logprob: -8.270524978637695
    5. '(n' → logprob: -8.645524978637695
    6. '()' → logprob: -10.895524978637695
    7. ' (' → logprob: -11.145524978637695
    8. '(s' → logprob: -11.895524978637695
    9. '(length' → logprob: -13.645524978637695
    10. '(l' → logprob: -13.895524978637695

Token 54: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.04329055920243263
    2. '(' → logprob: -3.168290615081787
    3. ' (' → logprob: -8.793290138244629
    4. '(s' → logprob: -9.168290138244629
    5. 'd' → logprob: -10.793290138244629
    6. ' d' → logprob: -12.918290138244629
    7. ')' → logprob: -13.543290138244629
    8. '(
' → logprob: -13.543290138244629
    9. '(n' → logprob: -13.543290138244629
    10. '(D' → logprob: -13.668290138244629

Token 55: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.10035613179206848
    2. '):' → logprob: -3.100356101989746
    3. '))' → logprob: -3.600356101989746
    4. ')):
' → logprob: -4.100356101989746
    5. '-' → logprob: -5.850356101989746
    6. ')' → logprob: -5.850356101989746
    7. '):
' → logprob: -8.475356101989746
    8. ')):
' → logprob: -8.600356101989746
    9. ' ' → logprob: -8.725356101989746
    10. ':' → logprob: -9.475356101989746

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23545855283737183
    2. ' ' → logprob: -2.2354586124420166
    3. '    ' → logprob: -3.1104586124420166
    4. ':' → logprob: -3.2354586124420166
    5. '<|end|>' → logprob: -4.8604583740234375
    6. '  ' → logprob: -6.1104583740234375
    7. '    
' → logprob: -6.2354583740234375
    8. '```' → logprob: -6.6104583740234375
    9. '[' → logprob: -6.8604583740234375
    10. ',' → logprob: -7.2354583740234375

Token 57: ' ans' (ID: 3345)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3343735635280609
    2. ' for' → logprob: -2.2093734741210938
    3. ' if' → logprob: -2.7093734741210938
    4. ' ans' → logprob: -3.0843734741210938
    5. 'total' → logprob: -3.0843734741210938
    6. '   ' → logprob: -5.209373474121094
    7. ' ' → logprob: -5.459373474121094
    8. 'for' → logprob: -6.084373474121094
    9. 'if' → logprob: -6.584373474121094
    10. '    ' → logprob: -6.834373474121094

Token 58: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0500464029610157
    2. '+=' → logprob: -3.550046443939209
    3. ' =' → logprob: -3.925046443939209
    4. '=' → logprob: -8.42504596710205
    5. ' +' → logprob: -9.80004596710205
    6. '+' → logprob: -9.80004596710205
    7. ' ' → logprob: -12.30004596710205
    8. '+=(' → logprob: -12.67504596710205
    9. ' -=' → logprob: -12.80004596710205
    10. ' |=' → logprob: -13.42504596710205

Token 59: ' ans' (ID: 3345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0758057832717896
    2. ' max' → logprob: -1.3258057832717896
    3. ' ans' → logprob: -1.9508057832717896
    4. 'ans' → logprob: -2.2008056640625
    5. 'total' → logprob: -2.4508056640625
    6. ' total' → logprob: -3.2008056640625
    7. 'd' → logprob: -5.3258056640625
    8. ' d' → logprob: -5.9508056640625
    9. '(ans' → logprob: -6.4508056640625
    10. 'abs' → logprob: -6.8258056640625

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4287790060043335
    2. ' +' → logprob: -1.0537790060043335
    3. ' ' → logprob: -11.053778648376465
    4. 'max' → logprob: -11.053778648376465
    5. ' plus' → logprob: -11.053778648376465
    6. '+i' → logprob: -12.053778648376465
    7. '>' → logprob: -12.428778648376465
    8. '＋' → logprob: -12.803778648376465
    9. '<|end|>' → logprob: -13.428778648376465
    10. ' +=' → logprob: -13.678778648376465

Token 61: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1871914267539978
    2. ' d' → logprob: -1.9371914863586426
    3. 'total' → logprob: -4.312191486358643
    4. ' total' → logprob: -5.562191486358643
    5. '   ' → logprob: -6.062191486358643
    6. 'abs' → logprob: -6.687191486358643
    7. ' abs' → logprob: -6.687191486358643
    8. '(d' → logprob: -7.062191486358643
    9. '(total' → logprob: -7.187191486358643
    10. ' ' → logprob: -7.312191486358643

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009263493702746928
    2. '[' → logprob: -7.000926494598389
    3. '```' → logprob: -12.12592601776123
    4. '\[' → logprob: -12.87592601776123
    5. '[
' → logprob: -13.25092601776123
    6. '[j' → logprob: -14.12592601776123
    7. 'i' → logprob: -14.50092601776123
    8. '`' → logprob: -14.62592601776123
    9. '[u' → logprob: -14.87592601776123
    10. '[I' → logprob: -15.00092601776123

Token 63: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3229048252105713
    2. ')' → logprob: -1.9479048252105713
    3. ']' → logprob: -2.3229048252105713
    4. ' *' → logprob: -4.197904586791992
    5. ']*' → logprob: -4.572904586791992
    6. ')*' → logprob: -4.822904586791992
    7. '）' → logprob: -7.947904586791992
    8. ' ' → logprob: -8.822904586791992
    9. '}' → logprob: -8.822904586791992
    10. '*i' → logprob: -8.822904586791992

Token 64: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6776789426803589
    2. '<|end|>' → logprob: -1.3026789426803589
    3. '**' → logprob: -2.3026790618896484
    4. '*' → logprob: -2.6776790618896484
    5. ' *' → logprob: -3.6776790618896484
    6. '2' → logprob: -4.802679061889648
    7. '*i' → logprob: -5.677679061889648
    8. ' **' → logprob: -5.927679061889648
    9. '<|end|>' → logprob: -6.177679061889648
    10. '```' → logprob: -6.177679061889648

Token 65: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.49080711603164673
    2. ' (' → logprob: -1.615807056427002
    3. '(i' → logprob: -2.240807056427002
    4. 'total' → logprob: -3.365807056427002
    5. '(' → logprob: -3.990807056427002
    6. '(N' → logprob: -4.365807056427002
    7. ' total' → logprob: -5.490807056427002
    8. 'i' → logprob: -5.615807056427002
    9. '(n' → logprob: -6.115807056427002
    10. '(int' → logprob: -6.365807056427002

Token 66: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0720287635922432
    2. ' total' → logprob: -2.697028875350952
    3. '(total' → logprob: -6.322028636932373
    4. '   ' → logprob: -9.322029113769531
    5. ' (' → logprob: -9.447029113769531
    6. ' ' → logprob: -9.447029113769531
    7. '  ' → logprob: -11.197029113769531
    8. '(' → logprob: -12.322029113769531
    9. ' N' → logprob: -12.447029113769531
    10. 'tot' → logprob: -12.697029113769531

Token 67: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11102128028869629
    2. '-' → logprob: -2.4860212802886963
    3. ')' → logprob: -4.736021041870117
    4. '<|end|>' → logprob: -4.986021041870117
    5. ' ' → logprob: -5.236021041870117
    6. '  ' → logprob: -8.361021041870117
    7. '   ' → logprob: -8.486021041870117
    8. '<|end|>' → logprob: -9.111021041870117
    9. ' )' → logprob: -9.236021041870117
    10. '-i' → logprob: -9.486021041870117

Token 68: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12704789638519287
    2. ' d' → logprob: -2.1270480155944824
    3. ' ' → logprob: -9.502047538757324
    4. '  ' → logprob: -10.877047538757324
    5. '   ' → logprob: -11.127047538757324
    6. '<|end|>' → logprob: -12.252047538757324
    7. '	d' → logprob: -12.502047538757324
    8. ')d' → logprob: -14.439547538757324
    9. ')' → logprob: -15.127047538757324
    10. '    ' → logprob: -15.502047538757324

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.125001907348633
    3. 'i' → logprob: -16.375001907348633
    4. '[j' → logprob: -16.875001907348633
    5. ' [' → logprob: -18.125001907348633
    6. '[I' → logprob: -18.500001907348633
    7. '{i' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '```' → logprob: -19.750001907348633
    10. '[
' → logprob: -19.875001907348633

Token 70: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006407116306945682
    2. ' )' → logprob: -7.375640869140625
    3. '))' → logprob: -12.750640869140625
    4. ')
' → logprob: -13.000640869140625
    5. '`)' → logprob: -13.375640869140625
    6. ')`' → logprob: -13.375640869140625
    7. '）' → logprob: -13.625640869140625
    8. '')' → logprob: -13.875640869140625
    9. ' ' → logprob: -14.000640869140625
    10. ')

' → logprob: -14.875640869140625

Token 71: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.186415195465088
    2. '<|end|>' → logprob: -1.311415195465088
    3. '
' → logprob: -1.811415195465088
    4. '\n' → logprob: -2.061415195465088
    5. ')' → logprob: -2.311415195465088
    6. '*' → logprob: -5.186415195465088
    7. '```' → logprob: -5.186415195465088
    8. ' 
' → logprob: -5.686415195465088
    9. ' ' → logprob: -5.811415195465088
    10. '#' → logprob: -5.936415195465088

Token 72: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036623103078454733
    2. '(ans' → logprob: -6.128662109375
    3. '("("' → logprob: -7.003662109375
    4. '('' → logprob: -7.753662109375
    5. '()' → logprob: -9.378662109375
    6. '(`' → logprob: -11.253662109375
    7. ' (' → logprob: -11.253662109375
    8. '("' → logprob: -11.878662109375
    9. '((' → logprob: -12.003662109375
    10. '(
' → logprob: -12.503662109375

Token 73: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020473242329899222
    2. ' )' → logprob: -8.625205039978027
    3. '//' → logprob: -10.875205039978027
    4. '))' → logprob: -13.125205039978027
    5. ')//' → logprob: -13.625205039978027
    6. '*' → logprob: -13.875205039978027
    7. ')#' → logprob: -14.875205039978027
    8. '`)' → logprob: -15.000205039978027
    9. '#' → logprob: -15.375205039978027
    10. ')`' → logprob: -15.500205039978027

Token 74: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '(' → logprob: -16.500158309936523
    4. '   ' → logprob: -18.250158309936523
    5. '  ' → logprob: -18.500158309936523
    6. '1' → logprob: -19.000158309936523
    7. '２' → logprob: -19.250158309936523
    8. ')' → logprob: -19.500158309936523
    9. '﻿' → logprob: -19.875158309936523
    10. '[' → logprob: -20.250158309936523

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.625011444091797
    3. '1' → logprob: -13.000011444091797
    4. '(' → logprob: -15.125011444091797
    5. '10' → logprob: -17.750011444091797
    6. '3' → logprob: -18.125011444091797
    7. '200' → logprob: -18.250011444091797
    8. '２' → logprob: -18.250011444091797
    9. '   ' → logprob: -18.875011444091797
    10. '4' → logprob: -19.000011444091797

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.875000953674316
    3. '))' → logprob: -16.625001907348633
    4. ')
' → logprob: -16.625001907348633
    5. '`)' → logprob: -17.625001907348633
    6. ')`' → logprob: -17.750001907348633
    7. '）' → logprob: -18.250001907348633
    8. ')#' → logprob: -18.625001907348633
    9. '')' → logprob: -18.625001907348633
    10. '),' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 39.19%
Précision adaptée (1ère position): 40.54%
Précision (top 10): 85.14%
================================================================================
