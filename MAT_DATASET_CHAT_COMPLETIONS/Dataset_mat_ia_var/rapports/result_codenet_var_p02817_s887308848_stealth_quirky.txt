================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def o():return input()
def splitz(x):return x.split()
def mappy(f,x):return list(map(f,x))
st = o()
x, y = mappy(str, splitz(st))
arr = [y, x]
print(''.join(arr))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' o' (ID: 293)
  → Token d'amorce (pas de prédiction)

Token 2: '():' (ID: 9442)
  → Token d'amorce (pas de prédiction)

Token 3: 'return' (ID: 1034)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.08422831445932388
    2. '\' → logprob: -2.584228277206421
    3. ''\' → logprob: -6.709228515625
    4. ' 
' → logprob: -6.834228515625
    5. '' → logprob: -7.334228515625
    6. '```' → logprob: -8.084228515625
    7. ' \' → logprob: -8.334228515625
    8. '"\' → logprob: -8.334228515625
    9. '\x' → logprob: -8.459228515625
    10. '    
' → logprob: -8.709228515625

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010689926333725452
    2. ' None' → logprob: -5.385689735412598
    3. ' True' → logprob: -6.135689735412598
    4. ''' → logprob: -6.260689735412598
    5. 'None' → logprob: -7.760689735412598
    6. '  ' → logprob: -7.885689735412598
    7. '_' → logprob: -8.260689735412598
    8. '<|end|>' → logprob: -8.635689735412598
    9. '"' → logprob: -8.760689735412598
    10. '32' → logprob: -8.885689735412598

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021157754585146904
    2. '.' → logprob: -3.896157741546631
    3. ''' → logprob: -8.771158218383789
    4. '()' → logprob: -9.021158218383789
    5. ' (' → logprob: -9.646158218383789
    6. ' ' → logprob: -10.021158218383789
    7. '(.)' → logprob: -10.021158218383789
    8. '"' → logprob: -10.271158218383789
    9. '(
' → logprob: -10.521158218383789
    10. '('' → logprob: -10.646158218383789

Token 6: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09268126636743546
    2. '.' → logprob: -3.0926811695098877
    3. '\' → logprob: -4.717681407928467
    4. '+' → logprob: -4.842681407928467
    5. '(
' → logprob: -5.217681407928467
    6. ' ' → logprob: -5.467681407928467
    7. '\n' → logprob: -5.592681407928467
    8. '*' → logprob: -5.842681407928467
    9. ':' → logprob: -6.342681407928467
    10. '<|end|>' → logprob: -6.467681407928467

Token 7: ' split' (ID: 12648)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10140030086040497
    2. ' ' → logprob: -2.476400375366211
    3. ' o' → logprob: -5.101400375366211
    4. ' f' → logprob: -5.601400375366211
    5. ' a' → logprob: -7.351400375366211
    6. '_' → logprob: -7.476400375366211
    7. 'o' → logprob: -8.351400375366211
    8. 'p' → logprob: -8.726400375366211
    9. ' n' → logprob: -8.726400375366211
    10. ' b' → logprob: -9.101400375366211

Token 8: 'z' (ID: 89)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016179591417312622
    2. '('' → logprob: -4.89117956161499
    3. '_' → logprob: -5.39117956161499
    4. ' (' → logprob: -6.14117956161499
    5. '()' → logprob: -7.76617956161499
    6. '("("' → logprob: -7.89117956161499
    7. '("' → logprob: -8.516180038452148
    8. '('_' → logprob: -10.016180038452148
    9. '(
' → logprob: -10.016180038452148
    10. '=' → logprob: -10.266180038452148

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000845364120323211
    2. '('' → logprob: -8.000844955444336
    3. '_' → logprob: -8.750844955444336
    4. '("("' → logprob: -9.125844955444336
    5. ' (' → logprob: -9.750844955444336
    6. '()' → logprob: -10.375844955444336
    7. '.' → logprob: -10.625844955444336
    8. 's' → logprob: -11.000844955444336
    9. '[' → logprob: -11.500844955444336
    10. '((' → logprob: -11.875844955444336

Token 10: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021701245568692684
    2. ' ):' → logprob: -6.752170085906982
    3. ')' → logprob: -7.502170085906982
    4. ',' → logprob: -7.877170085906982
    5. ':' → logprob: -10.75217056274414
    6. '):
' → logprob: -11.50217056274414
    7. ''):' → logprob: -11.75217056274414
    8. ' :' → logprob: -12.37717056274414
    9. '   ' → logprob: -12.62717056274414
    10. ' ,' → logprob: -13.12717056274414

Token 11: 'return' (ID: 1034)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07540140300989151
    2. ' return' → logprob: -2.7004013061523438
    3. 'x' → logprob: -5.700401306152344
    4. '   ' → logprob: -6.575401306152344
    5. 'return' → logprob: -7.825401306152344
    6. ' ' → logprob: -9.325401306152344
    7. '[]' → logprob: -9.575401306152344
    8. '[' → logprob: -10.200401306152344
    9. '(x' → logprob: -10.825401306152344
    10. '	return' → logprob: -11.325401306152344

Token 12: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42911985516548157
    2. ' x' → logprob: -1.0541198253631592
    3. '[' → logprob: -9.054120063781738
    4. ' list' → logprob: -9.429120063781738
    5. '[]' → logprob: -9.679120063781738
    6. 'list' → logprob: -9.679120063781738
    7. ' []' → logprob: -10.429120063781738
    8. '[x' → logprob: -10.554120063781738
    9. ' [' → logprob: -11.304120063781738
    10. ' ' → logprob: -11.804120063781738

Token 13: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04942074418067932
    2. '.split' → logprob: -3.5494208335876465
    3. '(' → logprob: -4.5494208335876465
    4. '[' → logprob: -5.4244208335876465
    5. '(
' → logprob: -7.1744208335876465
    6. '[:]' → logprob: -7.5494208335876465
    7. ',' → logprob: -7.7994208335876465
    8. ' .' → logprob: -8.049420356750488
    9. '<|end|>' → logprob: -8.299420356750488
    10. '_' → logprob: -8.299420356750488

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006247292272746563
    2. '('' → logprob: -5.756247520446777
    3. '('.')' → logprob: -6.381247520446777
    4. '()' → logprob: -7.381247520446777
    5. '("("' → logprob: -7.631247520446777
    6. ''' → logprob: -9.506247520446777
    7. '.' → logprob: -9.881247520446777
    8. ' (' → logprob: -10.381247520446777
    9. '(
' → logprob: -10.631247520446777
    10. '```' → logprob: -11.131247520446777

Token 15: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4700164496898651
    2. '\' → logprob: -2.4700164794921875
    3. 'def' → logprob: -2.7200164794921875
    4. '\n' → logprob: -2.9700164794921875
    5. '[' → logprob: -3.4700164794921875
    6. ''' → logprob: -3.7200164794921875
    7. '(
' → logprob: -4.3450164794921875
    8. '_' → logprob: -4.4700164794921875
    9. ' 
' → logprob: -4.5950164794921875
    10. '
' → logprob: -4.5950164794921875

Token 16: ' m' (ID: 284)
  Prédit: ' join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' join' → logprob: -0.4610007703304291
    2. ' main' → logprob: -1.3360008001327515
    3. ' map' → logprob: -3.211000680923462
    4. 'join' → logprob: -3.836000680923462
    5. 'main' → logprob: -5.086000919342041
    6. ' int' → logprob: -5.211000919342041
    7. ' add' → logprob: -5.836000919342041
    8. 'map' → logprob: -6.086000919342041
    9. ' is' → logprob: -6.211000919342041
    10. ' max' → logprob: -6.336000919342041

Token 17: 'appy' (ID: 13532)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0991791486740112
    2. '(a' → logprob: -1.3491791486740112
    3. 'ain' → logprob: -2.224179267883301
    4. 'ap' → logprob: -2.849179267883301
    5. 'ax' → logprob: -2.849179267883301
    6. 'ult' → logprob: -3.724179267883301
    7. 'ean' → logprob: -3.849179267883301
    8. 'atch' → logprob: -3.974179267883301
    9. 'e' → logprob: -4.099179267883301
    10. 'ath' → logprob: -4.224179267883301

Token 18: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11311564594507217
    2. '(lambda' → logprob: -2.2381155490875244
    3. '(x' → logprob: -9.238115310668945
    4. '(f' → logprob: -9.488115310668945
    5. '(func' → logprob: -10.488115310668945
    6. '(a' → logprob: -10.488115310668945
    7. '(def' → logprob: -11.738115310668945
    8. 'def' → logprob: -11.863115310668945
    9. '(function' → logprob: -11.863115310668945
    10. '((' → logprob: -11.988115310668945

Token 19: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5862610936164856
    2. ')' → logprob: -0.8362610936164856
    3. '):' → logprob: -5.71126127243042
    4. ',a' → logprob: -6.21126127243042
    5. ' )' → logprob: -6.71126127243042
    6. ',)' → logprob: -6.83626127243042
    7. '(' → logprob: -7.46126127243042
    8. ',x' → logprob: -7.96126127243042
    9. ',n' → logprob: -8.086260795593262
    10. ' ,' → logprob: -8.336260795593262

Token 20: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008719642646610737
    2. ')' → logprob: -4.758719444274902
    3. 's' → logprob: -9.633719444274902
    4. ' ):' → logprob: -10.508719444274902
    5. '):
' → logprob: -12.258719444274902
    6. ')):' → logprob: -13.133719444274902
    7. ')s' → logprob: -13.758719444274902
    8. ',' → logprob: -14.133719444274902
    9. '),' → logprob: -14.258719444274902
    10. ')：' → logprob: -14.383719444274902

Token 21: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5751938223838806
    2. 'return' → logprob: -0.9501938223838806
    3. '[' → logprob: -3.9501938819885254
    4. ' [' → logprob: -3.9501938819885254
    5. ' map' → logprob: -4.700193881988525
    6. ' list' → logprob: -7.075193881988525
    7. '   ' → logprob: -7.325193881988525
    8. 'map' → logprob: -7.325193881988525
    9. ' ' → logprob: -8.575193405151367
    10. '[]' → logprob: -8.575193405151367

Token 22: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16418161988258362
    2. ' list' → logprob: -2.164181709289551
    3. '[f' → logprob: -4.289181709289551
    4. '[list' → logprob: -4.789181709289551
    5. ' [' → logprob: -5.289181709289551
    6. '[' → logprob: -5.414181709289551
    7. 'map' → logprob: -5.414181709289551
    8. ' map' → logprob: -7.789181709289551
    9. '[m' → logprob: -10.28918170928955
    10. '[]' → logprob: -10.41418170928955

Token 23: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04858953505754471
    2. '(' → logprob: -3.0485894680023193
    3. '(
' → logprob: -14.173589706420898
    4. '(filter' → logprob: -14.548589706420898
    5. '(f' → logprob: -15.423589706420898
    6. '(

' → logprob: -15.423589706420898
    7. '(zip' → logprob: -15.923589706420898
    8. '(m' → logprob: -16.2985897064209
    9. '(range' → logprob: -16.6735897064209
    10. '((' → logprob: -16.6735897064209

Token 24: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0792248547077179
    2. '(' → logprob: -2.5792248249053955
    3. ')' → logprob: -8.954224586486816
    4. '(lambda' → logprob: -9.079224586486816
    5. ' (' → logprob: -9.954224586486816
    6. '(
' → logprob: -10.329224586486816
    7. '(function' → logprob: -12.204224586486816
    8. 'f' → logprob: -13.704224586486816
    9. '))' → logprob: -13.829224586486816
    10. ',f' → logprob: -14.204224586486816

Token 25: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029764262959361076
    2. ',x' → logprob: -3.529764175415039
    3. ',
' → logprob: -13.029764175415039
    4. ',int' → logprob: -13.654764175415039
    5. ' ,' → logprob: -13.904764175415039
    6. ',

' → logprob: -14.029764175415039
    7. ',y' → logprob: -14.029764175415039
    8. ',input' → logprob: -14.154764175415039
    9. ',map' → logprob: -14.404764175415039
    10. ',)' → logprob: -14.654764175415039

Token 26: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014241418801248074
    2. ')' → logprob: -4.2642412185668945
    3. ')))' → logprob: -9.514241218566895
    4. '))
' → logprob: -12.764241218566895
    5. ' ))' → logprob: -14.389241218566895
    6. '),' → logprob: -15.639241218566895
    7. ')
' → logprob: -15.639241218566895
    8. ')>' → logprob: -15.764241218566895
    9. ' ' → logprob: -17.51424217224121
    10. ' )' → logprob: -17.63924217224121

Token 27: 'st' (ID: 302)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24548599123954773
    2. '
' → logprob: -2.12048602104187
    3. '(' → logprob: -3.24548602104187
    4. '<|end|>' → logprob: -3.49548602104187
    5. ' def' → logprob: -4.870485782623291
    6. '(
' → logprob: -5.745485782623291
    7. '#' → logprob: -5.870485782623291
    8. '()' → logprob: -5.995485782623291
    9. '\n' → logprob: -6.245485782623291
    10. '\' → logprob: -6.620485782623291

Token 28: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00027218335890211165
    2. 'ring' → logprob: -10.125271797180176
    3. 'rip' → logprob: -10.125271797180176
    4. 'art' → logprob: -10.250271797180176
    5. 'rin' → logprob: -10.625271797180176
    6. 'rings' → logprob: -10.750271797180176
    7. 'ep' → logprob: -11.000271797180176
    8. 'ri' → logprob: -11.000271797180176
    9. 'a' → logprob: -11.625271797180176
    10. 'd' → logprob: -11.750271797180176

Token 29: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.514032244682312
    2. 'input' → logprob: -1.139032244682312
    3. ' o' → logprob: -3.1390323638916016
    4. ' input' → logprob: -3.2640323638916016
    5. 'i' → logprob: -10.014032363891602
    6. 'split' → logprob: -10.389032363891602
    7. 'int' → logprob: -10.889032363891602
    8. ''o' → logprob: -11.139032363891602
    9. '(input' → logprob: -11.576532363891602
    10. 'in' → logprob: -11.639032363891602

Token 30: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20720204710960388
    2. '()' → logprob: -1.7072020769119263
    3. '('' → logprob: -5.707201957702637
    4. ' (' → logprob: -6.457201957702637
    5. ' ()' → logprob: -8.707201957702637
    6. '(
' → logprob: -8.832201957702637
    7. '("' → logprob: -9.332201957702637
    8. '("("' → logprob: -9.457201957702637
    9. ''' → logprob: -10.082201957702637
    10. '("")' → logprob: -10.082201957702637

Token 31: 'x' (ID: 87)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6700359582901
    2. 'n' → logprob: -1.7950359582901
    3. 'lst' → logprob: -1.9200359582901
    4. 'l' → logprob: -2.7950358390808105
    5. 'if' → logprob: -2.7950358390808105
    6. 'x' → logprob: -2.9200358390808105
    7. 'r' → logprob: -3.0450358390808105
    8. 's' → logprob: -3.2950358390808105
    9. 'd' → logprob: -3.4200358390808105
    10. '_' → logprob: -3.6700358390808105

Token 32: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5255998969078064
    2. '=' → logprob: -0.9005998969078064
    3. 's' → logprob: -6.900599956512451
    4. ',' → logprob: -7.400599956512451
    5. '_' → logprob: -8.025599479675293
    6. '.' → logprob: -8.900599479675293
    7. '=[]' → logprob: -9.150599479675293
    8. '[' → logprob: -10.025599479675293
    9. '[:]' → logprob: -10.775599479675293
    10. ' ' → logprob: -10.775599479675293

Token 33: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1457064002752304
    2. ' y' → logprob: -2.0207064151763916
    3. ' ' → logprob: -6.0207061767578125
    4. '=' → logprob: -8.770706176757812
    5. '"' → logprob: -9.145706176757812
    6. ' =' → logprob: -9.770706176757812
    7. '*y' → logprob: -10.145706176757812
    8. ''' → logprob: -10.270706176757812
    9. ''y' → logprob: -10.395706176757812
    10. '*' → logprob: -10.520706176757812

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20213596522808075
    2. '=' → logprob: -1.7021359205245972
    3. ',' → logprob: -7.327136039733887
    4. '<|end|>' → logprob: -10.202136039733887
    5. ' ' → logprob: -11.827136039733887
    6. '=input' → logprob: -12.702136039733887
    7. ' ,' → logprob: -12.827136039733887
    8. '  ' → logprob: -13.202136039733887
    9. ')' → logprob: -13.327136039733887
    10. ' =)' → logprob: -13.452136039733887

Token 35: ' m' (ID: 284)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.26970502734184265
    2. 'split' → logprob: -1.769705057144165
    3. ' st' → logprob: -3.394705057144165
    4. 'st' → logprob: -3.894705057144165
    5. ' map' → logprob: -4.644704818725586
    6. ' m' → logprob: -6.894704818725586
    7. 'map' → logprob: -7.019704818725586
    8. 'm' → logprob: -8.144704818725586
    9. 'spl' → logprob: -9.144704818725586
    10. ' ' → logprob: -9.894704818725586

Token 36: 'appy' (ID: 13532)
  Prédit: 'appy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appy' → logprob: -0.0003799104888457805
    2. 'apy' → logprob: -9.00037956237793
    3. 'app' → logprob: -9.12537956237793
    4. 'ppy' → logprob: -9.87537956237793
    5. 'APPY' → logprob: -11.12537956237793
    6. '(' → logprob: -11.12537956237793
    7. 'apply' → logprob: -11.25037956237793
    8. 'p' → logprob: -11.37537956237793
    9. '(p' → logprob: -11.62537956237793
    10. 'z' → logprob: -11.87537956237793

Token 37: '(str' (ID: 7946)
  Prédit: '(split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(split' → logprob: -0.45007792115211487
    2. '(int' → logprob: -1.2000778913497925
    3. '(' → logprob: -3.575078010559082
    4. '(str' → logprob: -3.950078010559082
    5. '(lambda' → logprob: -5.450078010559082
    6. '(st' → logprob: -5.575078010559082
    7. '<|end|>' → logprob: -5.825078010559082
    8. '(s' → logprob: -6.825078010559082
    9. 'split' → logprob: -7.200078010559082
    10. '(input' → logprob: -8.950078010559082

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4859815835952759
    2. ',int' → logprob: -0.9859815835952759
    3. ',input' → logprob: -4.985981464385986
    4. ',s' → logprob: -6.110981464385986
    5. ',str' → logprob: -6.985981464385986
    6. '.strip' → logprob: -7.360981464385986
    7. ',float' → logprob: -7.735981464385986
    8. ',x' → logprob: -8.110981941223145
    9. ' ,' → logprob: -8.360981941223145
    10. '.split' → logprob: -9.110981941223145

Token 39: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2859451174736023
    2. ' split' → logprob: -1.410945177078247
    3. 'st' → logprob: -5.535944938659668
    4. ' st' → logprob: -7.535944938659668
    5. '(split' → logprob: -8.785944938659668
    6. 'spl' → logprob: -10.160944938659668
    7. ')' → logprob: -10.160944938659668
    8. ' ' → logprob: -10.535944938659668
    9. '.split' → logprob: -11.660944938659668
    10. ' input' → logprob: -11.785944938659668

Token 40: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: 0.0
    2. 's' → logprob: -17.875
    3. 'x' → logprob: -17.875
    4. '(z' → logprob: -18.125
    5. ' z' → logprob: -18.25
    6. 't' → logprob: -19.75
    7. 'з' → logprob: -22.125
    8. '_z' → logprob: -22.5
    9. 'y' → logprob: -23.0
    10. 'iz' → logprob: -23.25

Token 41: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0007725820760242641
    2. '(o' → logprob: -7.375772476196289
    3. '(' → logprob: -9.125772476196289
    4. ' (' → logprob: -11.125772476196289
    5. '(s' → logprob: -11.500772476196289
    6. ')(' → logprob: -12.250772476196289
    7. '()(' → logprob: -13.750772476196289
    8. '```' → logprob: -13.750772476196289
    9. '(x' → logprob: -13.875772476196289
    10. '((' → logprob: -14.000772476196289

Token 42: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1786072701215744
    2. '(st' → logprob: -2.053607225418091
    3. '()))' → logprob: -3.803607225418091
    4. ')' → logprob: -4.92860746383667
    5. '(' → logprob: -5.30360746383667
    6. '())' → logprob: -8.053606986999512
    7. ')))' → logprob: -8.803606986999512
    8. '(x' → logprob: -9.178606986999512
    9. '(s' → logprob: -9.553606986999512
    10. '))
' → logprob: -9.928606986999512

Token 43: 'arr' (ID: 1614)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0066736936569214
    2. '\n' → logprob: -1.1316736936569214
    3. '' → logprob: -2.381673812866211
    4. '\' → logprob: -2.631673812866211
    5. '<|end|>' → logprob: -3.256673812866211
    6. ')' → logprob: -4.006673812866211
    7. 'newline' → logprob: -4.006673812866211
    8. ' 
' → logprob: -4.631673812866211
    9. '.' → logprob: -5.006673812866211
    10. '(' → logprob: -5.381673812866211

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021190548315644264
    2. '=' → logprob: -4.271190643310547
    3. 'ay' → logprob: -6.021190643310547
    4. '[' → logprob: -6.396190643310547
    5. '=[]' → logprob: -6.771190643310547
    6. '(' → logprob: -7.396190643310547
    7. '[:]' → logprob: -8.521190643310547
    8. 'y' → logprob: -8.521190643310547
    9. ',' → logprob: -9.021190643310547
    10. 'ays' → logprob: -9.646190643310547

Token 45: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06402765214443207
    2. '[' → logprob: -3.1890275478363037
    3. '[x' → logprob: -5.064027786254883
    4. '[m' → logprob: -5.439027786254883
    5. 'list' → logprob: -5.939027786254883
    6. '[y' → logprob: -6.064027786254883
    7. '['' → logprob: -6.439027786254883
    8. '[int' → logprob: -6.939027786254883
    9. '[str' → logprob: -7.314027786254883
    10. '[list' → logprob: -7.314027786254883

Token 46: 'y' (ID: 88)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7070902585983276
    2. 'x' → logprob: -1.2070902585983276
    3. '[]' → logprob: -2.832090377807617
    4. 'int' → logprob: -3.082090377807617
    5. '[' → logprob: -3.332090377807617
    6. ']' → logprob: -3.707090377807617
    7. '['' → logprob: -5.082090377807617
    8. ''' → logprob: -5.207090377807617
    9. '[int' → logprob: -5.457090377807617
    10. 'False' → logprob: -5.582090377807617

Token 47: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024389510974287987
    2. ')]' → logprob: -3.7743895053863525
    3. '[' → logprob: -7.524389743804932
    4. ')' → logprob: -9.024389266967773
    5. ',' → logprob: -9.399389266967773
    6. ' ]' → logprob: -9.524389266967773
    7. ' for' → logprob: -9.774389266967773
    8. '])]' → logprob: -10.149389266967773
    9. ']*' → logprob: -10.274389266967773
    10. '])' → logprob: -10.274389266967773

Token 48: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016702700406312943
    2. ' x' → logprob: -4.391702651977539
    3. 'y' → logprob: -6.266702651977539
    4. ''x' → logprob: -6.641702651977539
    5. ''' → logprob: -8.391702651977539
    6. ' y' → logprob: -8.516702651977539
    7. '"x' → logprob: -8.641702651977539
    8. ']' → logprob: -9.641702651977539
    9. ''y' → logprob: -10.766702651977539
    10. ' ' → logprob: -10.766702651977539

Token 49: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.692145012086257e-05
    2. ' ]' → logprob: -10.750046730041504
    3. '])' → logprob: -11.375046730041504
    4. ')]' → logprob: -12.125046730041504
    5. ']
' → logprob: -13.125046730041504
    6. '']' → logprob: -13.500046730041504
    7. '[::-' → logprob: -13.750046730041504
    8. ')' → logprob: -13.875046730041504
    9. '[' → logprob: -14.250046730041504
    10. ']]' → logprob: -14.250046730041504

Token 50: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4169598817825317
    2. 'print' → logprob: -1.4169598817825317
    3. ')' → logprob: -1.6669598817825317
    4. '<|end|>' → logprob: -2.041959762573242
    5. '.' → logprob: -3.041959762573242
    6. '+' → logprob: -3.416959762573242
    7. ',' → logprob: -3.416959762573242
    8. ']' → logprob: -3.666959762573242
    9. '[::-' → logprob: -4.291959762573242
    10. '```' → logprob: -5.166959762573242

Token 51: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12728680670261383
    2. '(arr' → logprob: -2.127286911010742
    3. '(*' → logprob: -9.002286911010742
    4. '("("' → logprob: -9.752286911010742
    5. '(len' → logprob: -9.877286911010742
    6. 'arr' → logprob: -10.252286911010742
    7. '((' → logprob: -10.877286911010742
    8. '('' → logprob: -11.127286911010742
    9. '([' → logprob: -11.377286911010742
    10. '(x' → logprob: -11.752286911010742

Token 52: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.19839125871658325
    2. ''' → logprob: -2.5733911991119385
    3. 'arr' → logprob: -2.9483911991119385
    4. ' '.' → logprob: -3.3233911991119385
    5. ',' → logprob: -6.198391437530518
    6. '''.' → logprob: -6.198391437530518
    7. '[' → logprob: -6.698391437530518
    8. ' ' → logprob: -6.823391437530518
    9. '".' → logprob: -7.073391437530518
    10. '',' → logprob: -7.073391437530518

Token 53: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0002943479048553854
    2. 'j' → logprob: -9.00029468536377
    3. 'jo' → logprob: -9.12529468536377
    4. 'concat' → logprob: -10.12529468536377
    5. 'strip' → logprob: -11.87529468536377
    6. ' join' → logprob: -11.87529468536377
    7. ' ' → logprob: -13.25029468536377
    8. 'jon' → logprob: -14.12529468536377
    9. '/j' → logprob: -14.37529468536377
    10. '6' → logprob: -14.87529468536377

Token 54: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -8.895480277715251e-06
    2. 'arr' → logprob: -11.875008583068848
    3. '(' → logprob: -13.500008583068848
    4. '[arr' → logprob: -14.750008583068848
    5. ')' → logprob: -16.375009536743164
    6. '<arr' → logprob: -17.125009536743164
    7. ' arr' → logprob: -17.250009536743164
    8. '	arr' → logprob: -17.375009536743164
    9. '(ar' → logprob: -18.375009536743164
    10. '$arr' → logprob: -18.500009536743164

Token 55: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008098635007627308
    2. ')' → logprob: -7.125809669494629
    3. '))
' → logprob: -12.625809669494629
    4. ')))' → logprob: -13.875809669494629
    5. '])' → logprob: -14.125809669494629
    6. ' ))' → logprob: -15.625809669494629
    7. ')]' → logprob: -16.625810623168945
    8. '[' → logprob: -17.125810623168945
    9. ''))' → logprob: -17.125810623168945
    10. ')
' → logprob: -17.250810623168945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 26.42%
Précision adaptée (1ère position): 26.42%
Précision (top 10): 69.81%
================================================================================
