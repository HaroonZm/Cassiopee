================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on commence ici
words = input().split()   # j'ai mis un s au cas où, on sait jamais

x, y = map(int, input().split())
goal = input()  # c'est notre cible

# On check si le premier mot c'est ce qu'on veut
if words[0] == goal:
    x = x - 1  # on enlève 1 si c'est bon
else:
    y = y - 1 # sinon, c'est le deuxième compteur qui prend

print(str(x) + " " + str(y))  # je préfère ajouter un espace comme ça, c'est plus lisible ?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38941624760627747
    2. 'jour' → logprob: -1.264416217803955
    3. '```' → logprob: -3.889416217803955
    4. '  ' → logprob: -5.639416217803955
    5. '   ' → logprob: -6.014416217803955
    6. ' app' → logprob: -6.014416217803955
    7. 'soir' → logprob: -6.014416217803955
    8. ' j' → logprob: -6.889416217803955
    9. ' je' → logprob: -6.889416217803955
    10. 'jours' → logprob: -7.014416217803955

Token 4: ' commence' (ID: 44755)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.767353355884552
    2. ' va' → logprob: -1.3923532962799072
    3. ' continue' → logprob: -3.0173532962799072
    4. '```' → logprob: -3.2673532962799072
    5. ' a' → logprob: -3.3923532962799072
    6. ' ```' → logprob: -3.5173532962799072
    7. '_' → logprob: -3.7673532962799072
    8. ' #' → logprob: -4.017353534698486
    9. ' ne' → logprob: -4.017353534698486
    10. '#' → logprob: -5.142353534698486

Token 5: ' ici' (ID: 27994)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8358972072601318
    2. '```' → logprob: -0.8358972072601318
    3. '\n' → logprob: -3.210897207260132
    4. '!' → logprob: -3.210897207260132
    5. '\' → logprob: -3.710897207260132
    6. ':' → logprob: -4.835897445678711
    7. '``' → logprob: -4.960897445678711
    8. '`' → logprob: -5.960897445678711
    9. ',' → logprob: -6.085897445678711
    10. '.' → logprob: -6.335897445678711

Token 6: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.503937304019928
    2. '\n' → logprob: -1.3789372444152832
    3. '\' → logprob: -2.628937244415283
    4. '```' → logprob: -3.003937244415283
    5. ':' → logprob: -5.378937244415283
    6. ' ' → logprob: -5.503937244415283
    7. '
' → logprob: -5.503937244415283
    8. '`' → logprob: -6.378937244415283
    9. '``' → logprob: -7.128937244415283
    10. '.' → logprob: -7.378937244415283

Token 7: 'words' (ID: 10020)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.34958651661872864
    2. '#' → logprob: -1.8495864868164062
    3. '\' → logprob: -2.4745864868164062
    4. '```' → logprob: -3.4745864868164062
    5. '
' → logprob: -4.724586486816406
    6. ':' → logprob: -5.974586486816406
    7. ' ' → logprob: -6.224586486816406
    8. 'n' → logprob: -6.599586486816406
    9. '.' → logprob: -7.099586486816406
    10. 'print' → logprob: -7.224586486816406

Token 8: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3580383360385895
    2. '[' → logprob: -1.858038306236267
    3. '=' → logprob: -2.4830384254455566
    4. ' =' → logprob: -2.8580384254455566
    5. '[:]' → logprob: -7.483038425445557
    6. '.append' → logprob: -7.608038425445557
    7. '_' → logprob: -7.858038425445557
    8. '```' → logprob: -7.983038425445557
    9. 's' → logprob: -8.108037948608398
    10. '['' → logprob: -8.483037948608398

Token 9: ' input' (ID: 3422)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7444493174552917
    2. ' []' → logprob: -1.2444493770599365
    3. ' [' → logprob: -2.2444493770599365
    4. '[]' → logprob: -3.4944493770599365
    5. ' "' → logprob: -3.7444493770599365
    6. ' ["' → logprob: -3.7444493770599365
    7. '["' → logprob: -4.119449138641357
    8. ' ['' → logprob: -4.244449138641357
    9. '"' → logprob: -4.619449138641357
    10. '['' → logprob: -4.869449138641357

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02665938064455986
    2. '()' → logprob: -3.6516594886779785
    3. '('' → logprob: -8.77665901184082
    4. '("' → logprob: -9.65165901184082
    5. '("("' → logprob: -10.02665901184082
    6. '("")' → logprob: -10.65165901184082
    7. '().' → logprob: -11.40165901184082
    8. '(

' → logprob: -11.40165901184082
    9. '(
' → logprob: -11.52665901184082
    10. '```' → logprob: -11.65165901184082

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005279772914946079
    2. 'strip' → logprob: -5.255279541015625
    3. 'lower' → logprob: -10.005279541015625
    4. 'rstrip' → logprob: -14.255279541015625
    5. ' split' → logprob: -15.630279541015625
    6. 'spl' → logprob: -15.880279541015625
    7. 'replace' → logprob: -18.255279541015625
    8. 's' → logprob: -18.505279541015625
    9. 'startswith' → logprob: -19.505279541015625
    10. '.split' → logprob: -19.755279541015625

Token 12: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002195813925936818
    2. '('' → logprob: -6.752195835113525
    3. '("("' → logprob: -7.752195835113525
    4. '()' → logprob: -7.877195835113525
    5. '((' → logprob: -10.252195358276367
    6. '`' → logprob: -10.502195358276367
    7. '(`' → logprob: -10.502195358276367
    8. '(
' → logprob: -10.627195358276367
    9. '(

' → logprob: -10.752195358276367
    10. ' (' → logprob: -10.752195358276367

Token 13: '  ' (ID: 256)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3922807574272156
    2. '[' → logprob: -1.3922808170318604
    3. 'for' → logprob: -3.3922808170318604
    4. '#' → logprob: -5.267280578613281
    5. 'if' → logprob: -5.267280578613281
    6. ' ' → logprob: -5.392280578613281
    7. '_' → logprob: -5.392280578613281
    8. ')' → logprob: -5.767280578613281
    9. '(' → logprob: -6.142280578613281
    10. '=' → logprob: -6.267280578613281

Token 14: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5707868337631226
    2. '[' → logprob: -1.5707868337631226
    3. 'if' → logprob: -2.445786952972412
    4. 'for' → logprob: -2.570786952972412
    5. '#' (adapté à ' #') → logprob: -4.195786952972412
    6. ' ' → logprob: -4.320786952972412
    7. '```' → logprob: -5.195786952972412
    8. ' if' → logprob: -5.445786952972412
    9. '.for' → logprob: -5.945786952972412
    10. '
' → logprob: -6.195786952972412

Token 15: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36373329162597656
    2. '#' → logprob: -2.3637332916259766
    3. '[' → logprob: -2.9887332916259766
    4. 'for' → logprob: -3.1137332916259766
    5. '<|end|>' → logprob: -3.6137332916259766
    6. ')' → logprob: -3.7387332916259766
    7. 'if' → logprob: -4.238733291625977
    8. 'words' → logprob: -4.863733291625977
    9. 'print' → logprob: -4.863733291625977
    10. ' if' → logprob: -5.363733291625977

Token 16: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002268254989758134
    2. 'uste' → logprob: -7.377268314361572
    3. ''' → logprob: -7.502268314361572
    4. 'a' → logprob: -8.127267837524414
    5. '')' → logprob: -8.877267837524414
    6. 'u' → logprob: -9.127267837524414
    7. 'i' → logprob: -9.502267837524414
    8. ''ai' → logprob: -9.627267837524414
    9. ''aime' → logprob: -10.002267837524414
    10. 'ust' → logprob: -10.002267837524414

Token 17: ' mis' (ID: 4694)
  Prédit: 'bes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bes' → logprob: -2.0548269748687744
    2. 'f' → logprob: -2.1798269748687744
    3. ' ' → logprob: -2.3048269748687744
    4. 'une' → logprob: -2.6798269748687744
    5. ' besoin' → logprob: -3.0548269748687744
    6. 'plus' → logprob: -3.0548269748687744
    7. ' fini' → logprob: -3.3048269748687744
    8. 'oub' → logprob: -3.4298269748687744
    9. ' reçu' → logprob: -3.4298269748687744
    10. 'bien' → logprob: -3.4298269748687744

Token 18: ' un' (ID: 537)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08706151694059372
    2. '[' → logprob: -3.0870614051818848
    3. ' ' → logprob: -4.587061405181885
    4. '```' → logprob: -4.837061405181885
    5. 'for' → logprob: -5.462061405181885
    6. '<|end|>' → logprob: -5.587061405181885
    7. '_' → logprob: -6.337061405181885
    8. ':' → logprob: -6.712061405181885
    9. ')' → logprob: -6.837061405181885
    10. '[:]' → logprob: -6.837061405181885

Token 19: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7577824592590332
    2. '.' → logprob: -1.3827824592590332
    3. '_' → logprob: -1.5077824592590332
    4. '[' → logprob: -4.507782459259033
    5. 'for' → logprob: -4.757782459259033
    6. '=' → logprob: -5.007782459259033
    7. 'if' → logprob: -5.132782459259033
    8. '#' → logprob: -5.382782459259033
    9. 's' → logprob: -5.382782459259033
    10. ')' → logprob: -5.882782459259033

Token 20: ' au' (ID: 2791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24081335961818695
    2. '[' → logprob: -1.6158133745193481
    3. ':' → logprob: -4.865813255310059
    4. 's' → logprob: -6.615813255310059
    5. ')' → logprob: -6.865813255310059
    6. '_' → logprob: -6.865813255310059
    7. ',' → logprob: -7.365813255310059
    8. 'for' → logprob: -7.365813255310059
    9. '#' → logprob: -7.615813255310059
    10. '=' → logprob: -7.740813255310059

Token 21: ' cas' (ID: 2108)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4995288848876953
    2. 's' → logprob: -1.6245288848876953
    3. 'mot' → logprob: -2.2495288848876953
    4. '_' → logprob: -3.1245288848876953
    5. 'words' → logprob: -4.749528884887695
    6. 'u' → logprob: -5.624528884887695
    7. ' mot' → logprob: -5.874528884887695
    8. 'es' → logprob: -5.874528884887695
    9. '=' → logprob: -5.874528884887695
    10. '[' → logprob: -6.124528884887695

Token 22: ' où' (ID: 15113)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9514613151550293
    2. 'u' → logprob: -1.5764613151550293
    3. ' ' → logprob: -1.5764613151550293
    4. ' où' → logprob: -1.9514613151550293
    5. 'où' → logprob: -3.4514613151550293
    6. ' where' → logprob: -3.9514613151550293
    7. ',' → logprob: -5.576461315155029
    8. '.' → logprob: -7.076461315155029
    9. '```' → logprob: -7.201461315155029
    10. ')' → logprob: -8.451461791992188

Token 23: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27647078037261963
    2. '[' → logprob: -2.52647066116333
    3. ':' → logprob: -2.90147066116333
    4. 'for' → logprob: -2.90147066116333
    5. 'if' → logprob: -4.15147066116333
    6. ' ' → logprob: -4.27647066116333
    7. ',' → logprob: -5.27647066116333
    8. '#' → logprob: -5.77647066116333
    9. '```' → logprob: -5.77647066116333
    10. '[:]' → logprob: -6.02647066116333

Token 24: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.256064534187317
    2. ' ' → logprob: -1.506064534187317
    3. '.' → logprob: -1.756064534187317
    4. 'if' → logprob: -2.1310644149780273
    5. ' if' → logprob: -2.7560644149780273
    6. ' for' → logprob: -3.0060644149780273
    7. 's' → logprob: -3.7560644149780273
    8. '[' → logprob: -4.131064414978027
    9. '_' → logprob: -4.756064414978027
    10. ')' → logprob: -4.756064414978027

Token 25: ' sait' (ID: 52101)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1940054893493652
    2. ' a' → logprob: -2.1940054893493652
    3. 'voud' → logprob: -2.1940054893493652
    4. ' ' → logprob: -2.9440054893493652
    5. 've' → logprob: -2.9440054893493652
    6. ' continue' → logprob: -3.0690054893493652
    7. 'contin' → logprob: -3.0690054893493652
    8. 's' → logprob: -3.1940054893493652
    9. 'continue' → logprob: -3.5690054893493652
    10. ' veu' → logprob: -4.194005489349365

Token 26: ' jamais' (ID: 23077)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7594658732414246
    2. ' ' → logprob: -1.0094659328460693
    3. ' qu' → logprob: -2.7594659328460693
    4. 'que' → logprob: -3.3844659328460693
    5. ' pas' → logprob: -3.7594659328460693
    6. '<|end|>' → logprob: -4.50946569442749
    7. 'qu' → logprob: -4.75946569442749
    8. '```' → logprob: -5.25946569442749
    9. ' that' → logprob: -5.75946569442749
    10. '.' → logprob: -6.13446569442749

Token 27: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08913282305002213
    2. ':' → logprob: -3.464132785797119
    3. '[' → logprob: -3.964132785797119
    4. ',' → logprob: -4.339132785797119
    5. ' ' → logprob: -4.339132785797119
    6. '<|end|>' → logprob: -6.214132785797119
    7. '[:]' → logprob: -6.839132785797119
    8. 'for' → logprob: -6.839132785797119
    9. '
' → logprob: -7.339132785797119
    10. 'if' → logprob: -7.464132785797119

Token 28: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3268626034259796
    2. 'if' → logprob: -1.4518625736236572
    3. '.' → logprob: -4.076862812042236
    4. ':' → logprob: -4.326862812042236
    5. '[' → logprob: -5.451862812042236
    6. ' if' → logprob: -5.951862812042236
    7. ' for' → logprob: -5.951862812042236
    8. 'i' → logprob: -6.576862812042236
    9. '```' → logprob: -6.951862812042236
    10. '#' → logprob: -7.576862812042236

Token 29: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21161797642707825
    2. ' =' → logprob: -1.9616179466247559
    3. '=' → logprob: -3.711617946624756
    4. 's' → logprob: -3.836617946624756
    5. '[' → logprob: -6.461617946624756
    6. '_s' → logprob: -8.086618423461914
    7. '.' → logprob: -8.211618423461914
    8. '0' → logprob: -8.336618423461914
    9. '_i' → logprob: -8.336618423461914
    10. ',' → logprob: -8.711618423461914

Token 30: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05494344234466553
    2. ' y' → logprob: -2.929943561553955
    3. '"' → logprob: -11.554943084716797
    4. ' ' → logprob: -11.554943084716797
    5. '*y' → logprob: -12.054943084716797
    6. '*' → logprob: -12.179943084716797
    7. '=' → logprob: -12.179943084716797
    8. ''y' → logprob: -12.304943084716797
    9. '_y' → logprob: -12.554943084716797
    10. 'z' → logprob: -12.804943084716797

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20194777846336365
    2. '=' → logprob: -1.701947808265686
    3. ',' → logprob: -7.5769476890563965
    4. ' ' → logprob: -11.326948165893555
    5. '=int' → logprob: -13.201948165893555
    6. '<|end|>' → logprob: -13.701948165893555
    7. '=input' → logprob: -13.701948165893555
    8. 's' → logprob: -13.826948165893555
    9. ')' → logprob: -14.451948165893555
    10. '  ' → logprob: -14.576948165893555

Token 32: ' map' (ID: 4014)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.8471629619598389
    2. 'map' → logprob: -1.2221629619598389
    3. ' map' → logprob: -2.347162961959839
    4. '0' → logprob: -2.722162961959839
    5. 'int' → logprob: -2.722162961959839
    6. ' words' → logprob: -3.722162961959839
    7. ' ' → logprob: -4.222163200378418
    8. ' int' → logprob: -5.722163200378418
    9. 'len' → logprob: -6.472163200378418
    10. '1' → logprob: -6.472163200378418

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02951984666287899
    2. '(' → logprob: -3.65451979637146
    3. '(str' → logprob: -5.779520034790039
    4. '(input' → logprob: -9.529520034790039
    5. 'int' → logprob: -10.654520034790039
    6. '(float' → logprob: -11.654520034790039
    7. '(lambda' → logprob: -11.904520034790039
    8. '(eval' → logprob: -12.279520034790039
    9. '<int' → logprob: -13.279520034790039
    10. '(
' → logprob: -13.779520034790039

Token 34: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0028858294244855642
    2. ')' → logprob: -6.752885818481445
    3. 'input' → logprob: -6.752885818481445
    4. ',input' → logprob: -8.377885818481445
    5. '(' → logprob: -8.627885818481445
    6. ' input' → logprob: -10.002885818481445
    7. '(words' → logprob: -10.377885818481445
    8. '=input' → logprob: -10.627885818481445
    9. ',' → logprob: -11.502885818481445
    10. '(x' → logprob: -12.127885818481445

Token 35: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25267186760902405
    2. 'input' → logprob: -1.5026718378067017
    3. ' words' → logprob: -7.377671718597412
    4. 'words' → logprob: -9.25267219543457
    5. '(input' → logprob: -11.62767219543457
    6. ')' → logprob: -12.25267219543457
    7. ' ' → logprob: -13.50267219543457
    8. '	input' → logprob: -13.75267219543457
    9. '  ' → logprob: -14.00267219543457
    10. ' )' → logprob: -14.00267219543457

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014331095851957798
    2. '()' → logprob: -4.889330863952637
    3. '())' → logprob: -5.014330863952637
    4. '()))' → logprob: -10.639330863952637
    5. '()).' → logprob: -11.514330863952637
    6. '());' → logprob: -11.764330863952637
    7. ')' → logprob: -12.889330863952637
    8. '(' → logprob: -13.139330863952637
    9. ' ().' → logprob: -13.514330863952637
    10. '()));' → logprob: -13.514330863952637

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5451681974809617e-05
    2. ' split' → logprob: -11.625015258789062
    3. 'strip' → logprob: -12.000015258789062
    4. ')' → logprob: -16.000015258789062
    5. '(split' → logprob: -16.500015258789062
    6. 'spl' → logprob: -16.625015258789062
    7. 'rstrip' → logprob: -17.375015258789062
    8. ' ' → logprob: -18.250015258789062
    9. '.split' → logprob: -18.750015258789062
    10. '().' → logprob: -19.625015258789062

Token 38: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.051401641219854355
    2. '()' → logprob: -3.0514016151428223
    3. ')' → logprob: -5.926401615142822
    4. '()))' → logprob: -9.05140209197998
    5. '))' → logprob: -11.80140209197998
    6. '(' → logprob: -12.05140209197998
    7. ' ())' → logprob: -12.30140209197998
    8. '(),' → logprob: -13.05140209197998
    9. '())
' → logprob: -13.05140209197998
    10. '());' → logprob: -14.55140209197998

Token 39: 'goal' (ID: 47313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7370995879173279
    2. '<|end|>' → logprob: -1.4870996475219727
    3. '#' → logprob: -3.1120996475219727
    4. ' for' → logprob: -3.2370996475219727
    5. 'if' → logprob: -3.2370996475219727
    6. ',' → logprob: -3.6120996475219727
    7. ' ' → logprob: -3.6120996475219727
    8. '
' → logprob: -4.112099647521973
    9. 'i' → logprob: -4.362099647521973
    10. '\n' → logprob: -4.362099647521973

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.405948281288147
    2. '=' → logprob: -1.905948281288147
    3. '_' → logprob: -2.2809481620788574
    4. 's' → logprob: -3.0309481620788574
    5. '_x' → logprob: -3.7809481620788574
    6. 'x' → logprob: -5.280948162078857
    7. ')' → logprob: -6.530948162078857
    8. '_s' → logprob: -7.280948162078857
    9. '(' → logprob: -7.655948162078857
    10. '(s' → logprob: -7.780948162078857

Token 41: ' input' (ID: 3422)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.777831494808197
    2. 'words' → logprob: -1.6528315544128418
    3. ' words' → logprob: -2.777831554412842
    4. '"' → logprob: -2.902831554412842
    5. '(x' → logprob: -3.152831554412842
    6. '0' → logprob: -3.402831554412842
    7. '[]' → logprob: -3.527831554412842
    8. 'int' → logprob: -3.902831554412842
    9. 'y' → logprob: -4.152831554412842
    10. ''' → logprob: -4.652831554412842

Token 42: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000407316314522177
    2. '(' → logprob: -7.8754072189331055
    3. '().' → logprob: -10.875407218933105
    4. '()`' → logprob: -12.625407218933105
    5. ' ()' → logprob: -13.375407218933105
    6. '())' → logprob: -14.125407218933105
    7. '`()' → logprob: -14.500407218933105
    8. '()>' → logprob: -15.125407218933105
    9. '()
' → logprob: -15.125407218933105
    10. ')' → logprob: -15.625407218933105

Token 43: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.133561372756958
    2. '\n' → logprob: -3.133561372756958
    3. '<|end|>' → logprob: -3.383561372756958
    4. '[' → logprob: -4.133561134338379
    5. '#' → logprob: -4.508561134338379
    6. ')' → logprob: -5.383561134338379
    7. '
' → logprob: -5.633561134338379
    8. ':' → logprob: -6.383561134338379
    9. '\' → logprob: -6.508561134338379
    10. '<|end|>' → logprob: -6.758561134338379

Token 45: ' c' (ID: 274)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3092164099216461
    2. ' "' → logprob: -2.1842164993286133
    3. ' ' → logprob: -2.6842164993286133
    4. ''' → logprob: -2.9342164993286133
    5. ')' → logprob: -5.559216499328613
    6. '"""' → logprob: -5.559216499328613
    7. '""' → logprob: -5.809216499328613
    8. ' goal' → logprob: -5.934216499328613
    9. ' ""' → logprob: -6.184216499328613
    10. '_' → logprob: -6.309216499328613

Token 46: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.28576239943504333
    2. ''' → logprob: -2.160762310028076
    3. ''#' → logprob: -3.535762310028076
    4. ''''' → logprob: -3.910762310028076
    5. '"' → logprob: -4.160762310028076
    6. ''e' → logprob: -4.410762310028076
    7. 'est' → logprob: -5.035762310028076
    8. '''' → logprob: -5.285762310028076
    9. '#' → logprob: -5.285762310028076
    10. 'e' → logprob: -5.660762310028076

Token 47: ' notre' (ID: 12092)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6306384205818176
    2. ' le' → logprob: -1.7556383609771729
    3. ' l' → logprob: -2.130638360977173
    4. 'l' → logprob: -3.005638360977173
    5. ' une' → logprob: -3.255638360977173
    6. 'le' → logprob: -4.505638599395752
    7. ' un' → logprob: -4.505638599395752
    8. ' quoi' → logprob: -4.630638599395752
    9. ' probablement' → logprob: -5.005638599395752
    10. ' ici' → logprob: -5.380638599395752

Token 48: ' cible' (ID: 136857)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.5994195938110352
    2. ' objectif' → logprob: -1.5994195938110352
    3. 'objectif' → logprob: -1.8494195938110352
    4. 'but' → logprob: -3.599419593811035
    5. ' prochain' → logprob: -4.224419593811035
    6. ' cible' → logprob: -4.599419593811035
    7. 'c' → logprob: -4.974419593811035
    8. ' mot' → logprob: -5.349419593811035
    9. 's' → logprob: -6.349419593811035
    10. '_' → logprob: -6.474419593811035

Token 49: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0875740051269531
    2. '<|end|>' → logprob: -1.9625740051269531
    3. '
' → logprob: -2.087574005126953
    4. '#' → logprob: -2.212574005126953
    5. ',' → logprob: -2.837574005126953
    6. 'for' → logprob: -2.962574005126953
    7. 'n' → logprob: -3.212574005126953
    8. '[' → logprob: -3.962574005126953
    9. '\n' → logprob: -4.087574005126953
    10. 'x' → logprob: -4.462574005126953

Token 50: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39615535736083984
    2. ' for' → logprob: -2.14615535736084
    3. '
' → logprob: -2.27115535736084
    4. 'n' → logprob: -3.89615535736084
    5. 'if' → logprob: -3.89615535736084
    6. '#' → logprob: -4.52115535736084
    7. '<|end|>' → logprob: -5.02115535736084
    8. 's' → logprob: -5.14615535736084
    9. '\n' → logprob: -5.14615535736084
    10. 'i' → logprob: -5.27115535736084

Token 51: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1379082202911377
    2. 'if' → logprob: -2.7629082202911377
    3. ' for' → logprob: -3.1379082202911377
    4. 'i' → logprob: -4.887907981872559
    5. ' if' → logprob: -5.887907981872559
    6. '#' → logprob: -6.137907981872559
    7. 'def' → logprob: -6.262907981872559
    8. 'while' → logprob: -6.387907981872559
    9. ' ' → logprob: -7.137907981872559
    10. 'n' → logprob: -7.137907981872559

Token 52: ' check' (ID: 2371)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.790535569190979
    2. 'for' → logprob: -1.540535569190979
    3. ' for' → logprob: -1.540535569190979
    4. ' va' → logprob: -3.2905354499816895
    5. '=' → logprob: -3.4155354499816895
    6. ' =' → logprob: -4.1655354499816895
    7. ' if' → logprob: -5.9155354499816895
    8. '#' → logprob: -6.0405354499816895
    9. 'if' → logprob: -6.0405354499816895
    10. ' a' → logprob: -6.0405354499816895

Token 53: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30982673168182373
    2. ' if' → logprob: -2.3098268508911133
    3. ':' → logprob: -2.9348268508911133
    4. 's' → logprob: -3.4348268508911133
    5. ',' → logprob: -3.4348268508911133
    6. 'if' → logprob: -4.309826850891113
    7. '_' → logprob: -4.559826850891113
    8. ' ,' → logprob: -5.184826850891113
    9. ' :' → logprob: -5.434826850891113
    10. '  ' → logprob: -5.684826850891113

Token 54: ' le' (ID: 505)
  Prédit: ' goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.13816013932228088
    2. ' ' → logprob: -2.388160228729248
    3. ' '' → logprob: -4.263160228729248
    4. 'goal' → logprob: -4.388160228729248
    5. '  ' → logprob: -5.513160228729248
    6. ' "' → logprob: -6.263160228729248
    7. ' ' → logprob: -6.763160228729248
    8. ' len' → logprob: -6.888160228729248
    9. ' le' → logprob: -7.138160228729248
    10. ''' → logprob: -8.01315975189209

Token 55: ' premier' (ID: 15506)
  Prédit: ' goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.40337201952934265
    2. 'goal' → logprob: -1.528372049331665
    3. ' mot' → logprob: -2.903372049331665
    4. 'len' → logprob: -4.028371810913086
    5. ' but' → logprob: -4.278371810913086
    6. 'mot' → logprob: -5.153371810913086
    7. ' len' → logprob: -5.278371810913086
    8. 'but' → logprob: -6.528371810913086
    9. ' ' → logprob: -6.653371810913086
    10. '"' → logprob: -6.653371810913086

Token 56: ' mot' (ID: 3598)
  Prédit: ' mot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mot' → logprob: -0.3117062747478485
    2. 'mot' → logprob: -1.436706304550171
    3. 'word' → logprob: -4.311706066131592
    4. ' word' → logprob: -4.561706066131592
    5. ' ' → logprob: -6.186706066131592
    6. '   ' → logprob: -7.561706066131592
    7. ' in' → logprob: -7.561706066131592
    8. ' mots' → logprob: -7.811706066131592
    9. 'token' → logprob: -7.936706066131592
    10. 'e' → logprob: -8.56170654296875

Token 57: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8791431784629822
    2. ' est' → logprob: -1.004143238067627
    3. ' in' → logprob: -1.629143238067627
    4. ' is' → logprob: -5.004143238067627
    5. 'est' → logprob: -5.629143238067627
    6. ' a' → logprob: -6.379143238067627
    7. ' ==' → logprob: -6.379143238067627
    8. '<|end|>' → logprob: -6.504143238067627
    9. ' )' → logprob: -6.629143238067627
    10. 'in' → logprob: -7.004143238067627

Token 58: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.015849709510803223
    2. ''est' → logprob: -5.015849590301514
    3. ''' → logprob: -5.140849590301514
    4. 'e' → logprob: -7.390849590301514
    5. 'a' → logprob: -7.640849590301514
    6. 'om' → logprob: -7.765849590301514
    7. 'est' → logprob: -8.140850067138672
    8. 'on' → logprob: -8.390850067138672
    9. 'omm' → logprob: -8.390850067138672
    10. 'o' → logprob: -8.515850067138672

Token 59: ' ce' (ID: 2357)
  Prédit: ' goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.020860321819782257
    2. ' le' → logprob: -4.895860195159912
    3. 'goal' → logprob: -5.270860195159912
    4. ' égal' → logprob: -5.895860195159912
    5. ' "' → logprob: -6.395860195159912
    6. ' ' → logprob: -6.395860195159912
    7. ' equal' → logprob: -8.02086067199707
    8. 'le' → logprob: -8.39586067199707
    9. '"' → logprob: -8.52086067199707
    10. ' bien' → logprob: -8.64586067199707

Token 60: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.20301777124404907
    2. ' qu' → logprob: -2.3280177116394043
    3. ''' → logprob: -3.4530177116394043
    4. 'que' → logprob: -4.578017711639404
    5. ' ' → logprob: -4.703017711639404
    6. 'ci' → logprob: -5.078017711639404
    7. 'l' → logprob: -5.078017711639404
    8. 'u' → logprob: -5.453017711639404
    9. '_' → logprob: -5.828017711639404
    10. '#' → logprob: -5.953017711639404

Token 61: ''on' (ID: 25812)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23813360929489136
    2. 'u' → logprob: -2.363133668899536
    3. ''#' → logprob: -3.363133668899536
    4. ''est' → logprob: -3.613133668899536
    5. ''on' → logprob: -4.488133430480957
    6. ' qu' → logprob: -4.738133430480957
    7. 'e' → logprob: -4.863133430480957
    8. ''il' → logprob: -5.238133430480957
    9. ''u' → logprob: -5.488133430480957
    10. '#' → logprob: -5.613133430480957

Token 62: ' veut' (ID: 41653)
  Prédit: ' veut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.9541226625442505
    2. ' cherche' → logprob: -1.4541226625442505
    3. 've' → logprob: -1.7041226625442505
    4. 'cherche' → logprob: -1.7041226625442505
    5. 'veux' → logprob: -5.579122543334961
    6. ' recherche' → logprob: -6.204122543334961
    7. ' souhaite' → logprob: -6.329122543334961
    8. 'f' → logprob: -6.704122543334961
    9. ' veux' → logprob: -7.079122543334961
    10. 'voud' → logprob: -7.079122543334961

Token 63: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26593896746635437
    2. ' if' → logprob: -1.8909389972686768
    3. 'i' → logprob: -2.7659389972686768
    4. ' 
' → logprob: -5.765938758850098
    5. ',' → logprob: -5.890938758850098
    6. '
' → logprob: -6.015938758850098
    7. ' ' → logprob: -6.015938758850098
    8. ' i' → logprob: -6.265938758850098
    9. '[' → logprob: -6.640938758850098
    10. '\n' → logprob: -6.765938758850098

Token 64: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5139241814613342
    2. ' if' → logprob: -1.1389241218566895
    3. 'i' → logprob: -2.7639241218566895
    4. ' ' → logprob: -4.7639241218566895
    5. ' i' → logprob: -4.7639241218566895
    6. ',' → logprob: -7.5139241218566895
    7. ' 
' → logprob: -8.513924598693848
    8. ':' → logprob: -9.013924598693848
    9. ''' → logprob: -9.013924598693848
    10. ' ,' → logprob: -9.388924598693848

Token 65: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.0002087853499688208
    2. ' word' → logprob: -9.125208854675293
    3. ' ' → logprob: -9.875208854675293
    4. ' x' → logprob: -10.750208854675293
    5. 'words' → logprob: -11.125208854675293
    6. ' len' → logprob: -12.250208854675293
    7. ' ' → logprob: -13.125208854675293
    8. '  ' → logprob: -13.375208854675293
    9. '(words' → logprob: -14.125208854675293
    10. ' mots' → logprob: -14.250208854675293

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000549814198166132
    2. ' and' → logprob: -7.625549793243408
    3. ' [' → logprob: -9.750550270080566
    4. 'and' → logprob: -13.000550270080566
    5. ' ==' → logprob: -15.125550270080566
    6. ' ' → logprob: -15.250550270080566
    7. '.' → logprob: -15.875550270080566
    8. ':' → logprob: -15.875550270080566
    9. '0' → logprob: -16.25054931640625
    10. '   ' → logprob: -16.50054931640625

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '[' → logprob: -16.250097274780273
    4. '   ' → logprob: -17.500097274780273
    5. ']' → logprob: -18.062597274780273
    6. '1' → logprob: -18.187597274780273
    7. '00' → logprob: -18.375097274780273
    8. '  ' → logprob: -18.500097274780273
    9. '۰' → logprob: -18.562597274780273
    10. ':' → logprob: -18.875097274780273

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003500407561659813
    2. ' ]' → logprob: -6.378500461578369
    3. ']==' → logprob: -7.003500461578369
    4. ' ==' → logprob: -7.378500461578369
    5. '==' → logprob: -8.253499984741211
    6. ')' → logprob: -13.753499984741211
    7. '=' → logprob: -14.253499984741211
    8. ' ' → logprob: -15.003499984741211
    9. '[' → logprob: -15.378499984741211
    10. '']' → logprob: -15.503499984741211

Token 69: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014238844625651836
    2. '==' → logprob: -4.2642388343811035
    3. '=' → logprob: -10.639239311218262
    4. ' =' → logprob: -10.764239311218262
    5. ' !=' → logprob: -11.014239311218262
    6. ' ' → logprob: -12.389239311218262
    7. '[' → logprob: -13.639239311218262
    8. ')' → logprob: -13.639239311218262
    9. '.lower' → logprob: -13.639239311218262
    10. '.startswith' → logprob: -13.764239311218262

Token 70: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.03662111982703209
    2. 'goal' → logprob: -3.66162109375
    3. '"' → logprob: -5.41162109375
    4. ''' → logprob: -5.41162109375
    5. ' '' → logprob: -7.16162109375
    6. ' "' → logprob: -8.16162109375
    7. ' ' → logprob: -8.91162109375
    8. ' f' → logprob: -9.03662109375
    9. ' ' → logprob: -11.03662109375
    10. '(goal' → logprob: -13.03662109375

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031954164151102304
    2. ' :' → logprob: -5.753195285797119
    3. ':
' → logprob: -11.503195762634277
    4. ':**' → logprob: -12.753195762634277
    5. ':return' → logprob: -13.378195762634277
    6. ' and' → logprob: -14.253195762634277
    7. '):' → logprob: -14.378195762634277
    8. ' :
' → logprob: -14.753195762634277
    9. ':

' → logprob: -15.378195762634277
    10. '.' → logprob: -15.503195762634277

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24359306693077087
    2. ' print' → logprob: -1.6185930967330933
    3. 'print' → logprob: -4.243593215942383
    4. ':' → logprob: -6.493593215942383
    5. ' ' → logprob: -7.493593215942383
    6. '   ' → logprob: -7.993593215942383
    7. '	print' → logprob: -8.368593215942383
    8. '    ' → logprob: -8.368593215942383
    9. ' ' → logprob: -8.993593215942383
    10. '    
' → logprob: -8.993593215942383

Token 73: ' x' (ID: 1215)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.08380129933357239
    2. 'print' → logprob: -2.58380126953125
    3. '   ' → logprob: -6.08380126953125
    4. ' pass' → logprob: -6.20880126953125
    5. '    ' → logprob: -8.33380126953125
    6. 'pass' → logprob: -9.08380126953125
    7. ' exit' → logprob: -9.08380126953125
    8. ' ' → logprob: -10.08380126953125
    9. ' x' → logprob: -11.08380126953125
    10. ' return' → logprob: -11.08380126953125

Token 74: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5333207845687866
    2. ' +=' → logprob: -1.0333207845687866
    3. '=' → logprob: -3.408320903778076
    4. '+' → logprob: -4.533320903778076
    5. ' -=' → logprob: -5.658320903778076
    6. '-=' → logprob: -5.658320903778076
    7. ' =' → logprob: -5.908320903778076
    8. ',' → logprob: -6.408320903778076
    9. '-' → logprob: -7.283320903778076
    10. '==' → logprob: -7.783320903778076

Token 75: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46957826614379883
    2. ' ' → logprob: -1.4695782661437988
    3. 'x' → logprob: -3.094578266143799
    4. ' x' → logprob: -3.594578266143799
    5. '1' → logprob: -3.844578266143799
    6. ' y' → logprob: -3.844578266143799
    7. 'y' → logprob: -3.969578266143799
    8. 'goal' → logprob: -5.969578266143799
    9. ' goal' → logprob: -6.469578266143799
    10. '-' → logprob: -6.469578266143799

Token 76: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32832056283950806
    2. ' +' → logprob: -1.9533205032348633
    3. '<|end|>' → logprob: -2.2033205032348633
    4. '-' → logprob: -4.703320503234863
    5. ' ' → logprob: -4.828320503234863
    6. ' -' → logprob: -5.078320503234863
    7. '0' → logprob: -5.953320503234863
    8. '<|end|>' → logprob: -7.328320503234863
    9. '  ' → logprob: -8.703320503234863
    10. '   ' → logprob: -9.203320503234863

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005954991560429335
    2. ' ' → logprob: -5.130955219268799
    3. '10' → logprob: -11.25595474243164
    4. '2' → logprob: -12.00595474243164
    5. '0' → logprob: -13.50595474243164
    6. '20' → logprob: -13.63095474243164
    7. '3' → logprob: -13.88095474243164
    8. '5' → logprob: -14.13095474243164
    9. '100' → logprob: -14.75595474243164
    10. '   ' → logprob: -15.00595474243164

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002019907406065613
    2. ' ' → logprob: -8.875202178955078
    3. '10' → logprob: -10.750202178955078
    4. '2' → logprob: -11.000202178955078
    5. 'len' → logprob: -11.250202178955078
    6. '3' → logprob: -13.375202178955078
    7. '0' → logprob: -13.375202178955078
    8. '5' → logprob: -13.500202178955078
    9. 'x' → logprob: -13.750202178955078
    10. 'y' → logprob: -13.750202178955078

Token 79: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' #' (ID: 1069)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.4584850072860718
    2. ' elif' → logprob: -1.8334850072860718
    3. 'else' → logprob: -1.8334850072860718
    4. ' ' → logprob: -2.0834851264953613
    5. 'elif' → logprob: -2.0834851264953613
    6. '<|end|>' → logprob: -2.3334851264953613
    7. '
' → logprob: -2.9584851264953613
    8. ' or' → logprob: -4.083485126495361
    9. ' and' → logprob: -5.333485126495361
    10. '\n' → logprob: -5.458485126495361

Token 81: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49070727825164795
    2. '<|end|>' → logprob: -1.365707278251648
    3. '
' → logprob: -3.1157073974609375
    4. ' else' → logprob: -3.8657073974609375
    5. ' 
' → logprob: -4.2407073974609375
    6. ' elif' → logprob: -4.9907073974609375
    7. ')' → logprob: -5.3657073974609375
    8. '\n' → logprob: -5.3657073974609375
    9. 'x' → logprob: -5.4907073974609375
    10. '#' → logprob: -5.7407073974609375

Token 82: ' enl' (ID: 116494)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.10687914490699768
    2. 'continue' → logprob: -3.606879234313965
    3. ' avance' → logprob: -3.856879234313965
    4. ' move' → logprob: -4.106879234313965
    5. 'avance' → logprob: -5.231879234313965
    6. ' print' → logprob: -5.481879234313965
    7. ' break' → logprob: -5.731879234313965
    8. 'contin' → logprob: -6.106879234313965
    9. ' reste' → logprob: -6.356879234313965
    10. 'print' → logprob: -6.481879234313965

Token 83: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.008636434562504292
    2. 'eve' → logprob: -4.883636474609375
    3. 'e' → logprob: -7.133636474609375
    4. 'èves' → logprob: -8.758636474609375
    5. 'è' → logprob: -10.508636474609375
    6. 'èv' → logprob: -11.258636474609375
    7. 'ev' → logprob: -11.633636474609375
    8. 'ever' → logprob: -12.133636474609375
    9. 'èvre' → logprob: -12.883636474609375
    10. 'é' → logprob: -13.383636474609375

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21744099259376526
    2. '<|end|>' → logprob: -1.8424409627914429
    3. '1' → logprob: -4.467441082000732
    4. ')' → logprob: -5.967441082000732
    5. '  ' → logprob: -5.967441082000732
    6. ' x' → logprob: -6.092441082000732
    7. ' words' → logprob: -6.092441082000732
    8. '0' → logprob: -6.217441082000732
    9. 'x' → logprob: -6.217441082000732
    10. ' ' → logprob: -6.592441082000732

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21018044650554657
    2. ' ' → logprob: -2.2101805210113525
    3. 'un' → logprob: -2.9601805210113525
    4. 'le' → logprob: -4.835180282592773
    5. 'une' → logprob: -4.835180282592773
    6. ' un' → logprob: -5.335180282592773
    7. 'x' → logprob: -5.585180282592773
    8. ' une' → logprob: -7.085180282592773
    9. ' x' → logprob: -7.710180282592773
    10. 'one' → logprob: -8.460180282592773

Token 86: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' c' (ID: 274)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5638487339019775
    2. ' words' → logprob: -1.8138487339019775
    3. ' x' → logprob: -2.4388487339019775
    4. ' le' → logprob: -2.5638487339019775
    5. ' l' → logprob: -3.5638487339019775
    6. ' ' → logprob: -3.8138487339019775
    7. 'x' → logprob: -4.063848495483398
    8. ' la' → logprob: -4.813848495483398
    9. ' c' → logprob: -5.313848495483398
    10. 'on' → logprob: -5.938848495483398

Token 88: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3652411699295044
    2. 'est' → logprob: -1.7402411699295044
    3. ''' → logprob: -2.615241050720215
    4. 'e' → logprob: -3.490241050720215
    5. 'a' → logprob: -4.865241050720215
    6. ''on' → logprob: -6.240241050720215
    7. ''était' → logprob: -6.365241050720215
    8. ''e' → logprob: -6.740241050720215
    9. 'es' → logprob: -6.865241050720215
    10. ' ==' → logprob: -6.990241050720215

Token 89: ' bon' (ID: 4846)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9801222681999207
    2. ' bon' → logprob: -1.2301223278045654
    3. 'le' → logprob: -2.2301223278045654
    4. 'bon' → logprob: -2.3551223278045654
    5. ' vrai' → logprob: -3.7301223278045654
    6. ' goal' → logprob: -4.605122089385986
    7. 'exact' → logprob: -4.730122089385986
    8. 'goal' → logprob: -4.855122089385986
    9. 'dans' → logprob: -5.105122089385986
    10. ' ce' → logprob: -5.230122089385986

Token 90: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.2438215017318726
    2. '<|end|>' → logprob: -1.7438215017318726
    3. '
' → logprob: -1.9938215017318726
    4. 'elif' → logprob: -1.9938215017318726
    5. '\n' → logprob: -2.368821620941162
    6. ' else' → logprob: -3.243821620941162
    7. ' ' → logprob: -3.368821620941162
    8. ' 
' → logprob: -3.868821620941162
    9. '#' → logprob: -4.368821620941162
    10. ' elif' → logprob: -4.368821620941162

Token 91: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.30144593119621277
    2. 'elif' → logprob: -2.176445960998535
    3. ' else' → logprob: -2.551445960998535
    4. '<|end|>' → logprob: -3.551445960998535
    5. '\n' → logprob: -4.801445960998535
    6. ' elif' → logprob: -5.051445960998535
    7. ' ' → logprob: -5.051445960998535
    8. '
' → logprob: -5.051445960998535
    9. '#' → logprob: -5.926445960998535
    10. '.' → logprob: -6.051445960998535

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028545670211315155
    2. ' :' → logprob: -6.002854347229004
    3. ':
' → logprob: -8.502854347229004
    4. '   ' → logprob: -8.752854347229004
    5. ' :
' → logprob: -11.502854347229004
    6. ',' → logprob: -13.502854347229004
    7. '    ' → logprob: -13.877854347229004
    8. '  ' → logprob: -13.877854347229004
    9. ' ' → logprob: -14.377854347229004
    10. 'x' → logprob: -14.377854347229004

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16682468354701996
    2. 'x' → logprob: -1.9168246984481812
    3. ' x' → logprob: -5.291824817657471
    4. 'y' → logprob: -8.041824340820312
    5. 'if' → logprob: -8.041824340820312
    6. 'pass' → logprob: -8.916824340820312
    7. ' y' → logprob: -9.041824340820312
    8. ' pass' → logprob: -9.166824340820312
    9. '```' → logprob: -9.166824340820312
    10. ' if' → logprob: -9.541824340820312

Token 94: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05416535958647728
    2. 'y' (adapté à ' y') → logprob: -4.304165363311768
    3. 'pass' → logprob: -4.304165363311768
    4. 'if' → logprob: -4.804165363311768
    5. '   ' → logprob: -5.179165363311768
    6. 'print' → logprob: -5.429165363311768
    7. 'words' → logprob: -5.679165363311768
    8. 'for' → logprob: -6.429165363311768
    9. ' pass' → logprob: -7.179165363311768
    10. ' x' → logprob: -7.304165363311768

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015426385216414928
    2. '=' → logprob: -4.265426158905029
    3. ' +=' → logprob: -7.265426158905029
    4. ' -=' → logprob: -7.515426158905029
    5. '+=' → logprob: -11.765426635742188
    6. '-' → logprob: -12.765426635742188
    7. ' ' → logprob: -12.890426635742188
    8. '-=' → logprob: -12.890426635742188
    9. ' -' → logprob: -13.265426635742188
    10. '   ' → logprob: -15.265426635742188

Token 96: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0026458101347088814
    2. ' y' → logprob: -6.002645969390869
    3. '0' → logprob: -8.877645492553711
    4. 'x' → logprob: -11.502645492553711
    5. '1' → logprob: -12.127645492553711
    6. ' ' → logprob: -12.502645492553711
    7. '10' → logprob: -12.752645492553711
    8. '   ' → logprob: -13.377645492553711
    9. '2' → logprob: -14.002645492553711
    10. '20' → logprob: -14.127645492553711

Token 97: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.040764570236206
    2. ' +' → logprob: -1.415764570236206
    3. '+' → logprob: -1.540764570236206
    4. '-' → logprob: -1.665764570236206
    5. ' ' → logprob: -7.915764808654785
    6. 'y' → logprob: -8.540764808654785
    7. ' y' → logprob: -9.290764808654785
    8. ' plus' → logprob: -10.165764808654785
    9. '   ' → logprob: -10.290764808654785
    10. '=' → logprob: -11.040764808654785

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067204674705863
    2. ' ' → logprob: -5.006720542907715
    3. '   ' → logprob: -13.006720542907715
    4. '0' → logprob: -13.631720542907715
    5. '2' → logprob: -14.569220542907715
    6. '  ' → logprob: -15.631720542907715
    7. '```' → logprob: -15.944220542907715
    8. ' ' → logprob: -16.4442195892334
    9. '[' → logprob: -16.6942195892334
    10. '3' → logprob: -16.6942195892334

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '2' → logprob: -14.625262260437012
    4. '0' → logprob: -16.375261306762695
    5. '<|end|>' → logprob: -16.562761306762695
    6. '  ' → logprob: -16.625261306762695
    7. '   ' → logprob: -16.687761306762695
    8. '10' → logprob: -17.750261306762695
    9. '3' → logprob: -17.812761306762695
    10. '```' → logprob: -18.562761306762695

Token 100: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' sinon' (ID: 52915)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.352185994386673
    2. ' y' → logprob: -2.3521859645843506
    3. '1' → logprob: -2.4771859645843506
    4. 'x' → logprob: -2.9771859645843506
    5. '   ' → logprob: -3.2271859645843506
    6. ' x' → logprob: -4.85218620300293
    7. ' ' → logprob: -5.22718620300293
    8. 'else' → logprob: -5.47718620300293
    9. ' pass' → logprob: -5.60218620300293
    10. 'pass' → logprob: -6.97718620300293

Token 102: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' c' (ID: 274)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6425094604492188
    2. ' x' → logprob: -0.8925094604492188
    3. ' on' → logprob: -3.8925094604492188
    4. ' pass' → logprob: -4.642509460449219
    5. ' y' → logprob: -4.767509460449219
    6. 'y' → logprob: -4.892509460449219
    7. '   ' → logprob: -5.142509460449219
    8. 'pass' → logprob: -5.767509460449219
    9. '#' → logprob: -5.892509460449219
    10. ' if' → logprob: -6.142509460449219

Token 104: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.5319477319717407
    2. ''est' → logprob: -1.7819477319717407
    3. 'e' → logprob: -2.156947612762451
    4. 'a' → logprob: -2.531947612762451
    5. '#' → logprob: -2.781947612762451
    6. 'on' → logprob: -3.156947612762451
    7. 'l' → logprob: -3.281947612762451
    8. 'est' → logprob: -3.281947612762451
    9. 'o' → logprob: -3.656947612762451
    10. '   ' → logprob: -3.781947612762451

Token 105: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9483208060264587
    2. 'l' → logprob: -1.8233208656311035
    3. 'le' → logprob: -1.9483208656311035
    4. ' y' → logprob: -2.1983208656311035
    5. 'y' → logprob: -2.3233208656311035
    6. ' le' → logprob: -2.4483208656311035
    7. ' ' → logprob: -5.5733208656311035
    8. 'x' → logprob: -6.4483208656311035
    9. ' x' → logprob: -6.4483208656311035
    10. 'else' → logprob: -6.8233208656311035

Token 106: ' deuxième' (ID: 51664)
  Prédit: ' tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.5700108408927917
    2. 'tour' → logprob: -0.9450108408927917
    3. ' contraire' → logprob: -4.445010662078857
    4. 'y' → logprob: -4.945010662078857
    5. 'else' → logprob: -5.570010662078857
    6. 'prem' → logprob: -5.570010662078857
    7. 'x' → logprob: -5.695010662078857
    8. ' y' → logprob: -5.820010662078857
    9. ' premier' → logprob: -6.070010662078857
    10. 'turn' → logprob: -6.445010662078857

Token 107: ' compteur' (ID: 163344)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' qui' (ID: 2780)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' prend' (ID: 37463)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.758481502532959
    2. '<|end|>' → logprob: -1.758481502532959
    3. ' ' → logprob: -1.883481502532959
    4. ' y' → logprob: -2.633481502532959
    5. ' s' → logprob: -3.758481502532959
    6. ' faut' → logprob: -4.008481502532959
    7. 'y' → logprob: -4.133481502532959
    8. '-' → logprob: -4.258481502532959
    9. 't' → logprob: -4.758481502532959
    10. ' -' → logprob: -4.758481502532959

Token 110: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'print' (ID: 1598)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1298890113830566
    2. 'if' → logprob: -1.2548890113830566
    3. ' ' → logprob: -2.3798890113830566
    4. '<|end|>' → logprob: -2.6298890113830566
    5. 'print' → logprob: -3.3798890113830566
    6. '.' → logprob: -3.5048890113830566
    7. 'elif' → logprob: -3.5048890113830566
    8. '
' → logprob: -4.004889011383057
    9. '\n' → logprob: -4.254889011383057
    10. '   ' → logprob: -4.504889011383057

Token 112: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014427915215492249
    2. '(words' → logprob: -4.26442813873291
    3. '('' → logprob: -9.13942813873291
    4. '("("' → logprob: -10.01442813873291
    5. '("' → logprob: -10.26442813873291
    6. '()' → logprob: -10.63942813873291
    7. '((' → logprob: -11.01442813873291
    8. '(x' → logprob: -11.01442813873291
    9. '(word' → logprob: -11.63942813873291
    10. 'words' → logprob: -12.13942813873291

Token 113: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0013766606571152806
    2. '(' → logprob: -6.626376628875732
    3. '(y' → logprob: -10.50137710571289
    4. ' (' → logprob: -12.00137710571289
    5. '(words' → logprob: -12.00137710571289
    6. '((' → logprob: -12.25137710571289
    7. 'x' → logprob: -13.37637710571289
    8. ')' → logprob: -14.00137710571289
    9. '(goal' → logprob: -14.00137710571289
    10. '(s' → logprob: -14.37637710571289

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00896340049803257
    2. '))' → logprob: -4.758963584899902
    3. ')+' → logprob: -8.383963584899902
    4. '+' → logprob: -10.133963584899902
    5. ',' → logprob: -10.258963584899902
    6. ' )' → logprob: -10.633963584899902
    7. '),' → logprob: -11.508963584899902
    8. ' +' → logprob: -12.633963584899902
    9. ')))' → logprob: -12.883963584899902
    10. ' ))' → logprob: -13.383963584899902

Token 115: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003043196862563491
    2. ',' → logprob: -6.003043174743652
    3. '+' → logprob: -7.628043174743652
    4. ' +' → logprob: -10.378043174743652
    5. ' )' → logprob: -10.628043174743652
    6. ',y' → logprob: -11.753043174743652
    7. '))' → logprob: -12.503043174743652
    8. '+)' → logprob: -12.503043174743652
    9. ')+' → logprob: -12.753043174743652
    10. '+y' → logprob: -13.003043174743652

Token 116: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0035961484536528587
    2. ''' → logprob: -5.753596305847168
    3. ' "' → logprob: -8.003596305847168
    4. ' ' → logprob: -11.003596305847168
    5. '("' → logprob: -11.253596305847168
    6. '","' → logprob: -11.378596305847168
    7. '",' → logprob: -12.128596305847168
    8. '":"' → logprob: -12.128596305847168
    9. '"/' → logprob: -12.378596305847168
    10. '")' → logprob: -12.378596305847168

Token 117: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006761318072676659
    2. ')' → logprob: -6.00676155090332
    3. ' "' → logprob: -6.00676155090332
    4. ''' → logprob: -7.13176155090332
    5. ',' → logprob: -8.00676155090332
    6. '"/' → logprob: -8.50676155090332
    7. '/' → logprob: -9.13176155090332
    8. '")' → logprob: -9.75676155090332
    9. ' ' → logprob: -9.88176155090332
    10. ' +' → logprob: -10.00676155090332

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00041458409396000206
    2. ' +' → logprob: -7.8754143714904785
    3. ')' → logprob: -10.375414848327637
    4. '+"' → logprob: -13.125414848327637
    5. '+y' → logprob: -14.250414848327637
    6. ')+' → logprob: -15.125414848327637
    7. '"' → logprob: -16.00041389465332
    8. '+")' → logprob: -16.87541389465332
    9. ',' → logprob: -17.00041389465332
    10. '+
' → logprob: -17.00041389465332

Token 119: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.1041145626222715e-05
    2. ' str' → logprob: -12.000011444091797
    3. 'y' → logprob: -12.250011444091797
    4. '(str' → logprob: -18.000011444091797
    5. '	str' → logprob: -20.375011444091797
    6. '   ' → logprob: -21.375011444091797
    7. ' ' → logprob: -22.000011444091797
    8. ' y' → logprob: -22.250011444091797
    9. '  ' → logprob: -23.000011444091797
    10. '=str' → logprob: -23.125011444091797

Token 120: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.558399319241289e-05
    2. '(' → logprob: -10.625025749206543
    3. 'y' → logprob: -13.750025749206543
    4. ' (' → logprob: -16.500024795532227
    5. '("("' → logprob: -17.625024795532227
    6. '(x' → logprob: -18.375024795532227
    7. '("' → logprob: -18.625024795532227
    8. '(
' → logprob: -18.625024795532227
    9. '"' → logprob: -19.125024795532227
    10. '(s' → logprob: -19.500024795532227

Token 121: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015925843035802245
    2. '))' → logprob: -6.501592636108398
    3. ')")' → logprob: -9.501592636108398
    4. '")' → logprob: -11.126592636108398
    5. ')))' → logprob: -14.876592636108398
    6. ')`' → logprob: -15.751592636108398
    7. ' )' → logprob: -16.1265926361084
    8. '')' → logprob: -16.5015926361084
    9. '`)' → logprob: -16.8765926361084
    10. '})' → logprob: -17.2515926361084

Token 122: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' préfère' (ID: 141784)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.805809736251831
    2. ' continue' → logprob: -1.805809736251831
    3. 's' → logprob: -2.180809736251831
    4. 'm' → logprob: -2.555809736251831
    5. ' n' → logprob: -2.805809736251831
    6. 'print' → logprob: -2.805809736251831
    7. ' print' → logprob: -3.055809736251831
    8. ' ' → logprob: -3.430809736251831
    9. ' vais' → logprob: -3.430809736251831
    10. ' suis' → logprob: -3.555809736251831

Token 126: ' ajouter' (ID: 78457)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' un' (ID: 537)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5905328989028931
    2. '\n' → logprob: -2.2155327796936035
    3. '.' → logprob: -2.3405327796936035
    4. '""' → logprob: -2.4655327796936035
    5. '"\' → logprob: -3.3405327796936035
    6. '\' → logprob: -3.4655327796936035
    7. '!' → logprob: -4.0905327796936035
    8. ' ' → logprob: -4.2155327796936035
    9. '<|end|>' → logprob: -4.5905327796936035
    10. ')' → logprob: -4.7155327796936035

Token 128: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.6819818019866943
    2. '"' → logprob: -1.1819818019866943
    3. 'es' → logprob: -2.4319818019866943
    4. 'space' → logprob: -4.056982040405273
    5. ' ' → logprob: -4.431982040405273
    6. '"\' → logprob: -4.431982040405273
    7. '\n' → logprob: -4.556982040405273
    8. ' space' → logprob: -4.681982040405273
    9. 'e' → logprob: -5.056982040405273
    10. ' "' → logprob: -5.181982040405273

Token 129: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' ça' (ID: 13590)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.20752516388893127
    2. 'se' → logprob: -2.5825252532958984
    3. 'separator' → logprob: -4.082525253295898
    4. 'ça' → logprob: -4.082525253295898
    5. 'sep' → logprob: -4.582525253295898
    6. 'à' → logprob: -4.957525253295898
    7. 's' → logprob: -4.957525253295898
    8. 'cela' → logprob: -4.957525253295898
    9. 'join' → logprob: -5.332525253295898
    10. ' ça' → logprob: -5.457525253295898

Token 131: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' c' (ID: 274)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5205979943275452
    2. '<|end|>' → logprob: -1.6455979347229004
    3. ')' → logprob: -2.7705979347229004
    4. 'print' → logprob: -3.1455979347229004
    5. ' "' → logprob: -3.2705979347229004
    6. 'end' → logprob: -4.0205979347229
    7. ' end' → logprob: -4.1455979347229
    8. ''' → logprob: -4.7705979347229
    9. '<|end|>' → logprob: -5.2705979347229
    10. '"\' → logprob: -5.7705979347229

Token 133: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.08964025229215622
    2. 'est' → logprob: -2.8396401405334473
    3. 'omme' → logprob: -5.339640140533447
    4. 'ça' → logprob: -5.339640140533447
    5. 'comme' → logprob: -5.964640140533447
    6. '"' → logprob: -6.089640140533447
    7. 'ela' → logprob: -6.214640140533447
    8. '#' → logprob: -6.214640140533447
    9. 'a' → logprob: -6.464640140533447
    10. ''' → logprob: -6.839640140533447

Token 134: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.015678508207201958
    2. ' plus' → logprob: -5.015678405761719
    3. 'fac' → logprob: -5.515678405761719
    4. 'pro' → logprob: -6.015678405761719
    5. 'clair' → logprob: -7.390678405761719
    6. 'moins' → logprob: -7.390678405761719
    7. 'm' → logprob: -8.765678405761719
    8. '+' → logprob: -9.140678405761719
    9. 'more' → logprob: -9.140678405761719
    10. 'comme' → logprob: -9.140678405761719

Token 135: ' lis' (ID: 20784)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.4379289746284485
    2. 'clair' → logprob: -1.4379289150238037
    3. 'lis' → logprob: -3.0629289150238037
    4. 'fac' → logprob: -3.6879289150238037
    5. ' clair' → logprob: -4.187929153442383
    6. 'cl' → logprob: -4.562929153442383
    7. 'simple' → logprob: -4.812929153442383
    8. ' lis' → logprob: -5.312929153442383
    9. ' propre' → logprob: -6.562929153442383
    10. 'lé' → logprob: -6.937929153442383

Token 136: 'ible' (ID: 1430)
  Prédit: 'bre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.1881791204214096
    2. 'ble' → logprob: -2.1881790161132812
    3. 'b' → logprob: -2.9381790161132812
    4. 'vre' → logprob: -5.563179016113281
    5. 'ible' → logprob: -6.688179016113281
    6. 're' → logprob: -7.438179016113281
    7. 'bres' → logprob: -8.938179016113281
    8. 'br' → logprob: -9.188179016113281
    9. 'te' → logprob: -9.313179016113281
    10. '#' → logprob: -9.563179016113281

Token 137: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 135
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 25.19%
Précision adaptée (1ère position): 25.19%
Précision (top 10): 59.26%
================================================================================
