================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
import sys

def resolve():
    C = next(iter(sys.stdin.read().strip()))
    print(chr(reduce(lambda a, _: a+1, range(1), ord(C))))

if __name__ == ''.join(reversed('__main__')):
    (lambda f: f())(resolve)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' sys' (ID: 12228)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3953779339790344
    2. ' os' → logprob: -1.6453778743743896
    3. ' math' → logprob: -2.3953778743743896
    4. 'operator' → logprob: -3.3953778743743896
    5. ' itertools' → logprob: -5.395378112792969
    6. 'math' → logprob: -6.270378112792969
    7. 'os' → logprob: -6.770378112792969
    8. ' sys' → logprob: -7.270378112792969
    9. ' collections' → logprob: -7.645378112792969
    10. ' re' → logprob: -9.145378112792969

Token 7: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28871360421180725
    2. '
' → logprob: -2.4137136936187744
    3. '\' → logprob: -3.0387136936187744
    4. '\n' → logprob: -3.0387136936187744
    5. '```' → logprob: -3.7887136936187744
    6. '

' → logprob: -4.413713455200195
    7. ',' → logprob: -5.038713455200195
    8. '<|end|>' → logprob: -5.163713455200195
    9. 'import' → logprob: -5.288713455200195
    10. 'newline' → logprob: -5.913713455200195

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3841456472873688
    2. '`' → logprob: -2.884145736694336
    3. '.' → logprob: -3.134145736694336
    4. '\' → logprob: -3.134145736694336
    5. 'for' → logprob: -3.259145736694336
    6. '```' → logprob: -3.759145736694336
    7. '=' → logprob: -4.009145736694336
    8. '#' → logprob: -4.259145736694336
    9. 'print' → logprob: -4.384145736694336
    10. '[' → logprob: -4.759145736694336

Token 9: ' resolve' (ID: 14062)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.4572048485279083
    2. ' reduce' → logprob: -1.957204818725586
    3. ' ' → logprob: -2.457204818725586
    4. ' main' → logprob: -3.457204818725586
    5. ' calculate' → logprob: -3.957204818725586
    6. ' sum' → logprob: -4.082204818725586
    7. ' map' → logprob: -4.207204818725586
    8. '_' → logprob: -4.707204818725586
    9. ' add' → logprob: -4.957204818725586
    10. ' max' → logprob: -5.082204818725586

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6599830985069275
    2. '_' → logprob: -0.7849830985069275
    3. '_name' → logprob: -4.409983158111572
    4. ' (' → logprob: -6.159983158111572
    5. '_conf' → logprob: -6.659983158111572
    6. '_con' → logprob: -6.784983158111572
    7. '_value' → logprob: -7.034983158111572
    8. ':' → logprob: -7.534983158111572
    9. '_parent' → logprob: -7.534983158111572
    10. '_path' → logprob: -8.284982681274414

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1708710640668869
    2. '    ' → logprob: -2.4208710193634033
    3. ' ' → logprob: -4.420871257781982
    4. '\' → logprob: -4.670871257781982
    5. 'input' → logprob: -4.670871257781982
    6. '```' → logprob: -4.920871257781982
    7. 'data' → logprob: -5.545871257781982
    8. 'a' → logprob: -5.670871257781982
    9. '[' → logprob: -5.795871257781982
    10. 'print' → logprob: -5.920871257781982

Token 12: ' C' (ID: 363)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1653804779052734
    2. '   ' → logprob: -1.5403804779052734
    3. 'data' → logprob: -2.5403804779052734
    4. ' n' → logprob: -2.9153804779052734
    5. 'result' → logprob: -2.9153804779052734
    6. 'a' → logprob: -3.2903804779052734
    7. 'input' → logprob: -3.4153804779052734
    8. ' result' → logprob: -3.5403804779052734
    9. ' data' → logprob: -3.5403804779052734
    10. 'x' → logprob: -3.7903804779052734

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02847115322947502
    2. '=' → logprob: -4.403470993041992
    3. ',' → logprob: -4.903470993041992
    4. 'ount' → logprob: -6.028470993041992
    5. ' ' → logprob: -7.528470993041992
    6. 'O' → logprob: -7.653470993041992
    7. 's' → logprob: -7.653470993041992
    8. '  ' → logprob: -7.653470993041992
    9. '   ' → logprob: -7.778470993041992
    10. 'ont' → logprob: -8.028470993041992

Token 14: ' next' (ID: 2613)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0496659018099308
    2. 'int' → logprob: -3.049665927886963
    3. ' ' → logprob: -7.424665927886963
    4. ' list' → logprob: -8.174665451049805
    5. ' sys' → logprob: -10.049665451049805
    6. '[int' → logprob: -10.174665451049805
    7. ' map' → logprob: -10.549665451049805
    8. ' input' → logprob: -10.674665451049805
    9. ' [' → logprob: -11.174665451049805
    10. 'list' → logprob: -11.174665451049805

Token 15: '(iter' (ID: 61014)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.25121182203292847
    2. '(' → logprob: -1.8762118816375732
    3. '(iter' → logprob: -3.0012118816375732
    4. '(input' → logprob: -4.376211643218994
    5. '(C' → logprob: -5.876211643218994
    6. '(int' → logprob: -7.126211643218994
    7. '(iterator' → logprob: -7.376211643218994
    8. '(s' → logprob: -7.501211643218994
    9. '(token' → logprob: -7.626211643218994
    10. '(data' → logprob: -8.376212120056152

Token 16: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.005377237685024738
    2. '(' → logprob: -5.755377292633057
    3. '(C' → logprob: -6.505377292633057
    4. '(input' → logprob: -8.255376815795898
    5. '(int' → logprob: -8.880376815795898
    6. 'sys' → logprob: -9.380376815795898
    7. '(s' → logprob: -10.380376815795898
    8. '(map' → logprob: -10.380376815795898
    9. '((' → logprob: -10.630376815795898
    10. '(data' → logprob: -10.880376815795898

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07006025314331055
    2. '.argv' → logprob: -2.6950602531433105
    3. '.' → logprob: -9.695060729980469
    4. '.args' → logprob: -10.945060729980469
    5. '.stdout' → logprob: -11.945060729980469
    6. '.input' → logprob: -12.070060729980469
    7. ' .' → logprob: -12.070060729980469
    8. '(stdin' → logprob: -12.320060729980469
    9. ')' → logprob: -12.570060729980469
    10. ').' → logprob: -12.945060729980469

Token 18: '.read' (ID: 7211)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0036494876258075237
    2. '.readline' → logprob: -6.253649711608887
    3. ')' → logprob: -6.503649711608887
    4. ')))' → logprob: -9.503649711608887
    5. '.readlines' → logprob: -9.753649711608887
    6. '()))' → logprob: -10.128649711608887
    7. '))
' → logprob: -11.128649711608887
    8. '))-' → logprob: -11.753649711608887
    9. ')).' → logprob: -12.378649711608887
    10. '));' → logprob: -12.503649711608887

Token 19: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12133195996284485
    2. '))' → logprob: -2.4963319301605225
    3. '().' → logprob: -3.9963319301605225
    4. '()' → logprob: -4.496332168579102
    5. '(' → logprob: -7.121332168579102
    6. '())' → logprob: -7.496332168579102
    7. 'line' → logprob: -7.746332168579102
    8. '()),' → logprob: -8.746332168579102
    9. '()));' → logprob: -9.246332168579102
    10. ')' → logprob: -9.621332168579102

Token 20: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.038055144250392914
    2. 'strip' → logprob: -3.288055181503296
    3. 'rstrip' → logprob: -11.663055419921875
    4. ' split' → logprob: -13.288055419921875
    5. '(split' → logprob: -13.663055419921875
    6. '```' → logprob: -13.788055419921875
    7. ')' → logprob: -14.663055419921875
    8. 'decode' → logprob: -15.413055419921875
    9. 'replace' → logprob: -15.913055419921875
    10. 'read' → logprob: -16.788055419921875

Token 21: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.379300594329834
    2. '().' → logprob: -1.504300594329834
    3. '('' → logprob: -3.129300594329834
    4. '()' → logprob: -3.379300594329834
    5. '())' → logprob: -5.004300594329834
    6. '(' → logprob: -5.129300594329834
    7. '())))' → logprob: -7.254300594329834
    8. ''' → logprob: -7.379300594329834
    9. '()),' → logprob: -8.254301071166992
    10. '(()' → logprob: -8.379301071166992

Token 22: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09040819853544235
    2. '(' → logprob: -3.4654080867767334
    3. ',' → logprob: -3.5904080867767334
    4. '[' → logprob: -4.8404083251953125
    5. '()' → logprob: -5.0904083251953125
    6. '+' → logprob: -5.7154083251953125
    7. '.' → logprob: -6.4654083251953125
    8. ':' → logprob: -6.7154083251953125
    9. ' ' → logprob: -6.8404083251953125
    10. 'C' → logprob: -6.8404083251953125

Token 23: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1963597983121872
    2. '=' → logprob: -2.821359872817993
    3. '[' → logprob: -3.196359872817993
    4. ',' → logprob: -3.696359872817993
    5. 'C' → logprob: -4.071359634399414
    6. ' ' → logprob: -4.071359634399414
    7. '(' → logprob: -5.696359634399414
    8. '.' → logprob: -6.071359634399414
    9. ':' → logprob: -6.071359634399414
    10. '  ' → logprob: -6.446359634399414

Token 24: '(chr' (ID: 185847)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25398099422454834
    2. '(C' → logprob: -1.5039809942245483
    3. '(ord' → logprob: -7.128981113433838
    4. '('' → logprob: -7.503981113433838
    5. '((' → logprob: -8.50398063659668
    6. '(len' → logprob: -8.87898063659668
    7. '()' → logprob: -8.87898063659668
    8. '(chr' → logprob: -9.12898063659668
    9. '("("' → logprob: -11.00398063659668
    10. '(f' → logprob: -11.12898063659668

Token 25: '(re' (ID: 8178)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.24521894752979279
    2. '(' → logprob: -1.6202189922332764
    3. '(C' → logprob: -4.120218753814697
    4. '((' → logprob: -7.120218753814697
    5. '(int' → logprob: -7.495218753814697
    6. '40' → logprob: -7.495218753814697
    7. 'ord' → logprob: -7.620218753814697
    8. '32' → logprob: -8.495219230651855
    9. ')' → logprob: -8.620219230651855
    10. '65' → logprob: -8.745219230651855

Token 26: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.000873347744345665
    2. 'd' → logprob: -7.250873565673828
    3. 'du' → logprob: -9.625873565673828
    4. 'duc' → logprob: -9.625873565673828
    5. 'duced' → logprob: -10.875873565673828
    6. 'verse' → logprob: -13.625873565673828
    7. '[' → logprob: -13.875873565673828
    8. 'dux' → logprob: -13.875873565673828
    9. '``' → logprob: -14.125873565673828
    10. '(' → logprob: -14.250873565673828

Token 27: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1023041233420372
    2. '(' → logprob: -2.352304220199585
    3. '(ord' → logprob: -6.227303981781006
    4. '(
' → logprob: -9.727304458618164
    5. ' lambda' → logprob: -10.977304458618164
    6. '((' → logprob: -11.602304458618164
    7. ')' → logprob: -11.727304458618164
    8. '(operator' → logprob: -11.727304458618164
    9. 'lambda' → logprob: -11.852304458618164
    10. '<|end|>' → logprob: -12.727304458618164

Token 28: ' a' (ID: 261)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.029955852776765823
    2. 'lambda' → logprob: -3.6549558639526367
    3. '(lambda' → logprob: -6.029955863952637
    4. ' ' → logprob: -7.779955863952637
    5. ' x' → logprob: -7.904955863952637
    6. '=lambda' → logprob: -8.529955863952637
    7. ' a' → logprob: -9.654955863952637
    8. 'a' → logprob: -9.904955863952637
    9. ' ord' → logprob: -10.404955863952637
    10. 'x' → logprob: -10.404955863952637

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02218887396156788
    2. ' ,' → logprob: -4.022188663482666
    3. ',a' → logprob: -5.897188663482666
    4. ',c' → logprob: -7.897188663482666
    5. 'a' → logprob: -8.147189140319824
    6. ',b' → logprob: -8.397189140319824
    7. ',x' → logprob: -8.647189140319824
    8. ',int' → logprob: -10.022189140319824
    9. ' a' → logprob: -10.897189140319824
    10. ',char' → logprob: -10.897189140319824

Token 30: ' _:' (ID: 133568)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.577639102935791
    2. 'b' → logprob: -0.827639102935791
    3. ' lambda' → logprob: -7.577639102935791
    4. 'c' → logprob: -7.827639102935791
    5. ' c' → logprob: -7.827639102935791
    6. ' ' → logprob: -8.952638626098633
    7. 'lambda' → logprob: -9.327638626098633
    8. 'x' → logprob: -10.452638626098633
    9. 'a' → logprob: -10.827638626098633
    10. ' x' → logprob: -10.827638626098633

Token 31: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1639445573091507
    2. ' a' → logprob: -2.7889444828033447
    3. '(ord' → logprob: -3.1639444828033447
    4. '(a' → logprob: -3.9139444828033447
    5. ' ord' → logprob: -4.288944721221924
    6. 'ord' → logprob: -5.163944721221924
    7. ' (' → logprob: -6.163944721221924
    8. 'lambda' → logprob: -6.663944721221924
    9. '((' → logprob: -6.913944721221924
    10. '(lambda' → logprob: -6.913944721221924

Token 32: '+' (ID: 10)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9613511562347412
    2. '+' → logprob: -0.9613511562347412
    3. ' +' → logprob: -2.211351156234741
    4. ' *' → logprob: -2.336351156234741
    5. ' ^' → logprob: -4.46135139465332
    6. '<<' → logprob: -4.96135139465332
    7. '^' → logprob: -5.71135139465332
    8. ' |' → logprob: -6.71135139465332
    9. ' ' → logprob: -6.83635139465332
    10. '+C' → logprob: -7.21135139465332

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4388609230518341
    2. ' ' → logprob: -2.3138608932495117
    3. ' ord' → logprob: -2.4388608932495117
    4. '(ord' → logprob: -2.6888608932495117
    5. 'ord' → logprob: -2.9388608932495117
    6. '(C' → logprob: -4.188860893249512
    7. 'C' → logprob: -4.938860893249512
    8. ' C' → logprob: -5.313860893249512
    9. '(' → logprob: -5.438860893249512
    10. ' (' → logprob: -5.438860893249512

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01574809104204178
    2. ' ,' → logprob: -4.640748023986816
    3. ',C' → logprob: -5.265748023986816
    4. 'C' → logprob: -8.015748023986816
    5. 'ord' → logprob: -9.390748023986816
    6. ' ord' → logprob: -9.640748023986816
    7. ' C' → logprob: -9.890748023986816
    8. '(ord' → logprob: -10.015748023986816
    9. ',(' → logprob: -10.640748023986816
    10. ',int' → logprob: -10.765748023986816

Token 35: ' range' (ID: 3352)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.274282306432724
    2. ' C' → logprob: -1.5242823362350464
    3. 'range' → logprob: -4.774282455444336
    4. ' range' → logprob: -5.399282455444336
    5. ''C' → logprob: -6.149282455444336
    6. 'filter' → logprob: -6.399282455444336
    7. '[C' → logprob: -6.524282455444336
    8. '"C' → logprob: -7.024282455444336
    9. '[' → logprob: -7.274282455444336
    10. ' filter' → logprob: -7.524282455444336

Token 36: '(' (ID: 7)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.036847494542598724
    2. '(C' → logprob: -3.7868475914001465
    3. '(' → logprob: -4.6618475914001465
    4. '(len' → logprob: -5.5368475914001465
    5. '((' → logprob: -9.536847114562988
    6. 'ord' → logprob: -11.286847114562988
    7. ' ord' → logprob: -11.286847114562988
    8. '(int' → logprob: -11.536847114562988
    9. ' (' → logprob: -12.911847114562988
    10. '(-' → logprob: -13.286847114562988

Token 37: '1' (ID: 16)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.697029173374176
    2. ' ord' → logprob: -1.5720291137695312
    3. 'C' → logprob: -1.8220291137695312
    4. ' C' → logprob: -3.1970291137695312
    5. 'len' → logprob: -3.5720291137695312
    6. '(ord' → logprob: -3.6970291137695312
    7. '   ' → logprob: -4.947029113769531
    8. ' len' → logprob: -5.072029113769531
    9. '65' → logprob: -5.447029113769531
    10. '32' → logprob: -5.447029113769531

Token 38: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034335232339799404
    2. ',C' → logprob: -5.878433704376221
    3. ',int' → logprob: -8.378433227539062
    4. ' ,' → logprob: -8.628433227539062
    5. 'C' → logprob: -9.628433227539062
    6. 'ord' → logprob: -9.878433227539062
    7. ',len' → logprob: -10.503433227539062
    8. '(ord' → logprob: -10.628433227539062
    9. ' ord' → logprob: -11.878433227539062
    10. '0' → logprob: -12.003433227539062

Token 39: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.10437916964292526
    2. 'ord' → logprob: -2.354379177093506
    3. ' C' → logprob: -6.229379177093506
    4. 'C' → logprob: -6.979379177093506
    5. '(ord' → logprob: -7.729379177093506
    6. ' ' → logprob: -7.979379177093506
    7. ' (' → logprob: -9.291878700256348
    8. ' int' → logprob: -9.791878700256348
    9. '   ' → logprob: -9.854378700256348
    10. '  ' → logprob: -10.541878700256348

Token 40: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.000797119690105319
    2. '(' → logprob: -8.000797271728516
    3. '('' → logprob: -8.000797271728516
    4. 'C' → logprob: -9.625797271728516
    5. ' (' → logprob: -11.625797271728516
    6. 's' → logprob: -12.000797271728516
    7. ' ' → logprob: -12.125797271728516
    8. ')' → logprob: -12.125797271728516
    9. '((' → logprob: -12.125797271728516
    10. '("("' → logprob: -12.250797271728516

Token 41: '))))

' (ID: 161772)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.8424555063247681
    2. '))))' → logprob: -1.217455506324768
    3. ')' → logprob: -1.467455506324768
    4. ')+' → logprob: -3.3424553871154785
    5. ' ' → logprob: -5.9674553871154785
    6. ' )' → logprob: -6.9674553871154785
    7. '))' → logprob: -7.0924553871154785
    8. '))))
' → logprob: -7.2174553871154785
    9. '   ' → logprob: -7.5924553871154785
    10. ' ))' → logprob: -7.8424553871154785

Token 42: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2531697154045105
    2. '(' → logprob: -1.8781697750091553
    3. '[' → logprob: -3.0031697750091553
    4. ' ' → logprob: -5.003169536590576
    5. '+' → logprob: -5.253169536590576
    6. '(
' → logprob: -5.628169536590576
    7. '))' → logprob: -7.003169536590576
    8. '#' → logprob: -7.128169536590576
    9. '())' → logprob: -8.003170013427734
    10. '.' → logprob: -8.128170013427734

Token 43: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005234952084720135
    2. '__' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.255234718322754
    4. ' ' → logprob: -15.505234718322754
    5. '_' → logprob: -16.00523567199707
    6. '___' → logprob: -16.50523567199707
    7. ' ___' → logprob: -16.75523567199707
    8. ' True' → logprob: -17.50523567199707
    9. '_name' → logprob: -18.38023567199707
    10. ' _' → logprob: -18.50523567199707

Token 44: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018029356375336647
    2. '__.__' → logprob: -4.14302921295166
    3. '__.' → logprob: -7.26802921295166
    4. '.' → logprob: -7.76802921295166
    5. '==' → logprob: -8.14302921295166
    6. '.__' → logprob: -8.64302921295166
    7. 'name' → logprob: -8.89302921295166
    8. ' ==' → logprob: -9.51802921295166
    9. '[' → logprob: -10.01802921295166
    10. '__["' → logprob: -10.39302921295166

Token 45: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2007883671903983e-05
    2. '__.__' → logprob: -11.000021934509277
    3. '==' → logprob: -13.125021934509277
    4. '__["' → logprob: -14.125021934509277
    5. '__('' → logprob: -14.250021934509277
    6. '___' → logprob: -14.625021934509277
    7. '_' → logprob: -14.875021934509277
    8. '__.' → logprob: -15.375021934509277
    9. ' ==' → logprob: -15.625021934509277
    10. '__[' → logprob: -15.625021934509277

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14612600207328796
    2. '__' → logprob: -2.3961260318756104
    3. '==' → logprob: -3.1461260318756104
    4. '=='' → logprob: -7.396125793457031
    5. '=="' → logprob: -7.521125793457031
    6. '"' → logprob: -8.521125793457031
    7. ''' → logprob: -8.646125793457031
    8. '['' → logprob: -10.021125793457031
    9. '___' → logprob: -10.271125793457031
    10. '_' → logprob: -10.396125793457031

Token 47: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6934617757797241
    2. ''' → logprob: -0.6934617757797241
    3. ' "__' → logprob: -8.318461418151855
    4. ' "' → logprob: -10.193461418151855
    5. ' '__' → logprob: -10.568461418151855
    6. ' '' → logprob: -12.318461418151855
    7. '"user' → logprob: -13.318461418151855
    8. '__' → logprob: -14.818461418151855
    9. ''user' → logprob: -15.443461418151855
    10. '"name' → logprob: -16.318462371826172

Token 48: 'join' (ID: 10891)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23328091204166412
    2. ''' → logprob: -1.608280897140503
    3. 'main' → logprob: -5.358281135559082
    4. '"' → logprob: -5.858281135559082
    5. ' '__' → logprob: -9.483281135559082
    6. ''name' → logprob: -9.858281135559082
    7. 'py' → logprob: -10.108281135559082
    8. 'python' → logprob: -10.733281135559082
    9. '___' → logprob: -11.233281135559082
    10. ' __' → logprob: -11.358281135559082

Token 49: '(re' (ID: 8178)
  Prédit: '('__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('__' → logprob: -0.47380760312080383
    2. '("__' → logprob: -1.2238075733184814
    3. '(' → logprob: -3.2238075733184814
    4. '(['' → logprob: -4.2238078117370605
    5. '('_' → logprob: -4.7238078117370605
    6. '['' → logprob: -4.7238078117370605
    7. '__' → logprob: -6.3488078117370605
    8. '(["' → logprob: -6.3488078117370605
    9. '('' → logprob: -6.3488078117370605
    10. '["' → logprob: -6.5988078117370605

Token 50: 'versed' (ID: 76479)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.838840663433075
    2. '__' → logprob: -1.7138407230377197
    3. 'pr' → logprob: -1.9638407230377197
    4. 'name' → logprob: -2.9638407230377197
    5. 'quire' → logprob: -3.4638407230377197
    6. 'p' → logprob: -3.5888407230377197
    7. ''' → logprob: -3.8388407230377197
    8. 'place' → logprob: -3.9638407230377197
    9. 'f' → logprob: -4.213840484619141
    10. '['' → logprob: -4.213840484619141

Token 51: '('__' (ID: 180326)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10924074053764343
    2. '"' → logprob: -2.484240770339966
    3. '__' → logprob: -4.734240531921387
    4. '('__' → logprob: -4.984240531921387
    5. ''"' → logprob: -7.359240531921387
    6. ''s' → logprob: -7.484240531921387
    7. '("__' → logprob: -7.609240531921387
    8. '')' → logprob: -7.734240531921387
    9. '('' → logprob: -7.984240531921387
    10. '(' → logprob: -8.359240531921387

Token 52: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.050953686237335205
    2. 'name' → logprob: -3.0509536266326904
    3. 'fi' → logprob: -7.5509538650512695
    4. 'ma' → logprob: -7.6759538650512695
    5. 'nam' → logprob: -7.6759538650512695
    6. '__' → logprob: -8.55095386505127
    7. ''' → logprob: -9.30095386505127
    8. 'ni' → logprob: -9.92595386505127
    9. 'ne' → logprob: -10.05095386505127
    10. '_main' → logprob: -10.05095386505127

Token 53: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.376848902320489e-05
    2. '__':
' → logprob: -9.375093460083008
    3. '_' → logprob: -12.625093460083008
    4. '__))' → logprob: -12.875093460083008
    5. '"' → logprob: -13.875093460083008
    6. '__.' → logprob: -14.625093460083008
    7. '__('' → logprob: -14.750093460083008
    8. '___' → logprob: -15.125093460083008
    9. ''' → logprob: -15.500093460083008
    10. '__":
' → logprob: -15.625093460083008

Token 54: '')):
' (ID: 199796)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9894208312034607
    2. ''))' → logprob: -1.1144208908081055
    3. ''' → logprob: -1.8644208908081055
    4. '"' → logprob: -1.9894208908081055
    5. '''' → logprob: -5.4894208908081055
    6. '"))' → logprob: -6.8644208908081055
    7. '')):
' → logprob: -7.2394208908081055
    8. '')))' → logprob: -7.8644208908081055
    9. '__))' → logprob: -7.8644208908081055
    10. '__':
' → logprob: -8.114420890808105

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4193533957004547
    2. ':' → logprob: -1.5443533658981323
    3. '):' → logprob: -3.419353485107422
    4. '():' → logprob: -3.794353485107422
    5. '__' → logprob: -4.169353485107422
    6. ':
' → logprob: -4.794353485107422
    7. '()' → logprob: -4.919353485107422
    8. '():
' → logprob: -5.044353485107422
    9. '):
' → logprob: -5.044353485107422
    10. ')' → logprob: -5.544353485107422

Token 56: ' (' (ID: 350)
  Prédit: ' resolve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' resolve' → logprob: -0.05106833204627037
    2. 'resolve' → logprob: -3.0510683059692383
    3. ' solve' → logprob: -7.051068305969238
    4. '   ' → logprob: -7.051068305969238
    5. 'solve' → logprob: -8.551068305969238
    6. ' __' → logprob: -8.926068305969238
    7. '(resolve' → logprob: -9.051068305969238
    8. '	resolve' → logprob: -9.176068305969238
    9. ' ' → logprob: -10.176068305969238
    10. '    ' → logprob: -10.676068305969238

Token 57: 'lambda' (ID: 35280)
  Prédit: 'resolve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'resolve' → logprob: -0.012217764742672443
    2. ')' → logprob: -4.512217998504639
    3. '__' → logprob: -7.887217998504639
    4. 'solve' → logprob: -8.13721752166748
    5. ' resolve' → logprob: -8.51221752166748
    6. '   ' → logprob: -9.51221752166748
    7. 'sys' → logprob: -9.63721752166748
    8. '(resolve' → logprob: -10.51221752166748
    9. '	resolve' → logprob: -10.51221752166748
    10. ')__' → logprob: -10.63721752166748

Token 58: ' f' (ID: 285)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.9537374973297119
    2. ' :' → logprob: -1.453737497329712
    3. ' )' → logprob: -2.203737497329712
    4. ':' → logprob: -2.953737497329712
    5. '):' → logprob: -2.953737497329712
    6. ' resolve' → logprob: -3.078737497329712
    7. '():' → logprob: -3.203737497329712
    8. ' x' → logprob: -4.703737258911133
    9. ')' → logprob: -4.828737258911133
    10. ' sys' → logprob: -4.828737258911133

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1325545608997345
    2. ' :' → logprob: -2.632554531097412
    3. '(f' → logprob: -3.882554531097412
    4. ' f' → logprob: -4.007554531097412
    5. 'f' → logprob: -5.007554531097412
    6. '):' → logprob: -6.007554531097412
    7. ':f' → logprob: -6.382554531097412
    8. ' (' → logprob: -6.757554531097412
    9. '=f' → logprob: -7.882554531097412
    10. ')' → logprob: -8.13255500793457

Token 60: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26036450266838074
    2. ' f' → logprob: -1.5103645324707031
    3. '   ' → logprob: -5.510364532470703
    4. 'print' → logprob: -6.885364532470703
    5. 'sys' → logprob: -7.135364532470703
    6. ' sys' → logprob: -7.385364532470703
    7. ' ' → logprob: -8.010364532470703
    8. '    ' → logprob: -8.135364532470703
    9. ' None' → logprob: -8.510364532470703
    10. '  ' → logprob: -8.885364532470703

Token 61: '())' (ID: 3516)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.9886779189109802
    2. ')(' → logprob: -1.238677978515625
    3. '(resolve' → logprob: -1.363677978515625
    4. ')' → logprob: -3.738677978515625
    5. '(' → logprob: -4.113677978515625
    6. '(sys' → logprob: -4.238677978515625
    7. ')(__' → logprob: -4.738677978515625
    8. '())' → logprob: -5.363677978515625
    9. '(lambda' → logprob: -5.863677978515625
    10. ')((' → logprob: -5.863677978515625

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04030487313866615
    2. ' (' → logprob: -4.415304660797119
    3. ' ' → logprob: -4.790304660797119
    4. ')' → logprob: -5.040304660797119
    5. '(
' → logprob: -5.165304660797119
    6. ' )' → logprob: -6.415304660797119
    7. '<|end|>' → logprob: -7.165304660797119
    8. '('' → logprob: -7.290304660797119
    9. '[' → logprob: -7.415304660797119
    10. '  ' → logprob: -7.415304660797119

Token 63: 'resolve' (ID: 31567)
  Prédit: 'resolve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' → logprob: -4.2987729102605954e-05
    2. ' resolve' → logprob: -10.250042915344238
    3. 'solve' → logprob: -12.125042915344238
    4. 'lambda' → logprob: -13.500042915344238
    5. '(resolve' → logprob: -14.875042915344238
    6. '  ' → logprob: -15.750042915344238
    7. '   ' → logprob: -15.750042915344238
    8. '	resolve' → logprob: -16.125043869018555
    9. ' ' → logprob: -16.750043869018555
    10. '__' → logprob: -16.875043869018555

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011334281880408525
    2. '))' → logprob: -7.501133441925049
    3. '())' → logprob: -7.626133441925049
    4. '()' → logprob: -9.75113296508789
    5. ')
' → logprob: -11.25113296508789
    6. ' )' → logprob: -12.00113296508789
    7. ')))' → logprob: -12.12613296508789
    8. ')`' → logprob: -12.37613296508789
    9. '`)' → logprob: -13.62613296508789
    10. '(' → logprob: -13.62613296508789


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 35.48%
Précision adaptée (1ère position): 35.48%
Précision (top 10): 61.29%
================================================================================
